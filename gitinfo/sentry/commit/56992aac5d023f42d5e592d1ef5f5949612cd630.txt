commit 56992aac5d023f42d5e592d1ef5f5949612cd630
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Oct 25 00:15:27 2013 -0700

    Allow additional tags in event stream
    
    This adjusts the stream annotations to support any number of choices for tag value counts. It also adjusts the default value to show users (which is a slight change, as it means everyone will get users if the tag is present).

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 485fd174c0..750c66d6d2 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -225,3 +225,11 @@ LANGUAGES = [(k, LANGUAGE_MAP[k]) for k in get_all_languages() if k in LANGUAGE_
 
 # Timeout (in seconds) for fetching remote source files (e.g. JS)
 SOURCE_FETCH_TIMEOUT = 5
+
+# TODO(dcramer): We eventually want to make this user-editable
+TAG_LABELS = {
+    'sentry:user': _('User'),
+    'os': _('OS'),
+    'url': _('URL'),
+    'server_name': _('Server'),
+}
diff --git a/src/sentry/static/sentry/less/sentry.less b/src/sentry/static/sentry/less/sentry.less
index 632255bdac..2b542ec2a9 100644
--- a/src/sentry/static/sentry/less/sentry.less
+++ b/src/sentry/static/sentry/less/sentry.less
@@ -1016,15 +1016,17 @@ a.icon-share {
       }
     }
 
-    .tag {
+    .tag,
+    .annotation {
       margin-left: 10px;
     }
-    .tag-users {
+    .tag-users,
+    .annotation {
       margin-right: 10px;
       margin-left: 0;
       position: relative;
       background: #f9f9f9;
-      padding: 0 5px 0 45px;
+      padding: 0 5px;
       line-height: 20px;
       height: 20px;
       min-width: 20px;
@@ -1038,7 +1040,6 @@ a.icon-share {
         position: absolute;
         top: 0;
         bottom: 0;
-        left: 45px;
         right: 5px;
         height: 100%;
         text-align: center;
@@ -1047,9 +1048,8 @@ a.icon-share {
       }
 
       i {
+        padding-right: 25px;
         font-style: normal;
-        position: absolute;
-        left: 5px;
         color: #aaa;
       }
     }
diff --git a/src/sentry/static/sentry/scripts/global.min.js b/src/sentry/static/sentry/scripts/global.min.js
index 8d37f796b6..1fc87e6e91 100644
--- a/src/sentry/static/sentry/scripts/global.min.js
+++ b/src/sentry/static/sentry/scripts/global.min.js
@@ -1,2 +1,2 @@
-app=window.app={config:{},templates:{},utils:{}};(function(app,Backbone){"use strict";app.models={};app.models.Group=Backbone.Model.extend({defaults:{count:0,version:0,usersSeen:null,tags:[],versions:[],hasSeen:false,isBookmarked:false,historicalData:[]}})})(app,Backbone);(function(app){"use strict";app.templates={group:""+'<div class="count" data-count="<%= app.utils.formatNumber(count) %>">'+'<span title="<%= count %>"><%= app.utils.formatNumber(count) %></span>'+"</div>"+'<div class="details">'+'<h3><a href="<%= permalink %>"><%= title %></a></h3>'+'<p class="message">'+"<%= message %>"+"</p>"+'<div class="meta">'+"<% if (usersSeen !== null) { %>"+'<span class="tag tag-users" data-count="<%= app.utils.formatNumber(usersSeen) %>">'+"<i>users</i>"+'<span title="<%= usersSeen %>"><%= app.utils.formatNumber(usersSeen) %></span>'+"</span>"+"<% } %>"+'<span class="last-seen pretty-date"></span>'+"<% if (timeSpent) { %>"+'<span class="tag time-spent"><%= Math.round(timeSpent) %>ms</span>'+"<% } %>"+'<span class="tag tag-project">'+'<a href="<%= projectUrl %>"><%= project.name %></a>'+"</span>"+'<span class="tag tag-logger">'+'<a href="<%= loggerUrl %>"><%= logger %></a>'+"</span>"+"<% _.each(versions, function(version){ %> "+'<span class="tag tag-version"><%= version %></span>'+"<% }) %>"+"<% _.each(tags, function(tag){ %> "+'<span class="tag"><%= tag %></span>'+"<% }) %>"+"</div>"+'<span class="sparkline"></span>'+'<ul class="actions">'+"<% if (canResolve) { %>"+"<li>"+'<a href="#" data-action="resolve">'+'<i aria-hidden="true" class="icon-checkmark"></i>'+"</a>"+"</li>"+"<li>"+'<a href="#" data-action="bookmark" class="bookmark" title="Bookmark">'+'<i aria-hidden="true" class="icon-star"></i>'+"</a>"+"</li>"+"<% } %>"+"</ul>"+"</div>"}})(app);(function(app,jQuery,_,moment){"use strict";var $=jQuery;var number_formats=[[1e9,"b"],[1e6,"m"],[1e3,"k"]];app.utils={getQueryParams:function(){var vars={},href=window.location.href,hashes,hash;if(href.indexOf("?")==-1)return vars;hashes=href.slice(href.indexOf("?")+1,href.indexOf("#")!=-1?href.indexOf("#"):href.length).split("&");$.each(hashes,function(_,chunk){hash=chunk.split("=");if(!hash[0]&&!hash[1])return;vars[hash[0]]=hash[1]?decodeURIComponent(hash[1]).replace(/\+/," "):""});return vars},floatFormat:function(number,places){var multi=Math.pow(10,places);return parseInt(number*multi,10)/multi},formatNumber:function(number){var b,x,y,o,p;number=parseInt(number,10);for(var i=0;b=number_formats[i];i++){x=b[0];y=b[1];o=Math.floor(number/x);p=number%x;if(o>0){if(o/10>1||!p)return""+o+y;return""+this.floatFormat(number/x,1)+y}}return""+number},slugify:function(str){str=str.replace(/^\s+|\s+$/g,"");str=str.toLowerCase();var from="àáäâèéëêìíïîòóöôùúüûñç·/_,:;";var to="aaaaeeeeiiiioooouuuunc------";for(var i=0,l=from.length;i<l;i++){str=str.replace(new RegExp(from.charAt(i),"g"),to.charAt(i))}str=str.replace(/[^a-z0-9\s\-]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-");return str},varToggle:function(link,$elm){var $link=$(link);if(!$link.attr("data-expand-label"))$link.attr("data-expand-label",$link.html());$elm.toggle();if($elm.is(":visible"))$link.html($link.attr("data-collapse-label"));else $link.html($link.attr("data-expand-label"))},getSearchUsersUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/users/search/"},getSearchProjectsUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/projects/search/"},getSearchTagsUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/tags/search/"},makeSearchableInput:function(el,url,callback){$(el).select2({allowClear:true,width:"element",initSelection:function(el,callback){var $el=$(el);callback({id:$el.val(),text:$el.val()})},ajax:{url:url,dataType:"json",data:function(term,page){return{query:term,limit:10}},results:function(data,page){var results=callback(data);return{results:callback(data)}}}})},escape:function(str){return str.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")},makeSearchableUsersInput:function(el){this.makeSearchableInput(el,this.getSearchUsersUrl(),_.bind(function(data){var results=[];$(data.results).each(_.bind(function(_,val){var label;if(val.first_name){label=this.escape(val.first_name)+" &mdash; "+this.escape(val.username)}else{label=this.escape(val.username)}label+="<br>"+this.escape(val.email);results.push({id:val.username,text:label})},this));if($(results).filter(function(){return this.id.localeCompare(data.query)===0}).length===0){results.push({id:this.escape(data.query),text:this.escape(data.query)})}return results},this))},makeSearchableProjectsInput:function(el){this.makeSearchableInput(el,this.getSearchProjectsUrl(),function(data){var results=[];$(data.results).each(function(_,val){results.push({id:val.slug,text:val.name+"<br>"+val.slug})});return results})},makeSearchableTagsInput:function(el,options){var $el=$(el);$el.select2({multiple:true,tokenSeperators:[","],minimumInputLength:3,allowClear:true,width:"element",initSelection:function(el,callback){var $el=$(el);var values=$el.val().split(",");var results=[];$.each(values,function(_,val){results.push({id:val,text:val})});callback(results)},ajax:{url:this.getSearchTagsUrl(),dataType:"json",data:function(term,page){return{query:term,quietMillis:300,name:$el.data("tag"),limit:10}},results:function(data,page){var results=[];$(data.results).each(function(_,val){results.push({id:val,text:val})});if($(results).filter(function(){return this.id.localeCompare(data.query)===0}).length===0){results.push({id:data.query,text:data.query})}return{results:results}}}})}};$(function(){$(".body select").each(function(){var $this=$(this),options={width:"element",allowClear:false};if($this.attr("data-allowClear")){options.allowClear=$this.attr("data-allowClear")}$this.select2(options)});setInterval(function(){$(".pretty-date").each(function(_,el){var $el=$(el);var dt=$el.data("datetime");if(dt){var date=moment(dt);if(date){$el.text(date.fromNow());$el.attr("title",date.format("llll"))}}})},5e3)});$.fn.select2.defaults.escapeMarkup=function(s){return s}})(app,jQuery,_,moment);(function(app,Backbone){"use strict";app.ScoredList=Backbone.Collection.extend({comparator:function(member){return-member.get("score")}})})(app,Backbone);(function(app,Backbone,jQuery,moment){"use strict";var $=jQuery;app.charts={render:function(el,options){var $el=$("#chart");var url=$el.attr("data-api-url");var title=$(el).attr("data-title");var $spark=$el.find(".sparkline");$spark.height($el.height());$.ajax({url:$el.attr("data-api-url"),type:"get",dataType:"json",data:{days:$el.attr("data-days")||7,gid:$el.attr("data-group")||undefined},success:function(resp){var data=[],maxval=10;$spark.empty();$.each(resp,function(_,val){var date=new Date(val[0]);data.push({y:val[1],label:moment(date).fromNow()});if(val[1]>maxval){maxval=val[1]}});app.charts.createSparkline($spark,data,options)}})},createSparkline:function(el,points,options){var $el=$(el),existing=$el.children(),maxval=10,title,point,pct,child,point_width;if(options===undefined){options={}}for(var i=0;i<points.length;i++){point=points[i];if(typeof point==="number"){point=points[i]={y:point}}if(point.y>maxval){maxval=point.y}}point_width=app.utils.floatFormat(100/points.length,2)+"%";for(i=0;i<points.length;i++){point=points[i];pct=app.utils.floatFormat(point.y/maxval*99,2)+"%";title=point.y+" events";if(point.label){title=title+"<br>("+point.label+")"}if(existing.get(i)===undefined){$('<a style="width:'+point_width+';" rel="tooltip" title="'+title+'"><span style="height:'+pct+'">'+point.y+"</span></a>").tooltip({placement:options.placement||"bottom",html:true,container:"body"}).appendTo($el)}else{$(existing[i]).find("span").css("height",pct).text(point.y).attr("title",point.label||point.y)}}}}})(app,Backbone,jQuery,moment);(function(window,app,Backbone,jQuery,_,moment){"use strict";var $=jQuery;app.GroupView=Backbone.View.extend({tagName:"li",className:"group",template:_.template(app.templates.group),initialize:function(){Backbone.View.prototype.initialize.apply(this,arguments);_.bindAll(this,"updateCount","updateUsersSeen","updateLastSeen","updateResolved","updateHasSeen","renderSparkline","updateBookmarked","render");this.model.on({"change:count":this.updateCount,"change:usersSeen":this.updateUsersSeen,"change:lastSeen":this.updateLastSeen,"change:isBookmarked":this.updateBookmarked,"change:isResolved":this.updateResolved,"change:hasSeen":this.updateHasSeen,"change:historicalData":this.renderSparkline},this)},render:function(){var data=this.model.toJSON();data.projectUrl=app.config.urlPrefix+"/"+app.config.teamId+"/"+data.project.slug+"/";data.loggerUrl=data.projectUrl+"?logger="+data.logger;this.$el.html(this.template(data));this.$el.attr("data-id",this.model.id);this.$el.addClass(this.getLevelClassName());this.$el.find("a[data-action=resolve]").click(_.bind(function(e){e.preventDefault();if(this.model.get("isResolved")){this.unresolve()}else{this.resolve()}},this));this.$el.find("a[data-action=bookmark]").click(_.bind(function(e){e.preventDefault();this.bookmark()},this));this.updateLastSeen();this.renderSparkline();this.updateResolved();this.updateHasSeen();this.updateBookmarked()},updateBookmarked:function(){if(this.model.get("isBookmarked")){this.$el.find("a[data-action=bookmark]").addClass("checked")}else{this.$el.find("a[data-action=bookmark]").removeClass("checked")}},updateResolved:function(){if(this.model.get("isResolved")){this.$el.addClass("resolved")}else{this.$el.removeClass("resolved")}},updateHasSeen:function(){if(this.model.get("hasSeen")){this.$el.addClass("seen")}else{this.$el.removeClass("seen")}},renderSparkline:function(obj){var data=this.model.get("historicalData");if(!data||!data.length)return;this.$el.addClass("with-sparkline");app.charts.createSparkline(this.$el.find(".sparkline"),data)},resolve:function(){$.ajax({url:this.getResolveUrl(),type:"post",dataType:"json",success:_.bind(function(response){this.model.set("version",response.version);this.model.set("isResolved",true)},this)})},unresolve:function(){$.ajax({url:this.getUnresolveUrl(),type:"post",dataType:"json",success:_.bind(function(response){this.model.set("version",response.version);this.model.set("isResolved",false)},this)})},getResolveUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/group/"+this.model.get("id")+"/set/resolved/"},getUnresolveUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/group/"+this.model.get("id")+"/set/unresolved/"},getBookmarkUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/bookmark/"},bookmark:function(){$.ajax({url:this.getBookmarkUrl(),type:"post",dataType:"json",data:{gid:this.model.get("id")},success:_.bind(function(response){this.model.set("version",response.version);this.model.set("isBookmarked",response.isBookmarked)},this)})},getLevelClassName:function(){return"level-"+this.model.get("levelName")},updateLastSeen:function(){var dt=moment(this.model.get("lastSeen"));this.$el.find(".last-seen").text(dt.fromNow()).data("datetime",this.model.get("lastSeen")).attr("title",dt.format("llll"))},updateCount:function(){var new_count=app.utils.formatNumber(this.model.get("count"));var counter=this.$el.find(".count");var digit=counter.find("span");if(digit.is(":animated"))return false;if(counter.data("count")==new_count){return false}counter.data("count",new_count);var replacement=$("<span></span>",{css:{top:"-2.1em",opacity:0},text:new_count});digit.before(replacement).animate({top:"2.5em",opacity:0},"fast",function(){digit.remove()});replacement.delay(100).animate({top:0,opacity:1},"fast")},updateUsersSeen:function(){var value=this.model.get("usersSeen");if(value===null)return;var new_count=app.utils.formatNumber(value);var counter=this.$el.find(".tag-users");var digit=counter.find("span");if(digit.is(":animated"))return false;if(counter.data("count")==new_count){return false}counter.data("count",new_count);var replacement=$("<span></span>",{css:{top:"-2.1em",opacity:0},text:new_count});digit.before(replacement).animate({top:"2.5em",opacity:0},"fast",function(){digit.remove()});replacement.delay(100).animate({top:0,opacity:1},"fast")}});app.OrderedElementsView=Backbone.View.extend({emptyMessage:'<div class="empty-message"><h2>No events to show.</h2><p>We\'ll notify you if that changes. In the meantime why not take a moment to become more familiar with Sentry.</p><p class="links"><a href="docs/">Installation instructions</a> <a href="settings/">Project settings</a></p></div>',loadingMessage:"<p>Loading...</p>",model:app.models.Group,defaults:{maxItems:50,view:Backbone.View},initialize:function(data){if(_.isUndefined(data))data={};var members=data.members;Backbone.View.prototype.initialize.apply(this,arguments);this.options=$.extend({},this.defaults,this.options,data);this.$wrapper=$("#"+this.id);this.$parent=$("<ul></ul>");this.$empty=$('<li class="empty"></li>');this.$wrapper.html(this.$parent);if(this.options.className)this.$parent.addClass(this.options.className);_.bindAll(this,"renderMemberInContainer","unrenderMember","reSortMembers");this.collection=new app.ScoredList([],{model:data.model});this.collection.on("add",this.renderMemberInContainer,this);this.collection.on("remove",this.unrenderMember,this);this.collection.on("reset",this.reSortMembers,this);delete data.members;this.reset(members)},reset:function(members){this.$parent.empty();this.setEmpty();if(members===undefined){this.$empty.html(this.loadingMessage);this.collection.reset();this.setEmpty();this.loaded=false}else{this.$empty.html(this.emptyMessage);this.collection.reset(members);this.loaded=true}},setEmpty:function(){this.$parent.html(this.$empty)},extend:function(data){for(var i=0;i<data.length;i++){this.addMember(data[i])}},addMember:function(member){if(!this.hasMember(member)){if(this.collection.length>=this.options.maxItems){if(member.score<this.collection.last().get("score"))return;while(this.collection.length>=this.options.maxItems)this.collection.pop()}}this.collection.add(member,{merge:true})},reSortMembers:function(){this.collection.each(_.bind(function(member){this.renderMemberInContainer(member)},this))},updateMember:function(member,options){if(_.isUndefined(options))options={};var existing=this.collection.get(member.id);if(existing.get("version")>member.get("version"))return;this.collection.add(member,{merge:true,sort:options.sort!==false?true:false})},hasMember:function(member){return this.collection.get(member.id)?true:false},removeMember:function(member){this.collection.remove(member)},renderMemberInContainer:function(member){var new_pos=this.collection.indexOf(member),$el,$rel;this.$parent.find("li.empty").remove();$el=$("#"+this.id+member.id);if(!$el.length){$el=this.renderMember(member)}else if($el.index()===new_pos){return}if(new_pos===0){this.$parent.prepend($el)}else{$rel=$("#"+this.id+this.collection.at(new_pos).id);if(!$rel.length){this.$parent.append($el)}else if($el.id!==$rel.id){$el.insertBefore($rel)}else{return}}if(this.loaded)$el.css("background-color","#eee").animate({backgroundColor:"#fff"},300)},renderMember:function(member){var view=new this.options.view({model:member,id:this.id+member.id});view.render();return view.$el},unrenderMember:function(member){this.$parent.find("#"+this.id+member.id).remove();if(!this.$parent.find("li").length)this.setEmpty()}});app.GroupListView=app.OrderedElementsView.extend({defaults:{realtime:false,stream:false,pollUrl:null,pollTime:1e3,tickTime:100},initialize:function(data){if(_.isUndefined(data))data={};data.model=app.models.Group;data.view=app.GroupView;app.OrderedElementsView.prototype.initialize.call(this,data);this.options=$.extend({},this.defaults,this.options,data);this.queue=new app.ScoredList([],{model:data.model});this.cursor=null;_.bindAll(this,"poll","pollSuccess","pollFailure","tick");this.poll();window.setInterval(this.tick,this.options.tickTime)},tick:function(){if(!this.queue.length)return;var item=this.queue.pop();if(this.options.canStream){this.addMember(item)}else if(this.hasMember(item)){this.updateMember(item,{sort:false})}},pollSuccess:function(groups){if(!groups.length)return window.setTimeout(this.poll,this.options.pollTime*5);this.cursor=groups[groups.length-1].score;this.queue.add(groups,{merge:true});window.setTimeout(this.poll,this.options.pollTime)},pollFailure:function(jqXHR,textStatus,errorThrown){window.setTimeout(this.poll,this.options.pollTime*10)},poll:function(){var data;if(!this.options.realtime||!this.options.pollUrl)return window.setTimeout(this.poll,this.options.pollTime);data=app.utils.getQueryParams();data.cursor=this.cursor||undefined;$.ajax({url:this.options.pollUrl,type:"GET",dataType:"json",data:data,success:this.pollSuccess,error:this.pollFailure})}})})(window,app,Backbone,jQuery,_,moment);(function(window,app,Backbone,jQuery,_){"use strict";var $=jQuery;var BasePage=Backbone.View.extend({defaults:{canStream:false,realtime:false},initialize:function(data){Backbone.View.prototype.initialize.apply(this,arguments);if(_.isUndefined(data))data={};this.options=$.extend({},this.defaults,this.options,data);this.views={};this.initializeAjaxTabs()},initializeAjaxTabs:function(){$("a[data-toggle=ajtab]").click(_.bind(function(e){var $tab=$(e.target),uri=$tab.attr("data-uri"),view_id=$tab.attr("href").substr(1),view=this.getView(view_id,uri),$cont,$parent;e.preventDefault();if(!uri)return view.reset();$cont=$("#"+view_id);$parent=$cont.parent();$parent.css("opacity",.6);$.ajax({url:uri,dataType:"json",success:function(data){view.reset(data);$parent.css("opacity",1);$tab.tab("show")},error:function(){$cont.html("<p>There was an error fetching data from the server.</p>")}})},this));$("li.active a[data-toggle=ajtab]").click()},makeDefaultView:function(id){return new app.GroupListView({className:"group-list small",id:id,maxItems:5,stream:this.options.stream,realtime:this.options.realtime,model:app.models.Group})},getView:function(id,uri){if(!this.views[id])this.views[id]=this.makeDefaultView(id);var view=this.views[id];view.options.pollUrl=uri;return view}});app.StreamPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.apply(this,arguments);this.group_list=new app.GroupListView({className:"group-list",id:"event_list",members:data.groups,maxItems:50,realtime:$.cookie("pausestream")?false:true,canStream:this.options.canStream,pollUrl:app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/poll/",model:app.models.Group});this.control=$("a[data-action=pause]");this.updateStreamOptions();this.initFilters();this.control.click(_.bind(function(e){e.preventDefault();this.options.realtime=this.group_list.options.realtime=this.control.hasClass("realtime-pause");this.updateStreamOptions()},this));$("#chart").height("50px");app.charts.render("#chart",{placement:"left"})},initFilters:function(){$(".filter").each(_.bind(function(_,el){var $filter=$(el);var $input=$filter.find("input[type=text]");if($input.length>0){$input.select2({initSelection:function(el,callback){var $el=$(el);callback({id:$el.val(),text:$el.val()})},allowClear:true,minimumInputLength:3,ajax:{url:app.utils.getSearchTagsUrl(),dataType:"json",data:function(term,page){return{query:term,quietMillis:300,name:$input.attr("name"),limit:10}},results:function(data,page){var results=[];$(data.results).each(function(_,val){results.push({id:app.utils.escape(val),text:app.utils.escape(val)})});return{results:results}}}})}else{$input=$filter.find("select").select2({allowClear:true})}if($input.length>0){$input.on("change",function(e){var query=app.utils.getQueryParams();query[e.target.name]=e.val;window.location.href="?"+$.param(query)})}},this))},updateStreamOptions:function(){if(this.options.realtime){$.removeCookie("pausestream");this.control.removeClass("realtime-pause");this.control.addClass("realtime-play");this.control.html(this.control.attr("data-pause-label"))}else{$.cookie("pausestream","1",{expires:7});this.control.addClass("realtime-pause");this.control.removeClass("realtime-play");this.control.html(this.control.attr("data-play-label"))}}});app.DashboardPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.apply(this,arguments);$("#chart").height("150px");Sentry.charts.render("#chart")}});app.SelectTeamPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);this.refreshSparklines();$(window).on("resize",this.refreshSparklines)},refreshSparklines:function(){$(".chart").each(function(n,el){var $el=$(el);$.ajax({url:$el.attr("data-api-url"),type:"get",dataType:"json",data:{days:1},success:_.bind(function(data){$.plot($el,[{data:data,color:"#ebeff3",shadowSize:0,lines:{lineWidth:2,show:true,fill:true,color:"#f6f8fa"}}],{yaxis:{min:0},grid:{show:false},hoverable:false,legend:{noColumns:5},lines:{show:false}})},this)})})}});app.GroupDetailsPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.apply(this,arguments);this.group_list=new app.GroupListView({className:"group-list",id:"event_list",members:[data.group],model:app.models.Group});$("#chart").height("150px");Sentry.charts.render("#chart");$("#public-status .action").click(function(){var $this=$(this);$.ajax({url:$this.attr("data-api-url"),type:"post",success:function(group){var selector=group.isPublic?"true":"false";var nselector=group.isPublic?"false":"true";$('#public-status span[data-public="'+selector+'"]').show();$('#public-status span[data-public="'+nselector+'"]').hide()},error:function(){window.alert("There was an error changing the public status")}})});$(".add-note-btn").click(function(e){var $el=$(this);e.preventDefault();if($el.hasClass("selected")){$el.removeClass("selected");$(".add-note-form",$el.parent()).addClass("hide")}else{$el.addClass("selected");$(".add-note-form",$el.parent()).removeClass("hide")}});var $event_nav=$("#event_nav");if($event_nav.length>0){var $window=$(window);var $nav_links=$event_nav.find("a[href*=#]");var $nav_targets=[];var scroll_offset=$event_nav.offset().top;var event_nav_height;var last_target;$window.resize(function(){event_nav_height=$event_nav.find(".nav").outerHeight();$event_nav.height(event_nav_height+"px")}).resize();$nav_links.click(function(e){var $el=$(this);var target=$(this.hash);$el.parent().addClass("active").siblings().removeClass("active");$("html,body").animate({scrollTop:target.position().top+event_nav_height},"fast");if(history.pushState){history.pushState({},"",this.hash)}e.preventDefault()}).each(function(){if(this.hash.length>1&&$(this.hash).length){$nav_targets.push(this.hash)}});var resizeTimer;$window.scroll(function(){clearTimeout(resizeTimer);resizeTimer=setTimeout(function(){if($window.scrollTop()>scroll_offset){if(!$event_nav.hasClass("fixed")){$event_nav.addClass("fixed")}}else if($event_nav.hasClass("fixed")){$event_nav.removeClass("fixed")}if($nav_targets.length){var from_top=$window.scrollTop()+event_nav_height+20;var cur=$.map($nav_targets,function(hash){if($(hash).offset().top<from_top){return hash}});var target=cur?cur[cur.length-1]:null;if(!target){target=$nav_targets[0]}if(last_target!==target){last_target=target;$nav_links.parent().removeClass("active").end().filter("[href="+target+"]").parent().addClass("active")}}},1)}).scroll()}}});app.WallPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,{realtime:true,pollTime:3e3});this.sparkline=$(".chart");this.sparkline.height(this.sparkline.parent().height());this.stats=$("#stats");_.bindAll(this,"refreshStats");this.refreshSparkline();this.refreshStats()},makeDefaultView:function(id){return new app.GroupListView({className:"group-list",id:id,maxItems:5,stream:this.options.stream,realtime:this.options.realtime,model:app.models.Group})},refreshSparkline:function(){$.ajax({url:this.sparkline.attr("data-api-url"),type:"get",dataType:"json",data:{days:1,gid:this.sparkline.attr("data-group")||undefined},success:_.bind(function(data){$.plot(this.sparkline,[{data:data,color:"#52566c",shadowSize:0,lines:{lineWidth:2,show:true,fill:true,fillColor:"#232428"}}],{yaxis:{min:0},grid:{show:false},hoverable:false,legend:{noColumns:5},lines:{show:false}})},this)})},refreshStats:function(){$.ajax({url:this.stats.attr("data-uri"),dataType:"json",success:_.bind(function(data){this.stats.find("[data-stat]").each(function(){var $this=$(this);var new_count=data[$this.attr("data-stat")];var counter=$this.find("big");var digit=counter.find("span");if(digit.is(":animated"))return false;if(counter.data("count")==new_count){return false}counter.data("count",new_count);var replacement=$("<span></span>",{css:{top:"-2.1em",opacity:0},text:new_count});digit.before(replacement).animate({top:"2.5em",opacity:0},"fast",function(){digit.remove()});replacement.delay(100).animate({top:0,opacity:1},"fast")});window.setTimeout(this.refreshStats,1e3)},this)})}});app.AddTeamMemberPage=BasePage.extend({});app.AccessGroupMembersPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);app.utils.makeSearchableUsersInput("form input[name=user]")}});app.AccessGroupProjectsPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);app.utils.makeSearchableProjectsInput("form input[name=project]")}});app.TeamDetailsPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);app.utils.makeSearchableUsersInput("form input[name=owner]")}});app.ProjectDetailsPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);app.utils.makeSearchableUsersInput("form input[name=owner]");$("input[type=range]").each(_.bind(function loop(n,el){var $el=$(el),min=parseInt($el.attr("min"),10),max=parseInt($el.attr("max"),10),step=parseInt($el.attr("step"),10),values=[],$value=$('<span class="value"></span>');var i=min;while(i<=max){values.push(i);if(i<12){i+=1}else if(i<24){i+=3}else if(i<36){i+=6}else if(i<48){i+=12}else{i+=24}}$el.on("slider:ready",_.bind(function sliderready(event,data){$value.appendTo(data.el);$value.html(this.formatHours(data.value))},this)).on("slider:changed",_.bind(function sliderchanged(event,data){$value.html(this.formatHours(data.value))},this)).simpleSlider({range:[min,max],step:step,allowedValues:values,snap:true})},this))},formatHours:function formatHours(val){val=parseInt(val,10);if(val===0){return"Disabled"}else if(val>23&&val%24===0){val=val/24;return val+" day"+(val!=1?"s":"")}return val+" hour"+(val!=1?"s":"")}});app.ProjectNotificationsPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);$("input[type=range]").each(_.bind(function loop(n,el){var $el=$(el),min=parseInt($el.attr("min"),10),max=parseInt($el.attr("max"),10),step=parseInt($el.attr("step"),10),$value=$('<span class="value"></span>');$el.on("slider:ready",_.bind(function sliderready(event,data){$value.appendTo(data.el);$value.html(this.formatThreshold(data.value))},this)).on("slider:changed",_.bind(function sliderchanged(event,data){$value.html(this.formatThreshold(data.value))},this)).simpleSlider({range:[min,max],step:step,snap:true})},this));$("#tag_list input").each(function(_,el){$(el).addClass("span6");app.utils.makeSearchableTagsInput(el)})},formatThreshold:function formatThreshold(value){if(!value){return"Disabled"}return value+"%"}});app.NewProjectPage=BasePage.extend({initialize:function(data){this.el=$(data.el);BasePage.prototype.initialize.apply(this,arguments);if(this.options.canSelectTeam&&this.options.canCreateTeam){$("#new_team").hide();$('a[rel="create-new-team"]').click(function(){$("#new_team").show();$("#select_team").hide()});$('a[rel="select-team"]').click(function(){$("#new_team").hide();$("#select_team").show()})}}});Backbone.sync=function(method,model,success,error){success()}})(window,app,Backbone,jQuery,_);
+app=window.app={config:{},templates:{},utils:{}};(function(app,Backbone){"use strict";app.models={};app.models.Group=Backbone.Model.extend({defaults:{count:0,version:0,annotations:[],tags:[],versions:[],hasSeen:false,isBookmarked:false,historicalData:[]}})})(app,Backbone);(function(app){"use strict";app.templates={group:""+'<div class="count" data-count="<%= app.utils.formatNumber(count) %>">'+'<span title="<%= count %>"><%= app.utils.formatNumber(count) %></span>'+"</div>"+'<div class="details">'+'<h3><a href="<%= permalink %>"><%= title %></a></h3>'+'<p class="message">'+"<%= message %>"+"</p>"+'<div class="meta">'+"<% $.each(annotations, function(_, tag) { %>"+'<span class="tag annotation" data-tag="<%= tag.label %>" data-count="<%= app.utils.formatNumber(tag.count) %>">'+"<i><%= tag.label %></i>"+'<span title="<%= count %>"><%= app.utils.formatNumber(tag.count) %></span>'+"</span>"+"<% }) %>"+'<span class="last-seen pretty-date"></span>'+"<% if (timeSpent) { %>"+'<span class="tag time-spent"><%= Math.round(timeSpent) %>ms</span>'+"<% } %>"+'<span class="tag tag-project">'+'<a href="<%= projectUrl %>"><%= project.name %></a>'+"</span>"+'<span class="tag tag-logger">'+'<a href="<%= loggerUrl %>"><%= logger %></a>'+"</span>"+"<% _.each(versions, function(version){ %> "+'<span class="tag tag-version"><%= version %></span>'+"<% }) %>"+"<% _.each(tags, function(tag){ %> "+'<span class="tag"><%= tag %></span>'+"<% }) %>"+"</div>"+'<span class="sparkline"></span>'+'<ul class="actions">'+"<% if (canResolve) { %>"+"<li>"+'<a href="#" data-action="resolve">'+'<i aria-hidden="true" class="icon-checkmark"></i>'+"</a>"+"</li>"+"<li>"+'<a href="#" data-action="bookmark" class="bookmark" title="Bookmark">'+'<i aria-hidden="true" class="icon-star"></i>'+"</a>"+"</li>"+"<% } %>"+"</ul>"+"</div>"}})(app);(function(app,jQuery,_,moment){"use strict";var $=jQuery;var number_formats=[[1e9,"b"],[1e6,"m"],[1e3,"k"]];app.utils={getQueryParams:function(){var vars={},href=window.location.href,hashes,hash;if(href.indexOf("?")==-1)return vars;hashes=href.slice(href.indexOf("?")+1,href.indexOf("#")!=-1?href.indexOf("#"):href.length).split("&");$.each(hashes,function(_,chunk){hash=chunk.split("=");if(!hash[0]&&!hash[1])return;vars[hash[0]]=hash[1]?decodeURIComponent(hash[1]).replace(/\+/," "):""});return vars},floatFormat:function(number,places){var multi=Math.pow(10,places);return parseInt(number*multi,10)/multi},formatNumber:function(number){var b,x,y,o,p;number=parseInt(number,10);for(var i=0;b=number_formats[i];i++){x=b[0];y=b[1];o=Math.floor(number/x);p=number%x;if(o>0){if(o/10>1||!p)return""+o+y;return""+this.floatFormat(number/x,1)+y}}return""+number},slugify:function(str){str=str.replace(/^\s+|\s+$/g,"");str=str.toLowerCase();var from="àáäâèéëêìíïîòóöôùúüûñç·/_,:;";var to="aaaaeeeeiiiioooouuuunc------";for(var i=0,l=from.length;i<l;i++){str=str.replace(new RegExp(from.charAt(i),"g"),to.charAt(i))}str=str.replace(/[^a-z0-9\s\-]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-");return str},varToggle:function(link,$elm){var $link=$(link);if(!$link.attr("data-expand-label"))$link.attr("data-expand-label",$link.html());$elm.toggle();if($elm.is(":visible"))$link.html($link.attr("data-collapse-label"));else $link.html($link.attr("data-expand-label"))},getSearchUsersUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/users/search/"},getSearchProjectsUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/projects/search/"},getSearchTagsUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/tags/search/"},makeSearchableInput:function(el,url,callback){$(el).select2({allowClear:true,width:"element",initSelection:function(el,callback){var $el=$(el);callback({id:$el.val(),text:$el.val()})},ajax:{url:url,dataType:"json",data:function(term,page){return{query:term,limit:10}},results:function(data,page){var results=callback(data);return{results:callback(data)}}}})},escape:function(str){return str.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")},makeSearchableUsersInput:function(el){this.makeSearchableInput(el,this.getSearchUsersUrl(),_.bind(function(data){var results=[];$(data.results).each(_.bind(function(_,val){var label;if(val.first_name){label=this.escape(val.first_name)+" &mdash; "+this.escape(val.username)}else{label=this.escape(val.username)}label+="<br>"+this.escape(val.email);results.push({id:val.username,text:label})},this));if($(results).filter(function(){return this.id.localeCompare(data.query)===0}).length===0){results.push({id:this.escape(data.query),text:this.escape(data.query)})}return results},this))},makeSearchableProjectsInput:function(el){this.makeSearchableInput(el,this.getSearchProjectsUrl(),function(data){var results=[];$(data.results).each(function(_,val){results.push({id:val.slug,text:val.name+"<br>"+val.slug})});return results})},makeSearchableTagsInput:function(el,options){var $el=$(el);$el.select2({multiple:true,tokenSeperators:[","],minimumInputLength:3,allowClear:true,width:"element",initSelection:function(el,callback){var $el=$(el);var values=$el.val().split(",");var results=[];$.each(values,function(_,val){results.push({id:val,text:val})});callback(results)},ajax:{url:this.getSearchTagsUrl(),dataType:"json",data:function(term,page){return{query:term,quietMillis:300,name:$el.data("tag"),limit:10}},results:function(data,page){var results=[];$(data.results).each(function(_,val){results.push({id:val,text:val})});if($(results).filter(function(){return this.id.localeCompare(data.query)===0}).length===0){results.push({id:data.query,text:data.query})}return{results:results}}}})}};$(function(){$(".body select").each(function(){var $this=$(this),options={width:"element",allowClear:false};if($this.attr("data-allowClear")){options.allowClear=$this.attr("data-allowClear")}$this.select2(options)});setInterval(function(){$(".pretty-date").each(function(_,el){var $el=$(el);var dt=$el.data("datetime");if(dt){var date=moment(dt);if(date){$el.text(date.fromNow());$el.attr("title",date.format("llll"))}}})},5e3)});$.fn.select2.defaults.escapeMarkup=function(s){return s}})(app,jQuery,_,moment);(function(app,Backbone){"use strict";app.ScoredList=Backbone.Collection.extend({comparator:function(member){return-member.get("score")}})})(app,Backbone);(function(app,Backbone,jQuery,moment){"use strict";var $=jQuery;app.charts={render:function(el,options){var $el=$("#chart");var url=$el.attr("data-api-url");var title=$(el).attr("data-title");var $spark=$el.find(".sparkline");$spark.height($el.height());$.ajax({url:$el.attr("data-api-url"),type:"get",dataType:"json",data:{days:$el.attr("data-days")||7,gid:$el.attr("data-group")||undefined},success:function(resp){var data=[],maxval=10;$spark.empty();$.each(resp,function(_,val){var date=new Date(val[0]);data.push({y:val[1],label:moment(date).fromNow()});if(val[1]>maxval){maxval=val[1]}});app.charts.createSparkline($spark,data,options)}})},createSparkline:function(el,points,options){var $el=$(el),existing=$el.children(),maxval=10,title,point,pct,child,point_width;if(options===undefined){options={}}for(var i=0;i<points.length;i++){point=points[i];if(typeof point==="number"){point=points[i]={y:point}}if(point.y>maxval){maxval=point.y}}point_width=app.utils.floatFormat(100/points.length,2)+"%";for(i=0;i<points.length;i++){point=points[i];pct=app.utils.floatFormat(point.y/maxval*99,2)+"%";title=point.y+" events";if(point.label){title=title+"<br>("+point.label+")"}if(existing.get(i)===undefined){$('<a style="width:'+point_width+';" rel="tooltip" title="'+title+'"><span style="height:'+pct+'">'+point.y+"</span></a>").tooltip({placement:options.placement||"bottom",html:true,container:"body"}).appendTo($el)}else{$(existing[i]).find("span").css("height",pct).text(point.y).attr("title",point.label||point.y)}}}}})(app,Backbone,jQuery,moment);(function(window,app,Backbone,jQuery,_,moment){"use strict";var $=jQuery;app.GroupView=Backbone.View.extend({tagName:"li",className:"group",template:_.template(app.templates.group),initialize:function(){Backbone.View.prototype.initialize.apply(this,arguments);_.bindAll(this,"updateCount","updateAllAnnotations","updateAnnotation","updateLastSeen","updateResolved","updateHasSeen","renderSparkline","updateBookmarked","render");this.model.on({"change:count":this.updateCount,"change:annotations":this.updateAllAnnotations,"change:lastSeen":this.updateLastSeen,"change:isBookmarked":this.updateBookmarked,"change:isResolved":this.updateResolved,"change:hasSeen":this.updateHasSeen,"change:historicalData":this.renderSparkline},this)},render:function(){var data=this.model.toJSON();data.projectUrl=app.config.urlPrefix+"/"+app.config.teamId+"/"+data.project.slug+"/";data.loggerUrl=data.projectUrl+"?logger="+data.logger;this.$el.html(this.template(data));this.$el.attr("data-id",this.model.id);this.$el.addClass(this.getLevelClassName());this.$el.find("a[data-action=resolve]").click(_.bind(function(e){e.preventDefault();if(this.model.get("isResolved")){this.unresolve()}else{this.resolve()}},this));this.$el.find("a[data-action=bookmark]").click(_.bind(function(e){e.preventDefault();this.bookmark()},this));this.updateLastSeen();this.renderSparkline();this.updateResolved();this.updateHasSeen();this.updateBookmarked()},updateBookmarked:function(){if(this.model.get("isBookmarked")){this.$el.find("a[data-action=bookmark]").addClass("checked")}else{this.$el.find("a[data-action=bookmark]").removeClass("checked")}},updateResolved:function(){if(this.model.get("isResolved")){this.$el.addClass("resolved")}else{this.$el.removeClass("resolved")}},updateHasSeen:function(){if(this.model.get("hasSeen")){this.$el.addClass("seen")}else{this.$el.removeClass("seen")}},renderSparkline:function(obj){var data=this.model.get("historicalData");if(!data||!data.length)return;this.$el.addClass("with-sparkline");app.charts.createSparkline(this.$el.find(".sparkline"),data)},resolve:function(){$.ajax({url:this.getResolveUrl(),type:"post",dataType:"json",success:_.bind(function(response){this.model.set("version",response.version);this.model.set("isResolved",true)},this)})},unresolve:function(){$.ajax({url:this.getUnresolveUrl(),type:"post",dataType:"json",success:_.bind(function(response){this.model.set("version",response.version);this.model.set("isResolved",false)},this)})},getResolveUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/group/"+this.model.get("id")+"/set/resolved/"},getUnresolveUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/group/"+this.model.get("id")+"/set/unresolved/"},getBookmarkUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/bookmark/"},bookmark:function(){$.ajax({url:this.getBookmarkUrl(),type:"post",dataType:"json",data:{gid:this.model.get("id")},success:_.bind(function(response){this.model.set("version",response.version);this.model.set("isBookmarked",response.isBookmarked)},this)})},getLevelClassName:function(){return"level-"+this.model.get("levelName")},updateLastSeen:function(){var dt=moment(this.model.get("lastSeen"));this.$el.find(".last-seen").text(dt.fromNow()).data("datetime",this.model.get("lastSeen")).attr("title",dt.format("llll"))},updateCount:function(){var new_count=app.utils.formatNumber(this.model.get("count"));var counter=this.$el.find(".count");var digit=counter.find("span");if(digit.is(":animated"))return false;if(counter.data("count")==new_count){return false}counter.data("count",new_count);var replacement=$("<span></span>",{css:{top:"-2.1em",opacity:0},text:new_count});digit.before(replacement).animate({top:"2.5em",opacity:0},"fast",function(){digit.remove()});replacement.delay(100).animate({top:0,opacity:1},"fast")},updateAnnotation:function(annotation){var value=annotation.count;if(value===null)return;var new_count=app.utils.formatNumber(value);var counter=this.$el.find('.annotation[data-tag="'+annotation.label+'"]');var digit=counter.find("span");if(digit.is(":animated"))return false;if(counter.data("count")==new_count){return false}counter.data("count",new_count);var replacement=$("<span></span>",{css:{top:"-2.1em",opacity:0},text:new_count});digit.before(replacement).animate({top:"2.5em",opacity:0},"fast",function(){digit.remove()});replacement.delay(100).animate({top:0,opacity:1},"fast")},updateAllAnnotations:function(){var self=this;$.each(this.model.get("annotations"),function(index,annotation){self.updateAnnotation(annotation)})}});app.OrderedElementsView=Backbone.View.extend({emptyMessage:'<div class="empty-message"><h2>No events to show.</h2><p>We\'ll notify you if that changes. In the meantime why not take a moment to become more familiar with Sentry.</p><p class="links"><a href="docs/">Installation instructions</a> <a href="settings/">Project settings</a></p></div>',loadingMessage:"<p>Loading...</p>",model:app.models.Group,defaults:{maxItems:50,view:Backbone.View},initialize:function(data){if(_.isUndefined(data))data={};var members=data.members;Backbone.View.prototype.initialize.apply(this,arguments);this.options=$.extend({},this.defaults,this.options,data);this.$wrapper=$("#"+this.id);this.$parent=$("<ul></ul>");this.$empty=$('<li class="empty"></li>');this.$wrapper.html(this.$parent);if(this.options.className)this.$parent.addClass(this.options.className);_.bindAll(this,"renderMemberInContainer","unrenderMember","reSortMembers");this.collection=new app.ScoredList([],{model:data.model});this.collection.on("add",this.renderMemberInContainer,this);this.collection.on("remove",this.unrenderMember,this);this.collection.on("reset",this.reSortMembers,this);delete data.members;this.reset(members)},reset:function(members){this.$parent.empty();this.setEmpty();if(members===undefined){this.$empty.html(this.loadingMessage);this.collection.reset();this.setEmpty();this.loaded=false}else{this.$empty.html(this.emptyMessage);this.collection.reset(members);this.loaded=true}},setEmpty:function(){this.$parent.html(this.$empty)},extend:function(data){for(var i=0;i<data.length;i++){this.addMember(data[i])}},addMember:function(member){if(!this.hasMember(member)){if(this.collection.length>=this.options.maxItems){if(member.score<this.collection.last().get("score"))return;while(this.collection.length>=this.options.maxItems)this.collection.pop()}}this.collection.add(member,{merge:true})},reSortMembers:function(){this.collection.each(_.bind(function(member){this.renderMemberInContainer(member)},this))},updateMember:function(member,options){if(_.isUndefined(options))options={};var existing=this.collection.get(member.id);if(existing.get("version")>member.get("version"))return;this.collection.add(member,{merge:true,sort:options.sort!==false?true:false})},hasMember:function(member){return this.collection.get(member.id)?true:false},removeMember:function(member){this.collection.remove(member)},renderMemberInContainer:function(member){var new_pos=this.collection.indexOf(member),$el,$rel;this.$parent.find("li.empty").remove();$el=$("#"+this.id+member.id);if(!$el.length){$el=this.renderMember(member)}else if($el.index()===new_pos){return}if(new_pos===0){this.$parent.prepend($el)}else{$rel=$("#"+this.id+this.collection.at(new_pos).id);if(!$rel.length){this.$parent.append($el)}else if($el.id!==$rel.id){$el.insertBefore($rel)}else{return}}if(this.loaded)$el.css("background-color","#eee").animate({backgroundColor:"#fff"},300)},renderMember:function(member){var view=new this.options.view({model:member,id:this.id+member.id});view.render();return view.$el},unrenderMember:function(member){this.$parent.find("#"+this.id+member.id).remove();if(!this.$parent.find("li").length)this.setEmpty()}});app.GroupListView=app.OrderedElementsView.extend({defaults:{realtime:false,stream:false,pollUrl:null,pollTime:1e3,tickTime:100},initialize:function(data){if(_.isUndefined(data))data={};data.model=app.models.Group;data.view=app.GroupView;app.OrderedElementsView.prototype.initialize.call(this,data);this.options=$.extend({},this.defaults,this.options,data);this.queue=new app.ScoredList([],{model:data.model});this.cursor=null;_.bindAll(this,"poll","pollSuccess","pollFailure","tick");this.poll();window.setInterval(this.tick,this.options.tickTime)},tick:function(){if(!this.queue.length)return;var item=this.queue.pop();if(this.options.canStream){this.addMember(item)}else if(this.hasMember(item)){this.updateMember(item,{sort:false})}},pollSuccess:function(groups){if(!groups.length)return window.setTimeout(this.poll,this.options.pollTime*5);this.cursor=groups[groups.length-1].score;this.queue.add(groups,{merge:true});window.setTimeout(this.poll,this.options.pollTime)},pollFailure:function(jqXHR,textStatus,errorThrown){window.setTimeout(this.poll,this.options.pollTime*10)},poll:function(){var data;if(!this.options.realtime||!this.options.pollUrl)return window.setTimeout(this.poll,this.options.pollTime);data=app.utils.getQueryParams();data.cursor=this.cursor||undefined;$.ajax({url:this.options.pollUrl,type:"GET",dataType:"json",data:data,success:this.pollSuccess,error:this.pollFailure})}})})(window,app,Backbone,jQuery,_,moment);(function(window,app,Backbone,jQuery,_){"use strict";var $=jQuery;var BasePage=Backbone.View.extend({defaults:{canStream:false,realtime:false},initialize:function(data){Backbone.View.prototype.initialize.apply(this,arguments);if(_.isUndefined(data))data={};this.options=$.extend({},this.defaults,this.options,data);this.views={};this.initializeAjaxTabs()},initializeAjaxTabs:function(){$("a[data-toggle=ajtab]").click(_.bind(function(e){var $tab=$(e.target),uri=$tab.attr("data-uri"),view_id=$tab.attr("href").substr(1),view=this.getView(view_id,uri),$cont,$parent;e.preventDefault();if(!uri)return view.reset();$cont=$("#"+view_id);$parent=$cont.parent();$parent.css("opacity",.6);$.ajax({url:uri,dataType:"json",success:function(data){view.reset(data);$parent.css("opacity",1);$tab.tab("show")},error:function(){$cont.html("<p>There was an error fetching data from the server.</p>")}})},this));$("li.active a[data-toggle=ajtab]").click()},makeDefaultView:function(id){return new app.GroupListView({className:"group-list small",id:id,maxItems:5,stream:this.options.stream,realtime:this.options.realtime,model:app.models.Group})},getView:function(id,uri){if(!this.views[id])this.views[id]=this.makeDefaultView(id);var view=this.views[id];view.options.pollUrl=uri;return view}});app.StreamPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.apply(this,arguments);this.group_list=new app.GroupListView({className:"group-list",id:"event_list",members:data.groups,maxItems:50,realtime:$.cookie("pausestream")?false:true,canStream:this.options.canStream,pollUrl:app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/poll/",model:app.models.Group});this.control=$("a[data-action=pause]");this.updateStreamOptions();this.initFilters();this.control.click(_.bind(function(e){e.preventDefault();this.options.realtime=this.group_list.options.realtime=this.control.hasClass("realtime-pause");this.updateStreamOptions()},this));$("#chart").height("50px");app.charts.render("#chart",{placement:"left"})},initFilters:function(){$(".filter").each(_.bind(function(_,el){var $filter=$(el);var $input=$filter.find("input[type=text]");if($input.length>0){$input.select2({initSelection:function(el,callback){var $el=$(el);callback({id:$el.val(),text:$el.val()})},allowClear:true,minimumInputLength:3,ajax:{url:app.utils.getSearchTagsUrl(),dataType:"json",data:function(term,page){return{query:term,quietMillis:300,name:$input.attr("name"),limit:10}},results:function(data,page){var results=[];$(data.results).each(function(_,val){results.push({id:app.utils.escape(val),text:app.utils.escape(val)})});return{results:results}}}})}else{$input=$filter.find("select").select2({allowClear:true})}if($input.length>0){$input.on("change",function(e){var query=app.utils.getQueryParams();query[e.target.name]=e.val;window.location.href="?"+$.param(query)})}},this))},updateStreamOptions:function(){if(this.options.realtime){$.removeCookie("pausestream");this.control.removeClass("realtime-pause");this.control.addClass("realtime-play");this.control.html(this.control.attr("data-pause-label"))}else{$.cookie("pausestream","1",{expires:7});this.control.addClass("realtime-pause");this.control.removeClass("realtime-play");this.control.html(this.control.attr("data-play-label"))}}});app.DashboardPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.apply(this,arguments);$("#chart").height("150px");Sentry.charts.render("#chart")}});app.SelectTeamPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);this.refreshSparklines();$(window).on("resize",this.refreshSparklines)},refreshSparklines:function(){$(".chart").each(function(n,el){var $el=$(el);$.ajax({url:$el.attr("data-api-url"),type:"get",dataType:"json",data:{days:1},success:_.bind(function(data){$.plot($el,[{data:data,color:"#ebeff3",shadowSize:0,lines:{lineWidth:2,show:true,fill:true,color:"#f6f8fa"}}],{yaxis:{min:0},grid:{show:false},hoverable:false,legend:{noColumns:5},lines:{show:false}})},this)})})}});app.GroupDetailsPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.apply(this,arguments);this.group_list=new app.GroupListView({className:"group-list",id:"event_list",members:[data.group],model:app.models.Group});$("#chart").height("150px");Sentry.charts.render("#chart");$("#public-status .action").click(function(){var $this=$(this);$.ajax({url:$this.attr("data-api-url"),type:"post",success:function(group){var selector=group.isPublic?"true":"false";var nselector=group.isPublic?"false":"true";$('#public-status span[data-public="'+selector+'"]').show();$('#public-status span[data-public="'+nselector+'"]').hide()},error:function(){window.alert("There was an error changing the public status")}})});$(".add-note-btn").click(function(e){var $el=$(this);e.preventDefault();if($el.hasClass("selected")){$el.removeClass("selected");$(".add-note-form",$el.parent()).addClass("hide")}else{$el.addClass("selected");$(".add-note-form",$el.parent()).removeClass("hide")}});var $event_nav=$("#event_nav");if($event_nav.length>0){var $window=$(window);var $nav_links=$event_nav.find("a[href*=#]");var $nav_targets=[];var scroll_offset=$event_nav.offset().top;var event_nav_height;var last_target;$window.resize(function(){event_nav_height=$event_nav.find(".nav").outerHeight();$event_nav.height(event_nav_height+"px")}).resize();$nav_links.click(function(e){var $el=$(this);var target=$(this.hash);$el.parent().addClass("active").siblings().removeClass("active");$("html,body").animate({scrollTop:target.position().top+event_nav_height},"fast");if(history.pushState){history.pushState({},"",this.hash)}e.preventDefault()}).each(function(){if(this.hash.length>1&&$(this.hash).length){$nav_targets.push(this.hash)}});var resizeTimer;$window.scroll(function(){clearTimeout(resizeTimer);resizeTimer=setTimeout(function(){if($window.scrollTop()>scroll_offset){if(!$event_nav.hasClass("fixed")){$event_nav.addClass("fixed")}}else if($event_nav.hasClass("fixed")){$event_nav.removeClass("fixed")}if($nav_targets.length){var from_top=$window.scrollTop()+event_nav_height+20;var cur=$.map($nav_targets,function(hash){if($(hash).offset().top<from_top){return hash}});var target=cur?cur[cur.length-1]:null;if(!target){target=$nav_targets[0]}if(last_target!==target){last_target=target;$nav_links.parent().removeClass("active").end().filter("[href="+target+"]").parent().addClass("active")}}},1)}).scroll()}}});app.WallPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,{realtime:true,pollTime:3e3});this.sparkline=$(".chart");this.sparkline.height(this.sparkline.parent().height());this.stats=$("#stats");_.bindAll(this,"refreshStats");this.refreshSparkline();this.refreshStats()},makeDefaultView:function(id){return new app.GroupListView({className:"group-list",id:id,maxItems:5,stream:this.options.stream,realtime:this.options.realtime,model:app.models.Group})},refreshSparkline:function(){$.ajax({url:this.sparkline.attr("data-api-url"),type:"get",dataType:"json",data:{days:1,gid:this.sparkline.attr("data-group")||undefined},success:_.bind(function(data){$.plot(this.sparkline,[{data:data,color:"#52566c",shadowSize:0,lines:{lineWidth:2,show:true,fill:true,fillColor:"#232428"}}],{yaxis:{min:0},grid:{show:false},hoverable:false,legend:{noColumns:5},lines:{show:false}})},this)})},refreshStats:function(){$.ajax({url:this.stats.attr("data-uri"),dataType:"json",success:_.bind(function(data){this.stats.find("[data-stat]").each(function(){var $this=$(this);var new_count=data[$this.attr("data-stat")];var counter=$this.find("big");var digit=counter.find("span");if(digit.is(":animated"))return false;if(counter.data("count")==new_count){return false}counter.data("count",new_count);var replacement=$("<span></span>",{css:{top:"-2.1em",opacity:0},text:new_count});digit.before(replacement).animate({top:"2.5em",opacity:0},"fast",function(){digit.remove()});replacement.delay(100).animate({top:0,opacity:1},"fast")});window.setTimeout(this.refreshStats,1e3)},this)})}});app.AddTeamMemberPage=BasePage.extend({});app.AccessGroupMembersPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);app.utils.makeSearchableUsersInput("form input[name=user]")}});app.AccessGroupProjectsPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);app.utils.makeSearchableProjectsInput("form input[name=project]")}});app.TeamDetailsPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);app.utils.makeSearchableUsersInput("form input[name=owner]")}});app.ProjectDetailsPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);app.utils.makeSearchableUsersInput("form input[name=owner]");$("input[type=range]").each(_.bind(function loop(n,el){var $el=$(el),min=parseInt($el.attr("min"),10),max=parseInt($el.attr("max"),10),step=parseInt($el.attr("step"),10),values=[],$value=$('<span class="value"></span>');var i=min;while(i<=max){values.push(i);if(i<12){i+=1}else if(i<24){i+=3}else if(i<36){i+=6}else if(i<48){i+=12}else{i+=24}}$el.on("slider:ready",_.bind(function sliderready(event,data){$value.appendTo(data.el);$value.html(this.formatHours(data.value))},this)).on("slider:changed",_.bind(function sliderchanged(event,data){$value.html(this.formatHours(data.value))},this)).simpleSlider({range:[min,max],step:step,allowedValues:values,snap:true})},this))},formatHours:function formatHours(val){val=parseInt(val,10);if(val===0){return"Disabled"}else if(val>23&&val%24===0){val=val/24;return val+" day"+(val!=1?"s":"")}return val+" hour"+(val!=1?"s":"")}});app.ProjectNotificationsPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.apply(this,arguments);$("input[type=range]").each(_.bind(function loop(n,el){var $el=$(el),min=parseInt($el.attr("min"),10),max=parseInt($el.attr("max"),10),step=parseInt($el.attr("step"),10),$value=$('<span class="value"></span>');$el.on("slider:ready",_.bind(function sliderready(event,data){$value.appendTo(data.el);$value.html(this.formatThreshold(data.value))},this)).on("slider:changed",_.bind(function sliderchanged(event,data){$value.html(this.formatThreshold(data.value))},this)).simpleSlider({range:[min,max],step:step,snap:true})},this));$("#tag_list input").each(function(_,el){$(el).addClass("span6");app.utils.makeSearchableTagsInput(el)})},formatThreshold:function formatThreshold(value){if(!value){return"Disabled"}return value+"%"}});app.NewProjectPage=BasePage.extend({initialize:function(data){this.el=$(data.el);BasePage.prototype.initialize.apply(this,arguments);if(this.options.canSelectTeam&&this.options.canCreateTeam){$("#new_team").hide();$('a[rel="create-new-team"]').click(function(){$("#new_team").show();$("#select_team").hide()});$('a[rel="select-team"]').click(function(){$("#new_team").hide();$("#select_team").show()})}}});Backbone.sync=function(method,model,success,error){success()}})(window,app,Backbone,jQuery,_);
 //@ sourceMappingURL=global.min.map.js
\ No newline at end of file
diff --git a/src/sentry/static/sentry/scripts/models.js b/src/sentry/static/sentry/scripts/models.js
index fbb5e0ea73..7d2f2fc9e5 100644
--- a/src/sentry/static/sentry/scripts/models.js
+++ b/src/sentry/static/sentry/scripts/models.js
@@ -8,7 +8,7 @@
         defaults: {
             count: 0,
             version: 0,
-            usersSeen: null,
+            annotations: [],
             tags: [],
             versions: [],
             hasSeen: false,
diff --git a/src/sentry/static/sentry/scripts/templates.js b/src/sentry/static/sentry/scripts/templates.js
index 478b45d565..f3319aad1d 100644
--- a/src/sentry/static/sentry/scripts/templates.js
+++ b/src/sentry/static/sentry/scripts/templates.js
@@ -12,12 +12,12 @@
                     '<%= message %>' +
                 '</p>' +
                 '<div class="meta">' +
-                    '<% if (usersSeen !== null) { %>' +
-                    '<span class="tag tag-users" data-count="<%= app.utils.formatNumber(usersSeen) %>">' +
-                        '<i>users</i>' +
-                        '<span title="<%= usersSeen %>"><%= app.utils.formatNumber(usersSeen) %></span>' +
+                    '<% $.each(annotations, function(_, tag) { %>' +
+                    '<span class="tag annotation" data-tag="<%= tag.label %>" data-count="<%= app.utils.formatNumber(tag.count) %>">' +
+                        '<i><%= tag.label %></i>' +
+                        '<span title="<%= count %>"><%= app.utils.formatNumber(tag.count) %></span>' +
                     '</span>' +
-                    '<% } %>' +
+                    '<% }) %>' +
                     '<span class="last-seen pretty-date"></span>' +
                     '<% if (timeSpent) { %>' +
                         '<span class="tag time-spent"><%= Math.round(timeSpent) %>ms</span>' +
diff --git a/src/sentry/static/sentry/scripts/views.js b/src/sentry/static/sentry/scripts/views.js
index 0e36b86695..52d2fcc5c5 100644
--- a/src/sentry/static/sentry/scripts/views.js
+++ b/src/sentry/static/sentry/scripts/views.js
@@ -11,13 +11,13 @@
         initialize: function(){
             Backbone.View.prototype.initialize.apply(this, arguments);
 
-            _.bindAll(this, 'updateCount', 'updateUsersSeen', 'updateLastSeen',
+            _.bindAll(this, 'updateCount', 'updateAllAnnotations', 'updateAnnotation', 'updateLastSeen',
                 'updateResolved', 'updateHasSeen', 'renderSparkline', 'updateBookmarked',
                 'render');
 
             this.model.on({
                 'change:count': this.updateCount,
-                'change:usersSeen': this.updateUsersSeen,
+                'change:annotations': this.updateAllAnnotations,
                 'change:lastSeen': this.updateLastSeen,
                 'change:isBookmarked': this.updateBookmarked,
                 'change:isResolved': this.updateResolved,
@@ -194,12 +194,12 @@
             }, 'fast');
         },
 
-        updateUsersSeen: function(){
-            var value = this.model.get('usersSeen');
+        updateAnnotation: function(annotation){
+            var value = annotation.count;
             if (value === null)
                 return;
             var new_count = app.utils.formatNumber(value);
-            var counter = this.$el.find('.tag-users');
+            var counter = this.$el.find('.annotation[data-tag="' + annotation.label + '"]');
             var digit = counter.find('span');
 
             if (digit.is(':animated'))
@@ -234,6 +234,13 @@
                 top: 0,
                 opacity: 1
             }, 'fast');
+        },
+
+        updateAllAnnotations: function(){
+            var self = this;
+            $.each(this.model.get('annotations'), function(index, annotation){
+                self.updateAnnotation(annotation);
+            });
         }
 
     });
diff --git a/src/sentry/static/sentry/styles/global.min.css b/src/sentry/static/sentry/styles/global.min.css
index 9aa1925d84..b9842de921 100644
--- a/src/sentry/static/sentry/styles/global.min.css
+++ b/src/sentry/static/sentry/styles/global.min.css
@@ -7539,16 +7539,20 @@ a.icon-share:hover {
   color: #000;
 }
 .group-list > li .tag,
-.events > li .tag {
+.events > li .tag,
+.group-list > li .annotation,
+.events > li .annotation {
   margin-left: 10px;
 }
 .group-list > li .tag-users,
-.events > li .tag-users {
+.events > li .tag-users,
+.group-list > li .annotation,
+.events > li .annotation {
   margin-right: 10px;
   margin-left: 0;
   position: relative;
   background: #f9f9f9;
-  padding: 0 5px 0 45px;
+  padding: 0 5px;
   line-height: 20px;
   height: 20px;
   min-width: 20px;
@@ -7559,11 +7563,12 @@ a.icon-share:hover {
   overflow: hidden;
 }
 .group-list > li .tag-users span,
-.events > li .tag-users span {
+.events > li .tag-users span,
+.group-list > li .annotation span,
+.events > li .annotation span {
   position: absolute;
   top: 0;
   bottom: 0;
-  left: 45px;
   right: 5px;
   height: 100%;
   text-align: center;
@@ -7571,10 +7576,11 @@ a.icon-share:hover {
   display: block;
 }
 .group-list > li .tag-users i,
-.events > li .tag-users i {
+.events > li .tag-users i,
+.group-list > li .annotation i,
+.events > li .annotation i {
+  padding-right: 25px;
   font-style: normal;
-  position: absolute;
-  left: 5px;
   color: #aaa;
 }
 .group-list > li .tag-project,
diff --git a/src/sentry/static/sentry/styles/sentry.css b/src/sentry/static/sentry/styles/sentry.css
index 9aa1925d84..b9842de921 100644
--- a/src/sentry/static/sentry/styles/sentry.css
+++ b/src/sentry/static/sentry/styles/sentry.css
@@ -7539,16 +7539,20 @@ a.icon-share:hover {
   color: #000;
 }
 .group-list > li .tag,
-.events > li .tag {
+.events > li .tag,
+.group-list > li .annotation,
+.events > li .annotation {
   margin-left: 10px;
 }
 .group-list > li .tag-users,
-.events > li .tag-users {
+.events > li .tag-users,
+.group-list > li .annotation,
+.events > li .annotation {
   margin-right: 10px;
   margin-left: 0;
   position: relative;
   background: #f9f9f9;
-  padding: 0 5px 0 45px;
+  padding: 0 5px;
   line-height: 20px;
   height: 20px;
   min-width: 20px;
@@ -7559,11 +7563,12 @@ a.icon-share:hover {
   overflow: hidden;
 }
 .group-list > li .tag-users span,
-.events > li .tag-users span {
+.events > li .tag-users span,
+.group-list > li .annotation span,
+.events > li .annotation span {
   position: absolute;
   top: 0;
   bottom: 0;
-  left: 45px;
   right: 5px;
   height: 100%;
   text-align: center;
@@ -7571,10 +7576,11 @@ a.icon-share:hover {
   display: block;
 }
 .group-list > li .tag-users i,
-.events > li .tag-users i {
+.events > li .tag-users i,
+.group-list > li .annotation i,
+.events > li .annotation i {
+  padding-right: 25px;
   font-style: normal;
-  position: absolute;
-  left: 5px;
   color: #aaa;
 }
 .group-list > li .tag-project,
diff --git a/src/sentry/templates/sentry/projects/manage_tags.html b/src/sentry/templates/sentry/projects/manage_tags.html
index 304ebb4874..eb82833d3b 100644
--- a/src/sentry/templates/sentry/projects/manage_tags.html
+++ b/src/sentry/templates/sentry/projects/manage_tags.html
@@ -10,16 +10,28 @@
         <h2>{% trans "Manage Tags" %}</h2>
     </div>
     {% if form %}
-        <p>{% trans "Configure tags which you want to enable filters for." %}</p>
-        <p><small>{% trans "Note: You can only configure tags which have already been seen." %}</small></p>
+        <p>{% blocktrans %}Each event in Sentry may be annotated with various tags (key and value pairs). For more information on how send additional tags, see your client's documentation.{% endblocktrans %}</p>
         <form action="" method="post">
             {% csrf_token %}
             {{ form|as_crispy_errors }}
-            <fieldset>
-                {% for field in form %}
-                    {{ field|as_crispy_field }}
-                {% endfor %}
-            </fieldset>
+
+            <div class="row">
+                <div class="span6">
+                    <fieldset>
+                        <legend>{% trans "Stream Filters" %}</legend>
+                        <p><small>{% blocktrans %}Filters allow you to do limited searching on the stream view based on a tag's value. They are selectable via the sidebar on the stream.{% endblocktrans %}</small></p>
+                        {{ form.filters|as_crispy_field }}
+                    </fieldset>
+                </div>
+                <div class="span6">
+                    <fieldset>
+                        <legend>{% trans "Stream Annotations" %}</legend>
+                        <p><small>{% blocktrans %}Annotations display the total number of unique values that have been seen for an event. They are rendered on the stream with each individual event.{% endblocktrans %}</small></p>
+                        {{ form.annotations|as_crispy_field }}
+                    </fieldset>
+                </div>
+            </div>
+
             <fieldset class="form-actions">
                 <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
             </fieldset>
diff --git a/src/sentry/utils/javascript.py b/src/sentry/utils/javascript.py
index 4e98084ffc..5700258ff2 100644
--- a/src/sentry/utils/javascript.py
+++ b/src/sentry/utils/javascript.py
@@ -7,11 +7,16 @@ sentry.utils.javascript
 """
 import time
 
+from collections import defaultdict
+
 from django.core.urlresolvers import reverse
 from django.utils.html import escape
+
 from sentry.app import env
-from sentry.constants import STATUS_RESOLVED
-from sentry.models import Group, GroupBookmark, GroupTagKey, GroupSeen
+from sentry.constants import STATUS_RESOLVED, TAG_LABELS
+from sentry.models import (
+    Group, GroupBookmark, GroupTagKey, GroupSeen, ProjectOption
+)
 from sentry.templatetags.sentry_plugins import get_tags
 from sentry.utils import json
 from sentry.utils.db import attach_foreignkey
@@ -92,18 +97,40 @@ class GroupTransformer(Transformer):
         else:
             historical_data = {}
 
-        user_counts = dict(GroupTagKey.objects.filter(
+        project_list = set(o.project for o in objects)
+        tag_keys = set(['sentry:user'])
+        project_annotations = {}
+        for project in project_list:
+            enabled_annotations = ProjectOption.objects.get_value(
+                project, 'annotations', ['sentry:user'])
+            project_annotations[project] = enabled_annotations
+            tag_keys.update(enabled_annotations)
+
+        annotation_counts = defaultdict(dict)
+        annotation_results = GroupTagKey.objects.filter(
             group__in=objects,
-            key='sentry:user',
-        ).values_list('group', 'values_seen'))
+            key__in=tag_keys,
+        ).values_list('key', 'group', 'values_seen')
+        for key, group_id, values_seen in annotation_results:
+            annotation_counts[key][group_id] = values_seen
 
         for g in objects:
             g.is_bookmarked = g.pk in bookmarks
             g.historical_data = [x[1] for x in historical_data.get(g.id, [])]
-            if user_counts:
-                g.users_seen = user_counts.get(g.id, 0)
             active_date = g.active_at or g.last_seen
             g.has_seen = seen_groups.get(g.id, active_date) > active_date
+            g.annotations = []
+            for key in tag_keys:
+                if key in project_annotations[project]:
+                    label = TAG_LABELS.get(key, key.replace('_', ' ')).lower() + 's'
+                    try:
+                        value = annotation_counts[key].get(g.id, 0)
+                    except KeyError:
+                        value = 0
+                    g.annotations.append({
+                        'label': label,
+                        'count': value,
+                    })
 
     def localize_datetime(self, dt, request=None):
         if not request:
@@ -136,14 +163,14 @@ class GroupTransformer(Transformer):
             },
             'version': time.time(),
         }
-        if hasattr(obj, 'users_seen'):
-            d['usersSeen'] = obj.users_seen
         if hasattr(obj, 'is_bookmarked'):
             d['isBookmarked'] = obj.is_bookmarked
         if hasattr(obj, 'has_seen'):
             d['hasSeen'] = obj.has_seen
         if hasattr(obj, 'historical_data'):
             d['historicalData'] = obj.historical_data
+        if hasattr(obj, 'annotations'):
+            d['annotations'] = obj.annotations
         if request:
             d['tags'] = list(get_tags(obj, request))
         return d
diff --git a/src/sentry/web/forms/projects.py b/src/sentry/web/forms/projects.py
index 0585ddaf5b..a5abfe8bbf 100644
--- a/src/sentry/web/forms/projects.py
+++ b/src/sentry/web/forms/projects.py
@@ -5,12 +5,12 @@ sentry.web.forms.projects
 :copyright: (c) 2010-2013 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
-import itertools
 from django import forms
 from django.conf import settings
 from django.contrib.auth import authenticate
 from django.utils.translation import ugettext_lazy as _
-from sentry.constants import EMPTY_PASSWORD_VALUES
+
+from sentry.constants import EMPTY_PASSWORD_VALUES, TAG_LABELS
 from sentry.models import Project, ProjectOption, User
 from sentry.permissions import can_set_public_projects
 from sentry.web.forms.fields import (
@@ -21,24 +21,41 @@ BLANK_CHOICE = [("", "")]
 
 
 class ProjectTagsForm(forms.Form):
-    filters = forms.MultipleChoiceField(choices=(), widget=forms.CheckboxSelectMultiple(), required=False)
+    filters = forms.MultipleChoiceField(
+        choices=(), widget=forms.CheckboxSelectMultiple(), required=False)
+    annotations = forms.MultipleChoiceField(
+        choices=(), widget=forms.CheckboxSelectMultiple(), required=False)
 
     def __init__(self, project, tag_list, *args, **kwargs):
         self.project = project
         super(ProjectTagsForm, self).__init__(*args, **kwargs)
 
-        self.fields['filters'].choices = tuple(
-            (k, '%s (%s)' % (k.replace('_', ' ').title(), k))
-            for k in itertools.imap(unicode, tag_list)
-        )
-        self.fields['filters'].widget.choices = self.fields['filters'].choices
+        tag_choices = []
+        for tag in tag_list:
+            tag_choices.append(
+                (tag, TAG_LABELS.get(tag) or tag.replace(u'_', u' ').title())
+            )
+
+        for field in ('filters', 'annotations'):
+            self.fields[field].choices = tag_choices
+            self.fields[field].widget.choices = self.fields[field].choices
+
+        enabled_filters = ProjectOption.objects.get_value(
+            self.project, 'tags', tag_list)
+        self.fields['filters'].initial = enabled_filters
 
-        enabled_tags = ProjectOption.objects.get_value(self.project, 'tags', tag_list)
-        self.fields['filters'].initial = enabled_tags
+        enable_annotations = ProjectOption.objects.get_value(
+            self.project, 'annotations', ['sentry:user'])
+        self.fields['annotations'].initial = enable_annotations
 
     def save(self):
         filters = self.cleaned_data.get('filters')
-        ProjectOption.objects.set_value(self.project, 'tags', filters)
+        ProjectOption.objects.set_value(
+            self.project, 'tags', filters)
+
+        annotations = self.cleaned_data.get('annotations')
+        ProjectOption.objects.set_value(
+            self.project, 'annotations', annotations)
 
 
 class BaseProjectForm(forms.ModelForm):
diff --git a/src/sentry/web/frontend/projects/tags.py b/src/sentry/web/frontend/projects/tags.py
index f5e37327a8..34506abe05 100644
--- a/src/sentry/web/frontend/projects/tags.py
+++ b/src/sentry/web/frontend/projects/tags.py
@@ -19,9 +19,7 @@ from sentry.web.helpers import render_to_response
 
 @has_access(MEMBER_OWNER)
 def manage_project_tags(request, team, project):
-    tag_list = filter(
-        lambda x: not x.startswith('sentry:'),
-        TagKey.objects.all_keys(project))
+    tag_list = TagKey.objects.all_keys(project)
 
     if tag_list:
         form = ProjectTagsForm(project, tag_list, request.POST or None)
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index 22e51d7521..08640d299a 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -8,7 +8,7 @@ import logging
 from django.core.urlresolvers import reverse
 
 from sentry.constants import STATUS_HIDDEN
-from sentry.models import Project, ProjectKey
+from sentry.models import Project, ProjectKey, ProjectOption, TagKey
 from sentry.testutils import TestCase, fixture, before
 
 logger = logging.getLogger(__name__)
@@ -179,3 +179,41 @@ class RemoveProjectTest(TestCase):
         delete_project.delay.assert_called_once_with(
             object_id=self.project.id)
         assert Project.objects.get(id=self.project.id).status == STATUS_HIDDEN
+
+
+class ManageProjectTagsTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-manage-project-tags', args=[self.team.slug, self.project.id])
+
+    def test_requires_authentication(self):
+        self.assertRequiresAuthentication(self.path)
+
+    def test_simple(self):
+        TagKey.objects.create(project=self.project, key='site')
+        TagKey.objects.create(project=self.project, key='url')
+        TagKey.objects.create(project=self.project, key='os')
+
+        self.login_as(self.user)
+
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed('sentry/projects/manage_tags.html')
+        assert resp.context['team'] == self.team
+        assert resp.context['project'] == self.project
+        tag_list = resp.context['tag_list']
+        assert 'site' in tag_list
+        assert 'url' in tag_list
+        assert 'os' in tag_list
+
+        resp = self.client.post(self.path, {
+            'filters': ['site', 'url'],
+            'annotations': ['os'],
+        })
+        assert resp.status_code == 302
+        enabled_filters = ProjectOption.objects.get_value(
+            self.project, 'tags')
+        assert sorted(enabled_filters) == ['site', 'url']
+        enabled_annotations = ProjectOption.objects.get_value(
+            self.project, 'annotations')
+        assert enabled_annotations == ['os']
