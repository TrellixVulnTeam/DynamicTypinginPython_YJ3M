commit 6eb891c29d0894434e3e615cbfbac80c10a1955a
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Oct 24 11:17:51 2019 -0700

    fix(eventstore): Fix time condition for earliest/latest event (#15246)
    
    Aligns the time conditions for determining an earliest/latest event
    with next/prev
    
    - Events with a same timestamp are sorted by event ID
    - Next/prev uses start/end times from provided filter

diff --git a/src/sentry/api/endpoints/project_event_details.py b/src/sentry/api/endpoints/project_event_details.py
index 74307b292f..3393944041 100644
--- a/src/sentry/api/endpoints/project_event_details.py
+++ b/src/sentry/api/endpoints/project_event_details.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from copy import deepcopy
 from datetime import datetime
 from rest_framework.response import Response
 
@@ -64,9 +65,14 @@ class ProjectEventDetailsEndpoint(ProjectEndpoint):
                 conditions=conditions, project_ids=[event.project_id], group_ids=[event.group_id]
             )
 
-            next_event = eventstore.get_next_event_id(event, filter=filter)
+            # Ignore any time params and search entire retention period
+            next_event_filter = deepcopy(filter)
+            next_event_filter.end = datetime.utcnow()
+            next_event = eventstore.get_next_event_id(event, filter=next_event_filter)
 
-            prev_event = eventstore.get_prev_event_id(event, filter=filter)
+            prev_event_filter = deepcopy(filter)
+            prev_event_filter.start = datetime.utcfromtimestamp(0)
+            prev_event = eventstore.get_prev_event_id(event, filter=prev_event_filter)
 
             next_event_id = next_event[1] if next_event else None
             prev_event_id = prev_event[1] if prev_event else None
diff --git a/src/sentry/eventstore/snuba/backend.py b/src/sentry/eventstore/snuba/backend.py
index e9552014b5..2c9ca01dab 100644
--- a/src/sentry/eventstore/snuba/backend.py
+++ b/src/sentry/eventstore/snuba/backend.py
@@ -1,6 +1,5 @@
 from __future__ import absolute_import
 
-from datetime import datetime
 import six
 from copy import deepcopy
 
@@ -14,6 +13,20 @@ DEFAULT_LIMIT = 100
 DEFAULT_OFFSET = 0
 
 
+def get_before_event_condition(event):
+    return [
+        ["timestamp", "<=", event.timestamp],
+        [["timestamp", "<", event.timestamp], ["event_id", "<", event.event_id]],
+    ]
+
+
+def get_after_event_condition(event):
+    return [
+        ["timestamp", ">=", event.timestamp],
+        [["timestamp", ">", event.timestamp], ["event_id", ">", event.event_id]],
+    ]
+
+
 class SnubaEventStorage(EventStorage):
     """
     Eventstore backend backed by Snuba
@@ -75,22 +88,22 @@ class SnubaEventStorage(EventStorage):
         return None
 
     def get_earliest_event_id(self, event, filter):
-        time_condition = [["timestamp", "<", event.timestamp]]
         orderby = ["timestamp", "event_id"]
 
         filter = deepcopy(filter)
         filter.conditions = filter.conditions or []
-        filter.conditions.extend(time_condition)
+        filter.conditions.extend(get_before_event_condition(event))
+        filter.end = event.datetime
 
         return self.__get_event_id_from_filter(filter=filter, orderby=orderby)
 
     def get_latest_event_id(self, event, filter):
-        time_condition = [["timestamp", ">", event.timestamp]]
         orderby = ["-timestamp", "-event_id"]
 
         filter = deepcopy(filter)
         filter.conditions = filter.conditions or []
-        filter.conditions.extend(time_condition)
+        filter.conditions.extend(get_after_event_condition(event))
+        filter.start = event.datetime
 
         return self.__get_event_id_from_filter(filter=filter, orderby=orderby)
 
@@ -105,15 +118,9 @@ class SnubaEventStorage(EventStorage):
             return None
 
         filter = deepcopy(filter)
-
-        time_condition = [
-            ["timestamp", ">=", event.timestamp],
-            [["timestamp", ">", event.timestamp], ["event_id", ">", event.event_id]],
-        ]
         filter.conditions = filter.conditions or []
-        filter.conditions.extend(time_condition)
+        filter.conditions.extend(get_after_event_condition(event))
         filter.start = event.datetime
-        filter.end = datetime.utcnow()
 
         return self.__get_event_id_from_filter(filter=filter, orderby=["timestamp", "event_id"])
 
@@ -128,15 +135,9 @@ class SnubaEventStorage(EventStorage):
             return None
 
         filter = deepcopy(filter)
-
-        time_condition = [
-            ["timestamp", "<=", event.timestamp],
-            [["timestamp", "<", event.timestamp], ["event_id", "<", event.event_id]],
-        ]
         filter.conditions = filter.conditions or []
-        filter.conditions.extend(time_condition)
+        filter.conditions.extend(get_before_event_condition(event))
         filter.end = event.datetime
-        filter.start = datetime.utcfromtimestamp(0)
 
         return self.__get_event_id_from_filter(filter=filter, orderby=["-timestamp", "-event_id"])
 
