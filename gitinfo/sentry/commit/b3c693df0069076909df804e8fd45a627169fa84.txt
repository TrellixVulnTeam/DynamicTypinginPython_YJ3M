commit b3c693df0069076909df804e8fd45a627169fa84
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Apr 22 07:52:32 2020 -0700

    feat(ts): Extend `react-router` InjectedRouter type (#18386)
    
    `react-router`'s types are not complete, see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/44055 for more information
    
    Also adds a def for `withRouter` that properly omits `WithRouterProps`

diff --git a/src/sentry/static/sentry/app/actionCreators/globalSelection.tsx b/src/sentry/static/sentry/app/actionCreators/globalSelection.tsx
index 78c38530da..0cf4f5b5b8 100644
--- a/src/sentry/static/sentry/app/actionCreators/globalSelection.tsx
+++ b/src/sentry/static/sentry/app/actionCreators/globalSelection.tsx
@@ -53,15 +53,9 @@ type UrlParams = {
   };
 
 /**
- * TODO(ts): I think `InjectedRouter` is typed incorrectly, if you inspect in the application,
- * you'll see that `router` also includes `WithRouterProps`
- *
  * This can be null which will not perform any router side effects, and instead updates store.
  */
-type Router =
-  | (ReactRouter.InjectedRouter & ReactRouter.WithRouterProps)
-  | null
-  | undefined;
+type Router = ReactRouter.InjectedRouter | null | undefined;
 
 // Reset values in global selection store
 export function resetGlobalSelection() {
diff --git a/src/sentry/static/sentry/app/types/react-router.d.ts b/src/sentry/static/sentry/app/types/react-router.d.ts
new file mode 100644
index 0000000000..06f1e41349
--- /dev/null
+++ b/src/sentry/static/sentry/app/types/react-router.d.ts
@@ -0,0 +1,32 @@
+import {ComponentClass, StatelessComponent} from 'react';
+import {WithRouterProps} from 'react-router/lib/withRouter';
+import {InjectedRouter, Params} from 'react-router/lib/Router';
+import {Location} from 'history';
+import {PlainRoute} from 'react-router/lib/Route';
+
+declare module 'react-router' {
+  interface InjectedRouter<P = Params, Q = any> {
+    location: Location<Q>;
+    params: P;
+    routes: PlainRoute[];
+  }
+
+  interface WithRouterProps<P = Params, Q = any> {
+    location: Location<Q>;
+    params: P;
+    router: InjectedRouter<P, Q>;
+    routes: PlainRoute[];
+  }
+
+  type ComponentConstructor<P> = ComponentClass<P> | StatelessComponent<P>;
+
+  declare function withRouter<P extends WithRouterProps>(
+    component: ComponentConstructor<P>,
+    options?: Options
+  ): ComponentClass<Omit<P, keyof WithRouterProps>>;
+
+  declare function withRouter<P extends WithRouterProps, S>(
+    component: ComponentConstructor<P> & S,
+    options?: Options
+  ): ComponentClass<Omit<P, keyof WithRouterProps>> & S;
+}
