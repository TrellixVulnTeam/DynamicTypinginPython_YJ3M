commit 6139155e3094471e41f0ec7ab4640d4dca548a29
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jan 8 17:02:02 2015 -0700

    Improve logging of various cases

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 826b78aec3..25a6321ac6 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -128,6 +128,8 @@ class ScoreClause(object):
 
 
 class EventManager(object):
+    logger = logging.getLogger('sentry.events')
+
     def __init__(self, data, version='5'):
         self.data = data
         self.version = version
@@ -298,17 +300,13 @@ class EventManager(object):
             if added_tags:
                 tags.extend(added_tags)
 
-        result = safe_execute(
+        group, is_new, is_regression, is_sample = safe_execute(
             self._save_aggregate,
             event=event,
             tags=tags,
             hashes=hashes,
             **group_kwargs
         )
-        if result is None:
-            return
-
-        group, is_new, is_regression, is_sample = result
 
         using = group._state.db
 
@@ -323,6 +321,7 @@ class EventManager(object):
                 with transaction.atomic():
                     event.save()
             except IntegrityError:
+                self.logger.info('Duplicate Event found for event_id=%s', event_id)
                 return event
 
         try:
@@ -330,6 +329,7 @@ class EventManager(object):
                 EventMapping.objects.create(
                     project=project, group=group, event_id=event_id)
         except IntegrityError:
+            self.logger.info('Duplicate EventMapping found for event_id=%s', event_id)
             return event
 
         if not raw:
@@ -340,6 +340,8 @@ class EventManager(object):
                 is_sample=is_sample,
                 is_regression=is_regression,
             )
+        else:
+            self.logger.info('Raw event passed; skipping post process for event_id=%s', event_id)
 
         index_event.delay(event)
 
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index d8a40fe550..d123122f73 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -177,11 +177,15 @@ def plugin_post_process_group(plugin_slug, event, **kwargs):
 def record_affected_user(event, **kwargs):
     from sentry.models import Group
 
+    logger = record_affected_user.get_logger()
+
     if not settings.SENTRY_ENABLE_EXPLORE_USERS:
+        logger.info('Skipping sentry:user tag due to SENTRY_ENABLE_EXPLORE_USERS')
         return
 
     user_ident = event.user_ident
     if not user_ident:
+        logger.info('No user data found for event_id=%s', event.event_id)
         return
 
     user_data = event.data.get('sentry.interfaces.User', event.data.get('user', {}))
