commit c5d8755218dd7cd23a89e59d89e5270e2ec11150
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Wed Mar 14 13:39:28 2018 -0700

    feat(settings): improved team dropdowns (#7598)
    
    * user badges for durpdown
    
    * add members button inside label as per designs
    
    * fix autocomplete search by adding a proper valuegs
    
    * userListElement replaces userBadge in list scenarios as it is smaller, more scannable and doesn't have a link in itgs
    
    * fix some bugs caused by changes to dropdownAutocomplete
    
    * storybook
    
    * right is default alignment for dropdownAutocompleteMenu
    
    * use translations
    
    * add and use a new searchKey attribute on dropdownAutocomplete (all other dropdowns still work from label search)
    
    * when searching in autocomplete, use the value and label ONLY if no searchKey is sent

diff --git a/docs-ui/components/userBadge.stories.js b/docs-ui/components/userBadge.stories.js
new file mode 100644
index 0000000000..190f966628
--- /dev/null
+++ b/docs-ui/components/userBadge.stories.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+
+import UserBadge from 'sentry-ui/userBadge';
+
+const user = {
+  name: 'Chrissy',
+  email: 'chris.clark@sentry.io',
+};
+
+storiesOf('UserBadge', module).add(
+  'default',
+  withInfo('A standard two-line user badge. It contains a link to the user.')(() => (
+    <UserBadge user={user} />
+  ))
+);
diff --git a/docs-ui/components/userListElement.stories.js b/docs-ui/components/userListElement.stories.js
new file mode 100644
index 0000000000..99162a3b36
--- /dev/null
+++ b/docs-ui/components/userListElement.stories.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+
+import UserListElement from 'sentry-ui/userListElement';
+
+const user = {
+  name: 'Chrissy',
+  email: 'chris.clark@sentry.io',
+};
+
+storiesOf('UserListElement', module).add(
+  'default',
+  withInfo(
+    'A very simple one-line username with avatar. It does not come with a link.'
+  )(() => <UserListElement user={user} />)
+);
diff --git a/src/sentry/static/sentry/app/components/dropdownAutoComplete.jsx b/src/sentry/static/sentry/app/components/dropdownAutoComplete.jsx
index d9d2e8c048..5b01c399ec 100644
--- a/src/sentry/static/sentry/app/components/dropdownAutoComplete.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownAutoComplete.jsx
@@ -11,6 +11,7 @@ class DropdownAutoComplete extends React.Component {
 
   static defaultProps = {
     isOpen: false,
+    alignMenu: 'right',
   };
 
   render() {
diff --git a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
index 8ac9e08e6f..af35cb5093 100644
--- a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
@@ -24,6 +24,7 @@ class DropdownAutoCompleteMenu extends React.Component {
             PropTypes.shape({
               value: PropTypes.string,
               label: PropTypes.node,
+              searchKey: PropTypes.string,
             })
           ),
         })
@@ -32,6 +33,7 @@ class DropdownAutoCompleteMenu extends React.Component {
     action: PropTypes.element,
     isOpen: PropTypes.bool,
     onSelect: PropTypes.func,
+    alignMenu: PropTypes.oneOf(['left', 'right']),
   };
 
   static defaultProps = {
@@ -41,8 +43,7 @@ class DropdownAutoCompleteMenu extends React.Component {
   filterItems = (items, inputValue) =>
     items.filter(item => {
       return (
-        [item.value, item.label]
-          .join(' ')
+        (item.searchKey || `${item.value} ${item.label}`)
           .toLowerCase()
           .indexOf(inputValue.toLowerCase()) > -1
       );
@@ -173,17 +174,28 @@ const StyledLabel = styled('div')`
   border-width: 1px 0;
 `;
 
-const StyledMenu = styled(({isOpen, ...props}) => <div {...props} />)`
+const StyledMenu = styled(({isOpen, alignMenu, ...props}) => <div {...props} />)`
   background: #fff;
   border: 1px solid ${p => p.theme.borderLight};
   border-radius: 0 ${p => p.theme.borderRadius} ${p => p.theme.borderRadius}
     ${p => p.theme.borderRadius};
   position: absolute;
   top: calc(100% - 1px);
-  left: 0;
   min-width: 250px;
-  font-size: 0.9em;
   z-index: 1;
+  max-height: 300px;
+  overflow-y: scroll;
+  right: 0;
+  border-radius: ${({theme}) =>
+    `${theme.borderRadius} 0 ${theme.borderRadius} ${theme.borderRadius}`};
+
+  ${({alignMenu, theme}) =>
+    alignMenu == 'left'
+      ? `
+    left: 0;
+    border-radius: 0 ${theme.borderRadius} ${theme.borderRadius} ${theme.borderRadius};
+  `
+      : ''};
 `;
 
 export default DropdownAutoCompleteMenu;
diff --git a/src/sentry/static/sentry/app/components/dropdownButton.jsx b/src/sentry/static/sentry/app/components/dropdownButton.jsx
index de7ea866d5..326a4bb05a 100644
--- a/src/sentry/static/sentry/app/components/dropdownButton.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownButton.jsx
@@ -4,9 +4,9 @@ import styled from 'react-emotion';
 import Button from './buttons/button';
 import InlineSvg from './inlineSvg';
 
-const DropdownButton = ({isOpen, children}) => {
+const DropdownButton = ({isOpen, children, ...props}) => {
   return (
-    <StyledButton isOpen={isOpen}>
+    <StyledButton isOpen={isOpen} {...props}>
       <StyledChevronDown />
       {children}
     </StyledButton>
@@ -27,7 +27,7 @@ const StyledButton = styled(({isOpen, ...props}) => <Button {...props} />)`
   border-bottom-right-radius: ${p => (p.isOpen ? 0 : p.theme.borderRadius)};
   border-bottom-left-radius: ${p => (p.isOpen ? 0 : p.theme.borderRadius)};
   position: relative;
-  z-index: 1;
+  z-index: 2;
   box-shadow: none;
 
   &,
diff --git a/src/sentry/static/sentry/app/components/userBadge.jsx b/src/sentry/static/sentry/app/components/userBadge.jsx
index 67ff7ae2d2..0a1ee11a3b 100644
--- a/src/sentry/static/sentry/app/components/userBadge.jsx
+++ b/src/sentry/static/sentry/app/components/userBadge.jsx
@@ -3,17 +3,18 @@ import React from 'react';
 import styled from 'react-emotion';
 import Avatar from './avatar';
 import Link from './link';
+import overflowEllipsis from '../styles/overflowEllipsis';
 
-const UserBadge = ({user, orgId}) => {
+const UserBadge = ({user, orgId, ...props}) => {
   return (
-    <StyledUserBadge>
+    <StyledUserBadge {...props}>
       <StyledAvatar user={user} size={80} className="avatar" />
-      <div>
+      <StyledNameAndEmail>
         <StyledLink to={`/settings/organization/${orgId}/members/${user.id}`}>
           {user.name || user.email}
         </StyledLink>
         <StyledEmail>{user.email}</StyledEmail>
-      </div>
+      </StyledNameAndEmail>
     </StyledUserBadge>
   );
 };
@@ -28,19 +29,28 @@ const StyledUserBadge = styled('div')`
   align-items: center;
 `;
 
+const StyledNameAndEmail = styled('div')`
+  flex-shrink: 1;
+  min-width: 0;
+  line-height: 1;
+`;
+
 const StyledEmail = styled('div')`
   font-size: 0.875em;
+  ${overflowEllipsis};
 `;
 
 const StyledLink = styled(Link)`
   font-weight: bold;
-  display: block;
   margin-bottom: 0.2em;
+  ${overflowEllipsis};
 `;
 
 const StyledAvatar = styled(props => <Avatar {...props} />)`
   width: 2em;
   height: 2em;
+  min-width: 2em;
+  min-height: 2em;
   margin-right: 0.5em;
 `;
 
diff --git a/src/sentry/static/sentry/app/components/userListElement.jsx b/src/sentry/static/sentry/app/components/userListElement.jsx
new file mode 100644
index 0000000000..7a5d74a749
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/userListElement.jsx
@@ -0,0 +1,40 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+import Avatar from './avatar';
+import overflowEllipsis from '../styles/overflowEllipsis';
+
+const UserListElement = ({user, ...props}) => {
+  return (
+    <StyledUserListElement {...props}>
+      <StyledAvatar user={user} size={24} className="avatar" />
+      <StyledNameOrEmail>{user.name || user.email}</StyledNameOrEmail>
+    </StyledUserListElement>
+  );
+};
+
+UserListElement.propTypes = {
+  user: PropTypes.object,
+};
+
+const StyledUserListElement = styled('div')`
+  display: flex;
+  align-items: center;
+  padding: 0.25em 0;
+`;
+
+const StyledNameOrEmail = styled('div')`
+  flex-shrink: 1;
+  min-width: 0;
+  ${overflowEllipsis};
+`;
+
+const StyledAvatar = styled(props => <Avatar {...props} />)`
+  min-width: 1.75em;
+  min-height: 1.75em;
+  width: 1.5em;
+  height: 1.5em;
+  margin-right: 0.33em;
+`;
+
+export default UserListElement;
diff --git a/src/sentry/static/sentry/app/styles/overflowEllipsis.jsx b/src/sentry/static/sentry/app/styles/overflowEllipsis.jsx
new file mode 100644
index 0000000000..a3f352e470
--- /dev/null
+++ b/src/sentry/static/sentry/app/styles/overflowEllipsis.jsx
@@ -0,0 +1,7 @@
+export default `
+  display: block;
+  white-space: nowrap;
+  overflow: hidden;
+  text-overflow: ellipsis;
+  width: 100%;
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
index 5da009544a..c41b353fc1 100644
--- a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
@@ -4,7 +4,9 @@ import styled from 'react-emotion';
 
 import ApiMixin from '../../../mixins/apiMixin';
 import UserBadge from '../../../components/userBadge';
+import UserListElement from '../../../components/userListElement';
 import Button from '../../../components/buttons/button';
+import Link from '../../../components/link';
 import DropdownAutoComplete from '../../../components/dropdownAutoComplete';
 import DropdownButton from '../../../components/dropdownButton';
 import IndicatorStore from '../../../stores/indicatorStore';
@@ -158,12 +160,14 @@ const TeamMembers = createReactClass({
 
     if (!access.has('org:write')) {
       return (
-        <a
-          className="btn btn-default btn-disabled tip pull-right"
+        <DropdownButton
+          disabled={true}
           title={t('You do not have enough permission to add new members')}
+          isOpen={false}
+          size="xsmall"
         >
-          <span className="icon-plus" /> {t('Add Member')}
-        </a>
+          {t('Add Member')}
+        </DropdownButton>
       );
     }
 
@@ -173,27 +177,33 @@ const TeamMembers = createReactClass({
       .filter(m => !existingMembers.has(m.id))
       .map(m => {
         return {
+          searchKey: `${m.name} ${m.email}`,
           value: m.id,
-          label: m.name || m.email,
+          label: <StyledUserListElement user={m} />,
         };
       });
 
+    let dropdownLabel = (
+      <StyledMembersLabel>
+        {t('Members')}
+        <StyledCreateMemberLink
+          to={`/settings/organization/${params.orgId}/members/new/`}
+        >
+          {t('Add Member')}
+        </StyledCreateMemberLink>
+      </StyledMembersLabel>
+    );
+
+    let group = {
+      label: dropdownLabel,
+      value: 'members-label',
+    };
+
     return (
-      <DropdownAutoComplete
-        items={items}
-        onSelect={this.addTeamMember}
-        action={
-          <Button
-            priority="primary"
-            to={`/settings/organization/${params.orgId}/members/new/`}
-          >
-            Add New Organization Member
-          </Button>
-        }
-      >
+      <DropdownAutoComplete items={[{items, group}]} onSelect={this.addTeamMember}>
         {({isOpen, selectedItem}) => (
-          <DropdownButton isOpen={isOpen}>
-            <span className="icon-plus" /> {t('Add Member')}
+          <DropdownButton isOpen={isOpen} size="xsmall">
+            {t('Add Member')}
           </DropdownButton>
         )}
       </DropdownAutoComplete>
@@ -259,4 +269,23 @@ const StyledMemberContainer = styled('div')`
   border-bottom: 1px solid ${p => p.theme.borderLight};
 `;
 
+const StyledUserListElement = styled(UserListElement)`
+  width: 250px;
+  font-size: 0.875em;
+  &:hover {
+    cursor: pointer;
+  }
+`;
+
+const StyledMembersLabel = styled('div')`
+  font-size: 0.875em;
+  padding: 0.75em 0;
+  text-transform: uppercase;
+`;
+
+const StyledCreateMemberLink = styled(Link)`
+  float: right;
+  text-transform: none;
+`;
+
 export default TeamMembers;
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index 6a4bd8c47f..cfa63260d1 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -55,7 +55,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
 
 .glamor-11 {
   position: relative;
-  z-index: 1;
+  z-index: 2;
   box-shadow: none;
 }
 
@@ -165,6 +165,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                               }
                             >
                               <DropdownAutoComplete
+                                alignMenu="right"
                                 isOpen={false}
                                 items={
                                   Array [
@@ -177,6 +178,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                 onSelect={[Function]}
                               >
                                 <DropdownAutoCompleteMenu
+                                  alignMenu="right"
                                   isOpen={false}
                                   items={
                                     Array [
diff --git a/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
index 31d715fcc5..0f5003c240 100644
--- a/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
@@ -18,6 +18,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
               Create a new team
             </Button>
           }
+          alignMenu="right"
           isOpen={false}
           items={
             Array [
diff --git a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
index cb309aefe0..5b79d3b403 100644
--- a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
@@ -18,17 +18,26 @@ exports[`TeamMembers render() renders 1`] = `
         }
       >
         <DropdownAutoComplete
-          action={
-            <Button
-              disabled={false}
-              priority="primary"
-              to="/settings/organization/org-slug/members/new/"
-            >
-              Add New Organization Member
-            </Button>
-          }
+          alignMenu="right"
           isOpen={false}
-          items={Array []}
+          items={
+            Array [
+              Object {
+                "group": Object {
+                  "label": <StyledMembersLabel>
+                    Members
+                    <StyledCreateMemberLink
+                      to="/settings/organization/org-slug/members/new/"
+                    >
+                      Add Member
+                    </StyledCreateMemberLink>
+                  </StyledMembersLabel>,
+                  "value": "members-label",
+                },
+                "items": Array [],
+              },
+            ]
+          }
           onSelect={[Function]}
         />
       </div>
