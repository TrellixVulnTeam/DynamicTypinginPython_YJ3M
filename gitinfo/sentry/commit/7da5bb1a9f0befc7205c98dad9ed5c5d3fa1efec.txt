commit 7da5bb1a9f0befc7205c98dad9ed5c5d3fa1efec
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Fri Mar 27 15:15:07 2020 -0400

    feat(apm): Hide missing instrumentation spans for JS transactions (#17887)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx
index 2aeac0f3ef..9035e6b51a 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx
@@ -11,6 +11,7 @@ import {
   SpanChildrenLookupType,
   ParsedTraceType,
   GapSpanType,
+  SentryTransactionEvent,
 } from './types';
 import {
   boundsGenerator,
@@ -42,6 +43,7 @@ type PropType = {
   trace: ParsedTraceType;
   dragProps: DragManagerChildrenProps;
   filterSpans: FilterSpans | undefined;
+  event: SentryTransactionEvent;
 };
 
 class SpanTree extends React.Component<PropType> {
@@ -135,7 +137,7 @@ class SpanTree extends React.Component<PropType> {
     generateBounds: (bounds: SpanBoundsType) => SpanGeneratedBoundsType;
     previousSiblingEndTimestamp: undefined | number;
   }): RenderedSpanTree => {
-    const {orgId, eventView} = this.props;
+    const {orgId, eventView, event} = this.props;
 
     const spanBarColour: string = pickSpanBarColour(getSpanOperation(span));
     const spanChildren: Array<RawSpanType> = get(childSpans, getSpanID(span), []);
@@ -152,11 +154,16 @@ class SpanTree extends React.Component<PropType> {
 
     const isSpanDisplayed = !isCurrentSpanHidden && !isCurrentSpanFilteredOut;
 
+    // hide gap spans (i.e. "missing instrumentation" spans) for browser js transactions,
+    // since they're not useful to indicate
+    const shouldIncludeGap = !isJavaScriptSDK(event.sdk?.name);
+
     const isValidGap =
       typeof previousSiblingEndTimestamp === 'number' &&
       previousSiblingEndTimestamp < span.start_timestamp &&
       // gap is at least 100 ms
-      span.start_timestamp - previousSiblingEndTimestamp >= 0.1;
+      span.start_timestamp - previousSiblingEndTimestamp >= 0.1 &&
+      shouldIncludeGap;
 
     const spanGroupNumber = isValidGap && isSpanDisplayed ? spanNumber + 1 : spanNumber;
 
@@ -335,4 +342,12 @@ const TraceViewContainer = styled('div')`
   border-bottom-right-radius: 3px;
 `;
 
+function isJavaScriptSDK(sdkName?: string): boolean {
+  if (!sdkName) {
+    return false;
+  }
+  // based on https://github.com/getsentry/sentry-javascript/blob/master/packages/browser/src/version.ts
+  return sdkName.toLowerCase() === 'sentry.javascript.browser';
+}
+
 export default SpanTree;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/traceView.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/traceView.tsx
index d9a812525a..9e35ae67a3 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/traceView.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/traceView.tsx
@@ -213,6 +213,7 @@ class TraceView extends React.PureComponent<Props, State> {
           >
             {this.renderHeader(dragProps, parsedTrace)}
             <SpanTree
+              event={event}
               eventView={eventView}
               trace={parsedTrace}
               dragProps={dragProps}
