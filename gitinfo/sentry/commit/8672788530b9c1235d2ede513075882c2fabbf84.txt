commit 8672788530b9c1235d2ede513075882c2fabbf84
Author: adhiraj <693121+adhiraj@users.noreply.github.com>
Date:   Thu Sep 13 11:30:42 2018 -0700

    fix(analytics): Change team joined event to organization joined (#9746)
    
    Organization joined was what I was trying to capture.
    
    Fixes SENTRY-7MZ.

diff --git a/src/sentry/analytics/events/team_joined.py b/src/sentry/analytics/events/organization_joined.py
similarity index 57%
rename from src/sentry/analytics/events/team_joined.py
rename to src/sentry/analytics/events/organization_joined.py
index 8ef131ebd2..59a60abcda 100644
--- a/src/sentry/analytics/events/team_joined.py
+++ b/src/sentry/analytics/events/organization_joined.py
@@ -3,14 +3,13 @@ from __future__ import absolute_import
 from sentry import analytics
 
 
-class TeamJoinedEvent(analytics.Event):
-    type = 'team.joined'
+class OrganizationJoinedEvent(analytics.Event):
+    type = 'organization.joined'
 
     attributes = (
         analytics.Attribute('user_id'),
         analytics.Attribute('organization_id'),
-        analytics.Attribute('team_id'),
     )
 
 
-analytics.register(TeamJoinedEvent)
+analytics.register(OrganizationJoinedEvent)
diff --git a/src/sentry/api/endpoints/organization_access_request_details.py b/src/sentry/api/endpoints/organization_access_request_details.py
index 409430ed4f..45a5400fdf 100644
--- a/src/sentry/api/endpoints/organization_access_request_details.py
+++ b/src/sentry/api/endpoints/organization_access_request_details.py
@@ -8,7 +8,6 @@ from sentry.api.bases.organization import (OrganizationEndpoint, OrganizationPer
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.serializers import serialize
 from sentry.models import (AuditLogEntryEvent, OrganizationAccessRequest, OrganizationMemberTeam)
-from sentry.signals import team_joined
 
 
 class AccessRequestPermission(OrganizationPermission):
@@ -131,12 +130,6 @@ class OrganizationAccessRequestDetailsEndpoint(OrganizationEndpoint):
                     event=AuditLogEntryEvent.MEMBER_JOIN_TEAM,
                     data=omt.get_audit_log_data(),
                 )
-                team_joined.send_robust(
-                    organization=organization,
-                    user=access_request.member.user,
-                    team=access_request.team,
-                    sender=self.__class__,
-                )
 
                 access_request.send_approved_email()
 
diff --git a/src/sentry/api/endpoints/organization_member_team_details.py b/src/sentry/api/endpoints/organization_member_team_details.py
index 2283f98501..e3cdffe029 100644
--- a/src/sentry/api/endpoints/organization_member_team_details.py
+++ b/src/sentry/api/endpoints/organization_member_team_details.py
@@ -13,7 +13,6 @@ from sentry.auth.superuser import is_active_superuser
 from sentry.models import (
     AuditLogEntryEvent, OrganizationAccessRequest, OrganizationMember, OrganizationMemberTeam, Team
 )
-from sentry.signals import team_joined
 
 ERR_INSUFFICIENT_ROLE = 'You do not have permission to edit that user\'s membership.'
 
@@ -142,13 +141,6 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
             data=omt.get_audit_log_data(),
         )
 
-        team_joined.send_robust(
-            organization=organization,
-            user=om.user,
-            team=team,
-            sender=self.__class__,
-        )
-
         return Response(serialize(team, request.user, TeamWithProjectsSerializer()), status=201)
 
     def delete(self, request, organization, member_id, team_slug):
diff --git a/src/sentry/receivers/features.py b/src/sentry/receivers/features.py
index 8cd58a865f..14937fb94a 100644
--- a/src/sentry/receivers/features.py
+++ b/src/sentry/receivers/features.py
@@ -30,7 +30,6 @@ from sentry.signals import (
     ownership_rule_created,
     issue_ignored,
     team_created,
-    team_joined,
     issue_deleted,
     integration_added,
     integration_issue_created,
@@ -116,10 +115,15 @@ def record_project_created(project, user, **kwargs):
 
 
 @member_joined.connect(weak=False)
-def record_member_joined(member, **kwargs):
+def record_member_joined(member, organization, **kwargs):
     FeatureAdoption.objects.record(
         organization_id=member.organization_id, feature_slug="invite_team", complete=True
     )
+    analytics.record(
+        'organization.joined',
+        user_id=member.user.id,
+        organization_id=organization.id,
+    )
 
 
 @issue_assigned.connect(weak=False)
@@ -358,16 +362,6 @@ def record_team_created(organization, user, team, **kwargs):
     )
 
 
-@team_joined.connect(weak=False)
-def record_team_joined(organization, user, team, **kwargs):
-    analytics.record(
-        'team.joined',
-        user_id=user.id,
-        organization_id=organization.id,
-        team_id=team.id,
-    )
-
-
 @integration_added.connect(weak=False)
 def record_integration_added(integration, organization, user, **kwargs):
     if user and user.is_authenticated():
diff --git a/src/sentry/receivers/onboarding.py b/src/sentry/receivers/onboarding.py
index 3a2799ef2c..ab029be3df 100644
--- a/src/sentry/receivers/onboarding.py
+++ b/src/sentry/receivers/onboarding.py
@@ -181,7 +181,7 @@ def record_member_invited(member, user, **kwargs):
 
 
 @member_joined.connect(weak=False)
-def record_member_joined(member, **kwargs):
+def record_member_joined(member, organization, **kwargs):
     rows_affected, created = OrganizationOnboardingTask.objects.create_or_update(
         organization_id=member.organization_id,
         task=OnboardingTask.INVITE_MEMBER,
diff --git a/src/sentry/signals.py b/src/sentry/signals.py
index 73402d28b4..05ad32949e 100644
--- a/src/sentry/signals.py
+++ b/src/sentry/signals.py
@@ -68,7 +68,7 @@ project_created = BetterSignal(providing_args=["project", "user"])
 first_event_pending = BetterSignal(providing_args=["project", "user"])
 first_event_received = BetterSignal(providing_args=["project", "group"])
 member_invited = BetterSignal(providing_args=["member", "user"])
-member_joined = BetterSignal(providing_args=["member"])
+member_joined = BetterSignal(providing_args=["member", "organization"])
 issue_tracker_used = BetterSignal(providing_args=["plugin", "project", "user"])
 plugin_enabled = BetterSignal(providing_args=["plugin", "project", "user"])
 
@@ -99,7 +99,6 @@ issue_ignored = BetterSignal(providing_args=["project"])
 
 terms_accepted = BetterSignal(providing_args=["organization", "user", "ip_address"])
 team_created = BetterSignal(providing_args=["organization", "user", "team"])
-team_joined = BetterSignal(providing_args=["organization", "user", "team"])
 integration_added = BetterSignal(providing_args=["integration", "organization", "user"])
 integration_issue_created = BetterSignal(providing_args=["integration", "organization", "user"])
 integration_issue_linked = BetterSignal(providing_args=["integration", "organization", "user"])
diff --git a/src/sentry/web/frontend/accept_organization_invite.py b/src/sentry/web/frontend/accept_organization_invite.py
index ae321cbd20..f2f96092f0 100644
--- a/src/sentry/web/frontend/accept_organization_invite.py
+++ b/src/sentry/web/frontend/accept_organization_invite.py
@@ -145,7 +145,7 @@ class AcceptOrganizationInviteView(BaseView):
                     (organization.name.encode('utf-8'), )
                 )
 
-                member_joined.send(member=om, sender=self)
+                member_joined.send_robust(member=om, organization=organization, sender=self)
 
             request.session.pop('can_register', None)
             response = self.redirect(reverse('sentry-organization-home', args=[organization.slug]))
diff --git a/tests/sentry/receivers/test_featureadoption.py b/tests/sentry/receivers/test_featureadoption.py
index 300b706991..14f20414ec 100644
--- a/tests/sentry/receivers/test_featureadoption.py
+++ b/tests/sentry/receivers/test_featureadoption.py
@@ -627,7 +627,7 @@ class FeatureAdoptionTest(TestCase):
         member = self.create_member(
             organization=self.organization, teams=[self.team], user=self.create_user()
         )
-        member_joined.send(member=member, sender=type(self.project))
+        member_joined.send(member=member, organization=self.organization, sender=type(self.project))
         feature_complete = FeatureAdoption.objects.get_by_slug(
             organization=self.organization, slug="invite_team"
         )
diff --git a/tests/sentry/receivers/test_onboarding.py b/tests/sentry/receivers/test_onboarding.py
index 8baa2b9dbb..205233135c 100644
--- a/tests/sentry/receivers/test_onboarding.py
+++ b/tests/sentry/receivers/test_onboarding.py
@@ -189,7 +189,7 @@ class OrganizationOnboardingTaskTest(TestCase):
     def test_member_joined(self):
         user = self.create_user(email='test@example.org')
         member = self.create_member(organization=self.organization, teams=[self.team], user=user)
-        member_joined.send(member=member, sender=type(member))
+        member_joined.send(member=member, organization=self.organization, sender=type(member))
 
         task = OrganizationOnboardingTask.objects.get(
             organization=self.organization,
@@ -200,7 +200,7 @@ class OrganizationOnboardingTaskTest(TestCase):
 
         user2 = self.create_user(email='test@example.com')
         member2 = self.create_member(organization=self.organization, teams=[self.team], user=user2)
-        member_joined.send(member=member2, sender=type(member2))
+        member_joined.send(member=member2, organization=self.organization, sender=type(member2))
 
         task = OrganizationOnboardingTask.objects.get(
             organization=self.organization,
@@ -270,7 +270,7 @@ class OrganizationOnboardingTaskTest(TestCase):
         first_event_received.send(
             project=second_project, group=second_group, sender=type(second_project)
         )
-        member_joined.send(member=member, sender=type(member))
+        member_joined.send(member=member, organization=self.organization, sender=type(member))
         plugin_enabled.send(
             plugin=IssueTrackingPlugin(),
             project=project,
