commit 129260032ea82f59933f04f1fa11eb7cf0eff48e
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Mar 15 12:27:22 2018 -0700

    feat: Search and pagination for projects / teams
    
    - Add search and pagination to project endpoints
    - Add search and pagination to teams endpoints
    - Add search and pagination to project list UI
    - Update various tests to use stubs
    - Fix query params in AsyncComponent
    - Prioritize props over context in AsyncComponent
      (this fixes an issue where context.location is being mutated vs copied so things dont reload)

diff --git a/src/sentry/api/endpoints/organization_projects.py b/src/sentry/api/endpoints/organization_projects.py
index 020b1155af..d6cfb7fbf4 100644
--- a/src/sentry/api/endpoints/organization_projects.py
+++ b/src/sentry/api/endpoints/organization_projects.py
@@ -1,13 +1,17 @@
 from __future__ import absolute_import
 
+import six
+
+from django.db.models import Q
 from rest_framework.response import Response
 
-from sentry.api.base import DocSection
+from sentry.api.base import DocSection, EnvironmentMixin
 from sentry.api.bases.organization import OrganizationEndpoint
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.project import ProjectSummarySerializer
 from sentry.models import Project, Team
+from sentry.search.utils import tokenize_query
 from sentry.utils.apidocs import scenario, attach_scenarios
 
 ERR_INVALID_STATS_PERIOD = "Invalid stats_period. Valid choices are '', '24h', '14d', and '30d'"
@@ -18,7 +22,7 @@ def list_organization_projects_scenario(runner):
     runner.request(method='GET', path='/organizations/%s/projects/' % runner.org.slug)
 
 
-class OrganizationProjectsEndpoint(OrganizationEndpoint):
+class OrganizationProjectsEndpoint(OrganizationEndpoint, EnvironmentMixin):
     doc_section = DocSection.ORGANIZATIONS
 
     @attach_scenarios([list_organization_projects_scenario])
@@ -79,11 +83,26 @@ class OrganizationProjectsEndpoint(OrganizationEndpoint):
                 teams__in=team_list,
             ).prefetch_related('teams')
 
+        query = request.GET.get('query')
+        if query:
+            tokens = tokenize_query(query)
+            for key, value in six.iteritems(tokens):
+                if key == 'query':
+                    value = ' '.join(value)
+                    queryset = queryset.filter(Q(name__icontains=value) | Q(slug__icontains=value))
+                else:
+                    queryset = queryset.none()
+        queryset = queryset.distinct()
+
         return self.paginate(
             request=request,
             queryset=queryset,
             order_by='slug',
             on_results=lambda x: serialize(x, request.user, ProjectSummarySerializer(
+                environment_id=self._get_environment_id_from_request(
+                    request,
+                    organization.id,
+                ),
                 stats_period=stats_period,
             )),
             paginator_cls=OffsetPaginator,
diff --git a/src/sentry/api/endpoints/organization_stats.py b/src/sentry/api/endpoints/organization_stats.py
index 70e969f39c..a162309d90 100644
--- a/src/sentry/api/endpoints/organization_stats.py
+++ b/src/sentry/api/endpoints/organization_stats.py
@@ -55,12 +55,19 @@ class OrganizationStatsEndpoint(OrganizationEndpoint, EnvironmentMixin, StatsMix
                 user=request.user,
             )
 
-            project_list = []
-            for team in team_list:
-                project_list.extend(Project.objects.get_for_user(
-                    team=team,
-                    user=request.user,
-                ))
+            project_ids = request.GET.getlist('projectID')
+            if not project_ids:
+                project_list = []
+                for team in team_list:
+                    project_list.extend(Project.objects.get_for_user(
+                        team=team,
+                        user=request.user,
+                    ))
+            else:
+                project_list = Project.objects.filter(
+                    team__in=team_list,
+                    id__in=project_ids,
+                )
             keys = list({p.id for p in project_list})
         else:
             raise ValueError('Invalid group: %s' % group)
diff --git a/src/sentry/api/endpoints/organization_teams.py b/src/sentry/api/endpoints/organization_teams.py
index 80d1625cb4..6c5c46600e 100644
--- a/src/sentry/api/endpoints/organization_teams.py
+++ b/src/sentry/api/endpoints/organization_teams.py
@@ -1,16 +1,21 @@
 from __future__ import absolute_import
 
+import six
+
 from django.db import IntegrityError, transaction
+from django.db.models import Q
 from rest_framework import serializers, status
 from rest_framework.response import Response
 
 from sentry.api.base import DocSection
 from sentry.api.bases.organization import OrganizationEndpoint, OrganizationPermission
+from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.team import TeamWithProjectsSerializer
 from sentry.models import (
     AuditLogEntryEvent, OrganizationMember, OrganizationMemberTeam, Team, TeamStatus
 )
+from sentry.search.utils import tokenize_query
 from sentry.utils.apidocs import scenario, attach_scenarios
 
 CONFLICTING_SLUG_ERROR = 'A team with this slug already exists.'
@@ -70,15 +75,29 @@ class OrganizationTeamsEndpoint(OrganizationEndpoint):
         if request.auth and hasattr(request.auth, 'project'):
             return Response(status=403)
 
-        team_list = list(
-            Team.objects.filter(
-                organization=organization,
-                status=TeamStatus.VISIBLE,
-            ).order_by('name', 'slug')
+        queryset = Team.objects.filter(
+            organization=organization,
+            status=TeamStatus.VISIBLE,
+        ).order_by('slug')
+
+        query = request.GET.get('query')
+        if query:
+            tokens = tokenize_query(query)
+            for key, value in six.iteritems(tokens):
+                if key == 'query':
+                    value = ' '.join(value)
+                    queryset = queryset.filter(Q(name__icontains=value) | Q(slug__icontains=value))
+                else:
+                    queryset = queryset.none()
+
+        return self.paginate(
+            request=request,
+            queryset=queryset,
+            order_by='slug',
+            on_results=lambda x: serialize(x, request.user, TeamWithProjectsSerializer()),
+            paginator_cls=OffsetPaginator,
         )
 
-        return Response(serialize(team_list, request.user, TeamWithProjectsSerializer()))
-
     @attach_scenarios([create_new_team_scenario])
     def post(self, request, organization):
         """
diff --git a/src/sentry/api/endpoints/team_project_index.py b/src/sentry/api/endpoints/team_projects.py
similarity index 86%
rename from src/sentry/api/endpoints/team_project_index.py
rename to src/sentry/api/endpoints/team_projects.py
index e09235305e..0ade826f3f 100644
--- a/src/sentry/api/endpoints/team_project_index.py
+++ b/src/sentry/api/endpoints/team_projects.py
@@ -4,8 +4,9 @@ from django.db import IntegrityError, transaction
 from rest_framework import serializers, status
 from rest_framework.response import Response
 
-from sentry.api.base import DocSection
+from sentry.api.base import DocSection, EnvironmentMixin
 from sentry.api.bases.team import TeamEndpoint, TeamPermission
+from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize, ProjectSummarySerializer
 from sentry.models import Project, ProjectStatus, AuditLogEntryEvent
 from sentry.signals import project_created
@@ -53,7 +54,7 @@ class TeamProjectPermission(TeamPermission):
     }
 
 
-class TeamProjectIndexEndpoint(TeamEndpoint):
+class TeamProjectsEndpoint(TeamEndpoint, EnvironmentMixin):
     doc_section = DocSection.TEAMS
     permission_classes = (TeamProjectPermission, )
 
@@ -70,14 +71,13 @@ class TeamProjectIndexEndpoint(TeamEndpoint):
         :pparam string team_slug: the slug of the team to list the projects of.
         :auth: required
         """
-        if request.user.is_authenticated():
-            results = list(Project.objects.get_for_user(team=team, user=request.user))
+        if request.auth and hasattr(request.auth, 'project'):
+            queryset = Project.objects.filter(id=request.auth.project.id)
         else:
-            # TODO(dcramer): status should be selectable
-            results = list(Project.objects.filter(
+            queryset = Project.objects.filter(
                 teams=team,
                 status=ProjectStatus.VISIBLE,
-            ))
+            )
 
         stats_period = request.GET.get('statsPeriod')
         if stats_period not in (None, '', '24h', '14d', '30d'):
@@ -97,9 +97,19 @@ class TeamProjectIndexEndpoint(TeamEndpoint):
             # disable stats
             stats_period = None
 
-        return Response(serialize(results, request.user, ProjectSummarySerializer(
-            stats_period=stats_period,
-        )))
+        return self.paginate(
+            request=request,
+            queryset=queryset,
+            order_by='slug',
+            on_results=lambda x: serialize(x, request.user, ProjectSummarySerializer(
+                environment_id=self._get_environment_id_from_request(
+                    request,
+                    team.organization.id,
+                ),
+                stats_period=stats_period,
+            )),
+            paginator_cls=OffsetPaginator,
+        )
 
     @attach_scenarios([create_project_scenario])
     def post(self, request, team):
diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index 014ad322b9..7a154f063f 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -43,10 +43,11 @@ class ProjectSerializer(Serializer):
     such as "show all projects for this organization", and its attributes be kept to a minimum.
     """
 
-    def __init__(self, stats_period=None):
+    def __init__(self, environment_id=None, stats_period=None):
         if stats_period is not None:
             assert stats_period in STATS_PERIOD_CHOICES
 
+        self.environment_id = environment_id
         self.stats_period = stats_period
 
     def get_access_by_project(self, item_list, user):
@@ -119,11 +120,12 @@ class ProjectSerializer(Serializer):
             segments, interval = STATS_PERIOD_CHOICES[self.stats_period]
             now = timezone.now()
             stats = tsdb.get_range(
-                model=tsdb.models.project_total_received,
+                model=tsdb.models.project,
                 keys=project_ids,
                 end=now,
                 start=now - ((segments - 1) * interval),
                 rollup=int(interval.total_seconds()),
+                environment_id=self.environment_id,
             )
         else:
             stats = None
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 70bd02064d..f4db41c693 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -135,7 +135,7 @@ from .endpoints.team_details import TeamDetailsEndpoint
 from .endpoints.team_groups_new import TeamGroupsNewEndpoint
 from .endpoints.team_groups_trending import TeamGroupsTrendingEndpoint
 from .endpoints.team_members import TeamMembersEndpoint
-from .endpoints.team_project_index import TeamProjectIndexEndpoint
+from .endpoints.team_projects import TeamProjectsEndpoint
 from .endpoints.team_stats import TeamStatsEndpoint
 from .endpoints.useravatar import UserAvatarEndpoint
 from .endpoints.user_appearance import UserAppearanceEndpoint
@@ -513,7 +513,7 @@ urlpatterns = patterns(
     ),
     url(
         r'^teams/(?P<organization_slug>[^\/]+)/(?P<team_slug>[^\/]+)/projects/$',
-        TeamProjectIndexEndpoint.as_view(),
+        TeamProjectsEndpoint.as_view(),
         name='sentry-api-0-team-project-index'
     ),
     url(
diff --git a/src/sentry/static/sentry/app/components/asyncComponent.jsx b/src/sentry/static/sentry/app/components/asyncComponent.jsx
index 2560d78c52..7a6c36fe28 100644
--- a/src/sentry/static/sentry/app/components/asyncComponent.jsx
+++ b/src/sentry/static/sentry/app/components/asyncComponent.jsx
@@ -10,6 +10,10 @@ import PermissionDenied from '../views/permissionDenied';
 import RouteError from './../views/routeError';
 
 class AsyncComponent extends React.Component {
+  static propTypes = {
+    location: PropTypes.object,
+  };
+
   static contextTypes = {
     router: PropTypes.object,
   };
@@ -30,13 +34,14 @@ class AsyncComponent extends React.Component {
 
   componentWillReceiveProps(nextProps, nextContext) {
     const isRouterInContext = !!this.context.router;
+    const isLocationInProps = nextProps.location !== undefined;
 
-    const currentLocation = isRouterInContext
-      ? this.context.router.location
-      : this.props.location;
-    const nextLocation = isRouterInContext
-      ? nextContext.router.location
-      : nextProps.location;
+    const currentLocation = isLocationInProps
+      ? this.props.location
+      : isRouterInContext ? this.context.router.location : null;
+    const nextLocation = isLocationInProps
+      ? nextProps.location
+      : isRouterInContext ? nextContext.router.location : null;
 
     // re-fetch data when router params change
     if (
@@ -92,10 +97,12 @@ class AsyncComponent extends React.Component {
     endpoints.forEach(([stateKey, endpoint, params, options]) => {
       options = options || {};
       let locationQuery = (this.props.location && this.props.location.query) || {};
-      let paramsQuery = (params && params.query) || {};
+      let query = (params && params.query) || {};
       // If paginate option then pass entire `query` object to API call
       // It should only be expecting `query.cursor` for pagination
-      let query = options.paginate && {...locationQuery, ...paramsQuery};
+      if (options.paginate) {
+        query = {...locationQuery, ...query};
+      }
 
       this.api.request(endpoint, {
         method: 'GET',
diff --git a/src/sentry/static/sentry/app/proptypes.jsx b/src/sentry/static/sentry/app/proptypes.jsx
index 9fbbcc6ee0..973f792d4b 100644
--- a/src/sentry/static/sentry/app/proptypes.jsx
+++ b/src/sentry/static/sentry/app/proptypes.jsx
@@ -111,15 +111,32 @@ export const Actor = PropTypes.shape({
   name: PropTypes.string.isRequired,
 });
 
+export const Team = PropTypes.shape({
+  id: PropTypes.string.isRequired,
+  slug: PropTypes.string.isRequired,
+});
+
 export const Project = PropTypes.shape({
   id: PropTypes.string.isRequired,
   name: PropTypes.string.isRequired,
   slug: PropTypes.string.isRequired,
+  isBookmarked: PropTypes.bool.isRequired,
+  teams: PropTypes.arrayOf(Team).isRequired,
+  status: PropTypes.string,
+});
+
+export const ProjectDetail = PropTypes.shape({
+  id: PropTypes.string.isRequired,
+  name: PropTypes.string.isRequired,
+  slug: PropTypes.string.isRequired,
+  dateCreated: PropTypes.string.isRequired,
+  isBookmarked: PropTypes.bool.isRequired,
+  isMember: PropTypes.bool.isRequired,
+  hasAccess: PropTypes.bool.isRequired,
+  teams: PropTypes.arrayOf(Team).isRequired,
   color: PropTypes.string,
-  dateCreated: PropTypes.string,
   features: PropTypes.arrayOf(PropTypes.string),
   firstEvent: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
-  isBookmarked: PropTypes.bool,
   isPublic: PropTypes.bool,
   platform: PropTypes.string,
   stats: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),
@@ -156,6 +173,8 @@ export const Environment = PropTypes.shape({
   name: PropTypes.string.isRequired,
 });
 
+export const PageLinks = PropTypes.string;
+
 export const Plugin = {
   assets: PropTypes.array,
   author: PropTypes.shape({
@@ -224,13 +243,12 @@ let SentryTypes = {
     id: PropTypes.string.isRequired,
   }),
   Tag,
+  PageLinks,
   Project,
   TagKey: PropTypes.shape({
     key: PropTypes.string.isRequired,
   }),
-  Team: PropTypes.shape({
-    id: PropTypes.string.isRequired,
-  }),
+  Team,
   NavigationObject,
   Member,
   Plugin,
diff --git a/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx b/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx
index 0a24513b7a..cf1d1850e7 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx
@@ -1,15 +1,12 @@
 import React from 'react';
-import createReactClass from 'create-react-class';
-import Reflux from 'reflux';
+import PropTypes from 'prop-types';
+import idx from 'idx';
 import {Box} from 'grid-emotion';
 
-import {loadStats} from '../../../../actionCreators/projects';
 import {t} from '../../../../locale';
-import ApiMixin from '../../../../mixins/apiMixin';
 import {getOrganizationState} from '../../../../mixins/organizationState';
 import OrganizationSettingsView from '../../../organizationSettingsView';
 import ProjectStatsGraph from './projectStatsGraph';
-import ProjectsStore from '../../../../stores/projectsStore';
 import SentryTypes from '../../../../proptypes';
 import {sortProjects} from '../../../../utils';
 import Panel from '../../components/panel';
@@ -20,19 +17,66 @@ import ProjectListItem from '../../../settings/components/settingsProjectItem';
 import SettingsPageHeader from '../../components/settingsPageHeader';
 import Button from '../../../../components/buttons/button';
 import EmptyMessage from '../../components/emptyMessage';
+import Pagination from '../../../../components/pagination';
 
-class OrganizationProjectsView extends OrganizationSettingsView {
+export default class OrganizationProjectsView extends OrganizationSettingsView {
   static contextTypes = {
+    router: PropTypes.object.isRequired,
     organization: SentryTypes.Organization,
   };
 
+  getEndpoints() {
+    let {orgId} = this.props.params;
+    return [
+      [
+        'projectList',
+        `/organizations/${orgId}/projects/`,
+        {
+          query: {
+            query: idx(this.props, _ => _.location.query.query),
+          },
+        },
+      ],
+      [
+        'projectStats',
+        `/organizations/${orgId}/stats/`,
+        {
+          query: {
+            since: new Date().getTime() / 1000 - 3600 * 24,
+            stat: 'generated',
+            group: 'project',
+          },
+        },
+      ],
+    ];
+  }
+
+  getDefaultState() {
+    return {
+      ...super.getDefaultState(),
+      searchQuery: idx(this.props, _ => _.location.query.query),
+    };
+  }
+
   getTitle() {
     let org = this.context.organization;
     return `${org.name} Projects`;
   }
 
+  onSearch = e => {
+    let {router} = this.context;
+    let {location} = this.props;
+    e.preventDefault();
+    router.push({
+      pathname: location.pathname,
+      query: {
+        query: this.state.searchQuery,
+      },
+    });
+  };
+
   renderBody() {
-    let {projects} = this.props;
+    let {projectList, projectListPageLinks, projectStats} = this.state;
     let {organization} = this.context;
     let canCreateProjects = getOrganizationState(this.context.organization)
       .getAccess()
@@ -59,9 +103,19 @@ class OrganizationProjectsView extends OrganizationSettingsView {
       <div>
         <SettingsPageHeader title="Projects" action={action} />
         <Panel className="table table-no-top-border m-b-0">
-          <PanelHeader>{t('Projects')}</PanelHeader>
+          <PanelHeader>
+            <form className="pull-right" onSubmit={this.onSearch}>
+              <input
+                value={this.state.searchQuery}
+                onChange={e => this.setState({searchQuery: e.target.value})}
+                className="search"
+                placeholder="search"
+              />
+            </form>
+            {t('Projects')}
+          </PanelHeader>
           <PanelBody css={{width: '100%'}}>
-            {sortProjects(projects).map((project, i) => (
+            {sortProjects(projectList).map((project, i) => (
               <PanelItem p={0} key={project.id} align="center">
                 <Box p={2} flex="1">
                   <ProjectListItem
@@ -70,7 +124,11 @@ class OrganizationProjectsView extends OrganizationSettingsView {
                   />
                 </Box>
                 <Box w={3 / 12} p={2}>
-                  <ProjectStatsGraph key={project.id} project={project} />
+                  <ProjectStatsGraph
+                    key={project.id}
+                    project={project}
+                    stats={projectStats[project.id]}
+                  />
                 </Box>
                 <Box p={2} align="right">
                   <Button size="small" to={`/${organization.slug}/${project.slug}/`}>
@@ -79,46 +137,15 @@ class OrganizationProjectsView extends OrganizationSettingsView {
                 </Box>
               </PanelItem>
             ))}
-            {projects.length === 0 && (
+            {projectList.length === 0 && (
               <EmptyMessage>{t('No projects found.')}</EmptyMessage>
             )}
           </PanelBody>
         </Panel>
+        {projectListPageLinks && (
+          <Pagination pageLinks={projectListPageLinks} {...this.props} />
+        )}
       </div>
     );
   }
 }
-
-const OrganizationProjectsViewContainer = createReactClass({
-  displayName: 'OrganizationProjectsViewContainer',
-  mixins: [ApiMixin, Reflux.listenTo(ProjectsStore, 'onProjectUpdate')],
-
-  getInitialState() {
-    return {
-      projects: ProjectsStore.getAll(),
-    };
-  },
-
-  componentDidMount() {
-    loadStats(this.api, {
-      orgId: this.props.params.orgId,
-      query: {
-        since: new Date().getTime() / 1000 - 3600 * 24,
-        stat: 'generated',
-        group: 'project',
-      },
-    });
-  },
-
-  onProjectUpdate() {
-    this.setState({
-      projects: ProjectsStore.getAll(),
-    });
-  },
-
-  render() {
-    return <OrganizationProjectsView {...this.props} projects={this.state.projects} />;
-  },
-});
-
-export default OrganizationProjectsViewContainer;
diff --git a/src/sentry/static/sentry/app/views/settings/organization/projects/projectStatsGraph.jsx b/src/sentry/static/sentry/app/views/settings/organization/projects/projectStatsGraph.jsx
index 19835b74b9..470f5c420d 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/projects/projectStatsGraph.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/projects/projectStatsGraph.jsx
@@ -1,5 +1,6 @@
 import LazyLoad from 'react-lazy-load';
 import React from 'react';
+import PropTypes from 'prop-types';
 
 import createReactClass from 'create-react-class';
 
@@ -11,13 +12,15 @@ const ProjectStatsGraph = createReactClass({
 
   propTypes: {
     project: SentryTypes.Project,
+    stats: PropTypes.array,
   },
 
   render() {
     let {project} = this.props;
+    let stats = this.props.stats || project.stats;
     let chartData =
-      project.stats &&
-      project.stats.map(point => {
+      stats &&
+      stats.map(point => {
         return {x: point[0], y: point[1]};
       });
 
diff --git a/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
index dc74048224..76c81336b3 100644
--- a/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
@@ -126,327 +126,357 @@ exports[`OrganizationProjectsView render() Should render the projects in the sto
   padding: 16px;
 }
 
-<OrganizationProjectsViewContainer
+<OrganizationProjectsView
   params={
     Object {
       "orgId": "org-slug",
     }
   }
 >
-  <OrganizationProjectsView
-    params={
-      Object {
-        "orgId": "org-slug",
-      }
-    }
-    projects={
-      Array [
-        Object {
-          "hasAccess": true,
-          "id": "2",
-          "isBookmarked": false,
-          "isMember": true,
-          "name": "Project Name",
-          "slug": "project-slug",
-          "teams": Array [],
-        },
-      ]
-    }
+  <SideEffect(DocumentTitle)
+    title="Organization Name Projects"
   >
-    <SideEffect(DocumentTitle)
+    <DocumentTitle
       title="Organization Name Projects"
     >
-      <DocumentTitle
-        title="Organization Name Projects"
-      >
-        <div>
-          <SettingsPageHeading
-            action={
-              <Button
-                disabled={false}
-                icon="icon-circle-add"
-                priority="primary"
-                size="small"
-                title={undefined}
-                to="/organizations/org-slug/projects/new/"
-              >
-                Create Project
-              </Button>
-            }
-            title="Projects"
-          >
-            <Wrapper>
-              <div
-                className="glamor-17 glamor-18"
+      <div>
+        <SettingsPageHeading
+          action={
+            <Button
+              disabled={false}
+              icon="icon-circle-add"
+              priority="primary"
+              size="small"
+              title={undefined}
+              to="/organizations/org-slug/projects/new/"
+            >
+              Create Project
+            </Button>
+          }
+          title="Projects"
+        >
+          <Wrapper>
+            <div
+              className="glamor-17 glamor-18"
+            >
+              <Flex
+                align="center"
               >
-                <Flex
+                <Base
                   align="center"
+                  className="glamor-13"
                 >
-                  <Base
-                    align="center"
+                  <div
                     className="glamor-13"
+                    is={null}
                   >
-                    <div
-                      className="glamor-13"
-                      is={null}
-                    >
-                      <Title>
-                        <div
-                          className="glamor-0 glamor-1"
-                        >
-                          Projects
-                        </div>
-                      </Title>
-                      <div>
-                        <Button
+                    <Title>
+                      <div
+                        className="glamor-0 glamor-1"
+                      >
+                        Projects
+                      </div>
+                    </Title>
+                    <div>
+                      <Button
+                        disabled={false}
+                        icon="icon-circle-add"
+                        priority="primary"
+                        size="small"
+                        to="/organizations/org-slug/projects/new/"
+                      >
+                        <Link
+                          className="button button-primary button-sm"
                           disabled={false}
-                          icon="icon-circle-add"
-                          priority="primary"
-                          size="small"
+                          onClick={[Function]}
+                          onlyActiveOnIndex={false}
+                          role="button"
+                          style={Object {}}
                           to="/organizations/org-slug/projects/new/"
                         >
-                          <Link
+                          <a
                             className="button button-primary button-sm"
                             disabled={false}
                             onClick={[Function]}
-                            onlyActiveOnIndex={false}
                             role="button"
                             style={Object {}}
-                            to="/organizations/org-slug/projects/new/"
                           >
-                            <a
-                              className="button button-primary button-sm"
-                              disabled={false}
-                              onClick={[Function]}
-                              role="button"
-                              style={Object {}}
+                            <Flex
+                              align="center"
+                              className="button-label"
                             >
-                              <Flex
+                              <Base
                                 align="center"
-                                className="button-label"
+                                className="button-label glamor-13"
                               >
-                                <Base
-                                  align="center"
+                                <div
                                   className="button-label glamor-13"
+                                  is={null}
                                 >
-                                  <div
-                                    className="button-label glamor-13"
-                                    is={null}
+                                  <Icon
+                                    size="small"
                                   >
-                                    <Icon
+                                    <Base
+                                      className="glamor-9 glamor-10"
                                       size="small"
                                     >
-                                      <Base
+                                      <div
                                         className="glamor-9 glamor-10"
+                                        is={null}
                                         size="small"
                                       >
-                                        <div
-                                          className="glamor-9 glamor-10"
-                                          is={null}
-                                          size="small"
+                                        <StyledInlineSvg
+                                          size="12px"
+                                          src="icon-circle-add"
                                         >
-                                          <StyledInlineSvg
+                                          <InlineSvg
+                                            className="glamor-5 glamor-2"
                                             size="12px"
                                             src="icon-circle-add"
                                           >
-                                            <InlineSvg
+                                            <StyledSvg
                                               className="glamor-5 glamor-2"
-                                              size="12px"
-                                              src="icon-circle-add"
+                                              height="12px"
+                                              style={Object {}}
+                                              viewBox={Object {}}
+                                              width="12px"
                                             >
-                                              <StyledSvg
-                                                className="glamor-5 glamor-2"
+                                              <svg
+                                                className="glamor-2 glamor-3 glamor-4"
                                                 height="12px"
                                                 style={Object {}}
                                                 viewBox={Object {}}
                                                 width="12px"
                                               >
-                                                <svg
-                                                  className="glamor-2 glamor-3 glamor-4"
-                                                  height="12px"
-                                                  style={Object {}}
-                                                  viewBox={Object {}}
-                                                  width="12px"
-                                                >
-                                                  <use
-                                                    href="#test"
-                                                    xlinkHref="#test"
-                                                  />
-                                                </svg>
-                                              </StyledSvg>
-                                            </InlineSvg>
-                                          </StyledInlineSvg>
-                                        </div>
-                                      </Base>
-                                    </Icon>
-                                    Create Project
-                                  </div>
-                                </Base>
-                              </Flex>
-                            </a>
-                          </Link>
-                        </Button>
-                      </div>
+                                                <use
+                                                  href="#test"
+                                                  xlinkHref="#test"
+                                                />
+                                              </svg>
+                                            </StyledSvg>
+                                          </InlineSvg>
+                                        </StyledInlineSvg>
+                                      </div>
+                                    </Base>
+                                  </Icon>
+                                  Create Project
+                                </div>
+                              </Base>
+                            </Flex>
+                          </a>
+                        </Link>
+                      </Button>
                     </div>
-                  </Base>
-                </Flex>
-              </div>
-            </Wrapper>
-          </SettingsPageHeading>
-          <Panel
+                  </div>
+                </Base>
+              </Flex>
+            </div>
+          </Wrapper>
+        </SettingsPageHeading>
+        <Panel
+          className="table table-no-top-border m-b-0"
+        >
+          <StyledPanel
             className="table table-no-top-border m-b-0"
           >
-            <StyledPanel
-              className="table table-no-top-border m-b-0"
+            <div
+              className="table table-no-top-border m-b-0 glamor-53 glamor-54"
             >
-              <div
-                className="table table-no-top-border m-b-0 glamor-53 glamor-54"
-              >
-                <PanelHeader>
-                  <StyledPanelHeader>
-                    <Component
+              <PanelHeader>
+                <StyledPanelHeader>
+                  <Component
+                    className="glamor-26 glamor-27"
+                  >
+                    <div
                       className="glamor-26 glamor-27"
                     >
-                      <div
-                        className="glamor-26 glamor-27"
-                      >
-                        <StyledPanelHeading>
-                          <Component
+                      <StyledPanelHeading>
+                        <Component
+                          className="glamor-22 glamor-19"
+                        >
+                          <PanelHeading
                             className="glamor-22 glamor-19"
                           >
-                            <PanelHeading
-                              className="glamor-22 glamor-19"
+                            <div
+                              className="glamor-19 glamor-20 glamor-21"
                             >
-                              <div
-                                className="glamor-19 glamor-20 glamor-21"
+                              <form
+                                className="pull-right"
+                                onSubmit={[Function]}
                               >
-                                Projects
-                              </div>
-                            </PanelHeading>
-                          </Component>
-                        </StyledPanelHeading>
-                      </div>
-                    </Component>
-                  </StyledPanelHeader>
-                </PanelHeader>
-                <PanelBody
+                                <input
+                                  className="search"
+                                  onChange={[Function]}
+                                  placeholder="search"
+                                />
+                              </form>
+                              Projects
+                            </div>
+                          </PanelHeading>
+                        </Component>
+                      </StyledPanelHeading>
+                    </div>
+                  </Component>
+                </StyledPanelHeader>
+              </PanelHeader>
+              <PanelBody
+                className="glamor-51"
+                direction="column"
+                disablePadding={true}
+                flex={false}
+              >
+                <div
                   className="glamor-51"
-                  direction="column"
-                  disablePadding={true}
-                  flex={false}
                 >
-                  <div
-                    className="glamor-51"
+                  <PanelItem
+                    align="center"
+                    key="2"
+                    p={0}
                   >
-                    <PanelItem
+                    <StyledPanelItem
                       align="center"
-                      key="2"
                       p={0}
                     >
-                      <StyledPanelItem
+                      <Base
                         align="center"
+                        className="glamor-47 glamor-48"
                         p={0}
                       >
-                        <Base
-                          align="center"
+                        <div
                           className="glamor-47 glamor-48"
-                          p={0}
+                          is={null}
                         >
-                          <div
-                            className="glamor-47 glamor-48"
-                            is={null}
+                          <Box
+                            flex="1"
+                            p={2}
                           >
-                            <Box
+                            <Base
+                              className="glamor-39"
                               flex="1"
                               p={2}
                             >
-                              <Base
+                              <div
                                 className="glamor-39"
-                                flex="1"
-                                p={2}
+                                is={null}
                               >
-                                <div
-                                  className="glamor-39"
-                                  is={null}
-                                >
-                                  <ProjectItem
-                                    organization={
-                                      Object {
-                                        "access": Array [
-                                          "org:read",
-                                          "org:write",
-                                          "org:admin",
-                                          "project:read",
-                                          "project:write",
-                                          "project:admin",
-                                          "team:read",
-                                          "team:write",
-                                          "team:admin",
-                                        ],
-                                        "features": Array [],
-                                        "id": "3",
-                                        "name": "Organization Name",
-                                        "onboardingTasks": Array [],
-                                        "projects": Array [],
-                                        "slug": "org-slug",
-                                        "status": Object {
-                                          "id": "active",
-                                          "name": "active",
-                                        },
-                                        "teams": Array [],
-                                      }
+                                <ProjectItem
+                                  organization={
+                                    Object {
+                                      "access": Array [
+                                        "org:read",
+                                        "org:write",
+                                        "org:admin",
+                                        "project:read",
+                                        "project:write",
+                                        "project:admin",
+                                        "team:read",
+                                        "team:write",
+                                        "team:admin",
+                                      ],
+                                      "features": Array [],
+                                      "id": "3",
+                                      "name": "Organization Name",
+                                      "onboardingTasks": Array [],
+                                      "projects": Array [],
+                                      "slug": "org-slug",
+                                      "status": Object {
+                                        "id": "active",
+                                        "name": "active",
+                                      },
+                                      "teams": Array [],
                                     }
-                                    project={
-                                      Object {
-                                        "hasAccess": true,
-                                        "id": "2",
-                                        "isBookmarked": false,
-                                        "isMember": true,
-                                        "name": "Project Name",
-                                        "slug": "project-slug",
-                                        "teams": Array [],
-                                      }
+                                  }
+                                  project={
+                                    Object {
+                                      "hasAccess": true,
+                                      "id": "2",
+                                      "isBookmarked": false,
+                                      "isMember": true,
+                                      "name": "Project Name",
+                                      "slug": "project-slug",
+                                      "teams": Array [],
                                     }
+                                  }
+                                >
+                                  <div
+                                    className={null}
+                                    key="2"
                                   >
-                                    <div
-                                      className={null}
-                                      key="2"
+                                    <Tooltip
+                                      title="Add to bookmarks"
                                     >
-                                      <Tooltip
+                                      <InlineButton
+                                        className="tip"
+                                        onClick={[Function]}
                                         title="Add to bookmarks"
                                       >
-                                        <InlineButton
-                                          className="tip"
+                                        <button
+                                          className="tip glamor-30 glamor-31"
                                           onClick={[Function]}
                                           title="Add to bookmarks"
                                         >
-                                          <button
-                                            className="tip glamor-30 glamor-31"
-                                            onClick={[Function]}
-                                            title="Add to bookmarks"
-                                          >
-                                            <span
-                                              className="icon-star-outline bookmark"
-                                            />
-                                          </button>
-                                        </InlineButton>
-                                      </Tooltip>
+                                          <span
+                                            className="icon-star-outline bookmark"
+                                          />
+                                        </button>
+                                      </InlineButton>
+                                    </Tooltip>
+                                    <Link
+                                      className="glamor-36"
+                                      to="/settings/organization/org-slug/project/project-slug/"
+                                    >
                                       <Link
                                         className="glamor-36"
+                                        onlyActiveOnIndex={false}
+                                        style={Object {}}
                                         to="/settings/organization/org-slug/project/project-slug/"
                                       >
-                                        <Link
+                                        <a
                                           className="glamor-36"
-                                          onlyActiveOnIndex={false}
+                                          onClick={[Function]}
                                           style={Object {}}
-                                          to="/settings/organization/org-slug/project/project-slug/"
                                         >
-                                          <a
-                                            className="glamor-36"
-                                            onClick={[Function]}
-                                            style={Object {}}
+                                          <StyledProjectLabel
+                                            organization={
+                                              Object {
+                                                "access": Array [
+                                                  "org:read",
+                                                  "org:write",
+                                                  "org:admin",
+                                                  "project:read",
+                                                  "project:write",
+                                                  "project:admin",
+                                                  "team:read",
+                                                  "team:write",
+                                                  "team:admin",
+                                                ],
+                                                "features": Array [],
+                                                "id": "3",
+                                                "name": "Organization Name",
+                                                "onboardingTasks": Array [],
+                                                "projects": Array [],
+                                                "slug": "org-slug",
+                                                "status": Object {
+                                                  "id": "active",
+                                                  "name": "active",
+                                                },
+                                                "teams": Array [],
+                                              }
+                                            }
+                                            project={
+                                              Object {
+                                                "hasAccess": true,
+                                                "id": "2",
+                                                "isBookmarked": false,
+                                                "isMember": true,
+                                                "name": "Project Name",
+                                                "slug": "project-slug",
+                                                "teams": Array [],
+                                              }
+                                            }
                                           >
-                                            <StyledProjectLabel
+                                            <ProjectLabel
+                                              className="glamor-32 glamor-33"
                                               organization={
                                                 Object {
                                                   "access": Array [
@@ -485,7 +515,7 @@ exports[`OrganizationProjectsView render() Should render the projects in the sto
                                                 }
                                               }
                                             >
-                                              <ProjectLabel
+                                              <span
                                                 className="glamor-32 glamor-33"
                                                 organization={
                                                   Object {
@@ -526,161 +556,120 @@ exports[`OrganizationProjectsView render() Should render the projects in the sto
                                                 }
                                               >
                                                 <span
-                                                  className="glamor-32 glamor-33"
-                                                  organization={
-                                                    Object {
-                                                      "access": Array [
-                                                        "org:read",
-                                                        "org:write",
-                                                        "org:admin",
-                                                        "project:read",
-                                                        "project:write",
-                                                        "project:admin",
-                                                        "team:read",
-                                                        "team:write",
-                                                        "team:admin",
-                                                      ],
-                                                      "features": Array [],
-                                                      "id": "3",
-                                                      "name": "Organization Name",
-                                                      "onboardingTasks": Array [],
-                                                      "projects": Array [],
-                                                      "slug": "org-slug",
-                                                      "status": Object {
-                                                        "id": "active",
-                                                        "name": "active",
-                                                      },
-                                                      "teams": Array [],
-                                                    }
-                                                  }
-                                                  project={
-                                                    Object {
-                                                      "hasAccess": true,
-                                                      "id": "2",
-                                                      "isBookmarked": false,
-                                                      "isMember": true,
-                                                      "name": "Project Name",
-                                                      "slug": "project-slug",
-                                                      "teams": Array [],
-                                                    }
-                                                  }
+                                                  className="project-name"
                                                 >
-                                                  <span
-                                                    className="project-name"
-                                                  >
-                                                    Project Name
-                                                  </span>
+                                                  Project Name
                                                 </span>
-                                              </ProjectLabel>
-                                            </StyledProjectLabel>
-                                          </a>
-                                        </Link>
+                                              </span>
+                                            </ProjectLabel>
+                                          </StyledProjectLabel>
+                                        </a>
                                       </Link>
-                                    </div>
-                                  </ProjectItem>
-                                </div>
-                              </Base>
-                            </Box>
-                            <Box
+                                    </Link>
+                                  </div>
+                                </ProjectItem>
+                              </div>
+                            </Base>
+                          </Box>
+                          <Box
+                            p={2}
+                            w={0.25}
+                          >
+                            <Base
+                              className="glamor-41"
                               p={2}
                               w={0.25}
                             >
-                              <Base
+                              <div
                                 className="glamor-41"
-                                p={2}
-                                w={0.25}
+                                is={null}
                               >
-                                <div
-                                  className="glamor-41"
-                                  is={null}
-                                >
-                                  <ProjectListItem
-                                    key="2"
-                                    project={
-                                      Object {
-                                        "hasAccess": true,
-                                        "id": "2",
-                                        "isBookmarked": false,
-                                        "isMember": true,
-                                        "name": "Project Name",
-                                        "slug": "project-slug",
-                                        "teams": Array [],
-                                      }
+                                <ProjectListItem
+                                  key="2"
+                                  project={
+                                    Object {
+                                      "hasAccess": true,
+                                      "id": "2",
+                                      "isBookmarked": false,
+                                      "isMember": true,
+                                      "name": "Project Name",
+                                      "slug": "project-slug",
+                                      "teams": Array [],
                                     }
-                                  >
-                                    <div />
-                                  </ProjectListItem>
-                                </div>
-                              </Base>
-                            </Box>
-                            <Box
+                                  }
+                                >
+                                  <div />
+                                </ProjectListItem>
+                              </div>
+                            </Base>
+                          </Box>
+                          <Box
+                            align="right"
+                            p={2}
+                          >
+                            <Base
                               align="right"
+                              className="glamor-45"
                               p={2}
                             >
-                              <Base
-                                align="right"
+                              <div
                                 className="glamor-45"
-                                p={2}
+                                is={null}
                               >
-                                <div
-                                  className="glamor-45"
-                                  is={null}
+                                <Button
+                                  disabled={false}
+                                  size="small"
+                                  to="/org-slug/project-slug/"
                                 >
-                                  <Button
+                                  <Link
+                                    className="button button-default button-sm"
                                     disabled={false}
-                                    size="small"
+                                    onClick={[Function]}
+                                    onlyActiveOnIndex={false}
+                                    role="button"
+                                    style={Object {}}
                                     to="/org-slug/project-slug/"
                                   >
-                                    <Link
+                                    <a
                                       className="button button-default button-sm"
                                       disabled={false}
                                       onClick={[Function]}
-                                      onlyActiveOnIndex={false}
                                       role="button"
                                       style={Object {}}
-                                      to="/org-slug/project-slug/"
                                     >
-                                      <a
-                                        className="button button-default button-sm"
-                                        disabled={false}
-                                        onClick={[Function]}
-                                        role="button"
-                                        style={Object {}}
+                                      <Flex
+                                        align="center"
+                                        className="button-label"
                                       >
-                                        <Flex
+                                        <Base
                                           align="center"
-                                          className="button-label"
+                                          className="button-label glamor-13"
                                         >
-                                          <Base
-                                            align="center"
+                                          <div
                                             className="button-label glamor-13"
+                                            is={null}
                                           >
-                                            <div
-                                              className="button-label glamor-13"
-                                              is={null}
-                                            >
-                                              View Issues
-                                            </div>
-                                          </Base>
-                                        </Flex>
-                                      </a>
-                                    </Link>
-                                  </Button>
-                                </div>
-                              </Base>
-                            </Box>
-                          </div>
-                        </Base>
-                      </StyledPanelItem>
-                    </PanelItem>
-                  </div>
-                </PanelBody>
-              </div>
-            </StyledPanel>
-          </Panel>
-        </div>
-      </DocumentTitle>
-    </SideEffect(DocumentTitle)>
-  </OrganizationProjectsView>
-</OrganizationProjectsViewContainer>
+                                            View Issues
+                                          </div>
+                                        </Base>
+                                      </Flex>
+                                    </a>
+                                  </Link>
+                                </Button>
+                              </div>
+                            </Base>
+                          </Box>
+                        </div>
+                      </Base>
+                    </StyledPanelItem>
+                  </PanelItem>
+                </div>
+              </PanelBody>
+            </div>
+          </StyledPanel>
+        </Panel>
+      </div>
+    </DocumentTitle>
+  </SideEffect(DocumentTitle)>
+</OrganizationProjectsView>
 `;
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
index f69b59dfea..6af27a6f19 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
@@ -36,15 +36,63 @@ exports[`GroupActions render() renders correctly 1`] = `
     onDiscard={[Function]}
     organization={
       Object {
+        "access": Array [
+          "org:read",
+          "org:write",
+          "org:admin",
+          "project:read",
+          "project:write",
+          "project:admin",
+          "team:read",
+          "team:write",
+          "team:admin",
+        ],
+        "features": Array [],
         "id": "4660",
+        "name": "Organization Name",
+        "onboardingTasks": Array [],
+        "projects": Array [],
         "slug": "org",
+        "status": Object {
+          "id": "active",
+          "name": "active",
+        },
+        "teams": Array [],
       }
     }
     project={
       Object {
+        "allowedDomains": Array [
+          "example.com",
+          "https://example.com",
+        ],
+        "dataScrubber": false,
+        "dataScrubberDefaults": false,
+        "digestsMaxDelay": 60,
+        "digestsMinDelay": 5,
+        "features": Array [],
+        "hasAccess": true,
         "id": "2448",
+        "isBookmarked": false,
+        "isMember": true,
         "name": "project name",
+        "resolveAge": 48,
+        "safeFields": Array [
+          "business-email",
+          "company",
+        ],
+        "scrapeJavaScript": true,
+        "scrubIPAddresses": false,
+        "securityToken": "security-token",
+        "securityTokenHeader": "x-security-header",
+        "sensitiveFields": Array [
+          "creditcard",
+          "ssn",
+        ],
         "slug": "project",
+        "subjectTemplate": "[$project] \${tag:level}: $title",
+        "teams": Array [],
+        "verifySSL": true,
       }
     }
   />
diff --git a/tests/js/spec/views/groupDetails/actions.spec.jsx b/tests/js/spec/views/groupDetails/actions.spec.jsx
index 58e2ebd2ce..fd1364c8e2 100644
--- a/tests/js/spec/views/groupDetails/actions.spec.jsx
+++ b/tests/js/spec/views/groupDetails/actions.spec.jsx
@@ -21,24 +21,24 @@ describe('GroupActions', function() {
     it('renders correctly', function() {
       let wrapper = shallow(<GroupActions />, {
         context: {
-          group: {
+          group: TestStubs.Group({
             id: '1337',
             pluginActions: [],
             pluginIssues: [],
-          },
-          organization: {
+          }),
+          organization: TestStubs.Organization({
             id: '4660',
             slug: 'org',
-          },
-          project: {
+          }),
+          project: TestStubs.ProjectDetails({
             id: '2448',
             name: 'project name',
             slug: 'project',
-          },
-          team: {
+          }),
+          team: TestStubs.Team({
             id: '3559',
             slug: 'team',
-          },
+          }),
         },
       });
       expect(wrapper).toMatchSnapshot();
diff --git a/tests/js/spec/views/groupDetails/seenBy.spec.jsx b/tests/js/spec/views/groupDetails/seenBy.spec.jsx
index 696769c6eb..11dbf60a29 100644
--- a/tests/js/spec/views/groupDetails/seenBy.spec.jsx
+++ b/tests/js/spec/views/groupDetails/seenBy.spec.jsx
@@ -21,13 +21,9 @@ describe('GroupSeenBy', function() {
     it('should return null if seenBy is falsy', function() {
       let wrapper = shallow(<GroupSeenBy />, {
         context: {
-          group: {id: '1337'},
-          project: {
-            id: '2448',
-            name: 'project name',
-            slug: 'project-name',
-          },
-          team: {id: '3559'},
+          group: TestStubs.Group({seenBy: undefined}),
+          project: TestStubs.Project(),
+          team: TestStubs.Team(),
         },
       });
       expect(wrapper.children()).toHaveLength(0);
@@ -36,19 +32,14 @@ describe('GroupSeenBy', function() {
     it('should return a list of each user that saw', function() {
       let wrapper = shallow(<GroupSeenBy />, {
         context: {
-          group: {
-            id: '1337',
+          group: TestStubs.Group({
             seenBy: [
               {id: 1, email: 'jane@example.com'},
               {id: 2, email: 'john@example.com'},
             ],
-          },
-          project: {
-            id: '2448',
-            name: 'project name',
-            slug: 'project-name',
-          },
-          team: {id: '3559'},
+          }),
+          project: TestStubs.Project(),
+          team: TestStubs.Team(),
         },
       });
 
diff --git a/tests/js/spec/views/organizationProjects.spec.jsx b/tests/js/spec/views/organizationProjects.spec.jsx
index b0f8f357cf..2e56d48d9a 100644
--- a/tests/js/spec/views/organizationProjects.spec.jsx
+++ b/tests/js/spec/views/organizationProjects.spec.jsx
@@ -2,24 +2,30 @@ import React from 'react';
 import {mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import ProjectsStore from 'app/stores/projectsStore';
 import OrganizationProjectsViewContainer from 'app/views/settings/organization/projects/organizationProjectsView';
 
 describe('OrganizationProjectsView', function() {
   let org;
-  let getMock;
-  let putMock;
+  let project;
+  let projectsGetMock;
+  let statsGetMock;
+  let projectsPutMock;
+
   beforeEach(function() {
-    let project = TestStubs.Project();
-    ProjectsStore.loadInitialData([project]);
+    project = TestStubs.Project();
     org = TestStubs.Organization();
 
-    getMock = Client.addMockResponse({
+    projectsGetMock = Client.addMockResponse({
+      url: '/organizations/org-slug/projects/',
+      body: [project],
+    });
+
+    statsGetMock = Client.addMockResponse({
       url: '/organizations/org-slug/stats/',
       body: [[[], 1]],
     });
 
-    putMock = Client.addMockResponse({
+    projectsPutMock = Client.addMockResponse({
       method: 'PUT',
       url: '/projects/org-slug/project-slug/',
     });
@@ -39,13 +45,15 @@ describe('OrganizationProjectsView', function() {
 
       expect(wrapper.find('.project-name').text()).toBe('Project Name');
 
-      expect(getMock).toHaveBeenCalledTimes(1);
+      expect(projectsGetMock).toHaveBeenCalledTimes(1);
+
+      expect(statsGetMock).toHaveBeenCalledTimes(1);
 
-      expect(putMock).toHaveBeenCalledTimes(0);
+      expect(projectsPutMock).toHaveBeenCalledTimes(0);
 
       wrapper.find('.icon-star-outline').simulate('click');
       expect(wrapper.find('.icon-star-solid')).toBeTruthy();
-      expect(putMock).toHaveBeenCalledTimes(1);
+      expect(projectsPutMock).toHaveBeenCalledTimes(1);
     });
   });
 });
diff --git a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
index 11acbb252c..78b1d24387 100644
--- a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
+++ b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
@@ -9,14 +9,26 @@ exports[`Stream render() displays the group list 1`] = `
       className="stream-content"
     >
       <StreamFilters
-        access={Set {}}
+        access={
+          Set {
+            "org:read",
+            "org:write",
+            "org:admin",
+            "project:read",
+            "project:write",
+            "project:admin",
+            "team:read",
+            "team:write",
+            "team:admin",
+          }
+        }
         isSearchDisabled={false}
         onSavedSearchCreate={[Function]}
         onSearch={[Function]}
         onSidebarToggle={[Function]}
         onSortChange={[Function]}
-        orgId="123"
-        projectId="456"
+        orgId="org-slug"
+        projectId="project-slug"
         query="is:unresolved"
         queryCount={null}
         savedSearchList={
@@ -45,8 +57,8 @@ exports[`Stream render() displays the group list 1`] = `
           canSelect={true}
           id="1"
           key="1"
-          orgId="123"
-          projectId="456"
+          orgId="org-slug"
+          projectId="project-slug"
           query="is:unresolved"
           statsPeriod="24h"
         />
@@ -59,8 +71,8 @@ exports[`Stream render() displays the group list 1`] = `
     <StreamSidebar
       loading={false}
       onQueryChange={[Function]}
-      orgId="123"
-      projectId="456"
+      orgId="org-slug"
+      projectId="project-slug"
       query="is:unresolved"
       tags={
         Object {
@@ -147,14 +159,26 @@ exports[`Stream toggles environment select all environments 1`] = `
       className="stream-content"
     >
       <StreamFilters
-        access={Set {}}
+        access={
+          Set {
+            "org:read",
+            "org:write",
+            "org:admin",
+            "project:read",
+            "project:write",
+            "project:admin",
+            "team:read",
+            "team:write",
+            "team:admin",
+          }
+        }
         isSearchDisabled={false}
         onSavedSearchCreate={[Function]}
         onSearch={[Function]}
         onSidebarToggle={[Function]}
         onSortChange={[Function]}
-        orgId="123"
-        projectId="456"
+        orgId="org-slug"
+        projectId="project-slug"
         query="is:unresolved"
         queryCount={null}
         savedSearchList={
@@ -183,8 +207,8 @@ exports[`Stream toggles environment select all environments 1`] = `
           canSelect={true}
           id="1"
           key="1"
-          orgId="123"
-          projectId="456"
+          orgId="org-slug"
+          projectId="project-slug"
           query="is:unresolved"
           statsPeriod="24h"
         />
@@ -197,8 +221,8 @@ exports[`Stream toggles environment select all environments 1`] = `
     <StreamSidebar
       loading={false}
       onQueryChange={[Function]}
-      orgId="123"
-      projectId="456"
+      orgId="org-slug"
+      projectId="project-slug"
       query="is:unresolved"
       tags={
         Object {
diff --git a/tests/js/spec/views/stream/stream.spec.jsx b/tests/js/spec/views/stream/stream.spec.jsx
index c863f5e562..c9f11ba4f7 100644
--- a/tests/js/spec/views/stream/stream.spec.jsx
+++ b/tests/js/spec/views/stream/stream.spec.jsx
@@ -15,8 +15,8 @@ import TagStore from 'app/stores/tagStore';
 jest.mock('app/stores/groupStore');
 
 const DEFAULT_LINKS_HEADER =
-  '<http://127.0.0.1:8000/api/0/projects/sentry/ludic-science/issues/?cursor=1443575731:0:1>; rel="previous"; results="false"; cursor="1443575731:0:1", ' +
-  '<http://127.0.0.1:8000/api/0/projects/sentry/ludic-science/issues/?cursor=1443575731:0:0>; rel="next"; results="true"; cursor="1443575731:0:0';
+  '<http://127.0.0.1:8000/api/0/projects/org-slug/project-slug/issues/?cursor=1443575731:0:1>; rel="previous"; results="false"; cursor="1443575731:0:1", ' +
+  '<http://127.0.0.1:8000/api/0/projects/org-slug/project-slug/issues/?cursor=1443575731:0:0>; rel="next"; results="true"; cursor="1443575731:0:0';
 
 describe('Stream', function() {
   let sandbox;
@@ -24,38 +24,50 @@ describe('Stream', function() {
   let wrapper;
   let props;
 
+  let organization;
+  let team;
+  let project;
+  let savedSearch;
+
   beforeEach(function() {
     sandbox = sinon.sandbox.create();
 
+    organization = TestStubs.Organization({
+      id: '1337',
+      slug: 'org-slug',
+    });
+    team = TestStubs.Team({
+      id: '2448',
+    });
+    project = TestStubs.ProjectDetails({
+      id: '3559',
+      name: 'Foo Project',
+      slug: 'project-slug',
+      firstEvent: true,
+    });
+    savedSearch = {id: '789', query: 'is:unresolved', name: 'test'};
+
     MockApiClient.addMockResponse({
-      url: '/projects/123/456/issues/',
+      url: '/projects/org-slug/project-slug/issues/',
       body: [TestStubs.Group()],
       headers: {
         Link: DEFAULT_LINKS_HEADER,
       },
     });
     MockApiClient.addMockResponse({
-      url: '/projects/123/456/searches/',
-      body: [{id: '789', query: 'is:unresolved', name: 'test'}],
+      url: '/projects/org-slug/project-slug/searches/',
+      body: [savedSearch],
     });
     MockApiClient.addMockResponse({
-      url: '/projects/123/456/processingissues/',
+      url: '/projects/org-slug/project-slug/processingissues/',
       method: 'GET',
     });
     sandbox.stub(browserHistory, 'push');
 
     context = {
-      project: {
-        id: '3559',
-        name: 'Foo Project',
-        slug: 'foo-project',
-        firstEvent: true,
-      },
-      organization: {
-        id: '1337',
-        slug: 'foo-org',
-      },
-      team: {id: '2448'},
+      project,
+      organization,
+      team,
     };
 
     TagStore.init();
@@ -63,7 +75,7 @@ describe('Stream', function() {
     props = {
       setProjectNavSection: function() {},
       location: {query: {query: 'is:unresolved'}, search: 'query=is:unresolved'},
-      params: {orgId: '123', projectId: '456'},
+      params: {orgId: organization.slug, projectId: project.slug},
       tags: TagStore.getAllTags(),
       tagsLoading: false,
     };
@@ -94,7 +106,7 @@ describe('Stream', function() {
 
         expect(
           CursorPoller.prototype.setEndpoint.calledWith(
-            'http://127.0.0.1:8000/api/0/projects/sentry/ludic-science/issues/?cursor=1443575731:0:1'
+            'http://127.0.0.1:8000/api/0/projects/org-slug/project-slug/issues/?cursor=1443575731:0:1'
           )
         ).toBe(true);
       });
@@ -110,11 +122,11 @@ describe('Stream', function() {
 
       it("should not enable the poller if the 'previous' link has results", function() {
         const pageLinks =
-          '<http://127.0.0.1:8000/api/0/projects/sentry/ludic-science/issues/?cursor=1443575731:0:1>; rel="previous"; results="true"; cursor="1443575731:0:1", ' +
-          '<http://127.0.0.1:8000/api/0/projects/sentry/ludic-science/issues/?cursor=1443575731:0:0>; rel="next"; results="true"; cursor="1443575731:0:0';
+          '<http://127.0.0.1:8000/api/0/projects/org-slug/project-slug/issues/?cursor=1443575731:0:1>; rel="previous"; results="true"; cursor="1443575731:0:1", ' +
+          '<http://127.0.0.1:8000/api/0/projects/org-slug/project-slug/issues/?cursor=1443575731:0:0>; rel="next"; results="true"; cursor="1443575731:0:0';
 
         MockApiClient.addMockResponse({
-          url: '/projects/123/456/issues/',
+          url: '/projects/org-slug/project-slug/issues/',
           body: [TestStubs.Group()],
           headers: {
             Link: pageLinks,
@@ -190,7 +202,7 @@ describe('Stream', function() {
     it('handles valid search id', function() {
       const streamProps = {
         setProjectNavSection: function() {},
-        params: {orgId: '123', projectId: '456', searchId: '789'},
+        params: {orgId: 'org-slug', projectId: 'project-slug', searchId: '789'},
         location: {query: {}, search: ''},
       };
       wrapper = shallow(<Stream {...streamProps} />, {
@@ -204,7 +216,7 @@ describe('Stream', function() {
     it('handles invalid search id', function() {
       const streamProps = {
         setProjectNavSection: function() {},
-        params: {orgId: '123', projectId: '456', searchId: 'invalid'},
+        params: {orgId: 'org-slug', projectId: 'project-slug', searchId: 'invalid'},
         location: {query: {}, search: ''},
       };
       wrapper = shallow(<Stream {...streamProps} />, {
@@ -222,9 +234,9 @@ describe('Stream', function() {
       };
 
       MockApiClient.addMockResponse({
-        url: '/projects/123/456/searches/',
+        url: '/projects/org-slug/project-slug/searches/',
         body: [
-          {id: '789', query: 'is:unresolved', name: 'test', isDefault: false},
+          {...savedSearch, isDefault: false},
           {
             id: 'default',
             query: 'is:unresolved assigned:me',
@@ -472,7 +484,7 @@ describe('Stream', function() {
       let streamProps = {
         ...props,
         location: {query: {sort: 'freq'}, search: 'sort=freq'},
-        params: {orgId: '123', projectId: '456', searchId: '789'},
+        params: {orgId: 'org-slug', projectId: 'project-slug', searchId: '789'},
       };
 
       let expected = {
@@ -506,7 +518,7 @@ describe('Stream', function() {
       let streamProps = {
         ...props,
         location: {query: {sort: 'freq'}, search: 'sort=freq'},
-        params: {orgId: '123', projectId: '456', searchId: '799'},
+        params: {orgId: 'org-slug', projectId: 'project-slug', searchId: '799'},
       };
 
       let expected = {
@@ -538,9 +550,9 @@ describe('Stream', function() {
       const nextProps = {
         ...props,
         location: {
-          pathname: '/123/456/searches/789/',
+          pathname: '/org-slug/project-slug/searches/789/',
         },
-        params: {orgId: '123', projectId: '456', searchId: '789'},
+        params: {orgId: 'org-slug', projectId: 'project-slug', searchId: '789'},
       };
 
       const stream = shallow(<Stream {...props} />, {
diff --git a/tests/sentry/api/endpoints/test_team_project_index.py b/tests/sentry/api/endpoints/team_projects.py
similarity index 100%
rename from tests/sentry/api/endpoints/test_team_project_index.py
rename to tests/sentry/api/endpoints/team_projects.py
diff --git a/tests/sentry/api/endpoints/test_organization_projects.py b/tests/sentry/api/endpoints/test_organization_projects.py
index 78440bfcc6..44d6b60948 100644
--- a/tests/sentry/api/endpoints/test_organization_projects.py
+++ b/tests/sentry/api/endpoints/test_organization_projects.py
@@ -46,3 +46,23 @@ class OrganizationProjectsTest(APITestCase):
 
         response = self.client.get('{}?statsPeriod=48h'.format(path), format='json')
         assert response.status_code == 400
+
+    def test_search(self):
+        self.login_as(user=self.user)
+
+        org = self.create_organization(owner=self.user, name='baz')
+        team = self.create_team(organization=org)
+        project = self.create_project(teams=[team], name='bar', slug='bar')
+
+        path = '/api/0/organizations/{}/projects/?query=bar'.format(org.slug)
+        response = self.client.get(path)
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 1
+        assert response.data[0]['id'] == six.text_type(project.id)
+
+        path = '/api/0/organizations/{}/projects/?query=baz'.format(org.slug)
+        response = self.client.get(path)
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 0
diff --git a/tests/sentry/api/endpoints/test_organization_teams.py b/tests/sentry/api/endpoints/test_organization_teams.py
index 1eaa279d09..a583d68b00 100644
--- a/tests/sentry/api/endpoints/test_organization_teams.py
+++ b/tests/sentry/api/endpoints/test_organization_teams.py
@@ -23,7 +23,7 @@ class OrganizationTeamsListTest(APITestCase):
             teams=[team1],
         )
 
-        path = reverse('sentry-api-0-organization-teams', args=[org.slug])
+        path = '/api/0/organizations/{}/teams/'.format(org.slug)
 
         self.login_as(user=user)
 
@@ -36,6 +36,33 @@ class OrganizationTeamsListTest(APITestCase):
         assert response.data[1]['id'] == six.text_type(team1.id)
         assert response.data[1]['isMember']
 
+    def test_search(self):
+        user = self.create_user()
+        org = self.create_organization(owner=self.user)
+        team = self.create_team(organization=org, name='bar', slug='bar')
+
+        self.create_member(
+            organization=org,
+            user=user,
+            has_global_access=False,
+            teams=[team],
+        )
+
+        self.login_as(user=user)
+
+        path = '/api/0/organizations/{}/teams/?query=bar'.format(org.slug)
+        response = self.client.get(path)
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 1
+        assert response.data[0]['id'] == six.text_type(team.id)
+
+        path = '/api/0/organizations/{}/teams/?query=baz'.format(org.slug)
+        response = self.client.get(path)
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 0
+
 
 class OrganizationTeamsCreateTest(APITestCase):
     @fixture
