commit 479d42e32075ca070fe1215c56313c283f58ae0c
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Sep 16 10:54:47 2015 -0700

    Avoid using "event" as an argument since event is also a global

diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index 8b902eabd1..65457dbe59 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -80,9 +80,9 @@ var AssigneeSelector = React.createClass({
     this.setState({filter: '', loading: true});
   },
 
-  onFilterChange(event) {
+  onFilterChange(evt) {
     this.setState({
-      filter: event.target.value
+      filter: evt.target.value
     });
   },
 
diff --git a/src/sentry/static/sentry/app/components/contextData.jsx b/src/sentry/static/sentry/app/components/contextData.jsx
index 39c91b09fb..eb08f6bdf5 100644
--- a/src/sentry/static/sentry/app/components/contextData.jsx
+++ b/src/sentry/static/sentry/app/components/contextData.jsx
@@ -79,9 +79,9 @@ var ContextData = React.createClass({
   },
 
   renderValue(value) {
-    function toggle(event) {
-      jQuery(event.target).parent().toggleClass('val-toggle-open');
-      event.preventDefault();
+    function toggle(evt) {
+      jQuery(evt.target).parent().toggleClass('val-toggle-open');
+      evt.preventDefault();
     }
 
     function makeToggle(highUp, childCount, children) {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx
index ae1001fd88..b4595ed0e9 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx
@@ -9,8 +9,8 @@ var FrameVariables = React.createClass({
 
   // make sure that clicking on the variables does not actually do
   // anything on the containing element.
-  preventToggling(event) {
-    event.stopPropagation();
+  preventToggling(evt) {
+    evt.stopPropagation();
   },
 
   render() {
@@ -33,4 +33,4 @@ var FrameVariables = React.createClass({
   }
 });
 
-export default FrameVariables;
\ No newline at end of file
+export default FrameVariables;
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index b20a327699..6e1f84f735 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -128,7 +128,7 @@ var ProjectSelector = React.createClass({
     );
   },
 
-  onOpen(event) {
+  onOpen(evt) {
     this.refs.filter.getDOMNode().focus();
   },
 
diff --git a/src/sentry/static/sentry/app/components/stream/group.jsx b/src/sentry/static/sentry/app/components/stream/group.jsx
index 42c7681512..b592026b86 100644
--- a/src/sentry/static/sentry/app/components/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/stream/group.jsx
@@ -72,12 +72,12 @@ var StreamGroup = React.createClass({
     });
   },
 
-  toggleSelect(event) {
-    if (event.target.tagName === 'A')
+  toggleSelect(evt) {
+    if (evt.target.tagName === 'A')
       return;
-    if (event.target.tagName === 'INPUT')
+    if (evt.target.tagName === 'INPUT')
       return;
-    if (jQuery(event.target).parents('a').length !== 0)
+    if (jQuery(evt.target).parents('a').length !== 0)
       return;
 
     SelectedGroupStore.toggleSelect(this.state.data.id);
diff --git a/src/sentry/static/sentry/app/views/projectEvents/actions.jsx b/src/sentry/static/sentry/app/views/projectEvents/actions.jsx
index 19d3832b26..bd51686feb 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/actions.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/actions.jsx
@@ -18,7 +18,7 @@ var EventActions = React.createClass({
     };
   },
 
-  onRealtimeChange(event) {
+  onRealtimeChange(evt) {
     this.props.onRealtimeChange(!this.props.realtimeActive);
   },
 
diff --git a/src/sentry/static/sentry/app/views/projectReleases/searchBar.jsx b/src/sentry/static/sentry/app/views/projectReleases/searchBar.jsx
index 7e577d892a..69a3e753c4 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/searchBar.jsx
@@ -27,8 +27,8 @@ var SearchBar = React.createClass({
     this.refs.searchInput.getDOMNode().blur();
   },
 
-  onSubmit(event) {
-    event.preventDefault();
+  onSubmit(evt) {
+    evt.preventDefault();
     this.blur();
     this.props.onSearch(this.state.query);
   },
@@ -50,8 +50,8 @@ var SearchBar = React.createClass({
     this.setState({ dropdownVisible: false });
   },
 
-  onQueryChange(event) {
-    this.setState({ query: event.target.value });
+  onQueryChange(evt) {
+    this.setState({ query: evt.target.value });
   },
 
   render() {
diff --git a/src/sentry/static/sentry/app/views/stream/actionLink.jsx b/src/sentry/static/sentry/app/views/stream/actionLink.jsx
index 75cb8cd093..871f65704b 100644
--- a/src/sentry/static/sentry/app/views/stream/actionLink.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actionLink.jsx
@@ -52,15 +52,15 @@ var ActionLink = React.createClass({
     });
   },
 
-  handleActionAll(event) {
-    this.props.onAction(event, this.props.actionTypes.ALL);
+  handleActionAll(evt) {
+    this.props.onAction(evt, this.props.actionTypes.ALL);
     this.setState({
       isModalOpen: false
     });
   },
 
-  handleActionSelected(event) {
-    this.props.onAction(event, this.props.actionTypes.SELECTED);
+  handleActionSelected(evt) {
+    this.props.onAction(evt, this.props.actionTypes.SELECTED);
     this.setState({
       isModalOpen: false
     });
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index f57d54e388..61f1c92d53 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -126,7 +126,7 @@ var StreamActions = React.createClass({
     SelectedGroupStore.toggleSelectAll();
   },
 
-  onRealtimeChange(event) {
+  onRealtimeChange(evt) {
     this.props.onRealtimeChange(!this.props.realtimeActive);
   },
 
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 1d8c23d3c5..e34d2fb0e4 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -116,8 +116,8 @@ var SearchBar = React.createClass({
     this.refs.searchInput.getDOMNode().blur();
   },
 
-  onSubmit(event) {
-    event.preventDefault();
+  onSubmit(evt) {
+    evt.preventDefault();
     this.blur();
     this.props.onSearch(this.state.query);
   },
@@ -144,15 +144,15 @@ var SearchBar = React.createClass({
     }, this.DROPDOWN_BLUR_DURATION);
   },
 
-  onQueryChange(event) {
+  onQueryChange(evt) {
     this.setState(
-      { query: event.target.value },
+      { query: evt.target.value },
       () => this.updateAutoCompleteItems()
     );
   },
 
-  onKeyUp(event) {
-    if (event.key === 'Escape' || event.keyCode === 27) {
+  onKeyUp(evt) {
+    if (evt.key === 'Escape' || evt.keyCode === 27) {
       // blur handler should additionally hide dropdown
       this.blur();
     }
@@ -353,25 +353,25 @@ var SearchBar = React.createClass({
     });
   },
 
-  onKeyDown(event) {
+  onKeyDown(evt) {
     let state = this.state;
     let searchItems = state.searchItems;
 
     if (!searchItems.length)
       return;
 
-    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {
+    if (evt.key === 'ArrowDown' || evt.key === 'ArrowUp') {
       // Move active selection up/down
       delete searchItems[state.activeSearchItem].active;
 
-      state.activeSearchItem = event.key === 'ArrowDown'
+      state.activeSearchItem = evt.key === 'ArrowDown'
         ? Math.min(state.activeSearchItem + 1, searchItems.length - 1)
         : Math.max(state.activeSearchItem - 1, 0);
 
       searchItems[state.activeSearchItem].active = true;
       this.setState({ searchItems: searchItems.slice(0) });
 
-    } else if ((event.key === 'Tab' || event.key === 'Enter') && !this.isDefaultDropdown()) {
+    } else if ((evt.key === 'Tab' || evt.key === 'Enter') && !this.isDefaultDropdown()) {
       this.onAutoComplete(searchItems[state.activeSearchItem].value);
     }
   },
