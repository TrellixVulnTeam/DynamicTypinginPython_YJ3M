commit 8fb26911fd55e8e06dd1e19712bfebde09ebbf84
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Tue Jun 11 13:10:52 2019 -0400

    fix: Don't re-throw error in a setTimeout() (#13613)

diff --git a/src/sentry/static/sentry/app/utils/errorHandler.jsx b/src/sentry/static/sentry/app/utils/errorHandler.jsx
index af70cd48ca..8ace495411 100644
--- a/src/sentry/static/sentry/app/utils/errorHandler.jsx
+++ b/src/sentry/static/sentry/app/utils/errorHandler.jsx
@@ -4,10 +4,6 @@ import RouteError from 'app/views/routeError';
 export default function errorHandler(Component) {
   class ErrorHandler extends React.Component {
     static getDerivedStateFromError(error) {
-      setTimeout(() => {
-        throw error;
-      });
-
       // Update state so the next render will show the fallback UI.
       return {
         hasError: true,
@@ -16,10 +12,20 @@ export default function errorHandler(Component) {
     }
 
     state = {
+      // we are explicit if an error has been thrown since errors thrown are not guaranteed
+      // to be truthy (e.g. throw null).
       hasError: false,
       error: null,
     };
 
+    componentDidCatch(error, info) {
+      // eslint-disable-next-line no-console
+      console.error(
+        'Component stack trace caught in <ErrorHandler />:',
+        info.componentStack
+      );
+    }
+
     render() {
       if (this.state.hasError) {
         return <RouteError error={this.state.error} />;
