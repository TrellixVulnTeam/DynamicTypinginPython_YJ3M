commit 89c88fdcbca94c31454c676dd4469421761bb035
Author: Ted Kaemming <ted@kaemming.com>
Date:   Fri Mar 18 13:18:10 2016 -0700

    Keep track of `email.sent` statistics from async delivery task.

diff --git a/src/sentry/tasks/email.py b/src/sentry/tasks/email.py
index 1fa77a8e16..273baaa96b 100644
--- a/src/sentry/tasks/email.py
+++ b/src/sentry/tasks/email.py
@@ -10,10 +10,9 @@ from __future__ import absolute_import, print_function
 
 import logging
 
-from django.core.mail import get_connection
-
 from sentry.auth import access
 from sentry.tasks.base import instrumented_task
+from sentry.utils.email import send_messages
 
 logger = logging.getLogger(__name__)
 
@@ -68,5 +67,4 @@ def process_inbound_email(mailfrom, group_id, payload):
     name='sentry.tasks.email.send_email',
     queue='email')
 def send_email(message):
-    connection = get_connection()
-    connection.send_messages([message])
+    send_messages([message])
diff --git a/src/sentry/utils/email.py b/src/sentry/utils/email.py
index 28fa7ddd48..9d7fbb0837 100644
--- a/src/sentry/utils/email.py
+++ b/src/sentry/utils/email.py
@@ -252,16 +252,19 @@ class MessageBuilder(object):
         return results
 
     def send(self, to=None, bcc=None, fail_silently=False):
-        messages = self.get_built_messages(to, bcc=bcc)
-        self.send_all(messages, fail_silently=fail_silently)
-
-    def send_all(self, messages, fail_silently=False):
-        connection = get_connection(fail_silently=fail_silently)
-        metrics.incr('email.sent', len(messages))
-        return connection.send_messages(messages)
+        return send_messages(
+            self.get_built_messages(to, bcc=bcc),
+            fail_silently=fail_silently,
+        )
 
     def send_async(self, to=None, bcc=None):
         from sentry.tasks.email import send_email
         messages = self.get_built_messages(to, bcc=bcc)
         for message in messages:
             safe_execute(send_email.delay, message=message)
+
+
+def send_messages(messages, fail_silently=False):
+    connection = get_connection(fail_silently=fail_silently)
+    metrics.incr('email.sent', len(messages))
+    return connection.send_messages(messages)
