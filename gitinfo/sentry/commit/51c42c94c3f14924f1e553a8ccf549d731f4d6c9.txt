commit 51c42c94c3f14924f1e553a8ccf549d731f4d6c9
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 18 00:32:33 2013 -0800

    Correct stacktrace tests

diff --git a/tests/sentry/interfaces/stacktrace/tests.py b/tests/sentry/interfaces/stacktrace/tests.py
index 0643b9f407..0853fd28f2 100644
--- a/tests/sentry/interfaces/stacktrace/tests.py
+++ b/tests/sentry/interfaces/stacktrace/tests.py
@@ -94,7 +94,7 @@ class StacktraceTest(TestCase):
         event = mock.Mock(spec=Event())
         event.message = 'foo'
         get_stacktrace.return_value = 'bar'
-        interface = Stacktrace(frames=[])
+        interface = Stacktrace(frames=[{'lineno': 1, 'filename': 'foo.py'}])
         result = interface.get_traceback(event)
         get_stacktrace.assert_called_once_with(event, newest_first=None)
         self.assertEquals(result, 'foo\n\nbar')
@@ -105,12 +105,12 @@ class StacktraceTest(TestCase):
     def test_to_html_render_call(self, render_to_string, get_traceback):
         event = mock.Mock(spec=Event())
         get_traceback.return_value = 'bar'
-        interface = Stacktrace(frames=[])
+        interface = Stacktrace(frames=[{'lineno': 1, 'filename': 'foo.py'}])
         result = interface.to_html(event)
         get_traceback.assert_called_once_with(event, newest_first=False)
         render_to_string.assert_called_once_with('sentry/partial/interfaces/stacktrace.html', {
             'event': event,
-            'frames': [],
+            'frames': [{'function': None, 'abs_path': None, 'start_lineno': None, 'lineno': 1, 'context': [], 'vars': [], 'in_app': True, 'filename': 'foo.py'}],
             'stacktrace': 'bar',
             'system_frames': 0,
             'newest_first': False,
@@ -123,7 +123,7 @@ class StacktraceTest(TestCase):
         event = mock.Mock(spec=Event())
         event.message = 'foo'
         get_traceback.return_value = 'bar'
-        interface = Stacktrace(frames=[])
+        interface = Stacktrace(frames=[{'lineno': 1, 'filename': 'foo.py'}])
         result = interface.to_html(event)
         get_traceback.assert_called_once_with(event, newest_first=False)
         self.assertTrue('<div class="module">' in result)
