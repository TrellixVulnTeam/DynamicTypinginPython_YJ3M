commit def755bd29d9b656f1173c8f33613b3ea5956f5d
Author: Max Bittker <maxbittker@gmail.com>
Date:   Thu Mar 1 13:17:59 2018 -0800

    feat(actors): AssigneeSelector UI (#7362)
    
    * assigneeSelector and avatar

diff --git a/src/sentry/static/sentry/app/actionCreators/group.jsx b/src/sentry/static/sentry/app/actionCreators/group.jsx
index aefa954bcb..675ab548a8 100644
--- a/src/sentry/static/sentry/app/actionCreators/group.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/group.jsx
@@ -1,7 +1,8 @@
 import {Client} from '../api';
 import GroupActions from '../actions/groupActions';
+import {buildUserId, buildTeamId} from '../utils';
 
-export function assignTo(params) {
+export function assignToUser(params) {
   const api = new Client();
 
   let endpoint = `/issues/${params.id}/`;
@@ -17,7 +18,9 @@ export function assignTo(params) {
     // Sending an empty value to assignedTo is the same as "clear",
     // so if no member exists, that implies that we want to clear the
     // current assignee.
-    data: {assignedTo: (params.member && params.member.id) || ''},
+    data: {
+      assignedTo: params.user ? buildUserId(params.user.id) : '',
+    },
   });
 
   request
@@ -25,8 +28,73 @@ export function assignTo(params) {
       GroupActions.assignToSuccess(id, params.id, data);
     })
     .catch(data => {
-      GroupActions.assignTodata(id, params.id, data);
+      GroupActions.assignToError(id, params.id, data);
     });
 
   return request;
 }
+
+export function clearAssignment(groupId) {
+  const api = new Client();
+
+  let endpoint = `/issues/${groupId}/`;
+
+  let id = api.uniqueId();
+
+  GroupActions.assignTo(id, groupId, {
+    email: '',
+  });
+
+  let request = api.requestPromise(endpoint, {
+    method: 'PUT',
+    // Sending an empty value to assignedTo is the same as "clear"
+    data: {
+      assignedTo: '',
+    },
+  });
+
+  request
+    .then(data => {
+      GroupActions.assignToSuccess(id, groupId, data);
+    })
+    .catch(data => {
+      GroupActions.assignToError(id, groupId, data);
+    });
+
+  return request;
+}
+
+export function assignToActor({id, actor}) {
+  const api = new Client();
+
+  let endpoint = `/issues/${id}/`;
+
+  let uniqueId = api.uniqueId();
+  let actorId;
+  switch (actor.type) {
+    case 'user':
+      actorId = buildUserId(actor.id);
+      break;
+
+    case 'team':
+      actorId = buildTeamId(actor.id);
+      break;
+
+    default:
+      Raven.captureException('Unknown assignee type', {
+        extra: {actor},
+      });
+  }
+
+  return api
+    .requestPromise(endpoint, {
+      method: 'PUT',
+      data: {assignedTo: actorId},
+    })
+    .then(data => {
+      GroupActions.assignToSuccess(uniqueId, id, data);
+    })
+    .catch(data => {
+      GroupActions.assignToError(uniqueId, id, data);
+    });
+}
diff --git a/src/sentry/static/sentry/app/components/actorAvatar.jsx b/src/sentry/static/sentry/app/components/actorAvatar.jsx
new file mode 100644
index 0000000000..aad9f3b4fa
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/actorAvatar.jsx
@@ -0,0 +1,37 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import Avatar from './avatar';
+import TeamAvatar from './teamAvatar';
+import MemberListStore from '../stores/memberListStore';
+import TeamStore from '../stores/teamStore';
+import {Actor} from '../proptypes';
+
+class ActorAvatar extends React.Component {
+  static propTypes = {
+    actor: Actor.isRequired,
+    size: PropTypes.number,
+    default: PropTypes.string,
+    title: PropTypes.string,
+    gravatar: PropTypes.bool,
+  };
+
+  render() {
+    let {actor, ...props} = this.props;
+    if (actor.type == 'user') {
+      let user = MemberListStore.getById(actor.id);
+      return <Avatar user={user} {...props} hasTooltip />;
+    }
+    if (actor.type == 'team') {
+      let team = TeamStore.getById(actor.id);
+      return <TeamAvatar team={team} {...props} hasTooltip />;
+    }
+
+    Raven.captureException('Unknown avatar type', {
+      extra: {actor},
+    });
+    return null;
+  }
+}
+
+export default ActorAvatar;
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index eafdee129d..ae00a163d3 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -5,18 +5,20 @@ import Reflux from 'reflux';
 import classNames from 'classnames';
 
 import {t} from '../locale';
-import {userDisplayName} from '../utils/formatters';
-import {valueIsEqual} from '../utils';
+import {valueIsEqual, buildUserId, buildTeamId} from '../utils';
+import SentryTypes from '../proptypes';
 import Avatar from '../components/avatar';
-import ConfigStore from '../stores/configStore';
+import TeamAvatar from '../components/teamAvatar';
+import ActorAvatar from '../components/actorAvatar';
 import DropdownLink from './dropdownLink';
 import FlowLayout from './flowLayout';
+import MenuItem from './menuItem';
+import {assignToUser, assignToActor, clearAssignment} from '../actionCreators/group';
 import GroupStore from '../stores/groupStore';
-import {assignTo} from '../actionCreators/group';
+import TeamStore from '../stores/teamStore';
 import LoadingIndicator from '../components/loadingIndicator';
 import MemberListStore from '../stores/memberListStore';
-import MenuItem from './menuItem';
-import TooltipMixin from '../mixins/tooltip';
+import ConfigStore from '../stores/configStore';
 
 const AssigneeSelector = createReactClass({
   displayName: 'AssigneeSelector',
@@ -24,13 +26,12 @@ const AssigneeSelector = createReactClass({
   propTypes: {
     id: PropTypes.string.isRequired,
   },
-
+  contextTypes: {
+    organization: SentryTypes.Organization,
+  },
   mixins: [
     Reflux.listenTo(GroupStore, 'onGroupChange'),
     Reflux.connect(MemberListStore, 'memberList'),
-    TooltipMixin({
-      selector: '.tip',
-    }),
   ],
 
   statics: {
@@ -105,15 +106,17 @@ const AssigneeSelector = createReactClass({
     return !valueIsEqual(nextState.assignedTo, this.state.assignedTo, true);
   },
 
-  componentDidUpdate(prevProps, prevState) {
-    let oldAssignee = prevState.assignedTo && prevState.assignedTo.id;
-    let newAssignee = this.state.assignedTo && this.state.assignedTo.id;
-    if (oldAssignee !== newAssignee) {
-      this.removeTooltips();
-      if (newAssignee) {
-        this.attachTooltips();
-      }
-    }
+  assignableTeams() {
+    let group = GroupStore.get(this.props.id);
+
+    return TeamStore.getAll()
+      .filter(({projects}) => projects.some(p => p.slug === group.project.slug))
+      .map(team => ({
+        id: buildTeamId(team.id),
+        name: team.slug,
+        display: team.slug,
+        team,
+      }));
   },
 
   onGroupChange(itemIds) {
@@ -127,13 +130,19 @@ const AssigneeSelector = createReactClass({
     });
   },
 
-  assignTo(member) {
-    assignTo({id: this.props.id, member});
+  assignToUser(user) {
+    assignToUser({id: this.props.id, user});
+    this.setState({filter: '', loading: true});
+  },
+
+  assignToTeam(team) {
+    assignToActor({actor: {id: team.id, type: 'team'}, id: this.props.id});
     this.setState({filter: '', loading: true});
   },
 
   clearAssignTo() {
-    assignTo({id: this.props.id});
+    //clears assignment
+    clearAssignment(this.props.id);
     this.setState({filter: '', loading: true});
   },
 
@@ -154,7 +163,7 @@ const AssigneeSelector = createReactClass({
         this.state.filter
       );
       if (members.length > 0) {
-        this.assignTo(members[0]);
+        this.assignToUser(members[0]);
       }
     }
   },
@@ -204,7 +213,7 @@ const AssigneeSelector = createReactClass({
     let {loading, assignedTo, filter, memberList} = this.state;
     let memberListLoading = this.state.memberList === null;
 
-    let className = classNames('assignee-selector anchor-right', {
+    let className = classNames('assignee-selector anchor-right ', {
       unassigned: !assignedTo,
     });
 
@@ -213,12 +222,12 @@ const AssigneeSelector = createReactClass({
 
     let memberNodes =
       members && members.length ? (
-        members.map(item => {
+        memberList.map(item => {
           return (
             <MenuItem
-              key={item.id}
+              key={buildUserId(item.id)}
               disabled={loading}
-              onSelect={this.assignTo.bind(this, item)}
+              onSelect={this.assignToUser.bind(this, item)}
             >
               <Avatar user={item} className="avatar" size={48} />
               {this.highlight(item.name || item.email, filter)}
@@ -231,14 +240,35 @@ const AssigneeSelector = createReactClass({
         </li>
       );
 
-    let assignedUser = assignedTo && MemberListStore.getById(assignedTo.id);
-    let tooltipTitle = assignedUser ? userDisplayName(assignedUser) : null;
-    // Outer div is needed to make tooltip work
+    let teamNodes = [];
+    let org = this.context.organization;
+    let features = new Set(org.features);
+    if (features.has('internal-catchall')) {
+      teamNodes = AssigneeSelector.filterMembers(
+        this.assignableTeams(),
+        filter
+      ).map(({id, display, team}) => {
+        return (
+          <MenuItem
+            key={id}
+            disabled={loading}
+            onSelect={this.assignToTeam.bind(this, team)}
+          >
+            <TeamAvatar team={team} className="avatar" size={48} />
+            {this.highlight(display, filter)}
+          </MenuItem>
+        );
+      });
+      if (teamNodes.length > 0) {
+        teamNodes = [...teamNodes, <hr key="divider" style={{margin: 0}} />];
+      }
+    }
+
     return (
       <div>
-        <div className={classNames(className, 'tip')} title={tooltipTitle}>
+        <div className={className}>
           {loading ? (
-            <LoadingIndicator mini />
+            <LoadingIndicator mini style={{float: 'left'}} />
           ) : (
             <DropdownLink
               className="assignee-selector-toggle"
@@ -248,7 +278,7 @@ const AssigneeSelector = createReactClass({
               alwaysRenderMenu={false}
               title={
                 assignedTo ? (
-                  <Avatar user={assignedUser} className="avatar" size={48} />
+                  <ActorAvatar actor={assignedTo} className="avatar" size={48} />
                 ) : (
                   <span className="icon-user" />
                 )
@@ -259,7 +289,11 @@ const AssigneeSelector = createReactClass({
                   <input
                     type="text"
                     className="form-control input-sm"
-                    placeholder={t('Filter people')}
+                    placeholder={
+                      features.has('internal-catchall')
+                        ? t('Filter teams and people')
+                        : t('Filter members')
+                    }
                     ref={ref => this.onFilterMount(ref)}
                     onClick={this.onFilterClick}
                     onKeyDown={this.onFilterKeyDown}
@@ -267,6 +301,7 @@ const AssigneeSelector = createReactClass({
                   />
                 </MenuItem>
               )}
+
               {!memberListLoading &&
                 assignedTo && (
                   <MenuItem
@@ -279,7 +314,7 @@ const AssigneeSelector = createReactClass({
                 )}
               {!memberListLoading && (
                 <li>
-                  <ul>{memberNodes}</ul>
+                  <ul>{[...teamNodes, ...memberNodes]}</ul>
                 </li>
               )}
 
diff --git a/src/sentry/static/sentry/app/components/avatar.jsx b/src/sentry/static/sentry/app/components/avatar.jsx
index c7b6c47f53..d42d5a2e30 100644
--- a/src/sentry/static/sentry/app/components/avatar.jsx
+++ b/src/sentry/static/sentry/app/components/avatar.jsx
@@ -4,6 +4,8 @@ import $ from 'jquery';
 import MD5 from 'crypto-js/md5';
 import ConfigStore from '../stores/configStore';
 import UserLetterAvatar from '../components/userLetterAvatar';
+import {userDisplayName} from '../utils/formatters';
+import Tooltip from './tooltip';
 
 class Avatar extends React.Component {
   static propTypes = {
@@ -12,12 +14,14 @@ class Avatar extends React.Component {
     default: PropTypes.string,
     title: PropTypes.string,
     gravatar: PropTypes.bool,
+    hasTooltip: PropTypes.bool,
   };
 
   static defaultProps = {
     className: 'avatar',
     size: 64,
     gravatar: true,
+    hasTooltip: false,
   };
 
   constructor(...args) {
@@ -88,16 +92,18 @@ class Avatar extends React.Component {
   };
 
   render() {
-    let user = this.props.user;
+    let {user, hasTooltip} = this.props;
     if (!user) {
       return null;
     }
 
     return (
-      <span className={this.props.className} style={this.props.style}>
-        {this.state.showBackupAvatar && <UserLetterAvatar user={user} />}
-        {this.renderImg()}
-      </span>
+      <Tooltip title={userDisplayName(user)} disabled={!hasTooltip}>
+        <span className={this.props.className} style={this.props.style}>
+          {this.state.showBackupAvatar && <UserLetterAvatar user={user} />}
+          {this.renderImg()}
+        </span>
+      </Tooltip>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
index 3d20793fc0..102021575c 100644
--- a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
+++ b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
@@ -8,7 +8,7 @@ import Avatar from '../avatar';
 import TooltipMixin from '../../mixins/tooltip';
 import ApiMixin from '../../mixins/apiMixin';
 import GroupState from '../../mixins/groupState';
-import {assignTo} from '../../actionCreators/group';
+import {assignToUser} from '../../actionCreators/group';
 import {t} from '../../locale';
 
 const SuggestedOwners = createReactClass({
@@ -79,9 +79,9 @@ const SuggestedOwners = createReactClass({
     );
   },
 
-  assignTo(member) {
-    if (member.id !== undefined) {
-      assignTo({id: this.props.event.groupID, member});
+  assignTo(user) {
+    if (user.id !== undefined) {
+      assignToUser({id: this.props.event.groupID, user});
     }
   },
 
diff --git a/src/sentry/static/sentry/app/components/teamAvatar.jsx b/src/sentry/static/sentry/app/components/teamAvatar.jsx
index b3727683e9..266bab8de5 100644
--- a/src/sentry/static/sentry/app/components/teamAvatar.jsx
+++ b/src/sentry/static/sentry/app/components/teamAvatar.jsx
@@ -7,10 +7,12 @@ import Tooltip from './tooltip';
 class TeamAvatar extends React.Component {
   static propTypes = {
     team: PropTypes.object.isRequired,
+    hasTooltip: PropTypes.bool,
   };
 
   static defaultProps = {
     className: 'avatar',
+    hasTooltip: false,
   };
 
   getDisplayName = () => {
@@ -19,11 +21,11 @@ class TeamAvatar extends React.Component {
   };
 
   render() {
-    let {team} = this.props;
+    let {team, hasTooltip} = this.props;
     let displayName = this.getDisplayName();
     return (
       <span className={this.props.className}>
-        <Tooltip title={displayName}>
+        <Tooltip title={displayName} disabled={!hasTooltip}>
           <LetterAvatar identifier={team.slug} displayName={displayName} />
         </Tooltip>
       </span>
diff --git a/src/sentry/static/sentry/app/proptypes.jsx b/src/sentry/static/sentry/app/proptypes.jsx
index 4b8d7235a3..672f510f01 100644
--- a/src/sentry/static/sentry/app/proptypes.jsx
+++ b/src/sentry/static/sentry/app/proptypes.jsx
@@ -109,7 +109,6 @@ export const Actor = PropTypes.shape({
   type: PropTypes.oneOf(['user', 'team']),
   id: PropTypes.string.isRequired,
   name: PropTypes.string.isRequired,
-  avatar: PropTypes.string.isRequired,
 });
 
 export const Project = PropTypes.shape({
diff --git a/src/sentry/static/sentry/app/stores/teamStore.jsx b/src/sentry/static/sentry/app/stores/teamStore.jsx
index 6adce3aa77..1c5c7c1149 100644
--- a/src/sentry/static/sentry/app/stores/teamStore.jsx
+++ b/src/sentry/static/sentry/app/stores/teamStore.jsx
@@ -77,7 +77,7 @@ const TeamStore = Reflux.createStore({
   },
 
   getById(id) {
-    return this.items.find(item => item.id === '' + id) || null;
+    return this.items.find(item => item.id.toString() === id.toString()) || null;
   },
 
   getBySlug(slug) {
diff --git a/tests/js/setup.js b/tests/js/setup.js
index eb18021222..d237295c0b 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -22,7 +22,10 @@ Enzyme.configure({disableLifecycleMethods: true});
 
 window.$ = window.jQuery = jQuery;
 window.sinon = sinon;
-
+window.Raven = {
+  captureMessage: sinon.spy(),
+  captureException: sinon.spy(),
+};
 window.TestStubs = {
   // react-router's 'router' context
   router: () => ({
diff --git a/tests/js/spec/components/__snapshots__/actorAvatar.spec.jsx.snap b/tests/js/spec/components/__snapshots__/actorAvatar.spec.jsx.snap
new file mode 100644
index 0000000000..34f99fa55d
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/actorAvatar.spec.jsx.snap
@@ -0,0 +1,35 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Avatar render() should show a gravatar when actor type is a team 1`] = `
+<TeamAvatar
+  className="avatar"
+  hasTooltip={true}
+  team={
+    Object {
+      "id": "3",
+      "name": "COOL TEAM",
+      "projects": Array [
+        Object {
+          "slug": 2,
+        },
+      ],
+    }
+  }
+/>
+`;
+
+exports[`Avatar render() should show a gravatar when actor type is a user 1`] = `
+<Avatar
+  className="avatar"
+  gravatar={true}
+  hasTooltip={true}
+  size={64}
+  user={
+    Object {
+      "email": "janedoe@example.com",
+      "id": "1",
+      "name": "Jane Doe",
+    }
+  }
+/>
+`;
diff --git a/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap b/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
index 0d4ea4712b..6912b0284c 100644
--- a/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
@@ -43,6 +43,7 @@ exports[`ResolutionBox render() handles inNextRelease with actor 1`] = `
         <Avatar
           className="avatar"
           gravatar={true}
+          hasTooltip={false}
           size={20}
           user={
             Object {
@@ -121,6 +122,7 @@ exports[`ResolutionBox render() handles inRelease with actor 1`] = `
         <Avatar
           className="avatar"
           gravatar={true}
+          hasTooltip={false}
           size={20}
           user={
             Object {
diff --git a/tests/js/spec/components/__snapshots__/teamAvatar.spec.jsx.snap b/tests/js/spec/components/__snapshots__/teamAvatar.spec.jsx.snap
index 905da3571b..f8e8176ef9 100644
--- a/tests/js/spec/components/__snapshots__/teamAvatar.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/teamAvatar.spec.jsx.snap
@@ -5,6 +5,7 @@ exports[`TeamAvatar render() renders 1`] = `
   className="avatar"
 >
   <Tooltip
+    disabled={true}
     title="Team Name"
   >
     <LetterAvatar
diff --git a/tests/js/spec/components/actorAvatar.spec.jsx b/tests/js/spec/components/actorAvatar.spec.jsx
new file mode 100644
index 0000000000..e49dc99b01
--- /dev/null
+++ b/tests/js/spec/components/actorAvatar.spec.jsx
@@ -0,0 +1,79 @@
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+import ActorAvatar from 'app/components/actorAvatar';
+import MemberListStore from 'app/stores/memberListStore';
+import TeamStore from 'app/stores/teamStore';
+
+describe('Avatar', function() {
+  let sandbox;
+
+  const USER = {
+    id: '1',
+    name: 'Jane Doe',
+    email: 'janedoe@example.com',
+  };
+  const TEAM_1 = {
+    id: '3',
+    name: 'COOL TEAM',
+    projects: [
+      {
+        slug: 2,
+      },
+    ],
+  };
+  beforeEach(function() {
+    sandbox = sinon.sandbox.create();
+    MemberListStore.loadInitialData([USER]);
+    TeamStore.loadInitialData([TEAM_1]);
+  });
+
+  afterEach(function() {
+    sandbox.restore();
+  });
+
+  describe('render()', function() {
+    it('should show a gravatar when actor type is a user', function() {
+      let avatar = shallow(
+        <ActorAvatar
+          actor={{
+            id: '1',
+            name: 'Jane Doe',
+            type: 'user',
+          }}
+        />
+      );
+      expect(avatar).toMatchSnapshot();
+    });
+
+    it('should show a gravatar when actor type is a team', function() {
+      let avatar = shallow(
+        <ActorAvatar
+          actor={{
+            id: '3',
+            name: 'COOL TEAM',
+            type: 'team',
+          }}
+        />
+      );
+      expect(avatar).toMatchSnapshot();
+    });
+
+    it('should return null when actor type is a unknown', function() {
+      window.console.error = jest.genMockFunction();
+
+      let avatar = mount(
+        <ActorAvatar
+          actor={{
+            id: '3',
+            name: 'COOL TEAM',
+            type: 'teapot',
+          }}
+        />
+      );
+
+      expect(avatar.html()).toBe(null);
+      //proptype warning
+      expect(window.console.error.mock.calls.length).toBeGreaterThan(0);
+    });
+  });
+});
diff --git a/tests/js/spec/components/assigneeSelector.spec.jsx b/tests/js/spec/components/assigneeSelector.spec.jsx
index 8241529df2..5a684f72b5 100644
--- a/tests/js/spec/components/assigneeSelector.spec.jsx
+++ b/tests/js/spec/components/assigneeSelector.spec.jsx
@@ -3,41 +3,58 @@ import {mount} from 'enzyme';
 import AssigneeSelector from 'app/components/assigneeSelector';
 
 import LoadingIndicator from 'app/components/loadingIndicator';
+import {Client} from 'app/api';
 
 import GroupStore from 'app/stores/groupStore';
 import MemberListStore from 'app/stores/memberListStore';
 import ConfigStore from 'app/stores/configStore';
+import TeamStore from 'app/stores/teamStore';
 
 import stubReactComponents from '../../helpers/stubReactComponent';
 
 describe('AssigneeSelector', function() {
   let sandbox;
   let assigneeSelector;
-  let assignTo;
+  let assignToUser;
 
   const USER_1 = {
-    id: 1,
+    id: '1',
     name: 'Jane Doe',
     email: 'janedoe@example.com',
   };
   const USER_2 = {
-    id: 2,
+    id: '2',
     name: 'John Smith',
     email: 'johnsmith@example.com',
   };
   const USER_3 = {
-    id: 3,
+    id: '3',
     name: 'J J',
     email: 'jj@example.com',
   };
 
+  const TEAM_1 = {
+    id: '3',
+    name: 'COOL TEAM',
+    slug: 'cool-team',
+    projects: [
+      {
+        slug: '2',
+      },
+    ],
+  };
+
   beforeEach(function() {
     sandbox = sinon.sandbox.create();
     stubReactComponents(sandbox, [LoadingIndicator]);
 
     sandbox.stub(MemberListStore, 'getAll').returns([USER_1, USER_2]);
+    sandbox.stub(TeamStore, 'getAll').returns([TEAM_1]);
     sandbox.stub(GroupStore, 'get').returns({
-      id: 1337,
+      id: '1337',
+      project: {
+        slug: '2',
+      },
       assignedTo: null,
     });
   });
@@ -80,7 +97,7 @@ describe('AssigneeSelector', function() {
           .stub(ConfigStore, 'get')
           .withArgs('user')
           .returns({
-            id: 2,
+            id: '2',
             name: 'John Smith',
             email: 'johnsmith@example.com',
           });
@@ -92,7 +109,7 @@ describe('AssigneeSelector', function() {
           .stub(ConfigStore, 'get')
           .withArgs('user')
           .returns({
-            id: 555,
+            id: '555',
             name: 'Here Comes a New Challenger',
             email: 'guile@mail.us.af.mil',
           });
@@ -109,16 +126,46 @@ describe('AssigneeSelector', function() {
       // Reset sandbox because we don't want <LoadingIndicator /> stubbed
       sandbox.restore();
       sandbox = sinon.sandbox.create();
-      sandbox.stub(GroupStore, 'get').returns({
-        id: 1337,
-        assignedTo: null,
+      sandbox.stub(TeamStore, 'getAll').returns([TEAM_1]);
+
+      GroupStore.loadInitialData([
+        {
+          id: '1337',
+          project: {
+            slug: '2',
+          },
+          assignedTo: null,
+        },
+      ]);
+
+      Client.addMockResponse({
+        method: 'PUT',
+        url: '/issues/1337/',
+        body: {
+          id: '1337',
+          assignedTo: {
+            id: '1',
+            type: 'user',
+            name: 'Jane Doe',
+          },
+        },
       });
+
       MemberListStore.items = [];
       MemberListStore.loaded = false;
-      assigneeSelector = mount(<AssigneeSelector id="1337" />);
+
+      assigneeSelector = mount(<AssigneeSelector id="1337" />, TestStubs.routerContext());
+      assigneeSelector.setContext({
+        organization: {id: '1', features: new Set(['internal-catchall'])},
+      });
+
       openMenu = () => assigneeSelector.find('a').simulate('click');
     });
 
+    afterEach(function() {
+      Client.clearMockResponses();
+    });
+
     it('should initially have loading state', function() {
       openMenu();
       expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(true);
@@ -128,8 +175,10 @@ describe('AssigneeSelector', function() {
       openMenu();
       MemberListStore.loadInitialData([USER_1, USER_2]);
       assigneeSelector.update();
+      expect(assigneeSelector.instance().assignableTeams().length).toBe(1);
 
       expect(assigneeSelector.find('Avatar').length).toBe(2);
+      expect(assigneeSelector.find('TeamAvatar').length).toBe(1);
       expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(false);
     });
 
@@ -147,6 +196,76 @@ describe('AssigneeSelector', function() {
       expect(assigneeSelector.find('Avatar').length).toBe(2);
       expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(false);
     });
+
+    it('successfully assigns users', function(done) {
+      openMenu();
+      MemberListStore.loadInitialData([USER_1, USER_2]);
+      assigneeSelector.update();
+      assigneeSelector
+        .find('Avatar')
+        .first()
+        .simulate('click');
+      assigneeSelector.update();
+      expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(true);
+
+      setTimeout(() => {
+        assigneeSelector.update();
+        expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(false);
+        expect(assigneeSelector.find('ActorAvatar').length).toBe(1);
+        done();
+      }, 100); //hack
+    });
+
+    it('successfully assigns teams', function(done) {
+      openMenu();
+      MemberListStore.loadInitialData([USER_1, USER_2]);
+      assigneeSelector.update();
+      assigneeSelector
+        .find('TeamAvatar')
+        .first()
+        .simulate('click');
+      assigneeSelector.update();
+      expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(true);
+
+      setTimeout(() => {
+        assigneeSelector.update();
+        expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(false);
+        expect(assigneeSelector.find('ActorAvatar').length).toBe(1);
+        done();
+      }, 100); //hack
+    });
+
+    it('successfully clears assignment', function() {
+      openMenu();
+      MemberListStore.loadInitialData([USER_1, USER_2]);
+      assigneeSelector.update();
+      assigneeSelector
+        .find('Avatar')
+        .first()
+        .simulate('click');
+      assigneeSelector.update();
+      expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(true);
+
+      expect(
+        Client.findMockResponse('/issues/1337/', {
+          method: 'PUT',
+        })[0].callCount
+      ).toBe(1);
+
+      assigneeSelector.instance().clearAssignTo();
+
+      expect(
+        Client.findMockResponse('/issues/1337/', {
+          method: 'PUT',
+        })[0].callCount
+      ).toBe(2);
+      //api was called with empty string, clearing assignment
+      expect(
+        Client.findMockResponse('/issues/1337/', {
+          method: 'PUT',
+        })[1].mock.calls[1][1].data.assignedTo
+      ).toBe('');
+    });
   });
 
   describe('onFilterKeyDown()', function() {
@@ -155,11 +274,11 @@ describe('AssigneeSelector', function() {
       if (assigneeSelector) {
         assigneeSelector.unmount();
       }
-      assigneeSelector = mount(<AssigneeSelector id="1337" />);
+      assigneeSelector = mount(<AssigneeSelector id="1337" />, TestStubs.routerContext());
       // open menu
       assigneeSelector.find('a').simulate('click');
 
-      assignTo = sandbox.stub(assigneeSelector.instance(), 'assignTo');
+      assignToUser = sandbox.stub(assigneeSelector.instance(), 'assignToUser');
     });
 
     afterEach(function() {
@@ -172,8 +291,8 @@ describe('AssigneeSelector', function() {
       let filter = assigneeSelector.find('input');
       filter.simulate('keyDown', {key: 'Enter', keyCode: 13, which: 13});
 
-      expect(assignTo.calledOnce).toBeTruthy();
-      expect(assignTo.lastCall.args[0]).toHaveProperty('name', 'Jane Doe');
+      expect(assignToUser.calledOnce).toBeTruthy();
+      expect(assignToUser.lastCall.args[0]).toHaveProperty('name', 'Jane Doe');
     });
 
     it('should do nothing when the Enter key is pressed, but filter is the empty string', function() {
@@ -182,7 +301,7 @@ describe('AssigneeSelector', function() {
       let filter = assigneeSelector.find('input');
       filter.simulate('keyDown', {key: 'Enter', keyCode: 13, which: 13});
 
-      expect(assignTo.notCalled).toBeTruthy();
+      expect(assignToUser.notCalled).toBeTruthy();
     });
 
     it('should do nothing if a non-Enter key is pressed', function() {
@@ -190,7 +309,7 @@ describe('AssigneeSelector', function() {
 
       let filter = assigneeSelector.find('input');
       filter.simulate('keyDown', {key: 'h', keyCode: 72, which: 72});
-      expect(assignTo.notCalled).toBeTruthy();
+      expect(assignToUser.notCalled).toBeTruthy();
     });
   });
 
@@ -201,7 +320,7 @@ describe('AssigneeSelector', function() {
         assigneeSelector.unmount();
       }
 
-      assigneeSelector = mount(<AssigneeSelector id="1337" />);
+      assigneeSelector = mount(<AssigneeSelector id="1337" />, TestStubs.routerContext());
 
       // open menu
       assigneeSelector.find('a').simulate('click');
@@ -224,21 +343,4 @@ describe('AssigneeSelector', function() {
       expect(assigneeSelector.state('filter')).toEqual('foo');
     });
   });
-
-  describe('componentDidUpdate()', function() {
-    beforeEach(function() {
-      assigneeSelector = mount(<AssigneeSelector id="1337" />);
-    });
-
-    it('should destroy old assignee tooltip and create a new assignee tooltip', function() {
-      let instance = assigneeSelector.instance();
-      sandbox.spy(instance, 'attachTooltips');
-      sandbox.spy(instance, 'removeTooltips');
-
-      assigneeSelector.setState({assignedTo: USER_1});
-
-      expect(instance.attachTooltips.calledOnce).toBeTruthy();
-      expect(instance.removeTooltips.calledOnce).toBeTruthy();
-    });
-  });
 });
diff --git a/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap
index 52f521fec5..423c8381fa 100644
--- a/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap
@@ -1100,6 +1100,7 @@ exports[`AuditLogView renders 1`] = `
                                     <Avatar
                                       className="avatar"
                                       gravatar={true}
+                                      hasTooltip={false}
                                       size={64}
                                       style={
                                         Object {
@@ -1179,122 +1180,127 @@ exports[`AuditLogView renders 1`] = `
                                         }
                                       }
                                     >
-                                      <span
-                                        className="avatar"
-                                        style={
-                                          Object {
-                                            "height": 36,
-                                            "marginRight": 8,
-                                            "width": 36,
-                                          }
-                                        }
+                                      <Tooltip
+                                        disabled={true}
+                                        title="billy vong (billy@sentry.io)"
                                       >
-                                        <UserLetterAvatar
-                                          user={
+                                        <span
+                                          className="avatar"
+                                          style={
                                             Object {
-                                              "avatar": Object {
-                                                "avatarType": "letter_avatar",
-                                                "avatarUuid": "483ed7478a2248d59211f538c2997e0b",
-                                              },
-                                              "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
-                                              "dateJoined": "2018-01-10T00:19:59Z",
-                                              "email": "billy@sentry.io",
-                                              "emails": Array [
-                                                Object {
-                                                  "email": "billy@sentry.io",
-                                                  "id": "5",
-                                                  "is_verified": true,
-                                                },
-                                                Object {
-                                                  "email": "billy36@sentry.io",
-                                                  "id": "17",
-                                                  "is_verified": false,
-                                                },
-                                                Object {
-                                                  "email": "awerawer@awe.com",
-                                                  "id": "11",
-                                                  "is_verified": false,
-                                                },
-                                                Object {
-                                                  "email": "test@test.com",
-                                                  "id": "28",
-                                                  "is_verified": false,
-                                                },
-                                                Object {
-                                                  "email": "billy2@sentry.io",
-                                                  "id": "10",
-                                                  "is_verified": true,
+                                              "height": 36,
+                                              "marginRight": 8,
+                                              "width": 36,
+                                            }
+                                          }
+                                        >
+                                          <UserLetterAvatar
+                                            user={
+                                              Object {
+                                                "avatar": Object {
+                                                  "avatarType": "letter_avatar",
+                                                  "avatarUuid": "483ed7478a2248d59211f538c2997e0b",
                                                 },
-                                              ],
-                                              "has2fa": true,
-                                              "id": "1",
-                                              "identities": Array [
-                                                Object {
-                                                  "dateSynced": "2018-02-21T17:09:46.248Z",
-                                                  "dateVerified": "2018-02-21T17:09:46.248Z",
-                                                  "id": "1",
-                                                  "name": "79684",
-                                                  "organization": Object {
-                                                    "name": "default",
-                                                    "slug": "default",
+                                                "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
+                                                "dateJoined": "2018-01-10T00:19:59Z",
+                                                "email": "billy@sentry.io",
+                                                "emails": Array [
+                                                  Object {
+                                                    "email": "billy@sentry.io",
+                                                    "id": "5",
+                                                    "is_verified": true,
+                                                  },
+                                                  Object {
+                                                    "email": "billy36@sentry.io",
+                                                    "id": "17",
+                                                    "is_verified": false,
+                                                  },
+                                                  Object {
+                                                    "email": "awerawer@awe.com",
+                                                    "id": "11",
+                                                    "is_verified": false,
+                                                  },
+                                                  Object {
+                                                    "email": "test@test.com",
+                                                    "id": "28",
+                                                    "is_verified": false,
+                                                  },
+                                                  Object {
+                                                    "email": "billy2@sentry.io",
+                                                    "id": "10",
+                                                    "is_verified": true,
                                                   },
-                                                  "provider": Object {
-                                                    "id": "github",
-                                                    "name": "GitHub",
+                                                ],
+                                                "has2fa": true,
+                                                "id": "1",
+                                                "identities": Array [
+                                                  Object {
+                                                    "dateSynced": "2018-02-21T17:09:46.248Z",
+                                                    "dateVerified": "2018-02-21T17:09:46.248Z",
+                                                    "id": "1",
+                                                    "name": "79684",
+                                                    "organization": Object {
+                                                      "name": "default",
+                                                      "slug": "default",
+                                                    },
+                                                    "provider": Object {
+                                                      "id": "github",
+                                                      "name": "GitHub",
+                                                    },
                                                   },
+                                                ],
+                                                "isActive": true,
+                                                "isManaged": false,
+                                                "lastActive": "2018-02-21T17:40:31.555Z",
+                                                "lastLogin": "2018-02-14T07:09:37.536Z",
+                                                "name": "billy vong",
+                                                "options": Object {
+                                                  "clock24Hours": false,
+                                                  "language": "en",
+                                                  "seenReleaseBroadcast": true,
+                                                  "stacktraceOrder": -1,
+                                                  "timezone": "America/Los_Angeles",
                                                 },
-                                              ],
-                                              "isActive": true,
-                                              "isManaged": false,
-                                              "lastActive": "2018-02-21T17:40:31.555Z",
-                                              "lastLogin": "2018-02-14T07:09:37.536Z",
-                                              "name": "billy vong",
-                                              "options": Object {
-                                                "clock24Hours": false,
-                                                "language": "en",
-                                                "seenReleaseBroadcast": true,
-                                                "stacktraceOrder": -1,
-                                                "timezone": "America/Los_Angeles",
-                                              },
-                                              "permissions": Array [],
-                                              "username": "billy@sentry.io",
+                                                "permissions": Array [],
+                                                "username": "billy@sentry.io",
+                                              }
                                             }
-                                          }
-                                        >
-                                          <LetterAvatar
-                                            displayName="billy vong"
-                                            identifier="billy@sentry.io"
                                           >
-                                            <svg
-                                              viewBox="0 0 120 120"
+                                            <LetterAvatar
+                                              displayName="billy vong"
+                                              identifier="billy@sentry.io"
                                             >
-                                              <rect
-                                                fill="#f868bc"
-                                                height="120"
-                                                rx="15"
-                                                ry="15"
-                                                width="120"
-                                                x="0"
-                                                y="0"
-                                              />
-                                              <text
-                                                fill="#FFFFFF"
-                                                fontSize="65"
-                                                style={
-                                                  Object {
-                                                    "dominantBaseline": "central",
-                                                  }
-                                                }
-                                                textAnchor="middle"
-                                                x="50%"
-                                                y="50%"
+                                              <svg
+                                                viewBox="0 0 120 120"
                                               >
-                                                BV
-                                              </text>
-                                            </svg>
-                                          </LetterAvatar>
-                                        </UserLetterAvatar>
-                                      </span>
+                                                <rect
+                                                  fill="#f868bc"
+                                                  height="120"
+                                                  rx="15"
+                                                  ry="15"
+                                                  width="120"
+                                                  x="0"
+                                                  y="0"
+                                                />
+                                                <text
+                                                  fill="#FFFFFF"
+                                                  fontSize="65"
+                                                  style={
+                                                    Object {
+                                                      "dominantBaseline": "central",
+                                                    }
+                                                  }
+                                                  textAnchor="middle"
+                                                  x="50%"
+                                                  y="50%"
+                                                >
+                                                  BV
+                                                </text>
+                                              </svg>
+                                            </LetterAvatar>
+                                          </UserLetterAvatar>
+                                        </span>
+                                      </Tooltip>
                                     </Avatar>
                                   </div>
                                   <NameContainer>
@@ -1413,6 +1419,7 @@ exports[`AuditLogView renders 1`] = `
                                     <Avatar
                                       className="avatar"
                                       gravatar={true}
+                                      hasTooltip={false}
                                       size={64}
                                       style={
                                         Object {
@@ -1492,122 +1499,127 @@ exports[`AuditLogView renders 1`] = `
                                         }
                                       }
                                     >
-                                      <span
-                                        className="avatar"
-                                        style={
-                                          Object {
-                                            "height": 36,
-                                            "marginRight": 8,
-                                            "width": 36,
-                                          }
-                                        }
+                                      <Tooltip
+                                        disabled={true}
+                                        title="billy vong (billy@sentry.io)"
                                       >
-                                        <UserLetterAvatar
-                                          user={
+                                        <span
+                                          className="avatar"
+                                          style={
                                             Object {
-                                              "avatar": Object {
-                                                "avatarType": "letter_avatar",
-                                                "avatarUuid": "483ed7478a2248d59211f538c2997e0b",
-                                              },
-                                              "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
-                                              "dateJoined": "2018-01-10T00:19:59Z",
-                                              "email": "billy@sentry.io",
-                                              "emails": Array [
-                                                Object {
-                                                  "email": "billy@sentry.io",
-                                                  "id": "5",
-                                                  "is_verified": true,
-                                                },
-                                                Object {
-                                                  "email": "billy36@sentry.io",
-                                                  "id": "17",
-                                                  "is_verified": false,
-                                                },
-                                                Object {
-                                                  "email": "awerawer@awe.com",
-                                                  "id": "11",
-                                                  "is_verified": false,
-                                                },
-                                                Object {
-                                                  "email": "test@test.com",
-                                                  "id": "28",
-                                                  "is_verified": false,
-                                                },
-                                                Object {
-                                                  "email": "billy2@sentry.io",
-                                                  "id": "10",
-                                                  "is_verified": true,
+                                              "height": 36,
+                                              "marginRight": 8,
+                                              "width": 36,
+                                            }
+                                          }
+                                        >
+                                          <UserLetterAvatar
+                                            user={
+                                              Object {
+                                                "avatar": Object {
+                                                  "avatarType": "letter_avatar",
+                                                  "avatarUuid": "483ed7478a2248d59211f538c2997e0b",
                                                 },
-                                              ],
-                                              "has2fa": true,
-                                              "id": "1",
-                                              "identities": Array [
-                                                Object {
-                                                  "dateSynced": "2018-02-21T17:09:46.248Z",
-                                                  "dateVerified": "2018-02-21T17:09:46.248Z",
-                                                  "id": "1",
-                                                  "name": "79684",
-                                                  "organization": Object {
-                                                    "name": "default",
-                                                    "slug": "default",
+                                                "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
+                                                "dateJoined": "2018-01-10T00:19:59Z",
+                                                "email": "billy@sentry.io",
+                                                "emails": Array [
+                                                  Object {
+                                                    "email": "billy@sentry.io",
+                                                    "id": "5",
+                                                    "is_verified": true,
+                                                  },
+                                                  Object {
+                                                    "email": "billy36@sentry.io",
+                                                    "id": "17",
+                                                    "is_verified": false,
+                                                  },
+                                                  Object {
+                                                    "email": "awerawer@awe.com",
+                                                    "id": "11",
+                                                    "is_verified": false,
+                                                  },
+                                                  Object {
+                                                    "email": "test@test.com",
+                                                    "id": "28",
+                                                    "is_verified": false,
+                                                  },
+                                                  Object {
+                                                    "email": "billy2@sentry.io",
+                                                    "id": "10",
+                                                    "is_verified": true,
                                                   },
-                                                  "provider": Object {
-                                                    "id": "github",
-                                                    "name": "GitHub",
+                                                ],
+                                                "has2fa": true,
+                                                "id": "1",
+                                                "identities": Array [
+                                                  Object {
+                                                    "dateSynced": "2018-02-21T17:09:46.248Z",
+                                                    "dateVerified": "2018-02-21T17:09:46.248Z",
+                                                    "id": "1",
+                                                    "name": "79684",
+                                                    "organization": Object {
+                                                      "name": "default",
+                                                      "slug": "default",
+                                                    },
+                                                    "provider": Object {
+                                                      "id": "github",
+                                                      "name": "GitHub",
+                                                    },
                                                   },
+                                                ],
+                                                "isActive": true,
+                                                "isManaged": false,
+                                                "lastActive": "2018-02-21T17:40:31.555Z",
+                                                "lastLogin": "2018-02-14T07:09:37.536Z",
+                                                "name": "billy vong",
+                                                "options": Object {
+                                                  "clock24Hours": false,
+                                                  "language": "en",
+                                                  "seenReleaseBroadcast": true,
+                                                  "stacktraceOrder": -1,
+                                                  "timezone": "America/Los_Angeles",
                                                 },
-                                              ],
-                                              "isActive": true,
-                                              "isManaged": false,
-                                              "lastActive": "2018-02-21T17:40:31.555Z",
-                                              "lastLogin": "2018-02-14T07:09:37.536Z",
-                                              "name": "billy vong",
-                                              "options": Object {
-                                                "clock24Hours": false,
-                                                "language": "en",
-                                                "seenReleaseBroadcast": true,
-                                                "stacktraceOrder": -1,
-                                                "timezone": "America/Los_Angeles",
-                                              },
-                                              "permissions": Array [],
-                                              "username": "billy@sentry.io",
+                                                "permissions": Array [],
+                                                "username": "billy@sentry.io",
+                                              }
                                             }
-                                          }
-                                        >
-                                          <LetterAvatar
-                                            displayName="billy vong"
-                                            identifier="billy@sentry.io"
                                           >
-                                            <svg
-                                              viewBox="0 0 120 120"
+                                            <LetterAvatar
+                                              displayName="billy vong"
+                                              identifier="billy@sentry.io"
                                             >
-                                              <rect
-                                                fill="#f868bc"
-                                                height="120"
-                                                rx="15"
-                                                ry="15"
-                                                width="120"
-                                                x="0"
-                                                y="0"
-                                              />
-                                              <text
-                                                fill="#FFFFFF"
-                                                fontSize="65"
-                                                style={
-                                                  Object {
-                                                    "dominantBaseline": "central",
-                                                  }
-                                                }
-                                                textAnchor="middle"
-                                                x="50%"
-                                                y="50%"
+                                              <svg
+                                                viewBox="0 0 120 120"
                                               >
-                                                BV
-                                              </text>
-                                            </svg>
-                                          </LetterAvatar>
-                                        </UserLetterAvatar>
-                                      </span>
+                                                <rect
+                                                  fill="#f868bc"
+                                                  height="120"
+                                                  rx="15"
+                                                  ry="15"
+                                                  width="120"
+                                                  x="0"
+                                                  y="0"
+                                                />
+                                                <text
+                                                  fill="#FFFFFF"
+                                                  fontSize="65"
+                                                  style={
+                                                    Object {
+                                                      "dominantBaseline": "central",
+                                                    }
+                                                  }
+                                                  textAnchor="middle"
+                                                  x="50%"
+                                                  y="50%"
+                                                >
+                                                  BV
+                                                </text>
+                                              </svg>
+                                            </LetterAvatar>
+                                          </UserLetterAvatar>
+                                        </span>
+                                      </Tooltip>
                                     </Avatar>
                                   </div>
                                   <NameContainer>
diff --git a/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap
index aa106e7c9c..f38b0ea189 100644
--- a/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap
@@ -480,6 +480,7 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                 <Avatar
                                   className="avatar"
                                   gravatar={true}
+                                  hasTooltip={false}
                                   size={64}
                                   style={
                                     Object {
@@ -497,21 +498,26 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                     }
                                   }
                                 >
-                                  <span
-                                    className="avatar"
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                  <Tooltip
+                                    disabled={true}
+                                    title="Sentry 1 Name (sentry1@test.com)"
                                   >
-                                    <img
-                                      onError={[Function]}
-                                      onLoad={[Function]}
-                                      src="undefined/avatar/c68ca8af553301ae11c5607b8bb672b4?s=64&d=blank"
-                                    />
-                                  </span>
+                                    <span
+                                      className="avatar"
+                                      style={
+                                        Object {
+                                          "height": 32,
+                                          "width": 32,
+                                        }
+                                      }
+                                    >
+                                      <img
+                                        onError={[Function]}
+                                        onLoad={[Function]}
+                                        src="undefined/avatar/c68ca8af553301ae11c5607b8bb672b4?s=64&d=blank"
+                                      />
+                                    </span>
+                                  </Tooltip>
                                 </Avatar>
                               </div>
                             </Base>
@@ -747,6 +753,7 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                 <Avatar
                                   className="avatar"
                                   gravatar={true}
+                                  hasTooltip={false}
                                   size={64}
                                   style={
                                     Object {
@@ -764,21 +771,26 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                     }
                                   }
                                 >
-                                  <span
-                                    className="avatar"
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                  <Tooltip
+                                    disabled={true}
+                                    title="Sentry 2 Name (sentry2@test.com)"
                                   >
-                                    <img
-                                      onError={[Function]}
-                                      onLoad={[Function]}
-                                      src="undefined/avatar/4eca4e68b0a900e542fdf17e57d04dcd?s=64&d=blank"
-                                    />
-                                  </span>
+                                    <span
+                                      className="avatar"
+                                      style={
+                                        Object {
+                                          "height": 32,
+                                          "width": 32,
+                                        }
+                                      }
+                                    >
+                                      <img
+                                        onError={[Function]}
+                                        onLoad={[Function]}
+                                        src="undefined/avatar/4eca4e68b0a900e542fdf17e57d04dcd?s=64&d=blank"
+                                      />
+                                    </span>
+                                  </Tooltip>
                                 </Avatar>
                               </div>
                             </Base>
@@ -1009,6 +1021,7 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                 <Avatar
                                   className="avatar"
                                   gravatar={true}
+                                  hasTooltip={false}
                                   size={64}
                                   style={
                                     Object {
@@ -1026,21 +1039,26 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                     }
                                   }
                                 >
-                                  <span
-                                    className="avatar"
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                  <Tooltip
+                                    disabled={true}
+                                    title="Sentry 3 Name (sentry3@test.com)"
                                   >
-                                    <img
-                                      onError={[Function]}
-                                      onLoad={[Function]}
-                                      src="undefined/avatar/40d78e2a4587a53a171944ffe71ee3d4?s=64&d=blank"
-                                    />
-                                  </span>
+                                    <span
+                                      className="avatar"
+                                      style={
+                                        Object {
+                                          "height": 32,
+                                          "width": 32,
+                                        }
+                                      }
+                                    >
+                                      <img
+                                        onError={[Function]}
+                                        onLoad={[Function]}
+                                        src="undefined/avatar/40d78e2a4587a53a171944ffe71ee3d4?s=64&d=blank"
+                                      />
+                                    </span>
+                                  </Tooltip>
                                 </Avatar>
                               </div>
                             </Base>
@@ -1674,6 +1692,7 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                 <Avatar
                                   className="avatar"
                                   gravatar={true}
+                                  hasTooltip={false}
                                   size={64}
                                   style={
                                     Object {
@@ -1691,21 +1710,26 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                     }
                                   }
                                 >
-                                  <span
-                                    className="avatar"
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                  <Tooltip
+                                    disabled={true}
+                                    title="Sentry 1 Name (sentry1@test.com)"
                                   >
-                                    <img
-                                      onError={[Function]}
-                                      onLoad={[Function]}
-                                      src="undefined/avatar/c68ca8af553301ae11c5607b8bb672b4?s=64&d=blank"
-                                    />
-                                  </span>
+                                    <span
+                                      className="avatar"
+                                      style={
+                                        Object {
+                                          "height": 32,
+                                          "width": 32,
+                                        }
+                                      }
+                                    >
+                                      <img
+                                        onError={[Function]}
+                                        onLoad={[Function]}
+                                        src="undefined/avatar/c68ca8af553301ae11c5607b8bb672b4?s=64&d=blank"
+                                      />
+                                    </span>
+                                  </Tooltip>
                                 </Avatar>
                               </div>
                             </Base>
@@ -1972,6 +1996,7 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                 <Avatar
                                   className="avatar"
                                   gravatar={true}
+                                  hasTooltip={false}
                                   size={64}
                                   style={
                                     Object {
@@ -1989,21 +2014,26 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                     }
                                   }
                                 >
-                                  <span
-                                    className="avatar"
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                  <Tooltip
+                                    disabled={true}
+                                    title="Sentry 2 Name (sentry2@test.com)"
                                   >
-                                    <img
-                                      onError={[Function]}
-                                      onLoad={[Function]}
-                                      src="undefined/avatar/4eca4e68b0a900e542fdf17e57d04dcd?s=64&d=blank"
-                                    />
-                                  </span>
+                                    <span
+                                      className="avatar"
+                                      style={
+                                        Object {
+                                          "height": 32,
+                                          "width": 32,
+                                        }
+                                      }
+                                    >
+                                      <img
+                                        onError={[Function]}
+                                        onLoad={[Function]}
+                                        src="undefined/avatar/4eca4e68b0a900e542fdf17e57d04dcd?s=64&d=blank"
+                                      />
+                                    </span>
+                                  </Tooltip>
                                 </Avatar>
                               </div>
                             </Base>
@@ -2270,6 +2300,7 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                 <Avatar
                                   className="avatar"
                                   gravatar={true}
+                                  hasTooltip={false}
                                   size={64}
                                   style={
                                     Object {
@@ -2287,21 +2318,26 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                     }
                                   }
                                 >
-                                  <span
-                                    className="avatar"
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                  <Tooltip
+                                    disabled={true}
+                                    title="Sentry 3 Name (sentry3@test.com)"
                                   >
-                                    <img
-                                      onError={[Function]}
-                                      onLoad={[Function]}
-                                      src="undefined/avatar/40d78e2a4587a53a171944ffe71ee3d4?s=64&d=blank"
-                                    />
-                                  </span>
+                                    <span
+                                      className="avatar"
+                                      style={
+                                        Object {
+                                          "height": 32,
+                                          "width": 32,
+                                        }
+                                      }
+                                    >
+                                      <img
+                                        onError={[Function]}
+                                        onLoad={[Function]}
+                                        src="undefined/avatar/40d78e2a4587a53a171944ffe71ee3d4?s=64&d=blank"
+                                      />
+                                    </span>
+                                  </Tooltip>
                                 </Avatar>
                               </div>
                             </Base>
