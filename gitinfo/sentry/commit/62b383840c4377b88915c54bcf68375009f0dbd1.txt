commit 62b383840c4377b88915c54bcf68375009f0dbd1
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Sun May 15 16:47:35 2016 +0200

    Some improvements on text and ui for 2fa

diff --git a/src/sentry/models/authenticator.py b/src/sentry/models/authenticator.py
index c5a10d948f..7822f9648c 100644
--- a/src/sentry/models/authenticator.py
+++ b/src/sentry/models/authenticator.py
@@ -121,7 +121,7 @@ class AuthenticatorInterface(object):
     description = None
     backup_interface = False
     enroll_button = _('Enroll')
-    configure_button = _('Configure')
+    configure_button = _('Info')
     remove_button = _('Remove')
     is_available = True
 
@@ -293,6 +293,7 @@ class SmsInterface(OtpMixin, AuthenticatorInterface):
                     'verification.  It\'s useful as a backup method '
                     'or when you do not have a phone that supports '
                     'an authenticator application.')
+    code_ttl = 45
 
     @property
     def is_available(self):
@@ -304,7 +305,8 @@ class SmsInterface(OtpMixin, AuthenticatorInterface):
         return config
 
     def make_otp(self):
-        return TOTP(self.config['secret'], digits=4, interval=60)
+        return TOTP(self.config['secret'], digits=6, interval=self.code_ttl,
+                    default_window=1)
 
     def _get_phone_number(self):
         return self.config['phone_number']
@@ -316,15 +318,27 @@ class SmsInterface(OtpMixin, AuthenticatorInterface):
     del _get_phone_number, _set_phone_number
 
     def activate(self, request):
-        if self.send_text():
-            return _('A confirmation code was sent to your phone.')
-        return _('Error: we failed to send a text message to you.  You '
+        if self.send_text(request=request):
+            return _('A confirmation code was sent to your phone. '
+                     'It is valid for %d seconds.') % self.code_ttl
+        return _('Error: we failed to send a text message to you. You '
                  'can try again later or sign in with a different method.')
 
-    def send_text(self):
-        code = self.make_otp().generate_otp()
-        return send_sms('Your Sentry authentication code is %s.' % code,
-                        to=self.phone_number)
+    def send_text(self, for_enrollment=False, request=None):
+        ctx = {'code': self.make_otp().generate_otp()}
+
+        if for_enrollment:
+            text = _('You are about to set up two-factor authentication '
+                     'through text messages. Your confirmation code is '
+                     '%(code)s.')
+        else:
+            text = _('Your Sentry authentication code is %(code)s.')
+
+        if request is not None:
+            text = u'%s\n\n%s' % (text, _('Requested from %(ip)s'))
+            ctx['ip'] = request.META['REMOTE_ADDR']
+
+        return send_sms(text % ctx, to=self.phone_number)
 
 
 class Authenticator(BaseModel):
diff --git a/src/sentry/templates/sentry/account/twofactor/enroll_sms.html b/src/sentry/templates/sentry/account/twofactor/enroll_sms.html
index 42d9105db7..ac4511ad78 100644
--- a/src/sentry/templates/sentry/account/twofactor/enroll_sms.html
+++ b/src/sentry/templates/sentry/account/twofactor/enroll_sms.html
@@ -36,7 +36,7 @@
       <input type="hidden" name="enroll">
       <input type="hidden" name="totp_secret" value="{{ auth.secret }}">
       <div>
-        <a href="{% url 'sentry-account-settings-2fa-totp' %}" class="btn btn-default">{% trans "Cancel" %}</a>
+        <a href="{% url 'sentry-account-settings-2fa-sms' %}" class="btn btn-default">{% trans "Cancel" %}</a>
         {% if not auth.phone_number %}
         <button type="submit" class="btn btn-primary">{% trans "Send Confirmation Code" %}</button> 
         {% else %}
diff --git a/src/sentry/utils/otp.py b/src/sentry/utils/otp.py
index 5d19e232b8..0de22d9a5f 100644
--- a/src/sentry/utils/otp.py
+++ b/src/sentry/utils/otp.py
@@ -58,7 +58,8 @@ def _get_ts(ts):
 
 class TOTP(object):
 
-    def __init__(self, secret=None, digits=6, interval=30):
+    def __init__(self, secret=None, digits=6, interval=30,
+                 default_window=2):
         if secret is None:
             secret = generate_secret_key()
         if len(secret) % 8 != 0:
@@ -66,6 +67,7 @@ class TOTP(object):
         self.secret = secret
         self.digits = digits
         self.interval = interval
+        self.default_window = default_window
 
     def generate_otp(self, ts=None, offset=0):
         ts = _get_ts(ts)
@@ -81,8 +83,10 @@ class TOTP(object):
         str_code = str(code % 10 ** self.digits)
         return ('0' * (self.digits - len(str_code))) + str_code
 
-    def verify(self, otp, ts=None, window=2):
+    def verify(self, otp, ts=None, window=None):
         ts = _get_ts(ts)
+        if window is None:
+            window = self.default_window
         for i in xrange(-window, window + 1):
             if constant_time_compare(otp, self.generate_otp(ts, i)):
                 return True
diff --git a/src/sentry/web/frontend/accounts_twofactor.py b/src/sentry/web/frontend/accounts_twofactor.py
index e909253331..5681b3df1c 100644
--- a/src/sentry/web/frontend/accounts_twofactor.py
+++ b/src/sentry/web/frontend/accounts_twofactor.py
@@ -164,7 +164,7 @@ class SmsSettingsView(TwoFactorSettingsView):
         if stage == 'pick_number':
             sms_form = SmsForm(request.POST)
             if sms_form.is_valid():
-                interface.send_text()
+                interface.send_text(for_enrollment=True, request=request)
                 stage = 'confirm'
         elif stage == 'confirm':
             otp_form = TwoFactorForm(request.POST)
