commit b2f5f9fb3a56c8b567fed504b79ea1ae54d7e37f
Author: Stephen Cefali <scefali@sentry.io>
Date:   Fri Feb 7 10:01:16 2020 -0800

    sort project list by project slug (#16856)

diff --git a/src/sentry/api/endpoints/organization_plugins_configs.py b/src/sentry/api/endpoints/organization_plugins_configs.py
index 7f6147b345..0caa376c26 100644
--- a/src/sentry/api/endpoints/organization_plugins_configs.py
+++ b/src/sentry/api/endpoints/organization_plugins_configs.py
@@ -108,6 +108,8 @@ class OrganizationPluginsConfigsEndpoint(OrganizationEndpoint):
                         "projectPlatform": project.platform,
                     }
                 )
+            # sort by the projectSlug
+            serialized_plugin["projectList"].sort(key=lambda x: x["projectSlug"])
             serialized_plugins.append(serialized_plugin)
 
         return Response(serialized_plugins)
diff --git a/tests/sentry/api/endpoints/test_organization_plugins_configs.py b/tests/sentry/api/endpoints/test_organization_plugins_configs.py
index e1c15577b4..ae9a9b4334 100644
--- a/tests/sentry/api/endpoints/test_organization_plugins_configs.py
+++ b/tests/sentry/api/endpoints/test_organization_plugins_configs.py
@@ -7,9 +7,11 @@ from sentry.testutils import APITestCase
 
 class OrganizationPluginsTest(APITestCase):
     def setUp(self):
-        self.projectA = self.create_project()
+        self.projectA = self.create_project(slug="proj_a")
         self.organization = self.projectA.organization
-        self.projectB = self.create_project(organization=self.organization, platform="react")
+        self.projectB = self.create_project(
+            slug="proj_b", organization=self.organization, platform="react"
+        )
 
         self.url = reverse(
             "sentry-api-0-organization-plugins-configs",
@@ -82,7 +84,7 @@ class OrganizationPluginsTest(APITestCase):
             "projectName": self.projectB.name,
             "enabled": False,
             "configured": True,
-            "projectPlatform": 'react',
+            "projectPlatform": "react",
         }
 
     def test_query_parameter(self):
@@ -96,3 +98,16 @@ class OrganizationPluginsTest(APITestCase):
         response = self.client.get(url)
         assert response.status_code == 404
         assert response.data["detail"] == "Plugin bad_plugin not found"
+
+    def test_sort_by_slug(self):
+        another = self.create_project(slug="another")
+        plugins.get("trello").set_option("key", "some_value", self.projectA)
+        plugins.get("trello").set_option("key", "some_value", self.projectB)
+        plugins.get("trello").set_option("key", "some_value", another)
+        url = self.url + "?plugins=trello"
+        response = self.client.get(url)
+        assert map(lambda x: x["projectSlug"], response.data[0]["projectList"]) == [
+            "another",
+            "proj_a",
+            "proj_b",
+        ]
