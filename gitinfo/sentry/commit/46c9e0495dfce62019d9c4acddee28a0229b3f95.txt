commit 46c9e0495dfce62019d9c4acddee28a0229b3f95
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Sep 21 14:06:22 2015 -0700

    Dont show team selection when only one is present

diff --git a/src/sentry/web/frontend/create_project.py b/src/sentry/web/frontend/create_project.py
index 73f1fffca5..6513f4a5c3 100644
--- a/src/sentry/web/frontend/create_project.py
+++ b/src/sentry/web/frontend/create_project.py
@@ -29,11 +29,14 @@ class AddProjectWithTeamForm(AddProjectForm):
 
         self.team_list = team_list
 
-        self.fields['team'].choices = (
-            (t.slug, t.name)
-            for t in team_list
-        )
-        self.fields['team'].widget.choices = self.fields['team'].choices
+        if len(self.team_list) == 1:
+            del self.fields['team']
+        else:
+            self.fields['team'].choices = (
+                (t.slug, t.name)
+                for t in team_list
+            )
+            self.fields['team'].widget.choices = self.fields['team'].choices
 
     def clean_team(self):
         value = self.cleaned_data['team']
@@ -43,7 +46,7 @@ class AddProjectWithTeamForm(AddProjectForm):
         return None
 
     def save(self, actor, ip_address):
-        team = self.cleaned_data['team']
+        team = self.cleaned_data.get('team', self.team_list[0])
         return super(AddProjectWithTeamForm, self).save(actor, team, ip_address)
 
 
diff --git a/tests/sentry/web/frontend/test_create_project.py b/tests/sentry/web/frontend/test_create_project.py
index e93ca05766..6ecc2fe134 100644
--- a/tests/sentry/web/frontend/test_create_project.py
+++ b/tests/sentry/web/frontend/test_create_project.py
@@ -39,11 +39,29 @@ class CreateProjectTest(TestCase):
         assert resp.context['organization'] == organization
         assert resp.context['form']
 
-    def test_valid_params(self):
+    def test_implicit_single_team(self):
         organization = self.create_organization()
         team = self.create_team(organization=organization, name='Foo', slug='foo')
         path = reverse('sentry-create-project', args=[organization.slug])
         self.login_as(self.user)
+        resp = self.client.post(path, {
+            'name': 'bar',
+        })
+        assert resp.status_code == 302, resp.context['form'].errors
+
+        project = Project.objects.get(team__organization=organization, name='bar')
+
+        assert project.team == team
+
+        redirect_uri = reverse('sentry-stream', args=[organization.slug, project.slug])
+        assert resp['Location'] == 'http://testserver%s?newinstall=1' % (redirect_uri,)
+
+    def test_multiple_teams(self):
+        organization = self.create_organization()
+        team = self.create_team(organization=organization, name='Foo', slug='foo')
+        team = self.create_team(organization=organization, name='Bar', slug='bar')
+        path = reverse('sentry-create-project', args=[organization.slug])
+        self.login_as(self.user)
         resp = self.client.post(path, {
             'name': 'bar',
             'team': team.slug,
