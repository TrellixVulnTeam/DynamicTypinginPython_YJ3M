commit 1e9d05fd90d208231978703864fc09804be395c2
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Apr 21 16:04:32 2015 -0700

    Some initial work on org access request

diff --git a/src/sentry/models/organizationaccessrequest.py b/src/sentry/models/organizationaccessrequest.py
new file mode 100644
index 0000000000..3e2acf861b
--- /dev/null
+++ b/src/sentry/models/organizationaccessrequest.py
@@ -0,0 +1,57 @@
+"""
+sentry.models.organizationmember
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+from __future__ import absolute_import, print_function
+
+import logging
+
+from django.core.urlresolvers import reverse
+
+from sentry.db.models import FlexibleForeignKey, Model, sane_repr
+from sentry.utils.http import absolute_uri
+
+
+class OrganizationAccessRequest(Model):
+    team = FlexibleForeignKey('sentry.Team')
+    member = FlexibleForeignKey('sentry.OrganizationMember')
+
+    class Meta:
+        app_label = 'sentry'
+        db_table = 'sentry_organizationaccessrequest'
+        unique_together = (('team', 'member'),)
+
+    __repr__ = sane_repr('team_id', 'member_id')
+
+    def send_request_email(self):
+        from sentry.utils.email import MessageBuilder
+
+        user = self.member.user
+        email = user.get_email()
+        organization = self.team.organization
+
+        context = {
+            'email': email,
+            'name': user.get_display_name(),
+            'organization': organization,
+            'team': self.team,
+            'url': absolute_uri(reverse('sentry-organization-access-requests', kwargs={
+                'organization_slug': organization.slug,
+            })),
+        }
+
+        msg = MessageBuilder(
+            subject='Sentry Access Request',
+            template='sentry/emails/request-team-access.txt',
+            html_template='sentry/emails/request-team-access.html',
+            context=context,
+        )
+
+        try:
+            msg.send([email])
+        except Exception as e:
+            logger = logging.getLogger('sentry.mail.errors')
+            logger.exception(e)
diff --git a/src/sentry/templates/sentry/emails/request-team-access.html b/src/sentry/templates/sentry/emails/request-team-access.html
new file mode 100644
index 0000000000..2f70ca2881
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/request-team-access.html
@@ -0,0 +1,15 @@
+{% extends "sentry/emails/base.html" %}
+
+{% load i18n %}
+
+{% block header %}
+    <h1>Sentry <small>Request for Access</small></h1>
+{% endblock %}
+
+{% block inner %}
+	<p>{{ name }} is requesting access to the {{ team.name }} team on Sentry.</p>
+
+	<p>You can accept or decline this request in via the pending requests panel:</p>
+
+    <p><a href="{{ url }}">{{ url }}</a></p>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/request-team-access.txt b/src/sentry/templates/sentry/emails/request-team-access.txt
new file mode 100644
index 0000000000..82a3b85d98
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/request-team-access.txt
@@ -0,0 +1,5 @@
+{{ name }} is requesting access to {{ team.name }}.
+
+You can accept or decline this request in via the pending requests panel:
+
+    {{ url }}
