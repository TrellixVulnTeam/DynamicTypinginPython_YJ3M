commit 2ed42ca1e365bda7ed3ff127d624b52500f7d0a2
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 13 12:42:48 2013 -0800

    Improve some various interface tests

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index a3eec6665e..b2baa24de3 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -34,6 +34,10 @@ def unserialize(klass, data):
     return value
 
 
+def is_url(filename):
+    return filename.startswith(('http:', 'https:'))
+
+
 def get_context(lineno, context_line, pre_context=None, post_context=None, filename=None,
         format=False):
     lineno = int(lineno)
@@ -61,7 +65,7 @@ def get_context(lineno, context_line, pre_context=None, post_context=None, filen
             at_lineno += 1
 
     # HACK:
-    if filename and filename.startswith(('http:', 'https:')) and '.' not in filename.rsplit('/', 1)[-1]:
+    if filename and is_url(filename) and '.' not in filename.rsplit('/', 1)[-1]:
         filename = 'index.html'
 
     if format:
diff --git a/tests/sentry/interfaces/stacktrace/tests.py b/tests/sentry/interfaces/stacktrace/tests.py
index a76f2c6cb5..4e1775e3db 100644
--- a/tests/sentry/interfaces/stacktrace/tests.py
+++ b/tests/sentry/interfaces/stacktrace/tests.py
@@ -6,11 +6,23 @@ import mock
 
 from sentry.interfaces import Stacktrace, Exception
 from sentry.models import Event
-
-from sentry.testutils import TestCase
+from sentry.testutils import TestCase, fixture
 
 
 class StacktraceTest(TestCase):
+    @fixture
+    def interface(self):
+        return Stacktrace(frames=[
+            {
+                'filename': 'foo/bar.py'
+            },
+            {
+                'filename': 'foo/baz.py',
+                'lineno': 1,
+                'in_app': True,
+            }
+        ])
+
     def test_requires_filename(self):
         with self.assertRaises(AssertionError):
             Stacktrace(frames=[{}]).validate()
diff --git a/tests/sentry/interfaces/tests.py b/tests/sentry/interfaces/tests.py
index 481c91826b..45cefd6c3d 100644
--- a/tests/sentry/interfaces/tests.py
+++ b/tests/sentry/interfaces/tests.py
@@ -5,7 +5,7 @@ from __future__ import absolute_import
 import mock
 import pickle
 
-from sentry.interfaces import Interface, Message, Query, Stacktrace
+from sentry.interfaces import Interface, Message, Query, Stacktrace, get_context
 from sentry.models import Event
 from sentry.testutils import TestCase, fixture
 
@@ -109,34 +109,7 @@ class QueryTest(InterfaceBase):
         }
 
 
-class StacktraceTest(InterfaceBase):
-    @fixture
-    def interface(self):
-        return Stacktrace(frames=[
-            {
-                'filename': 'foo/bar.py'
-            },
-            {
-                'filename': 'foo/baz.py',
-                'lineno': 1,
-                'in_app': True,
-            }
-        ])
-
-    def test_serialize_behavior(self):
-        assert self.interface.serialize() == {
-            'frames': self.interface.frames
-        }
-
-    @mock.patch('sentry.interfaces.Stacktrace.get_frame_hash')
-    def test_get_hash_uses_frame_hash(self, get_frame_hash):
-        get_frame_hash.side_effect = lambda x: [x]
-        assert self.interface.get_hash() == self.interface.frames
-        assert get_frame_hash.call_count == 2
-        get_frame_hash.assert_any_call(self.interface.frames[0])
-        get_frame_hash.assert_any_call(self.interface.frames[1])
-
-    @mock.patch('sentry.interfaces.Stacktrace.get_stacktrace')
-    def test_to_string_returns_stacktrace(self, get_stacktrace):
-        assert self.interface.to_string(self.event) == get_stacktrace.return_value
-        get_stacktrace.assert_called_once_with(self.event, system_frames=False, max_frames=5)
+class GetContextTest(TestCase):
+    def test_works_with_empty_filename(self):
+        result = get_context(0, 'hello world')
+        assert result == [(0, 'hello world')]
