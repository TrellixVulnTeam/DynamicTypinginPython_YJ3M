commit fa1e1fd286f1cfdaf00fc07d1504719e094afe2f
Author: Jess MacQueen <jess@getsentry.com>
Date:   Mon Dec 18 13:23:32 2017 -0800

    test(projects): Add tests for ProjectManager.get_for_user

diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index 2f3e8732c3..9cf52067fd 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -3,7 +3,7 @@
 from __future__ import absolute_import
 
 from sentry import tagstore
-from sentry.models import Group, Team, User
+from sentry.models import Group, Project, Team, User
 from sentry.testutils import TestCase
 
 
@@ -114,3 +114,61 @@ class TeamManagerTest(TestCase):
             with_projects=True,
         )
         assert result == [(team, [project2, project])]
+
+
+class ProjectManagerTest(TestCase):
+    def test_simple(self):
+        user = User.objects.create(username='foo')
+        org = self.create_organization()
+        team = self.create_team(organization=org, name='Test')
+        project = self.create_project(team=team, name='foo')
+        project2 = self.create_project(team=team, name='baz')
+
+        result = Project.objects.get_for_user(
+            team=team,
+            user=user,
+            _skip_team_check=True,
+        )
+        assert result == [project2, project]
+
+        result = Project.objects.get_for_user(
+            team=team,
+            user=user,
+            _skip_team_check=False,
+        )
+        assert result == []
+
+        self.create_member(organization=org, user=user, teams=[team])
+
+        # check again after creating member
+        result = Project.objects.get_for_user(
+            team=team,
+            user=user,
+            _skip_team_check=True,
+        )
+        assert result == [project2, project]
+
+        result = Project.objects.get_for_user(
+            team=team,
+            user=user,
+            _skip_team_check=False,
+        )
+        assert result == [project2, project]
+
+        # test with scope user doesn't have
+        result = Project.objects.get_for_user(
+            team=team,
+            user=user,
+            _skip_team_check=False,
+            scope='project:write',
+        )
+        assert result == []
+
+        # check with scope they do have
+        result = Project.objects.get_for_user(
+            team=team,
+            user=user,
+            _skip_team_check=False,
+            scope='project:read',
+        )
+        assert result == [project2, project]
