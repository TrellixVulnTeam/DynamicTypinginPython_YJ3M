commit 72f2c0fc0d9372e74f1ca15e8b6f466b107e2cfb
Author: Mark Story <mark@sentry.io>
Date:   Wed Sep 11 09:51:47 2019 -0400

    feat(ts) Convert loading indicator and container to typescript (#14649)

diff --git a/src/sentry/static/sentry/app/components/loading/loadingContainer.jsx b/src/sentry/static/sentry/app/components/loading/loadingContainer.tsx
similarity index 74%
rename from src/sentry/static/sentry/app/components/loading/loadingContainer.jsx
rename to src/sentry/static/sentry/app/components/loading/loadingContainer.tsx
index 9166b7ef2f..33e7e0af81 100644
--- a/src/sentry/static/sentry/app/components/loading/loadingContainer.jsx
+++ b/src/sentry/static/sentry/app/components/loading/loadingContainer.tsx
@@ -4,9 +4,24 @@ import styled from 'react-emotion';
 
 import LoadingIndicator from 'app/components/loadingIndicator';
 
-export default function LoadingContainer(props) {
-  const {className, children, isReloading, isLoading} = props;
+const defaultProps = {
+  isLoading: false,
+  isReloading: false,
+};
+
+type DefaultProps = Readonly<typeof defaultProps>;
+
+type Props = {
+  className?: string;
+  children?: React.ReactNode;
+} & DefaultProps;
+
+type MaskProps = {
+  isReloading: boolean;
+};
 
+export default function LoadingContainer(props: Props) {
+  const {className, children, isReloading, isLoading} = props;
   const isLoadingOrReloading = isLoading || isReloading;
 
   return (
@@ -22,22 +37,19 @@ export default function LoadingContainer(props) {
   );
 }
 
+LoadingContainer.defaultProps = defaultProps;
+
 LoadingContainer.propTypes = {
   isLoading: PropTypes.bool.isRequired,
   isReloading: PropTypes.bool.isRequired,
   children: PropTypes.node,
 };
 
-LoadingContainer.defaultProps = {
-  isLoading: false,
-  isReloading: false,
-};
-
 const Container = styled('div')`
   position: relative;
 `;
 
-const LoadingMask = styled('div')`
+const LoadingMask = styled('div')<MaskProps>`
   position: absolute;
   z-index: 1;
   background-color: ${p => p.theme.white};
diff --git a/src/sentry/static/sentry/app/components/loadingIndicator.jsx b/src/sentry/static/sentry/app/components/loadingIndicator.tsx
similarity index 79%
rename from src/sentry/static/sentry/app/components/loadingIndicator.jsx
rename to src/sentry/static/sentry/app/components/loadingIndicator.tsx
index 7a32633f4b..c6a0620547 100644
--- a/src/sentry/static/sentry/app/components/loadingIndicator.jsx
+++ b/src/sentry/static/sentry/app/components/loadingIndicator.tsx
@@ -2,7 +2,22 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import classNames from 'classnames';
 
-function LoadingIndicator(props) {
+type Props = {
+  overlay?: boolean;
+  dark?: boolean;
+  mini?: boolean;
+  triangle?: boolean;
+  finished?: boolean;
+  relative?: boolean;
+  hideMessage?: boolean;
+  hideSpinner?: boolean;
+  size?: number;
+  className?: string;
+  style?: object;
+  children?: React.ReactChildren;
+};
+
+function LoadingIndicator(props: Props) {
   const {
     hideMessage,
     mini,
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table.tsx b/src/sentry/static/sentry/app/views/eventsV2/table.tsx
index e66e902e0a..85a0061e15 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table.tsx
@@ -362,7 +362,7 @@ const Container = styled('div')`
   overflow: hidden;
 `;
 
-const FloatingLoadingContainer = styled(LoadingContainer)`
+const FloatingLoadingContainer = styled(LoadingContainer)<LoadingContainer['props']>`
   position: absolute;
   top: 0;
   left: 0;
