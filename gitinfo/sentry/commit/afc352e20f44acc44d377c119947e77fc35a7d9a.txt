commit afc352e20f44acc44d377c119947e77fc35a7d9a
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Fri Feb 16 10:49:06 2018 -0800

    fix(eventpipeline): Nonstring transactions cause an error during event ingestion  (#7279)
    
    * fixes SENTRY-5HF
    
    * changed culprit to a string, but noticed it doesn't save it. wondered if that was a problem.
    
    * fixes SENTRY-5HF
    
    * Removed check if culprit is a string before force text.

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 91254dd69d..cef5913142 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -161,7 +161,6 @@ else:
 
 def generate_culprit(data, platform=None):
     culprit = ''
-
     try:
         stacktraces = [
             e['stacktrace'] for e in data['sentry.interfaces.Exception']['values']
@@ -510,6 +509,8 @@ class EventManager(object):
         else:
             transaction_name = culprit
 
+        culprit = force_text(culprit)
+
         recorded_timestamp = data.pop('timestamp')
         date = datetime.fromtimestamp(recorded_timestamp)
         date = date.replace(tzinfo=timezone.utc)
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index 1e492e8d28..249b80e930 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -512,6 +512,16 @@ class EventManagerTest(TransactionTestCase):
         data = manager.normalize()
         assert len(data['culprit']) == MAX_CULPRIT_LENGTH
 
+    def test_handles_non_string_generated_culprit(self):
+        dict_input = {'messages': 'foo'}
+        manager = EventManager(self.make_event(
+            transaction=dict_input,
+        ))
+        manager.normalize()
+        event = manager.save(1)
+        assert event.transaction == dict_input
+        assert event.culprit == dict_input
+
     def test_long_transaction(self):
         manager = EventManager(self.make_event(
             transaction='x' * (MAX_CULPRIT_LENGTH + 1),
