commit c7c8d0d23c8eec45cb1f3b32eec61a9b38c47b49
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Mon Feb 27 16:39:31 2017 -0800

    Add projects associated with release

diff --git a/src/sentry/api/serializers/models/release.py b/src/sentry/api/serializers/models/release.py
index 835c310907..c222bbf458 100644
--- a/src/sentry/api/serializers/models/release.py
+++ b/src/sentry/api/serializers/models/release.py
@@ -158,6 +158,10 @@ class ReleaseSerializer(Serializer):
 
         release_metadata_attrs = self._get_commit_metadata(item_list, user)
 
+        release_projects = defaultdict(list)
+        project_releases = ReleaseProject.objects.filter(release__in=item_list).select_related('project')
+        for pr in project_releases:
+            release_projects[pr.release_id].append(pr.project)
         result = {}
         for item in item_list:
             result[item] = {
@@ -166,6 +170,7 @@ class ReleaseSerializer(Serializer):
                 'new_groups': group_counts_by_release.get(item.id) or 0,
                 'commit_count': 0,
                 'authors': [],
+                'projects': serialize(release_projects.get(item.id, []), user)
             }
             if release_metadata_attrs:
                 result[item].update(release_metadata_attrs[item])
@@ -186,6 +191,7 @@ class ReleaseSerializer(Serializer):
             'owner': attrs['owner'],
             'commitCount': attrs.get('commit_count', 0),
             'authors': attrs.get('authors', []),
+            'projects': attrs.get('projects', [])
         }
         if attrs['tag']:
             d.update({
diff --git a/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx b/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
new file mode 100644
index 0000000000..269ef2ee5e
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
@@ -0,0 +1,61 @@
+import React from 'react';
+import LoadingIndicator from '../components/loadingIndicator';
+import LoadingError from '../components/loadingError';
+
+import {Sparklines, SparklinesLine} from 'react-sparklines';
+
+import ApiMixin from '../mixins/apiMixin';
+
+const releaseProjectStatSparkline = React.createClass({
+  propTypes: {
+    orgId: React.PropTypes.string,
+    projectId: React.PropTypes.string,
+  },
+
+  mixins: [ApiMixin],
+
+  getInitialState() {
+    return {
+      loading: true,
+      error: false,
+      stats: [],
+    };
+  },
+
+  componentDidMount() {
+    let {orgId, projectId} = this.props;
+    let path = `/projects/${orgId}/${projectId}/stats/`;
+    this.api.request(path, {
+      method: 'GET',
+      data: 'stat=received',
+      success: (data, _, jqXHR) => {
+        this.setState({
+          stats: data,
+          loading: false,
+          error: false,
+        });
+      },
+      error: () => {
+        this.setState({
+          error: true,
+        });
+      }
+    });
+  },
+
+  render() {
+    let values = this.state.stats.map(tuple => tuple[1]);
+    if (this.state.loading)
+      return <LoadingIndicator/>;
+
+    if (this.state.error)
+      return <LoadingError/>;
+    return (
+      <Sparklines data={values} width={100} height={32}>
+        <SparklinesLine style={{stroke: '#8f85d4', fill: 'none', strokeWidth: 3}}/>
+      </Sparklines>
+    );
+  }
+});
+
+export default releaseProjectStatSparkline;
diff --git a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
index df79fcbcba..43f2cefb66 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
@@ -1,10 +1,12 @@
 import React from 'react';
+import {Link} from 'react-router';
 
 import LoadingIndicator from '../../components/loadingIndicator';
 import LoadingError from '../../components/loadingError';
 import IssueList from '../../components/issueList';
 import FileChange from '../../components/fileChange';
 import CommitAuthorStats from '../../components/commitAuthorStats';
+import ReleaseProjectStatSparkline from '../../components/releaseProjectStatSparkline';
 import ApiMixin from '../../mixins/apiMixin';
 
 import {t} from '../../locale';
@@ -17,6 +19,7 @@ const ReleaseOverview = React.createClass({
     return {
       loading: true,
       error: false,
+      projects: [],
     };
   },
 
@@ -42,6 +45,26 @@ const ReleaseOverview = React.createClass({
         });
       }
     });
+    this.getReleaseProjects();
+  },
+
+  getReleaseProjects() {
+    let {orgId, version} = this.props.params;
+    let path = `/organizations/${orgId}/releases/${version}/`;
+    this.api.request(path, {
+      method: 'GET',
+      success: (data, _, jqXHR) => {
+        this.setState({
+          projects: data.projects,
+          error: false,
+        });
+      },
+      error: () => {
+        this.setState({
+          error: true,
+        });
+      }
+    });
   },
 
   render() {
@@ -53,7 +76,7 @@ const ReleaseOverview = React.createClass({
     if (this.state.error)
       return <LoadingError/>;
 
-    let {fileList} = this.state;
+    let {fileList, projects} = this.state;
 
     // convert list of individual file changes (can be
     // multiple changes to a single file) into a per-file
@@ -124,6 +147,24 @@ const ReleaseOverview = React.createClass({
               projectId={projectId}
               version={version}
             />
+            <h6 className="nav-header m-b-1">Other Projects Affected</h6>
+            <ul className="nav nav-stacked">
+            {projects.map((project) => {
+              return (
+                <li key={project.id}>
+                  <Link to={`/${orgId}/${project.slug}/`}>
+                    <h6>
+                      {project.isBookmarked && <span className="bookmark icon-star-solid" />}
+                      {project.name}
+                    </h6>
+                  </Link>
+                  <div className="sparkline">
+                    <ReleaseProjectStatSparkline orgId={orgId} projectId={project.slug} />
+                  </div>
+                </li>
+              );
+            })}
+          </ul>
         </div>
       </div>
     </div>
