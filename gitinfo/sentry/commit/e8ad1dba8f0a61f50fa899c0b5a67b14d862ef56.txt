commit e8ad1dba8f0a61f50fa899c0b5a67b14d862ef56
Author: Dan Fuller <dfuller@sentry.io>
Date:   Wed Mar 18 17:04:11 2020 -0700

    perf(snuba): Properly trace snuba queries when we're using a thread pool.
    
    Since we're running batch snuba queries in a thread pool, by default the sentry_sdk uses a separate
    hub for each thread, which causes the individual threaded traces to end up in a separate event. To
    fix this, @untitaker suggested that for each task we clone `Hub.current` and pass it to the task, then
    use that to create the threaded spans. This works well, and correctly groups the threaded tasks
    under the outer span that creates the tasks.

diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index 8d70d2dbd1..b4e416b560 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -13,6 +13,7 @@ import six
 import time
 import urllib3
 import sentry_sdk
+from sentry_sdk import Hub
 
 from concurrent.futures import ThreadPoolExecutor
 from django.conf import settings
@@ -540,11 +541,11 @@ def bulk_raw_query(snuba_param_list, referrer=None):
     query_param_list = map(_prepare_query_params, snuba_param_list)
 
     def snuba_query(params):
-        query_params, forward, reverse = params
+        query_params, forward, reverse, thread_hub = params
         try:
             with timer("snuba_query"):
                 body = json.dumps(query_params)
-                with sentry_sdk.start_span(
+                with thread_hub.start_span(
                     op="snuba", description=u"query {}".format(body)
                 ) as span:
                     span.set_tag("referrer", headers.get("referer", "<unknown>"))
@@ -556,12 +557,21 @@ def bulk_raw_query(snuba_param_list, referrer=None):
         except urllib3.exceptions.HTTPError as err:
             raise SnubaError(err)
 
-    if len(snuba_param_list) > 1:
-        query_results = _query_thread_pool.map(snuba_query, query_param_list)
-    else:
-        # No need to submit to the thread pool if we're just performing a
-        # single query
-        query_results = [snuba_query(query_param_list[0])]
+    with sentry_sdk.start_span(
+        op="start_snuba_query",
+        description=u"running {} snuba queries".format(len(snuba_param_list)),
+    ) as span:
+        span.set_tag("referrer", headers.get("referer", "<unknown>"))
+        if len(snuba_param_list) > 1:
+            query_results = list(
+                _query_thread_pool.map(
+                    snuba_query, [params + (Hub(Hub.current),) for params in query_param_list]
+                )
+            )
+        else:
+            # No need to submit to the thread pool if we're just performing a
+            # single query
+            query_results = [snuba_query(query_param_list[0] + (Hub(Hub.current),))]
 
     results = []
     for response, _, reverse in query_results:
