commit c49b7a58b3b1afa172d0ce1ce7a6512ac5fda7dc
Author: Max Bittker <maxbittker@gmail.com>
Date:   Thu Apr 5 15:22:02 2018 -0700

    feat(ownership): "add from group" modal (#7917)

diff --git a/src/sentry/static/sentry/app/actionCreators/modal.jsx b/src/sentry/static/sentry/app/actionCreators/modal.jsx
index 49dee6ec3a..c3edc40830 100644
--- a/src/sentry/static/sentry/app/actionCreators/modal.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/modal.jsx
@@ -49,3 +49,17 @@ export function openCreateTeamModal(options = {}) {
       });
     });
 }
+
+/**
+ * @param Object options.organization The organization to create a rules for
+ * @param Object options.project The project to create a rules for
+ */
+export function openCreateOwnershipRule(options = {}) {
+  import(/* webpackChunkName: "CreateOwnershipRuleModal" */ '../components/modals/createOwnershipRuleModal')
+    .then(mod => mod.default)
+    .then(Modal => {
+      openModal(deps => <Modal {...deps} {...options} />, {
+        modalClassName: 'create-ownership-rule-modal',
+      });
+    });
+}
diff --git a/src/sentry/static/sentry/app/components/modals/createOwnershipRuleModal.jsx b/src/sentry/static/sentry/app/components/modals/createOwnershipRuleModal.jsx
new file mode 100644
index 0000000000..e375f43fec
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/modals/createOwnershipRuleModal.jsx
@@ -0,0 +1,45 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import {t} from '../../locale';
+import ProjectOwnershipModal from '../../views/settings/project/projectOwnership/modal';
+import SentryTypes from '../../proptypes';
+
+class CreateOwnershipRuleModal extends React.Component {
+  static propTypes = {
+    closeModal: PropTypes.func,
+    onClose: PropTypes.func,
+    Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,
+    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,
+    organization: SentryTypes.Organization.isRequired,
+    project: SentryTypes.Project,
+  };
+
+  handleSubmit = data => {
+    this.handleSuccess();
+  };
+
+  handleSuccess = data => {
+    if (this.props.onClose) {
+      this.props.onClose(data);
+    }
+    window.setTimeout(this.props.closeModal, 2000);
+  };
+
+  render() {
+    let {Body, Header, closeModal, ...props} = this.props;
+
+    return (
+      <React.Fragment>
+        <Header closeButton onHide={closeModal}>
+          {t('Create Ownership Rule')}
+        </Header>
+        <Body>
+          <ProjectOwnershipModal {...props} onSave={this.handleSuccess} />
+        </Body>
+      </React.Fragment>
+    );
+  }
+}
+
+export default CreateOwnershipRuleModal;
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 451cd92d4b..ad96714ba9 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -19,6 +19,7 @@ import ShareIssue from '../../components/shareIssue';
 
 import ResolveActions from '../../components/actions/resolve';
 import IgnoreActions from '../../components/actions/ignore';
+import {openCreateOwnershipRule} from '../../actionCreators/modal';
 
 class DeleteActions extends React.Component {
   static propTypes = {
@@ -221,6 +222,8 @@ const GroupDetailsActions = createReactClass({
     }
 
     let hasRelease = this.getProjectFeatures().has('releases');
+    let hasOwners =
+      orgFeatures.has('code-owners') && orgFeatures.has('internal-catchall');
 
     // account for both old and new style plugins
     let hasIssueTracking = group.pluginActions.length || group.pluginIssues.length;
@@ -257,6 +260,22 @@ const GroupDetailsActions = createReactClass({
           onDiscard={this.onDiscard}
         />
 
+        {hasOwners && (
+          <div className="btn-group">
+            <a
+              onClick={() =>
+                openCreateOwnershipRule({
+                  project,
+                  organization: org,
+                  issueId: group.id,
+                })}
+              className={'btn btn-default btn-sm btn-create-ownership-rule'}
+            >
+              {t('Create Ownership Rule')}
+            </a>
+          </div>
+        )}
+
         {orgFeatures.has('shared-issues') && (
           <div className="btn-group">
             <ShareIssue
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
index bae440c447..8341ffab59 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
@@ -27,10 +27,10 @@ class ProjectOwnership extends AsyncView {
   }
 
   getEndpoints() {
-    let {orgId, projectId} = this.props.params;
+    let {organization, project} = this.props;
     return [
-      ['project', `/projects/${orgId}/${projectId}/`],
-      ['ownership', `/projects/${orgId}/${projectId}/ownership/`],
+      ['project', `/projects/${organization.slug}/${project.slug}/`],
+      ['ownership', `/projects/${organization.slug}/${project.slug}/ownership/`],
     ];
   }
 
@@ -61,6 +61,13 @@ class ProjectOwnership extends AsyncView {
                 'Owners can be team identifiers starting with #, or user emails (use @ to input from list)'
               )}
             </p>
+            <p>
+              {t('Globbing Syntax:')}
+              <pre>
+                {`* matches everything
+? matches any single character`}
+              </pre>
+            </p>
             Examples:
             <CodeBlock>
               path:src/example/pipeline/* person@sentry.io #infrastructure
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
new file mode 100644
index 0000000000..cebe6444c3
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
@@ -0,0 +1,65 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import {uniq} from 'lodash';
+import idx from 'idx';
+
+import {t} from '../../../../locale';
+import AsyncView from '../../../asyncView';
+
+import SentryTypes from '../../../../proptypes';
+import OwnerInput from './ownerInput';
+
+class ProjectOwnershipModal extends AsyncView {
+  static propTypes = {
+    organization: SentryTypes.Organization,
+    project: SentryTypes.Project,
+    issueId: PropTypes.string,
+    onSave: PropTypes.func,
+  };
+
+  getEndpoints() {
+    let {organization, project, issueId} = this.props;
+    return [
+      ['ownership', `/projects/${organization.slug}/${project.slug}/ownership/`],
+      ['urlTagData', `/issues/${issueId}/tags/url/`],
+      ['eventData', `/issues/${issueId}/events/latest/`],
+    ];
+  }
+
+  renderBody() {
+    let {ownership, urlTagData, eventData} = this.state;
+    let urls = urlTagData.topValues
+      .sort((a, b) => a.count - b.count)
+      .map(i => i.value)
+      .slice(0, 5);
+    // pull frame data out of exception or the stacktrace
+    let frames =
+      idx(
+        eventData.entries.find(({type}) => type == 'exception'),
+        _ => _.data.values[0].stacktrace.frames
+      ) ||
+      idx(eventData.entries.find(({type}) => type == 'stacktrace'), _ => _.data.frames);
+
+    let paths = uniq(
+      frames
+        .filter(frame => frame.inApp)
+        .map(frame => frame.filename || frame.absPath)
+        .filter(i => i)
+    ).slice(0, 30);
+
+    return (
+      <React.Fragment>
+        <p>{t('Match against Issue Data: (globbing syntax *, ? supported)')}</p>
+        <OwnerInput
+          {...this.props}
+          initialText={ownership.raw || ''}
+          urls={urls}
+          paths={paths}
+          onSave={this.props.onSave}
+        />
+      </React.Fragment>
+    );
+  }
+}
+
+export default ProjectOwnershipModal;
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
index 78738e9b69..74fa979b42 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
@@ -8,33 +8,19 @@ import memberListStore from '../../../../stores/memberListStore';
 import ProjectsStore from '../../../../stores/projectsStore';
 import Button from '../../../../components/buttons/button';
 import SentryTypes from '../../../../proptypes';
-
 import {addErrorMessage, addSuccessMessage} from '../../../../actionCreators/indicator';
 import {t} from '../../../../locale';
+import {inputStyles} from '../../../../styles/input';
 import RuleBuilder from './ruleBuilder';
 
-const SyntaxOverlay = styled.div`
-  margin: 5px;
-  padding: 0px;
-  width: calc(100% - 10px);
-  height: 1em;
-  background-color: red;
-  opacity: 0.1;
-  pointer-events: none;
-  position: absolute;
-  top: ${({line}) => line}em;
-`;
-
-const SaveButton = styled.div`
-  text-align: end;
-  padding-top: 10px;
-`;
-
 class OwnerInput extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization,
     project: SentryTypes.Project,
     initialText: PropTypes.string,
+    urls: PropTypes.arrayOf(PropTypes.string),
+    paths: PropTypes.arrayOf(PropTypes.string),
+    onSave: PropTypes.func,
   };
 
   constructor(props) {
@@ -65,7 +51,7 @@ class OwnerInput extends React.Component {
   }
 
   handleUpdateOwnership = () => {
-    let {organization, project} = this.props;
+    let {organization, project, onSave} = this.props;
     let {text} = this.state;
     this.setState({error: null});
 
@@ -84,6 +70,7 @@ class OwnerInput extends React.Component {
         this.setState({
           initialText: text,
         });
+        onSave && onSave();
       })
       .catch(error => {
         this.setState({error: error.responseJSON});
@@ -140,12 +127,14 @@ class OwnerInput extends React.Component {
   }
 
   render() {
-    let {project, organization} = this.props;
+    let {project, organization, urls, paths} = this.props;
     let {text, error, initialText} = this.state;
 
     return (
       <React.Fragment>
         <RuleBuilder
+          urls={urls}
+          paths={paths}
           organization={organization}
           project={project}
           onAddRule={this.handleAddRule.bind(this)}
@@ -158,23 +147,10 @@ class OwnerInput extends React.Component {
             }
           }}
         >
-          <TextareaAutosize
+          <StyledTextArea
             placeholder={
-              '#example usage\n\npath:src/example/pipeline/* person@sentry.io #infrastructure\n\nurl:http://example.com/settings/* #product'
+              '#example usage\npath:src/example/pipeline/* person@sentry.io #infra\nurl:http://example.com/settings/* #product'
             }
-            style={{
-              padding: '5px 5px 0',
-              minHeight: 140,
-              overflow: 'auto',
-              outline: 0,
-              border: '1 solid',
-              width: '100%',
-              resize: 'none',
-              margin: 0,
-              fontFamily: 'Monaco, Consolas, "Courier New", monospace',
-              wordBreak: 'break-all',
-              whiteSpace: 'pre-wrap',
-            }}
             onChange={this.onChange.bind(this)}
             value={text}
             spellCheck="false"
@@ -199,4 +175,34 @@ class OwnerInput extends React.Component {
   }
 }
 
+const SyntaxOverlay = styled.div`
+  ${inputStyles};
+  margin: 10px 0;
+  width: 100%;
+  height: 1em;
+  background-color: red;
+  opacity: 0.1;
+  pointer-events: none;
+  position: absolute;
+  top: ${({line}) => line}em;
+`;
+
+const SaveButton = styled.div`
+  text-align: end;
+  padding-top: 10px;
+`;
+
+const StyledTextArea = styled(TextareaAutosize)`
+  ${inputStyles};
+  min-height: 140px;
+  overflow: auto;
+  outline: 0;
+  width: 100%;
+  resize: none;
+  margin: 0;
+  font-family: ${p => p.theme.text.familyMono};
+  word-break: break-all;
+  white-space: pre-wrap;
+`;
+
 export default OwnerInput;
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
index 8e9da91b1a..2fa6b5d9b9 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
@@ -7,6 +7,7 @@ import memberListStore from '../../../../stores/memberListStore';
 import ProjectsStore from '../../../../stores/projectsStore';
 import Button from '../../../../components/buttons/button';
 import SelectInput from '../../../../components/selectInput';
+import TextOverflow from '../../../../components/textOverflow';
 import InlineSvg from '../../../../components/inlineSvg';
 import Input from '../../../../views/settings/components/forms/controls/input';
 import DropdownAutoComplete from '../../../../components/dropdownAutoComplete';
@@ -18,63 +19,6 @@ import {addErrorMessage} from '../../../../actionCreators/indicator';
 
 import {t} from '../../../../locale';
 
-const BuilderBar = styled('div')`
-  display: flex;
-  height: 40px;
-  align-items: center;
-  margin-bottom: 1em;
-`;
-
-const BuilderSelect = styled(SelectInput)`
-  padding: 0.5em;
-  margin-right: 5px;
-  width: 80px;
-  flex-shrink: 0;
-`;
-
-const BuilderInput = styled(Input)`
-  padding: 0.5em;
-  margin-right: 5px;
-`;
-
-const Divider = styled(InlineSvg)`
-  color: ${p => p.theme.borderDark};
-  flex-shrink: 0;
-  margin-right: 5px;
-`;
-
-const Owners = styled('div')`
-  justify-content: flex-end;
-  display: flex;
-  padding: 3px;
-  span {
-    margin-right: 2px;
-  }
-
-  .avatar {
-    width: 28px;
-    height: 28px;
-  }
-`;
-
-const BuilderDropdownButton = styled(DropdownButton)`
-  margin-right: 5px;
-  padding-right: 8px !important;
-  padding-left: 3px !important;
-
-  flex: 1;
-  white-space: nowrap;
-  height: 37px;
-  color: ${p => p.theme.gray3} !important;
-`;
-
-const RuleAddButton = styled(Button)`
-  width: 37px;
-  height: 37px;
-  flex-shrink: 0;
-  padding: 10px 12px !important;
-`;
-
 const initialState = {
   text: '',
   type: 'path',
@@ -85,6 +29,8 @@ class RuleBuilder extends React.Component {
   static propTypes = {
     project: SentryTypes.Project,
     onAddRule: PropTypes.func,
+    urls: PropTypes.arrayOf(PropTypes.string),
+    paths: PropTypes.arrayOf(PropTypes.string),
   };
 
   constructor(props) {
@@ -171,64 +117,180 @@ class RuleBuilder extends React.Component {
   };
 
   render() {
+    let {urls, paths} = this.props;
     let {type, text, owners} = this.state;
 
     return (
-      <BuilderBar>
-        <BuilderSelect value={type} showSearch={false} onChange={this.handleTypeChange}>
-          <option value="path">Path</option>
-          <option value="url">URL</option>
-        </BuilderSelect>
-        <BuilderInput
-          controlled
-          value={text}
-          onChange={this.handleChangeValue}
-          placeholder={type === 'path' ? 'src/example/*' : 'example.com/settings/*'}
-        />
-        <Divider src="icon-chevron-right" />
-        <Flex flex="1" align="center">
-          <DropdownAutoComplete
-            items={[
-              {
-                value: 'team',
-                label: 'Teams',
-                items: this.mentionableTeams(),
-              },
-              {
-                value: 'user',
-                label: 'Users',
-                items: this.mentionableUsers(),
-              },
-            ]}
-            onSelect={this.onAddActor}
-          >
-            {({isOpen, selectedItem}) => (
-              <BuilderDropdownButton isOpen={isOpen} size="zero">
-                <Owners>
-                  {owners.map(owner => (
-                    <span
-                      key={`${owner.type}-${owner.id}`}
-                      onClick={this.handleRemoveActor.bind(this, owner)}
-                    >
-                      <ActorAvatar actor={owner} />
-                    </span>
-                  ))}
-                </Owners>
-                <div>{t('Add Owners')}</div>
-              </BuilderDropdownButton>
-            )}
-          </DropdownAutoComplete>
-        </Flex>
-
-        <RuleAddButton
-          priority="primary"
-          onClick={this.handleAddRule}
-          icon="icon-circle-add"
-          size="zero"
-        />
-      </BuilderBar>
+      <React.Fragment>
+        {(paths || urls) && (
+          <Candidates>
+            {paths &&
+              paths.map(v => (
+                <RuleCandidate
+                  key={v}
+                  onClick={() => this.setState({text: v, type: 'path'})}
+                >
+                  <AddIcon src="icon-circle-add" />
+                  <StyledTextOverflow>{v}</StyledTextOverflow>
+                  <TypeHint>[PATH]</TypeHint>
+                </RuleCandidate>
+              ))}
+            {urls &&
+              urls.map(v => (
+                <RuleCandidate
+                  key={v}
+                  onClick={() => this.setState({text: v, type: 'url'})}
+                >
+                  <AddIcon src="icon-circle-add" />
+                  <StyledTextOverflow>{v}</StyledTextOverflow>
+                  <TypeHint>[URL]</TypeHint>
+                </RuleCandidate>
+              ))}
+          </Candidates>
+        )}
+        <BuilderBar>
+          <BuilderSelect value={type} showSearch={false} onChange={this.handleTypeChange}>
+            <option value="path">Path</option>
+            <option value="url">URL</option>
+          </BuilderSelect>
+          <BuilderInput
+            controlled
+            value={text}
+            onChange={this.handleChangeValue}
+            placeholder={type === 'path' ? 'src/example/*' : 'example.com/settings/*'}
+          />
+          <Divider src="icon-chevron-right" />
+          <Flex flex="1" align="center">
+            <DropdownAutoComplete
+              items={[
+                {
+                  value: 'team',
+                  label: 'Teams',
+                  items: this.mentionableTeams(),
+                },
+                {
+                  value: 'user',
+                  label: 'Users',
+                  items: this.mentionableUsers(),
+                },
+              ]}
+              onSelect={this.onAddActor}
+            >
+              {({isOpen, selectedItem}) => (
+                <BuilderDropdownButton isOpen={isOpen} size="zero">
+                  <Owners>
+                    {owners.map(owner => (
+                      <span
+                        key={`${owner.type}-${owner.id}`}
+                        onClick={this.handleRemoveActor.bind(this, owner)}
+                      >
+                        <ActorAvatar actor={owner} />
+                      </span>
+                    ))}
+                  </Owners>
+                  <div>{t('Add Owners')}</div>
+                </BuilderDropdownButton>
+              )}
+            </DropdownAutoComplete>
+          </Flex>
+
+          <RuleAddButton
+            priority="primary"
+            onClick={this.handleAddRule}
+            icon="icon-circle-add"
+            size="zero"
+          />
+        </BuilderBar>
+      </React.Fragment>
     );
   }
 }
+const Candidates = styled.div`
+  margin-bottom: 10px;
+`;
+
+const TypeHint = styled.div`
+  color: ${p => p.theme.borderDark};
+`;
+
+const StyledTextOverflow = styled(TextOverflow)`
+  flex: 1;
+`;
+
+const RuleCandidate = styled.div`
+  font-family: ${p => p.theme.text.familyMono};
+  border: 1px solid ${p => p.theme.borderDark};
+  background-color: #f8fafd;
+  padding-left: 5px;
+  margin-bottom: 3px;
+  cursor: pointer;
+  overflow: hidden;
+  display: flex;
+  align-items: center;
+`;
+
+const AddIcon = styled(InlineSvg)`
+  color: ${p => p.theme.borderDark};
+  margin-right: 5px;
+  flex-shrink: 0;
+`;
+
+const BuilderBar = styled.div`
+  display: flex;
+  height: 40px;
+  align-items: center;
+  margin-bottom: 1em;
+`;
+
+const BuilderSelect = styled(SelectInput)`
+  padding: 0.5em;
+  margin-right: 5px;
+  width: 80px;
+  flex-shrink: 0;
+`;
+
+const BuilderInput = styled(Input)`
+  padding: 0.5em;
+  line-height: 19px;
+  margin-right: 5px;
+`;
+
+const Divider = styled(InlineSvg)`
+  color: ${p => p.theme.borderDark};
+  flex-shrink: 0;
+  margin-right: 5px;
+`;
+
+const Owners = styled.div`
+  justify-content: flex-end;
+  display: flex;
+  padding: 3px;
+  span {
+    margin-right: 2px;
+  }
+
+  .avatar {
+    width: 28px;
+    height: 28px;
+  }
+`;
+
+const BuilderDropdownButton = styled(DropdownButton)`
+  margin-right: 5px;
+  padding-right: 8px !important;
+  padding-left: 3px !important;
+
+  flex: 1;
+  white-space: nowrap;
+  height: 37px;
+  color: ${p => p.theme.gray3} !important;
+`;
+
+const RuleAddButton = styled(Button)`
+  width: 37px;
+  height: 37px;
+  flex-shrink: 0;
+  padding: 10px 12px !important;
+`;
 
 export default RuleBuilder;
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 2e4e8757a2..54085e9995 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -2729,6 +2729,18 @@ ul.radio-inputs {
   }
 }
 
+.create-ownership-rule-modal {
+  @media (min-width: 767px) {
+    .modal-dialog {
+      width: 80%;
+      margin-left: -40%;
+    }
+  }
+  .modal-content {
+    overflow: initial;
+  }
+}
+
 // Broadcast Modal
 
 .modal-broadcast {
diff --git a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
index 90d7329e47..0ce2d4ef89 100644
--- a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
@@ -89,7 +89,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
   >
     <BuilderBar>
       <div
-        className="css-1rsoebt-BuilderBar css-z41bgv0"
+        className="css-1rsoebt-BuilderBar css-wiuq245"
       >
         <BuilderSelect
           onChange={[Function]}
@@ -97,7 +97,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
           value="path"
         >
           <SelectInput
-            className="css-1eslqkc-BuilderSelect css-z41bgv1"
+            className="css-1eslqkc-BuilderSelect css-wiuq246"
             disabled={false}
             multiple={false}
             onChange={[Function]}
@@ -107,7 +107,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
             value="path"
           >
             <select
-              className="css-1eslqkc-BuilderSelect css-z41bgv1"
+              className="css-1eslqkc-BuilderSelect css-wiuq246"
               disabled={false}
               multiple={false}
               onChange={[Function]}
@@ -135,7 +135,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
           value=""
         >
           <input
-            className="css-1kjq5p2-Input-BuilderInput css-z41bgv2"
+            className="css-1t4syiu-Input-BuilderInput css-wiuq247"
             onChange={[Function]}
             placeholder="src/example/*"
             value=""
@@ -145,17 +145,17 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
           src="icon-chevron-right"
         >
           <InlineSvg
-            className="css-oym5an-Divider css-z41bgv3"
+            className="css-a4tn6s-Divider css-wiuq248"
             src="icon-chevron-right"
           >
             <StyledSvg
-              className="css-oym5an-Divider css-z41bgv3"
+              className="css-a4tn6s-Divider css-wiuq248"
               height="1em"
               viewBox={Object {}}
               width="1em"
             >
               <svg
-                className="css-z41bgv3 css-1n8xwmp-StyledSvg css-adkcw30"
+                className="css-wiuq248 css-5e2rei-StyledSvg css-adkcw30"
                 height="1em"
                 viewBox={Object {}}
                 width="1em"
@@ -245,27 +245,27 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
                                 size="zero"
                               >
                                 <DropdownButton
-                                  className="css-1miqrq6-BuilderDropdownButton css-z41bgv5"
+                                  className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
                                   isOpen={false}
                                   size="zero"
                                 >
                                   <StyledButton
-                                    className="css-1miqrq6-BuilderDropdownButton css-z41bgv5"
+                                    className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
                                     isOpen={false}
                                     size="zero"
                                   >
                                     <Component
-                                      className="css-z41bgv5 css-1hasbse-StyledButton css-1pig06q1"
+                                      className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
                                       isOpen={false}
                                       size="zero"
                                     >
                                       <Button
-                                        className="css-z41bgv5 css-1hasbse-StyledButton css-1pig06q1"
+                                        className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
                                         disabled={false}
                                         size="zero"
                                       >
                                         <button
-                                          className="css-z41bgv5 css-1hasbse-StyledButton css-1pig06q1 button button-default button-zero"
+                                          className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1 button button-default button-zero"
                                           disabled={false}
                                           onClick={[Function]}
                                           role="button"
@@ -284,7 +284,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
                                               >
                                                 <Owners>
                                                   <div
-                                                    className="css-1t34ifm-Owners css-z41bgv4"
+                                                    className="css-1t34ifm-Owners css-wiuq249"
                                                   />
                                                 </Owners>
                                                 <div>
@@ -346,7 +346,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
           size="zero"
         >
           <Button
-            className="css-3daogo-RuleAddButton css-z41bgv6"
+            className="css-3daogo-RuleAddButton css-wiuq2411"
             disabled={false}
             icon="icon-circle-add"
             onClick={[Function]}
@@ -354,7 +354,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
             size="zero"
           >
             <button
-              className="css-3daogo-RuleAddButton css-z41bgv6 button button-primary button-zero"
+              className="css-3daogo-RuleAddButton css-wiuq2411 button button-primary button-zero"
               disabled={false}
               onClick={[Function]}
               role="button"
@@ -432,68 +432,48 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
       }
     }
   >
-    <TextareaAutosize
+    <StyledTextArea
       autoCapitalize="off"
       autoComplete="off"
       autoCorrect="off"
       onChange={[Function]}
       placeholder="#example usage
-
-path:src/example/pipeline/* person@sentry.io #infrastructure
-
+path:src/example/pipeline/* person@sentry.io #infra
 url:http://example.com/settings/* #product"
-      rows={1}
       spellCheck="false"
-      style={
-        Object {
-          "border": "1 solid",
-          "fontFamily": "Monaco, Consolas, \\"Courier New\\", monospace",
-          "margin": 0,
-          "minHeight": 140,
-          "outline": 0,
-          "overflow": "auto",
-          "padding": "5px 5px 0",
-          "resize": "none",
-          "whiteSpace": "pre-wrap",
-          "width": "100%",
-          "wordBreak": "break-all",
-        }
-      }
       value="new"
     >
-      <textarea
+      <TextareaAutosize
         autoCapitalize="off"
         autoComplete="off"
         autoCorrect="off"
+        className="css-e9agsp-StyledTextArea css-i52in62"
         onChange={[Function]}
         placeholder="#example usage
-
-path:src/example/pipeline/* person@sentry.io #infrastructure
-
+path:src/example/pipeline/* person@sentry.io #infra
 url:http://example.com/settings/* #product"
         rows={1}
         spellCheck="false"
-        style={
-          Object {
-            "border": "1 solid",
-            "fontFamily": "Monaco, Consolas, \\"Courier New\\", monospace",
-            "margin": 0,
-            "minHeight": 140,
-            "outline": 0,
-            "overflow": "auto",
-            "padding": "5px 5px 0",
-            "resize": "none",
-            "whiteSpace": "pre-wrap",
-            "width": "100%",
-            "wordBreak": "break-all",
-          }
-        }
         value="new"
-      />
-    </TextareaAutosize>
+      >
+        <textarea
+          autoCapitalize="off"
+          autoComplete="off"
+          autoCorrect="off"
+          className="css-e9agsp-StyledTextArea css-i52in62"
+          onChange={[Function]}
+          placeholder="#example usage
+path:src/example/pipeline/* person@sentry.io #infra
+url:http://example.com/settings/* #product"
+          rows={1}
+          spellCheck="false"
+          value="new"
+        />
+      </TextareaAutosize>
+    </StyledTextArea>
     <SaveButton>
       <div
-        className="css-5zvod-SaveButton css-1gtwpu71"
+        className="css-5zvod-SaveButton css-i52in61"
       >
         <Button
           disabled={false}
diff --git a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
index 7d388cb14b..be686ed494 100644
--- a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
@@ -32,6 +32,13 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
         <p>
           Owners can be team identifiers starting with #, or user emails (use @ to input from list)
         </p>
+        <p>
+          Globbing Syntax:
+          <pre>
+            * matches everything
+? matches any single character
+          </pre>
+        </p>
         Examples:
         <CodeBlock>
           path:src/example/pipeline/* person@sentry.io #infrastructure
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index 8bfab032f0..5a7b02a609 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -25,7 +25,7 @@ exports[`RuleBuilder render() renders 1`] = `
 >
   <BuilderBar>
     <div
-      className="css-1rsoebt-BuilderBar css-z41bgv0"
+      className="css-1rsoebt-BuilderBar css-wiuq245"
     >
       <BuilderSelect
         onChange={[Function]}
@@ -33,7 +33,7 @@ exports[`RuleBuilder render() renders 1`] = `
         value="path"
       >
         <SelectInput
-          className="css-1eslqkc-BuilderSelect css-z41bgv1"
+          className="css-1eslqkc-BuilderSelect css-wiuq246"
           disabled={false}
           multiple={false}
           onChange={[Function]}
@@ -43,7 +43,7 @@ exports[`RuleBuilder render() renders 1`] = `
           value="path"
         >
           <select
-            className="css-1eslqkc-BuilderSelect css-z41bgv1"
+            className="css-1eslqkc-BuilderSelect css-wiuq246"
             disabled={false}
             multiple={false}
             onChange={[Function]}
@@ -71,7 +71,7 @@ exports[`RuleBuilder render() renders 1`] = `
         value=""
       >
         <input
-          className="css-1kjq5p2-Input-BuilderInput css-z41bgv2"
+          className="css-1t4syiu-Input-BuilderInput css-wiuq247"
           onChange={[Function]}
           placeholder="src/example/*"
           value=""
@@ -81,17 +81,17 @@ exports[`RuleBuilder render() renders 1`] = `
         src="icon-chevron-right"
       >
         <InlineSvg
-          className="css-oym5an-Divider css-z41bgv3"
+          className="css-a4tn6s-Divider css-wiuq248"
           src="icon-chevron-right"
         >
           <StyledSvg
-            className="css-oym5an-Divider css-z41bgv3"
+            className="css-a4tn6s-Divider css-wiuq248"
             height="1em"
             viewBox={Object {}}
             width="1em"
           >
             <svg
-              className="css-z41bgv3 css-1n8xwmp-StyledSvg css-adkcw30"
+              className="css-wiuq248 css-5e2rei-StyledSvg css-adkcw30"
               height="1em"
               viewBox={Object {}}
               width="1em"
@@ -223,27 +223,27 @@ exports[`RuleBuilder render() renders 1`] = `
                               size="zero"
                             >
                               <DropdownButton
-                                className="css-1miqrq6-BuilderDropdownButton css-z41bgv5"
+                                className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
                                 isOpen={false}
                                 size="zero"
                               >
                                 <StyledButton
-                                  className="css-1miqrq6-BuilderDropdownButton css-z41bgv5"
+                                  className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
                                   isOpen={false}
                                   size="zero"
                                 >
                                   <Component
-                                    className="css-z41bgv5 css-1hasbse-StyledButton css-1pig06q1"
+                                    className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
                                     isOpen={false}
                                     size="zero"
                                   >
                                     <Button
-                                      className="css-z41bgv5 css-1hasbse-StyledButton css-1pig06q1"
+                                      className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
                                       disabled={false}
                                       size="zero"
                                     >
                                       <button
-                                        className="css-z41bgv5 css-1hasbse-StyledButton css-1pig06q1 button button-default button-zero"
+                                        className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1 button button-default button-zero"
                                         disabled={false}
                                         onClick={[Function]}
                                         role="button"
@@ -262,7 +262,7 @@ exports[`RuleBuilder render() renders 1`] = `
                                             >
                                               <Owners>
                                                 <div
-                                                  className="css-1t34ifm-Owners css-z41bgv4"
+                                                  className="css-1t34ifm-Owners css-wiuq249"
                                                 />
                                               </Owners>
                                               <div>
@@ -324,7 +324,7 @@ exports[`RuleBuilder render() renders 1`] = `
         size="zero"
       >
         <Button
-          className="css-3daogo-RuleAddButton css-z41bgv6"
+          className="css-3daogo-RuleAddButton css-wiuq2411"
           disabled={false}
           icon="icon-circle-add"
           onClick={[Function]}
@@ -332,7 +332,693 @@ exports[`RuleBuilder render() renders 1`] = `
           size="zero"
         >
           <button
-            className="css-3daogo-RuleAddButton css-z41bgv6 button button-primary button-zero"
+            className="css-3daogo-RuleAddButton css-wiuq2411 button button-primary button-zero"
+            disabled={false}
+            onClick={[Function]}
+            role="button"
+          >
+            <Flex
+              align="center"
+              className="button-label"
+            >
+              <Base
+                align="center"
+                className="button-label css-5ipae5"
+              >
+                <div
+                  className="button-label css-5ipae5"
+                  is={null}
+                >
+                  <Icon
+                    size="zero"
+                  >
+                    <Base
+                      className="css-l3pkcx-Icon css-1vxxnb60"
+                      size="zero"
+                    >
+                      <div
+                        className="css-l3pkcx-Icon css-1vxxnb60"
+                        is={null}
+                        size="zero"
+                      >
+                        <StyledInlineSvg
+                          size="16px"
+                          src="icon-circle-add"
+                        >
+                          <InlineSvg
+                            className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
+                            size="16px"
+                            src="icon-circle-add"
+                          >
+                            <StyledSvg
+                              className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
+                              height="16px"
+                              viewBox={Object {}}
+                              width="16px"
+                            >
+                              <svg
+                                className="css-1vxxnb61 css-1rlza0i-StyledSvg css-adkcw30"
+                                height="16px"
+                                viewBox={Object {}}
+                                width="16px"
+                              >
+                                <use
+                                  href="#test"
+                                  xlinkHref="#test"
+                                />
+                              </svg>
+                            </StyledSvg>
+                          </InlineSvg>
+                        </StyledInlineSvg>
+                      </div>
+                    </Base>
+                  </Icon>
+                </div>
+              </Base>
+            </Flex>
+          </button>
+        </Button>
+      </RuleAddButton>
+    </div>
+  </BuilderBar>
+</RuleBuilder>
+`;
+
+exports[`RuleBuilder renders with suggestions renders 1`] = `
+<RuleBuilder
+  onAddRule={[MockFunction]}
+  paths={
+    Array [
+      "a/bar",
+      "a/foo",
+    ]
+  }
+  project={
+    Object {
+      "hasAccess": true,
+      "id": "2",
+      "isBookmarked": false,
+      "isMember": true,
+      "name": "Project Name",
+      "slug": "project-slug",
+      "teams": Array [],
+    }
+  }
+  urls={
+    Array [
+      "example.com/a",
+      "example.com/a/foo",
+    ]
+  }
+>
+  <Candidates>
+    <div
+      className="css-1fyz2uk-Candidates css-wiuq240"
+    >
+      <RuleCandidate
+        key="a/bar"
+        onClick={[Function]}
+      >
+        <div
+          className="css-4hexhh-RuleCandidate css-wiuq243"
+          onClick={[Function]}
+        >
+          <AddIcon
+            src="icon-circle-add"
+          >
+            <InlineSvg
+              className="css-1ivdji5-AddIcon css-wiuq244"
+              src="icon-circle-add"
+            >
+              <StyledSvg
+                className="css-1ivdji5-AddIcon css-wiuq244"
+                height="1em"
+                viewBox={Object {}}
+                width="1em"
+              >
+                <svg
+                  className="css-wiuq244 css-eomeeu-StyledSvg css-adkcw30"
+                  height="1em"
+                  viewBox={Object {}}
+                  width="1em"
+                >
+                  <use
+                    href="#test"
+                    xlinkHref="#test"
+                  />
+                </svg>
+              </StyledSvg>
+            </InlineSvg>
+          </AddIcon>
+          <StyledTextOverflow>
+            <div
+              className="css-q3yspe-TextOverflow-StyledTextOverflow css-wiuq242"
+            >
+              a/bar
+            </div>
+          </StyledTextOverflow>
+          <TypeHint>
+            <div
+              className="css-6d8mj3-TypeHint css-wiuq241"
+            >
+              [PATH]
+            </div>
+          </TypeHint>
+        </div>
+      </RuleCandidate>
+      <RuleCandidate
+        key="a/foo"
+        onClick={[Function]}
+      >
+        <div
+          className="css-4hexhh-RuleCandidate css-wiuq243"
+          onClick={[Function]}
+        >
+          <AddIcon
+            src="icon-circle-add"
+          >
+            <InlineSvg
+              className="css-1ivdji5-AddIcon css-wiuq244"
+              src="icon-circle-add"
+            >
+              <StyledSvg
+                className="css-1ivdji5-AddIcon css-wiuq244"
+                height="1em"
+                viewBox={Object {}}
+                width="1em"
+              >
+                <svg
+                  className="css-wiuq244 css-eomeeu-StyledSvg css-adkcw30"
+                  height="1em"
+                  viewBox={Object {}}
+                  width="1em"
+                >
+                  <use
+                    href="#test"
+                    xlinkHref="#test"
+                  />
+                </svg>
+              </StyledSvg>
+            </InlineSvg>
+          </AddIcon>
+          <StyledTextOverflow>
+            <div
+              className="css-q3yspe-TextOverflow-StyledTextOverflow css-wiuq242"
+            >
+              a/foo
+            </div>
+          </StyledTextOverflow>
+          <TypeHint>
+            <div
+              className="css-6d8mj3-TypeHint css-wiuq241"
+            >
+              [PATH]
+            </div>
+          </TypeHint>
+        </div>
+      </RuleCandidate>
+      <RuleCandidate
+        key="example.com/a"
+        onClick={[Function]}
+      >
+        <div
+          className="css-4hexhh-RuleCandidate css-wiuq243"
+          onClick={[Function]}
+        >
+          <AddIcon
+            src="icon-circle-add"
+          >
+            <InlineSvg
+              className="css-1ivdji5-AddIcon css-wiuq244"
+              src="icon-circle-add"
+            >
+              <StyledSvg
+                className="css-1ivdji5-AddIcon css-wiuq244"
+                height="1em"
+                viewBox={Object {}}
+                width="1em"
+              >
+                <svg
+                  className="css-wiuq244 css-eomeeu-StyledSvg css-adkcw30"
+                  height="1em"
+                  viewBox={Object {}}
+                  width="1em"
+                >
+                  <use
+                    href="#test"
+                    xlinkHref="#test"
+                  />
+                </svg>
+              </StyledSvg>
+            </InlineSvg>
+          </AddIcon>
+          <StyledTextOverflow>
+            <div
+              className="css-q3yspe-TextOverflow-StyledTextOverflow css-wiuq242"
+            >
+              example.com/a
+            </div>
+          </StyledTextOverflow>
+          <TypeHint>
+            <div
+              className="css-6d8mj3-TypeHint css-wiuq241"
+            >
+              [URL]
+            </div>
+          </TypeHint>
+        </div>
+      </RuleCandidate>
+      <RuleCandidate
+        key="example.com/a/foo"
+        onClick={[Function]}
+      >
+        <div
+          className="css-4hexhh-RuleCandidate css-wiuq243"
+          onClick={[Function]}
+        >
+          <AddIcon
+            src="icon-circle-add"
+          >
+            <InlineSvg
+              className="css-1ivdji5-AddIcon css-wiuq244"
+              src="icon-circle-add"
+            >
+              <StyledSvg
+                className="css-1ivdji5-AddIcon css-wiuq244"
+                height="1em"
+                viewBox={Object {}}
+                width="1em"
+              >
+                <svg
+                  className="css-wiuq244 css-eomeeu-StyledSvg css-adkcw30"
+                  height="1em"
+                  viewBox={Object {}}
+                  width="1em"
+                >
+                  <use
+                    href="#test"
+                    xlinkHref="#test"
+                  />
+                </svg>
+              </StyledSvg>
+            </InlineSvg>
+          </AddIcon>
+          <StyledTextOverflow>
+            <div
+              className="css-q3yspe-TextOverflow-StyledTextOverflow css-wiuq242"
+            >
+              example.com/a/foo
+            </div>
+          </StyledTextOverflow>
+          <TypeHint>
+            <div
+              className="css-6d8mj3-TypeHint css-wiuq241"
+            >
+              [URL]
+            </div>
+          </TypeHint>
+        </div>
+      </RuleCandidate>
+    </div>
+  </Candidates>
+  <BuilderBar>
+    <div
+      className="css-1rsoebt-BuilderBar css-wiuq245"
+    >
+      <BuilderSelect
+        onChange={[Function]}
+        showSearch={false}
+        value="path"
+      >
+        <SelectInput
+          className="css-1eslqkc-BuilderSelect css-wiuq246"
+          disabled={false}
+          multiple={false}
+          onChange={[Function]}
+          placeholder="Select an option..."
+          required={false}
+          showSearch={false}
+          value="path"
+        >
+          <select
+            className="css-1eslqkc-BuilderSelect css-wiuq246"
+            disabled={false}
+            multiple={false}
+            onChange={[Function]}
+            placeholder="Select an option..."
+            required={false}
+            value="path"
+          >
+            <option
+              value="path"
+            >
+              Path
+            </option>
+            <option
+              value="url"
+            >
+              URL
+            </option>
+          </select>
+        </SelectInput>
+      </BuilderSelect>
+      <BuilderInput
+        controlled={true}
+        onChange={[Function]}
+        placeholder="src/example/*"
+        value="a/bar"
+      >
+        <input
+          className="css-1t4syiu-Input-BuilderInput css-wiuq247"
+          onChange={[Function]}
+          placeholder="src/example/*"
+          value="a/bar"
+        />
+      </BuilderInput>
+      <Divider
+        src="icon-chevron-right"
+      >
+        <InlineSvg
+          className="css-a4tn6s-Divider css-wiuq248"
+          src="icon-chevron-right"
+        >
+          <StyledSvg
+            className="css-a4tn6s-Divider css-wiuq248"
+            height="1em"
+            viewBox={Object {}}
+            width="1em"
+          >
+            <svg
+              className="css-wiuq248 css-5e2rei-StyledSvg css-adkcw30"
+              height="1em"
+              viewBox={Object {}}
+              width="1em"
+            >
+              <use
+                href="#test"
+                xlinkHref="#test"
+              />
+            </svg>
+          </StyledSvg>
+        </InlineSvg>
+      </Divider>
+      <Flex
+        align="center"
+        flex="1"
+      >
+        <Base
+          align="center"
+          className="css-1yrw3fm"
+          flex="1"
+        >
+          <div
+            className="css-1yrw3fm"
+            is={null}
+          >
+            <DropdownAutoComplete
+              alignMenu="right"
+              items={
+                Array [
+                  Object {
+                    "items": Array [],
+                    "label": "Teams",
+                    "value": "team",
+                  },
+                  Object {
+                    "items": Array [
+                      Object {
+                        "actor": Object {
+                          "id": "1",
+                          "name": "Jane Doe",
+                          "type": "user",
+                        },
+                        "label": "janedoe@example.com",
+                        "searchKey": "janedoe@example.com  nodejs",
+                        "value": "user:1",
+                      },
+                      Object {
+                        "actor": Object {
+                          "id": "2",
+                          "name": "John Smith",
+                          "type": "user",
+                        },
+                        "label": "johnsmith@example.com",
+                        "searchKey": "johnsmith@example.com  nodejs",
+                        "value": "user:2",
+                      },
+                    ],
+                    "label": "Users",
+                    "value": "user",
+                  },
+                ]
+              }
+              onSelect={[Function]}
+            >
+              <DropdownAutoCompleteMenu
+                alignMenu="right"
+                blendCorner={true}
+                items={
+                  Array [
+                    Object {
+                      "items": Array [],
+                      "label": "Teams",
+                      "value": "team",
+                    },
+                    Object {
+                      "items": Array [
+                        Object {
+                          "actor": Object {
+                            "id": "1",
+                            "name": "Jane Doe",
+                            "type": "user",
+                          },
+                          "label": "janedoe@example.com",
+                          "searchKey": "janedoe@example.com  nodejs",
+                          "value": "user:1",
+                        },
+                        Object {
+                          "actor": Object {
+                            "id": "2",
+                            "name": "John Smith",
+                            "type": "user",
+                          },
+                          "label": "johnsmith@example.com",
+                          "searchKey": "johnsmith@example.com  nodejs",
+                          "value": "user:2",
+                        },
+                      ],
+                      "label": "Users",
+                      "value": "user",
+                    },
+                  ]
+                }
+                onSelect={[Function]}
+              >
+                <AutoComplete
+                  itemToString={[Function]}
+                  onSelect={[Function]}
+                >
+                  <DropdownMenu
+                    isOpen={false}
+                    keepMenuOpen={false}
+                    onClickOutside={[Function]}
+                  >
+                    <AutoCompleteRoot>
+                      <Component
+                        className="css-6v04yn-AutoCompleteRoot css-1w01jf00"
+                      >
+                        <div
+                          className="css-6v04yn-AutoCompleteRoot css-1w01jf00"
+                        >
+                          <div
+                            onClick={[Function]}
+                            onMouseEnter={[Function]}
+                            onMouseLeave={[Function]}
+                            role="button"
+                          >
+                            <BuilderDropdownButton
+                              isOpen={false}
+                              size="zero"
+                            >
+                              <DropdownButton
+                                className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
+                                isOpen={false}
+                                size="zero"
+                              >
+                                <StyledButton
+                                  className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
+                                  isOpen={false}
+                                  size="zero"
+                                >
+                                  <Component
+                                    className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
+                                    isOpen={false}
+                                    size="zero"
+                                  >
+                                    <Button
+                                      className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
+                                      disabled={false}
+                                      size="zero"
+                                    >
+                                      <button
+                                        className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1 button button-default button-zero"
+                                        disabled={false}
+                                        onClick={[Function]}
+                                        role="button"
+                                      >
+                                        <Flex
+                                          align="center"
+                                          className="button-label"
+                                        >
+                                          <Base
+                                            align="center"
+                                            className="button-label css-5ipae5"
+                                          >
+                                            <div
+                                              className="button-label css-5ipae5"
+                                              is={null}
+                                            >
+                                              <Owners>
+                                                <div
+                                                  className="css-1t34ifm-Owners css-wiuq249"
+                                                >
+                                                  <span
+                                                    key="user-1"
+                                                    onClick={[Function]}
+                                                  >
+                                                    <ActorAvatar
+                                                      actor={
+                                                        Object {
+                                                          "id": "1",
+                                                          "name": "Jane Doe",
+                                                          "type": "user",
+                                                        }
+                                                      }
+                                                    >
+                                                      <Avatar
+                                                        hasTooltip={true}
+                                                        user={
+                                                          Object {
+                                                            "email": "janedoe@example.com",
+                                                            "id": "1",
+                                                            "name": "Jane Doe",
+                                                            "username": "foo@example.com",
+                                                          }
+                                                        }
+                                                      >
+                                                        <UserAvatar
+                                                          gravatar={true}
+                                                          hasTooltip={true}
+                                                          user={
+                                                            Object {
+                                                              "email": "janedoe@example.com",
+                                                              "id": "1",
+                                                              "name": "Jane Doe",
+                                                              "username": "foo@example.com",
+                                                            }
+                                                          }
+                                                        >
+                                                          <BaseAvatar
+                                                            gravatar={true}
+                                                            gravatarId="janedoe@example.com"
+                                                            hasTooltip={true}
+                                                            letterId="janedoe@example.com"
+                                                            style={Object {}}
+                                                            title="Jane Doe"
+                                                            tooltip="Jane Doe (janedoe@example.com)"
+                                                            type="gravatar"
+                                                          >
+                                                            <Tooltip
+                                                              disabled={false}
+                                                              title="Jane Doe (janedoe@example.com)"
+                                                            >
+                                                              <span
+                                                                className="tip avatar"
+                                                                style={Object {}}
+                                                                title="Jane Doe (janedoe@example.com)"
+                                                              >
+                                                                <img
+                                                                  onError={[Function]}
+                                                                  onLoad={[Function]}
+                                                                  src="undefined/avatar/e1f3994f2632af3d1c8c2dcc168a10e6?d=blank&s=64"
+                                                                />
+                                                              </span>
+                                                            </Tooltip>
+                                                          </BaseAvatar>
+                                                        </UserAvatar>
+                                                      </Avatar>
+                                                    </ActorAvatar>
+                                                  </span>
+                                                </div>
+                                              </Owners>
+                                              <div>
+                                                Add Owners
+                                              </div>
+                                              <StyledChevronDown>
+                                                <Component
+                                                  className="css-17v3tc-StyledChevronDown css-1pig06q0"
+                                                >
+                                                  <InlineSvg
+                                                    className="css-17v3tc-StyledChevronDown css-1pig06q0"
+                                                    src="icon-chevron-down"
+                                                  >
+                                                    <StyledSvg
+                                                      className="css-17v3tc-StyledChevronDown css-1pig06q0"
+                                                      height="1em"
+                                                      viewBox={Object {}}
+                                                      width="1em"
+                                                    >
+                                                      <svg
+                                                        className="css-1pig06q0 css-1vk3ljv-StyledSvg css-adkcw30"
+                                                        height="1em"
+                                                        viewBox={Object {}}
+                                                        width="1em"
+                                                      >
+                                                        <use
+                                                          href="#test"
+                                                          xlinkHref="#test"
+                                                        />
+                                                      </svg>
+                                                    </StyledSvg>
+                                                  </InlineSvg>
+                                                </Component>
+                                              </StyledChevronDown>
+                                            </div>
+                                          </Base>
+                                        </Flex>
+                                      </button>
+                                    </Button>
+                                  </Component>
+                                </StyledButton>
+                              </DropdownButton>
+                            </BuilderDropdownButton>
+                          </div>
+                        </div>
+                      </Component>
+                    </AutoCompleteRoot>
+                  </DropdownMenu>
+                </AutoComplete>
+              </DropdownAutoCompleteMenu>
+            </DropdownAutoComplete>
+          </div>
+        </Base>
+      </Flex>
+      <RuleAddButton
+        icon="icon-circle-add"
+        onClick={[Function]}
+        priority="primary"
+        size="zero"
+      >
+        <Button
+          className="css-3daogo-RuleAddButton css-wiuq2411"
+          disabled={false}
+          icon="icon-circle-add"
+          onClick={[Function]}
+          priority="primary"
+          size="zero"
+        >
+          <button
+            className="css-3daogo-RuleAddButton css-wiuq2411 button button-primary button-zero"
             disabled={false}
             onClick={[Function]}
             role="button"
diff --git a/tests/js/spec/views/ownershipInput.spec.jsx b/tests/js/spec/views/ownershipInput.spec.jsx
index cbfbb3e097..5fde65a8b0 100644
--- a/tests/js/spec/views/ownershipInput.spec.jsx
+++ b/tests/js/spec/views/ownershipInput.spec.jsx
@@ -1,6 +1,8 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
+import {ThemeProvider} from 'emotion-theming';
+import theme from 'app/utils/theme';
 import {Client} from 'app/api';
 import OwnerInput from 'app/views/settings/project/projectOwnership/ownerInput';
 
@@ -24,12 +26,14 @@ describe('ProjectTeamsSettings', function() {
   describe('render()', function() {
     it('renders', function() {
       let wrapper = mount(
-        <OwnerInput
-          params={{orgId: org.slug, projectId: project.slug}}
-          organization={org}
-          initialText="url:src @dummy@example.com"
-          project={project}
-        />,
+        <ThemeProvider theme={theme}>
+          <OwnerInput
+            params={{orgId: org.slug, projectId: project.slug}}
+            organization={org}
+            initialText="url:src @dummy@example.com"
+            project={project}
+          />
+        </ThemeProvider>,
         TestStubs.routerContext()
       );
 
@@ -37,16 +41,20 @@ describe('ProjectTeamsSettings', function() {
 
       expect(put).not.toHaveBeenCalled();
 
-      // if text is inchange, submit button is disabled
+      // if text is unchanged, submit button is disabled
       submit.simulate('click');
       expect(put).not.toHaveBeenCalled();
 
-      wrapper.setState({text: 'new'});
+      wrapper
+        .find(OwnerInput)
+        .instance()
+        .onChange({target: {value: 'new'}});
+
       submit.simulate('click');
 
       expect(put).toHaveBeenCalled();
 
-      expect(wrapper).toMatchSnapshot();
+      expect(wrapper.find(OwnerInput)).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/ruleBuilder.spec.jsx b/tests/js/spec/views/ruleBuilder.spec.jsx
index eb283457ce..540241b1a9 100644
--- a/tests/js/spec/views/ruleBuilder.spec.jsx
+++ b/tests/js/spec/views/ruleBuilder.spec.jsx
@@ -1,6 +1,8 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
+import {ThemeProvider} from 'emotion-theming';
+import theme from 'app/utils/theme';
 import MemberListStore from 'app/stores/memberListStore';
 import TeamStore from 'app/stores/teamStore';
 
@@ -46,7 +48,9 @@ describe('RuleBuilder', function() {
   describe('render()', function() {
     it('renders', function() {
       let wrapper = mount(
-        <RuleBuilder project={project} onAddRule={handleAdd} />,
+        <ThemeProvider theme={theme}>
+          <RuleBuilder project={project} onAddRule={handleAdd} />
+        </ThemeProvider>,
         TestStubs.routerContext()
       );
 
@@ -68,7 +72,37 @@ describe('RuleBuilder', function() {
       add.simulate('click');
       expect(handleAdd).toHaveBeenCalled();
 
-      expect(wrapper).toMatchSnapshot();
+      expect(wrapper.find(RuleBuilder)).toMatchSnapshot();
+    });
+  });
+
+  describe('renders with suggestions', function() {
+    it('renders', function() {
+      let wrapper = mount(
+        <ThemeProvider theme={theme}>
+          <RuleBuilder
+            project={project}
+            onAddRule={handleAdd}
+            urls={['example.com/a', 'example.com/a/foo']}
+            paths={['a/bar', 'a/foo']}
+          />
+        </ThemeProvider>,
+        TestStubs.routerContext()
+      );
+
+      let openDropdown = wrapper.find('BuilderDropdownButton');
+      openDropdown.simulate('click');
+      let user = wrapper.find('AutoCompleteItem').first();
+      user.simulate('click');
+
+      let ruleCandidate = wrapper.find('RuleCandidate').first();
+      ruleCandidate.simulate('click');
+
+      let add = wrapper.find('RuleAddButton');
+      expect(wrapper.find(RuleBuilder)).toMatchSnapshot();
+
+      add.simulate('click');
+      expect(handleAdd).toHaveBeenCalled();
     });
   });
 });
