commit b2e94cf27892ebdf41adef612a626e92370cf2e1
Author: Jess MacQueen <jess@getsentry.com>
Date:   Tue Jul 11 13:45:53 2017 -0700

    switch type to data, don't index level

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 358e219644..941798b75e 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -42,7 +42,7 @@ delete_logger = logging.getLogger('sentry.deletions.api')
 
 ERR_INVALID_STATS_PERIOD = "Invalid stats_period. Valid choices are '', '24h', and '14d'"
 SAVED_SEARCH_QUERIES = set([s['query'] for s in DEFAULT_SAVED_SEARCHES])
-TOMBSTONE_FIELDS_FROM_GROUP = ('project_id', 'level', 'message', 'culprit')
+TOMBSTONE_FIELDS_FROM_GROUP = ('project_id', 'level', 'message', 'culprit', 'data')
 
 
 @scenario('BulkUpdateIssues')
@@ -485,7 +485,6 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
                     try:
                         tombstone = GroupTombstone.objects.create(
                             previous_group_id=group.id,
-                            type=group.get_event_type(),
                             actor_id=acting_user.id if acting_user else None,
                             **{name: getattr(group, name) for name in TOMBSTONE_FIELDS_FROM_GROUP}
                         )
diff --git a/src/sentry/api/serializers/models/grouptombstone.py b/src/sentry/api/serializers/models/grouptombstone.py
index f999a77f0a..5aa26e47e2 100644
--- a/src/sentry/api/serializers/models/grouptombstone.py
+++ b/src/sentry/api/serializers/models/grouptombstone.py
@@ -37,7 +37,7 @@ class GroupTombstoneSerializer(Serializer):
             'level': six.text_type(obj.level),
             'message': obj.message,
             'culprit': obj.culprit,
-            'type': obj.type,
+            'type': obj.get_event_type(),
             'actor': attrs.get('user'),
 
         }
diff --git a/src/sentry/models/grouptombstone.py b/src/sentry/models/grouptombstone.py
index e19a1c831f..eb7ea109b2 100644
--- a/src/sentry/models/grouptombstone.py
+++ b/src/sentry/models/grouptombstone.py
@@ -5,7 +5,10 @@ import logging
 from django.db import models
 
 from sentry.constants import LOG_LEVELS, MAX_CULPRIT_LENGTH
-from sentry.db.models import BoundedPositiveIntegerField, FlexibleForeignKey, Model
+from sentry.db.models import (
+    BoundedPositiveIntegerField, FlexibleForeignKey,
+    GzippedDictField, Model
+)
 
 
 class GroupTombstone(Model):
@@ -14,15 +17,22 @@ class GroupTombstone(Model):
     previous_group_id = BoundedPositiveIntegerField(unique=True)
     project = FlexibleForeignKey('sentry.Project')
     level = BoundedPositiveIntegerField(
-        choices=LOG_LEVELS.items(), default=logging.ERROR, blank=True,
-        db_index=True)
+        choices=LOG_LEVELS.items(), default=logging.ERROR, blank=True)
     message = models.TextField()
     culprit = models.CharField(
         max_length=MAX_CULPRIT_LENGTH, blank=True, null=True,
     )
-    type = models.TextField()
+    data = GzippedDictField(blank=True, null=True)
     actor_id = BoundedPositiveIntegerField(null=True)
 
     class Meta:
         app_label = 'sentry'
         db_table = 'sentry_grouptombstone'
+
+    def get_event_type(self):
+        """
+        Return the type of this issue.
+
+        See ``sentry.eventtypes``.
+        """
+        return self.data.get('type', 'default')
diff --git a/src/sentry/south_migrations/0339_auto__add_grouptombstone__add_field_grouphash_group_tombstone.py b/src/sentry/south_migrations/0339_auto__add_grouptombstone__add_field_grouphash_group_tombstone.py
index 1031a432e1..197feda81b 100644
--- a/src/sentry/south_migrations/0339_auto__add_grouptombstone__add_field_grouphash_group_tombstone.py
+++ b/src/sentry/south_migrations/0339_auto__add_grouptombstone__add_field_grouphash_group_tombstone.py
@@ -16,11 +16,11 @@ class Migration(SchemaMigration):
             ('project', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(
                 to=orm['sentry.Project'])),
             ('level', self.gf('sentry.db.models.fields.bounded.BoundedPositiveIntegerField')(
-                default=40, db_index=True, blank=True)),
+                default=40, blank=True)),
             ('message', self.gf('django.db.models.fields.TextField')()),
             ('culprit', self.gf('django.db.models.fields.CharField')(
                 max_length=200, null=True, blank=True)),
-            ('type', self.gf('django.db.models.fields.TextField')()),
+            ('data', self.gf('sentry.db.models.fields.gzippeddict.GzippedDictField')(null=True, blank=True)),
             ('actor_id', self.gf('sentry.db.models.fields.bounded.BoundedPositiveIntegerField')(null=True)),
         ))
         db.send_create_signal('sentry', ['GroupTombstone'])
@@ -53,12 +53,12 @@ class Migration(SchemaMigration):
         'sentry.apiapplication': {
             'Meta': {'object_name': 'ApiApplication'},
             'allowed_origins': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
-            'client_id': ('django.db.models.fields.CharField', [], {'default': "'1bd538c0ad9e447a9169af963180b33ad78d1d5e8edb4ca8886f31939aec7d83'", 'unique': 'True', 'max_length': '64'}),
-            'client_secret': ('sentry.db.models.fields.encrypted.EncryptedTextField', [], {'default': "'b790564de5804ba29ef871e43d469fa2f72cb3439acd46a0b45a459938623152'"}),
+            'client_id': ('django.db.models.fields.CharField', [], {'default': "'45e06092e45c49eb84af700a3b31784c84236bc005e6463e846828341a187b0e'", 'unique': 'True', 'max_length': '64'}),
+            'client_secret': ('sentry.db.models.fields.encrypted.EncryptedTextField', [], {'default': "'d4d2ceaab9204d0b8fdf5dc652428801550628feadfd43349cbd95e56fc9a6e7'"}),
             'date_added': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
             'homepage_url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True'}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
-            'name': ('django.db.models.fields.CharField', [], {'default': "'Viable Akita'", 'max_length': '64', 'blank': 'True'}),
+            'name': ('django.db.models.fields.CharField', [], {'default': "'Discrete Emu'", 'max_length': '64', 'blank': 'True'}),
             'owner': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.User']"}),
             'privacy_url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True'}),
             'redirect_uris': ('django.db.models.fields.TextField', [], {}),
@@ -77,7 +77,7 @@ class Migration(SchemaMigration):
         'sentry.apigrant': {
             'Meta': {'object_name': 'ApiGrant'},
             'application': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.ApiApplication']"}),
-            'code': ('django.db.models.fields.CharField', [], {'default': "'7064dd74a0344bb3aa0c09595fb8bcf2'", 'max_length': '64', 'db_index': 'True'}),
+            'code': ('django.db.models.fields.CharField', [], {'default': "'253d04643bda4681a7325712327072cf'", 'max_length': '64', 'db_index': 'True'}),
             'expires_at': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(2017, 7, 11, 0, 0)', 'db_index': 'True'}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
             'redirect_uri': ('django.db.models.fields.CharField', [], {'max_length': '255'}),
@@ -103,10 +103,10 @@ class Migration(SchemaMigration):
             'date_added': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
             'expires_at': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(2017, 8, 10, 0, 0)', 'null': 'True'}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
-            'refresh_token': ('django.db.models.fields.CharField', [], {'default': "'9ddcd9d5bbdb43c69a4d88d8e7c138c7f61b0eecc69f48ae9c60b92cefc6a2e9'", 'max_length': '64', 'unique': 'True', 'null': 'True'}),
+            'refresh_token': ('django.db.models.fields.CharField', [], {'default': "'1e022d24d299486abf1f034894079261ad53c61421374c08b8959d8e78890f9e'", 'max_length': '64', 'unique': 'True', 'null': 'True'}),
             'scope_list': ('sentry.db.models.fields.array.ArrayField', [], {'of': ('django.db.models.fields.TextField', [], {})}),
             'scopes': ('django.db.models.fields.BigIntegerField', [], {'default': 'None'}),
-            'token': ('django.db.models.fields.CharField', [], {'default': "'0630cb33f84d495b8ae31204f3a1669d208f5ff77cc54058bc042077ff06b0e4'", 'unique': 'True', 'max_length': '64'}),
+            'token': ('django.db.models.fields.CharField', [], {'default': "'ad7459a5987344c8bba322ddcb95c9900dac3888fdcd4da68caf7f71c978aba6'", 'unique': 'True', 'max_length': '64'}),
             'user': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.User']"})
         },
         'sentry.auditlogentry': {
@@ -500,12 +500,12 @@ class Migration(SchemaMigration):
             'Meta': {'object_name': 'GroupTombstone'},
             'actor_id': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {'null': 'True'}),
             'culprit': ('django.db.models.fields.CharField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'}),
+            'data': ('sentry.db.models.fields.gzippeddict.GzippedDictField', [], {'null': 'True', 'blank': 'True'}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
-            'level': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'level': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {'default': '40', 'blank': 'True'}),
             'message': ('django.db.models.fields.TextField', [], {}),
             'previous_group_id': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {'unique': 'True'}),
-            'project': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.Project']"}),
-            'type': ('django.db.models.fields.TextField', [], {})
+            'project': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.Project']"})
         },
         'sentry.lostpasswordhash': {
             'Meta': {'object_name': 'LostPasswordHash'},
@@ -780,7 +780,7 @@ class Migration(SchemaMigration):
             'data': ('jsonfield.fields.JSONField', [], {'default': '{}'}),
             'date_added': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
             'date_scheduled': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(2017, 8, 10, 0, 0)'}),
-            'guid': ('django.db.models.fields.CharField', [], {'default': "'2f8aced6d2a34c4aa944c7c43bf0788a'", 'unique': 'True', 'max_length': '32'}),
+            'guid': ('django.db.models.fields.CharField', [], {'default': "'f690c82c61274065a4b92762012fded2'", 'unique': 'True', 'max_length': '32'}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
             'in_progress': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
             'model_name': ('django.db.models.fields.CharField', [], {'max_length': '64'}),
@@ -856,7 +856,7 @@ class Migration(SchemaMigration):
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
             'is_verified': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
             'user': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'related_name': "'emails'", 'to': "orm['sentry.User']"}),
-            'validation_hash': ('django.db.models.fields.CharField', [], {'default': "u'SVKcvuwRu2il6U3NBFxT3OHRUB8VQRR6'", 'max_length': '32'})
+            'validation_hash': ('django.db.models.fields.CharField', [], {'default': "u'I4RdWFTjb7tDqlLqQuboJGwtpCCr4huW'", 'max_length': '32'})
         },
         'sentry.useroption': {
             'Meta': {'unique_together': "(('user', 'project', 'key'), ('user', 'organization', 'key'))", 'object_name': 'UserOption'},
diff --git a/tests/sentry/api/endpoints/test_group_details.py b/tests/sentry/api/endpoints/test_group_details.py
index ee664d72a4..587a5b0e8b 100644
--- a/tests/sentry/api/endpoints/test_group_details.py
+++ b/tests/sentry/api/endpoints/test_group_details.py
@@ -300,7 +300,7 @@ class GroupUpdateTest(APITestCase):
         assert tombstone.message == group.message
         assert tombstone.culprit == group.culprit
         assert tombstone.project == group.project
-        assert tombstone.type == group.get_event_type()
+        assert tombstone.data == group.data
 
 
 class GroupDeleteTest(APITestCase):
diff --git a/tests/sentry/api/endpoints/test_group_tombstone.py b/tests/sentry/api/endpoints/test_group_tombstone.py
index 6d1b3b210a..327ee276e3 100644
--- a/tests/sentry/api/endpoints/test_group_tombstone.py
+++ b/tests/sentry/api/endpoints/test_group_tombstone.py
@@ -30,7 +30,7 @@ class GroupTombstoneTest(APITestCase):
             level=group.level,
             message=group.message,
             culprit=group.culprit,
-            type=group.get_event_type(),
+            data=group.data,
             previous_group_id=group.id,
         )
         GroupHash.objects.create(
diff --git a/tests/sentry/api/endpoints/test_group_tombstone_details.py b/tests/sentry/api/endpoints/test_group_tombstone_details.py
index 17a88e214c..5edd386829 100644
--- a/tests/sentry/api/endpoints/test_group_tombstone_details.py
+++ b/tests/sentry/api/endpoints/test_group_tombstone_details.py
@@ -15,7 +15,7 @@ class GroupTombstoneDetailsTest(APITestCase):
             level=group.level,
             message=group.message,
             culprit=group.culprit,
-            type=group.get_event_type(),
+            data=group.data,
             previous_group_id=group.id,
         )
         GroupHash.objects.create(
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index fe581242e3..4f03b249fd 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -1213,7 +1213,7 @@ class GroupUpdateTest(APITestCase):
         assert tombstone.message == group1.message
         assert tombstone.culprit == group1.culprit
         assert tombstone.project == group1.project
-        assert tombstone.type == group1.get_event_type()
+        assert tombstone.data == group1.data
 
 
 class GroupDeleteTest(APITestCase):
diff --git a/tests/sentry/api/serializers/test_group_tombstone.py b/tests/sentry/api/serializers/test_group_tombstone.py
index ae71f6c5bf..088607ce68 100644
--- a/tests/sentry/api/serializers/test_group_tombstone.py
+++ b/tests/sentry/api/serializers/test_group_tombstone.py
@@ -24,7 +24,7 @@ class GroupTombstoneSerializerTest(TestCase):
             level=group.level,
             message=group.message,
             culprit=group.culprit,
-            type=group.get_event_type(),
+            data=group.data,
             actor_id=self.user.id,
             previous_group_id=group.id,
         )
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index ea6ff77aef..bea188707e 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -774,7 +774,7 @@ class EventManagerTest(TransactionTestCase):
             level=group.level,
             message=group.message,
             culprit=group.culprit,
-            type=group.get_event_type(),
+            data=group.data,
             previous_group_id=group.id,
         )
         GroupHash.objects.filter(
