commit 6c0d6a93f4190e88cd089fede495441215f558da
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 2 02:27:11 2012 -0800

    Added initial user management and general cleanup of templates.

diff --git a/CHANGES b/CHANGES
index f54902b7a1..613d38d3ba 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,7 +1,14 @@
+Version 2.4.0
+-------------
+
+* Added user management for admins.
+* Resolved events should now appear differently.
+* Default membership access is now configurable.
+
 Version 2.3.2
 -------------
 
-* Maintaining *some* level of support for SQLite
+* Maintaining *some* level of support for SQLite.
 
 Version 2.3.1
 -------------
diff --git a/sentry/conf/defaults.py b/sentry/conf/defaults.py
index cae58648d6..6fd7a3975e 100644
--- a/sentry/conf/defaults.py
+++ b/sentry/conf/defaults.py
@@ -136,3 +136,6 @@ DEFAULT_SORT_OPTION = 'date'
 
 # Default sort option for the search results
 SEARCH_DEFAULT_SORT_OPTION = 'date'
+
+# Default project access when a project owner is created
+DEFAULT_PROJECT_ACCESS = 'MEMBER_OWNER'
diff --git a/sentry/conf/settings.py b/sentry/conf/settings.py
index 707928ba6b..c3e0a6e446 100644
--- a/sentry/conf/settings.py
+++ b/sentry/conf/settings.py
@@ -33,6 +33,9 @@ if locals().get('REMOTE_URL'):
 if locals().get('REMOTE_TIMEOUT'):
     TIMEOUT = REMOTE_TIMEOUT
 
+if locals().get('DEFAULT_PROJECT_ACCESS') not in ('MEMBER_OWNER', 'MEMBER_USER', 'MEMBER_SYSTEM'):
+    DEFAULT_PROJECT_ACCESS = 'MEMBER_OWNER'
+
 
 def configure(**kwargs):
     for k, v in kwargs.iteritems():
diff --git a/sentry/management/__init__.py b/sentry/management/__init__.py
index 09e18e7f35..6c87a58ee9 100644
--- a/sentry/management/__init__.py
+++ b/sentry/management/__init__.py
@@ -7,11 +7,14 @@ sentry.management
 """
 
 import logging
+
 from django.contrib.auth.models import User
 from django.db.models.signals import post_syncdb, post_save
+
+from sentry.conf import settings
 from sentry.models import Project, MessageIndex, SearchDocument, \
   Group, Event, FilterValue, MessageFilterValue, MessageCountByMinute, \
-  MEMBER_OWNER
+  MEMBER_OWNER, MEMBER_USER, MEMBER_SYSTEM
 
 
 def register_indexes():
@@ -68,7 +71,7 @@ def create_project_member_for_owner(instance, created, **kwargs):
 
     instance.member_set.create(
         user=instance.owner,
-        type=MEMBER_OWNER
+        type=globals()[settings.DEFAULT_PROJECT_ACCESS]
     )
 
 
diff --git a/sentry/models.py b/sentry/models.py
index 181415d235..afa7982fff 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -19,7 +19,7 @@ from indexer.models import BaseIndex
 from django.contrib.auth.models import User
 from django.core.urlresolvers import reverse
 from django.db import models
-from django.db.models import Sum, F
+from django.db.models import F
 from django.utils.datastructures import SortedDict
 from django.utils.encoding import smart_unicode
 from django.utils.translation import ugettext_lazy as _
@@ -78,7 +78,7 @@ class Project(Model):
     are the top level entry point for all data.
     """
     name = models.CharField(max_length=200)
-    owner = models.ForeignKey(User, related_name="owned_project_set", null=True)
+    owner = models.ForeignKey(User, related_name="sentry_owned_project_set", null=True)
     public = models.BooleanField(default=False)
     date_added = models.DateTimeField(default=datetime.now)
     status = models.PositiveIntegerField(default=0, choices=(
@@ -176,10 +176,10 @@ class ProjectMember(Model):
     their API access and permissions.
     """
     project = models.ForeignKey(Project, related_name="member_set")
-    user = models.ForeignKey(User, related_name="project_set")
+    user = models.ForeignKey(User, related_name="sentry_project_set")
     public_key = models.CharField(max_length=32, unique=True, null=True)
     secret_key = models.CharField(max_length=32, unique=True, null=True)
-    type = models.IntegerField(choices=MEMBER_TYPES, default=MEMBER_OWNER)
+    type = models.IntegerField(choices=MEMBER_TYPES, default=globals().get(settings.DEFAULT_PROJECT_ACCESS))
     date_added = models.DateTimeField(default=datetime.now)
 
     class Meta:
diff --git a/sentry/templates/sentry/admin/base.html b/sentry/templates/sentry/admin/base.html
index c12f7ac0a8..c9d71f03b2 100644
--- a/sentry/templates/sentry/admin/base.html
+++ b/sentry/templates/sentry/admin/base.html
@@ -12,13 +12,11 @@
 {% endblock %}
 
 {% block sidebar %}
-<!--     <h6>Overview</h6>
+    <h6>Overview</h6>
     <ul class="nav nav-tabs nav-stacked">
-        <li><a href="#">Projects</a></li>
-        <li><a href="#">Users</a></li>
-        <li><a href="#">Data Use</a></li>
+        <li><a href="{% url sentry-admin-users %}">Users</a></li>
     </ul>
- -->
+
     <h6>Plugins</h6>
     <ul class="nav nav-tabs nav-stacked">
         {% for p in PLUGINS.for_site %}
diff --git a/sentry/templates/sentry/admin/users/edit.html b/sentry/templates/sentry/admin/users/edit.html
new file mode 100644
index 0000000000..a5993367d3
--- /dev/null
+++ b/sentry/templates/sentry/admin/users/edit.html
@@ -0,0 +1,41 @@
+{% extends "sentry/admin/users/list.html" %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}{% trans "Change User" %} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    {{ block.super }}
+    <li class="divider">/</li>
+    <li><a href="{% url sentry-admin-edit-user the_user.pk %}">{{ the_user.username }}</a></li>
+{% endblock %}
+
+{% block main %}
+    <section class="body">
+        <form action="" method="post">
+            {% csrf_token %}
+            {% if form.non_field_errors %}
+                <div class="alert alert-block alert-error">
+                    <p>{% trans "There were errors saving your changes:" %}</p>
+                    <ul>
+                        {% for error in form.non_field_errors %}
+                            <li>{{ error }}</li>
+                        {% endfor %}
+                    </ul>
+                </div>
+            {% endif %}
+            {% for field in form %}
+                {% include "sentry/partial/_form_field.html" %}
+            {% endfor %}
+            <fieldset class="form-actions">
+                <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
+                {% if the_user.id != request.user.id %}
+                    <a href="{% url sentry-admin-remove-user the_user.pk %}" class="btn btn-danger">{% trans "Remove User" %}</a>
+                {% else %}
+                    <a href="#" class="btn disabled btn-danger">{% trans "Cannot remove yourself" %}</a>
+                {% endif %}
+            </fieldset>
+        </form>
+    </section>
+{% endblock %}
diff --git a/sentry/templates/sentry/admin/users/list.html b/sentry/templates/sentry/admin/users/list.html
new file mode 100644
index 0000000000..5230b2e8d6
--- /dev/null
+++ b/sentry/templates/sentry/admin/users/list.html
@@ -0,0 +1,75 @@
+{% extends "sentry/admin/base.html" %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}{% trans "Manage Users" %} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    <li class="divider">/</li>
+    <li><a href="{% url sentry-admin-users %}">{% trans "Users" %}</a></li>
+{% endblock %}
+
+{% block page_header %}
+    <a href="{% url sentry-admin-new-user %}" class="btn pull-right btn-primary">+ {% trans "Create a new user" %}</a>
+    {{ block.super }}
+{% endblock %}
+
+{% block inner %}
+    {% paginate user_list from request as user_list per_page 50 %}
+
+    {% if user_list.objects %}
+        {{ user_list.paging }}
+
+        <table class="table table-bordered">
+            <colgroup>
+                <col>
+                <col style="width:150px;">
+                <col style="width:150px;">
+                <col style="width:50px;">
+            </colgroup>
+            <thead>
+                <tr>
+                    <th>{% trans "Name" %}</th>
+                    <th style="text-align:center;">{% trans "Joined" %}</th>
+                    <th style="text-align:center;">{% trans "Last Login" %}</th>
+                    <th style="text-align:center;">{% trans "Projects" %}</th>
+                </tr>
+            </thead>
+            <tbody>
+                {% for user in user_list.objects %}
+                    <tr>
+                        <td>
+                            <a href="{% url sentry-admin-edit-user user.pk %}">
+                                {% if user.first_name %}
+                                    {{ user.first_name }} ({{ user.email }})
+                                {% else %}
+                                    {{ user.email }}
+                                {% endif %}
+                            </a>
+                            {% if not user.is_active %}
+                                <em>inactive account</em>
+                            {% endif %}
+                            <br/>
+                            <small>{{ user.username }}</small>
+                        </td>
+                        <td style="text-align:center; vertical-align:middle;">
+                            {{ user.date_joined|date }}
+                        </td>
+                        <td style="text-align:center; vertical-align:middle;">
+                            {{ user.last_login|date }}
+                        </td>
+                        <td style="text-align:center; vertical-align:middle;">
+                            {{ user.num_projects }}
+                        </td>
+                    </tr>
+                {% endfor %}
+            </tbody>
+        </table>
+
+        {{ user_list.paging }}
+
+    {% else %}
+        <p class="alert alert-notice">{% trans "There are no active users in Sentry." %}</p>
+    {% endif %}
+{% endblock %}
diff --git a/sentry/templates/sentry/admin/users/new.html b/sentry/templates/sentry/admin/users/new.html
new file mode 100644
index 0000000000..ab8e2e5a17
--- /dev/null
+++ b/sentry/templates/sentry/admin/users/new.html
@@ -0,0 +1,18 @@
+{% extends "sentry/admin/users/list.html" %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}{% trans "New User" %} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    {{ block.super }}
+    <li class="divider">/</li>
+    <li><a href="{% url sentry-admin-new-user %}">{% trans "Create New User" %}</a></li>
+{% endblock %}
+
+{% block main %}
+    <section class="body">
+        {% include "sentry/partial/_form.html" %}
+    </section>
+{% endblock %}
diff --git a/sentry/templates/sentry/admin/users/remove.html b/sentry/templates/sentry/admin/users/remove.html
new file mode 100644
index 0000000000..2c9c24a46d
--- /dev/null
+++ b/sentry/templates/sentry/admin/users/remove.html
@@ -0,0 +1,35 @@
+{% extends "sentry/admin/users/edit.html" %}
+
+{% load i18n %}
+
+{% block title %}{% trans "Remove User" %} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    {{ block.super }}
+    <li class="divider">/</li>
+    <li><a href="{% url sentry-admin-remove-user the_user.pk %}">{% trans "Remove User" %}</a></li>
+{% endblock %}
+
+{% block main %}
+    <section class="body">
+        <form action="" method="post">
+            {% csrf_token %}
+            {% if form.non_field_errors %}
+                <div class="alert alert-block alert-error">
+                    <p>{% trans "There were errors saving your changes:" %}</p>
+                    <ul>
+                        {% for error in form.non_field_errors %}
+                            <li>{{ error }}</li>
+                        {% endfor %}
+                    </ul>
+                </div>
+            {% endif %}
+            {% for field in form %}
+                {% include "sentry/partial/_form_field.html" %}
+            {% endfor %}
+            <fieldset class="form-actions">
+                <button type="submit" class="btn btn-danger">{% trans "Confirm" %}</button> <a href="{% url sentry-admin-edit-user the_user.pk %}" class="btn">{% trans "Cancel" %}</a>
+            </fieldset>
+        </form>
+    </section>
+{% endblock %}
diff --git a/sentry/templates/sentry/emails/welcome_mail.txt b/sentry/templates/sentry/emails/welcome_mail.txt
new file mode 100644
index 0000000000..a649e883ea
--- /dev/null
+++ b/sentry/templates/sentry/emails/welcome_mail.txt
@@ -0,0 +1,17 @@
+You have a new account on Sentry!
+
+Username: {{ username }}
+Password: {{ password }}
+
+Sign in to Sentry by visiting the following url:
+
+    {{ url }}
+
+{% spaceless %}
+{% if project %}
+A project has been automatically created for you. Configure your client
+with the following value for the Sentry DSN to start sending events:
+
+    {{ dsn }}
+{% endif %}
+{% endspaceless %}
\ No newline at end of file
diff --git a/sentry/templates/sentry/events/replay_request.html b/sentry/templates/sentry/events/replay_request.html
index 5e0a435f58..042a85c2fa 100644
--- a/sentry/templates/sentry/events/replay_request.html
+++ b/sentry/templates/sentry/events/replay_request.html
@@ -33,7 +33,7 @@
                         {% include "sentry/partial/_form_field.html" %}
                     {% endfor %}
                     <fieldset class="form-actions">
-                        <button type="submit" class="btn primary">{% trans "Submit" %}</button>
+                        <button type="submit" class="btn btn-primary">{% trans "Submit" %}</button>
                     </fieldset>
                 </form>
             </div>
diff --git a/sentry/templates/sentry/login.html b/sentry/templates/sentry/login.html
index c3fcbd1524..73212962b5 100644
--- a/sentry/templates/sentry/login.html
+++ b/sentry/templates/sentry/login.html
@@ -28,7 +28,7 @@
             {% endfor %}
 
             <fieldset class="form-actions">
-                <button type="submit" class="btn primary">{% trans "Login" %}</button>
+                <button type="submit" class="btn btn-primary">{% trans "Login" %}</button>
             </fieldset>
         </form>
     </section>
diff --git a/sentry/templates/sentry/partial/_form.html b/sentry/templates/sentry/partial/_form.html
index 9ab6d1b01e..354b8704cb 100644
--- a/sentry/templates/sentry/partial/_form.html
+++ b/sentry/templates/sentry/partial/_form.html
@@ -3,7 +3,7 @@
     {% csrf_token %}
     {% if form.non_field_errors %}
         <div class="alert alert-block alert-error">
-            <p>There were errors saving your changes:</p>
+            <p>{% trans "There were errors saving your changes:" %}</p>
             <ul>
                 {% for error in form.non_field_errors %}
                     <li>{{ error }}</li>
@@ -15,6 +15,6 @@
         {% include "sentry/partial/_form_field.html" %}
     {% endfor %}
     <fieldset class="form-actions">
-        <button type="submit" class="btn primary">{% trans "Save Changes" %}</button>
+        <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
     </fieldset>
 </form>
\ No newline at end of file
diff --git a/sentry/templates/sentry/projects/list.html b/sentry/templates/sentry/projects/list.html
index e3a7bebe4b..b2f563a66a 100644
--- a/sentry/templates/sentry/projects/list.html
+++ b/sentry/templates/sentry/projects/list.html
@@ -7,7 +7,7 @@
 {% block bodyclass %}{% endblock %}
 
 {% block page_header %}
-    <a href="{% url sentry-new-project %}" class="btn pull-right primary">+ Create a new project</a>
+    <a href="{% url sentry-new-project %}" class="btn pull-right btn-primary">+ Create a new project</a>
     {{ block.super }}
 {% endblock %}
 
diff --git a/sentry/templates/sentry/projects/manage.html b/sentry/templates/sentry/projects/manage.html
index 81a09954bc..5c8b9f3202 100644
--- a/sentry/templates/sentry/projects/manage.html
+++ b/sentry/templates/sentry/projects/manage.html
@@ -43,16 +43,16 @@
                     {% endfor %}
                 </fieldset>
                 <fieldset class="form-actions">
-                    <button type="submit" class="btn primary">{% trans "Save Changes" %}</button>
+                    <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
                     {% if PROJECT_ID != project.pk %}
-                        <a href="{% url sentry-remove-project project.pk %}" class="btn danger">{% trans "Remove Project" %}</a>
+                        <a href="{% url sentry-remove-project project.pk %}" class="btn btn-danger">{% trans "Remove Project" %}</a>
                     {% else %}
-                        <a href="#" class="btn disabled danger">{% trans "Cannot remove default project" %}</a>
+                        <a href="#" class="btn disabled btn-danger">{% trans "Cannot remove default project" %}</a>
                     {% endif %}
                 </fieldset>
             </form>
             <div class="page-header">
-                <a href="{% url sentry-new-project-member project.pk %}" class="btn pull-right small primary">{% trans "+ New Member" %}</a>
+                <a href="{% url sentry-new-project-member project.pk %}" class="btn pull-right small btn-primary">{% trans "+ New Member" %}</a>
                 <h2>{% trans "Members" %}</h2>
             </div>
             <table class="table table-bordered table-zebra">
diff --git a/sentry/templates/sentry/projects/members/edit.html b/sentry/templates/sentry/projects/members/edit.html
index a6f8926b7f..9b66e35999 100644
--- a/sentry/templates/sentry/projects/members/edit.html
+++ b/sentry/templates/sentry/projects/members/edit.html
@@ -53,7 +53,7 @@
                 {% include "sentry/partial/_form_field.html" %}
             {% endfor %}
             <fieldset class="form-actions">
-                <button type="submit" class="btn primary">{% trans "Save Changes" %}</button>
+                <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
             </fieldset>
         </form>
     </section>
diff --git a/sentry/templates/sentry/projects/new.html b/sentry/templates/sentry/projects/new.html
index c5dc76958a..fc094c2f9f 100644
--- a/sentry/templates/sentry/projects/new.html
+++ b/sentry/templates/sentry/projects/new.html
@@ -29,7 +29,7 @@
                 {% endfor %}
             </fieldset>
             <div class="actions">
-                <button type="submit" class="btn primary">{% trans "Save Changes" %}</button>
+                <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
             </div>
         </form>
     </section>
diff --git a/sentry/templates/sentry/projects/remove.html b/sentry/templates/sentry/projects/remove.html
index fc898ea39d..5c51b2ca85 100644
--- a/sentry/templates/sentry/projects/remove.html
+++ b/sentry/templates/sentry/projects/remove.html
@@ -16,7 +16,7 @@
             {% csrf_token %}
             {% if form.non_field_errors %}
                 <div class="alert alert-block alert-error">
-                    <p>There were errors saving your changes:</p>
+                    <p>{% trans "There were errors saving your changes:" %}</p>
                     <ul>
                         {% for error in form.non_field_errors %}
                             <li>{{ error }}</li>
@@ -28,7 +28,7 @@
                 {% include "sentry/partial/_form_field.html" %}
             {% endfor %}
             <fieldset class="form-actions">
-                <button type="submit" class="btn danger">{% trans "Confirm" %}</button> <a href="{% url sentry-manage-project project.pk %}" class="btn">{% trans "Cancel" %}</a>
+                <button type="submit" class="btn btn-danger">{% trans "Confirm" %}</button> <a href="{% url sentry-manage-project project.pk %}" class="btn">{% trans "Cancel" %}</a>
             </fieldset>
         </form>
     </section>
diff --git a/sentry/web/forms.py b/sentry/web/forms.py
index 3b1de6cb3b..75bab2ae5a 100644
--- a/sentry/web/forms.py
+++ b/sentry/web/forms.py
@@ -141,3 +141,32 @@ class ReplayForm(forms.Form):
             return
 
         return dict(line.split(': ') for line in value.split('\n'))
+
+
+class BaseUserForm(forms.ModelForm):
+    email = forms.EmailField()
+    first_name = forms.CharField(required=True, label='Name')
+
+
+class NewUserForm(BaseUserForm):
+    create_project = forms.BooleanField(required=False,
+        help_text="Create a project for this user.")
+    send_welcome_mail = forms.BooleanField(required=False,
+        help_text="Send this user a welcome email which will contain their generated password.")
+
+    class Meta:
+        fields = ('first_name', 'username', 'email')
+        model = User
+
+
+class ChangeUserForm(BaseUserForm):
+    class Meta:
+        fields = ('first_name', 'username', 'email', 'is_active')
+        model = User
+
+
+class RemoveUserForm(forms.Form):
+    removal_type = forms.ChoiceField(choices=(
+        ('1', 'Disable the account.'),
+        ('2', 'Permanently remove the user and their data.'),
+    ), widget=forms.RadioSelect(renderer=RadioFieldRenderer))
diff --git a/sentry/web/frontend/admin.py b/sentry/web/frontend/admin.py
index 393ae0b448..4199aee13f 100644
--- a/sentry/web/frontend/admin.py
+++ b/sentry/web/frontend/admin.py
@@ -8,18 +8,26 @@ sentry.web.frontend.generic
 import datetime
 import pkg_resources
 import sys
+import uuid
 
+from django.contrib.auth.models import User
+from django.core.context_processors import csrf
+from django.core.mail import send_mail
 from django.core.urlresolvers import reverse
-from django.db.models import Sum
+from django.db import transaction
+from django.db.models import Sum, Count
 from django.http import HttpResponseRedirect
+from django.views.decorators.csrf import csrf_protect
 from djkombu.models import Queue
 
 from sentry import environment
 from sentry.conf import settings
 from sentry.models import Project, MessageCountByMinute
 from sentry.plugins import plugins
+from sentry.web.forms import NewUserForm, ChangeUserForm, RemoveUserForm
 from sentry.web.decorators import requires_admin
-from sentry.web.helpers import render_to_response, plugin_config
+from sentry.web.helpers import render_to_response, plugin_config, \
+  render_to_string
 
 
 def configure_plugin(request, slug):
@@ -40,12 +48,131 @@ def configure_plugin(request, slug):
 
 
 @requires_admin
-def status(request):
-    from sentry.views import View
+def manage_users(request):
+    if not request.user.has_perm('auth.can_add_user'):
+        return HttpResponseRedirect(reverse('sentry'))
+
+    users = User.objects.annotate(num_projects=Count('sentry_project_set'))\
+                .order_by('-last_login')
+
+    return render_to_response('sentry/admin/users/list.html', {
+        'user_list': users,
+    }, request)
+
+
+@requires_admin
+@transaction.commit_on_success
+@csrf_protect
+def create_new_user(request):
+    if not request.user.has_perm('auth.can_add_user'):
+        return HttpResponseRedirect(reverse('sentry'))
+
+    form = NewUserForm(request.POST or None, initial={
+        'send_welcome_mail': True,
+        'create_project': True,
+    })
+    if form.is_valid():
+        user = form.save(commit=False)
+
+        # create a random password
+        password = uuid.uuid4().hex
+        user.set_password(password)
+
+        user.save()
+
+        if form.cleaned_data['create_project']:
+            project = Project.objects.create(
+                owner=user,
+                name='New Project',
+            )
+            member = project.member_set.get()
+
+        if form.cleaned_data['send_welcome_mail']:
+            context = {
+                'username': user.username,
+                'password': password,
+                'url': request.build_absolute_uri(reverse('sentry')),
+            }
+            if form.cleaned_data['create_project']:
+                context.update({
+                    'project': project,
+                    'member': member,
+                    'dsn': member.get_dsn(request.get_host(), secure=request.is_secure()),
+                })
+            body = render_to_string('sentry/emails/welcome_mail.txt', context, request)
+
+            send_mail('%s Welcome to Sentry' % (settings.EMAIL_SUBJECT_PREFIX,),
+                body, settings.SERVER_EMAIL, [user.email],
+                fail_silently=True)
+
+        return HttpResponseRedirect(reverse('sentry-admin-users'))
+
+    context = {
+        'form': form,
+    }
+    context.update(csrf(request))
+
+    return render_to_response('sentry/admin/users/new.html', context, request)
 
-    if not request.user.is_staff:
+
+@requires_admin
+@csrf_protect
+def edit_user(request, user_id):
+    if not request.user.has_perm('auth.can_change_user'):
         return HttpResponseRedirect(reverse('sentry'))
 
+    try:
+        user = User.objects.get(pk=user_id)
+    except User.DoesNotExist:
+        return HttpResponseRedirect(reverse('sentry-admin-users'))
+
+    form = ChangeUserForm(request.POST or None, instance=user)
+    if form.is_valid():
+        user = form.save()
+        return HttpResponseRedirect(reverse('sentry-admin-users'))
+
+    context = {
+        'form': form,
+        'the_user': user,
+    }
+    context.update(csrf(request))
+
+    return render_to_response('sentry/admin/users/edit.html', context, request)
+
+
+@requires_admin
+@csrf_protect
+def remove_user(request, user_id):
+    if str(user_id) == str(request.user.id):
+        return HttpResponseRedirect(reverse('sentry-admin-users'))
+
+    try:
+        user = User.objects.get(pk=user_id)
+    except User.DoesNotExist:
+        return HttpResponseRedirect(reverse('sentry-admin-users'))
+
+    form = RemoveUserForm(request.POST or None)
+    if form.is_valid():
+        if form.cleaned_data['removal_type'] == '2':
+            user.delete()
+        else:
+            User.objects.filter(pk=user.pk).update(is_active=False)
+
+        return HttpResponseRedirect(reverse('sentry-admin-users'))
+
+    context = csrf(request)
+    context.update({
+        'form': form,
+        'the_user': user,
+    })
+
+    return render_to_response('sentry/admin/users/remove.html', context, request)
+
+
+@requires_admin
+def status(request):
+    from sentry.views import View
+
     config = []
     for k in sorted(dir(settings)):
         if k == 'KEY':
diff --git a/sentry/web/urls.py b/sentry/web/urls.py
index 9b0118f7f7..a03d19c8b6 100644
--- a/sentry/web/urls.py
+++ b/sentry/web/urls.py
@@ -57,6 +57,10 @@ urlpatterns = patterns('',
 
     url(r'^$', generic.dashboard, name='sentry'),
     url(r'^manage/status/$', admin.status, name='sentry-admin-status'),
+    url(r'^manage/users/$', admin.manage_users, name='sentry-admin-users'),
+    url(r'^manage/users/new/$', admin.create_new_user, name='sentry-admin-new-user'),
+    url(r'^manage/users/(?P<user_id>\d+)/$', admin.edit_user, name='sentry-admin-edit-user'),
+    url(r'^manage/users/(?P<user_id>\d+)/remove/$', admin.remove_user, name='sentry-admin-remove-user'),
     url(r'^manage/plugins/(?P<slug>[\w_-]+)/$', admin.configure_plugin, name='sentry-admin-configure-plugin'),
 
     # API / JS
diff --git a/setup.py b/setup.py
index cf02e1c385..6794528c96 100755
--- a/setup.py
+++ b/setup.py
@@ -45,7 +45,7 @@ install_requires = [
 
 setup(
     name='sentry',
-    version='2.3.2',
+    version='2.4.0',
     author='David Cramer',
     author_email='dcramer@gmail.com',
     url='http://github.com/dcramer/sentry',
