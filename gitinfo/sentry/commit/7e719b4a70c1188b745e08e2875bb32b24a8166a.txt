commit 7e719b4a70c1188b745e08e2875bb32b24a8166a
Author: Jason Yan <tailofthesun@gmail.com>
Date:   Wed Jun 2 18:08:40 2010 -0700

    Fixed issues with handling unicode in messages.

diff --git a/djangodblog/manager.py b/djangodblog/manager.py
index afe4a0a036..339a097691 100644
--- a/djangodblog/manager.py
+++ b/djangodblog/manager.py
@@ -18,6 +18,7 @@ from django.conf import settings
 from django.db import models
 from django.conf import settings
 from django.db.models import sql
+from django.utils.encoding import smart_unicode
 from django.utils.hashcompat import md5_constructor
 from django.db.models.query import QuerySet
 from django.views.debug import ExceptionReporter
@@ -45,7 +46,7 @@ class DBLogManager(models.Manager):
         
         message = defaults.get('traceback') or defaults['message']
         if isinstance(message, unicode):
-            message = message.encode('ascii', 'replace')
+            message = message.encode('utf-8', 'replace')
         checksum    = md5_constructor(str(defaults.get('level', logging.FATAL)))
         checksum.update(class_name or '')
         checksum.update(message)
@@ -126,13 +127,9 @@ class DBLogManager(models.Manager):
                     nf[str(k)] = to_unicode(v)
                 f = nf
             elif isinstance(f, (list, tuple)):
-                f = map(to_unicode, f)
-            elif not isinstance(f, basestring):
-                try:
-                    f = unicode(f)
-                except Exception, exc:
-                    # TODO: 
-                    pass
+                f = [to_unicode(f) for f in f]
+            else:
+                f = smart_unicode(f)
             return f
 
         reporter = ExceptionReporter(None, exc_type, exc_value, traceback)
@@ -150,4 +147,4 @@ class DBLogManager(models.Manager):
             traceback=tb_message,
             data=data,
             **kwargs
-        )
\ No newline at end of file
+        )
diff --git a/djangodblog/models.py b/djangodblog/models.py
index aa77ae6b2a..27e6abf698 100644
--- a/djangodblog/models.py
+++ b/djangodblog/models.py
@@ -1,4 +1,5 @@
 from django.db import models
+from django.utils.encoding import smart_unicode
 from django.utils.translation import ugettext_lazy as _
 
 try:
@@ -64,7 +65,7 @@ class ErrorBatch(Model):
     shortened_url.admin_order_field = 'url'
 
     def error(self):
-        message = self.message
+        message = smart_unicode(self.message)
         if len(message) > 100:
             message = message[:97] + '...'
         if self.class_name:
@@ -93,7 +94,7 @@ class Error(Model):
         verbose_name_plural = 'Messages'
 
     def __unicode__(self):
-        return "%s: %s" % (self.class_name, self.message)
+        return "%s: %s" % (self.class_name, smart_unicode(self.message))
 
     def shortened_url(self):
         if not self.url:
@@ -106,7 +107,7 @@ class Error(Model):
     shortened_url.admin_order_field = 'url'
 
     def error(self):
-        message = self.message
+        message = smart_unicode(self.message)
         if len(message) > 100:
             message = message[:97] + '...'
         if self.class_name:
@@ -115,4 +116,4 @@ class Error(Model):
     error.short_description = 'Error'
 
     def get_absolute_url(self):
-        return self.url
\ No newline at end of file
+        return self.url
