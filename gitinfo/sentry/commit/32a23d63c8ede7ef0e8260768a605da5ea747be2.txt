commit 32a23d63c8ede7ef0e8260768a605da5ea747be2
Author: Mark Story <mark@mark-story.com>
Date:   Wed Nov 7 10:14:20 2018 -0500

    ref(ui) Extract repository row into a component (#10443)
    
    Extract a component that is shared between integration & organization
    repository lists. This saves a chunk of code and makes future changes
    easier and more consistent.
    
    Refs APP-720

diff --git a/src/sentry/static/sentry/app/components/repositoryRow.jsx b/src/sentry/static/sentry/app/components/repositoryRow.jsx
new file mode 100644
index 0000000000..87f0ac3938
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/repositoryRow.jsx
@@ -0,0 +1,135 @@
+import {Box, Flex} from 'grid-emotion';
+import React from 'react';
+import styled from 'react-emotion';
+import PropTypes from 'prop-types';
+
+import Button from 'app/components/button';
+import Confirm from 'app/components/confirm';
+import SpreadLayout from 'app/components/spreadLayout';
+import IndicatorStore from 'app/stores/indicatorStore';
+import {Repository} from 'app/sentryTypes';
+import {t} from 'app/locale';
+
+const StyledRow = styled(SpreadLayout)`
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+
+  ${p =>
+    p.status === 'disabled' &&
+    `
+    filter: grayscale(1);
+    opacity: 0.4;
+  `};
+
+  &:last-child {
+    border-bottom: none;
+  }
+`;
+
+class RepositoryRow extends React.Component {
+  static propTypes = {
+    repository: Repository,
+    api: PropTypes.object.isRequired,
+    orgId: PropTypes.string.isRequired,
+    showProvider: PropTypes.bool,
+    onRepositoryChange: PropTypes.func,
+  };
+
+  static defaultProps = {
+    showProvider: false,
+  };
+
+  getStatusLabel(repo) {
+    switch (repo.status) {
+      case 'pending_deletion':
+        return 'Deletion Queued';
+      case 'deletion_in_progress':
+        return 'Deletion in Progress';
+      case 'disabled':
+        return 'Disabled';
+      case 'hidden':
+        return 'Disabled';
+      default:
+        return null;
+    }
+  }
+
+  cancelDelete = () => {
+    let {api, orgId, repository, onRepositoryChange} = this.props;
+    let indicator = IndicatorStore.add(t('Saving changes...'));
+
+    api.request(`/organizations/${orgId}/repos/${repository.id}/`, {
+      method: 'PUT',
+      data: {status: 'visible'},
+      success: data => {
+        if (onRepositoryChange) onRepositoryChange(data);
+      },
+      error: () => IndicatorStore.addError(t('An error occurred.')),
+      complete: () => IndicatorStore.remove(indicator),
+    });
+  };
+
+  deleteRepo = () => {
+    let {api, orgId, repository, onRepositoryChange} = this.props;
+    let indicator = IndicatorStore.add(t('Saving changes..'));
+    api.request(`/organizations/${orgId}/repos/${repository.id}/`, {
+      method: 'DELETE',
+      success: data => {
+        if (onRepositoryChange) onRepositoryChange(data);
+      },
+      error: () => IndicatorStore.addError(t('Unable to delete repository.')),
+      complete: () => IndicatorStore.remove(indicator),
+    });
+  };
+
+  get isActive() {
+    return this.props.repository.status === 'active';
+  }
+
+  render() {
+    let {repository, showProvider} = this.props;
+    let isActive = this.isActive;
+
+    return (
+      <StyledRow status={repository.status}>
+        <Box p={2} flex="1">
+          <Flex direction="column">
+            <Box pb={1}>
+              <strong>{repository.name}</strong>
+              {!isActive && <small> â€” {this.getStatusLabel(repository)}</small>}
+              {repository.status === 'pending_deletion' && (
+                <small>
+                  {' '}
+                  (
+                  <a onClick={this.cancelDelete}>{t('Cancel')}</a>
+                  )
+                </small>
+              )}
+            </Box>
+            <Box>
+              {showProvider && (
+                <small>{repository.provider.name}&nbsp;&mdash;&nbsp;</small>
+              )}
+              {repository.url && (
+                <small>
+                  <a href={repository.url}>{repository.url.replace('https://', '')}</a>
+                </small>
+              )}
+            </Box>
+          </Flex>
+        </Box>
+
+        <Box p={2}>
+          <Confirm
+            disabled={!isActive && repository.status !== 'disabled'}
+            onConfirm={this.deleteRepo}
+            message={t('Are you sure you want to remove this repository?')}
+          >
+            <Button size="xsmall" icon="icon-trash" />
+          </Confirm>
+        </Box>
+      </StyledRow>
+    );
+  }
+}
+
+export default RepositoryRow;
diff --git a/src/sentry/static/sentry/app/sentryTypes.jsx b/src/sentry/static/sentry/app/sentryTypes.jsx
index dbc9d2ebba..0864c76c34 100644
--- a/src/sentry/static/sentry/app/sentryTypes.jsx
+++ b/src/sentry/static/sentry/app/sentryTypes.jsx
@@ -230,6 +230,13 @@ export const Release = PropTypes.shape({
   owner: User,
 });
 
+export const Repository = PropTypes.shape({
+  id: PropTypes.string.isRequired,
+  name: PropTypes.string,
+  url: PropTypes.string,
+  status: PropTypes.string,
+});
+
 export const NavigationObject = PropTypes.shape({
   name: PropTypes.string,
   items: PropTypes.arrayOf(
@@ -853,6 +860,7 @@ let SentryTypes = {
   PluginsStore,
   ProjectKey,
   Release,
+  Repository,
   User,
   SentryApplication,
 
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
index abbaa97d34..a15cca72ea 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
@@ -1,4 +1,4 @@
-import {Box, Flex} from 'grid-emotion';
+import {Box} from 'grid-emotion';
 import PropTypes from 'prop-types';
 import {debounce} from 'lodash';
 import React from 'react';
@@ -6,15 +6,14 @@ import styled from 'react-emotion';
 
 import AsyncComponent from 'app/components/asyncComponent';
 import Button from 'app/components/button';
-import Confirm from 'app/components/confirm';
 import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
 import DropdownButton from 'app/components/dropdownButton';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import IndicatorStore from 'app/stores/indicatorStore';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import Pagination from 'app/components/pagination';
+import RepositoryRow from 'app/components/repositoryRow';
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
-import SpreadLayout from 'app/components/spreadLayout';
 import space from 'app/styles/space';
 import {t, tct} from 'app/locale';
 
@@ -53,6 +52,17 @@ export default class IntegrationRepos extends AsyncComponent {
     return this.state.itemList.filter(repo => repo.integrationId === integrationId);
   }
 
+  // Called by row to signal repository change.
+  onRepositoryChange = data => {
+    let itemList = this.state.itemList;
+    itemList.forEach(item => {
+      if (item.id === data.id) {
+        item.status = data.status;
+      }
+    });
+    this.setState({itemList});
+  };
+
   debouncedSearchRepositoriesRequest = debounce(
     query => this.searchRepositoriesRequest(query),
     200
@@ -80,21 +90,6 @@ export default class IntegrationRepos extends AsyncComponent {
     this.debouncedSearchRepositoriesRequest(e.target.value);
   };
 
-  getStatusLabel(repo) {
-    switch (repo.status) {
-      case 'pending_deletion':
-        return 'Deletion Queued';
-      case 'deletion_in_progress':
-        return 'Deletion in Progress';
-      case 'disabled':
-        return 'Disabled';
-      case 'hidden':
-        return 'Disabled';
-      default:
-        return null;
-    }
-  }
-
   addRepo(selection) {
     let {integration} = this.props;
     let orgId = this.context.organization.slug;
@@ -137,46 +132,6 @@ export default class IntegrationRepos extends AsyncComponent {
     });
   }
 
-  deleteRepo = repo => {
-    let orgId = this.context.organization.slug;
-    let indicator = IndicatorStore.add(t('Saving changes..'));
-    this.api.request(`/organizations/${orgId}/repos/${repo.id}/`, {
-      method: 'DELETE',
-      success: data => {
-        let itemList = this.state.itemList;
-        itemList.forEach(item => {
-          if (item.id === data.id) {
-            item.status = data.status;
-          }
-        });
-        this.setState({itemList});
-      },
-      error: () => IndicatorStore.addError(t('Unable to delete repository.')),
-      complete: () => IndicatorStore.remove(indicator),
-    });
-  };
-
-  cancelDelete = repo => {
-    let orgId = this.context.organization.slug;
-    let indicator = IndicatorStore.add(t('Saving changes..'));
-
-    this.api.request(`/organizations/${orgId}/repos/${repo.id}/`, {
-      method: 'PUT',
-      data: {status: 'visible'},
-      success: data => {
-        let itemList = this.state.itemList;
-        itemList.forEach(item => {
-          if (item.id === data.id) {
-            item.status = data.status;
-          }
-        });
-        this.setState({itemList});
-      },
-      error: () => IndicatorStore.addError(t('An error occurred.')),
-      complete: () => IndicatorStore.remove(indicator),
-    });
-  };
-
   renderDropdown() {
     let access = new Set(this.context.organization.access);
     if (!access.has('org:write')) {
@@ -235,6 +190,7 @@ export default class IntegrationRepos extends AsyncComponent {
 
   renderBody() {
     const {itemListPageLinks} = this.state;
+    const orgId = this.context.organization.slug;
     const itemList = this.getIntegrationRepos() || [];
     const header = (
       <PanelHeader disablePadding hasButtons>
@@ -267,43 +223,14 @@ export default class IntegrationRepos extends AsyncComponent {
               />
             )}
             {itemList.map(repo => {
-              let repoIsActive = repo.status === 'active';
               return (
-                <RepoOption key={repo.id} disabled={repo.status === 'disabled'}>
-                  <Box p={2} flex="1">
-                    <Flex direction="column">
-                      <Box pb={1}>
-                        <strong>{repo.name}</strong>
-                        {!repoIsActive && <small> â€” {this.getStatusLabel(repo)}</small>}
-                        {repo.status === 'pending_deletion' && (
-                          <small>
-                            {' '}
-                            (
-                            <a onClick={() => this.cancelDelete(repo)}>{t('Cancel')}</a>
-                            )
-                          </small>
-                        )}
-                      </Box>
-                      <Box>
-                        <small>
-                          {repo.url && (
-                            <a href={repo.url}>{repo.url.replace('https://', '')}</a>
-                          )}
-                        </small>
-                      </Box>
-                    </Flex>
-                  </Box>
-
-                  <Box p={2}>
-                    <Confirm
-                      disabled={!repoIsActive && repo.status !== 'disabled'}
-                      onConfirm={() => this.deleteRepo(repo)}
-                      message={t('Are you sure you want to remove this repository?')}
-                    >
-                      <Button size="xsmall" icon="icon-trash" />
-                    </Confirm>
-                  </Box>
-                </RepoOption>
+                <RepositoryRow
+                  key={repo.id}
+                  repository={repo}
+                  orgId={orgId}
+                  api={this.api}
+                  onRepositoryChange={this.onRepositoryChange}
+                />
               );
             })}
           </PanelBody>
@@ -334,18 +261,3 @@ const StyledName = styled('div')`
   min-width: 0;
   ${overflowEllipsis};
 `;
-
-const RepoOption = styled(SpreadLayout)`
-  border-bottom: 1px solid ${p => p.theme.borderLight};
-
-  &:last-child {
-    border-bottom: none;
-  }
-
-  ${p =>
-    p.disabled &&
-    `
-    filter: grayscale(1);
-    opacity: 0.4;
-  `};
-`;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationRepositories/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationRepositories/index.jsx
index 9820866c4a..21cc9591a3 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationRepositories/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationRepositories/index.jsx
@@ -1,8 +1,6 @@
 import React from 'react';
 
 import {sortArray} from 'app/utils';
-import {t} from 'app/locale';
-import IndicatorStore from 'app/stores/indicatorStore';
 import AsyncView from 'app/views/asyncView';
 import Pagination from 'app/components/pagination';
 import OrganizationRepositories from './organizationRepositories';
@@ -16,57 +14,15 @@ export default class OrganizationRepositoriesContainer extends AsyncView {
     ];
   }
 
-  deleteRepo = repo => {
-    let indicator = IndicatorStore.add(t('Saving changes..'));
-    this.api.request(`/organizations/${this.props.params.orgId}/repos/${repo.id}/`, {
-      method: 'DELETE',
-      success: data => {
-        let itemList = this.state.itemList;
-        itemList.forEach(item => {
-          if (item.id === data.id) {
-            item.status = data.status;
-          }
-        });
-        this.setState({
-          itemList,
-        });
-      },
-      error: () => {
-        IndicatorStore.add(t('An error occurred.'), 'error', {
-          duration: 3000,
-        });
-      },
-      complete: () => {
-        IndicatorStore.remove(indicator);
-      },
-    });
-  };
-
-  cancelDelete = repo => {
-    let indicator = IndicatorStore.add(t('Saving changes..'));
-    this.api.request(`/organizations/${this.props.params.orgId}/repos/${repo.id}/`, {
-      method: 'PUT',
-      data: {status: 'visible'},
-      success: data => {
-        let itemList = this.state.itemList;
-        itemList.forEach(item => {
-          if (item.id === data.id) {
-            item.status = data.status;
-          }
-        });
-        this.setState({
-          itemList,
-        });
-      },
-      error: () => {
-        IndicatorStore.add(t('An error occurred.'), 'error', {
-          duration: 3000,
-        });
-      },
-      complete: () => {
-        IndicatorStore.remove(indicator);
-      },
+  // Callback used by child component to signal state change
+  onRepositoryChange = data => {
+    let itemList = this.state.itemList;
+    itemList.forEach(item => {
+      if (item.id === data.id) {
+        item.status = data.status;
+      }
     });
+    this.setState({itemList});
   };
 
   onAddRepo = repo => {
@@ -87,9 +43,9 @@ export default class OrganizationRepositoriesContainer extends AsyncView {
         <OrganizationRepositories
           {...this.props}
           {...this.state}
+          api={this.api}
           onAddRepo={this.onAddRepo}
-          onCancelDelete={this.cancelDelete}
-          onDeleteRepo={this.deleteRepo}
+          onRepositoryChange={this.onRepositoryChange}
         />
         {this.state.itemListPageLinks && (
           <Pagination pageLinks={this.state.itemListPageLinks} {...this.props} />
diff --git a/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx b/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx
index 0cd151651c..67b4c52279 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx
@@ -1,50 +1,25 @@
 import {Box, Flex} from 'grid-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
-import styled from 'react-emotion';
 
 import {t, tct} from 'app/locale';
 import AlertLink from 'app/components/alertLink';
 import Button from 'app/components/button';
-import Confirm from 'app/components/confirm';
 import HeroIcon from 'app/components/heroIcon';
-import SpreadLayout from 'app/components/spreadLayout';
+import RepositoryRow from 'app/components/repositoryRow';
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import TextBlock from 'app/views/settings/components/text/textBlock';
 
-const RepoRow = styled(SpreadLayout)`
-  border-bottom: 1px solid ${p => p.theme.borderLight};
-
-  &:last-child {
-    border-bottom: none;
-  }
-`;
-
 export default class OrganizationRepositories extends React.Component {
   static propTypes = {
     itemList: PropTypes.array,
-    onCancelDelete: PropTypes.func,
-    onDeleteRepo: PropTypes.func,
+    api: PropTypes.object,
+    onRepositoryChange: PropTypes.func,
   };
 
-  getStatusLabel(repo) {
-    switch (repo.status) {
-      case 'pending_deletion':
-        return 'Deletion Queued';
-      case 'deletion_in_progress':
-        return 'Deletion in Progress';
-      case 'disabled':
-        return 'Disabled';
-      case 'hidden':
-        return 'Disabled';
-      default:
-        return null;
-    }
-  }
-
   render() {
-    let {params, itemList, onCancelDelete, onDeleteRepo} = this.props;
+    let {params, itemList, api, onRepositoryChange} = this.props;
     let {orgId} = params;
     let hasItemList = itemList && itemList.length > 0;
 
@@ -82,51 +57,15 @@ export default class OrganizationRepositories extends React.Component {
             <PanelBody>
               <Box>
                 {itemList.map(repo => {
-                  let repoIsVisible = repo.status === 'active';
-                  let style =
-                    repo.status === 'disabled'
-                      ? {filter: 'grayscale(1)', opacity: '0.4'}
-                      : {};
                   return (
-                    <RepoRow key={repo.id}>
-                      <Box p={2} style={style} flex="1">
-                        <Flex direction="column">
-                          <Box pb={1}>
-                            <strong>{repo.name}</strong>
-                            {!repoIsVisible && (
-                              <small> â€” {this.getStatusLabel(repo)}</small>
-                            )}
-                            {repo.status === 'pending_deletion' && (
-                              <small>
-                                {' '}
-                                (
-                                <a onClick={() => onCancelDelete(repo)}>{t('Cancel')}</a>
-                                )
-                              </small>
-                            )}
-                          </Box>
-                          <Box style={style}>
-                            <small>{repo.provider.name}</small>
-                            {repo.url && (
-                              <small>
-                                {' '}
-                                â€” <a href={repo.url}>{repo.url}</a>
-                              </small>
-                            )}
-                          </Box>
-                        </Flex>
-                      </Box>
-
-                      <Box p={2}>
-                        <Confirm
-                          disabled={!repoIsVisible && repo.status !== 'disabled'}
-                          onConfirm={() => onDeleteRepo(repo)}
-                          message={t('Are you sure you want to remove this repository?')}
-                        >
-                          <Button size="xsmall" icon="icon-trash" />
-                        </Confirm>
-                      </Box>
-                    </RepoRow>
+                    <RepositoryRow
+                      key={repo.id}
+                      repository={repo}
+                      api={api}
+                      showProvider={true}
+                      orgId={orgId}
+                      onRepositoryChange={onRepositoryChange}
+                    />
                   );
                 })}
               </Box>
diff --git a/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx b/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx
index 50d3677df7..f572c16f19 100644
--- a/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx
+++ b/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx
@@ -51,7 +51,7 @@ describe('IntegrationRepos', function() {
           },
         })
       );
-      let repoRow = wrapper.find('RepoOption').first();
+      let repoRow = wrapper.find('RepositoryRow').first();
       expect(repoRow.find('strong').text()).toEqual('repo-name');
     });
 
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap
index 300b584aa8..bb1e716ee3 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap
@@ -29,60 +29,21 @@ exports[`OrganizationRepositories renders with a repository 1`] = `
       flex={false}
     >
       <Box>
-        <RepoRow
+        <RepositoryRow
+          api={Client {}}
           key="4"
-        >
-          <Box
-            flex="1"
-            p={2}
-            style={Object {}}
-          >
-            <Flex
-              direction="column"
-            >
-              <Box
-                pb={1}
-              >
-                <strong>
-                  repo-name
-                </strong>
-              </Box>
-              <Box
-                style={Object {}}
-              >
-                <small />
-                <small>
-                   
-                  â€” 
-                  <a
-                    href="https://github.com/example/repo-name"
-                  >
-                    https://github.com/example/repo-name
-                  </a>
-                </small>
-              </Box>
-            </Flex>
-          </Box>
-          <Box
-            p={2}
-          >
-            <Confirm
-              cancelText="Cancel"
-              confirmText="Confirm"
-              disableConfirmButton={false}
-              disabled={false}
-              message="Are you sure you want to remove this repository?"
-              onConfirm={[Function]}
-              priority="primary"
-            >
-              <Button
-                disabled={false}
-                icon="icon-trash"
-                size="xsmall"
-              />
-            </Confirm>
-          </Box>
-        </RepoRow>
+          orgId="org-slug"
+          repository={
+            Object {
+              "id": "4",
+              "name": "repo-name",
+              "provider": "github",
+              "status": "active",
+              "url": "https://github.com/example/repo-name",
+            }
+          }
+          showProvider={true}
+        />
       </Box>
     </PanelBody>
   </Panel>
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationRepositoriesContainer.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationRepositoriesContainer.spec.jsx.snap
index 67006e240f..ce5b6455d7 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationRepositoriesContainer.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationRepositoriesContainer.spec.jsx.snap
@@ -5,13 +5,13 @@ exports[`OrganizationRepositoriesContainer render() without any providers is loa
   title="Repositories - Sentry"
 >
   <OrganizationRepositories
+    api={Client {}}
     error={false}
     errors={Object {}}
     itemList={Array []}
     loading={false}
     onAddRepo={[Function]}
-    onCancelDelete={[Function]}
-    onDeleteRepo={[Function]}
+    onRepositoryChange={[Function]}
     params={
       Object {
         "orgId": "org-slug",
diff --git a/tests/js/spec/views/settings/organizationRepositories.spec.jsx b/tests/js/spec/views/settings/organizationRepositories.spec.jsx
index 2179c1dc61..c4e626cc5f 100644
--- a/tests/js/spec/views/settings/organizationRepositories.spec.jsx
+++ b/tests/js/spec/views/settings/organizationRepositories.spec.jsx
@@ -34,6 +34,7 @@ describe('OrganizationRepositories', function() {
     });
     let wrapper = shallow(
       <OrganizationRepositories
+        api={new Client()}
         params={{orgId: 'org-slug'}}
         repoConfig={{providers: [TestStubs.GitHubRepositoryProvider({id: 'github'})]}}
         itemList={[TestStubs.Repository()]}
