commit 899b48eaf6c614a4aeab4a94879f9b1d0c55cffa
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Mar 23 16:03:39 2016 -0700

    Disable transaction when resolving plugins.for_project
    
    This is called O(n) times in places like the GroupSerializer, and is
    generally called, which in turn calls it O(n) times for each plugin to
    check if it's enabled. This can end up being a lot of network traffic
    with just transaction management and it's unlikely that any
    plugin.is_enabled() call will try to cause a database mutation.

diff --git a/src/sentry/plugins/base/manager.py b/src/sentry/plugins/base/manager.py
index 1b0a2c4515..4b79677e96 100644
--- a/src/sentry/plugins/base/manager.py
+++ b/src/sentry/plugins/base/manager.py
@@ -39,7 +39,8 @@ class PluginManager(InstanceManager):
 
     def for_project(self, project, version=1):
         for plugin in self.all(version=version):
-            if not safe_execute(plugin.is_enabled, project):
+            if not safe_execute(plugin.is_enabled, project,
+                                _with_transaction=False):
                 continue
             yield plugin
 
