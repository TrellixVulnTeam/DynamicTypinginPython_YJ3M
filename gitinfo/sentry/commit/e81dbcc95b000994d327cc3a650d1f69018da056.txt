commit e81dbcc95b000994d327cc3a650d1f69018da056
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Jun 13 09:49:24 2018 -0700

    feat(ui): Improve CommandPal results display (#8672)
    
    Change results to use IdBadge when possible.
    Swap org dashboard/settings positions in search results.
    Fix User Badge highlighted name.
    
    Old:
    ![image](https://user-images.githubusercontent.com/79684/41067922-27ca738c-699c-11e8-8385-6a562e7f5b55.png)
    
    New:
    ![image](https://user-images.githubusercontent.com/79684/41067847-e952a142-699b-11e8-9c7e-13ea2714bffc.png)

diff --git a/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx
index 41a37beea3..325f4fe2cf 100644
--- a/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx
+++ b/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx
@@ -5,6 +5,7 @@ import styled from 'react-emotion';
 
 import Avatar from 'app/components/avatar';
 import space from 'app/styles/space';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
 import SentryTypes from 'app/proptypes';
 
 class BaseBadge extends React.Component {
@@ -26,6 +27,7 @@ class BaseBadge extends React.Component {
     hideName: PropTypes.bool,
     className: PropTypes.string,
     displayName: PropTypes.node,
+    description: PropTypes.node,
     avatarClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
   };
 
@@ -42,6 +44,7 @@ class BaseBadge extends React.Component {
       avatarSize,
       avatarClassName,
       displayName,
+      description,
       team,
       organization,
       project,
@@ -58,7 +61,11 @@ class BaseBadge extends React.Component {
         {!hideAvatar && (
           <StyledAvatar css={avatarClassName} size={avatarSize} {...data} />
         )}
-        {!hideName && displayName}
+
+        <DisplayNameAndDescription>
+          {!hideName && <div data-test-id="badge-display-name">{displayName}</div>}
+          {!!description && <Description>{description}</Description>}
+        </DisplayNameAndDescription>
       </Flex>
     );
   }
@@ -70,3 +77,16 @@ const StyledAvatar = styled(Avatar)`
   margin-right: ${space(1)};
   flex-shrink: 0;
 `;
+
+const DisplayNameAndDescription = styled(Flex)`
+  flex-direction: column;
+  line-height: 1;
+`;
+
+const Description = styled('div')`
+  font-size: 0.875em;
+  margin-top: ${space(0.25)};
+  color: ${p => p.theme.gray2};
+  line-height: 14px;
+  ${overflowEllipsis};
+`;
diff --git a/src/sentry/static/sentry/app/components/modals/commandPalette.jsx b/src/sentry/static/sentry/app/components/modals/commandPalette.jsx
index 3ba98fdb3f..4397495db1 100644
--- a/src/sentry/static/sentry/app/components/modals/commandPalette.jsx
+++ b/src/sentry/static/sentry/app/components/modals/commandPalette.jsx
@@ -55,7 +55,7 @@ class CommandPaletteModal extends React.Component {
           )}
           renderItem={({item, matches, itemProps, highlighted}) => (
             <CommandPaletteSearchResultWrapper {...itemProps} highlighted={highlighted}>
-              <SearchResult item={item} matches={matches} />
+              <SearchResult highlighted={highlighted} item={item} matches={matches} />
             </CommandPaletteSearchResultWrapper>
           )}
         />
diff --git a/src/sentry/static/sentry/app/components/search/index.jsx b/src/sentry/static/sentry/app/components/search/index.jsx
index b13d574409..90131d1e34 100644
--- a/src/sentry/static/sentry/app/components/search/index.jsx
+++ b/src/sentry/static/sentry/app/components/search/index.jsx
@@ -53,7 +53,7 @@ class Search extends React.Component {
     // Default Search result rendering
     renderItem: ({item, matches, itemProps, highlighted}) => (
       <SearchResultWrapper {...itemProps} highlighted={highlighted}>
-        <SearchResult item={item} matches={matches} />
+        <SearchResult highlighted={highlighted} item={item} matches={matches} />
       </SearchResultWrapper>
     ),
   };
diff --git a/src/sentry/static/sentry/app/components/search/searchResult.jsx b/src/sentry/static/sentry/app/components/search/searchResult.jsx
index 5cdd7e7049..ee8b40a99f 100644
--- a/src/sentry/static/sentry/app/components/search/searchResult.jsx
+++ b/src/sentry/static/sentry/app/components/search/searchResult.jsx
@@ -4,7 +4,6 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
-import Avatar from 'app/components/avatar';
 import InlineSvg from 'app/components/inlineSvg';
 import SentryTypes from 'app/proptypes';
 import IdBadge from 'app/components/idBadge';
@@ -12,6 +11,7 @@ import highlightFuseMatches from 'app/utils/highlightFuseMatches';
 
 class SearchResult extends React.Component {
   static propTypes = {
+    highlighted: PropTypes.bool,
     item: PropTypes.shape({
       /**
      * The source of the search result (i.e. a model type)
@@ -44,37 +44,41 @@ class SearchResult extends React.Component {
   };
 
   renderContent() {
-    let {item, matches, params} = this.props;
+    let {highlighted, item, matches, params} = this.props;
     let {sourceType, title, description, model} = item;
 
-    let matchedTitle = matches && matches.find(({key}) => key === 'title');
-    let matchedDescription = matches && matches.find(({key}) => key === 'description');
-    let highlightedTitle = matchedTitle ? highlightFuseMatches(matchedTitle) : title;
-    let highlightedDescription = matchedDescription
-      ? highlightFuseMatches(matchedDescription)
-      : description;
-
-    if (sourceType === 'member') {
-      return (
-        <IdBadge
-          displayName={highlightedTitle}
-          displayEmail={highlightedDescription}
-          userLink={false}
-          orgId={params.orgId}
-          member={model}
-          avatarSize={32}
-        />
+    if (['organization', 'member', 'project', 'team'].includes(sourceType)) {
+      let matchedTitle = matches && matches.find(({key}) => key === 'title');
+      let matchedDescription = matches && matches.find(({key}) => key === 'description');
+      let highlightedTitle = matchedTitle ? highlightFuseMatches(matchedTitle) : title;
+      let highlightedDescription = matchedDescription
+        ? highlightFuseMatches(matchedDescription)
+        : description;
+
+      let DescriptionNode = (
+        <Description highlighted={highlighted}>{highlightedDescription}</Description>
       );
+
+      let badgeProps = {
+        displayName: highlightedTitle,
+        displayEmail: DescriptionNode,
+        description: DescriptionNode,
+        useLink: false,
+        orgId: params.orgId,
+        avatarSize: 32,
+        [sourceType]: model,
+      };
+
+      return <IdBadge {...badgeProps} />;
     }
 
     return (
       <React.Fragment>
         <div>
-          {sourceType === 'team' && <TeamAvatar team={model} size={32} />}
-          <SearchTitle>{highlightedTitle}</SearchTitle>
+          <SearchTitle>{title}</SearchTitle>
         </div>
 
-        <SearchDetail>{highlightedDescription}</SearchDetail>
+        <SearchDetail>{description}</SearchDetail>
       </React.Fragment>
     );
   }
@@ -85,6 +89,7 @@ class SearchResult extends React.Component {
 
     let isSettings = resultType === 'settings';
     let isField = resultType === 'field';
+    let isRoute = resultType === 'route';
 
     if (isSettings) {
       return <ResultTypeIcon src="icon-settings" />;
@@ -94,7 +99,11 @@ class SearchResult extends React.Component {
       return <ResultTypeIcon src="icon-input" />;
     }
 
-    return <ResultTypeIcon src="icon-location" />;
+    if (isRoute) {
+      return <ResultTypeIcon src="icon-location" />;
+    }
+
+    return null;
   }
 
   render() {
@@ -126,11 +135,11 @@ const Content = styled(props => <Flex direction="column" {...props} />)`
 `;
 
 const ResultTypeIcon = styled(InlineSvg)`
-  color: ${p => p.theme.gray1};
+  color: ${p => p.theme.offWhite};
   font-size: 1.2em;
   flex-shrink: 0;
 `;
 
-const TeamAvatar = styled(Avatar)`
-  margin-right: 0.5em;
+const Description = styled('div')`
+  ${p => (p.highlighted ? `color: ${p.theme.offWhite};` : '')};
 `;
diff --git a/src/sentry/static/sentry/app/components/search/searchResultWrapper.jsx b/src/sentry/static/sentry/app/components/search/searchResultWrapper.jsx
index e8d96972aa..825fa4272d 100644
--- a/src/sentry/static/sentry/app/components/search/searchResultWrapper.jsx
+++ b/src/sentry/static/sentry/app/components/search/searchResultWrapper.jsx
@@ -16,12 +16,12 @@ const SearchResultWrapper = styled(({highlighted, ...props}) => <div {...props}
     `};
 
   &:first-child {
-    border-radius: 5px 5px 0 0;
+    border-radius: 4px 4px 0 0;
   }
 
   &:last-child {
     border-bottom: 0;
-    border-radius: 0 0 5px 5px;
+    border-radius: 0 0 4px 4px;
   }
 `;
 
diff --git a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
index 50c8a6c414..534fbe6bc6 100644
--- a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
@@ -58,7 +58,7 @@ class ApiSource extends React.Component {
 
   doSearch = debounce(async query => {
     let {params, searchOptions, organization} = this.props;
-    let orgId = params.orgId || (organization && organization.slug);
+    let orgId = (params && params.orgId) || (organization && organization.slug);
     let urls = ['/organizations/'];
 
     // Only run these queries when we have an org in context
@@ -92,14 +92,6 @@ class ApiSource extends React.Component {
     let allResults = [
       ...flatten(
         organizations.map(org => [
-          {
-            title: `${org.slug} Settings`,
-            description: 'Organization Settings',
-            model: org,
-            sourceType: 'organization',
-            resultType: 'settings',
-            to: `/settings/${org.slug}/`,
-          },
           {
             title: `${org.slug} Dashboard`,
             description: 'Organization Dashboard',
@@ -108,18 +100,18 @@ class ApiSource extends React.Component {
             resultType: 'route',
             to: `/${org.slug}/`,
           },
+          {
+            title: `${org.slug} Settings`,
+            description: 'Organization Settings',
+            model: org,
+            sourceType: 'organization',
+            resultType: 'settings',
+            to: `/settings/${org.slug}/`,
+          },
         ])
       ),
       ...flatten(
         (projects || []).map(project => [
-          {
-            title: `${project.slug} Settings`,
-            description: 'Project Settings',
-            model: project,
-            sourceType: 'project',
-            resultType: 'settings',
-            to: `/settings/${orgId}/${project.slug}/`,
-          },
           {
             title: `${project.slug} Dashboard`,
             description: 'Project Dashboard',
@@ -128,6 +120,14 @@ class ApiSource extends React.Component {
             resultType: 'route',
             to: `/${orgId}/${project.slug}/`,
           },
+          {
+            title: `${project.slug} Settings`,
+            description: 'Project Settings',
+            model: project,
+            sourceType: 'project',
+            resultType: 'settings',
+            to: `/settings/${orgId}/${project.slug}/`,
+          },
         ])
       ),
       ...(teams || []).map(team => ({
diff --git a/tests/js/spec/components/modals/commandPaletteModal.spec.jsx b/tests/js/spec/components/modals/commandPaletteModal.spec.jsx
index 75d1562f0f..e4ab984743 100644
--- a/tests/js/spec/components/modals/commandPaletteModal.spec.jsx
+++ b/tests/js/spec/components/modals/commandPaletteModal.spec.jsx
@@ -53,7 +53,14 @@ describe('Command Palette Modal', function() {
 
   it('can open command palette modal and search', async function() {
     let wrapper = mount(
-      <App params={{orgId: 'org-slug'}}>{<div>placeholder content</div>}</App>
+      <App params={{orgId: 'org-slug'}}>{<div>placeholder content</div>}</App>,
+      TestStubs.routerContext([
+        {
+          router: TestStubs.router({
+            params: {orgId: 'org-slug'},
+          }),
+        },
+      ])
     );
 
     // No Modal
@@ -81,10 +88,10 @@ describe('Command Palette Modal', function() {
 
     expect(
       wrapper
-        .find('ModalDialog SearchResult SearchTitle')
+        .find('SearchResult [data-test-id="badge-display-name"]')
         .first()
         .text()
-    ).toBe('billy-org Settings');
+    ).toBe('billy-org Dashboard');
 
     expect(
       wrapper
@@ -105,6 +112,6 @@ describe('Command Palette Modal', function() {
       .first()
       .simulate('click');
 
-    expect(navigateTo).toHaveBeenCalledWith('/settings/billy-org/', undefined);
+    expect(navigateTo).toHaveBeenCalledWith('/billy-org/', expect.anything());
   });
 });
diff --git a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
index 4e349a23e3..644c581472 100644
--- a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
+++ b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
@@ -535,21 +535,36 @@ exports[`CreateProject should render roles when available and allowed, and handl
                                                   className="css-5ipae5"
                                                   is={null}
                                                 >
-                                                  <BadgeDisplayName
-                                                    hideOverflow={true}
-                                                  >
-                                                    <Component
-                                                      className="css-1boiawc-BadgeDisplayName eeoia0v0"
-                                                      hideOverflow={true}
+                                                  <DisplayNameAndDescription>
+                                                    <Base
+                                                      className="css-1eifx5k-DisplayNameAndDescription e165dl3i1"
                                                     >
-                                                      <span
-                                                        className="css-1boiawc-BadgeDisplayName eeoia0v0"
+                                                      <div
+                                                        className="css-1eifx5k-DisplayNameAndDescription e165dl3i1"
+                                                        is={null}
                                                       >
-                                                        #
-                                                        bar
-                                                      </span>
-                                                    </Component>
-                                                  </BadgeDisplayName>
+                                                        <div
+                                                          data-test-id="badge-display-name"
+                                                        >
+                                                          <BadgeDisplayName
+                                                            hideOverflow={true}
+                                                          >
+                                                            <Component
+                                                              className="css-1boiawc-BadgeDisplayName eeoia0v0"
+                                                              hideOverflow={true}
+                                                            >
+                                                              <span
+                                                                className="css-1boiawc-BadgeDisplayName eeoia0v0"
+                                                              >
+                                                                #
+                                                                bar
+                                                              </span>
+                                                            </Component>
+                                                          </BadgeDisplayName>
+                                                        </div>
+                                                      </div>
+                                                    </Base>
+                                                  </DisplayNameAndDescription>
                                                 </div>
                                               </Base>
                                             </Flex>
@@ -667,21 +682,36 @@ exports[`CreateProject should render roles when available and allowed, and handl
                                                   className="css-5ipae5"
                                                   is={null}
                                                 >
-                                                  <BadgeDisplayName
-                                                    hideOverflow={true}
-                                                  >
-                                                    <Component
-                                                      className="css-1boiawc-BadgeDisplayName eeoia0v0"
-                                                      hideOverflow={true}
+                                                  <DisplayNameAndDescription>
+                                                    <Base
+                                                      className="css-1eifx5k-DisplayNameAndDescription e165dl3i1"
                                                     >
-                                                      <span
-                                                        className="css-1boiawc-BadgeDisplayName eeoia0v0"
+                                                      <div
+                                                        className="css-1eifx5k-DisplayNameAndDescription e165dl3i1"
+                                                        is={null}
                                                       >
-                                                        #
-                                                        foo
-                                                      </span>
-                                                    </Component>
-                                                  </BadgeDisplayName>
+                                                        <div
+                                                          data-test-id="badge-display-name"
+                                                        >
+                                                          <BadgeDisplayName
+                                                            hideOverflow={true}
+                                                          >
+                                                            <Component
+                                                              className="css-1boiawc-BadgeDisplayName eeoia0v0"
+                                                              hideOverflow={true}
+                                                            >
+                                                              <span
+                                                                className="css-1boiawc-BadgeDisplayName eeoia0v0"
+                                                              >
+                                                                #
+                                                                foo
+                                                              </span>
+                                                            </Component>
+                                                          </BadgeDisplayName>
+                                                        </div>
+                                                      </div>
+                                                    </Base>
+                                                  </DisplayNameAndDescription>
                                                 </div>
                                               </Base>
                                             </Flex>
diff --git a/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx b/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx
index ad78145aee..34f7ea4b5a 100644
--- a/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx
+++ b/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx
@@ -13,6 +13,13 @@ jest.mock('app/actionCreators/navigation');
 const SETTINGS_SEARCH_PLACEHOLDER = 'Search';
 describe('SettingsSearch', function() {
   let orgsMock;
+  let routerContext = TestStubs.routerContext([
+    {
+      router: TestStubs.router({
+        params: {orgId: 'org-slug'},
+      }),
+    },
+  ]);
 
   beforeEach(function() {
     FormSearchStore.onLoadSearchMap([]);
@@ -39,7 +46,7 @@ describe('SettingsSearch', function() {
   });
 
   it('renders', async function() {
-    let wrapper = mount(<SettingsSearch params={{orgId: 'org-slug'}} />);
+    let wrapper = mount(<SettingsSearch params={{orgId: 'org-slug'}} />, routerContext);
 
     // renders input
     expect(wrapper.find('SearchInput')).toHaveLength(1);
@@ -47,7 +54,7 @@ describe('SettingsSearch', function() {
   });
 
   it('can focus when `handleFocusSearch` is called and target is not search input', function() {
-    let wrapper = mount(<SettingsSearch params={{orgId: 'org-slug'}} />);
+    let wrapper = mount(<SettingsSearch params={{orgId: 'org-slug'}} />, routerContext);
     let searchInput = wrapper.instance().searchInput;
     let focusSpy = jest.spyOn(searchInput, 'focus');
 
@@ -60,7 +67,7 @@ describe('SettingsSearch', function() {
   });
 
   it('does not focus search input if it is current target and `handleFocusSearch` is called', function() {
-    let wrapper = mount(<SettingsSearch params={{orgId: 'org-slug'}} />);
+    let wrapper = mount(<SettingsSearch params={{orgId: 'org-slug'}} />, routerContext);
     let searchInput = wrapper.instance().searchInput;
     let focusSpy = jest.spyOn(searchInput, 'focus');
 
@@ -73,7 +80,7 @@ describe('SettingsSearch', function() {
   });
 
   it('can search', async function() {
-    let wrapper = mount(<SettingsSearch params={{orgId: 'org-slug'}} />);
+    let wrapper = mount(<SettingsSearch params={{orgId: 'org-slug'}} />, routerContext);
 
     wrapper.find('input').simulate('change', {target: {value: 'bil'}});
 
@@ -90,10 +97,10 @@ describe('SettingsSearch', function() {
 
     expect(
       wrapper
-        .find('SearchResult SearchTitle')
+        .find('SearchResult [data-test-id="badge-display-name"]')
         .first()
         .text()
-    ).toBe('billy-org Settings');
+    ).toBe('billy-org Dashboard');
 
     expect(
       wrapper
@@ -114,6 +121,6 @@ describe('SettingsSearch', function() {
       .first()
       .simulate('click');
 
-    expect(navigateTo).toHaveBeenCalledWith('/settings/billy-org/', undefined);
+    expect(navigateTo).toHaveBeenCalledWith('/billy-org/', expect.anything());
   });
 });
