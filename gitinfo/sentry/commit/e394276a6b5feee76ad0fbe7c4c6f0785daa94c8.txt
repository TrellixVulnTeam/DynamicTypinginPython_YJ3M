commit e394276a6b5feee76ad0fbe7c4c6f0785daa94c8
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Mar 5 17:37:58 2015 -0800

    Improve error handling when children cannot be fetched

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index 7ca681282e..3f2b351aa0 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -53,6 +53,7 @@ ERR_DOMAIN_BLACKLISTED = 'The domain has been temporarily blacklisted due to pre
 ERR_GENERIC_FETCH_FAILURE = 'A {type} error was hit while fetching the source'
 ERR_HTTP_CODE = 'Received HTTP {status_code} response'
 ERR_NO_COLUMN = 'No column information available (cant expand sourcemap)'
+ERR_MISSING_SOURCE = 'Source was not found: {filename}'
 ERR_SOURCEMAP_UNPARSEABLE = 'Sourcemap was not parseable'
 ERR_TOO_MANY_REMOTE_SOURCES = 'Not fetching context due to too many remote sources'
 ERR_UNKNOWN_INTERNAL_ERROR = 'An unknown internal error occurred while attempting to fetch the source'
@@ -428,8 +429,13 @@ class SourceProcessor(object):
                     frame.data = {
                         'sourcemap': sourcemap_url,
                     }
-                    frame.errors.append('Failed to map %r' % abs_path.encode('utf-8'))
-                    logger.debug('Failed mapping path %r', abs_path)
+                    errors = cache.get_errors(abs_path)
+                    if errors:
+                        frame.errors.extend(errors)
+                    else:
+                        frame.errors.append(ERR_MISSING_SOURCE.format(
+                            filenamename=abs_path.encode('utf-8'),
+                        ))
                 else:
                     source = uncompressed_source
                     # Store original data in annotation
