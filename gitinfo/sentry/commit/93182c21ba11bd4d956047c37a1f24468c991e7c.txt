commit 93182c21ba11bd4d956047c37a1f24468c991e7c
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Aug 21 16:58:41 2015 +0200

    Committed first run of the api docs extraction.

diff --git a/api-docs/cache/endpoints/DeleteGroupDetails.json b/api-docs/cache/endpoints/DeleteGroupDetails.json
new file mode 100644
index 0000000000..e9933fdda8
--- /dev/null
+++ b/api-docs/cache/endpoints/DeleteGroupDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "DeleteGroupDetails",
+  "path": "/api/0/groups/{group_id}/",
+  "doc": "Delete an Aggregate\n```````````````````\n\nDeletes an individual aggregate.",
+  "section": "events",
+  "method": "DELETE",
+  "internal_path": "sentry.api.endpoints.group_details.GroupDetailsEndpoint:delete"
+}
diff --git a/api-docs/cache/endpoints/DeleteOrganizationDetails.json b/api-docs/cache/endpoints/DeleteOrganizationDetails.json
new file mode 100644
index 0000000000..987af903e6
--- /dev/null
+++ b/api-docs/cache/endpoints/DeleteOrganizationDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "DeleteOrganizationDetails",
+  "path": "/api/0/organizations/{organization_slug}/",
+  "doc": "Delete an Organization\n``````````````````````\n\nSchedules an organization for deletion.\n\n**Note:** Deletion happens asynchronously and therefor is not\nimmediate.  However once deletion has begun the state of a project\nchanges and will be hidden from most public views.",
+  "section": "organizations",
+  "method": "DELETE",
+  "internal_path": "sentry.api.endpoints.organization_details.OrganizationDetailsEndpoint:delete"
+}
diff --git a/api-docs/cache/endpoints/DeleteProjectDetails.json b/api-docs/cache/endpoints/DeleteProjectDetails.json
new file mode 100644
index 0000000000..91a86e47b2
--- /dev/null
+++ b/api-docs/cache/endpoints/DeleteProjectDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "DeleteProjectDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/",
+  "doc": "Delete a Project\n````````````````\n\nSchedules a project for deletion.\n\n**Note:** Deletion happens asynchronously and therefor is not\nimmediate.  However once deletion has begun the state of a project\nchanges and will be hidden from most public views.",
+  "section": "projects",
+  "method": "DELETE",
+  "internal_path": "sentry.api.endpoints.project_details.ProjectDetailsEndpoint:delete"
+}
diff --git a/api-docs/cache/endpoints/DeleteProjectGroupIndex.json b/api-docs/cache/endpoints/DeleteProjectGroupIndex.json
new file mode 100644
index 0000000000..8b93a22267
--- /dev/null
+++ b/api-docs/cache/endpoints/DeleteProjectGroupIndex.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "DeleteProjectGroupIndex",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/groups/",
+  "doc": "Bulk Remove a List of Aggregates\n````````````````````````````````\n\nPermanently remove the given aggregates.\n\nOnly queries by 'id' are accepted.\n\nIf any ids are out of scope this operation will succeed without\nany data mutation.",
+  "section": "events",
+  "method": "DELETE",
+  "internal_path": "sentry.api.endpoints.project_group_index.ProjectGroupIndexEndpoint:delete"
+}
diff --git a/api-docs/cache/endpoints/DeleteProjectKeyDetails.json b/api-docs/cache/endpoints/DeleteProjectKeyDetails.json
new file mode 100644
index 0000000000..3b8b13a7d8
--- /dev/null
+++ b/api-docs/cache/endpoints/DeleteProjectKeyDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "DeleteProjectKeyDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/keys/{key_id}/",
+  "doc": "Delete a Client Key\n```````````````````\n\nDelete a client key.",
+  "section": "projects",
+  "method": "DELETE",
+  "internal_path": "sentry.api.endpoints.project_key_details.ProjectKeyDetailsEndpoint:delete"
+}
diff --git a/api-docs/cache/endpoints/DeleteReleaseDetails.json b/api-docs/cache/endpoints/DeleteReleaseDetails.json
new file mode 100644
index 0000000000..b6235cdd58
--- /dev/null
+++ b/api-docs/cache/endpoints/DeleteReleaseDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "DeleteReleaseDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/",
+  "doc": "Delete a Release\n````````````````\n\nPermanently remove a release and all of its files.",
+  "section": "releases",
+  "method": "DELETE",
+  "internal_path": "sentry.api.endpoints.release_details.ReleaseDetailsEndpoint:delete"
+}
diff --git a/api-docs/cache/endpoints/DeleteReleaseFileDetails.json b/api-docs/cache/endpoints/DeleteReleaseFileDetails.json
new file mode 100644
index 0000000000..132b22ddbb
--- /dev/null
+++ b/api-docs/cache/endpoints/DeleteReleaseFileDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "DeleteReleaseFileDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/{file_id}/",
+  "doc": "Delete a File\n`````````````\n\nPermanently remove a file from a release.\n\nThis will also remove the physical file from storage.",
+  "section": "releases",
+  "method": "DELETE",
+  "internal_path": "sentry.api.endpoints.release_file_details.ReleaseFileDetailsEndpoint:delete"
+}
diff --git a/api-docs/cache/endpoints/DeleteTeamDetails.json b/api-docs/cache/endpoints/DeleteTeamDetails.json
new file mode 100644
index 0000000000..4c9bdc348e
--- /dev/null
+++ b/api-docs/cache/endpoints/DeleteTeamDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "DeleteTeamDetails",
+  "path": "/api/0/teams/{organization_slug}/{team_slug}/",
+  "doc": "Delete a Team\n`````````````\n\nSchedules a team for deletion.\n\n**Note:** Deletion happens asynchronously and therefor is not\nimmediate.  However once deletion has begun the state of a project\nchanges and will be hidden from most public views.",
+  "section": "teams",
+  "method": "DELETE",
+  "internal_path": "sentry.api.endpoints.team_details.TeamDetailsEndpoint:delete"
+}
diff --git a/api-docs/cache/endpoints/GetGroupDetails.json b/api-docs/cache/endpoints/GetGroupDetails.json
new file mode 100644
index 0000000000..94aff34e21
--- /dev/null
+++ b/api-docs/cache/endpoints/GetGroupDetails.json
@@ -0,0 +1,11 @@
+{
+  "scenarios": [
+    "RetrieveAggregate"
+  ],
+  "endpoint_name": "GetGroupDetails",
+  "path": "/api/0/groups/{group_id}/",
+  "doc": "Retrieve an Aggregate\n`````````````````````\n\nReturn details on an individual aggregate.  Aggregates are also\nsometimes referred to as groups.",
+  "section": "events",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.group_details.GroupDetailsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetGroupEvents.json b/api-docs/cache/endpoints/GetGroupEvents.json
new file mode 100644
index 0000000000..29a573612b
--- /dev/null
+++ b/api-docs/cache/endpoints/GetGroupEvents.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetGroupEvents",
+  "path": "/api/0/groups/{group_id}/events/",
+  "doc": "List Available Samples\n``````````````````````\n\nThis endpoint lists an aggregate's available samples.",
+  "section": "events",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.group_events.GroupEventsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetGroupEventsLatest.json b/api-docs/cache/endpoints/GetGroupEventsLatest.json
new file mode 100644
index 0000000000..49bb1b24f9
--- /dev/null
+++ b/api-docs/cache/endpoints/GetGroupEventsLatest.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetGroupEventsLatest",
+  "path": "/api/0/groups/{group_id}/events/latest/",
+  "doc": "Latest Sample\n`````````````\n\nRetrieves the details of the latest sample for an aggregate.",
+  "section": "events",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.group_events_latest.GroupEventsLatestEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetGroupTagKeyDetails.json b/api-docs/cache/endpoints/GetGroupTagKeyDetails.json
new file mode 100644
index 0000000000..0eefc70f78
--- /dev/null
+++ b/api-docs/cache/endpoints/GetGroupTagKeyDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetGroupTagKeyDetails",
+  "path": "/api/0/groups/{group_id}/tags/{key}/",
+  "doc": "List Tag Details\n````````````````\n\nReturns a list of details about the given tag key.",
+  "section": "events",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.group_tagkey_details.GroupTagKeyDetailsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetGroupTagKeyValues.json b/api-docs/cache/endpoints/GetGroupTagKeyValues.json
new file mode 100644
index 0000000000..62c3a7ba6c
--- /dev/null
+++ b/api-docs/cache/endpoints/GetGroupTagKeyValues.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetGroupTagKeyValues",
+  "path": "/api/0/groups/{group_id}/tags/{key}/values/",
+  "doc": "List a Tag's Values\n```````````````````\n\nReturn a list of values associated with this key.",
+  "section": "events",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.group_tagkey_values.GroupTagKeyValuesEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetOrganizationDetails.json b/api-docs/cache/endpoints/GetOrganizationDetails.json
new file mode 100644
index 0000000000..41b6c27cec
--- /dev/null
+++ b/api-docs/cache/endpoints/GetOrganizationDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetOrganizationDetails",
+  "path": "/api/0/organizations/{organization_slug}/",
+  "doc": "Retrieve an Organization\n````````````````````````\n\nReturn details on an individual organization including various details\nsuch as membership access, features, and teams.",
+  "section": "organizations",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.organization_details.OrganizationDetailsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetOrganizationIndex.json b/api-docs/cache/endpoints/GetOrganizationIndex.json
new file mode 100644
index 0000000000..3cc62780b5
--- /dev/null
+++ b/api-docs/cache/endpoints/GetOrganizationIndex.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetOrganizationIndex",
+  "path": "/api/0/organizations/",
+  "doc": "List your Organizations\n```````````````````````\n\nReturn a list of organizations available to the authenticated session.",
+  "section": "organizations",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.organization_index.OrganizationIndexEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetOrganizationProjects.json b/api-docs/cache/endpoints/GetOrganizationProjects.json
new file mode 100644
index 0000000000..48e9d222ca
--- /dev/null
+++ b/api-docs/cache/endpoints/GetOrganizationProjects.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetOrganizationProjects",
+  "path": "/api/0/organizations/{organization_slug}/projects/",
+  "doc": "List an Organization's Projects\n```````````````````````````````\n\nReturn a list of projects bound to a organization.",
+  "section": "organizations",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.organization_projects.OrganizationProjectsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetOrganizationStats.json b/api-docs/cache/endpoints/GetOrganizationStats.json
new file mode 100644
index 0000000000..d57f9d3110
--- /dev/null
+++ b/api-docs/cache/endpoints/GetOrganizationStats.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetOrganizationStats",
+  "path": "/api/0/organizations/{organization_slug}/stats/",
+  "doc": "Retrieve Event Counts for an Organization\n`````````````````````````````````````````\n\n**Draft:** This endpoint may change in the future without notice.\n\nReturn a set of points representing a normalized timestamp and the\nnumber of events seen in the period.\n\nQuery ranges are limited to Sentry's configured time-series\nresolutions.\n\nParameters:\n\n- ``since``: a timestamp to set the start of the query\n- ``until``: a timestamp to set the end of the query\n- ``resolution``: an explicit resolution to search for (i.e. 10s)\n- ``stat``: the name of the stat to query (received, rejected)\n\n**Note:** resolution should not be used unless you're familiar\nwith Sentry internals as it's restricted to pre-defined values.",
+  "section": "organizations",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.organization_stats.OrganizationStatsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetOrganizationTeams.json b/api-docs/cache/endpoints/GetOrganizationTeams.json
new file mode 100644
index 0000000000..59a0dcd903
--- /dev/null
+++ b/api-docs/cache/endpoints/GetOrganizationTeams.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetOrganizationTeams",
+  "path": "/api/0/organizations/{organization_slug}/teams/",
+  "doc": "List an Organization's Teams\n````````````````````````````\n\nReturn a list of teams bound to a organization.",
+  "section": "organizations",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.organization_teams.OrganizationTeamsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetProjectDetails.json b/api-docs/cache/endpoints/GetProjectDetails.json
new file mode 100644
index 0000000000..0356dc4932
--- /dev/null
+++ b/api-docs/cache/endpoints/GetProjectDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetProjectDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/",
+  "doc": "Retrieve a Project\n``````````````````\n\nReturn details on an individual project.",
+  "section": "projects",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.project_details.ProjectDetailsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetProjectEventDetails.json b/api-docs/cache/endpoints/GetProjectEventDetails.json
new file mode 100644
index 0000000000..f1c5882d8f
--- /dev/null
+++ b/api-docs/cache/endpoints/GetProjectEventDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetProjectEventDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/events/{event_id}/",
+  "doc": "Retrieve an event for a project\n\nReturn details on an individual event.\n\n    {method} {path}",
+  "section": "events",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.project_event_details.ProjectEventDetailsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetProjectEvents.json b/api-docs/cache/endpoints/GetProjectEvents.json
new file mode 100644
index 0000000000..2d4398ace6
--- /dev/null
+++ b/api-docs/cache/endpoints/GetProjectEvents.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetProjectEvents",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/events/",
+  "doc": "List a Project's Available Samples\n``````````````````````````````````\n\nReturn a list of sampled events bound to a project.",
+  "section": "events",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.project_events.ProjectEventsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetProjectGroupIndex.json b/api-docs/cache/endpoints/GetProjectGroupIndex.json
new file mode 100644
index 0000000000..b82f07eae5
--- /dev/null
+++ b/api-docs/cache/endpoints/GetProjectGroupIndex.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetProjectGroupIndex",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/groups/",
+  "doc": "List a Project's Aggregates\n```````````````````````````\n\nReturn a list of aggregates bound to a project.\n\nA default query of 'is:resolved' is applied. To return results\nwith other statuses send an new query value (i.e. ?query= for all\nresults).\n\nAny standard Sentry structured search query can be passed via the\n``query`` parameter.\n\nThe ``statsPeriod`` parameter can be used to select the timeline\nstats which should be present. Possible values are: '' (disable),\n'24h', '14d'",
+  "section": "events",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.project_group_index.ProjectGroupIndexEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetProjectKeys.json b/api-docs/cache/endpoints/GetProjectKeys.json
new file mode 100644
index 0000000000..1f1725fae3
--- /dev/null
+++ b/api-docs/cache/endpoints/GetProjectKeys.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetProjectKeys",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/keys/",
+  "doc": "List a Project's Client Keys\n````````````````````````````\n\nReturn a list of client keys bound to a project.",
+  "section": "projects",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.project_keys.ProjectKeysEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetProjectReleases.json b/api-docs/cache/endpoints/GetProjectReleases.json
new file mode 100644
index 0000000000..3cd55b8b55
--- /dev/null
+++ b/api-docs/cache/endpoints/GetProjectReleases.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetProjectReleases",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/",
+  "doc": "List a Project's Releases\n`````````````````````````\n\nRetrieve a list of releases for a given project.\n\nTo find releases for a given version the 'query' parameter may be to\ncreate a \"version STARTS WITH\" filter.",
+  "section": "releases",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.project_releases.ProjectReleasesEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetProjectStats.json b/api-docs/cache/endpoints/GetProjectStats.json
new file mode 100644
index 0000000000..dc521bd3a1
--- /dev/null
+++ b/api-docs/cache/endpoints/GetProjectStats.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetProjectStats",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/stats/",
+  "doc": "Retrieve Event Counts for a Project\n```````````````````````````````````\n\n**Draft:** This endpoint may change in the future without notice.\n\nReturn a set of points representing a normalized timestamp and the\nnumber of events seen in the period.\n\nQuery ranges are limited to Sentry's configured time-series\nresolutions.\n\nParameters:\n\n- since: a timestamp to set the start of the query\n- until: a timestamp to set the end of the query\n- resolution: an explicit resolution to search for (i.e. 10s)\n\n**Note:** resolution should not be used unless you're familiar\nwith Sentry internals as it's restricted to pre-defined values.",
+  "section": "projects",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.project_stats.ProjectStatsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetProjectTagKeyValues.json b/api-docs/cache/endpoints/GetProjectTagKeyValues.json
new file mode 100644
index 0000000000..506d4336b0
--- /dev/null
+++ b/api-docs/cache/endpoints/GetProjectTagKeyValues.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetProjectTagKeyValues",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/tags/{key}/values/",
+  "doc": "List a Tag's Values\n```````````````````\n\nReturn a list of values associated with this key.",
+  "section": "projects",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.project_tagkey_values.ProjectTagKeyValuesEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetReleaseDetails.json b/api-docs/cache/endpoints/GetReleaseDetails.json
new file mode 100644
index 0000000000..a3312c3c51
--- /dev/null
+++ b/api-docs/cache/endpoints/GetReleaseDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetReleaseDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/",
+  "doc": "Retrieve a Release\n``````````````````\n\nReturn details on an individual release.",
+  "section": "releases",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.release_details.ReleaseDetailsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetReleaseFileDetails.json b/api-docs/cache/endpoints/GetReleaseFileDetails.json
new file mode 100644
index 0000000000..fbec5a476f
--- /dev/null
+++ b/api-docs/cache/endpoints/GetReleaseFileDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetReleaseFileDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/{file_id}/",
+  "doc": "Retrieve a File\n```````````````\n\nReturn details on an individual file within a release.",
+  "section": "releases",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.release_file_details.ReleaseFileDetailsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetReleaseFiles.json b/api-docs/cache/endpoints/GetReleaseFiles.json
new file mode 100644
index 0000000000..938b1a2e03
--- /dev/null
+++ b/api-docs/cache/endpoints/GetReleaseFiles.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetReleaseFiles",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/",
+  "doc": "List a Release's Files\n``````````````````````\n\nRetrieve a list of files for a given release.",
+  "section": "releases",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.release_files.ReleaseFilesEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetTeamDetails.json b/api-docs/cache/endpoints/GetTeamDetails.json
new file mode 100644
index 0000000000..24235c6a3d
--- /dev/null
+++ b/api-docs/cache/endpoints/GetTeamDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetTeamDetails",
+  "path": "/api/0/teams/{organization_slug}/{team_slug}/",
+  "doc": "Retrieve a Team\n```````````````\n\nReturn details on an individual team.\n\n    {method} {path}",
+  "section": "teams",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.team_details.TeamDetailsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetTeamProjectIndex.json b/api-docs/cache/endpoints/GetTeamProjectIndex.json
new file mode 100644
index 0000000000..e7a5a2738a
--- /dev/null
+++ b/api-docs/cache/endpoints/GetTeamProjectIndex.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetTeamProjectIndex",
+  "path": "/api/0/teams/{organization_slug}/{team_slug}/projects/",
+  "doc": "List a Team's Projects\n``````````````````````\n\nReturn a list of projects bound to a team.\n\n    {method} {path}",
+  "section": "teams",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.team_project_index.TeamProjectIndexEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/GetTeamStats.json b/api-docs/cache/endpoints/GetTeamStats.json
new file mode 100644
index 0000000000..e477bfbb51
--- /dev/null
+++ b/api-docs/cache/endpoints/GetTeamStats.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "GetTeamStats",
+  "path": "/api/0/teams/{organization_slug}/{team_slug}/stats/",
+  "doc": "Retrieve Event Counts for a Team\n````````````````````````````````\n\n**Draft:** This endpoint may change in the future without notice.\n\nReturn a set of points representing a normalized timestamp and the\nnumber of events seen in the period.\n\nQuery ranges are limited to Sentry's configured time-series\nresolutions.\n\nParameters:\n\n- ``since``: a timestamp to set the start of the query\n- ``until``: a timestamp to set the end of the query\n- ``resolution``: an explicit resolution to search for (i.e. 10s)\n\n**Note:** resolution should not be used unless you're familiar\nwith Sentry internals as it's restricted to pre-defined values.",
+  "section": "teams",
+  "method": "GET",
+  "internal_path": "sentry.api.endpoints.team_stats.TeamStatsEndpoint:get"
+}
diff --git a/api-docs/cache/endpoints/PostOrganizationIndex.json b/api-docs/cache/endpoints/PostOrganizationIndex.json
new file mode 100644
index 0000000000..94832e6c83
--- /dev/null
+++ b/api-docs/cache/endpoints/PostOrganizationIndex.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PostOrganizationIndex",
+  "path": "/api/0/organizations/",
+  "doc": "Create a New Organization\n`````````````````````````\n\nCreate a new organization.",
+  "section": "organizations",
+  "method": "POST",
+  "internal_path": "sentry.api.endpoints.organization_index.OrganizationIndexEndpoint:post"
+}
diff --git a/api-docs/cache/endpoints/PostOrganizationTeams.json b/api-docs/cache/endpoints/PostOrganizationTeams.json
new file mode 100644
index 0000000000..a8eae06e34
--- /dev/null
+++ b/api-docs/cache/endpoints/PostOrganizationTeams.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PostOrganizationTeams",
+  "path": "/api/0/organizations/{organization_slug}/teams/",
+  "doc": "Create a new Team\n``````````````````\n\nCreate a new team bound to an organization.",
+  "section": "organizations",
+  "method": "POST",
+  "internal_path": "sentry.api.endpoints.organization_teams.OrganizationTeamsEndpoint:post"
+}
diff --git a/api-docs/cache/endpoints/PostProjectKeys.json b/api-docs/cache/endpoints/PostProjectKeys.json
new file mode 100644
index 0000000000..47c97f701d
--- /dev/null
+++ b/api-docs/cache/endpoints/PostProjectKeys.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PostProjectKeys",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/keys/",
+  "doc": "Create a new Client Key\n```````````````````````\n\nCreate a new client key bound to a project.",
+  "section": "projects",
+  "method": "POST",
+  "internal_path": "sentry.api.endpoints.project_keys.ProjectKeysEndpoint:post"
+}
diff --git a/api-docs/cache/endpoints/PostProjectReleases.json b/api-docs/cache/endpoints/PostProjectReleases.json
new file mode 100644
index 0000000000..9b37811b64
--- /dev/null
+++ b/api-docs/cache/endpoints/PostProjectReleases.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PostProjectReleases",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/",
+  "doc": "Create a New Release\n````````````````````\n\nCreate a new release for the given project.",
+  "section": "releases",
+  "method": "POST",
+  "internal_path": "sentry.api.endpoints.project_releases.ProjectReleasesEndpoint:post"
+}
diff --git a/api-docs/cache/endpoints/PostReleaseFiles.json b/api-docs/cache/endpoints/PostReleaseFiles.json
new file mode 100644
index 0000000000..b44675c97c
--- /dev/null
+++ b/api-docs/cache/endpoints/PostReleaseFiles.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PostReleaseFiles",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/",
+  "doc": "Upload a New File\n`````````````````\n\nUpload a new file for the given release.\n\nUnlike other API requests, files must be uploaded using the\ntraditional multipart/form-data content-type.\n\nThe optional 'name' attribute should reflect the absolute path\nthat this file will be referenced as. For example, in the case of\nJavaScript you might specify the full web URI.",
+  "section": "releases",
+  "method": "POST",
+  "internal_path": "sentry.api.endpoints.release_files.ReleaseFilesEndpoint:post"
+}
diff --git a/api-docs/cache/endpoints/PostTeamProjectIndex.json b/api-docs/cache/endpoints/PostTeamProjectIndex.json
new file mode 100644
index 0000000000..b2c6a00bf1
--- /dev/null
+++ b/api-docs/cache/endpoints/PostTeamProjectIndex.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PostTeamProjectIndex",
+  "path": "/api/0/teams/{organization_slug}/{team_slug}/projects/",
+  "doc": "Create a New Project\n````````````````````\n\nCreate a new project bound to a team.",
+  "section": "teams",
+  "method": "POST",
+  "internal_path": "sentry.api.endpoints.team_project_index.TeamProjectIndexEndpoint:post"
+}
diff --git a/api-docs/cache/endpoints/PutGroupDetails.json b/api-docs/cache/endpoints/PutGroupDetails.json
new file mode 100644
index 0000000000..163a06e4da
--- /dev/null
+++ b/api-docs/cache/endpoints/PutGroupDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PutGroupDetails",
+  "path": "/api/0/groups/{group_id}/",
+  "doc": "Update an aggregate\n```````````````````\n\nUpdates an individual aggregate's attributes.  Only the attributes\nsubmitted are modified.\n\nAttributes:\n\n- ``status``: ``\"resolved\"``, ``\"unresolved\"``, ``\"muted\"``\n- ``hasSeen``: `true`, false`\n- ``isBookmarked``: `true`, false`\n- ``assignedTo``: user id",
+  "section": "events",
+  "method": "PUT",
+  "internal_path": "sentry.api.endpoints.group_details.GroupDetailsEndpoint:put"
+}
diff --git a/api-docs/cache/endpoints/PutOrganizationDetails.json b/api-docs/cache/endpoints/PutOrganizationDetails.json
new file mode 100644
index 0000000000..a7abd14f40
--- /dev/null
+++ b/api-docs/cache/endpoints/PutOrganizationDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PutOrganizationDetails",
+  "path": "/api/0/organizations/{organization_slug}/",
+  "doc": "Update an Organization\n``````````````````````\n\nUpdate various attributes and configurable settings for the given\norganization.",
+  "section": "organizations",
+  "method": "PUT",
+  "internal_path": "sentry.api.endpoints.organization_details.OrganizationDetailsEndpoint:put"
+}
diff --git a/api-docs/cache/endpoints/PutProjectDetails.json b/api-docs/cache/endpoints/PutProjectDetails.json
new file mode 100644
index 0000000000..354713f617
--- /dev/null
+++ b/api-docs/cache/endpoints/PutProjectDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PutProjectDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/",
+  "doc": "Update a Project\n````````````````\n\nUpdate various attributes and configurable settings for the given\nproject.",
+  "section": "projects",
+  "method": "PUT",
+  "internal_path": "sentry.api.endpoints.project_details.ProjectDetailsEndpoint:put"
+}
diff --git a/api-docs/cache/endpoints/PutProjectGroupIndex.json b/api-docs/cache/endpoints/PutProjectGroupIndex.json
new file mode 100644
index 0000000000..136b83a33e
--- /dev/null
+++ b/api-docs/cache/endpoints/PutProjectGroupIndex.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PutProjectGroupIndex",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/groups/",
+  "doc": "Bulk Mutate a List of Aggregates\n````````````````````````````````\n\nBulk mutate various attributes on aggregates.\n\n- For non-status updates, the 'id' parameter is required.\n- For status updates, the 'id' parameter may be omitted for a batch\n  \"update all\" query.\n- An optional 'status' parameter may be used to restrict mutations to\n  only events with the given status.\n\nAttributes:\n\n- ``status``: resolved, unresolved, muted\n- ``hasSeen``: true, false\n- ``isBookmarked``: true, false\n- ``isPublic``: true, false\n- ``merge``: true, false\n\nIf any ids are out of scope this operation will succeed without\nany data mutation.",
+  "section": "events",
+  "method": "PUT",
+  "internal_path": "sentry.api.endpoints.project_group_index.ProjectGroupIndexEndpoint:put"
+}
diff --git a/api-docs/cache/endpoints/PutProjectKeyDetails.json b/api-docs/cache/endpoints/PutProjectKeyDetails.json
new file mode 100644
index 0000000000..5ddf8b28c6
--- /dev/null
+++ b/api-docs/cache/endpoints/PutProjectKeyDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PutProjectKeyDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/keys/{key_id}/",
+  "doc": "Update a Client Key\n```````````````````\n\nUpdate a client key.",
+  "section": "projects",
+  "method": "PUT",
+  "internal_path": "sentry.api.endpoints.project_key_details.ProjectKeyDetailsEndpoint:put"
+}
diff --git a/api-docs/cache/endpoints/PutReleaseDetails.json b/api-docs/cache/endpoints/PutReleaseDetails.json
new file mode 100644
index 0000000000..d02255ad96
--- /dev/null
+++ b/api-docs/cache/endpoints/PutReleaseDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PutReleaseDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/",
+  "doc": "Update a Release\n````````````````\n\nUpdate a release.",
+  "section": "releases",
+  "method": "PUT",
+  "internal_path": "sentry.api.endpoints.release_details.ReleaseDetailsEndpoint:put"
+}
diff --git a/api-docs/cache/endpoints/PutReleaseFileDetails.json b/api-docs/cache/endpoints/PutReleaseFileDetails.json
new file mode 100644
index 0000000000..60aa166a99
--- /dev/null
+++ b/api-docs/cache/endpoints/PutReleaseFileDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PutReleaseFileDetails",
+  "path": "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/{file_id}/",
+  "doc": "Update a File\n`````````````\n\nUpdate metadata about an existing file.",
+  "section": "releases",
+  "method": "PUT",
+  "internal_path": "sentry.api.endpoints.release_file_details.ReleaseFileDetailsEndpoint:put"
+}
diff --git a/api-docs/cache/endpoints/PutTeamDetails.json b/api-docs/cache/endpoints/PutTeamDetails.json
new file mode 100644
index 0000000000..0feb4e1dbb
--- /dev/null
+++ b/api-docs/cache/endpoints/PutTeamDetails.json
@@ -0,0 +1,9 @@
+{
+  "scenarios": [],
+  "endpoint_name": "PutTeamDetails",
+  "path": "/api/0/teams/{organization_slug}/{team_slug}/",
+  "doc": "Update a Team\n`````````````\n\nUpdate various attributes and configurable settings for the given\nteam.",
+  "section": "teams",
+  "method": "PUT",
+  "internal_path": "sentry.api.endpoints.team_details.TeamDetailsEndpoint:put"
+}
diff --git a/api-docs/cache/scenario/RetrieveAggregate.json b/api-docs/cache/scenario/RetrieveAggregate.json
new file mode 100644
index 0000000000..cf8485ca1c
--- /dev/null
+++ b/api-docs/cache/scenario/RetrieveAggregate.json
@@ -0,0 +1,308 @@
+{
+  "requests": [
+    {
+      "request": {
+        "path": "/api/0/groups/1/",
+        "data": null,
+        "method": "GET",
+        "headers": {
+          "Host": "app.getsentry.com"
+        }
+      },
+      "response": {
+        "status": 200,
+        "headers": {
+          "content-language": "en-us",
+          "vary": "Accept-Language, Cookie",
+          "server": "WSGIServer/0.1 Python/2.7.6",
+          "allow": "GET, PUT, DELETE, HEAD, OPTIONS",
+          "date": "Fri, 21 Aug 2015 14:57:15 GMT",
+          "content-type": "application/json"
+        },
+        "reason": "OK",
+        "data": {
+          "seenBy": [],
+          "timeSpent": null,
+          "lastSeen": "2015-08-21T14:57:10Z",
+          "id": "1",
+          "userReportCount": 0,
+          "numComments": 0,
+          "stats": {
+            "30d": [
+              [
+                1437523200,
+                274076
+              ],
+              [
+                1437609600,
+                407309
+              ],
+              [
+                1437696000,
+                412009
+              ],
+              [
+                1437782400,
+                410215
+              ],
+              [
+                1437868800,
+                408301
+              ],
+              [
+                1437955200,
+                406223
+              ],
+              [
+                1438041600,
+                405719
+              ],
+              [
+                1438128000,
+                413473
+              ],
+              [
+                1438214400,
+                425541
+              ],
+              [
+                1438300800,
+                403121
+              ],
+              [
+                1438387200,
+                409134
+              ],
+              [
+                1438473600,
+                415248
+              ],
+              [
+                1438560000,
+                412207
+              ],
+              [
+                1438646400,
+                411900
+              ],
+              [
+                1438732800,
+                415257
+              ],
+              [
+                1438819200,
+                409443
+              ],
+              [
+                1438905600,
+                396094
+              ],
+              [
+                1438992000,
+                418727
+              ],
+              [
+                1439078400,
+                419398
+              ],
+              [
+                1439164800,
+                418215
+              ],
+              [
+                1439251200,
+                413494
+              ],
+              [
+                1439337600,
+                408692
+              ],
+              [
+                1439424000,
+                413751
+              ],
+              [
+                1439510400,
+                418980
+              ],
+              [
+                1439596800,
+                408658
+              ],
+              [
+                1439683200,
+                396292
+              ],
+              [
+                1439769600,
+                414620
+              ],
+              [
+                1439856000,
+                413029
+              ],
+              [
+                1439942400,
+                409344
+              ],
+              [
+                1440028800,
+                353316
+              ],
+              [
+                1440115200,
+                121778
+              ]
+            ],
+            "24h": [
+              [
+                1440079200,
+                17894
+              ],
+              [
+                1440082800,
+                18981
+              ],
+              [
+                1440086400,
+                17814
+              ],
+              [
+                1440090000,
+                12602
+              ],
+              [
+                1440093600,
+                7874
+              ],
+              [
+                1440097200,
+                11503
+              ],
+              [
+                1440100800,
+                12331
+              ],
+              [
+                1440104400,
+                6697
+              ],
+              [
+                1440108000,
+                7299
+              ],
+              [
+                1440111600,
+                7804
+              ],
+              [
+                1440115200,
+                9184
+              ],
+              [
+                1440118800,
+                8625
+              ],
+              [
+                1440122400,
+                8699
+              ],
+              [
+                1440126000,
+                7391
+              ],
+              [
+                1440129600,
+                10206
+              ],
+              [
+                1440133200,
+                8143
+              ],
+              [
+                1440136800,
+                8220
+              ],
+              [
+                1440140400,
+                6614
+              ],
+              [
+                1440144000,
+                7934
+              ],
+              [
+                1440147600,
+                5559
+              ],
+              [
+                1440151200,
+                6878
+              ],
+              [
+                1440154800,
+                7445
+              ],
+              [
+                1440158400,
+                7173
+              ],
+              [
+                1440162000,
+                8901
+              ],
+              [
+                1440165600,
+                10806
+              ]
+            ]
+          },
+          "culprit": "raven.scripts.runner in main",
+          "title": "This is an example Python exception",
+          "pluginActions": [],
+          "assignedTo": null,
+          "logger": null,
+          "annotations": [],
+          "status": "unresolved",
+          "tags": {},
+          "isPublic": false,
+          "permalink": "https://app.getsentry.com/the-interstellar-jurisdiction/pump-station/group/1/",
+          "firstRelease": {
+            "dateReleased": null,
+            "url": null,
+            "data": {},
+            "dateCreated": "2015-08-21T14:57:10.237Z",
+            "lastEvent": null,
+            "version": "acc477bd2a6e02bacf9953f8929ea79583a20e0a",
+            "firstEvent": null,
+            "shortVersion": "acc477bd2a6e",
+            "dateStarted": null,
+            "newGroups": 0,
+            "ref": null
+          },
+          "shareId": "322e31",
+          "firstSeen": "2015-08-21T14:57:10Z",
+          "count": "1",
+          "hasSeen": false,
+          "level": "error",
+          "isBookmarked": false,
+          "project": {
+            "name": "Pump Station",
+            "slug": "pump-station"
+          },
+          "lastRelease": null,
+          "activity": [
+            {
+              "type": "first_seen",
+              "user": null,
+              "data": {},
+              "id": "None",
+              "dateCreated": "2015-08-21T14:57:10Z"
+            }
+          ]
+        }
+      }
+    }
+  ],
+  "ident": "RetrieveAggregate"
+}
diff --git a/api-docs/cache/sections.json b/api-docs/cache/sections.json
new file mode 100644
index 0000000000..6099a16e9a
--- /dev/null
+++ b/api-docs/cache/sections.json
@@ -0,0 +1,8 @@
+{
+  "organizations": "Organizations",
+  "releases": "Releases",
+  "teams": "Teams",
+  "accounts": "Accounts",
+  "events": "Events",
+  "projects": "Projects"
+}
