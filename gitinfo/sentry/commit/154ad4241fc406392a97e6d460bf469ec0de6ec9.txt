commit 154ad4241fc406392a97e6d460bf469ec0de6ec9
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jan 22 12:29:07 2019 -0800

    ref(releases): Refactor release progress to use project from props (#11617)
    
    Since we'll reuse this component in organization level releases, use
    project from props as the project will no longer be available via
    context.

diff --git a/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
index b7241913ac..f9c35245c0 100644
--- a/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
@@ -19,12 +19,12 @@ import EmptyStateWarning from 'app/components/emptyStateWarning';
 import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
 
 import ReleaseLanding from 'app/views/releases/list/projectReleases/releaseLanding';
-import ReleaseProgress from 'app/views/releases/list/projectReleases/releaseProgress';
 import PageHeading from 'app/components/pageHeading';
 
 import ReleaseEmptyState from './releaseEmptyState';
 import ReleaseList from '../shared/releaseList';
 import ReleaseListHeader from '../shared/releaseListHeader';
+import ReleaseProgress from '../shared/releaseProgress';
 
 const DEFAULT_QUERY = '';
 
@@ -152,7 +152,7 @@ const ProjectReleases = createReactClass({
     else if (this.state.releaseList.length > 0)
       body = (
         <div>
-          <ReleaseProgress />
+          <ReleaseProgress project={this.context.project} />
           <ReleaseList
             orgId={params.orgId}
             projectId={params.projectId}
@@ -194,7 +194,7 @@ const ProjectReleases = createReactClass({
       <ReleaseLanding />
     ) : (
       <div>
-        <ReleaseProgress />
+        <ReleaseProgress project={project} />
         <ReleaseEmptyState message={message} />
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/releases/list/projectReleases/progressBar.jsx b/src/sentry/static/sentry/app/views/releases/list/shared/progressBar.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/list/projectReleases/progressBar.jsx
rename to src/sentry/static/sentry/app/views/releases/list/shared/progressBar.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/list/projectReleases/releaseProgress.jsx b/src/sentry/static/sentry/app/views/releases/list/shared/releaseProgress.jsx
similarity index 92%
rename from src/sentry/static/sentry/app/views/releases/list/projectReleases/releaseProgress.jsx
rename to src/sentry/static/sentry/app/views/releases/list/shared/releaseProgress.jsx
index 3fcf1ae9d1..e8d002606e 100644
--- a/src/sentry/static/sentry/app/views/releases/list/projectReleases/releaseProgress.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/shared/releaseProgress.jsx
@@ -1,13 +1,15 @@
-import PropTypes from 'prop-types';
 import React from 'react';
 import {t} from 'app/locale';
 import styled from 'react-emotion';
 
+import SentryTypes from 'app/sentryTypes';
 import {analytics} from 'app/utils/analytics';
 import AsyncComponent from 'app/components/asyncComponent';
 import Button from 'app/components/button';
 import {PanelItem} from 'app/components/panels';
 import {promptsUpdate} from 'app/actionCreators/prompts';
+import withOrganization from 'app/utils/withOrganization';
+
 import ProgressBar from './progressBar';
 
 const STEPS = {
@@ -34,14 +36,13 @@ const STEPS = {
 };
 
 class ReleaseProgress extends AsyncComponent {
-  static contextTypes = {
-    organization: PropTypes.object,
-    project: PropTypes.object,
-    router: PropTypes.object,
+  static propTypes = {
+    organization: SentryTypes.Organization.isRequired,
+    project: SentryTypes.Project.isRequired,
   };
 
   getEndpoints() {
-    let {project, organization} = this.context;
+    let {project, organization} = this.props;
     let data = {
       organization_id: organization.id,
       project_id: project.id,
@@ -120,7 +121,7 @@ class ReleaseProgress extends AsyncComponent {
   }
 
   handleClick(action) {
-    let {project, organization} = this.context;
+    let {project, organization} = this.props;
 
     let params = {
       projectId: project.id,
@@ -135,7 +136,7 @@ class ReleaseProgress extends AsyncComponent {
   }
 
   recordAnalytics(action, data) {
-    let {project, organization} = this.context;
+    let {project, organization} = this.props;
 
     data.org_id = parseInt(organization.id, 10);
     data.project_id = parseInt(project.id, 10);
@@ -220,4 +221,5 @@ const StyledDiv = styled('div')`
   margin-bottom: 10px;
 `;
 
-export default ReleaseProgress;
+export {ReleaseProgress};
+export default withOrganization(ReleaseProgress);
diff --git a/tests/js/spec/views/releases/list/projectReleasesProgress.spec.jsx b/tests/js/spec/views/releases/list/projectReleasesProgress.spec.jsx
index 17504331d0..e90d682aab 100644
--- a/tests/js/spec/views/releases/list/projectReleasesProgress.spec.jsx
+++ b/tests/js/spec/views/releases/list/projectReleasesProgress.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {Client} from 'app/api';
 import {mount} from 'enzyme';
 
-import ReleaseProgress from 'app/views/releases/list/projectReleases/releaseProgress';
+import {ReleaseProgress} from 'app/views/releases/list/shared/releaseProgress';
 
 describe('ReleaseProgress', function() {
   let wrapper, organization, project, getPromptsMock, putMock, routerContext;
@@ -13,12 +13,7 @@ describe('ReleaseProgress', function() {
   beforeEach(function() {
     organization = TestStubs.Organization();
     project = TestStubs.Project();
-    routerContext = TestStubs.routerContext([
-      {
-        organization,
-        project,
-      },
-    ]);
+    routerContext = TestStubs.routerContext();
 
     getPromptsMock = Client.addMockResponse({
       method: 'GET',
@@ -42,7 +37,7 @@ describe('ReleaseProgress', function() {
       ],
     });
     wrapper = mount(
-      <ReleaseProgress orgId={organization.id} projectId={project.id} />,
+      <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
     expect(wrapper.state('remainingSteps')).toBe(0);
@@ -61,7 +56,7 @@ describe('ReleaseProgress', function() {
       ],
     });
     wrapper = mount(
-      <ReleaseProgress orgId={organization.id} projectId={project.id} />,
+      <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
 
@@ -85,7 +80,7 @@ describe('ReleaseProgress', function() {
       ],
     });
     wrapper = mount(
-      <ReleaseProgress orgId={organization.id} projectId={project.id} />,
+      <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
     expect(
