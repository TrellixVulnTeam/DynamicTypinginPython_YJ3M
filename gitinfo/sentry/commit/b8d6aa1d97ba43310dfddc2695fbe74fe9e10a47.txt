commit b8d6aa1d97ba43310dfddc2695fbe74fe9e10a47
Author: Jess MacQueen <jess@getsentry.com>
Date:   Thu Nov 2 17:45:44 2017 -0700

    feat(discard): Show disabled feature component for discarding groups

diff --git a/src/sentry/static/sentry/app/stores/hookStore.jsx b/src/sentry/static/sentry/app/stores/hookStore.jsx
index 12f634198e..689f879ca3 100644
--- a/src/sentry/static/sentry/app/stores/hookStore.jsx
+++ b/src/sentry/static/sentry/app/stores/hookStore.jsx
@@ -12,6 +12,7 @@ let validHookNames = new Set([
   'project:data-forwarding:disabled',
   'project:rate-limits:disabled',
   'project:custom-inbound-filters:disabled',
+  'project:discard-groups:disabled',
   'issue:secondary-column',
   'analytics:onboarding-complete',
 ]);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 329d844b6b..b568c3af62 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -12,6 +12,7 @@ import DropdownLink from '../../components/dropdownLink';
 import Duration from '../../components/duration';
 import GroupActions from '../../actions/groupActions';
 import GroupState from '../../mixins/groupState';
+import HookStore from '../../stores/hookStore';
 import IndicatorStore from '../../stores/indicatorStore';
 import IssuePluginActions from '../../components/group/issuePluginActions';
 import LinkWithConfirmation from '../../components/linkWithConfirmation';
@@ -387,11 +388,48 @@ const IgnoreActions = React.createClass({
 
 const DeleteActions = React.createClass({
   propTypes: {
+    organization: PropTypes.object.isRequired,
     project: PropTypes.object.isRequired,
     onDelete: PropTypes.func.isRequired,
     onDiscard: PropTypes.func.isRequired,
   },
 
+  getInitialState() {
+    return {
+      hooksDisabled: HookStore.get('project:discard-groups:disabled')
+    };
+  },
+
+  renderDisabledDiscard() {
+    let {project, organization} = this.props;
+    return this.state.hooksDisabled.map(hook => hook(organization, project));
+  },
+
+  renderDiscard() {
+    return (
+        <DropdownLink
+          caret={true}
+          className="group-delete btn btn-default btn-sm"
+          alwaysRenderMenu
+        >
+        <li>
+          <LinkWithConfirmation
+            title={t('Discard')}
+            message={t(
+              'Discarding this event will result in the deletion ' +
+                'of most data associated with this issue and future ' +
+                'events being discarded before reaching your stream. ' +
+                'Are you sure you wish to continue?'
+            )}
+            onConfirm={this.props.onDiscard}
+          >
+            <span>{t('Delete and discard future events')}</span>
+          </LinkWithConfirmation>
+        </li>
+      </DropdownLink>
+    );
+  },
+
   render() {
     let features = new Set(this.props.project.features);
     return (
@@ -406,28 +444,9 @@ const DeleteActions = React.createClass({
         >
           <span className="icon-trash" />
         </LinkWithConfirmation>
-        {features.has('discard-groups') && (
-          <DropdownLink
-            caret={true}
-            className="group-delete btn btn-default btn-sm"
-            alwaysRenderMenu
-          >
-            <li>
-              <LinkWithConfirmation
-                title={t('Discard')}
-                message={t(
-                  'Discarding this event will result in the deletion ' +
-                    'of most data associated with this issue and future ' +
-                    'events being discarded before reaching your stream. ' +
-                    'Are you sure you wish to continue?'
-                )}
-                onConfirm={this.props.onDiscard}
-              >
-                <span>{t('Delete and discard future events')}</span>
-              </LinkWithConfirmation>
-            </li>
-          </DropdownLink>
-        )}
+        {features.has('discard-groups')
+          ? this.renderDiscard()
+          : this.renderDisabledDiscard()}
       </div>
     );
   },
@@ -601,6 +620,7 @@ const GroupDetailsActions = React.createClass({
         </div>
         <DeleteActions
           project={project}
+          organization={org}
           onDelete={this.onDelete}
           onDiscard={this.onDiscard}
         />
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
index 6dd5d24a75..e52aa15af2 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
@@ -43,6 +43,12 @@ exports[`GroupActions render() renders correctly 1`] = `
   <DeleteActions
     onDelete={[Function]}
     onDiscard={[Function]}
+    organization={
+      Object {
+        "id": "4660",
+        "slug": "org",
+      }
+    }
     project={
       Object {
         "id": "2448",
