commit af0ec804b4d10e384c5e36f234d761305ea97171
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Feb 19 17:20:05 2019 -0800

    feat: Bring back projects dashboard for Sentry 10 (#12123)

diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 22b8fce135..2450669d96 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -219,17 +219,6 @@ class Sidebar extends React.Component {
 
     const hasSentry10 = hasOrganization && new Set(organization.features).has('sentry10');
 
-    const projectsSidebarItem = () => (
-      <SidebarItem
-        {...sidebarItemProps}
-        index
-        onClick={this.hidePanel}
-        icon={<InlineSvg src="icon-projects" />}
-        label={t('Projects')}
-        to={`/${organization.slug}/`}
-      />
-    );
-
     return (
       <StyledSidebar innerRef={ref => (this.sidebar = ref)} collapsed={collapsed}>
         <SidebarSectionGroup>
@@ -247,11 +236,19 @@ class Sidebar extends React.Component {
           {hasOrganization && (
             <React.Fragment>
               <SidebarSection>
-                <Feature
-                  features={['sentry10']}
-                  renderDisabled={projectsSidebarItem}
-                  organization={organization}
-                >
+                <SidebarItem
+                  {...sidebarItemProps}
+                  index
+                  onClick={this.hidePanel}
+                  icon={<InlineSvg src="icon-projects" />}
+                  label={t('Projects')}
+                  to={
+                    hasSentry10
+                      ? `/organizations/${organization.slug}/projects/`
+                      : `/${organization.slug}/`
+                  }
+                />
+                <Feature features={['sentry10']} organization={organization}>
                   <SidebarItem
                     {...sidebarItemProps}
                     onClick={(_id, evt) =>
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index ae8e197e68..86d80d2cf5 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -771,6 +771,10 @@ function routes() {
         <Route component={errorHandler(OrganizationRoot)}>
           <IndexRoute component={errorHandler(OrganizationDashboard)} />
           {hooksRootOrgRoutes}
+          <Route
+            path="/organizations/:orgId/projects/"
+            component={errorHandler(OrganizationDashboard)}
+          />
           <Route
             path="/organizations/:orgId/stats/"
             component={errorHandler(OrganizationStats)}
diff --git a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx
index 98623a26ea..16be2266dd 100644
--- a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx
+++ b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import PropTypes from 'prop-types';
 import styled from 'react-emotion';
 import {Flex, Box} from 'grid-emotion';
 import moment from 'moment-timezone';
@@ -16,14 +15,12 @@ const DEPLOY_COUNT = 2;
 
 export default class Deploys extends React.Component {
   static propTypes = {
-    project: SentryTypes.Project,
-    orgId: PropTypes.string,
+    project: SentryTypes.Project.isRequired,
+    organization: SentryTypes.Organization.isRequired,
   };
 
   render() {
-    const {project, orgId} = this.props;
-
-    const projectId = project.slug;
+    const {project, organization} = this.props;
 
     const flattenedDeploys = Object.entries(
       project.latestDeploys || {}
@@ -42,8 +39,8 @@ export default class Deploys extends React.Component {
             <Deploy
               key={deploy.version}
               deploy={deploy}
-              projectId={projectId}
-              orgId={orgId}
+              project={project}
+              organization={organization}
             />
           ))}
         </DeployBox>
@@ -57,17 +54,26 @@ export default class Deploys extends React.Component {
 class Deploy extends React.Component {
   static propTypes = {
     deploy: SentryTypes.Deploy.isRequired,
-    projectId: PropTypes.string.isRequired,
-    orgId: PropTypes.string.isRequired,
+    project: SentryTypes.Project.isRequired,
+    organization: SentryTypes.Organization.isRequired,
   };
 
   render() {
-    const {deploy, orgId, projectId} = this.props;
+    const {deploy, organization, project} = this.props;
+
+    const hasSentry10 = new Set(organization.features).has('sentry10');
+
     return (
       <DeployRow justify="space-between">
         <Environment>{deploy.environment}</Environment>
         <Version>
-          <StyledLink to={`/${orgId}/${projectId}/releases/${deploy.version}/`}>
+          <StyledLink
+            to={
+              hasSentry10
+                ? `/organizations/${organization.slug}/releases/${deploy.version}/?project=${project.id}`
+                : `/${organization.slug}/${project.slug}/releases/${deploy.version}/`
+            }
+          >
             {getShortVersion(deploy.version)}
           </StyledLink>
         </Version>
diff --git a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx
index 63081feae8..493cde739a 100644
--- a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx
@@ -13,6 +13,7 @@ import OrganizationState from 'app/mixins/organizationState';
 import ProjectsStatsStore from 'app/stores/projectsStatsStore';
 import getProjectsByTeams from 'app/utils/getProjectsByTeams';
 import {sortProjects} from 'app/utils';
+import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
 import withTeams from 'app/utils/withTeams';
 import withProjects from 'app/utils/withProjects';
 import {t} from 'app/locale';
@@ -23,6 +24,7 @@ import Resources from './resources';
 
 class Dashboard extends React.Component {
   static propTypes = {
+    routes: PropTypes.array,
     teams: PropTypes.array,
     projects: PropTypes.array,
     organization: SentryTypes.Organization,
@@ -31,10 +33,11 @@ class Dashboard extends React.Component {
   componentDidMount() {
     document.body.classList.add('org-dashboard');
 
-    const {organization} = this.props;
+    const {organization, routes} = this.props;
     const hasSentry10 = new Set(organization.features).has('sentry10');
+    const isOldRoute = getRouteStringFromRoutes(routes) === '/:orgId/';
 
-    if (hasSentry10) {
+    if (hasSentry10 && isOldRoute) {
       browserHistory.replace(`/organizations/${organization.slug}/`);
     }
   }
@@ -52,6 +55,8 @@ class Dashboard extends React.Component {
     const access = new Set(organization.access);
     const teamsMap = new Map(teams.map(teamObj => [teamObj.slug, teamObj]));
 
+    const hasSentry10 = new Set(organization.features).has('sentry10');
+
     const hasTeamAdminAccess = access.has('team:admin');
 
     if (projects.length === 1 && !projects[0].firstEvent) {
@@ -60,17 +65,18 @@ class Dashboard extends React.Component {
 
     return (
       <React.Fragment>
-        {favorites.length > 0 && (
-          <TeamSection
-            data-test-id="favorites"
-            orgId={params.orgId}
-            showBorder
-            team={null}
-            title={t('Bookmarked projects')}
-            projects={favorites}
-            access={access}
-          />
-        )}
+        {!hasSentry10 &&
+          favorites.length > 0 && (
+            <TeamSection
+              data-test-id="favorites"
+              orgId={params.orgId}
+              showBorder
+              team={null}
+              title={t('Bookmarked projects')}
+              projects={favorites}
+              access={access}
+            />
+          )}
 
         {teamSlugs.map((slug, index) => {
           const showBorder = index !== teamSlugs.length - 1;
@@ -112,7 +118,7 @@ const OrganizationDashboard = createReactClass({
   render() {
     return (
       <Flex flex="1" direction="column">
-        <ProjectNav />
+        {!this.getFeatures().has('sentry10') && <ProjectNav />}
         <Dashboard organization={this.context.organization} {...this.props} />
       </Flex>
     );
diff --git a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectCard.jsx b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectCard.jsx
index 9cb3bc41cb..88e70e7e58 100644
--- a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectCard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectCard.jsx
@@ -16,6 +16,7 @@ import ProjectsStatsStore from 'app/stores/projectsStatsStore';
 import SentryTypes from 'app/sentryTypes';
 import Tooltip from 'app/components/tooltip';
 import space from 'app/styles/space';
+import withOrganization from 'app/utils/withOrganization';
 
 import Chart from './chart';
 import Deploys from './deploys';
@@ -23,6 +24,7 @@ import NoEvents from './noEvents';
 
 class ProjectCard extends React.Component {
   static propTypes = {
+    organization: SentryTypes.Organization.isRequired,
     project: SentryTypes.Project.isRequired,
     params: PropTypes.object,
     hasProjectAccess: PropTypes.bool,
@@ -54,8 +56,10 @@ class ProjectCard extends React.Component {
   };
 
   render() {
-    const {project, hasProjectAccess, params} = this.props;
-    const {firstEvent, isBookmarked, stats, slug} = project;
+    const {organization, project, hasProjectAccess, params} = this.props;
+    const {id, firstEvent, isBookmarked, stats, slug} = project;
+
+    const hasSentry10 = new Set(organization.features).has('sentry10');
 
     const bookmarkText = isBookmarked
       ? t('Remove from bookmarks')
@@ -71,7 +75,13 @@ class ProjectCard extends React.Component {
                 avatarSize={24}
                 displayName={
                   hasProjectAccess ? (
-                    <Link to={`/${params.orgId}/${slug}/`}>
+                    <Link
+                      to={
+                        hasSentry10
+                          ? `/organizations/${params.orgId}/issues/?project=${id}`
+                          : `/${params.orgId}/${slug}/`
+                      }
+                    >
                       <strong>{slug}</strong>
                     </Link>
                   ) : (
@@ -91,7 +101,7 @@ class ProjectCard extends React.Component {
               <Chart stats={stats} noEvents={!firstEvent} />
               {!firstEvent && <NoEvents />}
             </ChartContainer>
-            <Deploys project={project} orgId={params.orgId} />
+            <Deploys project={project} organization={organization} />
           </StyledProjectCard>
         ) : (
           <LoadingCard />
@@ -184,4 +194,4 @@ const StyledIdBadge = styled(IdBadge)`
 `;
 
 export {ProjectCard};
-export default withRouter(ProjectCardContainer);
+export default withRouter(withOrganization(ProjectCardContainer));
diff --git a/tests/js/spec/components/sidebar/index.spec.jsx b/tests/js/spec/components/sidebar/index.spec.jsx
index 1edbfb983c..e80dca31cc 100644
--- a/tests/js/spec/components/sidebar/index.spec.jsx
+++ b/tests/js/spec/components/sidebar/index.spec.jsx
@@ -293,7 +293,7 @@ describe('Sidebar', function() {
       wrapper.setProps({organization: sentry10Org});
       wrapper.update();
       const labels = wrapper.find('SidebarItemLabel').map(node => node.text());
-      expect(labels).toHaveLength(9);
+      expect(labels).toHaveLength(10);
       expect(labels).not.toContain('Assigned to me');
       expect(labels).not.toContain('Bookmarked issues');
       expect(labels).not.toContain('Recently viewed');
diff --git a/tests/js/spec/views/organizationProjectsDashboard/__snapshots__/projectCard.spec.jsx.snap b/tests/js/spec/views/organizationProjectsDashboard/__snapshots__/projectCard.spec.jsx.snap
index 15197b1a26..da24971d65 100644
--- a/tests/js/spec/views/organizationProjectsDashboard/__snapshots__/projectCard.spec.jsx.snap
+++ b/tests/js/spec/views/organizationProjectsDashboard/__snapshots__/projectCard.spec.jsx.snap
@@ -2,6 +2,33 @@
 
 exports[`ProjectCard renders 1`] = `
 <ProjectCard
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
   params={
     Object {
       "orgId": "org-slug",
@@ -653,7 +680,33 @@ exports[`ProjectCard renders 1`] = `
               </div>
             </ChartContainer>
             <Deploys
-              orgId="org-slug"
+              organization={
+                Object {
+                  "access": Array [
+                    "org:read",
+                    "org:write",
+                    "org:admin",
+                    "project:read",
+                    "project:write",
+                    "project:admin",
+                    "team:read",
+                    "team:write",
+                    "team:admin",
+                  ],
+                  "features": Array [],
+                  "id": "3",
+                  "name": "Organization Name",
+                  "onboardingTasks": Array [],
+                  "projects": Array [],
+                  "scrapeJavaScript": true,
+                  "slug": "org-slug",
+                  "status": Object {
+                    "id": "active",
+                    "name": "active",
+                  },
+                  "teams": Array [],
+                }
+              }
               project={
                 Object {
                   "environments": Array [],
diff --git a/tests/js/spec/views/organizationProjectsDashboard/projectCard.spec.jsx b/tests/js/spec/views/organizationProjectsDashboard/projectCard.spec.jsx
index 2f56f8c784..98c4363070 100644
--- a/tests/js/spec/views/organizationProjectsDashboard/projectCard.spec.jsx
+++ b/tests/js/spec/views/organizationProjectsDashboard/projectCard.spec.jsx
@@ -12,6 +12,7 @@ describe('ProjectCard', function() {
   beforeEach(function() {
     wrapper = mount(
       <ProjectCard
+        organization={TestStubs.Organization()}
         project={TestStubs.Project({
           stats: [[1525042800, 1], [1525046400, 2]],
           platform: 'javascript',
@@ -72,6 +73,7 @@ describe('ProjectCard', function() {
 
     wrapper = mount(
       <ProjectCard
+        organization={TestStubs.Organization()}
         project={TestStubs.Project({
           stats: [[1525042800, 1], [1525046400, 2]],
           platform: 'javascript',
@@ -101,7 +103,11 @@ describe('ProjectCard', function() {
 
   it('renders loading placeholder card if there are no stats', function() {
     wrapper = mount(
-      <ProjectCard project={TestStubs.Project()} params={{orgId: 'org-slug'}} />,
+      <ProjectCard
+        organization={TestStubs.Organization()}
+        project={TestStubs.Project()}
+        params={{orgId: 'org-slug'}}
+      />,
       TestStubs.routerContext()
     );
 
