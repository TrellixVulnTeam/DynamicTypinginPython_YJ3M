commit 8c1aa7b35521c0bfc8b38beb69bf0326e217417a
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Jul 2 11:17:47 2018 -0700

    feat(discover): Add AVG aggregation option

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
index da7be1a6e6..4574209d6b 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
@@ -32,6 +32,7 @@ export default class Aggregation extends React.Component {
       {value: 'count', label: 'count'},
       {value: 'uniq', label: 'uniq(...)'},
       {value: 'topK', label: 'topK(...)'},
+      {value: 'avg', label: 'avg(...)'},
     ];
 
     if (input.startsWith('uniq')) {
@@ -41,6 +42,15 @@ export default class Aggregation extends React.Component {
       }));
     }
 
+    if (input.startsWith('avg')) {
+      optionList = this.props.columns
+        .filter(({type}) => type === 'number')
+        .map(({name}) => ({
+          value: `avg(${name})`,
+          label: `avg(${name})`,
+        }));
+    }
+
     if (input.startsWith('topK')) {
       optionList = TOPK_COUNTS.map(num => ({
         value: `topK(${num})`,
@@ -69,7 +79,7 @@ export default class Aggregation extends React.Component {
   handleChange = option => {
     const topKValues = new Set([...TOPK_COUNTS.map(num => `topK(${num})`)]);
 
-    if (option.value === 'uniq' || option.value === 'topK') {
+    if (option.value === 'uniq' || option.value === 'avg' || option.value === 'topK') {
       this.setState({selectedFunction: option.value}, this.focus);
     } else if (topKValues.has(option.value)) {
       this.setState(
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/utils.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/utils.jsx
index 6daa1f2f08..f239fcaffa 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/utils.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/utils.jsx
@@ -19,6 +19,10 @@ export function getInternal(external) {
     return `uniq(${col})`;
   }
 
+  if (func === 'avg') {
+    return `avg(${col})`;
+  }
+
   if (func.startsWith('topK')) {
     const count = func.match(/topK\((\d+)\)/)[1];
     return `topK(${count})(${col})`;
@@ -35,6 +39,7 @@ export function getInternal(external) {
 */
 export function getExternal(internal) {
   const uniqRegex = /^uniq\((.+)\)$/;
+  const avgRegex = /^avg\((.+)\)$/;
   const topKRegex = /^topK\((\d+)\)\((.+)\)$/;
 
   if (internal === 'count') {
@@ -46,6 +51,11 @@ export function getExternal(internal) {
     return ['uniq', column, `uniq_${column}`];
   }
 
+  if (internal.match(avgRegex)) {
+    const column = internal.match(avgRegex)[1];
+    return ['avg', column, `avg_${column}`];
+  }
+
   const topKMatch = internal.match(topKRegex);
   if (topKMatch) {
     return [
diff --git a/tests/js/spec/views/organizationDiscover/aggregations.spec.jsx b/tests/js/spec/views/organizationDiscover/aggregations.spec.jsx
index 2ace4485a5..edd48ace4d 100644
--- a/tests/js/spec/views/organizationDiscover/aggregations.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/aggregations.spec.jsx
@@ -16,6 +16,10 @@ const aggregationList = [
     internal: 'topK(10)(message)',
     external: ['topK(10)', 'message', 'topK_10_message'],
   },
+  {
+    internal: 'avg(retention_days)',
+    external: ['avg', 'retention_days', 'avg_retention_days'],
+  },
 ];
 
 describe('Aggregations', function() {
