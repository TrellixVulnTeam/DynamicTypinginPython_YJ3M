commit 67273ebba4d51aac03eb3b99c0e1fbbba9d6bdd5
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed May 16 11:54:47 2018 -0700

    feat(api): Add existing linked issues to group integration index

diff --git a/src/sentry/api/endpoints/group_integrations.py b/src/sentry/api/endpoints/group_integrations.py
index d099a815e9..b255036c53 100644
--- a/src/sentry/api/endpoints/group_integrations.py
+++ b/src/sentry/api/endpoints/group_integrations.py
@@ -4,6 +4,7 @@ from sentry import integrations
 from sentry.api.bases import GroupEndpoint
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
+from sentry.api.serializers.models.integration import IntegrationIssueSerializer
 from sentry.integrations.base import IntegrationFeatures
 from sentry.models import Integration
 
@@ -22,6 +23,6 @@ class GroupIntegrationsEndpoint(GroupEndpoint):
             ),
             request=request,
             order_by='name',
-            on_results=lambda x: serialize(x, request.user),
+            on_results=lambda x: serialize(x, request.user, IntegrationIssueSerializer(group)),
             paginator_cls=OffsetPaginator,
         )
diff --git a/src/sentry/api/serializers/models/integration.py b/src/sentry/api/serializers/models/integration.py
index 36302e1e6f..9e3e181c04 100644
--- a/src/sentry/api/serializers/models/integration.py
+++ b/src/sentry/api/serializers/models/integration.py
@@ -1,9 +1,10 @@
 from __future__ import absolute_import
 
 import six
+from collections import defaultdict
 
 from sentry.api.serializers import register, Serializer
-from sentry.models import Integration
+from sentry.models import ExternalIssue, GroupLink, Integration
 
 
 @register(Integration)
@@ -35,3 +36,40 @@ class IntegrationIssueConfigSerializer(IntegrationSerializer):
             data['linkIssueConfig'] = installation.get_link_issue_config(self.group)
 
         return data
+
+
+class IntegrationIssueSerializer(IntegrationSerializer):
+    def __init__(self, group):
+        self.group = group
+
+    def get_attrs(self, item_list, user, *args, **kwargs):
+        external_issues = ExternalIssue.objects.filter(
+            id__in=GroupLink.objects.filter(
+                group_id=self.group.id,
+                project_id=self.group.project_id,
+                linked_type=GroupLink.LinkedType.issue,
+                relationship=GroupLink.Relationship.references,
+            ).values_list('linked_id', flat=True),
+            integration_id__in=[i.id for i in item_list],
+        )
+
+        issues_by_integration = defaultdict(list)
+        for ei in external_issues:
+            # TODO(jess): move into an external issue serializer?
+            issues_by_integration[ei.integration_id].append({
+                'id': six.text_type(ei.id),
+                'key': ei.key,
+                'title': ei.title,
+                'description': ei.description,
+            })
+
+        return {
+            item: {
+                'external_issues': issues_by_integration.get(item.id, [])
+            } for item in item_list
+        }
+
+    def serialize(self, obj, attrs, user):
+        data = super(IntegrationIssueSerializer, self).serialize(obj, attrs, user)
+        data['externalIssues'] = attrs.get('external_issues', [])
+        return data
diff --git a/tests/sentry/api/endpoints/test_group_integrations.py b/tests/sentry/api/endpoints/test_group_integrations.py
index 63824feb72..911d543e72 100644
--- a/tests/sentry/api/endpoints/test_group_integrations.py
+++ b/tests/sentry/api/endpoints/test_group_integrations.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 import six
 
-from sentry.models import Integration
+from sentry.models import ExternalIssue, GroupLink, Integration
 from sentry.testutils import APITestCase
 
 
@@ -16,6 +16,20 @@ class GroupIntegrationsTest(APITestCase):
             name='Example',
         )
         integration.add_organization(org.id)
+        external_issue = ExternalIssue.objects.create(
+            organization_id=org.id,
+            integration_id=integration.id,
+            key='APP-123',
+            title='this is an example title',
+            description='this is an example description',
+        )
+        GroupLink.objects.create(
+            group_id=group.id,
+            project_id=group.project_id,
+            linked_type=GroupLink.LinkedType.issue,
+            linked_id=external_issue.id,
+            relationship=GroupLink.Relationship.references,
+        )
 
         path = '/api/0/issues/{}/integrations/'.format(group.id)
 
@@ -30,4 +44,10 @@ class GroupIntegrationsTest(APITestCase):
                 'key': integration.get_provider().key,
                 'name': integration.get_provider().name,
             },
+            'externalIssues': [{
+                'description': 'this is an example description',
+                'id': six.text_type(external_issue.id),
+                'key': 'APP-123',
+                'title': 'this is an example title'
+            }],
         }
