commit 1c137ddb46e33e5237303e770b521bdeb375f962
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 26 13:11:45 2013 -0800

    Clean up (and correct) sourcemap logic and test

diff --git a/src/sentry/tasks/fetch_source.py b/src/sentry/tasks/fetch_source.py
index 3d557ab7f3..179037456b 100644
--- a/src/sentry/tasks/fetch_source.py
+++ b/src/sentry/tasks/fetch_source.py
@@ -129,6 +129,27 @@ def fetch_url(url, logger=None):
     return result
 
 
+def fetch_sourcemap(url, logger=None):
+    result = fetch_url(url, logger=logger)
+    if result == BAD_SOURCE:
+        return
+
+    body = result.body
+    # According to spec (https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.h7yy76c5il9v)
+    # A SouceMap may be prepended with ")]}'" to cause a Javascript error.
+    # If the file starts with that string, ignore the entire first line.
+    if body.startswith(")]}'"):
+        body = body.split('\n', 1)[1]
+    try:
+        index = sourcemap_to_index(body)
+    except JSONDecodeError:
+        if logger:
+            logger.warning('Failed parsing sourcemap JSON: %r', body[:15],
+            exc_info=True)
+    else:
+        return index
+
+
 @task(ignore_result=True)
 def fetch_javascript_source(event, **kwargs):
     """
@@ -191,21 +212,8 @@ def fetch_javascript_source(event, **kwargs):
 
         # pull down sourcemap
         if sourcemap and sourcemap not in sourcemaps:
-            result = fetch_url(sourcemap, logger=logger)
-            if result == BAD_SOURCE:
-                continue
-
-            body = result.body
-            # According to spec (https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.h7yy76c5il9v)
-            # A SouceMap may be prepended with ")]}'" to cause a Javascript error.
-            # If the file starts with that string, ignore the entire first line.
-            if body.startswith(")]}'"):
-                body = body.split('\n', 1)[1]
-            try:
-                index = sourcemap_to_index(body)
-            except JSONDecodeError:
-                logger.warning('Failed parsing sourcemap JSON: %r', body[:15],
-                    exc_info=True)
+            index = fetch_sourcemap(sourcemap, logger=logger)
+            if not index:
                 continue
 
             sourcemaps[sourcemap] = index
@@ -224,10 +232,7 @@ def fetch_javascript_source(event, **kwargs):
             continue
 
         # may have had a failure pulling down the sourcemap previously
-        if sourcemap not in sourcemaps:
-            continue
-
-        if frame.colno is not None and sourcemap:
+        if sourcemap in sourcemaps and frame.colno is not None:
             state = find_source(sourcemaps[sourcemap], frame.lineno, frame.colno)
             # TODO: is this urljoin right? (is it relative to the sourcemap or the originating file)
             abs_path = urljoin(sourcemap, state.src)
diff --git a/tests/sentry/tasks/fetch_source/tests.py b/tests/sentry/tasks/fetch_source/tests.py
index 5080096132..84c1cf0659 100644
--- a/tests/sentry/tasks/fetch_source/tests.py
+++ b/tests/sentry/tasks/fetch_source/tests.py
@@ -15,8 +15,9 @@ class StoreEventTest(TestCase):
         self.assertTrue(isinstance(fetch_javascript_source, Task))
 
     @mock.patch('sentry.models.Event.update')
-    @mock.patch('urllib2.build_opener')
-    def test_calls_from_kwargs(self, build_opener, update):
+    @mock.patch('sentry.tasks.fetch_source.fetch_url')
+    @mock.patch('sentry.tasks.fetch_source.fetch_sourcemap')
+    def test_calls_from_kwargs(self, fetch_sourcemap, fetch_url, update):
         event = Event(data={
             'sentry.interfaces.Stacktrace': {
                 'frames': [
@@ -35,13 +36,12 @@ class StoreEventTest(TestCase):
                 ],
             },
         })
-        build_opener.return_value.open.return_value.read.return_value = '\n'.join('hello world')
+        fetch_sourcemap.return_value = None
+        fetch_url.return_value.body = '\n'.join('hello world')
 
         fetch_javascript_source(event)
 
-        build_opener.assert_called_once_with()
-        build_opener.return_value.open.assert_called_once_with('http://example.com/foo.js')
-        build_opener.return_value.open.return_value.read.assert_called_once_with()
+        fetch_url.assert_called_once_with('http://example.com/foo.js')
         update.assert_called_once_with(data=event.data)
 
         frame_list = event.interfaces['sentry.interfaces.Stacktrace'].frames
