commit b9bd2a54fd0b3d1b4c3403c8c538dcd74f28a555
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Fri Mar 30 11:24:32 2018 -0700

    test(ui): Add tests for accept project transfer

diff --git a/src/sentry/static/sentry/app/__mocks__/jquery.jsx b/src/sentry/static/sentry/app/__mocks__/jquery.jsx
index 66a03f3f5a..9bc4cd42c8 100644
--- a/src/sentry/static/sentry/app/__mocks__/jquery.jsx
+++ b/src/sentry/static/sentry/app/__mocks__/jquery.jsx
@@ -6,6 +6,7 @@ let jq = {
   unbind: () => jq,
   ajaxError: () => jq,
   simpleSlider: () => jq,
+  addClass: () => jq,
 };
 
 export default () => jq;
diff --git a/tests/js/spec/views/acceptProjectTransfer.spec.jsx b/tests/js/spec/views/acceptProjectTransfer.spec.jsx
new file mode 100644
index 0000000000..5b2c107191
--- /dev/null
+++ b/tests/js/spec/views/acceptProjectTransfer.spec.jsx
@@ -0,0 +1,65 @@
+import React from 'react';
+
+import {mount} from 'enzyme';
+import AcceptProjectTransfer from 'app/views/acceptProjectTransfer';
+
+jest.mock('jquery');
+
+describe('AcceptProjectTransfer', function() {
+  let getMock;
+  let postMock;
+  let endpoint = '/accept-transfer/';
+  beforeEach(function() {
+    MockApiClient.clearMockResponses();
+
+    getMock = MockApiClient.addMockResponse({
+      url: '/accept-transfer/',
+      method: 'GET',
+      body: {
+        project: TestStubs.Project(),
+        organizations: [TestStubs.Organization({teams: [TestStubs.Team()]})],
+      },
+    });
+
+    postMock = MockApiClient.addMockResponse({
+      url: '/accept-transfer/',
+      method: 'POST',
+      statusCode: 204,
+    });
+  });
+
+  it('renders', function() {
+    mount(
+      <AcceptProjectTransfer
+        location={{
+          pathame: 'endpoint',
+          query: {data: 'XYZ'},
+        }}
+      />,
+      TestStubs.routerContext()
+    );
+
+    expect(getMock).toHaveBeenCalled();
+  });
+
+  it('submits', function() {
+    let wrapper = mount(
+      <AcceptProjectTransfer
+        location={{
+          pathame: 'endpoint',
+          query: {data: 'XYZ'},
+        }}
+      />,
+      TestStubs.routerContext()
+    );
+
+    wrapper.find('form').simulate('submit');
+
+    expect(postMock).toHaveBeenCalledWith(
+      endpoint,
+      expect.objectContaining({
+        method: 'POST',
+      })
+    );
+  });
+});
