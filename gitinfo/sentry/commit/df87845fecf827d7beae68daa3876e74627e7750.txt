commit df87845fecf827d7beae68daa3876e74627e7750
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Mon Mar 19 13:47:02 2018 -0500

    Revert "ref(tagstore): Add select_related to manager default querysets (#7607)" (#7691)
    
    This reverts commit 11b16584dd563fce6877e99d930b6982cad4effa.

diff --git a/src/sentry/tagstore/v2/backend.py b/src/sentry/tagstore/v2/backend.py
index 6c55409e20..ad85ab0757 100644
--- a/src/sentry/tagstore/v2/backend.py
+++ b/src/sentry/tagstore/v2/backend.py
@@ -358,7 +358,7 @@ class V2TagStorage(TagStorage):
     def get_tag_value(self, project_id, environment_id, key, value):
         from sentry.tagstore.exceptions import TagValueNotFound
 
-        qs = TagValue.objects.filter(
+        qs = TagValue.objects.select_related('_key').filter(
             project_id=project_id,
             _key__key=key,
             value=value,
@@ -372,7 +372,7 @@ class V2TagStorage(TagStorage):
             raise TagValueNotFound
 
     def get_tag_values(self, project_id, environment_id, key):
-        qs = TagValue.objects.filter(
+        qs = TagValue.objects.select_related('_key').filter(
             project_id=project_id,
             _key__key=key,
         )
@@ -384,7 +384,7 @@ class V2TagStorage(TagStorage):
     def get_group_tag_key(self, project_id, group_id, environment_id, key):
         from sentry.tagstore.exceptions import GroupTagKeyNotFound
 
-        qs = GroupTagKey.objects.filter(
+        qs = GroupTagKey.objects.select_related('_key').filter(
             project_id=project_id,
             group_id=group_id,
             _key__key=key,
@@ -398,7 +398,7 @@ class V2TagStorage(TagStorage):
             raise GroupTagKeyNotFound
 
     def get_group_tag_keys(self, project_id, group_id, environment_id, limit=None):
-        qs = GroupTagKey.objects.filter(
+        qs = GroupTagKey.objects.select_related('_key').filter(
             group_id=group_id,
         )
 
@@ -426,7 +426,7 @@ class V2TagStorage(TagStorage):
         return value
 
     def get_group_tag_values(self, project_id, group_id, environment_id, key):
-        qs = GroupTagValue.objects.filter(
+        qs = GroupTagValue.objects.select_related('_key', '_value').filter(
             group_id=group_id,
             _key__key=key,
         )
@@ -436,7 +436,7 @@ class V2TagStorage(TagStorage):
         return list(qs)
 
     def get_group_list_tag_value(self, project_id, group_id_list, environment_id, key, value):
-        qs = GroupTagValue.objects.filter(
+        qs = GroupTagValue.objects.select_related('_key', '_value').filter(
             project_id=project_id,
             group_id__in=group_id_list,
             _key__key=key,
@@ -676,7 +676,7 @@ class V2TagStorage(TagStorage):
             )
 
         cutoff = timezone.now() - timedelta(days=7)
-        qs = GroupTagValue.objects.filter(
+        qs = GroupTagValue.objects.select_related('_key', '_value').filter(
             group_id=group_id,
             _key__key=key,
             last_seen__gte=cutoff,
@@ -686,7 +686,7 @@ class V2TagStorage(TagStorage):
 
     def get_first_release(self, project_id, group_id):
         try:
-            first_release = GroupTagValue.objects.filter(
+            first_release = GroupTagValue.objects.select_related('_value').filter(
                 project_id=project_id,
                 group_id=group_id,
                 _key__key__in=('sentry:release', 'release'),
@@ -698,7 +698,7 @@ class V2TagStorage(TagStorage):
 
     def get_last_release(self, project_id, group_id):
         try:
-            last_release = GroupTagValue.objects.filter(
+            last_release = GroupTagValue.objects.select_related('_value').filter(
                 project_id=project_id,
                 group_id=group_id,
                 _key__key__in=('sentry:release', 'release'),
@@ -709,7 +709,7 @@ class V2TagStorage(TagStorage):
         return last_release.value
 
     def get_release_tags(self, project_ids, environment_id, versions):
-        qs = TagValue.objects.filter(
+        qs = TagValue.objects.select_related('_key').filter(
             project_id__in=project_ids,
             _key__key='sentry:release',
             value__in=versions,
@@ -733,7 +733,7 @@ class V2TagStorage(TagStorage):
             for eu in event_users
         ]
 
-        return list(GroupTagValue.objects.filter(
+        return list(GroupTagValue.objects.select_related('_value').filter(
             reduce(or_, tag_filters),
             _key__environment_id=AGGREGATE_ENVIRONMENT_ID,
             _key__key='sentry:user',
@@ -805,7 +805,7 @@ class V2TagStorage(TagStorage):
             )
 
     def get_tag_value_qs(self, project_id, environment_id, key, query=None):
-        qs = TagValue.objects.filter(
+        qs = TagValue.objects.select_related('_key').filter(
             project_id=project_id,
             _key__key=key,
         )
@@ -818,7 +818,7 @@ class V2TagStorage(TagStorage):
         return qs
 
     def get_group_tag_value_qs(self, project_id, group_id, environment_id, key, value=None):
-        qs = GroupTagValue.objects.filter(
+        qs = GroupTagValue.objects.select_related('_key', '_value').filter(
             project_id=project_id,
             _key__key=key,
         )
diff --git a/src/sentry/tagstore/v2/models/grouptagkey.py b/src/sentry/tagstore/v2/models/grouptagkey.py
index 3ae8d6dac4..557a64737a 100644
--- a/src/sentry/tagstore/v2/models/grouptagkey.py
+++ b/src/sentry/tagstore/v2/models/grouptagkey.py
@@ -17,11 +17,6 @@ from sentry.db.models import (
 )
 
 
-class GroupTagKeyManager(BaseManager):
-    def get_queryset(self):
-        return super(GroupTagKeyManager, self).get_queryset().select_related('_key')
-
-
 class GroupTagKey(Model):
     """
     Stores a unique tag key name for a group.
@@ -35,7 +30,7 @@ class GroupTagKey(Model):
     _key = FlexibleForeignKey('tagstore.TagKey', db_column='key_id')
     values_seen = BoundedPositiveIntegerField(default=0)
 
-    objects = GroupTagKeyManager()
+    objects = BaseManager()
 
     class Meta:
         app_label = 'tagstore'
diff --git a/src/sentry/tagstore/v2/models/grouptagvalue.py b/src/sentry/tagstore/v2/models/grouptagvalue.py
index da5ff21f42..cf1c050303 100644
--- a/src/sentry/tagstore/v2/models/grouptagvalue.py
+++ b/src/sentry/tagstore/v2/models/grouptagvalue.py
@@ -18,12 +18,6 @@ from sentry.db.models import (
 )
 
 
-class GroupTagValueManager(BaseManager):
-    def get_queryset(self):
-        return super(GroupTagValueManager, self)\
-            .get_queryset().select_related('_value', '_key')
-
-
 class GroupTagValue(Model):
     """
     Stores the total number of messages seen by a group matching
@@ -41,7 +35,7 @@ class GroupTagValue(Model):
     first_seen = models.DateTimeField(
         default=timezone.now, db_index=True, null=True)
 
-    objects = GroupTagValueManager()
+    objects = BaseManager()
 
     class Meta:
         app_label = 'tagstore'
diff --git a/src/sentry/tagstore/v2/models/tagvalue.py b/src/sentry/tagstore/v2/models/tagvalue.py
index 3d4a892772..ef285dd644 100644
--- a/src/sentry/tagstore/v2/models/tagvalue.py
+++ b/src/sentry/tagstore/v2/models/tagvalue.py
@@ -22,11 +22,6 @@ from sentry.utils.cache import cache
 from sentry.utils.hashlib import md5_text
 
 
-class TagValueManager(BaseManager):
-    def get_queryset(self):
-        return super(TagValueManager, self).get_queryset().select_related('_key')
-
-
 class TagValue(Model):
     """
     Stores references to available filters.
@@ -43,7 +38,7 @@ class TagValue(Model):
     first_seen = models.DateTimeField(
         default=timezone.now, db_index=True, null=True)
 
-    objects = TagValueManager()
+    objects = BaseManager()
 
     class Meta:
         app_label = 'tagstore'
