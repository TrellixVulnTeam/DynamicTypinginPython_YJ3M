commit 856e738412c3f66fa01801244d3879f312bdd7b1
Author: Ben Vinegar <ben@benv.ca>
Date:   Thu Feb 18 13:06:24 2016 -0800

    Make error-page-embed.js lintable; fix lint failures

diff --git a/src/sentry/templates/sentry/error-page-embed.js b/src/sentry/templates/sentry/error-page-embed.js
index 4f9ba5d1c3..3854bc682a 100644
--- a/src/sentry/templates/sentry/error-page-embed.js
+++ b/src/sentry/templates/sentry/error-page-embed.js
@@ -1,3 +1,5 @@
+/*eslint no-var:0,strict:0,block-scoped-var:0*/
+/*global sentryEmbedCallback:false*/
 (function(window, document, JSON){
   'use strict';
   // TODO(dcramer): expose API for building a new error embed so things like
@@ -17,20 +19,15 @@
   // XMLHttpRequest.DONE does not exist in all browsers
   var XHR_DONE = 4;
 
-  var template = {{ template }};
-  var endpoint = {{ endpoint }};
-  var encode = window.encodeURIComponent;
-
-  var escape = function(str) {
-    return str.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
-  };
+  var template = /*{{ template }}*/'';
+  var endpoint = /*{{ endpoint }}*/'';
 
   var serialize = function(form) {
     var q = [];
     for (var i = 0; i < form.elements.length; i++) {
-      q.push(form.elements[i].name + "=" + encodeURIComponent(form.elements[i].value));
+      q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value));
     }
-    return q.join("&");
+    return q.join('&');
   };
 
   var onReady = function(f) {
@@ -59,14 +56,15 @@
       self.submit(self.serialize());
     };
 
-    this._submitBtn = this.element.getElementsByTagName('button')[0]
+    this._submitBtn = this.element.getElementsByTagName('button')[0];
     this._submitBtn.onclick = function(e) {
       e.preventDefault();
       self.submit(self.serialize());
     };
 
     var divTags = this._form.getElementsByTagName('div');
-    for (var i = 0; i < divTags.length; i++) {
+    var i;
+    for (i = 0; i < divTags.length; i++) {
       if (divTags[i].className === 'error-wrapper') {
         this._errorWrapper = divTags[i];
       }
@@ -76,18 +74,21 @@
     }
 
     var linkTags = this.element.getElementsByTagName('a');
-    for (var i = 0; i < linkTags.length; i++) {
+
+    var onclickHandler = function(e) {
+      e.preventDefault();
+      self.close();
+    };
+
+    for (i = 0; i < linkTags.length; i++) {
       if (linkTags[i].className === 'close') {
-        linkTags[i].onclick = function(e) {
-          e.preventDefault();
-          self.close();
-        };
+        linkTags[i].onclick = onclickHandler;
       }
     }
 
     this._formMap = {};
     var node;
-    for (var i = 0; i < this._form.elements.length; i++) {
+    for (i = 0; i < this._form.elements.length; i++) {
       node = this._form.elements[i];
       this._formMap[node.name] = node.parentNode;
     }
@@ -120,7 +121,7 @@
         self._submitInProgress = false;
       }
     };
-    xhr.open("POST", endpoint, true);
+    xhr.open('POST', endpoint, true);
     xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
     xhr.send(body);
   };
@@ -129,22 +130,22 @@
     this._errorWrapper.innerHTML = '';
     this._formContent.innerHTML = '<p class="message-success">Your feedback has been sent. Thank you!</p>';
     this._submitBtn.parentNode.removeChild(this._submitBtn);
-  },
+  };
 
   SentryErrorEmbed.prototype.onFormError = function (data) {
     var node;
     for (var key in this._formMap) {
-      node = this._formMap[key]
+      node = this._formMap[key];
       if (data.errors[key]) {
         if (!/form-errors/.test(node.className)) {
-          node.className += " form-errors";
+          node.className += ' form-errors';
         }
       } else if (/form-errors/.test(node.className)) {
-        node.className = node.className.replace(/form-errors/, "");
+        node.className = node.className.replace(/form-errors/, '');
       }
     }
     this._errorWrapper.innerHTML = FORM_ERROR;
-  },
+  };
 
   SentryErrorEmbed.prototype.attach = function(parent) {
     parent.appendChild(this.element);
diff --git a/src/sentry/web/frontend/error_page_embed.py b/src/sentry/web/frontend/error_page_embed.py
index 6ce6c0f74f..7465a1b604 100644
--- a/src/sentry/web/frontend/error_page_embed.py
+++ b/src/sentry/web/frontend/error_page_embed.py
@@ -111,8 +111,8 @@ class ErrorPageEmbedView(View):
         })
 
         context = {
-            'endpoint': mark_safe(json.dumps(request.get_full_path())),
-            'template': mark_safe(json.dumps(template)),
+            'endpoint': mark_safe('*/' + json.dumps(request.get_full_path()) + ';/*'),
+            'template': mark_safe('*/' + json.dumps(template) + ';/*'),
         }
 
         return render_to_response('sentry/error-page-embed.js', context, request,
