commit dda968882028bdae3216fb2666855c5859bdd5d4
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 25 19:59:49 2012 -0700

    Initial work on social auth integration

diff --git a/sentry/conf/server.py b/sentry/conf/server.py
index 709fc45724..93e059a267 100644
--- a/sentry/conf/server.py
+++ b/sentry/conf/server.py
@@ -119,6 +119,15 @@ TEMPLATE_DIRS = (
     os.path.join(PROJECT_ROOT, 'templates'),
 )
 
+TEMPLATE_CONTEXT_PROCESSORS = (
+    'django.contrib.auth.context_processors.auth',
+    'django.core.context_processors.csrf',
+    'social_auth.context_processors.social_auth_by_name_backends',
+    'social_auth.context_processors.social_auth_backends',
+    'social_auth.context_processors.social_auth_by_type_backends',
+    'social_auth.context_processors.social_auth_login_redirect'
+)
+
 INSTALLED_APPS = (
     'django.contrib.auth',
     'django.contrib.admin',
@@ -138,11 +147,67 @@ INSTALLED_APPS = (
     'sentry.plugins.sentry_urls',
     'sentry.plugins.sentry_user_emails',
     'sentry.plugins.sentry_useragents',
+    'social_auth',
     'south',
 )
 
 ADMIN_MEDIA_PREFIX = '/_admin_media/'
 
+# Auth configuration
+
+try:
+    from django.core.urlresolvers import reverse_lazy
+except ImportError:
+    LOGIN_REDIRECT_URL = '/login-redirect/'
+    LOGIN_URL = '/login/'
+else:
+    LOGIN_REDIRECT_URL = reverse_lazy('sentry-login-redirect')
+    LOGIN_URL = reverse_lazy('sentry-login')
+
+AUTHENTICATION_BACKENDS = (
+    'social_auth.backends.twitter.TwitterBackend',
+    'social_auth.backends.facebook.FacebookBackend',
+    'social_auth.backends.google.GoogleOAuthBackend',
+    'social_auth.backends.google.GoogleOAuth2Backend',
+    'social_auth.backends.google.GoogleBackend',
+    'social_auth.backends.yahoo.YahooBackend',
+    'social_auth.backends.browserid.BrowserIDBackend',
+    'social_auth.backends.contrib.linkedin.LinkedinBackend',
+    'social_auth.backends.contrib.livejournal.LiveJournalBackend',
+    'social_auth.backends.contrib.orkut.OrkutBackend',
+    'social_auth.backends.contrib.foursquare.FoursquareBackend',
+    'social_auth.backends.contrib.github.GithubBackend',
+    'social_auth.backends.contrib.dropbox.DropboxBackend',
+    'social_auth.backends.contrib.flickr.FlickrBackend',
+    'social_auth.backends.contrib.instagram.InstagramBackend',
+    'social_auth.backends.contrib.vkontakte.VKontakteBackend',
+    'social_auth.backends.contrib.skyrock.SkyrockBackend',
+    'social_auth.backends.contrib.yahoo.YahooOAuthBackend',
+    'social_auth.backends.OpenIDBackend',
+    'social_auth.backends.contrib.bitbucket.BitbucketBackend',
+    'social_auth.backends.contrib.mixcloud.MixcloudBackend',
+    'social_auth.backends.contrib.live.LiveBackend',
+    'django.contrib.auth.backends.ModelBackend',
+)
+
+TWITTER_CONSUMER_KEY = ''
+TWITTER_CONSUMER_SECRET = ''
+
+FACEBOOK_APP_ID = ''
+FACEBOOK_API_SECRET = ''
+FACEBOOK_EXTENDED_PERMISSIONS = ['email']
+
+GOOGLE_OAUTH2_CLIENT_ID = ''
+GOOGLE_OAUTH2_CLIENT_SECRET = ''
+
+GITHUB_APP_ID = ''
+GITHUB_API_SECRET = ''
+
+import random
+
+SOCIAL_AUTH_DEFAULT_USERNAME = lambda: random.choice(['Darth Vader', 'Obi-Wan Kenobi', 'R2-D2', 'C-3PO', 'Yoda'])
+SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email']
+
 # Queue configuration
 
 BROKER_URL = "django://"
diff --git a/sentry/conf/urls.py b/sentry/conf/urls.py
index b41e97c51a..7d8d16c3f1 100644
--- a/sentry/conf/urls.py
+++ b/sentry/conf/urls.py
@@ -39,8 +39,9 @@ def handler500(request):
     return HttpResponseServerError(t.render(Context(context)))
 
 urlpatterns = patterns('',
-    (r'^i18n/', include('django.conf.urls.i18n')),
-    (r'^admin/', include(admin.site.urls)),
+    url(r'^i18n/', include('django.conf.urls.i18n')),
+    url(r'^admin/', include(admin.site.urls)),
+    url(r'', include('social_auth.urls')),
     url(r'^_admin_media/(?P<path>.*)$', generic.static_media,
         kwargs={'root': admin_media_dir},
         name='admin-media'),
diff --git a/sentry/models.py b/sentry/models.py
index bd7e86baac..39c5968a4e 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -882,3 +882,10 @@ pre_delete.connect(
     dispatch_uid="remove_key_for_team_member",
     weak=False,
 )
+
+try:
+    import south
+    from south.modelsinspector import add_introspection_rules
+    add_introspection_rules([], ["^social_auth\.fields\.JSONField"])
+except:
+    pass
diff --git a/sentry/static/images/auth/facebook_signin.png b/sentry/static/images/auth/facebook_signin.png
new file mode 100755
index 0000000000..4d82d0d3b3
Binary files /dev/null and b/sentry/static/images/auth/facebook_signin.png differ
diff --git a/sentry/static/images/auth/twitter_signin.png b/sentry/static/images/auth/twitter_signin.png
new file mode 100755
index 0000000000..e39c421ede
Binary files /dev/null and b/sentry/static/images/auth/twitter_signin.png differ
diff --git a/sentry/templates/sentry/login.html b/sentry/templates/sentry/login.html
index 7aa000fb36..3c65ed6457 100644
--- a/sentry/templates/sentry/login.html
+++ b/sentry/templates/sentry/login.html
@@ -25,17 +25,36 @@
             </div>
         {% endif %}
 
-        <form class="form-stacked" action="" method="post">
-            {% csrf_token %}
-            <input type="hidden" name="next" value="{{ next }}" />
-
-            {% for field in form %}
-                {% include "sentry/partial/_form_field.html" %}
-            {% endfor %}
-
-            <fieldset class="form-actions">
-                <button type="submit" class="btn btn-primary">{% trans "Login" %}</button>
-            </fieldset>
-        </form>
+        <div class="row">
+            <div class="span6">
+                <form class="form-stacked" action="" method="post">
+                    <fieldset>
+                        <legend>Login with your Sentry account</legend>
+                    </fieldset>
+                    {% csrf_token %}
+                    <input type="hidden" name="next" value="{{ next }}" />
+
+                    {% for field in form %}
+                        {% include "sentry/partial/_form_field.html" %}
+                    {% endfor %}
+
+                    <fieldset class="form-actions">
+                        <button type="submit" class="btn btn-primary">{% trans "Login" %}</button>
+                    </fieldset>
+                </form>
+            </div>
+            {% if auth_engines %}
+                <div class="span6">
+                    <fieldset>
+                        <legend>Login with another account</legend>
+                    </fieldset>
+                    <ul class="auth-options">
+                        {% for engine in auth_engines %}
+                            <li><a href="{% url socialauth_begin engine %}" class="auth-{{ engine }}">Sign in with {{ engine|title }}</a></li>
+                        {% endfor %}
+                    </ul>
+                </div>
+            {% endif %}
+        </div>
     </section>
 {% endblock %}
diff --git a/sentry/utils/runner.py b/sentry/utils/runner.py
index f4c0cea77a..d7ea46d6dc 100644
--- a/sentry/utils/runner.py
+++ b/sentry/utils/runner.py
@@ -63,6 +63,22 @@ EMAIL_HOST_PASSWORD = ''
 EMAIL_HOST_USER = ''
 EMAIL_PORT = 25
 EMAIL_USE_TLS = False
+
+# http://twitter.com/apps/new
+TWITTER_CONSUMER_KEY = ''
+TWITTER_CONSUMER_SECRET = ''
+
+# http://developers.facebook.com/setup/
+FACEBOOK_APP_ID = ''
+FACEBOOK_API_SECRET = ''
+
+# http://code.google.com/apis/accounts/docs/OAuth2.html#Registering
+GOOGLE_OAUTH2_CLIENT_ID = ''
+GOOGLE_OAUTH2_CLIENT_SECRET = ''
+
+# https://github.com/settings/applications/new
+GITHUB_APP_ID = ''
+GITHUB_API_SECRET = ''
 """
 
 
diff --git a/sentry/web/frontend/accounts.py b/sentry/web/frontend/accounts.py
index a56db11699..c7c0ac82f1 100644
--- a/sentry/web/frontend/accounts.py
+++ b/sentry/web/frontend/accounts.py
@@ -19,6 +19,14 @@ from sentry.web.helpers import render_to_response
 from sentry.utils.safe import safe_execute
 
 
+AUTH_ENGINES = {
+    'twitter': ('TWITTER_CONSUMER_KEY', 'TWITTER_CONSUMER_SECRET'),
+    'facebook': ('FACEBOOK_APP_ID', 'FACEBOOK_API_SECRET'),
+    'github': ('GITHUB_APP_ID', 'GITHUB_APP_SECRET'),
+    'google': ('GOOGLE_OAUTH2_CLIENT_ID', 'GOOGLE_OAUTH2_CLIENT_SECRET'),
+}
+
+
 @csrf_protect
 def login(request):
     from django.contrib.auth import login as login_
@@ -27,18 +35,29 @@ def login(request):
     form = AuthenticationForm(request, request.POST or None)
     if form.is_valid():
         login_(request, form.get_user())
-        return HttpResponseRedirect(request.session.pop('_next', None) or reverse('sentry'))
+        return login_redirect(request)
     else:
         request.session.set_test_cookie()
 
+    auth_engines = [key
+        for key, cfg_names
+        in AUTH_ENGINES.iteritems()
+        if all(getattr(dj_settings, c, None) for c in cfg_names)]
+
     context = csrf(request)
     context.update({
         'form': form,
         'next': request.session.get('_next'),
+        'auth_engines': auth_engines,
     })
     return render_to_response('sentry/login.html', context, request)
 
 
+@login_required
+def login_redirect(request):
+    return HttpResponseRedirect(request.session.pop('_next', None) or reverse('sentry'))
+
+
 def logout(request):
     from django.contrib.auth import logout
 
diff --git a/sentry/web/urls.py b/sentry/web/urls.py
index 8db5484f6a..d2ea32f908 100644
--- a/sentry/web/urls.py
+++ b/sentry/web/urls.py
@@ -47,6 +47,7 @@ urlpatterns = patterns('',
     # Account
 
     url(r'^login/$', accounts.login, name='sentry-login'),
+    url(r'^login-redirect/$', accounts.login_redirect, name='sentry-login-redirect'),
     url(r'^logout/$', accounts.logout, name='sentry-logout'),
     url(r'^account/settings/$', accounts.settings, name='sentry-account-settings'),
     url(r'^account/settings/notifications/$', accounts.notification_settings, name='sentry-account-settings-notifications'),
diff --git a/setup.py b/setup.py
index e4cd540bf0..aded18abc3 100755
--- a/setup.py
+++ b/setup.py
@@ -65,7 +65,8 @@ install_requires = [
     'raven>=2.0.3',
     'simplejson>=2.3.0,<2.5.0',
     'South>=0.7',
-    'httpagentparser>=1.0.5'
+    'httpagentparser>=1.0.5',
+    'django-social-auth>=0.7.1,<1.0',
 ]
 
 dependency_links = [
