commit b9fa8ac87b7c21a1f5174dfc6fc8956400c9bdae
Author: WoLpH <Rick@Fawo.nl>
Date:   Sun Feb 13 05:10:06 2011 +0000

    Added automatic request to loghandler

diff --git a/sentry/client/handlers.py b/sentry/client/handlers.py
index e3c9f79520..5a766390f5 100644
--- a/sentry/client/handlers.py
+++ b/sentry/client/handlers.py
@@ -4,6 +4,10 @@ import sys
 class SentryHandler(logging.Handler):
     def emit(self, record):
         from sentry.client.models import get_client
+        from sentry.client.middleware import SentryLogMiddleware
+
+        # Fetch the request from a threadlocal variable, if available
+        request = getattr(SentryLogMiddleware.thread, 'request', None)
 
         # Avoid typical config issues by overriding loggers behavior
         if record.name == 'sentry.errors':
@@ -11,7 +15,7 @@ class SentryHandler(logging.Handler):
             print >> sys.stderr, record.message
             return
 
-        get_client().create_from_record(record)
+        get_client().create_from_record(record,request=request)
 
 try:
     import logbook
@@ -37,4 +41,5 @@ else:
             client = get_client()
             if record.exc_info:
                 return client.create_from_exception(record.exc_info, **kwargs)
-            return client.create_from_text(**kwargs)
\ No newline at end of file
+            return client.create_from_text(**kwargs)
+
diff --git a/sentry/client/middleware.py b/sentry/client/middleware.py
index c5e3114aee..b87f2e0821 100644
--- a/sentry/client/middleware.py
+++ b/sentry/client/middleware.py
@@ -1,5 +1,5 @@
 from sentry.client.models import get_client
-
+import threading
 import logging
 
 class Sentry404CatchMiddleware(object):
@@ -24,3 +24,11 @@ class SentryResponseErrorIdMiddleware(object):
             return response
         response['X-Sentry-ID'] = request.sentry['id']
         return response
+
+class SentryLogMiddleware(object):
+    # Create a threadlocal variable to store the session in for logging
+    thread = threading.local()
+
+    def process_request(self, request):
+        self.thread.request = request
+
