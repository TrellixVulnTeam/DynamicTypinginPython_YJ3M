commit e719f7487996c3e73b5c02887536db20ebb61f5f
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 24 13:51:46 2016 -0700

    Improve handling of selenium errors

diff --git a/src/sentry/utils/pytest.py b/src/sentry/utils/pytest.py
index 18c6f005c8..26acfc2d9d 100644
--- a/src/sentry/utils/pytest.py
+++ b/src/sentry/utils/pytest.py
@@ -157,26 +157,6 @@ def pytest_runtest_teardown(item):
     discard_all()
 
 
-# TODO(dcramer): ideally we could bundle up more of the browser logic here
-# rather than splitting it between the fixtures and AcceptanceTestCase
-@pytest.fixture(scope='session')
-def percy(request, browser):
-    import percy
-
-    # Initialize Percy.
-    loader = percy.ResourceLoader(
-        root_dir=settings.STATIC_ROOT,
-        base_url=urllib.quote(settings.STATIC_URL),
-        webdriver=browser,
-    )
-    percy_config = percy.Config(default_widths=settings.PERCY_DEFAULT_TESTING_WIDTHS)
-    percy = percy.Runner(loader=loader, config=percy_config)
-    percy.initialize_build()
-
-    request.addfinalizer(percy.finalize_build)
-    return percy
-
-
 @pytest.fixture(scope='session')
 def browser(request, live_server):
     # Initialize Selenium.
@@ -192,7 +172,10 @@ def browser(request, live_server):
 
     def fin():
         # Teardown Selenium.
-        browser.close()
+        try:
+            browser.close()
+        except Exception:
+            pass
         # TODO: remove this when fixed in: https://github.com/seleniumhq/selenium/issues/767
         browser.service.process.send_signal(signal.SIGTERM)
         browser.quit()
@@ -201,6 +184,26 @@ def browser(request, live_server):
     return browser
 
 
+# TODO(dcramer): ideally we could bundle up more of the browser logic here
+# rather than splitting it between the fixtures and AcceptanceTestCase
+@pytest.fixture(scope='session')
+def percy(request, browser):
+    import percy
+
+    # Initialize Percy.
+    loader = percy.ResourceLoader(
+        root_dir=settings.STATIC_ROOT,
+        base_url=urllib.quote(settings.STATIC_URL),
+        webdriver=browser,
+    )
+    percy_config = percy.Config(default_widths=settings.PERCY_DEFAULT_TESTING_WIDTHS)
+    percy = percy.Runner(loader=loader, config=percy_config)
+    percy.initialize_build()
+
+    request.addfinalizer(percy.finalize_build)
+    return percy
+
+
 @pytest.fixture(scope='class')
 def live_server_class(request, live_server):
     request.cls.live_server = live_server
