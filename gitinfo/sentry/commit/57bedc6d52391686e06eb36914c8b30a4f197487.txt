commit 57bedc6d52391686e06eb36914c8b30a4f197487
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Jan 31 10:16:21 2019 -0800

    feat(discover): Replace coming soon with no access message (#11809)
    
    It's not coming soon anymore.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/index.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/index.jsx
index 4e357abbc2..34d5cc35d4 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/index.jsx
@@ -1,12 +1,14 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import {Flex} from 'grid-emotion';
 import {browserHistory} from 'react-router';
 import DocumentTitle from 'react-document-title';
 import SentryTypes from 'app/sentryTypes';
 
+import {t} from 'app/locale';
 import {updateProjects, updateDateTime} from 'app/actionCreators/globalSelection';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
+import Feature from 'app/components/acl/feature';
+import Alert from 'app/components/alert';
 
 import Discover from './discover';
 import createQueryBuilder from './queryBuilder';
@@ -154,12 +156,8 @@ class OrganizationDiscoverContainer extends React.Component {
     });
   };
 
-  renderComingSoon() {
-    return (
-      <Flex className="organization-home" justify="center" align="center">
-        something is happening here soon :)
-      </Flex>
-    );
+  renderNoAccess() {
+    return <Alert type="warning">{t("You don't have access to this feature")}</Alert>;
   }
 
   render() {
@@ -168,26 +166,29 @@ class OrganizationDiscoverContainer extends React.Component {
     const {location, params} = this.props;
 
     const {organization} = this.context;
-    const hasFeature = new Set(organization.features).has('discover');
-
-    if (!hasFeature) return this.renderComingSoon();
 
     return (
       <DocumentTitle title={`Discover - ${organization.slug} - Sentry`}>
-        <DiscoverWrapper>
-          <Discover
-            isLoading={isLoading}
-            organization={organization}
-            queryBuilder={this.queryBuilder}
-            location={location}
-            params={params}
-            savedQuery={savedQuery}
-            isEditingSavedQuery={this.props.location.query.editing === 'true'}
-            updateSavedQueryData={this.updateSavedQuery}
-            view={view}
-            toggleEditMode={this.toggleEditMode}
-          />
-        </DiscoverWrapper>
+        <Feature
+          features={['organizations:discover']}
+          organization={organization}
+          renderDisabled={this.renderNoAccess}
+        >
+          <DiscoverWrapper>
+            <Discover
+              isLoading={isLoading}
+              organization={organization}
+              queryBuilder={this.queryBuilder}
+              location={location}
+              params={params}
+              savedQuery={savedQuery}
+              isEditingSavedQuery={this.props.location.query.editing === 'true'}
+              updateSavedQueryData={this.updateSavedQuery}
+              view={view}
+              toggleEditMode={this.toggleEditMode}
+            />
+          </DiscoverWrapper>
+        </Feature>
       </DocumentTitle>
     );
   }
diff --git a/tests/js/spec/views/organizationDiscover/index.spec.jsx b/tests/js/spec/views/organizationDiscover/index.spec.jsx
index e321666995..b3791bd390 100644
--- a/tests/js/spec/views/organizationDiscover/index.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/index.spec.jsx
@@ -134,7 +134,7 @@ describe('OrganizationDiscoverContainer', function() {
   });
 
   describe('no access', function() {
-    it('display coming soon message', async function() {
+    it('display no access message', async function() {
       const organization = TestStubs.Organization({projects: [TestStubs.Project()]});
       const wrapper = mount(
         <OrganizationDiscoverContainer
@@ -144,7 +144,7 @@ describe('OrganizationDiscoverContainer', function() {
         />,
         TestStubs.routerContext([{organization}])
       );
-      expect(wrapper.text()).toBe('something is happening here soon :)');
+      expect(wrapper.text()).toBe("You don't have access to this feature");
     });
   });
 });
