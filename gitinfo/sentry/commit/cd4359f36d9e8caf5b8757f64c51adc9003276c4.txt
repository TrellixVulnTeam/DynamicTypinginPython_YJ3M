commit cd4359f36d9e8caf5b8757f64c51adc9003276c4
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Tue Aug 7 19:00:54 2018 -0700

    fix(vsts): Use correct model for outbound status sync

diff --git a/src/sentry/integrations/vsts/issues.py b/src/sentry/integrations/vsts/issues.py
index 217e7e390d..4940303af6 100644
--- a/src/sentry/integrations/vsts/issues.py
+++ b/src/sentry/integrations/vsts/issues.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 import six
 from mistune import markdown
 
-from sentry.models import ProjectIntegration
+from sentry.models import IntegrationExternalProject, OrganizationIntegration
 from sentry.integrations.issues import IssueSyncMixin
 
 from sentry.integrations.exceptions import ApiUnauthorized, ApiError
@@ -138,18 +138,46 @@ class VstsIssueSync(IssueSyncMixin):
             )
 
     def sync_status_outbound(self, external_issue, is_resolved, project_id, **kwargs):
-        project_integration = ProjectIntegration.objects.get(
-            integration_id=external_issue.integration_id,
-            project_id=project_id,
-        )
+        client = self.get_client()
+        work_item = client.get_work_item(self.instance, external_issue.key)
+
+        # For some reason, vsts doesn't include the project id
+        # in the work item response.
+        # TODO(jess): figure out if there's a better way to do this
+        vsts_project_name = work_item['fields']['System.TeamProject']
+
+        vsts_projects = client.get_projects(self.instance)['value']
+
+        vsts_project_id = None
+        for p in vsts_projects:
+            if p['name'] == vsts_project_name:
+                vsts_project_id = p['id']
+                break
 
-        status_name = 'resolve_status' if is_resolved else 'regression_status'
         try:
-            status = project_integration.config[status_name]
-        except KeyError:
+            external_project = IntegrationExternalProject.objects.get(
+                external_id=vsts_project_id,
+                organization_integration_id__in=OrganizationIntegration.objects.filter(
+                    organization_id=external_issue.organization_id,
+                    integration_id=external_issue.integration_id,
+                )
+            )
+        except IntegrationExternalProject.DoesNotExist:
+            self.logger.info(
+                'vsts.external-project-not-found',
+                extra={
+                    'integration_id': external_issue.integration_id,
+                    'is_resolved': is_resolved,
+                    'issue_key': external_issue.key,
+                }
+            )
             return
+
+        status = external_project.resolved_status if \
+            is_resolved else external_project.unresolved_status
+
         try:
-            self.get_client().update_work_item(
+            client.update_work_item(
                 self.instance, external_issue.key, state=status)
         except (ApiUnauthorized, ApiError) as error:
             self.logger.info(
diff --git a/tests/sentry/integrations/vsts/test_issues.py b/tests/sentry/integrations/vsts/test_issues.py
index 0ca36069d9..38de070788 100644
--- a/tests/sentry/integrations/vsts/test_issues.py
+++ b/tests/sentry/integrations/vsts/test_issues.py
@@ -7,11 +7,14 @@ from django.test import RequestFactory
 from time import time
 
 from sentry.integrations.vsts.integration import VstsIntegration
-from sentry.models import ExternalIssue, Identity, IdentityProvider, Integration
+from sentry.models import (
+    ExternalIssue, Identity, IdentityProvider, Integration,
+    IntegrationExternalProject
+)
 from sentry.testutils import TestCase
 from sentry.utils import json
 
-from .testutils import WORK_ITEM_RESPONSE, GET_USERS_RESPONSE
+from .testutils import WORK_ITEM_RESPONSE, GET_PROJECTS_RESPONSE, GET_USERS_RESPONSE
 
 
 class VstsIssueSycnTest(TestCase):
@@ -167,6 +170,18 @@ class VstsIssueSycnTest(TestCase):
             body=GET_USERS_RESPONSE,
             content_type='application/json',
         )
+        responses.add(
+            responses.GET,
+            'https://fabrikam-fiber-inc.visualstudio.com/DefaultCollection/_apis/wit/workitems/%d' % vsts_work_item_id,
+            body=WORK_ITEM_RESPONSE,
+            content_type='application/json',
+        )
+        responses.add(
+            responses.GET,
+            'https://fabrikam-fiber-inc.visualstudio.com/DefaultCollection/_apis/projects',
+            body=GET_PROJECTS_RESPONSE,
+            content_type='application/json',
+        )
 
         external_issue = ExternalIssue.objects.create(
             organization_id=self.organization.id,
@@ -175,12 +190,19 @@ class VstsIssueSycnTest(TestCase):
             title='I\'m a title!',
             description='I\'m a description.'
         )
+
+        IntegrationExternalProject.objects.create(
+            external_id='ac7c05bb-7f8e-4880-85a6-e08f37fd4a10',
+            organization_integration_id=self.integration.org_integration.id,
+            resolved_status='Resolved',
+            unresolved_status='New',
+        )
         self.integration.sync_status_outbound(external_issue, True, self.project.id)
-        assert len(responses.calls) == 1
-        req = responses.calls[0].request
+        assert len(responses.calls) == 3
+        req = responses.calls[2].request
         assert req.url == 'https://fabrikam-fiber-inc.visualstudio.com/DefaultCollection/_apis/wit/workitems/%d' % vsts_work_item_id
         assert req.body == '[{"path": "/fields/System.State", "value": "Resolved", "op": "replace"}]'
-        assert responses.calls[0].response.status_code == 200
+        assert responses.calls[2].response.status_code == 200
 
     def test_get_issue_url(self):
         work_id = 345
diff --git a/tests/sentry/integrations/vsts/testutils.py b/tests/sentry/integrations/vsts/testutils.py
index ad23ef7730..d226dfafb2 100644
--- a/tests/sentry/integrations/vsts/testutils.py
+++ b/tests/sentry/integrations/vsts/testutils.py
@@ -726,3 +726,15 @@ WORK_ITEM_STATES = {
         }
     ]
 }
+
+GET_PROJECTS_RESPONSE = """{
+    "count": 1,
+    "value": [{
+        "id": "ac7c05bb-7f8e-4880-85a6-e08f37fd4a10",
+        "name": "Fabrikam-Fiber-Git",
+        "url": "https://jess-dev.visualstudio.com/_apis/projects/ac7c05bb-7f8e-4880-85a6-e08f37fd4a10",
+        "state": "wellFormed",
+        "revision": 16,
+        "visibility": "private"
+    }]
+}"""
