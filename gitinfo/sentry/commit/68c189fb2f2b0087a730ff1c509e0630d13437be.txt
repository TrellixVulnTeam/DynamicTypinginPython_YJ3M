commit 68c189fb2f2b0087a730ff1c509e0630d13437be
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Dec 14 21:32:45 2012 -0800

    Improve contributing docs

diff --git a/docs/contributing/index.rst b/docs/contributing/index.rst
index 8a4c23cd7e..fe9e337a03 100644
--- a/docs/contributing/index.rst
+++ b/docs/contributing/index.rst
@@ -4,79 +4,85 @@ Contributing
 Want to contribute back to Sentry? This page describes the general development flow,
 our philosophy, the test suite, and issue tracking.
 
-(Though it actually doesn't describe all of that, yet)
-
-Coding Standards
-----------------
-
-Sentry follows the guidelines layed out in `pep8 <http://www.python.org/dev/peps/pep-0008/>`_  with a little bit
-of flexibility on things like line length. We always give way for the `Zen of Python <http://www.python.org/dev/peps/pep-0020/>`_.
 
 Localization
 ------------
 
 If you're just looking to help translate Sentry, apply for membership via `Transifex <https://www.transifex.com/projects/p/sentry/>`_.
 
-Setting up an Environment
--------------------------
 
-Sentry is designed to run off of setuptools with minimal work. Because of this
-setting up a development environment for Sentry requires only a few steps.
+Developing Against HEAD
+-----------------------
 
-Start by installing the required dependencies:
+We try to make it easy to get up and running in a development environment using a git checkout
+of Sentry. You'll want to make sure you have a few things on your local system first:
 
-- python-dev
-- npm
-- virtualenv
+* python-dev (if you're on OS X, you already have this)
+* pip
+* virtualenv (ideally virtualenvwrapper)
+* node.js (for npm and building css/javascript)
+* (Optional) Redis
+* (Optional) Potgresql
 
-One done, create a virtualenv, and bootstrap the environment:
+Once you've got all that, the rest is simple:
 
 ::
 
-    virtualenv ~/.virtualenvs/sentry
-    source ~/.virtualenvs/sentry/bin/activate
-    make  # bootstrap the environment (npm, pip reqs, etc)
+    # If you have a fork, you'll want to clone it instead
+    git clone git://github.com/getsentry/sentry.git
 
-Running the Test Suite
-----------------------
+    # Create a python virtualenv
+    mkvirtualenv sentry
 
-The test suite is also powered off of setuptools, and can be run in two fashions. The
-easiest is to simply use setuptools and its ``test`` command. This will handle installing
-any dependancies you're missing automatically.
+    # Make the magic happen
+    make
 
-::
+Running ``make`` will do several things, including:
 
-    python setup.py test
+* Setting up any submodules (including Bootstrap)
+* Installing Python requirements
+* Installing NPM requirements
 
-If you've already installed the dependancies, or don't care about certain tests which will
-be skipped without them, you can also run tests in a more verbose way.
+Create a default Sentry configation just as if this were a production instance:
 
 ::
 
-    python runtests.py
+    sentry init
 
-The ``runtests.py`` command has several options, and if you're familiar w/ Django you should feel
-right at home.
+Voila! You're all set to begin developing!
 
-::
 
-    # Stop immediately on a failure
-    python runtests.py --failfast
+Coding Standards
+----------------
 
-::
+Sentry follows the guidelines layed out in `pep8 <http://www.python.org/dev/peps/pep-0008/>`_  with a little bit
+of flexibility on things like line length. We always give way for the `Zen of Python <http://www.python.org/dev/peps/pep-0020/>`_. We also use strict mode for JavaScript, enforced by jshint.
+
+You can run all linters with ``make lint``, or respectively ``lint-python`` or ``lint-js``.
+
+
+Running the Test Suite
+----------------------
 
-    # Run only SentryRemoteTest
-    python runtests.py sentry.SentryRemoteTest
+The test suite consists of multiple parts, testing both the Python and JavaScript components in Sentry. If you've setup your environment correctly, you can run the entire suite with the following command:
 
 ::
 
-    # Run only the testTimestamp test on SentryRemoteTest
-    python runtests.py sentry.SentryRemoteTest.testTimestamp
+    make test
+
+If you only need to run the Python tests, you can do so with ``make test-python``, as well as ``test-js`` for the JavaScript tests.
+
+
+You'll notice that the test suite is structured based on where the code lives, and strongly encourages using the mock library to drive more accurate individual tests.
+
+.. note:: We use py.test for the Python test suite, and a combination of phantomjs and jasmine for the JavaScript tests.
 
 
 Contributing Back Code
 ----------------------
 
-Ideally all patches should be sent as a pull request on GitHub, and include tests. If you're fixing a bug or making a large change the patch **must** include test coverage.
+All patches should be sent as a pull request on GitHub, include tests, and documentation where needed. If you're fixing a bug or making a large change the patch **must** include test coverage.
+
+Uncertain about how to write tests? Take a look at some existing tests that are similar to the code you're changing, and go from there.
 
-You can see a list of open pull requests (pending changes) by visiting https://github.com/getsentry/sentry/pulls
\ No newline at end of file
+You can see a list of open pull requests (pending changes) by visiting https://github.com/getsentry/sentry/pulls
