commit 4246276a1b9a1c555c3ff8b32c1ef0b00541f733
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Mar 7 10:30:49 2014 -0800

    Initial support for gevent

diff --git a/setup.py b/setup.py
index ee912fe247..4ec2c80298 100755
--- a/setup.py
+++ b/setup.py
@@ -80,6 +80,7 @@ install_requires = [
     'django-templatetag-sugar>=0.1.0,<0.2.0',
     'djangorestframework>=2.3.8,<2.4.0',
     'email-reply-parser>=0.2.0,<0.3.0',
+    'gevent>=1.0.0,<1.1.0',
     'gunicorn>=0.17.2,<0.18.0',
     'httpagentparser>=1.6.0,<1.7.0',
     'logan>=0.5.8.2,<0.6.0',
diff --git a/src/sentry/utils/gevent.py b/src/sentry/utils/gevent.py
new file mode 100644
index 0000000000..4cee1c25e0
--- /dev/null
+++ b/src/sentry/utils/gevent.py
@@ -0,0 +1,57 @@
+"""A wait callback to allow psycopg2 cooperation with gevent.
+
+Use `make_psycopg_green()` to enable gevent support in Psycopg.
+"""
+
+# Copyright (C) 2010 Daniele Varrazzo <daniele.varrazzo@gmail.com>
+# and licensed under the MIT license:
+#
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to deal
+# in the Software without restriction, including without limitation the rights
+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+# copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+# THE SOFTWARE.
+
+from __future__ import absolute_import
+
+import psycopg2
+from psycopg2 import extensions
+
+from gevent.socket import wait_read, wait_write
+
+
+def make_psycopg_green():
+    """Configure Psycopg to be used with gevent in non-blocking way."""
+    if not hasattr(extensions, 'set_wait_callback'):
+        raise ImportError(
+            "support for coroutines not available in this Psycopg version (%s)"
+            % psycopg2.__version__)
+
+    extensions.set_wait_callback(gevent_wait_callback)
+
+
+def gevent_wait_callback(conn, timeout=None):
+    """A wait callback useful to allow gevent to work with Psycopg."""
+    while 1:
+        state = conn.poll()
+        if state == extensions.POLL_OK:
+            break
+        elif state == extensions.POLL_READ:
+            wait_read(conn.fileno(), timeout=timeout)
+        elif state == extensions.POLL_WRITE:
+            wait_write(conn.fileno(), timeout=timeout)
+        else:
+            raise psycopg2.OperationalError(
+                "Bad result from poll: %r" % state)
diff --git a/src/sentry/utils/runner.py b/src/sentry/utils/runner.py
index 8b35ae8630..8d7c670e88 100644
--- a/src/sentry/utils/runner.py
+++ b/src/sentry/utils/runner.py
@@ -6,6 +6,8 @@ sentry.utils.runner
 :copyright: (c) 2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+from __future__ import absolute_import
+
 from logan.runner import run_app, configure_app
 
 import base64
@@ -13,6 +15,8 @@ import os
 import pkg_resources
 import warnings
 
+USE_GEVENT = os.environ.get('USE_GEVENT')
+
 KEY_LENGTH = 40
 
 CONFIG_TEMPLATE = """
@@ -222,10 +226,27 @@ def initialize_receivers():
     import sentry.receivers  # NOQA
 
 
+def initialize_gevent():
+    from gevent import monkey
+    monkey.patch_all()
+
+    try:
+        import psycopg2  # NOQA
+    except ImportError:
+        pass
+    else:
+        from sentry.utils.gevent import make_psycopg_green
+        make_psycopg_green()
+
+
 def initialize_app(config):
     from django.utils import timezone
     from sentry.app import env
 
+    if USE_GEVENT:
+        from django.db import connections
+        connections['default'].allow_thread_sharing = True
+
     env.data['config'] = config.get('config_path')
     env.data['start_date'] = timezone.now()
 
@@ -308,6 +329,10 @@ def configure():
 
 
 def main():
+    if USE_GEVENT:
+        print "Configuring Sentry with gevent bindings"
+        initialize_gevent()
+
     run_app(
         project='sentry',
         default_config_path='~/.sentry/sentry.conf.py',
