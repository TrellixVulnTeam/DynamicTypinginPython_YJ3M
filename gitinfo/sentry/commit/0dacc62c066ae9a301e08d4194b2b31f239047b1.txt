commit 0dacc62c066ae9a301e08d4194b2b31f239047b1
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Apr 9 18:17:18 2018 -0700

    test: mountWithTheme helper (#7930)

diff --git a/tests/helpers.js b/tests/helpers.js
new file mode 100644
index 0000000000..fab15b6269
--- /dev/null
+++ b/tests/helpers.js
@@ -0,0 +1,8 @@
+import React from 'react';
+import {mount} from 'enzyme';
+import {ThemeProvider} from 'emotion-theming';
+import theme from 'app/utils/theme';
+
+export function mountWithTheme(component, ...props) {
+  return mount(<ThemeProvider theme={theme}>{component}</ThemeProvider>, ...props);
+}
diff --git a/tests/js/spec/components/indicators.spec.jsx b/tests/js/spec/components/indicators.spec.jsx
index 5ea12bc0dd..ad7e68010c 100644
--- a/tests/js/spec/components/indicators.spec.jsx
+++ b/tests/js/spec/components/indicators.spec.jsx
@@ -1,7 +1,4 @@
 import React from 'react';
-import {ThemeProvider} from 'emotion-theming';
-import {mount} from 'enzyme';
-import theme from 'app/utils/theme';
 import Indicators from 'app/components/indicators';
 import IndicatorStore from 'app/stores/indicatorStore';
 import {
@@ -10,6 +7,7 @@ import {
   addErrorMessage,
   addMessage,
 } from 'app/actionCreators/indicator';
+import {mountWithTheme} from '../../../helpers';
 
 // Make sure we use `duration: null` to test add/remove
 jest.useFakeTimers();
@@ -17,11 +15,7 @@ jest.useFakeTimers();
 describe('Indicators', function() {
   let wrapper;
   beforeEach(function() {
-    wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <Indicators />
-      </ThemeProvider>
-    );
+    wrapper = mountWithTheme(<Indicators />);
 
     clearIndicators();
     jest.runAllTimers();
diff --git a/tests/js/spec/views/accountEmails.spec.jsx b/tests/js/spec/views/accountEmails.spec.jsx
index f8f5ffb39b..5ca0c510fa 100644
--- a/tests/js/spec/views/accountEmails.spec.jsx
+++ b/tests/js/spec/views/accountEmails.spec.jsx
@@ -1,11 +1,11 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
-import {ThemeProvider} from 'emotion-theming';
-import theme from 'app/utils/theme';
 import AccountEmails from 'app/views/settings/account/accountEmails';
 
+import {mountWithTheme} from '../../../helpers';
+
 jest.mock('scroll-to-element', () => {});
 
 const ENDPOINT = '/users/me/emails/';
@@ -32,12 +32,7 @@ describe('AccountEmails', function() {
       statusCode: 200,
     });
 
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <AccountEmails />
-      </ThemeProvider>,
-      TestStubs.routerContext()
-    );
+    let wrapper = mountWithTheme(<AccountEmails />, TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
@@ -65,12 +60,7 @@ describe('AccountEmails', function() {
       statusCode: 200,
     });
 
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <AccountEmails />
-      </ThemeProvider>,
-      TestStubs.routerContext()
-    );
+    let wrapper = mountWithTheme(<AccountEmails />, TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
@@ -98,12 +88,7 @@ describe('AccountEmails', function() {
       statusCode: 200,
     });
 
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <AccountEmails />
-      </ThemeProvider>,
-      TestStubs.routerContext()
-    );
+    let wrapper = mountWithTheme(<AccountEmails />, TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
@@ -126,12 +111,7 @@ describe('AccountEmails', function() {
       method: 'POST',
       statusCode: 200,
     });
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <AccountEmails />
-      </ThemeProvider>,
-      TestStubs.routerContext()
-    );
+    let wrapper = mountWithTheme(<AccountEmails />, TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
diff --git a/tests/js/spec/views/organizationAccessRequests.spec.jsx b/tests/js/spec/views/organizationAccessRequests.spec.jsx
index 1ec4482c4a..078c1710ff 100644
--- a/tests/js/spec/views/organizationAccessRequests.spec.jsx
+++ b/tests/js/spec/views/organizationAccessRequests.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow} from 'enzyme';
 
 import OrganizationAccessRequests from 'app/views/settings/organization/members/organizationAccessRequests';
-import {ThemeProvider} from 'emotion-theming';
+import {mountWithTheme} from '../../../helpers';
 
 describe('OrganizationAccessRequests', function() {
   beforeEach(function() {});
@@ -48,31 +48,29 @@ describe('OrganizationAccessRequests', function() {
 
   it('can approve', function() {
     let mock = jest.fn();
-    let wrapper = mount(
-      <ThemeProvider theme={{}}>
-        <OrganizationAccessRequests
-          params={{apiKey: 1, orgId: 'org-slug'}}
-          accessRequestBusy={new Map()}
-          requestList={[
-            {
-              id: 'id',
-              member: {
-                id: 'memberid',
-                email: '',
-                name: '',
-                roleName: '',
-                user: {
-                  id: '',
-                  name: 'sentry@test.com',
-                },
+    let wrapper = mountWithTheme(
+      <OrganizationAccessRequests
+        params={{apiKey: 1, orgId: 'org-slug'}}
+        accessRequestBusy={new Map()}
+        requestList={[
+          {
+            id: 'id',
+            member: {
+              id: 'memberid',
+              email: '',
+              name: '',
+              roleName: '',
+              user: {
+                id: '',
+                name: 'sentry@test.com',
               },
-              team: TestStubs.Team(),
             },
-          ]}
-          onApprove={mock}
-          onDeny={() => {}}
-        />
-      </ThemeProvider>
+            team: TestStubs.Team(),
+          },
+        ]}
+        onApprove={mock}
+        onDeny={() => {}}
+      />
     );
 
     wrapper
@@ -84,31 +82,29 @@ describe('OrganizationAccessRequests', function() {
 
   it('can deny', function() {
     let mock = jest.fn();
-    let wrapper = mount(
-      <ThemeProvider theme={{}}>
-        <OrganizationAccessRequests
-          params={{apiKey: 1, orgId: 'org-slug'}}
-          accessRequestBusy={new Map()}
-          requestList={[
-            {
-              id: 'id',
-              member: {
-                id: 'memberid',
-                email: '',
-                name: '',
-                roleName: '',
-                user: {
-                  id: '',
-                  name: 'sentry@test.com',
-                },
+    let wrapper = mountWithTheme(
+      <OrganizationAccessRequests
+        params={{apiKey: 1, orgId: 'org-slug'}}
+        accessRequestBusy={new Map()}
+        requestList={[
+          {
+            id: 'id',
+            member: {
+              id: 'memberid',
+              email: '',
+              name: '',
+              roleName: '',
+              user: {
+                id: '',
+                name: 'sentry@test.com',
               },
-              team: TestStubs.Team(),
             },
-          ]}
-          onApprove={() => {}}
-          onDeny={mock}
-        />
-      </ThemeProvider>
+            team: TestStubs.Team(),
+          },
+        ]}
+        onApprove={() => {}}
+        onDeny={mock}
+      />
     );
 
     wrapper
diff --git a/tests/js/spec/views/organizationRateLimits.spec.jsx b/tests/js/spec/views/organizationRateLimits.spec.jsx
index dfc4f86119..44a9090b44 100644
--- a/tests/js/spec/views/organizationRateLimits.spec.jsx
+++ b/tests/js/spec/views/organizationRateLimits.spec.jsx
@@ -1,10 +1,8 @@
 import React from 'react';
-import {mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import {ThemeProvider} from 'emotion-theming';
-import theme from 'app/utils/theme';
 import OrganizationRateLimits from 'app/views/settings/organization/rateLimit/rateLimitView';
+import {mountWithTheme} from '../../../helpers';
 
 const ENDPOINT = '/organizations/org-slug/';
 
@@ -18,9 +16,7 @@ describe('Organization Rate Limits', function() {
   };
 
   const creator = props => (
-    <ThemeProvider theme={theme}>
-      <OrganizationRateLimits organization={organization} {...props} />
-    </ThemeProvider>
+    <OrganizationRateLimits organization={organization} {...props} />
   );
 
   beforeEach(function() {
@@ -28,7 +24,7 @@ describe('Organization Rate Limits', function() {
   });
 
   it('renders with initialData', function() {
-    let wrapper = mount(creator(), TestStubs.routerContext());
+    let wrapper = mountWithTheme(creator(), TestStubs.routerContext());
 
     expect(
       wrapper
@@ -52,7 +48,7 @@ describe('Organization Rate Limits', function() {
         maxRateInterval: 60,
       },
     };
-    let wrapper = mount(creator({organization: org}), TestStubs.routerContext());
+    let wrapper = mountWithTheme(creator({organization: org}), TestStubs.routerContext());
 
     expect(wrapper.find('RangeSlider')).toHaveLength(1);
 
@@ -66,7 +62,7 @@ describe('Organization Rate Limits', function() {
       statusCode: 200,
     });
 
-    let wrapper = mount(creator(), TestStubs.routerContext());
+    let wrapper = mountWithTheme(creator(), TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
@@ -96,7 +92,7 @@ describe('Organization Rate Limits', function() {
       statusCode: 200,
     });
 
-    let wrapper = mount(creator(), TestStubs.routerContext());
+    let wrapper = mountWithTheme(creator(), TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
diff --git a/tests/js/spec/views/projectGeneralSettings.spec.jsx b/tests/js/spec/views/projectGeneralSettings.spec.jsx
index 3e6a7ada4a..b7bd3f005d 100644
--- a/tests/js/spec/views/projectGeneralSettings.spec.jsx
+++ b/tests/js/spec/views/projectGeneralSettings.spec.jsx
@@ -1,13 +1,10 @@
 import {browserHistory} from 'react-router';
-import {ThemeProvider} from 'emotion-theming';
 import React from 'react';
 
-import {mount} from 'enzyme';
 import ProjectGeneralSettings from 'app/views/projectGeneralSettings';
-import theme from 'app/utils/theme';
-
 import ProjectContext from 'app/views/projects/projectContext';
 import ProjectsStore from 'app/stores/projectsStore';
+import {mountWithTheme} from '../../../helpers';
 
 jest.mock('app/utils/recreateRoute');
 jest.mock('jquery');
@@ -54,10 +51,8 @@ describe('projectGeneralSettings', function() {
   });
 
   it('renders form fields', function() {
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />
-      </ThemeProvider>,
+    let wrapper = mountWithTheme(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext()
     );
 
@@ -94,10 +89,8 @@ describe('projectGeneralSettings', function() {
   it('disables field when equivalent org setting is true', function() {
     routerContext.context.organization.dataScrubber = true;
     routerContext.context.organization.scrubIPAddresses = false;
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />
-      </ThemeProvider>,
+    let wrapper = mountWithTheme(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       routerContext
     );
     expect(wrapper.find('Switch[name="scrubIPAddresses"]').prop('isDisabled')).toBe(
@@ -114,10 +107,8 @@ describe('projectGeneralSettings', function() {
       method: 'DELETE',
     });
 
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />
-      </ThemeProvider>,
+    let wrapper = mountWithTheme(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext()
     );
 
@@ -140,10 +131,8 @@ describe('projectGeneralSettings', function() {
       method: 'POST',
     });
 
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />
-      </ThemeProvider>,
+    let wrapper = mountWithTheme(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext()
     );
 
@@ -173,10 +162,8 @@ describe('projectGeneralSettings', function() {
 
   it('displays transfer/remove message for non-admins', function() {
     routerContext.context.organization.access = ['org:read'];
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />
-      </ThemeProvider>,
+    let wrapper = mountWithTheme(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       routerContext
     );
 
@@ -199,16 +186,14 @@ describe('projectGeneralSettings', function() {
         slug: 'new-project',
       },
     });
-    let wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <ProjectContext orgId={org.slug} projectId={project.slug}>
-          <ProjectGeneralSettings
-            routes={[]}
-            location={routerContext.context.location}
-            params={params}
-          />
-        </ProjectContext>
-      </ThemeProvider>,
+    let wrapper = mountWithTheme(
+      <ProjectContext orgId={org.slug} projectId={project.slug}>
+        <ProjectGeneralSettings
+          routes={[]}
+          location={routerContext.context.location}
+          params={params}
+        />
+      </ProjectContext>,
       routerContext
     );
     await tick();
diff --git a/tests/js/spec/views/projectKeyDetails.spec.jsx b/tests/js/spec/views/projectKeyDetails.spec.jsx
index f4db3fbc93..8b56f11ee9 100644
--- a/tests/js/spec/views/projectKeyDetails.spec.jsx
+++ b/tests/js/spec/views/projectKeyDetails.spec.jsx
@@ -1,11 +1,8 @@
-import {ThemeProvider} from 'emotion-theming';
-
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {mount} from 'enzyme';
 import ProjectKeyDetails from 'app/views/settings/project/projectKeys/projectKeyDetails';
-import theme from 'app/utils/theme';
+import {mountWithTheme} from '../../../helpers';
 
 jest.mock('react-router', () => ({
   withRouter: i => i,
@@ -79,17 +76,15 @@ describe('ProjectKeyDetails', function() {
     });
     let routerContext = TestStubs.routerContext();
 
-    wrapper = mount(
-      <ThemeProvider theme={theme}>
-        <ProjectKeyDetails
-          routes={[]}
-          params={{
-            keyId: projectKeys[0].id,
-            orgId: org.slug,
-            projectId: project.slug,
-          }}
-        />
-      </ThemeProvider>,
+    wrapper = mountWithTheme(
+      <ProjectKeyDetails
+        routes={[]}
+        params={{
+          keyId: projectKeys[0].id,
+          orgId: org.slug,
+          projectId: project.slug,
+        }}
+      />,
       {
         ...routerContext,
         context: {
