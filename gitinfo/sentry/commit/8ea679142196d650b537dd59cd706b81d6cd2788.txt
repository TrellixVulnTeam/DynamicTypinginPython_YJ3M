commit 8ea679142196d650b537dd59cd706b81d6cd2788
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 17 14:52:39 2016 -0700

    Improve new stack rendering
    
    - Add lineno back to 'title'
    - Darken borders on cells
    - Collapse trailing whitespace in Template/Stacktrace interfaces
    - Drop code-style font and bold important title segments
    
    /cc @getsentry/ui

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index c18bc27a14..b8973d4212 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -95,8 +95,8 @@ const Frame = React.createClass({
     let data = this.props.data;
     let title = [];
 
-    // TODO(mitsuhiko): this is terrible for translators but i'm too
-    // lazy to change this up right now.  This should be a format string
+    // TODO(dcramer): this needs to use a formatted string so it can be
+    // localized correctly
 
     if (defined(data.filename || data.module)) {
       title.push((
@@ -108,7 +108,7 @@ const Frame = React.createClass({
         title.push(<a href={data.absPath} className="icon-open" key="share" target="_blank" />);
       }
       if (defined(data.function)) {
-        title.push(<span className="in-at" key="in"> {t('in')} </span>);
+        title.push(<span className="in-at" key="in"> in </span>);
       }
     }
 
@@ -119,19 +119,17 @@ const Frame = React.createClass({
     // we don't want to render out zero line numbers which are used to
     // indicate lack of source information for native setups.  We could
     // TODO(mitsuhiko): only do this for events from native platforms?
-    else if (defined(data.lineNo) && data.lineNo != 0) {
-      // TODO(dcramer): we need to implement source mappings
-      // title.push(<span className="pull-right blame"><a><span className="icon-mark-github"></span> View Code</a></span>);
-      title.push(<span className="in-at" key="at"> {t('at line')} </span>);
-      if (defined(data.colNo)) {
-        title.push(<code key="line" className="lineno">{data.lineNo}:{data.colNo}</code>);
-      } else {
-        title.push(<code key="line" className="lineno">{data.lineNo}</code>);
-      }
+    if (defined(data.lineNo) && data.lineNo != 0) {
+      title.push(<span className="in-at" key="no"> at line </span>);
+      title.push((
+        <code key="line" className="lineno">
+          {defined(data.colNo) ? `${data.lineNo}:${data.colNo}` : data.lineNo}
+        </code>
+      ));
     }
 
     if (defined(data.package)) {
-      title.push(<span className="within" key="within"> {t('within')} </span>);
+      title.push(<span className="within" key="within"> within </span>);
       title.push(<code title={data.package} className="package">{trimPackage(data.package)}</code>);
     }
 
@@ -143,6 +141,8 @@ const Frame = React.createClass({
       );
     }
 
+    title.push(this.renderExpander());
+
     return title;
   },
 
@@ -203,10 +203,7 @@ const Frame = React.createClass({
   renderDefaultLine() {
     return (
       <StrictClick onClick={this.isExpandable() ? this.toggleContext : null}>
-        <p>
-          {this.renderDefaultTitle()}
-          {this.renderExpander()}
-        </p>
+        <p>{this.renderDefaultTitle()}</p>
       </StrictClick>
     );
   },
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
index a9dafb0b5e..3b9cc8ae5e 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
@@ -87,6 +87,7 @@ const StacktraceInterface = React.createClass({
         :
           <StacktraceContent
               data={data}
+              className="no-exception"
               includeSystemFrames={stackView === 'full'}
               platform={evt.platform}
               newestFirst={newestFirst} />
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
index 192d5b744c..d1dc4baf72 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
@@ -94,8 +94,11 @@ const StacktraceContent = React.createClass({
       frames.reverse();
     }
 
+    let className = this.props.className || '';
+    className += (oldFrames ? ' old-traceback' : ' traceback');
+
     return (
-      <div className={oldFrames ? 'old-traceback' : 'traceback'}>
+      <div className={className}>
         <ul>{frames}</ul>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/template.jsx b/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
index 78b31b6526..f342af038d 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
@@ -23,7 +23,7 @@ const TemplateInterface = React.createClass({
         event={this.props.event}
         type={this.props.type}
         title={<div>{t('Template')}</div>}>
-        <div className="traceback">
+        <div className="traceback no-exception">
           <ul>
             <Frame data={this.props.data} isExpanded={true}/>
           </ul>
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index bbd069668d..4508ff70da 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -884,11 +884,20 @@ div.traceback > ul {
 }
 
 .traceback {
+  &.no-exception {
+    margin-top: -20px;
+  }
+
+  &.no-exception .frame:first-child {
+    border-top: 0;
+  }
+
+
   .frame {
     list-style-type: none;
     position: relative;
     margin: 0;
-    border-top: 1px solid lighten(@trim, 4);
+    border-top: 1px solid @trim;
 
     &.frame-errors {}
 
@@ -913,13 +922,17 @@ div.traceback > ul {
 
     p {
       padding: 8px 20px;
-      font-size: 12px;
+      font-size: 13px;
       margin: 0;
       // line-height: 1.4;
       line-height: 16px;
-      color: @gray-darkest;
       background: lighten(@blue-light, 30);
 
+      code {
+        font-family: inherit;
+        font-weight: bold;
+      }
+
       a.annotation {
         &.trigger-popover {
           cursor: pointer;
@@ -1060,12 +1073,12 @@ div.traceback > ul {
       }
 
       table.key-value {
-        border-top: 1px solid lighten(@trim, 4);
+        border-top: 1px solid @trim;
         padding: 0;
         margin: 0 0 -8px;
 
         td {
-          border-bottom: 1px solid lighten(@trim, 4) !important;
+          border-bottom: 1px solid @trim !important;
 
           &.key {
             width: 125px;
@@ -1117,6 +1130,7 @@ div.traceback > ul {
       float: right;
       .square(16px);
       padding: 0;
+      margin-left: 10px;
       line-height: 16px;
       font-size: 9px;
       text-align: center;
@@ -1127,10 +1141,6 @@ div.traceback > ul {
     }
 
     &.expanded {
-      > p {
-        color: #000;
-      }
-
       .expandable {
         height: auto;
       }
