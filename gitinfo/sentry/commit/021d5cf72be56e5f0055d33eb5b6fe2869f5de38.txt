commit 021d5cf72be56e5f0055d33eb5b6fe2869f5de38
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jul 1 15:20:26 2016 -0700

    Ensure participants is reflected on change

diff --git a/src/sentry/api/endpoints/group_participants.py b/src/sentry/api/endpoints/group_participants.py
new file mode 100644
index 0000000000..4eb38e8873
--- /dev/null
+++ b/src/sentry/api/endpoints/group_participants.py
@@ -0,0 +1,17 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.bases import GroupEndpoint
+from sentry.api.serializers import serialize
+from sentry.models import User
+
+
+class GroupParticipantsEndpoint(GroupEndpoint):
+    def get(self, request, group):
+        participants = list(User.objects.filter(
+            groupsubscription__is_active=True,
+            groupsubscription__group=group,
+        ))
+
+        return Response(serialize(participants, request.user))
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 05a467a035..d8b4934272 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -14,6 +14,7 @@ from .endpoints.group_events_oldest import GroupEventsOldestEndpoint
 from .endpoints.group_hashes import GroupHashesEndpoint
 from .endpoints.group_notes import GroupNotesEndpoint
 from .endpoints.group_notes_details import GroupNotesDetailsEndpoint
+from .endpoints.group_participants import GroupParticipantsEndpoint
 from .endpoints.group_stats import GroupStatsEndpoint
 from .endpoints.group_tags import GroupTagsEndpoint
 from .endpoints.group_tagkey_details import GroupTagKeyDetailsEndpoint
@@ -300,6 +301,9 @@ urlpatterns = patterns(
     url(r'^(?:issues|groups)/(?P<issue_id>\d+)/hashes/$',
         GroupHashesEndpoint.as_view(),
         name='sentry-api-0-group-events'),
+    url(r'^issues/(?P<issue_id>\d+)/participants/$',
+        GroupParticipantsEndpoint.as_view(),
+        name='sentry-api-0-group-stats'),
     url(r'^(?:issues|groups)/(?P<issue_id>\d+)/stats/$',
         GroupStatsEndpoint.as_view(),
         name='sentry-api-0-group-stats'),
diff --git a/src/sentry/static/sentry/app/components/group/sidebar.jsx b/src/sentry/static/sentry/app/components/group/sidebar.jsx
index 4c32c0fc9d..27c9c86cb6 100644
--- a/src/sentry/static/sentry/app/components/group/sidebar.jsx
+++ b/src/sentry/static/sentry/app/components/group/sidebar.jsx
@@ -11,17 +11,17 @@ import {t} from '../../locale';
 
 const GroupParticipants = React.createClass({
   propTypes: {
-    group: React.PropTypes.object,
+    participants: React.PropTypes.array,
   },
 
   render() {
-    let group = this.props.group;
+    let participants = this.props.participants;
 
     return (
       <div>
-        <h6><span>{group.participants.length} Participants</span></h6>
+        <h6><span>{participants.length} Participants</span></h6>
         <ul className="faces">
-          {group.participants.map((user) => {
+          {participants.map((user) => {
             return (
               <li>
                 <Avatar size={32} user={user} />
@@ -44,6 +44,12 @@ const GroupSidebar = React.createClass({
     GroupState
   ],
 
+  getInitialState() {
+    return {
+      participants: this.props.group.participants
+    };
+  },
+
   toggleSubscription() {
     let group = this.props.group;
     let project = this.getProject();
@@ -59,7 +65,12 @@ const GroupSidebar = React.createClass({
       }
     }, {
       complete: () => {
-        IndicatorStore.remove(loadingIndicator);
+        this.api.request(`/issues/${group.id}/participants/`, {
+          success: (data) => {
+            this.setState({participants: data});
+            IndicatorStore.remove(loadingIndicator);
+          }
+        });
       }
     });
   },
@@ -68,6 +79,7 @@ const GroupSidebar = React.createClass({
     let orgId = this.getOrganization().slug;
     let projectId = this.getProject().slug;
     let group = this.getGroup();
+    let participants = this.state.participants;
 
     return (
       <div className="group-stats">
@@ -107,8 +119,8 @@ const GroupSidebar = React.createClass({
               tag={data.key} />
           );
         })}
-        {group.participants.length !== 0 &&
-          <GroupParticipants group={group} />
+        {participants.length !== 0 &&
+          <GroupParticipants participants={participants} />
         }
 
         <h6><span>{t('Notifications')}</span></h6>
diff --git a/tests/sentry/api/endpoints/test_group_participants.py b/tests/sentry/api/endpoints/test_group_participants.py
new file mode 100644
index 0000000000..3da64b47c4
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_group_participants.py
@@ -0,0 +1,25 @@
+from __future__ import absolute_import, print_function
+
+from sentry.models import GroupSubscription
+from sentry.testutils import APITestCase
+
+
+class GroupParticipantsTest(APITestCase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        group = self.create_group()
+
+        GroupSubscription.objects.create(
+            user=self.user,
+            group=group,
+            project=group.project,
+            is_active=True,
+        )
+
+        url = '/api/0/issues/{}/participants/'.format(group.id)
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 1
+        assert response.data[0]['id'] == str(self.user.id)
