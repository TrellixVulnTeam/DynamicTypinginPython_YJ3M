commit a6087d8751463758ba7ff6517d8adebaa49bba39
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Mon Feb 17 07:53:51 2020 +0100

    fix(thread): return null when thread is undefined (#17046)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threads.jsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threads.jsx
index 87f65f8033..5b4350387b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads/threads.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads/threads.jsx
@@ -1,6 +1,7 @@
 import isNil from 'lodash/isNil';
 import PropTypes from 'prop-types';
 import React from 'react';
+
 import {t} from 'app/locale';
 import EventDataSection from 'app/components/events/eventDataSection';
 import SentryTypes from 'app/sentryTypes';
@@ -9,6 +10,7 @@ import CrashHeader from 'app/components/events/interfaces/crashHeader';
 import CrashContent from 'app/components/events/interfaces/crashContent';
 import Pills from 'app/components/pills';
 import Pill from 'app/components/pill';
+import {defined} from 'app/utils';
 
 import ThreadsSelector from './threadsSelector';
 import getThreadStacktrace from './getThreadStacktrace';
@@ -122,11 +124,13 @@ class ThreadsInterface extends React.Component {
 
   constructor(props) {
     super(props);
-    const thread = findBestThread(props.data.values);
+    const thread = defined(props.data.values)
+      ? findBestThread(props.data.values)
+      : undefined;
 
     this.state = {
       activeThread: thread,
-      stackView: getIntendedStackView(thread, props.event),
+      stackView: thread ? getIntendedStackView(thread, props.event) : undefined,
       stackType: 'original',
       newestFirst: isStacktraceNewestFirst(),
     };
@@ -163,14 +167,18 @@ class ThreadsInterface extends React.Component {
   };
 
   render() {
+    const threads = this.props.data.values || [];
+
+    if (threads.length === 0) {
+      return null;
+    }
+
     const evt = this.props.event;
     const {projectId, hideGuide} = this.props;
     const {stackView, stackType, newestFirst, activeThread} = this.state;
     const exception = this.getException();
     const stacktrace = this.getStacktrace();
 
-    const threads = this.props.data.values || [];
-
     const titleProps = {
       platform: evt.platform,
       stacktrace,
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorOption.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorOption.tsx
index d87ab3aef6..840a80b096 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorOption.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorOption.tsx
@@ -60,7 +60,10 @@ const DetailsWrapper = styled('div')`
   overflow: hidden;
   display: grid;
   @media (min-width: ${props => props.theme.breakpoints[0]}) {
-    grid-template-columns: auto 1fr;
+    grid-template-columns: 50px 1fr;
+  }
+  @media (min-width: ${props => props.theme.breakpoints[2]}) {
+    grid-template-columns: 100px 1fr;
   }
 `;
 
