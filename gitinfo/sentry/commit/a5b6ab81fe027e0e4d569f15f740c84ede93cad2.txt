commit a5b6ab81fe027e0e4d569f15f740c84ede93cad2
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Nov 14 14:30:32 2018 -0800

    feat(api): Add OrganizationTagsEndpoint

diff --git a/src/sentry/api/endpoints/organization_tags.py b/src/sentry/api/endpoints/organization_tags.py
new file mode 100644
index 0000000000..2dd8e89ab0
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_tags.py
@@ -0,0 +1,39 @@
+from __future__ import absolute_import
+
+from functools32 import partial
+
+from rest_framework.response import Response
+
+from sentry.api.bases import OrganizationEventsEndpointBase, OrganizationEventsError
+from sentry.api.paginator import GenericOffsetPaginator
+from sentry.utils.snuba import raw_query
+
+
+class OrganizationTagsEndpoint(OrganizationEventsEndpointBase):
+
+    def get(self, request, organization):
+        try:
+            snuba_args = self.get_snuba_query_args(request, organization)
+        except OrganizationEventsError as exc:
+            return Response({'detail': exc.message}, status=400)
+
+        data_fn = partial(
+            # extract 'data' from raw_query result
+            lambda *args, **kwargs: raw_query(*args, **kwargs)['data'],
+            aggregations=[
+                ('count()', '', 'count'),
+            ],
+            orderby='-count',
+            groupby=['tags_key'],
+            referrer='api.organization-tags',
+            **snuba_args
+        )
+
+        return self.paginate(
+            request=request,
+            on_results=lambda results: [{
+                'tag': row['tags_key'],
+                'count': row['count'],
+            } for row in results],
+            paginator=GenericOffsetPaginator(data_fn=data_fn),
+        )
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 3dfee06f27..554af4243f 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -94,6 +94,7 @@ from .endpoints.organization_repository_commits import OrganizationRepositoryCom
 from .endpoints.organization_repository_details import OrganizationRepositoryDetailsEndpoint
 from .endpoints.organization_sentry_apps import OrganizationSentryAppsEndpoint
 from .endpoints.organization_tagkey_values import OrganizationTagKeyValuesEndpoint
+from .endpoints.organization_tags import OrganizationTagsEndpoint
 from .endpoints.sentry_app_installations import SentryAppInstallationsEndpoint
 from .endpoints.sentry_app_installation_details import SentryAppInstallationDetailsEndpoint
 from .endpoints.organization_stats import OrganizationStatsEndpoint
@@ -647,6 +648,11 @@ urlpatterns = patterns(
         OrganizationTeamsEndpoint.as_view(),
         name='sentry-api-0-organization-teams'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/tags/$',
+        OrganizationTagsEndpoint.as_view(),
+        name='sentry-api-0-organization-tags'
+    ),
     url(
         r'^organizations/(?P<organization_slug>[^\/]+)/tags/(?P<key>[^/]+)/values/$',
         OrganizationTagKeyValuesEndpoint.as_view(),
diff --git a/tests/snuba/api/endpoints/test_organization_tags.py b/tests/snuba/api/endpoints/test_organization_tags.py
new file mode 100644
index 0000000000..1986d17edd
--- /dev/null
+++ b/tests/snuba/api/endpoints/test_organization_tags.py
@@ -0,0 +1,48 @@
+from __future__ import absolute_import
+
+from datetime import timedelta
+from django.utils import timezone
+from django.core.urlresolvers import reverse
+
+from sentry.testutils import APITestCase, SnubaTestCase
+
+
+class OrganizationTagsTest(APITestCase, SnubaTestCase):
+    def setUp(self):
+        super(OrganizationTagsTest, self).setUp()
+        self.min_ago = timezone.now() - timedelta(minutes=1)
+
+    def test_simple(self):
+        user = self.create_user()
+        org = self.create_organization()
+        team = self.create_team(organization=org)
+        self.create_member(organization=org, user=user, teams=[team])
+
+        self.login_as(user=user)
+
+        project = self.create_project(organization=org, teams=[team])
+        group = self.create_group(project=project)
+
+        self.create_event(
+            'a' * 32, group=group, datetime=self.min_ago, tags={'fruit': 'apple'}
+        )
+        self.create_event(
+            'b' * 32, group=group, datetime=self.min_ago, tags={'fruit': 'orange'}
+        )
+        self.create_event(
+            'c' * 32, group=group, datetime=self.min_ago, tags={'some_tag': 'some_value'}
+        )
+        self.create_event(
+            'd' * 32, group=group, datetime=self.min_ago, tags={'fruit': 'orange'}
+        )
+
+        url = reverse(
+            'sentry-api-0-organization-tags',
+            kwargs={
+                'organization_slug': org.slug,
+            }
+        )
+
+        response = self.client.get(url, format='json')
+        assert response.status_code == 200, response.content
+        assert response.data == [{'count': 3, 'tag': 'fruit'}, {'count': 1, 'tag': 'some_tag'}]
