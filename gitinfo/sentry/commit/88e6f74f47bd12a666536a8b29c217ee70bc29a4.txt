commit 88e6f74f47bd12a666536a8b29c217ee70bc29a4
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Tue Jun 5 14:40:34 2018 -0700

    feat(integrations): Add basic UI for creating issues (#8646)

diff --git a/src/sentry/static/sentry/app/components/group/externalIssues.jsx b/src/sentry/static/sentry/app/components/group/externalIssues.jsx
index e7e4a15c31..a025bd038b 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssues.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssues.jsx
@@ -54,13 +54,21 @@ class ExternalIssueForm extends AsyncComponent {
   renderBody() {
     let {integrationDetails} = this.state;
     let {action, group, integration} = this.props;
+    let config = integrationDetails[`${action}IssueConfig`];
+    let initialData = {};
+    config.forEach(field => {
+      // passing an empty array breaks multi select
+      // TODO(jess): figure out why this is breaking and fix
+      initialData[field.name] = field.multiple ? '' : field.default;
+    });
     return (
       <Form
         apiEndpoint={`/groups/${group.id}/integrations/${integration.id}/`}
         apiMethod={action === 'create' ? 'POST' : 'PUT'}
         onSubmitSuccess={this.onSubmitSuccess}
+        initialData={initialData}
       >
-        {integrationDetails[`${action}IssueConfig`].map(field => {
+        {config.map(field => {
           let props = {};
           if (field.url) {
             props = {
@@ -75,7 +83,7 @@ class ExternalIssueForm extends AsyncComponent {
               autoload: false,
             };
           }
-          return <FieldFromConfig key={field.name} field={field} {...props} />;
+          return <FieldFromConfig key={field.name} field={field} {...props}/>;
         })}
       </Form>
     );
@@ -91,6 +99,7 @@ class ExternalIssueActionList extends AsyncComponent {
     super(props, context);
     this.state.showModal = false;
     this.state.selectedIntegration = null;
+    this.state.action = null;
   }
 
   getEndpoints() {
@@ -98,10 +107,11 @@ class ExternalIssueActionList extends AsyncComponent {
     return [['integrations', `/groups/${group.id}/integrations/`]];
   }
 
-  openModal = integration => {
+  openModal = (integration, action) => {
     this.setState({
       showModal: true,
       selectedIntegration: integration,
+      action,
     });
   };
 
@@ -109,20 +119,28 @@ class ExternalIssueActionList extends AsyncComponent {
     this.setState({
       showModal: false,
       selectedIntegration: null,
+      action: null,
     });
   };
 
   renderBody() {
-    let {selectedIntegration} = this.state;
+    let {selectedIntegration, action} = this.state;
     return (
       <React.Fragment>
         {this.state.integrations.map(integration => {
           return (
-            <MenuItem key={integration.id} noAnchor={true}>
-              <a onClick={this.openModal.bind(this, integration)}>
-                {tct('Link [provider] issue', {provider: integration.provider.name})}
-              </a>
-            </MenuItem>
+            <React.Fragment key={integration.id}>
+              <MenuItem noAnchor={true}>
+                <a onClick={this.openModal.bind(this, integration, 'link')}>
+                  {tct('Link [provider] issue', {provider: integration.provider.name})}
+                </a>
+              </MenuItem>
+              <MenuItem noAnchor={true}>
+                <a onClick={this.openModal.bind(this, integration, 'create')}>
+                  {tct('Create [provider] issue', {provider: integration.provider.name})}
+                </a>
+              </MenuItem>
+            </React.Fragment>
           );
         })}
         {selectedIntegration && (
@@ -140,7 +158,7 @@ class ExternalIssueActionList extends AsyncComponent {
               <ExternalIssueForm
                 group={this.props.group}
                 integration={selectedIntegration}
-                action="link"
+                action={action}
                 onSubmitSuccess={this.closeModal}
               />
             </Modal.Body>
