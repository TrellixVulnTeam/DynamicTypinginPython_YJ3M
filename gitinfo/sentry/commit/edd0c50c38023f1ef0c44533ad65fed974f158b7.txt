commit edd0c50c38023f1ef0c44533ad65fed974f158b7
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Wed Jun 10 19:24:38 2020 +0200

    ref(crumb's time): Replace time formatters with the getDuration method (#19276)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time/time.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time/time.tsx
index 6e24308169..4be51221b3 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time/time.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time/time.tsx
@@ -5,7 +5,6 @@ import {defined} from 'app/utils';
 import Tooltip from 'app/components/tooltip';
 import getDynamicText from 'app/utils/getDynamicText';
 import TextOverflow from 'app/components/textOverflow';
-import space from 'app/styles/space';
 
 import {getFormattedTimestamp} from './utils';
 
@@ -27,7 +26,7 @@ const Time = React.memo(({timestamp, relativeTime, displayRelativeTime}: Props)
   );
 
   return (
-    <Wrapper displayRelativeTime={displayRelativeTime}>
+    <Wrapper>
       <Tooltip
         title={
           <div>
@@ -50,8 +49,7 @@ const Time = React.memo(({timestamp, relativeTime, displayRelativeTime}: Props)
 
 export default Time;
 
-const Wrapper = styled('div')<{displayRelativeTime?: boolean}>`
+const Wrapper = styled('div')`
   font-size: ${p => p.theme.fontSizeSmall};
   color: ${p => p.theme.gray700};
-  ${p => p.displayRelativeTime && `padding-left: ${space(3)};`}
 `;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time/utils.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time/utils.tsx
index 1840299ff8..7c97b73cce 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time/utils.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time/utils.tsx
@@ -3,53 +3,11 @@ import moment from 'moment';
 import {use24Hours} from 'app/utils/dates';
 import {defined} from 'app/utils';
 import {t} from 'app/locale';
-
-enum TimeAbbreviation {
-  SECOND = 'second',
-  MINUTE = 'minute',
-  HOUR = 'hour',
-  DAY = 'day',
-  YEAR = 'year',
-}
+import {getDuration} from 'app/utils/formatters';
 
 const timeFormat = 'HH:mm:ss';
 const timeDateFormat = `ll ${timeFormat}`;
 
-const getTimeShortString = (type: TimeAbbreviation, time: number) => {
-  switch (type) {
-    case TimeAbbreviation.SECOND:
-      return t('%s sec', time);
-    case TimeAbbreviation.MINUTE:
-      return t('%s min', time);
-    case TimeAbbreviation.HOUR:
-      return t('%s hr', time);
-    case TimeAbbreviation.DAY:
-      return t('%s d', time);
-    case TimeAbbreviation.YEAR:
-      return t('%s y', time);
-    default:
-      return '';
-  }
-};
-
-const getShortRelativeTime = (milliseconds: number) => {
-  const seconds = Math.round(milliseconds / 1000);
-  const minutes = Math.round(seconds / 60);
-  const hours = Math.round(minutes / 60);
-  const days = Math.round(hours / 24);
-  const years = Math.round(days / 365);
-
-  const args = ((seconds < 45 && [TimeAbbreviation.SECOND, seconds]) ||
-    (minutes < 45 && [TimeAbbreviation.MINUTE, minutes]) ||
-    (hours < 22 && [TimeAbbreviation.HOUR, hours]) ||
-    (days <= 300 && [TimeAbbreviation.DAY, days]) || [TimeAbbreviation.YEAR, years]) as [
-    TimeAbbreviation,
-    number
-  ];
-
-  return getTimeShortString(args[0], args[1]);
-};
-
 const getRelativeTime = (
   parsedTime: ReturnType<typeof moment>,
   parsedTimeToCompareWith: ReturnType<typeof moment>,
@@ -59,7 +17,11 @@ const getRelativeTime = (
   const formattedTime = moment(parsedTime.format(timeDateFormat));
   const formattedTimeToCompareWith = parsedTimeToCompareWith.format(timeDateFormat);
   const timeDiff = Math.abs(formattedTime.diff(formattedTimeToCompareWith));
-  const shortRelativeTime = getShortRelativeTime(timeDiff);
+
+  const shortRelativeTime = getDuration(Math.round(timeDiff / 1000), 0, true).replace(
+    /\s/g,
+    ''
+  );
 
   if (timeDiff !== 0) {
     return displayRelativeTime
