commit b12f2d6c51d01b2cb615d05d7c76af6e56360d64
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Sat Mar 26 01:34:46 2016 +0100

    Include the last frame from non app code in stacktrace.
    
    This commit includes the last frame in system code in the stacktrace
    when only the app code is shown.  This significantly improves the
    understanding of stacktraces, particularly for iOS.
    
    Currently only the cocoa stack colors this line, the traditional
    stacktrace rendering does not try to color code that line.

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index fea5d1bcdf..88ca167714 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -11,6 +11,7 @@ import {t} from '../../../locale';
 const Frame = React.createClass({
   propTypes: {
     data: React.PropTypes.object.isRequired,
+    nextFrameInApp: React.PropTypes.object.bool,
     platform: React.PropTypes.string,
     isExpanded: React.PropTypes.bool,
   },
@@ -227,9 +228,6 @@ const Frame = React.createClass({
   renderCocoaLine() {
     let data = this.props.data;
     let className = 'stacktrace-table';
-    if (data.inApp) {
-      className += ' in-app';
-    }
     return (
       <div className={className}>
         <div className="trace-col package">
@@ -268,6 +266,7 @@ const Frame = React.createClass({
       'frame': true,
       'system-frame': !data.inApp,
       'frame-errors': data.errors,
+      'leads-to-app': !data.inApp && this.props.nextFrameInApp
     });
     let props = {className: className};
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
index b5dbce05ed..4083f3f763 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
@@ -31,10 +31,17 @@ const StacktraceContent = React.createClass({
     return <li {...props}>{text}</li>;
   },
 
+  frameIsVisible(frame, nextFrame) {
+    return (
+      this.props.includeSystemFrames ||
+      frame.inApp ||
+      (nextFrame && nextFrame.inApp)
+    );
+  },
+
   render() {
     let data = this.props.data;
     let firstFrameOmitted, lastFrameOmitted;
-    let includeSystemFrames = this.props.includeSystemFrames;
 
     if (data.framesOmitted) {
       firstFrameOmitted = data.framesOmitted[0];
@@ -46,11 +53,13 @@ const StacktraceContent = React.createClass({
 
     let frames = [];
     data.frames.forEach((frame, frameIdx) => {
-      if (includeSystemFrames || frame.inApp) {
+      let nextFrame = data.frames[frameIdx + 1];
+      if (this.frameIsVisible(frame, nextFrame)) {
         frames.push(
           <Frame
             key={frameIdx}
             data={frame}
+            nextFrameInApp={nextFrame && nextFrame.inApp}
             platform={this.props.platform} />
         );
       }
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index 971e6b1a44..7f1e280453 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -965,6 +965,8 @@
 
   &.system-frame {}
 
+  &.leads-to-app {}
+
   h3 {
     font-size: 22px;
   }
@@ -1230,11 +1232,6 @@ ol.context-line {
 }
 
 .stacktrace-table {
-  background: lighten(@blue-light, 25);
-
-  &.in-app {
-    background: white;
-  }
 
   .trace-col {
     display: inline-block;
@@ -1272,6 +1269,14 @@ ol.context-line {
   }
 }
 
+.system-frame .stacktrace-table {
+  background: lighten(@blue-light, 25);
+}
+
+.leads-to-app .stacktrace-table {
+  background: lighten(@green-light, 28);
+}
+
 #full-message {
   line-height: 1.5em;
 
