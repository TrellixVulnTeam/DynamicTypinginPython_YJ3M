commit 69f22e5b713abe9a2b936e0af1c4587fadc00840
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Dec 13 13:05:43 2014 -0800

    Generic session support

diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 8dfed2e73e..0aea0e8c70 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -60,26 +60,19 @@ class BaseTestCase(Fixtures, Exam):
         assert resp.status_code == 302
         assert resp['Location'] == 'http://testserver' + reverse('sentry-login')
 
-    def login_as(self, user):
-        user.backend = settings.AUTHENTICATION_BACKENDS[0]
+    def setUp(self):
+        super(BaseTestCase, self).setUp()
 
         engine = import_module(settings.SESSION_ENGINE)
 
-        request = HttpRequest()
-        if self.client.session:
-            request.session = self.client.session
-        else:
-            request.session = engine.SessionStore()
+        session = engine.SessionStore()
+        session.save()
 
-        login(request, user)
-        request.user = user
+        self.session = session
 
-        # Save the session values.
-        request.session.save()
+    def save_session(self):
+        self.session.save()
 
-        # Set the cookie to represent the session.
-        session_cookie = settings.SESSION_COOKIE_NAME
-        self.client.cookies[session_cookie] = request.session.session_key
         cookie_data = {
             'max-age': None,
             'path': '/',
@@ -87,8 +80,23 @@ class BaseTestCase(Fixtures, Exam):
             'secure': settings.SESSION_COOKIE_SECURE or None,
             'expires': None,
         }
+
+        session_cookie = settings.SESSION_COOKIE_NAME
+        self.client.cookies[session_cookie] = self.session.session_key
         self.client.cookies[session_cookie].update(cookie_data)
 
+    def login_as(self, user):
+        user.backend = settings.AUTHENTICATION_BACKENDS[0]
+
+        request = HttpRequest()
+        request.session = self.session
+
+        login(request, user)
+        request.user = user
+
+        # Save the session values.
+        self.save_session()
+
     def load_fixture(self, filepath):
         filepath = os.path.join(
             MODULE_ROOT,
@@ -100,15 +108,17 @@ class BaseTestCase(Fixtures, Exam):
             return fp.read()
 
     def _pre_setup(self):
+        super(BaseTestCase, self)._pre_setup()
+
         cache.clear()
         ProjectOption.objects.clear_local_cache()
         GroupMeta.objects.clear_local_cache()
-        super(BaseTestCase, self)._pre_setup()
 
     def _post_teardown(self):
-        flush_redis()
         super(BaseTestCase, self)._post_teardown()
 
+        flush_redis()
+
     def _makeMessage(self, data):
         return json.dumps(data)
 
