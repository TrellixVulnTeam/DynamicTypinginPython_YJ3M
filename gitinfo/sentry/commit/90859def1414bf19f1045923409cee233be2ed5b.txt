commit 90859def1414bf19f1045923409cee233be2ed5b
Author: Jess MacQueen <jess@getsentry.com>
Date:   Tue Oct 10 14:37:48 2017 -0700

    ref(grouping): Abstract hash generation from fingerprint

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index b7e16f8230..35fea2427b 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -7,6 +7,7 @@ sentry.event_manager
 """
 from __future__ import absolute_import, print_function
 
+import functools
 import logging
 import math
 import six
@@ -101,9 +102,9 @@ def get_grouping_behavior(event):
     return ('fingerprint', get_hashes_from_fingerprint_with_reason(event, fingerprint))
 
 
-def get_hashes_from_fingerprint(event, fingerprint):
+def _get_hashes_from_fingerprint(get_hash_inputs, fingerprint):
     if any(d in fingerprint for d in DEFAULT_FINGERPRINT_VALUES):
-        default_hashes = get_hashes_for_event(event)
+        default_hashes = get_hash_inputs()
         hash_count = len(default_hashes)
     else:
         hash_count = 1
@@ -120,6 +121,13 @@ def get_hashes_from_fingerprint(event, fingerprint):
     return hashes
 
 
+def get_hashes_from_fingerprint(event, fingerprint):
+    return _get_hashes_from_fingerprint(
+        functools.partial(get_hashes_for_event, event),
+        fingerprint,
+    )
+
+
 def get_hashes_from_fingerprint_with_reason(event, fingerprint):
     if any(d in fingerprint for d in DEFAULT_FINGERPRINT_VALUES):
         default_hashes = get_hashes_for_event_with_reason(event)
