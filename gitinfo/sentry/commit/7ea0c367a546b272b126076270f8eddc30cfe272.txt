commit 7ea0c367a546b272b126076270f8eddc30cfe272
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Thu Mar 22 10:48:59 2018 -0700

    feat(assistant): improved design (#7498)
    
    * first cut of helper and assistant styles, no dropdown styles or guide styles
    
    * styled search results menu
    
    * fix bug where close button doesn't work
    
    * style assistant when it has a guide
    
    * styled guides
    
    * fix a few bugs
    
    * accidentally committed server config
    
    * go back to supportDrawer
    
    * remove assistant.less from sentry.less
    
    * re-add styled for guideAnchor
    
    * simple anchor positioning for now
    
    * remove a bunch of junk and componentize the styled close button
    
    * relative units: vws and ems, with a top-level rem size
    
    * use close button everywhere
    
    * better not great but better color for links
    
    * guide anchor has no width and no style options. style options can be handled by parent
    
    * very basic supportDrawer snapshot test
    
    * revert guideAnchor styling to old ways so that it doesn't cause xmillion bugs
    
    * user innerRef to fix ref bug with styled component
    
    * remove some changes accidentally added to crashHeader, probably from bad rebase or something
    
    * use proper pings colors
    
    * fix ping anchor positioning

diff --git a/src/sentry/static/sentry/app/components/assistant/assistantContainer.jsx b/src/sentry/static/sentry/app/components/assistant/assistantContainer.jsx
new file mode 100644
index 0000000000..d99e5a96fa
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/assistant/assistantContainer.jsx
@@ -0,0 +1,20 @@
+import styled from 'react-emotion';
+
+const AssistantContainer = styled('div')`
+  position: fixed;
+  z-index: ${p => p.theme.zIndex.modal};
+  width: 25vw;
+  max-width: 450px;
+  min-width: 300px;
+  bottom: 1vw;
+  right: 1vw;
+  background: ${p => p.theme.offWhite};
+  border: 1px solid ${p => p.theme.borderLight};
+  border-radius: 1.45em;
+  color: ${p => p.theme.purple};
+  font-weight: bold;
+  box-shadow: ${p => p.theme.dropShadowHeavy};
+}
+`;
+
+export default AssistantContainer;
diff --git a/src/sentry/static/sentry/app/components/assistant/closeIcon.jsx b/src/sentry/static/sentry/app/components/assistant/closeIcon.jsx
new file mode 100644
index 0000000000..c0be43c94b
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/assistant/closeIcon.jsx
@@ -0,0 +1,13 @@
+import React from 'react';
+import styled from 'react-emotion';
+import InlineSvg from '../../components/inlineSvg';
+
+const CloseIcon = styled(props => <InlineSvg src="icon-close-lg" {...props} />)`
+  stroke-width: 3px;
+  width: 0.75em;
+  height: 0.75em;
+  margin: 0 0.875em 0 0.66em;
+  cursor: pointer;
+`;
+
+export default CloseIcon;
diff --git a/src/sentry/static/sentry/app/components/assistant/cueIcon.jsx b/src/sentry/static/sentry/app/components/assistant/cueIcon.jsx
new file mode 100644
index 0000000000..a37ca29722
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/assistant/cueIcon.jsx
@@ -0,0 +1,16 @@
+import React from 'react';
+import styled from 'react-emotion';
+import InlineSvg from '../../components/inlineSvg';
+
+const QuestionMarkIcon = styled(({hasGuide, ...props}) => (
+  <InlineSvg
+    src={hasGuide ? 'icon-circle-exclamation' : 'icon-circle-question'}
+    {...props}
+  />
+))`
+  width: 2.75em;
+  height: 2.75em;
+  color: ${p => (p.hasGuide ? p.theme.greenLight : p.theme.purple)};
+`;
+
+export default QuestionMarkIcon;
diff --git a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
index 997fd88aad..ebfb1569bf 100644
--- a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
@@ -1,11 +1,12 @@
 import PropTypes from 'prop-types';
 import classNames from 'classnames';
 import React from 'react';
-import $ from 'jquery';
+import styled from 'react-emotion';
 import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
 import {registerAnchor, unregisterAnchor} from '../../actionCreators/guides';
 import GuideStore from '../../stores/guideStore';
+import {expandOut} from '../../styles/animations';
 
 // A guide anchor provides a ripple-effect on an element to draw attention to it.
 // Guide anchors register with the guide store, which uses this information to
@@ -33,14 +34,10 @@ const GuideAnchor = createReactClass({
   },
 
   componentDidUpdate(prevProps, prevState) {
-    // Invisible pings should not be scrolled to since they are not attached to a specific element.
     if (!prevState.active && this.state.active && this.props.type !== 'invisible') {
-      $('html, body').animate(
-        {
-          scrollTop: $(this.anchorElement).offset().top,
-        },
-        1000
-      );
+      this.anchorElement.scrollIntoView({
+        behavior: 'smooth',
+      });
     }
   },
 
@@ -67,19 +64,69 @@ const GuideAnchor = createReactClass({
     let {target, type} = this.props;
 
     return (
-      <div
-        ref={el => (this.anchorElement = el)}
-        className={classNames('guide-anchor', `anchor-type-${type}`)}
-      >
+      <GuideAnchorContainer innerRef={el => (this.anchorElement = el)} type={type}>
         {this.props.children}
-        <span
-          className={classNames(target, 'guide-anchor-ping', {
-            active: this.state.active,
-          })}
+        <StyledGuideAnchor
+          className={classNames('guide-anchor-ping', target)}
+          active={this.state.active}
         />
-      </div>
+      </GuideAnchorContainer>
     );
   },
 });
 
+const GuideAnchorContainer = styled('div')`
+  ${p =>
+    p.type == 'text' &&
+    `
+      display: inline-block;
+      position: relative;
+    `};
+`;
+
+const StyledGuideAnchor = styled('span')`
+  width: 20px;
+  height: 20px;
+  cursor: pointer;
+  z-index: 999;
+  position: relative;
+  pointer-events: none;
+  animation: ${expandOut} 1.5s ease-out infinite;
+  visibility: hidden;
+
+  &,
+  &:before,
+  &:after {
+    position: absolute;
+    display: block;
+    left: calc(50% - 10px);
+    top: calc(50% - 10px);
+    background-color: ${p => p.theme.greenTransparent25};
+    border-radius: 50%;
+  }
+
+  &:before,
+  &:after {
+    content: '';
+  }
+
+  &:before {
+    width: 70%;
+    height: 70%;
+    left: calc(50% - 7px);
+    top: calc(50% - 7px);
+    background-color: ${p => p.theme.greenTransparent25};
+  }
+
+  &:after {
+    width: 50%;
+    height: 50%;
+    left: calc(50% - 5px);
+    top: calc(50% - 5px);
+    color: ${p => p.theme.green};
+  }
+
+  ${p => (p.active ? 'visibility: visible;' : '')};
+`;
+
 export default GuideAnchor;
diff --git a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx b/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
index 64a0a0df8d..3acf900099 100644
--- a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
@@ -1,8 +1,12 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from 'react-emotion';
 import Button from '../buttons/button';
 import {t} from '../../locale';
 import {markUseful, nextStep} from '../../actionCreators/guides';
+import CueIcon from './cueIcon';
+import CloseIcon from './closeIcon';
+import AssistantContainer from './assistantContainer';
 
 // GuideDrawer is what slides up when the user clicks on a guide cue.
 export default class GuideDrawer extends React.Component {
@@ -20,35 +24,81 @@ export default class GuideDrawer extends React.Component {
 
   render() {
     return (
-      <div>
-        <div className="assistant-drawer-title">
-          {this.props.guide.steps[this.props.step - 1].title}
-        </div>
-        <div
-          className="assistant-drawer-message"
-          dangerouslySetInnerHTML={{
-            __html: this.props.guide.steps[this.props.step - 1].message,
-          }}
-        />
-        <div>
-          {this.props.step < this.props.guide.steps.length ? (
-            <div>
-              <Button onClick={nextStep}>{t('Next')} &rarr;</Button>
-              <Button onClick={this.props.onDismiss}>{t('Dismiss')}</Button>
-            </div>
-          ) : (
-            <div>
-              <p>{t('Did you find this guide useful?')}</p>
-              <Button onClick={() => this.handleUseful(true)}>
-                {t('Yes')} &nbsp; &#x2714;
-              </Button>
-              <Button onClick={() => this.handleUseful(false)}>
-                {t('No')} &nbsp; &#x2716;
-              </Button>
-            </div>
-          )}
-        </div>
-      </div>
+      <StyledAssistantContainer>
+        <StyledAssistantInputRow>
+          <CueIcon hasGuide={true} />
+          <StyledTitle>{this.props.guide.steps[this.props.step - 1].title}</StyledTitle>
+          <div
+            className="close-button"
+            style={{display: 'flex'}}
+            onClick={this.props.onDismiss}
+          >
+            <CloseIcon />
+          </div>
+        </StyledAssistantInputRow>
+        <StyledContent>
+          <div
+            dangerouslySetInnerHTML={{
+              __html: this.props.guide.steps[this.props.step - 1].message,
+            }}
+          />
+          <div style={{marginTop: '1em'}}>
+            {this.props.step < this.props.guide.steps.length ? (
+              <div>
+                <Button priority="success" size="small" onClick={nextStep}>
+                  {t('Next')} &rarr;
+                </Button>
+              </div>
+            ) : (
+              <div>
+                <p>{t('Did you find this guide useful?')}</p>
+                <Button
+                  priority="success"
+                  size="small"
+                  onClick={() => this.handleUseful(true)}
+                >
+                  {t('Yes')} &nbsp; &#x2714;
+                </Button>
+                <Button
+                  priority="success"
+                  size="small"
+                  style={{marginLeft: '0.25em'}}
+                  onClick={() => this.handleUseful(false)}
+                >
+                  {t('No')} &nbsp; &#x2716;
+                </Button>
+              </div>
+            )}
+          </div>
+        </StyledContent>
+      </StyledAssistantContainer>
     );
   }
 }
+
+const StyledAssistantContainer = styled(AssistantContainer)`
+  background-color: ${p => p.theme.greenDark};
+  border-color: ${p => p.theme.greenLight};
+  color: ${p => p.theme.offWhite};
+  height: auto;
+`;
+
+const StyledAssistantInputRow = styled('div')`
+  display: flex;
+  align-items: center;
+`;
+
+const StyledTitle = styled('div')`
+  font-size: 1.5em;
+  margin-left: 0.5em;
+  flex-grow: 1;
+`;
+
+const StyledContent = styled('div')`
+  margin: 1.5rem;
+  line-height: 1.5;
+
+  a {
+    color: ${p => p.theme.greenLight};
+  }
+`;
diff --git a/src/sentry/static/sentry/app/components/assistant/helper.jsx b/src/sentry/static/sentry/app/components/assistant/helper.jsx
index 617e3faa82..29d650e72c 100644
--- a/src/sentry/static/sentry/app/components/assistant/helper.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/helper.jsx
@@ -1,12 +1,15 @@
 import React from 'react';
 import Reflux from 'reflux';
 import createReactClass from 'create-react-class';
+import styled from 'react-emotion';
 import {t} from '../../locale';
-
 import {dismiss, closeGuide, fetchGuides, nextStep} from '../../actionCreators/guides';
 import SupportDrawer from './supportDrawer';
 import GuideDrawer from './guideDrawer';
 import GuideStore from '../../stores/guideStore';
+import CueIcon from './cueIcon';
+import AssistantContainer from './assistantContainer';
+import CloseIcon from './closeIcon';
 
 // AssistantHelper is responsible for rendering the cue message, guide drawer and support drawer.
 const AssistantHelper = createReactClass({
@@ -55,7 +58,7 @@ const AssistantHelper = createReactClass({
     });
   },
 
-  handleDismiss() {
+  handleDismiss(e) {
     dismiss(this.state.currentGuide.id);
     closeGuide();
   },
@@ -76,33 +79,95 @@ const AssistantHelper = createReactClass({
     }
 
     return (
-      <div className="assistant-container">
-        {showDrawer ? (
-          <div className="assistant-drawer">
-            {currentGuide ? (
-              <GuideDrawer
-                guide={currentGuide}
-                step={currentStep}
-                onFinish={closeGuide}
-                onDismiss={this.handleDismiss}
-              />
-            ) : (
-              <SupportDrawer onClose={this.handleSupportDrawerClose} />
-            )}
-          </div>
-        ) : (
-          <div>
-            <a onClick={this.handleDrawerOpen} className="assistant-cue">
-              {cueText}
-            </a>
+      <StyledHelper>
+        {showDrawer &&
+          this.state.currentGuide && (
+            <GuideDrawer
+              guide={currentGuide}
+              step={currentStep}
+              onFinish={closeGuide}
+              onDismiss={this.handleDismiss}
+            />
+          )}
+
+        {showDrawer &&
+          !this.state.currentGuide && (
+            <SupportDrawer onClose={this.handleSupportDrawerClose} />
+          )}
+
+        {!showDrawer && (
+          <StyledAssistantContainer
+            onClick={this.handleDrawerOpen}
+            className="assistant-cue"
+            hasGuide={this.state.currentGuide}
+          >
+            <CueIcon hasGuide={this.state.currentGuide} />
+            <StyledCueText hasGuide={this.state.currentGuide}>{cueText}</StyledCueText>
             {isGuideCued && (
-              <a onClick={this.handleDismiss} className="icon-close assistant-cue" />
+              <div style={{display: 'flex'}} onClick={this.handleDismiss}>
+                <CloseIcon />
+              </div>
             )}
-          </div>
+          </StyledAssistantContainer>
         )}
-      </div>
+      </StyledHelper>
     );
   },
 });
 
+//this globally controls the size of the component
+const StyledHelper = styled('div')`
+  font-size: 1.4rem;
+
+  &:hover {
+    cursor: pointer;
+  }
+`;
+
+const StyledCueText = styled('span')`
+  width: 0px;
+  overflow: hidden;
+  opacity: 0;
+  transition: 0.2s all;
+  white-space: nowrap;
+  color: ${p => p.purpleDark};
+
+  ${p =>
+    p.hasGuide &&
+    `
+    width: auto;
+    opacity: 1;
+    margin-left: 8px;
+  `};
+`;
+
+const StyledAssistantContainer = styled(AssistantContainer)`
+  display: flex;
+  align-items: center;
+  cursor: pointer;
+  max-width: 300px;
+  min-width: 0;
+  width: auto;
+
+  &:hover ${StyledCueText} {
+    ${p =>
+      !p.hasGuide &&
+      `
+      width: 6em;
+      // this is roughly long enough for the copy 'need help?'
+      // at any base font size. if you change the copy, change this value
+      opacity: 1;
+      margin: 0 0.5em;
+    `};
+  }
+
+  ${p =>
+    p.hasGuide &&
+    `
+    background-color: ${p.theme.greenDark};
+    border-color: ${p.theme.greenLight};
+    color: ${p.theme.offWhite};
+    `};
+`;
+
 export default AssistantHelper;
diff --git a/src/sentry/static/sentry/app/components/assistant/supportDrawer.jsx b/src/sentry/static/sentry/app/components/assistant/supportDrawer.jsx
index 0031ac1752..031901b91c 100644
--- a/src/sentry/static/sentry/app/components/assistant/supportDrawer.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/supportDrawer.jsx
@@ -3,9 +3,15 @@ import React from 'react';
 import _ from 'lodash';
 import createReactClass from 'create-react-class';
 import $ from 'jquery';
+import styled from 'react-emotion';
 import {t} from '../../locale';
 import ExternalLink from '../externalLink';
 import HookStore from '../../stores/hookStore';
+import CueIcon from './cueIcon';
+import CloseIcon from './closeIcon';
+import AssistantContainer from './assistantContainer';
+import Input from '../../views/settings/components/forms/controls/input';
+import InlineSvg from '../../components/inlineSvg';
 
 // SupportDrawer slides up when the user clicks on a "Need Help?" cue.
 const SupportDrawer = createReactClass({
@@ -27,10 +33,6 @@ const SupportDrawer = createReactClass({
     this.setState({inputVal: ''});
   },
 
-  handleSubmit(evt) {
-    evt.preventDefault();
-  },
-
   search: _.debounce(function() {
     if (this.state.inputVal.length <= 2) {
       this.setState({
@@ -77,14 +79,9 @@ const SupportDrawer = createReactClass({
       let link = `https://docs.sentry.io/${result.path}/`;
 
       return (
-        <li
-          className="search-tag search-tag-docs search-autocomplete-item"
-          key={i + 'doc'}
-        >
-          <ExternalLink href={link}>
-            <span className="title">{title}</span>
-          </ExternalLink>
-        </li>
+        <StyledExternalLink key={i + 'doc'} href={link}>
+          {title}
+        </StyledExternalLink>
       );
     });
   },
@@ -92,50 +89,106 @@ const SupportDrawer = createReactClass({
   renderHelpCenterResults() {
     return this.state.helpcenterResults.map((result, i) => {
       return (
-        <li className="search-tag search-tag-qa search-autocomplete-item" key={i}>
-          <ExternalLink href={result.html_url}>
-            <span className="title">{result.title}</span>
-          </ExternalLink>
-        </li>
+        <StyledExternalLink key={i} href={result.html_url}>
+          {result.title}
+        </StyledExternalLink>
       );
     });
   },
 
-  renderDropdownResults() {
+  render() {
     let docsResults = this.renderDocsResults();
     let helpcenterResults = this.renderHelpCenterResults();
     let results = helpcenterResults.concat(docsResults);
+    let hasResults = results && results.length > 0;
 
     return (
-      <div className="results">
-        <ul className="search-autocomplete-list">{results}</ul>
-      </div>
-    );
-  },
-
-  render() {
-    return (
-      <div className="search">
-        <form onSubmit={this.handleSubmit}>
-          <input
-            className="search-input form-control"
-            type="text"
-            placeholder={t('Search FAQs and docs...')}
-            onChange={this.handleChange}
-            value={this.state.inputVal}
-            autoFocus
-          />
-          <span className="icon-search" />
-          <a
-            className="icon-close pull-right search-close"
-            onClick={this.props.onClose}
-          />
-          {this.renderDropdownResults()}
-        </form>
+      <StyledAssistantContainer hasResults={hasResults}>
+        <StyledAssistantInputRow>
+          <CueIcon />
+          <StyledSearchContainer onSubmit={this.handleSubmit}>
+            <StyledSearchIcon src="icon-search" />
+            <StyledInput
+              type="text"
+              placeholder={t('Search FAQs and docs...')}
+              onChange={this.handleChange}
+              value={this.state.inputVal}
+              autoFocus
+            />
+            <div
+              className="close-button"
+              onClick={this.props.onClose}
+              style={{display: 'flex'}}
+            >
+              <CloseIcon />
+            </div>
+          </StyledSearchContainer>
+        </StyledAssistantInputRow>
+        {hasResults && <StyledResults>{results}</StyledResults>}
         {HookStore.get('assistant:support-button').map(cb => cb(this.state.inputVal))}
-      </div>
+      </StyledAssistantContainer>
     );
   },
 });
 
+const StyledAssistantContainer = styled(AssistantContainer)`
+  display: flex;
+  flex-direction: column;
+  transition: 0.1s height;
+  ${p => (p.hasResults ? 'height: 300px' : '')};
+`;
+
+const StyledAssistantInputRow = styled('div')`
+  display: flex;
+  align-items: center;
+`;
+
+const StyledInput = styled(Input)`
+  padding: 0.25em 0.25em 0.25em 1em;
+  height: 2em;
+  flex-grow: 1;
+  text-indent: 1em;
+  border-top-left-radius: 1.45rem;
+  border-bottom-left-radius: 1.45rem;
+
+  &:focus {
+    border-color: ${p => p.theme.borderLight};
+  }
+`;
+
+const StyledSearchIcon = styled(InlineSvg)`
+  left: 0.75em;
+  position: absolute;
+  top: 53%; //this is an optics thing
+  transform: translateY(-50%);
+  color: ${p => p.theme.gray1};
+`;
+
+const StyledSearchContainer = styled('form')`
+  position: relative;
+  margin-left: 0.5em;
+  display: flex;
+  align-items: center;
+  flex-grow: 1;
+`;
+
+const StyledResults = styled('div')`
+  flex-grow: 1;
+  flex-basis: 0;
+  overflow: scroll;
+  border-bottom-left-radius: 1.45em;
+  border-bottom-right-radius: 1.45em;
+`;
+
+const StyledExternalLink = styled(ExternalLink)`
+  color: ${p => p.theme.gray4};
+  display: block;
+  font-size: 0.875;
+  padding: 0.5em 1em;
+
+  &:not(:last-of-type) {
+    border-bottom: 1px solid ${p => p.theme.borderLight};
+  }
+`;
+
 export default SupportDrawer;
diff --git a/src/sentry/static/sentry/app/components/buttons/button.jsx b/src/sentry/static/sentry/app/components/buttons/button.jsx
index 3c2a005fa6..cd01419f31 100644
--- a/src/sentry/static/sentry/app/components/buttons/button.jsx
+++ b/src/sentry/static/sentry/app/components/buttons/button.jsx
@@ -19,7 +19,7 @@ const StyledInlineSvg = styled(InlineSvg)`
 
 class Button extends React.Component {
   static propTypes = {
-    priority: PropTypes.oneOf(['primary', 'danger', 'link']),
+    priority: PropTypes.oneOf(['primary', 'danger', 'link', 'success']),
     size: PropTypes.oneOf(['small', 'xsmall', 'large']),
     disabled: PropTypes.bool,
     busy: PropTypes.bool,
@@ -85,6 +85,7 @@ class Button extends React.Component {
 
     let isPrimary = priority === 'primary' && !disabled;
     let isDanger = priority === 'danger' && !disabled;
+    let isSuccess = priority === 'success' && !disabled;
     let isLink = priority === 'link';
 
     let cx = classNames(className, 'button', {
@@ -92,6 +93,7 @@ class Button extends React.Component {
       'button-no-border': borderless,
       'button-primary': isPrimary,
       'button-danger': isDanger,
+      'button-success': isSuccess,
       'button-link': isLink && !isPrimary && !isDanger,
       'button-default': !isLink && !isPrimary && !isDanger,
       'button-sm': size === 'small',
diff --git a/src/sentry/static/sentry/app/styles/animations.jsx b/src/sentry/static/sentry/app/styles/animations.jsx
index 8eb4fa88bb..dffcee395f 100644
--- a/src/sentry/static/sentry/app/styles/animations.jsx
+++ b/src/sentry/static/sentry/app/styles/animations.jsx
@@ -29,3 +29,15 @@ export const pulse = keyframes`
     transform: scale(1, 1);
   }
 `;
+
+export const expandOut = keyframes`
+  0% {
+    transform: scale(1, 1);
+    opacity: 1;
+  }
+
+  100% {
+    transform: scale(5, 5);
+    opacity: 0;
+  }
+`;
diff --git a/src/sentry/static/sentry/app/utils/theme.jsx b/src/sentry/static/sentry/app/utils/theme.jsx
index 03c09b2b4b..68f7519547 100644
--- a/src/sentry/static/sentry/app/utils/theme.jsx
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -15,6 +15,8 @@ const theme = {
   green: '#57be8c',
   greenLight: '#71D8A6',
   greenDark: '#3EA573',
+  greenTransparent25: 'rgba(87, 190, 140, 0.25)',
+  greenTransparent50: 'rgba(87, 190, 140, 0.5)',
 
   yellow: '#ecc844',
   yellowLightest: '#FFFDF7',
diff --git a/src/sentry/static/sentry/less/assistant.less b/src/sentry/static/sentry/less/assistant.less
deleted file mode 100644
index e1f877dfc0..0000000000
--- a/src/sentry/static/sentry/less/assistant.less
+++ /dev/null
@@ -1,154 +0,0 @@
-@keyframes expand {
-  from {
-    width: 20px;
-    height: 20px;
-    opacity: 1;
-  }
-
-  to {
-    width: 100px;
-    height: 100px;
-    opacity: 0;
-  }
-}
-
-@keyframes hover {
-  0% {
-    transform: translateY(0px);
-  }
-
-  50% {
-    transform: translateY(-4px);
-  }
-
-  100% {
-    transform: translateY(0px);
-  }
-}
-
-@keyframes slideup {
-  0% {
-    opacity: 0;
-    transform: translateY(10px);
-  }
-
-  50% {
-    opacity: 1;
-    transform: translateY(-5px);
-  }
-
-  100% {
-    transform: translateY(0px);
-  }
-}
-
-.guide-anchor-ping {
-  width: 20px;
-  height: 20px;
-  cursor: pointer;
-  z-index: 999;
-  position: relative;
-  pointer-events: none;
-  animation: 1.5s ease-out infinite expand;
-  visibility: hidden;
-
-  &,
-  &:before,
-  &:after {
-    position: absolute;
-    display: block;
-    left: 50%;
-    top: 50%;
-    transform: translate(-50%, -50%);
-    background-color: fade(@green, 25%);
-    border-radius: 50%;
-  }
-
-  &:before,
-  &:after {
-    content: '';
-  }
-
-  &:before {
-    width: 75%;
-    height: 75%;
-    background-color: fade(@green, 50%);
-  }
-
-  &:after {
-    width: 50%;
-    height: 50%;
-    color: @green;
-  }
-}
-
-.guide-anchor-ping.active {
-  visibility: visible;
-}
-
-.guide-anchor.anchor-type-text {
-  display: inline-block;
-  position: relative;
-}
-
-.assistant-container {
-  display: flex;
-  justify-content: space-around;
-  color: #fff;
-  position: fixed;
-  left: 0;
-  bottom: 0;
-  width: 100%;
-  z-index: 1030;
-  pointer-events: none;
-}
-
-.assistant-cue {
-  transition: 0.2s opacity;
-  background: @green;
-  padding: 0.1em 1em;
-  margin-bottom: 0.5em;
-  font-size: 0.9em;
-  border-radius: 5em;
-  cursor: pointer;
-  pointer-events: auto;
-}
-
-.assistant-drawer {
-  left: 0px;
-  background: @green;
-  flex: 1;
-  padding: 1em;
-
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  pointer-events: auto;
-
-  .search {
-    flex-basis: 50%;
-
-    .search-close {
-      color: #89779a;
-      position: absolute;
-      top: 12px;
-      right: 14px;
-      font-size: 14px;
-    }
-
-    .results {
-      height: 240px;
-      overflow: scroll;
-    }
-  }
-}
-
-.assistant-drawer-message {
-  margin-bottom: 1em;
-}
-
-.assistant-drawer-title {
-  font-size: 1.5em;
-  font-weight: bold;
-  margin-bottom: 0.5em;
-}
diff --git a/src/sentry/static/sentry/less/components/button.less b/src/sentry/static/sentry/less/components/button.less
index ebeec4fd9e..781dee8055 100644
--- a/src/sentry/static/sentry/less/components/button.less
+++ b/src/sentry/static/sentry/less/components/button.less
@@ -99,6 +99,19 @@
   }
 }
 
+.button-success {
+  color: #fff;
+  background: @green-dark;
+  border: 1px solid @green-light;
+  &:hover,
+  &:focus,
+  &:active {
+    color: #fff;
+    background: @green;
+    border-color: @green-light;
+  }
+}
+
 .button-busy {
   opacity: 0.65;
 }
diff --git a/src/sentry/static/sentry/less/sentry.less b/src/sentry/static/sentry/less/sentry.less
index eea8eb9795..516244e1cd 100644
--- a/src/sentry/static/sentry/less/sentry.less
+++ b/src/sentry/static/sentry/less/sentry.less
@@ -30,7 +30,6 @@
 @import url('./browser-icons.less');
 @import url('./dropdowns.less');
 @import url('./errors.less');
-@import url('./assistant.less');
 
 // Page specific
 
diff --git a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
index 7af161fb2b..86c56b6d8b 100644
--- a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
+++ b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
@@ -1,6 +1,52 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`ResolveActions with confirmation step renders 1`] = `
+.glamor-2 {
+  display: inline-block;
+  position: relative;
+}
+
+.glamor-0 {
+  width: 20px;
+  height: 20px;
+  cursor: pointer;
+  z-index: 999;
+  position: relative;
+  pointer-events: none;
+  -webkit-animation: animation-1vh9m9r-expandOut 1.5s ease-out infinite;
+  animation: animation-1vh9m9r-expandOut 1.5s ease-out infinite;
+  visibility: hidden;
+}
+
+.glamor-0,
+.glamor-0:before,
+.glamor-0:after {
+  position: absolute;
+  display: block;
+  left: calc(50% - 10px);
+  top: calc(50% - 10px);
+  border-radius: 50%;
+}
+
+.glamor-0:before,
+.glamor-0:after {
+  content: '';
+}
+
+.glamor-0:before {
+  width: 70%;
+  height: 70%;
+  left: calc(50% - 7px);
+  top: calc(50% - 7px);
+}
+
+.glamor-0:after {
+  width: 50%;
+  height: 50%;
+  left: calc(50% - 5px);
+  top: calc(50% - 5px);
+}
+
 <ResolveActions
   confirmLabel="Resolve"
   confirmMessage="Are you sure???"
@@ -116,13 +162,24 @@ exports[`ResolveActions with confirmation step renders 1`] = `
               target="resolve"
               type="text"
             >
-              <div
-                className="guide-anchor anchor-type-text"
+              <GuideAnchorContainer
+                innerRef={[Function]}
+                type="text"
               >
-                <span
-                  className="resolve guide-anchor-ping"
-                />
-              </div>
+                <div
+                  className="glamor-2 glamor-3"
+                  type="text"
+                >
+                  <StyledGuideAnchor
+                    active={false}
+                    className="guide-anchor-ping resolve"
+                  >
+                    <span
+                      className="guide-anchor-ping resolve glamor-0 glamor-1"
+                    />
+                  </StyledGuideAnchor>
+                </div>
+              </GuideAnchorContainer>
             </GuideAnchor>
             Resolve
           </a>
@@ -433,6 +490,52 @@ exports[`ResolveActions with confirmation step renders 1`] = `
 `;
 
 exports[`ResolveActions without confirmation renders 1`] = `
+.glamor-2 {
+  display: inline-block;
+  position: relative;
+}
+
+.glamor-0 {
+  width: 20px;
+  height: 20px;
+  cursor: pointer;
+  z-index: 999;
+  position: relative;
+  pointer-events: none;
+  -webkit-animation: animation-1vh9m9r-expandOut 1.5s ease-out infinite;
+  animation: animation-1vh9m9r-expandOut 1.5s ease-out infinite;
+  visibility: hidden;
+}
+
+.glamor-0,
+.glamor-0:before,
+.glamor-0:after {
+  position: absolute;
+  display: block;
+  left: calc(50% - 10px);
+  top: calc(50% - 10px);
+  border-radius: 50%;
+}
+
+.glamor-0:before,
+.glamor-0:after {
+  content: '';
+}
+
+.glamor-0:before {
+  width: 70%;
+  height: 70%;
+  left: calc(50% - 7px);
+  top: calc(50% - 7px);
+}
+
+.glamor-0:after {
+  width: 50%;
+  height: 50%;
+  left: calc(50% - 5px);
+  top: calc(50% - 5px);
+}
+
 <ResolveActions
   confirmLabel="Resolve"
   hasRelease={false}
@@ -537,13 +640,24 @@ exports[`ResolveActions without confirmation renders 1`] = `
             target="resolve"
             type="text"
           >
-            <div
-              className="guide-anchor anchor-type-text"
+            <GuideAnchorContainer
+              innerRef={[Function]}
+              type="text"
             >
-              <span
-                className="resolve guide-anchor-ping"
-              />
-            </div>
+              <div
+                className="glamor-2 glamor-3"
+                type="text"
+              >
+                <StyledGuideAnchor
+                  active={false}
+                  className="guide-anchor-ping resolve"
+                >
+                  <span
+                    className="guide-anchor-ping resolve glamor-0 glamor-1"
+                  />
+                </StyledGuideAnchor>
+              </div>
+            </GuideAnchorContainer>
           </GuideAnchor>
           Resolve
         </a>
diff --git a/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap b/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap
index a4bed7b5ae..3cad355b06 100644
--- a/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap
+++ b/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap
@@ -1,21 +1,25 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`GuideAnchor renders 1`] = `
-<div
-  className="guide-anchor anchor-type-text"
+<GuideAnchorContainer
+  innerRef={[Function]}
+  type="text"
 >
-  <span
-    className="target 1 guide-anchor-ping"
+  <StyledGuideAnchor
+    active={false}
+    className="guide-anchor-ping target 1"
   />
-</div>
+</GuideAnchorContainer>
 `;
 
 exports[`GuideAnchor turns active when guide state changes 1`] = `
-<div
-  className="guide-anchor anchor-type-text"
+<GuideAnchorContainer
+  innerRef={[Function]}
+  type="text"
 >
-  <span
-    className="target 1 guide-anchor-ping active"
+  <StyledGuideAnchor
+    active={true}
+    className="guide-anchor-ping target 1"
   />
-</div>
+</GuideAnchorContainer>
 `;
diff --git a/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap b/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap
index 51140d0b58..faa091308e 100644
--- a/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap
+++ b/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap
@@ -1,75 +1,122 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`GuideDrawer gets dismissed 1`] = `
-<div>
-  <div
-    className="assistant-drawer-title"
-  >
-    1. Title 1
-  </div>
-  <div
-    className="assistant-drawer-message"
-    dangerouslySetInnerHTML={
-      Object {
-        "__html": "Message 1",
+<StyledAssistantContainer>
+  <StyledAssistantInputRow>
+    <QuestionMarkIcon
+      hasGuide={true}
+    />
+    <StyledTitle>
+      1. Title 1
+    </StyledTitle>
+    <div
+      className="close-button"
+      onClick={[MockFunction]}
+      style={
+        Object {
+          "display": "flex",
+        }
       }
-    }
-  />
-  <div>
-    <div>
-      <Button
-        disabled={false}
-        onClick={[Function]}
-      >
-        Next
-         →
-      </Button>
-      <Button
-        disabled={false}
-        onClick={[MockFunction]}
-      >
-        Dismiss
-      </Button>
+    >
+      <CloseIcon />
     </div>
-  </div>
-</div>
+  </StyledAssistantInputRow>
+  <StyledContent>
+    <div
+      dangerouslySetInnerHTML={
+        Object {
+          "__html": "Message 1",
+        }
+      }
+    />
+    <div
+      style={
+        Object {
+          "marginTop": "1em",
+        }
+      }
+    >
+      <div>
+        <Button
+          disabled={false}
+          onClick={[Function]}
+          priority="success"
+          size="small"
+        >
+          Next
+           →
+        </Button>
+      </div>
+    </div>
+  </StyledContent>
+</StyledAssistantContainer>
 `;
 
 exports[`GuideDrawer renders next step 1`] = `
-<div>
-  <div
-    className="assistant-drawer-title"
-  >
-    2. Title 2
-  </div>
-  <div
-    className="assistant-drawer-message"
-    dangerouslySetInnerHTML={
-      Object {
-        "__html": "Message 2",
+<StyledAssistantContainer>
+  <StyledAssistantInputRow>
+    <QuestionMarkIcon
+      hasGuide={true}
+    />
+    <StyledTitle>
+      2. Title 2
+    </StyledTitle>
+    <div
+      className="close-button"
+      onClick={[MockFunction]}
+      style={
+        Object {
+          "display": "flex",
+        }
+      }
+    >
+      <CloseIcon />
+    </div>
+  </StyledAssistantInputRow>
+  <StyledContent>
+    <div
+      dangerouslySetInnerHTML={
+        Object {
+          "__html": "Message 2",
+        }
+      }
+    />
+    <div
+      style={
+        Object {
+          "marginTop": "1em",
+        }
       }
-    }
-  />
-  <div>
-    <div>
-      <p>
-        Did you find this guide useful?
-      </p>
-      <Button
-        disabled={false}
-        onClick={[Function]}
-      >
-        Yes
-           ✔
-      </Button>
-      <Button
-        disabled={false}
-        onClick={[Function]}
-      >
-        No
-           ✖
-      </Button>
+    >
+      <div>
+        <p>
+          Did you find this guide useful?
+        </p>
+        <Button
+          disabled={false}
+          onClick={[Function]}
+          priority="success"
+          size="small"
+        >
+          Yes
+             ✔
+        </Button>
+        <Button
+          disabled={false}
+          onClick={[Function]}
+          priority="success"
+          size="small"
+          style={
+            Object {
+              "marginLeft": "0.25em",
+            }
+          }
+        >
+          No
+             ✖
+        </Button>
+      </div>
     </div>
-  </div>
-</div>
+  </StyledContent>
+</StyledAssistantContainer>
 `;
diff --git a/tests/js/spec/components/assistant/__snapshots__/helper.spec.jsx.snap b/tests/js/spec/components/assistant/__snapshots__/helper.spec.jsx.snap
index 81d1d7d565..cefb39ee6e 100644
--- a/tests/js/spec/components/assistant/__snapshots__/helper.spec.jsx.snap
+++ b/tests/js/spec/components/assistant/__snapshots__/helper.spec.jsx.snap
@@ -1,68 +1,60 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`Helper renders cue 1`] = `
-<div
-  className="assistant-container"
->
-  <div>
-    <a
-      className="assistant-cue"
-      onClick={[Function]}
+<StyledHelper>
+  <StyledAssistantContainer
+    className="assistant-cue"
+    hasGuide={null}
+    onClick={[Function]}
+  >
+    <QuestionMarkIcon
+      hasGuide={null}
+    />
+    <StyledCueText
+      hasGuide={null}
     >
       Need Help?
-    </a>
-  </div>
-</div>
+    </StyledCueText>
+  </StyledAssistantContainer>
+</StyledHelper>
 `;
 
 exports[`Helper renders guide drawer 1`] = `
-<div
-  className="assistant-container"
->
-  <div
-    className="assistant-drawer"
-  >
-    <GuideDrawer
-      guide={
-        Object {
-          "cue": "Click here for a tour of the issue page",
-          "id": 1,
-          "page": "issue",
-          "required_targets": Array [
-            "target 1",
-          ],
-          "steps": Array [
-            Object {
-              "message": "Message 1",
-              "target": "target 1",
-              "title": "1. Title 1",
-            },
-            Object {
-              "message": "Message 2",
-              "target": "target 2",
-              "title": "2. Title 2",
-            },
-          ],
-        }
+<StyledHelper>
+  <GuideDrawer
+    guide={
+      Object {
+        "cue": "Click here for a tour of the issue page",
+        "id": 1,
+        "page": "issue",
+        "required_targets": Array [
+          "target 1",
+        ],
+        "steps": Array [
+          Object {
+            "message": "Message 1",
+            "target": "target 1",
+            "title": "1. Title 1",
+          },
+          Object {
+            "message": "Message 2",
+            "target": "target 2",
+            "title": "2. Title 2",
+          },
+        ],
       }
-      onDismiss={[Function]}
-      onFinish={[Function]}
-      step={1}
-    />
-  </div>
-</div>
+    }
+    onDismiss={[Function]}
+    onFinish={[Function]}
+    step={1}
+  />
+</StyledHelper>
 `;
 
 exports[`Helper renders support drawer 1`] = `
-<div
-  className="assistant-container"
->
-  <div
-    className="assistant-drawer"
-  >
-    <SupportDrawer
-      onClose={[Function]}
-    />
-  </div>
-</div>
+<StyledHelper>
+  <SupportDrawer
+    onClose={[Function]}
+  />
+</StyledHelper>
 `;
diff --git a/tests/js/spec/components/assistant/__snapshots__/supportDrawer.spec.jsx.snap b/tests/js/spec/components/assistant/__snapshots__/supportDrawer.spec.jsx.snap
new file mode 100644
index 0000000000..2a7c73568c
--- /dev/null
+++ b/tests/js/spec/components/assistant/__snapshots__/supportDrawer.spec.jsx.snap
@@ -0,0 +1,34 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`SupportDrawer renders 1`] = `
+<StyledAssistantContainer
+  hasResults={false}
+>
+  <StyledAssistantInputRow>
+    <QuestionMarkIcon />
+    <StyledSearchContainer>
+      <StyledSearchIcon
+        src="icon-search"
+      />
+      <StyledInput
+        autoFocus={true}
+        onChange={[Function]}
+        placeholder="Search FAQs and docs..."
+        type="text"
+        value=""
+      />
+      <div
+        className="close-button"
+        onClick={[Function]}
+        style={
+          Object {
+            "display": "flex",
+          }
+        }
+      >
+        <CloseIcon />
+      </div>
+    </StyledSearchContainer>
+  </StyledAssistantInputRow>
+</StyledAssistantContainer>
+`;
diff --git a/tests/js/spec/components/assistant/guideDrawer.spec.jsx b/tests/js/spec/components/assistant/guideDrawer.spec.jsx
index 919af57845..5164dd3637 100644
--- a/tests/js/spec/components/assistant/guideDrawer.spec.jsx
+++ b/tests/js/spec/components/assistant/guideDrawer.spec.jsx
@@ -23,7 +23,7 @@ describe('GuideDrawer', function() {
     );
     expect(wrapper).toMatchSnapshot();
     wrapper
-      .find('Button')
+      .find('.close-button')
       .last()
       .simulate('click');
     expect(mock2).toHaveBeenCalled();
diff --git a/tests/js/spec/components/assistant/supportDrawer.spec.jsx b/tests/js/spec/components/assistant/supportDrawer.spec.jsx
new file mode 100644
index 0000000000..6ededb1eb7
--- /dev/null
+++ b/tests/js/spec/components/assistant/supportDrawer.spec.jsx
@@ -0,0 +1,10 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import SupportDrawer from 'app/components/assistant/supportDrawer';
+
+describe('SupportDrawer', function() {
+  it('renders', function() {
+    let wrapper = shallow(<SupportDrawer onClose={() => {}} />);
+    expect(wrapper).toMatchSnapshot();
+  });
+});
