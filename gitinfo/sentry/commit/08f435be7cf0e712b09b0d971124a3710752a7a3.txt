commit 08f435be7cf0e712b09b0d971124a3710752a7a3
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Oct 15 01:05:08 2015 +0200

    Always invoke send_activity_notifications and added test.

diff --git a/src/sentry/models/activity.py b/src/sentry/models/activity.py
index 55029c18f9..a67b8cb9a0 100644
--- a/src/sentry/models/activity.py
+++ b/src/sentry/models/activity.py
@@ -18,7 +18,7 @@ from sentry.db.models import (
     sane_repr
 )
 from sentry.utils.http import absolute_uri
-from sentry.tasks.activity import send_activity_notifications
+from sentry.tasks import activity
 
 
 class Activity(Model):
@@ -129,6 +129,8 @@ class Activity(Model):
         if self.type not in (Activity.NOTE, Activity.ASSIGNED, Activity.RELEASE):
             return
 
+        activity.send_activity_notifications.delay(self.id)
+
         send_to = self.get_recipients()
 
         if not send_to:
@@ -208,5 +210,3 @@ class Activity(Model):
         )
         msg.add_users(send_to, project=self.project)
         msg.send_async()
-
-        send_activity_notifications.delay(self.id)
diff --git a/src/sentry/tasks/activity.py b/src/sentry/tasks/activity.py
index 17698b5985..d19888270d 100644
--- a/src/sentry/tasks/activity.py
+++ b/src/sentry/tasks/activity.py
@@ -33,7 +33,7 @@ def get_activity_notifiers(project):
 
 
 @instrumented_task(
-    name='sentry.models.activity.send_activity_notifications')
+    name='sentry.tasks.activity.send_activity_notifications')
 def send_activity_notifications(activity_id):
     from sentry.models import Activity
 
diff --git a/tests/sentry/tasks/test_activity.py b/tests/sentry/tasks/test_activity.py
new file mode 100644
index 0000000000..00098a3a27
--- /dev/null
+++ b/tests/sentry/tasks/test_activity.py
@@ -0,0 +1,38 @@
+from __future__ import absolute_import
+
+import mock
+
+from sentry.plugins import NotificationPlugin
+from sentry.testutils import PluginTestCase
+from sentry.models import Activity
+
+
+class BasicPreprocessorPlugin(NotificationPlugin):
+
+    def notify_about_activity(self, activity):
+        pass
+
+    def is_enabled(self, project=None):
+        return True
+
+
+class ActivityNotificationsTest(PluginTestCase):
+    plugin = BasicPreprocessorPlugin
+
+    @mock.patch('sentry.tasks.activity.send_activity_notifications')
+    def test_simple(self, mock_func):
+        group = self.create_group()
+        print mock_func
+
+        activity = Activity.objects.create(
+            project=group.project,
+            group=group,
+            type=Activity.ASSIGNED,
+            user=self.user,
+            data={
+                'assignee': None,
+            }
+        )
+        activity.send_notification()
+
+        assert mock_func.delay.call_count == 1
