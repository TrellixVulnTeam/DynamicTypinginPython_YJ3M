commit e34d18eb1b917760c4e586a591d0fa9769adbe37
Author: Yuri Baburov <burchik@gmail.com>
Date:   Sat Dec 4 00:22:58 2010 +0600

    Added async client.

diff --git a/sentry/client/async.py b/sentry/client/async.py
new file mode 100644
index 0000000000..cbddae7a73
--- /dev/null
+++ b/sentry/client/async.py
@@ -0,0 +1,36 @@
+from Queue import Queue
+from sentry.client.base import SentryClient
+from threading import Thread
+
+class SentryAsyncClient(SentryClient):
+    """This client uses a single background thread to dispatch errors."""
+    _terminator = object()
+
+    def __init__(self):
+        """Starts the task thread."""
+        self.queue = Queue(-1)
+        self.running = True
+        self._thread = Thread(target=self._target)
+        self._thread.setDaemon(True)
+        self._thread.start()
+
+    def stop(self):
+        """Stops the task thread. Synchronous!"""
+        if self.running:
+            self.queue.put_nowait(self._terminator)
+            self._thread.join()
+            self._thread = None
+
+    def _target(self):
+        while 1:
+            record = self.queue.get()
+            if record is self._terminator:
+                self.running = False
+                break
+            self.send_sync(**record)
+
+    def send_sync(self, **kwargs):
+        super(SentryAsyncClient, self).send(**kwargs)
+
+    def send(self, **kwargs):
+        self.queue.put_nowait(kwargs)
