commit 833f999d2b4586e77672b8370a3bc342c1248f69
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Mar 15 21:39:36 2016 +0100

    Changes to repair command
    
    - move doc synching behind flag
    - add (slow) callsign repair. Will improve later.

diff --git a/src/sentry/runner/commands/repair.py b/src/sentry/runner/commands/repair.py
index 09dd9af83c..cca7922aac 100644
--- a/src/sentry/runner/commands/repair.py
+++ b/src/sentry/runner/commands/repair.py
@@ -9,14 +9,44 @@ from __future__ import absolute_import, print_function
 
 import os
 import click
+from contextlib import contextmanager
+
+from django.db import transaction
+
 from sentry.runner.decorators import configuration
+from sentry.utils.strings import iter_callsign_choices
 
 
-@click.command()
-@configuration
-def repair():
-    "Attempt to repair any invalid data."
+class RollbackLocally(Exception):
+    pass
+
+
+@contextmanager
+def catchable_atomic():
+    try:
+        with transaction.atomic():
+            yield
+    except RollbackLocally:
+        pass
+
 
+def get_callsigns(projects):
+    rv = {}
+
+    for project in projects:
+        if project.callsign is not None:
+            rv[project.callsign] = project.id
+            continue
+        for callsign in iter_callsign_choices(project.name):
+            if callsign in rv:
+                continue
+            rv[callsign] = project.id
+            break
+
+    return dict((v, k) for k, v in rv.iteritems())
+
+
+def sync_docs():
     click.echo('Forcing documentation sync')
     from sentry.utils.integrationdocs import sync_docs, DOC_FOLDER
     if os.access(DOC_FOLDER, os.W_OK):
@@ -29,8 +59,49 @@ def repair():
     else:
         click.echo(' - skipping, path does not exist: %r' % DOC_FOLDER)
 
-    from sentry.models import Activity, Project, ProjectKey
-    click.echo('Creating missing project keys')
+
+def repair_callsigns():
+    from sentry.utils.query import RangeQuerySetWrapperWithProgressBar, \
+        RangeQuerySetWrapper
+    from sentry.models.counter import increment_project_counter
+    from sentry.models import Organization, Group, Project, ProjectOption
+
+    click.echo('Repairing callsigns')
+
+    queryset = Organization.objects.all()
+
+    for org in RangeQuerySetWrapperWithProgressBar(queryset):
+        projects = list(org.project_set.all())
+        callsigns = get_callsigns(projects)
+        for project in projects:
+            if project.callsign is None:
+                Project.objects.filter(
+                    pk=project.id,
+                    callsign=None
+                ).update(callsign=callsigns[project.id])
+                ProjectOption.objects.filter(
+                    project=project,
+                    key='sentry:reviewed-callsign'
+                ).delete()
+            q = Group.objects.filter(
+                project=project,
+                short_id=None,
+            )
+            for group in RangeQuerySetWrapper(q):
+                with catchable_atomic():
+                    pending_short_id = increment_project_counter(
+                        project)
+                    updated = Group.objects.filter(
+                        pk=group.id,
+                        short_id=None
+                    ).update(short_id=pending_short_id)
+                    if updated == 0:
+                        raise RollbackLocally()
+
+
+def create_missing_dsns():
+    from sentry.models import Project, ProjectKey
+    click.echo('Creating missing DSNs')
     queryset = Project.objects.filter(key_set__isnull=True)
     for project in queryset:
         try:
@@ -40,8 +111,11 @@ def repair():
         except ProjectKey.MultipleObjectsReturned:
             pass
 
+
+def fix_group_counters():
+    from sentry.models import Activity
     from django.db import connection
-    click.echo("Correcting Group.num_comments counter")
+    click.echo('Correcting Group.num_comments counter')
     cursor = connection.cursor()
     cursor.execute("""
         UPDATE sentry_groupedmessage SET num_comments = (
@@ -49,3 +123,30 @@ def repair():
             WHERE type = %s and group_id = sentry_groupedmessage.id
         )
     """, [Activity.NOTE])
+
+
+@click.command()
+@click.option('--with-docs/--without-docs', default=False,
+              help='Synchronize and repair embedded documentation. This '
+              'is disabled by default.')
+@click.option('--with-callsigns/--without-callsigns', default=False,
+              help='Repair and fill callsigns. This is disabled by default.')
+@configuration
+def repair(with_docs, with_callsigns):
+    """Attempt to repair any invalid data.
+
+    This by default will correct some common issues like projects missing
+    DSNs or counters desynchronizing.  Optionally it can also synchronize
+    the current client documentation from the Sentry documentation server
+    (--with-docs) and repair missing or broken callsigns and short IDs
+    (--with-callsigns).
+    """
+
+    if with_docs:
+        sync_docs()
+
+    if with_callsigns:
+        repair_callsigns()
+
+    create_missing_dsns()
+    fix_group_counters()
