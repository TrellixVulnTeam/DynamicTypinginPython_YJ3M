commit c272c63f2b4393c0aca8f2342b96bdd3e8964f7e
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Dec 28 11:26:49 2012 -0800

    Really correct checksum ordering (this is why we write tests)

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index fb29154da3..c3849317c0 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -501,8 +501,8 @@ class Http(Interface):
     >>>  }
     """
 
-    display = 800
-    score = 10000
+    display_score = 10000
+    score = 800
 
     # methods as defined by http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html + PATCH
     METHODS = ('GET', 'POST', 'PUT', 'OPTIONS', 'HEAD', 'DELETE', 'TRACE', 'CONNECT', 'PATCH')
diff --git a/src/sentry/models.py b/src/sentry/models.py
index 899e286b69..c78aec5735 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -566,9 +566,11 @@ class Event(MessageBase):
                 cls = import_string(key)
             except ImportError:
                 pass  # suppress invalid interfaces
+
             value = cls(**data)
-            result.append((value.score, key, value))
-        return SortedDict((k, v) for _, k, v in sorted(result, key=lambda x: x[0], reverse=True))
+            result.append((key, value))
+
+        return SortedDict((k, v) for k, v in sorted(result, key=lambda x: x[1].get_score(), reverse=True))
 
     def get_version(self):
         if not self.data:
diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index 3e736ae556..db652c2284 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -8,6 +8,7 @@ import pytest
 
 from django.utils import timezone
 from sentry.interfaces import Interface
+from sentry.manager import get_checksum_from_event
 from sentry.models import Event, Group, Project, MessageCountByMinute, ProjectCountByMinute, \
   SearchDocument
 from sentry.utils.db import has_trending  # NOQA
@@ -248,3 +249,30 @@ class TrendsTest(TestCase):
 
         results = list(Group.objects.get_accelerated([project.id], base_qs)[:25])
         self.assertEquals(results, [group, group2])
+
+
+class GetChecksumFromEventTest(TestCase):
+    @mock.patch('sentry.interfaces.Stacktrace.get_composite_hash')
+    @mock.patch('sentry.interfaces.Http.get_composite_hash')
+    def test_stacktrace_wins_over_http(self, http_comp_hash, stack_comp_hash):
+        # this was a regression, and a very important one
+        http_comp_hash.return_value = ['baz']
+        stack_comp_hash.return_value = ['foo', 'bar']
+        event = Event(
+            data={
+                'sentry.interfaces.Stacktrace': {
+                    'frames': [{
+                        'lineno': 1,
+                        'filename': 'foo.py',
+                    }],
+                },
+                'sentry.interfaces.Http': {
+                    'url': 'http://example.com'
+                },
+            },
+            message='Foo bar',
+        )
+        checksum = get_checksum_from_event(event)
+        stack_comp_hash.assert_called_once_with(interfaces=event.interfaces)
+        assert not http_comp_hash.called
+        assert checksum == '3858f62230ac3c915f300c664312c63f'
