commit 89c8985f2ffd27cf6a23d819ea022aa352220f8a
Author: David Cramer <dcramer@gmail.com>
Date:   Fri May 29 21:53:44 2015 +0200

    Various improvements to updates

diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 312e1f6c44..43722aff37 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -95,11 +95,10 @@ class Client {
         funcs.push(arguments[i]);
       }
     }
-
-    return () => {
-      funcs.forEach((func) => {
-        func.apply(this, arguments);
-      });
+    return function() {
+      for (var i = 0; i < funcs.length; i++ ) {
+        funcs[i].apply(funcs[i], arguments);
+      }
     };
   }
 
diff --git a/src/sentry/static/sentry/app/stores/groupStore.jsx b/src/sentry/static/sentry/app/stores/groupStore.jsx
index e4a7daf8bd..8a26109bfd 100644
--- a/src/sentry/static/sentry/app/stores/groupStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupStore.jsx
@@ -258,10 +258,11 @@ var GroupStore = Reflux.createStore({
     if (typeof itemIds === 'undefined') {
       itemIds = this.items.map(item => item.id);
     }
-    this.items.forEach(item => {
-      var idx = itemIds.indexOf(item.id);
-      if (idx !== -1) {
+    this.items.forEach((item, idx) => {
+      if (itemIds.indexOf(item.id) !== -1) {
         this.items[idx] = jQuery.extend(true, {}, item, response);
+        console.log(response);
+        console.log(this.items[idx].status);
         this.clearStatus(item.id, 'update');
       }
     });
diff --git a/src/sentry/static/sentry/app/views/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails.jsx
index 6bdb863507..9a3aca59d5 100644
--- a/src/sentry/static/sentry/app/views/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails.jsx
@@ -18,7 +18,7 @@ var GroupDetails = React.createClass({
 
   mixins: [
     BreadcrumbMixin,
-    Reflux.listenTo(GroupListStore, "onAggListChange")
+    Reflux.listenTo(GroupListStore, "onGroupChange")
   ],
 
   propTypes: {
@@ -58,12 +58,13 @@ var GroupDetails = React.createClass({
     });
   },
 
-  onAggListChange() {
+  onGroupChange(itemIds) {
     var id = this.context.router.getCurrentParams().groupId;
-
-    this.setState({
-      group: GroupListStore.getItem(id)
-    });
+    if (itemIds.has(id)) {
+      this.setState({
+        group: GroupListStore.getItem(id)
+      });
+    }
   },
 
   getGroupDetailsEndpoint() {
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 2dc594a4d9..f6c6158ad9 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -6,6 +6,7 @@ var Router = require("react-router");
 var api = require("../../api");
 var DropdownLink = require("../../components/dropdownLink");
 var GroupState = require("../../mixins/groupState");
+var IndicatorStore = require("../../stores/indicatorStore");
 var MenuItem = require("../../components/menuItem");
 var LinkWithConfirmation = require("../../components/linkWithConfirmation");
 
@@ -20,11 +21,16 @@ var GroupActions = React.createClass({
     var group = this.getGroup();
     var project = this.getProject();
     var org = this.getOrganization();
+    var loadingIndicator = IndicatorStore.add('Delete event..');
 
     api.bulkDelete({
       orgId: org.slug,
       projectId: project.slug,
       itemIds: [group.id]
+    }, {
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
+      }
     });
 
     this.context.router.transitionTo('stream', {
@@ -37,6 +43,7 @@ var GroupActions = React.createClass({
     var group = this.getGroup();
     var project = this.getProject();
     var org = this.getOrganization();
+    var loadingIndicator = IndicatorStore.add('Saving changes..');
 
     api.bulkUpdate({
       orgId: org.slug,
@@ -45,6 +52,10 @@ var GroupActions = React.createClass({
       data: {
         status: group.status === 'muted' ? 'unresolved' : 'muted'
       }
+    }, {
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
+      }
     });
   },
 
@@ -52,6 +63,7 @@ var GroupActions = React.createClass({
     var group = this.getGroup();
     var project = this.getProject();
     var org = this.getOrganization();
+    var loadingIndicator = IndicatorStore.add('Saving changes..');
 
     api.bulkUpdate({
       orgId: org.slug,
@@ -60,6 +72,10 @@ var GroupActions = React.createClass({
       data: {
         status: group.status === 'resolved' ? 'unresolved' : 'resolved'
       }
+    }, {
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
+      }
     });
   },
 
@@ -67,6 +83,7 @@ var GroupActions = React.createClass({
     var group = this.getGroup();
     var project = this.getProject();
     var org = this.getOrganization();
+    var loadingIndicator = IndicatorStore.add('Saving changes..');
 
     api.bulkUpdate({
       orgId: org.slug,
@@ -75,6 +92,10 @@ var GroupActions = React.createClass({
       data: {
         isBookmarked: !group.isBookmarked
       }
+    }, {
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
+      }
     });
   },
 
