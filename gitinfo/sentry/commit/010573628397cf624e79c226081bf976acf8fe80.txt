commit 010573628397cf624e79c226081bf976acf8fe80
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Aug 8 13:34:24 2017 -0700

    api: force data filters to use text
    
    Fixes SENTRY-42Z
    Replaces GH-5844

diff --git a/src/sentry/utils/data_filters.py b/src/sentry/utils/data_filters.py
index ad13f185bb..47ef2a284b 100644
--- a/src/sentry/utils/data_filters.py
+++ b/src/sentry/utils/data_filters.py
@@ -11,6 +11,8 @@ import fnmatch
 import ipaddress
 import six
 
+from django.utils.encoding import force_text
+
 
 class FilterTypes(object):
     ERROR_MESSAGES = 'error_messages'
@@ -51,11 +53,12 @@ def is_valid_release(project, release):
     Verify that a release is not being filtered
     for the given project.
     """
-    release = release.lower()
     invalid_versions = project.get_option('sentry:{}'.format(FilterTypes.RELEASES))
     if not invalid_versions:
         return True
 
+    release = force_text(release).lower()
+
     for version in invalid_versions:
         if fnmatch.fnmatch(release, version.lower()):
             return False
@@ -68,11 +71,12 @@ def is_valid_error_message(project, message):
     Verify that an error message is not being filtered
     for the given project.
     """
-    message = message.lower()
     filtered_errors = project.get_option('sentry:{}'.format(FilterTypes.ERROR_MESSAGES))
     if not filtered_errors:
         return True
 
+    message = force_text(message).lower()
+
     for error in filtered_errors:
         if fnmatch.fnmatch(message, error.lower()):
             return False
diff --git a/tests/sentry/utils/http/tests.py b/tests/sentry/utils/http/tests.py
index a0f6a07b18..d32f28566c 100644
--- a/tests/sentry/utils/http/tests.py
+++ b/tests/sentry/utils/http/tests.py
@@ -277,6 +277,9 @@ class IsValidReleaseTestCase(TestCase):
         assert not self.is_valid_release('1.2.3', ['1.2.*', '1.3.0', '1.3.1'])
         assert not self.is_valid_release('1.2.3', ['1.3.0', '1.*', '1.3.1'])
 
+    def test_garbage_data(self):
+        assert self.is_valid_release(1, ['1.2.3'])
+
 
 class IsValidErrorMessageTestCase(TestCase):
     def is_valid_error_message(self, value, inputs):
@@ -303,6 +306,11 @@ class IsValidErrorMessageTestCase(TestCase):
             'ZeroDivisionError: divided by 0', ['ImportError*', 'TypeError*', '*: divided by 0']
         )
 
+    def test_garbage_data(self):
+        assert self.is_valid_error_message(1, ['ImportError*'])
+        assert self.is_valid_error_message(None, ['ImportError*'])
+        assert self.is_valid_error_message({}, ['ImportError*'])
+
 
 class OriginFromRequestTestCase(TestCase):
     def test_nothing(self):
