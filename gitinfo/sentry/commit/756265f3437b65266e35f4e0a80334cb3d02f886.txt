commit 756265f3437b65266e35f4e0a80334cb3d02f886
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jun 4 16:32:08 2015 +0100

    Remove search tables (fixes GH-1036)

diff --git a/src/sentry/search/django/models.py b/src/sentry/search/django/models.py
deleted file mode 100644
index 469bb35d60..0000000000
--- a/src/sentry/search/django/models.py
+++ /dev/null
@@ -1,46 +0,0 @@
-"""
-sentry.search.django.models
-~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
-:license: BSD, see LICENSE for more details.
-"""
-
-from __future__ import absolute_import
-
-from django.db import models
-from django.utils import timezone
-
-from sentry.db.models import (
-    Model, BoundedPositiveIntegerField, FlexibleForeignKey, sane_repr
-)
-
-
-class SearchDocument(Model):
-    project = FlexibleForeignKey('sentry.Project')
-    group = FlexibleForeignKey('sentry.Group')
-    total_events = BoundedPositiveIntegerField(default=1)
-    status = BoundedPositiveIntegerField(default=0)
-    date_added = models.DateTimeField(default=timezone.now)
-    date_changed = models.DateTimeField(default=timezone.now)
-
-    class Meta:
-        app_label = 'search'
-        db_table = 'sentry_searchdocument'
-        unique_together = (('project', 'group'),)
-
-    __repr__ = sane_repr('project_id', 'group_id')
-
-
-class SearchToken(Model):
-    document = FlexibleForeignKey(SearchDocument, related_name="token_set")
-    field = models.CharField(max_length=64, default='text')
-    token = models.CharField(max_length=128)
-    times_seen = BoundedPositiveIntegerField(default=1)
-
-    class Meta:
-        app_label = 'search'
-        db_table = 'sentry_searchtoken'
-        unique_together = (('document', 'field', 'token'),)
-
-    __repr__ = sane_repr('document_id', 'field', 'token')
diff --git a/src/sentry/search/migrations/0002_auto__del_searchtoken__del_unique_searchtoken_document_field_token__de.py b/src/sentry/search/migrations/0002_auto__del_searchtoken__del_unique_searchtoken_document_field_token__de.py
new file mode 100644
index 0000000000..820b53a147
--- /dev/null
+++ b/src/sentry/search/migrations/0002_auto__del_searchtoken__del_unique_searchtoken_document_field_token__de.py
@@ -0,0 +1,58 @@
+# -*- coding: utf-8 -*-
+from south.utils import datetime_utils as datetime
+from south.db import db
+from south.v2 import SchemaMigration
+from django.db import models
+
+
+class Migration(SchemaMigration):
+
+    def forwards(self, orm):
+        # Removing unique constraint on 'SearchDocument', fields ['project', 'group']
+        db.delete_unique('sentry_searchdocument', ['project_id', 'group_id'])
+
+        # Removing unique constraint on 'SearchToken', fields ['document', 'field', 'token']
+        db.delete_unique('sentry_searchtoken', ['document_id', 'field', 'token'])
+
+        # Deleting model 'SearchToken'
+        db.delete_table('sentry_searchtoken')
+
+        # Deleting model 'SearchDocument'
+        db.delete_table('sentry_searchdocument')
+
+
+    def backwards(self, orm):
+        # Adding model 'SearchToken'
+        db.create_table('sentry_searchtoken', (
+            ('times_seen', self.gf('django.db.models.fields.PositiveIntegerField')(default=1)),
+            ('field', self.gf('django.db.models.fields.CharField')(default='text', max_length=64)),
+            ('token', self.gf('django.db.models.fields.CharField')(max_length=128)),
+            ('document', self.gf('sentry.db.models.fields.FlexibleForeignKey')(related_name='token_set', to=orm['search.SearchDocument'])),
+            ('id', self.gf('sentry.db.models.fields.bounded.BoundedBigAutoField')(primary_key=True)),
+        ))
+        db.send_create_signal(u'search', ['SearchToken'])
+
+        # Adding unique constraint on 'SearchToken', fields ['document', 'field', 'token']
+        db.create_unique('sentry_searchtoken', ['document_id', 'field', 'token'])
+
+        # Adding model 'SearchDocument'
+        db.create_table('sentry_searchdocument', (
+            ('project', self.gf('sentry.db.models.fields.FlexibleForeignKey')(to=orm['sentry.Project'])),
+            ('status', self.gf('django.db.models.fields.PositiveIntegerField')(default=0)),
+            ('total_events', self.gf('django.db.models.fields.PositiveIntegerField')(default=1)),
+            ('group', self.gf('sentry.db.models.fields.FlexibleForeignKey')(to=orm['sentry.Group'])),
+            ('date_changed', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
+            ('date_added', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
+            ('id', self.gf('sentry.db.models.fields.bounded.BoundedBigAutoField')(primary_key=True)),
+        ))
+        db.send_create_signal(u'search', ['SearchDocument'])
+
+        # Adding unique constraint on 'SearchDocument', fields ['project', 'group']
+        db.create_unique('sentry_searchdocument', ['project_id', 'group_id'])
+
+
+    models = {
+        
+    }
+
+    complete_apps = ['search']
\ No newline at end of file
diff --git a/src/sentry/search/models.py b/src/sentry/search/models.py
index 69e458275c..db331098c5 100644
--- a/src/sentry/search/models.py
+++ b/src/sentry/search/models.py
@@ -7,7 +7,3 @@ sentry.search.models
 """
 
 from __future__ import absolute_import
-
-# HACK(dcramer): Django doesn't play well with our naming schemes, and we prefer
-# our methods ways over Django's limited scoping
-from .django.models import *  # NOQA
diff --git a/src/sentry/tasks/cleanup.py b/src/sentry/tasks/cleanup.py
index 775d65a991..4c962e2c91 100644
--- a/src/sentry/tasks/cleanup.py
+++ b/src/sentry/tasks/cleanup.py
@@ -39,10 +39,8 @@ def cleanup(days=30, project=None, chunk_size=1000, concurrency=1, **kwargs):
         Group, GroupRuleStatus, Event, EventMapping,
         GroupTagValue, TagValue, Alert,
         Activity, LostPasswordHash)
-    from sentry.search.django.models import SearchDocument
 
     GENERIC_DELETES = (
-        (SearchDocument, 'date_changed'),
         (GroupRuleStatus, 'date_added'),
         (GroupTagValue, 'last_seen'),
         (Event, 'datetime'),
