commit 51b6d55327d98309d0a3e7ea14b269548ea35d25
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jan 13 16:25:19 2015 -0600

    Move redirect url generation logic

diff --git a/src/sentry/utils/auth.py b/src/sentry/utils/auth.py
index f73e2eac47..23308fa979 100644
--- a/src/sentry/utils/auth.py
+++ b/src/sentry/utils/auth.py
@@ -9,6 +9,7 @@ from __future__ import absolute_import
 
 from django.conf import settings
 from django.contrib.auth.backends import ModelBackend
+from django.core.urlresolvers import reverse
 
 from sentry.models import User
 
@@ -25,6 +26,16 @@ def get_auth_providers():
     ]
 
 
+def get_login_redirect(request):
+    default = reverse('sentry')
+    login_url = request.session.pop('_next', None) or default
+    if '//' in login_url:
+        login_url = default
+    elif login_url.startswith(reverse('sentry-login')):
+        login_url = default
+    return login_url
+
+
 def find_users(username, with_valid_password=True):
     """
     Return a list of users that match a username
diff --git a/src/sentry/web/frontend/accounts.py b/src/sentry/web/frontend/accounts.py
index dfef037fd7..fe295ab49a 100644
--- a/src/sentry/web/frontend/accounts.py
+++ b/src/sentry/web/frontend/accounts.py
@@ -30,7 +30,7 @@ from sentry.web.forms.accounts import (
     RegistrationForm, RecoverPasswordForm, ChangePasswordRecoverForm,
     ProjectEmailOptionsForm, AuthenticationForm)
 from sentry.web.helpers import render_to_response
-from sentry.utils.auth import get_auth_providers
+from sentry.utils.auth import get_auth_providers, get_login_redirect
 from sentry.utils.safe import safe_execute
 
 
@@ -109,12 +109,7 @@ def register(request):
 
 @login_required
 def login_redirect(request):
-    default = reverse('sentry')
-    login_url = request.session.pop('_next', None) or default
-    if '//' in login_url:
-        login_url = default
-    elif login_url.startswith(reverse('sentry-login')):
-        login_url = default
+    login_url = get_login_redirect(request)
     return HttpResponseRedirect(login_url)
 
 
diff --git a/tests/sentry/utils/auth/tests.py b/tests/sentry/utils/auth/tests.py
index 5445a7625b..86997f3f02 100644
--- a/tests/sentry/utils/auth/tests.py
+++ b/tests/sentry/utils/auth/tests.py
@@ -1,8 +1,11 @@
 from __future__ import absolute_import
 
+from django.core.urlresolvers import reverse
+from django.http import HttpRequest
+
 from sentry.models import User
 from sentry.testutils import TestCase
-from sentry.utils.auth import EmailAuthBackend
+from sentry.utils.auth import EmailAuthBackend, get_login_redirect
 
 
 class EmailAuthBackendTest(TestCase):
@@ -26,3 +29,25 @@ class EmailAuthBackendTest(TestCase):
     def test_does_not_authenticate_with_invalid_password(self):
         result = self.backend.authenticate(username='foo', password='pizza')
         self.assertEquals(result, None)
+
+
+class GetLoginRedirectTest(TestCase):
+    def make_request(self, next=None):
+        request = HttpRequest()
+        request.session = {}
+        request.user = self.user
+        if next:
+            request.session['_next'] = next
+        return request
+
+    def test_schema_uses_default(self):
+        result = get_login_redirect(self.make_request('http://example.com'))
+        assert result == reverse('sentry')
+
+    def test_login_uses_default(self):
+        result = get_login_redirect(self.make_request(reverse('sentry-login')))
+        assert result == reverse('sentry')
+
+    def test_no_value_uses_default(self):
+        result = get_login_redirect(self.make_request())
+        assert result == reverse('sentry')
diff --git a/tests/sentry/web/frontend/accounts/tests.py b/tests/sentry/web/frontend/accounts/tests.py
index 4c21b05606..dfba1c666f 100644
--- a/tests/sentry/web/frontend/accounts/tests.py
+++ b/tests/sentry/web/frontend/accounts/tests.py
@@ -5,13 +5,11 @@ from __future__ import absolute_import
 import mock
 
 from django.core.urlresolvers import reverse
-from django.http import HttpRequest
 from exam import fixture
 from social_auth.models import UserSocialAuth
 
 from sentry.models import UserOption, LostPasswordHash, User
 from sentry.testutils import TestCase
-from sentry.web.frontend.accounts import login_redirect
 
 
 class LoginTest(TestCase):
@@ -191,31 +189,6 @@ class LogoutTest(TestCase):
         assert self.client.session.keys() == []
 
 
-class LoginRedirectTest(TestCase):
-    def make_request(self, next=None):
-        request = HttpRequest()
-        request.session = {}
-        request.user = self.user
-        if next:
-            request.session['_next'] = next
-        return request
-
-    def test_schema_uses_default(self):
-        resp = login_redirect(self.make_request('http://example.com'))
-        assert resp.status_code == 302
-        assert resp['Location'] == reverse('sentry')
-
-    def test_login_uses_default(self):
-        resp = login_redirect(self.make_request(reverse('sentry-login')))
-        assert resp.status_code == 302
-        assert resp['Location'] == reverse('sentry')
-
-    def test_no_value_uses_default(self):
-        resp = login_redirect(self.make_request())
-        assert resp.status_code == 302
-        assert resp['Location'] == reverse('sentry')
-
-
 class NotificationSettingsTest(TestCase):
     @fixture
     def path(self):
