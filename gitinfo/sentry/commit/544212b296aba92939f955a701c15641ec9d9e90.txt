commit 544212b296aba92939f955a701c15641ec9d9e90
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Sep 14 13:41:06 2016 -0700

    Improve output of failed git/npm/webpack (#4126)
    
    * Improve output of failed git/npm/webpack

diff --git a/src/sentry/utils/distutils/commands/base.py b/src/sentry/utils/distutils/commands/base.py
index 89093234d2..faf7ad0c56 100644
--- a/src/sentry/utils/distutils/commands/base.py
+++ b/src/sentry/utils/distutils/commands/base.py
@@ -118,15 +118,16 @@ class BaseBuildCommand(Command):
 
         if os.path.exists(os.path.join(work_path, '.git')):
             log.info('initializing git submodules')
-            check_output(['git', 'submodule', 'init'], cwd=work_path)
-            check_output(['git', 'submodule', 'update'], cwd=work_path)
+            self._run_command(['git', 'submodule', 'init'])
+            self._run_command(['git', 'submodule', 'update'])
 
     def _setup_npm(self):
-        work_path = self.work_path
         node_version = []
         for app in 'node', 'npm':
             try:
-                node_version.append(check_output([app, '--version']).rstrip())
+                node_version.append(
+                    self._run_command([app, '--version']).rstrip()
+                )
             except OSError:
                 log.fatal('Cannot find `{0}` executable. Please install {0}`'
                           ' and try again.'.format(app))
@@ -134,8 +135,18 @@ class BaseBuildCommand(Command):
 
         log.info('using node ({}) and npm ({})'.format(*node_version))
 
-        log.info('running [npm install --production --quiet]')
-        check_output(['npm', 'install', '--production', '--quiet'], cwd=work_path)
+        self._run_command(['npm', 'install', '--production', '--quiet'])
+
+    def _run_command(self, cmd, env=None):
+        log.debug('running [%s]' % (' '.join(cmd),))
+        try:
+            return check_output(cmd, cwd=self.work_path, env=env)
+        except Exception:
+            log.error('command failed [%s] via [%s]' % (
+                ' '.join(cmd),
+                self.work_path,
+            ))
+            raise
 
     def update_manifests(self):
         # if we were invoked from sdist, we need to inform sdist about
diff --git a/src/sentry/utils/distutils/commands/build_assets.py b/src/sentry/utils/distutils/commands/build_assets.py
index e6ae879d06..eaa32307f0 100644
--- a/src/sentry/utils/distutils/commands/build_assets.py
+++ b/src/sentry/utils/distutils/commands/build_assets.py
@@ -8,7 +8,6 @@ import sys
 import traceback
 
 from distutils import log
-from subprocess import check_output
 
 from .base import BaseBuildCommand
 
@@ -128,12 +127,11 @@ class BuildAssetsCommand(BaseBuildCommand):
         # By setting NODE_ENV=production, a few things happen
         #   * React optimizes out certain code paths
         #   * Webpack will add version strings to built/referenced assets
-        log.info('running [webpack]')
         env = dict(os.environ)
         env['SENTRY_STATIC_DIST_PATH'] = self.sentry_static_dist_path
         env['NODE_ENV'] = 'production'
-        check_output(['node_modules/.bin/webpack', '-p', '--bail'],
-                     cwd=self.work_path, env=env)
+        self._run_command(['node_modules/.bin/webpack', '-p', '--bail'],
+                          env=env)
 
     def _write_version_file(self, version_info):
         manifest = {
