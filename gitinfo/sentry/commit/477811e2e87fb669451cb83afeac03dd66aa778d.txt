commit 477811e2e87fb669451cb83afeac03dd66aa778d
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jul 21 15:27:25 2015 +0200

    Fix some various cases with default values on datetime selectors

diff --git a/src/sentry/static/sentry/app/modules/datepicker/DateTimeField.jsx b/src/sentry/static/sentry/app/modules/datepicker/DateTimeField.jsx
index 0aa326da46..e97c5ffdc2 100644
--- a/src/sentry/static/sentry/app/modules/datepicker/DateTimeField.jsx
+++ b/src/sentry/static/sentry/app/modules/datepicker/DateTimeField.jsx
@@ -5,7 +5,8 @@ var moment = require('moment');
 var DateTimeField = React.createClass({
   propTypes: {
     dateTime: function(props, propName, componentName){
-      if (!moment.isMoment(props[propName])) {
+      var value = props[propName];
+      if (value && !moment.isMoment(value)) {
         return new Error('Not a valid Moment');
       }
     },
@@ -15,7 +16,7 @@ var DateTimeField = React.createClass({
   },
   getDefaultProps: function() {
     return {
-      dateTime: moment(),
+      dateTime: null,
       format: 'X',
       inputFormat: "MM/DD/YY H:mm A",
       showToday: true,
@@ -23,6 +24,14 @@ var DateTimeField = React.createClass({
     };
   },
   getInitialState: function() {
+    var inputValue;
+    var selectedDate;
+    var viewDate;
+    if (this.props.dateTime) {
+       inputValue = moment(this.props.dateTime, this.props.format).format(this.props.inputFormat);
+       selectedDate = moment(this.props.dateTime, this.props.format);
+       viewDate = moment(this.props.dateTime, this.props.format).startOf("month");
+    }
     return {
       showDatePicker: true,
       showTimePicker: false,
@@ -32,16 +41,24 @@ var DateTimeField = React.createClass({
         left: 'none',
         zIndex: '9999 !important'
       },
-      viewDate: moment(this.props.dateTime, this.props.format).startOf("month"),
-      selectedDate: moment(this.props.dateTime, this.props.format),
-      inputValue: moment(this.props.dateTime, this.props.format).format(this.props.inputFormat)
+      viewDate: viewDate,
+      selectedDate: selectedDate,
+      inputValue: inputValue
     };
   },
   componentWillReceiveProps: function(nextProps) {
+    var inputValue;
+    var selectedDate;
+    var viewDate;
+    if (nextProps.dateTime) {
+       inputValue = moment(nextProps.dateTime, nextProps.format).format(nextProps.inputFormat);
+       selectedDate = moment(nextProps.dateTime, nextProps.format);
+       viewDate = moment(nextProps.dateTime, nextProps.format).startOf("month");
+    }
     return this.setState({
-      viewDate: moment(nextProps.dateTime, nextProps.format).startOf("month"),
-      selectedDate: moment(nextProps.dateTime, nextProps.format),
-      inputValue: moment(nextProps.dateTime, nextProps.format).format(nextProps.inputFormat)
+      viewDate: viewDate,
+      selectedDate: selectedDate,
+      inputValue: inputValue
     });
   },
   onChange: function(event) {
@@ -259,6 +276,8 @@ var DateTimeField = React.createClass({
     }
   },
   render: function() {
+    var inputValue = (this.state.selectedDate ?
+      this.state.selectedDate.format(this.props.inputFormat) : '');
     return (
           <span>
             {/*this.renderOverlay()*/}
@@ -289,7 +308,7 @@ var DateTimeField = React.createClass({
               togglePicker={this.togglePicker}
               togglePeriod={this.togglePeriod} />*/}
             <span className="input-group date" ref="datetimepicker">
-              <input type="text" className="form-control" onChange={this.onChange} value={this.state.selectedDate.format(this.props.inputFormat)} />
+              <input type="text" className="form-control" onChange={this.onChange} value={inputValue} />
               <span className="input-group-addon" onClick={this.onClick} onBlur={this.onBlur} ref="dtpbutton">
                 <span className="icon icon-calendar" />
               </span>
diff --git a/src/sentry/static/sentry/app/views/stream/dateSelector.jsx b/src/sentry/static/sentry/app/views/stream/dateSelector.jsx
index ccbfe40424..2c8c3e3848 100644
--- a/src/sentry/static/sentry/app/views/stream/dateSelector.jsx
+++ b/src/sentry/static/sentry/app/views/stream/dateSelector.jsx
@@ -13,8 +13,10 @@ var DateSelector = React.createClass({
   ],
 
   getInitialState() {
+    var dateFrom = new Date();
+    dateFrom.setDate(dateFrom.getDate() - 3);
     return {
-      dateFrom: null,
+      dateFrom: dateFrom.getTime() / 1000,
       dateTo: null,
       dateType: "last_seen"
     };
@@ -67,9 +69,9 @@ var DateSelector = React.createClass({
         <div className="datepicker-box dropdown-menu" id="daterange">
           <form method="GET">
             <div className="input">
-              <DateTimeField onChange={this.onDateFromChange} />
+              <DateTimeField dateTime={this.state.dateFrom} onChange={this.onDateFromChange} />
               to
-              <DateTimeField onChange={this.onDateToChange} />
+              <DateTimeField dateTime={this.state.dateTo} onChange={this.onDateToChange} />
               <div className="help-block">All events are represented in UTC time.</div>
             </div>
             <div className="submit">
