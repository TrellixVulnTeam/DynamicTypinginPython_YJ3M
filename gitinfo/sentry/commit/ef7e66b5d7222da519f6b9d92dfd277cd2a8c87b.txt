commit ef7e66b5d7222da519f6b9d92dfd277cd2a8c87b
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Apr 15 11:00:48 2020 -0700

    ref(ui): Remove `<ProjectContext>` from Project Install (#18202)
    
    This removes `<ProjectContext>` as a dependency from `ProjectInstall` views, as it is only used to fetch project id from a slug.

diff --git a/src/sentry/static/sentry/app/utils/projects.tsx b/src/sentry/static/sentry/app/utils/projects.tsx
index 3270387acd..7e9a6ee143 100644
--- a/src/sentry/static/sentry/app/utils/projects.tsx
+++ b/src/sentry/static/sentry/app/utils/projects.tsx
@@ -60,7 +60,7 @@ type State = {
   fetchError: null | RequestError;
 };
 
-type RenderProps = {
+export type RenderProps = {
   /**
    * We want to make sure that at the minimum, we return a list of objects with only `slug`
    * while we load actual project data
@@ -78,6 +78,13 @@ type RenderProps = {
 >;
 type RenderFunc = (props: RenderProps) => React.ReactNode;
 
+type DefaultProps = {
+  /**
+   * If slugs is passed, forward placeholder objects with slugs while fetching
+   */
+  passthroughPlaceholderProject?: boolean;
+};
+
 type Props = {
   api: Client;
 
@@ -109,7 +116,7 @@ type Props = {
   allProjects?: boolean;
 
   children: RenderFunc;
-};
+} & DefaultProps;
 
 /**
  * This is a utility component that should be used to fetch an organization's projects (summary).
@@ -127,6 +134,11 @@ class Projects extends React.Component<Props, State> {
     slugs: PropTypes.arrayOf(PropTypes.string),
     limit: PropTypes.number,
     allProjects: PropTypes.bool,
+    passthroughPlaceholderProject: PropTypes.bool,
+  };
+
+  static defaultProps: DefaultProps = {
+    passthroughPlaceholderProject: true,
   };
 
   state = {
@@ -201,7 +213,7 @@ class Projects extends React.Component<Props, State> {
    * These will fetch projects via API (using project slug) provided by `this.fetchQueue`
    */
   fetchSpecificProjects = async () => {
-    const {api, orgId} = this.props;
+    const {api, orgId, passthroughPlaceholderProject} = this.props;
 
     if (!this.fetchQueue.size) {
       return;
@@ -231,7 +243,15 @@ class Projects extends React.Component<Props, State> {
     // the server, just fill in with an object with only the slug
     const projectsOrPlaceholder: Project[] | ProjectPlaceholder[] = Array.from(
       this.fetchQueue
-    ).map(slug => (projectsMap.has(slug) && projectsMap.get(slug)) || {slug});
+    )
+      .map(slug =>
+        projectsMap.has(slug)
+          ? projectsMap.get(slug)
+          : !!passthroughPlaceholderProject
+          ? {slug}
+          : null
+      )
+      .filter(defined);
 
     this.setState({
       fetchedProjects: projectsOrPlaceholder,
diff --git a/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx b/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx
deleted file mode 100644
index 4287a1ee53..0000000000
--- a/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx
+++ /dev/null
@@ -1,46 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from '@emotion/styled';
-
-import ProjectContext from 'app/views/projects/projectContext';
-import space from 'app/styles/space';
-
-class GettingStartedBody extends React.Component {
-  static contextTypes = {
-    project: PropTypes.object,
-    organization: PropTypes.object,
-  };
-
-  render() {
-    return (
-      <Container>
-        <div className="container">
-          <Content>{this.props.children}</Content>
-        </div>
-      </Container>
-    );
-  }
-}
-
-class GettingStarted extends React.Component {
-  render() {
-    const {projectId, orgId} = this.props.params;
-    return (
-      <ProjectContext orgId={orgId} projectId={projectId}>
-        <GettingStartedBody>{this.props.children}</GettingStartedBody>
-      </ProjectContext>
-    );
-  }
-}
-
-const Container = styled('div')`
-  flex: 1;
-  background: #fff;
-  margin-bottom: -${space(3)}; /* cleans up a bg gap at bottom */
-`;
-
-const Content = styled('div')`
-  margin-top: ${space(3)};
-`;
-
-export default GettingStarted;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.tsx b/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.tsx
new file mode 100644
index 0000000000..1ccaf225a4
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.tsx
@@ -0,0 +1,18 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {PageContent} from 'app/styles/organization';
+import space from 'app/styles/space';
+
+type Props = {
+  className?: string;
+  children: React.ReactNode;
+};
+
+function GettingStarted({className, children}: Props) {
+  return <PageContent className={className}>{children}</PageContent>;
+}
+export default styled(GettingStarted)`
+  background: ${p => p.theme.white};
+  padding-top: ${space(3)};
+`;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index b9f99c3f07..db4aad0999 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -10,18 +10,16 @@ import Button from 'app/components/button';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import NotFound from 'app/components/errors/notFound';
+import Projects from 'app/utils/projects';
 import SentryDocumentTitle from 'app/components/sentryDocumentTitle';
-import SentryTypes from 'app/sentryTypes';
 import platforms from 'app/data/platforms';
 import space from 'app/styles/space';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
-import withProject from 'app/utils/withProject';
 
 class ProjectInstallPlatform extends React.Component {
   static propTypes = {
     api: PropTypes.object,
-    project: SentryTypes.Project.isRequired,
   };
 
   state = {
@@ -71,7 +69,7 @@ class ProjectInstallPlatform extends React.Component {
   }
 
   render() {
-    const {project, params} = this.props;
+    const {params} = this.props;
     const {orgId, projectId} = params;
 
     const platform = platforms.find(p => p.id === params.platform);
@@ -80,7 +78,7 @@ class ProjectInstallPlatform extends React.Component {
       return <NotFound />;
     }
 
-    const issueStreamLink = `/organizations/${orgId}/issues/?project=${project.id}#welcome`;
+    const issueStreamLink = `/organizations/${orgId}/issues/`;
     const gettingStartedLink = `/organizations/${orgId}/projects/${projectId}/getting-started/`;
 
     return (
@@ -88,7 +86,7 @@ class ProjectInstallPlatform extends React.Component {
         <PanelHeader hasButtons>
           {t('Configure %(platform)s', {platform: platform.name})}
           <Actions>
-            <Button size="small" href={gettingStartedLink}>
+            <Button size="small" to={gettingStartedLink}>
               {t('< Back')}
             </Button>
             <Button size="small" href={platform.link} external>
@@ -126,9 +124,37 @@ class ProjectInstallPlatform extends React.Component {
           )}
 
           {this.isGettingStarted && (
-            <Button priority="primary" to={issueStreamLink} style={{marginTop: 20}}>
-              {t('Got it! Take me to the Issue Stream.')}
-            </Button>
+            <Projects
+              key={`${orgId}-${projectId}`}
+              orgId={orgId}
+              slugs={[projectId]}
+              passthroughPlaceholderProject={false}
+            >
+              {({projects, initiallyLoaded, fetching, fetchError}) => {
+                const projectsLoading = !initiallyLoaded && fetching;
+                const issueStreamLinkQuery =
+                  !projectsLoading && !fetchError && projects.length
+                    ? {
+                        project: projects[0].id,
+                      }
+                    : {};
+
+                return (
+                  <Button
+                    priority="primary"
+                    busy={projectsLoading}
+                    to={{
+                      pathname: issueStreamLink,
+                      query: issueStreamLinkQuery,
+                      hash: '#welcome',
+                    }}
+                    style={{marginTop: 20}}
+                  >
+                    {t('Got it! Take me to the Issue Stream.')}
+                  </Button>
+                );
+              }}
+            </Projects>
           )}
         </PanelBody>
       </Panel>
@@ -153,4 +179,4 @@ const Actions = styled('div')`
 `;
 
 export {ProjectInstallPlatform};
-export default withApi(withOrganization(withProject(ProjectInstallPlatform)));
+export default withApi(withOrganization(ProjectInstallPlatform));
