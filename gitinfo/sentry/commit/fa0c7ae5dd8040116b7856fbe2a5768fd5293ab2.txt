commit fa0c7ae5dd8040116b7856fbe2a5768fd5293ab2
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Jul 19 13:57:24 2017 -0700

    south: remove block of code for older django

diff --git a/src/south/db/__init__.py b/src/south/db/__init__.py
index d92ba777b8..7f837d8e9b 100644
--- a/src/south/db/__init__.py
+++ b/src/south/db/__init__.py
@@ -14,40 +14,29 @@ engine_modules = {
 }
 
 # First, work out if we're multi-db or not, and which databases we have
-try:
-    from django.db import DEFAULT_DB_ALIAS
-except ImportError:
-    #### 1.1 or below ####
-    # We'll 'fake' multi-db; set the default alias
-    DEFAULT_DB_ALIAS = 'default'
-    # SOUTH_DATABASE_ADAPTER is an optional override if you have a different module
-    engine = getattr(settings, "SOUTH_DATABASE_ADAPTER", "south.db.%s" % settings.DATABASE_ENGINE)
-    # And then, we have one database with one engine
-    db_engines = {DEFAULT_DB_ALIAS: engine}
-else:
-    #### 1.2 or above ####
-    # Loop over the defined databases, gathering up their engines
-    db_engines = dict([
-        # Note we check to see if contrib.gis has overridden us.
-        (alias, "south.db.%s" % engine_modules[db_settings['ENGINE']])
-        for alias, db_settings in settings.DATABASES.items()
-        if db_settings['ENGINE'] in engine_modules
-    ])
-    # Update with any overrides
-    db_engines.update(getattr(settings, "SOUTH_DATABASE_ADAPTERS", {}))
-    # Check there's no None engines, or...
-    for alias, engine in db_engines.items():
-        if engine is None:
-            # They've used a backend we don't support
-            sys.stderr.write(
-                (
-                    "There is no South database module for your database backend '%s'. " + \
-                    "Please either choose a supported database, check for " + \
-                    "SOUTH_DATABASE_ADAPTER[S] settings, " + \
-                    "or remove South from INSTALLED_APPS.\n"
-                ) % (settings.DATABASES[alias]['ENGINE'],)
-            )
-            sys.exit(1)
+from django.db import DEFAULT_DB_ALIAS
+# Loop over the defined databases, gathering up their engines
+db_engines = dict([
+    # Note we check to see if contrib.gis has overridden us.
+    (alias, "south.db.%s" % engine_modules[db_settings['ENGINE']])
+    for alias, db_settings in settings.DATABASES.items()
+    if db_settings['ENGINE'] in engine_modules
+])
+# Update with any overrides
+db_engines.update(getattr(settings, "SOUTH_DATABASE_ADAPTERS", {}))
+# Check there's no None engines, or...
+for alias, engine in db_engines.items():
+    if engine is None:
+        # They've used a backend we don't support
+        sys.stderr.write(
+            (
+                "There is no South database module for your database backend '%s'. " + \
+                "Please either choose a supported database, check for " + \
+                "SOUTH_DATABASE_ADAPTER[S] settings, " + \
+                "or remove South from INSTALLED_APPS.\n"
+            ) % (settings.DATABASES[alias]['ENGINE'],)
+        )
+        sys.exit(1)
 
 # Now, turn that into a dict of <alias: south db module>
 dbs = {}
