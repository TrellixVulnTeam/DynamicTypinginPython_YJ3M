commit 68322065b32ea1ea98d6b5fccdf46dd7a50dc262
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 3 21:26:53 2015 -0800

    Add organization details component

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index b90ffe9b7e..736107c28d 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -10,6 +10,7 @@ var GroupEvents = require("./views/groupEvents");
 var GroupTags = require("./views/groupTags");
 var GroupTagValues = require("./views/groupTagValues");
 var GroupOverview = require("./views/groupOverview");
+var OrganizationDetails = require("./views/organizationDetails");
 var ProjectDetails = require("./views/projectDetails");
 var PropTypes = require("./proptypes");
 var Stream = require("./views/stream");
@@ -31,18 +32,20 @@ var App = React.createClass({
 
 var routes = (
   <Route name="app" path="/" handler={App}>
-    <Route name="teamDetails" path="/:orgId/teams/:teamId/" handler={TeamDetails}>
-      <DefaultRoute name="teamDashboard" handler={TeamDashboard} />
-    </Route>
-    <Route name="projectDetails" path="/:orgId/:projectId/" handler={ProjectDetails}>
-      <DefaultRoute name="stream" handler={Stream} />
-      <Route name="groupDetails" path="group/:groupId/" handler={GroupDetails}
-             ignoreScrollBehavior>
-        <DefaultRoute name="groupOverview" handler={GroupOverview} />
-        <Route name="groupEventDetails" path="events/:eventId/" handler={GroupOverview} />
-        <Route name="groupTags" path="tags/" handler={GroupTags} />
-        <Route name="groupTagValues" path="tags/:tagKey/" handler={GroupTagValues} />
-        <Route name="groupEvents" path="events/" handler={GroupEvents} />
+    <Route name="organizationDetails" path="/:orgId/" handler={OrganizationDetails}>
+      <Route name="teamDetails" path="teams/:teamId/" handler={TeamDetails}>
+        <DefaultRoute name="teamDashboard" handler={TeamDashboard} />
+      </Route>
+      <Route name="projectDetails" path=":projectId/" handler={ProjectDetails}>
+        <DefaultRoute name="stream" handler={Stream} />
+        <Route name="groupDetails" path="group/:groupId/" handler={GroupDetails}
+               ignoreScrollBehavior>
+          <DefaultRoute name="groupOverview" handler={GroupOverview} />
+          <Route name="groupEventDetails" path="events/:eventId/" handler={GroupOverview} />
+          <Route name="groupTags" path="tags/" handler={GroupTags} />
+          <Route name="groupTagValues" path="tags/:tagKey/" handler={GroupTagValues} />
+          <Route name="groupEvents" path="events/" handler={GroupEvents} />
+        </Route>
       </Route>
     </Route>
   </Route>
diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
new file mode 100644
index 0000000000..d52faaa949
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -0,0 +1,62 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+var Reflux = require("reflux");
+var Router = require("react-router");
+
+var api = require("../api");
+var BreadcrumbMixin = require("../mixins/breadcrumbMixin");
+var LoadingIndicator = require("../components/loadingIndicator");
+var PropTypes = require("../proptypes");
+var OrganizationState = require("../mixins/organizationState");
+
+var OrganizationDetails = React.createClass({
+  mixins: [
+    BreadcrumbMixin,
+    Router.State
+  ],
+
+  getInitialState() {
+    return {
+      organization: null
+    };
+  },
+
+  childContextTypes: {
+    organization: PropTypes.Organization
+  },
+
+  getChildContext() {
+    return {
+      organization: this.state.organization
+    };
+  },
+
+  componentWillMount() {
+    api.request(this.getOrganizationDetailsEndpoint(), {
+      success: (data) => {
+        this.setState({
+          organization: data
+        });
+
+        this.setBreadcrumbs([
+          {name: data.name, to: 'organizationDetails'}
+        ]);
+      }
+    });
+  },
+
+  getOrganizationDetailsEndpoint() {
+    var params = this.getParams();
+    return '/organizations/' + params.orgId + '/';
+  },
+
+  render() {
+    if (!this.state.organization) {
+      return <LoadingIndicator />;
+    }
+    return <Router.RouteHandler />;
+  }
+});
+
+module.exports = OrganizationDetails;
diff --git a/src/sentry/static/sentry/app/views/teamDetails.jsx b/src/sentry/static/sentry/app/views/teamDetails.jsx
index 9e18d53e06..99be7a28e0 100644
--- a/src/sentry/static/sentry/app/views/teamDetails.jsx
+++ b/src/sentry/static/sentry/app/views/teamDetails.jsx
@@ -8,11 +8,12 @@ var api = require("../api");
 var BreadcrumbMixin = require("../mixins/breadcrumbMixin");
 var LoadingIndicator = require("../components/loadingIndicator");
 var PropTypes = require("../proptypes");
-var TeamState = require("../mixins/teamState");
+var OrganizationState = require("../mixins/organizationState");
 
-var TeamDashboard = React.createClass({
+var TeamDetails = React.createClass({
   mixins: [
     BreadcrumbMixin,
+    OrganizationState,
     Router.State
   ],
 
@@ -29,7 +30,7 @@ var TeamDashboard = React.createClass({
 
   getChildContext() {
     return {
-      organization: this.state.organization,
+      organization: this.getOrganization(),
       team: this.state.team
     };
   },
@@ -38,7 +39,6 @@ var TeamDashboard = React.createClass({
     api.request(this.getTeamDetailsEndpoint(), {
       success: (data) => {
         this.setState({
-          organization: data.organization,
           team: data
         });
 
@@ -62,4 +62,4 @@ var TeamDashboard = React.createClass({
   }
 });
 
-module.exports = TeamDashboard;
+module.exports = TeamDetails;
