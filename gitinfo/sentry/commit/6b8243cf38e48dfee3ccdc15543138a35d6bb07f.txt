commit 6b8243cf38e48dfee3ccdc15543138a35d6bb07f
Author: Ryan Skonnord <ryan.skonnord@sentry.io>
Date:   Wed May 6 10:43:47 2020 -0700

    perf(api): Suppress feature flags from paginated project view (#18637)
    
    Generalize the change to the "all projects" endpoint, which omits
    project-scoped feature flags, to also apply to the paginated projects
    view. The rationale is that including the feature flags is a performance
    liability, so we want to do it only when viewing a single project.

diff --git a/src/sentry/api/endpoints/organization_projects.py b/src/sentry/api/endpoints/organization_projects.py
index 6d81fe959b..39f9ca67da 100644
--- a/src/sentry/api/endpoints/organization_projects.py
+++ b/src/sentry/api/endpoints/organization_projects.py
@@ -106,18 +106,19 @@ class OrganizationProjectsEndpoint(OrganizationEndpoint, EnvironmentMixin):
         # TODO(davidenwang): remove this after frontend requires only paginated projects
         get_all_projects = request.GET.get("all_projects") == "1"
 
+        include_features = not features.has("organizations:enterprise-perf", organization)
         if get_all_projects:
             queryset = queryset.order_by("slug").select_related("organization")
-            serializer = ProjectSummarySerializer(
-                include_features=not features.has("organizations:enterprise-perf", organization)
-            )
+            serializer = ProjectSummarySerializer(include_features=include_features)
             return Response(serialize(list(queryset), request.user, serializer))
         else:
 
             def serialize_on_result(result):
                 environment_id = self._get_environment_id_from_request(request, organization.id)
                 serializer = ProjectSummarySerializer(
-                    environment_id=environment_id, stats_period=stats_period,
+                    environment_id=environment_id,
+                    stats_period=stats_period,
+                    include_features=include_features,
                 )
                 return serialize(result, request.user, serializer)
 
diff --git a/tests/sentry/api/endpoints/test_organization_projects.py b/tests/sentry/api/endpoints/test_organization_projects.py
index 97770fb05c..d0cb3f3b47 100644
--- a/tests/sentry/api/endpoints/test_organization_projects.py
+++ b/tests/sentry/api/endpoints/test_organization_projects.py
@@ -167,15 +167,23 @@ class OrganizationProjectsTest(APITestCase):
         for project in response.data:
             assert "features" in project
 
-    def test_all_projects_suppresses_flags(self):
+    def test_features_are_suppressed(self):
         self.login_as(user=self.user)
-        self.create_project(teams=[self.team], name="foo", slug="foo")
-        self.create_project(teams=[self.team], name="bar", slug="bar")
-
-        with self.feature("organizations:enterprise-perf"):
-            response = self.client.get(self.path + "?all_projects=1&per_page=1")
-        for project in response.data:
-            assert "features" not in project
+        for i in range(3):
+            p = "project{}".format(i)
+            self.create_project(teams=[self.team], name=p, slug=p)
+
+        queries = [
+            "",
+            "?all_projects=1",
+            "?per_page=2",
+            "?all_projects=1&per_page=2",
+        ]
+        for query in queries:
+            with self.feature("organizations:enterprise-perf"):
+                response = self.client.get(self.path + query)
+            for project in response.data:
+                assert "features" not in project
 
     def test_user_projects(self):
         self.foo_user = self.create_user("foo@example.com")
