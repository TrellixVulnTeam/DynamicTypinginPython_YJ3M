commit 0edff02fcb9f991f77d6396ca83b8124b68d32b9
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Jun 22 01:37:46 2016 +0200

    Added more context types

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/contexts.jsx b/src/sentry/static/sentry/app/components/events/interfaces/contexts.jsx
index 4f90bf5d71..c39284c2ea 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/contexts.jsx
@@ -1,27 +1,144 @@
 import React from 'react';
+import _ from 'underscore';
 
 import GroupEventDataSection from '../eventDataSection';
 import PropTypes from '../../../proptypes';
 import KeyValueList from './keyValueList';
+import {defined} from '../../../utils';
 
-const DefaultContextType = React.createClass({
+
+const ContextBlock = React.createClass({
   propTypes: {
     alias: React.PropTypes.string.isRequired,
+    title: React.PropTypes.string,
     data: React.PropTypes.object.isRequired,
+    knownData: React.PropTypes.object,
   },
 
   render() {
+    let data = [];
+    let className = `context-block context-block-${this.props.data.type}`;
+    let title = this.props.title || this.props.data.title;
+    let alias = null;
+
+    if (!title) {
+      title = this.props.alias;
+    } else {
+      alias = (
+        <small>{' ('}{this.props.alias})</small>
+      );
+    }
+
+    (this.props.knownData || []).forEach(([key, value]) => {
+      if (defined(value)) {
+        data.push([key, value]);
+      }
+    });
+
+    let extraData = [];
+    for (let key in this.props.data) {
+      if (key !== 'type') {
+        extraData.push([key, this.props.data[key]]);
+      }
+    }
+
+    if (extraData.length > 0) {
+      data = data.concat(_.sortBy(extraData, (key, value) => key));
+    }
+
     return (
-      <div className="well">
-        <h4>{this.props.alias}</h4>
-        <KeyValueList data={this.props.data} />
+      <div className={className}>
+        <h4>{title}{alias}</h4>
+        <KeyValueList data={data} isSorted={false} />
       </div>
     );
   }
 });
 
+
+const DefaultContextType = React.createClass({
+  propTypes: {
+    alias: React.PropTypes.string.isRequired,
+    data: React.PropTypes.object.isRequired,
+  },
+
+  render() {
+    return (
+      <ContextBlock data={this.props.data} alias={this.props.alias} />
+    );
+  }
+});
+
+const DeviceContextType = React.createClass({
+  propTypes: {
+    alias: React.PropTypes.string.isRequired,
+    data: React.PropTypes.object.isRequired,
+  },
+
+  render() {
+    let {name, model, model_id, arch, ...data} = this.props.data;
+    return (
+      <ContextBlock
+        data={data}
+        knownData={[
+          ['Name', name],
+          ['Model', model + (model_id ? ` (${model_id})` : '')],
+          ['Architecture', arch]
+        ]}
+        alias={this.props.alias}
+        title="Device" />
+    );
+  }
+});
+
+const OsContextType = React.createClass({
+  propTypes: {
+    alias: React.PropTypes.string.isRequired,
+    data: React.PropTypes.object.isRequired,
+  },
+
+  render() {
+    let {name, version, build, kernel_version, ...data} = this.props.data;
+    return (
+      <ContextBlock
+        data={data}
+        knownData={[
+          ['Name', name],
+          ['Version', version + (build ? ` (${build})` : '')],
+          ['Kernel Version', kernel_version],
+        ]}
+        alias={this.props.alias}
+        title="Operating System" />
+    );
+  }
+});
+
+const RuntimeContextType = React.createClass({
+  propTypes: {
+    alias: React.PropTypes.string.isRequired,
+    data: React.PropTypes.object.isRequired,
+  },
+
+  render() {
+    let {name, version, build, ...data} = this.props.data;
+    return (
+      <ContextBlock
+        data={data}
+        knownData={[
+          ['Name', name],
+          ['Version', version + (build ? ` (${build})` : '')],
+        ]}
+        alias={this.props.alias}
+        title="Runtime" />
+    );
+  }
+});
+
 const CONTEXT_TYPES = {
-  'default': DefaultContextType
+  'default': DefaultContextType,
+  'device': DeviceContextType,
+  'os': OsContextType,
+  'runtime': RuntimeContextType,
 };
 
 
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index 6ef0b30029..4ac16de751 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -1578,6 +1578,22 @@ pre.val, span.val {
   }
 }
 
+/**
+* Context
+* ============================================================================
+*/
+.context-block {
+  .well;
+
+  table.key-value {
+    background: transparent;
+    margin-bottom: 0;
+    pre {
+      background: white;
+    }
+  }
+}
+
 /**
 * Breadcrumbs / Timeline
 * ============================================================================
