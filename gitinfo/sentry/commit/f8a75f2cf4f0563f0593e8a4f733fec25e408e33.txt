commit f8a75f2cf4f0563f0593e8a4f733fec25e408e33
Author: Dora <dora.l.chan@gmail.com>
Date:   Tue Jan 21 14:36:05 2020 -0800

    feat(discv2): graph cleanup (#16516)
    
    * chart legend
    
    * moving the dropdown
    
    * clean up graph
    
    * added label
    
    * undo imageHeight
    
    * changing linechart to areachart
    
    * changing linechart to areachart

diff --git a/src/sentry/static/sentry/app/components/charts/areaChart.jsx b/src/sentry/static/sentry/app/components/charts/areaChart.jsx
index c4e07db854..7f43e40d9c 100644
--- a/src/sentry/static/sentry/app/components/charts/areaChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/areaChart.jsx
@@ -16,13 +16,17 @@ class AreaChart extends React.Component {
     return (
       <BaseChart
         {...props}
-        series={series.map(({seriesName, data, ...otherSeriesProps}, i) =>
+        series={series.map(({seriesName, data, ...otherSeriesProps}) =>
           AreaSeries({
             stack: stacked ? 'area' : false,
-            areaStyle: {opacity: 1.0},
             ...otherSeriesProps,
             name: seriesName,
             data: data.map(({name, value}) => [name, value]),
+            color: '#948BCF',
+            areaStyle: {
+              color: '#C4BFE9',
+              opacity: 1.0,
+            },
           })
         )}
       />
diff --git a/src/sentry/static/sentry/app/components/dropdownControl.jsx b/src/sentry/static/sentry/app/components/dropdownControl.jsx
index 05b7b1b06e..4daa297af4 100644
--- a/src/sentry/static/sentry/app/components/dropdownControl.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownControl.jsx
@@ -122,6 +122,9 @@ const DropdownItem = styled(MenuItem)`
   & a:hover {
     background: ${p => p.theme.offWhite};
   }
+  & a:focus {
+    outline: none;
+  }
   &.active a,
   &.active a:hover {
     color: ${p => p.theme.white};
diff --git a/src/sentry/static/sentry/app/views/events/eventsChart.jsx b/src/sentry/static/sentry/app/views/events/eventsChart.jsx
index 24fec0709d..bda2fec2eb 100644
--- a/src/sentry/static/sentry/app/views/events/eventsChart.jsx
+++ b/src/sentry/static/sentry/app/views/events/eventsChart.jsx
@@ -5,7 +5,7 @@ import styled from '@emotion/styled';
 
 import {getInterval} from 'app/components/charts/utils';
 import ChartZoom from 'app/components/charts/chartZoom';
-import LineChart from 'app/components/charts/lineChart';
+import AreaChart from 'app/components/charts/areaChart';
 import LoadingMask from 'app/components/loadingMask';
 import LoadingPanel from 'app/views/events/loadingPanel';
 import ReleaseSeries from 'app/components/charts/releaseSeries';
@@ -17,7 +17,7 @@ import {callIfFunction} from 'app/utils/callIfFunction';
 import EventsRequest from './utils/eventsRequest';
 import YAxisSelector from './yAxisSelector';
 
-class EventsLineChart extends React.Component {
+class EventsAreaChart extends React.Component {
   static propTypes = {
     loading: PropTypes.bool,
     reloading: PropTypes.bool,
@@ -57,19 +57,19 @@ class EventsLineChart extends React.Component {
     } = this.props;
 
     const legend = showLegend && {
-      right: 100,
-      top: 10,
+      right: 16,
+      top: 16,
       selectedMode: false,
-      itemWidth: 15,
       icon: 'line',
       textStyle: {
-        lineHeight: 16,
+        fontSize: '11',
+        fontFamily: 'Rubik',
       },
       data: ['Current Period', 'Previous Period'],
     };
 
     return (
-      <LineChart
+      <AreaChart
         {...props}
         {...zoomRenderProps}
         legend={legend}
@@ -79,8 +79,10 @@ class EventsLineChart extends React.Component {
         }}
         previousPeriod={previousTimeseriesData ? [previousTimeseriesData] : null}
         grid={{
-          left: '30px',
-          right: '18px',
+          left: '24px',
+          right: '24px',
+          top: '24px',
+          bottom: '12px',
         }}
       />
     );
@@ -175,14 +177,7 @@ class EventsChart extends React.Component {
                     return (
                       <React.Fragment>
                         <TransparentLoadingMask visible={reloading} />
-                        {yAxisOptions && (
-                          <YAxisSelector
-                            selected={yAxis}
-                            options={yAxisOptions}
-                            onChange={this.handleYAxisChange}
-                          />
-                        )}
-                        <EventsLineChart
+                        <EventsAreaChart
                           {...zoomRenderProps}
                           loading={loading}
                           reloading={reloading}
@@ -192,6 +187,13 @@ class EventsChart extends React.Component {
                           timeseriesData={timeseriesData}
                           previousTimeseriesData={previousTimeseriesData}
                         />
+                        {yAxisOptions && (
+                          <YAxisSelector
+                            selected={yAxis}
+                            options={yAxisOptions}
+                            onChange={this.handleYAxisChange}
+                          />
+                        )}
                       </React.Fragment>
                     );
                   }}
diff --git a/src/sentry/static/sentry/app/views/events/yAxisSelector.jsx b/src/sentry/static/sentry/app/views/events/yAxisSelector.jsx
index 4d9681e158..10f1b98552 100644
--- a/src/sentry/static/sentry/app/views/events/yAxisSelector.jsx
+++ b/src/sentry/static/sentry/app/views/events/yAxisSelector.jsx
@@ -3,14 +3,17 @@ import PropTypes from 'prop-types';
 import styled from '@emotion/styled';
 import DropdownButton from 'app/components/dropdownButton';
 import DropdownControl, {DropdownItem} from 'app/components/dropdownControl';
+import {t} from 'app/locale';
 import space from 'app/styles/space';
+import {SectionHeading} from '../eventsV2/styles';
 
 const YAxisSelector = props => {
   const {options, onChange, selected} = props;
   const selectedOption = options.find(opt => selected === opt.value) || options[0];
 
   return (
-    <Container>
+    <ChartControls>
+      <StyledLabel>{t('Y-Axis')}</StyledLabel>
       <DropdownControl
         menuOffset="29px"
         button={({isOpen, getActorProps}) => (
@@ -20,40 +23,46 @@ const YAxisSelector = props => {
         )}
       >
         {options.map(opt => (
-          <StyledDropdownItem
+          <DropdownItem
             key={opt.value}
             onSelect={onChange}
             eventKey={opt.value}
             isActive={selected === opt.value}
           >
             {opt.label}
-          </StyledDropdownItem>
+          </DropdownItem>
         ))}
       </DropdownControl>
-    </Container>
+    </ChartControls>
   );
 };
 
 const StyledDropdownButton = styled(
   React.forwardRef((prop, ref) => <DropdownButton ref={ref} {...prop} />)
 )`
-  color: ${p => p.theme.gray2};
-  font-weight: normal;
-  text-transform: capitalize;
-  height: ${space(4)};
-  padding: ${space(0.5)} ${space(1)};
-  background: ${p => p.theme.offWhite};
   border-radius: ${p =>
-    p.isOpen
-      ? `0 ${p.theme.borderRadius} 0 0`
-      : `0 ${p.theme.borderRadius} 0 ${p.theme.borderRadius}`};
+    p.isOpen && `${p.theme.borderRadius} ${p.theme.borderRadius} 0 0`};
+  padding: ${space(1)} ${space(2)};
+  font-weight: normal;
+  min-width: 180px;
+  color: ${p => p.theme.gray4};
+
+  &:hover,
+  &:focus {
+    color: inherit;
+  }
 `;
 
-const Container = styled('div')`
-  position: absolute;
-  /* compensate to have borders overlap */
-  top: -1px;
-  right: -1px;
+const ChartControls = styled('div')`
+  display: flex;
+  justify-content: flex-end;
+  padding: ${space(1)};
+  border-top: 1px solid ${p => p.theme.borderLight};
+`;
+
+const StyledLabel = styled(SectionHeading)`
+  padding-right: ${space(1)};
+  line-height: 1.2;
 `;
 
 YAxisSelector.propTypes = {
@@ -62,8 +71,4 @@ YAxisSelector.propTypes = {
   selected: PropTypes.string,
 };
 
-const StyledDropdownItem = styled(DropdownItem)`
-  text-transform: capitalize;
-`;
-
 export default YAxisSelector;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
index e0fc647b3b..245882b6ee 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
@@ -231,8 +231,10 @@ const LineGraph = (props: LineGraphProps) => {
             tooltip={tooltip}
             xAxis={xAxisOptions}
             grid={{
-              left: '20px',
-              right: '10px',
+              left: '24px',
+              right: '24px',
+              top: '24px',
+              bottom: '12px',
             }}
           />
         )}
@@ -248,7 +250,7 @@ const StyledPanel = styled(Panel)`
     width: 100% !important;
   }
   image {
-    y: 0;
+    y: 0px;
   }
 `;
 
diff --git a/src/sentry/static/sentry/app/views/eventsV2/results.tsx b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
index 2ccc99807e..2d193e80e6 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/results.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
@@ -209,8 +209,6 @@ const StyledPageContent = styled(PageContent)`
 
   @media (min-width: ${p => p.theme.breakpoints[1]}) {
     display: grid;
-    /* HACK(leedongwei): Hardcoded height for search bar and graph */
-    grid-template-rows: 270px auto;
     grid-template-columns: 66% auto;
     grid-column-gap: ${space(3)};
   }
@@ -223,11 +221,8 @@ const StyledPageContent = styled(PageContent)`
 const StyledSearchBar = styled(SearchBar)`
   margin-bottom: ${space(2)};
 `;
-const StyledPanel = styled(Panel)`
-  /* HACK(leedongwei): Hardcoded height for graph */
-  height: 200px;
-  margin-bottom: ${space(1.5)};
 
+const StyledPanel = styled(Panel)`
   .echarts-for-react div:first-child {
     width: 100% !important;
   }
diff --git a/tests/js/spec/views/events/events.spec.jsx b/tests/js/spec/views/events/events.spec.jsx
index 08afc9224f..83c0a5ad21 100644
--- a/tests/js/spec/views/events/events.spec.jsx
+++ b/tests/js/spec/views/events/events.spec.jsx
@@ -263,7 +263,7 @@ describe('EventsErrors', function() {
       await tick();
       wrapper.update();
 
-      chartRender = jest.spyOn(wrapper.find('LineChart').instance(), 'render');
+      chartRender = jest.spyOn(wrapper.find('AreaChart').instance(), 'render');
 
       doZoom(wrapper.find('EventsChart').first(), chart);
       await tick();
diff --git a/tests/js/spec/views/events/eventsLineChart.spec.jsx b/tests/js/spec/views/events/eventsAreaChart.spec.jsx
similarity index 91%
rename from tests/js/spec/views/events/eventsLineChart.spec.jsx
rename to tests/js/spec/views/events/eventsAreaChart.spec.jsx
index 95e985aa05..22bb0237d6 100644
--- a/tests/js/spec/views/events/eventsLineChart.spec.jsx
+++ b/tests/js/spec/views/events/eventsAreaChart.spec.jsx
@@ -5,7 +5,7 @@ import {mockZoomRange} from 'sentry-test/charts';
 import {initializeOrg} from 'sentry-test/initializeOrg';
 import {mountWithTheme} from 'sentry-test/enzyme';
 
-describe('EventsChart > EventsLineChart', function() {
+describe('EventsChart > EventsAreaChart', function() {
   const {router, routerContext, org} = initializeOrg();
   let wrapper;
 
@@ -47,8 +47,8 @@ describe('EventsChart > EventsLineChart', function() {
   it('renders a legend if enabled', function() {
     wrapper.update();
 
-    const lineChart = wrapper.find('LineChart');
-    expect(lineChart.props().legend).toHaveProperty('data');
+    const areaChart = wrapper.find('AreaChart');
+    expect(areaChart.props().legend).toHaveProperty('data');
   });
 
   it('responds to y-axis changes', function() {
