commit 2d52ff5eb4a771ad15c47b9e0d7171a15accde85
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 11 21:07:42 2014 -0700

    Add project member list endpoint

diff --git a/src/sentry/api/endpoints/project_member_index.py b/src/sentry/api/endpoints/project_member_index.py
new file mode 100644
index 0000000000..5ce700da88
--- /dev/null
+++ b/src/sentry/api/endpoints/project_member_index.py
@@ -0,0 +1,22 @@
+from django.db.models import Q
+from sentry.api.base import Endpoint
+from sentry.api.permissions import assert_perm
+from sentry.api.serializers import serialize
+from sentry.models import Project, User
+from rest_framework.response import Response
+
+
+class ProjectMemberIndexEndpoint(Endpoint):
+    def get(self, request, project_id):
+        project = Project.objects.get_from_cache(id=project_id)
+
+        assert_perm(project, request.user, request.auth)
+
+        member_list = sorted(set(User.objects.filter(
+            Q(member_set__team=project.team) |
+            Q(accessgroup__projects=project),
+        )[:1000]), key=lambda x: x.email)
+
+        member_list = serialize(member_list, request.user)
+
+        return Response(member_list)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 837b4e1b1c..acb4f0c60e 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -17,6 +17,7 @@ from .endpoints.group_tags import GroupTagsEndpoint
 from .endpoints.project_details import ProjectDetailsEndpoint
 from .endpoints.project_index import ProjectIndexEndpoint
 from .endpoints.project_group_index import ProjectGroupIndexEndpoint
+from .endpoints.project_member_index import ProjectMemberIndexEndpoint
 from .endpoints.project_stats import ProjectStatsEndpoint
 from .endpoints.team_details import TeamDetailsEndpoint
 from .endpoints.team_index import TeamIndexEndpoint
@@ -78,6 +79,9 @@ urlpatterns = patterns(
     url(r'^projects/(?P<project_id>\d+)/groups/$',
         ProjectGroupIndexEndpoint.as_view(),
         name='sentry-api-0-project-group-index'),
+    url(r'^projects/(?P<project_id>\d+)/members/$',
+        ProjectMemberIndexEndpoint.as_view(),
+        name='sentry-api-0-project-member-index'),
     url(r'^projects/(?P<project_id>\d+)/stats/$',
         ProjectStatsEndpoint.as_view(),
         name='sentry-api-0-project-stats'),
diff --git a/src/sentry/models/teammember.py b/src/sentry/models/teammember.py
index b3be3c77d7..e264d22d12 100644
--- a/src/sentry/models/teammember.py
+++ b/src/sentry/models/teammember.py
@@ -23,7 +23,7 @@ class TeamMember(Model):
     be set to ownership.
     """
     team = models.ForeignKey('sentry.Team', related_name="member_set")
-    user = models.ForeignKey(settings.AUTH_USER_MODEL, related_name="sentry_teammember_set")
+    user = models.ForeignKey(settings.AUTH_USER_MODEL, related_name="member_set")
     type = BoundedIntegerField(choices=MEMBER_TYPES, default=MEMBER_USER)
     date_added = models.DateTimeField(default=timezone.now)
 
diff --git a/tests/sentry/api/endpoints/test_project_member_index.py b/tests/sentry/api/endpoints/test_project_member_index.py
new file mode 100644
index 0000000000..9c36966b45
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_project_member_index.py
@@ -0,0 +1,27 @@
+from django.core.urlresolvers import reverse
+from sentry.models import AccessGroup
+from sentry.testutils import APITestCase
+
+
+class ProjectMemberIndexTest(APITestCase):
+    def test_simple(self):
+        user_1 = self.create_user('foo@localhost', username='foo')
+        user_2 = self.create_user('bar@localhost', username='bar')
+        user_3 = self.create_user('baz@localhost', username='baz')
+        team = self.create_team(slug='baz', owner=user_1)
+        project_1 = self.create_project(team=team, slug='foo')
+        project_2 = self.create_project(team=team, slug='bar')
+        ag = AccessGroup.objects.create(team=team, name='foo')
+        ag.projects.add(project_1)
+        ag.members.add(user_2)
+
+        self.login_as(user=user_1)
+
+        url = reverse('sentry-api-0-project-member-index', kwargs={
+            'project_id': project_1.id,
+        })
+        response = self.client.get(url)
+        assert response.status_code == 200
+        assert len(response.data) == 2
+        assert response.data[0]['email'] == 'bar@localhost'
+        assert response.data[1]['email'] == 'foo@localhost'
