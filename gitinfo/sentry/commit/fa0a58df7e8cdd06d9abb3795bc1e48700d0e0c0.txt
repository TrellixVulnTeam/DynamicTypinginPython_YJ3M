commit fa0a58df7e8cdd06d9abb3795bc1e48700d0e0c0
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Wed Apr 29 10:08:43 2020 +0200

    fix: Do not trigger relay cache update when fetching options (#18510)
    
    
    
    We generically hook into all the places where the redis cache for project and org options gets refreshed. However, that cache gets also "refreshed" when it is empty and needs to be populated. For those cases we do not need to refresh the relay cache

diff --git a/src/sentry/models/organizationoption.py b/src/sentry/models/organizationoption.py
index 3cc616cd59..316f0ae898 100644
--- a/src/sentry/models/organizationoption.py
+++ b/src/sentry/models/organizationoption.py
@@ -50,9 +50,10 @@ class OrganizationOptionManager(OptionManager):
         return self._option_cache.get(cache_key, {})
 
     def reload_cache(self, organization_id, update_reason):
-        schedule_update_config_cache(
-            organization_id=organization_id, generate=False, update_reason=update_reason
-        )
+        if update_reason != "organizationoption.get_all_values":
+            schedule_update_config_cache(
+                organization_id=organization_id, generate=False, update_reason=update_reason
+            )
 
         cache_key = self._make_key(organization_id)
         result = dict((i.key, i.value) for i in self.filter(organization=organization_id))
diff --git a/src/sentry/models/projectoption.py b/src/sentry/models/projectoption.py
index bf324d38ea..4b065267ee 100644
--- a/src/sentry/models/projectoption.py
+++ b/src/sentry/models/projectoption.py
@@ -55,9 +55,10 @@ class ProjectOptionManager(OptionManager):
         return self._option_cache.get(cache_key, {})
 
     def reload_cache(self, project_id, update_reason):
-        schedule_update_config_cache(
-            project_id=project_id, generate=True, update_reason=update_reason
-        )
+        if update_reason != "projectoption.get_all_values":
+            schedule_update_config_cache(
+                project_id=project_id, generate=True, update_reason=update_reason
+            )
         cache_key = self._make_key(project_id)
         result = dict((i.key, i.value) for i in self.filter(project=project_id))
         cache.set(cache_key, result)
diff --git a/tests/sentry/tasks/test_relay.py b/tests/sentry/tasks/test_relay.py
index 5b242ae0c7..bb8b2ef595 100644
--- a/tests/sentry/tasks/test_relay.py
+++ b/tests/sentry/tasks/test_relay.py
@@ -2,6 +2,8 @@ from __future__ import absolute_import
 
 import pytest
 
+from sentry.utils.compat.mock import patch
+
 from sentry.tasks.relay import schedule_update_config_cache
 from sentry.relay.projectconfig_cache.redis import RedisProjectConfigCache
 
@@ -124,7 +126,7 @@ def test_invalidate(
 
 
 @pytest.mark.django_db
-def test_project_reload_cache(default_project, task_runner, redis_cache):
+def test_project_update_option(default_project, task_runner, redis_cache):
     with task_runner():
         default_project.update_option(
             "sentry:relay_pii_config", '{"applications": {"$string": ["@creditcard:mask"]}}'
@@ -140,3 +142,29 @@ def test_project_reload_cache(default_project, task_runner, redis_cache):
         )
 
     assert redis_cache.get(default_project.id) is None
+
+
+@pytest.mark.django_db
+def test_project_delete_option(default_project, task_runner, redis_cache):
+    with task_runner():
+        default_project.delete_option("sentry:relay_pii_config")
+
+    assert redis_cache.get(default_project.id)["config"]["piiConfig"] == {}
+
+
+@pytest.mark.django_db
+def test_project_get_option_does_not_reload(default_project, task_runner, monkeypatch):
+    from sentry.models import ProjectOption
+
+    ProjectOption.objects._option_cache.clear()
+
+    with task_runner():
+        with patch("sentry.models.projectoption.cache.get", return_value=None):
+            with patch(
+                "sentry.models.projectoption.schedule_update_config_cache"
+            ) as update_config_cache:
+                default_project.get_option(
+                    "sentry:relay_pii_config", '{"applications": {"$string": ["@creditcard:mask"]}}'
+                )
+
+    update_config_cache.assert_not_called()  # noqa
