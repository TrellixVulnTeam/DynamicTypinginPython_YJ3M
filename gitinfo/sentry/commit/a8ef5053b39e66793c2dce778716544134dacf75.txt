commit a8ef5053b39e66793c2dce778716544134dacf75
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jan 28 23:44:19 2014 -0800

    Allow make the user aware of usernames when they matter

diff --git a/src/sentry/templates/sentry/account/settings.html b/src/sentry/templates/sentry/account/settings.html
index 427d9fb207..a79b28f717 100644
--- a/src/sentry/templates/sentry/account/settings.html
+++ b/src/sentry/templates/sentry/account/settings.html
@@ -17,15 +17,12 @@
             {% endif %}
         {% endwith %}
         <hr>
-        <fieldset class="control-group">
-            <label>Username</label>
-            <div class="controls">
-                {{ request.user.username }}
-            </div>
-        </fieldset>
         {% with form.first_name as field %}
             {{ field|as_crispy_field }}
         {% endwith %}
+        {% with form.username as field %}
+            {{ field|as_crispy_field }}
+        {% endwith %}
         {% with form.email as field %}
             {{ field|as_crispy_field }}
         {% endwith %}
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index 29174307c0..9e102b554e 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -131,6 +131,7 @@ class NotificationSettingsForm(forms.Form):
 
 class AccountSettingsForm(forms.Form):
     old_password = forms.CharField(label=_('Current password'), widget=forms.PasswordInput)
+    username = forms.CharField(label=_('Username'), max_length=128)
     email = forms.EmailField(label=_('Email'))
     first_name = forms.CharField(required=True, label=_('Name'), max_length=30)
     new_password = forms.CharField(label=_('New password'), widget=forms.PasswordInput, required=False)
@@ -139,6 +140,10 @@ class AccountSettingsForm(forms.Form):
         self.user = user
         super(AccountSettingsForm, self).__init__(*args, **kwargs)
 
+        # dont show username field if its the same as their email address
+        if self.user.email == self.user.username:
+            del self.fields['username']
+
         # HACK: don't require current password if they don't have one
         if self.user.password in EMPTY_PASSWORD_VALUES:
             del self.fields['old_password']
@@ -156,7 +161,17 @@ class AccountSettingsForm(forms.Form):
         if self.cleaned_data.get('new_password'):
             self.user.set_password(self.cleaned_data['new_password'])
         self.user.first_name = self.cleaned_data['first_name']
+
+        if self.cleaned_data['email'] != self.user.email:
+            new_username = self.user.email == self.user.username
+        else:
+            new_username = False
+
         self.user.email = self.cleaned_data['email']
+
+        if new_username and not User.objects.filter(username__iexact=self.user.email).exists():
+            self.user.username = self.user.email
+
         if commit:
             self.user.save()
 
diff --git a/tests/sentry/web/forms/accounts/tests.py b/tests/sentry/web/forms/accounts/tests.py
index 6762a3173a..506215b20c 100644
--- a/tests/sentry/web/forms/accounts/tests.py
+++ b/tests/sentry/web/forms/accounts/tests.py
@@ -14,3 +14,13 @@ class AccountSettingsFormTest(TestCase):
         user.set_password('foo')
         form = AccountSettingsForm(user=user)
         self.assertIn('old_password', form.fields)
+
+    def test_removes_username_if_matches_email(self):
+        user = User(username='foo@example.com', email='foo@example.com')
+        form = AccountSettingsForm(user=user)
+        assert 'username' not in form.fields
+
+    def test_requires_username_if_not_matches_email(self):
+        user = User(username='bar@example.com', email='foo@example.com')
+        form = AccountSettingsForm(user=user)
+        assert 'username' in form.fields
diff --git a/tests/sentry/web/frontend/accounts/tests.py b/tests/sentry/web/frontend/accounts/tests.py
index 2dc00257d0..5c320ad273 100644
--- a/tests/sentry/web/frontend/accounts/tests.py
+++ b/tests/sentry/web/frontend/accounts/tests.py
@@ -114,6 +114,7 @@ class SettingsTest(TestCase):
 
     def params(self, without=()):
         params = {
+            'username': 'foobar',
             'email': 'foo@example.com',
             'first_name': 'Foo bar',
             'old_password': 'admin',
