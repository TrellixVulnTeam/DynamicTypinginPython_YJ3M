commit 6c9300c47345f4ce446902cc69252eb8a6d0ba0e
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Apr 8 22:41:41 2014 -0700

    Update team status as part of delete_team

diff --git a/src/sentry/tasks/deletion.py b/src/sentry/tasks/deletion.py
index 55811c9b57..f346aa311f 100644
--- a/src/sentry/tasks/deletion.py
+++ b/src/sentry/tasks/deletion.py
@@ -15,7 +15,7 @@ from sentry.tasks.base import instrumented_task
                    default_retry_delay=60 * 5, max_retries=None)
 def delete_team(object_id, **kwargs):
     from sentry.models import (
-        Team, Project, AccessGroup, PendingTeamMember, TeamMember,
+        Team, TeamStatus, Project, AccessGroup, PendingTeamMember, TeamMember,
     )
 
     try:
@@ -23,14 +23,13 @@ def delete_team(object_id, **kwargs):
     except Team.DoesNotExist:
         return
 
-    # TODO(mattrobenolt): Add status column
-    # if t.status != STATUS_HIDDEN:
-    #     t.update(status=STATUS_HIDDEN)
+    if t.status != TeamStatus.DELETION_IN_PROGRESS:
+        t.update(status=TeamStatus.DELETION_IN_PROGRESS)
 
     logger = delete_team.get_logger()
 
     # Delete 1 project at a time since this is expensive by itself
-    for project in Project.objects.filter(team=t)[:1]:
+    for project in Project.objects.filter(team=t).order_by('id')[:1]:
         logger.info('Removing Project id=%s where team=%s', project.id, t.id)
         delete_project(project.id)
         delete_team.delay(object_id=object_id)
diff --git a/tests/sentry/tasks/test_deletion.py b/tests/sentry/tasks/test_deletion.py
new file mode 100644
index 0000000000..9c50e0806e
--- /dev/null
+++ b/tests/sentry/tasks/test_deletion.py
@@ -0,0 +1,43 @@
+from mock import patch
+
+from sentry.models import Project, Team, TeamStatus
+from sentry.tasks.deletion import delete_team
+from sentry.testutils import TestCase
+
+
+class DeleteTeamTest(TestCase):
+    @patch.object(delete_team, 'delay')
+    def test_simple(self, delete_team_delay):
+        user = self.create_user(email='foo@example.com')
+        team = Team.objects.create(owner=user, name='test', slug='test')
+        project1 = Project.objects.create(team=team, name='test1', slug='test1')
+        project2 = Project.objects.create(team=team, name='test2', slug='test2')
+
+        # remove relations from team so delete_team tests are faster
+        team.member_set.all().delete()
+
+        delete_team(object_id=team.id)
+
+        team = Team.objects.get(id=team.id)
+
+        assert team.status == TeamStatus.DELETION_IN_PROGRESS
+
+        assert not Project.objects.filter(id=project1.id).exists()
+
+        delete_team_delay.assert_called_once_with(object_id=team.id)
+
+        delete_team_delay.reset_mock()
+
+        delete_team(object_id=team.id)
+
+        assert not Project.objects.filter(id=project2.id).exists()
+
+        delete_team_delay.assert_called_once_with(object_id=team.id)
+
+        delete_team_delay.reset_mock()
+
+        delete_team(object_id=team.id)
+
+        assert not delete_team_delay.called
+
+        assert not Team.objects.filter(id=team.id).exists()
