commit 2cec5d0292893965a494fd433847ee9506ff9063
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 4 10:35:35 2015 -0800

    Add NodeStore.multi_delete

diff --git a/src/sentry/nodestore/base.py b/src/sentry/nodestore/base.py
index ee69a58fd0..ff898558e0 100644
--- a/src/sentry/nodestore/base.py
+++ b/src/sentry/nodestore/base.py
@@ -28,6 +28,18 @@ class NodeStorage(local):
         """
         raise NotImplementedError
 
+    def delete_multi(self, id_list):
+        """
+        Delete multiple nodes.
+
+        Note: This is not guaranteed to be atomic and may result in a partial
+        delete.
+
+        >>> delete_multi(['key1', 'key2'])
+        """
+        for id in id_list:
+            self.delete(id)
+
     def get(self, id):
         """
         >>> data = nodestore.get('key1')
diff --git a/tests/sentry/nodestore/django/backend/tests.py b/tests/sentry/nodestore/django/backend/tests.py
index d44893831c..c2a681965e 100644
--- a/tests/sentry/nodestore/django/backend/tests.py
+++ b/tests/sentry/nodestore/django/backend/tests.py
@@ -85,3 +85,14 @@ class DjangoNodeStorageTest(TestCase):
 
         self.ns.delete(node.id)
         assert not Node.objects.filter(id=node.id).exists()
+
+    def test_delete_multi(self):
+        node = Node.objects.create(
+            id='d2502ebbd7df41ceba8d3275595cac33',
+            data={
+                'foo': 'bar',
+            }
+        )
+
+        self.ns.delete_multi([node.id])
+        assert not Node.objects.filter(id=node.id).exists()
diff --git a/tests/sentry/nodestore/riak/backend/tests.py b/tests/sentry/nodestore/riak/backend/tests.py
index 92a7630218..2a2f8474e8 100644
--- a/tests/sentry/nodestore/riak/backend/tests.py
+++ b/tests/sentry/nodestore/riak/backend/tests.py
@@ -40,3 +40,9 @@ class RiakNodeStorageTest(TestCase):
         assert result[node_id2] == {
             'foo': 'bar',
         }
+
+        self.ns.delete(node_id)
+        assert not self.ns.get(node_id)
+
+        self.ns.delete_multi([node_id2])
+        assert not self.ns.get(node_id2)
