commit 5f0f87daf05cb3721a536153813a7322368324af
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Mon Dec 17 03:19:03 2018 -0800

    feat: Use new JS SDK (#11046)
    
    * feat: Update loader + loader usage
    
    Remove raven-js dep
    
    * feat: Use @sentry/browser, inject sdk options into bundle
    
    * ref: Add small Raven shim with console.error
    
    * fix: JS linter errors

diff --git a/package.json b/package.json
index 2b1a31a430..c13c9556ba 100644
--- a/package.json
+++ b/package.json
@@ -6,6 +6,7 @@
     "url": "git://github.com/getsentry/sentry.git"
   },
   "dependencies": {
+    "@sentry/browser": "^4.4.2",
     "babel-core": "6.21.0",
     "babel-gettext-extractor": "^3.0.0",
     "babel-loader": "^7.1.2",
@@ -61,7 +62,6 @@
     "po-catalog-loader": "2.0.0",
     "prop-types": "^15.6.0",
     "query-string": "2.4.2",
-    "raven-js": "^3.26.3",
     "react": "16.5.1",
     "react-addons-css-transition-group": "15.6.2",
     "react-autosize-textarea": "^4.0.0",
diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index 0e240fa903..060eed6c9c 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -8,7 +8,7 @@ import * as EmotionTheming from 'emotion-theming';
 import * as GridEmotion from 'grid-emotion';
 import JsCookie from 'js-cookie';
 import PropTypes from 'prop-types';
-import Raven from 'raven-js';
+import * as Sentry from '@sentry/browser';
 import React from 'react';
 import ReactBootstrapModal from 'react-bootstrap/lib/Modal';
 import ReactDOM from 'react-dom';
@@ -26,6 +26,37 @@ import * as api from 'app/api';
 import * as il8n from 'app/locale';
 import plugins from 'app/plugins';
 
+// SDK INIT  --------------------------------------------------------
+// window.__SENTRY__OPTIONS will be emmited by sdk-config.html before loading this script
+Sentry.init(window.__SENTRY__OPTIONS);
+
+Sentry.configureScope(scope => {
+  if (window.__SENTRY__USER) {
+    scope.setUser(window.__SENTRY__USER);
+  }
+  if (window.__SENTRY__VERSION) {
+    scope.setTag('sentry_version', window.__SENTRY__VERSION);
+  }
+});
+
+function __raven_deprecated() {
+  const message = '[DEPRECATED]: Please no longer use Raven, use Sentry instead';
+  console.error(message);
+  Sentry.captureMessage(message);
+}
+
+const Raven = {
+  captureMessage: () => __raven_deprecated(),
+  captureException: () => __raven_deprecated(),
+  captureBreadcrumb: () => __raven_deprecated(),
+  showReportDialog: () => __raven_deprecated(),
+  setTagsContext: () => __raven_deprecated(),
+  setExtraContext: () => __raven_deprecated(),
+  setUserContext: () => __raven_deprecated(),
+};
+window.Raven = Raven;
+// -----------------------------------------------------------------
+
 // Used for operational metrics to determine that the application js
 // bundle was loaded by browser.
 metric.mark('sentry-app-init');
@@ -59,8 +90,9 @@ if (module.hot) {
 export default {
   jQuery,
   moment,
-  Raven,
+  Sentry,
   React,
+  Raven,
   ReactDOM: {
     findDOMNode: ReactDOM.findDOMNode,
     render: ReactDOM.render,
diff --git a/src/sentry/static/sentry/app/utils/sdk.js b/src/sentry/static/sentry/app/utils/sdk.js
index 7b21d6d6fb..4d58b6f873 100644
--- a/src/sentry/static/sentry/app/utils/sdk.js
+++ b/src/sentry/static/sentry/app/utils/sdk.js
@@ -1,19 +1,13 @@
+import * as Sentry from '@sentry/browser';
+
 let _addBreadcrumb = () => {};
 let _captureException = () => {};
 let _captureMessage = () => {};
 let _showReportDialog = () => {};
 let _lastEventId = () => {};
 
-document.addEventListener('ravenLoaded', function() {
-  _addBreadcrumb = window.Raven.captureBreadcrumb.bind(window.Raven);
-  _captureException = window.Raven.captureException.bind(window.Raven);
-  _captureMessage = window.Raven.captureMessage.bind(window.Raven);
-  _showReportDialog = window.Raven.showReportDialog.bind(window.Raven);
-  _lastEventId = window.Raven.lastEventId.bind(window.Raven);
-});
-
 function setContextInScope(context) {
-  window.Sentry.configureScope(scope => {
+  Sentry.configureScope(scope => {
     if (context.user) {
       scope.setUser(context.user);
     }
@@ -34,35 +28,33 @@ function setContextInScope(context) {
   });
 }
 
-document.addEventListener('sentryLoaded', function() {
-  _addBreadcrumb = window.Sentry.addBreadcrumb;
+Sentry.onLoad(function() {
+  _addBreadcrumb = Sentry.addBreadcrumb;
   _captureMessage = (...args) => {
-    window.Sentry.getDefaultHub().pushScope();
+    Sentry.getDefaultHub().pushScope();
     if (args[1]) {
       setContextInScope(args[1]);
     }
     if (args[0]) {
-      window.Sentry.captureMessage(args[0]);
+      Sentry.captureMessage(args[0]);
     }
-    window.Sentry.getDefaultHub().popScope();
+    Sentry.getDefaultHub().popScope();
   };
   _captureException = (...args) => {
-    window.Sentry.getDefaultHub().pushScope();
+    Sentry.getDefaultHub().pushScope();
     if (args[1]) {
       setContextInScope(args[1]);
     }
     if (args[0]) {
-      window.Sentry.captureException(args[0]);
+      Sentry.captureException(args[0]);
     }
-    window.Sentry.getDefaultHub().popScope();
+    Sentry.getDefaultHub().popScope();
   };
   _showReportDialog = () => {
-    // TODO: eventually implement this
-    window.Sentry.captureMessage('Would have shown report dialog');
+    Sentry.showReportDialog();
   };
   _lastEventId = () => {
-    // TODO: eventually implement this
-    window.Sentry.captureMessage('Would have called lastEventId()');
+    Sentry.lastEventId();
   };
 });
 
diff --git a/src/sentry/static/sentry/app/utils/tracing.jsx b/src/sentry/static/sentry/app/utils/tracing.jsx
index 70f8183dbf..f805da883b 100644
--- a/src/sentry/static/sentry/app/utils/tracing.jsx
+++ b/src/sentry/static/sentry/app/utils/tracing.jsx
@@ -6,8 +6,12 @@ let transactionId = null;
 export function startTransaction() {
   spanId = uniqueId();
   transactionId = uniqueId();
-  window.Raven &&
-    window.Raven.setTagsContext({span_id: spanId, transaction_id: transactionId});
+  if (window.Sentry) {
+    window.Sentry.configureScope(function(scope) {
+      scope.setTag('span_id', spanId);
+      scope.setTag('transaction_id', transactionId);
+    });
+  }
   return {spanId, transactionId};
 }
 
diff --git a/src/sentry/templates/sentry/includes/ravenjs.html b/src/sentry/templates/sentry/includes/ravenjs.html
deleted file mode 100644
index 81f5457a7e..0000000000
--- a/src/sentry/templates/sentry/includes/ravenjs.html
+++ /dev/null
@@ -1,10 +0,0 @@
-{% load sentry_api %}
-{% load sentry_dsn %}
-
-<script>
-Raven.config('{% public_dsn %}', {
-  release: '{{ sentry_version.build }}',
-  whitelistUrls: {% convert_to_json ALLOWED_HOSTS %}
-}).install();
-Raven.setUserContext({% get_user_context request %});
-</script>
diff --git a/src/sentry/templates/sentry/includes/sdk-config.html b/src/sentry/templates/sentry/includes/sdk-config.html
new file mode 100644
index 0000000000..c8005435dc
--- /dev/null
+++ b/src/sentry/templates/sentry/includes/sdk-config.html
@@ -0,0 +1,10 @@
+{% load sentry_api %}
+{% load sentry_dsn %}
+<script>
+  window.__SENTRY__OPTIONS = {
+    dsn: '{% public_dsn %}',
+    release: '{{ sentry_version.build }}',
+    whitelistUrls: {% convert_to_json ALLOWED_HOSTS %}
+  };
+  window.__SENTRY__USER = {% get_user_context request %} || undefined;
+</script>
diff --git a/src/sentry/templates/sentry/js-sdk-loader.js.tmpl b/src/sentry/templates/sentry/js-sdk-loader.js.tmpl
index 9bfbcbdaf2..9232774614 100644
--- a/src/sentry/templates/sentry/js-sdk-loader.js.tmpl
+++ b/src/sentry/templates/sentry/js-sdk-loader.js.tmpl
@@ -1,17 +1,27 @@
 {% load sentry_helpers %}// Sentry Loader
-(function(_window, _document, _script, _onerror, _onunhandledrejection, _namespace, _publicKey, _sdkBundleUrl, _config) {
+(function(
+  _window,
+  _document,
+  _script,
+  _onerror,
+  _onunhandledrejection,
+  _namespace,
+  _publicKey,
+  _sdkBundleUrl,
+  _config
+) {
   var lazy = true;
   var forceLoad = false;
 
   for (var i = 0; i < document.scripts.length; i++) {
     if (document.scripts[i].src.indexOf(_publicKey) > -1) {
-      lazy = !(document.scripts[i].dataset.lazy === 'no');
+      lazy = !(document.scripts[i].getAttribute('data-lazy') === 'no');
       break;
     }
   }
 
   var injected = false;
-  var onLoadCallback;
+  var onLoadCallbacks = [];
 
   // Create a namespace and attach function that will store captured exception
   // Because functions are also objects, we can attach the queue itself straight to it and save some bytes
@@ -20,7 +30,8 @@
     // content.p = promise rejection
     // content.f = function call the Sentry
     if (
-      (content.e || content.p ||
+      (content.e ||
+        content.p ||
         (content.f && content.f.indexOf('capture') > -1) ||
         (content.f && content.f.indexOf('showReportDialog') > -1)) &&
       lazy
@@ -28,13 +39,13 @@
       // We only want to lazy inject/load the sdk bundle if
       // an error or promise rejection occured
       // OR someone called `capture...` on the SDK
-      injectSdk(onLoadCallback);
+      injectSdk(onLoadCallbacks);
     }
     queue.data.push(content);
   };
   queue.data = [];
 
-  function injectSdk(callback) {
+  function injectSdk(callbacks) {
     if (injected) {
       return;
     }
@@ -73,7 +84,7 @@
           oldInit(target);
         };
 
-        sdkLoaded(callback, SDK);
+        sdkLoaded(callbacks, SDK);
       } catch (o_O) {
         console.error(o_O);
       }
@@ -82,11 +93,14 @@
     _currentScriptTag.parentNode.insertBefore(_newScriptTag, _currentScriptTag);
   }
 
-  function sdkLoaded(callback, SDK) {
+  function sdkLoaded(callbacks, SDK) {
     try {
-      if (callback) {
-        callback();
+      for (var i = 0; i < callbacks.length; i++) {
+        if (typeof callbacks[i] === 'function') {
+          callbacks[i]();
+        }
       }
+
       var data = queue.data;
 
       // We want to replay all calls to Sentry first to make sure init is called before
@@ -130,21 +144,21 @@
   // We don't want to _window.Sentry = _window.Sentry || { ... } since we want to make sure
   // that the first Sentry "instance" is our with onLoad
   _window[_namespace] = {
-    onLoad: function(callback) {
+    onLoad: function (callback) {
+      onLoadCallbacks.push(callback);
       if (lazy && !forceLoad) {
-        onLoadCallback = callback;
-      } else {
-        injectSdk(callback);
+        return;
       }
+      injectSdk(onLoadCallbacks);
     },
     forceLoad: function() {
       forceLoad = true;
       if (lazy) {
         setTimeout(function() {
-          injectSdk(onLoadCallback);
+          injectSdk(onLoadCallbacks);
         });
       }
-    },
+    }
   };
 
   [
@@ -155,10 +169,10 @@
     'captureEvent',
     'configureScope',
     'withScope',
-    'showReportDialog',
+    'showReportDialog'
   ].forEach(function(f) {
     _window[_namespace][f] = function() {
-      queue({f: f, a: arguments});
+      queue({ f: f, a: arguments });
     };
   });
 
@@ -168,7 +182,7 @@
   _window[_onerror] = function(message, source, lineno, colno, exception) {
     // Use keys as "data type" to save some characters"
     queue({
-      e: [].slice.call(arguments),
+      e: [].slice.call(arguments)
     });
 
     if (_oldOnerror) _oldOnerror.apply(_window, arguments);
@@ -178,14 +192,14 @@
   var _oldOnunhandledrejection = _window[_onunhandledrejection];
   _window[_onunhandledrejection] = function(exception) {
     queue({
-      p: exception.reason,
+      p: exception.reason
     });
     if (_oldOnunhandledrejection) _oldOnunhandledrejection.apply(_window, arguments);
   };
 
   if (!lazy) {
     setTimeout(function() {
-      injectSdk(onLoadCallback);
+      injectSdk(onLoadCallbacks);
     });
   }
 })(window, document, "script", "onerror", "onunhandledrejection", "Sentry", "{{ publicKey|safe }}", "{{ jsSdkUrl|safe }}", {{ config|to_json|safe }});
diff --git a/src/sentry/templates/sentry/js-sdk-loader.min.js.tmpl b/src/sentry/templates/sentry/js-sdk-loader.min.js.tmpl
index 93ccdcc6ab..55902a536f 100644
--- a/src/sentry/templates/sentry/js-sdk-loader.min.js.tmpl
+++ b/src/sentry/templates/sentry/js-sdk-loader.min.js.tmpl
@@ -1,3 +1,4 @@
-{% load sentry_helpers %}(function(c,t,u,m,n,p,y,z,v){function h(a){if(!w){w=!0;var e=t.getElementsByTagName(u)[0],b=t.createElement(u);b.src=z;b.crossorigin="anonymous";b.addEventListener("load",function(){try{c[m]=q;c[n]=r;var b=c[p],e=b.init;b.init=function(a){for(var b in a)Object.prototype.hasOwnProperty.call(a,b)&&(v[b]=a[b]);e(v)};A(a,b)}catch(d){console.error(d)}});e.parentNode.insertBefore(b,e)}}function A(a,e){try{a&&a();for(var b=k.data,f=!1,h=!1,d=0;d<b.length;d++)if(b[d].f){h=!0;var g=b[d];!1===f&&"init"!==g.f&&
-e.init();f=!0;e[g.f].apply(e,g.a)}!1===h&&e.init();var l=c[m];for(d=0;d<b.length;d++)b[d].e?l.apply(c,b[d].e):b[d].p&&e.captureException(b[d].p)}catch(B){console.error(B)}}for(var f=!0,x=!1,g=0;g<document.scripts.length;g++)if(-1<document.scripts[g].src.indexOf(y)){f="no"!==document.scripts[g].dataset.lazy;break}var w=!1,l,k=function(a){(a.e||a.p||a.f&&-1<a.f.indexOf("capture")||a.f&&-1<a.f.indexOf("showReportDialog"))&&f&&h(l);k.data.push(a)};k.data=[];c[p]={onLoad:function(a){f&&!x?l=a:h(a)},forceLoad:function(){x=
-!0;f&&setTimeout(function(){h(l)})}};"init addBreadcrumb captureMessage captureException captureEvent configureScope withScope showReportDialog".split(" ").forEach(function(a){c[p][a]=function(){k({f:a,a:arguments})}});var q=c[m];c[m]=function(a,e,b,f,g){k({e:[].slice.call(arguments)});q&&q.apply(c,arguments)};var r=c[n];c[n]=function(a){k({p:a.reason});r&&r.apply(c,arguments)};f||setTimeout(function(){h(l)})})(window,document,"script","onerror","onunhandledrejection","Sentry","{{ publicKey|safe }}","{{ jsSdkUrl|safe }}",{{ config|to_json|safe }});
+{% load sentry_helpers %}(function(c,t,u,m,n,p,y,z,v){function e(b){if(!w){w=!0;var d=t.getElementsByTagName(u)[0],a=t.createElement(u);a.src=z;a.crossorigin="anonymous";a.addEventListener("load",function(){try{c[m]=q;c[n]=r;var a=c[p],d=a.init;a.init=function(a){for(var b in a)Object.prototype.hasOwnProperty.call(a,b)&&(v[b]=a[b]);d(v)};B(b,a)}catch(A){console.error(A)}});d.parentNode.insertBefore(a,d)}}function B(b,d){try{for(var a=0;a<b.length;a++)if("function"===typeof b[a])b[a]();var f=k.data,g=!1,h=!1;for(a=0;a<f.length;a++)if(f[a].f){h=
+!0;var e=f[a];!1===g&&"init"!==e.f&&d.init();g=!0;d[e.f].apply(d,e.a)}!1===h&&d.init();var l=c[m];for(a=0;a<f.length;a++)f[a].e?l.apply(c,f[a].e):f[a].p&&d.captureException(f[a].p)}catch(C){console.error(C)}}for(var g=!0,x=!1,l=0;l<document.scripts.length;l++)if(-1<document.scripts[l].src.indexOf(y)){g="no"!==document.scripts[l].getAttribute("data-lazy");break}var w=!1,h=[],k=function(b){(b.e||b.p||b.f&&-1<b.f.indexOf("capture")||b.f&&-1<b.f.indexOf("showReportDialog"))&&g&&e(h);k.data.push(b)};k.data=
+[];c[p]={onLoad:function(b){h.push(b);g&&!x||e(h)},forceLoad:function(){x=!0;g&&setTimeout(function(){e(h)})}};"init addBreadcrumb captureMessage captureException captureEvent configureScope withScope showReportDialog".split(" ").forEach(function(b){c[p][b]=function(){k({f:b,a:arguments})}});var q=c[m];c[m]=function(b,d,a,f,e){k({e:[].slice.call(arguments)});q&&q.apply(c,arguments)};var r=c[n];c[n]=function(b){k({p:b.reason});r&&r.apply(c,arguments)};g||setTimeout(function(){e(h)})})(window,document,
+"script","onerror","onunhandledrejection","Sentry","{{ publicKey|safe }}","{{ jsSdkUrl|safe }}",{{ config|to_json|safe }});
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index a2f3eaa6d2..4f1f001781 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -39,6 +39,7 @@
   </script>
 
   {% block scripts %}
+  {% include "sentry/includes/sdk-config.html" %}
   <script src="{% asset_url "sentry" "dist/vendor.js" %}"{% crossorigin %}></script>
   {% locale_js_include %}
   <script src="{% asset_url "sentry" "dist/app.js" %}"{% crossorigin %}></script>
@@ -57,8 +58,6 @@
     SentryApp.ConfigStore.loadInitialData({% get_react_config %}, {{ request.LANGUAGE_CODE|to_json|safe }});
   </script>
   <script src="{% asset_url 'sentry' 'js/ads.js' %}"></script>
-
-  {% include "sentry/includes/ravenjs.html" %}
   {% endblock %}
 
   {% block meta %}
diff --git a/webpack.config.js b/webpack.config.js
index c2876032ab..958a6e2b7c 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -59,7 +59,7 @@ var appEntry = {
     'marked',
     'moment',
     'moment-timezone',
-    'raven-js',
+    '@sentry/browser',
     'react',
     'react-dom',
     'react-dom/server',
diff --git a/yarn.lock b/yarn.lock
index 14628fd89f..8f80b0af62 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -145,6 +145,58 @@
   resolved "https://registry.yarnpkg.com/@emotion/unitless/-/unitless-0.6.2.tgz#19a39bda906e5ba45f39f6f7f3512b2740ceab29"
   integrity sha1-GaOb2pBuW6RfOfb381ErJ0DOqyk=
 
+"@sentry/browser@^4.4.2":
+  version "4.4.2"
+  resolved "https://registry.yarnpkg.com/@sentry/browser/-/browser-4.4.2.tgz#8d361778962ef8ab1540e4ebbf64d485903abdf1"
+  integrity sha512-km5p3hPz+aoY4UiEvYxAdRJAbIK30urZSuMs/3zAUVe+8Zij0IHjHmdi9JtrMqpn+rAcWCxtRmFSYlkiKjdSUg==
+  dependencies:
+    "@sentry/core" "4.4.2"
+    "@sentry/types" "4.4.2"
+    "@sentry/utils" "4.4.2"
+    tslib "^1.9.3"
+
+"@sentry/core@4.4.2":
+  version "4.4.2"
+  resolved "https://registry.yarnpkg.com/@sentry/core/-/core-4.4.2.tgz#562526bc634c087f04bbca68b09cedc4b41cc64d"
+  integrity sha512-hJyAodTCf4sZfVdf41Rtuzj4EsyzYq5rdMZ+zc2Vinwdf8D0/brHe91fHeO0CKXEb2P0wJsrjwMidG/ccq/M8A==
+  dependencies:
+    "@sentry/hub" "4.4.2"
+    "@sentry/minimal" "4.4.2"
+    "@sentry/types" "4.4.2"
+    "@sentry/utils" "4.4.2"
+    tslib "^1.9.3"
+
+"@sentry/hub@4.4.2":
+  version "4.4.2"
+  resolved "https://registry.yarnpkg.com/@sentry/hub/-/hub-4.4.2.tgz#1399556fda06fb83c4f186c4aa842725f520159c"
+  integrity sha512-oe9ytXkTWyD+QmOpVzHAqTbRV4Hc0ee2Nt6HvrDtRmlXzQxfvTWG2F8KYT6w8kzqg5klnuRpnsmgTTV3KuNBVQ==
+  dependencies:
+    "@sentry/types" "4.4.2"
+    "@sentry/utils" "4.4.2"
+    tslib "^1.9.3"
+
+"@sentry/minimal@4.4.2":
+  version "4.4.2"
+  resolved "https://registry.yarnpkg.com/@sentry/minimal/-/minimal-4.4.2.tgz#13fffc6b17a2401b6a79947838a637626ab80b10"
+  integrity sha512-GEZZiNvVgqFAESZhAe3vjwTInn13lI2bSI3ItQN4RUWKL/W4n/fwVoDJbkb1U8aWxanuMnRDEpKwyQv6zYTZfw==
+  dependencies:
+    "@sentry/hub" "4.4.2"
+    "@sentry/types" "4.4.2"
+    tslib "^1.9.3"
+
+"@sentry/types@4.4.2":
+  version "4.4.2"
+  resolved "https://registry.yarnpkg.com/@sentry/types/-/types-4.4.2.tgz#f38dd3bc671cd2f5983a85553aebeac9c2286b17"
+  integrity sha512-QyQd6PKKIyjJgaq/RQjsxPJEWbXcuiWZ9RvSnhBjS5jj53HEzkM1qkbAFqlYHJ1DTJJ1EuOM4+aTmGzHe93zuA==
+
+"@sentry/utils@4.4.2":
+  version "4.4.2"
+  resolved "https://registry.yarnpkg.com/@sentry/utils/-/utils-4.4.2.tgz#e05a47e135ecef29e63a996f59aee8c8f792c222"
+  integrity sha512-j/Ad8G1abHlJdD2q7aWWbSOSeWB5M5v1R1VKL8YPlwEbSvvmEQWePhBKFI0qlnKd2ObdUQsj86pHEXJRSFNfCw==
+  dependencies:
+    "@sentry/types" "4.4.2"
+    tslib "^1.9.3"
+
 "@storybook/addon-a11y@3.4.10":
   version "3.4.10"
   resolved "https://registry.yarnpkg.com/@storybook/addon-a11y/-/addon-a11y-3.4.10.tgz#d899a158fee9bfd673dac6b267e20dedbb04b240"
@@ -9757,11 +9809,6 @@ range-parser@^1.0.3, range-parser@~1.2.0:
   resolved "https://registry.yarnpkg.com/range-parser/-/range-parser-1.2.0.tgz#f49be6b487894ddc40dcc94a322f611092e00d5e"
   integrity sha1-9JvmtIeJTdxA3MlKMi9hEJLgDV4=
 
-raven-js@^3.26.3:
-  version "3.26.3"
-  resolved "https://registry.yarnpkg.com/raven-js/-/raven-js-3.26.3.tgz#0efb49969b5b11ab965f7b0d6da4ca102b763cb0"
-  integrity sha512-VPAsPfK73A9VPcJx5X/kt0GxOqUGpGDM8vdzsYNQXMhYemyZGiW1JX1AI+f4jxm37Apijj6VVtCyJcYFz3ocSQ==
-
 raw-body@2.3.2:
   version "2.3.2"
   resolved "https://registry.yarnpkg.com/raw-body/-/raw-body-2.3.2.tgz#bcd60c77d3eb93cde0050295c3f379389bc88f89"
@@ -12209,6 +12256,11 @@ trough@^1.0.0:
   resolved "https://registry.yarnpkg.com/trough/-/trough-1.0.2.tgz#7f1663ec55c480139e2de5e486c6aef6cc24a535"
   integrity sha512-FHkoUZvG6Egrv9XZAyYGKEyb1JMsFphgPjoczkZC2y6W93U1jswcVURB8MUvtsahEPEVACyxD47JAL63vF4JsQ==
 
+tslib@^1.9.3:
+  version "1.9.3"
+  resolved "https://registry.yarnpkg.com/tslib/-/tslib-1.9.3.tgz#d7e4dd79245d85428c4d7e4822a79917954ca286"
+  integrity sha512-4krF8scpejhaOgqzBEcGM7yDIEfi0/8+8zDRZhNZZ2kjmHJ4hv3zCbQWxoJGz1iw5U0Jl0nma13xzHXcncMavQ==
+
 tty-browserify@0.0.0:
   version "0.0.0"
   resolved "https://registry.yarnpkg.com/tty-browserify/-/tty-browserify-0.0.0.tgz#a157ba402da24e9bf957f9aa69d524eed42901a6"
