commit 295f5f880e9345bac144626eeb6dcca1ee97b006
Author: Mathijs de Bruin <mathijs@mathijsfietst.nl>
Date:   Mon Dec 13 11:40:58 2010 +0100

    Fixed a bug where a HTTPError would never be caught as it is a subclass of URLError.

diff --git a/sentry/client/base.py b/sentry/client/base.py
index f7aa5e0a88..08daf7c752 100644
--- a/sentry/client/base.py
+++ b/sentry/client/base.py
@@ -60,12 +60,12 @@ class SentryClient(object):
                 }
                 try:
                     urlread(url, post=data, timeout=conf.REMOTE_TIMEOUT)
-                except urllib2.URLError, e:
-                    logger.error('Unable to reach Sentry log server: %s' % (e,), exc_info=sys.exc_info(), extra={'remote_url': url})
-                    logger.log(kwargs.pop('level', None) or logging.ERROR, kwargs.pop('message', None))
                 except urllib2.HTTPError, e:
                     logger.error('Unable to reach Sentry log server: %s' % (e,), exc_info=sys.exc_info(), extra={'body': e.read(), 'remote_url': url})
                     logger.log(kwargs.pop('level', None) or logging.ERROR, kwargs.pop('message', None))
+		except urllib2.URLError, e:
+                    logger.error('Unable to reach Sentry log server: %s' % (e,), exc_info=sys.exc_info(), extra={'remote_url': url})
+                    logger.log(kwargs.pop('level', None) or logging.ERROR, kwargs.pop('message', None))
         else:
             from sentry.models import GroupedMessage
             
