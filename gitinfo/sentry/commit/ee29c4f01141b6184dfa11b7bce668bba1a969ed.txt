commit ee29c4f01141b6184dfa11b7bce668bba1a969ed
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Mar 18 10:13:05 2019 -0700

    ref(ui): Remove unused utils (#12424)
    
    All folders would have been helpful here

diff --git a/src/sentry/static/sentry/app/views/organizationEvents/utils.jsx b/src/sentry/static/sentry/app/views/organizationEvents/utils.jsx
deleted file mode 100644
index 9a6a77976d..0000000000
--- a/src/sentry/static/sentry/app/views/organizationEvents/utils.jsx
+++ /dev/null
@@ -1,35 +0,0 @@
-import {DEFAULT_STATS_PERIOD} from 'app/constants';
-import {defined} from 'app/utils';
-
-// Filters out params with null values and returns a default
-// `statsPeriod` when necessary.
-//
-// Accepts `period` and `statsPeriod` but will only return `statsPeriod`
-//
-// TODO(billy): Make period parameter name consistent
-export function getParams(params = {}) {
-  const {start, end, period, statsPeriod, ...otherParams} = params;
-
-  // `statsPeriod` takes precendence for now
-  let coercedPeriod = statsPeriod || period;
-
-  if (!start && !end && !coercedPeriod) {
-    coercedPeriod = DEFAULT_STATS_PERIOD;
-  }
-
-  // Filter null values
-  return Object.entries({
-    statsPeriod: coercedPeriod,
-    start: coercedPeriod ? null : start,
-    end: coercedPeriod ? null : end,
-    ...otherParams,
-  })
-    .filter(([key, value]) => defined(value))
-    .reduce(
-      (acc, [key, value]) => ({
-        ...acc,
-        [key]: value,
-      }),
-      {}
-    );
-}
diff --git a/tests/js/spec/views/organizationEvents/utils.spec.jsx b/tests/js/spec/views/organizationEvents/utils.spec.jsx
deleted file mode 100644
index bb7beab714..0000000000
--- a/tests/js/spec/views/organizationEvents/utils.spec.jsx
+++ /dev/null
@@ -1,67 +0,0 @@
-import {DEFAULT_STATS_PERIOD} from 'app/constants';
-import {getParams} from 'app/views/organizationEvents/utils';
-
-describe('OrganizationEvents utils', function() {
-  describe('getParams', function() {
-    it('has a default `statsPeriod` by default', function() {
-      expect(getParams()).toEqual({
-        statsPeriod: DEFAULT_STATS_PERIOD,
-      });
-    });
-
-    it('transforms `period` parameter to `statsPeriod`', function() {
-      expect(getParams({period: '24h'})).toEqual({
-        statsPeriod: '24h',
-      });
-    });
-
-    it('can be passed `statsPeriod` instead of `period`', function() {
-      expect(
-        getParams({
-          statsPeriod: '24h',
-        })
-      ).toEqual({
-        statsPeriod: '24h',
-      });
-    });
-
-    it('prefers `statsPeriod` over `period`', function() {
-      expect(
-        getParams({
-          statsPeriod: '24h',
-          period: '2h',
-        })
-      ).toEqual({
-        statsPeriod: '24h',
-      });
-    });
-
-    it('only returns `statsPeriod` if absolute range is supplied as well', function() {
-      // NOTE: This is an arbitrary decision, change as needed
-      expect(getParams({start: 'start', end: 'end', period: '24h'})).toEqual({
-        statsPeriod: '24h',
-      });
-    });
-
-    it('does not change other parameters', function() {
-      expect(getParams({foo: 'bar', period: '24h'})).toEqual({
-        foo: 'bar',
-        statsPeriod: '24h',
-      });
-    });
-
-    it('filters out only null and undefined, values', function() {
-      expect(
-        getParams({
-          foo: null,
-          bar: 0,
-          start: null,
-          period: '24h',
-        })
-      ).toEqual({
-        bar: 0,
-        statsPeriod: '24h',
-      });
-    });
-  });
-});
