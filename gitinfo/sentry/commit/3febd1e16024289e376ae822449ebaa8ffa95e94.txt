commit 3febd1e16024289e376ae822449ebaa8ffa95e94
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Mar 18 10:20:36 2014 -0700

    Handle the case where users don't have password

diff --git a/setup.py b/setup.py
index 9741441ca8..43271b8aa2 100755
--- a/setup.py
+++ b/setup.py
@@ -76,7 +76,7 @@ install_requires = [
     'django-social-auth>=0.7.28,<0.8.0',
     'django-static-compiler>=0.3.0,<0.4.0',
     'django-statsd-mozilla>=0.3.8.0,<0.3.9.0',
-    'django-sudo>=0.0.1,<1.0.0',
+    'django-sudo>=0.0.2,<1.0.0',
     'django-templatetag-sugar>=0.1.0,<0.2.0',
     'djangorestframework>=2.3.8,<2.4.0',
     'email-reply-parser>=0.2.0,<0.3.0',
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 7753e8dcf1..ee3390fb5b 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -116,7 +116,7 @@ MIDDLEWARE_CLASSES = (
     'django.contrib.sessions.middleware.SessionMiddleware',
     'django.middleware.csrf.CsrfViewMiddleware',
     'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django_sudo.middleware.SudoMiddleware',
+    'sentry.middleware.sudo.SudoMiddleware',
     'sentry.middleware.locale.SentryLocaleMiddleware',
     'sentry.middleware.social_auth.SentrySocialAuthExceptionMiddleware',
     'django.middleware.locale.LocaleMiddleware',
diff --git a/src/sentry/middleware/sudo.py b/src/sentry/middleware/sudo.py
new file mode 100644
index 0000000000..f6e0504dec
--- /dev/null
+++ b/src/sentry/middleware/sudo.py
@@ -0,0 +1,19 @@
+"""
+sentry.middleware.sudo
+~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+from django_sudo.middleware import SudoMiddleware as BaseSudoMiddleware
+
+from sentry.constants import EMPTY_PASSWORD_VALUES
+
+
+class SudoMiddleware(BaseSudoMiddleware):
+    def has_sudo_privileges(self, request):
+        # Users without a password are assumed to always have sudo powers
+        if request.user.password in EMPTY_PASSWORD_VALUES:
+            return True
+
+        return super(SudoMiddleware, self).has_sudo_privileges(request)
