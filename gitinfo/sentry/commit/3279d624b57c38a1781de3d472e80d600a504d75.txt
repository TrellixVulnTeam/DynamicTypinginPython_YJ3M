commit 3279d624b57c38a1781de3d472e80d600a504d75
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Aug 30 14:58:28 2018 -0700

    fix(ui): Fix Project Breadcrumbs in Settings (#9486)
    
    This specifically fixes JAVASCRIPT-46Y where a user is on Client Key Details page and switches to a new project using breadcrumb. Previously would keep the key id in route, now will switch to index view.

diff --git a/src/sentry/static/sentry/app/utils/recreateRoute.jsx b/src/sentry/static/sentry/app/utils/recreateRoute.jsx
index f760bdcfeb..89a0b5121b 100644
--- a/src/sentry/static/sentry/app/utils/recreateRoute.jsx
+++ b/src/sentry/static/sentry/app/utils/recreateRoute.jsx
@@ -19,7 +19,9 @@ export default function recreateRoute(to, {routes, params, location, stepBack})
 
   let baseRoute = paths.slice(lastRootIndex, routeIndex);
 
-  if (typeof stepBack !== 'undefined') {
+  if (stepBack >= 0) {
+    throw new Error('`stepBack` needs to be < 0');
+  } else if (typeof stepBack !== 'undefined') {
     baseRoute = baseRoute.slice(0, stepBack);
   }
 
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
index 90c3b3ae76..8a16f1c396 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
@@ -15,6 +15,8 @@ import withLatestContext from 'app/utils/withLatestContext';
 import withProjects from 'app/utils/withProjects';
 import space from 'app/styles/space';
 
+const ROUTE_PATH_EXCEPTIONS = new Set([':ruleId/', ':keyId/', ':hookId/', ':pluginId/']);
+
 class ProjectCrumb extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization,
@@ -24,13 +26,27 @@ class ProjectCrumb extends React.Component {
     route: PropTypes.object,
   };
 
+  handleSelect = item => {
+    let {routes, params} = this.props;
+
+    let lastRoute = routes[routes.length - 1];
+    // We have to make exceptions for routes like "Project Alerts Rule Edit" or "Client Key Details"
+    // Since these models are project specific, we need to traverse up a route when switching projects
+    let stepBack = ROUTE_PATH_EXCEPTIONS.has(lastRoute.path) ? -1 : undefined;
+    browserHistory.push(
+      recreateRoute('', {
+        routes,
+        params: {...params, projectId: item.value},
+        stepBack,
+      })
+    );
+  };
+
   render() {
     let {
       organization: latestOrganization,
       project: latestProject,
       projects,
-      params,
-      routes,
       route,
       ...props
     } = this.props;
@@ -60,19 +76,7 @@ class ProjectCrumb extends React.Component {
             )}
           </ProjectName>
         }
-        onSelect={item => {
-          let lastRoute = routes[routes.length - 1];
-          // We have to make an exception for "Project Alerts Rule Edit" route
-          // Since these models are project specific, we need to traverse up a route when switching projects
-          let stepBack = lastRoute.path === ':ruleId/' ? -1 : undefined;
-          browserHistory.push(
-            recreateRoute('', {
-              routes,
-              params: {...params, projectId: item.value},
-              stepBack,
-            })
-          );
-        }}
+        onSelect={this.handleSelect}
         items={projects.map(project => ({
           value: project.slug,
           label: (
diff --git a/tests/js/spec/utils/recreateRoute.spec.jsx b/tests/js/spec/utils/recreateRoute.spec.jsx
index fc91bfe086..83e886839f 100644
--- a/tests/js/spec/utils/recreateRoute.spec.jsx
+++ b/tests/js/spec/utils/recreateRoute.spec.jsx
@@ -50,6 +50,10 @@ describe('recreateRoute', function() {
     );
   });
 
+  it('stepBack needs to be less than 0', function() {
+    expect(() => recreateRoute('', {routes, location, params, stepBack: 0})).toThrow();
+  });
+
   it('switches to new org but keeps current route', function() {
     expect(recreateRoute(routes[4], {routes, location, params: {orgId: 'new-org'}})).toBe(
       '/settings/new-org/api-keys/'
