commit 03dfa975f56f8d5d0988cac8ee3f4250e8bfd60e
Author: Ben Vinegar <ben@benv.ca>
Date:   Fri Apr 29 18:21:54 2016 -0700

    Render query message body w/ keyword highlights, truncation

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/default.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/default.jsx
index ed197fe18d..ea7d3353a0 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/default.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/default.jsx
@@ -5,11 +5,33 @@ import _ from 'underscore';
 import Classifier from './classifier';
 import Duration from '../../../duration';
 
+import QueryCrumbBody from './query';
+
 const DefaultCrumbComponent = React.createClass({
   propTypes: {
     crumb: React.PropTypes.object.isRequired,
   },
 
+  renderMessage() {
+    let {crumb} = this.props;
+    let {message, type} = crumb;
+
+    return (
+      <pre>
+        {type === 'query' ?
+          <QueryCrumbBody data={crumb}/> :
+          <code>{message}</code>
+        }
+        {crumb.classifier && <Classifier value={crumb.classifier}/>}
+        {crumb.duration &&
+          <span className="timing">
+            [<Duration seconds={crumb.duration}/>]
+          </span>
+        }
+      </pre>
+    );
+  },
+
   render() {
     let crumb = this.props.crumb;
 
@@ -39,19 +61,7 @@ const DefaultCrumbComponent = React.createClass({
           <thead>
             <tr>
               <td className="key">{crumb.type}</td>
-              <td className="value">
-                {message &&
-                  <pre>
-                    <code>{message}</code>
-                    {crumb.classifier && <Classifier value={crumb.classifier}/>}
-                    {crumb.duration &&
-                      <span className="timing">
-                        [<Duration seconds={crumb.duration}/>]
-                      </span>
-                    }
-                  </pre>
-                }
-              </td>
+              <td className="value">{message && this.renderMessage()}</td>
             </tr>
           </thead>
           {crumb.data &&
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/query.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/query.jsx
index 05e10ea827..2356425f89 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/query.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/query.jsx
@@ -1,9 +1,5 @@
 import React from 'react';
 
-import Classifier from './classifier';
-import Duration from '../../../duration';
-
-
 function summarizeSqlQuery(sql) {
   // select
   let match;
@@ -47,8 +43,7 @@ function summarizeSqlQuery(sql) {
   return null;
 }
 
-
-const QueryCrumbComponent = React.createClass({
+const QueryCrumbBody = React.createClass({
   propTypes: {
     data: React.PropTypes.object.isRequired,
   },
@@ -73,7 +68,9 @@ const QueryCrumbComponent = React.createClass({
   },
 
   renderQuery() {
-    let {query, params} = this.props.data;
+    let {data} = this.props;
+    let query = data.message;
+    let params = [1];
 
     if (typeof query !== 'string') {
       return (
@@ -110,27 +107,9 @@ const QueryCrumbComponent = React.createClass({
     );
   },
 
-  renderTiming() {
-    let {duration} = this.props.data;
-    if (duration !== undefined && duration !== null) {
-      return (
-        <span className="timing">
-          [<Duration key="duration" seconds={duration} />]
-        </span>
-      );
-    }
-    return null;
-  },
-
   render() {
-    return (
-      <p>
-        {this.renderQuery()}
-        {this.renderTiming()}
-        <Classifier value={this.props.data.classifier} title="%s query" />
-      </p>
-    );
+    return this.renderQuery();
   }
 });
 
-export default QueryCrumbComponent;
+export default QueryCrumbBody;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
index b45bc3b669..eb957ecbc3 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
@@ -1,27 +1,9 @@
 import React from 'react';
-import moment from 'moment';
 
 import GroupEventDataSection from '../eventDataSection';
 import PropTypes from '../../../proptypes';
 
 import DefaultCrumb from './breadcrumbComponents/default';
-import MessageCrumbComponent from './breadcrumbComponents/message';
-import RpcCrumbComponent from './breadcrumbComponents/rpc';
-import QueryCrumbComponent from './breadcrumbComponents/query';
-import HttpRequestCrumbComponent from './breadcrumbComponents/httpRequest';
-import UiEventComponent from './breadcrumbComponents/uiEvent';
-import NavigationCrumbComponent from './breadcrumbComponents/navigation';
-import ErrorCrumbComponent from './breadcrumbComponents/error';
-
-const CRUMB_COMPONENTS = {
-  message: MessageCrumbComponent,
-  rpc: RpcCrumbComponent,
-  query: QueryCrumbComponent,
-  http_request: HttpRequestCrumbComponent,
-  ui_event: UiEventComponent,
-  navigation: NavigationCrumbComponent,
-  error: ErrorCrumbComponent
-};
 
 function Collapsed(props) {
   return (
@@ -72,26 +54,7 @@ const BreadcrumbsInterface = React.createClass({
     // reverse array to get consistent idx between collapsed/expanded state
     // (indexes begin and increment from last breadcrumb)
     return crumbs.reverse().map((item, idx) => {
-      // let Component = CRUMB_COMPONENTS[item.type];
-      let el;
-      // if (Component) {
-        // el = <Component data={item.data} />;
-        el = <DefaultCrumb crumb={item} />;
-      // }
-      // else {
-      //   el = <div className="errors">Missing crumb "{item.type}"</div>;
-      // }
       return <DefaultCrumb key={idx} crumb={item} />;
-
-      // (
-      //   <li key={idx} className={'crumb crumb-' + item.type.replace(/_/g, '-')}>
-      //     <span className="icon-container">
-      //       <span className="icon"/>
-      //     </span>
-      //     <span className="dt">{moment(item.timestamp).format('HH:mm:ss')}</span>
-      //     {el}
-      //   </li>
-      // );
     }).reverse(); // un-reverse rendered result
   },
 
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index c7898d53dc..e9be99daf0 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -1651,72 +1651,26 @@ ul.crumbs {
       }
     }
 
-    &.crumb-query {
-      .icon-container {
-        border-color: @green-dark;
+    .query {
+      display: inline;
 
-        .icon {
-          top: 6px;
-          left: 6px;
-          color: @green-dark;
-          &:before {content: "\e601";}
-          font-size: 12px;
-        }
+      .keyword {
+        font-weight: 600;
       }
 
-      p {
-        line-height: 1.2;
-        padding-top: 4px;
+      span {
+        display: inline;
       }
-
-      code {
-        padding-left: 0;
-        white-space: pre-wrap;
-        word-wrap: break-word;
-        background: transparent;
-        font-size: 13px;
-
-        &.expand {
-          cursor: pointer;
-        }
-
-        &.query-summary {
-          &:hover span.elipsis {
-            background: @gray;
-            color: white;
-          }
-        }
-
-        span {
-          display: inline;
-        }
-
-        span.elipsis {
-          border-radius: 2px;
-          padding: 2px 7px;
-          margin: -2px -5px -2px 10px;
-        }
-
-        span.keyword {
-          font-weight: bold;
-          color: @gray-darker;
-        }
-
-        span.param {
-          color: @gray-darker;
-          font-weight: bold;
-          padding: 2px 5px;
-          margin: -2px -3px;
-          background: @gray-lightest;
-          border-radius: 2px;
-        }
+      span.param {
+        color: @gray-darker;
+        font-weight: bold;
+        padding: 2px 5px;
+        margin: -2px -3px;
+        background: @gray-lightest;
+        border-radius: 2px;
       }
     }
 
-    &.crumb-rpc {
-
-    }
-
     &.crumb-location {
       .icon-container {
         border-color: @blue-dark;
