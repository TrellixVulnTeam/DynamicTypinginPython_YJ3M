commit 801dd6692e61fe490466e56ad1123346ba3921b5
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue May 7 15:02:17 2019 -0700

    ref(mixins): Remove `OrganizationState` from `OrganizationTeams` (#13091)

diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx
index 065e72da2c..a6aea272b1 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx
@@ -1,14 +1,16 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
+import createReactClass from 'create-react-class';
 
 import {loadStats} from 'app/actionCreators/projects';
 import {sortArray} from 'app/utils';
-import withApi from 'app/utils/withApi';
-import OrganizationState from 'app/mixins/organizationState';
 import ProjectsStore from 'app/stores/projectsStore';
+import SentryTypes from 'app/sentryTypes';
 import TeamStore from 'app/stores/teamStore';
+import withApi from 'app/utils/withApi';
+import withOrganization from 'app/utils/withOrganization';
+
 import OrganizationTeams from './organizationTeams';
 
 const OrganizationTeamsContainer = createReactClass({
@@ -16,11 +18,11 @@ const OrganizationTeamsContainer = createReactClass({
 
   propTypes: {
     api: PropTypes.object,
+    organization: SentryTypes.Organization,
     routes: PropTypes.arrayOf(PropTypes.object),
   },
 
   mixins: [
-    OrganizationState,
     Reflux.listenTo(TeamStore, 'onTeamListChange'),
     Reflux.listenTo(ProjectsStore, 'onProjectListChange'),
   ],
@@ -73,23 +75,21 @@ const OrganizationTeamsContainer = createReactClass({
   },
 
   render() {
-    if (!this.context.organization) {
+    const {organization} = this.props;
+
+    if (!organization) {
       return null;
     }
 
-    const access = this.getAccess();
-    const features = this.getFeatures();
-    const org = this.getOrganization();
-
     const allTeams = this.state.teamList;
     const activeTeams = this.state.teamList.filter(team => team.isMember);
 
     return (
       <OrganizationTeams
         {...this.props}
-        access={access}
-        features={features}
-        organization={org}
+        access={new Set(organization.access)}
+        features={new Set(organization.features)}
+        organization={organization}
         projectList={this.state.projectList}
         allTeams={allTeams}
         activeTeams={activeTeams}
@@ -100,4 +100,4 @@ const OrganizationTeamsContainer = createReactClass({
 
 export {OrganizationTeamsContainer};
 
-export default withApi(OrganizationTeamsContainer);
+export default withApi(withOrganization(OrganizationTeamsContainer));
