commit 215f98facd4d46c1f091739960fcb98ee28319e9
Author: Dena Mwangi <dena@getsentry.com>
Date:   Thu Nov 8 15:15:13 2018 -0800

    feat: Updates to releases progress bar (#10408)

diff --git a/src/sentry/static/sentry/app/views/projectReleases/progressBar.jsx b/src/sentry/static/sentry/app/views/projectReleases/progressBar.jsx
new file mode 100644
index 0000000000..9e96798c95
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectReleases/progressBar.jsx
@@ -0,0 +1,41 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import styled from 'react-emotion';
+
+class ProgressBar extends React.Component {
+  static propTypes = {
+    width: PropTypes.number,
+  };
+
+  render() {
+    return (
+      <StyledBar>
+        <StyledSlider width={this.props.width} />
+      </StyledBar>
+    );
+  }
+}
+
+const StyledBar = styled.div`
+  background: #767676;
+  width: 100%;
+  height: 15px;
+  float: right;
+  margin-right: 0px;
+  margin-bottom: 10px;
+  border-radius: 20px;
+  position: relative;
+`;
+
+const StyledSlider = styled.div`
+  height: 100%;
+  width: ${props => (props.width ? props.width : 50)}%;
+  background: #7ccca5;
+  padding-right: 0;
+  border-radius: inherit;
+  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.08);
+  position: absolute;
+  bottom: 0;
+  left: 0;
+`;
+export default ProgressBar;
diff --git a/src/sentry/static/sentry/app/views/projectReleases/releaseLanding.jsx b/src/sentry/static/sentry/app/views/projectReleases/releaseLanding.jsx
index fb7262c197..20c9a2a41f 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/releaseLanding.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/releaseLanding.jsx
@@ -71,6 +71,14 @@ const ReleaseLanding = withApi(
       };
     }
 
+    componentDidMount() {
+      let {organization, project} = this.context;
+      analytics('releases.landing_card_viewed', {
+        org_id: parseInt(organization.id, 10),
+        project_id: parseInt(project.id, 10),
+      });
+    }
+
     handleClick = () => {
       let {stepId} = this.state;
       let {organization, project} = this.context;
@@ -80,6 +88,7 @@ const ReleaseLanding = withApi(
       this.setState(state => ({
         stepId: state.stepId + 1,
       }));
+
       analytics('releases.landing_card_clicked', {
         org_id: parseInt(organization.id, 10),
         project_id: parseInt(project.id, 10),
diff --git a/src/sentry/static/sentry/app/views/projectReleases/releaseProgress.jsx b/src/sentry/static/sentry/app/views/projectReleases/releaseProgress.jsx
index f349e56d65..a1aa51e892 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/releaseProgress.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/releaseProgress.jsx
@@ -3,16 +3,34 @@ import React from 'react';
 import {t} from 'app/locale';
 import styled from 'react-emotion';
 
+import {analytics} from 'app/utils/analytics';
 import AsyncComponent from 'app/components/asyncComponent';
 import Button from 'app/components/button';
 import {PanelItem} from 'app/components/panels';
 import {promptsUpdate} from 'app/actionCreators/prompts';
+import ProgressBar from 'app/views/projectReleases/progressBar';
 
 const STEPS = {
-  tag: t('Tag an error'),
-  repo: t('Link to a repo'),
-  commit: t('Associate commits'),
-  deploy: t('Tell sentry about a deploy'),
+  tag: {
+    desc: t('Tag an error'),
+    url: 'tag-errors',
+    msg: 'knowing which errors were introduced in a release, ',
+  },
+  repo: {
+    desc: t('Link to a repo'),
+    url: 'link-repository',
+    msg: 'determining which commit caused an error, ',
+  },
+  commit: {
+    desc: t('Associate commits'),
+    url: 'b-associate-commits-with-a-release',
+    msg: 'determining which commit caused an error, ',
+  },
+  deploy: {
+    desc: t('Tell sentry about a deploy'),
+    url: 'create-deploy',
+    msg: 'receiving notifications when your code gets deployed, ',
+  },
 };
 
 class ReleaseProgress extends AsyncComponent {
@@ -45,15 +63,40 @@ class ReleaseProgress extends AsyncComponent {
     }
   }
 
+  buildMessage(remainingSteps) {
+    let keys = remainingSteps.map(step => step.step);
+    let message = "You're missing out on ";
+
+    if (keys.includes('tag')) {
+      message += STEPS.tag.msg;
+    }
+    if (keys.includes('repo') || keys.includes('commit')) {
+      message += STEPS.repo.msg;
+    }
+    if (keys.includes('deploy')) {
+      message += STEPS.deploy.msg;
+    }
+
+    message += 'and more!';
+
+    this.setState({message});
+  }
+
   getRemainingSteps(setupStatus) {
+    let {organization, project} = this.context;
     let remainingSteps;
     if (setupStatus) {
-      remainingSteps = setupStatus
-        .filter(step => step.complete === false)
-        .map(displayStep => STEPS[displayStep.step]);
-
+      remainingSteps = setupStatus.filter(step => step.complete === false);
+      this.buildMessage(remainingSteps);
       this.setState({
-        remainingSteps,
+        remainingSteps: Object.keys(remainingSteps).length,
+        nextStep: remainingSteps[0] && STEPS[remainingSteps[0].step],
+      });
+
+      this.recordAnalytics('viewed', {
+        org_id: parseInt(organization.id, 10),
+        project_id: parseInt(project.id, 10),
+        steps: setupStatus,
       });
     }
   }
@@ -84,32 +127,62 @@ class ReleaseProgress extends AsyncComponent {
       status: action,
     };
     promptsUpdate(this.api, params).then(this.setState({showBar: false}));
+    this.recordAnalytics('closed', {
+      org_id: parseInt(organization.id, 10),
+      project_id: parseInt(project.id, 10),
+      action,
+    });
+  }
+
+  recordAnalytics(action, data) {
+    if (action === 'next') {
+      analytics('releases.progress_bar_clicked_next', data);
+    } else if (action === 'closed') {
+      analytics('releases.progress_bar_closed', data);
+    } else if (action === 'viewed') {
+      analytics('releases.progress_bar_viewed', data);
+    }
+  }
+
+  getWidth() {
+    let {remainingSteps} = this.state;
+    let width =
+      100 * (Object.keys(STEPS).length - remainingSteps) / Object.keys(STEPS).length;
+
+    return width === 0 ? 25 : width;
   }
 
   renderBody() {
-    let {remainingSteps, showBar} = this.state;
-    if (!remainingSteps || remainingSteps.length === 0 || !showBar) {
+    let {remainingSteps, showBar, nextStep, message} = this.state;
+
+    if (!remainingSteps || remainingSteps === 0 || !showBar) {
       return null;
     }
+
     return (
       <PanelItem>
-        <div className="col-sm-6">
+        <div className="col-sm-8">
           <div>
-            <h4 className="text-light"> {t("Releases aren't 100% set up")}</h4>
-            <StyledBar>
-              <StyledSlider />
-            </StyledBar>
-            <a href="https://docs.sentry.io/learn/releases/">{t('Next steps:')}</a>
-
-            <ul>
-              {this.state.remainingSteps.map((step, i) => {
-                return <li key={i}>{step}</li>;
-              })}
-            </ul>
+            <StyledDiv className="row">
+              <span className="pull-right">
+                {t('Next step: ')}
+                <a
+                  href={`https://docs.sentry.io/learn/releases/#${nextStep.url}`}
+                  onClick={() => this.recordAnalytics('next', {cta: nextStep.desc})}
+                >
+                  {t(`${nextStep.desc}`)}
+                </a>
+              </span>
+              <h4 className="text-light"> {t("Releases aren't 100% set up")}</h4>
+            </StyledDiv>
+            <div className="row">
+              <ProgressBar width={this.getWidth()} />
+              <p>{t(`${message}`)}</p>
+            </div>
           </div>
         </div>
 
-        <div className="col-sm-6">
+        <div className="col-sm-4">
           <div className="pull-right">
             <StyledButton
               className="text-light"
@@ -138,26 +211,8 @@ const StyledButton = styled(Button)`
   margin: 5px;
 `;
 
-const StyledBar = styled.div`
-  background: #767676;
-  width: 100%;
-  height: 15px;
-  float: right;
-  margin-right: 0px;
+const StyledDiv = styled('div')`
   margin-bottom: 10px;
-  border-radius: 20px;
-  position: relative;
 `;
 
-const StyledSlider = styled.div`
-  height: 100%;
-  width: 50%;
-  background: #7ccca5;
-  padding-right: 0;
-  border-radius: inherit;
-  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.08);
-  position: absolute;
-  bottom: 0;
-  left: 0;
-`;
 export default ReleaseProgress;
diff --git a/tests/js/spec/views/projectReleasesProgress.spec.jsx b/tests/js/spec/views/projectReleasesProgress.spec.jsx
index 3b41866804..883135ee1e 100644
--- a/tests/js/spec/views/projectReleasesProgress.spec.jsx
+++ b/tests/js/spec/views/projectReleasesProgress.spec.jsx
@@ -45,12 +45,12 @@ describe('ReleaseProgress', function() {
       <ReleaseProgress orgId={organization.id} projectId={project.id} />,
       routerContext
     );
-    expect(wrapper.state('remainingSteps')).toHaveLength(0);
+    expect(wrapper.state('remainingSteps')).toBe(0);
     expect(wrapper.find('ReleaseProgress')).toHaveLength(1);
     expect(wrapper.find('PanelItem')).toHaveLength(0);
   });
 
-  it('renders with three steps', async function() {
+  it('renders with next step suggestion', async function() {
     Client.addMockResponse({
       url: '/projects/org-slug/project-slug/releases/completion/',
       body: [
@@ -64,8 +64,14 @@ describe('ReleaseProgress', function() {
       <ReleaseProgress orgId={organization.id} projectId={project.id} />,
       routerContext
     );
+
+    expect(
+      wrapper
+        .find('span')
+        .first()
+        .text()
+    ).toBe('Next step: Link to a repo');
     expect(getPromptsMock).toHaveBeenCalled();
-    expect(wrapper.find('li')).toHaveLength(3);
   });
 
   it('hides when snoozed', async function() {
@@ -82,7 +88,12 @@ describe('ReleaseProgress', function() {
       <ReleaseProgress orgId={organization.id} projectId={project.id} />,
       routerContext
     );
-    expect(wrapper.find('li')).toHaveLength(3);
+    expect(
+      wrapper
+        .find('span')
+        .first()
+        .text()
+    ).toBe('Next step: Link to a repo');
     expect(wrapper.find('PanelItem')).toHaveLength(1);
 
     //Snooze the bar
