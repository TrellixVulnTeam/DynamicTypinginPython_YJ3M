commit 0afb1481332c3ff7242f050ea88de027d23c7465
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Apr 26 21:41:43 2016 +0200

    Improved query rendering and strip less data

diff --git a/src/sentry/interfaces/breadcrumbs.py b/src/sentry/interfaces/breadcrumbs.py
index 87f3dcd777..0dbbe86c5e 100644
--- a/src/sentry/interfaces/breadcrumbs.py
+++ b/src/sentry/interfaces/breadcrumbs.py
@@ -103,13 +103,14 @@ def validate_http_request(payload):
 @typevalidator('query')
 def validate_query(payload):
     rv = {}
-    for key in 'query', 'params', 'duration', 'classifier':
+    for key in 'params', 'duration', 'classifier':
         value = payload.get(key)
         if value is not None:
             rv[key] = trim(value, 1024)
-    if 'query' not in rv:
+    if 'query' not in payload:
         raise InterfaceValidationError("Query not provided for 'query' "
                                        "breadcrumb.")
+    rv['query'] = trim(payload['query'], 4096)
     return rv
 
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/query.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/query.jsx
index 391bb49bd1..aa029cba59 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/query.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/query.jsx
@@ -5,22 +5,55 @@ import Duration from '../../../duration';
 
 
 function summarizeSqlQuery(sql) {
-  let match = sql.match(/^\s*select\b(.*?)\bfrom\s+["`]?([^\s,."`]+)/im);
+  // select
+  let match;
+ 
+  match = sql.match(/^\s*(select\s+(?:\s+all\b|distinct\b)?)(.*?)\bfrom\s+["`]?([^\s,."`]+)/im);
   if (match) {
-    let selectors = match[1].split(/,/g);
+    let selectors = match[2].split(/,/g);
     let selector = selectors[0].split(/\bas\b/i)[0].trim();
     if (selectors.length > 1) {
       selector += ', …';
     }
     return (
       <span className="sql-summary">
-        <span className="keyword statement">SELECT</span>{' '}
+        <span className="keyword statement">{match[1].toUpperCase()}</span>{' '}
         <span className="literal">{selector}</span>{' '}
         <span className="keyword">FROM</span>{' '}
-        <span className="literal">{match[2].trim()}</span>
+        <span className="literal">{match[3].trim()}</span>
       </span>
     );
   }
+
+  match = sql.match(/^\s*insert\s+into\s+["`]?([^\s,."`]+)/im);
+  if (match) {
+    return (
+      <span className="sql-summary">
+        <span className="keyword statement">INSERT INTO</span>{' '}
+        <span className="literal">{match[1]}</span>
+      </span>
+    );
+  }
+  
+  match = sql.match(/^\s*update\s+["`]?([^\s,."`]+)/im);
+  if (match) {
+    return (
+      <span className="sql-summary">
+        <span className="keyword statement">UPDATE</span>{' '}
+        <span className="literal">{match[1]}</span>
+      </span>
+    );
+  }
+ 
+  match = sql.match(/^\s+(\S+)/);
+  if (match) {
+    return (
+      <span className="sql-summary">
+        <span className="keyword statement">{match[1]}</span>
+      </span>
+    );
+  }
+
   return null;
 }
 
@@ -33,13 +66,13 @@ const QueryCrumbComponent = React.createClass({
   getInitialState() {
     return {
       showFullQuery: false
-    }
+    };
   },
 
   toggleFullQuery() {
     this.setState({
       showFullQuery: !this.state.showFullQuery
-    })
+    });
   },
 
   renderQuery() {
@@ -65,31 +98,39 @@ const QueryCrumbComponent = React.createClass({
       ;
     });
 
-    let timing = null;
-    if (data.duration !== undefined && data.duration !== null) {
-      timing = <Duration key="duration" seconds={data.duration} />;
-    }
-
     return (
       <span className="query" onClick={querySummary ? this.toggleFullQuery : null}>
         {querySummary && !this.state.showFullQuery ?
-          <code className="query-summary">
+          <code className="query-summary expand">
             {querySummary}
             <span className="elipsis">…</span>
           </code> : null
         }
-        {this.state.showFullQuery ?
-          <code className="full-query">{queryElements}</code> : null}
+        {!querySummary || this.state.showFullQuery ?
+          <code className={'full-query' + (querySummary ? ' expand' : '')
+            }>{queryElements}</code> : null}
       </span>
     );
   },
 
+  renderTiming() {
+    let {duration} = this.props.data;
+    if (duration !== undefined && duration !== null) {
+      return (
+        <span className="timing">
+          [<Duration key="duration" seconds={duration} />]
+        </span>
+      );
+    }
+    return null;
+  },
+
   render() {
     return (
       <p>
         <strong className="preamble">Query:</strong>
         {this.renderQuery()}
-        {timing}
+        {this.renderTiming()}
         <Classifier value={this.props.data.classifier} title="%s query" />
       </p>
     );
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index a68e821ee1..e58854c335 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -1660,12 +1660,20 @@ ul.crumbs {
         padding-top: 4px;
       }
 
+      span.timing {
+        margin-left: 10px;
+        font-size: 90%;
+      }
+
       code {
         white-space: pre-wrap;
         word-wrap: break-word;
         background: transparent;
         font-size: 13px;
-        cursor: pointer;
+
+        &.expand {
+          cursor: pointer;
+        }
 
         &.query-summary {
           &:hover span.elipsis {
