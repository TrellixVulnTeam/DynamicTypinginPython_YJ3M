commit e6145e6fa7f5fe50827a7713d18b4379e7383b24
Author: NisanthanNanthakumar <nisanthan.nanthakumar@sentry.io>
Date:   Wed May 27 11:12:11 2020 -0700

    feat(Commits): Remove APM logging and deduplicate results (#18580)
    
    Objective
    A bug was reported that there are duplicate suggested commits/assignees. In this PR we are going to remove the Sentry APM logging and just deduplicate the results at the end of the request.

diff --git a/src/sentry/utils/committers.py b/src/sentry/utils/committers.py
index f98550195f..3a1f37e767 100644
--- a/src/sentry/utils/committers.py
+++ b/src/sentry/utils/committers.py
@@ -3,8 +3,6 @@ from __future__ import absolute_import
 import operator
 import six
 
-import sentry_sdk
-
 from sentry.api.serializers import serialize
 from sentry.models import Release, ReleaseCommit, Commit, CommitFileChange, Group
 from sentry.api.serializers.models.commit import CommitSerializer, get_users_for_commits
@@ -230,12 +228,6 @@ def get_event_file_committers(project, event, frame_limit=25):
         {match for match in commit_path_matches for match in commit_path_matches[match]}
     )
 
-    with sentry_sdk.start_span(op="get_event_file_committers") as span:
-        span.set_data("project_id", project.id)
-        span.set_data("group_id", event.group_id)
-        span.set_data("commit_path_matches", commit_path_matches)
-        span.set_data("relevant_commits", relevant_commits)
-
     return _get_committers(annotated_frames, relevant_commits)
 
 
@@ -254,7 +246,9 @@ def get_serialized_event_file_committers(project, event, frame_limit=25):
 
     for committer in committers:
         commit_ids = [commit.id for (commit, _) in committer["commits"]]
-        committer["commits"] = [serialized_commits_by_id[commit_id] for commit_id in commit_ids]
+        commits_result = [serialized_commits_by_id[commit_id] for commit_id in commit_ids]
+        # Deduplicate commits
+        committer["commits"] = dedupe_commits(commits_result)
 
     metrics.incr(
         "feature.owners.has-committers",
@@ -262,3 +256,12 @@ def get_serialized_event_file_committers(project, event, frame_limit=25):
         skip_internal=False,
     )
     return committers
+
+
+def dedupe_commits(commits):
+    result = {}
+    for obj in commits:
+        if obj["id"] not in result:
+            result[obj["id"]] = obj
+
+    return result.values()
diff --git a/tests/sentry/utils/test_committers.py b/tests/sentry/utils/test_committers.py
index e5eea309a3..6de89e498d 100644
--- a/tests/sentry/utils/test_committers.py
+++ b/tests/sentry/utils/test_committers.py
@@ -18,6 +18,7 @@ from sentry.utils.committers import (
     get_previous_releases,
     score_path_match_length,
     tokenize_path,
+    dedupe_commits,
 )
 
 # TODO(lb): Tests are still needed for _get_committers and _get_event_file_commiters
@@ -445,3 +446,21 @@ class GetEventFileCommitters(CommitTestCase):
 
         with self.assertRaises(Commit.DoesNotExist):
             get_serialized_event_file_committers(self.project, event)
+
+
+class DedupeCommits(CommitTestCase):
+    def setUp(self):
+        super(DedupeCommits, self).setUp()
+
+    def test_dedupe_with_same_commit(self):
+        commit = self.create_commit().__dict__
+        commits = [commit, commit, commit]
+        result = dedupe_commits(commits)
+        assert len(result) == 1
+
+    def test_dedupe_with_different_commit(self):
+        same_commit = self.create_commit().__dict__
+        diff_commit = self.create_commit().__dict__
+        commits = [same_commit, diff_commit, same_commit]
+        result = dedupe_commits(commits)
+        assert len(result) == 2
