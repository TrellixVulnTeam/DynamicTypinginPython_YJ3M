commit 4a5315111d8d524601b9b33ac2e7d66204ca5cda
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 22 21:25:44 2013 -0700

    Correct order of caused by in chained exceptions

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index d01b821b57..e846ea080e 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -388,8 +388,8 @@ class Frame(object):
 class Stacktrace(Interface):
     """
     A stacktrace contains a list of frames, each with various bits (most optional)
-    describing the context of that frame. Frames should be sorted with the most recent
-    caller being the last in the list.
+    describing the context of that frame. Frames should be sorted from oldest
+    to newest.
 
     The stacktrace contains one element, ``frames``, which is a list of hashes. Each
     hash must contain **at least** the ``filename`` attribute. The rest of the values
@@ -725,6 +725,9 @@ class Exception(Interface):
     >>>     }
     >>> }]
 
+    Values should be sent oldest to newest, this includes both the stacktrace
+    and the exception itself.
+
     .. note:: This interface can be passed as the 'exception' key in addition
               to the full interface path.
     """
@@ -791,6 +794,10 @@ class Exception(Interface):
                 context['stacktrace'] = {}
             context['stack_id'] = 'exception_%d' % (num,)
             exceptions.append(context)
+
+        if newest_first:
+            exceptions.reverse()
+
         return {
             'newest_first': newest_first,
             'system_frames': any(e['stacktrace'].get('system_frames') for e in exceptions),
diff --git a/src/sentry/templates/sentry/partial/interfaces/chained_exception.html b/src/sentry/templates/sentry/partial/interfaces/chained_exception.html
index d656dd4755..5d8e919546 100644
--- a/src/sentry/templates/sentry/partial/interfaces/chained_exception.html
+++ b/src/sentry/templates/sentry/partial/interfaces/chained_exception.html
@@ -23,8 +23,9 @@
     <div class="module-content">
         {% for exception in exceptions %}
             <div class="traceback{% if not forloop.first %} subtraceback{% endif %}">
-                {% if not forloop.first %}
+                {% if not forloop.first and not newest_first %}
                     <h3>Caused by <span title="{{ exception.fullname }}">{{ exception.exception_type }}</span></h3>
+                {% elif not forloop.last and newest_first %}
                 {% else %}
                     <h3><span title="{{ exception.fullname }}">{{ exception.exception_type }}</span></h3>
                 {% endif %}
