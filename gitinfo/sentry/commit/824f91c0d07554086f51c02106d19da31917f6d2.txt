commit 824f91c0d07554086f51c02106d19da31917f6d2
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Sep 14 15:01:41 2015 -0700

    Improve deletion endpoints to use API and log

diff --git a/src/sentry/api/endpoints/organization_details.py b/src/sentry/api/endpoints/organization_details.py
index ec9c5490e6..1c3ef86049 100644
--- a/src/sentry/api/endpoints/organization_details.py
+++ b/src/sentry/api/endpoints/organization_details.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+import logging
+
 from rest_framework import serializers, status
 from rest_framework.response import Response
 
@@ -139,6 +141,10 @@ class OrganizationDetailsEndpoint(OrganizationEndpoint):
         if organization.is_default:
             return Response({'detail': ERR_DEFAULT_ORG}, status=400)
 
+        logging.getLogger('sentry.deletions').info(
+            'Organization %s (id=%s) removal requested by user (id=%s)',
+            organization.slug, organization.id, request.user.id)
+
         updated = Organization.objects.filter(
             id=organization.id,
             status=OrganizationStatus.VISIBLE,
diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index f562d42779..56dd3cf224 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+import logging
+
 from rest_framework import serializers, status
 from rest_framework.response import Response
 
@@ -170,6 +172,10 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
             return Response('{"error": "Cannot remove projects internally used by Sentry."}',
                             status=status.HTTP_403_FORBIDDEN)
 
+        logging.getLogger('sentry.deletions').info(
+            'Project %s/%s (id=%s) removal requested by user (id=%s)',
+            project.organization.slug, project.slug, project.id, request.user.id)
+
         updated = Project.objects.filter(
             id=project.id,
             status=ProjectStatus.VISIBLE,
diff --git a/src/sentry/api/endpoints/team_details.py b/src/sentry/api/endpoints/team_details.py
index f586cdcb7a..53ba604b8e 100644
--- a/src/sentry/api/endpoints/team_details.py
+++ b/src/sentry/api/endpoints/team_details.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+import logging
+
 from rest_framework import serializers, status
 from rest_framework.response import Response
 
@@ -113,6 +115,10 @@ class TeamDetailsEndpoint(TeamEndpoint):
         immediate.  However once deletion has begun the state of a project
         changes and will be hidden from most public views.
         """
+        logging.getLogger('sentry.deletions').info(
+            'Team %s/%s (id=%s) removal requested by user (id=%s)',
+            team.organization.slug, team.slug, team.id, request.user.id)
+
         updated = Team.objects.filter(
             id=team.id,
             status=TeamStatus.VISIBLE,
diff --git a/src/sentry/web/frontend/remove_account.py b/src/sentry/web/frontend/remove_account.py
index 9ef750701b..7a2c43da0b 100644
--- a/src/sentry/web/frontend/remove_account.py
+++ b/src/sentry/web/frontend/remove_account.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+import logging
+
 from django import forms
 from django.contrib.auth import logout
 
@@ -48,6 +50,10 @@ class RemoveAccountView(BaseView):
                 if result['single_owner']:
                     orgs_to_remove.add(result['organization'].slug)
 
+            logging.getLogger('sentry.deletions').info(
+                'User (id=%s) removal requested by self',
+                request.user.id)
+
             for org_slug in orgs_to_remove:
                 client.delete('/organizations/{}/'.format(org_slug),
                               request.user, is_sudo=True)
diff --git a/src/sentry/web/frontend/remove_project.py b/src/sentry/web/frontend/remove_project.py
index 30cabaad8a..985d0a3a41 100644
--- a/src/sentry/web/frontend/remove_project.py
+++ b/src/sentry/web/frontend/remove_project.py
@@ -6,12 +6,9 @@ from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _
 
-from sentry.models import (
-    AuditLogEntry, AuditLogEntryEvent, Project, ProjectStatus,
-    OrganizationMemberType
-)
+from sentry.api import client
+from sentry.models import OrganizationMemberType
 from sentry.permissions import can_remove_project
-from sentry.tasks.deletion import delete_project
 from sentry.web.frontend.base import ProjectView
 
 
@@ -47,21 +44,8 @@ class RemoveProjectView(ProjectView):
         form = self.get_form(request)
 
         if form.is_valid():
-            updated = Project.objects.filter(
-                id=project.id,
-                status=ProjectStatus.VISIBLE,
-            ).update(status=ProjectStatus.PENDING_DELETION)
-            if updated:
-                delete_project.delay(object_id=project.id)
-
-                AuditLogEntry.objects.create(
-                    organization=organization,
-                    actor=request.user,
-                    ip_address=request.META['REMOTE_ADDR'],
-                    target_object=project.id,
-                    event=AuditLogEntryEvent.PROJECT_REMOVE,
-                    data=project.get_audit_log_data(),
-                )
+            client.delete('/projects/{}/{}/'.format(organization.slug, project.slug),
+                          request.user, is_sudo=True)
 
             messages.add_message(
                 request, messages.SUCCESS,
diff --git a/src/sentry/web/frontend/remove_team.py b/src/sentry/web/frontend/remove_team.py
index b262e54033..298f0ab673 100644
--- a/src/sentry/web/frontend/remove_team.py
+++ b/src/sentry/web/frontend/remove_team.py
@@ -6,10 +6,8 @@ from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _
 
-from sentry.models import (
-    AuditLogEntry, AuditLogEntryEvent, OrganizationMemberType, Team, TeamStatus
-)
-from sentry.tasks.deletion import delete_team
+from sentry.api import client
+from sentry.models import OrganizationMemberType
 from sentry.web.frontend.base import TeamView
 
 
@@ -30,21 +28,8 @@ class RemoveTeamView(TeamView):
         form = self.get_form(request)
 
         if form.is_valid():
-            updated = Team.objects.filter(
-                id=team.id,
-                status=TeamStatus.VISIBLE,
-            ).update(status=TeamStatus.PENDING_DELETION)
-            if updated:
-                delete_team.delay(object_id=team.id, countdown=60 * 5)
-
-                AuditLogEntry.objects.create(
-                    organization=organization,
-                    actor=request.user,
-                    ip_address=request.META['REMOTE_ADDR'],
-                    target_object=team.id,
-                    event=AuditLogEntryEvent.TEAM_REMOVE,
-                    data=team.get_audit_log_data(),
-                )
+            client.delete('/teams/{}/{}/'.format(organization.slug, team.slug),
+                          request.user, is_sudo=True)
 
             messages.add_message(
                 request, messages.SUCCESS,
diff --git a/tests/sentry/web/frontend/test_remove_project.py b/tests/sentry/web/frontend/test_remove_project.py
index cabfeb63d6..abb49eaac1 100644
--- a/tests/sentry/web/frontend/test_remove_project.py
+++ b/tests/sentry/web/frontend/test_remove_project.py
@@ -1,7 +1,5 @@
 from __future__ import absolute_import
 
-import mock
-
 from django.core.urlresolvers import reverse
 
 from sentry.models import Project, ProjectStatus
@@ -51,12 +49,9 @@ class RemoveProjectTest(TestCase):
         assert resp.context['team'] == self.team
         assert resp.context['project'] == self.project
 
-    @mock.patch('sentry.web.frontend.remove_project.delete_project')
-    def test_deletion_flow(self, delete_project):
+    def test_deletion_flow(self):
         self.login_as(self.owner)
 
         resp = self.client.post(self.path, {})
         assert resp.status_code == 302
-        delete_project.delay.assert_called_once_with(
-            object_id=self.project.id)
         assert Project.objects.get(id=self.project.id).status == ProjectStatus.PENDING_DELETION
