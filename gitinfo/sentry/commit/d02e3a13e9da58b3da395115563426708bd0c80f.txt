commit d02e3a13e9da58b3da395115563426708bd0c80f
Author: josh <josh@jrl.ninja>
Date:   Thu Jan 16 21:10:59 2020 +0000

    test: annoyance fixes (#16491)

diff --git a/conftest.py b/conftest.py
index 9ff1c09672..851d7475c2 100644
--- a/conftest.py
+++ b/conftest.py
@@ -52,8 +52,10 @@ def install_sentry_plugins():
     settings.SENTRY_OPTIONS["github.integration-hook-secret"] = "b3002c3e321d4b7880360d397db2ccfd"
 
 
-def pytest_collection_modifyitems(items):
+def pytest_collection_modifyitems(config, items):
     for item in items:
         total_groups = int(os.environ.get("TOTAL_TEST_GROUPS", 1))
         group_num = int(md5(item.location[0]).hexdigest(), 16) % total_groups
-        item.add_marker(getattr(pytest.mark, "group_%s" % group_num))
+        marker = "group_%s" % group_num
+        config.addinivalue_line("markers", marker)
+        item.add_marker(getattr(pytest.mark, marker))
diff --git a/tests/sentry/api/validators/sentry_apps/test_schema.py b/tests/sentry/api/validators/sentry_apps/test_schema.py
index 2ffb2e350b..8c4f9ac542 100644
--- a/tests/sentry/api/validators/sentry_apps/test_schema.py
+++ b/tests/sentry/api/validators/sentry_apps/test_schema.py
@@ -1,10 +1,5 @@
 from __future__ import absolute_import
 
-import pytest
-
-# needed so we can see the full assertion errror in util
-pytest.register_assert_rewrite("tests.sentry.api.validators.sentry_apps.util")
-
 from .util import invalid_schema_with_error_message
 from sentry.testutils import TestCase
 from sentry.api.validators.sentry_apps.schema import validate_ui_element_schema
diff --git a/tests/sentry/plugins/bases/test_issue2.py b/tests/sentry/plugins/bases/test_issue2.py
index 71b1d93cb2..b7b7f0ab40 100644
--- a/tests/sentry/plugins/bases/test_issue2.py
+++ b/tests/sentry/plugins/bases/test_issue2.py
@@ -14,13 +14,13 @@ from sentry.testutils import TestCase
 from sentry.testutils.helpers.datetime import iso_format, before_now
 
 
-class TestPluginWithFields(IssueTrackingPlugin2):
+class PluginWithFields(IssueTrackingPlugin2):
     slug = "test-plugin-with-fields"
     conf_key = slug
     issue_fields = frozenset(["id", "title", "url"])
 
 
-class TestPluginWithoutFields(IssueTrackingPlugin2):
+class PluginWithoutFields(IssueTrackingPlugin2):
     slug = "test-plugin-without-fields"
     conf_key = slug
     issue_fields = None
@@ -28,17 +28,17 @@ class TestPluginWithoutFields(IssueTrackingPlugin2):
 
 class IssueTrackingPlugin2Test(TestCase):
     def test_issue_label_as_dict(self):
-        plugin = TestPluginWithFields()
+        plugin = PluginWithFields()
         result = plugin.get_issue_label(mock.Mock(), {"id": "1"})
         assert result == "#1"
 
     def test_issue_label_legacy(self):
-        plugin = TestPluginWithoutFields()
+        plugin = PluginWithoutFields()
         result = plugin.get_issue_label(mock.Mock(), "1")
         assert result == "#1"
 
     def test_issue_field_map_with_fields(self):
-        plugin = TestPluginWithFields()
+        plugin = PluginWithFields()
         result = plugin.get_issue_field_map()
         assert result == {
             "id": "test-plugin-with-fields:issue_id",
@@ -47,7 +47,7 @@ class IssueTrackingPlugin2Test(TestCase):
         }
 
     def test_issue_field_map_without_fields(self):
-        plugin = TestPluginWithoutFields()
+        plugin = PluginWithoutFields()
         result = plugin.get_issue_field_map()
         assert result == {"id": "test-plugin-without-fields:tid"}
 
