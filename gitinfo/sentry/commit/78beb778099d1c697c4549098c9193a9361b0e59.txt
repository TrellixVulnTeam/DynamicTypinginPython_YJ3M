commit 78beb778099d1c697c4549098c9193a9361b0e59
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jan 20 00:52:48 2015 -0800

    Add group details to routes
    
    - Remove group_list.html

diff --git a/src/sentry/static/sentry/app/components/aggregateChart.jsx b/src/sentry/static/sentry/app/components/aggregateChart.jsx
index a0f52ec521..93da660642 100644
--- a/src/sentry/static/sentry/app/components/aggregateChart.jsx
+++ b/src/sentry/static/sentry/app/components/aggregateChart.jsx
@@ -7,9 +7,6 @@ var AggregateChart = React.createClass({
   propTypes: {
     aggregate: React.PropTypes.shape({
       id: React.PropTypes.string.isRequired
-    }).isRequired,
-    project: React.PropTypes.shape({
-      id: React.PropTypes.string.isRequired
     }).isRequired
   },
 
diff --git a/src/sentry/static/sentry/app/components/aggregateDetails.jsx b/src/sentry/static/sentry/app/components/aggregateDetails.jsx
index e5b94f187c..2b61b0ca04 100644
--- a/src/sentry/static/sentry/app/components/aggregateDetails.jsx
+++ b/src/sentry/static/sentry/app/components/aggregateDetails.jsx
@@ -2,8 +2,9 @@
 
 var React = require("react");
 var Reflux = require("reflux");
+var Router = require("react-router");
 
-var AggregateListStore = require("../stores/aggregateListStore");
+var api = require("../api");
 var AssigneeSelector = require("./assigneeSelector");
 var Count = require("./count");
 var TimeSince = require("./timeSince");
@@ -106,46 +107,47 @@ var AggregateHeader = React.createClass({
 });
 
 var AggregateDetails = React.createClass({
-  mixins: [Reflux.connect(AggregateListStore, "aggList")],
-
-  propTypes: {
-    aggList: React.PropTypes.instanceOf(Array).isRequired,
-    aggId: React.PropTypes.string.isRequired,
-    memberList: React.PropTypes.instanceOf(Array).isRequired,
-  },
+  mixins: [Router.State],
 
   getInitialState: function() {
     return {
-      aggList: new utils.Collection([], {
-        equals: function(self, other) {
-          return self.id === other.id;
-        },
-        limit: 50
-      }),
-      agg: this.props.aggList[0],
-      statsPeriod: '24h'
+      aggregate: null,
+      statsPeriod: '24h',
+      memberList: []
     };
   },
 
-  componentDidMount: function() {
-    AggregateListStore.loadInitialData(this.props.aggList);
+  componentWillMount: function() {
+    api.request(this.getAggregateDetailsEndpoint(), {
+      success: function(data, textStatus, jqXHR) {
+        this.setState({
+          aggregate: data
+        });
+      }.bind(this)
+    });
+  },
+
+  getAggregateDetailsEndpoint: function() {
+    return '/groups/' + this.getParams().aggregateId + '/';
   },
 
   render: function() {
-    var data = this.state.agg;
+    var data = this.state.aggregate;
+
+    if (!data) {
+      return <div />;
+    }
 
     return (
       <div className={this.props.className}>
         <AggregateHeader
-            aggregate={this.state.agg}
-            project={this.props.project}
+            aggregate={this.state.aggregate}
             statsPeriod={this.state.statsPeriod}
-            memberList={this.props.memberList} />
+            memberList={this.state.memberList} />
         <div className="box">
           <div className="box-content with-padding">
             <AggregateChart
-                aggregate={this.state.agg}
-                project={this.props.project} />
+                aggregate={this.state.aggregate} />
           </div>
         </div>
       </div>
diff --git a/src/sentry/static/sentry/app/components/app.jsx b/src/sentry/static/sentry/app/components/app.jsx
index 8cc54c858c..45714a9657 100644
--- a/src/sentry/static/sentry/app/components/app.jsx
+++ b/src/sentry/static/sentry/app/components/app.jsx
@@ -6,7 +6,7 @@ var Router = require('react-router');
 var App = React.createClass({
   render: function () {
     return (
-      <Router.RouteHandler {...this.props.params}/>
+      <Router.RouteHandler />
     );
   }
 });
diff --git a/src/sentry/static/sentry/app/components/projectDetails.jsx b/src/sentry/static/sentry/app/components/projectDetails.jsx
new file mode 100644
index 0000000000..3b2c0f202a
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/projectDetails.jsx
@@ -0,0 +1,14 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+var Router = require('react-router');
+
+var ProjectDetails = React.createClass({
+  render: function () {
+    return (
+      <Router.RouteHandler />
+    );
+  }
+});
+
+module.exports = ProjectDetails;
diff --git a/src/sentry/static/sentry/app/components/stream.jsx b/src/sentry/static/sentry/app/components/stream.jsx
index b4695dca2b..cb5c457ad8 100644
--- a/src/sentry/static/sentry/app/components/stream.jsx
+++ b/src/sentry/static/sentry/app/components/stream.jsx
@@ -1,6 +1,7 @@
 /*** @jsx React.DOM */
 var React = require("react");
 var Reflux = require("reflux");
+var Router = require("react-router");
 var $ = require("jquery");
 
 var api = require("../api");
@@ -17,6 +18,8 @@ var TimeSince = require("./timeSince");
 var utils = require("../utils");
 
 var Aggregate = React.createClass({
+  mixins: [Router.State],
+
   propTypes: {
     data: React.PropTypes.shape({
       id: React.PropTypes.string.isRequired
@@ -30,6 +33,8 @@ var Aggregate = React.createClass({
     var data = this.props.data,
         userCount = 0;
 
+    var params = this.getParams();
+
     var chartData = data.stats[this.props.statsPeriod].map(function(point){
       return {x: point[0], y: point[1]};
     });
@@ -57,10 +62,13 @@ var Aggregate = React.createClass({
                    checked={this.props.isSelected}
                    onChange={this.props.onSelect} />
           </div>
-          <h3><a href={data.permalink}>
-            <span className="icon icon-bookmark"></span>
-            {data.title}
-          </a></h3>
+          <h3>
+            <Router.Link to="aggregateDetails"
+                  params={{orgId: params.orgId, projectId: params.projectId, aggregateId: data.id}}>
+              <span className="icon icon-bookmark"></span>
+              {data.title}
+            </Router.Link>
+          </h3>
           <div className="event-message">
             <span className="message">{data.culprit}</span>
           </div>
@@ -136,16 +144,11 @@ StreamPoller.prototype.poll = function() {
 };
 
 var Stream = React.createClass({
-  mixins: [Reflux.connect(AggregateListStore, "aggList")],
-
-  propTypes: {
-    organizationId: React.PropTypes.string.isRequired,
-    projectId: React.PropTypes.string.isRequired,
-  },
+  mixins: [Reflux.connect(AggregateListStore, "aggList"), Router.State],
 
   getInitialState: function() {
-    var params = utils.getQueryParams();
-    var query = params.query === undefined ? 'is:unresolved': params.query;
+    var queryParams = utils.getQueryParams();
+    var query = queryParams.query === undefined ? 'is:unresolved': queryParams.query;
 
     return {
       aggList: new utils.Collection([], {
@@ -202,12 +205,14 @@ var Stream = React.createClass({
   },
 
   getAggregateListEndpoint: function() {
-    var params = utils.getQueryParams();
-    params.query = this.state.query;
-
-    var querystring = $.param(params);
+    var queryParams = utils.getQueryParams();
+    if (queryParams.query === undefined) {
+      queryParams.query = this.state.query;
+    }
+    var querystring = $.param(queryParams);
+    var params = this.getParams();
 
-    return '/projects/' + this.props.organizationId + '/' + this.props.projectId + '/groups/?' + querystring;
+    return '/projects/' + params.orgId + '/' + params.projectId + '/groups/?' + querystring;
   },
 
   handleSelect: function(aggId, event) {
@@ -260,7 +265,8 @@ var Stream = React.createClass({
   },
 
   actionAggregates: function(aggList, options) {
-    var url = options.url || '/api/0/projects/' + this.props.project.id + '/groups/';
+    var params = this.getParams();
+    var url = options.url || '/api/0/projects/' + params.orgId + '/' + params.projectId + '/groups/';
 
     var selectedAggList;
     if (aggList === StreamActions.SELECTED) {
@@ -361,7 +367,8 @@ var Stream = React.createClass({
   render: function() {
     var aggNodes = this.state.aggList.map(function(node) {
       return (
-        <Aggregate data={node} key={node.id}
+        <Aggregate key={node.id}
+                   data={node}
                    isSelected={node.isSelected}
                    memberList={this.state.memberList}
                    onSelect={this.handleSelect.bind(this, node.id)}
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 522446a088..973dc84354 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -6,20 +6,17 @@ var Route = Router.Route;
 var DefaultRoute = Router.DefaultRoute;
 
 var App = require("./components/app");
+var AggregateDetails = require("./components/aggregateDetails");
+var ProjectDetails = require("./components/projectDetails");
 var Stream = require("./components/stream");
 
 var routes = (
   <Route name="app" path="/" handler={App}>
-    <Route name="stream" path="/:organizationId/:projectId/" handler={Stream}/>
+    <Route name="projectDetails" path="/:orgId/:projectId/" handler={ProjectDetails}>
+      <DefaultRoute name="stream" handler={Stream} />
+      <Route name="aggregateDetails" path="group/:aggregateId/" handler={AggregateDetails}/>
+    </Route>
   </Route>
 );
 
 module.exports = routes;
-    // React.render(React.createFactory(Stream)({
-    //   aggList: {% serialize event_list %},
-    //   project: {% serialize project %},
-    //   memberList: {% serialize member_list %},
-    //   initialQuery: {% convert_to_json query %},
-    //   pageLinks: {% convert_to_json page_links %}
-    // }), document.getElementById('blk_stream'));
-
diff --git a/src/sentry/templates/sentry/bases/react.html b/src/sentry/templates/sentry/bases/react.html
new file mode 100644
index 0000000000..c79cc72c2d
--- /dev/null
+++ b/src/sentry/templates/sentry/bases/react.html
@@ -0,0 +1,13 @@
+{% extends "sentry/layout.html" %}
+
+{% block content %}
+  <div id="blk_content"></div>
+  <script>
+  $(function(){
+    Router.run(routes, Router.HistoryLocation, function(Handler) {
+      React.render(React.createFactory(Handler)({
+      }), document.getElementById('blk_content'));
+    });
+  });
+  </script>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/groups/group_list.html b/src/sentry/templates/sentry/groups/group_list.html
deleted file mode 100644
index 5ce37ea626..0000000000
--- a/src/sentry/templates/sentry/groups/group_list.html
+++ /dev/null
@@ -1,17 +0,0 @@
-{% extends "sentry/bases/stream.html" %}
-
-{% load sentry_api %}
-{% load sentry_plugins %}
-
-{% block content %}
-  <div id="blk_stream"></div>
-  <script>
-  $(function(){
-    Router.run(routes, Router.HistoryLocation, function(Handler, state) {
-      React.render(React.createFactory(Handler)({
-        params: state.params
-      }), document.getElementById('blk_stream'));
-    });
-  });
-  </script>
-{% endblock %}
diff --git a/src/sentry/web/frontend/groups.py b/src/sentry/web/frontend/groups.py
index f45d7263b6..63e28eca43 100644
--- a/src/sentry/web/frontend/groups.py
+++ b/src/sentry/web/frontend/groups.py
@@ -127,16 +127,6 @@ def wall_display(request, organization, team):
     }, request)
 
 
-@login_required
-@has_access
-def group_list(request, organization, project):
-    return render_to_response('sentry/groups/group_list.html', {
-        'team': project.team,
-        'organization': organization,
-        'project': project,
-    }, request)
-
-
 def group(request, organization_slug, project_id, group_id, event_id=None):
     # TODO(dcramer): remove in 7.1 release
     # Handle redirects from team_slug/project_slug to org_slug/project_slug
diff --git a/src/sentry/web/frontend/react_page.py b/src/sentry/web/frontend/react_page.py
new file mode 100644
index 0000000000..b6f439d2f3
--- /dev/null
+++ b/src/sentry/web/frontend/react_page.py
@@ -0,0 +1,10 @@
+from __future__ import absolute_import
+
+from sentry.web.frontend.base import OrganizationView
+
+
+# TODO(dcramer): once we implement basic auth hooks in React we can make this
+# generic
+class ReactPageView(OrganizationView):
+    def handle(self, request, **kwargs):
+        return self.respond('sentry/bases/react.html')
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index a89e66deb0..5862f573aa 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -50,6 +50,7 @@ from sentry.web.frontend.create_organization_member import CreateOrganizationMem
 from sentry.web.frontend.create_project import CreateProjectView
 from sentry.web.frontend.create_team import CreateTeamView
 from sentry.web.frontend.project_settings import ProjectSettingsView
+from sentry.web.frontend.react_page import ReactPageView
 from sentry.web.frontend.remove_organization import RemoveOrganizationView
 from sentry.web.frontend.remove_project import RemoveProjectView
 from sentry.web.frontend.remove_team import RemoveTeamView
@@ -336,7 +337,7 @@ urlpatterns += patterns('',
     url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/explore/(?P<key>[^\/]+)/(?P<value_id>\d+)/$', explore.tag_value_details,
         name='sentry-explore-tag-value'),
 
-    url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/$', groups.group,
+    url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/$', ReactPageView.as_view(),
         name='sentry-group'),
     url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/events/$', groups.group_event_list,
         name='sentry-group-events'),
@@ -359,7 +360,7 @@ urlpatterns += patterns('',
     url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/alerts/(?P<alert_id>\d+)/resolve/$', alerts.resolve_alert,
         name='sentry-resolve-alert'),
     url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/stream/$', groups.group_list),
-    url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/$', groups.group_list,
+    url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/$', ReactPageView.as_view(),
         name='sentry-stream'),
 
     url(r'^(?P<organization_slug>[\w_-]+)/teams/(?P<team_slug>[\w_-]+)/$', groups.dashboard,
diff --git a/tests/sentry/web/frontend/groups/tests.py b/tests/sentry/web/frontend/groups/tests.py
index a37f86889c..14e1a2ca2b 100644
--- a/tests/sentry/web/frontend/groups/tests.py
+++ b/tests/sentry/web/frontend/groups/tests.py
@@ -70,8 +70,7 @@ class GroupListTest(TestCase):
         self.login_as(self.user)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
-        assert 'event_list' in resp.context
+        self.assertTemplateUsed(resp, 'sentry/bases/react.html')
         assert resp.context['project'] == self.project
         assert resp.context['team'] == self.team
         assert resp.context['organization'] == self.organization
