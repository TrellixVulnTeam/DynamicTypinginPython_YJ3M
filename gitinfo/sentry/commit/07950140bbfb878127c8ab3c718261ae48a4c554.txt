commit 07950140bbfb878127c8ab3c718261ae48a4c554
Author: William Mak <william@wmak.io>
Date:   Mon Jun 8 11:26:53 2020 -0400

    fix(discover): Saving queries with project (#19090)
    
    - This fixes a bug where queries with a project query would fail since
      the get_filter didn't have a params dictionary passed to it

diff --git a/src/sentry/discover/endpoints/serializers.py b/src/sentry/discover/endpoints/serializers.py
index bca31065ce..e4cb3c5a72 100644
--- a/src/sentry/discover/endpoints/serializers.py
+++ b/src/sentry/discover/endpoints/serializers.py
@@ -215,16 +215,22 @@ class DiscoverSavedQuerySerializer(serializers.Serializer):
             if len(query["fields"]) < 1:
                 raise serializers.ValidationError("You must include at least one field.")
 
+        if data["projects"] == ALL_ACCESS_PROJECTS:
+            data["projects"] = []
+            query["all_projects"] = True
+
         if "query" in query:
             try:
-                get_filter(query["query"])
+                get_filter(
+                    query["query"],
+                    {
+                        "project_id": data["projects"],
+                        "organization_id": self.context["organization"],
+                    },
+                )
             except InvalidSearchQuery as err:
                 raise serializers.ValidationError("Cannot save invalid query: {}".format(err))
 
-        if data["projects"] == ALL_ACCESS_PROJECTS:
-            data["projects"] = []
-            query["all_projects"] = True
-
         return {
             "name": data["name"],
             "project_ids": data["projects"],
diff --git a/tests/snuba/api/endpoints/test_discover_saved_queries.py b/tests/snuba/api/endpoints/test_discover_saved_queries.py
index b962c164c8..d65cc87104 100644
--- a/tests/snuba/api/endpoints/test_discover_saved_queries.py
+++ b/tests/snuba/api/endpoints/test_discover_saved_queries.py
@@ -12,10 +12,11 @@ class DiscoverSavedQueryBase(APITestCase, SnubaTestCase):
         super(DiscoverSavedQueryBase, self).setUp()
         self.login_as(user=self.user)
         self.org = self.create_organization(owner=self.user)
-        self.project_ids = [
-            self.create_project(organization=self.org).id,
-            self.create_project(organization=self.org).id,
+        self.projects = [
+            self.create_project(organization=self.org),
+            self.create_project(organization=self.org),
         ]
+        self.project_ids = [project.id for project in self.projects]
         self.project_ids_without_access = [self.create_project().id]
         query = {"fields": ["test"], "conditions": [], "limit": 10}
 
@@ -329,6 +330,23 @@ class DiscoverSavedQueriesVersion2Test(DiscoverSavedQueryBase):
         assert response.status_code == 201, response.content
         assert response.data["projects"] == [-1]
 
+    def test_save_with_project(self):
+        with self.feature(self.feature_name):
+            url = reverse("sentry-api-0-discover-saved-queries", args=[self.org.slug])
+            response = self.client.post(
+                url,
+                {
+                    "name": "project query",
+                    "projects": self.project_ids,
+                    "fields": ["title", "count()"],
+                    "range": "24h",
+                    "query": "project:{}".format(self.projects[0].slug),
+                    "version": 2,
+                },
+            )
+        assert response.status_code == 201, response.content
+        assert DiscoverSavedQuery.objects.filter(name="project query").exists()
+
     def test_save_invalid_query(self):
         with self.feature(self.feature_name):
             response = self.client.post(
