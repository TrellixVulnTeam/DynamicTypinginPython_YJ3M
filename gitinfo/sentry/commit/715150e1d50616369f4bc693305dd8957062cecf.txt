commit 715150e1d50616369f4bc693305dd8957062cecf
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 8 11:19:30 2012 -0800

    More API cleanup geared around bookmarks

diff --git a/bootstrap/lib/sentry.less b/bootstrap/lib/sentry.less
index 9c4352388c..7ca5f66455 100644
--- a/bootstrap/lib/sentry.less
+++ b/bootstrap/lib/sentry.less
@@ -244,6 +244,13 @@ td table.vars {
           width: 8px;
           text-align: center;
         }
+        .bookmark {
+          &.checked,
+          &.checked:hover {
+            color: @white;
+            .gradientBar(#5bc0de, #339bb9);
+          }
+        }
       }
     }
     &:hover {
diff --git a/sentry/conf/server.py b/sentry/conf/server.py
index b0418a569c..dd96b69d20 100644
--- a/sentry/conf/server.py
+++ b/sentry/conf/server.py
@@ -25,6 +25,8 @@ INTERNAL_IPS = ('127.0.0.1',)
 
 MANAGERS = ADMINS
 
+APPEND_SLASH = False
+
 PROJECT_ROOT = os.path.join(os.path.dirname(__file__), os.pardir, os.pardir)
 
 sys.path.insert(0, os.path.abspath(os.path.join(PROJECT_ROOT, '..')))
diff --git a/sentry/models.py b/sentry/models.py
index e8b127ab07..8c0e3f75d4 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -436,7 +436,7 @@ class GroupBookmark(Model):
     Identifies a bookmark relationship between a user and an
     aggregated event (Group).
     """
-    project = models.ForeignKey(Project)  # denormalized
+    project = models.ForeignKey(Project, related_name="bookmark_set")  # denormalized
     group = models.ForeignKey(Group, related_name="bookmark_set")
     user = models.ForeignKey(User, related_name="bookmark_set")
 
diff --git a/sentry/static/scripts/global.js b/sentry/static/scripts/global.js
index 0da2a16bb3..4b8afb6d31 100644
--- a/sentry/static/scripts/global.js
+++ b/sentry/static/scripts/global.js
@@ -75,7 +75,7 @@ if (Sentry === undefined) {
             }
         });
     };
-    Sentry.stream.bookmark = function(project_id, gid){
+    Sentry.stream.bookmark = function(project_id, gid, el){
         $.ajax({
             url: Sentry.options.urlPrefix + '/api/' + project_id + '/bookmark',
             type: 'post',
@@ -84,7 +84,16 @@ if (Sentry === undefined) {
                 gid: gid
             },
             success: function(data){
-                var is_bookmarked = data.bookmarked;
+                if (!el) {
+                    return;
+                }
+                var $el = $(el);
+                console.log($el);
+                if (data.bookmarked) {
+                    $el.addClass('checked');
+                } else {
+                    $el.removeClass('checked');
+                }
             }
         });
     };
@@ -143,8 +152,9 @@ if (Sentry === undefined) {
                         logger: data.logger
                     });
                     if ((row = $('#group_' + id))) {
-                        row.remove();
-                        $('#event_list').prepend(data.html);
+                        // TODO: move this to the correct position
+                        //row.remove();
+                        //$('#event_list').prepend(data.html);
                         if (row.attr('data-sentry-count') != data.count) {
                             $('#group_' + id).addClass('fresh');
                         }
diff --git a/sentry/static/styles/bootstrap.css b/sentry/static/styles/bootstrap.css
index 8e1926bc79..b27474afc2 100644
--- a/sentry/static/styles/bootstrap.css
+++ b/sentry/static/styles/bootstrap.css
@@ -6,7 +6,7 @@
  * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Designed and built with all the love in the world @twitter by @mdo and @fat.
- * Date: Sun Jan  8 10:52:54 PST 2012
+ * Date: Sun Jan  8 11:19:21 PST 2012
  */
 /* Reset.less
  * Props to Eric Meyer (meyerweb.com) for his CSS reset file. We're using an adapted version here	that cuts out some of the reset HTML elements we will never need here (i.e., dfn, samp, etc).
@@ -2779,6 +2779,22 @@ td table.vars {
   width: 8px;
   text-align: center;
 }
+.messages > li ul.actions > li .bookmark.checked, .messages > li ul.actions > li .bookmark.checked:hover {
+  color: #ffffff;
+  background-color: #339bb9;
+  background-repeat: repeat-x;
+  background-image: -khtml-gradient(linear, left top, left bottom, from(#5bc0de), to(#339bb9));
+  background-image: -moz-linear-gradient(top, #5bc0de, #339bb9);
+  background-image: -ms-linear-gradient(top, #5bc0de, #339bb9);
+  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #5bc0de), color-stop(100%, #339bb9));
+  background-image: -webkit-linear-gradient(top, #5bc0de, #339bb9);
+  background-image: -o-linear-gradient(top, #5bc0de, #339bb9);
+  background-image: linear-gradient(top, #5bc0de, #339bb9);
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#5bc0de', endColorstr='#339bb9', GradientType=0);
+  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
+  border-color: #339bb9 #339bb9 #22697d;
+  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
+}
 .messages > li:hover .actions {
   visibility: visible;
 }
diff --git a/sentry/static/styles/bootstrap.min.css b/sentry/static/styles/bootstrap.min.css
index 8a98dbb06f..f143aee883 100644
--- a/sentry/static/styles/bootstrap.min.css
+++ b/sentry/static/styles/bootstrap.min.css
@@ -396,4 +396,5 @@ td table.vars{margin-bottom:0;}
 .sparkline-grid a{width:250px;height:160px;display:inline-block;text-align:center;}
 .sparkline-grid .sparkline{height:120px;}
 .messages{list-style:none;margin-left:0;}.messages>li{list-style:none;clear:both;padding:8px;position:relative;padding-right:50px;overflow:hidden;}.messages>li ul.actions{list-style:none;margin:0;padding:0;position:absolute;right:8px;top:8px;list-style-type:none;visibility:hidden;}.messages>li ul.actions>li{margin-bottom:6px;}.messages>li ul.actions>li .btn{padding:5px 7px 5px;width:8px;text-align:center;}
+.messages>li ul.actions>li .bookmark.checked,.messages>li ul.actions>li .bookmark.checked:hover{color:#ffffff;background-color:#339bb9;background-repeat:repeat-x;background-image:-khtml-gradient(linear, left top, left bottom, from(#5bc0de), to(#339bb9));background-image:-moz-linear-gradient(top, #5bc0de, #339bb9);background-image:-ms-linear-gradient(top, #5bc0de, #339bb9);background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%, #5bc0de), color-stop(100%, #339bb9));background-image:-webkit-linear-gradient(top, #5bc0de, #339bb9);background-image:-o-linear-gradient(top, #5bc0de, #339bb9);background-image:linear-gradient(top, #5bc0de, #339bb9);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#5bc0de', endColorstr='#339bb9', GradientType=0);text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);border-color:#339bb9 #339bb9 #22697d;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);}
 .messages>li:hover .actions{visibility:visible;}
diff --git a/sentry/templates/sentry/groups/group_list.html b/sentry/templates/sentry/groups/group_list.html
index 5f659d3bc8..863672f283 100644
--- a/sentry/templates/sentry/groups/group_list.html
+++ b/sentry/templates/sentry/groups/group_list.html
@@ -99,7 +99,7 @@
 
     {% if event_list.paginator.objects %}
         <ul class="messages" id="event_list">
-            {% for group in event_list.paginator.objects %}
+            {% for group, is_bookmarked in event_list.paginator.objects|as_bookmarks:request.user %}
                 {% include "sentry/partial/_group.html" %}
             {% endfor %}
         </ul>
diff --git a/sentry/templates/sentry/layout.html b/sentry/templates/sentry/layout.html
index d4c1466cf9..01fd5221a2 100644
--- a/sentry/templates/sentry/layout.html
+++ b/sentry/templates/sentry/layout.html
@@ -33,7 +33,7 @@
         Sentry.config({
             urlPrefix: '{{ URL_PREFIX }}',
             mediaUrl: '{% url sentry-media '' %}',
-            defaultImage: '{% url sentry-media 'images/sentry.png' %}'
+            defaultImage: '{% url sentry-media 'images/sentry.png' %}',
             popupCss: '{% url sentry-media 'styles/popup.css' %}'
         });
         </script>
diff --git a/sentry/templates/sentry/partial/_group.html b/sentry/templates/sentry/partial/_group.html
index 01bcbfacb3..7711813a32 100644
--- a/sentry/templates/sentry/partial/_group.html
+++ b/sentry/templates/sentry/partial/_group.html
@@ -23,11 +23,13 @@
     <ul class="actions">
         <li>
             {% if group.status == 0 %}
-                <a href="javascript:void(0)" onclick="Sentry.stream.resolve({{ group.project_id|safe }}, {{ group.pk|safe }});" class="btn small">&#10003;</a>
+                <a href="javascript:void(0)" onclick="Sentry.stream.resolve({{ group.project_id|safe }}, {{ group.pk|safe }}, this);" class="btn small">&#10003;</a>
             {% else %}
                 <a href="javascript:void(0)" class="btn disabled small">&#10003;</a>
             {% endif %}
         </li>
-        <li><a href="javascript:void(0)" onclick="Sentry.stream.bookmark({{ group.project_id|safe }}, {{ group.pk|safe }});" class="btn small">&#9829;</a></li>
+        {% if request.user.is_authenticated %}
+            <li><a href="javascript:void(0)" onclick="Sentry.stream.bookmark({{ group.project_id|safe }}, {{ group.pk|safe }}, this);" class="btn small bookmark{% if is_bookmarked %} checked{% endif %}">&#9829;</a></li>
+        {% endif %}
     </ul>
 </li>
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index 9cc3a4cd57..74e5918245 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -263,3 +263,19 @@ def querystring(context, request, withoutvar, asvar=None):
 @register.inclusion_tag('sentry/partial/_form.html')
 def render_form(form):
     return {'form': form}
+
+
+@register.filter
+def as_bookmarks(group_list, user):
+    if user.is_authenticated():
+        group_list = list(group_list)
+        project = group_list[0].project
+        bookmarks = set(project.bookmark_set.filter(
+            user=user,
+            group__in=group_list,
+        ).values_list('group_id', flat=True))
+    else:
+        bookmarks = set()
+
+    for g in group_list:
+        yield g, g.pk in bookmarks
diff --git a/sentry/web/api.py b/sentry/web/api.py
index 467ad6fd5b..34b2ecedc3 100644
--- a/sentry/web/api.py
+++ b/sentry/web/api.py
@@ -64,6 +64,8 @@ def notification(request, project):
 @csrf_exempt
 @has_access
 def poll(request, project):
+    from sentry.templatetags.sentry_helpers import as_bookmarks
+
     offset = 0
     limit = settings.MESSAGES_PER_PAGE
 
@@ -87,13 +89,14 @@ def poll(request, project):
             'html': render_to_string('sentry/partial/_group.html', {
                 'group': m,
                 'request': request,
+                'is_bookmarked': b,
             }).strip(),
             'title': m.message_top(),
             'message': m.error(),
             'level': m.get_level_display(),
             'logger': m.logger,
             'count': m.times_seen,
-        }) for m in event_list[offset:limit]]
+        }) for m, b in as_bookmarks(event_list[offset:limit], request.user)]
 
     response = HttpResponse(json.dumps(data))
     response['Content-Type'] = 'application/json'
@@ -137,6 +140,10 @@ def bookmark(request, project):
     gid = request.REQUEST.get('gid')
     if not gid:
         return HttpResponseForbidden()
+
+    if not request.user.is_authenticated():
+        return HttpResponseForbidden()
+
     try:
         group = Group.objects.get(pk=gid)
     except Group.DoesNotExist:
@@ -153,7 +160,7 @@ def bookmark(request, project):
     if not created:
         gb.delete()
 
-    response = HttpResponse({'bookmarked': not created})
+    response = HttpResponse(json.dumps({'bookmarked': created}))
     response['Content-Type'] = 'application/json'
     return response
 
