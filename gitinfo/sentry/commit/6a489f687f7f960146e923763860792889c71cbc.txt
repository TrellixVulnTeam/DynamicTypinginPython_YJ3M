commit 6a489f687f7f960146e923763860792889c71cbc
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jul 16 11:00:06 2018 -0700

    fix(ui): Support multiple choice on SelectAsyncField
    
    - Add support for 'multiple' attribute
    - Add missing 'form-control' field class

diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index d315b73dc0..1be2877fbc 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -112,8 +112,9 @@ export default class FormField extends React.PureComponent {
         value,
       },
       () => {
-        this.props.onChange && this.props.onChange(this.coerceValue(this.state.value));
-        form && form.onFieldChange(this.props.name, this.coerceValue(this.state.value));
+        let finalValue = this.coerceValue(this.state.value);
+        this.props.onChange && this.props.onChange(finalValue);
+        form && form.onFieldChange(this.props.name, finalValue);
       }
     );
   };
diff --git a/src/sentry/static/sentry/app/components/forms/multiSelectControl.jsx b/src/sentry/static/sentry/app/components/forms/multiSelectControl.jsx
index 4ea260a7e4..843724827e 100644
--- a/src/sentry/static/sentry/app/components/forms/multiSelectControl.jsx
+++ b/src/sentry/static/sentry/app/components/forms/multiSelectControl.jsx
@@ -4,6 +4,6 @@ import SelectControl from 'app/components/forms/selectControl';
 
 export default class MultiSelectControl extends React.Component {
   render() {
-    return <SelectControl {...this.props} multi={true} />;
+    return <SelectControl {...this.props} multiple={true} />;
   }
 }
diff --git a/src/sentry/static/sentry/app/components/forms/selectAsyncField.jsx b/src/sentry/static/sentry/app/components/forms/selectAsyncField.jsx
index c7a9e1ee45..88714746c8 100644
--- a/src/sentry/static/sentry/app/components/forms/selectAsyncField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectAsyncField.jsx
@@ -65,7 +65,9 @@ class SelectAsyncField extends SelectField {
   // Otherwise, when you hit "enter" to create a new item, the "selected value" does
   // not update with new value (and also new value is not displayed in dropdown)
   coerceValue(value) {
-    return value ? value.value : '';
+    if (value && value.hasOwnProperty(value)) return value.value;
+    else if (value) return value;
+    return '';
   }
 
   onResults = data => {
@@ -81,7 +83,13 @@ class SelectAsyncField extends SelectField {
   };
 
   onChange = opt => {
-    this.setValue(opt);
+    let value;
+    if (this.isMultiple()) {
+      value = opt.map(v => v.value);
+    } else {
+      value = opt ? opt.value : null;
+    }
+    this.setValue(value);
   };
 
   getField() {
@@ -93,6 +101,7 @@ class SelectAsyncField extends SelectField {
         onResults={this.onResults}
         onQuery={this.onQuery}
         {...this.props}
+        multiple={this.isMultiple()}
         value={this.state.value}
         onChange={this.onChange}
       />
diff --git a/src/sentry/static/sentry/app/components/forms/selectControl.jsx b/src/sentry/static/sentry/app/components/forms/selectControl.jsx
index e8b89f792f..d957bac884 100644
--- a/src/sentry/static/sentry/app/components/forms/selectControl.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectControl.jsx
@@ -14,12 +14,21 @@ export default class SelectControl extends React.Component {
         value: PropTypes.any,
       })
     ),
+    // react-select knows this as multi, but for standardization
+    // and compatibility we use multiple
+    multiple: PropTypes.bool,
+    // multi is supported for compatibility
+    multi: PropTypes.bool,
     choices: PropTypes.oneOfType([
       PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.array])),
       PropTypes.func,
     ]),
   };
 
+  static defaultPropTypes = {
+    multiple: false,
+  };
+
   renderArrow = () => {
     return <span className="icon-arrow-down" />;
   };
@@ -39,6 +48,7 @@ export default class SelectControl extends React.Component {
         async={async}
         creatable={creatable}
         {...props}
+        multi={this.props.multiple || this.props.multi}
         options={choicesOrOptions}
       />
     );
diff --git a/src/sentry/static/sentry/app/components/forms/selectField.jsx b/src/sentry/static/sentry/app/components/forms/selectField.jsx
index 2134ae68ac..78e02e5d1c 100644
--- a/src/sentry/static/sentry/app/components/forms/selectField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectField.jsx
@@ -11,15 +11,22 @@ export default class SelectField extends FormField {
     choices: SelectControl.propTypes.choices,
     clearable: SelectControl.propTypes.clearable,
     onChange: PropTypes.func,
+    multiple: PropTypes.bool,
   };
 
   static defaultProps = {
     ...FormField.defaultProps,
     clearable: true,
+    multiple: false,
   };
 
+  isMultiple() {
+    // this is to maintain compatibility with the 'multi' prop
+    return this.props.multi || this.props.multiple;
+  }
+
   getClassName() {
-    return '';
+    return 'control-group';
   }
 
   onChange = opt => {
@@ -40,6 +47,7 @@ export default class SelectField extends FormField {
         value={this.state.value}
         onChange={this.onChange.bind(this)}
         clearable={this.props.clearable}
+        multiple={this.isMultiple()}
       />
     );
   }
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
index f838e06e32..d19a0f896d 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
@@ -58,7 +58,7 @@ class OnboardingProject extends React.Component {
             name="select-team"
             clearable={false}
             value={team}
-            style={{width: 180}}
+            style={{width: 180, marginBottom: 0}}
             onChange={val => setTeam(val)}
             options={teams.map(({slug}) => ({
               label: `#${slug}`,
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/selectField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/selectField.jsx
index 6a6e577b35..ce57e85dc9 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/selectField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/selectField.jsx
@@ -59,7 +59,7 @@ export default class SelectField extends React.Component {
             <SelectControl
               {...props}
               clearable={allowClear}
-              multi={multiple}
+              multiple={multiple}
               disabled={disabled}
               onChange={this.handleChange.bind(this, onBlur, onChange)}
               value={props.value}
diff --git a/tests/js/fixtures/phabricator.js b/tests/js/fixtures/phabricator.js
new file mode 100644
index 0000000000..0be26b4272
--- /dev/null
+++ b/tests/js/fixtures/phabricator.js
@@ -0,0 +1,89 @@
+function PhabricatorPlugin(params) {
+  return {
+    status: 'unknown',
+    description:
+      'Integrate Phabricator issue tracking by linking a user account to a project.',
+    isTestable: false,
+    hasConfiguration: true,
+    shortName: 'Phabricator',
+    id: 'phabricator',
+    assets: [],
+    name: 'Phabricator',
+    author: {
+      url: 'https://github.com/getsentry/sentry-plugins',
+      name: 'Sentry Team',
+    },
+    contexts: [],
+    doc: '',
+    resourceLinks: [
+      {
+        url: 'https://github.com/getsentry/sentry-plugins/issues',
+        title: 'Bug Tracker',
+      },
+      {
+        url: 'https://github.com/getsentry/sentry-plugins',
+        title: 'Source',
+      },
+    ],
+    allowed_actions: ['create', 'link', 'unlink'],
+    enabled: true,
+    slug: 'phabricator',
+    version: '9.1.0.dev0',
+    canDisable: true,
+    type: 'issue-tracking',
+    metadata: {},
+  };
+}
+
+function PhabricatorCreate(params) {
+  return [
+    {
+      default: 'ApiException: Authentication failed, token expired!',
+      type: 'text',
+      name: 'title',
+      label: 'Title',
+    },
+    {
+      default:
+        'http://dev.getsentry.net:8000/sentry/earth/issues/10/\n\n```\nApiException: Authentication failed, token expired!\n    at io.sentry.example.ApiRequest.perform(ApiRequest.java:8)\n    at io.sentry.example.Sidebar.fetch(Sidebar.java:5)\n    at io.sentry.example.Application.home(Application.java:102)\n...\n(52 additional frame(s) were not displayed)\n\nThis is an example Java exception\n```',
+      type: 'textarea',
+      name: 'description',
+      label: 'Description',
+    },
+    {
+      multi: true,
+      name: 'tags',
+      type: 'select',
+      required: false,
+      label: 'Tags',
+      has_autocomplete: true,
+      placeholder: 'Start typing to search for a project',
+    },
+    {
+      name: 'assignee',
+      default: '',
+      type: 'select',
+      required: false,
+      label: 'Assignee',
+      has_autocomplete: true,
+      placeholder: 'Start typing to search for an assignee',
+    },
+  ];
+}
+
+const DEFAULT_AUTOCOMPLETE_ASSIGNEE = {
+  text: 'David Cramer (zeeg)',
+  id: 'PHID-USER-53avnyn5r6z6daqjfwdo',
+};
+
+const DEFAULT_AUTOCOMPLETE_TAG1 = {text: 'Bar', id: 'PHID-PROJ-biz3qujawd2dfknvhpqv'};
+const DEFAULT_AUTOCOMPLETE_TAG2 = {text: 'Foo', id: 'PHID-PROJ-3dfrsmwmavdv4gbg4fxd'};
+
+function PhabricatorAutocomplete(type = 'project', values = null) {
+  if (values) return {[type]: values};
+  if (type === 'assignee') values = [DEFAULT_AUTOCOMPLETE_ASSIGNEE];
+  if (type === 'tags') values = [DEFAULT_AUTOCOMPLETE_TAG1, DEFAULT_AUTOCOMPLETE_TAG2];
+  return {[type]: values};
+}
+
+export {PhabricatorPlugin, PhabricatorCreate, PhabricatorAutocomplete};
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 1c3f3046df..ee3ac09806 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -12,6 +12,11 @@ import theme from 'app/utils/theme';
 import RoleList from './fixtures/roleList';
 import Release from './fixtures/release';
 import {AsanaPlugin, AsanaCreate, AsanaAutocomplete} from './fixtures/asana';
+import {
+  PhabricatorPlugin,
+  PhabricatorCreate,
+  PhabricatorAutocomplete,
+} from './fixtures/phabricator';
 import {VstsPlugin, VstsCreate} from './fixtures/vsts-old';
 
 jest.mock('lodash/debounce', () => jest.fn(fn => fn));
@@ -1132,6 +1137,9 @@ window.TestStubs = {
   AsanaPlugin,
   AsanaCreate,
   AsanaAutocomplete,
+  PhabricatorPlugin,
+  PhabricatorCreate,
+  PhabricatorAutocomplete,
   VstsPlugin,
   VstsCreate,
 };
diff --git a/tests/js/spec/components/customResolutionModal.spec.jsx b/tests/js/spec/components/customResolutionModal.spec.jsx
index c4affa4ecf..e7bfad06d3 100644
--- a/tests/js/spec/components/customResolutionModal.spec.jsx
+++ b/tests/js/spec/components/customResolutionModal.spec.jsx
@@ -44,10 +44,9 @@ describe('CustomResolutionModal', function() {
 
     wrapper.find('input[id="version"]').simulate('keyDown', {keyCode: 13});
 
-    expect(wrapper.find('SelectControl').prop('value')).toEqual({
-      value: '92eccef279d966b2319f0802fa4b22b430a5f72b',
-      label: expect.anything(),
-    });
+    expect(wrapper.find('SelectControl').prop('value')).toEqual(
+      '92eccef279d966b2319f0802fa4b22b430a5f72b'
+    );
     wrapper.find('form').simulate('submit');
     expect(onSelected).toHaveBeenCalledWith({
       inRelease: '92eccef279d966b2319f0802fa4b22b430a5f72b',
diff --git a/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
index e780e82253..40460d617d 100644
--- a/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
@@ -5,6 +5,7 @@ exports[`SelectField render() renders with form context 1`] = `
   clearable={true}
   disabled={false}
   hideErrorMessage={false}
+  multiple={false}
   name="fieldName"
   options={
     Array [
@@ -21,7 +22,7 @@ exports[`SelectField render() renders with form context 1`] = `
   required={false}
 >
   <div
-    className=""
+    className="control-group"
   >
     <div
       className="controls"
@@ -30,6 +31,7 @@ exports[`SelectField render() renders with form context 1`] = `
         clearable={true}
         disabled={false}
         id="id-fieldName"
+        multiple={false}
         onChange={[Function]}
         options={
           Array [
@@ -51,6 +53,7 @@ exports[`SelectField render() renders with form context 1`] = `
           clearable={true}
           disabled={false}
           id="id-fieldName"
+          multiple={false}
           onChange={[Function]}
           options={
             Array [
@@ -73,6 +76,7 @@ exports[`SelectField render() renders with form context 1`] = `
             clearable={true}
             disabled={false}
             id="id-fieldName"
+            multiple={false}
             onChange={[Function]}
             options={
               Array [
@@ -117,6 +121,7 @@ exports[`SelectField render() renders with form context 1`] = `
               menuBuffer={0}
               menuRenderer={[Function]}
               multi={false}
+              multiple={false}
               noResultsText="No results found"
               onBlurResetsInput={true}
               onChange={[Function]}
@@ -292,6 +297,7 @@ exports[`SelectField render() renders without form context 1`] = `
   clearable={true}
   disabled={false}
   hideErrorMessage={false}
+  multiple={false}
   name="fieldName"
   options={
     Array [
@@ -309,7 +315,7 @@ exports[`SelectField render() renders without form context 1`] = `
   value="a"
 >
   <div
-    className=""
+    className="control-group"
   >
     <div
       className="controls"
@@ -318,6 +324,7 @@ exports[`SelectField render() renders without form context 1`] = `
         clearable={true}
         disabled={false}
         id="id-fieldName"
+        multiple={false}
         onChange={[Function]}
         options={
           Array [
@@ -339,6 +346,7 @@ exports[`SelectField render() renders without form context 1`] = `
           clearable={true}
           disabled={false}
           id="id-fieldName"
+          multiple={false}
           onChange={[Function]}
           options={
             Array [
@@ -361,6 +369,7 @@ exports[`SelectField render() renders without form context 1`] = `
             clearable={true}
             disabled={false}
             id="id-fieldName"
+            multiple={false}
             onChange={[Function]}
             options={
               Array [
@@ -405,6 +414,7 @@ exports[`SelectField render() renders without form context 1`] = `
               menuBuffer={0}
               menuRenderer={[Function]}
               multi={false}
+              multiple={false}
               noResultsText="No results found"
               onBlurResetsInput={true}
               onChange={[Function]}
diff --git a/tests/js/spec/components/forms/selectAsyncField.spec.jsx b/tests/js/spec/components/forms/selectAsyncField.spec.jsx
index d2d67d06c2..7ea7064eae 100644
--- a/tests/js/spec/components/forms/selectAsyncField.spec.jsx
+++ b/tests/js/spec/components/forms/selectAsyncField.spec.jsx
@@ -64,10 +64,7 @@ describe('SelectAsyncField', function() {
     wrapper.find('input[id="id-fieldName"]').simulate('keyDown', {keyCode: 13});
 
     // SelectControl should have the value object, not just a simple value
-    expect(wrapper.find('SelectControl').prop('value')).toEqual({
-      value: 'baz',
-      label: 'Baz Label',
-    });
+    expect(wrapper.find('SelectControl').prop('value')).toEqual('baz');
 
     wrapper.find('Form').simulate('submit');
     expect(submitMock).toHaveBeenCalledWith(
diff --git a/tests/js/spec/components/forms/selectControl.spec.jsx b/tests/js/spec/components/forms/selectControl.spec.jsx
index 7d42bfc424..6c97ff6e48 100644
--- a/tests/js/spec/components/forms/selectControl.spec.jsx
+++ b/tests/js/spec/components/forms/selectControl.spec.jsx
@@ -12,6 +12,20 @@ describe('SelectControl', function() {
     ]);
   });
 
+  it('renders with react-select "multi"', function() {
+    let wrapper = shallow(<SelectControl multiple />);
+
+    expect(wrapper.find('StyledSelect').prop('multi')).toEqual(true);
+
+    wrapper = shallow(<SelectControl multi />);
+
+    expect(wrapper.find('StyledSelect').prop('multi')).toEqual(true);
+
+    wrapper = shallow(<SelectControl />);
+
+    expect(wrapper.find('StyledSelect').prop('multi')).toBeUndefined();
+  });
+
   it('renders with select2 flat "choices"', function() {
     let wrapper = shallow(<SelectControl choices={['a', 'b', 'c']} name="fieldName" />);
     expect(wrapper.find('StyledSelect').prop('options')).toEqual([
diff --git a/tests/js/spec/integrations/phabricator.spec.jsx b/tests/js/spec/integrations/phabricator.spec.jsx
new file mode 100644
index 0000000000..459df7bc15
--- /dev/null
+++ b/tests/js/spec/integrations/phabricator.spec.jsx
@@ -0,0 +1,123 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import IssuePluginActions from 'app/components/group/issuePluginActions';
+
+jest.mock('jquery');
+
+describe('Phabricator', function() {
+  let plugin = TestStubs.PhabricatorPlugin();
+  // Note group is different than group in PhabricatorCreate fixture
+  let group = TestStubs.Group();
+  let TITLE = 'input[id="id-title"]';
+  let NOTES = 'textarea[id="id-description"]';
+  let TAGS = '[id="id-tags"]';
+  let ASSIGNEE = '[id="id-assignee"]';
+  let PhabricatorCreateResponse = TestStubs.PhabricatorCreate();
+  let autocompleteMock = jest.fn();
+  let createMock = jest.fn();
+
+  beforeEach(function() {
+    MockApiClient.addMockResponse({
+      url: `/issues/${group.id}/plugins/phabricator/create/`,
+      body: PhabricatorCreateResponse,
+    });
+    autocompleteMock = MockApiClient.addMockResponse({
+      url: `/api/0/issues/${group.id}/plugins/phabricator/autocomplete`,
+      body: {
+        // This is a hack because our mock responses don't work properly when
+        // two different fields use the same endpoint
+        ...TestStubs.PhabricatorAutocomplete('tags'),
+        ...TestStubs.PhabricatorAutocomplete('assignee'),
+      },
+    });
+  });
+
+  it('can create a new issue', async function() {
+    let wrapper = mount(
+      <IssuePluginActions plugin={plugin} />,
+      TestStubs.routerContext([
+        {
+          group,
+        },
+      ])
+    );
+
+    wrapper
+      .find('MenuItem a')
+      .first()
+      .simulate('click');
+
+    // TODO #SELECT2 enable when replacing select2
+    // expect(wrapper.find(`Select${WORKSPACE}`).prop('value')).toBe(608780875677549);
+    expect(wrapper.find(TITLE).prop('value')).toBe(
+      'ApiException: Authentication failed, token expired!'
+    );
+    wrapper.find(TITLE).simulate('change', {target: {value: 'Sentry Issue Title'}});
+    wrapper.find(NOTES).simulate('change', {target: {value: 'Notes'}});
+
+    // Both tags and assignees get called
+    expect(autocompleteMock).toHaveBeenCalledTimes(2);
+    autocompleteMock.mockReset();
+
+    wrapper.find(`input${TAGS}`).simulate('change', {target: {value: 'Foo'}});
+    await tick();
+    wrapper.update();
+
+    expect(autocompleteMock).toHaveBeenLastCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        query: {
+          autocomplete_field: 'tags',
+          autocomplete_query: '',
+        },
+      })
+    );
+
+    wrapper.find(`input${TAGS}`).simulate('keyDown', {keyCode: 13});
+
+    // New autocomplete mock for assignee
+    autocompleteMock.mockReset();
+    expect(autocompleteMock).not.toHaveBeenCalled();
+    // On focus/change, autocompelte gets called again
+    wrapper.find(`input${ASSIGNEE}`).simulate('change', {target: {value: 'David'}});
+    wrapper.find(`input${ASSIGNEE}`).simulate('change', {target: {value: 'david'}});
+    await tick();
+    wrapper.update();
+
+    expect(autocompleteMock).toHaveBeenLastCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        query: {
+          autocomplete_field: 'assignee',
+          autocomplete_query: 'David',
+        },
+      })
+    );
+    wrapper.find(`input${ASSIGNEE}`).simulate('keyDown', {keyCode: 13});
+
+    await tick();
+    wrapper.update();
+
+    createMock = MockApiClient.addMockResponse({
+      url: `/issues/${group.id}/plugins/phabricator/create/`,
+      body: PhabricatorCreateResponse,
+    });
+
+    wrapper.find('Modal Form').simulate('submit');
+    await tick();
+    wrapper.update();
+
+    expect(createMock).toHaveBeenCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        data: expect.objectContaining({
+          description: 'Notes',
+          title: 'Sentry Issue Title',
+          tags: ['PHID-PROJ-3dfrsmwmavdv4gbg4fxd'],
+          assignee: 'PHID-USER-53avnyn5r6z6daqjfwdo',
+        }),
+      })
+    );
+  });
+});
diff --git a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
index e2d316dbc9..22385587f4 100644
--- a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
@@ -122,6 +122,7 @@ exports[`Project Ownership Input renders 1`] = `
             clearable={false}
             disabled={false}
             hideErrorMessage={false}
+            multiple={false}
             name="select-type"
             onChange={[Function]}
             options={
@@ -146,7 +147,7 @@ exports[`Project Ownership Input renders 1`] = `
             value="path"
           >
             <div
-              className="css-1bclqmz-BuilderSelect e1hyuoc76"
+              className="css-1bclqmz-BuilderSelect e1hyuoc76 control-group"
               style={
                 Object {
                   "width": 140,
@@ -160,6 +161,7 @@ exports[`Project Ownership Input renders 1`] = `
                   clearable={false}
                   disabled={false}
                   id="id-select-type"
+                  multiple={false}
                   onChange={[Function]}
                   options={
                     Array [
@@ -181,6 +183,7 @@ exports[`Project Ownership Input renders 1`] = `
                     clearable={false}
                     disabled={false}
                     id="id-select-type"
+                    multiple={false}
                     onChange={[Function]}
                     options={
                       Array [
@@ -203,6 +206,7 @@ exports[`Project Ownership Input renders 1`] = `
                       clearable={false}
                       disabled={false}
                       id="id-select-type"
+                      multiple={false}
                       onChange={[Function]}
                       options={
                         Array [
@@ -247,6 +251,7 @@ exports[`Project Ownership Input renders 1`] = `
                         menuBuffer={0}
                         menuRenderer={[Function]}
                         multi={false}
+                        multiple={false}
                         noResultsText="No results found"
                         onBlurResetsInput={true}
                         onChange={[Function]}
@@ -515,7 +520,7 @@ exports[`Project Ownership Input renders 1`] = `
                     defaultOptions={true}
                     filterOptions={[Function]}
                     loadOptions={[Function]}
-                    multi={true}
+                    multiple={true}
                     onChange={[Function]}
                     onInputChange={[Function]}
                     placeholder="Add Owners"
@@ -531,6 +536,7 @@ exports[`Project Ownership Input renders 1`] = `
                       filterOptions={[Function]}
                       loadOptions={[Function]}
                       multi={true}
+                      multiple={true}
                       onChange={[Function]}
                       onInputChange={[Function]}
                       placeholder="Add Owners"
@@ -546,6 +552,7 @@ exports[`Project Ownership Input renders 1`] = `
                         filterOptions={[Function]}
                         loadOptions={[Function]}
                         multi={true}
+                        multiple={true}
                         onChange={[Function]}
                         onInputChange={[Function]}
                         placeholder="Add Owners"
@@ -564,6 +571,7 @@ exports[`Project Ownership Input renders 1`] = `
                           loadOptions={[Function]}
                           loadingPlaceholder="Loading..."
                           multi={true}
+                          multiple={true}
                           onChange={[Function]}
                           onInputChange={[Function]}
                           options={Array []}
@@ -604,6 +612,7 @@ exports[`Project Ownership Input renders 1`] = `
                             menuBuffer={0}
                             menuRenderer={[Function]}
                             multi={true}
+                            multiple={true}
                             noResultsText="Loading..."
                             onBlurResetsInput={true}
                             onChange={[Function]}
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index e534d4cf80..d8dbac871f 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -96,6 +96,7 @@ exports[`RuleBuilder renders 1`] = `
           clearable={false}
           disabled={false}
           hideErrorMessage={false}
+          multiple={false}
           name="select-type"
           onChange={[Function]}
           options={
@@ -120,7 +121,7 @@ exports[`RuleBuilder renders 1`] = `
           value="path"
         >
           <div
-            className="css-1bclqmz-BuilderSelect e1hyuoc76"
+            className="css-1bclqmz-BuilderSelect e1hyuoc76 control-group"
             style={
               Object {
                 "width": 140,
@@ -134,6 +135,7 @@ exports[`RuleBuilder renders 1`] = `
                 clearable={false}
                 disabled={false}
                 id="id-select-type"
+                multiple={false}
                 onChange={[Function]}
                 options={
                   Array [
@@ -155,6 +157,7 @@ exports[`RuleBuilder renders 1`] = `
                   clearable={false}
                   disabled={false}
                   id="id-select-type"
+                  multiple={false}
                   onChange={[Function]}
                   options={
                     Array [
@@ -177,6 +180,7 @@ exports[`RuleBuilder renders 1`] = `
                     clearable={false}
                     disabled={false}
                     id="id-select-type"
+                    multiple={false}
                     onChange={[Function]}
                     options={
                       Array [
@@ -221,6 +225,7 @@ exports[`RuleBuilder renders 1`] = `
                       menuBuffer={0}
                       menuRenderer={[Function]}
                       multi={false}
+                      multiple={false}
                       noResultsText="No results found"
                       onBlurResetsInput={true}
                       onChange={[Function]}
@@ -496,7 +501,7 @@ exports[`RuleBuilder renders 1`] = `
                   defaultOptions={true}
                   filterOptions={[Function]}
                   loadOptions={[Function]}
-                  multi={true}
+                  multiple={true}
                   onChange={[Function]}
                   onInputChange={[Function]}
                   placeholder="Add Owners"
@@ -512,6 +517,7 @@ exports[`RuleBuilder renders 1`] = `
                     filterOptions={[Function]}
                     loadOptions={[Function]}
                     multi={true}
+                    multiple={true}
                     onChange={[Function]}
                     onInputChange={[Function]}
                     placeholder="Add Owners"
@@ -527,6 +533,7 @@ exports[`RuleBuilder renders 1`] = `
                       filterOptions={[Function]}
                       loadOptions={[Function]}
                       multi={true}
+                      multiple={true}
                       onChange={[Function]}
                       onInputChange={[Function]}
                       placeholder="Add Owners"
@@ -545,6 +552,7 @@ exports[`RuleBuilder renders 1`] = `
                         loadOptions={[Function]}
                         loadingPlaceholder="Loading..."
                         multi={true}
+                        multiple={true}
                         onChange={[Function]}
                         onInputChange={[Function]}
                         options={Array []}
@@ -585,6 +593,7 @@ exports[`RuleBuilder renders 1`] = `
                           menuBuffer={0}
                           menuRenderer={[Function]}
                           multi={true}
+                          multiple={true}
                           noResultsText="Type to search"
                           onBlurResetsInput={true}
                           onChange={[Function]}
@@ -1289,6 +1298,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
           clearable={false}
           disabled={false}
           hideErrorMessage={false}
+          multiple={false}
           name="select-type"
           onChange={[Function]}
           options={
@@ -1313,7 +1323,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
           value="path"
         >
           <div
-            className="css-1bclqmz-BuilderSelect e1hyuoc76"
+            className="css-1bclqmz-BuilderSelect e1hyuoc76 control-group"
             style={
               Object {
                 "width": 140,
@@ -1327,6 +1337,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                 clearable={false}
                 disabled={false}
                 id="id-select-type"
+                multiple={false}
                 onChange={[Function]}
                 options={
                   Array [
@@ -1348,6 +1359,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                   clearable={false}
                   disabled={false}
                   id="id-select-type"
+                  multiple={false}
                   onChange={[Function]}
                   options={
                     Array [
@@ -1370,6 +1382,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                     clearable={false}
                     disabled={false}
                     id="id-select-type"
+                    multiple={false}
                     onChange={[Function]}
                     options={
                       Array [
@@ -1414,6 +1427,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                       menuBuffer={0}
                       menuRenderer={[Function]}
                       multi={false}
+                      multiple={false}
                       noResultsText="No results found"
                       onBlurResetsInput={true}
                       onChange={[Function]}
@@ -1765,7 +1779,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                   defaultOptions={true}
                   filterOptions={[Function]}
                   loadOptions={[Function]}
-                  multi={true}
+                  multiple={true}
                   onChange={[Function]}
                   onInputChange={[Function]}
                   placeholder="Add Owners"
@@ -1819,6 +1833,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                     filterOptions={[Function]}
                     loadOptions={[Function]}
                     multi={true}
+                    multiple={true}
                     onChange={[Function]}
                     onInputChange={[Function]}
                     placeholder="Add Owners"
@@ -1872,6 +1887,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                       filterOptions={[Function]}
                       loadOptions={[Function]}
                       multi={true}
+                      multiple={true}
                       onChange={[Function]}
                       onInputChange={[Function]}
                       placeholder="Add Owners"
@@ -1928,6 +1944,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                         loadOptions={[Function]}
                         loadingPlaceholder="Loading..."
                         multi={true}
+                        multiple={true}
                         onChange={[Function]}
                         onInputChange={[Function]}
                         options={Array []}
@@ -2006,6 +2023,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           menuBuffer={0}
                           menuRenderer={[Function]}
                           multi={true}
+                          multiple={true}
                           noResultsText="Type to search"
                           onBlurResetsInput={true}
                           onChange={[Function]}
