commit 240b39d8c8a208daecfac550df7f66f4728d9017
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Feb 22 11:23:22 2017 +0100

    Remove session parameter to safe_urlopen

diff --git a/src/sentry/http.py b/src/sentry/http.py
index daa0158e99..b0a8d8e197 100644
--- a/src/sentry/http.py
+++ b/src/sentry/http.py
@@ -139,7 +139,7 @@ build_session = SafeSession
 
 def safe_urlopen(url, method=None, params=None, data=None, json=None,
                  headers=None, allow_redirects=False, timeout=30,
-                 verify_ssl=True, user_agent=None, session=None):
+                 verify_ssl=True, user_agent=None):
     """
     A slightly safer version of ``urlib2.urlopen`` which prevents redirection
     and ensures the URL isn't attempting to hit a blacklisted IP range.
@@ -147,10 +147,7 @@ def safe_urlopen(url, method=None, params=None, data=None, json=None,
     if user_agent is not None:
         warnings.warn('user_agent is no longer used with safe_urlopen')
 
-    if session is None:
-        session = SafeSession()
-    elif not isinstance(session, SafeSession):
-        raise TypeError('safe_urlopen can only work with safe sessions')
+    session = SafeSession()
 
     kwargs = {}
 
diff --git a/tests/sentry/test_http.py b/tests/sentry/test_http.py
index 37e3d9e246..ad84f19732 100644
--- a/tests/sentry/test_http.py
+++ b/tests/sentry/test_http.py
@@ -2,7 +2,6 @@ from __future__ import absolute_import
 
 import ipaddress
 import platform
-import requests
 import responses
 import pytest
 
@@ -54,8 +53,3 @@ class HttpTest(TestCase):
         with pytest.raises(SuspiciousOperation):
             # '0177.0000.0000.0001' is an octal for '127.0.0.1'
             http.safe_urlopen('http://0177.0000.0000.0001')
-
-    def test_unsafe_session(self):
-        with pytest.raises(TypeError):
-            http.safe_urlopen('http://0177.0000.0000.0001',
-                              session=requests.Session())
