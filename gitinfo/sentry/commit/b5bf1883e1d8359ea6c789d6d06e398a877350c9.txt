commit b5bf1883e1d8359ea6c789d6d06e398a877350c9
Author: Dan Fuller <dfuller@sentry.io>
Date:   Thu Feb 20 18:35:19 2020 -0800

    refs(incidents): Remove IncidentActivity.event_stats_snapshot column from the database
    
    Follow up to https://github.com/getsentry/sentry/pull/17117

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index ee03aebc2b..a238a98342 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0046_auto_20200221_1735
+sentry: 0047_auto_20200224_2319
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/migrations/0047_auto_20200224_2319.py b/src/sentry/migrations/0047_auto_20200224_2319.py
new file mode 100644
index 0000000000..2fa5aea418
--- /dev/null
+++ b/src/sentry/migrations/0047_auto_20200224_2319.py
@@ -0,0 +1,37 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.28 on 2020-02-24 23:19
+from __future__ import unicode_literals
+
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+    dependencies = [("sentry", "0046_auto_20200221_1735")]
+
+    operations = [
+        migrations.RunSQL(
+            """
+            ALTER TABLE "sentry_incidentactivity" DROP COLUMN "event_stats_snapshot_id";
+            """,
+            reverse_sql="""
+                ALTER TABLE "sentry_incidentactivity" ADD COLUMN "event_stats_snapshot_id" bigint NULL;
+                """,
+        )
+    ]
