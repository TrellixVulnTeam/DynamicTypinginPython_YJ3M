commit f3ec49f9345e97d7838f3b6c5377e9da810b7393
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Nov 20 00:26:17 2015 -0800

    Enhanced privacy configuration
    
    This adds a new organizational-level configuration option which indicates the system should attempt to restrict use of PII and source code in things like outbound communications.
    
    Refs GH-2343

diff --git a/src/sentry/models/organization.py b/src/sentry/models/organization.py
index b57582d4b1..b34df51451 100644
--- a/src/sentry/models/organization.py
+++ b/src/sentry/models/organization.py
@@ -81,6 +81,7 @@ class Organization(Model):
 
     flags = BitField(flags=(
         ('allow_joinleave', 'Allow members to join and leave teams without requiring approval.'),
+        ('enhanced_privacy', 'Enable enhanced privacy controls to limit personally identifiable information (PII) as well as source code in things like notifications.'),
     ), default=1)
 
     objects = OrganizationManager(cache_fields=(
diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 5622f1a9af..445437318a 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -126,16 +126,7 @@ class MailPlugin(NotificationPlugin):
         event = notification.event
         group = event.group
         project = group.project
-
-        interface_list = []
-        for interface in event.interfaces.itervalues():
-            body = interface.to_email_html(event)
-            if not body:
-                continue
-            text_body = interface.to_string(event)
-            interface_list.append(
-                (interface.get_title(), mark_safe(body), text_body)
-            )
+        org = group.organization
 
         subject = group.get_email_subject()
 
@@ -147,20 +138,39 @@ class MailPlugin(NotificationPlugin):
         rules = []
         for rule in notification.rules:
             rule_link = reverse('sentry-edit-project-rule', args=[
-                group.organization.slug, project.slug, rule.id
+                org.slug, project.slug, rule.id
             ])
             rules.append((rule.label, rule_link))
 
+        enhanced_privacy = org.flags.enhanced_privacy
+
         context = {
             'project_label': project.get_full_name(),
             'group': group,
             'event': event,
-            'tags': event.get_tags(),
             'link': link,
-            'interfaces': interface_list,
             'rules': rules,
+            'enhanced_privacy': enhanced_privacy,
         }
 
+        # if the organization has enabled enhanced privacy controls we dont send
+        # data which may show PII or source code
+        if not enhanced_privacy:
+            interface_list = []
+            for interface in event.interfaces.itervalues():
+                body = interface.to_email_html(event)
+                if not body:
+                    continue
+                text_body = interface.to_string(event)
+                interface_list.append(
+                    (interface.get_title(), mark_safe(body), text_body)
+                )
+
+            context.update({
+                'tags': event.get_tags(),
+                'interfaces': interface_list,
+            })
+
         headers = {
             'X-Sentry-Logger': group.logger,
             'X-Sentry-Logger-Level': group.get_level_display(),
diff --git a/src/sentry/templates/sentry/emails/error.html b/src/sentry/templates/sentry/emails/error.html
index 37fe9bc630..7e7292c116 100644
--- a/src/sentry/templates/sentry/emails/error.html
+++ b/src/sentry/templates/sentry/emails/error.html
@@ -32,25 +32,30 @@
       <div class="event-date">{{ event.datetime }} UTC</div>
     </div>
 
-    {% for label, html, _ in interfaces %}
-    <div class="interface">
-        <h3 class="title">{{ label }}</h3>
-        {{ html }}
-    </div>
-    {% endfor %}
+    {% if enhanced_privacy %}
+      <p><em>Details about this issue are not shown in this notification since enhanced privacy
+        controls are enabled. For more details about this issue, view this issue on Sentry.</em></p>
+    {% else %}
+      {% for label, html, _ in interfaces %}
+      <div class="interface">
+          <h3 class="title">{{ label }}</h3>
+          {{ html }}
+      </div>
+      {% endfor %}
 
-    {% if tags %}
-      <h3>Tags</h3>
+      {% if tags %}
+        <h3>Tags</h3>
 
-      <ul class="tag-list">
-      {% for tag_key, tag_value in tags %}
-        <li>
-            <strong>{{ tag_key }}</strong>
-            <em>=</em>
-            <span><a href="{% absolute_uri project_link %}?{{ tag_key }}={{ tag_value }}">{{ tag_value }}</a> {% if tag_value|is_url %}<a href="{{ tag_value|truncatechars:50 }}" class="icon-share"></a>{% endif %}</span>
-        </li>
-      {% endfor %}
-      </ul>
+        <ul class="tag-list">
+        {% for tag_key, tag_value in tags %}
+          <li>
+              <strong>{{ tag_key }}</strong>
+              <em>=</em>
+              <span><a href="{% absolute_uri project_link %}?{{ tag_key }}={{ tag_value }}">{{ tag_value }}</a> {% if tag_value|is_url %}<a href="{{ tag_value|truncatechars:50 }}" class="icon-share"></a>{% endif %}</span>
+          </li>
+        {% endfor %}
+        </ul>
+      {% endif %}
     {% endif %}
 
     {% if rules %}
diff --git a/src/sentry/templates/sentry/emails/error.txt b/src/sentry/templates/sentry/emails/error.txt
index 76381272f4..3fe978a071 100644
--- a/src/sentry/templates/sentry/emails/error.txt
+++ b/src/sentry/templates/sentry/emails/error.txt
@@ -8,7 +8,11 @@ Details
 -------
 
 {{ link }}
-
+{% if enhanced_privacy %}
+Details about this issue are not shown in this notification since enhanced
+privacy controls are enabled. For more details about this issue, view this
+issue on Sentry.
+{% else %}
 Tags
 ----
 {% for tag_key, tag_value in tags %}
@@ -21,6 +25,6 @@ Tags
 {{ text }}
 
 {% endfor %}
-{% endif %}
+{% endif %}{% endif %}
 {% endautoescape %}
 {% endspaceless %}
diff --git a/src/sentry/templates/sentry/organization-settings.html b/src/sentry/templates/sentry/organization-settings.html
index 8da00d3f6d..9069bb9cc9 100644
--- a/src/sentry/templates/sentry/organization-settings.html
+++ b/src/sentry/templates/sentry/organization-settings.html
@@ -29,6 +29,10 @@
         {{ form.default_role|as_crispy_field }}
         {{ form.allow_joinleave|as_crispy_field }}
 
+        <legend>Security &amp; Privacy</legend>
+
+        {{ form.enhanced_privacy|as_crispy_field }}
+
         <fieldset class="form-actions">
           <button type="submit" class="btn btn-primary btn-lg">{% trans "Save Changes" %}</button>
         </fieldset>
diff --git a/src/sentry/web/frontend/organization_settings.py b/src/sentry/web/frontend/organization_settings.py
index 533f272d94..0939c0d92f 100644
--- a/src/sentry/web/frontend/organization_settings.py
+++ b/src/sentry/web/frontend/organization_settings.py
@@ -29,6 +29,11 @@ class OrganizationSettingsForm(forms.ModelForm):
         choices=roles.get_choices(),
         help_text=_('The default role new members will receive.'),
     )
+    enhanced_privacy = forms.BooleanField(
+        label=_('Enhanced Privacy'),
+        help_text=_('Enable enhanced privacy controls to limit personally identifiable information (PII) as well as source code in things like notifications.'),
+        required=False,
+    )
 
     class Meta:
         fields = ('name', 'slug', 'default_role')
@@ -44,7 +49,8 @@ class OrganizationSettingsView(OrganizationView):
             instance=organization,
             initial={
                 'default_role': organization.default_role,
-                'allow_joinleave': bool(getattr(organization.flags, 'allow_joinleave')),
+                'allow_joinleave': bool(organization.flags.allow_joinleave),
+                'enhanced_privacy': bool(organization.flags.enhanced_privacy),
             }
         )
 
@@ -52,7 +58,8 @@ class OrganizationSettingsView(OrganizationView):
         form = self.get_form(request, organization)
         if form.is_valid():
             instance = form.save(commit=False)
-            setattr(instance.flags, 'allow_joinleave', form.cleaned_data['allow_joinleave'])
+            instance.flags.allow_joinleave = form.cleaned_data['allow_joinleave']
+            instance.flags.enhanced_privacy = form.cleaned_data['enhanced_privacy']
             instance.save()
 
             AuditLogEntry.objects.create(
