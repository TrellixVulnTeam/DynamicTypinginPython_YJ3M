commit 307580ab791c7139834b80cc6ca923e76860669d
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Aug 5 22:44:03 2014 -0700

    Working barcharts on stream

diff --git a/src/sentry/static/sentry/app/controllers/projectStream.js b/src/sentry/static/sentry/app/controllers/projectStream.js
index 989ab2e9d1..b7e2718af6 100644
--- a/src/sentry/static/sentry/app/controllers/projectStream.js
+++ b/src/sentry/static/sentry/app/controllers/projectStream.js
@@ -30,6 +30,7 @@
 
     setChartDuration: function(duration) {
       this.$scope.chartDuration = duration;
+      console.log(duration);
       angular.forEach(this.$scope.groupList, function(group){
         group.activeChartData = group.stats[duration];
       });
diff --git a/src/sentry/static/sentry/app/modules/charts.js b/src/sentry/static/sentry/app/modules/charts.js
index 206b5e6e0e..eeeed2bda9 100644
--- a/src/sentry/static/sentry/app/modules/charts.js
+++ b/src/sentry/static/sentry/app/modules/charts.js
@@ -1,166 +1,64 @@
 (function(){
   'use strict';
 
-  var average = function(a) {
-      var r = {mean: 0, variance: 0, deviation: 0}, t = a.length;
-      for (var m, s = 0, l = t; l--; s += a[l]);
-      for (m = r.mean = s / t, l = t, s = 0; l--; s += Math.pow(a[l] - m, 2));
-      r.deviation = Math.sqrt(r.variance = s / t);
-      return r;
-  };
-
-  var percentile = function(a, nth) {
-      a = a.sort();
-      a.slice(0, a.length - Math.floor(nth / a.length));
-      return average(a);
-  };
+  function createSimpleBarChart(el, points, options) {
+    // TODO: maxval could default to # of hours since first_seen / times_seen
+    var $el = $(el),
+        existing = $el.children(),
+        maxval = 10,
+        title, point, pct, child, point_width;
+
+    if (options === undefined) {
+      options = {};
+    }
 
-  var timeUnitSize = {
-      "second": 1000,
-      "minute": 60 * 1000,
-      "hour": 60 * 60 * 1000,
-      "day": 24 * 60 * 60 * 1000,
-      "month": 30 * 24 * 60 * 60 * 1000,
-      "quarter": 3 * 30 * 24 * 60 * 60 * 1000,
-      "year": 365.2425 * 24 * 60 * 60 * 1000
-  };
+    for (var i=0; i<points.length; i++) {
+      point = points[i];
+      if (typeof(point) === "number") {
+        point = points[i] = {
+          y: point
+        };
+      } else if (point.y === undefined) {
+        point = points[i] = {x: point[0], y: point[1]};
+      }
 
-  var tickFormatter = function (value, axis) {
-    var d = moment(value);
+      if (point.y > maxval) {
+        maxval = point.y;
+      }
+    }
 
-    var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];
-    var span = axis.max - axis.min;
-    var fmt;
+    point_width = app.utils.floatFormat(100.0 / points.length, 2) + '%';
 
-    if (t < timeUnitSize.minute) {
-      fmt = 'LT';
-    } else if (t < timeUnitSize.day) {
-      fmt = 'LT';
-      if (span < 2 * timeUnitSize.day) {
-        fmt = 'LT';
-      } else {
-        fmt = 'MMM D LT';
+    // TODO: we should only remove nodes that are no longer valid
+    for (i=0; i<points.length; i++) {
+      point = points[i];
+      pct = app.utils.floatFormat(point.y / maxval * 99, 2) + '%';
+      title = point.y + ' events';
+      if (point.label) {
+        title = title + '<br>(' + point.label + ')';
       }
-    } else if (t < timeUnitSize.month) {
-      fmt = 'MMM D';
-    } else if (t < timeUnitSize.year) {
-      if (span < timeUnitSize.year) {
-        fmt = 'MMM';
+      if (existing.get(i) === undefined) {
+        $('<a style="width:' + point_width + ';" rel="tooltip" title="' + title + '"><span style="height:' + pct + '">' + point.y + '</span></a>').tooltip({
+          placement: options.placement || 'bottom',
+          html: true,
+          container: 'body'
+        }).appendTo($el);
       } else {
-        fmt = 'MMM YY';
+        $(existing[i]).find('span').css('height', pct).text(point.y).attr('title', (point.label || point.y));
       }
-    } else {
-      fmt = 'YY';
     }
-
-    return d.format(fmt);
-  };
-
-  function createBasicChart(el, url){
-    $.ajax({
-      url: url,
-      type: 'get',
-      dataType: 'json',
-      data: {
-        since: new Date().getTime() / 1000 - 3600 * 24 * 7,
-        resolution: '1h'
-      },
-      success: function(data){
-        var inputs = [], avg, i, data_avg = [], p_95th, max_y = 10;
-        for (i = 0; i < data.length; i++) {
-          inputs.push(data[i][1]);
-
-          // set timestamp to be in millis
-          data[i][0] = data[i][0] * 1000;
-
-          if (data[i][1] > max_y) {
-            max_y = data[i][1];
-          }
-        }
-        p_95th = percentile(inputs);
-
-        for (i = 0; i < data.length; i++) {
-          data_avg.push([data[i][0], p_95th.mean]);
-        }
-
-        var points = [
-          {
-            data: data,
-            color: 'rgba(86, 175, 232, 1)',
-            shadowSize: 0,
-            lines: {
-              lineWidth: 2,
-              show: true,
-              fill: false
-            }
-          },
-          {
-            data: data_avg,
-            color: 'rgba(244, 63, 32, .4)',
-            // color: '#000000',
-            shadowSize: 0,
-            dashes: {
-              lineWidth: 2,
-              show: true,
-              fill: false
-            }
-          }
-        ];
-        var options = {
-          xaxis: {
-            mode: "time",
-            tickFormatter: tickFormatter
-          },
-          yaxis: {
-            min: 0,
-            max: max_y,
-            tickFormatter: function(value) {
-              if (value > 999999) {
-                return (value / 1000000) + 'mm';
-              }
-              if (value > 999) {
-                return (value / 1000) + 'k';
-              }
-              return value;
-            }
-          },
-          tooltip: true,
-          tooltipOpts: {
-            content: function(label, xval, yval, flotItem) {
-              return yval + ' events<br>' + moment(xval).format('llll');
-            },
-            defaultTheme: false
-          },
-          grid: {
-            show: true,
-            hoverable: true,
-            backgroundColor: '#ffffff',
-            borderColor: '#DEE3E9',
-            borderWidth: 2,
-            tickColor: '#DEE3E9'
-          },
-          hoverable: false,
-          legend: {
-            noColumns: 5
-          },
-          lines: { show: false }
-        };
-
-        $.plot(el, points, options);
-
-        $(window).resize(function(){
-          $.plot(el, points, options);
-        });
-
-      }
-
-    });
   }
 
   angular.module('sentry.charts', [])
-    .directive('simpleChart', function() {
-      return function(scope, element, attrs){
-        createBasicChart(element, attrs.simpleChart);
+    .directive('barchart', function() {
+      return {
+        restrict: 'E',
+        link: function(scope, element, attrs){
+          scope.$watch(attrs.data, function(value){
+            element.empty();
+            createSimpleBarChart(element, value, scope.$eval(attrs.options));
+          });
+        }
       };
     });
 }());
diff --git a/src/sentry/templates/sentry/groups/group_list.html b/src/sentry/templates/sentry/groups/group_list.html
index de774e6302..5bb869e203 100644
--- a/src/sentry/templates/sentry/groups/group_list.html
+++ b/src/sentry/templates/sentry/groups/group_list.html
@@ -157,7 +157,6 @@
         </li>
     </ul>
 
-
     <div class="stream-pagination">
         <div class="btn-group pull-right">
             {% spaceless %}
