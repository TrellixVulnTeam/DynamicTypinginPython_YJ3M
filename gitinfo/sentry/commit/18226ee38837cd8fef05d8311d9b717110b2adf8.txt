commit 18226ee38837cd8fef05d8311d9b717110b2adf8
Author: KKaempen <32143113+KKaempen@users.noreply.github.com>
Date:   Tue Jun 9 16:46:43 2020 -0500

    feat(slack): Allow matching on Slack display name (#19211)
    
    When configuring an alert rule, allow users to select a user to send to by the user's display name. In the case that the display name isn't unique, this will error out and recommend giving the user's username instead (which, while deprecated, can still be found at <workspace name>.slack.com/account/settings). Tested manually and with unit tests.
    
    Fixes API-1024

diff --git a/src/sentry/incidents/logic.py b/src/sentry/incidents/logic.py
index 4a677fc83f..91b6e6794f 100644
--- a/src/sentry/incidents/logic.py
+++ b/src/sentry/incidents/logic.py
@@ -41,6 +41,7 @@ from sentry.snuba.subscriptions import (
 )
 from sentry.snuba.tasks import build_snuba_filter
 from sentry.utils.snuba import bulk_raw_query, SnubaQueryParams, SnubaTSResult
+from sentry.shared_integrations.exceptions import DuplicateDisplayNameError
 
 # We can return an incident as "windowed" which returns a range of points around the start of the incident
 # It attempts to center the start of the incident, only showing earlier data if there isn't enough time
@@ -998,7 +999,17 @@ def update_alert_rule_trigger_action(
 def get_alert_rule_trigger_action_slack_channel_id(organization, integration_id, name):
     from sentry.integrations.slack.utils import get_channel_id
 
-    _prefix, channel_id, timed_out = get_channel_id(organization, integration_id, name,)
+    try:
+        _prefix, channel_id, timed_out = get_channel_id(organization, integration_id, name,)
+    except DuplicateDisplayNameError as e:
+        integration = Integration.objects.get(id=integration_id)
+        domain = integration.metadata["domain_name"]
+
+        raise InvalidTriggerActionError(
+            'Multiple users were found with display name "%s". Please use your username, found at %s/account/settings.'
+            % (e.message, domain)
+        )
+
     if timed_out:
         raise InvalidTriggerActionError(
             "Could not find channel %s. We have timed out trying to look for it. " % name
diff --git a/src/sentry/integrations/slack/notify_action.py b/src/sentry/integrations/slack/notify_action.py
index fa96633f4e..503923c221 100644
--- a/src/sentry/integrations/slack/notify_action.py
+++ b/src/sentry/integrations/slack/notify_action.py
@@ -8,7 +8,7 @@ from django.utils.translation import ugettext_lazy as _
 from sentry.rules.actions.base import EventAction
 from sentry.utils import metrics, json
 from sentry.models import Integration
-from sentry.shared_integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError, DuplicateDisplayNameError
 
 from .client import SlackClient
 from .utils import build_group_attachment, get_channel_id, strip_channel_name
@@ -44,7 +44,22 @@ class SlackNotifyServiceForm(forms.Form):
         workspace = cleaned_data.get("workspace")
         channel = cleaned_data.get("channel", "")
 
-        channel_prefix, channel_id, timed_out = self.channel_transformer(workspace, channel)
+        try:
+            channel_prefix, channel_id, timed_out = self.channel_transformer(workspace, channel)
+        except DuplicateDisplayNameError as e:
+            integration = Integration.objects.get(id=workspace)
+            domain = integration.metadata["domain_name"]
+
+            params = {"channel": e.message, "domain": domain}
+
+            raise forms.ValidationError(
+                _(
+                    'Multiple users were found with display name "%(channel)s". Please use your username, found at %(domain)s/account/settings.',
+                ),
+                code="invalid",
+                params=params,
+            )
+
         channel = strip_channel_name(channel)
 
         if channel_id is None and timed_out:
diff --git a/src/sentry/integrations/slack/tasks.py b/src/sentry/integrations/slack/tasks.py
index 8fa09c7bc3..d5cd47ba37 100644
--- a/src/sentry/integrations/slack/tasks.py
+++ b/src/sentry/integrations/slack/tasks.py
@@ -11,6 +11,7 @@ from sentry.mediators import project_rules
 from sentry.models import Integration, Project, Rule
 from sentry.integrations.slack.utils import get_channel_id_with_timeout, strip_channel_name
 from sentry.utils.redis import redis_clusters
+from sentry.shared_integrations.exceptions import DuplicateDisplayNameError
 
 
 class RedisRuleStatus(object):
@@ -90,7 +91,15 @@ def find_channel_id_for_rule(
     # we dont' know exactly how long it will take to paginate through all of the slack
     # endpoints but need some time limit imposed. 3 minutes should be more than enough time,
     # we can always update later
-    (prefix, item_id, _timed_out) = get_channel_id_with_timeout(integration, channel_name, 3 * 60)
+    try:
+        (prefix, item_id, _timed_out) = get_channel_id_with_timeout(
+            integration, channel_name, 3 * 60
+        )
+    except DuplicateDisplayNameError:
+        # if we find a duplicate display name and nothing else, we
+        # want to set the status to failed. This just lets us skip
+        # over the next block and hit the failed status at the end.
+        item_id = None
 
     if item_id:
         for action in actions:
diff --git a/src/sentry/integrations/slack/utils.py b/src/sentry/integrations/slack/utils.py
index 2d80a8e64d..18dcc0e88f 100644
--- a/src/sentry/integrations/slack/utils.py
+++ b/src/sentry/integrations/slack/utils.py
@@ -28,7 +28,7 @@ from sentry.models import (
     ReleaseProject,
 )
 
-from sentry.shared_integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError, DuplicateDisplayNameError
 from .client import SlackClient
 
 logger = logging.getLogger("sentry.integrations.slack")
@@ -411,6 +411,8 @@ def get_channel_id_with_timeout(integration, name, timeout):
     time_to_quit = time.time() + timeout
 
     client = SlackClient()
+    id_data = None
+    found_duplicate = False
     for list_type, result_name, prefix in LIST_TYPES:
         cursor = ""
         while True:
@@ -424,9 +426,20 @@ def get_channel_id_with_timeout(integration, name, timeout):
                 )
                 return (prefix, None, False)
 
-            item_id = {c["name"]: c["id"] for c in items[result_name]}.get(name)
-            if item_id:
-                return (prefix, item_id, False)
+            for c in items[result_name]:
+                # The "name" field is unique (this is the username for users)
+                # so we return immediately if we find a match.
+                if c["name"] == name:
+                    return (prefix, c["id"], False)
+                # If we don't get a match on a unique identifier, we look through
+                # the users' display names, and error if there is a repeat.
+                if list_type == "users":
+                    profile = c.get("profile")
+                    if profile and profile.get("display_name") == name:
+                        if id_data:
+                            found_duplicate = True
+                        else:
+                            id_data = (prefix, c["id"], False)
 
             cursor = items.get("response_metadata", {}).get("next_cursor", None)
             if time.time() > time_to_quit:
@@ -434,6 +447,10 @@ def get_channel_id_with_timeout(integration, name, timeout):
 
             if not cursor:
                 break
+        if found_duplicate:
+            raise DuplicateDisplayNameError(name)
+        elif id_data:
+            return id_data
 
     return (prefix, None, False)
 
diff --git a/src/sentry/shared_integrations/exceptions.py b/src/sentry/shared_integrations/exceptions.py
index e151b9ec01..076f0e464a 100644
--- a/src/sentry/shared_integrations/exceptions.py
+++ b/src/sentry/shared_integrations/exceptions.py
@@ -83,6 +83,10 @@ class IntegrationError(Exception):
     pass
 
 
+class DuplicateDisplayNameError(IntegrationError):
+    pass
+
+
 class IntegrationFormError(IntegrationError):
     def __init__(self, field_errors):
         super(IntegrationFormError, self).__init__("Invalid integration action")
diff --git a/tests/sentry/integrations/slack/test_utils.py b/tests/sentry/integrations/slack/test_utils.py
index 094fafeae3..a3c68b6c33 100644
--- a/tests/sentry/integrations/slack/test_utils.py
+++ b/tests/sentry/integrations/slack/test_utils.py
@@ -3,6 +3,7 @@ import six
 
 import responses
 from django.core.urlresolvers import reverse
+import pytest
 
 from sentry.integrations.slack.utils import (
     build_group_attachment,
@@ -18,6 +19,7 @@ from sentry.utils import json
 from sentry.utils.assets import get_asset_url
 from sentry.utils.dates import to_timestamp
 from sentry.utils.http import absolute_uri
+from sentry.shared_integrations.exceptions import DuplicateDisplayNameError
 
 
 class GetChannelIdTest(TestCase):
@@ -42,7 +44,11 @@ class GetChannelIdTest(TestCase):
         )
         self.add_list_response(
             "users",
-            [{"name": "morty", "id": "m"}, {"name": "other-user", "id": "o-u"}],
+            [
+                {"name": "morty", "id": "m", "profile": {"display_name": "Morty"}},
+                {"name": "other-user", "id": "o-u", "profile": {"display_name": "Jimbob"}},
+                {"name": "better_morty", "id": "bm", "profile": {"display_name": "Morty"}},
+            ],
             result_name="members",
         )
 
@@ -72,6 +78,13 @@ class GetChannelIdTest(TestCase):
     def test_valid_member_selected(self):
         self.run_valid_test("@morty", MEMBER_PREFIX, "m", False)
 
+    def test_valid_member_selected_display_name(self):
+        self.run_valid_test("@Jimbob", MEMBER_PREFIX, "o-u", False)
+
+    def test_invalid_member_selected_display_name(self):
+        with pytest.raises(DuplicateDisplayNameError):
+            get_channel_id(self.organization, self.integration.id, "@Morty")
+
     def test_invalid_channel_selected(self):
         assert get_channel_id(self.organization, self.integration.id, "#fake-channel")[1] is None
         assert get_channel_id(self.organization, self.integration.id, "@fake-user")[1] is None
