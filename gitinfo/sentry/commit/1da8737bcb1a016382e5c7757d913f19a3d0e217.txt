commit 1da8737bcb1a016382e5c7757d913f19a3d0e217
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue May 28 09:59:00 2019 -0700

    ref(onboarding): Simplify SetupChoices component (#13398)

diff --git a/src/sentry/static/sentry/app/views/onboarding/projectSetup/setupChoices.jsx b/src/sentry/static/sentry/app/views/onboarding/projectSetup/setupChoices.jsx
index 63af66f776..67841ce94a 100644
--- a/src/sentry/static/sentry/app/views/onboarding/projectSetup/setupChoices.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/projectSetup/setupChoices.jsx
@@ -7,39 +7,28 @@ const itemsShape = PropTypes.shape({
   title: PropTypes.string.isRequired,
 });
 
-/**
- * Visually fancy choice-card component with an animated hover effect that
- * follows the focused choice. Uses react-pose to handle animations of the
- * background element by passing the computed rect
- */
-class SetupChoices extends React.Component {
-  static propTypes = {
-    choices: PropTypes.arrayOf(itemsShape),
-    selectedChoice: PropTypes.string,
-    onSelect: PropTypes.func,
-  };
+const SetupChoices = ({choices, selectedChoice, onSelect}) => (
+  <NavTabs underlined={true}>
+    {choices.map(({id, title}) => (
+      <li key={id} className={id === selectedChoice ? 'active' : null}>
+        <a
+          href="#"
+          onClick={e => {
+            onSelect(id);
+            e.preventDefault();
+          }}
+        >
+          {title}
+        </a>
+      </li>
+    ))}
+  </NavTabs>
+);
 
-  render() {
-    const {choices, selectedChoice, onSelect} = this.props;
-
-    return (
-      <NavTabs underlined={true}>
-        {choices.map(({id, title}) => (
-          <li key={id} className={id === selectedChoice ? 'active' : null}>
-            <a
-              href="#"
-              onClick={e => {
-                onSelect(id);
-                e.preventDefault();
-              }}
-            >
-              {title}
-            </a>
-          </li>
-        ))}
-      </NavTabs>
-    );
-  }
-}
+SetupChoices.propTypes = {
+  choices: PropTypes.arrayOf(itemsShape),
+  selectedChoice: PropTypes.string,
+  onSelect: PropTypes.func,
+};
 
 export default SetupChoices;
