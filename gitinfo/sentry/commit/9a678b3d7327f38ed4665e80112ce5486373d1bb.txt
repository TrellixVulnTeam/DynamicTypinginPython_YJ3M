commit 9a678b3d7327f38ed4665e80112ce5486373d1bb
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 9 15:09:56 2015 -0600

    Add internal python Raven client

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 65c0e9906e..39d1f7c934 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -431,6 +431,9 @@ STATSD_CLIENT = 'django_statsd.clients.null'
 
 # Sentry and Raven configuration
 
+SENTRY_CLIENT = 'sentry.utils.raven.SentryInternalClient'
+
+# Is this an on-premise install? (should things be generally more open)
 SENTRY_PUBLIC = False
 
 # Default project ID for recording internal exceptions
diff --git a/src/sentry/utils/raven.py b/src/sentry/utils/raven.py
new file mode 100644
index 0000000000..04fbf80fcd
--- /dev/null
+++ b/src/sentry/utils/raven.py
@@ -0,0 +1,28 @@
+from __future__ import absolute_import, print_function
+
+from django.conf import settings
+from django.db import transaction
+from raven.contrib.django.client import DjangoClient
+
+from sentry.event_manager import EventManager
+
+
+class SentryInternalClient(DjangoClient):
+    def is_enabled(self):
+        return settings.SENTRY_PROJECT is not None
+
+    def send(self, project, **kwargs):
+        if transaction.is_dirty():
+            transaction.rollback()
+
+        try:
+            manager = EventManager(kwargs)
+            manager.normalize()
+            print ('here')
+            return manager.save(project)
+        except Exception as e:
+            if self.raise_send_errors:
+                raise
+            self.error_logger.error(
+                'Unable to record event: %s\nEvent was: %r', e,
+                kwargs['message'], exc_info=True)
