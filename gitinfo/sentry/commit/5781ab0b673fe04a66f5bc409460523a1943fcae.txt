commit 5781ab0b673fe04a66f5bc409460523a1943fcae
Author: adhiraj <693121+adhiraj@users.noreply.github.com>
Date:   Fri Aug 31 14:55:41 2018 -0700

    ref(experiment): Change logExperiment method API (#9588)
    
    This is to match the change in getsentry that converts the exposure logging endpoint to JSON.

diff --git a/src/sentry/static/sentry/app/utils/logExperiment.jsx b/src/sentry/static/sentry/app/utils/logExperiment.jsx
index 341c8334b8..f4e2ae88dc 100644
--- a/src/sentry/static/sentry/app/utils/logExperiment.jsx
+++ b/src/sentry/static/sentry/app/utils/logExperiment.jsx
@@ -1,18 +1,26 @@
 import HookStore from 'app/stores/hookStore';
 
 /**
- * @param {String} experimentName Name of the experiment
- * @param {Object} experiments Config
- * @param {Object} data Experiment data to be recorded: {unit_name, unit_id, params}
- * 					note that params need to be string
+ * @param {Object} experiments: Config
+ * @param {String} param: assignment parameter, e.g. "color"
  */
-export default function logExperiment(experimentName, experiments, data) {
+export default function logExperiment(
+  experiments,
+  experimentName,
+  unitName,
+  unitId,
+  param
+) {
   let assignment = experiments[experimentName];
-  let param = data.params;
+  if (assignment === null || assignment === undefined) return;
 
-  if (assignment === null) return;
-
-  data.experiment_name = experimentName;
-  data.params = `{${param}: ${assignment}}`;
+  let data = {
+    experiment_name: experimentName,
+    unit_name: unitName,
+    unit_id: unitId,
+    params: {
+      [param]: assignment,
+    },
+  };
   HookStore.get('analytics:log-experiment').forEach(cb => cb(data));
 }
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx
index 615620322d..72de3805c5 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx
@@ -23,12 +23,14 @@ class SettingsNavigation extends React.Component {
     let {organization} = this.props;
     if (!organization || !organization.experiments) return;
 
-    //Experiment exposure is already assigned - this logs the exposure i.e. when the user gets to the settings page
-    logExperiment('SSOPaywallExperiment', organization.experiments, {
-      unit_name: 'org_id',
-      unit_id: organization.id,
-      params: 'exposed',
-    });
+    // Experiment exposure is already assigned - this logs the exposure i.e. when the user gets to the settings page
+    logExperiment(
+      organization.experiments,
+      'SSOPaywallExperiment',
+      'org_id',
+      organization.id,
+      'exposed'
+    );
   }
 
   render() {
diff --git a/tests/js/spec/utils/logExperiment.spec.jsx b/tests/js/spec/utils/logExperiment.spec.jsx
index 4bff198551..44703d8b37 100644
--- a/tests/js/spec/utils/logExperiment.spec.jsx
+++ b/tests/js/spec/utils/logExperiment.spec.jsx
@@ -17,17 +17,19 @@ describe('utils/logExperiment', function() {
 
   it('logs experiment for those with assignment', function() {
     let experiments = {testExperimentName: 0};
-    let data = {unit_name: 'org_id', unit_id: 1, params: 'exposed'};
-    logExperiment('testExperimentName', experiments, data);
-    data.experiment_name = 'testExperimentName';
-    data.params = '{exposed: 0}';
-    expect(myMockFn).toHaveBeenCalledWith(data);
+    logExperiment(experiments, 'testExperimentName', 'org_id', 1, 'exposed');
+    expect(myMockFn).toHaveBeenCalledWith({
+      experiment_name: 'testExperimentName',
+      unit_name: 'org_id',
+      unit_id: 1,
+      params: {
+        exposed: 0,
+      },
+    });
   });
 
   it('does not log experiment without assignment', function() {
-    let experiments = {testExperimentName: null};
-    let data = {unit_name: 'org_id', unit_id: 1, params: 'exposed'};
-    logExperiment('testExperimentName', experiments, data);
+    logExperiment({}, 'testExperimentName', 'org_id', 1, 'exposed');
     expect(myMockFn).toHaveBeenCalledTimes(0);
   });
 });
