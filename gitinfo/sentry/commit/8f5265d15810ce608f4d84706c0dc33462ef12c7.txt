commit 8f5265d15810ce608f4d84706c0dc33462ef12c7
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Apr 9 09:10:12 2015 -0400

    Various celery standardization

diff --git a/src/sentry/celery.py b/src/sentry/celery.py
new file mode 100644
index 0000000000..1f89923005
--- /dev/null
+++ b/src/sentry/celery.py
@@ -0,0 +1,29 @@
+from __future__ import absolute_import
+
+import os
+import os.path
+import sys
+
+# Add the project to the python path
+sys.path.insert(0, os.path.join(os.path.dirname(__file__), os.pardir))
+sys.stdout = sys.stderr
+
+# Configure the application (Logan) only if it seemingly isnt already
+# configured
+from django.conf import settings
+if not settings.configured:
+    from sentry.utils.runner import configure
+    configure()
+
+from celery import Celery
+
+app = Celery('sentry')
+
+# Using a string here means the worker will not have to
+# pickle the object when using Windows.
+app.config_from_object(settings)
+app.autodiscover_tasks(lambda: settings.INSTALLED_APPS)
+
+
+if __name__ == '__main__':
+    app.start()
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index f5766c2b83..ac2f3837a1 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -231,7 +231,6 @@ INSTALLED_APPS = (
 
     'captcha',
     'crispy_forms',
-    'djcelery',
     'gunicorn',
     'kombu.transport.django',
     'raven.contrib.django.raven_compat',
@@ -351,6 +350,7 @@ from kombu import Exchange, Queue
 BROKER_URL = "django://"
 
 CELERY_ALWAYS_EAGER = True
+CELERY_EAGER_PROPAGATES_EXCEPTIONS = True
 CELERY_IGNORE_RESULT = True
 CELERY_SEND_EVENTS = False
 CELERY_RESULT_BACKEND = None
diff --git a/src/sentry/tasks/base.py b/src/sentry/tasks/base.py
index 8bef43e7a4..82aeb5075d 100644
--- a/src/sentry/tasks/base.py
+++ b/src/sentry/tasks/base.py
@@ -7,9 +7,10 @@ sentry.tasks.base
 """
 from __future__ import absolute_import
 
-from celery.task import current, task
+from celery.task import current
 from functools import wraps
 
+from sentry.celery import app
 from sentry.utils import metrics
 
 
@@ -23,7 +24,7 @@ def instrumented_task(name, stat_suffix=None, **kwargs):
             with metrics.timer(key):
                 result = func(*args, **kwargs)
             return result
-        return task(name=name, **kwargs)(_wrapped)
+        return app.task(name=name, **kwargs)(_wrapped)
     return wrapped
 
 
diff --git a/src/sentry/utils/pytest.py b/src/sentry/utils/pytest.py
index 5ea2e897d2..f38257a2df 100644
--- a/src/sentry/utils/pytest.py
+++ b/src/sentry/utils/pytest.py
@@ -77,6 +77,7 @@ def pytest_configure(config):
     settings.RECAPTCHA_PRIVATE_KEY = 'b' * 40
 
     settings.CELERY_ALWAYS_EAGER = False
+    settings.CELERY_EAGER_PROPAGATES_EXCEPTIONS = True
 
     settings.DISABLE_RAVEN = True
 
@@ -97,10 +98,12 @@ def pytest_configure(config):
     from sentry.testutils.cases import flush_redis
     flush_redis()
 
-    from sentry.utils.runner import initialize_celery, initialize_receivers
-    initialize_celery(settings)
+    from sentry.utils.runner import initialize_receivers
     initialize_receivers()
 
+    # force celery registration
+    from sentry.celery import app  # NOQA
+
 
 def pytest_runtest_teardown(item):
     from redis import StrictRedis
diff --git a/src/sentry/utils/runner.py b/src/sentry/utils/runner.py
index 8ab61d7617..06fdf5d6af 100644
--- a/src/sentry/utils/runner.py
+++ b/src/sentry/utils/runner.py
@@ -322,8 +322,6 @@ def initialize_app(config):
 
     apply_legacy_settings(config)
 
-    initialize_celery(settings)
-
     # Commonly setups don't correctly configure themselves for production envs
     # so lets try to provide a bit more guidance
     if settings.CELERY_ALWAYS_EAGER and not settings.DEBUG:
@@ -338,15 +336,6 @@ def initialize_app(config):
     initialize_receivers()
 
 
-def initialize_celery(settings):
-    # Configure celery
-    import djcelery
-    djcelery.setup_loader()
-
-    from celery.app import default_app
-    default_app.config_from_object(settings, force=True)
-
-
 def apply_legacy_settings(config):
     settings = config['settings']
 
