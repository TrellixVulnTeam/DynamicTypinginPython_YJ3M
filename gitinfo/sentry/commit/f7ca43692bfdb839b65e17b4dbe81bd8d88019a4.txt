commit f7ca43692bfdb839b65e17b4dbe81bd8d88019a4
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Aug 28 21:17:20 2015 +0200

    Fixed organization project listing endpoint for API key requests.

diff --git a/src/sentry/api/endpoints/organization_projects.py b/src/sentry/api/endpoints/organization_projects.py
index fdec0e499e..af9b168230 100644
--- a/src/sentry/api/endpoints/organization_projects.py
+++ b/src/sentry/api/endpoints/organization_projects.py
@@ -5,22 +5,46 @@ from rest_framework.response import Response
 from sentry.api.base import DocSection
 from sentry.api.bases.organization import OrganizationEndpoint
 from sentry.api.serializers import serialize
-from sentry.models import Project
+from sentry.models import Project, Team
+from sentry.utils.apidocs import scenario, attach_scenarios
+
+
+@scenario('ListOrganizationProjects')
+def list_organization_projects_scenario(runner):
+    runner.request(
+        method='GET',
+        path='/organizations/%s/projects/' % runner.org.slug
+    )
 
 
 class OrganizationProjectsEndpoint(OrganizationEndpoint):
     doc_section = DocSection.ORGANIZATIONS
 
+    @attach_scenarios([list_organization_projects_scenario])
     def get(self, request, organization):
         """
         List an Organization's Projects
         ```````````````````````````````
 
         Return a list of projects bound to a organization.
+
+        :pparam string organization_slug: the slug of the organization for
+                                          which the projects should be listed.
+        :auth: required
         """
-        if request.auth and hasattr(request.auth, 'project'):
-            team_list = [request.auth.project.team]
-            project_list = [request.auth.project]
+        if request.auth:
+            # TODO: remove this, no longer supported probably
+            if hasattr(request.auth, 'project'):
+                team_list = [request.auth.project.team]
+                project_list = [request.auth.project]
+            else:
+                org = request.auth.organization
+                team_list = list(Team.objects.filter(
+                    organization=org,
+                ))
+                project_list = list(Project.objects.filter(
+                    team__in=team_list,
+                ).order_by('name'))
         else:
             team_list = list(request.access.teams)
             project_list = list(Project.objects.filter(
