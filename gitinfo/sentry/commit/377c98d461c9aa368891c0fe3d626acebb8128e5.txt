commit 377c98d461c9aa368891c0fe3d626acebb8128e5
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 25 10:06:46 2015 -0800

    Support port matching for origins

diff --git a/src/sentry/utils/http.py b/src/sentry/utils/http.py
index f5344122b7..ea4f6bd341 100644
--- a/src/sentry/utils/http.py
+++ b/src/sentry/utils/http.py
@@ -145,7 +145,7 @@ def is_valid_origin(origin, project=None):
             if parsed.hostname.endswith(bits.domain[1:]) or parsed.hostname == bits.domain[2:]:
                 return True
             continue
-        elif bits.domain not in ('*', parsed.hostname):
+        elif bits.domain not in ('*', parsed.hostname, parsed.netloc):
             continue
 
         # path supports exact, any, and suffix match (with or without *)
diff --git a/tests/sentry/utils/http/tests.py b/tests/sentry/utils/http/tests.py
index 438c208f32..a6eae45616 100644
--- a/tests/sentry/utils/http/tests.py
+++ b/tests/sentry/utils/http/tests.py
@@ -127,6 +127,14 @@ class IsValidOriginTestCase(TestCase):
         result = self.isValidOrigin('http://example.com:80', ['example.com'])
         self.assertEquals(result, True)
 
+    def test_base_domain_matches_domain_with_explicit_port(self):
+        result = self.isValidOrigin('http://example.com:80', ['example.com:80'])
+        assert result is True
+
+    def test_base_domain_does_not_match_domain_with_invalid_port(self):
+        result = self.isValidOrigin('http://example.com:80', ['example.com:443'])
+        assert result is False
+
     def test_base_domain_does_not_match_subdomain(self):
         result = self.isValidOrigin('http://example.com', ['foo.example.com'])
         self.assertEquals(result, False)
