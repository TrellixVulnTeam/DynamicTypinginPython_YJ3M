commit 66d44feda9521ed83eccb066fa7b025e27c63046
Author: evanh <evanh@users.noreply.github.com>
Date:   Mon Apr 6 16:32:55 2020 -0400

    fix(performance) Fix zero division error in histogram (#18104)
    
    In the edge case where the max and min durations are equal, we get a zero
    division error. Handle this case.

diff --git a/src/sentry/snuba/discover.py b/src/sentry/snuba/discover.py
index b294733652..b8c1a59007 100644
--- a/src/sentry/snuba/discover.py
+++ b/src/sentry/snuba/discover.py
@@ -201,6 +201,8 @@ def find_histogram_buckets(field, params, conditions):
     if bucket_max == 0:
         raise InvalidSearchQuery(u"Cannot calculate histogram for {}".format(field))
     bucket_size = ceil((bucket_max - bucket_min) / float(num_buckets))
+    if bucket_size == 0.0:
+        bucket_size = 1.0
 
     # Determine the first bucket that will show up in our results so that we can
     # zerofill correctly.
diff --git a/tests/sentry/snuba/test_discover.py b/tests/sentry/snuba/test_discover.py
index 8d1fba6805..4f49099eab 100644
--- a/tests/sentry/snuba/test_discover.py
+++ b/tests/sentry/snuba/test_discover.py
@@ -1430,6 +1430,28 @@ class QueryTransformTest(TestCase):
             assert result["histogram_transaction_duration_10"] == exp
             assert result["count"] == (exp / 87 if (exp / 87) % 2 == 1 else 0)
 
+    @patch("sentry.snuba.discover.raw_query")
+    def test_histogram_min_equal_max(self, mock_query):
+        mock_query.side_effect = [
+            {"data": [{"max_transaction.duration": 869, "min_transaction.duration": 869}]},
+            {
+                "meta": [{"name": "histogram_transaction_duration_10_1_869"}, {"name": "count"}],
+                "data": [{"histogram_transaction_duration_10_1_869": 869, "count": 1}],
+            },
+        ]
+
+        results = discover.query(
+            selected_columns=["histogram(transaction.duration, 10)", "count()"],
+            query="",
+            params={"project_id": [self.project.id]},
+            orderby="histogram_transaction_duration_10",
+            auto_fields=True,
+            use_aggregate_conditions=False,
+        )
+
+        assert results["data"][0]["histogram_transaction_duration_10"] == 869
+        assert results["data"][0]["count"] == 1
+
 
 class TimeseriesQueryTest(SnubaTestCase, TestCase):
     def setUp(self):
