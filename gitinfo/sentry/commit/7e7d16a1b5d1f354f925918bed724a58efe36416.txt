commit 7e7d16a1b5d1f354f925918bed724a58efe36416
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Nov 1 23:21:59 2014 -0700

    Migrate accept invite view

diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index 872d0cfc6c..ac1cb18990 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -68,6 +68,8 @@ class OrganizationMember(Model):
 
     @property
     def token(self):
+        assert self.email
+
         checksum = md5()
         for x in (str(self.organization_id), self.email, settings.SECRET_KEY):
             checksum.update(x)
diff --git a/src/sentry/templates/sentry/accept-organization-invite.html b/src/sentry/templates/sentry/accept-organization-invite.html
new file mode 100644
index 0000000000..4b495e9392
--- /dev/null
+++ b/src/sentry/templates/sentry/accept-organization-invite.html
@@ -0,0 +1,53 @@
+{% extends "sentry/layout.html" %}
+
+{% load i18n %}
+
+{% block title %}{% trans "Team Invite" %} | {{ block.super }}{% endblock %}
+
+{% block page_header_block %}{% endblock %}
+{% block bodyclass %}{% endblock %}
+
+{% block main %}
+  <section class="body">
+    <div class="row">
+      <div class="span7">
+        <div class="page-header">
+          <h2>{% trans "Organization Invite" %}</h2>
+        </div>
+
+        <p style="font-size: 1.3em;">
+          {% blocktrans with org_name=organization.name %}<strong>{{ org_name }}</strong> is using Sentry to aggregate errors.{% endblocktrans %}
+        </p>
+
+        <p>{% blocktrans with project_count=project_list|length %}You have been invited to join this organization, which manages <strong>{{ project_count }}</strong> project(s):{% endblocktrans %}</p>
+        <ul>
+          {% for project in project_list|slice:"5" %}
+            <li>
+              {{ project.name }}
+            </li>
+          {% endfor %}
+        </ul>
+
+        {% if needs_authentication %}
+          <p>{% trans "To continue, you must either login to your existing account, or create a new one." %}</p>
+
+          <fieldset class="form-actions">
+            <div class="pull-right" style="margin-top: 5px;">
+              <a href="{% url 'sentry-login' %}">{% trans "Login as an existing user" %}</a>
+            </div>
+            <a href="{% url 'sentry-register' %}" class="btn btn-primary">{% trans "Create a new account" %}</a>
+          </fieldset>
+        {% else %}
+          <form method="POST">
+            {% csrf_token %}
+            <p>
+              <button type="submit" class="btn btn-primary">
+                {% blocktrans with org_name=organization.name %}Join the {{ org_name }} organization{% endblocktrans %}
+              </button>
+            </p>
+          </form>
+        {% endif %}
+      </div>
+    </div>
+  </section>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/teams/members/accept_invite.html b/src/sentry/templates/sentry/teams/members/accept_invite.html
deleted file mode 100644
index aa11009f3b..0000000000
--- a/src/sentry/templates/sentry/teams/members/accept_invite.html
+++ /dev/null
@@ -1,36 +0,0 @@
-{% extends "sentry/layout.html" %}
-
-{% load i18n %}
-
-{% block title %}{% trans "Team Invite" %} | {{ block.super }}{% endblock %}
-
-{% block page_header_block %}{% endblock %}
-{% block bodyclass %}{% endblock %}
-
-{% block main %}
-    <section class="body">
-        <div class="row">
-            <div class="span7">
-                <div class="page-header">
-                    <h2>{% trans "Team Invite" %}</h2>
-                </div>
-
-                <p style="font-size: 1.3em;">{% blocktrans with team_name=team.name %}<strong>{{ team_owner }}</strong> is using Sentry to aggregate errors for the <strong>{{ team_name }}</strong> team.{% endblocktrans %}</p>
-
-                <p>{% blocktrans with project_count=project_list|length %}You have been invited to join this team, which manages <strong>{{ project_count }}</strong> project(s):{% endblocktrans %}</p>
-                <ul>
-                    {% for project in project_list|slice:"5" %}
-                        <li>
-                            {{ project.name }}
-                        </li>
-                    {% endfor %}
-                </ul>
-                <form method="POST">
-                    {% csrf_token %}
-
-                    <p><button type="submit" class="btn btn-primary">{% blocktrans with team_name=team.name %}Join the {{ team_name }} team{% endblocktrans %}</button></p>
-                </form>
-            </div>
-        </div>
-    </section>
-{% endblock %}
diff --git a/src/sentry/templates/sentry/teams/members/accept_invite_unauthenticated.html b/src/sentry/templates/sentry/teams/members/accept_invite_unauthenticated.html
deleted file mode 100644
index 0da27a24ef..0000000000
--- a/src/sentry/templates/sentry/teams/members/accept_invite_unauthenticated.html
+++ /dev/null
@@ -1,42 +0,0 @@
-{% extends "sentry/layout.html" %}
-
-{% load i18n %}
-
-{% block title %}{% trans "Team Invite" %} | {{ block.super }}{% endblock %}
-
-{% block page_header_block %}{% endblock %}
-{% block bodyclass %}{% endblock %}
-
-{% block main %}
-    <section class="body">
-        <div class="row">
-            <div class="span7">
-                <div class="page-header">
-                    <h2>{% trans "Team Invite" %}</h2>
-                </div>
-
-                <p style="font-size: 1.3em;">{% blocktrans with team_name=team.name %}<strong>{{ team_owner }}</strong> is using Sentry to aggregate errors for the <strong>{{ team_name }}</strong> team.{% endblocktrans %}</p>
-
-                <p>{% blocktrans with project_count=project_list|length %}You have been invited to join this team, which manages <strong>{{ project_count }}</strong> project(s):{% endblocktrans %}</p>
-                <ul>
-                    {% for project in project_list|slice:"5" %}
-                        <li>
-                            {{ project.name }}
-                        </li>
-                    {% endfor %}
-                </ul>
-                    {% csrf_token %}
-            
-                    <p>{% trans "To continue, you must either login to your existing account, or create a new one." %}</p>
-
-                    <fieldset class="form-actions">
-                        <div class="pull-right" style="margin-top: 5px;">
-                            <a href="{% url 'sentry-login' %}">{% trans "Login as an existing user" %}</a>
-                        </div>
-                        <a href="{% url 'sentry-register' %}" class="btn btn-primary">{% trans "Create a new account" %}</a>
-                    </fieldset>
-                </form>
-            </div>
-        </div>
-    </section>
-{% endblock %}
diff --git a/src/sentry/web/forms/teams.py b/src/sentry/web/forms/teams.py
index 99c88bdd93..0e8eee328d 100644
--- a/src/sentry/web/forms/teams.py
+++ b/src/sentry/web/forms/teams.py
@@ -15,10 +15,6 @@ from sentry.models import AccessGroup, Project
 from sentry.web.forms.fields import UserField
 
 
-class AcceptInviteForm(forms.Form):
-    pass
-
-
 class BaseAccessGroupForm(forms.ModelForm):
     name = forms.CharField(label=_('Group Name'), max_length=200,
         widget=forms.TextInput(attrs={'placeholder': _('API Team')}))
diff --git a/src/sentry/web/frontend/accept_organization_invite.py b/src/sentry/web/frontend/accept_organization_invite.py
new file mode 100644
index 0000000000..df5ecdc983
--- /dev/null
+++ b/src/sentry/web/frontend/accept_organization_invite.py
@@ -0,0 +1,99 @@
+from __future__ import absolute_import
+
+from django import forms
+from django.contrib import messages
+from django.core.urlresolvers import reverse
+from django.utils.translation import ugettext as _
+
+from sentry.models import OrganizationMember, Project
+from sentry.web.frontend.base import BaseView
+
+
+class AcceptInviteForm(forms.Form):
+    pass
+
+
+class AcceptOrganizationInviteView(BaseView):
+    auth_required = False
+
+    def get_form(self, request):
+        if request.method == 'POST':
+            return AcceptInviteForm(request.POST)
+        return AcceptInviteForm()
+
+    def handle(self, request, member_id, token):
+        assert request.method in ['POST', 'GET']
+
+        try:
+            om = OrganizationMember.objects.get(pk=member_id)
+        except OrganizationMember.DoesNotExist:
+            messages.add_message(
+                request, messages.ERROR,
+                _('The invite link you followed is no longer valid.')
+            )
+
+            return self.redirect(reverse('sentry'))
+
+        if not om.is_pending:
+            messages.add_message(
+                request, messages.ERROR,
+                _('The invite link you followed is no longer valid.')
+            )
+
+            return self.redirect(reverse('sentry'))
+
+        if om.token != token:
+            messages.add_message(
+                request, messages.ERROR,
+                _('The invite link you followed is no longer valid.')
+            )
+            return self.redirect(reverse('sentry'))
+
+        organization = om.organization
+
+        if om.has_global_access:
+            qs = Project.objects.filter(
+                team__organization=organization,
+            )
+        else:
+            qs = Project.objects.filter(
+                team__in=om.teams.all(),
+            )
+
+        qs = qs.select_related('team')
+
+        project_list = list(qs)
+
+        context = {
+            'organization': om.organization,
+            'project_list': project_list,
+            'needs_authentication': not request.user.is_authenticated(),
+        }
+
+        if not request.user.is_authenticated():
+            # Show login or register form
+            request.session['_next'] = request.get_full_path()
+            request.session['can_register'] = True
+
+            return self.respond('sentry/accept-organization-invite.html', context)
+
+        form = self.get_form(request)
+        if form.is_valid():
+            om.user = request.user
+            om.email = None
+            om.save()
+
+            request.session.pop('can_register', None)
+
+            messages.add_message(
+                request, messages.SUCCESS,
+                _('You have been added to the %r organization.') % (
+                    organization.name.encode('utf-8'),
+                )
+            )
+
+            return self.redirect(reverse('sentry-organization-home', args=[organization.id]))
+
+        context['form'] = form
+
+        return self.respond('sentry/accept-organization-invite.html', context)
diff --git a/src/sentry/web/frontend/base.py b/src/sentry/web/frontend/base.py
index 87e3ec093d..fe23e099cf 100644
--- a/src/sentry/web/frontend/base.py
+++ b/src/sentry/web/frontend/base.py
@@ -126,15 +126,18 @@ class BaseView(View, OrganizationMixin):
     def dispatch(self, request, *args, **kwargs):
         if self.auth_required and not request.user.is_authenticated():
             request.session['_next'] = request.get_full_path()
-            return HttpResponseRedirect(get_login_url())
+            return self.redirect(get_login_url())
 
         if not self.has_permission(request, *args, **kwargs):
             redirect_uri = self.get_no_permission_url(request, *args, **kwargs)
-            return HttpResponseRedirect(redirect_uri)
+            return self.redirect(redirect_uri)
 
         self.request = request
         self.default_context = self.get_context_data(request, *args, **kwargs)
 
+        return self.handle(request, *args, **kwargs)
+
+    def handle(self, request, *args, **kwargs):
         return super(BaseView, self).dispatch(request, *args, **kwargs)
 
     def has_permission(self, request, *args, **kwargs):
@@ -151,6 +154,9 @@ class BaseView(View, OrganizationMixin):
 
         return render_to_response(template, default_context, self.request)
 
+    def redirect(self, url):
+        return HttpResponseRedirect(url)
+
     def get_team_list(self, user, organization):
         return Team.objects.get_for_user(
             organization=organization,
@@ -186,7 +192,7 @@ class OrganizationView(BaseView):
             organization_id=organization_id,
         )
         if active_organization is None:
-            return HttpResponseRedirect(reverse('sentry'))
+            return self.redirect(reverse('sentry'))
 
         kwargs['organization'] = active_organization
 
@@ -215,7 +221,7 @@ class TeamView(BaseView):
     def dispatch(self, request, team_slug, *args, **kwargs):
         if not request.user.is_authenticated():
             request.session['_next'] = request.get_full_path()
-            return HttpResponseRedirect(get_login_url())
+            return self.redirect(get_login_url())
 
         active_team = self.get_active_team(
             request=request,
@@ -223,7 +229,7 @@ class TeamView(BaseView):
             access=self.required_access,
         )
         if active_team is None:
-            return HttpResponseRedirect(reverse('sentry'))
+            return self.redirect(reverse('sentry'))
 
         kwargs['team'] = active_team
         kwargs['organization'] = active_team.organization
@@ -256,14 +262,14 @@ class ProjectView(BaseView):
     def dispatch(self, request, team_slug, project_slug, *args, **kwargs):
         if not request.user.is_authenticated():
             request.session['_next'] = request.get_full_path()
-            return HttpResponseRedirect(get_login_url())
+            return self.redirect(get_login_url())
 
         active_team = self.get_active_team(
             request=request,
             team_slug=team_slug,
         )
         if active_team is None:
-            return HttpResponseRedirect(reverse('sentry'))
+            return self.redirect(reverse('sentry'))
 
         active_project = self.get_active_project(
             request=request,
@@ -272,7 +278,7 @@ class ProjectView(BaseView):
             access=self.required_access,
         )
         if active_project is None:
-            return HttpResponseRedirect(reverse('sentry'))
+            return self.redirect(reverse('sentry'))
 
         kwargs['project'] = active_project
         kwargs['team'] = active_team
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index b0f59f8462..0e153271ab 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -20,7 +20,7 @@ from sentry.permissions import can_remove_team_member
 from sentry.plugins import plugins
 from sentry.web.decorators import has_access
 from sentry.web.forms.teams import (
-    AcceptInviteForm, EditAccessGroupForm, NewAccessGroupMemberForm,
+    EditAccessGroupForm, NewAccessGroupMemberForm,
     NewAccessGroupProjectForm, RemoveAccessGroupForm
 )
 from sentry.web.helpers import render_to_response
@@ -35,62 +35,6 @@ def render_with_team_context(team, template, context, request=None):
     return render_to_response(template, context, request)
 
 
-@csrf_protect
-def accept_invite(request, member_id, token):
-    try:
-        pending_member = PendingTeamMember.objects.get(pk=member_id)
-    except PendingTeamMember.DoesNotExist:
-        return HttpResponseRedirect(reverse('sentry'))
-
-    if pending_member.token != token:
-        return HttpResponseRedirect(reverse('sentry'))
-
-    team = pending_member.team
-
-    project_list = list(team.project_set.filter(status=0))
-    for project in project_list:
-        project.team = team
-
-    context = {
-        'team': team,
-        'team_owner': team.get_owner_name(),
-        'project_list': project_list,
-    }
-
-    if not request.user.is_authenticated():
-        # Show login or register form
-        request.session['_next'] = request.get_full_path()
-        request.session['can_register'] = True
-
-        return render_to_response('sentry/teams/members/accept_invite_unauthenticated.html', context, request)
-
-    if request.method == 'POST':
-        form = AcceptInviteForm(request.POST)
-    else:
-        form = AcceptInviteForm()
-
-    if form.is_valid():
-        team.member_set.get_or_create(
-            user=request.user,
-            defaults={
-                'type': pending_member.type,
-            }
-        )
-
-        request.session.pop('can_register', None)
-
-        pending_member.delete()
-
-        messages.add_message(request, messages.SUCCESS,
-            _('You have been added to the %r team.') % (team.name.encode('utf-8'),))
-
-        return HttpResponseRedirect(reverse('sentry', args=[team.slug]))
-
-    context['form'] = form
-
-    return render_to_response('sentry/teams/members/accept_invite.html', context, request)
-
-
 @csrf_protect
 @has_access(MEMBER_OWNER)
 def remove_team_member(request, team, member_id):
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index f91e556712..f950c5cf3d 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -33,6 +33,7 @@ import sentry.web.frontend.projects.tags
 
 __all__ = ('urlpatterns',)
 
+from sentry.web.frontend.accept_organization_invite import AcceptOrganizationInviteView
 from sentry.web.frontend.home import HomeView
 from sentry.web.frontend.organization_home import OrganizationHomeView
 from sentry.web.frontend.organization_members import OrganizationMembersView
@@ -136,6 +137,8 @@ urlpatterns += patterns('',
         name='sentry-organization-teams'),
     url(r'^organizations/(?P<organization_id>\d+)/teams/new/$', CreateTeamView.as_view(),
         name='sentry-new-team'),
+    url(r'^accept/(?P<member_id>\d+)/(?P<token>\w+)/$', AcceptOrganizationInviteView.as_view(),
+        name='sentry-accept-invite'),
 
     # Settings - Teams
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/settings/$', TeamSettingsView.as_view(),
@@ -174,8 +177,6 @@ urlpatterns += patterns('',
         name='sentry-manage-team-projects'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/projects/new/$', CreateProjectView.as_view(),
         name='sentry-new-project'),
-    url(r'^accept/(?P<member_id>\d+)/(?P<token>\w+)/$', teams.accept_invite,
-        name='sentry-accept-invite'),
 
     # Settings - Projects
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/get-started/$',
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index 65f5bee5f8..2d48fa3f34 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -8,8 +8,7 @@ from django.core.urlresolvers import reverse
 from exam import before, fixture
 
 from sentry.constants import MEMBER_OWNER, MEMBER_USER
-from sentry.models import (
-    Team, TeamMember, PendingTeamMember, User)
+from sentry.models import Team, User
 from sentry.testutils import TestCase
 
 
@@ -58,61 +57,6 @@ class RemoveTeamTest(BaseTeamTest):
         assert not Team.objects.filter(pk=self.team.pk).exists()
 
 
-class AcceptInviteTest(BaseTeamTest):
-    def test_invalid_member_id(self):
-        resp = self.client.get(reverse('sentry-accept-invite', args=[1, 2]))
-        self.assertEquals(resp.status_code, 302)
-
-    def test_invalid_token(self):
-        ptm = PendingTeamMember.objects.create(
-            email='newuser@example.com',
-            team=self.team,
-        )
-        resp = self.client.get(reverse('sentry-accept-invite', args=[ptm.id, 2]))
-        self.assertEquals(resp.status_code, 302)
-
-    def test_renders_unauthenticated_template(self):
-        self.client.logout()
-        ptm = PendingTeamMember.objects.create(
-            email='newuser@example.com',
-            team=self.team,
-        )
-        resp = self.client.get(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/teams/members/accept_invite_unauthenticated.html')
-
-    def test_renders_authenticated_template(self):
-        ptm = PendingTeamMember.objects.create(
-            email='newuser@example.com',
-            team=self.team,
-        )
-        resp = self.client.get(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/teams/members/accept_invite.html')
-
-    def test_can_accept_while_authenticated(self):
-        ptm = PendingTeamMember.objects.create(
-            email='newuser@example.com',
-            type=MEMBER_USER,
-            team=self.team,
-        )
-        resp = self.client.post(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
-        self.assertEquals(resp.status_code, 302, resp.context['form'].errors if resp.status_code != 302 else None)
-        self.assertFalse(PendingTeamMember.objects.filter(id=ptm.id).exists())
-        self.assertTrue(TeamMember.objects.filter(user=self.user, team=self.team).exists())
-
-    def test_cannot_accept_while_unauthenticated(self):
-        self.client.logout()
-        ptm = PendingTeamMember.objects.create(
-            email='newuser@example.com',
-            type=MEMBER_USER,
-            team=self.team,
-        )
-        resp = self.client.post(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
-        self.assertTemplateUsed(resp, 'sentry/teams/members/accept_invite_unauthenticated.html')
-        self.assertEquals(resp.status_code, 200)
-
-
 class ManageProjectsTest(BaseTeamTest):
     @fixture
     def path(self):
diff --git a/tests/sentry/web/frontend/test_accept_organization_invite.py b/tests/sentry/web/frontend/test_accept_organization_invite.py
new file mode 100644
index 0000000000..91a1286f1a
--- /dev/null
+++ b/tests/sentry/web/frontend/test_accept_organization_invite.py
@@ -0,0 +1,75 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+from exam import before
+
+from sentry.models import OrganizationMember, OrganizationMemberType
+from sentry.testutils import TestCase
+
+
+class AcceptInviteTest(TestCase):
+    @before
+    def setup_fixtures(self):
+        self.organization = self.create_organization(
+            owner=self.create_user('foo@example.com'),
+        )
+        self.user = self.create_user('bar@example.com')
+
+    def test_invalid_member_id(self):
+        resp = self.client.get(reverse('sentry-accept-invite', args=[1, 2]))
+        assert resp.status_code == 302
+
+    def test_invalid_token(self):
+        om = OrganizationMember.objects.create(
+            email='newuser@example.com',
+            organization=self.organization,
+        )
+        resp = self.client.get(reverse('sentry-accept-invite', args=[om.id, 2]))
+        assert resp.status_code == 302
+
+    def test_renders_unauthenticated_template(self):
+        om = OrganizationMember.objects.create(
+            email='newuser@example.com',
+            organization=self.organization,
+        )
+        resp = self.client.get(reverse('sentry-accept-invite', args=[om.id, om.token]))
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/accept-organization-invite.html')
+        assert resp.context['needs_authentication']
+
+    def test_renders_authenticated_template(self):
+        self.login_as(self.user)
+
+        om = OrganizationMember.objects.create(
+            email='newuser@example.com',
+            organization=self.organization,
+        )
+        resp = self.client.get(reverse('sentry-accept-invite', args=[om.id, om.token]))
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/accept-organization-invite.html')
+        assert not resp.context['needs_authentication']
+
+    def test_can_accept_while_authenticated(self):
+        self.login_as(self.user)
+
+        om = OrganizationMember.objects.create(
+            email='newuser@example.com',
+            type=OrganizationMemberType.MEMBER,
+            organization=self.organization,
+        )
+        resp = self.client.post(reverse('sentry-accept-invite', args=[om.id, om.token]))
+        assert resp.status_code == 302
+
+        om = OrganizationMember.objects.get(id=om.id)
+        assert om.email is None
+        assert om.user == self.user
+
+    def test_cannot_accept_while_unauthenticated(self):
+        om = OrganizationMember.objects.create(
+            email='newuser@example.com',
+            type=OrganizationMemberType.MEMBER,
+            organization=self.organization,
+        )
+        resp = self.client.post(reverse('sentry-accept-invite', args=[om.id, om.token]))
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/accept-organization-invite.html')
