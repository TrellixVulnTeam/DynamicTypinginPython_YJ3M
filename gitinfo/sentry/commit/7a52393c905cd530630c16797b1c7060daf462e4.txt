commit 7a52393c905cd530630c16797b1c7060daf462e4
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Sep 7 13:52:12 2015 -0700

    Add locks around default slug generation

diff --git a/src/sentry/models/organization.py b/src/sentry/models/organization.py
index 4712710c7e..bac6bc8125 100644
--- a/src/sentry/models/organization.py
+++ b/src/sentry/models/organization.py
@@ -20,6 +20,7 @@ from sentry.db.models import (
     sane_repr
 )
 from sentry.db.models.utils import slugify_instance
+from sentry.utils.cache import Lock
 
 
 # TODO(dcramer): pull in enum library
@@ -118,8 +119,13 @@ class Organization(Model):
 
     def save(self, *args, **kwargs):
         if not self.slug:
-            slugify_instance(self, self.name, reserved=RESERVED_ORGANIZATION_SLUGS)
-        super(Organization, self).save(*args, **kwargs)
+            lock_key = 'slug:organization'
+            with Lock(lock_key):
+                slugify_instance(self, self.name,
+                                 reserved=RESERVED_ORGANIZATION_SLUGS)
+            super(Organization, self).save(*args, **kwargs)
+        else:
+            super(Organization, self).save(*args, **kwargs)
 
     def delete(self):
         if self.is_default:
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 822aee1b5c..b9ac602559 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -23,6 +23,7 @@ from sentry.db.models import (
     sane_repr
 )
 from sentry.db.models.utils import slugify_instance
+from sentry.utils.cache import Lock
 from sentry.utils.http import absolute_uri
 
 
@@ -107,8 +108,12 @@ class Project(Model):
 
     def save(self, *args, **kwargs):
         if not self.slug:
-            slugify_instance(self, self.name, organization=self.organization)
-        super(Project, self).save(*args, **kwargs)
+            lock_key = 'slug:project'
+            with Lock(lock_key):
+                slugify_instance(self, self.name, organization=self.organization)
+            super(Project, self).save(*args, **kwargs)
+        else:
+            super(Project, self).save(*args, **kwargs)
 
     def get_absolute_url(self):
         return absolute_uri(reverse('sentry-stream', args=[
diff --git a/src/sentry/models/team.py b/src/sentry/models/team.py
index 6d3cc2432e..b68403f0dd 100644
--- a/src/sentry/models/team.py
+++ b/src/sentry/models/team.py
@@ -20,6 +20,7 @@ from sentry.db.models import (
     sane_repr
 )
 from sentry.db.models.utils import slugify_instance
+from sentry.utils.cache import Lock
 
 
 class TeamManager(BaseManager):
@@ -135,8 +136,12 @@ class Team(Model):
 
     def save(self, *args, **kwargs):
         if not self.slug:
-            slugify_instance(self, self.name, organization=self.organization)
-        super(Team, self).save(*args, **kwargs)
+            lock_key = 'slug:team'
+            with Lock(lock_key):
+                slugify_instance(self, self.name, organization=self.organization)
+            super(Team, self).save(*args, **kwargs)
+        else:
+            super(Team, self).save(*args, **kwargs)
 
     def get_owner_name(self):
         if not self.owner:
