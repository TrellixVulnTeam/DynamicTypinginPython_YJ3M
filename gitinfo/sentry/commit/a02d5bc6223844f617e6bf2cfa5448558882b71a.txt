commit a02d5bc6223844f617e6bf2cfa5448558882b71a
Author: David Wang <davidw1339@gmail.com>
Date:   Thu Dec 12 10:41:54 2019 -0800

    ref(ui): Decouple selecting groups away from issue list overview (#16056)
    
    Move the responsibility of keeping track of selected groups on the issues page to the <IssueListActions>. The <IssueListActions> component uses the selected group information to conditionally show options such as resolving the issue in the next/current release or merging issues. This will also loosen the issues pages grip on organization.projects.

diff --git a/src/sentry/static/sentry/app/components/actions/resolve.jsx b/src/sentry/static/sentry/app/components/actions/resolve.jsx
index 7257b4c6f4..b48b714eb4 100644
--- a/src/sentry/static/sentry/app/components/actions/resolve.jsx
+++ b/src/sentry/static/sentry/app/components/actions/resolve.jsx
@@ -23,6 +23,7 @@ export default class ResolveActions extends React.Component {
     isResolved: PropTypes.bool,
     isAutoResolved: PropTypes.bool,
     confirmLabel: PropTypes.string,
+    projectFetchError: PropTypes.bool,
   };
 
   static defaultProps = {
@@ -97,6 +98,7 @@ export default class ResolveActions extends React.Component {
       disabled,
       confirmLabel,
       disableDropdown,
+      projectFetchError,
     } = this.props;
 
     const buttonClass = this.getButtonClass();
@@ -126,77 +128,79 @@ export default class ResolveActions extends React.Component {
           projectId={projectId}
         />
         <GuideAnchor target="resolve">
-          <div className="btn-group">
-            <ActionLink
-              {...actionLinkProps}
-              title="Resolve"
-              className={buttonClass}
-              onAction={() => onUpdate({status: 'resolved'})}
-            >
-              <span className="icon-checkmark hidden-xs" style={{marginRight: 5}} />
-              {t('Resolve')}
-            </ActionLink>
+          <Tooltip disabled={!projectFetchError} title={t('Error fetching project')}>
+            <div className="btn-group">
+              <ActionLink
+                {...actionLinkProps}
+                title="Resolve"
+                className={buttonClass}
+                onAction={() => onUpdate({status: 'resolved'})}
+              >
+                <span className="icon-checkmark hidden-xs" style={{marginRight: 5}} />
+                {t('Resolve')}
+              </ActionLink>
 
-            <DropdownLink
-              key="resolve-dropdown"
-              caret
-              className={buttonClass}
-              title=""
-              alwaysRenderMenu
-              disabled={disableDropdown || disabled}
-            >
-              <MenuItem header>{t('Resolved In')}</MenuItem>
-              <MenuItem noAnchor>
-                <Tooltip title={actionTitle} containerDisplayMode="block">
-                  <ActionLink
-                    {...actionLinkProps}
-                    onAction={() => {
-                      return (
-                        hasRelease &&
-                        onUpdate({
-                          status: 'resolved',
-                          statusDetails: {
-                            inNextRelease: true,
-                          },
-                        })
-                      );
-                    }}
-                  >
-                    {t('The next release')}
-                  </ActionLink>
-                </Tooltip>
-                <Tooltip title={actionTitle} containerDisplayMode="block">
-                  <ActionLink
-                    {...actionLinkProps}
-                    onAction={() => {
-                      return (
-                        hasRelease &&
-                        onUpdate({
-                          status: 'resolved',
-                          statusDetails: {
-                            inRelease: latestRelease ? latestRelease.version : 'latest',
-                          },
-                        })
-                      );
-                    }}
-                  >
-                    {latestRelease
-                      ? t('The current release (%s)', latestRelease.version)
-                      : t('The current release')}
-                  </ActionLink>
-                </Tooltip>
-                <Tooltip title={actionTitle} containerDisplayMode="block">
-                  <ActionLink
-                    {...actionLinkProps}
-                    onAction={() => hasRelease && this.setState({modal: true})}
-                    shouldConfirm={false}
-                  >
-                    {t('Another version\u2026')}
-                  </ActionLink>
-                </Tooltip>
-              </MenuItem>
-            </DropdownLink>
-          </div>
+              <DropdownLink
+                key="resolve-dropdown"
+                caret
+                className={buttonClass}
+                title=""
+                alwaysRenderMenu
+                disabled={disableDropdown || disabled}
+              >
+                <MenuItem header>{t('Resolved In')}</MenuItem>
+                <MenuItem noAnchor>
+                  <Tooltip title={actionTitle} containerDisplayMode="block">
+                    <ActionLink
+                      {...actionLinkProps}
+                      onAction={() => {
+                        return (
+                          hasRelease &&
+                          onUpdate({
+                            status: 'resolved',
+                            statusDetails: {
+                              inNextRelease: true,
+                            },
+                          })
+                        );
+                      }}
+                    >
+                      {t('The next release')}
+                    </ActionLink>
+                  </Tooltip>
+                  <Tooltip title={actionTitle} containerDisplayMode="block">
+                    <ActionLink
+                      {...actionLinkProps}
+                      onAction={() => {
+                        return (
+                          hasRelease &&
+                          onUpdate({
+                            status: 'resolved',
+                            statusDetails: {
+                              inRelease: latestRelease ? latestRelease.version : 'latest',
+                            },
+                          })
+                        );
+                      }}
+                    >
+                      {latestRelease
+                        ? t('The current release (%s)', latestRelease.version)
+                        : t('The current release')}
+                    </ActionLink>
+                  </Tooltip>
+                  <Tooltip title={actionTitle} containerDisplayMode="block">
+                    <ActionLink
+                      {...actionLinkProps}
+                      onAction={() => hasRelease && this.setState({modal: true})}
+                      shouldConfirm={false}
+                    >
+                      {t('Another version\u2026')}
+                    </ActionLink>
+                  </Tooltip>
+                </MenuItem>
+              </DropdownLink>
+            </div>
+          </Tooltip>
         </GuideAnchor>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/issueList/actions.jsx b/src/sentry/static/sentry/app/views/issueList/actions.jsx
index 179c4e35bb..926abae699 100644
--- a/src/sentry/static/sentry/app/views/issueList/actions.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/actions.jsx
@@ -1,4 +1,5 @@
 import capitalize from 'lodash/capitalize';
+import uniq from 'lodash/uniq';
 import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
@@ -14,10 +15,12 @@ import Checkbox from 'app/components/checkbox';
 import DropdownLink from 'app/components/dropdownLink';
 import ExternalLink from 'app/components/links/externalLink';
 import Feature from 'app/components/acl/feature';
+import GroupStore from 'app/stores/groupStore';
 import IgnoreActions from 'app/components/actions/ignore';
 import IndicatorStore from 'app/stores/indicatorStore';
 import InlineSvg from 'app/components/inlineSvg';
 import MenuItem from 'app/components/menuItem';
+import Projects from 'app/utils/projects';
 import ResolveActions from 'app/components/actions/resolve';
 import SelectedGroupStore from 'app/stores/selectedGroupStore';
 import SentryTypes from 'app/sentryTypes';
@@ -145,7 +148,6 @@ const IssueListActions = createReactClass({
     api: PropTypes.object,
     allResultsVisible: PropTypes.bool,
     orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string,
     selection: SentryTypes.GlobalSelection.isRequired,
     groupIds: PropTypes.instanceOf(Array).isRequired,
     onRealtimeChange: PropTypes.func.isRequired,
@@ -154,8 +156,6 @@ const IssueListActions = createReactClass({
     statsPeriod: PropTypes.string.isRequired,
     query: PropTypes.string.isRequired,
     queryCount: PropTypes.number,
-    hasReleases: PropTypes.bool,
-    latestRelease: PropTypes.object,
     organization: SentryTypes.Organization,
   },
 
@@ -201,12 +201,29 @@ const IssueListActions = createReactClass({
 
   // Handler for when `SelectedGroupStore` changes
   handleSelectedGroupChange() {
+    const selected = SelectedGroupStore.getSelectedIds();
+    const projects = [...selected]
+      .map(id => GroupStore.get(id))
+      .filter(group => group && group.project)
+      .map(group => group.project.slug);
+
+    const uniqProjects = uniq(projects);
+
+    let selectedProjectSlug = null;
+    // we only want selectedProjectSlug set if there is 1 project
+    // more or fewer should result in a null so that the action toolbar
+    // can behave correctly.
+    if (uniqProjects.length === 1) {
+      selectedProjectSlug = uniqProjects[0];
+    }
+
     this.setState({
       pageSelected: SelectedGroupStore.allSelected(),
       multiSelected: SelectedGroupStore.multiSelected(),
       anySelected: SelectedGroupStore.anySelected(),
       allInQuerySelected: false, // any change resets
       selectedIds: SelectedGroupStore.getSelectedIds(),
+      selectedProjectSlug,
     });
   },
 
@@ -329,13 +346,44 @@ const IssueListActions = createReactClass({
     }
   },
 
+  renderResolveActions({
+    hasReleases,
+    latestRelease,
+    projectId,
+    confirm,
+    label,
+    loadingProjects,
+    projectFetchError,
+  }) {
+    const {orgId} = this.props;
+    const {anySelected} = this.state;
+
+    // resolve requires a single project to be active in an org context
+    // projectId is null when 0 or >1 projects are selected.
+    const resolveDisabled = !anySelected || projectFetchError;
+    const resolveDropdownDisabled =
+      !(anySelected && projectId) || loadingProjects || projectFetchError;
+    return (
+      <ResolveActions
+        hasRelease={hasReleases}
+        latestRelease={latestRelease}
+        orgId={orgId}
+        projectId={projectId}
+        onUpdate={this.handleUpdate}
+        shouldConfirm={this.shouldConfirm('resolve')}
+        confirmMessage={confirm('resolve', true)}
+        confirmLabel={label('resolve')}
+        disabled={resolveDisabled}
+        disableDropdown={resolveDropdownDisabled}
+        projectFetchError={projectFetchError}
+      />
+    );
+  },
+
   render() {
     const {
       allResultsVisible,
-      hasReleases,
-      latestRelease,
       orgId,
-      projectId,
       queryCount,
       query,
       realtimeActive,
@@ -343,15 +391,19 @@ const IssueListActions = createReactClass({
     } = this.props;
     const issues = this.state.selectedIds;
     const numIssues = issues.size;
-    const {allInQuerySelected, anySelected, multiSelected, pageSelected} = this.state;
+    const {
+      allInQuerySelected,
+      anySelected,
+      multiSelected,
+      pageSelected,
+      selectedProjectSlug,
+    } = this.state;
     const confirm = getConfirm(numIssues, allInQuerySelected, query, queryCount);
     const label = getLabel(numIssues, allInQuerySelected);
 
-    // resolve and merge require a single project to be active
-    // in an org context projectId is null when 0 or >1 projects are selected.
-    const resolveDisabled = !anySelected;
-    const resolveDropdownDisabled = !(anySelected && projectId);
-    const mergeDisabled = !(multiSelected && projectId);
+    // merges require a single project to be active in an org context
+    // selectedProjectSlug is null when 0 or >1 projects are selected.
+    const mergeDisabled = !(multiSelected && selectedProjectSlug);
     const createNewIncidentDisabled = !anySelected || allInQuerySelected;
 
     return (
@@ -361,18 +413,30 @@ const IssueListActions = createReactClass({
             <Checkbox onChange={this.handleSelectAll} checked={pageSelected} />
           </ActionsCheckbox>
           <ActionSet>
-            <ResolveActions
-              hasRelease={hasReleases}
-              latestRelease={latestRelease}
-              orgId={orgId}
-              projectId={projectId}
-              onUpdate={this.handleUpdate}
-              shouldConfirm={this.shouldConfirm('resolve')}
-              confirmMessage={confirm('resolve', true)}
-              confirmLabel={label('resolve')}
-              disabled={resolveDisabled}
-              disableDropdown={resolveDropdownDisabled}
-            />
+            {selectedProjectSlug ? (
+              <Projects orgId={orgId} slugs={[selectedProjectSlug]}>
+                {({projects, initiallyLoaded, fetchError}) => {
+                  const selectedProject = projects[0];
+                  return this.renderResolveActions({
+                    hasReleases: new Set(selectedProject.features).has('releases'),
+                    latestRelease: selectedProject.latestRelease,
+                    projectId: selectedProject.slug,
+                    confirm,
+                    label,
+                    loadingProjects: !initiallyLoaded,
+                    projectFetchError: !!fetchError,
+                  });
+                }}
+              </Projects>
+            ) : (
+              this.renderResolveActions({
+                hasReleases: false,
+                latestRelease: null,
+                projectId: null,
+                confirm,
+                label,
+              })
+            )}
             <IgnoreActions
               onUpdate={this.handleUpdate}
               shouldConfirm={this.shouldConfirm('ignore')}
diff --git a/src/sentry/static/sentry/app/views/issueList/overview.jsx b/src/sentry/static/sentry/app/views/issueList/overview.jsx
index 9d39daef90..68bc1ec0ed 100644
--- a/src/sentry/static/sentry/app/views/issueList/overview.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/overview.jsx
@@ -9,7 +9,6 @@ import isEqual from 'lodash/isEqual';
 import omit from 'lodash/omit';
 import pickBy from 'lodash/pickBy';
 import qs from 'query-string';
-import uniq from 'lodash/uniq';
 
 import {Client} from 'app/api';
 import {DEFAULT_STATS_PERIOD} from 'app/constants';
@@ -34,7 +33,6 @@ import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import Pagination from 'app/components/pagination';
 import ProcessingIssueList from 'app/components/stream/processingIssueList';
-import SelectedGroupStore from 'app/stores/selectedGroupStore';
 import SentryTypes from 'app/sentryTypes';
 import StreamGroup from 'app/components/stream/group';
 import StreamManager from 'app/utils/streamManager';
@@ -78,7 +76,6 @@ const IssueListOverview = createReactClass({
 
   mixins: [
     Reflux.listenTo(GroupStore, 'onGroupChange'),
-    Reflux.listenTo(SelectedGroupStore, 'onSelectedGroupChange'),
     Reflux.listenTo(TagStore, 'onTagsChange'),
   ],
 
@@ -476,28 +473,6 @@ const IssueListOverview = createReactClass({
     });
   },
 
-  onSelectedGroupChange() {
-    const selected = SelectedGroupStore.getSelectedIds();
-    const projects = [...selected]
-      .map(id => GroupStore.get(id))
-      .filter(group => group && group.project)
-      .map(group => group.project.slug);
-
-    const uniqProjects = uniq(projects);
-
-    // we only want selectedProject set if there is 1 project
-    // more or fewer should result in a null so that the action toolbar
-    // can behave correctly.
-    if (uniqProjects.length !== 1) {
-      this.setState({selectedProject: null});
-      return;
-    }
-    const selectedProject = this.props.organization.projects.find(
-      p => p.slug === uniqProjects[0]
-    );
-    this.setState({selectedProject});
-  },
-
   /**
    * Returns true if all results in the current query are visible/on this page
    */
@@ -680,33 +655,13 @@ const IssueListOverview = createReactClass({
     }
 
     const {params, organization, savedSearch, savedSearches} = this.props;
-    const {selectedProject} = this.state;
     const query = this.getQuery();
 
-    // If we have a selected project set release data up
-    // enabling stream actions
-    let hasReleases = false;
-    let projectId = null;
-    let latestRelease = null;
-
-    const projects = this.getGlobalSearchProjects();
-
-    if (selectedProject) {
-      hasReleases = new Set(selectedProject.features).has('releases');
-      latestRelease = selectedProject.latestRelease;
-      projectId = selectedProject.slug;
-    } else if (projects.length === 1) {
-      // If the user has filtered down to a single project
-      // we can hint the autocomplete/savedsearch picker with that.
-      projectId = projects[0].slug;
-    }
-
     return (
       <div className={classNames(classes)}>
         <div className="stream-content">
           <IssueListFilters
             organization={organization}
-            projectId={projectId}
             searchId={params.searchId}
             query={query}
             savedSearch={savedSearch}
@@ -729,10 +684,7 @@ const IssueListOverview = createReactClass({
             <IssueListActions
               organization={organization}
               orgId={organization.slug}
-              projectId={projectId}
               selection={this.props.selection}
-              hasReleases={hasReleases}
-              latestRelease={latestRelease}
               query={query}
               queryCount={this.state.queryCount}
               onSelectStatsPeriod={this.onSelectStatsPeriod}
diff --git a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
index e8db234e38..bbba8ea495 100644
--- a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
+++ b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
@@ -82,74 +82,56 @@ exports[`ResolveActions with confirmation step renders 1`] = `
     <GuideAnchor
       target="resolve"
     >
-      <div
-        className="btn-group"
+      <Tooltip
+        containerDisplayMode="inline-block"
+        disabled={true}
+        position="top"
+        title="Error fetching project"
       >
-        <ActionLink
-          className="btn btn-default btn-sm"
-          confirmLabel="Resolve"
-          disabled={false}
-          message="Are you sure???"
-          onAction={[Function]}
-          shouldConfirm={true}
-          title="Resolve"
+        <div
+          className="btn-group"
         >
-          <Confirm
-            cancelText="Cancel"
-            confirmText="Resolve"
-            disableConfirmButton={false}
+          <ActionLink
+            className="btn btn-default btn-sm"
+            confirmLabel="Resolve"
+            disabled={false}
             message="Are you sure???"
-            onConfirm={[Function]}
-            priority="primary"
-            stopPropagation={false}
+            onAction={[Function]}
+            shouldConfirm={true}
+            title="Resolve"
           >
-            <a
-              aria-label="Resolve"
-              className="btn btn-default btn-sm"
-              onClick={[Function]}
-              title="Resolve"
+            <Confirm
+              cancelText="Cancel"
+              confirmText="Resolve"
+              disableConfirmButton={false}
+              message="Are you sure???"
+              onConfirm={[Function]}
+              priority="primary"
+              stopPropagation={false}
             >
-               
-              <span
-                className="icon-checkmark hidden-xs"
-                style={
-                  Object {
-                    "marginRight": 5,
+              <a
+                aria-label="Resolve"
+                className="btn btn-default btn-sm"
+                onClick={[Function]}
+                title="Resolve"
+              >
+                 
+                <span
+                  className="icon-checkmark hidden-xs"
+                  style={
+                    Object {
+                      "marginRight": 5,
+                    }
                   }
-                }
-              />
-              Resolve
-            </a>
-            <Modal
-              animation={false}
-              autoFocus={true}
-              backdrop={true}
-              bsClass="modal"
-              dialogComponentClass={[Function]}
-              enforceFocus={true}
-              keyboard={true}
-              manager={
-                ModalManager {
-                  "add": [Function],
-                  "containers": Array [],
-                  "data": Array [],
-                  "handleContainerOverflow": true,
-                  "hideSiblingNodes": true,
-                  "isTopModal": [Function],
-                  "modals": Array [],
-                  "remove": [Function],
-                }
-              }
-              onHide={[Function]}
-              renderBackdrop={[Function]}
-              restoreFocus={true}
-              show={false}
-            >
+                />
+                Resolve
+              </a>
               <Modal
+                animation={false}
                 autoFocus={true}
                 backdrop={true}
-                backdropClassName="modal-backdrop"
-                containerClassName="modal-open"
+                bsClass="modal"
+                dialogComponentClass={[Function]}
                 enforceFocus={true}
                 keyboard={true}
                 manager={
@@ -164,156 +146,156 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                     "remove": [Function],
                   }
                 }
-                onEntering={[Function]}
-                onExited={[Function]}
                 onHide={[Function]}
                 renderBackdrop={[Function]}
                 restoreFocus={true}
                 show={false}
-              />
-            </Modal>
-          </Confirm>
-        </ActionLink>
-        <DropdownLink
-          alwaysRenderMenu={true}
-          anchorRight={false}
-          caret={true}
-          className="btn btn-default btn-sm"
-          disabled={false}
-          key="resolve-dropdown"
-          title=""
-        >
-          <DropdownMenu
+              >
+                <Modal
+                  autoFocus={true}
+                  backdrop={true}
+                  backdropClassName="modal-backdrop"
+                  containerClassName="modal-open"
+                  enforceFocus={true}
+                  keyboard={true}
+                  manager={
+                    ModalManager {
+                      "add": [Function],
+                      "containers": Array [],
+                      "data": Array [],
+                      "handleContainerOverflow": true,
+                      "hideSiblingNodes": true,
+                      "isTopModal": [Function],
+                      "modals": Array [],
+                      "remove": [Function],
+                    }
+                  }
+                  onEntering={[Function]}
+                  onExited={[Function]}
+                  onHide={[Function]}
+                  renderBackdrop={[Function]}
+                  restoreFocus={true}
+                  show={false}
+                />
+              </Modal>
+            </Confirm>
+          </ActionLink>
+          <DropdownLink
             alwaysRenderMenu={true}
-            closeOnEscape={true}
-            keepMenuOpen={false}
+            anchorRight={false}
+            caret={true}
+            className="btn btn-default btn-sm"
+            disabled={false}
+            key="resolve-dropdown"
+            title=""
           >
-            <span
-              className="dropdown"
+            <DropdownMenu
+              alwaysRenderMenu={true}
+              closeOnEscape={true}
+              keepMenuOpen={false}
             >
-              <a
-                className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
-                onClick={[Function]}
-                onKeyDown={[Function]}
-                onMouseEnter={[Function]}
-                onMouseLeave={[Function]}
-                style={
-                  Object {
-                    "outline": "none",
-                  }
-                }
-              >
-                <div
-                  className="dropdown-actor-title"
-                >
-                  <span />
-                  <i
-                    className="icon-arrow-down"
-                  />
-                </div>
-              </a>
-              <ul
-                className="dropdown-menu"
-                onClick={[Function]}
-                onMouseEnter={[Function]}
-                onMouseLeave={[Function]}
+              <span
+                className="dropdown"
               >
-                <MenuItem
-                  header={true}
+                <a
+                  className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
+                  onClick={[Function]}
+                  onKeyDown={[Function]}
+                  onMouseEnter={[Function]}
+                  onMouseLeave={[Function]}
+                  style={
+                    Object {
+                      "outline": "none",
+                    }
+                  }
                 >
-                  <li
-                    className="dropdown-header"
-                    role="presentation"
+                  <div
+                    className="dropdown-actor-title"
                   >
-                    Resolved In
-                  </li>
-                </MenuItem>
-                <MenuItem
-                  noAnchor={true}
+                    <span />
+                    <i
+                      className="icon-arrow-down"
+                    />
+                  </div>
+                </a>
+                <ul
+                  className="dropdown-menu"
+                  onClick={[Function]}
+                  onMouseEnter={[Function]}
+                  onMouseLeave={[Function]}
                 >
-                  <li
-                    className=""
-                    role="presentation"
+                  <MenuItem
+                    header={true}
+                  >
+                    <li
+                      className="dropdown-header"
+                      role="presentation"
+                    >
+                      Resolved In
+                    </li>
+                  </MenuItem>
+                  <MenuItem
+                    noAnchor={true}
                   >
-                    <Tooltip
-                      containerDisplayMode="block"
-                      position="top"
-                      title="Set up release tracking in order to use this feature."
+                    <li
+                      className=""
+                      role="presentation"
                     >
-                      <Manager>
-                        <Reference>
-                          <InnerReference
-                            setReferenceNode={[Function]}
-                          >
-                            <Container
-                              aria-describedby="tooltip-123456"
-                              containerDisplayMode="block"
-                              innerRef={[Function]}
-                              onBlur={[Function]}
-                              onFocus={[Function]}
-                              onMouseEnter={[Function]}
-                              onMouseLeave={[Function]}
+                      <Tooltip
+                        containerDisplayMode="block"
+                        position="top"
+                        title="Set up release tracking in order to use this feature."
+                      >
+                        <Manager>
+                          <Reference>
+                            <InnerReference
+                              setReferenceNode={[Function]}
                             >
-                              <span
+                              <Container
                                 aria-describedby="tooltip-123456"
-                                className="css-1v55bsv-Container eowlwvy0"
+                                containerDisplayMode="block"
+                                innerRef={[Function]}
                                 onBlur={[Function]}
                                 onFocus={[Function]}
                                 onMouseEnter={[Function]}
                                 onMouseLeave={[Function]}
                               >
-                                <ActionLink
-                                  confirmLabel="Resolve"
-                                  disabled={false}
-                                  message="Are you sure???"
-                                  onAction={[Function]}
-                                  shouldConfirm={true}
+                                <span
+                                  aria-describedby="tooltip-123456"
+                                  className="css-1v55bsv-Container eowlwvy0"
+                                  onBlur={[Function]}
+                                  onFocus={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
                                 >
-                                  <Confirm
-                                    cancelText="Cancel"
-                                    confirmText="Resolve"
-                                    disableConfirmButton={false}
+                                  <ActionLink
+                                    confirmLabel="Resolve"
+                                    disabled={false}
                                     message="Are you sure???"
-                                    onConfirm={[Function]}
-                                    priority="primary"
-                                    stopPropagation={false}
+                                    onAction={[Function]}
+                                    shouldConfirm={true}
                                   >
-                                    <a
-                                      onClick={[Function]}
-                                    >
-                                       
-                                      The next release
-                                    </a>
-                                    <Modal
-                                      animation={false}
-                                      autoFocus={true}
-                                      backdrop={true}
-                                      bsClass="modal"
-                                      dialogComponentClass={[Function]}
-                                      enforceFocus={true}
-                                      keyboard={true}
-                                      manager={
-                                        ModalManager {
-                                          "add": [Function],
-                                          "containers": Array [],
-                                          "data": Array [],
-                                          "handleContainerOverflow": true,
-                                          "hideSiblingNodes": true,
-                                          "isTopModal": [Function],
-                                          "modals": Array [],
-                                          "remove": [Function],
-                                        }
-                                      }
-                                      onHide={[Function]}
-                                      renderBackdrop={[Function]}
-                                      restoreFocus={true}
-                                      show={false}
+                                    <Confirm
+                                      cancelText="Cancel"
+                                      confirmText="Resolve"
+                                      disableConfirmButton={false}
+                                      message="Are you sure???"
+                                      onConfirm={[Function]}
+                                      priority="primary"
+                                      stopPropagation={false}
                                     >
+                                      <a
+                                        onClick={[Function]}
+                                      >
+                                         
+                                        The next release
+                                      </a>
                                       <Modal
+                                        animation={false}
                                         autoFocus={true}
                                         backdrop={true}
-                                        backdropClassName="modal-backdrop"
-                                        containerClassName="modal-open"
+                                        bsClass="modal"
+                                        dialogComponentClass={[Function]}
                                         enforceFocus={true}
                                         keyboard={true}
                                         manager={
@@ -328,101 +310,101 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                                             "remove": [Function],
                                           }
                                         }
-                                        onEntering={[Function]}
-                                        onExited={[Function]}
                                         onHide={[Function]}
                                         renderBackdrop={[Function]}
                                         restoreFocus={true}
                                         show={false}
-                                      />
-                                    </Modal>
-                                  </Confirm>
-                                </ActionLink>
-                              </span>
-                            </Container>
-                          </InnerReference>
-                        </Reference>
-                      </Manager>
-                    </Tooltip>
-                    <Tooltip
-                      containerDisplayMode="block"
-                      position="top"
-                      title="Set up release tracking in order to use this feature."
-                    >
-                      <Manager>
-                        <Reference>
-                          <InnerReference
-                            setReferenceNode={[Function]}
-                          >
-                            <Container
-                              aria-describedby="tooltip-123456"
-                              containerDisplayMode="block"
-                              innerRef={[Function]}
-                              onBlur={[Function]}
-                              onFocus={[Function]}
-                              onMouseEnter={[Function]}
-                              onMouseLeave={[Function]}
+                                      >
+                                        <Modal
+                                          autoFocus={true}
+                                          backdrop={true}
+                                          backdropClassName="modal-backdrop"
+                                          containerClassName="modal-open"
+                                          enforceFocus={true}
+                                          keyboard={true}
+                                          manager={
+                                            ModalManager {
+                                              "add": [Function],
+                                              "containers": Array [],
+                                              "data": Array [],
+                                              "handleContainerOverflow": true,
+                                              "hideSiblingNodes": true,
+                                              "isTopModal": [Function],
+                                              "modals": Array [],
+                                              "remove": [Function],
+                                            }
+                                          }
+                                          onEntering={[Function]}
+                                          onExited={[Function]}
+                                          onHide={[Function]}
+                                          renderBackdrop={[Function]}
+                                          restoreFocus={true}
+                                          show={false}
+                                        />
+                                      </Modal>
+                                    </Confirm>
+                                  </ActionLink>
+                                </span>
+                              </Container>
+                            </InnerReference>
+                          </Reference>
+                        </Manager>
+                      </Tooltip>
+                      <Tooltip
+                        containerDisplayMode="block"
+                        position="top"
+                        title="Set up release tracking in order to use this feature."
+                      >
+                        <Manager>
+                          <Reference>
+                            <InnerReference
+                              setReferenceNode={[Function]}
                             >
-                              <span
+                              <Container
                                 aria-describedby="tooltip-123456"
-                                className="css-1v55bsv-Container eowlwvy0"
+                                containerDisplayMode="block"
+                                innerRef={[Function]}
                                 onBlur={[Function]}
                                 onFocus={[Function]}
                                 onMouseEnter={[Function]}
                                 onMouseLeave={[Function]}
                               >
-                                <ActionLink
-                                  confirmLabel="Resolve"
-                                  disabled={false}
-                                  message="Are you sure???"
-                                  onAction={[Function]}
-                                  shouldConfirm={true}
+                                <span
+                                  aria-describedby="tooltip-123456"
+                                  className="css-1v55bsv-Container eowlwvy0"
+                                  onBlur={[Function]}
+                                  onFocus={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
                                 >
-                                  <Confirm
-                                    cancelText="Cancel"
-                                    confirmText="Resolve"
-                                    disableConfirmButton={false}
+                                  <ActionLink
+                                    confirmLabel="Resolve"
+                                    disabled={false}
                                     message="Are you sure???"
-                                    onConfirm={[Function]}
-                                    priority="primary"
-                                    stopPropagation={false}
+                                    onAction={[Function]}
+                                    shouldConfirm={true}
                                   >
-                                    <a
-                                      onClick={[Function]}
-                                    >
-                                       
-                                      The current release
-                                    </a>
-                                    <Modal
-                                      animation={false}
-                                      autoFocus={true}
-                                      backdrop={true}
-                                      bsClass="modal"
-                                      dialogComponentClass={[Function]}
-                                      enforceFocus={true}
-                                      keyboard={true}
-                                      manager={
-                                        ModalManager {
-                                          "add": [Function],
-                                          "containers": Array [],
-                                          "data": Array [],
-                                          "handleContainerOverflow": true,
-                                          "hideSiblingNodes": true,
-                                          "isTopModal": [Function],
-                                          "modals": Array [],
-                                          "remove": [Function],
-                                        }
-                                      }
-                                      onHide={[Function]}
-                                      renderBackdrop={[Function]}
-                                      restoreFocus={true}
-                                      show={false}
+                                    <Confirm
+                                      cancelText="Cancel"
+                                      confirmText="Resolve"
+                                      disableConfirmButton={false}
+                                      message="Are you sure???"
+                                      onConfirm={[Function]}
+                                      priority="primary"
+                                      stopPropagation={false}
                                     >
+                                      <a
+                                        onClick={[Function]}
+                                      >
+                                         
+                                        The current release
+                                      </a>
                                       <Modal
+                                        animation={false}
                                         autoFocus={true}
                                         backdrop={true}
-                                        backdropClassName="modal-backdrop"
-                                        containerClassName="modal-open"
+                                        bsClass="modal"
+                                        dialogComponentClass={[Function]}
                                         enforceFocus={true}
                                         keyboard={true}
                                         manager={
@@ -437,85 +419,110 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                                             "remove": [Function],
                                           }
                                         }
-                                        onEntering={[Function]}
-                                        onExited={[Function]}
                                         onHide={[Function]}
                                         renderBackdrop={[Function]}
                                         restoreFocus={true}
                                         show={false}
-                                      />
-                                    </Modal>
-                                  </Confirm>
-                                </ActionLink>
-                              </span>
-                            </Container>
-                          </InnerReference>
-                        </Reference>
-                      </Manager>
-                    </Tooltip>
-                    <Tooltip
-                      containerDisplayMode="block"
-                      position="top"
-                      title="Set up release tracking in order to use this feature."
-                    >
-                      <Manager>
-                        <Reference>
-                          <InnerReference
-                            setReferenceNode={[Function]}
-                          >
-                            <Container
-                              aria-describedby="tooltip-123456"
-                              containerDisplayMode="block"
-                              innerRef={[Function]}
-                              onBlur={[Function]}
-                              onFocus={[Function]}
-                              onMouseEnter={[Function]}
-                              onMouseLeave={[Function]}
+                                      >
+                                        <Modal
+                                          autoFocus={true}
+                                          backdrop={true}
+                                          backdropClassName="modal-backdrop"
+                                          containerClassName="modal-open"
+                                          enforceFocus={true}
+                                          keyboard={true}
+                                          manager={
+                                            ModalManager {
+                                              "add": [Function],
+                                              "containers": Array [],
+                                              "data": Array [],
+                                              "handleContainerOverflow": true,
+                                              "hideSiblingNodes": true,
+                                              "isTopModal": [Function],
+                                              "modals": Array [],
+                                              "remove": [Function],
+                                            }
+                                          }
+                                          onEntering={[Function]}
+                                          onExited={[Function]}
+                                          onHide={[Function]}
+                                          renderBackdrop={[Function]}
+                                          restoreFocus={true}
+                                          show={false}
+                                        />
+                                      </Modal>
+                                    </Confirm>
+                                  </ActionLink>
+                                </span>
+                              </Container>
+                            </InnerReference>
+                          </Reference>
+                        </Manager>
+                      </Tooltip>
+                      <Tooltip
+                        containerDisplayMode="block"
+                        position="top"
+                        title="Set up release tracking in order to use this feature."
+                      >
+                        <Manager>
+                          <Reference>
+                            <InnerReference
+                              setReferenceNode={[Function]}
                             >
-                              <span
+                              <Container
                                 aria-describedby="tooltip-123456"
-                                className="css-1v55bsv-Container eowlwvy0"
+                                containerDisplayMode="block"
+                                innerRef={[Function]}
                                 onBlur={[Function]}
                                 onFocus={[Function]}
                                 onMouseEnter={[Function]}
                                 onMouseLeave={[Function]}
                               >
-                                <ActionLink
-                                  confirmLabel="Resolve"
-                                  disabled={false}
-                                  message="Are you sure???"
-                                  onAction={[Function]}
-                                  shouldConfirm={false}
+                                <span
+                                  aria-describedby="tooltip-123456"
+                                  className="css-1v55bsv-Container eowlwvy0"
+                                  onBlur={[Function]}
+                                  onFocus={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
                                 >
-                                  <ActionLinkAnchor
-                                    className=""
-                                    data-test-id="action-link"
+                                  <ActionLink
+                                    confirmLabel="Resolve"
                                     disabled={false}
-                                    onClick={[Function]}
+                                    message="Are you sure???"
+                                    onAction={[Function]}
+                                    shouldConfirm={false}
                                   >
-                                    <a
-                                      className="css-19ecu88-ActionLinkAnchor ehtyk0g0"
+                                    <ActionLinkAnchor
+                                      className=""
                                       data-test-id="action-link"
                                       disabled={false}
                                       onClick={[Function]}
                                     >
-                                      Another version…
-                                    </a>
-                                  </ActionLinkAnchor>
-                                </ActionLink>
-                              </span>
-                            </Container>
-                          </InnerReference>
-                        </Reference>
-                      </Manager>
-                    </Tooltip>
-                  </li>
-                </MenuItem>
-              </ul>
-            </span>
-          </DropdownMenu>
-        </DropdownLink>
-      </div>
+                                      <a
+                                        className="css-19ecu88-ActionLinkAnchor ehtyk0g0"
+                                        data-test-id="action-link"
+                                        disabled={false}
+                                        onClick={[Function]}
+                                      >
+                                        Another version…
+                                      </a>
+                                    </ActionLinkAnchor>
+                                  </ActionLink>
+                                </span>
+                              </Container>
+                            </InnerReference>
+                          </Reference>
+                        </Manager>
+                      </Tooltip>
+                    </li>
+                  </MenuItem>
+                </ul>
+              </span>
+            </DropdownMenu>
+          </DropdownLink>
+        </div>
+      </Tooltip>
     </GuideAnchor>
   </div>
 </ResolveActions>
@@ -601,276 +608,283 @@ exports[`ResolveActions without confirmation renders 1`] = `
     <GuideAnchor
       target="resolve"
     >
-      <div
-        className="btn-group"
+      <Tooltip
+        containerDisplayMode="inline-block"
+        disabled={true}
+        position="top"
+        title="Error fetching project"
       >
-        <ActionLink
-          className="btn btn-default btn-sm"
-          confirmLabel="Resolve"
-          disabled={false}
-          onAction={[Function]}
-          shouldConfirm={false}
-          title="Resolve"
+        <div
+          className="btn-group"
         >
-          <ActionLinkAnchor
-            aria-label="Resolve"
+          <ActionLink
             className="btn btn-default btn-sm"
-            data-test-id="action-link-resolve"
+            confirmLabel="Resolve"
             disabled={false}
-            onClick={[Function]}
+            onAction={[Function]}
+            shouldConfirm={false}
+            title="Resolve"
           >
-            <a
+            <ActionLinkAnchor
               aria-label="Resolve"
-              className="btn btn-default btn-sm css-19ecu88-ActionLinkAnchor ehtyk0g0"
+              className="btn btn-default btn-sm"
               data-test-id="action-link-resolve"
               disabled={false}
               onClick={[Function]}
-            >
-              <span
-                className="icon-checkmark hidden-xs"
-                style={
-                  Object {
-                    "marginRight": 5,
-                  }
-                }
-              />
-              Resolve
-            </a>
-          </ActionLinkAnchor>
-        </ActionLink>
-        <DropdownLink
-          alwaysRenderMenu={true}
-          anchorRight={false}
-          caret={true}
-          className="btn btn-default btn-sm"
-          disabled={false}
-          key="resolve-dropdown"
-          title=""
-        >
-          <DropdownMenu
-            alwaysRenderMenu={true}
-            closeOnEscape={true}
-            keepMenuOpen={false}
-          >
-            <span
-              className="dropdown"
             >
               <a
-                className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
+                aria-label="Resolve"
+                className="btn btn-default btn-sm css-19ecu88-ActionLinkAnchor ehtyk0g0"
+                data-test-id="action-link-resolve"
+                disabled={false}
                 onClick={[Function]}
-                onKeyDown={[Function]}
-                onMouseEnter={[Function]}
-                onMouseLeave={[Function]}
-                style={
-                  Object {
-                    "outline": "none",
-                  }
-                }
               >
-                <div
-                  className="dropdown-actor-title"
-                >
-                  <span />
-                  <i
-                    className="icon-arrow-down"
-                  />
-                </div>
+                <span
+                  className="icon-checkmark hidden-xs"
+                  style={
+                    Object {
+                      "marginRight": 5,
+                    }
+                  }
+                />
+                Resolve
               </a>
-              <ul
-                className="dropdown-menu"
-                onClick={[Function]}
-                onMouseEnter={[Function]}
-                onMouseLeave={[Function]}
+            </ActionLinkAnchor>
+          </ActionLink>
+          <DropdownLink
+            alwaysRenderMenu={true}
+            anchorRight={false}
+            caret={true}
+            className="btn btn-default btn-sm"
+            disabled={false}
+            key="resolve-dropdown"
+            title=""
+          >
+            <DropdownMenu
+              alwaysRenderMenu={true}
+              closeOnEscape={true}
+              keepMenuOpen={false}
+            >
+              <span
+                className="dropdown"
               >
-                <MenuItem
-                  header={true}
+                <a
+                  className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
+                  onClick={[Function]}
+                  onKeyDown={[Function]}
+                  onMouseEnter={[Function]}
+                  onMouseLeave={[Function]}
+                  style={
+                    Object {
+                      "outline": "none",
+                    }
+                  }
                 >
-                  <li
-                    className="dropdown-header"
-                    role="presentation"
+                  <div
+                    className="dropdown-actor-title"
                   >
-                    Resolved In
-                  </li>
-                </MenuItem>
-                <MenuItem
-                  noAnchor={true}
+                    <span />
+                    <i
+                      className="icon-arrow-down"
+                    />
+                  </div>
+                </a>
+                <ul
+                  className="dropdown-menu"
+                  onClick={[Function]}
+                  onMouseEnter={[Function]}
+                  onMouseLeave={[Function]}
                 >
-                  <li
-                    className=""
-                    role="presentation"
+                  <MenuItem
+                    header={true}
                   >
-                    <Tooltip
-                      containerDisplayMode="block"
-                      position="top"
-                      title="Set up release tracking in order to use this feature."
+                    <li
+                      className="dropdown-header"
+                      role="presentation"
                     >
-                      <Manager>
-                        <Reference>
-                          <InnerReference
-                            setReferenceNode={[Function]}
-                          >
-                            <Container
-                              aria-describedby="tooltip-123456"
-                              containerDisplayMode="block"
-                              innerRef={[Function]}
-                              onBlur={[Function]}
-                              onFocus={[Function]}
-                              onMouseEnter={[Function]}
-                              onMouseLeave={[Function]}
+                      Resolved In
+                    </li>
+                  </MenuItem>
+                  <MenuItem
+                    noAnchor={true}
+                  >
+                    <li
+                      className=""
+                      role="presentation"
+                    >
+                      <Tooltip
+                        containerDisplayMode="block"
+                        position="top"
+                        title="Set up release tracking in order to use this feature."
+                      >
+                        <Manager>
+                          <Reference>
+                            <InnerReference
+                              setReferenceNode={[Function]}
                             >
-                              <span
+                              <Container
                                 aria-describedby="tooltip-123456"
-                                className="css-1v55bsv-Container eowlwvy0"
+                                containerDisplayMode="block"
+                                innerRef={[Function]}
                                 onBlur={[Function]}
                                 onFocus={[Function]}
                                 onMouseEnter={[Function]}
                                 onMouseLeave={[Function]}
                               >
-                                <ActionLink
-                                  confirmLabel="Resolve"
-                                  disabled={false}
-                                  onAction={[Function]}
-                                  shouldConfirm={false}
+                                <span
+                                  aria-describedby="tooltip-123456"
+                                  className="css-1v55bsv-Container eowlwvy0"
+                                  onBlur={[Function]}
+                                  onFocus={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
                                 >
-                                  <ActionLinkAnchor
-                                    className=""
-                                    data-test-id="action-link"
+                                  <ActionLink
+                                    confirmLabel="Resolve"
                                     disabled={false}
-                                    onClick={[Function]}
+                                    onAction={[Function]}
+                                    shouldConfirm={false}
                                   >
-                                    <a
-                                      className="css-19ecu88-ActionLinkAnchor ehtyk0g0"
+                                    <ActionLinkAnchor
+                                      className=""
                                       data-test-id="action-link"
                                       disabled={false}
                                       onClick={[Function]}
                                     >
-                                      The next release
-                                    </a>
-                                  </ActionLinkAnchor>
-                                </ActionLink>
-                              </span>
-                            </Container>
-                          </InnerReference>
-                        </Reference>
-                      </Manager>
-                    </Tooltip>
-                    <Tooltip
-                      containerDisplayMode="block"
-                      position="top"
-                      title="Set up release tracking in order to use this feature."
-                    >
-                      <Manager>
-                        <Reference>
-                          <InnerReference
-                            setReferenceNode={[Function]}
-                          >
-                            <Container
-                              aria-describedby="tooltip-123456"
-                              containerDisplayMode="block"
-                              innerRef={[Function]}
-                              onBlur={[Function]}
-                              onFocus={[Function]}
-                              onMouseEnter={[Function]}
-                              onMouseLeave={[Function]}
+                                      <a
+                                        className="css-19ecu88-ActionLinkAnchor ehtyk0g0"
+                                        data-test-id="action-link"
+                                        disabled={false}
+                                        onClick={[Function]}
+                                      >
+                                        The next release
+                                      </a>
+                                    </ActionLinkAnchor>
+                                  </ActionLink>
+                                </span>
+                              </Container>
+                            </InnerReference>
+                          </Reference>
+                        </Manager>
+                      </Tooltip>
+                      <Tooltip
+                        containerDisplayMode="block"
+                        position="top"
+                        title="Set up release tracking in order to use this feature."
+                      >
+                        <Manager>
+                          <Reference>
+                            <InnerReference
+                              setReferenceNode={[Function]}
                             >
-                              <span
+                              <Container
                                 aria-describedby="tooltip-123456"
-                                className="css-1v55bsv-Container eowlwvy0"
+                                containerDisplayMode="block"
+                                innerRef={[Function]}
                                 onBlur={[Function]}
                                 onFocus={[Function]}
                                 onMouseEnter={[Function]}
                                 onMouseLeave={[Function]}
                               >
-                                <ActionLink
-                                  confirmLabel="Resolve"
-                                  disabled={false}
-                                  onAction={[Function]}
-                                  shouldConfirm={false}
+                                <span
+                                  aria-describedby="tooltip-123456"
+                                  className="css-1v55bsv-Container eowlwvy0"
+                                  onBlur={[Function]}
+                                  onFocus={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
                                 >
-                                  <ActionLinkAnchor
-                                    className=""
-                                    data-test-id="action-link"
+                                  <ActionLink
+                                    confirmLabel="Resolve"
                                     disabled={false}
-                                    onClick={[Function]}
+                                    onAction={[Function]}
+                                    shouldConfirm={false}
                                   >
-                                    <a
-                                      className="css-19ecu88-ActionLinkAnchor ehtyk0g0"
+                                    <ActionLinkAnchor
+                                      className=""
                                       data-test-id="action-link"
                                       disabled={false}
                                       onClick={[Function]}
                                     >
-                                      The current release
-                                    </a>
-                                  </ActionLinkAnchor>
-                                </ActionLink>
-                              </span>
-                            </Container>
-                          </InnerReference>
-                        </Reference>
-                      </Manager>
-                    </Tooltip>
-                    <Tooltip
-                      containerDisplayMode="block"
-                      position="top"
-                      title="Set up release tracking in order to use this feature."
-                    >
-                      <Manager>
-                        <Reference>
-                          <InnerReference
-                            setReferenceNode={[Function]}
-                          >
-                            <Container
-                              aria-describedby="tooltip-123456"
-                              containerDisplayMode="block"
-                              innerRef={[Function]}
-                              onBlur={[Function]}
-                              onFocus={[Function]}
-                              onMouseEnter={[Function]}
-                              onMouseLeave={[Function]}
+                                      <a
+                                        className="css-19ecu88-ActionLinkAnchor ehtyk0g0"
+                                        data-test-id="action-link"
+                                        disabled={false}
+                                        onClick={[Function]}
+                                      >
+                                        The current release
+                                      </a>
+                                    </ActionLinkAnchor>
+                                  </ActionLink>
+                                </span>
+                              </Container>
+                            </InnerReference>
+                          </Reference>
+                        </Manager>
+                      </Tooltip>
+                      <Tooltip
+                        containerDisplayMode="block"
+                        position="top"
+                        title="Set up release tracking in order to use this feature."
+                      >
+                        <Manager>
+                          <Reference>
+                            <InnerReference
+                              setReferenceNode={[Function]}
                             >
-                              <span
+                              <Container
                                 aria-describedby="tooltip-123456"
-                                className="css-1v55bsv-Container eowlwvy0"
+                                containerDisplayMode="block"
+                                innerRef={[Function]}
                                 onBlur={[Function]}
                                 onFocus={[Function]}
                                 onMouseEnter={[Function]}
                                 onMouseLeave={[Function]}
                               >
-                                <ActionLink
-                                  confirmLabel="Resolve"
-                                  disabled={false}
-                                  onAction={[Function]}
-                                  shouldConfirm={false}
+                                <span
+                                  aria-describedby="tooltip-123456"
+                                  className="css-1v55bsv-Container eowlwvy0"
+                                  onBlur={[Function]}
+                                  onFocus={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
                                 >
-                                  <ActionLinkAnchor
-                                    className=""
-                                    data-test-id="action-link"
+                                  <ActionLink
+                                    confirmLabel="Resolve"
                                     disabled={false}
-                                    onClick={[Function]}
+                                    onAction={[Function]}
+                                    shouldConfirm={false}
                                   >
-                                    <a
-                                      className="css-19ecu88-ActionLinkAnchor ehtyk0g0"
+                                    <ActionLinkAnchor
+                                      className=""
                                       data-test-id="action-link"
                                       disabled={false}
                                       onClick={[Function]}
                                     >
-                                      Another version…
-                                    </a>
-                                  </ActionLinkAnchor>
-                                </ActionLink>
-                              </span>
-                            </Container>
-                          </InnerReference>
-                        </Reference>
-                      </Manager>
-                    </Tooltip>
-                  </li>
-                </MenuItem>
-              </ul>
-            </span>
-          </DropdownMenu>
-        </DropdownLink>
-      </div>
+                                      <a
+                                        className="css-19ecu88-ActionLinkAnchor ehtyk0g0"
+                                        data-test-id="action-link"
+                                        disabled={false}
+                                        onClick={[Function]}
+                                      >
+                                        Another version…
+                                      </a>
+                                    </ActionLinkAnchor>
+                                  </ActionLink>
+                                </span>
+                              </Container>
+                            </InnerReference>
+                          </Reference>
+                        </Manager>
+                      </Tooltip>
+                    </li>
+                  </MenuItem>
+                </ul>
+              </span>
+            </DropdownMenu>
+          </DropdownLink>
+        </div>
+      </Tooltip>
     </GuideAnchor>
   </div>
 </ResolveActions>
