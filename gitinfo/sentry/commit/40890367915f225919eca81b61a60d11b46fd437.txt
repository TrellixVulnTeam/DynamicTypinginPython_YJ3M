commit 40890367915f225919eca81b61a60d11b46fd437
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Aug 12 14:58:17 2016 -0700

    Exand reserved slugs and fix logic in slugify_instance (#3932)

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 2332efe6e7..0dfa16aabe 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -73,13 +73,16 @@ MAX_CULPRIT_LENGTH = 200
 
 # Team slugs which may not be used. Generally these are top level URL patterns
 # which we don't want to worry about conflicts on.
-RESERVED_ORGANIZATION_SLUGS = (
+RESERVED_ORGANIZATION_SLUGS = frozenset((
     'admin', 'manage', 'login', 'account', 'register', 'api',
     'accept', 'organizations', 'teams', 'projects', 'help',
     'docs', 'logout', '404', '500', '_static', 'out', 'debug',
-)
-
-RESERVED_TEAM_SLUGS = RESERVED_ORGANIZATION_SLUGS
+    'remote', 'get-cli', 'blog', 'welcome', 'features',
+    'customers', 'integrations', 'signup', 'pricing',
+    'subscribe', 'enterprise', 'about', 'jobs', 'thanks', 'guide',
+    'privacy', 'security', 'terms', 'from', 'sponsorship', 'for',
+    'at', 'platforms', 'branding', 'vs', 'answers', '_admin',
+))
 
 LOG_LEVELS = {
     logging.DEBUG: 'debug',
diff --git a/src/sentry/db/models/utils.py b/src/sentry/db/models/utils.py
index 0f8a683093..a9724fa0f0 100644
--- a/src/sentry/db/models/utils.py
+++ b/src/sentry/db/models/utils.py
@@ -57,10 +57,10 @@ def resolve_expression_node(instance, node):
 def slugify_instance(inst, label, reserved=(), max_length=30, *args, **kwargs):
     base_slug = slugify(label)[:max_length]
 
-    if base_slug in reserved:
-        base_slug = None
-    elif base_slug is not None:
+    if base_slug is not None:
         base_slug = base_slug.strip()
+        if base_slug in reserved:
+            base_slug = None
 
     if not base_slug:
         base_slug = uuid4().hex[:12]
diff --git a/src/sentry/south_migrations/0101_ensure_teams.py b/src/sentry/south_migrations/0101_ensure_teams.py
index cb8921855d..072124c3ab 100644
--- a/src/sentry/south_migrations/0101_ensure_teams.py
+++ b/src/sentry/south_migrations/0101_ensure_teams.py
@@ -7,7 +7,6 @@ from django.db import models
 class Migration(DataMigration):
 
     def forwards(self, orm):
-        from sentry.constants import RESERVED_TEAM_SLUGS
         from sentry.models import slugify_instance
         try:
             superuser = orm['sentry.User'].objects.filter(is_superuser=True)[0]
@@ -21,7 +20,7 @@ class Migration(DataMigration):
                 name=project.name,
                 owner=project.owner,
             )
-            slugify_instance(project.team, project.team.name, reserved=RESERVED_TEAM_SLUGS)
+            slugify_instance(project.team, project.team.name)
             project.team.save()
             project.save()
 
diff --git a/src/sentry/south_migrations/0102_ensure_slugs.py b/src/sentry/south_migrations/0102_ensure_slugs.py
index dc0b6ebdd6..119a26a9b8 100644
--- a/src/sentry/south_migrations/0102_ensure_slugs.py
+++ b/src/sentry/south_migrations/0102_ensure_slugs.py
@@ -7,11 +7,10 @@ from django.db import models
 class Migration(DataMigration):
 
     def forwards(self, orm):
-        from sentry.constants import RESERVED_TEAM_SLUGS
         from sentry.models import slugify_instance
 
         for team in orm['sentry.Team'].objects.filter(slug__isnull=True):
-            slugify_instance(team, team.name, reserved=RESERVED_TEAM_SLUGS)
+            slugify_instance(team, team.name)
             team.save()
 
     def backwards(self, orm):
diff --git a/src/sentry/south_migrations/0103_ensure_non_empty_slugs.py b/src/sentry/south_migrations/0103_ensure_non_empty_slugs.py
index 34ae509ac0..9217d67591 100644
--- a/src/sentry/south_migrations/0103_ensure_non_empty_slugs.py
+++ b/src/sentry/south_migrations/0103_ensure_non_empty_slugs.py
@@ -7,15 +7,14 @@ from django.db import models
 class Migration(DataMigration):
 
     def forwards(self, orm):
-        from sentry.constants import RESERVED_TEAM_SLUGS
         from sentry.models import slugify_instance
 
         for team in orm['sentry.Team'].objects.filter(models.Q(slug='') | models.Q(slug__isnull=True)):
-            slugify_instance(team, team.name, reserved=RESERVED_TEAM_SLUGS)
+            slugify_instance(team, team.name)
             team.save()
 
         for project in orm['sentry.Project'].objects.filter(models.Q(slug='') | models.Q(slug__isnull=True)):
-            slugify_instance(project, project.name, reserved=RESERVED_TEAM_SLUGS)
+            slugify_instance(project, project.name)
             project.save()
 
 
