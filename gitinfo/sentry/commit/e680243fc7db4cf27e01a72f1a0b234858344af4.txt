commit e680243fc7db4cf27e01a72f1a0b234858344af4
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Jun 22 23:26:51 2017 +0200

    Fix in_app check for internal functions on frames without func names

diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 812b9ab3c9..822680f445 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -193,7 +193,8 @@ class NativeStacktraceProcessor(StacktraceProcessor):
             # backend.  We only assemble the bare minimum we need here.
             instruction_addr = processable_frame.data['instruction_addr']
             in_app = self.sym.is_in_app(instruction_addr, sdk_info=self.sdk_info)
-            in_app = (in_app and not self.sym.is_internal_function(raw_frame.get('function')))
+            if in_app and raw_frame.get('function') is not None:
+                in_app = not self.sym.is_internal_function(raw_frame['function'])
             if raw_frame.get('in_app') is None:
                 raw_frame['in_app'] = in_app
             img_uuid = processable_frame.data['image_uuid']
@@ -263,7 +264,8 @@ class NativeStacktraceProcessor(StacktraceProcessor):
             if sfrm.get('package'):
                 new_frame['package'] = sfrm['package']
             if new_frame.get('in_app') is None:
-                new_frame['in_app'] = (in_app and not self.sym.is_internal_function(new_frame['function']))
+                new_frame['in_app'] = (in_app and
+                    not self.sym.is_internal_function(new_frame['function']))
             new_frames.append(new_frame)
 
         return new_frames, [raw_frame], []
