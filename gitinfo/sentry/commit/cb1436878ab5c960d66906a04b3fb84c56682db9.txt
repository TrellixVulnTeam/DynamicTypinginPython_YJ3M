commit cb1436878ab5c960d66906a04b3fb84c56682db9
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Mar 16 13:39:13 2012 -0700

    Add test for _send_mail from notify_users

diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 464f1e4304..f6d601b7a8 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -6,7 +6,7 @@ import mock
 import datetime
 from mock import Mock
 from sentry.interfaces import Stacktrace
-from sentry.models import Event, Group
+from sentry.models import Event, Group, Project
 from sentry.plugins.sentry_mail import MailProcessor
 
 from tests.base import TestCase
@@ -76,6 +76,33 @@ class MailProcessorTest(TestCase):
         stacktrace.get_title.assert_called_once_with()
         stacktrace.to_string.assert_called_once_with(event)
 
+    @mock.patch('sentry.plugins.sentry_mail.MailProcessor._send_mail')
+    def test_notify_users_does_email(self, _send_mail):
+        project = Project(id=1, name='Project Name')
+
+        group = Mock(spec=Group)
+        group.first_seen = datetime.datetime.now()
+        group.project_id = project.id
+        group.project = project
+        group.id = 2
+
+        event = Event()
+        event.message = 'hello world'
+        event.logger = 'root'
+        event.site = None
+        event.project_id = project.id
+        event.project = project
+
+        with self.Settings(SENTRY_URL_PREFIX='http://example.com'):
+            p = MailProcessor(send_to=['foo@example.com'])
+            p.notify_users(group, event)
+
+        _send_mail.assert_called_once()
+        args, kwargs = _send_mail.call_args
+        self.assertEquals(kwargs.get('fail_silently'), True)
+        self.assertEquals(kwargs.get('project'), project)
+        self.assertEquals(kwargs.get('subject'), u"[Project Name] ERROR: hello world")
+
     def test_send_to(self):
         Mock = mock.Mock
         with mock.patch('sentry.models.ProjectOption.objects.get_value') as get_value:
