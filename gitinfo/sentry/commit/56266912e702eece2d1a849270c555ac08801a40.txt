commit 56266912e702eece2d1a849270c555ac08801a40
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Sep 20 15:17:44 2016 -0700

    Add event_dropped and event_filtered signals (#4188)

diff --git a/src/sentry/signals.py b/src/sentry/signals.py
index 0b9251d591..a3a0085ff7 100644
--- a/src/sentry/signals.py
+++ b/src/sentry/signals.py
@@ -25,8 +25,10 @@ class BetterSignal(Signal):
 
 regression_signal = BetterSignal(providing_args=["instance"])
 buffer_incr_complete = BetterSignal(providing_args=["model", "columns", "extra", "result"])
-event_received = BetterSignal(providing_args=["ip"])
 event_accepted = BetterSignal(providing_args=["ip", "data", "project"])
+event_dropped = BetterSignal(providing_args=["ip", "data", "project"])
+event_filtered = BetterSignal(providing_args=["ip", "data", "project"])
+event_received = BetterSignal(providing_args=["ip", "project"])
 pending_delete = BetterSignal(providing_args=["instance"])
 event_processed = BetterSignal(providing_args=['project', 'group', 'event'])
 
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 7131f6fa41..a43e296c16 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -23,7 +23,9 @@ from sentry.coreapi import (
     LazyData
 )
 from sentry.models import Project, OrganizationOption
-from sentry.signals import event_accepted, event_received
+from sentry.signals import (
+    event_accepted, event_dropped, event_filtered, event_received
+)
 from sentry.quotas.base import RateLimit
 from sentry.utils import json, metrics
 from sentry.utils.data_scrubber import SensitiveDataFilter
@@ -302,6 +304,7 @@ class StoreView(APIView):
 
         event_received.send_robust(
             ip=remote_addr,
+            project=project,
             sender=type(self),
         )
 
@@ -313,6 +316,11 @@ class StoreView(APIView):
                 (app.tsdb.models.organization_total_blacklisted, project.organization_id),
             ])
             metrics.incr('events.blacklisted')
+            event_filtered.send_robust(
+                ip=remote_addr,
+                project=project,
+                sender=type(self),
+            )
             raise APIForbidden('Event dropped due to filter')
 
         # TODO: improve this API (e.g. make RateLimit act on __ne__)
@@ -333,6 +341,11 @@ class StoreView(APIView):
                 (app.tsdb.models.organization_total_rejected, project.organization_id),
             ])
             metrics.incr('events.dropped')
+            event_dropped.send_robust(
+                ip=remote_addr,
+                project=project,
+                sender=type(self),
+            )
             if rate_limit is not None:
                 raise APIRateLimited(rate_limit.retry_after)
         else:
