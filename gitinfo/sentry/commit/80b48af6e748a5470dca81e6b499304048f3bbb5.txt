commit 80b48af6e748a5470dca81e6b499304048f3bbb5
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Dec 1 18:10:29 2015 -0800

    Tests for `sentry createuser`

diff --git a/src/sentry/runner/commands/createuser.py b/src/sentry/runner/commands/createuser.py
index a346792c14..8040809edb 100644
--- a/src/sentry/runner/commands/createuser.py
+++ b/src/sentry/runner/commands/createuser.py
@@ -55,19 +55,22 @@ def createuser(email, password, superuser, no_password, no_input):
 
         if not (password or no_password):
             password = _get_password()
-            click.echo(password)
 
         if superuser is None:
             superuser = _get_superuser()
 
+    if superuser is None:
+        superuser = False
+
     if not email:
         raise click.ClickException('Invalid or missing email address.')
 
+    # TODO(mattrobenolt): Accept password over stdin?
     if not no_password and not password:
         raise click.ClickException('No password set and --no-password not passed.')
 
     from sentry import roles
-    from sentry.models import Organization, OrganizationMember, User
+    from sentry.models import User
     from django.conf import settings
 
     user = User(
@@ -87,6 +90,7 @@ def createuser(email, password, superuser, no_password, no_input):
 
     # TODO(dcramer): kill this when we improve flows
     if settings.SENTRY_SINGLE_ORGANIZATION:
+        from sentry.models import Organization, OrganizationMember
         org = Organization.get_default()
         OrganizationMember.objects.create(
             organization=org,
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index d10dae5b09..541f2f889c 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -397,3 +397,9 @@ class PluginTestCase(TestCase):
 
 class CliTestCase(TestCase):
     runner = fixture(CliRunner)
+    command = None
+    default_args = []
+
+    def invoke(self, *args):
+        args += tuple(self.default_args)
+        return self.runner.invoke(self.command, args, obj={})
diff --git a/tests/sentry/runner/commands/test_createuser.py b/tests/sentry/runner/commands/test_createuser.py
new file mode 100644
index 0000000000..5144aee215
--- /dev/null
+++ b/tests/sentry/runner/commands/test_createuser.py
@@ -0,0 +1,91 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from sentry.testutils import CliTestCase
+from sentry.runner.commands.createuser import createuser
+from sentry.models import User, OrganizationMember
+
+
+class CreateUserTest(CliTestCase):
+    command = createuser
+    default_args = ['--no-input']
+
+    def test_superuser(self):
+        rv = self.invoke(
+            '--email=you@somewhereawesome.com',
+            '--password=awesome',
+            '--superuser',
+        )
+        assert rv.exit_code == 0, rv.output
+        assert 'you@somewhereawesome.com' in rv.output
+        assert User.objects.count() == 1
+        user = User.objects.all()[0]
+        assert user.email == 'you@somewhereawesome.com'
+        assert user.check_password('awesome')
+        assert user.is_superuser
+        assert user.is_staff
+        assert user.is_active
+
+    def test_no_superuser(self):
+        rv = self.invoke(
+            '--email=you@somewhereawesome.com',
+            '--password=awesome',
+        )
+        assert rv.exit_code == 0, rv.output
+        assert 'you@somewhereawesome.com' in rv.output
+        assert User.objects.count() == 1
+        user = User.objects.all()[0]
+        assert user.email == 'you@somewhereawesome.com'
+        assert user.check_password('awesome')
+        assert not user.is_superuser
+        assert not user.is_staff
+        assert user.is_active
+
+    def test_no_password(self):
+        rv = self.invoke(
+            '--email=you@somewhereawesome.com',
+            '--no-password',
+        )
+        assert rv.exit_code == 0, rv.output
+        assert 'you@somewhereawesome.com' in rv.output
+        assert User.objects.count() == 1
+        user = User.objects.all()[0]
+        assert user.email == 'you@somewhereawesome.com'
+        assert not user.password
+        assert not user.is_superuser
+        assert not user.is_staff
+        assert user.is_active
+
+    def test_single_org(self):
+        with self.settings(SENTRY_SINGLE_ORGANIZATION=True):
+            rv = self.invoke(
+                '--email=you@somewhereawesome.com',
+                '--no-password',
+            )
+            assert rv.exit_code == 0, rv.output
+            assert 'you@somewhereawesome.com' in rv.output
+            assert OrganizationMember.objects.count() == 1
+            member = OrganizationMember.objects.all()[0]
+            assert member.user.email == 'you@somewhereawesome.com'
+            assert member.organization.slug in rv.output
+
+    def test_not_single_org(self):
+        with self.settings(SENTRY_SINGLE_ORGANIZATION=False):
+            rv = self.invoke(
+                '--email=you@somewhereawesome.com',
+                '--no-password',
+            )
+            assert rv.exit_code == 0, rv.output
+            assert 'you@somewhereawesome.com' in rv.output
+            assert OrganizationMember.objects.count() == 0
+
+    def test_no_input(self):
+        rv = self.invoke()
+        assert rv.exit_code != 0, rv.output
+
+    def test_missing_password(self):
+        rv = self.invoke(
+            '--email=you@somewhereawesome.com',
+        )
+        assert rv.exit_code != 0, rv.output
