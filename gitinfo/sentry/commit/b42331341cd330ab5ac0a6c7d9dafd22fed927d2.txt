commit b42331341cd330ab5ac0a6c7d9dafd22fed927d2
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Feb 7 16:55:00 2018 -0800

    ref(orgs): Delete unlinked-to remove organization page

diff --git a/src/sentry/templates/sentry/remove-organization.html b/src/sentry/templates/sentry/remove-organization.html
deleted file mode 100644
index 2b4837897f..0000000000
--- a/src/sentry/templates/sentry/remove-organization.html
+++ /dev/null
@@ -1,40 +0,0 @@
-{% extends "sentry/bases/organization.html" %}
-
-{% load crispy_forms_tags %}
-{% load i18n %}
-{% load sentry_helpers %}
-
-{% block org_settings_nav %}active{% endblock %}
-
-{% block main %}
-  <div class="page-header">
-    <h2>{% trans "Remove Organization" %}</h2>
-  </div>
-
-  <form class="form-stacked" action="" method="post">
-    {% csrf_token %}
-
-    <p><strong>{% trans "Removing this organization is permanent and cannot be undone!" %}</strong></p>
-
-    {% if team_list %}
-      <p>{% trans "This will also remove the following teams and all associated projects:" %}</p>
-
-      <ul>
-        {% for team in team_list %}
-          <li>{{ team.name }}</li>
-        {% endfor %}
-      </ul>
-    {% endif %}
-
-    {{ form|as_crispy_errors }}
-
-    {% for field in form %}
-        {{ field|as_crispy_field }}
-    {% endfor %}
-
-    <fieldset class="form-actions">
-      <button type="submit" class="btn btn-danger">{% trans "Remove Organization" %}</button>
-      <a href="{% absolute_uri '/organizations/{}/settings/' organization.slug %}" class="btn btn-default">{% trans "Cancel" %}</a>
-    </fieldset>
-  </form>
-{% endblock %}
diff --git a/src/sentry/web/frontend/remove_organization.py b/src/sentry/web/frontend/remove_organization.py
deleted file mode 100644
index 585c11b979..0000000000
--- a/src/sentry/web/frontend/remove_organization.py
+++ /dev/null
@@ -1,90 +0,0 @@
-from __future__ import absolute_import
-
-import logging
-from uuid import uuid4
-
-from django import forms
-from django.contrib import messages
-from django.core.urlresolvers import reverse
-from django.utils.translation import ugettext_lazy as _
-
-from sentry.models import AuditLogEntryEvent, OrganizationStatus, Organization
-from sentry.tasks.deletion import delete_organization
-from sentry.web.frontend.base import OrganizationView
-
-ERR_DEFAULT_ORG = _('You cannot remove the default organization.')
-
-MSG_REMOVE_SUCCESS = _('The %s organization has been scheduled for removal.')
-
-delete_logger = logging.getLogger('sentry.deletions.ui')
-
-
-class RemoveOrganizationForm(forms.Form):
-    pass
-
-
-class RemoveOrganizationView(OrganizationView):
-    required_scope = 'org:admin'
-    sudo_required = True
-
-    def get_form(self, request, organization):
-        if request.method == 'POST':
-            return RemoveOrganizationForm(request.POST)
-        return RemoveOrganizationForm()
-
-    def handle(self, request, organization):
-        if organization.is_default:
-            messages.add_message(request, messages.ERROR, ERR_DEFAULT_ORG)
-            return self.redirect(reverse('sentry-organization-home', args=[organization.slug]))
-
-        form = self.get_form(request, organization)
-        if form.is_valid():
-            updated = Organization.objects.filter(
-                id=organization.id,
-                status=OrganizationStatus.VISIBLE,
-            ).update(status=OrganizationStatus.PENDING_DELETION)
-            if updated:
-                transaction_id = uuid4().hex
-                countdown = 86400
-
-                entry = self.create_audit_entry(
-                    request=request,
-                    organization=organization,
-                    target_object=organization.id,
-                    event=AuditLogEntryEvent.ORG_REMOVE,
-                    data=organization.get_audit_log_data(),
-                    transaction_id=transaction_id,
-                )
-
-                organization.send_delete_confirmation(entry, countdown)
-
-                delete_organization.apply_async(
-                    kwargs={
-                        'object_id': organization.id,
-                        'transaction_id': transaction_id,
-                        'actor_id': request.user.id,
-                    },
-                    countdown=countdown,
-                )
-
-                delete_logger.info(
-                    'object.delete.queued',
-                    extra={
-                        'object_id': organization.id,
-                        'transaction_id': transaction_id,
-                        'model': Organization.__name__,
-                    }
-                )
-
-            messages.add_message(
-                request, messages.SUCCESS, MSG_REMOVE_SUCCESS % (organization.name, )
-            )
-
-            return self.redirect(reverse('sentry'))
-
-        context = {
-            'form': form,
-            'team_list': organization.team_set.all(),
-        }
-
-        return self.respond('sentry/remove-organization.html', context)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 22b2b23906..a5708fae07 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -45,7 +45,6 @@ from sentry.web.frontend.react_page import GenericReactPageView, ReactPageView
 from sentry.web.frontend.reactivate_account import ReactivateAccountView
 from sentry.web.frontend.release_webhook import ReleaseWebhookView
 from sentry.web.frontend.remove_account import RemoveAccountView
-from sentry.web.frontend.remove_organization import RemoveOrganizationView
 from sentry.web.frontend.restore_organization import RestoreOrganizationView
 from sentry.web.frontend.remove_project import RemoveProjectView
 from sentry.web.frontend.transfer_project import TransferProjectView
@@ -401,11 +400,6 @@ urlpatterns += patterns(
     ),
     url(
         r'^organizations/(?P<organization_slug>[\w_-]+)/teams/new/$', react_page_view),
-    url(
-        r'^organizations/(?P<organization_slug>[\w_-]+)/remove/$',
-        RemoveOrganizationView.as_view(),
-        name='sentry-remove-organization'
-    ),
     url(
         r'^organizations/(?P<organization_slug>[\w_-]+)/restore/$',
         RestoreOrganizationView.as_view(),
diff --git a/tests/sentry/web/frontend/test_remove_organization.py b/tests/sentry/web/frontend/test_remove_organization.py
deleted file mode 100644
index ec4c6ac144..0000000000
--- a/tests/sentry/web/frontend/test_remove_organization.py
+++ /dev/null
@@ -1,103 +0,0 @@
-from __future__ import absolute_import
-
-from mock import patch
-
-from django.core.urlresolvers import reverse
-from django.core import mail
-
-from sentry.models import Organization, OrganizationStatus, DeletedOrganization
-from sentry.testutils import TestCase, PermissionTestCase
-
-
-class RemoveOrganizationPermissionTest(PermissionTestCase):
-    def setUp(self):
-        super(RemoveOrganizationPermissionTest, self).setUp()
-        self.path = reverse('sentry-remove-organization', args=[self.organization.slug])
-
-    def test_teamless_admin_cannot_load(self):
-        self.assert_teamless_admin_cannot_access(self.path)
-
-    def test_team_admin_cannot_load(self):
-        self.assert_team_admin_cannot_access(self.path)
-
-    def test_owner_can_load(self):
-        self.assert_owner_can_access(self.path)
-
-
-class RemoveOrganizationTest(TestCase):
-    def setUp(self):
-        super(RemoveOrganizationTest, self).setUp()
-
-        self.organization = self.create_organization(name='foo', owner=self.user)
-        self.team = self.create_team(organization=self.organization)
-        self.path = reverse('sentry-remove-organization', args=[self.organization.slug])
-
-        self.login_as(self.user)
-
-    def test_renders_with_context(self):
-        resp = self.client.get(self.path)
-
-        assert resp.status_code == 200
-
-        self.assertTemplateUsed(resp, 'sentry/remove-organization.html')
-
-        assert resp.context['organization'] == self.organization
-        assert resp.context['form']
-        assert resp.context['team_list']
-
-    @patch('sentry.web.frontend.remove_organization.uuid4')
-    @patch('sentry.web.frontend.remove_organization.delete_organization')
-    def test_success(self, mock_delete_organization, mock_uuid4):
-        class uuid(object):
-            hex = 'abc123'
-
-        mock_uuid4.return_value = uuid
-
-        owners = self.organization.get_owners()
-        assert len(owners) > 0
-
-        with self.tasks():
-            resp = self.client.post(self.path)
-
-        assert resp.status_code == 302
-
-        org = Organization.objects.get(id=self.organization.id)
-
-        assert org.status == OrganizationStatus.PENDING_DELETION
-        deleted_org = DeletedOrganization.objects.get(slug=org.slug)
-        self.assert_valid_deleted_log(deleted_org, org)
-
-        mock_delete_organization.apply_async.assert_called_once_with(
-            kwargs={
-                'object_id': org.id,
-                'transaction_id': 'abc123',
-                'actor_id': self.user.id,
-            },
-            countdown=86400,
-        )
-
-        # Make sure we've emailed all owners
-        assert len(mail.outbox) == len(owners)
-        owner_emails = set(o.email for o in owners)
-        for msg in mail.outbox:
-            assert 'Deletion' in msg.subject
-            assert len(msg.to) == 1
-            owner_emails.remove(msg.to[0])
-        # No owners should be remaining
-        assert len(owner_emails) == 0
-
-    def test_cannot_remove_default(self):
-        Organization.objects.all().delete()
-
-        org = self.create_organization()
-
-        self.login_as(self.user)
-
-        with self.settings(SENTRY_SINGLE_ORGANIZATION=True):
-            resp = self.client.post(self.path)
-
-        assert resp.status_code == 302
-
-        organization = Organization.objects.get(id=org.id)
-
-        assert organization.status == OrganizationStatus.VISIBLE
