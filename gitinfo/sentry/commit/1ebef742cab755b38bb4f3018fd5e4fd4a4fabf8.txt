commit 1ebef742cab755b38bb4f3018fd5e4fd4a4fabf8
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Oct 20 11:38:41 2014 +0200

    Convert create access group view

diff --git a/src/sentry/web/forms/teams.py b/src/sentry/web/forms/teams.py
index 1b8c065be5..7333646c1d 100644
--- a/src/sentry/web/forms/teams.py
+++ b/src/sentry/web/forms/teams.py
@@ -12,23 +12,7 @@ from django.utils.translation import ugettext_lazy as _
 
 from sentry.constants import MEMBER_TYPES
 from sentry.models import TeamMember, AccessGroup, Project
-from sentry.web.forms.fields import UserField, get_team_choices
-
-
-class SelectTeamForm(forms.Form):
-    team = forms.TypedChoiceField(choices=(), coerce=int)
-
-    def __init__(self, team_list, data, *args, **kwargs):
-        super(SelectTeamForm, self).__init__(data=data, *args, **kwargs)
-        self.team_list = dict((t.pk, t) for t in team_list.itervalues())
-        self.fields['team'].choices = get_team_choices(self.team_list)
-        self.fields['team'].widget.choices = self.fields['team'].choices
-
-    def clean_team(self):
-        value = self.cleaned_data.get('team')
-        if not value or value == -1:
-            return None
-        return self.team_list.get(value)
+from sentry.web.forms.fields import UserField
 
 
 class BaseTeamMemberForm(forms.ModelForm):
@@ -59,10 +43,6 @@ class BaseAccessGroupForm(forms.ModelForm):
         model = AccessGroup
 
 
-class NewAccessGroupForm(BaseAccessGroupForm):
-    pass
-
-
 class EditAccessGroupForm(BaseAccessGroupForm):
     pass
 
diff --git a/src/sentry/web/frontend/create_access_group.py b/src/sentry/web/frontend/create_access_group.py
new file mode 100644
index 0000000000..2d7a93304d
--- /dev/null
+++ b/src/sentry/web/frontend/create_access_group.py
@@ -0,0 +1,56 @@
+from __future__ import absolute_import
+
+from django import forms
+from sentry.constants import MEMBER_TYPES, MEMBER_USER
+from django.core.urlresolvers import reverse
+from django.http import HttpResponseRedirect
+from django.utils.translation import ugettext_lazy as _
+
+from sentry.models import TeamMemberType, AccessGroup
+from sentry.web.frontend.base import TeamView
+
+
+class NewAccessGroupForm(forms.ModelForm):
+    name = forms.CharField(label=_('Group Name'), max_length=200,
+        widget=forms.TextInput(attrs={'placeholder': _('API Team')}))
+    type = forms.ChoiceField(label=_('Access Type'), choices=MEMBER_TYPES,
+        help_text=_('Members will gain this level of access to all projects assigned to this group.'))
+
+    class Meta:
+        fields = ('name', 'type')
+        model = AccessGroup
+
+
+class CreateAccessGroupView(TeamView):
+    required_access = TeamMemberType.ADMIN
+
+    def get_form(self, request):
+        initial = {
+            'type': MEMBER_USER,
+        }
+
+        return NewAccessGroupForm(request.POST or None, initial=initial)
+
+    def get(self, request, organization, team):
+        form = self.get_form(request)
+
+        context = {
+            'form': form,
+        }
+
+        return self.respond('sentry/teams/groups/new.html', context)
+
+    def post(self, request, organization, team):
+        form = self.get_form(request)
+        if form.is_valid():
+            inst = form.save(commit=False)
+            inst.team = team
+            inst.managed = False
+            inst.save()
+            return HttpResponseRedirect(reverse('sentry-manage-access-groups', args=[team.slug]))
+
+        context = {
+            'form': form,
+        }
+
+        return self.respond('sentry/teams/groups/new.html', context)
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index 160bfb958b..81836fb22d 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -14,7 +14,7 @@ from django.http import HttpResponseRedirect
 from django.views.decorators.csrf import csrf_protect
 from django.utils.translation import ugettext as _
 
-from sentry.constants import MEMBER_USER, MEMBER_OWNER
+from sentry.constants import MEMBER_OWNER
 from sentry.models import PendingTeamMember, TeamMember, AccessGroup, User
 from sentry.permissions import (
     can_edit_team_member, can_remove_team_member,
@@ -22,7 +22,7 @@ from sentry.permissions import (
 from sentry.plugins import plugins
 from sentry.web.decorators import has_access
 from sentry.web.forms.teams import (
-    EditTeamMemberForm, AcceptInviteForm, NewAccessGroupForm,
+    EditTeamMemberForm, AcceptInviteForm,
     EditAccessGroupForm, NewAccessGroupMemberForm, NewAccessGroupProjectForm,
     RemoveAccessGroupForm)
 from sentry.web.helpers import render_to_response
@@ -196,30 +196,6 @@ def reinvite_pending_team_member(request, team, member_id):
     return HttpResponseRedirect(reverse('sentry-manage-team', args=[team.slug]))
 
 
-@csrf_protect
-@has_access(MEMBER_OWNER)
-def new_access_group(request, team):
-    initial = {
-        'type': MEMBER_USER,
-    }
-
-    form = NewAccessGroupForm(request.POST or None, initial=initial)
-    if form.is_valid():
-        inst = form.save(commit=False)
-        inst.team = team
-        inst.managed = False
-        inst.save()
-        return HttpResponseRedirect(reverse('sentry-manage-access-groups', args=[team.slug]))
-
-    context = csrf(request)
-    context.update({
-        'form': form,
-        'SUBSECTION': 'groups',
-    })
-
-    return render_with_team_context(team, 'sentry/teams/groups/new.html', context, request)
-
-
 @has_access(MEMBER_OWNER)
 @csrf_protect
 def access_group_details(request, team, group_id):
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index c81267e7c8..047dc01d87 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -39,6 +39,7 @@ from sentry.web.frontend.organization_home import OrganizationHomeView
 from sentry.web.frontend.organization_members import OrganizationMembersView
 from sentry.web.frontend.organization_settings import OrganizationSettingsView
 from sentry.web.frontend.organization_teams import OrganizationTeamsView
+from sentry.web.frontend.create_access_group import CreateAccessGroupView
 from sentry.web.frontend.create_project import CreateProjectView
 from sentry.web.frontend.create_team import CreateTeamView
 from sentry.web.frontend.create_team_member import CreateTeamMemberView
@@ -133,7 +134,7 @@ urlpatterns += patterns('',
         name='sentry-remove-team'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/$', TeamAccessGroupsView.as_view(),
         name='sentry-manage-access-groups'),
-    url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/new/$', teams.new_access_group,
+    url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/new/$', CreateAccessGroupView.as_view(),
         name='sentry-new-access-group'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/edit/$', teams.access_group_details,
         name='sentry-edit-access-group'),
