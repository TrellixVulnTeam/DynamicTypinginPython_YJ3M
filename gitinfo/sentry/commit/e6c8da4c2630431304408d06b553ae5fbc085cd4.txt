commit e6c8da4c2630431304408d06b553ae5fbc085cd4
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Sun Mar 15 21:56:23 2020 -0700

    chore(ts): Convert note/header (#17668)

diff --git a/src/sentry/static/sentry/app/components/activity/note/header.jsx b/src/sentry/static/sentry/app/components/activity/note/header.jsx
deleted file mode 100644
index 8ea7a16802..0000000000
--- a/src/sentry/static/sentry/app/components/activity/note/header.jsx
+++ /dev/null
@@ -1,73 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from '@emotion/styled';
-
-import {t} from 'app/locale';
-import ActivityAuthor from 'app/components/activity/author';
-import ConfigStore from 'app/stores/configStore';
-import LinkWithConfirmation from 'app/components/links/linkWithConfirmation';
-import SentryTypes from 'app/sentryTypes';
-
-import EditorTools from './editorTools';
-
-class NoteHeader extends React.Component {
-  static propTypes = {
-    authorName: PropTypes.string.isRequired,
-    user: SentryTypes.User,
-    onEdit: PropTypes.func.isRequired,
-    onDelete: PropTypes.func.isRequired,
-  };
-
-  canEdit = () => {
-    const user = ConfigStore.get('user');
-    return user && (user.isSuperuser || user.id === this.props.user.id);
-  };
-
-  render() {
-    const {authorName, onEdit, onDelete} = this.props;
-
-    return (
-      <div>
-        <ActivityAuthor>{authorName}</ActivityAuthor>
-        {this.canEdit() && (
-          <EditorTools>
-            <Edit onClick={onEdit}>{t('Edit')}</Edit>
-            <LinkWithConfirmation
-              title={t('Remove')}
-              message={t('Are you sure you wish to delete this comment?')}
-              onConfirm={onDelete}
-            >
-              <Remove>{t('Remove')}</Remove>
-            </LinkWithConfirmation>
-          </EditorTools>
-        )}
-      </div>
-    );
-  }
-}
-
-const getActionStyle = p => `
-  padding: 0 7px;
-  color: ${p.theme.gray1};
-  font-weight: normal;
-`;
-
-const Edit = styled('a')`
-  ${getActionStyle};
-  margin-left: 7px;
-
-  &:hover {
-    color: ${p => p.theme.gray2};
-  }
-`;
-
-const Remove = styled('span')`
-  ${getActionStyle};
-  border-left: 1px solid ${p => p.theme.borderLight};
-
-  &:hover {
-    color: ${p => p.theme.error};
-  }
-`;
-
-export default NoteHeader;
diff --git a/src/sentry/static/sentry/app/components/activity/note/header.tsx b/src/sentry/static/sentry/app/components/activity/note/header.tsx
new file mode 100644
index 0000000000..38c6b2ba1f
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/activity/note/header.tsx
@@ -0,0 +1,67 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {t} from 'app/locale';
+import ActivityAuthor from 'app/components/activity/author';
+import ConfigStore from 'app/stores/configStore';
+import LinkWithConfirmation from 'app/components/links/linkWithConfirmation';
+import {User} from 'app/types';
+import {Theme} from 'app/utils/theme';
+
+import EditorTools from './editorTools';
+
+type Props = {
+  authorName: string;
+  user: User;
+  onEdit: () => void;
+  onDelete: () => void;
+};
+
+function canEdit(editingUser: User) {
+  const user = ConfigStore.get('user');
+  return user && (user.isSuperuser || user.id === editingUser.id);
+}
+
+const NoteHeader = ({authorName, user, onEdit, onDelete}: Props) => (
+  <div>
+    <ActivityAuthor>{authorName}</ActivityAuthor>
+    {canEdit(user) && (
+      <EditorTools>
+        <Edit onClick={onEdit}>{t('Edit')}</Edit>
+        <LinkWithConfirmation
+          title={t('Remove')}
+          message={t('Are you sure you wish to delete this comment?')}
+          onConfirm={onDelete}
+        >
+          <Remove>{t('Remove')}</Remove>
+        </LinkWithConfirmation>
+      </EditorTools>
+    )}
+  </div>
+);
+
+const getActionStyle = (p: {theme: Theme}) => `
+  padding: 0 7px;
+  color: ${p.theme.gray1};
+  font-weight: normal;
+`;
+
+const Edit = styled('a')`
+  ${getActionStyle};
+  margin-left: 7px;
+
+  &:hover {
+    color: ${p => p.theme.gray2};
+  }
+`;
+
+const Remove = styled('span')`
+  ${getActionStyle};
+  border-left: 1px solid ${p => p.theme.borderLight};
+
+  &:hover {
+    color: ${p => p.theme.error};
+  }
+`;
+
+export default NoteHeader;
