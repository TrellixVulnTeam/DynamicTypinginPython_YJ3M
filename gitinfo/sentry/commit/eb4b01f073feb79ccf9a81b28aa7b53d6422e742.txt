commit eb4b01f073feb79ccf9a81b28aa7b53d6422e742
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Aug 19 15:50:16 2016 -0700

    Ensure CSRF cookie name is configurable (#3988)
    
    * Ensure CSRF cookie name is configurable
    
    @getsentry/ui @getsentry/security

diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index 5562858d52..81508ce7c5 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -1,5 +1,7 @@
 import jQuery from 'jquery';
 
+const csrfCookieName = window.csrfCookieName || 'sc';
+
 // setup jquery for CSRF tokens
 function getCookie(name) {
   let cookieValue = null;
@@ -21,10 +23,11 @@ function csrfSafeMethod(method) {
   // these HTTP methods do not require CSRF protection
   return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
 }
+
 jQuery.ajaxSetup({
   beforeSend: function(xhr, settings) {
     if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
-      xhr.setRequestHeader('X-CSRFToken', getCookie('sc'));
+      xhr.setRequestHeader('X-CSRFToken', getCookie(csrfCookieName));
     }
   }
 });
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 224c6b9845..9a1e0e7374 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -32,6 +32,11 @@
 
   <title>{% block title %}Sentry{% endblock %}</title>
 
+  <script>
+  window.csrfCookieName = '{{ CSRF_COOKIE_NAME }}';
+  </script>
+
+
   {% block scripts %}
   <script src="{% asset_url "sentry" "dist/vendor.js" %}"{% crossorigin %}></script>
   {% locale_js_include %}
diff --git a/src/sentry/web/frontend/react_page.py b/src/sentry/web/frontend/react_page.py
index db0f7c0ba1..a2054f47b4 100644
--- a/src/sentry/web/frontend/react_page.py
+++ b/src/sentry/web/frontend/react_page.py
@@ -1,7 +1,8 @@
 from __future__ import absolute_import
 
-from django.middleware.csrf import get_token as get_csrf_token
+from django.conf import settings
 from django.http import HttpResponse
+from django.middleware.csrf import get_token as get_csrf_token
 from django.template import loader, Context
 
 from sentry.models import Project
@@ -12,7 +13,10 @@ from sentry.web.frontend.base import BaseView, OrganizationView
 class ReactMixin(object):
     def get_context(self, request):
         # this hook is utilized by getsentry
-        return {'request': request}
+        return {
+            'request': request,
+            'CSRF_COOKIE_NAME': settings.CSRF_COOKIE_NAME,
+        }
 
     def handle_react(self, request):
         context = Context(self.get_context(request))
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index ebda986706..cc50afa248 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -50,6 +50,7 @@ def get_default_context(request, existing_context=None, team=None):
 
     context = {
         'EVENTS_PER_PAGE': EVENTS_PER_PAGE,
+        'CSRF_COOKIE_NAME': settings.CSRF_COOKIE_NAME,
         'URL_PREFIX': options.get('system.url-prefix'),
         'SINGLE_ORGANIZATION': settings.SENTRY_SINGLE_ORGANIZATION,
         'PLUGINS': plugins,
