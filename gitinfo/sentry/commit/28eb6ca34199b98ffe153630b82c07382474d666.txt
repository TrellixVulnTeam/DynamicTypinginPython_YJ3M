commit 28eb6ca34199b98ffe153630b82c07382474d666
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 26 18:39:46 2011 -0800

    Prototype JS client

diff --git a/sentry/static/scripts/client.js b/sentry/static/scripts/client.js
new file mode 100644
index 0000000000..c2377cb2f4
--- /dev/null
+++ b/sentry/static/scripts/client.js
@@ -0,0 +1,157 @@
+// Originally based on the Arecibo JavaScript client
+
+if (Sentry === undefined) {
+    var Sentry = {};
+}
+(function(){
+    Sentry.client = {};
+
+    var self = Sentry.client;
+
+    Sentry.client.loaded = false;
+    Sentry.client.options = {
+        fetchHeaders: false,
+        publicKey: null,
+        server: '/sentry/store/', // JS client only supports a single server
+        projectId: 1
+    };
+
+    Sentry.client.config = function(data){
+        for (var k in data) {
+            self.options[k] = data[k];
+        }
+    };
+
+    Sentry.client.parseUrl = function(url) {
+        var url_parts = url.split('?');
+        var querystring = url_parts[1];
+
+        return {
+            url: url_parts[0],
+            querystring: url_parts[1]
+        };
+    };
+
+    Sentry.client.getHeaders = function() {
+        if (self.options.fetchHeaders) {
+            var req = new XMLHttpRequest();
+            req.open('HEAD', document.location, false);
+            req.send(null);
+            headers = req.getAllResponseHeaders().toLowerCase();
+        } else {
+            headers = {
+                "Referer": document.referrer,
+                "User-Agent": navigator.userAgent
+            };
+        }
+        return headers;
+    };
+
+    Sentry.client.addEvent = function(elem, event, func) {
+        if (elem.addEventListener) {
+            elem.addEventListener(event, func, false);
+            return true;
+        } else if (elem.attachEvent) {
+            var result = elem.attachEvent("on"+event, func);
+            return result;
+        }
+        return false;
+    };
+
+    Sentry.client.process = function(data) {
+        data.project = self.options.projectId;
+
+        var req = new XMLHttpRequest();
+        // req.setRequestHeader('User-Agent', 'Sentry:JS/1.0');
+        // req.setRequestHeader('Content-type', 'application/json');
+        // req.setRequestHeader("X-Requested-With", "XMLHttpRequest");
+        req.open('POST', self.options.server + '?project_id=' + self.options.projectId, false);
+        console.log(JSON.stringify(data));
+        req.send(JSON.stringify(data));
+    };
+
+    Sentry.client.captureException = function(e) {
+        var lineno;
+        var url;
+        var traceback;
+        var headers;
+        var message = e.toString();
+
+        if (e.line) { // WebKit
+            lineno = e.line;
+        } else if (e.lineNumber) { // Mozilla
+            lineno = e.lineNumber;
+        }
+
+        if (e.sourceURL) { // Webkit
+            url = e.sourceURL;
+        } else if (e.fileName) { // Mozilla
+            url = e.fileName;
+        } else {
+            url = window.location;
+        }
+
+        // Currently Mozilla only:
+        if (e.stack) {
+            traceback = e.stack;
+        }
+
+        var urlparts = self.parseUrl(url);
+
+        var data = {
+            "message": e.name + ": " + message,
+            // "sentry.interfaces.Stacktrace": {
+            //     "frames": [
+            //         {
+            //             "lineno": lineno
+            //         }
+            //     ]
+            // },
+            "sentry.interfaces.Exception": {
+                "type": e.name,
+                "value": message
+            },
+            "sentry.interfaces.Http": {
+                "url": urlparts.url,
+                "querystring": urlparts.querystring,
+                "headers": self.getHeaders()
+            }
+        };
+
+        self.process(data);
+    };
+
+    Sentry.client.registerGlobalHandler = function() {
+        /*
+            NOTE: Currently this will only work on Firefox and Internet Explorer.
+
+            Safari and Chrome have open feature requests for global error handlers:
+
+            https://bugs.webkit.org/show_bug.cgi?id=8519
+            http://code.google.com/p/chromium/issues/detail?id=7771
+        */
+
+        window.onerror = function(message, url, lineno, stack) {
+            var urlparts = self.parseUrl(url);
+            var data = {
+                "message": message,
+                // "sentry.interfaces.Stacktrace": {
+                //     "frames": [
+                //         {
+                //             "lineno": lineno
+                //         }
+                //     ]
+                // },
+                "sentry.interfaces.Exception": {
+                    "value": message
+                },
+                "sentry.interfaces.Http": {
+                    "url": urlparts.url,
+                    "querystring": urlparts.querystring,
+                    "headers": self.getHeaders()
+                }
+            };
+            self.process(data);
+        };
+    };
+}());
\ No newline at end of file
diff --git a/sentry/static/scripts/global.js b/sentry/static/scripts/global.js
index 454895f9f9..15900875af 100644
--- a/sentry/static/scripts/global.js
+++ b/sentry/static/scripts/global.js
@@ -20,8 +20,12 @@ function getQueryParams()
     return vars;
 }
 
-var Sentry = {};
+if (Sentry === undefined) {
+    var Sentry = {};
+}
 (function(){
+    var self = Sentry;
+
     Sentry.options = {
         mediaUrl: '/media/',
         apiUrl: '/api/',
@@ -30,7 +34,7 @@ var Sentry = {};
 
     Sentry.config = function(data){
         $.each(data, function(k, v){
-            Sentry.options[k] = v;
+            self.options[k] = v;
         });
     };
 
@@ -111,19 +115,19 @@ var Sentry = {};
                 for (var i=groups.length-1, el, row; (el=groups[i]); i--) {
                     var id = el[0];
                     var data = el[1];
+                    var url = Sentry.options.apiUrl + '?' + $.param({
+                        op: 'notification',
+                        count: data.count,
+                        title: data.title,
+                        message: data.message,
+                        level: data.level,
+                        logger: data.logger
+                    });
                     if ((row = $('#group_' + id))) {
                         row.remove();
                         $('#event_list').prepend(data.html);
                         if (row.attr('data-sentry-count') != data.count) {
                             $('#group_' + id).addClass('fresh');
-                            var url = Sentry.options.apiUrl + '?' + $.param({
-                                op: 'notification',
-                                count: data.count,
-                                title: data.title,
-                                message: data.message,
-                                level: data.level,
-                                logger: data.logger
-                            });
                         }
                     } else {
                         $('#event_list').prepend(data.html);
diff --git a/sentry/templates/sentry/layout.html b/sentry/templates/sentry/layout.html
index 36d4417de1..eba8612866 100644
--- a/sentry/templates/sentry/layout.html
+++ b/sentry/templates/sentry/layout.html
@@ -7,9 +7,21 @@
         <meta http-equiv="content-type" content="text/html; charset=utf-8">
         <meta name="robots" content="NONE,NOARCHIVE">
         <link href="{% url sentry-media "styles/bootstrap.min.css" %}" rel="stylesheet" type="text/css"/>
+
         <link href="{% url sentry-media "styles/global.css" %}" rel="stylesheet" type="text/css"/>
         <link href="{% url sentry-media "images/sentry.png" %}" rel="shortcut icon"/>
+
         <title>{% block title %}Sentry{% endblock %}</title>
+
+        <script type="text/javascript" src="{% url sentry-media "scripts/client.js" %}"></script>
+        <script type="text/javascript">
+        Sentry.client.config({
+            server: '{% url sentry-store %}',
+            projectId: '{{ PROJECT_ID }}'
+        })
+        Sentry.client.registerGlobalHandler();
+        </script>
+
         <script type="text/javascript" src="{% url sentry-media "scripts/jquery.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "scripts/jquery.flot.min.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "scripts/jquery.animate-colors-min.js" %}"></script>
@@ -22,6 +34,7 @@
             defaultImage: '{% url sentry-media 'images/sentry.png' %}'
         });
         </script>
+
         {% block meta %}
         {% endblock %}
     </head>
