commit 3e4648dac76a6b8c056abc875c8cb79fb3fd39ca
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Sep 1 11:13:39 2017 -0700

    style(eslint): add linting for js imports (#5863)

diff --git a/.eslintrc b/.eslintrc
index 3228979488..db536041fc 100644
--- a/.eslintrc
+++ b/.eslintrc
@@ -21,8 +21,13 @@
   },
   "plugins": [
     "react",
+    "import",
     "getsentry"
   ],
+  "settings": {
+    "import/resolver": "webpack",
+    "import/extensions": [".js", ".jsx"]
+  },
   "rules": {
     /**
      * Strict mode
@@ -188,7 +193,154 @@
     "react/react-in-jsx-scope": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/react-in-jsx-scope.md
     "react/self-closing-comp": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md
     "react/sort-comp": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md
-    "react/jsx-wrap-multilines": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/wrap-multilines.md
+
+    // Disabled because of prettier
+    "react/jsx-wrap-multilines": 0, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/wrap-multilines.md
+
+    /**
+     * Imports (defaults from airbnb guide unless noted)
+     * https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb-base/rules/imports.js
+     */
+    // ensure imports point to files/modules that can be resolved
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-unresolved.md
+    "import/no-unresolved": [2, { commonjs: true, caseSensitive: true }],
+
+    // ensure named imports coupled with named exports
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/named.md#when-not-to-use-it
+    "import/named": 0,
+
+    // ensure default import coupled with default export
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/default.md#when-not-to-use-it
+    "import/default": 0,
+
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/namespace.md
+    "import/namespace": 0,
+
+    // disallow invalid exports, e.g. multiple defaults
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/export.md
+    "import/export": 2,
+
+    // Redflags
+    // do not allow a default import name to match a named export (airbnb: error)
+    // Issue with `DefaultIssuePlugin` and `app/plugins/index`
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-as-default.md
+    "import/no-named-as-default": 0,
+
+    // warn on accessing default export property names that are also named exports (airbnb: error)
+    // This cannot be abled because of how `utils` is exported, as well as how it used in getsentry
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-as-default-member.md
+    "import/no-named-as-default-member": 0,
+
+    // disallow use of jsdoc-marked-deprecated imports
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-deprecated.md
+    "import/no-deprecated": 0,
+
+    // Forbid mutable exports (airbnb: error)
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-mutable-exports.md
+    // TODO: enable?
+    "import/no-mutable-exports": 0,
+
+        // disallow require()
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-commonjs.md
+    "import/no-commonjs": 0,
+
+    // disallow AMD require/define
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-amd.md
+    "import/no-amd": 2,
+
+    // No Node.js builtin modules (airbnb: off)
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-nodejs-modules.md
+    "import/no-nodejs-modules": 2,
+
+    // Stylistic
+    // disallow non-import statements appearing before import statements
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/first.md
+    "import/first": [2, "absolute-first"],
+
+    // disallow duplicate imports
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-duplicates.md
+    "import/no-duplicates": 2,
+
+    // disallow namespace imports
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-namespace.md
+    "import/no-namespace": 0,
+
+    // Ensure consistent use of file extension within the import path
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/extensions.md
+    "import/extensions": [2, "always", {
+      "js": "never",
+      "jsx": "never"
+    }],
+
+    // Enforce a convention in module import order
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/order.md
+    // TODO: enable?
+    "import/order": [0, {
+      "groups": [["builtin", "external", "internal"], "parent", "sibling", "index"],
+      "newlines-between": "ignore"
+    }],
+
+    // Require a newline after the last import/require in a group
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/newline-after-import.md
+    "import/newline-after-import": 2,
+
+    // Require modules with a single export to use a default export (airbnb: error)
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/prefer-default-export.md
+    "import/prefer-default-export": 0,
+
+    // Restrict which files can be imported in a given folder
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-restricted-paths.md
+    "import/no-restricted-paths": 0,
+
+    // Forbid modules to have too many dependencies
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/max-dependencies.md
+    "import/max-dependencies": [0, { max: 10 }],
+
+    // Forbid import of modules using absolute paths
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-absolute-path.md
+    "import/no-absolute-path": 2,
+
+    // Forbid require() calls with expressions (airbnb: error)
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-dynamic-require.md
+    "import/no-dynamic-require": 0,
+
+    // prevent importing the submodules of other modules
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-internal-modules.md
+    "import/no-internal-modules": [0, {
+      "allow": []
+    }],
+
+    // Warn if a module could be mistakenly parsed as a script by a consumer
+    // leveraging Unambiguous JavaScript Grammar
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/unambiguous.md
+    // this should not be enabled until this proposal has at least been *presented* to TC39.
+    // At the moment, it"s not a thing.
+    "import/unambiguous": 0,
+
+    // Forbid Webpack loader syntax in imports
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-webpack-loader-syntax.md
+    "import/no-webpack-loader-syntax": 2,
+
+    // Prevent unassigned imports
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-unassigned-import.md
+    // importing for side effects is perfectly acceptable, if you need side effects.
+    "import/no-unassigned-import": 0,
+
+    // Prevent importing the default as if it were named
+    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-default.md
+    "import/no-named-default": 2,
+
+    // Reports if a module"s default export is unnamed
+    // https://github.com/benmosher/eslint-plugin-import/blob/d9b712ac7fd1fddc391f7b234827925c160d956f/docs/rules/no-anonymous-default-export.md
+    "import/no-anonymous-default-export": [0, {
+      "allowArray": false,
+      "allowArrowFunction": false,
+      "allowAnonymousClass": false,
+      "allowAnonymousFunction": false,
+      "allowLiteral": false,
+      "allowObject": false
+    }],
+
     /**
      * Custom
      */
diff --git a/package.json b/package.json
index cfe2ac692a..b5fc7bbcea 100644
--- a/package.json
+++ b/package.json
@@ -117,7 +117,9 @@
     "chai": "3.4.1",
     "enzyme": "2.9.1",
     "eslint": "3.19.0",
+    "eslint-import-resolver-webpack": "^0.8.3",
     "eslint-plugin-getsentry": "1.0.0",
+    "eslint-plugin-import": "^2.7.0",
     "eslint-plugin-react": "6.10.3",
     "jest": "^19.0.2",
     "karma-sourcemap-loader": "0.3.7",
diff --git a/src/sentry/static/sentry/app/actionCreators/incidents.jsx b/src/sentry/static/sentry/app/actionCreators/incidents.jsx
index 5c6302c094..c6d8c8c37f 100644
--- a/src/sentry/static/sentry/app/actionCreators/incidents.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/incidents.jsx
@@ -1,6 +1,7 @@
+import $ from 'jquery';
+
 import ConfigStore from '../stores/configStore';
 import IncidentActions from '../actions/incidentActions';
-import $ from 'jquery';
 
 function getIncidentsFromIncidentResponse(incidents) {
   if (incidents === null || incidents.length == 0) {
diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 7f5e421631..300baf4a04 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -1,7 +1,8 @@
 import $ from 'jquery';
+import _ from 'lodash';
+
 import GroupActions from './actions/groupActions';
 import TeamActions from './actions/teamActions';
-import _ from 'lodash';
 
 export class Request {
   constructor(xhr) {
diff --git a/src/sentry/static/sentry/app/components/activity/item.jsx b/src/sentry/static/sentry/app/components/activity/item.jsx
index 3c209f1b86..a4482009f3 100644
--- a/src/sentry/static/sentry/app/components/activity/item.jsx
+++ b/src/sentry/static/sentry/app/components/activity/item.jsx
@@ -1,12 +1,12 @@
-import marked from 'marked';
 import PropTypes from 'prop-types';
 import React from 'react';
+import {Link} from 'react-router';
+import marked from 'marked';
 
 import {CommitLink} from '../../views/releases/releaseCommits';
 import Duration from '../../components/duration';
 import Avatar from '../../components/avatar';
 import IssueLink from '../../components/issueLink';
-import {Link} from 'react-router';
 import MemberListStore from '../../stores/memberListStore';
 import TimeSince from '../../components/timeSince';
 import Version from '../../components/version';
diff --git a/src/sentry/static/sentry/app/components/activity/noteInput.jsx b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
index ea4a6c0129..6b13948666 100644
--- a/src/sentry/static/sentry/app/components/activity/noteInput.jsx
+++ b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
@@ -1,6 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import marked from 'marked';
+import {MentionsInput, Mention} from 'react-mentions';
+import PureRenderMixin from 'react-addons-pure-render-mixin';
 
 import ApiMixin from '../../mixins/apiMixin';
 import GroupStore from '../../stores/groupStore';
@@ -10,9 +12,6 @@ import localStorage from '../../utils/localStorage';
 import {t} from '../../locale';
 import mentionsStyle from '../../../styles/mentions-styles';
 
-import {MentionsInput, Mention} from 'react-mentions';
-
-import PureRenderMixin from 'react-addons-pure-render-mixin';
 const localStorageKey = 'noteinput:latest';
 
 function makeDefaultErrorJson() {
diff --git a/src/sentry/static/sentry/app/components/alertMessage.jsx b/src/sentry/static/sentry/app/components/alertMessage.jsx
index 0707d61ba1..0e2587ca75 100644
--- a/src/sentry/static/sentry/app/components/alertMessage.jsx
+++ b/src/sentry/static/sentry/app/components/alertMessage.jsx
@@ -1,7 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import AlertActions from '../actions/alertActions';
 import PureRenderMixin from 'react-addons-pure-render-mixin';
+
+import AlertActions from '../actions/alertActions';
 import {t} from '../locale';
 
 const AlertMessage = React.createClass({
diff --git a/src/sentry/static/sentry/app/components/contextData.jsx b/src/sentry/static/sentry/app/components/contextData.jsx
index 518e79dc16..269857045d 100644
--- a/src/sentry/static/sentry/app/components/contextData.jsx
+++ b/src/sentry/static/sentry/app/components/contextData.jsx
@@ -1,9 +1,10 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import jQuery from 'jquery';
-import {isUrl} from '../utils';
 import _ from 'lodash';
 
+import {isUrl} from '../utils';
+
 function looksLikeObjectRepr(value) {
   let a = value[0];
   let z = value[value.length - 1];
diff --git a/src/sentry/static/sentry/app/components/customIgnoreDurationModal.jsx b/src/sentry/static/sentry/app/components/customIgnoreDurationModal.jsx
index 8ec2259a18..cec2971a72 100644
--- a/src/sentry/static/sentry/app/components/customIgnoreDurationModal.jsx
+++ b/src/sentry/static/sentry/app/components/customIgnoreDurationModal.jsx
@@ -1,9 +1,10 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import Modal from 'react-bootstrap/lib/Modal';
-import {t} from '../locale';
 import {sprintf} from 'sprintf-js';
 
+import {t} from '../locale';
+
 export default React.createClass({
   propTypes: {
     onSelected: PropTypes.func,
diff --git a/src/sentry/static/sentry/app/components/dateTime.jsx b/src/sentry/static/sentry/app/components/dateTime.jsx
index 3c22f05a8c..23e6681177 100644
--- a/src/sentry/static/sentry/app/components/dateTime.jsx
+++ b/src/sentry/static/sentry/app/components/dateTime.jsx
@@ -1,9 +1,10 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import moment from 'moment';
-import ConfigStore from '../stores/configStore.jsx';
 import _ from 'lodash';
 
+import ConfigStore from '../stores/configStore';
+
 const DateTime = React.createClass({
   propTypes: {
     date: PropTypes.any.isRequired,
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
index a0a3c76dc2..3778c22c06 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
@@ -1,12 +1,12 @@
 import React from 'react';
+import PropTypes from 'prop-types';
+import queryString from 'query-string';
 
 import ClippedBox from '../../clippedBox';
 import KeyValueList from './keyValueList';
 import ContextData from '../../contextData';
 
 import {objectIsEmpty} from '../../../utils';
-import PropTypes from 'prop-types';
-import queryString from 'query-string';
 import {t} from '../../../locale';
 
 const RichHttpContent = React.createClass({
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
index fc1634efc3..bdaa20c434 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
@@ -1,5 +1,5 @@
-import {defined} from '../../../utils';
 import _ from 'lodash';
+import {defined} from '../../../utils';
 
 export function escapeQuotes(v) {
   return v.replace(/"/g, '\\"');
diff --git a/src/sentry/static/sentry/app/components/pagination.jsx b/src/sentry/static/sentry/app/components/pagination.jsx
index c874518b27..2639d3598d 100644
--- a/src/sentry/static/sentry/app/components/pagination.jsx
+++ b/src/sentry/static/sentry/app/components/pagination.jsx
@@ -1,7 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import utils from '../utils';
 import {browserHistory} from 'react-router';
+
+import utils from '../utils';
 import {t} from '../locale';
 
 export default React.createClass({
diff --git a/src/sentry/static/sentry/app/components/stackedBarChart.jsx b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
index 8f32c52b2c..31f070c2e2 100644
--- a/src/sentry/static/sentry/app/components/stackedBarChart.jsx
+++ b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
@@ -1,10 +1,11 @@
+import React from 'react';
+import PropTypes from 'prop-types';
 import moment from 'moment';
 import _ from 'lodash';
-import PropTypes from 'prop-types';
-import React from 'react';
+
 import TooltipMixin from '../mixins/tooltip';
 import Count from './count';
-import ConfigStore from '../stores/configStore.jsx';
+import ConfigStore from '../stores/configStore';
 
 const StackedBarChart = React.createClass({
   propTypes: {
diff --git a/src/sentry/static/sentry/app/components/timeSince.jsx b/src/sentry/static/sentry/app/components/timeSince.jsx
index c9319cb4b7..0515cd705e 100644
--- a/src/sentry/static/sentry/app/components/timeSince.jsx
+++ b/src/sentry/static/sentry/app/components/timeSince.jsx
@@ -1,10 +1,11 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import moment from 'moment';
+import _ from 'lodash';
 import PureRenderMixin from 'react-addons-pure-render-mixin';
-import ConfigStore from '../stores/configStore.jsx';
+
+import ConfigStore from '../stores/configStore';
 import {t} from '../locale';
-import _ from 'lodash';
 
 const TimeSince = React.createClass({
   propTypes: {
diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index 8e113518d2..da7db82a30 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -1,5 +1,16 @@
 import jQuery from 'jquery';
+import moment from 'moment';
+import Raven from 'raven-js';
+import React from 'react';
+import ReactDOM from 'react-dom';
+import PropTypes from 'prop-types';
+import {renderToStaticMarkup} from 'react-dom/server';
+import Reflux from 'reflux';
+import * as Router from 'react-router';
+import ReactBootstrapModal from 'react-bootstrap/lib/Modal';
 
+import * as api from './api';
+import * as il8n from './locale';
 import plugins from './plugins';
 
 const csrfCookieName = window.csrfCookieName || 'sc';
@@ -37,19 +48,6 @@ jQuery.ajaxSetup({
 // these get exported to a global variable, which is important as its the only
 // way we can call into scoped objects
 
-import moment from 'moment';
-import Raven from 'raven-js';
-import React from 'react';
-import ReactDOM from 'react-dom';
-import PropTypes from 'prop-types';
-import {renderToStaticMarkup} from 'react-dom/server';
-import Reflux from 'reflux';
-import * as Router from 'react-router';
-import ReactBootstrapModal from 'react-bootstrap/lib/Modal';
-
-import * as api from './api';
-import * as il8n from './locale';
-
 export default {
   jQuery: jQuery,
   moment: moment,
diff --git a/src/sentry/static/sentry/app/locale.jsx b/src/sentry/static/sentry/app/locale.jsx
index ec3247f58f..7276a9cc3e 100644
--- a/src/sentry/static/sentry/app/locale.jsx
+++ b/src/sentry/static/sentry/app/locale.jsx
@@ -1,9 +1,9 @@
 /*eslint no-cond-assign:0*/
 import Jed from 'jed';
 import React from 'react';
-import {getTranslations} from './translations';
 import {sprintf} from 'sprintf-js';
 import _ from 'lodash';
+import {getTranslations} from './translations';
 
 let LOCALE_DEBUG = false;
 
diff --git a/src/sentry/static/sentry/app/stores/groupStore.jsx b/src/sentry/static/sentry/app/stores/groupStore.jsx
index 342daeec66..114481f32f 100644
--- a/src/sentry/static/sentry/app/stores/groupStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupStore.jsx
@@ -1,9 +1,10 @@
+import _ from 'lodash';
 import Reflux from 'reflux';
+
 import GroupActions from '../actions/groupActions';
 import IndicatorStore from './indicatorStore';
 import PendingChangeQueue from '../utils/pendingChangeQueue';
 import {t} from '../locale';
-import _ from 'lodash';
 
 function showAlert(msg, type) {
   IndicatorStore.add(msg, type, {
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 6765ec9b58..789277d6e9 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -1,5 +1,13 @@
 import _ from 'lodash';
 
+// import/export sub-utils
+import parseLinkHeader from './utils/parseLinkHeader';
+import deviceNameMapper from './utils/deviceNameMapper';
+import Collection from './utils/collection';
+import PendingChangeQueue from './utils/pendingChangeQueue';
+import CursorPoller from './utils/cursorPoller';
+import StreamManager from './utils/streamManager';
+
 /*eslint no-use-before-define:0*/
 export const modelsEqual = function(obj1, obj2) {
   if (!obj1 && !obj2) return true;
@@ -253,14 +261,6 @@ export function extractMultilineFields(value) {
   return value.split('\n').map(f => trim(f)).filter(f => f !== '');
 }
 
-// import/export sub-utils
-import parseLinkHeader from './utils/parseLinkHeader';
-import deviceNameMapper from './utils/deviceNameMapper';
-import Collection from './utils/collection';
-import PendingChangeQueue from './utils/pendingChangeQueue';
-import CursorPoller from './utils/cursorPoller';
-import StreamManager from './utils/streamManager';
-
 // re-export under utils
 export {parseLinkHeader, deviceNameMapper, Collection, PendingChangeQueue, CursorPoller};
 
diff --git a/src/sentry/static/sentry/app/views/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails.jsx
index 6f35f26f4f..3f4b7c58f4 100644
--- a/src/sentry/static/sentry/app/views/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails.jsx
@@ -2,8 +2,9 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
 import {browserHistory} from 'react-router';
-import ApiMixin from '../mixins/apiMixin';
 import DocumentTitle from 'react-document-title';
+
+import ApiMixin from '../mixins/apiMixin';
 import GroupHeader from './groupDetails/header';
 import GroupStore from '../stores/groupStore';
 import LoadingError from '../components/loadingError';
diff --git a/src/sentry/static/sentry/app/views/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupEvents.jsx
index c3c4eb2d8d..4db137fc51 100644
--- a/src/sentry/static/sentry/app/views/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/groupEvents.jsx
@@ -6,7 +6,7 @@ import GroupState from '../mixins/groupState';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import Pagination from '../components/pagination';
-import SearchBar from '../components/searchBar.jsx';
+import SearchBar from '../components/searchBar';
 import EventsTable from '../components/eventsTable/eventsTable';
 import {t} from '../locale';
 
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
index eec467dc2b..aa9a656f38 100644
--- a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
@@ -1,14 +1,13 @@
 import React from 'react';
-import Waiting from './waiting';
 import {browserHistory} from 'react-router';
-import ApiMixin from '../../../mixins/apiMixin';
+import Raven from 'raven-js';
 
+import Waiting from './waiting';
+import ApiMixin from '../../../mixins/apiMixin';
 import ProjectContext from '../../projects/projectContext';
 import ProjectDocsContext from '../../projectInstall/docsContext';
 import ProjectInstallPlatform from '../../projectInstall/platform';
 
-import Raven from 'raven-js';
-
 const Configure = React.createClass({
   mixins: [ApiMixin],
 
diff --git a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
index 8f5d803c35..8e50612d59 100644
--- a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
@@ -1,3 +1,5 @@
+import PropTypes from 'prop-types';
+import Raven from 'raven-js';
 import React from 'react';
 import {browserHistory, Link} from 'react-router';
 
@@ -9,8 +11,6 @@ import {getPlatformName} from './utils';
 import OnboardingProject from '../onboarding/project';
 
 import {t} from '../../locale';
-import PropTypes from 'prop-types';
-import Raven from 'raven-js';
 
 const CreateProject = React.createClass({
   propTypes: {
diff --git a/src/sentry/static/sentry/app/views/onboarding/index.jsx b/src/sentry/static/sentry/app/views/onboarding/index.jsx
index 1273647ae1..87cc9cfe86 100644
--- a/src/sentry/static/sentry/app/views/onboarding/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/index.jsx
@@ -1,10 +1,9 @@
 import React from 'react';
+import PropTypes from 'prop-types';
 import DocumentTitle from 'react-document-title';
 
 import ProgressNodes from './progress';
 
-import PropTypes from 'prop-types';
-
 const OnboardingWizard = React.createClass({
   contextTypes: {
     organization: PropTypes.object
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx
index 9760dac857..c74dd49a68 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx
@@ -1,9 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import classnames from 'classnames';
 
 import {flattenedPlatforms} from '../utils';
 import PlatformiconTile from './platformiconTile';
-import classnames from 'classnames';
 
 const PlatformCard = React.createClass({
   propTypes: {
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
index 8ad4d8c360..37d91706a1 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
@@ -1,8 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import ListLink from '../../../components/listLink';
 import classnames from 'classnames';
 
+import ListLink from '../../../components/listLink';
 import {flattenedPlatforms, categoryLists} from '../utils';
 import PlatformCard from './platformCard';
 import {t} from '../../../locale';
diff --git a/src/sentry/static/sentry/app/views/onboarding/utils.js b/src/sentry/static/sentry/app/views/onboarding/utils.js
index a4e17cdae7..bc378adef0 100644
--- a/src/sentry/static/sentry/app/views/onboarding/utils.js
+++ b/src/sentry/static/sentry/app/views/onboarding/utils.js
@@ -1,4 +1,5 @@
 // import {platforms} from '../../../../../integration-docs/_platforms.json';
+// eslint-disable-next-line import/extensions
 import {platforms} from 'integration-docs-platforms';
 
 const Popular = [
diff --git a/src/sentry/static/sentry/app/views/organizationContext.jsx b/src/sentry/static/sentry/app/views/organizationContext.jsx
index 38db0cd321..ed4af2cb9a 100644
--- a/src/sentry/static/sentry/app/views/organizationContext.jsx
+++ b/src/sentry/static/sentry/app/views/organizationContext.jsx
@@ -1,13 +1,13 @@
 import React from 'react';
 import Reflux from 'reflux';
+import DocumentTitle from 'react-document-title';
+import moment from 'moment';
 
 import ApiMixin from '../mixins/apiMixin';
-import DocumentTitle from 'react-document-title';
 import HookStore from '../stores/hookStore';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import BroadcastModal from '../components/broadcastModal';
-import moment from 'moment';
 import SentryTypes from '../proptypes';
 import TeamStore from '../stores/teamStore';
 import ProjectStore from '../stores/projectStore';
diff --git a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
index 3c4cf5a6ac..2d292887d7 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
@@ -1,8 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import {Link} from 'react-router';
-import Count from '../../components/count';
 import PureRenderMixin from 'react-addons-pure-render-mixin';
+
+import Count from '../../components/count';
 import {t} from '../../locale';
 
 let getPercent = (item, total) => {
diff --git a/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx b/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
index 6b62a17292..734bf31e4c 100644
--- a/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
+++ b/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import Modal from 'react-bootstrap/lib/Modal';
 
 import ApiMixin from '../mixins/apiMixin';
 import LoadingError from '../components/loadingError';
@@ -6,7 +7,6 @@ import LoadingIndicator from '../components/loadingIndicator';
 import DateTime from '../components/dateTime';
 import FileSize from '../components/fileSize';
 import TimeSince from '../components/timeSince';
-import Modal from 'react-bootstrap/lib/Modal';
 import {t} from '../locale';
 
 const ProjectDebugSymbols = React.createClass({
@@ -293,11 +293,16 @@ const ProjectDebugSymbols = React.createClass({
       return (
         <tr key={key}>
           <td><code className="small">{dsym.uuid}</code></td>
-          <td>{
-            dsym.symbolType === 'proguard' && dsym.objectName === 'proguard-mapping'
-            ? '-' : dsym.objectName}</td>
-          <td>{dsym.symbolType === 'proguard' && dsym.cpuName === 'any'
-            ? 'proguard' : `${dsym.cpuName} (${dsym.symbolType})`}</td>
+          <td>
+            {dsym.symbolType === 'proguard' && dsym.objectName === 'proguard-mapping'
+              ? '-'
+              : dsym.objectName}
+          </td>
+          <td>
+            {dsym.symbolType === 'proguard' && dsym.cpuName === 'any'
+              ? 'proguard'
+              : `${dsym.cpuName} (${dsym.symbolType})`}
+          </td>
           <td><DateTime date={dsym.dateCreated} /></td>
           <td><FileSize bytes={dsym.size} /></td>
         </tr>
@@ -348,13 +353,17 @@ const ProjectDebugSymbols = React.createClass({
     return (
       <div>
         <h1>{t('Debug Information Files')}</h1>
-        <p>{t(`
+        <p>
+          {t(
+            `
           Here you can find uploaded debug information (for instance debug
           symbol files or proguard mappings).  This is used to convert
           addresses and minified function names from crash dumps
           into function names and locations.  For JavaScript debug support
           look at releases instead.
-        `)}</p>
+        `
+          )}
+        </p>
         {this.renderDebugTable()}
         {this.renderUnreferencedDebugSymbols()}
         <Modal
diff --git a/src/sentry/static/sentry/app/views/projectEvents/index.jsx b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
index 4619a8e1c3..7ddd8037ec 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
@@ -8,7 +8,7 @@ import Avatar from '../../components/avatar';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 import Pagination from '../../components/pagination';
-import SearchBar from '../../components/searchBar.jsx';
+import SearchBar from '../../components/searchBar';
 import {t} from '../../locale';
 
 const ProjectEvents = React.createClass({
diff --git a/src/sentry/static/sentry/app/views/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
index 58070f56d0..71cd2f865e 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
@@ -7,7 +7,7 @@ import ApiMixin from '../../mixins/apiMixin';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 import Pagination from '../../components/pagination';
-import SearchBar from '../../components/searchBar.jsx';
+import SearchBar from '../../components/searchBar';
 import {t} from '../../locale';
 
 import ReleaseList from './releaseList';
diff --git a/src/sentry/static/sentry/app/views/releaseDetails.jsx b/src/sentry/static/sentry/app/views/releaseDetails.jsx
index a7860b8b6a..d3dc102f5e 100644
--- a/src/sentry/static/sentry/app/views/releaseDetails.jsx
+++ b/src/sentry/static/sentry/app/views/releaseDetails.jsx
@@ -1,8 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import DocumentTitle from 'react-document-title';
+
 import ApiMixin from '../mixins/apiMixin';
 import Count from '../components/count';
-import DocumentTitle from 'react-document-title';
 import ListLink from '../components/listLink';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
diff --git a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
index f74b97f9a8..f807613d8b 100644
--- a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
+++ b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
@@ -1,10 +1,11 @@
 import React from 'react';
+import update from 'react-addons-update';
 import {browserHistory} from 'react-router';
+
 import ActionOverlay from '../../components/actionOverlay';
 import OrganizationState from '../../mixins/organizationState';
 import ApiMixin from '../../mixins/apiMixin';
 import {t} from '../../locale';
-import update from 'react-addons-update';
 
 /* given an organization find information about the projects that are
    needed for callsign review.  Splits up projects you are a member of or
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index 0b680e7118..7c3db2ba02 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -1,8 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
-import {browserHistory} from 'react-router';
-import {Link} from 'react-router';
+import {Link, browserHistory} from 'react-router';
 import Cookies from 'js-cookie';
 import {StickyContainer, Sticky} from 'react-sticky';
 import classNames from 'classnames';
diff --git a/src/sentry/static/sentry/app/views/stream/actionLink.jsx b/src/sentry/static/sentry/app/views/stream/actionLink.jsx
index d0a9dbf380..42364c1ff7 100644
--- a/src/sentry/static/sentry/app/views/stream/actionLink.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actionLink.jsx
@@ -2,10 +2,11 @@ import Modal from 'react-bootstrap/lib/Modal';
 import PureRenderMixin from 'react-addons-pure-render-mixin';
 import PropTypes from 'prop-types';
 import React from 'react';
+import _ from 'lodash';
+
 import SelectedGroupStore from '../../stores/selectedGroupStore';
 import TooltipMixin from '../../mixins/tooltip';
 import {t} from '../../locale';
-import _ from 'lodash';
 
 // TODO(mitsuhiko): very unclear how to translate this
 const ActionLink = React.createClass({
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index 53c791b06d..49038dfcf4 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -1,6 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import PureRenderMixin from 'react-addons-pure-render-mixin';
 import Reflux from 'reflux';
+
 import ApiMixin from '../../mixins/apiMixin';
 import TooltipMixin from '../../mixins/tooltip';
 import ActionLink from './actionLink';
@@ -8,7 +10,6 @@ import DropdownLink from '../../components/dropdownLink';
 import Duration from '../../components/duration';
 import IndicatorStore from '../../stores/indicatorStore';
 import MenuItem from '../../components/menuItem';
-import PureRenderMixin from 'react-addons-pure-render-mixin';
 import SelectedGroupStore from '../../stores/selectedGroupStore';
 import {t, tn} from '../../locale';
 import {getShortVersion} from '../../utils';
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 0e8d66c5d8..973c0f2f03 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -1,6 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import ReactDOM from 'react-dom';
+import PureRenderMixin from 'react-addons-pure-render-mixin';
 import Reflux from 'reflux';
 import _ from 'lodash';
 import classNames from 'classnames';
@@ -11,8 +12,6 @@ import MemberListStore from '../../stores/memberListStore';
 import ApiMixin from '../../mixins/apiMixin';
 import {t} from '../../locale';
 
-import PureRenderMixin from 'react-addons-pure-render-mixin';
-
 import SearchDropdown from './searchDropdown';
 
 const SearchBar = React.createClass({
diff --git a/src/sentry/static/sentry/app/views/stream/searchDropdown.jsx b/src/sentry/static/sentry/app/views/stream/searchDropdown.jsx
index c58b29a378..1ec5cf8e9a 100644
--- a/src/sentry/static/sentry/app/views/stream/searchDropdown.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchDropdown.jsx
@@ -1,11 +1,10 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import PureRenderMixin from 'react-addons-pure-render-mixin';
 import classNames from 'classnames';
 
 import LoadingIndicator from '../../components/loadingIndicator';
 
-import PureRenderMixin from 'react-addons-pure-render-mixin';
-
 const SearchDropdown = React.createClass({
   propTypes: {
     items: PropTypes.array.isRequired,
diff --git a/tests/js/helpers/stubReactComponent.jsx b/tests/js/helpers/stubReactComponent.jsx
index 6bc3269732..275d9f1aa4 100644
--- a/tests/js/helpers/stubReactComponent.jsx
+++ b/tests/js/helpers/stubReactComponent.jsx
@@ -1,7 +1,7 @@
 // Inspired by TimothyRHuertas
 // https://gist.github.com/TimothyRHuertas/d7d06313c5411fe242bb
-
 import React from 'react';
+
 let divFactory = React.createFactory('div');
 let originalCreateElement = React.createElement;
 
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 1e3e2d049f..0d87a3a84b 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -1,10 +1,11 @@
+import jQuery from 'jquery';
+import sinon from 'sinon';
+import ConfigStore from 'app/stores/configStore';
+
 jest.mock('app/translations');
 jest.mock('app/api');
 
-import jQuery from 'jquery';
 window.$ = window.jQuery = jQuery;
-
-import sinon from 'sinon';
 window.sinon = sinon;
 
 window.TestStubs = {
@@ -49,7 +50,6 @@ window.TestStubs = {
 window.MockApiClient = require.requireMock('app/api').Client;
 
 // default configuration
-import ConfigStore from 'app/stores/configStore';
 ConfigStore.loadInitialData({
   user: {
     isAuthenticated: true,
diff --git a/tests/js/spec/api.spec.jsx b/tests/js/spec/api.spec.jsx
index bb0d3b5862..1119128979 100644
--- a/tests/js/spec/api.spec.jsx
+++ b/tests/js/spec/api.spec.jsx
@@ -1,9 +1,9 @@
-jest.unmock('app/api');
-
 import $ from 'jquery';
 import {Client, Request, paramsToQueryArgs} from 'app/api';
 import GroupActions from 'app/actions/groupActions';
 
+jest.unmock('app/api');
+
 describe('api', function() {
   beforeEach(function() {
     this.sandbox = sinon.sandbox.create();
diff --git a/tests/js/spec/components/events/interfaces/frame.spec.jsx b/tests/js/spec/components/events/interfaces/frame.spec.jsx
index a510478c3d..c6c08acd93 100644
--- a/tests/js/spec/components/events/interfaces/frame.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/frame.spec.jsx
@@ -1,10 +1,11 @@
 import React from 'react';
 import TestUtils from 'react-addons-test-utils';
-import stubReactComponents from '../../../../helpers/stubReactComponent';
 
 import Frame from 'app/components/events/interfaces/frame';
 import FrameVariables from 'app/components/events/interfaces/frameVariables';
 
+import stubReactComponents from '../../../../helpers/stubReactComponent';
+
 describe('Frame', function() {
   beforeEach(function() {
     this.sandbox = sinon.sandbox.create();
diff --git a/tests/js/spec/stores/alertStore.spec.js b/tests/js/spec/stores/alertStore.spec.jsx
similarity index 100%
rename from tests/js/spec/stores/alertStore.spec.js
rename to tests/js/spec/stores/alertStore.spec.jsx
index 2da83ac969..38c3139e48 100644
--- a/tests/js/spec/stores/alertStore.spec.js
+++ b/tests/js/spec/stores/alertStore.spec.jsx
@@ -1,7 +1,7 @@
-jest.mock('app/utils/localStorage');
-
 import AlertStore from 'app/stores/alertStore';
 
+jest.mock('app/utils/localStorage');
+
 describe('AlertStore', function() {
   beforeEach(function() {
     AlertStore.alerts = [];
diff --git a/tests/js/spec/stores/groupingStore.spec.jsx b/tests/js/spec/stores/groupingStore.spec.jsx
index ed6e8d81b4..4ed67b0af8 100644
--- a/tests/js/spec/stores/groupingStore.spec.jsx
+++ b/tests/js/spec/stores/groupingStore.spec.jsx
@@ -1,6 +1,6 @@
-/* eslint-env jest */
 import GroupingStore from 'app/stores/groupingStore';
 import {Client} from 'app/api';
+
 jest.mock('app/api');
 
 /*
diff --git a/tests/js/spec/views/projectReleases.spec.jsx b/tests/js/spec/views/projectReleases.spec.jsx
index 575c72d367..bbdddefd12 100644
--- a/tests/js/spec/views/projectReleases.spec.jsx
+++ b/tests/js/spec/views/projectReleases.spec.jsx
@@ -1,14 +1,14 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-
 import {browserHistory} from 'react-router';
-import stubReactComponents from '../../helpers/stubReactComponent';
 
 import {Client} from 'app/api';
 import ProjectReleases from 'app/views/projectReleases';
 import SearchBar from 'app/views/stream/searchBar';
 import Pagination from 'app/components/pagination';
 
+import stubReactComponents from '../../helpers/stubReactComponent';
+
 describe('ProjectReleases', function() {
   beforeEach(function() {
     this.sandbox = sinon.sandbox.create();
diff --git a/tests/js/spec/views/stream.spec.jsx b/tests/js/spec/views/stream.spec.jsx
index b004f7eb45..3b2039e700 100644
--- a/tests/js/spec/views/stream.spec.jsx
+++ b/tests/js/spec/views/stream.spec.jsx
@@ -1,6 +1,3 @@
-jest.unmock('app/api');
-jest.mock('app/stores/groupStore');
-
 import React from 'react';
 import {shallow} from 'enzyme';
 import Cookies from 'js-cookie';
@@ -11,6 +8,9 @@ import CursorPoller from 'app/utils/cursorPoller';
 import LoadingError from 'app/components/loadingError';
 import Stream from 'app/views/stream';
 
+jest.unmock('app/api');
+jest.mock('app/stores/groupStore');
+
 const DEFAULT_LINKS_HEADER =
   '<http://127.0.0.1:8000/api/0/projects/sentry/ludic-science/issues/?cursor=1443575731:0:1>; rel="previous"; results="false"; cursor="1443575731:0:1", ' +
   '<http://127.0.0.1:8000/api/0/projects/sentry/ludic-science/issues/?cursor=1443575731:0:0>; rel="next"; results="true"; cursor="1443575731:0:0';
diff --git a/yarn.lock b/yarn.lock
index 142b7604bf..3265ed0cbb 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -1825,7 +1825,7 @@ buffer@^4.3.0:
     ieee754 "^1.1.4"
     isarray "^1.0.0"
 
-builtin-modules@^1.0.0:
+builtin-modules@^1.0.0, builtin-modules@^1.1.1:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/builtin-modules/-/builtin-modules-1.1.1.tgz#270f076c5a72c02f5b65a47df94c5fe3a278892f"
 
@@ -2160,6 +2160,10 @@ constants-browserify@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/constants-browserify/-/constants-browserify-1.0.0.tgz#c20b96d8c617748aaf1c16021760cd27fcb8cb75"
 
+contains-path@^0.1.0:
+  version "0.1.0"
+  resolved "https://registry.yarnpkg.com/contains-path/-/contains-path-0.1.0.tgz#fe8cf184ff6670b6baef01a9d4861a5cbec4120a"
+
 content-disposition@0.5.2:
   version "0.5.2"
   resolved "https://registry.yarnpkg.com/content-disposition/-/content-disposition-0.5.2.tgz#0cf68bb9ddf5f2be7961c3a85178cb85dba78cb4"
@@ -2422,7 +2426,7 @@ debug@2.6.7:
   dependencies:
     ms "2.0.0"
 
-debug@^2.1.1, debug@^2.2.0, debug@^2.6.3:
+debug@^2.1.1, debug@^2.2.0, debug@^2.6.3, debug@^2.6.8:
   version "2.6.8"
   resolved "https://registry.yarnpkg.com/debug/-/debug-2.6.8.tgz#e731531ca2ede27d188222427da17821d68ff4fc"
   dependencies:
@@ -2532,7 +2536,7 @@ diffie-hellman@^5.0.0:
     miller-rabin "^4.0.0"
     randombytes "^2.0.0"
 
-doctrine@^1.2.2:
+doctrine@1.5.0, doctrine@^1.2.2:
   version "1.5.0"
   resolved "https://registry.yarnpkg.com/doctrine/-/doctrine-1.5.0.tgz#379dce730f6166f76cefa4e6707a159b02c5a6fa"
   dependencies:
@@ -2645,6 +2649,14 @@ enhanced-resolve@^3.0.0, enhanced-resolve@^3.4.0:
     object-assign "^4.0.1"
     tapable "^0.2.7"
 
+enhanced-resolve@~0.9.0:
+  version "0.9.1"
+  resolved "https://registry.yarnpkg.com/enhanced-resolve/-/enhanced-resolve-0.9.1.tgz#4d6e689b3725f86090927ccc86cd9f1635b89e2e"
+  dependencies:
+    graceful-fs "^4.1.2"
+    memory-fs "^0.2.0"
+    tapable "^0.1.8"
+
 entities@^1.1.1, entities@~1.1.1:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/entities/-/entities-1.1.1.tgz#6e5c2d0a5621b5dadaecef80b90edfb5cd7772f0"
@@ -2801,10 +2813,55 @@ escope@^3.6.0:
     esrecurse "^4.1.0"
     estraverse "^4.1.1"
 
+eslint-import-resolver-node@^0.3.1:
+  version "0.3.1"
+  resolved "https://registry.yarnpkg.com/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.1.tgz#4422574cde66a9a7b099938ee4d508a199e0e3cc"
+  dependencies:
+    debug "^2.6.8"
+    resolve "^1.2.0"
+
+eslint-import-resolver-webpack@^0.8.3:
+  version "0.8.3"
+  resolved "https://registry.yarnpkg.com/eslint-import-resolver-webpack/-/eslint-import-resolver-webpack-0.8.3.tgz#ad61e28df378a474459d953f246fd43f92675385"
+  dependencies:
+    array-find "^1.0.0"
+    debug "^2.6.8"
+    enhanced-resolve "~0.9.0"
+    find-root "^0.1.1"
+    has "^1.0.1"
+    interpret "^1.0.0"
+    is-absolute "^0.2.3"
+    lodash.get "^3.7.0"
+    node-libs-browser "^1.0.0"
+    resolve "^1.2.0"
+    semver "^5.3.0"
+
+eslint-module-utils@^2.1.1:
+  version "2.1.1"
+  resolved "https://registry.yarnpkg.com/eslint-module-utils/-/eslint-module-utils-2.1.1.tgz#abaec824177613b8a95b299639e1b6facf473449"
+  dependencies:
+    debug "^2.6.8"
+    pkg-dir "^1.0.0"
+
 eslint-plugin-getsentry@1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/eslint-plugin-getsentry/-/eslint-plugin-getsentry-1.0.0.tgz#a6e65a30b5448dff38fec2f1947a619fe83763f9"
 
+eslint-plugin-import@^2.7.0:
+  version "2.7.0"
+  resolved "https://registry.yarnpkg.com/eslint-plugin-import/-/eslint-plugin-import-2.7.0.tgz#21de33380b9efb55f5ef6d2e210ec0e07e7fa69f"
+  dependencies:
+    builtin-modules "^1.1.1"
+    contains-path "^0.1.0"
+    debug "^2.6.8"
+    doctrine "1.5.0"
+    eslint-import-resolver-node "^0.3.1"
+    eslint-module-utils "^2.1.1"
+    has "^1.0.1"
+    lodash.cond "^4.3.0"
+    minimatch "^3.0.3"
+    read-pkg-up "^2.0.0"
+
 eslint-plugin-react@6.10.3:
   version "6.10.3"
   resolved "https://registry.yarnpkg.com/eslint-plugin-react/-/eslint-plugin-react-6.10.3.tgz#c5435beb06774e12c7db2f6abaddcbf900cd3f78"
@@ -3153,6 +3210,10 @@ find-cache-dir@^1.0.0:
     make-dir "^1.0.0"
     pkg-dir "^2.0.0"
 
+find-root@^0.1.1:
+  version "0.1.2"
+  resolved "https://registry.yarnpkg.com/find-root/-/find-root-0.1.2.tgz#98d2267cff1916ccaf2743b3a0eea81d79d7dcd1"
+
 find-up@^1.0.0:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/find-up/-/find-up-1.1.2.tgz#6b2e9822b1a2ce0a60ab64d610eccad53cb24d0f"
@@ -3769,6 +3830,13 @@ is-absolute-url@^2.0.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/is-absolute-url/-/is-absolute-url-2.1.0.tgz#50530dfb84fcc9aa7dbe7852e83a37b93b9f2aa6"
 
+is-absolute@^0.2.3:
+  version "0.2.6"
+  resolved "https://registry.yarnpkg.com/is-absolute/-/is-absolute-0.2.6.tgz#20de69f3db942ef2d87b9c2da36f172235b1b5eb"
+  dependencies:
+    is-relative "^0.2.1"
+    is-windows "^0.2.0"
+
 is-arrayish@^0.2.1:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/is-arrayish/-/is-arrayish-0.2.1.tgz#77c99840527aa8ecb1a8ba697b80645a7a926a9d"
@@ -3924,6 +3992,12 @@ is-regex@^1.0.3:
   dependencies:
     has "^1.0.1"
 
+is-relative@^0.2.1:
+  version "0.2.1"
+  resolved "https://registry.yarnpkg.com/is-relative/-/is-relative-0.2.1.tgz#d27f4c7d516d175fb610db84bbeef23c3bc97aa5"
+  dependencies:
+    is-unc-path "^0.1.1"
+
 is-resolvable@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/is-resolvable/-/is-resolvable-1.0.0.tgz#8df57c61ea2e3c501408d100fb013cf8d6e0cc62"
@@ -3952,10 +4026,20 @@ is-typedarray@~1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/is-typedarray/-/is-typedarray-1.0.0.tgz#e479c80858df0c1b11ddda6940f96011fcda4a9a"
 
+is-unc-path@^0.1.1:
+  version "0.1.2"
+  resolved "https://registry.yarnpkg.com/is-unc-path/-/is-unc-path-0.1.2.tgz#6ab053a72573c10250ff416a3814c35178af39b9"
+  dependencies:
+    unc-path-regex "^0.1.0"
+
 is-utf8@^0.2.0:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/is-utf8/-/is-utf8-0.2.1.tgz#4b0da1442104d1b336340e80797e865cf39f7d72"
 
+is-windows@^0.2.0:
+  version "0.2.0"
+  resolved "https://registry.yarnpkg.com/is-windows/-/is-windows-0.2.0.tgz#de1aa6d63ea29dd248737b69f1ff8b8002d2108c"
+
 isarray@0.0.1:
   version "0.0.1"
   resolved "https://registry.yarnpkg.com/isarray/-/isarray-0.0.1.tgz#8a18acfca9a8f4177e09abfc6038939b05d1eedf"
@@ -4543,10 +4627,20 @@ lodash-webpack-plugin@^0.11.4:
   dependencies:
     lodash "^4.17.4"
 
+lodash._baseget@^3.0.0:
+  version "3.7.2"
+  resolved "https://registry.yarnpkg.com/lodash._baseget/-/lodash._baseget-3.7.2.tgz#1b6ae1d5facf3c25532350a13c1197cb8bb674f4"
+
 lodash._getnative@^3.0.0:
   version "3.9.1"
   resolved "https://registry.yarnpkg.com/lodash._getnative/-/lodash._getnative-3.9.1.tgz#570bc7dede46d61cdcde687d65d3eecbaa3aaff5"
 
+lodash._topath@^3.0.0:
+  version "3.8.1"
+  resolved "https://registry.yarnpkg.com/lodash._topath/-/lodash._topath-3.8.1.tgz#3ec5e2606014f4cb97f755fe6914edd8bfc00eac"
+  dependencies:
+    lodash.isarray "^3.0.0"
+
 lodash.assignin@^4.0.9:
   version "4.2.0"
   resolved "https://registry.yarnpkg.com/lodash.assignin/-/lodash.assignin-4.2.0.tgz#ba8df5fb841eb0a3e8044232b0e263a8dc6a28a2"
@@ -4563,6 +4657,10 @@ lodash.clonedeep@^4.5.0:
   version "4.5.0"
   resolved "https://registry.yarnpkg.com/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz#e23f3f9c4f8fbdde872529c1071857a086e5ccef"
 
+lodash.cond@^4.3.0:
+  version "4.5.2"
+  resolved "https://registry.yarnpkg.com/lodash.cond/-/lodash.cond-4.5.2.tgz#f471a1da486be60f6ab955d17115523dd1d255d5"
+
 lodash.debounce@^4.0.0, lodash.debounce@^4.0.8:
   version "4.0.8"
   resolved "https://registry.yarnpkg.com/lodash.debounce/-/lodash.debounce-4.0.8.tgz#82d79bff30a67c4005ffd5e2515300ad9ca4d7af"
@@ -4587,6 +4685,13 @@ lodash.foreach@^4.3.0:
   version "4.5.0"
   resolved "https://registry.yarnpkg.com/lodash.foreach/-/lodash.foreach-4.5.0.tgz#1a6a35eace401280c7f06dddec35165ab27e3e53"
 
+lodash.get@^3.7.0:
+  version "3.7.0"
+  resolved "https://registry.yarnpkg.com/lodash.get/-/lodash.get-3.7.0.tgz#3ce68ae2c91683b281cc5394128303cbf75e691f"
+  dependencies:
+    lodash._baseget "^3.0.0"
+    lodash._topath "^3.0.0"
+
 lodash.isarguments@^3.0.0:
   version "3.1.0"
   resolved "https://registry.yarnpkg.com/lodash.isarguments/-/lodash.isarguments-3.1.0.tgz#2f573d85c6a24289ff00663b491c1d338ff3458a"
@@ -4750,6 +4855,10 @@ mem@^1.1.0:
   dependencies:
     mimic-fn "^1.0.0"
 
+memory-fs@^0.2.0:
+  version "0.2.0"
+  resolved "https://registry.yarnpkg.com/memory-fs/-/memory-fs-0.2.0.tgz#f2bb25368bc121e391c2520de92969caee0a0290"
+
 memory-fs@^0.4.0, memory-fs@~0.4.1:
   version "0.4.1"
   resolved "https://registry.yarnpkg.com/memory-fs/-/memory-fs-0.4.1.tgz#3a9a20b8462523e447cfbc7e8bb80ed667bfc552"
@@ -4951,6 +5060,34 @@ node-libs-browser@0.5.3:
     util "~0.10.3"
     vm-browserify "0.0.4"
 
+node-libs-browser@^1.0.0:
+  version "1.1.1"
+  resolved "https://registry.yarnpkg.com/node-libs-browser/-/node-libs-browser-1.1.1.tgz#2a38243abedd7dffcd07a97c9aca5668975a6fea"
+  dependencies:
+    assert "^1.1.1"
+    browserify-zlib "^0.1.4"
+    buffer "^4.3.0"
+    console-browserify "^1.1.0"
+    constants-browserify "^1.0.0"
+    crypto-browserify "^3.11.0"
+    domain-browser "^1.1.1"
+    events "^1.0.0"
+    https-browserify "0.0.1"
+    os-browserify "^0.2.0"
+    path-browserify "0.0.0"
+    process "^0.11.0"
+    punycode "^1.2.4"
+    querystring-es3 "^0.2.0"
+    readable-stream "^2.0.5"
+    stream-browserify "^2.0.1"
+    stream-http "^2.3.1"
+    string_decoder "^0.10.25"
+    timers-browserify "^1.4.2"
+    tty-browserify "0.0.0"
+    url "^0.11.0"
+    util "^0.10.3"
+    vm-browserify "0.0.4"
+
 node-libs-browser@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/node-libs-browser/-/node-libs-browser-2.0.0.tgz#a3a59ec97024985b46e958379646f96c4b616646"
@@ -5372,6 +5509,12 @@ pinkie@^2.0.0:
   version "2.0.4"
   resolved "https://registry.yarnpkg.com/pinkie/-/pinkie-2.0.4.tgz#72556b80cfa0d48a974e80e77248e80ed4f7f870"
 
+pkg-dir@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/pkg-dir/-/pkg-dir-1.0.0.tgz#7a4b508a8d5bb2d629d447056ff4e9c9314cf3d4"
+  dependencies:
+    find-up "^1.0.0"
+
 pkg-dir@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/pkg-dir/-/pkg-dir-2.0.0.tgz#f6d5d1109e19d63edf428e0bd57e12777615334b"
@@ -6972,6 +7115,10 @@ table@^3.7.8:
     slice-ansi "0.0.4"
     string-width "^2.0.0"
 
+tapable@^0.1.8:
+  version "0.1.10"
+  resolved "https://registry.yarnpkg.com/tapable/-/tapable-0.1.10.tgz#29c35707c2b70e50d07482b5d202e8ed446dafd4"
+
 tapable@^0.2.7, tapable@~0.2.5:
   version "0.2.7"
   resolved "https://registry.yarnpkg.com/tapable/-/tapable-0.2.7.tgz#e46c0daacbb2b8a98b9b0cea0f4052105817ed5c"
@@ -7027,7 +7174,7 @@ time-stamp@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/time-stamp/-/time-stamp-2.0.0.tgz#95c6a44530e15ba8d6f4a3ecb8c3a3fac46da357"
 
-timers-browserify@^1.0.1:
+timers-browserify@^1.0.1, timers-browserify@^1.4.2:
   version "1.4.2"
   resolved "https://registry.yarnpkg.com/timers-browserify/-/timers-browserify-1.4.2.tgz#c9c58b575be8407375cb5e2462dacee74359f41d"
   dependencies:
@@ -7160,6 +7307,10 @@ uid-number@^0.0.6:
   version "0.0.6"
   resolved "https://registry.yarnpkg.com/uid-number/-/uid-number-0.0.6.tgz#0ea10e8035e8eb5b8e4449f06da1c730663baa81"
 
+unc-path-regex@^0.1.0:
+  version "0.1.2"
+  resolved "https://registry.yarnpkg.com/unc-path-regex/-/unc-path-regex-0.1.2.tgz#e73dd3d7b0d7c5ed86fbac6b0ae7d8c6a69d50fa"
+
 uncontrollable@^3.2.3:
   version "3.3.1"
   resolved "https://registry.yarnpkg.com/uncontrollable/-/uncontrollable-3.3.1.tgz#e23b402e7a4c69b1853fb4b43ce34b6480c65b6f"
