commit 4e9c124df2ded6476435f77645308baa7b37e6e2
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Apr 5 13:00:08 2018 -0700

    feat(ui): Add ErrorBoundary to "Exception" in "Issue Details" (#7921)
    
    * Add optional message to mini error boundary
    * Add smaller error boundaries around keyValueList

diff --git a/src/sentry/static/sentry/app/components/errorBoundary.jsx b/src/sentry/static/sentry/app/components/errorBoundary.jsx
index f6e214b82c..b9b12e72ea 100644
--- a/src/sentry/static/sentry/app/components/errorBoundary.jsx
+++ b/src/sentry/static/sentry/app/components/errorBoundary.jsx
@@ -1,9 +1,11 @@
+import {browserHistory} from 'react-router';
+import PropTypes from 'prop-types';
 import Raven from 'raven-js';
 import React from 'react';
 import styled from 'react-emotion';
-import {browserHistory} from 'react-router';
 
 import {t} from '../locale';
+import Alert from './alert';
 import DetailedError from './errors/detailedError';
 
 let exclamation = ['Raspberries', 'Snap', 'Frig', 'Welp', 'Uhhhh', 'Hmmm'];
@@ -13,6 +15,15 @@ let getExclamation = () => {
 };
 
 class ErrorBoundary extends React.Component {
+  static propTypes = {
+    mini: PropTypes.bool,
+    message: PropTypes.node,
+  };
+
+  static defaultProps = {
+    mini: false,
+  };
+
   constructor(props) {
     super(props);
     this.state = {error: null};
@@ -36,6 +47,16 @@ class ErrorBoundary extends React.Component {
 
   render() {
     if (this.state.error) {
+      let {mini, message} = this.props;
+
+      if (mini) {
+        return (
+          <Alert type="error" icon="icon-circle-exclamation">
+            {message || t('There was a problem rendering this component')}
+          </Alert>
+        );
+      }
+
       return (
         <Wrapper>
           <DetailedError
diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index 16070ae853..c2370d104e 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -1,9 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
+import {objectIsEmpty, toTitleCase, defined} from '../../utils';
 import GroupEventDataSection from './eventDataSection';
 import plugins from '../../plugins';
-import {objectIsEmpty, toTitleCase, defined} from '../../utils';
 
 const CONTEXT_TYPES = {
   default: require('./contexts/default').default,
diff --git a/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx b/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
index 3608bee4d3..ebeff96b24 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
@@ -2,12 +2,12 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import _ from 'lodash';
 
-import KeyValueList from '../interfaces/keyValueList';
 import {defined} from '../../../utils';
+import ErrorBoundary from '../../errorBoundary';
+import KeyValueList from '../interfaces/keyValueList';
 
 class ContextBlock extends React.Component {
   static propTypes = {
-    alias: PropTypes.string.isRequired,
     data: PropTypes.object.isRequired,
     knownData: PropTypes.array,
   };
@@ -44,7 +44,9 @@ class ContextBlock extends React.Component {
 
     return (
       <div className={className}>
-        <KeyValueList data={data} isSorted={false} />
+        <ErrorBoundary mini>
+          <KeyValueList data={data} isSorted={false} />
+        </ErrorBoundary>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/contexts/user.jsx b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
index 7ff13dfe35..73f197a00b 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
@@ -1,10 +1,10 @@
 /*eslint react/jsx-key:0*/
 import PropTypes from 'prop-types';
-
 import React from 'react';
 import _ from 'lodash';
 
 import Avatar from '../../../components/avatar';
+import ErrorBoundary from '../../errorBoundary';
 import KeyValueList from '../interfaces/keyValueList';
 
 class UserContextType extends React.Component {
@@ -59,7 +59,9 @@ class UserContextType extends React.Component {
             })}
           </tbody>
         </table>
-        {children && <KeyValueList data={children} isContextData={true} />}
+        <ErrorBoundary mini>
+          {children && <KeyValueList data={children} isContextData={true} />}
+        </ErrorBoundary>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/extraData.jsx b/src/sentry/static/sentry/app/components/events/extraData.jsx
index c76cec5939..ed89911578 100644
--- a/src/sentry/static/sentry/app/components/events/extraData.jsx
+++ b/src/sentry/static/sentry/app/components/events/extraData.jsx
@@ -1,10 +1,11 @@
 import React from 'react';
 
-import SentryTypes from '../../proptypes';
 import {objectToArray} from '../../utils';
+import {t} from '../../locale';
+import ErrorBoundary from '../errorBoundary';
 import EventDataSection from './eventDataSection';
 import KeyValueList from './interfaces/keyValueList';
-import {t} from '../../locale';
+import SentryTypes from '../../proptypes';
 
 class EventExtraData extends React.Component {
   static propTypes = {
@@ -41,7 +42,13 @@ class EventExtraData extends React.Component {
           toggleRaw={this.toggleRaw}
           raw={this.state.raw}
         >
-          <KeyValueList data={extraDataArray} isContextData={true} raw={this.state.raw} />
+          <ErrorBoundary mini>
+            <KeyValueList
+              data={extraDataArray}
+              isContextData={true}
+              raw={this.state.raw}
+            />
+          </ErrorBoundary>
         </EventDataSection>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx
index 5a14c12487..c1fd7db73e 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx
@@ -1,14 +1,15 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import SentryTypes from '../../../proptypes';
-import rawStacktraceContent from './rawStacktraceContent';
-import StacktraceContent from './stacktraceContent';
+
+import ErrorBoundary from '../../errorBoundary';
 import ExceptionContent from './exceptionContent';
 import RawExceptionContent from './rawExceptionContent';
+import SentryTypes from '../../../proptypes';
+import StacktraceContent from './stacktraceContent';
+import rawStacktraceContent from './rawStacktraceContent';
 
 class CrashContent extends React.Component {
   static propTypes = {
-    group: SentryTypes.Group.isRequired,
     event: SentryTypes.Event.isRequired,
     stackView: PropTypes.string.isRequired,
     stackType: PropTypes.string,
@@ -56,10 +57,10 @@ class CrashContent extends React.Component {
 
   render() {
     if (this.props.exception) {
-      return this.renderException();
+      return <ErrorBoundary mini>{this.renderException()}</ErrorBoundary>;
     }
     if (this.props.stacktrace) {
-      return this.renderStacktrace();
+      return <ErrorBoundary mini>{this.renderStacktrace()}</ErrorBoundary>;
     }
     return null;
   }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
index eaf7c533bb..df3d2601a7 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
@@ -1,14 +1,14 @@
-import React from 'react';
 import PropTypes from 'prop-types';
+import React from 'react';
 import queryString from 'query-string';
 
-import ClippedBox from '../../clippedBox';
-import KeyValueList from './keyValueList';
-import ContextData from '../../contextData';
-
-import {objectToSortedTupleArray} from './utils';
 import {objectIsEmpty} from '../../../utils';
+import {objectToSortedTupleArray} from './utils';
 import {t} from '../../../locale';
+import ClippedBox from '../../clippedBox';
+import ContextData from '../../contextData';
+import ErrorBoundary from '../../errorBoundary';
+import KeyValueList from './keyValueList';
 
 class RichHttpContent extends React.Component {
   static propTypes = {
@@ -50,33 +50,43 @@ class RichHttpContent extends React.Component {
       <div>
         {data.query && (
           <ClippedBox title={t('Query String')}>
-            {this.getQueryStringOrRaw(data.query)}
+            <ErrorBoundary mini>{this.getQueryStringOrRaw(data.query)}</ErrorBoundary>
           </ClippedBox>
         )}
         {data.fragment && (
           <ClippedBox title={t('Fragment')}>
-            <pre>{data.fragment}</pre>
+            <ErrorBoundary mini>
+              <pre>{data.fragment}</pre>
+            </ErrorBoundary>
           </ClippedBox>
         )}
 
         {data.data && (
-          <ClippedBox title={t('Body')}>{this.getBodySection(data)}</ClippedBox>
+          <ClippedBox title={t('Body')}>
+            <ErrorBoundary mini>{this.getBodySection(data)}</ErrorBoundary>
+          </ClippedBox>
         )}
 
         {data.cookies &&
           !objectIsEmpty(data.cookies) && (
             <ClippedBox title={t('Cookies')} defaultCollapsed>
-              <KeyValueList data={data.cookies} />
+              <ErrorBoundary mini>
+                <KeyValueList data={data.cookies} />
+              </ErrorBoundary>
             </ClippedBox>
           )}
         {!objectIsEmpty(data.headers) && (
           <ClippedBox title={t('Headers')}>
-            <KeyValueList data={data.headers} />
+            <ErrorBoundary mini>
+              <KeyValueList data={data.headers} />
+            </ErrorBoundary>
           </ClippedBox>
         )}
         {!objectIsEmpty(data.env) && (
           <ClippedBox title={t('Environment')} defaultCollapsed>
-            <KeyValueList data={objectToSortedTupleArray(data.env)} />
+            <ErrorBoundary mini>
+              <KeyValueList data={objectToSortedTupleArray(data.env)} />
+            </ErrorBoundary>
           </ClippedBox>
         )}
       </div>
diff --git a/src/sentry/static/sentry/app/components/events/packageData.jsx b/src/sentry/static/sentry/app/components/events/packageData.jsx
index 254f142364..02a6a78193 100644
--- a/src/sentry/static/sentry/app/components/events/packageData.jsx
+++ b/src/sentry/static/sentry/app/components/events/packageData.jsx
@@ -1,11 +1,12 @@
 import React from 'react';
-import SentryTypes from '../../proptypes';
 
 import {objectToArray} from '../../utils';
-import EventDataSection from './eventDataSection';
+import {t} from '../../locale';
 import ClippedBox from '../clippedBox';
+import ErrorBoundary from '../errorBoundary';
+import EventDataSection from './eventDataSection';
 import KeyValueList from './interfaces/keyValueList';
-import {t} from '../../locale';
+import SentryTypes from '../../proptypes';
 
 class EventPackageData extends React.Component {
   static propTypes = {
@@ -28,7 +29,9 @@ class EventPackageData extends React.Component {
         title={t('Packages')}
       >
         <ClippedBox>
-          <KeyValueList data={packages} />
+          <ErrorBoundary mini>
+            <KeyValueList data={packages} />
+          </ErrorBoundary>
         </ClippedBox>
       </EventDataSection>
     );
