commit fa176a2d097458ca8b9d177492f23180265d6249
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 10 15:57:27 2015 -0700

    Add search to release list (refs GH-1733)

diff --git a/src/sentry/api/endpoints/project_releases.py b/src/sentry/api/endpoints/project_releases.py
index ddb297ecdf..cc9e27a7ab 100644
--- a/src/sentry/api/endpoints/project_releases.py
+++ b/src/sentry/api/endpoints/project_releases.py
@@ -30,11 +30,21 @@ class ProjectReleasesEndpoint(ProjectEndpoint):
 
             {method} {path}
 
+        To find releases for a given version the 'query' parameter may be to
+        create a "version STARTS WITH" filter.
+
         """
+        query = request.GET.get('query')
+
         queryset = Release.objects.filter(
             project=project,
         )
 
+        if query:
+            queryset = queryset.filter(
+                version__istartswith=query,
+            )
+
         return self.paginate(
             request=request,
             queryset=queryset,
diff --git a/tests/sentry/api/endpoints/test_project_releases.py b/tests/sentry/api/endpoints/test_project_releases.py
index fa55eac535..39682fca7b 100644
--- a/tests/sentry/api/endpoints/test_project_releases.py
+++ b/tests/sentry/api/endpoints/test_project_releases.py
@@ -41,6 +41,33 @@ class ProjectReleaseListTest(APITestCase):
         assert response.data[0]['version'] == release2.version
         assert response.data[1]['version'] == release1.version
 
+    def test_query_filter(self):
+        self.login_as(user=self.user)
+
+        team = self.create_team()
+        project = self.create_project(team=team, name='foo')
+
+        release = Release.objects.create(
+            project=project,
+            version='foobar',
+            date_added=datetime(2013, 8, 13, 3, 8, 24, 880386),
+        )
+
+        url = reverse('sentry-api-0-project-releases', kwargs={
+            'organization_slug': project.organization.slug,
+            'project_slug': project.slug,
+        })
+        response = self.client.get(url + '?query=foo', format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 1
+        assert response.data[0]['version'] == release.version
+
+        response = self.client.get(url + '?query=bar', format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 0
+
 
 class ProjectReleaseCreateTest(APITestCase):
     def test_simple(self):
