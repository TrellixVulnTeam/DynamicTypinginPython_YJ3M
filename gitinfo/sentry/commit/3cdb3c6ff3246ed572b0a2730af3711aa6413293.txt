commit 3cdb3c6ff3246ed572b0a2730af3711aa6413293
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Nov 19 10:50:17 2018 -0800

    feat(charts): Allow local/utc date formatting in charts (#10628)
    
    Adds a `utc` option for charts to format xaxis or tooltips in UTC.

diff --git a/src/sentry/static/sentry/app/components/charts/baseChart.jsx b/src/sentry/static/sentry/app/components/charts/baseChart.jsx
index 1f7e73912a..02d8e0c0f1 100644
--- a/src/sentry/static/sentry/app/components/charts/baseChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/baseChart.jsx
@@ -5,6 +5,7 @@ import React from 'react';
 import ReactEchartsCore from 'echarts-for-react/lib/core';
 import echarts from 'echarts/lib/echarts';
 
+import {DEFAULT_USE_UTC} from 'app/constants';
 import SentryTypes from 'app/sentryTypes';
 import theme from 'app/utils/theme';
 
@@ -108,6 +109,9 @@ class BaseChart extends React.Component {
 
     // How is data grouped (affects formatting of axis labels and tooltips)
     interval: PropTypes.oneOf(['hour', 'day']),
+
+    // Formats dates as UTC?
+    utc: PropTypes.bool,
   };
 
   static defaultProps = {
@@ -124,6 +128,7 @@ class BaseChart extends React.Component {
     yAxis: {},
     isGroupedByDate: false,
     interval: 'day',
+    utc: DEFAULT_USE_UTC,
   };
 
   handleChartReady = (...args) => {
@@ -155,6 +160,7 @@ class BaseChart extends React.Component {
       isGroupedByDate,
       interval,
       previousPeriod,
+      utc,
 
       devicePixelRatio,
       height,
@@ -194,7 +200,9 @@ class BaseChart extends React.Component {
           color: colors || this.getColorPalette(),
           grid: Grid(grid),
           tooltip:
-            tooltip !== null ? Tooltip({interval, isGroupedByDate, ...tooltip}) : null,
+            tooltip !== null
+              ? Tooltip({interval, isGroupedByDate, utc, ...tooltip})
+              : null,
           legend: legend ? Legend({...legend}) : null,
           yAxis: yAxis !== null ? YAxis(yAxis) : null,
           xAxis:
@@ -203,6 +211,7 @@ class BaseChart extends React.Component {
                   ...xAxis,
                   interval,
                   isGroupedByDate,
+                  utc,
                 })
               : null,
           series: !previousPeriod
diff --git a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
index f3b75b6478..baccc2a9b2 100644
--- a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
@@ -1,16 +1,17 @@
-import moment from 'moment';
 import 'echarts/lib/component/tooltip';
+
+import {getFormattedDate} from 'app/utils/dates';
 import {truncationFormatter} from '../utils';
 
-function formatAxisLabel(value, isTimestamp) {
+function formatAxisLabel(value, isTimestamp, utc) {
   if (!isTimestamp) {
     return value;
   }
 
-  return moment.utc(value).format('MMM D, YYYY');
+  return getFormattedDate(value, 'MMM D, YYYY', utc);
 }
 
-function getFormatter({filter, isGroupedByDate, truncate}) {
+function getFormatter({filter, isGroupedByDate, truncate, utc}) {
   const getFilter = seriesParam => {
     const value = seriesParam.data[1];
     if (typeof filter === 'function') {
@@ -23,7 +24,7 @@ function getFormatter({filter, isGroupedByDate, truncate}) {
   return seriesParams => {
     const label =
       seriesParams.length &&
-      formatAxisLabel(seriesParams[0].axisValueLabel, isGroupedByDate);
+      formatAxisLabel(seriesParams[0].axisValueLabel, isGroupedByDate, utc);
     return [
       `<div>${truncationFormatter(label, truncate)}</div>`,
       seriesParams
@@ -39,9 +40,9 @@ function getFormatter({filter, isGroupedByDate, truncate}) {
 }
 
 export default function Tooltip(
-  {filter, isGroupedByDate, formatter, truncate, ...props} = {}
+  {filter, isGroupedByDate, formatter, truncate, utc, ...props} = {}
 ) {
-  formatter = formatter || getFormatter({filter, isGroupedByDate, truncate});
+  formatter = formatter || getFormatter({filter, isGroupedByDate, truncate, utc});
 
   return {
     show: true,
diff --git a/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx b/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx
index eff658d2f2..d0a0e0039d 100644
--- a/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx
@@ -1,16 +1,12 @@
-import moment from 'moment';
-
+import {getFormattedDate} from 'app/utils/dates';
 import theme from 'app/utils/theme';
 import {truncationFormatter} from '../utils';
 
-export default function XAxis({isGroupedByDate, interval, ...props} = {}) {
+export default function XAxis({isGroupedByDate, interval, utc, ...props} = {}) {
   const axisLabelFormatter = value => {
     if (isGroupedByDate) {
       const format = interval === 'hour' ? 'LT' : 'MMM Do';
-      return moment
-        .utc(value)
-        .local()
-        .format(format);
+      return getFormattedDate(value, format, {local: !utc});
     } else if (props.truncate) {
       return truncationFormatter(value, props.truncate);
     } else {
diff --git a/src/sentry/static/sentry/app/constants/index.jsx b/src/sentry/static/sentry/app/constants/index.jsx
index d51d30e797..35009a8daf 100644
--- a/src/sentry/static/sentry/app/constants/index.jsx
+++ b/src/sentry/static/sentry/app/constants/index.jsx
@@ -63,6 +63,8 @@ export const MENU_CLOSE_DELAY = 200;
 
 export const DEFAULT_STATS_PERIOD = '14d';
 
+export const DEFAULT_USE_UTC = true;
+
 export const DEFAULT_RELATIVE_PERIODS = {
   '24h': t('Last 24 hours'),
   '7d': t('Last 7 days'),
