commit b5d259b23fc0819a9f0ae3ca8c4cf7df39c8ad27
Author: Dora <dora.l.chan@gmail.com>
Date:   Wed Dec 4 09:38:18 2019 -0800

    fix(discoverv2): ui colors (#15924)
    
    * fixed tests
    
    * reinsert block

diff --git a/src/sentry/static/sentry/app/components/contextData.jsx b/src/sentry/static/sentry/app/components/contextData.jsx
index d5e45f929c..3aea319d14 100644
--- a/src/sentry/static/sentry/app/components/contextData.jsx
+++ b/src/sentry/static/sentry/app/components/contextData.jsx
@@ -2,8 +2,6 @@ import $ from 'jquery';
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import classNames from 'classnames';
-
 import isString from 'lodash/isString';
 import isNumber from 'lodash/isNumber';
 import isArray from 'lodash/isArray';
@@ -125,7 +123,7 @@ class ContextData extends React.Component {
           <span
             key="value"
             className={
-              (valueInfo.isString ? 'val-string' : 'val-repr') +
+              (valueInfo.isString ? 'val-string' : '') +
               (valueInfo.isStripped ? ' val-stripped' : '') +
               (valueInfo.isMultiLine ? ' val-string-multiline' : '')
             }
@@ -144,7 +142,7 @@ class ContextData extends React.Component {
 
         return out;
       } else if (isNumber(value)) {
-        return <span className="val-number">{value}</span>;
+        return <span>{value}</span>;
       } else if (isArray(value)) {
         for (i = 0; i < value.length; i++) {
           children.push(
@@ -213,10 +211,10 @@ class ContextData extends React.Component {
   };
 
   render() {
-    const {data, className, preserveQuotes: _preserveQuotes, ...other} = this.props;
+    const {data, preserveQuotes: _preserveQuotes, ...other} = this.props;
 
     return (
-      <pre className={classNames('val', className || '')} {...other}>
+      <pre className="val-string" {...other}>
         {this.renderValue(data)}
       </pre>
     );
diff --git a/src/sentry/static/sentry/app/components/events/contexts/user.jsx b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
index 3b4f438ac0..3490aace9c 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
@@ -22,11 +22,11 @@ class UserContextType extends React.Component {
     const children = [];
 
     // Handle our native attributes specially
-    user.id && builtins.push(['ID', <pre>{user.id}</pre>]);
+    user.id && builtins.push(['ID', <pre className="val-string">{user.id}</pre>]);
     user.email &&
       builtins.push([
         'Email',
-        <pre>
+        <pre className="val-string">
           {user.email}
           {EMAIL_REGEX.test(user.email) && (
             <ExternalLink href={`mailto:${user.email}`} className="external-icon">
@@ -35,9 +35,11 @@ class UserContextType extends React.Component {
           )}
         </pre>,
       ]);
-    user.username && builtins.push(['Username', <pre>{user.username}</pre>]);
-    user.ip_address && builtins.push(['IP Address', <pre>{user.ip_address}</pre>]);
-    user.name && builtins.push(['Name', <pre>{user.name}</pre>]);
+    user.username &&
+      builtins.push(['Username', <pre className="val-string">{user.username}</pre>]);
+    user.ip_address &&
+      builtins.push(['IP Address', <pre className="val-string">{user.ip_address}</pre>]);
+    user.name && builtins.push(['Name', <pre className="val-string">{user.name}</pre>]);
 
     // We also attach user supplied data as 'user.data'
     each(user.data, function(value, key) {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
index 4647af5ba3..0ea4101341 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
@@ -43,7 +43,7 @@ class KeyValueList extends React.Component {
               return [
                 <tr key={key}>
                   <td className="key">{key}</td>
-                  <td className="value">
+                  <td className="val">
                     <ContextData data={!raw ? value : JSON.stringify(value)} />
                   </td>
                 </tr>,
@@ -52,8 +52,8 @@ class KeyValueList extends React.Component {
               return [
                 <tr key={key}>
                   <td className="key">{key}</td>
-                  <td className="value">
-                    <pre>{'' + value || ' '}</pre>
+                  <td className="val">
+                    <pre className="val-string">{'' + value || ' '}</pre>
                   </td>
                 </tr>,
               ];
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index 38ccaf9beb..47a1a3e54f 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -1692,9 +1692,7 @@ span.val {
 }
 
 .val-string-multiline {
-  background: white;
-  display: block !important;
-  margin: 0px 0px 0px 15px;
+  display: block;
   overflow: auto;
 }
 
@@ -1703,14 +1701,6 @@ span.val {
   background: transparent;
 }
 
-.val-repr {
-  color: darken(@blue, 10);
-}
-
-.val-number {
-  color: darken(@pink, 10);
-}
-
 .val-bool,
 .val-null {
   color: darken(@blue, 10);
diff --git a/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap b/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
index df647f6dc7..7a2c9c0127 100644
--- a/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
@@ -98,7 +98,7 @@ exports[`KeyValueList renders formatted 1`] = `
         andthis
       </td>
       <td
-        className="value"
+        className="val"
       >
         <ContextData
           data={0}
@@ -114,7 +114,7 @@ exports[`KeyValueList renders formatted 1`] = `
         plussomeotherstuff
       </td>
       <td
-        className="value"
+        className="val"
       >
         <ContextData
           data="here"
@@ -130,7 +130,7 @@ exports[`KeyValueList renders formatted 1`] = `
         somestuff
       </td>
       <td
-        className="value"
+        className="val"
       >
         <ContextData
           data={
@@ -159,7 +159,7 @@ exports[`KeyValueList renders raw 1`] = `
         andthis
       </td>
       <td
-        className="value"
+        className="val"
       >
         <ContextData
           data="0"
@@ -175,7 +175,7 @@ exports[`KeyValueList renders raw 1`] = `
         plussomeotherstuff
       </td>
       <td
-        className="value"
+        className="val"
       >
         <ContextData
           data="\\"here\\""
@@ -191,7 +191,7 @@ exports[`KeyValueList renders raw 1`] = `
         somestuff
       </td>
       <td
-        className="value"
+        className="val"
       >
         <ContextData
           data="{\\"andsomeotherstuff\\":\\"here\\"}"
diff --git a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
index fc1addef2c..004ffc2877 100644
--- a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
@@ -24,13 +24,13 @@ describe('KeyValueList', function() {
 
       expect(
         wrapper
-          .find('.value')
+          .find('.val')
           .at(0)
           .text()
       ).toEqual('x');
       expect(
         wrapper
-          .find('.value')
+          .find('.val')
           .at(1)
           .text()
       ).toEqual('y');
@@ -55,13 +55,13 @@ describe('KeyValueList', function() {
 
       expect(
         wrapper
-          .find('.value')
+          .find('.val')
           .at(0)
           .text()
       ).toEqual('x');
       expect(
         wrapper
-          .find('.value')
+          .find('.val')
           .at(1)
           .text()
       ).toEqual('y');
@@ -89,13 +89,13 @@ describe('KeyValueList', function() {
 
       expect(
         wrapper
-          .find('.value')
+          .find('.val')
           .at(0)
           .text()
       ).toEqual(' ');
       expect(
         wrapper
-          .find('.value')
+          .find('.val')
           .at(1)
           .text()
       ).toEqual('y');
@@ -132,7 +132,7 @@ describe('KeyValueList', function() {
       ).toEqual('a');
       expect(
         wrapper
-          .find('.value')
+          .find('.val')
           .at(0)
           .text()
       ).toEqual('false');
@@ -150,7 +150,7 @@ describe('KeyValueList', function() {
       ).toEqual('a');
       expect(
         wrapper
-          .find('.value')
+          .find('.val')
           .at(0)
           .text()
       ).toEqual('null');
