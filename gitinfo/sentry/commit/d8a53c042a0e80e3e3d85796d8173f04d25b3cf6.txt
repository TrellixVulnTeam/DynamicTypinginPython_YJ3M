commit d8a53c042a0e80e3e3d85796d8173f04d25b3cf6
Author: Eric Feng <ehfeng@users.noreply.github.com>
Date:   Fri Dec 8 14:57:44 2017 -0800

    feat(analytics): Add Delete and Discard to FeatureAdoption (#6717)

diff --git a/src/sentry/models/featureadoption.py b/src/sentry/models/featureadoption.py
index e0011182f7..103adc18c1 100644
--- a/src/sentry/models/featureadoption.py
+++ b/src/sentry/models/featureadoption.py
@@ -54,13 +54,8 @@ manager.add(45, "source_maps", "Source Maps", "code", prerequisite=["first_event
 manager.add(46, "user_feedback", "User Feedback", "code", prerequisite=["user_tracking"])
 # manager.add(47, "api", "API", "code", prerequisite=["first_event"])  #
 # Challenging to determine what organization (i.e. api/0/organizations/)
-manager.add(
-    48,
-    "breadcrumbs",
-    "Breadcrumbs",
-    "code",
-    prerequisite=["first_event", ("python", "javascript", "node", "php")]
-)
+manager.add(48, "breadcrumbs", "Breadcrumbs", "code", prerequisite=[
+            "first_event", ("python", "javascript", "node", "php")])
 # TODO(ehfeng) manager.add("resolve_in_commit", "Resolve in Commit",
 # "code", prerequisite=["first_event", "releases"])
 
@@ -68,27 +63,18 @@ manager.add(
 manager.add(60, "first_project", "First Project", "web")
 manager.add(61, "invite_team", "Invite Team", "web", prerequisite=["first_project"])
 manager.add(62, "assignment", "Assign Issue", "web", prerequisite=["invite_team", "first_event"])
-manager.add(
-    63, "resolved_in_release", "Resolve in Next Release", "web", prerequisite=["release_tracking"]
-)
+manager.add(63, "resolved_in_release", "Resolve in Next Release", "web",
+            prerequisite=["release_tracking"])
 manager.add(64, "advanced_search", "Advanced Search", "web", prerequisite=["first_event"])
 manager.add(65, "saved_search", "Saved Search", "web", prerequisite=["advanced_search"])
 manager.add(66, "inbound_filters", "Inbound Filters", "web", prerequisite=["first_event"])
 manager.add(67, "alert_rules", "Alert Rules", "web", prerequisite=["first_event"])
-manager.add(
-    68,
-    "issue_tracker_integration",
-    "Issue Tracker Integration",
-    "web",
-    prerequisite=["first_project"]
-)
-manager.add(
-    69,
-    "notification_integration",
-    "Notification Integration",
-    "web",
-    prerequisite=["first_project"]
-)
+manager.add(68, "issue_tracker_integration", "Issue Tracker Integration", "web",
+            prerequisite=["first_project"])
+manager.add(69, "notification_integration", "Notification Integration", "web",
+            prerequisite=["first_project"])
+manager.add(70, "delete_and_discard", "Delete and Discard Future Events", "web",
+            prerequisite=["first_event"])
 # TODO(ehfeng) manager.add("snooze", "Snooze Issue", "web", prerequisite=["first_event"])
 # TODO(ehfeng) manager.add("merge", "Merge Issues", "web", prerequisite=["first_event"])
 # TODO(ehfeng) manager.add("releases", "Releases", "web", prerequisite=["first_project"])
diff --git a/src/sentry/receivers/features.py b/src/sentry/receivers/features.py
index 00356c6c99..8f4defba87 100644
--- a/src/sentry/receivers/features.py
+++ b/src/sentry/receivers/features.py
@@ -1,7 +1,9 @@
 from __future__ import absolute_import
 
+from django.db.models.signals import post_save
+
 from sentry.adoption import manager
-from sentry.models import FeatureAdoption
+from sentry.models import FeatureAdoption, GroupTombstone
 from sentry.plugins import IssueTrackingPlugin, IssueTrackingPlugin2
 from sentry.plugins.bases.notify import NotificationPlugin
 from sentry.receivers.rules import DEFAULT_RULE_LABEL, DEFAULT_RULE_DATA
@@ -180,3 +182,19 @@ def record_data_scrubber_enabled(organization, **kwargs):
     FeatureAdoption.objects.record(
         organization_id=organization.id, feature_slug="data_scrubbers", complete=True
     )
+
+
+def deleted_and_discarded_issue(instance, created, **kwargs):
+    if created:
+        FeatureAdoption.objects.record(
+            organization_id=instance.project.organization_id,
+            feature_slug="delete_and_discard"
+        )
+
+
+post_save.connect(
+    deleted_and_discarded_issue,
+    sender=GroupTombstone,
+    dispatch_uid='analytics.grouptombstone.created',
+    weak=False,
+)
diff --git a/tests/sentry/receivers/test_featureadoption.py b/tests/sentry/receivers/test_featureadoption.py
index fa5ca07c0e..4d985aac69 100644
--- a/tests/sentry/receivers/test_featureadoption.py
+++ b/tests/sentry/receivers/test_featureadoption.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 import json
 from django.utils import timezone
 
-from sentry.models import FeatureAdoption, Rule
+from sentry.models import FeatureAdoption, GroupTombstone, Rule
 from sentry.plugins import IssueTrackingPlugin2, NotificationPlugin
 from sentry.signals import (
     alert_rule_created,
@@ -716,3 +716,13 @@ class FeatureAdoptionTest(TestCase):
             organization=self.organization, slug="data_scrubbers"
         )
         assert feature_complete
+
+    def test_delete_and_discard(self):
+        GroupTombstone.objects.create(
+            previous_group_id=self.group.id,
+            project=self.project,
+        )
+        feature_complete = FeatureAdoption.objects.get_by_slug(
+            organization=self.organization, slug="delete_and_discard"
+        )
+        assert feature_complete
