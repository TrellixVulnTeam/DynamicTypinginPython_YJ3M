commit 1f0be53c3d0a38a4902c5f9e275ab2262fe7b207
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Wed Feb 15 13:17:59 2017 +0100

    Add app context (#4915)
    
    * Add new context type app for next swift sdk release
    
    * Add changes entry
    
    * Remove cputypes, Add build_type

diff --git a/CHANGES b/CHANGES
index bf4f0fc5b7..ab59dd1f17 100644
--- a/CHANGES
+++ b/CHANGES
@@ -10,6 +10,7 @@ Version 8.14 (Unreleased)
 - [BREAKING] Redis quota implementations now return BasicRedisQuota instead of tuples.
 - Commits using the ``Fixes SHORTID`` annotation will now be tracked appropriately.
 - Added OrganizationReleasesEndpoint
+- Added context type app for cocoa events
 
 Schema Changes
 ~~~~~~~~~~~~~~
diff --git a/src/sentry/interfaces/contexts.py b/src/sentry/interfaces/contexts.py
index 76ae6dc3da..75798aa7e1 100644
--- a/src/sentry/interfaces/contexts.py
+++ b/src/sentry/interfaces/contexts.py
@@ -98,6 +98,14 @@ class DefaultContextType(ContextType):
     type = 'default'
 
 
+@contexttype
+class AppContextType(ContextType):
+    type = 'app'
+    indexed_fields = {
+        'device': u'{device_app_hash}',
+    }
+
+
 @contexttype
 class DeviceContextType(ContextType):
     type = 'device'
diff --git a/src/sentry/search/utils.py b/src/sentry/search/utils.py
index a368b9e0ac..6f6948e23c 100644
--- a/src/sentry/search/utils.py
+++ b/src/sentry/search/utils.py
@@ -187,6 +187,7 @@ reserved_tag_names = frozenset([
     'browser',
     'device',
     'os',
+    'app',
     'os.name',
     'url',
     'event.timestamp'])
diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index 76f500ebc3..a15ac3686c 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -5,6 +5,7 @@ import {objectIsEmpty, toTitleCase, defined} from '../../utils';
 
 const CONTEXT_TYPES = {
   'default': require('./contexts/default').default,
+  'app': require('./contexts/app').default,
   'device': require('./contexts/device').default,
   'os': require('./contexts/os').default,
   'runtime': require('./contexts/runtime').default,
diff --git a/src/sentry/static/sentry/app/components/events/contexts/app.jsx b/src/sentry/static/sentry/app/components/events/contexts/app.jsx
new file mode 100644
index 0000000000..086c865e1f
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/app.jsx
@@ -0,0 +1,32 @@
+import React from 'react';
+
+import ContextBlock from './contextBlock';
+
+const AppContextType = React.createClass({
+  propTypes: {
+    alias: React.PropTypes.string.isRequired,
+    data: React.PropTypes.object.isRequired,
+  },
+
+  render() {
+    let {app_id, app_start_time, device_app_hash,
+      build_type, ...data} = this.props.data;
+    return (
+      <ContextBlock
+        data={data}
+        knownData={[
+          ['?ID', app_id],
+          ['?Start Time', app_start_time],
+          ['?Device', device_app_hash],
+          ['?Build Type', build_type],
+        ]}
+        alias={this.props.alias} />
+    );
+  }
+});
+
+AppContextType.getTitle = function(value) {
+  return 'App';
+};
+
+export default AppContextType;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device.jsx b/src/sentry/static/sentry/app/components/events/contexts/device.jsx
index eb0d6706ef..4b33e32e77 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device.jsx
@@ -28,7 +28,7 @@ const DeviceContextType = React.createClass({
   render() {
     let {name, family, model, model_id, arch, battery_level, orientation,
       simulator, memory_size, free_memory, usable_memory, storage_size,
-      ...data} = this.props.data;
+      boot_time, timezone, ...data} = this.props.data;
       let memory = this.formatMemory(memory_size, free_memory, usable_memory);
       let storage = this.formatStorage(storage_size);
     return (
@@ -45,6 +45,8 @@ const DeviceContextType = React.createClass({
           ['?Memory', memory],
           ['?Capacity', storage],
           ['?Simulator', simulator],
+          ['?Boot Time', boot_time],
+          ['?Timezone', timezone],
         ]}
         alias={this.props.alias} />
     );
diff --git a/tests/sentry/interfaces/test_contexts.py b/tests/sentry/interfaces/test_contexts.py
index 274d4cc1f8..32bab8201d 100644
--- a/tests/sentry/interfaces/test_contexts.py
+++ b/tests/sentry/interfaces/test_contexts.py
@@ -125,3 +125,21 @@ class ContextsTest(TestCase):
 
     def test_path(self):
         assert Contexts().get_path() == 'contexts'
+
+    def test_app(self):
+        ctx = Contexts.to_python({
+            'app': {
+                'app_id': '1234',
+                'device_app_hash': '5678',
+            },
+        })
+        assert sorted(ctx.iter_tags()) == [
+            ('app.device', '5678'),
+        ]
+        assert ctx.to_json() == {
+            'app': {
+                'type': 'app',
+                'app_id': '1234',
+                'device_app_hash': '5678',
+            }
+        }
