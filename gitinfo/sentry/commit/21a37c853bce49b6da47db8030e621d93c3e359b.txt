commit 21a37c853bce49b6da47db8030e621d93c3e359b
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 26 19:31:55 2013 -0700

    Only return vars that start with sentry_ as part of auth headers

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 8a3fd218c9..0a8145b3cc 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -119,7 +119,11 @@ def extract_auth_vars(request):
     elif request.META.get('HTTP_AUTHORIZATION', '').startswith('Sentry'):
         return parse_auth_header(request.META['HTTP_AUTHORIZATION'])
     else:
-        return request.GET
+        return dict(
+            (k, request.GET[k])
+            for k in request.GET.iterkeys()
+            if k.startswith('sentry_')
+        )
 
 
 def project_from_auth_vars(auth_vars):
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index ec84663acf..32b940dc68 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -52,8 +52,9 @@ class ExtractAuthVarsTest(BaseAPITest):
     def test_invalid_header_defers_to_GET(self):
         request = mock.Mock()
         request.META = {'HTTP_X_SENTRY_AUTH': 'foobar'}
+        request.GET = {'sentry_version': 1, 'foo': 'bar'}
         result = extract_auth_vars(request)
-        self.assertEquals(result, request.GET)
+        self.assertEquals(result, {'sentry_version': 1})
 
     def test_valid_version_legacy(self):
         request = mock.Mock()
@@ -68,8 +69,9 @@ class ExtractAuthVarsTest(BaseAPITest):
     def test_invalid_legacy_header_defers_to_GET(self):
         request = mock.Mock()
         request.META = {'HTTP_AUTHORIZATION': 'foobar'}
+        request.GET = {'sentry_version': 1, 'foo': 'bar'}
         result = extract_auth_vars(request)
-        self.assertEquals(result, request.GET)
+        self.assertEquals(result, {'sentry_version': 1})
 
 
 class ProjectFromAuthVarsTest(BaseAPITest):
