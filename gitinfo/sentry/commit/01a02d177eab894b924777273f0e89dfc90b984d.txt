commit 01a02d177eab894b924777273f0e89dfc90b984d
Author: Ben Vinegar <ben@benv.ca>
Date:   Thu Sep 24 12:53:35 2015 -0700

    Toggling sidebar inputs triggers new stream search

diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index f8cef9d793..3288c0e9da 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -404,7 +404,7 @@ var Stream = React.createClass({
             <Pagination pageLinks={this.state.pageLinks} onPage={this.onPage} />
           </div>
           <div className="col-md-2">
-            <StreamSidebar tags={this.state.tags}/>
+            <StreamSidebar tags={this.state.tags} onQueryChange={this.onSearch}/>
           </div>
         </div>
       </div>
diff --git a/src/sentry/static/sentry/app/views/stream/sidebar.jsx b/src/sentry/static/sentry/app/views/stream/sidebar.jsx
index 78f9f695a9..d6cf7bb178 100644
--- a/src/sentry/static/sentry/app/views/stream/sidebar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/sidebar.jsx
@@ -7,20 +7,51 @@ var StreamSidebar = React.createClass({
     router: React.PropTypes.func
   },
 
+  propTypes: {
+    tags: React.PropTypes.object.isRequired,
+    onQueryChange: React.PropTypes.func.isRequired
+  },
+
   getDefaultProps() {
     return {
-      tags: {}
+      tags: {},
+      onQueryChange: function () {}
+    };
+  },
+
+  getInitialState() {
+    return {
+      activeTagValues: {},
     };
   },
 
-  componentWillMount() {
+  buildQuery() {
+    return _.map(this.state.activeTagValues, (value, tagKey) => {
+      return `${tagKey}:${value}`;
+    }).join(' ');
+  },
+
+  onSelectTag(tag, value) {
+    this.setState({
+      activeTagValues: {...this.state.activeTagValues, [tag.key]:value}
+    }, () => {
+      let query = this.buildQuery();
+      console.log(query);
+      this.props.onQueryChange && this.props.onQueryChange(query);
+    });
   },
 
   render() {
     return (
       <div className="stream-sidebar">
         {_.map(this.props.tags, (tag) => {
-          return <StreamTagFilter tag={tag}/>;
+          return (
+            <StreamTagFilter
+              key={tag.key}
+              tag={tag}
+              onSelect={this.onSelectTag}
+            />
+          );
         })}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
index 77e4223e97..3c2e5982d5 100644
--- a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
+++ b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
@@ -19,6 +19,10 @@ var StreamTagFilter = React.createClass({
     router: React.PropTypes.func
   },
 
+  propTypes: {
+    tag: React.PropTypes.object.isRequired
+  },
+
   getDefaultProps() {
     return {
       tag: {},
@@ -27,10 +31,10 @@ var StreamTagFilter = React.createClass({
 
   getInitialState() {
     return {
-      tagValues: [],
+      tagValues: this.props.tag.values || [],
       query: '',
       loading: false,
-      selectedValue: 'Select a value'
+      selectedValue: 'Search for a ' + this.props.tag.name
     };
   },
 
@@ -81,6 +85,8 @@ var StreamTagFilter = React.createClass({
     this.setState({
       selectedValue: val
     });
+
+    this.props.onSelect && this.props.onSelect(this.props.tag, val);
   },
 
   render() {
