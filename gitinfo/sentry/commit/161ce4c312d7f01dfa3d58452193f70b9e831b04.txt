commit 161ce4c312d7f01dfa3d58452193f70b9e831b04
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jun 11 11:06:04 2015 -0700

    Draft render hooks

diff --git a/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx b/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx
index 7c8542213a..fffe98ae64 100644
--- a/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx
+++ b/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx
@@ -4,22 +4,13 @@ var jQuery = require("jquery");
 var React = require("react");
 
 var ConfigStore = require("../stores/configStore");
+var HookStore = require("../stores/hookStore");
 var ListLink = require("../components/listLink");
 var OrganizationState = require("../mixins/organizationState");
 
 var OrganizationHomeSidebar = React.createClass({
   mixins: [OrganizationState],
 
-  componentWillMount() {
-    // Handle out of scope classes with jQuery
-    jQuery(document.body).addClass("show-rightbar");
-  },
-
-  componentWillUnmount() {
-    // Handle out of scope classes with jQuery
-    jQuery(document.body).removeClass("show-rightbar");
-  },
-
   render() {
     var access = this.getAccess();
     var features = this.getFeatures();
@@ -27,6 +18,14 @@ var OrganizationHomeSidebar = React.createClass({
     var orgParams = {orgId: org.slug};
     var urlPrefix = ConfigStore.get('urlPrefix') + '/organizations/' + org.slug;
 
+    // Allow injection via getsentry et all
+    var children = [];
+    HookStore.get('organization:sidebar').forEach((cb) => {
+      cb().forEach((c) => {
+        children.push(c);
+      });
+    });
+
     return (
       <div>
         <h6 className="nav-header">General</h6>
@@ -65,6 +64,7 @@ var OrganizationHomeSidebar = React.createClass({
             </ul>
           </div>
         }
+        {children}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index 1f513e971f..f19bb51990 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -56,5 +56,6 @@ module.exports = {
   Alerts: require("./components/alerts"),
   Breadcrumbs: require("./components/breadcrumbs"),
   FlotChart: require("./components/flotChart"),
+  HookStore: require("./stores/hookStore"),
   RuleEditor: require("./views/ruleEditor")
 };
diff --git a/src/sentry/static/sentry/app/stores/hookStore.jsx b/src/sentry/static/sentry/app/stores/hookStore.jsx
new file mode 100644
index 0000000000..c52d7c46e9
--- /dev/null
+++ b/src/sentry/static/sentry/app/stores/hookStore.jsx
@@ -0,0 +1,40 @@
+/** @jsx React.DOM */
+
+var Reflux = require("reflux");
+
+var validHookNames = new Set([
+  'organization:sidebar'
+]);
+
+var HookStore = Reflux.createStore({
+  init() {
+    this.hooks = {};
+  },
+
+  add(hookName, callback) {
+    if (!validHookNames.has(hookName)) {
+      throw new Error('Invalid hook name: ' + hookName);
+    }
+    if (typeof this.hooks[hookName] === "undefined") {
+      this.hooks[hookName] = [];
+    }
+    this.hooks[hookName].push(callback);
+    this.trigger(hookName, [callback]);
+  },
+
+  remove(hookName, callback) {
+    if (typeof this.hooks[hookName] === "undefined") {
+      return;
+    }
+    this.hooks[hookName] = this.hooks[hookName].filter((cb) => {
+      return cb !== callback;
+    });
+    this.trigger(hookName, this.hooks[hookName]);
+  },
+
+  get(hookName) {
+    return this.hooks[hookName] || [];
+  }
+});
+
+module.exports = HookStore;
