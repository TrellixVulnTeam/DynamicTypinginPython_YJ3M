commit 17c2af5ed1e19377cca9891cbceadbab007f29e2
Author: Leander Rodrigues <leandergrodrigues@gmail.com>
Date:   Mon Feb 10 14:01:35 2020 -0800

    ref(async-csv): Migrate ExportedData storage system (#16912)
    
    Change the storage fields on the ExportedData model

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index 37c88dd506..e2c1770194 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0032_delete_alert_email
+sentry: 0033_auto_20200210_2137
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/api/serializers/models/exporteddata.py b/src/sentry/api/serializers/models/exporteddata.py
index 0b14d66f3d..66b30ed2ce 100644
--- a/src/sentry/api/serializers/models/exporteddata.py
+++ b/src/sentry/api/serializers/models/exporteddata.py
@@ -27,7 +27,6 @@ class ExportedDataSerializer(Serializer):
             "dateCreated": obj.date_added,
             "dateFinished": obj.date_finished,
             "dateExpired": obj.date_expired,
-            "storageUrl": obj.storage_url,
             "query": {"type": obj.query_type, "info": obj.query_info},
             "status": obj.status,
         }
diff --git a/src/sentry/migrations/0033_auto_20200210_2137.py b/src/sentry/migrations/0033_auto_20200210_2137.py
new file mode 100644
index 0000000000..859c226773
--- /dev/null
+++ b/src/sentry/migrations/0033_auto_20200210_2137.py
@@ -0,0 +1,43 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.27 on 2020-02-10 21:37
+from __future__ import unicode_literals
+
+from django.db import migrations
+import django.db.models.deletion
+import sentry.db.models.fields.foreignkey
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+
+    dependencies = [
+        ('sentry', '0032_delete_alert_email'),
+    ]
+
+    operations = [
+        migrations.RemoveField(
+            model_name='exporteddata',
+            name='storage_url',
+        ),
+        migrations.AddField(
+            model_name='exporteddata',
+            name='file',
+            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sentry.File'),
+        ),
+    ]
diff --git a/src/sentry/models/exporteddata.py b/src/sentry/models/exporteddata.py
index 3115b11eae..2e7dd7a734 100644
--- a/src/sentry/models/exporteddata.py
+++ b/src/sentry/models/exporteddata.py
@@ -33,12 +33,11 @@ class ExportedData(Model):
 
     organization = FlexibleForeignKey("sentry.Organization")
     user = FlexibleForeignKey(settings.AUTH_USER_MODEL)
+    file = FlexibleForeignKey("sentry.File", null=True, db_constraint=False)
     date_added = models.DateTimeField(default=timezone.now)
     date_finished = models.DateTimeField(null=True)
     date_expired = models.DateTimeField(null=True)
-    storage_url = models.URLField(null=True)
     query_type = BoundedPositiveIntegerField(choices=ExportQueryType.as_choices())
-    # TODO(Leander): Define a jsonschema to enforce query shape
     query_info = JSONField()
 
     @property
diff --git a/tests/sentry/api/endpoints/test_data_export.py b/tests/sentry/api/endpoints/test_data_export.py
index b334e30650..129c7df1e4 100644
--- a/tests/sentry/api/endpoints/test_data_export.py
+++ b/tests/sentry/api/endpoints/test_data_export.py
@@ -37,7 +37,6 @@ class DataExportTest(APITestCase):
                 "dateCreated": data_export.date_added,
                 "dateFinished": None,
                 "dateExpired": None,
-                "storageUrl": None,
                 "query": {"type": data["query_type"], "info": data["query_info"]},
                 "status": ExportStatus.Early,
             }
diff --git a/tests/sentry/api/endpoints/test_data_export_details.py b/tests/sentry/api/endpoints/test_data_export_details.py
index caca1d68d6..3953fb3d9f 100644
--- a/tests/sentry/api/endpoints/test_data_export_details.py
+++ b/tests/sentry/api/endpoints/test_data_export_details.py
@@ -45,7 +45,6 @@ class DataExportDetailsTest(APITestCase):
                 "dateCreated": self.TEST_DATE_ADDED,
                 "dateFinished": None,
                 "dateExpired": None,
-                "storageUrl": None,
                 "query": {"type": data_export.query_type, "info": data_export.query_info},
                 "status": ExportStatus.Early,
             }
