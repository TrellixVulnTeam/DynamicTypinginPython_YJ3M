commit 18ed673f87e40009ce3cf59f1faaf73edff54313
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Oct 2 14:17:56 2019 -0700

    perf: Cache lookups to get_previous_releases

diff --git a/src/sentry/utils/committers.py b/src/sentry/utils/committers.py
index 4c7fa89bfe..4191852202 100644
--- a/src/sentry/utils/committers.py
+++ b/src/sentry/utils/committers.py
@@ -7,9 +7,11 @@ from sentry.api.serializers import serialize
 from sentry.models import Release, ReleaseCommit, Commit, CommitFileChange, Event, Group
 from sentry.api.serializers.models.commit import CommitSerializer, get_users_for_commits
 from sentry.utils import metrics
+from sentry.utils.hashlib import hash_values
 from sentry.utils.safe import get_path
 
 from django.db.models import Q
+from django.core.cache import cache
 
 from itertools import izip
 from collections import defaultdict
@@ -133,28 +135,33 @@ def _get_committers(annotated_frames, commits):
 def get_previous_releases(project, start_version, limit=5):
     # given a release version + project, return the previous
     # `limit` releases (includes the release specified by `version`)
-    try:
-        release_dates = (
-            Release.objects.filter(
-                organization_id=project.organization_id, version=start_version, projects=project
+    key = "get_previous_releases:1:%s" % hash_values([project.id, start_version, limit])
+    rv = cache.get(key)
+    if rv is None:
+        try:
+            release_dates = (
+                Release.objects.filter(
+                    organization_id=project.organization_id, version=start_version, projects=project
+                )
+                .values("date_released", "date_added")
+                .get()
             )
-            .values("date_released", "date_added")
-            .get()
-        )
-    except Release.DoesNotExist:
-        return []
-
-    start_date = release_dates["date_released"] or release_dates["date_added"]
-
-    return list(
-        Release.objects.filter(projects=project, organization_id=project.organization_id)
-        .extra(
-            select={"date": "COALESCE(date_released, date_added)"},
-            where=["COALESCE(date_released, date_added) <= %s"],
-            params=[start_date],
-        )
-        .extra(order_by=["-date"])[:limit]
-    )
+        except Release.DoesNotExist:
+            rv = []
+        else:
+            start_date = release_dates["date_released"] or release_dates["date_added"]
+
+            rv = list(
+                Release.objects.filter(projects=project, organization_id=project.organization_id)
+                .extra(
+                    select={"date": "COALESCE(date_released, date_added)"},
+                    where=["COALESCE(date_released, date_added) <= %s"],
+                    params=[start_date],
+                )
+                .extra(order_by=["-date"])[:limit]
+            )
+        cache.set(key, rv, 60)
+    return rv
 
 
 def get_event_file_committers(project, event, frame_limit=25):
