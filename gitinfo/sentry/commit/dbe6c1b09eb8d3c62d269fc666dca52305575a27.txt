commit dbe6c1b09eb8d3c62d269fc666dca52305575a27
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Apr 7 15:21:00 2013 -0700

    Add an API for missing permissions
    
    Specifically this adds support to the create new project view so that plugins can override it's response.
    
    This is useful in cases like getsentry.com where we don't simply want to hide the action, but we want to show it and even more importantly give the user some feedback why they cannot perform this action.

diff --git a/src/sentry/permissions.py b/src/sentry/permissions.py
index a208bacfed..e9bb569045 100644
--- a/src/sentry/permissions.py
+++ b/src/sentry/permissions.py
@@ -12,6 +12,21 @@ from sentry.plugins import plugins
 from sentry.utils.cache import cached_for_request
 
 
+class Permission(object):
+    def __init__(self, name, label):
+        self.name = name
+        self.label = label
+
+    def __unicode__(self):
+        return self.name
+
+    def __eq__(self, other):
+        return unicode(self) == unicode(other)
+
+
+AddProjectPermission = Permission('add_project', 'create new projects')
+
+
 def perm_override(perm):
     def inner(func):
         @wraps(func)
diff --git a/src/sentry/plugins/base.py b/src/sentry/plugins/base.py
index c2ec58a5e1..c558dbab1d 100644
--- a/src/sentry/plugins/base.py
+++ b/src/sentry/plugins/base.py
@@ -433,7 +433,7 @@ class IPlugin(local):
         :param perm: a string, such as "edit_project"
         :param objects: an optional list of objects
 
-        If your plugin does not modify this permission, simply return None.
+        If your plugin does not modify this permission, simply return ``None``.
 
         For example, has perm might be called like so:
 
@@ -449,6 +449,19 @@ class IPlugin(local):
         """
         return None
 
+    def missing_perm_response(self, request, perm, *args, **objects):
+        """
+        Given a user, a permission name, and an optional mapping of objects
+        within a context, returns a custom response.
+
+        :param user: either an instance of ``AnonymousUser`` or ``User``.
+        :param perm: a string, such as "edit_project"
+        :param objects: an optional mapping of objects
+
+        If your plugin does not need to override this response, simply return
+        ``None``.
+        """
+
     def on_alert(self, alert, **kwargs):
         """
         Called when a new alert is generated.
diff --git a/src/sentry/templates/sentry/bases/team.html b/src/sentry/templates/sentry/bases/team.html
index 1310337fe6..903d6c4135 100644
--- a/src/sentry/templates/sentry/bases/team.html
+++ b/src/sentry/templates/sentry/bases/team.html
@@ -19,10 +19,8 @@
         <li{% if SUBSECTION == 'groups' %} class="active"{% endif %}>
             <a href="{% url 'sentry-manage-access-groups' team.slug %}">{% trans "Access Groups" %}</a>
         </li>
-        {% if can_create_projects %}
-            <li class="pull-right{% if SUBSECTION == 'new_project' %} active{% endif %}">
-                <a href="{% url 'sentry-new-team-project' team.slug %}">{% trans "Create a New Project" %}</a>
-            </li>
-        {% endif %}
+        <li class="pull-right{% if SUBSECTION == 'new_project' %} active{% endif %}">
+            <a href="{% url 'sentry-new-team-project' team.slug %}">{% trans "Create a New Project" %}</a>
+        </li>
     </ul>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/dashboard.html b/src/sentry/templates/sentry/dashboard.html
index 9ef2ce168b..867f53f793 100644
--- a/src/sentry/templates/sentry/dashboard.html
+++ b/src/sentry/templates/sentry/dashboard.html
@@ -6,11 +6,9 @@
 {% block title %}{% trans "Dashboard" %} | {{ block.super }}{% endblock %}
 
 {% block page_header %}
-    {% if can_create_projects %}
-        <div class="pull-right">
-            <a href="{% url 'sentry-new-team-project' team.slug %}" class="btn btn-primary">{% trans "Create a New Project" %}</a>
-        </div>
-    {% endif %}
+    <div class="pull-right">
+        <a href="{% url 'sentry-new-team-project' team.slug %}" class="btn btn-primary">{% trans "Create a New Project" %}</a>
+    </div>
     {{ block.super }}
 {% endblock %}
 
@@ -59,12 +57,8 @@
                         </div>
                     </div>
                 {% else %}
-                    {% if can_create_projects %}
-                        {% url 'sentry-new-project' team.slug as link %}
-                        <div class="alert alert-info">{% blocktrans %}You do not have access to any projects. Would you like to <a href="{{ link }}">create a new project</a>?{% endblocktrans %}</div>
-                    {% else %}
-                        <div class="alert alert-notice">{% trans "You do not have access to any projects. Ask an administrator to add you as a member." %}</div>
-                    {% endif %}
+                    {% url 'sentry-new-project' team.slug as link %}
+                    <div class="alert alert-info">{% blocktrans %}You do not have access to any projects. Would you like to <a href="{{ link }}">create a new project</a>?{% endblocktrans %}</div>
                 {% endif %}
             </section>
         {% endblock %}
diff --git a/src/sentry/templates/sentry/projects/base.html b/src/sentry/templates/sentry/projects/base.html
index e274222724..0497e1c355 100644
--- a/src/sentry/templates/sentry/projects/base.html
+++ b/src/sentry/templates/sentry/projects/base.html
@@ -53,11 +53,7 @@
                 </tbody>
             </table>
         {% else %}
-            {% if can_create_projects %}
-                <div class="alert alert-info">You do not have access to any projects. Would you like to <a href="{% url 'sentry-new-project' team.slug %}">create a new project</a>?</div>
-            {% else %}
-                <div class="alert alert-notice">{% trans "You do not have access to any projects. Ask an administrator to add you as a member." %}</div>
-            {% endif %}
+            <div class="alert alert-info">You do not have access to any projects. Would you like to <a href="{% url 'sentry-new-project' team.slug %}">create a new project</a>?</div>
         {% endif %}
     </section>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/projects/list.html b/src/sentry/templates/sentry/projects/list.html
index eff23fd6ae..583a090593 100644
--- a/src/sentry/templates/sentry/projects/list.html
+++ b/src/sentry/templates/sentry/projects/list.html
@@ -10,9 +10,7 @@
 {% endblock %}
 
 {% block page_header %}
-    {% if can_create_projects %}
-        <a href="{% url 'sentry-new-project' team.slug %}" class="btn pull-right btn-primary">{% trans "Create a new project" %}</a>
-    {% endif %}
+    <a href="{% url 'sentry-new-project' team.slug %}" class="btn pull-right btn-primary">{% trans "Create a new project" %}</a>
 
     <ul class="breadcrumb">
         <li><a href="{% url 'sentry-manage-team-projects' team.slug %}">{% trans "Projects" %}</a></li>
@@ -62,11 +60,7 @@
                 </tbody>
             </table>
         {% else %}
-            {% if can_create_projects %}
-                <div class="alert alert-info">{% trans "You do not have access to any projects." %}</div>
-            {% else %}
-                <div class="alert alert-notice">{% trans "You do not have access to any projects. Ask an administrator to add you as a member." %}</div>
-            {% endif %}
+            <div class="alert alert-info">{% trans "You do not have access to any projects." %}</div>
         {% endif %}
     </section>
 {% endblock %}
diff --git a/src/sentry/web/frontend/generic.py b/src/sentry/web/frontend/generic.py
index 93b36a516c..2457db3722 100644
--- a/src/sentry/web/frontend/generic.py
+++ b/src/sentry/web/frontend/generic.py
@@ -13,6 +13,7 @@ from django.utils.translation import ugettext as _
 
 from sentry.models import Team
 from sentry.permissions import can_create_teams
+from sentry.plugins import plugins
 from sentry.web.decorators import login_required
 from sentry.web.helpers import render_to_response
 
@@ -66,3 +67,24 @@ def static_media(request, **kwargs):
         path = '%s/%s' % (module, path)
 
     return serve(request, path, insecure=True)
+
+
+def missing_perm(request, perm, **kwargs):
+    """
+    Returns a generic response if you're missing permission to perform an
+    action.
+
+    Plugins may overwrite this with the ``missing_perm_response`` hook.
+    """
+    resp = plugins.first('missing_perm_response', request, perm, **kwargs)
+
+    if resp:
+        return resp
+
+    if perm.label:
+        return render_to_response('sentry/generic_error.html', {
+            'title': _('Missing Permission'),
+            'message': _('You do not have the required permissions to %s.') % (perm.label,)
+        }, request)
+
+    return HttpResponseRedirect(reverse('sentry'))
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index 9bc1455cc2..d990a28ac3 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -16,7 +16,8 @@ from django.utils.translation import ugettext as _
 from sentry.constants import MEMBER_USER, MEMBER_OWNER
 from sentry.models import PendingTeamMember, TeamMember, AccessGroup
 from sentry.permissions import (can_add_team_member, can_remove_team, can_create_projects,
-    can_create_teams, can_edit_team_member, can_remove_team_member)
+    can_create_teams, can_edit_team_member, can_remove_team_member,
+    AddProjectPermission)
 from sentry.plugins import plugins
 from sentry.web.decorators import login_required, has_access
 from sentry.web.forms.teams import (NewTeamForm, NewTeamAdminForm,
@@ -25,6 +26,7 @@ from sentry.web.forms.teams import (NewTeamForm, NewTeamAdminForm,
     EditAccessGroupForm, NewAccessGroupMemberForm, NewAccessGroupProjectForm,
     RemoveAccessGroupForm)
 from sentry.web.helpers import render_to_response
+from sentry.web.frontend.generic import missing_perm
 
 
 def render_with_team_context(team, template, context, request=None):
@@ -439,7 +441,7 @@ def create_new_team_project(request, team):
     from sentry.web.forms.projects import NewProjectAdminForm, NewProjectForm
 
     if not can_create_projects(request.user, team):
-        return HttpResponseRedirect(reverse('sentry'))
+        return missing_perm(request, AddProjectPermission, team=team)
 
     if request.user.has_perm('sentry.can_add_project'):
         form_cls = NewProjectAdminForm
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index 5d91ea6bed..eae0632cb7 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -1,6 +1,6 @@
 """
-sentry.web.views
-~~~~~~~~~~~~~~~~
+sentry.web.helpers
+~~~~~~~~~~~~~~~~~~
 
 :copyright: (c) 2010-2013 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
@@ -19,7 +19,7 @@ from django.utils.safestring import mark_safe
 from sentry.conf import settings
 from sentry.constants import MEMBER_OWNER
 from sentry.models import Project, Team, Option, ProjectOption, ProjectKey
-from sentry.permissions import can_create_projects, can_create_teams
+from sentry.permissions import can_create_teams
 
 logger = logging.getLogger('sentry.errors')
 
@@ -27,7 +27,7 @@ logger = logging.getLogger('sentry.errors')
 def get_project_list(user=None, access=None, hidden=False, key='id', team=None):
     warnings.warn('get_project_list is Deprecated. Use Project.objects.get_for_user instead.', DeprecationWarning)
     return SortedDict((getattr(p, key), p)
-            for p in Project.objects.get_for_user(user, access))
+        for p in Project.objects.get_for_user(user, access))
 
 
 def group_is_public(group, user):
@@ -116,10 +116,7 @@ def get_default_context(request, existing_context=None, team=None):
         if team:
             context.update({
                 'can_admin_team': Team.objects.get_for_user(request.user, MEMBER_OWNER),
-                'can_create_projects': can_create_projects(request.user, team=team),
             })
-        else:
-            context['can_create_projects'] = can_create_projects(request.user)
 
         if not existing_context or 'PROJECT_LIST' not in existing_context:
             project_list = Project.objects.get_for_user(request.user, team=team)
@@ -207,8 +204,8 @@ def plugin_config(plugin, project, request):
 
     from django.template.loader import render_to_string
     return ('display', mark_safe(render_to_string(template, {
-            'form': form,
-            'request': request,
-            'plugin': plugin,
-            'plugin_description': plugin.get_description() or '',
-        }, context_instance=RequestContext(request))))
+        'form': form,
+        'request': request,
+        'plugin': plugin,
+        'plugin_description': plugin.get_description() or '',
+    }, context_instance=RequestContext(request))))
