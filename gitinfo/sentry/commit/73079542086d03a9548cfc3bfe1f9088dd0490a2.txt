commit 73079542086d03a9548cfc3bfe1f9088dd0490a2
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Nov 21 12:58:04 2018 -0800

    feat(discover): Result table responds to window size changes (#10692)

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
index 7b874c220e..9e88bc0ebb 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
@@ -1,5 +1,6 @@
 import React from 'react';
 import PropTypes from 'prop-types';
+import {throttle} from 'lodash';
 
 import SentryTypes from 'app/sentryTypes';
 import {t} from 'app/locale';
@@ -38,9 +39,15 @@ export default class Result extends React.Component {
     super();
     this.state = {
       view: 'table',
+      height: null,
+      width: null,
     };
   }
 
+  componentDidMount() {
+    window.addEventListener('resize', this.throttledUpdateDimensions);
+  }
+
   componentWillReceiveProps(nextProps) {
     const {baseQuery, byDayQuery} = nextProps.data;
 
@@ -58,11 +65,29 @@ export default class Result extends React.Component {
         view: 'table',
       });
     }
+  }
+
+  componentWillUnmount() {
+    window.removeEventListener('resize', this.throttledUpdateDimensions);
+  }
+
+  setDimensions = ref => {
+    this.container = ref;
+    if (ref && this.state.height === null) {
+      this.updateDimensions();
+    }
+  };
+
+  updateDimensions = () => {
+    if (!this.container) return;
 
     this.setState({
-      savedQueryName: null,
+      height: this.container.clientHeight,
+      width: this.container.clientWidth,
     });
-  }
+  };
+
+  throttledUpdateDimensions = throttle(this.updateDimensions, 200, {trailing: true});
 
   handleToggleVisualizations = opt => {
     this.setState({
@@ -173,12 +198,13 @@ export default class Result extends React.Component {
           </ResultTitle>
           {this.renderToggle()}
         </div>
-        <ResultInnerContainer innerRef={ref => (this.container = ref)}>
+        <ResultInnerContainer innerRef={this.setDimensions}>
           {view === 'table' && (
             <Table
               data={baseQuery.data}
               query={baseQuery.query}
-              height={this.container && this.container.clientHeight}
+              height={this.state.height}
+              width={this.state.width}
             />
           )}
           {view === 'line' && (
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
index f944d54aff..ff131127eb 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
@@ -2,7 +2,6 @@ import React from 'react';
 import {MultiGrid, AutoSizer} from 'react-virtualized';
 import PropTypes from 'prop-types';
 import styled from 'react-emotion';
-
 import {t} from 'app/locale';
 import SentryTypes from 'app/sentryTypes';
 import Link from 'app/components/link';
@@ -31,16 +30,21 @@ export default class ResultTable extends React.Component {
     data: PropTypes.object.isRequired,
     query: PropTypes.object.isRequired,
     height: PropTypes.number,
+    width: PropTypes.number,
   };
 
   static contextTypes = {
     organization: SentryTypes.Organization,
   };
 
-  componentWillReceiveProps(nextProps) {
-    if (this.props.data.meta !== nextProps.data.meta) {
+  componentDidUpdate(prevProps) {
+    if (this.props.data.meta !== prevProps.data.meta) {
       this.grid.recomputeGridSize();
     }
+
+    if (this.props.width !== prevProps.width) {
+      this.forceUpdate(() => this.grid.recomputeGridSize());
+    }
   }
 
   cellRenderer = ({key, rowIndex, columnIndex, style}) => {
