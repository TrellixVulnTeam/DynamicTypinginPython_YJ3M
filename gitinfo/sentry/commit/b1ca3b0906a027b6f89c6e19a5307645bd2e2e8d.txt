commit b1ca3b0906a027b6f89c6e19a5307645bd2e2e8d
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jan 19 16:17:50 2013 -0800

    Initial work on user list

diff --git a/src/sentry/static/sentry/scripts/app.js b/src/sentry/static/sentry/scripts/app.js
index 5013aa727c..90c88cc12a 100644
--- a/src/sentry/static/sentry/scripts/app.js
+++ b/src/sentry/static/sentry/scripts/app.js
@@ -339,6 +339,20 @@
 
     });
 
+    app.UserListPage = BasePage.extend({
+
+        initialize: function(data){
+            BasePage.prototype.initialize.call(this, data);
+
+            this.list = new app.UserListView({
+                className: 'user-list',
+                id: 'user_list',
+                members: data.users
+            });
+        }
+
+    });
+
     Backbone.sync = function(method, model, success, error){
         success();
     };
diff --git a/src/sentry/static/sentry/scripts/models.js b/src/sentry/static/sentry/scripts/models.js
index 546edc0b8f..af37b303cd 100644
--- a/src/sentry/static/sentry/scripts/models.js
+++ b/src/sentry/static/sentry/scripts/models.js
@@ -1,6 +1,8 @@
 (function(app, Backbone){
     "use strict";
 
+    app.models = {};
+
     app.Group = Backbone.Model.extend({
 
         defaults: {
@@ -9,6 +11,15 @@
             isBookmarked: false,
             historicalData: []
         }
+
     });
 
+    app.models.User = Backbone.Model.extend({
+
+        defaults: {
+        }
+
+    });
+
+
 }(app, Backbone));
diff --git a/src/sentry/static/sentry/scripts/views.js b/src/sentry/static/sentry/scripts/views.js
index 331bd59738..2a578bdc1f 100644
--- a/src/sentry/static/sentry/scripts/views.js
+++ b/src/sentry/static/sentry/scripts/views.js
@@ -386,4 +386,22 @@
 
     });
 
+    app.UserListView = app.OrderedElementsView.extend({
+
+        defaults: {
+        },
+
+        initialize: function(data){
+            if (_.isUndefined(data))
+                data = {};
+
+            data.model = app.User;
+            
+            app.OrderedElementsView.prototype.initialize.call(this, data);
+
+            this.options = $.extend(this.defaults, this.options, data);
+        }
+
+    });
+
 }(app, Backbone, jQuery, _));
diff --git a/src/sentry/templates/sentry/users/list.html b/src/sentry/templates/sentry/users/list.html
new file mode 100644
index 0000000000..33b3040cee
--- /dev/null
+++ b/src/sentry/templates/sentry/users/list.html
@@ -0,0 +1,52 @@
+{% extends "sentry/layout.html" %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+{% load sentry_plugins %}
+
+{% block title %}Users | {{ project.name }} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    {{ block.super }}
+    <li class="divider">/</li>
+    <li><a href="{% url sentry-users project.slug %}">{% trans "Users" %}</a></li>
+{% endblock %}
+
+{% block main %}
+    {% paginator user_list from request as user_list %}
+    {% querystring from request without sort as sort_querystring %}
+
+    <div class="btn-toolbar">
+        <div class="btn-group">
+            <a href="#" class="btn dropdown-toggle" data-toggle="dropdown">{% blocktrans with sort_label as label %}Sort by: {{ label }}{% endblocktrans %} <span class="caret"></span></a>
+            <ul class="dropdown-menu">
+                <li{% ifequal sort 'recent' %} class="active"{% endifequal %}><a href="?{{ sort_querystring }}&amp;sort=recent">{% trans "Last Seen" %}</a></li>
+                <li{% ifequal sort 'new' %} class="active"{% endifequal %}><a href="?{{ sort_querystring }}&amp;sort=newest">{% trans "First Seen" %}</a></li>
+                <li{% ifequal sort 'events' %} class="active"{% endifequal %}><a href="?{{ sort_querystring }}&amp;sort=freq">{% trans "Number of Events" %}</a></li>
+                <li class="divider"></li>
+            </ul>
+        </div>
+        <div class="btn-group pull-right">
+            <a class="btn prev{% if not user_list.paginator.has_previous %} disabled{% endif %}" href="?{{ user_list.query_string|escape }}&amp;p={{ user_list.paginator.previous_page }}"><span>{% trans "Previous" %}</span></a>
+            <a class="btn next{% if not user_list.paginator.has_next %} disabled{% endif %}" href="?{{ user_list.query_string|escape }}&amp;p={{ user_list.paginator.next_page }}"><span>{% trans "Next" %}</span></a>
+        </div>
+    </div>
+
+    <div id="user_list"></div>
+
+    <div class="btn-toolbar">
+        <div class="btn-group pull-right">
+            <a class="btn prev{% if not user_list.paginator.has_previous %} disabled{% endif %}" href="?{{ user_list.query_string|escape }}&amp;p={{ user_list.paginator.previous_page }}"><span>{% trans "Previous" %}</span></a>
+            <a class="btn next{% if not user_list.paginator.has_next %} disabled{% endif %}" href="?{{ user_list.query_string|escape }}&amp;p={{ user_list.paginator.next_page }}"><span>{% trans "Next" %}</span></a>
+        </div>
+    </div>
+
+    <script>
+    $(function(){
+        new app.UserListPage({
+            users: {{ user_list.paginator.objects|to_json:request|safe }}
+        });
+    });
+    </script>
+
+{% endblock %}
diff --git a/src/sentry/web/frontend/users.py b/src/sentry/web/frontend/users.py
new file mode 100644
index 0000000000..53852478bf
--- /dev/null
+++ b/src/sentry/web/frontend/users.py
@@ -0,0 +1,37 @@
+"""
+sentry.web.frontend.users
+~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2012 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+from django.core.urlresolvers import reverse
+from django.http import HttpResponseRedirect
+
+from sentry.models import TrackedUser
+from sentry.web.decorators import login_required, has_access
+from sentry.web.helpers import render_to_response
+
+DEFAULT_SORT_OPTION = 'recent'
+SORT_OPTIONS = ('recent', 'newest', 'events')
+
+
+@has_access
+@login_required
+def user_list(request, project):
+    sort = request.GET.get('sort')
+    if sort not in SORT_OPTIONS:
+        sort = DEFAULT_SORT_OPTION
+
+    user_list = TrackedUser.objects.filter(project=project)
+
+    if sort == 'recent':
+        user_list = user_list.order_by('-last_seen')
+    elif sort == 'newest':
+        user_list = user_list.order_by('-first_seen')
+    elif sort == 'events':
+        user_list = user_list.order_by('-num_events')
+
+    return render_to_response('sentry/users/list.html', {
+        'user_list': user_list,
+    }, request)
