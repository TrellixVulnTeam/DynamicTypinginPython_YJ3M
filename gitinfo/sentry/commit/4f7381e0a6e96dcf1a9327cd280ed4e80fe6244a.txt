commit 4f7381e0a6e96dcf1a9327cd280ed4e80fe6244a
Author: Ben Vinegar <benvinegar@users.noreply.github.com>
Date:   Mon Sep 12 11:01:15 2016 -0700

    When inviting team member, preselect team if just 1 (#4118)
    
    /cc @getsentry/ui

diff --git a/src/sentry/web/frontend/create_organization_member.py b/src/sentry/web/frontend/create_organization_member.py
index 2275ddd683..9a4993b039 100644
--- a/src/sentry/web/frontend/create_organization_member.py
+++ b/src/sentry/web/frontend/create_organization_member.py
@@ -18,9 +18,15 @@ class CreateOrganizationMemberView(OrganizationView):
     required_scope = 'org:write'
 
     def get_form(self, request, organization, all_teams, allowed_roles):
+
+        # If there is only one possible team to join, select it by default
+        initial_teams = []
+        if len(all_teams) == 1:
+            initial_teams = all_teams
+
         initial = {
             'role': organization.default_role,
-            'teams': [],
+            'teams': initial_teams
         }
 
         if settings.SENTRY_ENABLE_INVITES:
diff --git a/tests/sentry/web/frontend/test_create_organization_member.py b/tests/sentry/web/frontend/test_create_organization_member.py
index 3f10d7bda1..29eb3739b3 100644
--- a/tests/sentry/web/frontend/test_create_organization_member.py
+++ b/tests/sentry/web/frontend/test_create_organization_member.py
@@ -23,8 +23,24 @@ class CreateOrganizationMemberPermissionTest(PermissionTestCase):
 
 
 class CreateOrganizationMemberTest(TestCase):
-    def test_renders_with_context(self):
+    def test_renders_with_team_preselected(self):
+        # If org has just one team, it is selected by default
         organization = self.create_organization()
+        team = self.create_team(name='foo', organization=organization)
+        path = reverse('sentry-create-organization-member', args=[organization.slug])
+        self.login_as(self.user)
+        resp = self.client.get(path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/create-organization-member.html')
+        assert resp.context['organization'] == organization
+        assert resp.context['form']
+        assert resp.context['form'].initial['teams'][0] == team
+
+    def test_renders_no_teams_seleced(self):
+        # With multiple teams, *no* teams are selected by default
+        organization = self.create_organization()
+        self.create_team(name='one', organization=organization)
+        self.create_team(name='two', organization=organization)
         path = reverse('sentry-create-organization-member', args=[organization.slug])
         self.login_as(self.user)
         resp = self.client.get(path)
@@ -32,6 +48,7 @@ class CreateOrganizationMemberTest(TestCase):
         self.assertTemplateUsed(resp, 'sentry/create-organization-member.html')
         assert resp.context['organization'] == organization
         assert resp.context['form']
+        assert len(resp.context['form'].initial['teams']) == 0
 
     def test_valid_for_invites(self):
         organization = self.create_organization(name='Default')
