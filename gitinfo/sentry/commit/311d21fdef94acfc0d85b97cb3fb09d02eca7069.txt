commit 311d21fdef94acfc0d85b97cb3fb09d02eca7069
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon Sep 16 11:08:15 2019 +0200

    feat: Native source context support (#13787)
    
    Adds generic support for source context in native events.

diff --git a/src/sentry/api/endpoints/chunk.py b/src/sentry/api/endpoints/chunk.py
index cbf9a8277a..31b7cda3d0 100644
--- a/src/sentry/api/endpoints/chunk.py
+++ b/src/sentry/api/endpoints/chunk.py
@@ -26,8 +26,9 @@ HASH_ALGORITHM = "sha1"
 
 CHUNK_UPLOAD_ACCEPT = (
     "debug_files",  # DIF assemble
-    "release_files",  # Artifacts assemble
+    "release_files",  # Release files assemble
     "pdbs",  # PDB upload and debug id override
+    "sources",  # Source artifact bundle upload
 )
 
 
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 9659ae9260..8a0a6cff61 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -286,6 +286,7 @@ KNOWN_DIF_FORMATS = {
     "application/x-dosexec": "pe",
     "application/x-ms-pdb": "pdb",
     "text/x-proguard+plain": "proguard",
+    "application/x-sentry-bundle+zip": "sourcebundle",
 }
 
 NATIVE_UNKNOWN_STRING = "<unknown>"
diff --git a/src/sentry/lang/native/processing.py b/src/sentry/lang/native/processing.py
index 702902073d..801334dd09 100644
--- a/src/sentry/lang/native/processing.py
+++ b/src/sentry/lang/native/processing.py
@@ -61,6 +61,12 @@ def _merge_frame(new_frame, symbolicated):
         new_frame["package"] = symbolicated["package"]
     if symbolicated.get("trust"):
         new_frame["trust"] = symbolicated["trust"]
+    if symbolicated.get("pre_context"):
+        new_frame["pre_context"] = symbolicated["pre_context"]
+    if symbolicated.get("context_line") is not None:
+        new_frame["context_line"] = symbolicated["context_line"]
+    if symbolicated.get("post_context"):
+        new_frame["post_context"] = symbolicated["post_context"]
     if symbolicated.get("status"):
         frame_meta = new_frame.setdefault("data", {})
         frame_meta["symbolicator_status"] = symbolicated["status"]
diff --git a/src/sentry/models/debugfile.py b/src/sentry/models/debugfile.py
index 673f278418..6e094063d7 100644
--- a/src/sentry/models/debugfile.py
+++ b/src/sentry/models/debugfile.py
@@ -150,6 +150,8 @@ class ProjectDebugFile(Model):
             return ".exe" if self.file_type == "exe" else ".dll"
         if self.file_format == "pdb":
             return ".pdb"
+        if self.file_format == "sourcebundle":
+            return ".src.zip"
 
         return ""
 
@@ -191,7 +193,7 @@ def create_dif_from_id(project, meta, fileobj=None, file=None):
     """
     if meta.file_format == "proguard":
         object_name = "proguard-mapping"
-    elif meta.file_format in ("macho", "elf", "pdb", "pe"):
+    elif meta.file_format in ("macho", "elf", "pdb", "pe", "sourcebundle"):
         object_name = meta.name
     elif meta.file_format == "breakpad":
         object_name = meta.name[:-4] if meta.name.endswith(".sym") else meta.name
diff --git a/src/sentry/static/sentry/app/views/settings/projectDebugFiles.jsx b/src/sentry/static/sentry/app/views/settings/projectDebugFiles.jsx
index acfee8cf13..58e072264f 100644
--- a/src/sentry/static/sentry/app/views/settings/projectDebugFiles.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectDebugFiles.jsx
@@ -50,6 +50,10 @@ function getFeatureTooltip(feature) {
       return t(
         'Stack unwinding information improves the quality of stack traces extracted from minidumps'
       );
+    case 'sources':
+      return t(
+        'Source code information allows Sentry to display source code context for stack frames'
+      );
     default:
       return null;
   }
