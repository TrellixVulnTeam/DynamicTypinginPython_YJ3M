commit 367d5c20b449caa58febffa78036dc7f4a8c6747
Author: David Cramer <dcramer@gmail.com>
Date:   Mon May 23 10:39:20 2016 -0700

    Add retries to inbound/outbound mail

diff --git a/src/sentry/digests/backends/base.py b/src/sentry/digests/backends/base.py
index d0282fa755..c536ed640c 100644
--- a/src/sentry/digests/backends/base.py
+++ b/src/sentry/digests/backends/base.py
@@ -153,7 +153,7 @@ class Backend(object):
             with timelines.digest('project:1') as records:
                 message = build_digest_email(records)
 
-            message.send()
+            message.send_async()
 
         """
         raise NotImplementedError
diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index 0a204cb673..d516cf1177 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -155,7 +155,7 @@ class OrganizationMember(Model):
         )
 
         try:
-            msg.send([self.get_email()])
+            msg.send_async([self.get_email()])
         except Exception as e:
             logger = logging.getLogger('sentry.mail.errors')
             logger.exception(e)
diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 4ebb7a10d0..16c70b897a 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -82,7 +82,7 @@ class MailPlugin(NotificationPlugin):
     def _send_mail(self, *args, **kwargs):
         message = self._build_message(*args, **kwargs)
         if message is not None:
-            return message.send()
+            return message.send_async()
 
     def get_notification_settings_url(self):
         return absolute_uri(reverse('sentry-account-settings-notifications'))
diff --git a/src/sentry/tasks/email.py b/src/sentry/tasks/email.py
index 273baaa96b..827fa7fd03 100644
--- a/src/sentry/tasks/email.py
+++ b/src/sentry/tasks/email.py
@@ -33,7 +33,8 @@ def _get_user_from_email(group, email):
 
 @instrumented_task(
     name='sentry.tasks.email.process_inbound_email',
-    queue='email')
+    queue='email',
+    default_retry_delay=60 * 5, max_retries=None)
 def process_inbound_email(mailfrom, group_id, payload):
     """
     """
@@ -65,6 +66,7 @@ def process_inbound_email(mailfrom, group_id, payload):
 
 @instrumented_task(
     name='sentry.tasks.email.send_email',
-    queue='email')
+    queue='email',
+    default_retry_delay=60 * 5, max_retries=None)
 def send_email(message):
     send_messages([message])
diff --git a/tests/sentry/models/test_organizationmember.py b/tests/sentry/models/test_organizationmember.py
index 8b2cd5e2c5..c9e6f3bd42 100644
--- a/tests/sentry/models/test_organizationmember.py
+++ b/tests/sentry/models/test_organizationmember.py
@@ -45,23 +45,23 @@ class OrganizationMemberTest(TestCase):
     def test_send_invite_email(self):
         organization = self.create_organization()
         member = OrganizationMember(id=1, organization=organization, email='foo@example.com')
-        with self.options({'system.url-prefix': 'http://example.com'}):
+        with self.options({'system.url-prefix': 'http://example.com'}), self.tasks():
             member.send_invite_email()
 
-            assert len(mail.outbox) == 1
+        assert len(mail.outbox) == 1
 
-            msg = mail.outbox[0]
+        msg = mail.outbox[0]
 
-            assert msg.to == ['foo@example.com']
+        assert msg.to == ['foo@example.com']
 
     def test_send_sso_link_email(self):
         organization = self.create_organization()
         member = OrganizationMember(id=1, organization=organization, email='foo@example.com')
-        with self.options({'system.url-prefix': 'http://example.com'}):
+        with self.options({'system.url-prefix': 'http://example.com'}), self.tasks():
             member.send_invite_email()
 
-            assert len(mail.outbox) == 1
+        assert len(mail.outbox) == 1
 
-            msg = mail.outbox[0]
+        msg = mail.outbox[0]
 
-            assert msg.to == ['foo@example.com']
+        assert msg.to == ['foo@example.com']
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index c9c978b607..d69485e447 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -47,7 +47,7 @@ class MailPluginTest(TestCase):
 
         notification = Notification(event=event, rule=rule)
 
-        with self.options({'system.url-prefix': 'http://example.com'}):
+        with self.options({'system.url-prefix': 'http://example.com'}), self.tasks():
             self.plugin.notify(notification)
 
         msg = mail.outbox[0]
@@ -225,15 +225,15 @@ class MailPluginTest(TestCase):
 
         notification = Notification(event=event)
 
-        with self.options({'system.url-prefix': 'http://example.com'}):
+        with self.options({'system.url-prefix': 'http://example.com'}), self.tasks():
             self.plugin.notify(notification)
 
         msg = mail.outbox[0]
         assert msg.subject == u'[Sentry] [foo Bar] ERROR: רונית מגן'
 
     @mock.patch.object(MailPlugin, 'notify', side_effect=MailPlugin.notify, autospec=True)
-    @mock.patch.object(MessageBuilder, 'send', autospec=True)
-    def test_notify_digest(self, send, notify):
+    @mock.patch.object(MessageBuilder, 'send_async', autospec=True)
+    def test_notify_digest(self, send_async, notify):
         project = self.event.project
         rule = project.rule_set.all()[0]
         digest = build_digest(
@@ -244,12 +244,12 @@ class MailPluginTest(TestCase):
             ),
         )
         self.plugin.notify_digest(project, digest)
-        assert send.call_count is 1
+        assert send_async.call_count is 1
         assert notify.call_count is 0
 
     @mock.patch.object(MailPlugin, 'notify', side_effect=MailPlugin.notify, autospec=True)
-    @mock.patch.object(MessageBuilder, 'send', autospec=True)
-    def test_notify_digest_single_record(self, send, notify):
+    @mock.patch.object(MessageBuilder, 'send_async', autospec=True)
+    def test_notify_digest_single_record(self, send_async, notify):
         project = self.event.project
         rule = project.rule_set.all()[0]
         digest = build_digest(
@@ -259,7 +259,7 @@ class MailPluginTest(TestCase):
             ),
         )
         self.plugin.notify_digest(project, digest)
-        assert send.call_count is 1
+        assert send_async.call_count is 1
         assert notify.call_count is 1
 
     @mock.patch(
@@ -276,7 +276,9 @@ class MailPluginTest(TestCase):
                 event_to_record(self.event, (rule,)),
             ),
         )
-        self.plugin.notify_digest(project, digest)
+
+        with self.tasks():
+            self.plugin.notify_digest(project, digest)
 
         assert len(mail.outbox) == 1
 
@@ -299,7 +301,8 @@ class MailPluginTest(TestCase):
             },
         )
 
-        self.plugin.notify_about_activity(activity)
+        with self.tasks():
+            self.plugin.notify_about_activity(activity)
 
         assert len(mail.outbox) == 1
 
@@ -323,7 +326,8 @@ class MailPluginTest(TestCase):
 
         self.project.team.organization.member_set.create(user=user_foo)
 
-        self.plugin.notify_about_activity(activity)
+        with self.tasks():
+            self.plugin.notify_about_activity(activity)
 
         assert len(mail.outbox) == 1
 
@@ -351,7 +355,8 @@ class MailPluginTest(TestCase):
 
         self.project.team.organization.member_set.create(user=user_foo)
 
-        self.plugin.notify_about_activity(activity)
+        with self.tasks():
+            self.plugin.notify_about_activity(activity)
 
         assert len(mail.outbox) == 1
 
diff --git a/tests/sentry/web/frontend/test_create_organization_member.py b/tests/sentry/web/frontend/test_create_organization_member.py
index b9d5e4a8c8..d8d64070d2 100644
--- a/tests/sentry/web/frontend/test_create_organization_member.py
+++ b/tests/sentry/web/frontend/test_create_organization_member.py
@@ -38,7 +38,7 @@ class CreateOrganizationMemberTest(TestCase):
         path = reverse('sentry-create-organization-member', args=[organization.slug])
         self.login_as(self.user)
 
-        with self.settings(SENTRY_ENABLE_INVITES=True):
+        with self.settings(SENTRY_ENABLE_INVITES=True), self.tasks():
             resp = self.client.post(path, {
                 'email': 'foo@example.com',
             })
diff --git a/tests/sentry/web/frontend/test_organization_member_settings.py b/tests/sentry/web/frontend/test_organization_member_settings.py
index d3c1601b85..6e9d13b969 100644
--- a/tests/sentry/web/frontend/test_organization_member_settings.py
+++ b/tests/sentry/web/frontend/test_organization_member_settings.py
@@ -145,9 +145,10 @@ class OrganizationMemberSettingsTest(TestCase):
 
         self.login_as(self.user)
 
-        resp = self.client.post(path, {
-            'op': 'reinvite',
-        })
+        with self.tasks():
+            resp = self.client.post(path, {
+                'op': 'reinvite',
+            })
 
         assert resp.status_code == 302
 
