commit 218508890bc8a61c29121f802daf59a0533c5533
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jun 9 14:49:37 2012 -0700

    Add support for entry_points registration of plugins

diff --git a/docs/developer/plugins/index.rst b/docs/developer/plugins/index.rst
index 09d0b38f72..442c47d6af 100644
--- a/docs/developer/plugins/index.rst
+++ b/docs/developer/plugins/index.rst
@@ -24,7 +24,7 @@ A plugins layout generally looks like the following::
     setup.py
     sentry_pluginname/
     sentry_pluginname/__init__.py
-    sentry_pluginname/models.py
+    sentry_pluginname/plugin.py
 
 The ``__init__.py`` file should contain no plugin logic, and at most, a VERSION = 'x.x.x' line. For example,
 if you want to pull the version using pkg_resources (which is what we recommend), your file might contain::
@@ -35,12 +35,11 @@ if you want to pull the version using pkg_resources (which is what we recommend)
     except Exception, e:
         VERSION = 'unknown'
 
-Inside of ``models.py``, you'll declare your Plugin class, and register it::
+Inside of ``plugin.py``, you'll declare your Plugin class::
 
     import sentry_pluginname
     from sentry.plugins import Plugin, register
 
-    @register
     class PluginName(Plugin):
         title = 'Plugin Name'
         slug = 'pluginname'
@@ -53,6 +52,20 @@ Inside of ``models.py``, you'll declare your Plugin class, and register it::
         def widget(self, request, group, **kwargs):
             return "<p>Absolutely useless widget</p>"
 
+And you'll register it via ``entry_points`` in your ``setup.py``::
+
+    setup(
+        # ...
+        entry_points={
+           'sentry.plugins': [
+                'pluginname = sentry_pluginname.plugin:PluginName'
+            ],
+        },
+    )
+
+That's it! Users will be able to install your plugin via ``pip install <package name>`` and configure it
+via the web interface based on the hooks you enable.
+
 Next Steps
 ----------
 
diff --git a/docs/plugins/index.rst b/docs/plugins/index.rst
index dc8e6608af..337f8ebb05 100644
--- a/docs/plugins/index.rst
+++ b/docs/plugins/index.rst
@@ -25,24 +25,12 @@ your ``INSTALLED_APPS``::
     Enables a list of most seen servers in the message details sidebar, as well
     as a dedicated panel to view all servers a message has been seen on.
 
-    ::
-
-        INSTALLED_APPS = [
-          'sentry.plugins.sentry_servers',
-        ]
-
 .. data:: sentry.plugins.sentry_urls
     :noindex:
 
     Enables a list of most seen urls in the message details sidebar, as well
     as a dedicated panel to view all urls a message has been seen on.
 
-    ::
-
-        INSTALLED_APPS = [
-          'sentry.plugins.sentry_urls',
-        ]
-
 .. data:: sentry.plugins.sentry_sites
     :noindex:
 
@@ -51,36 +39,17 @@ your ``INSTALLED_APPS``::
     Enables a list of most seen sites in the message details sidebar, as well
     as a dedicated panel to view all sites a message has been seen on.
 
-    ::
-
-        INSTALLED_APPS = [
-          'sentry.plugins.sentry_sites',
-        ]
-
-
 .. data:: sentry.plugins.sentry_mail
     :noindex:
 
     Enables email notifications when new events or regressions happen.
 
-    ::
-
-        INSTALLED_APPS = [
-          'sentry.plugins.sentry_mail',
-        ]
-
 .. data:: sentry.plugins.sentry_useragents
     :noindex:
 
     Enables a tagging of browsers and operating systems based on the
     'User-Agent' header in the HTTP interface.
 
-    ::
-
-        INSTALLED_APPS = [
-          'sentry.plugins.sentry_useragents',
-        ]
-
     .. versionadded:: 4.5.0
 
 Recognized 3rd Party Extensions
diff --git a/sentry/utils/runner.py b/sentry/utils/runner.py
index 8550aaa031..c0f2b2e97a 100644
--- a/sentry/utils/runner.py
+++ b/sentry/utils/runner.py
@@ -12,6 +12,7 @@ from sentry import environment
 import base64
 import datetime
 import os
+import pkg_resources
 
 KEY_LENGTH = 40
 
@@ -78,10 +79,31 @@ def generate_settings():
     return output
 
 
+def install_plugins(settings):
+    from sentry.plugins import register
+    # entry_points={
+    #    'sentry.plugins': [
+    #         'phabricator = sentry_phabricator.plugins:PhabricatorPlugin'
+    #     ],
+    # },
+    for ep in pkg_resources.iter_entry_points('sentry.plugins'):
+        try:
+            plugin = ep.load()
+        except:
+            import sys
+            import traceback
+
+            print >> sys.stderr, "Failed to load plugin %r:\n%s" % (ep.name, traceback.format_exc())
+        else:
+            register(plugin)
+
+
 def initialize_app(config):
     environment['config'] = config.get('config_path')
     environment['start_date'] = datetime.datetime.utcnow()
 
+    install_plugins(config['settings'])
+
 
 def main():
     run_app(
diff --git a/setup.py b/setup.py
index 258a756adf..1c3c77c07b 100755
--- a/setup.py
+++ b/setup.py
@@ -56,7 +56,7 @@ install_requires = [
     'django-picklefield>=0.2.0',
     'django-templatetag-sugar>=0.1.0',
     'gunicorn>=0.13.4,<0.14.0',
-    'logan>=0.3.0',
+    'logan>=0.3.1',
     'pynliner>=0.4.0',
     'python-dateutil>=1.5.0,<2.0.0',
     'pytz>=2011n',
@@ -72,7 +72,7 @@ dependency_links = [
 
 setup(
     name='sentry',
-    version='4.5.7',
+    version='4.6.0',
     author='David Cramer',
     author_email='dcramer@gmail.com',
     url='http://github.com/dcramer/sentry',
