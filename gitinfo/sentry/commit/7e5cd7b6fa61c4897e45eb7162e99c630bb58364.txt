commit 7e5cd7b6fa61c4897e45eb7162e99c630bb58364
Author: Dora <dora.l.chan@gmail.com>
Date:   Tue Jun 9 09:16:36 2020 -0700

    feat(discv2 results): show/hide tag summary button (#19180)
    
    * added show tag summary link
    
    * replace links with buttons
    
    * danny fixin tags
    
    * push last changes for tag update
    
    * work in progress
    
    * more wip
    
    * Make showtags state stored in localstorage.
    
    * toggle show hide button
    
    * add missing syntax
    
    * Fix split state handling
    
    * Fix compiler error
    
    Co-authored-by: Dora Chan <dora.lchan@gmail.com>
    Co-authored-by: Danny Lee <dlee@sentry.io>
    Co-authored-by: Mark Story <mark@sentry.io>

diff --git a/src/sentry/api/serializers/models/discoversavedquery.py b/src/sentry/api/serializers/models/discoversavedquery.py
index d994c8ca57..cdc988215a 100644
--- a/src/sentry/api/serializers/models/discoversavedquery.py
+++ b/src/sentry/api/serializers/models/discoversavedquery.py
@@ -10,7 +10,6 @@ from sentry.discover.models import DiscoverSavedQuery
 @register(DiscoverSavedQuery)
 class DiscoverSavedQuerySerializer(Serializer):
     def serialize(self, obj, attrs, user, **kwargs):
-
         query_keys = [
             "environment",
             "query",
@@ -26,7 +25,6 @@ class DiscoverSavedQuerySerializer(Serializer):
             "yAxis",
             "display",
         ]
-
         data = {
             "id": six.text_type(obj.id),
             "name": obj.name,
diff --git a/src/sentry/discover/endpoints/discover_saved_query_detail.py b/src/sentry/discover/endpoints/discover_saved_query_detail.py
index adbc5ae4df..948e4f5397 100644
--- a/src/sentry/discover/endpoints/discover_saved_query_detail.py
+++ b/src/sentry/discover/endpoints/discover_saved_query_detail.py
@@ -43,16 +43,13 @@ class DiscoverSavedQueryDetailEndpoint(OrganizationEndpoint):
             model = DiscoverSavedQuery.objects.get(id=query_id, organization=organization)
         except DiscoverSavedQuery.DoesNotExist:
             raise ResourceDoesNotExist
-
         serializer = DiscoverSavedQuerySerializer(
             data=request.data, context={"organization": organization}
         )
-
         if not serializer.is_valid():
             return Response(serializer.errors, status=400)
 
         data = serializer.validated_data
-
         model.update(
             organization=organization,
             name=data["name"],
diff --git a/src/sentry/static/sentry/app/components/dataExport.tsx b/src/sentry/static/sentry/app/components/dataExport.tsx
index 918e55db05..d9d9ad745c 100644
--- a/src/sentry/static/sentry/app/components/dataExport.tsx
+++ b/src/sentry/static/sentry/app/components/dataExport.tsx
@@ -27,6 +27,7 @@ type Props = {
   disabled?: boolean;
   organization: Organization;
   payload: DataExportPayload;
+  icon?: React.ReactNode;
 };
 
 type State = {
@@ -90,7 +91,7 @@ class DataExport extends React.Component<Props, State> {
 
   render() {
     const {inProgress, dataExportId} = this.state;
-    const {children, disabled} = this.props;
+    const {children, disabled, icon} = this.props;
     return (
       <Feature features={['organizations:data-export']}>
         {inProgress && dataExportId ? (
@@ -100,6 +101,7 @@ class DataExport extends React.Component<Props, State> {
             title="You can get on with your life. We'll email you when your data's ready."
             {...this.props}
             disabled
+            icon={icon}
           >
             {t("We're working on it...")}
           </NewButton>
@@ -110,6 +112,7 @@ class DataExport extends React.Component<Props, State> {
             size="small"
             priority="default"
             title="Put your data to work. Start your export and we'll email you when it's finished."
+            icon={icon}
             {...this.props}
           >
             {children ? children : t('Export All to CSV')}
diff --git a/src/sentry/static/sentry/app/components/gridEditable/styles.tsx b/src/sentry/static/sentry/app/components/gridEditable/styles.tsx
index d4ad1965f9..a20cedc0e7 100644
--- a/src/sentry/static/sentry/app/components/gridEditable/styles.tsx
+++ b/src/sentry/static/sentry/app/components/gridEditable/styles.tsx
@@ -24,7 +24,7 @@ export const Header = styled('div')`
   display: flex;
   justify-content: space-between;
   align-items: center;
-  margin: 0 ${space(1)} ${space(1)} 0;
+  margin-bottom: ${space(1)};
 `;
 
 export const HeaderTitle = styled('h4')`
@@ -35,7 +35,7 @@ export const HeaderTitle = styled('h4')`
 
 export const HeaderButtonContainer = styled('div')`
   display: grid;
-  grid-gap: ${space(2)};
+  grid-gap: ${space(1)};
   grid-auto-flow: column;
   grid-auto-columns: auto;
   justify-items: end;
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index bea0635445..5fd27ffa9b 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -998,19 +998,24 @@ export type NewQuery = {
   id: string | undefined;
   version: SavedQueryVersions;
   name: string;
-  projects: Readonly<number[]>;
+  createdBy?: User;
+
+  // Query and Table
+  query: string;
   fields: Readonly<string[]>;
   widths?: Readonly<string[]>;
-  query: string;
   orderby?: string;
+
+  // GlobalSelectionHeader
+  projects: Readonly<number[]>;
+  environment?: Readonly<string[]>;
   range?: string;
   start?: string;
   end?: string;
-  environment?: Readonly<string[]>;
-  tags?: Readonly<string[]>;
+
+  // Graph
   yAxis?: string;
   display?: string;
-  createdBy?: User;
 };
 
 export type SavedQuery = NewQuery & {
diff --git a/src/sentry/static/sentry/app/utils/discover/styles.tsx b/src/sentry/static/sentry/app/utils/discover/styles.tsx
index f32ded00c8..e7e01a5cbf 100644
--- a/src/sentry/static/sentry/app/utils/discover/styles.tsx
+++ b/src/sentry/static/sentry/app/utils/discover/styles.tsx
@@ -54,11 +54,13 @@ export const ContentBox = styled('div')`
     grid-template-columns: minmax(100px, auto) 325px;
   }
 `;
+
 export const Main = styled('div')`
   grid-column: 1/2;
   max-width: 100%;
   overflow: hidden;
 `;
+
 export const Side = styled('div')`
   grid-column: 2/3;
 `;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/results.tsx b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
index 10546e79aa..25215c7128 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/results.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
@@ -25,6 +25,7 @@ import withGlobalSelection from 'app/utils/withGlobalSelection';
 import EventView, {isAPIPayloadSimilar} from 'app/utils/discover/eventView';
 import {ContentBox, Main, Side} from 'app/utils/discover/styles';
 import {generateQueryWithTag} from 'app/utils';
+import localStorage from 'app/utils/localStorage';
 
 import {DEFAULT_EVENT_VIEW} from './data';
 import Table from './table';
@@ -46,7 +47,14 @@ type State = {
   error: string;
   errorCode: number;
   totalValues: null | number;
+  showTags: boolean;
 };
+const SHOW_TAGS_STORAGE_KEY = 'discover2:show-tags';
+
+function readShowTagsState() {
+  const value = localStorage.getItem(SHOW_TAGS_STORAGE_KEY);
+  return value === '1';
+}
 
 class Results extends React.Component<Props, State> {
   static getDerivedStateFromProps(nextProps: Props, prevState: State): State {
@@ -59,6 +67,7 @@ class Results extends React.Component<Props, State> {
     error: '',
     errorCode: 200,
     totalValues: null,
+    showTags: readShowTagsState(),
   };
 
   componentDidMount() {
@@ -125,6 +134,14 @@ class Results extends React.Component<Props, State> {
     );
   }
 
+  handleChangeShowTags = () => {
+    this.setState(state => {
+      const newValue = !state.showTags;
+      localStorage.setItem(SHOW_TAGS_STORAGE_KEY, newValue ? '1' : '0');
+      return {...state, showTags: newValue};
+    });
+  };
+
   handleSearch = (query: string) => {
     const {router, location} = this.props;
 
@@ -190,13 +207,15 @@ class Results extends React.Component<Props, State> {
     const {eventView, totalValues} = this.state;
 
     return (
-      <Tags
-        generateUrl={this.generateTagUrl}
-        totalValues={totalValues}
-        eventView={eventView}
-        organization={organization}
-        location={location}
-      />
+      <Side>
+        <Tags
+          generateUrl={this.generateTagUrl}
+          totalValues={totalValues}
+          eventView={eventView}
+          organization={organization}
+          location={location}
+        />
+      </Side>
     );
   }
 
@@ -229,7 +248,7 @@ class Results extends React.Component<Props, State> {
 
   render() {
     const {organization, location, router, api} = this.props;
-    const {eventView, error, errorCode, totalValues} = this.state;
+    const {eventView, error, errorCode, totalValues, showTags} = this.state;
     const query = location.query.query || '';
     const title = this.getDocumentTitle();
 
@@ -264,16 +283,18 @@ class Results extends React.Component<Props, State> {
                   total={totalValues}
                 />
               </Top>
-              <Main>
+              <StyledMain isCollapsed={!!showTags}>
                 <Table
                   organization={organization}
                   eventView={eventView}
                   location={location}
                   title={title}
                   setError={this.setError}
+                  onChangeShowTags={this.handleChangeShowTags}
+                  showTags={showTags}
                 />
-              </Main>
-              <Side>{this.renderTagsTable()}</Side>
+              </StyledMain>
+              {showTags ? this.renderTagsTable() : null}
             </ContentBox>
           </LightWeightNoProjectMessage>
         </StyledPageContent>
@@ -298,6 +319,10 @@ export const Top = styled('div')`
   flex-grow: 0;
 `;
 
+export const StyledMain = styled(Main)<{isCollapsed: boolean}>`
+  grid-column: ${p => (p.isCollapsed ? '1/2' : '1/3')};
+`;
+
 function ResultsContainer(props: Props) {
   /**
    * Block `<Results>` from mounting until GSH is ready since there are API
diff --git a/src/sentry/static/sentry/app/views/eventsV2/savedQuery/index.tsx b/src/sentry/static/sentry/app/views/eventsV2/savedQuery/index.tsx
index e757fb77aa..6334dd6205 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/savedQuery/index.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/savedQuery/index.tsx
@@ -76,7 +76,6 @@ class SavedQueryButtonGroup extends React.PureComponent<Props, State> {
 
     // For modifying a SavedQuery
     const isEqualQuery = nextEventView.isEqualTo(savedEventView);
-
     return {
       isNewQuery: false,
       isEditingQuery: !isEqualQuery,
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/columnEditModal.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/columnEditModal.tsx
index 10a5baed42..16eb8463a5 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/columnEditModal.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/columnEditModal.tsx
@@ -61,7 +61,7 @@ class ColumnEditModal extends React.Component<Props, State> {
         <Body>
           <Instruction>
             {t(
-              'To group events, add functions that may take in additional parameters. Tag and field columns will help you view more details about the events.'
+              'To stack events, add functions that may take in additional parameters. Tag and field columns will help you view more details about the events.'
             )}
           </Instruction>
           <ColumnEditCollection
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/index.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/index.tsx
index 294868fdf2..d9b321a23c 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/index.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/index.tsx
@@ -19,9 +19,11 @@ type TableProps = {
   location: Location;
   eventView: EventView;
   organization: Organization;
+  showTags: boolean;
   tags: {[key: string]: Tag};
   setError: (msg: string, code: number) => void;
   title: string;
+  onChangeShowTags: () => void;
 };
 
 type TableState = {
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableActions.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableActions.tsx
index 51c31f1790..30d6621e95 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableActions.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableActions.tsx
@@ -1,18 +1,17 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import styled from '@emotion/styled';
 import {Location} from 'history';
 
 import {OrganizationSummary} from 'app/types';
 import DataExport, {ExportQueryType} from 'app/components/dataExport';
+import Button from 'app/components/button';
 import Feature from 'app/components/acl/feature';
 import FeatureDisabled from 'app/components/acl/featureDisabled';
-import {IconDownload, IconEdit} from 'app/icons';
+import {IconDownload, IconStack, IconTag} from 'app/icons';
 import Hovercard from 'app/components/hovercard';
 import {t} from 'app/locale';
 import {trackAnalyticsEvent} from 'app/utils/analytics';
 import EventView from 'app/utils/discover/eventView';
-import space from 'app/styles/space';
 
 import {TableData} from './types';
 import {downloadAsCsv} from '../utils';
@@ -25,6 +24,8 @@ type Props = {
   tableData: TableData | null | undefined;
   location: Location;
   onEdit: () => void;
+  onChangeShowTags: () => void;
+  showTags: boolean;
 };
 
 function renderDownloadButton(canEdit: boolean, props: Props) {
@@ -59,10 +60,15 @@ function renderBrowserExportButton(canEdit: boolean, {isLoading, ...props}: Prop
     : () => handleDownloadAsCsv(props.title, {isLoading, ...props});
 
   return (
-    <HeaderButton disabled={disabled} onClick={onClick} data-test-id="grid-download-csv">
-      <IconDownload size="xs" />
-      {t('Export Page')}
-    </HeaderButton>
+    <Button
+      size="small"
+      disabled={disabled}
+      onClick={onClick}
+      data-test-id="grid-download-csv"
+      icon={<IconDownload size="xs" />}
+    >
+      {t('Export')}
+    </Button>
   );
 }
 renderBrowserExportButton.propTypes = {
@@ -73,16 +79,16 @@ function renderAsyncExportButton(canEdit: boolean, props: Props) {
   const {isLoading, location} = props;
   const disabled = isLoading || canEdit === false;
   return (
-    <HeaderDownloadButton
+    <DataExport
       payload={{
         queryType: ExportQueryType.Discover,
         queryInfo: location.query,
       }}
       disabled={disabled}
+      icon={<IconDownload size="xs" />}
     >
-      <IconDownload size="xs" />
       {t('Export All')}
-    </HeaderDownloadButton>
+    </DataExport>
   );
 }
 // Placate eslint proptype checking
@@ -93,10 +99,15 @@ renderAsyncExportButton.propTypes = {
 function renderEditButton(canEdit: boolean, props: Props) {
   const onClick = canEdit ? props.onEdit : undefined;
   return (
-    <HeaderButton disabled={!canEdit} onClick={onClick} data-test-id="grid-edit-enable">
-      <IconEdit size="xs" />
-      {t('Edit Columns')}
-    </HeaderButton>
+    <Button
+      size="small"
+      disabled={!canEdit}
+      onClick={onClick}
+      data-test-id="grid-edit-enable"
+      icon={<IconStack size="xs" />}
+    >
+      {t('Columns')}
+    </Button>
   );
 }
 // Placate eslint proptype checking
@@ -104,10 +115,17 @@ renderEditButton.propTypes = {
   onEdit: PropTypes.func,
 };
 
+function renderSummaryButton({onChangeShowTags, showTags}: Props) {
+  return (
+    <Button size="small" onClick={onChangeShowTags} icon={<IconTag size="xs" />}>
+      {showTags ? t('Hide Tags') : t('Show Tags')}
+    </Button>
+  );
+}
+
 function HeaderActions(props: Props) {
   const noEditMessage = t('Requires discover query feature.');
   const editFeatures = ['organizations:discover-query'];
-
   const renderDisabled = p => (
     <Hovercard
       body={
@@ -132,59 +150,11 @@ function HeaderActions(props: Props) {
         <React.Fragment>
           {renderEditButton(hasFeature, props)}
           {renderDownloadButton(hasFeature, props)}
+          {renderSummaryButton(props)}
         </React.Fragment>
       )}
     </Feature>
   );
 }
 
-const HeaderButton = styled('button')<{disabled?: boolean}>`
-  display: flex;
-  align-items: center;
-
-  background: none;
-  border: none;
-  color: ${p => (p.disabled ? p.theme.gray400 : p.theme.gray600)};
-  cursor: ${p => (p.disabled ? 'default' : 'pointer')};
-  font-size: ${p => p.theme.fontSizeSmall};
-
-  padding: 0;
-  margin: 0;
-  outline: 0;
-
-  > svg {
-    margin-right: ${space(0.5)};
-  }
-
-  &:hover,
-  &:active {
-    color: ${p => (p.disabled ? p.theme.gray400 : p.theme.gray700)};
-  }
-`;
-
-const HeaderDownloadButton = styled(DataExport)<{disabled: boolean}>`
-  background: none;
-  border: none;
-  font-weight: normal;
-  box-shadow: none;
-  color: ${p => (p.disabled ? p.theme.gray400 : p.theme.gray600)};
-
-  padding: 0;
-  margin: 0;
-  outline: 0;
-
-  svg {
-    margin-right: ${space(0.5)};
-  }
-  > span {
-    padding: 0;
-  }
-
-  &:hover,
-  &:active {
-    color: ${p => (p.disabled ? p.theme.gray400 : p.theme.gray700)};
-    box-shadow: none;
-  }
-`;
-
 export default HeaderActions;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
index 1a8dce9c3e..2d124a8850 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
@@ -39,6 +39,9 @@ export type TableViewProps = {
   tableData: TableData | null | undefined;
   tagKeys: null | string[];
   title: string;
+
+  onChangeShowTags: () => void;
+  showTags: boolean;
 };
 
 /**
@@ -216,7 +219,16 @@ class TableView extends React.Component<TableViewProps> {
   };
 
   renderHeaderButtons = () => {
-    const {organization, title, eventView, isLoading, tableData, location} = this.props;
+    const {
+      organization,
+      title,
+      eventView,
+      isLoading,
+      tableData,
+      location,
+      onChangeShowTags,
+      showTags,
+    } = this.props;
 
     return (
       <TableActions
@@ -227,6 +239,8 @@ class TableView extends React.Component<TableViewProps> {
         onEdit={this.handleEditColumns}
         tableData={tableData}
         location={location}
+        onChangeShowTags={onChangeShowTags}
+        showTags={showTags}
       />
     );
   };
diff --git a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
index 06b4f46a92..e6adf6af10 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
@@ -158,17 +158,13 @@ class Tags extends React.Component<Props, State> {
   render() {
     return (
       <React.Fragment>
-        <StyledSectionHeading>{t('Event Tag Summary')}</StyledSectionHeading>
+        <SectionHeading>{t('Tag Summary')}</SectionHeading>
         {this.renderBody()}
       </React.Fragment>
     );
   }
 }
 
-const StyledSectionHeading = styled(SectionHeading)`
-  margin-top: ${space(0.5)};
-`;
-
 const StyledError = styled('div')`
   color: ${p => p.theme.gray500};
   display: flex;
