commit 00a39de55ddb3032a993727771557b35c2685761
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 8 00:49:56 2013 -0700

    Add USE_TRENDING option

diff --git a/src/sentry/conf/defaults.py b/src/sentry/conf/defaults.py
index 2aba4f6592..52510c8726 100644
--- a/src/sentry/conf/defaults.py
+++ b/src/sentry/conf/defaults.py
@@ -118,6 +118,10 @@ USE_QUEUE = False
 # events..
 USE_SEARCH = True
 
+# Enable trend results. These can be expensive and are calculated in real-time.
+# When disabled they will be replaced w/ a default priority sort.
+USE_TRENDING = True
+
 # Default sort option for the group stream
 DEFAULT_SORT_OPTION = 'date'
 
diff --git a/src/sentry/utils/db.py b/src/sentry/utils/db.py
index 46ecb08542..c1145a9fe6 100644
--- a/src/sentry/utils/db.py
+++ b/src/sentry/utils/db.py
@@ -12,6 +12,7 @@ import operator
 from django.conf import settings as django_settings
 from django.db.models.expressions import ExpressionNode, F
 from django.db.models.fields.related import SingleRelatedObjectDescriptor
+from sentry.conf import settings
 
 
 def get_db_engine(alias='default'):
@@ -27,7 +28,7 @@ def get_db_engine(alias='default'):
 def has_trending(alias='default'):
     # we only support trend queries for postgres to db optimization
     # issues in mysql, and lack of anything useful in sqlite
-    return get_db_engine('default').startswith('postgres')
+    return settings.USE_TRENDING and get_db_engine('default').startswith('postgres')
 
 
 def has_charts(db):
