commit b5d2efe29b57a9678e8d1fbfe0eef76f49ab3942
Author: Mark Story <mark@mark-story.com>
Date:   Fri Jan 4 16:54:09 2019 -0500

    chore: Remove unused SSO components (#11344)
    
    Remove the OrganizationAuthProvider component and related tests. This
    component has been commented out since March 2018. Removing this code
    will help reduce bundle sizes and test duration.

diff --git a/src/sentry/static/sentry/app/views/settings/organizationAuth/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuth/index.jsx
index d4ec66133c..8e774b60e6 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationAuth/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationAuth/index.jsx
@@ -112,21 +112,6 @@ class OrganizationAuth extends AsyncView {
         onConfigure={this.handleConfigure}
       />
     );
-
-    /* For now this is in django
-    if (provider) {
-      return (
-        <OrganizationAuthProvider
-          orgId={orgId}
-          onDisableProvider={this.handleDisableProvider}
-          onSendReminders={this.handleSendReminders}
-          sendRemindersBusy={sendRemindersBusy}
-          disableBusy={disableBusy}
-          provider={provider}
-        />
-      );
-    }
-  */
   }
 }
 
diff --git a/src/sentry/static/sentry/app/views/settings/organizationAuth/organizationAuthProvider.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuth/organizationAuthProvider.jsx
deleted file mode 100644
index 4389252ade..0000000000
--- a/src/sentry/static/sentry/app/views/settings/organizationAuth/organizationAuthProvider.jsx
+++ /dev/null
@@ -1,166 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import {t, tct} from 'app/locale';
-import ApiForm from 'app/components/forms/apiForm';
-import BooleanField from 'app/components/forms/booleanField';
-import Button from 'app/components/button';
-import SelectField from 'app/components/forms/selectField';
-
-const ROLES = [
-  ['member', 'Member'],
-  ['billing', 'Billing'],
-  ['owner', 'Owner'],
-  ['admin', 'Admin'],
-  ['manager', 'Manager'],
-];
-
-class OrganizationAuthProvider extends React.Component {
-  static propTypes = {
-    orgId: PropTypes.string.isRequired,
-    onDisableProvider: PropTypes.func.isRequired,
-    onSendReminders: PropTypes.func.isRequired,
-    sendRemindersBusy: PropTypes.bool,
-    provider: PropTypes.shape({
-      auth_provider: PropTypes.shape({
-        id: PropTypes.string.isRequired,
-        provider: PropTypes.string.isRequired,
-      }),
-      require_link: PropTypes.bool,
-      default_role: PropTypes.string,
-      login_url: PropTypes.string,
-      provider_name: PropTypes.string,
-      pending_links_count: PropTypes.number,
-      content: PropTypes.string,
-    }),
-    disableBusy: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    provider: {},
-    onDisableProvider: () => {},
-    onSendReminders: () => {},
-  };
-
-  render() {
-    let {
-      orgId,
-      provider,
-      sendRemindersBusy,
-      disableBusy,
-      onDisableProvider,
-      onSendReminders,
-    } = this.props;
-
-    if (!provider) return null;
-
-    let {
-      content,
-      login_url: loginUrl,
-      provider_name: providerName,
-      pending_links_count: pendingLinksCount,
-    } = provider;
-
-    return (
-      <div>
-        <h3>{tct('[providerName] Authentication', {providerName})}</h3>
-
-        <div className="box">
-          <div className="box-content with-padding">
-            <legend style={{marginTop: 0}}>{t('Login URL')}</legend>
-
-            <p>
-              {t(
-                `While Sentry will try to be clever about directing members to the
-              appropriate login form, you're safest just to hit up your
-              organization-specific login when visiting the app`
-              )}:
-            </p>
-
-            <pre>
-              <a href={loginUrl}>{loginUrl}</a>
-            </pre>
-
-            {!!pendingLinksCount && (
-              <div>
-                <hr />
-                <h4>{t('Unlinked Members')}</h4>
-
-                <Button
-                  priority="primary"
-                  className="pull-right"
-                  busy={sendRemindersBusy}
-                  onClick={onSendReminders}
-                  style={{marginLeft: 20}}
-                >
-                  {t('Send Reminders')}
-                </Button>
-
-                <p>
-                  {tct(
-                    `There are currently [pendingLinksCount] member(s) who have
-                  not yet linked their account with [providerName]. Until this
-                  is done they will be unable to access the organization.`,
-                    {pendingLinksCount, providerName}
-                  )}
-                </p>
-              </div>
-            )}
-
-            <div dangerouslySetInnerHTML={{__html: content}} />
-
-            <legend>{t('General Settings')}</legend>
-
-            <ApiForm
-              apiMethod="PUT"
-              initialData={provider}
-              apiEndpoint={`/organizations/${orgId}/auth-provider/`}
-              onSubmit={() => {}}
-              submitLabel={t('Save Settings')}
-            >
-              <BooleanField
-                name="require_link"
-                label="Require SSO"
-                help="Require members to use a valid linked SSO account to access this organization"
-              />
-              <SelectField
-                name="default_role"
-                label="Default Role"
-                choices={ROLES}
-                required
-              />
-            </ApiForm>
-          </div>
-        </div>
-
-        <div className="box">
-          <div className="box-header">
-            <h3>{tct('Disable [providerName] Authentication', {providerName})}</h3>
-          </div>
-
-          <div className="box-content with-padding">
-            <p>
-              {t(
-                `Your organization will no longer being able to authenticate with their
-              existing accounts. This will prevent any existing users from logging in
-              unless they have access outside of SSO.`
-              )}
-            </p>
-
-            <fieldset className="form-actions">
-              <Button
-                priority="danger"
-                disabled={disableBusy}
-                onClick={() => onDisableProvider(providerName)}
-              >
-                {tct('Disable [providerName] Auth', {providerName})}
-              </Button>
-            </fieldset>
-          </div>
-        </div>
-      </div>
-    );
-  }
-}
-
-export default OrganizationAuthProvider;
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationAuthProvider.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationAuthProvider.spec.jsx.snap
deleted file mode 100644
index 3b9b7599b6..0000000000
--- a/tests/js/spec/views/settings/__snapshots__/organizationAuthProvider.spec.jsx.snap
+++ /dev/null
@@ -1,606 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`OrganizationAuthProvider renders 1`] = `
-<div>
-  <h3>
-    <span
-      key="4"
-    >
-      <span
-        key="1"
-      >
-        dummy
-      </span>
-      <span
-        key="2"
-      >
-         Authentication
-      </span>
-    </span>
-  </h3>
-  <div
-    className="box"
-  >
-    <div
-      className="box-content with-padding"
-    >
-      <legend
-        style={
-          Object {
-            "marginTop": 0,
-          }
-        }
-      >
-        Login URL
-      </legend>
-      <p>
-        While Sentry will try to be clever about directing members to the
-              appropriate login form, you're safest just to hit up your
-              organization-specific login when visiting the app
-        :
-      </p>
-      <pre>
-        <a
-          href="http://loginUrl"
-        >
-          http://loginUrl
-        </a>
-      </pre>
-      <div
-        dangerouslySetInnerHTML={
-          Object {
-            "__html": "",
-          }
-        }
-      />
-      <legend>
-        General Settings
-      </legend>
-      <ApiForm
-        apiEndpoint="/organizations/org-slug/auth-provider/"
-        apiMethod="PUT"
-        cancelLabel="Cancel"
-        className="form-stacked"
-        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
-        footerClass="form-actions align-right"
-        hideErrors={false}
-        initialData={
-          Object {
-            "auth_provider": Object {
-              "id": "1",
-              "provider": "dummy",
-            },
-            "content": "",
-            "default_role": "member",
-            "login_url": "http://loginUrl",
-            "pending_links_count": 0,
-            "provider_name": "dummy",
-            "require_link": true,
-          }
-        }
-        onSubmit={[Function]}
-        requireChanges={false}
-        resetOnError={false}
-        submitDisabled={false}
-        submitErrorMessage="There was an error saving your changes."
-        submitLabel="Save Settings"
-        submitLoadingMessage="Saving changes.."
-      >
-        <BooleanField
-          disabled={false}
-          help="Require members to use a valid linked SSO account to access this organization"
-          hideErrorMessage={false}
-          label="Require SSO"
-          name="require_link"
-          required={false}
-        />
-        <SelectField
-          choices={
-            Array [
-              Array [
-                "member",
-                "Member",
-              ],
-              Array [
-                "billing",
-                "Billing",
-              ],
-              Array [
-                "owner",
-                "Owner",
-              ],
-              Array [
-                "admin",
-                "Admin",
-              ],
-              Array [
-                "manager",
-                "Manager",
-              ],
-            ]
-          }
-          clearable={true}
-          disabled={false}
-          hideErrorMessage={false}
-          label="Default Role"
-          multiple={false}
-          name="default_role"
-          required={true}
-        />
-      </ApiForm>
-    </div>
-  </div>
-  <div
-    className="box"
-  >
-    <div
-      className="box-header"
-    >
-      <h3>
-        <span
-          key="5"
-        >
-          <span
-            key="0"
-          >
-            Disable 
-          </span>
-          <span
-            key="2"
-          >
-            dummy
-          </span>
-          <span
-            key="3"
-          >
-             Authentication
-          </span>
-        </span>
-      </h3>
-    </div>
-    <div
-      className="box-content with-padding"
-    >
-      <p>
-        Your organization will no longer being able to authenticate with their
-              existing accounts. This will prevent any existing users from logging in
-              unless they have access outside of SSO.
-      </p>
-      <fieldset
-        className="form-actions"
-      >
-        <Button
-          disabled={false}
-          onClick={[Function]}
-          priority="danger"
-        >
-          <span
-            key="5"
-          >
-            <span
-              key="0"
-            >
-              Disable 
-            </span>
-            <span
-              key="2"
-            >
-              dummy
-            </span>
-            <span
-              key="3"
-            >
-               Auth
-            </span>
-          </span>
-        </Button>
-      </fieldset>
-    </div>
-  </div>
-</div>
-`;
-
-exports[`OrganizationAuthProvider renders with Unlinked members  1`] = `
-<div>
-  <h3>
-    <span
-      key="4"
-    >
-      <span
-        key="1"
-      >
-        dummy
-      </span>
-      <span
-        key="2"
-      >
-         Authentication
-      </span>
-    </span>
-  </h3>
-  <div
-    className="box"
-  >
-    <div
-      className="box-content with-padding"
-    >
-      <legend
-        style={
-          Object {
-            "marginTop": 0,
-          }
-        }
-      >
-        Login URL
-      </legend>
-      <p>
-        While Sentry will try to be clever about directing members to the
-              appropriate login form, you're safest just to hit up your
-              organization-specific login when visiting the app
-        :
-      </p>
-      <pre>
-        <a
-          href="http://loginUrl"
-        >
-          http://loginUrl
-        </a>
-      </pre>
-      <div>
-        <hr />
-        <h4>
-          Unlinked Members
-        </h4>
-        <Button
-          className="pull-right"
-          disabled={false}
-          onClick={[Function]}
-          priority="primary"
-          style={
-            Object {
-              "marginLeft": 20,
-            }
-          }
-        >
-          Send Reminders
-        </Button>
-        <p>
-          <span
-            key="8"
-          >
-            <span
-              key="0"
-            >
-              There are currently 
-            </span>
-            <span
-              key="2"
-            >
-              4
-            </span>
-            <span
-              key="3"
-            >
-               member(s) who have
-                  not yet linked their account with 
-            </span>
-            <span
-              key="5"
-            >
-              dummy
-            </span>
-            <span
-              key="6"
-            >
-              . Until this
-                  is done they will be unable to access the organization.
-            </span>
-          </span>
-        </p>
-      </div>
-      <div
-        dangerouslySetInnerHTML={
-          Object {
-            "__html": "",
-          }
-        }
-      />
-      <legend>
-        General Settings
-      </legend>
-      <ApiForm
-        apiEndpoint="/organizations/org-slug/auth-provider/"
-        apiMethod="PUT"
-        cancelLabel="Cancel"
-        className="form-stacked"
-        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
-        footerClass="form-actions align-right"
-        hideErrors={false}
-        initialData={
-          Object {
-            "auth_provider": Object {
-              "id": "1",
-              "provider": "dummy",
-            },
-            "content": "",
-            "default_role": "member",
-            "login_url": "http://loginUrl",
-            "pending_links_count": 4,
-            "provider_name": "dummy",
-            "require_link": true,
-          }
-        }
-        onSubmit={[Function]}
-        requireChanges={false}
-        resetOnError={false}
-        submitDisabled={false}
-        submitErrorMessage="There was an error saving your changes."
-        submitLabel="Save Settings"
-        submitLoadingMessage="Saving changes.."
-      >
-        <BooleanField
-          disabled={false}
-          help="Require members to use a valid linked SSO account to access this organization"
-          hideErrorMessage={false}
-          label="Require SSO"
-          name="require_link"
-          required={false}
-        />
-        <SelectField
-          choices={
-            Array [
-              Array [
-                "member",
-                "Member",
-              ],
-              Array [
-                "billing",
-                "Billing",
-              ],
-              Array [
-                "owner",
-                "Owner",
-              ],
-              Array [
-                "admin",
-                "Admin",
-              ],
-              Array [
-                "manager",
-                "Manager",
-              ],
-            ]
-          }
-          clearable={true}
-          disabled={false}
-          hideErrorMessage={false}
-          label="Default Role"
-          multiple={false}
-          name="default_role"
-          required={true}
-        />
-      </ApiForm>
-    </div>
-  </div>
-  <div
-    className="box"
-  >
-    <div
-      className="box-header"
-    >
-      <h3>
-        <span
-          key="5"
-        >
-          <span
-            key="0"
-          >
-            Disable 
-          </span>
-          <span
-            key="2"
-          >
-            dummy
-          </span>
-          <span
-            key="3"
-          >
-             Authentication
-          </span>
-        </span>
-      </h3>
-    </div>
-    <div
-      className="box-content with-padding"
-    >
-      <p>
-        Your organization will no longer being able to authenticate with their
-              existing accounts. This will prevent any existing users from logging in
-              unless they have access outside of SSO.
-      </p>
-      <fieldset
-        className="form-actions"
-      >
-        <Button
-          disabled={false}
-          onClick={[Function]}
-          priority="danger"
-        >
-          <span
-            key="5"
-          >
-            <span
-              key="0"
-            >
-              Disable 
-            </span>
-            <span
-              key="2"
-            >
-              dummy
-            </span>
-            <span
-              key="3"
-            >
-               Auth
-            </span>
-          </span>
-        </Button>
-      </fieldset>
-    </div>
-  </div>
-</div>
-`;
-
-exports[`OrganizationAuthProvider renders with no provider 1`] = `""`;
-
-exports[`OrganizationAuthProvider renders with provider template 1`] = `
-Array [
-  <div
-    className="box-content with-padding"
-  >
-    <legend
-      style={
-        Object {
-          "marginTop": 0,
-        }
-      }
-    >
-      Login URL
-    </legend>
-    <p>
-      While Sentry will try to be clever about directing members to the
-              appropriate login form, you're safest just to hit up your
-              organization-specific login when visiting the app
-      :
-    </p>
-    <pre>
-      <a
-        href="http://loginUrl"
-      >
-        http://loginUrl
-      </a>
-    </pre>
-    <div
-      dangerouslySetInnerHTML={
-        Object {
-          "__html": "<strong>Test</strong>",
-        }
-      }
-    />
-    <legend>
-      General Settings
-    </legend>
-    <ApiForm
-      apiEndpoint="/organizations/org-slug/auth-provider/"
-      apiMethod="PUT"
-      cancelLabel="Cancel"
-      className="form-stacked"
-      errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
-      footerClass="form-actions align-right"
-      hideErrors={false}
-      initialData={
-        Object {
-          "auth_provider": Object {
-            "id": "1",
-            "provider": "dummy",
-          },
-          "content": "<strong>Test</strong>",
-          "default_role": "member",
-          "login_url": "http://loginUrl",
-          "pending_links_count": 0,
-          "provider_name": "dummy",
-          "require_link": true,
-        }
-      }
-      onSubmit={[Function]}
-      requireChanges={false}
-      resetOnError={false}
-      submitDisabled={false}
-      submitErrorMessage="There was an error saving your changes."
-      submitLabel="Save Settings"
-      submitLoadingMessage="Saving changes.."
-    >
-      <BooleanField
-        disabled={false}
-        help="Require members to use a valid linked SSO account to access this organization"
-        hideErrorMessage={false}
-        label="Require SSO"
-        name="require_link"
-        required={false}
-      />
-      <SelectField
-        choices={
-          Array [
-            Array [
-              "member",
-              "Member",
-            ],
-            Array [
-              "billing",
-              "Billing",
-            ],
-            Array [
-              "owner",
-              "Owner",
-            ],
-            Array [
-              "admin",
-              "Admin",
-            ],
-            Array [
-              "manager",
-              "Manager",
-            ],
-          ]
-        }
-        clearable={true}
-        disabled={false}
-        hideErrorMessage={false}
-        label="Default Role"
-        multiple={false}
-        name="default_role"
-        required={true}
-      />
-    </ApiForm>
-  </div>,
-  <div
-    className="box-content with-padding"
-  >
-    <p>
-      Your organization will no longer being able to authenticate with their
-              existing accounts. This will prevent any existing users from logging in
-              unless they have access outside of SSO.
-    </p>
-    <fieldset
-      className="form-actions"
-    >
-      <Button
-        disabled={false}
-        onClick={[Function]}
-        priority="danger"
-      >
-        <span
-          key="5"
-        >
-          <span
-            key="0"
-          >
-            Disable 
-          </span>
-          <span
-            key="2"
-          >
-            dummy
-          </span>
-          <span
-            key="3"
-          >
-             Auth
-          </span>
-        </span>
-      </Button>
-    </fieldset>
-  </div>,
-]
-`;
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationAuthView.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationAuthView.spec.jsx.snap
deleted file mode 100644
index 9b51e3b1a2..0000000000
--- a/tests/js/spec/views/settings/__snapshots__/organizationAuthView.spec.jsx.snap
+++ /dev/null
@@ -1,178 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`OrganizationAuthView renders from api 1`] = `
-<div>
-  <h3>
-    <span
-      key="4"
-    >
-      <span
-        key="1"
-      />
-      <span
-        key="2"
-      >
-         Authentication
-      </span>
-    </span>
-  </h3>
-  <div
-    className="box"
-  >
-    <div
-      className="box-content with-padding"
-    >
-      <legend
-        style={
-          Object {
-            "marginTop": 0,
-          }
-        }
-      >
-        Login URL
-      </legend>
-      <p>
-        While Sentry will try to be clever about directing members to the
-              appropriate login form, you're safest just to hit up your
-              organization-specific login when visiting the app
-        :
-      </p>
-      <pre>
-        <a />
-      </pre>
-      <div
-        dangerouslySetInnerHTML={
-          Object {
-            "__html": undefined,
-          }
-        }
-      />
-      <legend>
-        General Settings
-      </legend>
-      <ApiForm
-        apiEndpoint="/organizations/org-slug/auth-provider/"
-        apiMethod="PUT"
-        cancelLabel="Cancel"
-        className="form-stacked"
-        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
-        footerClass="form-actions align-right"
-        hideErrors={false}
-        initialData={Object {}}
-        onSubmit={[Function]}
-        requireChanges={false}
-        resetOnError={false}
-        submitDisabled={false}
-        submitErrorMessage="There was an error saving your changes."
-        submitLabel="Save Settings"
-        submitLoadingMessage="Saving changes.."
-      >
-        <BooleanField
-          disabled={false}
-          help="Require members to use a valid linked SSO account to access this organization"
-          hideErrorMessage={false}
-          label="Require SSO"
-          name="require_link"
-          required={false}
-        />
-        <SelectField
-          choices={
-            Array [
-              Array [
-                "member",
-                "Member",
-              ],
-              Array [
-                "billing",
-                "Billing",
-              ],
-              Array [
-                "owner",
-                "Owner",
-              ],
-              Array [
-                "admin",
-                "Admin",
-              ],
-              Array [
-                "manager",
-                "Manager",
-              ],
-            ]
-          }
-          clearable={true}
-          disabled={false}
-          hideErrorMessage={false}
-          label="Default Role"
-          multiple={false}
-          name="default_role"
-          required={true}
-        />
-      </ApiForm>
-    </div>
-  </div>
-  <div
-    className="box"
-  >
-    <div
-      className="box-header"
-    >
-      <h3>
-        <span
-          key="5"
-        >
-          <span
-            key="0"
-          >
-            Disable 
-          </span>
-          <span
-            key="2"
-          />
-          <span
-            key="3"
-          >
-             Authentication
-          </span>
-        </span>
-      </h3>
-    </div>
-    <div
-      className="box-content with-padding"
-    >
-      <p>
-        Your organization will no longer being able to authenticate with their
-              existing accounts. This will prevent any existing users from logging in
-              unless they have access outside of SSO.
-      </p>
-      <fieldset
-        className="form-actions"
-      >
-        <Button
-          disabled={false}
-          onClick={[Function]}
-          priority="danger"
-        >
-          <span
-            key="5"
-          >
-            <span
-              key="0"
-            >
-              Disable 
-            </span>
-            <span
-              key="2"
-            />
-            <span
-              key="3"
-            >
-               Auth
-            </span>
-          </span>
-        </Button>
-      </fieldset>
-    </div>
-  </div>
-</div>
-`;
diff --git a/tests/js/spec/views/settings/organizationAuthProvider.spec.jsx b/tests/js/spec/views/settings/organizationAuthProvider.spec.jsx
deleted file mode 100644
index f866a4b51e..0000000000
--- a/tests/js/spec/views/settings/organizationAuthProvider.spec.jsx
+++ /dev/null
@@ -1,131 +0,0 @@
-import React from 'react';
-
-import {Client} from 'app/api';
-import {shallow, mount} from 'enzyme';
-import OrganizationAuthProvider from 'app/views/settings/organizationAuth/organizationAuthProvider';
-
-import {findOption, openMenu} from '../../../helpers/select';
-
-jest.mock('jquery');
-
-describe('OrganizationAuthProvider', function() {
-  let routerContext = TestStubs.routerContext();
-
-  beforeEach(function() {
-    Client.clearMockResponses();
-    Client.addMockResponse({
-      url: '/organizations/org-slug/auth-provider/',
-      method: 'GET',
-      body: TestStubs.AuthProvider(),
-    });
-    Client.addMockResponse({
-      url: '/organizations/org-slug/auth-providers/',
-      method: 'GET',
-      body: [TestStubs.AuthProvider()],
-    });
-  });
-
-  it('renders with no provider', function() {
-    let wrapper = shallow(
-      <OrganizationAuthProvider
-        orgId="org-slug"
-        onSendReminders={() => {}}
-        provider={null}
-      />,
-      routerContext
-    );
-
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('renders', function() {
-    let wrapper = shallow(
-      <OrganizationAuthProvider
-        orgId="org-slug"
-        onSendReminders={() => {}}
-        provider={TestStubs.AuthProvider()}
-      />,
-      routerContext
-    );
-
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('renders with Unlinked members ', function() {
-    let wrapper = shallow(
-      <OrganizationAuthProvider
-        orgId="org-slug"
-        onSendReminders={() => {}}
-        provider={{
-          ...TestStubs.AuthProvider(),
-          pending_links_count: 4,
-        }}
-      />,
-      routerContext
-    );
-
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('renders with provider template', function() {
-    let wrapper = shallow(
-      <OrganizationAuthProvider
-        orgId="org-slug"
-        onSendReminders={() => {}}
-        provider={{
-          ...TestStubs.AuthProvider(),
-          content: '<strong>Test</strong>',
-        }}
-      />,
-      routerContext
-    );
-
-    expect(wrapper.find('.box-content')).toMatchSnapshot();
-  });
-
-  it('renders with Require Link and Default Role as admin', function() {
-    let wrapper = mount(
-      <OrganizationAuthProvider
-        orgId="org-slug"
-        onSendReminders={() => {}}
-        provider={{
-          ...TestStubs.AuthProvider(),
-          require_link: true,
-          default_role: 'admin',
-        }}
-      />,
-      routerContext
-    );
-
-    expect(
-      wrapper
-        .find('BooleanField')
-        .find('input')
-        .prop('checked')
-    ).toBe(true);
-
-    openMenu(wrapper, {selector: 'default_role'});
-    expect(
-      findOption(wrapper, {label: 'Admin'}, {selector: 'default_role'})
-    ).toHaveLength(1);
-  });
-
-  it('can disable provider', function() {
-    let mock = jest.fn();
-    let wrapper = mount(
-      <OrganizationAuthProvider
-        orgId="org-slug"
-        onSendReminders={() => {}}
-        onDisableProvider={mock}
-        provider={TestStubs.AuthProvider()}
-      />,
-      routerContext
-    );
-
-    let disableButton = wrapper.find('.form-actions').find('Button');
-
-    disableButton.simulate('click');
-
-    expect(mock).toHaveBeenCalledWith('dummy');
-  });
-});
diff --git a/tests/js/spec/views/settings/organizationAuthView.spec.jsx b/tests/js/spec/views/settings/organizationAuthView.spec.jsx
deleted file mode 100644
index cb17a6e171..0000000000
--- a/tests/js/spec/views/settings/organizationAuthView.spec.jsx
+++ /dev/null
@@ -1,27 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-
-import {Client} from 'app/api';
-import OrganizationAuthView from 'app/views/settings/organizationAuth/organizationAuthProvider';
-
-describe('OrganizationAuthView', function() {
-  beforeEach(function() {
-    Client.clearMockResponses();
-    Client.addMockResponse({
-      url: '/organizations/org-slug/auth-provider/',
-      method: 'GET',
-      body: TestStubs.AuthProvider(),
-    });
-    Client.addMockResponse({
-      url: '/organizations/org-slug/auth-providers/',
-      method: 'GET',
-      body: [TestStubs.AuthProvider()],
-    });
-  });
-
-  it('renders from api', function() {
-    let wrapper = shallow(<OrganizationAuthView orgId="org-slug" />);
-
-    expect(wrapper).toMatchSnapshot();
-  });
-});
