commit 4ba898616c9d8ce5144f76227822690b13709190
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Tue Mar 3 14:12:27 2020 +0100

    test(exception-stackstrace): added exception stackstrace content test (#17423)

diff --git a/tests/js/spec/components/events/interfaces/__snapshots__/exceptionStacktraceContent.spec.jsx.snap b/tests/js/spec/components/events/interfaces/__snapshots__/exceptionStacktraceContent.spec.jsx.snap
new file mode 100644
index 0000000000..77c84e3647
--- /dev/null
+++ b/tests/js/spec/components/events/interfaces/__snapshots__/exceptionStacktraceContent.spec.jsx.snap
@@ -0,0 +1,189 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ExceptionStacktraceContent default behaviour 1`] = `
+<ExceptionStacktraceContent
+  data={
+    Object {
+      "frames": Array [
+        Object {
+          "absPath": "https://sentry.io/hiventy/kraken-prod/issues/438681831/?referrer=slack#",
+          "colNo": null,
+          "context": Array [],
+          "errors": null,
+          "filename": "/hiventy/kraken-prod/issues/438681831/",
+          "function": null,
+          "inApp": false,
+          "instructionAddr": null,
+          "lineNo": null,
+          "module": "<unknown module>",
+          "package": null,
+          "platform": null,
+          "symbol": null,
+          "symbolAddr": null,
+          "vars": Object {},
+        },
+        Object {
+          "absPath": "foo/baz.c",
+          "colNo": null,
+          "context": Array [],
+          "errors": null,
+          "filename": "foo/baz.c",
+          "function": null,
+          "inApp": false,
+          "instructionAddr": null,
+          "lineNo": 1,
+          "module": null,
+          "package": null,
+          "platform": null,
+          "rawFunction": null,
+          "symbol": null,
+          "symbolAddr": null,
+          "trust": null,
+          "vars": null,
+        },
+      ],
+    }
+  }
+  event={
+    Object {
+      "crashFile": Object {
+        "dateCreated": "2019-05-21T18:01:48.762Z",
+        "headers": Object {
+          "Content-Type": "application/octet-stream",
+        },
+        "id": "12345",
+        "name": "name.dmp",
+        "sha1": "sha1",
+        "size": 123456,
+        "type": "event.minidump",
+      },
+      "culprit": "",
+      "dateCreated": "2019-05-21T18:00:23Z",
+      "entries": Array [],
+      "event.type": "error",
+      "eventID": "123456",
+      "groupID": "1",
+      "id": "98654",
+      "location": "main.js",
+      "message": "TestException",
+      "platform": "native",
+      "projectID": "123",
+      "tags": Array [
+        Object {
+          "key": "production",
+          "value": "production",
+        },
+      ],
+      "title": "TestException",
+    }
+  }
+  expandFirstFrame={true}
+  framesOmitted={null}
+  hasSystemFrames={false}
+  newestFirst={true}
+  platform="node"
+  registers={null}
+  stackView="app"
+  stacktrace={
+    Object {
+      "frames": Array [
+        Object {
+          "absPath": "https://sentry.io/hiventy/kraken-prod/issues/438681831/?referrer=slack#",
+          "colNo": null,
+          "context": Array [],
+          "errors": null,
+          "filename": "/hiventy/kraken-prod/issues/438681831/",
+          "function": null,
+          "inApp": false,
+          "instructionAddr": null,
+          "lineNo": null,
+          "module": "<unknown module>",
+          "package": null,
+          "platform": null,
+          "symbol": null,
+          "symbolAddr": null,
+          "vars": Object {},
+        },
+        Object {
+          "absPath": "foo/baz.c",
+          "colNo": null,
+          "context": Array [],
+          "errors": null,
+          "filename": "foo/baz.c",
+          "function": null,
+          "inApp": false,
+          "instructionAddr": null,
+          "lineNo": 1,
+          "module": null,
+          "package": null,
+          "platform": null,
+          "rawFunction": null,
+          "symbol": null,
+          "symbolAddr": null,
+          "trust": null,
+          "vars": null,
+        },
+      ],
+    }
+  }
+>
+  <Panel
+    dashedBorder={true}
+  >
+    <Component
+      className="css-19vwpr4-Panel e119nu470"
+      dashedBorder={true}
+    >
+      <div
+        className="css-19vwpr4-Panel e119nu470"
+      >
+        <EmptyMessage
+          icon="icon-warning-sm"
+          title="No app only stacktrace has been found!"
+        >
+          <Component
+            className="css-13mk16x-EmptyMessage e1h3yfdx4"
+            icon="icon-warning-sm"
+            title="No app only stacktrace has been found!"
+          >
+            <div
+              className="css-13mk16x-EmptyMessage e1h3yfdx4"
+              data-test-id="empty-message"
+            >
+              <StyledInlineSvg
+                size="36px"
+                src="icon-warning-sm"
+              >
+                <ForwardRef
+                  className="css-1o8w9c2-InlineSvg-StyledInlineSvg e1h3yfdx2"
+                  size="36px"
+                  src="icon-warning-sm"
+                >
+                  <svg
+                    className="css-1o8w9c2-InlineSvg-StyledInlineSvg e1h3yfdx2"
+                    height="36px"
+                    viewBox={Object {}}
+                    width="36px"
+                  >
+                    <use
+                      href="#test"
+                      xlinkHref="#test"
+                    />
+                  </svg>
+                </ForwardRef>
+              </StyledInlineSvg>
+              <Title>
+                <div
+                  className="css-1p115wf-Title e1h3yfdx1"
+                >
+                  No app only stacktrace has been found!
+                </div>
+              </Title>
+            </div>
+          </Component>
+        </EmptyMessage>
+      </div>
+    </Component>
+  </Panel>
+</ExceptionStacktraceContent>
+`;
diff --git a/tests/js/spec/components/events/interfaces/exceptionStacktraceContent.spec.jsx b/tests/js/spec/components/events/interfaces/exceptionStacktraceContent.spec.jsx
new file mode 100644
index 0000000000..f8243da3f9
--- /dev/null
+++ b/tests/js/spec/components/events/interfaces/exceptionStacktraceContent.spec.jsx
@@ -0,0 +1,110 @@
+import React from 'react';
+
+import {mount} from 'sentry-test/enzyme';
+import ExceptionStacktraceContent from 'app/components/events/interfaces/exceptionStacktraceContent';
+import EmptyMessage from 'app/views/settings/components/emptyMessage';
+
+describe('ExceptionStacktraceContent', () => {
+  const stacktrace = {
+    frames: [
+      {
+        function: null,
+        colNo: null,
+        vars: {},
+        symbol: null,
+        module: '<unknown module>',
+        lineNo: null,
+        errors: null,
+        package: null,
+        absPath:
+          'https://sentry.io/hiventy/kraken-prod/issues/438681831/?referrer=slack#',
+        inApp: false,
+        instructionAddr: null,
+        filename: '/hiventy/kraken-prod/issues/438681831/',
+        platform: null,
+        context: [],
+        symbolAddr: null,
+      },
+      {
+        absPath: 'foo/baz.c',
+        colNo: null,
+        context: [],
+        errors: null,
+        filename: 'foo/baz.c',
+        function: null,
+        inApp: false,
+        instructionAddr: null,
+        lineNo: 1,
+        module: null,
+        package: null,
+        platform: null,
+        rawFunction: null,
+        symbol: null,
+        symbolAddr: null,
+        trust: null,
+        vars: null,
+      },
+    ],
+  };
+
+  const props = {
+    stackView: 'app',
+    platform: 'node',
+    expandFirstFrame: true,
+    newestFirst: true,
+    event: {
+      entries: [],
+      crashFile: {
+        sha1: 'sha1',
+        name: 'name.dmp',
+        dateCreated: '2019-05-21T18:01:48.762Z',
+        headers: {'Content-Type': 'application/octet-stream'},
+        id: '12345',
+        size: 123456,
+        type: 'event.minidump',
+      },
+      culprit: '',
+      dateCreated: '2019-05-21T18:00:23Z',
+      'event.type': 'error',
+      eventID: '123456',
+      groupID: '1',
+      id: '98654',
+      location: 'main.js',
+      message: 'TestException',
+      platform: 'native',
+      projectID: '123',
+      tags: [{value: 'production', key: 'production'}],
+      title: 'TestException',
+    },
+    data: stacktrace,
+    stacktrace,
+    framesOmitted: null,
+    registers: null,
+    hasSystemFrames: false,
+  };
+
+  it('default behaviour', () => {
+    const wrapper = mount(<ExceptionStacktraceContent {...props} />);
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('should return an emptyRender', () => {
+    const wrapper = mount(
+      <ExceptionStacktraceContent {...props} stacktrace={undefined} />
+    );
+    expect(wrapper.isEmptyRender()).toBe(true);
+  });
+
+  it('should return the EmptyMessage component', () => {
+    const wrapper = mount(<ExceptionStacktraceContent {...props} />);
+    const emptyMessageElement = wrapper.find(EmptyMessage).exists();
+    expect(emptyMessageElement).toBe(true);
+  });
+
+  it('should not return the EmptyMessage component', () => {
+    props.stacktrace.frames[0].inApp = true;
+    const wrapper = mount(<ExceptionStacktraceContent {...props} />);
+    const emptyMessageElement = wrapper.find(EmptyMessage).exists();
+    expect(emptyMessageElement).toBe(false);
+  });
+});
