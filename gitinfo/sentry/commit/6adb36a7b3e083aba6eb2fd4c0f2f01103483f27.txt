commit 6adb36a7b3e083aba6eb2fd4c0f2f01103483f27
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 10 20:33:27 2013 +0200

    Tests for project deletion

diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index 3922b80302..f9329dee6c 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -7,6 +7,7 @@ import logging
 
 from django.core.urlresolvers import reverse
 
+from sentry.constants import STATUS_HIDDEN
 from sentry.models import Project, ProjectKey
 from sentry.testutils import TestCase, fixture, before
 
@@ -141,3 +142,40 @@ class GetStartedTest(TestCase):
         self.assertTemplateUsed(resp, 'sentry/get_started.html')
         assert resp.context['project'] == self.project
         assert resp.context['team'] == self.team
+
+
+
+class RemoveProjectTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-remove-project', args=[self.team.slug, self.project.id])
+
+    def test_requires_authentication(self):
+        self.assertRequiresAuthentication(self.path, 'POST')
+
+    def test_renders_template_with_get(self):
+        self.login_as(self.user)
+
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/projects/remove.html')
+        assert resp.context['team'] == self.team
+        assert resp.context['project'] == self.project
+
+    @mock.patch('sentry.tasks.deletion.delete_project')
+    def test_deletion_flow(self, delete_project):
+        self.login_as(self.user)
+
+        # missing password
+        resp = self.client.post(self.path, {'removal_type': '1', 'project': self.project.id})
+        assert resp.status_code == 200
+        assert 'password' in resp.context['form'].errors
+
+        # set password to empty value so it doesnt require check
+        self.user.password = ''
+        self.user.save()
+
+        resp = self.client.post(self.path, {'removal_type': '1', 'project': self.project.id})
+        assert resp.status_code == 302
+        delete_project.delay.assert_called_once_with(object_id=self.project.id)
+        assert Project.objects.get(id=self.project.id).status == STATUS_HIDDEN
