commit c9c7b97b76a9e6be696cbac371a4577ccd69785a
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 22 11:12:55 2014 -0800

    Various fixes for wall
    
    - Correct link media
    - Correct get_stats endpoint
    - Fix emptyMessage usage (defaults were overwritten)
    
    Refs GH-1337

diff --git a/Makefile b/Makefile
index a73cf0d274..fe5f853e2b 100644
--- a/Makefile
+++ b/Makefile
@@ -1,7 +1,5 @@
-VERSION = 2.0.0
 NPM_ROOT = ./node_modules
 STATIC_DIR = src/sentry/static/sentry
-UGLIFY_JS ?= node_modules/uglify-js/bin/uglifyjs
 
 develop: update-submodules setup-git
 	@echo "--> Installing dependencies"
diff --git a/gulpfile.js b/gulpfile.js
index 4ed104d79d..fe000027d6 100644
--- a/gulpfile.js
+++ b/gulpfile.js
@@ -149,16 +149,28 @@ gulp.task("clean", function () {
     .on("error", gp_util.log);
 });
 
-gulp.task("dist:css", buildCssCompileTask("sentry.css", [file("less/sentry.less")]));
+
+gulp.task("dist:css:sentry", buildCssCompileTask("sentry.css", [file("less/sentry.less")]))
+
+gulp.task("dist:css:wall", buildCssCompileTask("wall.css", [file("less/wall.less")]))
+
+gulp.task("dist:css", ["dist:css:sentry", "dist:css:wall"]);
 
 buildJsDistroTasks();
 
 gulp.task("dist", ["dist:js", "dist:css"]);
 
-gulp.task("watch:css", function(){
-  return gulp.watch(file("less/sentry.less"), ["dist:css"]);
+gulp.task("watch:css:sentry", function(){
+  return gulp.watch(file("less/sentry.less"), ["dist:css:sentry"]);
 });
 
+gulp.task("watch:css:wall", function(){
+  return gulp.watch(file("less/wall.less"), ["dist:css:wall"]);
+});
+
+gulp.task("watch:css", ["watch:css:sentry", "watch:css:wall"]);
+
+
 gulp.task("watch", ["watch:js", "watch:css"]);
 
 gulp.task("default", ["dist"]);
diff --git a/src/sentry/static/sentry/scripts/views.js b/src/sentry/static/sentry/scripts/views.js
index b2f9196261..0276995abf 100644
--- a/src/sentry/static/sentry/scripts/views.js
+++ b/src/sentry/static/sentry/scripts/views.js
@@ -427,6 +427,8 @@
     app.GroupListView = app.OrderedElementsView.extend({
 
         defaults: {
+            emptyMessage: '<p>There is no data to show.</p>',
+            maxItems: 50,
             realtime: false,
             stream: false,
             pollUrl: null,
diff --git a/src/sentry/templates/sentry/wall.html b/src/sentry/templates/sentry/wall.html
index df9dacfb45..7578bf91f2 100644
--- a/src/sentry/templates/sentry/wall.html
+++ b/src/sentry/templates/sentry/wall.html
@@ -4,7 +4,7 @@
 {% load sentry_helpers %}
 
 {% block css %}
-    <link href="{% url 'sentry-media' "sentry" "dist/wall.min.css" %}" rel="image/png"/>
+    <link href="{% url 'sentry-media' "sentry" "dist/wall.css" %}" rel="stylesheet"/>
 {% endblock %}
 
 {% block body %}
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index c6ec728712..2768200b15 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -817,15 +817,10 @@ def get_resolved_groups(request, organization, team):
 @never_cache
 @csrf_exempt
 @has_access
-def get_stats(request, organization, team=None, project=None):
+def get_stats(request, organization, team):
     minutes = int(request.REQUEST.get('minutes', 15))
 
-    if not team and project:
-        project_list = [project]
-    elif team:
-        project_list = Project.objects.get_for_user(team=team, user=request.user)
-    else:
-        return HttpResponse(status=400)
+    project_list = Project.objects.get_for_user(team=team, user=request.user)
 
     cutoff = timedelta(minutes=minutes)
 
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index d40502de8a..a64fa8002e 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -305,7 +305,7 @@ urlpatterns += patterns('',
     url(r'^api/(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/group/(?P<group_id>[\w_-]+)/tags/(?P<tag_name>[^/]+)/$', api.get_group_tags,
         name='sentry-api-group-tags'),
 
-    url(r'^api/(?P<organization_slug>[\w_-]+)/(?:(?P<project_id>[\w_-]+)/)?stats/$', api.get_stats,
+    url(r'^api/(?P<organization_slug>[\w_-]+)/(?P<team_slug>[\w_-]+)/stats/$', api.get_stats,
         name='sentry-api-stats'),
     url(r'^api/(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/tags/search/$', api.search_tags,
         name='sentry-api-search-tags'),
