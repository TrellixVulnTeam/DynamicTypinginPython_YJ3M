commit 2011d1d393b7048d955a6e3eca6915db0a05b85d
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Apr 11 15:59:36 2019 -0700

    chore(eslint): Remove some inline rules (#12740)

diff --git a/src/sentry/static/sentry/app/actionCreators/globalSelection.jsx b/src/sentry/static/sentry/app/actionCreators/globalSelection.jsx
index 58f14cbee2..b2374b8d16 100644
--- a/src/sentry/static/sentry/app/actionCreators/globalSelection.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/globalSelection.jsx
@@ -1,4 +1,3 @@
-/*eslint no-use-before-define: ["error", { "functions": false }]*/
 import {isEqual, isInteger, omit} from 'lodash';
 import * as Sentry from '@sentry/browser';
 
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 9b85b4f971..7452cbd8b0 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -7,9 +7,7 @@ import PendingChangeQueue from 'app/utils/pendingChangeQueue';
 import CursorPoller from 'app/utils/cursorPoller';
 import StreamManager from 'app/utils/streamManager';
 
-/*eslint no-use-before-define:0*/
-
-const arrayIsEqual = function(arr, other, deep) {
+function arrayIsEqual(arr, other, deep) {
   // if the other array is a falsy value, return
   if (!arr && !other) {
     return true;
@@ -25,9 +23,9 @@ const arrayIsEqual = function(arr, other, deep) {
   }
 
   return arr.every((val, idx) => valueIsEqual(val, other[idx], deep));
-};
+}
 
-export const valueIsEqual = function(value, other, deep) {
+export function valueIsEqual(value, other, deep) {
   if (value === other) {
     return true;
   } else if (_.isArray(value) || _.isArray(other)) {
@@ -40,9 +38,9 @@ export const valueIsEqual = function(value, other, deep) {
     }
   }
   return false;
-};
+}
 
-const objectMatchesSubset = function(obj, other, deep) {
+function objectMatchesSubset(obj, other, deep) {
   let k;
 
   if (obj === other) {
@@ -68,21 +66,21 @@ const objectMatchesSubset = function(obj, other, deep) {
     }
   }
   return true;
-};
+}
 
 // XXX(dcramer): the previous mechanism of using _.map here failed
 // miserably if a param was named 'length'
-export const objectToArray = function(obj) {
+export function objectToArray(obj) {
   const result = [];
   for (const key in obj) {
     result.push([key, obj[key]]);
   }
   return result;
-};
+}
 
-export const intcomma = function(x) {
+export function intcomma(x) {
   return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
-};
+}
 
 export function sortArray(arr, score_fn) {
   arr.sort((a, b) => {
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
index 6fd44e9c88..1fc8fbeeb4 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
@@ -1,4 +1,3 @@
-/*eslint no-use-before-define: ["error", { "functions": false }]*/
 import React from 'react';
 import {uniq, partition} from 'lodash';
 import moment from 'moment-timezone';
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/utils.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/utils.jsx
index 2ab2485b9c..ba3956cd10 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/utils.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/utils.jsx
@@ -1,4 +1,3 @@
-/*eslint no-use-before-define: ["error", { "functions": false }]*/
 import {orderBy} from 'lodash';
 import Papa from 'papaparse';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/resultManager.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/resultManager.jsx
index 754ee7a8eb..abf92149f8 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/resultManager.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/resultManager.jsx
@@ -1,5 +1,3 @@
-/*eslint no-use-before-define: ["error", { "functions": false }]*/
-
 /**
  * This function is responsible for fetching and storing result data for
  * result tables and visualizations.
