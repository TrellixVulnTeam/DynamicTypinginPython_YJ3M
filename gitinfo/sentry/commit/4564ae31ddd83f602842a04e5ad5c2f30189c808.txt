commit 4564ae31ddd83f602842a04e5ad5c2f30189c808
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Apr 7 22:38:59 2013 -0700

    Various cleanup for auth header docs and code

diff --git a/docs/developer/client/index.rst b/docs/developer/client/index.rst
index 59fd42ae82..fbf5a3da10 100644
--- a/docs/developer/client/index.rst
+++ b/docs/developer/client/index.rst
@@ -342,7 +342,7 @@ Authentication
 
 An authentication header is expected to be sent along with the message body, which acts as as an ownership identifier::
 
-    X-Sentry-Auth: Sentry sentry_version=2.0,
+    X-Sentry-Auth: Sentry sentry_version=4,
     sentry_client=<client version, arbitrary>,
     sentry_timestamp=<current timestamp>,
     sentry_key=<public api key>,
@@ -399,7 +399,7 @@ The request body should then somewhat resemble the following::
 
     POST /api/project-id/store/
     User-Agent: raven-python/1.0
-    X-Sentry-Auth: Sentry sentry_version=3, sentry_timestamp=1329096377,
+    X-Sentry-Auth: Sentry sentry_version=4, sentry_timestamp=1329096377,
         sentry_key=b70a31b3510c4cf793964a185cfe1fd0, sentry_client=raven-python/1.0,
         sentry_secret=b7d80b520139450f903720eb7991bf3d
 
diff --git a/src/sentry/testutils.py b/src/sentry/testutils.py
index bff06ef2d3..b784c7f2a5 100644
--- a/src/sentry/testutils.py
+++ b/src/sentry/testutils.py
@@ -14,7 +14,6 @@ from functools import wraps
 
 from sentry.conf import settings
 from sentry.utils import json
-from sentry.utils.auth import get_auth_header
 
 from django.conf import settings as django_settings
 from django.contrib.auth import login
@@ -37,6 +36,20 @@ from sentry.utils.strings import decompress
 LEGACY_DATA = pickle.loads(decompress("""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"""))
 
 
+def get_auth_header(client, api_key=None, secret_key=None):
+    header = [
+        ('sentry_client', client),
+        ('sentry_version', '4'),
+    ]
+
+    if api_key:
+        header.append(('sentry_key', api_key))
+    if secret_key:
+        header.append(('sentry_secret', secret_key))
+
+    return 'Sentry %s' % ', '.join('%s=%s' % (k, v) for k, v in header)
+
+
 def with_settings(**mapping):
     def wrapped(func):
         @wraps(func)
diff --git a/src/sentry/utils/auth.py b/src/sentry/utils/auth.py
index 76ec6754fe..9ce134cdb9 100644
--- a/src/sentry/utils/auth.py
+++ b/src/sentry/utils/auth.py
@@ -11,29 +11,16 @@ from django.contrib.auth.backends import ModelBackend
 from sentry.conf import settings
 
 
-def get_auth_header(client, api_key=None, secret_key=None):
-    header = [
-        ('sentry_client', client),
-        ('sentry_version', '3'),
-    ]
-
-    if api_key:
-        header.append(('sentry_key', api_key))
-    if secret_key:
-        header.append(('sentry_secret', secret_key))
-
-    return 'Sentry %s' % ', '.join('%s=%s' % (k, v) for k, v in header)
-
-
 def parse_auth_header(header):
     return dict(map(lambda x: x.strip().split('='), header.split(' ', 1)[1].split(',')))
 
 
 def get_auth_providers():
-    return [key
-        for key, cfg_names
+    return [
+        key for key, cfg_names
         in settings.AUTH_PROVIDERS.iteritems()
-        if all(getattr(dj_settings, c, None) for c in cfg_names)]
+        if all(getattr(dj_settings, c, None) for c in cfg_names)
+    ]
 
 
 class EmailAuthBackend(ModelBackend):
diff --git a/tests/sentry/udp/tests.py b/tests/sentry/udp/tests.py
index ad04fca4ed..15bbf51a1f 100644
--- a/tests/sentry/udp/tests.py
+++ b/tests/sentry/udp/tests.py
@@ -4,10 +4,9 @@ from __future__ import absolute_import
 
 from django.contrib.auth.models import User
 from sentry.models import Project
-from sentry.utils.auth import get_auth_header
 from sentry.services.udp import SentryUDPServer
 
-from sentry.testutils import TestCase
+from sentry.testutils import TestCase, get_auth_header
 
 
 class SentryUDPTest(TestCase):
