commit ff5c74e93e4b8ad7d48379f5244001137bf91c49
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Jun 3 14:58:28 2019 -0700

    ref(ui): Remove project saved searches (#13502)
    
    This was only available for legacy "sentry9" users, which is no longer supported

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 3f50c83671..5eb79b5bb4 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -315,14 +315,6 @@ function routes() {
         name="Data Forwarding"
         component={errorHandler(ProjectDataForwarding)}
       />
-      <Route
-        path="saved-searches/"
-        name="Saved Searches"
-        componentPromise={() =>
-          import(/* webpackChunkName: "ProjectSavedSearches" */ './views/projectSavedSearches')
-        }
-        component={errorHandler(LazyLoad)}
-      />
       <Route
         path="debug-symbols/"
         name="Debug Information Files"
diff --git a/src/sentry/static/sentry/app/views/projectSavedSearches.jsx b/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
deleted file mode 100644
index 12b52e176b..0000000000
--- a/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
+++ /dev/null
@@ -1,256 +0,0 @@
-import {Flex} from 'grid-emotion';
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from 'react-emotion';
-
-import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
-import {t} from 'app/locale';
-import AsyncView from 'app/views/asyncView';
-import Button from 'app/components/button';
-import Confirm from 'app/components/confirm';
-import EmptyStateWarning from 'app/components/emptyStateWarning';
-import IndicatorStore from 'app/stores/indicatorStore';
-import NotFound from 'app/components/errors/notFound';
-import SentryTypes from 'app/sentryTypes';
-import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-
-const InputColumn = props => <Flex flex="1" justify="center" {...props} />;
-
-const SearchTitle = styled('div')`
-  font-size: 18px;
-  margin-bottom: 5px;
-`;
-
-class SavedSearchRow extends React.Component {
-  static propTypes = {
-    data: PropTypes.object.isRequired,
-    canModify: PropTypes.bool.isRequired,
-    onDefault: PropTypes.func.isRequired,
-    onUserDefault: PropTypes.func.isRequired,
-    onRemove: PropTypes.func.isRequired,
-  };
-
-  handleRemove = () => {
-    const {data, onRemove} = this.props;
-    onRemove({data});
-  };
-
-  handleDefault = () => {
-    const {data, onDefault} = this.props;
-    onDefault({
-      data,
-      isDefault: true,
-    });
-  };
-
-  handleUserDefault = () => {
-    const {data, onUserDefault} = this.props;
-    onUserDefault({
-      data,
-      isUserDefault: true,
-    });
-  };
-
-  render() {
-    const {data, canModify} = this.props;
-    const deleteDisabled = !canModify && !data.isPrivate;
-
-    return (
-      <PanelItem p={0} py={2} align="center">
-        <Flex flex="1" px={2} direction="column">
-          <SearchTitle>{data.name}</SearchTitle>
-          <code>{data.query}</code>
-        </Flex>
-        <Flex flex="1">
-          <InputColumn>
-            <input
-              type="radio"
-              name="userDefault"
-              checked={data.isUserDefault}
-              onChange={this.handleUserDefault}
-            />
-          </InputColumn>
-
-          {canModify && (
-            <InputColumn>
-              <input
-                type="radio"
-                name="default"
-                checked={data.isDefault}
-                onChange={this.handleDefault}
-                disabled={data.isPrivate}
-              />
-            </InputColumn>
-          )}
-
-          <InputColumn>
-            <Confirm
-              message={t('Are you sure you want to remove this?')}
-              onConfirm={this.handleRemove}
-              disabled={deleteDisabled}
-            >
-              <Button size="small" icon="icon-trash" />
-            </Confirm>
-          </InputColumn>
-        </Flex>
-      </PanelItem>
-    );
-  }
-}
-
-class ProjectSavedSearches extends AsyncView {
-  getTitle() {
-    return t('Saved Searches');
-  }
-
-  static contextTypes = {
-    organization: SentryTypes.Organization,
-  };
-
-  getEndpoints() {
-    const {orgId, projectId} = this.props.params;
-    return [['savedSearchList', `/projects/${orgId}/${projectId}/searches/`]];
-  }
-
-  handleUpdate = params => {
-    const {orgId, projectId} = this.props.params;
-    const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
-    const {data, isDefault, isUserDefault} = params;
-    const key = typeof isDefault !== 'undefined' ? 'isDefault' : 'isUserDefault';
-    const {savedSearchList} = this.state;
-    const newSearchList = savedSearchList.map(search => ({
-      ...search,
-      [key]: data.id === search.id,
-    }));
-
-    this.setState(
-      {
-        savedSearchList: newSearchList,
-      },
-      () => {
-        this.api.request(`/projects/${orgId}/${projectId}/searches/${data.id}/`, {
-          method: 'PUT',
-          data: {
-            isDefault,
-            isUserDefault,
-          },
-          error: () => {
-            this.setState({
-              savedSearchList,
-            });
-            IndicatorStore.addError(t('Error updating search'));
-          },
-          complete: () => {
-            IndicatorStore.remove(loadingIndicator);
-          },
-        });
-      }
-    );
-  };
-
-  handleRemovedSearch = params => {
-    const {orgId, projectId} = this.props.params;
-    const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
-    const {data} = params;
-    const {savedSearchList} = this.state;
-    const newSearchList = savedSearchList.filter(search => {
-      return search.id !== data.id;
-    });
-
-    this.setState(
-      {
-        savedSearchList: newSearchList,
-      },
-      () => {
-        this.api.request(`/projects/${orgId}/${projectId}/searches/${data.id}/`, {
-          method: 'DELETE',
-          error: () => {
-            this.setState({
-              savedSearchList,
-            });
-            IndicatorStore.addError(t('Error removing search'));
-          },
-          complete: () => IndicatorStore.remove(loadingIndicator),
-        });
-      }
-    );
-  };
-
-  renderEmpty() {
-    return (
-      <EmptyStateWarning>
-        <p>{t('There are no saved searches for this project.')}</p>
-      </EmptyStateWarning>
-    );
-  }
-
-  renderResults() {
-    const {orgId, projectId} = this.props.params;
-    const {organization} = this.context;
-    const access = organization && new Set(organization.access);
-    const canModify = (organization && access.has('project:write')) || false;
-
-    return (
-      <React.Fragment>
-        {this.state.savedSearchList.map(search => {
-          return (
-            <SavedSearchRow
-              access={access}
-              key={search.id}
-              canModify={canModify}
-              orgId={orgId}
-              projectId={projectId}
-              data={search}
-              onUserDefault={this.handleUpdate}
-              onDefault={this.handleUpdate}
-              onRemove={this.handleRemovedSearch}
-            />
-          );
-        })}
-      </React.Fragment>
-    );
-  }
-
-  renderBody() {
-    const {organization} = this.context;
-    const access = organization && new Set(organization.access);
-    const canModify = (organization && access.has('project:write')) || false;
-    const hasResults = this.state.savedSearchList.length > 0;
-
-    return (
-      <div>
-        <SettingsPageHeader title={t('Saved Searches')} />
-        <Panel>
-          <PanelHeader disablePadding>
-            <Flex flex="1">
-              <Flex flex="1" px={2}>
-                {t('Search')}
-              </Flex>
-              <Flex flex="1">
-                <InputColumn>{t('My Default')}</InputColumn>
-                {canModify && <InputColumn>{t('Team Default')}</InputColumn>}
-                {<InputColumn>{t('Remove')}</InputColumn>}
-              </Flex>
-            </Flex>
-          </PanelHeader>
-          <PanelBody>{hasResults ? this.renderResults() : this.renderEmpty()}</PanelBody>
-        </Panel>
-      </div>
-    );
-  }
-}
-
-const ProjectSavedSearchContainer = function(props, context) {
-  const isSentry10 = context.organization.features.includes('sentry10');
-  if (isSentry10) {
-    return <NotFound />;
-  }
-  return <ProjectSavedSearches {...props} />;
-};
-
-ProjectSavedSearchContainer.contextTypes = {
-  organization: SentryTypes.Organization,
-};
-
-export default ProjectSavedSearchContainer;
-export {SavedSearchRow};
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index 131a3d33dc..39658a1b9f 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -128,11 +128,6 @@ const ProjectSettings = createReactClass({
             <ListLink to={`${pathPrefix}/data-forwarding/`}>
               {t('Data Forwarding')}
             </ListLink>
-            {organization.features.includes('sentry10') === false && (
-              <ListLink to={`${pathPrefix}/saved-searches/`}>
-                {t('Saved Searches')}
-              </ListLink>
-            )}
             <ListLink to={`${pathPrefix}/debug-symbols/`}>
               {t('Debug Information Files')}
             </ListLink>
@@ -175,7 +170,7 @@ const ProjectSettings = createReactClass({
             React.cloneElement(this.props.children, {
               setProjectNavSection: this.props.setProjectNavSection,
               project,
-              organization: this.context.organization,
+              organization,
             })
           ) : (
             <div className="alert alert-block">
diff --git a/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx
index dbb527f457..15f009592d 100644
--- a/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx
@@ -43,17 +43,6 @@ export default function getConfiguration({project}) {
           path: `${pathPrefix}/data-forwarding/`,
           title: t('Data Forwarding'),
         },
-        {
-          path: `${pathPrefix}/saved-searches/`,
-          title: t('Saved Searches'),
-          description: t('Manage saved searches for a project and your account'),
-          show: ({organization}) => {
-            if (!organization || !organization.features) {
-              return true;
-            }
-            return !organization.features.includes('sentry10');
-          },
-        },
         {
           path: `${pathPrefix}/debug-symbols/`,
           title: t('Debug Files'),
diff --git a/src/sentry/static/sentry/app/views/stream/filters.jsx b/src/sentry/static/sentry/app/views/stream/filters.jsx
index 073e576a2f..416e90481c 100644
--- a/src/sentry/static/sentry/app/views/stream/filters.jsx
+++ b/src/sentry/static/sentry/app/views/stream/filters.jsx
@@ -5,22 +5,18 @@ import styled from 'react-emotion';
 import {PageHeader} from 'app/styles/organization';
 import {analytics} from 'app/utils/analytics';
 import {t} from 'app/locale';
-import Feature from 'app/components/acl/feature';
 import PageHeading from 'app/components/pageHeading';
 import QueryCount from 'app/components/queryCount';
 import SentryTypes from 'app/sentryTypes';
 
 import OrganizationSavedSearchSelector from './organizationSavedSearchSelector';
-import SavedSearchSelector from './savedSearchSelector';
 import SearchBar from './searchBar';
 import SortOptions from './sortOptions';
 
 class StreamFilters extends React.Component {
   static propTypes = {
-    projectId: PropTypes.string,
     organization: SentryTypes.Organization,
 
-    searchId: PropTypes.string,
     savedSearchList: PropTypes.arrayOf(SentryTypes.SavedSearch),
     savedSearch: SentryTypes.SavedSearch,
 
@@ -33,7 +29,6 @@ class StreamFilters extends React.Component {
     onSortChange: PropTypes.func,
     onSearch: PropTypes.func,
     onSidebarToggle: PropTypes.func,
-    onSavedSearchCreate: PropTypes.func.isRequired,
     onSavedSearchSelect: PropTypes.func.isRequired,
     onSavedSearchDelete: PropTypes.func.isRequired,
     tagValueLoader: PropTypes.func.isRequired,
@@ -69,9 +64,7 @@ class StreamFilters extends React.Component {
   render() {
     const {
       organization,
-      projectId,
       savedSearch,
-      searchId,
       queryCount,
       queryMaxCount,
       query,
@@ -81,51 +74,30 @@ class StreamFilters extends React.Component {
 
       onSidebarToggle,
       onSearch,
-      onSavedSearchCreate,
-      onSavedSearchSelect,
       onSavedSearchDelete,
       onSortChange,
       tagValueLoader,
       tags,
     } = this.props;
-    const hasSentry10 = organization.features.includes('sentry10');
 
     return (
       <PageHeader>
-        <Feature
-          features={['sentry10']}
-          renderDisabled={() => (
-            <SavedSearchSelector
-              organization={organization}
-              projectId={projectId}
-              searchId={searchId}
-              queryCount={queryCount}
-              queryMaxCount={queryMaxCount}
-              query={query}
-              onSavedSearchCreate={onSavedSearchCreate}
-              onSavedSearchSelect={onSavedSearchSelect}
-              savedSearchList={savedSearchList}
-            />
-          )}
-        >
-          <PageHeading>
-            {t('Issues')}
-            <QueryCount count={queryCount} max={queryMaxCount} />
-          </PageHeading>
-        </Feature>
-        <SearchContainer isWide={hasSentry10}>
+        <PageHeading>
+          {t('Issues')}
+          <QueryCount count={queryCount} max={queryMaxCount} />
+        </PageHeading>
+
+        <SearchContainer isWide>
           <SortOptions sort={sort} onSelect={onSortChange} />
 
-          <Feature features={['sentry10']}>
-            <OrganizationSavedSearchSelector
-              key={query}
-              organization={organization}
-              savedSearchList={savedSearchList}
-              onSavedSearchSelect={this.handleOrganizationSavedSearchSelect}
-              onSavedSearchDelete={onSavedSearchDelete}
-              query={query}
-            />
-          </Feature>
+          <OrganizationSavedSearchSelector
+            key={query}
+            organization={organization}
+            savedSearchList={savedSearchList}
+            onSavedSearchSelect={this.handleOrganizationSavedSearchSelect}
+            onSavedSearchDelete={onSavedSearchDelete}
+            query={query}
+          />
 
           <SearchBar
             orgId={organization.slug}
diff --git a/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx b/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
deleted file mode 100644
index d4f448d96e..0000000000
--- a/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
+++ /dev/null
@@ -1,376 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import Modal from 'react-bootstrap/lib/Modal';
-import styled from 'react-emotion';
-
-import {t} from 'app/locale';
-import Button from 'app/components/button';
-import IndicatorStore from 'app/stores/indicatorStore';
-import DropdownLink from 'app/components/dropdownLink';
-import QueryCount from 'app/components/queryCount';
-import MenuItem from 'app/components/menuItem';
-import SentryTypes from 'app/sentryTypes';
-import Tooltip from 'app/components/tooltip';
-import Tag from 'app/views/settings/components/tag';
-import {BooleanField, FormState, TextField} from 'app/components/forms';
-import withApi from 'app/utils/withApi';
-import space from 'app/styles/space';
-
-const SaveSearchButton = withApi(
-  class SaveSearchButton extends React.Component {
-    static propTypes = {
-      organization: SentryTypes.Organization.isRequired,
-      projectId: PropTypes.string,
-      api: PropTypes.object.isRequired,
-      query: PropTypes.string.isRequired,
-      disabled: PropTypes.bool,
-      style: PropTypes.object,
-      tooltip: PropTypes.string,
-      buttonTitle: PropTypes.string,
-
-      onSave: PropTypes.func.isRequired,
-    };
-
-    constructor(props) {
-      super(props);
-      this.state = {
-        isModalOpen: false,
-        formData: {
-          query: this.props.query,
-        },
-        errors: {},
-      };
-    }
-
-    onToggle() {
-      if (this.props.disabled) {
-        return;
-      }
-      this.setState({
-        isModalOpen: !this.state.isModalOpen,
-        state: FormState.READY,
-        formData: {
-          query: this.props.query,
-        },
-      });
-    }
-
-    onFieldChange(name, value) {
-      const formData = this.state.formData;
-      formData[name] = value;
-      this.setState({
-        formData,
-      });
-    }
-
-    onDefaultChange(e) {
-      this.onFieldChange('isDefault', e.target.checked);
-    }
-
-    onUserDefaultChange(e) {
-      this.onFieldChange('isUserDefault', e.target.checked);
-    }
-
-    onSubmit(e) {
-      e.preventDefault();
-
-      if (this.state.state == FormState.SAVING) {
-        return;
-      }
-      const {api} = this.props;
-
-      this.setState(
-        {
-          state: FormState.SAVING,
-        },
-        () => {
-          const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
-          const {organization, projectId} = this.props;
-          api.request(`/projects/${organization.slug}/${projectId}/searches/`, {
-            method: 'POST',
-            data: this.state.formData,
-            success: data => {
-              this.onToggle();
-              this.props.onSave(data);
-              this.setState({
-                state: FormState.READY,
-                errors: {},
-              });
-            },
-            error: err => {
-              let errors = err.responseJSON || true;
-              errors = errors.detail || true;
-              this.setState({
-                state: FormState.ERROR,
-                errors,
-              });
-            },
-            complete: () => {
-              IndicatorStore.remove(loadingIndicator);
-            },
-          });
-        }
-      );
-    }
-
-    render() {
-      const isSaving = this.state.state === FormState.SAVING;
-      const {tooltip, buttonTitle, style, children, disabled, organization} = this.props;
-      const access = new Set(organization.access);
-      return (
-        <React.Fragment>
-          <Tooltip
-            title="You must select issues from a single project to create new saved searches"
-            disabled={!disabled}
-          >
-            <Button
-              title={tooltip || buttonTitle}
-              size="xsmall"
-              priority="default"
-              disabled={disabled}
-              onClick={this.onToggle.bind(this)}
-              style={style}
-            >
-              {children}
-            </Button>
-          </Tooltip>
-          <Modal
-            show={this.state.isModalOpen}
-            animation={false}
-            onHide={this.onToggle.bind(this)}
-          >
-            <form onSubmit={this.onSubmit.bind(this)}>
-              <div className="modal-header">
-                <h4>{t('Save Current Search')}</h4>
-              </div>
-              <div className="modal-body">
-                {this.state.state === FormState.ERROR && (
-                  <div className="alert alert-error alert-block">
-                    {t(`Unable to save your changes. ${this.state.errors}`)}
-                  </div>
-                )}
-                <p>
-                  {t(
-                    'Saving this search will give you and your team quick access to it in the future.'
-                  )}
-                </p>
-                <TextField
-                  key="name"
-                  name="name"
-                  label={t('Name')}
-                  placeholder="e.g. My Search Results"
-                  required={true}
-                  onChange={this.onFieldChange.bind(this, 'name')}
-                />
-                <TextField
-                  key="query"
-                  name="query"
-                  label={t('Query')}
-                  value={this.state.formData.query}
-                  required={true}
-                  onChange={this.onFieldChange.bind(this, 'query')}
-                />
-                <BooleanField
-                  key="isUserDefault"
-                  name="is-user-default"
-                  label={t('Make this the default view for myself.')}
-                  onChange={this.onFieldChange.bind(this, 'isUserDefault')}
-                />
-                {access.has('project:write') && (
-                  <BooleanField
-                    key="isDefault"
-                    name="is-default"
-                    label={t('Make this the default view for my team.')}
-                    onChange={this.onFieldChange.bind(this, 'isDefault')}
-                  />
-                )}
-              </div>
-              <div className="modal-footer">
-                <Button
-                  priority="default"
-                  size="small"
-                  disabled={isSaving}
-                  onClick={this.onToggle.bind(this)}
-                  style={{marginRight: space(1)}}
-                >
-                  {t('Cancel')}
-                </Button>
-                <Button priority="primary" size="small" disabled={isSaving}>
-                  {t('Save')}
-                </Button>
-              </div>
-            </form>
-          </Modal>
-        </React.Fragment>
-      );
-    }
-  }
-);
-
-const SavedSearchSelector = withApi(
-  class SavedSearchSelector extends React.Component {
-    static propTypes = {
-      organization: SentryTypes.Organization.isRequired,
-      projectId: PropTypes.string,
-      searchId: PropTypes.string,
-      query: PropTypes.string,
-      savedSearchList: PropTypes.array.isRequired,
-      queryCount: PropTypes.number,
-      queryMaxCount: PropTypes.number,
-      onSavedSearchCreate: PropTypes.func.isRequired,
-      onSavedSearchSelect: PropTypes.func.isRequired,
-    };
-
-    getTitle() {
-      const {searchId, query, savedSearchList} = this.props;
-      let result;
-
-      if (searchId) {
-        result = savedSearchList.find(search => searchId === search.id);
-      } else {
-        result = savedSearchList.find(search => query === search.query);
-      }
-
-      return result ? result.name : t('Custom Search');
-    }
-
-    render() {
-      const {
-        organization,
-        projectId,
-        queryCount,
-        queryMaxCount,
-        onSavedSearchSelect,
-      } = this.props;
-      const hasProject = !!projectId;
-
-      const children = this.props.savedSearchList.map(search => {
-        return (
-          <StyledMenuItem onSelect={() => onSavedSearchSelect(search)} key={search.id}>
-            <span>
-              <strong>{search.name}</strong>
-              {search.projectSlug && <StyledTag>{search.projectSlug}</StyledTag>}
-            </span>
-            <code>{search.query}</code>
-          </StyledMenuItem>
-        );
-      });
-      return (
-        <Container>
-          <StyledDropdownLink
-            title={
-              <span>
-                <span>{this.getTitle()}</span>
-                <QueryCount count={queryCount} max={queryMaxCount} />
-              </span>
-            }
-          >
-            {children.length ? (
-              children
-            ) : (
-              <EmptyItem>{t("There don't seem to be any saved searches yet.")}</EmptyItem>
-            )}
-            <StyledMenuItem divider={true} />
-            <ButtonBar>
-              <SaveSearchButton
-                className="btn btn-sm btn-default"
-                onSave={this.props.onSavedSearchCreate}
-                disabled={!hasProject}
-                {...this.props}
-              >
-                {t('Save Current Search')}
-              </SaveSearchButton>
-
-              <Tooltip
-                title="You must select issues from a single project to manage saved searches"
-                disabled={hasProject}
-              >
-                <Button
-                  size="xsmall"
-                  priority="default"
-                  to={`/${organization.slug}/${projectId}/settings/saved-searches/`}
-                  disabled={!hasProject}
-                >
-                  {t('Manage')}
-                </Button>
-              </Tooltip>
-            </ButtonBar>
-          </StyledDropdownLink>
-        </Container>
-      );
-    }
-  }
-);
-
-const Container = styled('div')`
-  & .dropdown-menu {
-    max-width: 350px;
-    min-width: 275px;
-  }
-`;
-
-const StyledDropdownLink = styled(DropdownLink)`
-  display: inline-block;
-  font-size: 22px;
-  color: ${p => p.theme.gray5};
-  line-height: 36px;
-  margin-right: 10px;
-  max-width: 100%;
-  text-overflow: ellipsis;
-  white-space: nowrap;
-  overflow: hidden;
-
-  & :hover,
-  & :focus {
-    color: ${p => p.theme.gray5};
-  }
-
-  & .icon-arrow-down {
-    display: inline-block;
-    margin-left: 5px;
-    top: 0;
-    vertical-align: middle;
-  }
-`;
-
-const EmptyItem = styled('li')`
-  padding: 8px 10px 5px;
-  font-style: italic;
-`;
-
-const StyledTag = styled(Tag)`
-  display: inline-block;
-  margin-left: ${space(0.25)};
-`;
-
-const StyledMenuItem = styled(MenuItem)`
-  & a {
-    /* override shared-components.less */
-    padding: ${space(0.25)} ${space(1)} !important;
-  }
-  & span,
-  & code {
-    display: block;
-    max-width: 100%;
-    text-overflow: ellipsis;
-    white-space: nowrap;
-    overflow: hidden;
-    color: ${p => p.theme.gray5};
-    padding: 0;
-    background: inherit;
-  }
-`;
-
-const ButtonBar = styled('li')`
-  padding: ${space(0.5)} ${space(1)};
-  display: flex;
-  justify-content: space-between;
-
-  & a {
-    /* need to override .dropdown-menu li a in shared-components.less */
-    padding: 0 !important;
-    line-height: 1 !important;
-  }
-`;
-
-export default SavedSearchSelector;
diff --git a/tests/acceptance/test_project_saved_searches_settings.py b/tests/acceptance/test_project_saved_searches_settings.py
deleted file mode 100644
index 4b6d9f08ad..0000000000
--- a/tests/acceptance/test_project_saved_searches_settings.py
+++ /dev/null
@@ -1,33 +0,0 @@
-from __future__ import absolute_import
-
-from sentry.testutils import AcceptanceTestCase
-
-
-class ProjectSavedSearchesSettingsTest(AcceptanceTestCase):
-    def setUp(self):
-        super(ProjectSavedSearchesSettingsTest, self).setUp()
-        self.user = self.create_user('foo@example.com')
-        self.org = self.create_organization(
-            name='Rowdy Tiger',
-            owner=None,
-        )
-        self.team = self.create_team(organization=self.org, name='Mariachi Band')
-        self.project = self.create_project(
-            organization=self.org,
-            teams=[self.team],
-            name='Bengal',
-        )
-        self.create_member(
-            user=self.user,
-            organization=self.org,
-            role='owner',
-            teams=[self.team],
-        )
-
-        self.login_as(self.user)
-
-    def test_saved_searches(self):
-        path = u'/{}/{}/settings/saved-searches/'.format(self.org.slug, self.project.slug)
-        self.browser.get(path)
-        self.browser.wait_until_not('.loading-indicator')
-        self.browser.snapshot('project settings - saved searches')
diff --git a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
deleted file mode 100644
index 4d6591ec35..0000000000
--- a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
+++ /dev/null
@@ -1,1138 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`ProjectSavedSearches renders 1`] = `
-<ProjectSavedSearchContainer
-  params={
-    Object {
-      "orgId": "org-slug",
-      "projectId": "project-slug",
-    }
-  }
->
-  <ProjectSavedSearches
-    params={
-      Object {
-        "orgId": "org-slug",
-        "projectId": "project-slug",
-      }
-    }
-  >
-    <SideEffect(DocumentTitle)
-      title="Saved Searches - Sentry"
-    >
-      <DocumentTitle
-        title="Saved Searches - Sentry"
-      >
-        <div>
-          <SettingsPageHeading
-            noTitleStyles={false}
-            title="Saved Searches"
-          >
-            <Wrapper>
-              <div
-                className="css-1r5ylk7-Wrapper e1kblvez2"
-              >
-                <Flex
-                  align="center"
-                >
-                  <Base
-                    align="center"
-                    className="css-5ipae5"
-                  >
-                    <div
-                      className="css-5ipae5"
-                      is={null}
-                    >
-                      <Title
-                        styled={false}
-                      >
-                        <Base
-                          className="css-1ky52ze-Title e1kblvez0"
-                        >
-                          <div
-                            className="css-1ky52ze-Title e1kblvez0"
-                            is={null}
-                          >
-                            <HeaderTitle>
-                              <h4
-                                className="css-1w8ttcn-HeaderTitle e6lvex72"
-                              >
-                                Saved Searches
-                              </h4>
-                            </HeaderTitle>
-                          </div>
-                        </Base>
-                      </Title>
-                    </div>
-                  </Base>
-                </Flex>
-              </div>
-            </Wrapper>
-          </SettingsPageHeading>
-          <Panel>
-            <Component
-              className="css-10qfvek-Panel e1laxa7d0"
-            >
-              <div
-                className="css-10qfvek-Panel e1laxa7d0"
-              >
-                <PanelHeader
-                  disablePadding={true}
-                >
-                  <Component
-                    className="css-1uisq4f-PanelHeader-getPadding e1p8v8nv0"
-                    disablePadding={true}
-                  >
-                    <Flex
-                      align="center"
-                      className="css-1uisq4f-PanelHeader-getPadding e1p8v8nv0"
-                      justify="space-between"
-                    >
-                      <Base
-                        align="center"
-                        className="e1p8v8nv0 css-3e5jt6-PanelHeader-getPadding"
-                        justify="space-between"
-                      >
-                        <div
-                          className="e1p8v8nv0 css-3e5jt6-PanelHeader-getPadding"
-                          is={null}
-                        >
-                          <Flex
-                            flex="1"
-                          >
-                            <Base
-                              className="css-z8nhq7"
-                              flex="1"
-                            >
-                              <div
-                                className="css-z8nhq7"
-                                is={null}
-                              >
-                                <Flex
-                                  flex="1"
-                                  px={2}
-                                >
-                                  <Base
-                                    className="css-1i4q2rt"
-                                    flex="1"
-                                    px={2}
-                                  >
-                                    <div
-                                      className="css-1i4q2rt"
-                                      is={null}
-                                    >
-                                      Search
-                                    </div>
-                                  </Base>
-                                </Flex>
-                                <Flex
-                                  flex="1"
-                                >
-                                  <Base
-                                    className="css-z8nhq7"
-                                    flex="1"
-                                  >
-                                    <div
-                                      className="css-z8nhq7"
-                                      is={null}
-                                    >
-                                      <InputColumn>
-                                        <Flex
-                                          flex="1"
-                                          justify="center"
-                                        >
-                                          <Base
-                                            className="css-k3hlac"
-                                            flex="1"
-                                            justify="center"
-                                          >
-                                            <div
-                                              className="css-k3hlac"
-                                              is={null}
-                                            >
-                                              My Default
-                                            </div>
-                                          </Base>
-                                        </Flex>
-                                      </InputColumn>
-                                      <InputColumn>
-                                        <Flex
-                                          flex="1"
-                                          justify="center"
-                                        >
-                                          <Base
-                                            className="css-k3hlac"
-                                            flex="1"
-                                            justify="center"
-                                          >
-                                            <div
-                                              className="css-k3hlac"
-                                              is={null}
-                                            >
-                                              Team Default
-                                            </div>
-                                          </Base>
-                                        </Flex>
-                                      </InputColumn>
-                                      <InputColumn>
-                                        <Flex
-                                          flex="1"
-                                          justify="center"
-                                        >
-                                          <Base
-                                            className="css-k3hlac"
-                                            flex="1"
-                                            justify="center"
-                                          >
-                                            <div
-                                              className="css-k3hlac"
-                                              is={null}
-                                            >
-                                              Remove
-                                            </div>
-                                          </Base>
-                                        </Flex>
-                                      </InputColumn>
-                                    </div>
-                                  </Base>
-                                </Flex>
-                              </div>
-                            </Base>
-                          </Flex>
-                        </div>
-                      </Base>
-                    </Flex>
-                  </Component>
-                </PanelHeader>
-                <PanelBody
-                  direction="column"
-                  disablePadding={true}
-                  flex={false}
-                >
-                  <div
-                    className="css-a4ya23-textStyles"
-                  >
-                    <SavedSearchRow
-                      access={
-                        Set {
-                          "org:read",
-                          "org:write",
-                          "org:admin",
-                          "org:integrations",
-                          "project:read",
-                          "project:write",
-                          "project:admin",
-                          "team:read",
-                          "team:write",
-                          "team:admin",
-                        }
-                      }
-                      canModify={true}
-                      data={
-                        Object {
-                          "dateCreated": "2017-11-14T02:22:58.026Z",
-                          "id": "2",
-                          "isDefault": true,
-                          "isGlobal": true,
-                          "isOrgCustom": false,
-                          "isPinned": false,
-                          "isPrivate": false,
-                          "isUserDefault": false,
-                          "name": "Needs Triage",
-                          "query": "is:unresolved is:unassigned",
-                          "type": 0,
-                        }
-                      }
-                      key="2"
-                      onDefault={[Function]}
-                      onRemove={[Function]}
-                      onUserDefault={[Function]}
-                      orgId="org-slug"
-                      projectId="project-slug"
-                    >
-                      <PanelItem
-                        align="center"
-                        p={0}
-                        py={2}
-                      >
-                        <Base
-                          align="center"
-                          className="css-16d6l3f-PanelItem eo8n7lk0"
-                          p={0}
-                          py={2}
-                        >
-                          <div
-                            className="css-16d6l3f-PanelItem eo8n7lk0"
-                            is={null}
-                          >
-                            <Flex
-                              direction="column"
-                              flex="1"
-                              px={2}
-                            >
-                              <Base
-                                className="css-16auc1r"
-                                direction="column"
-                                flex="1"
-                                px={2}
-                              >
-                                <div
-                                  className="css-16auc1r"
-                                  is={null}
-                                >
-                                  <SearchTitle>
-                                    <div
-                                      className="css-225nrx-SearchTitle e1e9fsi50"
-                                    >
-                                      Needs Triage
-                                    </div>
-                                  </SearchTitle>
-                                  <code>
-                                    is:unresolved is:unassigned
-                                  </code>
-                                </div>
-                              </Base>
-                            </Flex>
-                            <Flex
-                              flex="1"
-                            >
-                              <Base
-                                className="css-z8nhq7"
-                                flex="1"
-                              >
-                                <div
-                                  className="css-z8nhq7"
-                                  is={null}
-                                >
-                                  <InputColumn>
-                                    <Flex
-                                      flex="1"
-                                      justify="center"
-                                    >
-                                      <Base
-                                        className="css-k3hlac"
-                                        flex="1"
-                                        justify="center"
-                                      >
-                                        <div
-                                          className="css-k3hlac"
-                                          is={null}
-                                        >
-                                          <input
-                                            checked={false}
-                                            name="userDefault"
-                                            onChange={[Function]}
-                                            type="radio"
-                                          />
-                                        </div>
-                                      </Base>
-                                    </Flex>
-                                  </InputColumn>
-                                  <InputColumn>
-                                    <Flex
-                                      flex="1"
-                                      justify="center"
-                                    >
-                                      <Base
-                                        className="css-k3hlac"
-                                        flex="1"
-                                        justify="center"
-                                      >
-                                        <div
-                                          className="css-k3hlac"
-                                          is={null}
-                                        >
-                                          <input
-                                            checked={true}
-                                            disabled={false}
-                                            name="default"
-                                            onChange={[Function]}
-                                            type="radio"
-                                          />
-                                        </div>
-                                      </Base>
-                                    </Flex>
-                                  </InputColumn>
-                                  <InputColumn>
-                                    <Flex
-                                      flex="1"
-                                      justify="center"
-                                    >
-                                      <Base
-                                        className="css-k3hlac"
-                                        flex="1"
-                                        justify="center"
-                                      >
-                                        <div
-                                          className="css-k3hlac"
-                                          is={null}
-                                        >
-                                          <Confirm
-                                            cancelText="Cancel"
-                                            confirmText="Confirm"
-                                            disableConfirmButton={false}
-                                            disabled={false}
-                                            message="Are you sure you want to remove this?"
-                                            onConfirm={[Function]}
-                                            priority="primary"
-                                            stopPropagation={false}
-                                          >
-                                            <Button
-                                              disabled={false}
-                                              icon="icon-trash"
-                                              onClick={[Function]}
-                                              size="small"
-                                            >
-                                              <StyledButton
-                                                aria-disabled={false}
-                                                disabled={false}
-                                                onClick={[Function]}
-                                                role="button"
-                                                size="small"
-                                              >
-                                                <ForwardRef
-                                                  aria-disabled={false}
-                                                  className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                  disabled={false}
-                                                  onClick={[Function]}
-                                                  role="button"
-                                                  size="small"
-                                                >
-                                                  <button
-                                                    aria-disabled={false}
-                                                    className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                    onClick={[Function]}
-                                                    role="button"
-                                                    size="small"
-                                                  >
-                                                    <ButtonLabel
-                                                      size="small"
-                                                    >
-                                                      <Component
-                                                        className="css-7ui8bl-ButtonLabel e12ma6z1"
-                                                        size="small"
-                                                      >
-                                                        <span
-                                                          className="css-7ui8bl-ButtonLabel e12ma6z1"
-                                                        >
-                                                          <Icon
-                                                            hasChildren={false}
-                                                            size="small"
-                                                          >
-                                                            <Component
-                                                              className="css-ljhpxy-Icon e12ma6z2"
-                                                              hasChildren={false}
-                                                              size="small"
-                                                            >
-                                                              <span
-                                                                className="css-ljhpxy-Icon e12ma6z2"
-                                                                size="small"
-                                                              >
-                                                                <StyledInlineSvg
-                                                                  size="12px"
-                                                                  src="icon-trash"
-                                                                >
-                                                                  <InlineSvg
-                                                                    className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
-                                                                    size="12px"
-                                                                    src="icon-trash"
-                                                                  >
-                                                                    <StyledSvg
-                                                                      className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
-                                                                      height="12px"
-                                                                      viewBox={Object {}}
-                                                                      width="12px"
-                                                                    >
-                                                                      <svg
-                                                                        className="e12ma6z3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
-                                                                        height="12px"
-                                                                        viewBox={Object {}}
-                                                                        width="12px"
-                                                                      >
-                                                                        <use
-                                                                          href="#test"
-                                                                          xlinkHref="#test"
-                                                                        />
-                                                                      </svg>
-                                                                    </StyledSvg>
-                                                                  </InlineSvg>
-                                                                </StyledInlineSvg>
-                                                              </span>
-                                                            </Component>
-                                                          </Icon>
-                                                        </span>
-                                                      </Component>
-                                                    </ButtonLabel>
-                                                  </button>
-                                                </ForwardRef>
-                                              </StyledButton>
-                                            </Button>
-                                            <Modal
-                                              animation={false}
-                                              autoFocus={true}
-                                              backdrop={true}
-                                              bsClass="modal"
-                                              dialogComponentClass={[Function]}
-                                              enforceFocus={true}
-                                              keyboard={true}
-                                              manager={
-                                                ModalManager {
-                                                  "add": [Function],
-                                                  "containers": Array [],
-                                                  "data": Array [],
-                                                  "handleContainerOverflow": true,
-                                                  "hideSiblingNodes": true,
-                                                  "isTopModal": [Function],
-                                                  "modals": Array [],
-                                                  "remove": [Function],
-                                                }
-                                              }
-                                              onHide={[Function]}
-                                              renderBackdrop={[Function]}
-                                              restoreFocus={true}
-                                              show={false}
-                                            >
-                                              <Modal
-                                                autoFocus={true}
-                                                backdrop={true}
-                                                backdropClassName="modal-backdrop"
-                                                containerClassName="modal-open"
-                                                enforceFocus={true}
-                                                keyboard={true}
-                                                manager={
-                                                  ModalManager {
-                                                    "add": [Function],
-                                                    "containers": Array [],
-                                                    "data": Array [],
-                                                    "handleContainerOverflow": true,
-                                                    "hideSiblingNodes": true,
-                                                    "isTopModal": [Function],
-                                                    "modals": Array [],
-                                                    "remove": [Function],
-                                                  }
-                                                }
-                                                onEntering={[Function]}
-                                                onExited={[Function]}
-                                                onHide={[Function]}
-                                                renderBackdrop={[Function]}
-                                                restoreFocus={true}
-                                                show={false}
-                                              />
-                                            </Modal>
-                                          </Confirm>
-                                        </div>
-                                      </Base>
-                                    </Flex>
-                                  </InputColumn>
-                                </div>
-                              </Base>
-                            </Flex>
-                          </div>
-                        </Base>
-                      </PanelItem>
-                    </SavedSearchRow>
-                    <SavedSearchRow
-                      access={
-                        Set {
-                          "org:read",
-                          "org:write",
-                          "org:admin",
-                          "org:integrations",
-                          "project:read",
-                          "project:write",
-                          "project:admin",
-                          "team:read",
-                          "team:write",
-                          "team:admin",
-                        }
-                      }
-                      canModify={true}
-                      data={
-                        Object {
-                          "dateCreated": "2017-11-14T02:22:58.026Z",
-                          "id": "1",
-                          "isDefault": false,
-                          "isGlobal": false,
-                          "isOrgCustom": false,
-                          "isPinned": false,
-                          "isPrivate": false,
-                          "isUserDefault": true,
-                          "name": "Unresolved Issues",
-                          "query": "is:unresolved",
-                          "type": 0,
-                        }
-                      }
-                      key="1"
-                      onDefault={[Function]}
-                      onRemove={[Function]}
-                      onUserDefault={[Function]}
-                      orgId="org-slug"
-                      projectId="project-slug"
-                    >
-                      <PanelItem
-                        align="center"
-                        p={0}
-                        py={2}
-                      >
-                        <Base
-                          align="center"
-                          className="css-16d6l3f-PanelItem eo8n7lk0"
-                          p={0}
-                          py={2}
-                        >
-                          <div
-                            className="css-16d6l3f-PanelItem eo8n7lk0"
-                            is={null}
-                          >
-                            <Flex
-                              direction="column"
-                              flex="1"
-                              px={2}
-                            >
-                              <Base
-                                className="css-16auc1r"
-                                direction="column"
-                                flex="1"
-                                px={2}
-                              >
-                                <div
-                                  className="css-16auc1r"
-                                  is={null}
-                                >
-                                  <SearchTitle>
-                                    <div
-                                      className="css-225nrx-SearchTitle e1e9fsi50"
-                                    >
-                                      Unresolved Issues
-                                    </div>
-                                  </SearchTitle>
-                                  <code>
-                                    is:unresolved
-                                  </code>
-                                </div>
-                              </Base>
-                            </Flex>
-                            <Flex
-                              flex="1"
-                            >
-                              <Base
-                                className="css-z8nhq7"
-                                flex="1"
-                              >
-                                <div
-                                  className="css-z8nhq7"
-                                  is={null}
-                                >
-                                  <InputColumn>
-                                    <Flex
-                                      flex="1"
-                                      justify="center"
-                                    >
-                                      <Base
-                                        className="css-k3hlac"
-                                        flex="1"
-                                        justify="center"
-                                      >
-                                        <div
-                                          className="css-k3hlac"
-                                          is={null}
-                                        >
-                                          <input
-                                            checked={true}
-                                            name="userDefault"
-                                            onChange={[Function]}
-                                            type="radio"
-                                          />
-                                        </div>
-                                      </Base>
-                                    </Flex>
-                                  </InputColumn>
-                                  <InputColumn>
-                                    <Flex
-                                      flex="1"
-                                      justify="center"
-                                    >
-                                      <Base
-                                        className="css-k3hlac"
-                                        flex="1"
-                                        justify="center"
-                                      >
-                                        <div
-                                          className="css-k3hlac"
-                                          is={null}
-                                        >
-                                          <input
-                                            checked={false}
-                                            disabled={false}
-                                            name="default"
-                                            onChange={[Function]}
-                                            type="radio"
-                                          />
-                                        </div>
-                                      </Base>
-                                    </Flex>
-                                  </InputColumn>
-                                  <InputColumn>
-                                    <Flex
-                                      flex="1"
-                                      justify="center"
-                                    >
-                                      <Base
-                                        className="css-k3hlac"
-                                        flex="1"
-                                        justify="center"
-                                      >
-                                        <div
-                                          className="css-k3hlac"
-                                          is={null}
-                                        >
-                                          <Confirm
-                                            cancelText="Cancel"
-                                            confirmText="Confirm"
-                                            disableConfirmButton={false}
-                                            disabled={false}
-                                            message="Are you sure you want to remove this?"
-                                            onConfirm={[Function]}
-                                            priority="primary"
-                                            stopPropagation={false}
-                                          >
-                                            <Button
-                                              disabled={false}
-                                              icon="icon-trash"
-                                              onClick={[Function]}
-                                              size="small"
-                                            >
-                                              <StyledButton
-                                                aria-disabled={false}
-                                                disabled={false}
-                                                onClick={[Function]}
-                                                role="button"
-                                                size="small"
-                                              >
-                                                <ForwardRef
-                                                  aria-disabled={false}
-                                                  className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                  disabled={false}
-                                                  onClick={[Function]}
-                                                  role="button"
-                                                  size="small"
-                                                >
-                                                  <button
-                                                    aria-disabled={false}
-                                                    className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                    onClick={[Function]}
-                                                    role="button"
-                                                    size="small"
-                                                  >
-                                                    <ButtonLabel
-                                                      size="small"
-                                                    >
-                                                      <Component
-                                                        className="css-7ui8bl-ButtonLabel e12ma6z1"
-                                                        size="small"
-                                                      >
-                                                        <span
-                                                          className="css-7ui8bl-ButtonLabel e12ma6z1"
-                                                        >
-                                                          <Icon
-                                                            hasChildren={false}
-                                                            size="small"
-                                                          >
-                                                            <Component
-                                                              className="css-ljhpxy-Icon e12ma6z2"
-                                                              hasChildren={false}
-                                                              size="small"
-                                                            >
-                                                              <span
-                                                                className="css-ljhpxy-Icon e12ma6z2"
-                                                                size="small"
-                                                              >
-                                                                <StyledInlineSvg
-                                                                  size="12px"
-                                                                  src="icon-trash"
-                                                                >
-                                                                  <InlineSvg
-                                                                    className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
-                                                                    size="12px"
-                                                                    src="icon-trash"
-                                                                  >
-                                                                    <StyledSvg
-                                                                      className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
-                                                                      height="12px"
-                                                                      viewBox={Object {}}
-                                                                      width="12px"
-                                                                    >
-                                                                      <svg
-                                                                        className="e12ma6z3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
-                                                                        height="12px"
-                                                                        viewBox={Object {}}
-                                                                        width="12px"
-                                                                      >
-                                                                        <use
-                                                                          href="#test"
-                                                                          xlinkHref="#test"
-                                                                        />
-                                                                      </svg>
-                                                                    </StyledSvg>
-                                                                  </InlineSvg>
-                                                                </StyledInlineSvg>
-                                                              </span>
-                                                            </Component>
-                                                          </Icon>
-                                                        </span>
-                                                      </Component>
-                                                    </ButtonLabel>
-                                                  </button>
-                                                </ForwardRef>
-                                              </StyledButton>
-                                            </Button>
-                                            <Modal
-                                              animation={false}
-                                              autoFocus={true}
-                                              backdrop={true}
-                                              bsClass="modal"
-                                              dialogComponentClass={[Function]}
-                                              enforceFocus={true}
-                                              keyboard={true}
-                                              manager={
-                                                ModalManager {
-                                                  "add": [Function],
-                                                  "containers": Array [],
-                                                  "data": Array [],
-                                                  "handleContainerOverflow": true,
-                                                  "hideSiblingNodes": true,
-                                                  "isTopModal": [Function],
-                                                  "modals": Array [],
-                                                  "remove": [Function],
-                                                }
-                                              }
-                                              onHide={[Function]}
-                                              renderBackdrop={[Function]}
-                                              restoreFocus={true}
-                                              show={false}
-                                            >
-                                              <Modal
-                                                autoFocus={true}
-                                                backdrop={true}
-                                                backdropClassName="modal-backdrop"
-                                                containerClassName="modal-open"
-                                                enforceFocus={true}
-                                                keyboard={true}
-                                                manager={
-                                                  ModalManager {
-                                                    "add": [Function],
-                                                    "containers": Array [],
-                                                    "data": Array [],
-                                                    "handleContainerOverflow": true,
-                                                    "hideSiblingNodes": true,
-                                                    "isTopModal": [Function],
-                                                    "modals": Array [],
-                                                    "remove": [Function],
-                                                  }
-                                                }
-                                                onEntering={[Function]}
-                                                onExited={[Function]}
-                                                onHide={[Function]}
-                                                renderBackdrop={[Function]}
-                                                restoreFocus={true}
-                                                show={false}
-                                              />
-                                            </Modal>
-                                          </Confirm>
-                                        </div>
-                                      </Base>
-                                    </Flex>
-                                  </InputColumn>
-                                </div>
-                              </Base>
-                            </Flex>
-                          </div>
-                        </Base>
-                      </PanelItem>
-                    </SavedSearchRow>
-                  </div>
-                </PanelBody>
-              </div>
-            </Component>
-          </Panel>
-        </div>
-      </DocumentTitle>
-    </SideEffect(DocumentTitle)>
-  </ProjectSavedSearches>
-</ProjectSavedSearchContainer>
-`;
-
-exports[`ProjectSavedSearches renders empty 1`] = `
-<ProjectSavedSearchContainer
-  params={
-    Object {
-      "orgId": "org-slug",
-      "projectId": "project-slug",
-    }
-  }
->
-  <ProjectSavedSearches
-    params={
-      Object {
-        "orgId": "org-slug",
-        "projectId": "project-slug",
-      }
-    }
-  >
-    <SideEffect(DocumentTitle)
-      title="Saved Searches - Sentry"
-    >
-      <DocumentTitle
-        title="Saved Searches - Sentry"
-      >
-        <div>
-          <SettingsPageHeading
-            noTitleStyles={false}
-            title="Saved Searches"
-          >
-            <Wrapper>
-              <div
-                className="css-1r5ylk7-Wrapper e1kblvez2"
-              >
-                <Flex
-                  align="center"
-                >
-                  <Base
-                    align="center"
-                    className="css-5ipae5"
-                  >
-                    <div
-                      className="css-5ipae5"
-                      is={null}
-                    >
-                      <Title
-                        styled={false}
-                      >
-                        <Base
-                          className="css-1ky52ze-Title e1kblvez0"
-                        >
-                          <div
-                            className="css-1ky52ze-Title e1kblvez0"
-                            is={null}
-                          >
-                            <HeaderTitle>
-                              <h4
-                                className="css-1w8ttcn-HeaderTitle e6lvex72"
-                              >
-                                Saved Searches
-                              </h4>
-                            </HeaderTitle>
-                          </div>
-                        </Base>
-                      </Title>
-                    </div>
-                  </Base>
-                </Flex>
-              </div>
-            </Wrapper>
-          </SettingsPageHeading>
-          <Panel>
-            <Component
-              className="css-10qfvek-Panel e1laxa7d0"
-            >
-              <div
-                className="css-10qfvek-Panel e1laxa7d0"
-              >
-                <PanelHeader
-                  disablePadding={true}
-                >
-                  <Component
-                    className="css-1uisq4f-PanelHeader-getPadding e1p8v8nv0"
-                    disablePadding={true}
-                  >
-                    <Flex
-                      align="center"
-                      className="css-1uisq4f-PanelHeader-getPadding e1p8v8nv0"
-                      justify="space-between"
-                    >
-                      <Base
-                        align="center"
-                        className="e1p8v8nv0 css-3e5jt6-PanelHeader-getPadding"
-                        justify="space-between"
-                      >
-                        <div
-                          className="e1p8v8nv0 css-3e5jt6-PanelHeader-getPadding"
-                          is={null}
-                        >
-                          <Flex
-                            flex="1"
-                          >
-                            <Base
-                              className="css-z8nhq7"
-                              flex="1"
-                            >
-                              <div
-                                className="css-z8nhq7"
-                                is={null}
-                              >
-                                <Flex
-                                  flex="1"
-                                  px={2}
-                                >
-                                  <Base
-                                    className="css-1i4q2rt"
-                                    flex="1"
-                                    px={2}
-                                  >
-                                    <div
-                                      className="css-1i4q2rt"
-                                      is={null}
-                                    >
-                                      Search
-                                    </div>
-                                  </Base>
-                                </Flex>
-                                <Flex
-                                  flex="1"
-                                >
-                                  <Base
-                                    className="css-z8nhq7"
-                                    flex="1"
-                                  >
-                                    <div
-                                      className="css-z8nhq7"
-                                      is={null}
-                                    >
-                                      <InputColumn>
-                                        <Flex
-                                          flex="1"
-                                          justify="center"
-                                        >
-                                          <Base
-                                            className="css-k3hlac"
-                                            flex="1"
-                                            justify="center"
-                                          >
-                                            <div
-                                              className="css-k3hlac"
-                                              is={null}
-                                            >
-                                              My Default
-                                            </div>
-                                          </Base>
-                                        </Flex>
-                                      </InputColumn>
-                                      <InputColumn>
-                                        <Flex
-                                          flex="1"
-                                          justify="center"
-                                        >
-                                          <Base
-                                            className="css-k3hlac"
-                                            flex="1"
-                                            justify="center"
-                                          >
-                                            <div
-                                              className="css-k3hlac"
-                                              is={null}
-                                            >
-                                              Team Default
-                                            </div>
-                                          </Base>
-                                        </Flex>
-                                      </InputColumn>
-                                      <InputColumn>
-                                        <Flex
-                                          flex="1"
-                                          justify="center"
-                                        >
-                                          <Base
-                                            className="css-k3hlac"
-                                            flex="1"
-                                            justify="center"
-                                          >
-                                            <div
-                                              className="css-k3hlac"
-                                              is={null}
-                                            >
-                                              Remove
-                                            </div>
-                                          </Base>
-                                        </Flex>
-                                      </InputColumn>
-                                    </div>
-                                  </Base>
-                                </Flex>
-                              </div>
-                            </Base>
-                          </Flex>
-                        </div>
-                      </Base>
-                    </Flex>
-                  </Component>
-                </PanelHeader>
-                <PanelBody
-                  direction="column"
-                  disablePadding={true}
-                  flex={false}
-                >
-                  <div
-                    className="css-a4ya23-textStyles"
-                  >
-                    <EmptyStateWarning
-                      small={false}
-                    >
-                      <EmptyStreamWrapper
-                        data-test-id="empty-state"
-                      >
-                        <div
-                          className="css-pdv4gl-EmptyStreamWrapper ernlsnc0"
-                          data-test-id="empty-state"
-                        >
-                          <HeroIcon
-                            size="54"
-                            src="icon-circle-exclamation"
-                          >
-                            <Component
-                              className="css-1j03cl-HeroIcon e1h7wyrq0"
-                              size="54"
-                              src="icon-circle-exclamation"
-                            >
-                              <InlineSvg
-                                className="css-1j03cl-HeroIcon e1h7wyrq0"
-                                size="54"
-                                src="icon-circle-exclamation"
-                              >
-                                <StyledSvg
-                                  className="css-1j03cl-HeroIcon e1h7wyrq0"
-                                  height="54"
-                                  viewBox={Object {}}
-                                  width="54"
-                                >
-                                  <svg
-                                    className="e1h7wyrq0 css-196iyqp-StyledSvg-HeroIcon e2idor0"
-                                    height="54"
-                                    viewBox={Object {}}
-                                    width="54"
-                                  >
-                                    <use
-                                      href="#test"
-                                      xlinkHref="#test"
-                                    />
-                                  </svg>
-                                </StyledSvg>
-                              </InlineSvg>
-                            </Component>
-                          </HeroIcon>
-                          <p>
-                            There are no saved searches for this project.
-                          </p>
-                        </div>
-                      </EmptyStreamWrapper>
-                    </EmptyStateWarning>
-                  </div>
-                </PanelBody>
-              </div>
-            </Component>
-          </Panel>
-        </div>
-      </DocumentTitle>
-    </SideEffect(DocumentTitle)>
-  </ProjectSavedSearches>
-</ProjectSavedSearchContainer>
-`;
diff --git a/tests/js/spec/views/projectSavedSearches.spec.jsx b/tests/js/spec/views/projectSavedSearches.spec.jsx
deleted file mode 100644
index 9d414d257f..0000000000
--- a/tests/js/spec/views/projectSavedSearches.spec.jsx
+++ /dev/null
@@ -1,222 +0,0 @@
-import React from 'react';
-import {mount} from 'enzyme';
-
-import ProjectSavedSearches from 'app/views/projectSavedSearches';
-
-describe('ProjectSavedSearches', function() {
-  let wrapper;
-  const routerContext = TestStubs.routerContext();
-  const org = routerContext.context.organization;
-  const project = routerContext.context.project;
-
-  beforeEach(function() {
-    const searches = TestStubs.Searches();
-    searches[1] = {
-      ...searches[1],
-      isDefault: false,
-      isGlobal: false,
-      isUserDefault: true,
-    };
-
-    MockApiClient.mockAsync = false;
-    MockApiClient.clearMockResponses();
-    MockApiClient.addMockResponse({
-      url: `/projects/${org.slug}/${project.slug}/searches/`,
-      method: 'GET',
-      body: searches,
-    });
-
-    wrapper = mount(
-      <ProjectSavedSearches params={{orgId: org.slug, projectId: project.slug}} />,
-      routerContext
-    );
-  });
-
-  it('renders empty', function() {
-    MockApiClient.clearMockResponses();
-    MockApiClient.addMockResponse({
-      url: `/projects/${org.slug}/${project.slug}/searches/`,
-      method: 'GET',
-      body: [],
-    });
-
-    wrapper = mount(
-      <ProjectSavedSearches params={{orgId: org.slug, projectId: project.slug}} />,
-      routerContext
-    );
-
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('renders', function() {
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('removes a search query', function() {
-    const removed = MockApiClient.addMockResponse({
-      url: `/projects/${org.slug}/${project.slug}/searches/2/`,
-      method: 'DELETE',
-    });
-
-    expect(removed).not.toHaveBeenCalled();
-
-    wrapper
-      .find('Button')
-      .first()
-      .simulate('click');
-
-    $(document.body)
-      .find('.modal button:contains("Confirm")')
-      .click();
-
-    expect(removed).toHaveBeenCalled();
-  });
-
-  it('rolls back update default on error', function() {
-    const url = `/projects/${org.slug}/${project.slug}/searches/2/`;
-    const remove = MockApiClient.addMockResponse({
-      url,
-      method: 'DELETE',
-      statusCode: 400,
-    });
-
-    MockApiClient.mockAsync = true;
-
-    // Initially has two rows
-    expect(wrapper.find('SavedSearchRow')).toHaveLength(2);
-
-    expect(remove).not.toHaveBeenCalled();
-
-    // Remove first row
-    wrapper
-      .find('Button')
-      .first()
-      .simulate('click');
-
-    $(document.body)
-      .find('.modal button:contains("Confirm")')
-      .click();
-
-    wrapper.update();
-
-    // Should update have 1 row remaining
-    expect(wrapper.find('SavedSearchRow')).toHaveLength(1);
-
-    // calls API, API returns an error
-
-    setTimeout(() => {
-      wrapper.update();
-
-      // Reverts back to initial state
-      expect(wrapper.find('SavedSearchRow')).toHaveLength(2);
-    }, 1);
-
-    MockApiClient.mockAsync = false;
-  });
-
-  it('updates a search query to default', function() {
-    const url = `/projects/${org.slug}/${project.slug}/searches/2/`;
-    const update = MockApiClient.addMockResponse({
-      url,
-      method: 'PUT',
-    });
-
-    expect(update).not.toHaveBeenCalled();
-
-    wrapper
-      .find('input[type="radio"]')
-      .first()
-      .simulate('change');
-
-    expect(update).toHaveBeenCalledWith(
-      url,
-      expect.objectContaining({
-        method: 'PUT',
-        data: {
-          isUserDefault: true,
-        },
-      })
-    );
-
-    expect(
-      wrapper
-        .find('input[type="radio"]')
-        .first()
-        .prop('checked')
-    ).toBe(true);
-
-    // Update Team default
-    wrapper
-      .find('input[type="radio"]')
-      .at(1)
-      .simulate('change');
-
-    expect(update).toHaveBeenCalledWith(
-      url,
-      expect.objectContaining({
-        method: 'PUT',
-        data: {
-          isDefault: true,
-        },
-      })
-    );
-
-    expect(
-      wrapper
-        .find('input[type="radio"]')
-        .at(1)
-        .prop('checked')
-    ).toBe(true);
-  });
-
-  it('rolls back update default on PUT error', function() {
-    const url = `/projects/${org.slug}/${project.slug}/searches/2/`;
-    const update = MockApiClient.addMockResponse({
-      url,
-      method: 'PUT',
-      statusCode: 400,
-    });
-
-    MockApiClient.mockAsync = true;
-
-    // User default initial value is false
-    expect(
-      wrapper
-        .find('input[type="radio"]')
-        .first()
-        .prop('checked')
-    ).toBe(false);
-
-    expect(update).not.toHaveBeenCalled();
-
-    // Select as user default
-    wrapper
-      .find('input[type="radio"]')
-      .first()
-      .simulate('change');
-
-    // Should update and be checked
-    expect(
-      wrapper
-        .find('input[type="radio"]')
-        .first()
-        .prop('checked')
-    ).toBe(true);
-
-    // calls API, API returns an error
-
-    setTimeout(() => {
-      wrapper.update();
-
-      // Reverts back to initial state
-      expect(
-        wrapper
-          .find('input[type="radio"]')
-          .first()
-          .prop('checked')
-      ).toBe(false);
-    }, 1);
-
-    MockApiClient.mockAsync = false;
-  });
-});
diff --git a/tests/js/spec/views/stream/savedSearchSelector.spec.jsx b/tests/js/spec/views/stream/savedSearchSelector.spec.jsx
deleted file mode 100644
index 69b75d7c25..0000000000
--- a/tests/js/spec/views/stream/savedSearchSelector.spec.jsx
+++ /dev/null
@@ -1,130 +0,0 @@
-import React from 'react';
-import {mount} from 'enzyme';
-
-import SavedSearchSelector from 'app/views/stream/savedSearchSelector';
-
-describe('SavedSearchSelector', function() {
-  let wrapper;
-  let props;
-
-  let organization;
-  let projectId;
-  let savedSearchList;
-  const onCreate = jest.fn();
-  const onSelect = jest.fn();
-
-  beforeEach(function() {
-    projectId = 'test-project';
-    organization = TestStubs.Organization({slug: 'test-org'});
-    savedSearchList = [
-      {
-        id: '789',
-        query: 'is:unresolved',
-        name: 'Unresolved',
-        projectId,
-      },
-      {
-        id: '122',
-        query: 'is:unresolved assigned:me',
-        name: 'Assigned to me',
-        projectId,
-      },
-    ];
-
-    const access = new Set(['project:write']);
-
-    props = {
-      projectId,
-      organization,
-      savedSearchList,
-      access,
-      onSavedSearchCreate: onCreate,
-      onSavedSearchSelect: onSelect,
-      query: '',
-    };
-  });
-
-  describe('getTitle', function() {
-    beforeEach(function() {
-      wrapper = mount(<SavedSearchSelector {...props} />, TestStubs.routerContext());
-    });
-
-    it('defaults to custom search', function() {
-      const instance = wrapper.find('SavedSearchSelector').instance();
-
-      expect(instance.getTitle()).toEqual('Custom Search');
-    });
-
-    it('uses searchId to match', function() {
-      wrapper.setProps({searchId: '789'});
-      const instance = wrapper.find('SavedSearchSelector').instance();
-
-      expect(instance.getTitle()).toEqual('Unresolved');
-    });
-
-    it('uses query to match', function() {
-      wrapper.setProps({query: 'is:unresolved assigned:me'});
-      const instance = wrapper.find('SavedSearchSelector').instance();
-
-      expect(instance.getTitle()).toEqual('Assigned to me');
-    });
-  });
-
-  describe('selecting an option', function() {
-    beforeEach(function() {
-      wrapper = mount(<SavedSearchSelector {...props} />, TestStubs.routerContext());
-    });
-
-    it('calls onSelect when clicked', async function() {
-      wrapper.find('DropdownLink').simulate('click');
-      await wrapper.update();
-
-      const item = wrapper.find('StyledMenuItem a').first();
-      expect(item).toHaveLength(1);
-
-      item.simulate('click');
-      expect(onSelect).toHaveBeenCalled();
-    });
-  });
-
-  describe('render with a projectId', function() {
-    beforeEach(function() {
-      wrapper = mount(<SavedSearchSelector {...props} />, TestStubs.routerContext());
-    });
-
-    it('renders enabled manage and create buttons', function() {
-      wrapper.find('DropdownLink').simulate('click');
-
-      const buttons = wrapper.find('Button');
-      expect(buttons).toHaveLength(2);
-
-      const createButton = buttons.first();
-      expect(createButton.text()).toEqual('Save Current Search');
-      expect(createButton.props().disabled).toBeFalsy();
-
-      const manageButton = buttons.last();
-      expect(manageButton.text()).toEqual('Manage');
-      expect(manageButton.props().disabled).toBeFalsy();
-    });
-  });
-
-  describe('render without a projectId', function() {
-    beforeEach(function() {
-      props.projectId = null;
-      wrapper = mount(<SavedSearchSelector {...props} />, TestStubs.routerContext());
-    });
-
-    it('renders disabled manage and create buttons', function() {
-      wrapper.find('DropdownLink').simulate('click');
-
-      const buttons = wrapper.find('Button');
-      expect(buttons).toHaveLength(2);
-
-      const createButton = buttons.first();
-      expect(createButton.props().disabled).toBeTruthy();
-
-      const manageButton = buttons.last();
-      expect(manageButton.props().disabled).toBeTruthy();
-    });
-  });
-});
