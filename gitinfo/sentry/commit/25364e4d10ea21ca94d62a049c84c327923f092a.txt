commit 25364e4d10ea21ca94d62a049c84c327923f092a
Author: Dena Mwangi <dena@getsentry.com>
Date:   Tue Oct 24 11:00:23 2017 -0700

    ref: Add method to User for grabbing proper name for salutation (#6405)
    
    * Add method to grab proper first name for salutation from User

diff --git a/src/sentry/models/user.py b/src/sentry/models/user.py
index 0775896c45..157a73b913 100644
--- a/src/sentry/models/user.py
+++ b/src/sentry/models/user.py
@@ -138,6 +138,11 @@ class User(BaseModel, AbstractBaseUser):
     def get_short_name(self):
         return self.username
 
+    def get_salutation_name(self):
+        name = self.name or self.username.split('@', 1)[0].split('.', 1)[0]
+        first_name = name.split(' ', 1)[0]
+        return first_name.capitalize()
+
     def get_avatar_type(self):
         avatar = self.avatar.first()
         if avatar:
diff --git a/tests/sentry/models/test_user.py b/tests/sentry/models/test_user.py
index 4bac29d694..528442d6ab 100644
--- a/tests/sentry/models/test_user.py
+++ b/tests/sentry/models/test_user.py
@@ -1,9 +1,21 @@
 from __future__ import absolute_import
 
-from sentry.models import Authenticator, OrganizationMember, UserEmail
+from sentry.models import Authenticator, OrganizationMember, User, UserEmail
 from sentry.testutils import TestCase
 
 
+class UserDetailsTest(TestCase):
+    def test_salutation(self):
+        user = self.create_user(email='a@example.com', username='a@example.com')
+        assert user.get_salutation_name() == 'A'
+
+        user.update(name='hello world', email='b@example.com')
+        user = User.objects.get(id=user.id)
+        assert user.name == 'hello world'
+        assert user.email == 'b@example.com'
+        assert user.get_salutation_name() == 'Hello'
+
+
 class UserMergeToTest(TestCase):
     def test_simple(self):
         from_user = self.create_user('foo@example.com')
