commit 438a1c6119f1b140a04bb71481a5fbe612b85772
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Wed May 20 19:16:51 2020 +0200

    feat(pii): Added regex match help text (#18938)

diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesForm/dataPrivacyRulesForm.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesForm/dataPrivacyRulesForm.tsx
index 21bf3a92bd..f7edc140ad 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesForm/dataPrivacyRulesForm.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesForm/dataPrivacyRulesForm.tsx
@@ -103,6 +103,7 @@ const DataPrivacyRulesForm = ({
         onChange={(value: string) => {
           onChange('source', value);
         }}
+        isRegExMatchesSelected={type === RuleType.PATTERN}
         value={source}
         onBlur={onValidate('source')}
         suggestions={sourceSuggestions}
diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesForm/source.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesForm/source.tsx
index acca83d2c8..54189cd644 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesForm/source.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesForm/source.tsx
@@ -18,6 +18,7 @@ type Props = {
   value: string;
   onChange: (value: string) => void;
   suggestions: Array<SourceSuggestion>;
+  isRegExMatchesSelected: boolean;
   error?: string;
   onBlur?: (event: React.KeyboardEvent<HTMLInputElement>) => void;
   disabled?: boolean;
@@ -29,6 +30,7 @@ type State = {
   activeSuggestion: number;
   showSuggestions: boolean;
   hideCaret: boolean;
+  help?: string;
 };
 
 class Source extends React.Component<Props, State> {
@@ -50,6 +52,13 @@ class Source extends React.Component<Props, State> {
       this.loadFieldValues(this.props.value);
       this.hideSuggestions();
     }
+
+    if (
+      prevProps.isRegExMatchesSelected !== this.props.isRegExMatchesSelected ||
+      prevProps.value !== this.props.value
+    ) {
+      this.checkPossiblyRegExMatchExpression(this.props.value);
+    }
   }
 
   selectorField = React.createRef<HTMLDivElement>();
@@ -226,6 +235,35 @@ class Source extends React.Component<Props, State> {
     });
   };
 
+  checkPossiblyRegExMatchExpression = (value: string) => {
+    const {isRegExMatchesSelected} = this.props;
+    const {help} = this.state;
+
+    if (isRegExMatchesSelected) {
+      if (help) {
+        this.setState({help: ''});
+      }
+      return;
+    }
+
+    const isPossiblyARegularExpression = RegExp('^/.*/g?$').test(value);
+
+    if (help) {
+      if (!isPossiblyARegularExpression) {
+        this.setState({
+          help: '',
+        });
+      }
+      return;
+    }
+
+    if (isPossiblyARegularExpression) {
+      this.setState({
+        help: t("You might want to change Data Type's value to 'Regex matches'"),
+      });
+    }
+  };
+
   handleChange = (newValue: string) => {
     this.loadFieldValues(newValue);
     this.props.onChange(newValue);
@@ -352,7 +390,7 @@ class Source extends React.Component<Props, State> {
 
   render() {
     const {error, disabled, value, onBlur} = this.props;
-    const {showSuggestions, suggestions, activeSuggestion, hideCaret} = this.state;
+    const {showSuggestions, suggestions, activeSuggestion, hideCaret, help} = this.state;
 
     return (
       <Wrapper ref={this.selectorField} hideCaret={hideCaret}>
@@ -364,6 +402,7 @@ class Source extends React.Component<Props, State> {
           value={value}
           onKeyDown={this.handleKeyDown}
           error={error}
+          help={help}
           onBlur={onBlur}
           onFocus={this.handleFocus}
           disabled={disabled}
diff --git a/tests/js/spec/views/settings/components/dataPrivacyRulesPanel/source.tsx b/tests/js/spec/views/settings/components/dataPrivacyRulesPanel/source.tsx
index 30777cfbef..fd87c0896b 100644
--- a/tests/js/spec/views/settings/components/dataPrivacyRulesPanel/source.tsx
+++ b/tests/js/spec/views/settings/components/dataPrivacyRulesPanel/source.tsx
@@ -15,6 +15,7 @@ function renderComponent({
 }: Partial<Source['props']>) {
   return mountWithTheme(
     <Source
+      isRegExMatchesSelected={false}
       suggestions={defaultSuggestions}
       onChange={onChange}
       value={value}
