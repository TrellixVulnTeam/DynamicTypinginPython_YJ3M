commit 95166099af6e286709dd688954827b452b3271e1
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Aug 30 17:45:47 2011 -0700

    Load frequency chart asynchronously

diff --git a/sentry/templates/sentry/group/details.html b/sentry/templates/sentry/group/details.html
index a27d7c1165..cff9ea0430 100644
--- a/sentry/templates/sentry/group/details.html
+++ b/sentry/templates/sentry/group/details.html
@@ -78,92 +78,11 @@
                 {{ traceback }}
             {% endif %}
             
-            {% with group|chart_data as chart_data %}
-                {% if chart_data %}
-                <script type="text/javascript">
-                $(document).ready(function() {
-                    new Highcharts.Chart({
-                        chart: {
-                            renderTo: 'chart',
-                            zoomType: 'x',
-                            marginLeft: 50,
-                            marginRight: 20,
-                            marginTop: 20,
-                            marginBottom: 40,
-                            backgroundColor: '#eeeeee',
-                            showAxes: false,
-                            height: 200
-                        },
-                        title: {
-                            text: false
-                        },
-                        xAxis: {
-                            type: 'datetime',
-                            maxZoom: 24 * 3600000, // 1 day
-                            title: {
-                                text: false
-                            },
-                            showFirstLabel: false,
-                            dateTimeLabelFormats: {
-                                second: '%H:%M:%S',
-                                minute: '%H:%M',
-                                hour: '%d %b %H:%M',
-                                day: '%e. %b',
-                                week: '%e. %b',
-                                month: '%b \'%y',
-                                year: '%Y'
-                            }
-                        },
-                        yAxis: {
-                            title: {
-                                text: false
-                            }
-                        },
-                        tooltip: {
-                            formatter: function() {
-                                return '<strong>'+
-                                    Highcharts.dateFormat('%A %B %e %Y<br/>%I:00 %p', this.x) + '</strong><br/>'+
-                                    this.y+' records';
-                            }
-                        },
-                        series: [{
-                            pointStart: new Date() - {{ chart_data.points|length }} * 3600000,
-                            pointInterval: 3600 * 1000,
-                            type: 'area',
-                            data: {{ chart_data.points|to_json }}
-                        }],
-                        legend: {
-                            enabled: false
-                        },
-                        plotOptions: {
-                            area: {
-                                lineWidth: 1,
-                                marker: {
-                                    enabled: false,
-                                    states: {
-                                        hover: {
-                                            enabled: true,
-                                            radius: 5
-                                        }
-                                    }
-                                },
-                                shadow: false,
-                                states: {
-                                    hover: {
-                                        lineWidth: 1
-                                    }
-                                }
-                            }
-                        },
-                    });
-                });
-                </script>
-                <h2>{% trans "Frequency" %}</h2>
-                <div id="chart">
-                    <noscript>{% trans "Get yourself some JavaScripts dood" %}</noscript>
-                </div>
-                {% endif %}
-            {% endwith %}
+            <h2>{% trans "Frequency" %}</h2>
+            <div id="chart">
+                <noscript>{% trans "Get yourself some JavaScripts dood" %}</noscript>
+                <p>Loading...</p>
+            </div>
 
             <div id="requestinfo">
                 <h2>{% trans "Additional Data" %}</h2>
@@ -217,4 +136,93 @@
             {% endif %}
         </div>
     {% endblock %}
+    <script type="text/javascript">
+    $(document).ready(function() {
+        $.ajax({
+            url: Sentry.options.apiUrl,
+            type: 'post',
+            dataType: 'json',
+            data: {
+                op: 'chart',
+                gid: '{{ group.id }}'
+            },
+            success: function(data){
+                new Highcharts.Chart({
+                    chart: {
+                        renderTo: 'chart',
+                        zoomType: 'x',
+                        marginLeft: 50,
+                        marginRight: 20,
+                        marginTop: 20,
+                        marginBottom: 40,
+                        backgroundColor: '#eeeeee',
+                        showAxes: false,
+                        height: 200
+                    },
+                    title: {
+                        text: false
+                    },
+                    xAxis: {
+                        type: 'datetime',
+                        maxZoom: 24 * 3600000, // 1 day
+                        title: {
+                            text: false
+                        },
+                        showFirstLabel: false,
+                        dateTimeLabelFormats: {
+                            second: '%H:%M:%S',
+                            minute: '%H:%M',
+                            hour: '%d %b %H:%M',
+                            day: '%e. %b',
+                            week: '%e. %b',
+                            month: '%b \'%y',
+                            year: '%Y'
+                        }
+                    },
+                    yAxis: {
+                        title: {
+                            text: false
+                        }
+                    },
+                    tooltip: {
+                        formatter: function() {
+                            return '<strong>'+
+                                Highcharts.dateFormat('%A %B %e %Y<br/>%I:00 %p', this.x) + '</strong><br/>'+
+                                this.y+' records';
+                        }
+                    },
+                    series: [{
+                        pointStart: new Date() - data.points.length * 3600000,
+                        pointInterval: 3600 * 1000,
+                        type: 'area',
+                        data: data.points
+                    }],
+                    legend: {
+                        enabled: false
+                    },
+                    plotOptions: {
+                        area: {
+                            lineWidth: 1,
+                            marker: {
+                                enabled: false,
+                                states: {
+                                    hover: {
+                                        enabled: true,
+                                        radius: 5
+                                    }
+                                }
+                            },
+                            shadow: false,
+                            states: {
+                                hover: {
+                                    lineWidth: 1
+                                }
+                            }
+                        }
+                    }
+                });
+            }
+        });
+    });
+    </script>
 {% endblock %}
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index fbb5bfacc6..d92387b35f 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -55,46 +55,6 @@ def with_priority(result_list, key='score'):
 def num_digits(value):
     return len(str(value))
 
-@register.filter
-def chart_data(group, max_days=90):
-    hours = max_days*24
-
-    today = datetime.datetime.now().replace(microsecond=0, second=0, minute=0)
-    min_date = today - datetime.timedelta(hours=hours)
-
-    if hasattr(group, '_state'):
-        db = group._state.db
-    else:
-        db = 'default'
-
-    conn = connections[db]
-
-    if get_db_engine(getattr(conn, 'alias', 'default')).startswith('oracle'):
-        method = conn.ops.date_trunc_sql('hh24', 'datetime')
-    else:
-        method = conn.ops.date_trunc_sql('hour', 'datetime')
-
-    chart_qs = list(group.message_set.all()\
-                      .filter(datetime__gte=min_date)\
-                      .extra(select={'grouper': method}).values('grouper')\
-                      .annotate(num=Count('id')).values_list('grouper', 'num')\
-                      .order_by('grouper'))
-
-    if not chart_qs:
-        return {}
-
-    rows = dict(chart_qs)
-
-    #just skip zeroes
-    first_seen = hours
-    while not rows.get(today - datetime.timedelta(hours=first_seen)) and first_seen > 24:
-        first_seen -= 1
-
-    return {
-        'points': [rows.get(today-datetime.timedelta(hours=d), 0) for d in xrange(first_seen, -1, -1)],
-        'categories': [str(today-datetime.timedelta(hours=d)) for d in xrange(first_seen, -1, -1)],
-    }
-
 @register.filter
 def to_json(data):
     return json.dumps(data)
diff --git a/sentry/utils/manager.py b/sentry/utils/manager.py
index 8b9fcf4257..6b73b30cec 100644
--- a/sentry/utils/manager.py
+++ b/sentry/utils/manager.py
@@ -3,8 +3,8 @@ import django
 import logging
 import warnings
 
-from django.db import models
-from django.db.models import signals
+from django.db import models, connections
+from django.db.models import signals, Count
 
 from sentry.conf import settings
 from sentry.utils import construct_checksum, get_db_engine
@@ -144,4 +144,43 @@ class SentryManager(models.Manager):
 
 class GroupedMessageManager(SentryManager):
     def get_by_natural_key(self, logger, view, checksum):
-        return self.get(logger=logger, view=view, checksum=checksum)
\ No newline at end of file
+        return self.get(logger=logger, view=view, checksum=checksum)
+
+    def get_chart_data(self, group, max_days=90):
+        hours = max_days*24
+
+        today = datetime.datetime.now().replace(microsecond=0, second=0, minute=0)
+        min_date = today - datetime.timedelta(hours=hours)
+
+        if hasattr(group, '_state'):
+            db = group._state.db
+        else:
+            db = 'default'
+
+        conn = connections[db]
+
+        if get_db_engine(getattr(conn, 'alias', 'default')).startswith('oracle'):
+            method = conn.ops.date_trunc_sql('hh24', 'datetime')
+        else:
+            method = conn.ops.date_trunc_sql('hour', 'datetime')
+            
+        chart_qs = list(group.message_set.all()\
+                          .filter(datetime__gte=min_date)\
+                          .extra(select={'grouper': method}).values('grouper')\
+                          .annotate(num=Count('id')).values_list('grouper', 'num')\
+                          .order_by('grouper'))
+
+        if not chart_qs:
+            return {}
+
+        rows = dict(chart_qs)
+
+        #just skip zeroes
+        first_seen = hours
+        while not rows.get(today - datetime.timedelta(hours=first_seen)) and first_seen > 24:
+            first_seen -= 1
+
+        return {
+            'points': [rows.get(today-datetime.timedelta(hours=d), 0) for d in xrange(first_seen, -1, -1)],
+            'categories': [str(today-datetime.timedelta(hours=d)) for d in xrange(first_seen, -1, -1)],
+        }
\ No newline at end of file
diff --git a/sentry/web/views.py b/sentry/web/views.py
index 28292e8b63..5349a73d26 100644
--- a/sentry/web/views.py
+++ b/sentry/web/views.py
@@ -282,8 +282,23 @@ def ajax_handler(request):
         response = HttpResponse(json.dumps(data))
         response['Content-Type'] = 'application/json'
         return response
-        
-    if op in ['notification','poll','resolve', 'clear']:
+    
+    def chart(request):
+        gid = request.REQUEST.get('gid')
+        if not gid:
+            return HttpResponseForbidden()
+
+        try:
+            group = GroupedMessage.objects.get(pk=gid)
+        except GroupedMessage.DoesNotExist:
+            return HttpResponseForbidden()
+        data = GroupedMessage.objects.get_chart_data(group)
+
+        response = HttpResponse(json.dumps(data))
+        response['Content-Type'] = 'application/json'
+        return response
+    
+    if op in ['notification','poll','resolve', 'clear','chart']:
         return locals()[op](request)  
     else:
         return HttpResponseBadRequest()
