commit 8ca3cb09c4a258307a2af2aea5c8ea660b54f2cd
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Apr 21 12:54:47 2015 -0700

    Minor adjustments to how member lists work

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index 02a3112f7d..e4efe8ac68 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -128,7 +128,7 @@ class GroupDetailsEndpoint(GroupEndpoint):
 
         # TODO(dcramer): we should allow assignment to anyone who has membership
         # even if that membership is not SSO linked
-        if result.get('assignedTo') and not group.project.has_access(result['assignedTo']):
+        if result.get('assignedTo') and not group.project.member_set.filter(user=result['assignedTo']).exists():
             return Response({'detail': 'Cannot assign to non-team member'}, status=400)
 
         if result.get('status') == 'resolved':
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 234678ae1c..485609fac3 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -203,15 +203,14 @@ class Project(Model):
             Q(teams=self.team) | Q(has_global_access=True),
             user__is_active=True,
             organization=self.organization,
-        )
+        ).distinct()
 
     def has_access(self, user, access=None):
         from sentry.models import AuthIdentity, OrganizationMember
 
         warnings.warn('Project.has_access is deprecated.', DeprecationWarning)
 
-        queryset = self.member_set.filter(
-            user=user)
+        queryset = self.member_set.filter(user=user)
 
         if access is not None:
             queryset = queryset.filter(type__lte=access)
