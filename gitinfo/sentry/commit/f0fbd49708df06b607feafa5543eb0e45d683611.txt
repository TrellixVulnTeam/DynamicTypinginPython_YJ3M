commit f0fbd49708df06b607feafa5543eb0e45d683611
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Jan 9 10:23:32 2020 -0800

    fix(ui): Fix redirect after creating/editing Metric Alert rules (#16342)
    
    Also makes sure that the index redirects to combined alert listing view.

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index b89690474b..6696f0c033 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -287,6 +287,7 @@ function routes() {
         />
 
         <Route path="issue-rules/" component={null}>
+          <IndexRedirect to="/settings/:orgId/projects/:projectId/alerts-v2/" />
           <Route
             path="new/"
             name="New Alert Rule"
@@ -306,6 +307,7 @@ function routes() {
         </Route>
 
         <Route path="metric-rules/" component={null}>
+          <IndexRedirect to="/settings/:orgId/projects/:projectId/alerts-v2/" />
           <Route
             name="New Incident Rule"
             path="new/"
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/create.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/create.tsx
index 9104b80081..dc9c846c90 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/create.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/create.tsx
@@ -25,7 +25,7 @@ class IncidentRulesCreate extends React.Component<Props> {
   handleSubmitSuccess = () => {
     const {params, routes, router, location} = this.props;
 
-    router.push(recreateRoute('metric-rules/', {params, routes, location, stepBack: -1}));
+    router.push(recreateRoute('', {params, routes, location, stepBack: -1}));
   };
 
   render() {
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/details.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/details.tsx
index 7cc1222642..653ca4ad8b 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/details.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/details.tsx
@@ -7,6 +7,7 @@ import {addErrorMessage} from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
 import RuleForm from 'app/views/settings/incidentRules/ruleForm';
+import recreateRoute from 'app/utils/recreateRoute';
 import withOrganization from 'app/utils/withOrganization';
 
 type RouteParams = {
@@ -43,6 +44,12 @@ class IncidentRulesDetails extends AsyncView<Props, State> {
     ];
   }
 
+  handleSubmitSuccess = () => {
+    const {params, routes, router, location} = this.props;
+
+    router.push(recreateRoute('', {params, routes, location, stepBack: -2}));
+  };
+
   // XXX(billy): This is temporary, ideally we want actions fetched with triggers?
   onRequestSuccess = async ({data}) => {
     const {orgId, incidentRuleId} = this.props.params;
@@ -91,6 +98,7 @@ class IncidentRulesDetails extends AsyncView<Props, State> {
         {...this.props}
         incidentRuleId={incidentRuleId}
         rule={this.getActions(rule, this.state.actions)}
+        onSubmitSuccess={this.handleSubmitSuccess}
       />
     );
   }
