commit 0d3ea0a908ca674e75bfefd30c83f41785eacab4
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Nov 26 12:21:34 2016 -0600

    [plugins] add extensible context

diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index c1bb822070..a68d4e8b34 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
 
 import GroupEventDataSection from './eventDataSection';
+import plugins from '../../plugins';
 import {objectIsEmpty, toTitleCase, defined} from '../../utils';
 
 const CONTEXT_TYPES = {
@@ -26,7 +27,7 @@ const ContextChunk = React.createClass({
     if (defined(value.title)) {
       title = value.title;
     } else {
-      let Component = CONTEXT_TYPES[type] || CONTEXT_TYPES.default;
+      let Component = CONTEXT_TYPES[type] || plugins.contexts[type] || CONTEXT_TYPES.default;
       if (Component.getTitle) {
         title = Component.getTitle(value);
       }
diff --git a/src/sentry/static/sentry/app/plugins/baseContext.jsx b/src/sentry/static/sentry/app/plugins/baseContext.jsx
new file mode 100644
index 0000000000..829ebfbc6c
--- /dev/null
+++ b/src/sentry/static/sentry/app/plugins/baseContext.jsx
@@ -0,0 +1,22 @@
+import React from 'react';
+
+import ContextBlock from '../components/events/contexts/contextBlock';
+
+class BaseContext extends React.Component {
+  render() {
+    return <ContextBlock data={this.props.data} alias={this.props.alias} />;
+  }
+}
+
+BaseContext.displayName = 'BaseContext';
+
+BaseContext.propTypes = {
+  alias: React.PropTypes.string.isRequired,
+  data: React.PropTypes.object.isRequired,
+};
+
+BaseContext.getTitle = function(value) {
+  return value;
+};
+
+export default BaseContext;
diff --git a/src/sentry/static/sentry/app/plugins/index.jsx b/src/sentry/static/sentry/app/plugins/index.jsx
index 67763dabb0..cb72810d3e 100644
--- a/src/sentry/static/sentry/app/plugins/index.jsx
+++ b/src/sentry/static/sentry/app/plugins/index.jsx
@@ -1,16 +1,23 @@
 import Registry from './registry';
 import BasePlugin from './basePlugin';
+import BaseContext from './baseContext';
 import DefaultIssuePlugin from './defaultIssuePlugin';
 
+const contexts = {};
 const registry = new Registry();
 
 export {BasePlugin, registry, DefaultIssuePlugin};
 
 export default {
+    BaseContext: BaseContext,
     BasePlugin: BasePlugin,
     DefaultIssuePlugin: DefaultIssuePlugin,
 
     add: registry.add.bind(registry),
+    addContext: function(id, component) {
+        contexts[id] = component;
+    },
+    contexts: contexts,
     get: registry.get.bind(registry),
     isLoaded: registry.isLoaded.bind(registry),
     load: registry.load.bind(registry),
