commit e20a4245e728fedf740a0d2c3db6528039b007db
Author: Ayesha Omarali <ayesha.omarali@gmail.com>
Date:   Wed Oct 17 15:33:43 2018 -0700

    fix: requestPromise to include jqXHR (#10090)
    
    * fix requestPromise to include jqXHR
    
    * refactored var names, changed obj to array resp in resolve
    
    * fix
    
    * destructured in fn params
    
    * adding default
    
    * assign variable to success string arg
    
    * Update src/sentry/static/sentry/app/api.jsx
    
    * Update src/sentry/static/sentry/app/api.jsx
    
    * refactoring

diff --git a/src/sentry/static/sentry/app/__mocks__/api.jsx b/src/sentry/static/sentry/app/__mocks__/api.jsx
index 8310b12f35..e96200fb06 100644
--- a/src/sentry/static/sentry/app/__mocks__/api.jsx
+++ b/src/sentry/static/sentry/app/__mocks__/api.jsx
@@ -68,14 +68,18 @@ class Client {
     };
   }
 
-  requestPromise(url, options) {
-    return new Promise((resolve, reject) =>
-      this.request(url, {
+  requestPromise(path, {includeAllArgs, ...options} = {}) {
+    return new Promise((resolve, reject) => {
+      this.request(path, {
         ...options,
-        success: resolve,
-        error: reject,
-      })
-    );
+        success: (data, ...args) => {
+          includeAllArgs ? resolve([data, ...args]) : resolve(data);
+        },
+        error: (error, ...args) => {
+          reject(error);
+        },
+      });
+    });
   }
 
   request(url, options) {
diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 1f3c717383..243959348e 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -191,13 +191,12 @@ export class Client {
     return this.activeRequests[id];
   }
 
-  requestPromise(path, options = {}) {
+  requestPromise(path, {includeAllArgs, ...options} = {}) {
     return new Promise((resolve, reject) => {
       this.request(path, {
         ...options,
         success: (data, ...args) => {
-          // This fails if we need jqXhr :(
-          resolve(data);
+          includeAllArgs ? resolve([data, ...args]) : resolve(data);
         },
         error: (error, ...args) => {
           reject(error);
