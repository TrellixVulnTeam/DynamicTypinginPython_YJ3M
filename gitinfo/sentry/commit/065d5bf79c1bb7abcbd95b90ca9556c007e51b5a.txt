commit 065d5bf79c1bb7abcbd95b90ca9556c007e51b5a
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Nov 8 12:36:01 2018 -0800

    test(discover): Add percy snapshots (#10440)

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
index 1590bfece5..f6caba17b9 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
@@ -5,6 +5,7 @@ import {Box, Flex} from 'grid-emotion';
 
 import SentryTypes from 'app/sentryTypes';
 import {t} from 'app/locale';
+import getDynamicText from 'app/utils/getDynamicText';
 import Link from 'app/components/link';
 import BarChart from 'app/components/charts/barChart';
 import LineChart from 'app/components/charts/lineChart';
@@ -132,7 +133,9 @@ export default class Result extends React.Component {
   renderSavedQueryHeader() {
     return (
       <Flex align="center">
-        <Heading>{this.props.savedQuery.name}</Heading>
+        <Heading>
+          {getDynamicText({value: this.props.savedQuery.name, fixed: 'saved query'})}
+        </Heading>
         <SavedQueryAction onClick={this.props.onToggleEdit}>
           <InlineSvg src="icon-edit" />
         </SavedQueryAction>
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
index 500f2ae2ca..a724c4aebf 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
@@ -3,6 +3,7 @@ import moment from 'moment';
 import {Flex} from 'grid-emotion';
 
 import SentryTypes from 'app/sentryTypes';
+import getDynamicText from 'app/utils/getDynamicText';
 
 import LoadingIndicator from 'app/components/loadingIndicator';
 import {t, tct} from 'app/locale';
@@ -81,10 +82,13 @@ export default class SavedQueries extends React.Component {
     return (
       <SavedQueryListItem key={id} isActive={savedQuery && savedQuery.id === id}>
         <SavedQueryLink to={`/organizations/${organization.slug}/discover/saved/${id}/`}>
-          {name}
+          {getDynamicText({value: name, fixed: 'saved query'})}
           <SavedQueryUpdated>
             {tct('Updated [date] (UTC)', {
-              date: moment.utc(dateUpdated).format('MMM DD HH:mm:ss'),
+              date: getDynamicText({
+                value: moment.utc(dateUpdated).format('MMM DD HH:mm:ss'),
+                fixed: 'update-date',
+              }),
             })}
           </SavedQueryUpdated>
         </SavedQueryLink>
diff --git a/tests/acceptance/test_organization_discover.py b/tests/acceptance/test_organization_discover.py
new file mode 100644
index 0000000000..972da5fb4a
--- /dev/null
+++ b/tests/acceptance/test_organization_discover.py
@@ -0,0 +1,68 @@
+from __future__ import absolute_import
+
+from sentry.testutils import AcceptanceTestCase
+
+
+class OrganizationDiscoverTest(AcceptanceTestCase):
+    def setUp(self):
+        super(OrganizationDiscoverTest, self).setUp()
+        self.user = self.create_user('foo@example.com')
+        self.org = self.create_organization(owner=None, name='Rowdy Tiger')
+        self.team = self.create_team(organization=self.org, name='Mariachi Band')
+        self.create_member(
+            user=self.user,
+            organization=self.org,
+            role='owner',
+            teams=[self.team],
+        )
+        self.project = self.create_project(
+            organization=self.org,
+            teams=[self.team],
+            name='Bengal',
+        )
+        self.group = self.create_group(project=self.project)
+        self.event = self.create_event(
+            group=self.group,
+            message="message!",
+            platform="python",
+        )
+
+        self.login_as(self.user)
+        self.path = u'/organizations/{}/discover/'.format(self.org.slug)
+
+    def test_no_access(self):
+        self.browser.get(self.path)
+        self.browser.wait_until_not('.loading')
+        self.browser.snapshot('discover - no access')
+
+    def test_query_builder(self):
+        with self.feature('organizations:discover'):
+            self.browser.get(self.path)
+            self.browser.wait_until_not('.loading')
+            self.browser.snapshot('discover - query builder')
+
+    def test_run_query(self):
+        with self.feature('organizations:discover'):
+            self.browser.get(self.path)
+            self.browser.wait_until_not('.loading')
+            self.browser.find_element_by_xpath("//button//span[contains(text(), 'Run')]").click()
+            self.browser.wait_until_not('.loading')
+            self.browser.snapshot('discover - query results')
+
+    def test_save_query_edit(self):
+        with self.feature('organizations:discover'):
+            self.browser.get(self.path)
+            self.browser.wait_until_not('.loading')
+            self.browser.find_element_by_xpath("//button//span[contains(text(), 'Save')]").click()
+            self.browser.get(self.path + 'saved/1/?edit=true')
+            self.browser.wait_until_not('.loading')
+            self.browser.snapshot('discover - saved query')
+
+    def test_saved_query_list(self):
+        with self.feature('organizations:discover'):
+            self.browser.get(self.path)
+            self.browser.wait_until_not('.loading')
+            self.browser.find_element_by_xpath("//button//span[contains(text(), 'Save')]").click()
+            self.browser.get(self.path + '?view=saved')
+            self.browser.wait_until_not('.loading')
+            self.browser.snapshot('discover - saved query list')
