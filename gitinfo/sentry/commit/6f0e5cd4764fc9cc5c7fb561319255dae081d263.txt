commit 6f0e5cd4764fc9cc5c7fb561319255dae081d263
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Feb 3 16:25:13 2013 -0800

    Basic (copied) tests for Project.objects.get_for_user

diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index 3c0cf1a584..ed0585ae8c 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -7,6 +7,7 @@ import mock
 import pytest
 
 from django.utils import timezone
+from sentry.constants import MEMBER_USER
 from sentry.interfaces import Interface
 from sentry.manager import get_checksum_from_event
 from sentry.models import Event, Group, Project, MessageCountByMinute, ProjectCountByMinute, \
@@ -310,3 +311,38 @@ class GetChecksumFromEventTest(TestCase):
         stack_comp_hash.assert_called_once_with(interfaces=event.interfaces)
         assert not http_comp_hash.called
         assert checksum == '3858f62230ac3c915f300c664312c63f'
+
+
+class ProjectManagerTest(TestCase):
+    def setUp(self):
+        self.project = Project.objects.get()
+        self.project.update(public=True)
+        self.project2 = Project.objects.create(name='Test', slug='test', owner=self.user, public=False)
+
+    @mock.patch('sentry.models.Team.objects.get_for_user', mock.Mock(return_value={}))
+    def test_includes_public_projects_without_access(self):
+        project_list = Project.objects.get_for_user(self.user)
+        self.assertEquals(len(project_list), 1)
+        self.assertIn(self.project, project_list)
+
+    @mock.patch('sentry.models.Team.objects.get_for_user', mock.Mock(return_value={}))
+    def test_does_exclude_public_projects_without_access(self):
+        project_list = Project.objects.get_for_user(self.user, MEMBER_USER)
+        self.assertEquals(len(project_list), 0)
+
+    @mock.patch('sentry.models.Team.objects.get_for_user')
+    def test_does_include_private_projects_without_access(self, get_for_user):
+        get_for_user.return_value = {self.project2.team.id: self.project2.team}
+        project_list = Project.objects.get_for_user(self.user)
+        get_for_user.assert_called_once_with(self.user, None)
+        self.assertEquals(len(project_list), 2)
+        self.assertIn(self.project, project_list)
+        self.assertIn(self.project2, project_list)
+
+    @mock.patch('sentry.models.Team.objects.get_for_user')
+    def test_does_exclude_public_projects_but_include_private_with_access(self, get_for_user):
+        get_for_user.return_value = {self.project2.team.id: self.project2.team}
+        project_list = Project.objects.get_for_user(self.user, MEMBER_USER)
+        get_for_user.assert_called_once_with(self.user, MEMBER_USER)
+        self.assertEquals(len(project_list), 1)
+        self.assertIn(self.project2, project_list)
diff --git a/tests/sentry/web/helpers/tests.py b/tests/sentry/web/helpers/tests.py
index 1d64dc148e..c6073f6ee1 100644
--- a/tests/sentry/web/helpers/tests.py
+++ b/tests/sentry/web/helpers/tests.py
@@ -4,7 +4,6 @@ from __future__ import absolute_import
 
 import mock
 
-from django.contrib.auth.models import User
 from django.core.urlresolvers import reverse
 from sentry.constants import MEMBER_USER
 from sentry.models import Project
@@ -14,7 +13,6 @@ from sentry.testutils import TestCase
 
 class GetProjectListTest(TestCase):
     def setUp(self):
-        self.user = User.objects.create(username="admin", email="admin@localhost")
         self.project = Project.objects.get()
         self.project.update(public=True)
         self.project2 = Project.objects.create(name='Test', slug='test', owner=self.user, public=False)
