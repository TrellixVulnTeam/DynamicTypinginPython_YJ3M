commit 15c5ee4e7456915d3741d7e3031e63dbd0f84847
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Jul 26 13:32:41 2016 +0200

    Added utilty function for dumping JSON with HTML escaping and use it for react config.

diff --git a/src/sentry/templatetags/sentry_api.py b/src/sentry/templatetags/sentry_api.py
index 9d9aedd2ba..039f4c2d04 100644
--- a/src/sentry/templatetags/sentry_api.py
+++ b/src/sentry/templatetags/sentry_api.py
@@ -26,10 +26,9 @@ def serialize(context, obj):
 
 @register.simple_tag
 def convert_to_json(obj, escape=False):
-    data = json.dumps(obj)
     if escape:
-        data = data.replace('<', '&lt;').replace('>', '&gt;')
-    return mark_safe(data)
+        return json.dumps_htmlsafe(obj)
+    return mark_safe(json.dumps(obj))
 
 
 @register.simple_tag(takes_context=True)
diff --git a/src/sentry/templatetags/sentry_react.py b/src/sentry/templatetags/sentry_react.py
index 15e5307c41..2a65f1671e 100644
--- a/src/sentry/templatetags/sentry_react.py
+++ b/src/sentry/templatetags/sentry_react.py
@@ -5,7 +5,6 @@ import sentry
 
 from django import template
 from django.conf import settings
-from django.utils.html import mark_safe
 from django.contrib.messages import get_messages
 from pkg_resources import parse_version
 
@@ -136,4 +135,4 @@ def get_react_config(context):
             'isAuthenticated': False,
             'user': None,
         })
-    return mark_safe(json.dumps(context))
+    return json.dumps_htmlsafe(context)
diff --git a/src/sentry/utils/json.py b/src/sentry/utils/json.py
index 82f7f534f3..ae0696fc5b 100644
--- a/src/sentry/utils/json.py
+++ b/src/sentry/utils/json.py
@@ -15,6 +15,7 @@ import uuid
 import decimal
 
 from django.utils.timezone import is_aware
+from django.utils.html import mark_safe
 
 
 def better_default_encoder(o):
@@ -76,3 +77,9 @@ def dumps(value, escape=False, **kwargs):
 
 def loads(value, **kwargs):
     return _default_decoder.decode(value)
+
+
+def dumps_htmlsafe(obj):
+    data = dumps(obj)
+    data = data.replace('<', '&lt;').replace('>', '&gt;')
+    return mark_safe(data)
