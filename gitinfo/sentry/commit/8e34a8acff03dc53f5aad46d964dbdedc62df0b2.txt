commit 8e34a8acff03dc53f5aad46d964dbdedc62df0b2
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Oct 23 11:25:54 2018 -0700

    fix(ui): Fix global events stream URL parameters (#10225)
    
    e.g. period
    
    Also improves time selector switching (EventsTable is now a PureComponent).
    
    Fixes APP-652

diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
index 570810f683..a9c5e9f245 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
@@ -11,25 +11,6 @@ import SentryTypes from 'app/sentryTypes';
 import ToolBox from 'app/components/charts/components/toolBox';
 import withApi from 'app/utils/withApi';
 
-const EventRequest = withApi(
-  class EventRequest extends React.Component {
-    render() {
-      return (
-        <EventsContext.Consumer>
-          {context => (
-            <HealthRequestWithParams
-              {...context}
-              projects={context.project || []}
-              environments={context.environment || []}
-              {...this.props}
-            />
-          )}
-        </EventsContext.Consumer>
-      );
-    }
-  }
-);
-
 class EventsChart extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization,
@@ -87,12 +68,10 @@ class EventsChart extends React.Component {
   };
 
   render() {
-    const {organization} = this.props;
-
     return (
       <div>
-        <EventRequest
-          organization={organization}
+        <HealthRequestWithParams
+          {...this.props}
           tag="error.handled"
           includeTimeseries
           interval="1d"
@@ -122,20 +101,29 @@ class EventsChart extends React.Component {
               }}
             />
           )}
-        </EventRequest>
+        </HealthRequestWithParams>
       </div>
     );
   }
 }
 
-class EventsChartContainer extends React.Component {
-  render() {
-    return (
-      <EventsContext.Consumer>
-        {context => <EventsChart {...context} {...this.props} />}
-      </EventsContext.Consumer>
-    );
+const EventsChartContainer = withApi(
+  class EventsChartContainer extends React.Component {
+    render() {
+      return (
+        <EventsContext.Consumer>
+          {context => (
+            <EventsChart
+              {...context}
+              projects={context.project || []}
+              environments={context.environment || []}
+              {...this.props}
+            />
+          )}
+        </EventsContext.Consumer>
+      );
+    }
   }
-}
+);
 export default EventsChartContainer;
 export {EventsChart};
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
index 7902ab204b..6d834280b1 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
@@ -11,7 +11,7 @@ import IdBadge from 'app/components/idBadge';
 import SentryTypes from 'app/sentryTypes';
 import Tooltip from 'app/components/tooltip';
 
-class EventsTable extends React.Component {
+class EventsTable extends React.PureComponent {
   static propTypes = {
     events: PropTypes.array,
     organization: SentryTypes.Organization,
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
index e264cf980d..40a2588861 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
@@ -41,7 +41,7 @@ class OrganizationEventsContainer extends React.Component {
     const values = {
       project,
       environment,
-      period: query.period || (hasAbsolute ? null : '7d'),
+      period: query.statsPeriod || (hasAbsolute ? null : '7d'),
       start: query.start || null,
       end: query.end || null,
     };
@@ -62,15 +62,27 @@ class OrganizationEventsContainer extends React.Component {
     this.state = OrganizationEventsContainer.getInitialStateFromRouter(props);
   }
 
-  updateParams = obj => {
+  updateParams = ({period, ...obj}) => {
     const {router} = this.props;
     // Reset cursor when changing parameters
     // eslint-disable-next-line no-unused-vars
     const {cursor, ...oldQuery} = router.location.query;
-    const newQuery = {
+
+    // Filter null values
+    const newQuery = Object.entries({
       ...oldQuery,
+      statsPeriod: period,
       ...obj,
-    };
+    })
+      .filter(([key, value]) => value !== null)
+      .reduce(
+        (acc, [key, value]) => ({
+          ...acc,
+          [key]: value,
+        }),
+        {}
+      );
+
     router.push({
       pathname: router.location.pathname,
       query: newQuery,
@@ -94,14 +106,12 @@ class OrganizationEventsContainer extends React.Component {
   };
 
   handleUpdate = type => {
-    this.setState(state => {
+    this.setState(({period, start, end, ...state}) => {
       let newValueObj = {};
 
       if (type === 'period') {
         newValueObj = {
-          period: state.period,
-          start: state.start,
-          end: state.end,
+          ...(typeof period !== 'undefined' ? {period} : {start, end}),
         };
       } else {
         newValueObj = {[type]: state[type]};
diff --git a/src/sentry/static/sentry/app/views/organizationHealth/util/healthRequest.jsx b/src/sentry/static/sentry/app/views/organizationHealth/util/healthRequest.jsx
index 17b89494d3..cfec39a7b3 100644
--- a/src/sentry/static/sentry/app/views/organizationHealth/util/healthRequest.jsx
+++ b/src/sentry/static/sentry/app/views/organizationHealth/util/healthRequest.jsx
@@ -158,6 +158,10 @@ class HealthRequestWithParams extends React.Component {
     this.fetchData();
   }
 
+  componentWillUnmount() {
+    this.unmounting = true;
+  }
+
   fetchData = async () => {
     const {tag} = this.props;
 
@@ -185,6 +189,8 @@ class HealthRequestWithParams extends React.Component {
         : {}),
     });
 
+    if (this.unmounting) return;
+
     this.setState({
       reloading: false,
       tagData,
