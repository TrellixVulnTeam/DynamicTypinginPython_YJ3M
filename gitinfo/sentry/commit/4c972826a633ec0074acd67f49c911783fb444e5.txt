commit 4c972826a633ec0074acd67f49c911783fb444e5
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Mon Nov 13 17:05:35 2017 -0600

    feat(tags): Add environment_id to tagstore create APIs (#6478)
    
    This is *just* dealing with the create APIs. Note that the legacy
    backend ignores the environment that is passed in, but I've made sure to
    pass in a valid environment_id everywhere these methods are called.

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 5b82c4ab46..4e55a273eb 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -710,6 +710,7 @@ class EventManager(object):
                 organization_id=project.organization_id,
                 project_id=project.id,
                 group_id=group.id,
+                environment_id=environment.id,
                 event_id=event.id,
                 tags=tags,
             )
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index c72824c737..735435bcd3 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -14,7 +14,6 @@ import six
 from bitfield import BitField
 from django.conf import settings
 from django.db import IntegrityError, models, transaction
-from django.db.models import F
 from django.utils import timezone
 from django.utils.translation import ugettext_lazy as _
 
@@ -166,20 +165,9 @@ class Project(Model):
                     group_id=group.id,
                 ).update(group_id=other.id)
 
-                for obj in tagstore.get_group_tag_values(group_id=group.id):
-                    obj2, created = tagstore.get_or_create_group_tag_value(
-                        project_id=project.id,
-                        group_id=group.id,
-                        key=obj.key,
-                        value=obj.value,
-                        defaults={'times_seen': obj.times_seen}
-                    )
-                    if not created:
-                        obj2.update(times_seen=F('times_seen') + obj.times_seen)
-
-        for fv in tagstore.get_tag_values(self.id):
-            tagstore.get_or_create_tag_value(project_id=project.id, key=fv.key, value=fv.value)
-            fv.delete()
+                tagstore.merge_group_tag_values_to_project(project.id, group.id)
+
+        tagstore.merge_tag_values_to_project(self.id, project.id)
         self.delete()
 
     def is_internal_project(self):
diff --git a/src/sentry/tagstore/base.py b/src/sentry/tagstore/base.py
index b5586a063b..c997dd1968 100644
--- a/src/sentry/tagstore/base.py
+++ b/src/sentry/tagstore/base.py
@@ -77,6 +77,7 @@ class TagStorage(Service):
         'get_group_tag_values_for_users',
         'get_tags_for_search_filter',
         'update_group_tag_key_values_seen',
+        'merge_group_tag_values_to_project',
 
         'get_tag_value_qs',
         'get_group_tag_value_qs',
@@ -126,51 +127,52 @@ class TagStorage(Service):
 
         return label
 
-    def create_tag_key(self, project_id, key, **kwargs):
+    def create_tag_key(self, project_id, environment_id, key, **kwargs):
         """
-        >>> create_tag_key(1, "key1")
+        >>> create_tag_key(1, 2, "key1")
         """
         raise NotImplementedError
 
-    def get_or_create_tag_key(self, project_id, key, **kwargs):
+    def get_or_create_tag_key(self, project_id, environment_id, key, **kwargs):
         """
-        >>> get_or_create_tag_key(1, "key1")
+        >>> get_or_create_tag_key(1, 2, "key1")
         """
         raise NotImplementedError
 
-    def create_tag_value(self, project_id, key, value, **kwargs):
+    def create_tag_value(self, project_id, environment_id, key, value, **kwargs):
         """
-        >>> create_tag_key(1, "key1", "value1")
+        >>> create_tag_key(1, 2, "key1", "value1")
         """
         raise NotImplementedError
 
-    def get_or_create_tag_value(self, project_id, key, value, **kwargs):
+    def get_or_create_tag_value(self, project_id, environment_id, key, value, **kwargs):
         """
-        >>> get_or_create_tag_key(1, "key1", "value1")
+        >>> get_or_create_tag_key(1, 2, "key1", "value1")
         """
         raise NotImplementedError
 
-    def create_group_tag_key(self, project_id, group_id, key, **kwargs):
+    def create_group_tag_key(self, project_id, group_id, environment_id, key, **kwargs):
         """
-        >>> create_group_tag_key(1, 2, "key1")
+        >>> create_group_tag_key(1, 2, 3, "key1")
         """
         raise NotImplementedError
 
-    def get_or_create_group_tag_key(self, project_id, group_id, key, **kwargs):
+    def get_or_create_group_tag_key(self, project_id, group_id, environment_id, key, **kwargs):
         """
-        >>> get_or_create_group_tag_key(1, 2, "key1")
+        >>> get_or_create_group_tag_key(1, 2, 3, "key1")
         """
         raise NotImplementedError
 
-    def create_group_tag_value(self, project_id, group_id, key, value, **kwargs):
+    def create_group_tag_value(self, project_id, group_id, environment_id, key, value, **kwargs):
         """
-        >>> create_group_tag_value(1, 2, "key1", "value1")
+        >>> create_group_tag_value(1, 2, 3, "key1", "value1")
         """
         raise NotImplementedError
 
-    def get_or_create_group_tag_value(self, project_id, group_id, key, value, **kwargs):
+    def get_or_create_group_tag_value(self, project_id, group_id,
+                                      environment_id, key, value, **kwargs):
         """
-        >>> get_or_create_group_tag_value(1, 2, "key1", "value1")
+        >>> get_or_create_group_tag_value(1, 2, 3, "key1", "value1")
         """
         raise NotImplementedError
 
@@ -280,6 +282,18 @@ class TagStorage(Service):
         """
         raise NotImplementedError
 
+    def merge_tag_values_to_project(self, source_project_id, target_project_id):
+        """
+        >>> merge_tag_values_to_project(1, 2)
+        """
+        raise NotImplementedError
+
+    def merge_group_tag_values_to_project(self, target_project_id, group_id):
+        """
+        >>> merge_group_tag_values_to_project(1, 2)
+        """
+        raise NotImplementedError
+
     def get_tag_value_qs(self, project_id, key, query=None):
         """
         >>> get_tag_value_qs(1, 'environment', query='prod')
diff --git a/src/sentry/tagstore/legacy/backend.py b/src/sentry/tagstore/legacy/backend.py
index 62d93f404b..d41395b6f0 100644
--- a/src/sentry/tagstore/legacy/backend.py
+++ b/src/sentry/tagstore/legacy/backend.py
@@ -13,7 +13,7 @@ import six
 from collections import defaultdict
 from datetime import timedelta
 from django.db import connections, router, IntegrityError, transaction
-from django.db.models import Q, Sum
+from django.db.models import F, Q, Sum
 from django.utils import timezone
 from operator import or_
 from six.moves import reduce
@@ -71,32 +71,33 @@ class LegacyTagStorage(TagStorage):
             GroupTagKey,
         ]
 
-    def create_tag_key(self, project_id, key, **kwargs):
+    def create_tag_key(self, project_id, environment_id, key, **kwargs):
         return TagKey.objects.create(project_id=project_id, key=key, **kwargs)
 
-    def get_or_create_tag_key(self, project_id, key, **kwargs):
+    def get_or_create_tag_key(self, project_id, environment_id, key, **kwargs):
         return TagKey.objects.get_or_create(project_id=project_id, key=key, **kwargs)
 
-    def create_tag_value(self, project_id, key, value, **kwargs):
+    def create_tag_value(self, project_id, environment_id, key, value, **kwargs):
         return TagValue.objects.create(project_id=project_id, key=key, value=value, **kwargs)
 
-    def get_or_create_tag_value(self, project_id, key, value, **kwargs):
+    def get_or_create_tag_value(self, project_id, environment_id, key, value, **kwargs):
         return TagValue.objects.get_or_create(
             project_id=project_id, key=key, value=value, **kwargs)
 
-    def create_group_tag_key(self, project_id, group_id, key, **kwargs):
+    def create_group_tag_key(self, project_id, group_id, environment_id, key, **kwargs):
         return GroupTagKey.objects.create(project_id=project_id, group_id=group_id,
                                           key=key, **kwargs)
 
-    def get_or_create_group_tag_key(self, project_id, group_id, key, **kwargs):
+    def get_or_create_group_tag_key(self, project_id, group_id, environment_id, key, **kwargs):
         return GroupTagKey.objects.get_or_create(project_id=project_id, group_id=group_id,
                                                  key=key, **kwargs)
 
-    def create_group_tag_value(self, project_id, group_id, key, value, **kwargs):
+    def create_group_tag_value(self, project_id, group_id, environment_id, key, value, **kwargs):
         return GroupTagValue.objects.create(
             project_id=project_id, group_id=group_id, key=key, value=value, **kwargs)
 
-    def get_or_create_group_tag_value(self, project_id, group_id, key, value, **kwargs):
+    def get_or_create_group_tag_value(self, project_id, group_id,
+                                      environment_id, key, value, **kwargs):
         return GroupTagValue.objects.get_or_create(
             project_id=project_id, group_id=group_id, key=key, value=value, **kwargs)
 
@@ -516,6 +517,29 @@ class LegacyTagStorage(TagStorage):
                 ).count(),
             )
 
+    def merge_tag_values_to_project(self, source_project_id, target_project_id):
+        for tv in self.get_tag_values(source_project_id):
+            self.get_or_create_tag_value(
+                project_id=target_project_id,
+                environment_id=None,
+                key=tv.key,
+                value=tv.value)
+            tv.delete()
+
+    def merge_group_tag_values_to_project(self, target_project_id, group_id):
+        for gtv in self.get_group_tag_values(group_id=group_id):
+            gtv2, created = self.get_or_create_group_tag_value(
+                project_id=target_project_id,
+                group_id=group_id,
+                environment_id=None,
+                key=gtv.key,
+                value=gtv.value,
+                defaults={'times_seen': gtv.times_seen},
+            )
+
+            if not created:
+                gtv2.update(times_seen=F('times_seen') + gtv.times_seen)
+
     def get_tag_value_qs(self, project_id, key, query=None):
         queryset = TagValue.objects.filter(
             project_id=project_id,
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index 832b65049c..71fd9d9498 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -136,7 +136,8 @@ def plugin_post_process_group(plugin_slug, event, **kwargs):
 @instrumented_task(
     name='sentry.tasks.index_event_tags', default_retry_delay=60 * 5, max_retries=None
 )
-def index_event_tags(organization_id, project_id, event_id, tags, group_id=None, **kwargs):
+def index_event_tags(organization_id, project_id, event_id, tags,
+                     group_id=None, environment_id=None, **kwargs):
     from sentry import tagstore
 
     Raven.tags_context({
@@ -144,8 +145,8 @@ def index_event_tags(organization_id, project_id, event_id, tags, group_id=None,
     })
 
     for key, value in tags:
-        tagkey, _ = tagstore.get_or_create_tag_key(project_id, key)
-        tagvalue, _ = tagstore.get_or_create_tag_value(project_id, key, value)
+        tagkey, _ = tagstore.get_or_create_tag_key(project_id, environment_id, key)
+        tagvalue, _ = tagstore.get_or_create_tag_value(project_id, environment_id, key, value)
 
         tagstore.create_event_tag(
             project_id=project_id,
diff --git a/src/sentry/tasks/unmerge.py b/src/sentry/tasks/unmerge.py
index 103ea8d20e..da99b9a509 100644
--- a/src/sentry/tasks/unmerge.py
+++ b/src/sentry/tasks/unmerge.py
@@ -267,7 +267,8 @@ def collect_tag_data(events):
     results = {}
 
     for event in events:
-        tags = results.setdefault(event.group_id, {})
+        environment = get_environment_name(event)
+        tags = results.setdefault((event.group_id, environment), {})
 
         for key, value in event.get_tags():
             values = tags.setdefault(key, {})
@@ -282,11 +283,16 @@ def collect_tag_data(events):
 
 
 def repair_tag_data(caches, project, events):
-    for group_id, keys in collect_tag_data(events).items():
+    for (group_id, env_name), keys in collect_tag_data(events).items():
+        environment = caches['Environment'](
+            project.organization_id,
+            env_name,
+        )
         for key, values in keys.items():
             tagstore.get_or_create_group_tag_key(
                 project_id=project.id,
                 group_id=group_id,
+                environment_id=environment.id,
                 key=key,
             )
 
@@ -297,6 +303,7 @@ def repair_tag_data(caches, project, events):
                 instance, created = tagstore.get_or_create_group_tag_value(
                     project_id=project.id,
                     group_id=group_id,
+                    environment_id=environment.id,
                     key=key,
                     value=value,
                     defaults={
diff --git a/src/sentry/testutils/fixtures.py b/src/sentry/testutils/fixtures.py
index d415f830bc..e71e7fb436 100644
--- a/src/sentry/testutils/fixtures.py
+++ b/src/sentry/testutils/fixtures.py
@@ -21,7 +21,7 @@ import os
 from django.utils import timezone
 
 from sentry.models import (
-    Activity, Event, EventError, EventMapping, Group, Organization, OrganizationMember,
+    Activity, Environment, Event, EventError, EventMapping, Group, Organization, OrganizationMember,
     OrganizationMemberTeam, Project, Team, User, UserEmail, Release, Commit, ReleaseCommit,
     CommitAuthor, Repository, CommitFileChange
 )
@@ -192,6 +192,13 @@ class Fixtures(object):
             team=self.team,
         )
 
+    @fixture
+    def environment(self):
+        return self.create_environment(
+            name='development',
+            project=self.project,
+        )
+
     @fixture
     def group(self):
         return self.create_group(message=u'\u3053\u3093\u306b\u3061\u306f')
@@ -249,6 +256,14 @@ class Fixtures(object):
 
         return Team.objects.create(**kwargs)
 
+    def create_environment(self, **kwargs):
+        project = kwargs.get('project', self.project)
+        name = kwargs.get('name', petname.Generate(1, ' ', letters=10))
+        return Environment.get_or_create(
+            project=project,
+            name=name
+        )
+
     def create_project(self, **kwargs):
         if not kwargs.get('name'):
             kwargs['name'] = petname.Generate(2, ' ', letters=10).title()
diff --git a/tests/sentry/api/endpoints/test_group_details.py b/tests/sentry/api/endpoints/test_group_details.py
index b2e0032cd2..c4296e4a89 100644
--- a/tests/sentry/api/endpoints/test_group_details.py
+++ b/tests/sentry/api/endpoints/test_group_details.py
@@ -38,6 +38,7 @@ class GroupDetailsTest(APITestCase):
         tagstore.create_group_tag_value(
             group_id=group.id,
             project_id=group.project_id,
+            environment_id=self.environment.id,
             key='sentry:release',
             value=release.version,
         )
diff --git a/tests/sentry/api/endpoints/test_group_events.py b/tests/sentry/api/endpoints/test_group_events.py
index 46f855bc3e..d6403ba050 100644
--- a/tests/sentry/api/endpoints/test_group_events.py
+++ b/tests/sentry/api/endpoints/test_group_events.py
@@ -33,11 +33,29 @@ class GroupEventsTest(APITestCase):
         event_1 = self.create_event('a' * 32, group=group)
         event_2 = self.create_event('b' * 32, group=group)
 
-        tagkey_1 = tagstore.create_tag_key(project_id=group.project_id, key='foo')
-        tagkey_2 = tagstore.create_tag_key(project_id=group.project_id, key='bar')
-        tagvalue_1 = tagstore.create_tag_value(project_id=group.project_id, key='foo', value='baz')
-        tagvalue_2 = tagstore.create_tag_value(project_id=group.project_id, key='bar', value='biz')
-        tagvalue_3 = tagstore.create_tag_value(project_id=group.project_id, key='bar', value='buz')
+        tagkey_1 = tagstore.create_tag_key(
+            project_id=group.project_id,
+            environment_id=self.environment.id,
+            key='foo')
+        tagkey_2 = tagstore.create_tag_key(
+            project_id=group.project_id,
+            environment_id=self.environment.id,
+            key='bar')
+        tagvalue_1 = tagstore.create_tag_value(
+            project_id=group.project_id,
+            environment_id=self.environment.id,
+            key='foo',
+            value='baz')
+        tagvalue_2 = tagstore.create_tag_value(
+            project_id=group.project_id,
+            environment_id=self.environment.id,
+            key='bar',
+            value='biz')
+        tagvalue_3 = tagstore.create_tag_value(
+            project_id=group.project_id,
+            environment_id=self.environment.id,
+            key='bar',
+            value='buz')
 
         tagstore.create_event_tag(
             project_id=group.project_id,
diff --git a/tests/sentry/api/endpoints/test_group_tagkey_details.py b/tests/sentry/api/endpoints/test_group_tagkey_details.py
index 2f760695fb..45c921c4be 100644
--- a/tests/sentry/api/endpoints/test_group_tagkey_details.py
+++ b/tests/sentry/api/endpoints/test_group_tagkey_details.py
@@ -15,11 +15,13 @@ class GroupTagDetailsTest(APITestCase):
         key, value = group.data['tags'][0]
         tagkey = tagstore.create_tag_key(
             project_id=group.project_id,
+            environment_id=self.environment.id,
             key=key,
             values_seen=2
         )
         tagstore.create_tag_value(
             project_id=group.project_id,
+            environment_id=self.environment.id,
             key=key,
             value=value,
             times_seen=4
@@ -28,12 +30,14 @@ class GroupTagDetailsTest(APITestCase):
         tagstore.create_group_tag_key(
             project_id=group.project_id,
             group_id=group.id,
+            environment_id=self.environment.id,
             key=key,
             values_seen=1,
         )
         tagstore.create_group_tag_value(
             project_id=group.project_id,
             group_id=group.id,
+            environment_id=self.environment.id,
             key=key,
             value=value,
             times_seen=3,
diff --git a/tests/sentry/api/endpoints/test_group_tagkey_values.py b/tests/sentry/api/endpoints/test_group_tagkey_values.py
index 7f1250e35a..25b057f28d 100644
--- a/tests/sentry/api/endpoints/test_group_tagkey_values.py
+++ b/tests/sentry/api/endpoints/test_group_tagkey_values.py
@@ -11,15 +11,17 @@ class GroupTagKeyValuesTest(APITestCase):
 
         project = self.create_project()
         group = self.create_group(project=project)
-        tagstore.create_tag_key(project_id=project.id, key=key)
+        tagstore.create_tag_key(project_id=project.id, environment_id=self.environment.id, key=key)
         tagstore.create_tag_value(
             project_id=project.id,
+            environment_id=self.environment.id,
             key=key,
             value=value,
         )
         tagstore.create_group_tag_value(
             project_id=project.id,
             group_id=group.id,
+            environment_id=self.environment.id,
             key=key,
             value=value,
         )
@@ -47,16 +49,19 @@ class GroupTagKeyValuesTest(APITestCase):
         )
         tagstore.create_tag_key(
             project_id=project.id,
+            environment_id=self.environment.id,
             key='sentry:user',
         )
         tagstore.create_tag_value(
             project_id=project.id,
+            environment_id=self.environment.id,
             key='sentry:user',
             value=euser.tag_value,
         )
         tagstore.create_group_tag_value(
             project_id=project.id,
             group_id=group.id,
+            environment_id=self.environment.id,
             key='sentry:user',
             value=euser.tag_value,
         )
diff --git a/tests/sentry/api/endpoints/test_group_tags.py b/tests/sentry/api/endpoints/test_group_tags.py
index 2075b04986..62234d0bca 100644
--- a/tests/sentry/api/endpoints/test_group_tags.py
+++ b/tests/sentry/api/endpoints/test_group_tags.py
@@ -18,21 +18,25 @@ class GroupTagsTest(APITestCase):
             for key, value in group.data['tags']:
                 tagstore.create_tag_key(
                     project_id=group.project_id,
+                    environment_id=self.environment.id,
                     key=key,
                 )
                 tagstore.create_tag_value(
                     project_id=group.project_id,
+                    environment_id=self.environment.id,
                     key=key,
                     value=value,
                 )
                 tagstore.create_group_tag_key(
                     project_id=group.project_id,
                     group_id=group.id,
+                    environment_id=self.environment.id,
                     key=key,
                 )
                 tagstore.create_group_tag_value(
                     project_id=group.project_id,
                     group_id=group.id,
+                    environment_id=self.environment.id,
                     key=key,
                     value=value,
                 )
diff --git a/tests/sentry/api/endpoints/test_organization_user_issues.py b/tests/sentry/api/endpoints/test_organization_user_issues.py
index 277d03c533..315a977473 100644
--- a/tests/sentry/api/endpoints/test_organization_user_issues.py
+++ b/tests/sentry/api/endpoints/test_organization_user_issues.py
@@ -37,19 +37,22 @@ class OrganizationUserIssuesTest(APITestCase):
             key='sentry:user',
             value=self.euser1.tag_value,
             group_id=self.group1.id,
-            project_id=self.project1.id
+            project_id=self.project1.id,
+            environment_id=self.environment.id,
         )
         tagstore.create_group_tag_value(
             key='sentry:user',
             value=self.euser2.tag_value,
             group_id=self.group1.id,
-            project_id=self.project1.id
+            project_id=self.project1.id,
+            environment_id=self.environment.id,
         )
         tagstore.create_group_tag_value(
             key='sentry:user',
             value=self.euser3.tag_value,
             group_id=self.group2.id,
-            project_id=self.project2.id
+            project_id=self.project2.id,
+            environment_id=self.environment.id,
         )
         self.path = reverse(
             'sentry-api-0-organization-user-issues', args=[
diff --git a/tests/sentry/api/endpoints/test_organization_user_issues_search.py b/tests/sentry/api/endpoints/test_organization_user_issues_search.py
index 0f4d34b8be..e259d7ab23 100644
--- a/tests/sentry/api/endpoints/test_organization_user_issues_search.py
+++ b/tests/sentry/api/endpoints/test_organization_user_issues_search.py
@@ -34,18 +34,21 @@ class OrganizationUserIssuesSearchTest(APITestCase):
             key='sentry:user',
             value='email:foo@example.com',
             group_id=group1.id,
+            environment_id=self.environment.id,
             project_id=self.project1.id
         )
         tagstore.create_group_tag_value(
             key='sentry:user',
             value='email:bar@example.com',
             group_id=group1.id,
+            environment_id=self.environment.id,
             project_id=self.project1.id
         )
         tagstore.create_group_tag_value(
             key='sentry:user',
             value='email:foo@example.com',
             group_id=group2.id,
+            environment_id=self.environment.id,
             project_id=self.project2.id
         )
 
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index a16f7070d4..778085bb3b 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -248,11 +248,13 @@ class GroupListTest(APITestCase):
         group = self.create_group(checksum='a' * 32, project=project)
         group2 = self.create_group(checksum='b' * 32, project=project2)
         tagstore.create_group_tag_value(
-            project_id=project.id, group_id=group.id, key='sentry:release', value=release.version
+            project_id=project.id, group_id=group.id, environment_id=self.environment.id,
+            key='sentry:release', value=release.version
         )
 
         tagstore.create_group_tag_value(
-            project_id=project2.id, group_id=group2.id, key='sentry:release', value=release.version
+            project_id=project2.id, group_id=group2.id, environment_id=self.environment.id,
+            key='sentry:release', value=release.version
         )
 
         url = '%s?query=%s' % (self.path, quote('release:"%s"' % release.version))
@@ -923,6 +925,7 @@ class GroupUpdateTest(APITestCase):
         tagstore.create_group_tag_key(
             group.project_id,
             group.id,
+            self.environment.id,
             'sentry:user',
             values_seen=100,
         )
diff --git a/tests/sentry/api/endpoints/test_project_tagkey_details.py b/tests/sentry/api/endpoints/test_project_tagkey_details.py
index 3b9862be6f..a08618df3c 100644
--- a/tests/sentry/api/endpoints/test_project_tagkey_details.py
+++ b/tests/sentry/api/endpoints/test_project_tagkey_details.py
@@ -15,6 +15,7 @@ class ProjectTagKeyDetailsTest(APITestCase):
         project = self.create_project()
         tagkey = tagstore.create_tag_key(
             project_id=project.id,
+            environment_id=self.environment.id,
             key='foo',
             values_seen=16
         )
@@ -41,7 +42,10 @@ class ProjectTagKeyDeleteTest(APITestCase):
     @mock.patch('sentry.tagstore.legacy.tasks.delete_tag_key')
     def test_simple(self, mock_delete_tag_key):
         project = self.create_project()
-        tagkey = tagstore.create_tag_key(project_id=project.id, key='foo')
+        tagkey = tagstore.create_tag_key(
+            project_id=project.id,
+            environment_id=self.environment.id,
+            key='foo')
 
         self.login_as(user=self.user)
 
diff --git a/tests/sentry/api/endpoints/test_project_tagkey_values.py b/tests/sentry/api/endpoints/test_project_tagkey_values.py
index 152ffd9a22..217edfd97d 100644
--- a/tests/sentry/api/endpoints/test_project_tagkey_values.py
+++ b/tests/sentry/api/endpoints/test_project_tagkey_values.py
@@ -9,8 +9,15 @@ from sentry.testutils import APITestCase
 class ProjectTagKeyValuesTest(APITestCase):
     def test_simple(self):
         project = self.create_project()
-        tagkey = tagstore.create_tag_key(project_id=project.id, key='foo')
-        tagstore.create_tag_value(project_id=project.id, key='foo', value='bar')
+        tagkey = tagstore.create_tag_key(
+            project_id=project.id,
+            environment_id=self.environment.id,
+            key='foo')
+        tagstore.create_tag_value(
+            project_id=project.id,
+            environment_id=self.environment.id,
+            key='foo',
+            value='bar')
 
         self.login_as(user=self.user)
 
@@ -32,8 +39,15 @@ class ProjectTagKeyValuesTest(APITestCase):
 
     def test_query(self):
         project = self.create_project()
-        tagkey = tagstore.create_tag_key(project_id=project.id, key='foo')
-        tagstore.create_tag_value(project_id=project.id, key='foo', value='bar')
+        tagkey = tagstore.create_tag_key(
+            project_id=project.id,
+            environment_id=self.environment.id,
+            key='foo')
+        tagstore.create_tag_value(
+            project_id=project.id,
+            environment_id=self.environment.id,
+            key='foo',
+            value='bar')
 
         self.login_as(user=self.user)
 
diff --git a/tests/sentry/api/endpoints/test_project_tags.py b/tests/sentry/api/endpoints/test_project_tags.py
index 5d7f7e894a..b17df2b99c 100644
--- a/tests/sentry/api/endpoints/test_project_tags.py
+++ b/tests/sentry/api/endpoints/test_project_tags.py
@@ -13,6 +13,7 @@ class ProjectTagsTest(APITestCase):
         for key in ('foo', 'bar'):
             tagstore.create_tag_key(
                 project_id=project.id,
+                environment_id=self.environment.id,
                 key=key,
             )
 
diff --git a/tests/sentry/api/serializers/test_grouptagkey.py b/tests/sentry/api/serializers/test_grouptagkey.py
index d09aedb56c..c22d496d30 100644
--- a/tests/sentry/api/serializers/test_grouptagkey.py
+++ b/tests/sentry/api/serializers/test_grouptagkey.py
@@ -13,11 +13,13 @@ class GroupTagKeySerializerTest(TestCase):
         project = self.create_project()
         tagkey = tagstore.create_tag_key(
             project_id=project.id,
+            environment_id=self.environment.id,
             key='key'
         )
         grouptagkey = tagstore.create_group_tag_key(
             project_id=project.id,
             group_id=self.create_group(project=project).id,
+            environment_id=self.environment.id,
             key=tagkey.key
         )
 
diff --git a/tests/sentry/api/serializers/test_grouptagvalue.py b/tests/sentry/api/serializers/test_grouptagvalue.py
index 8042b30bff..00a7c4b832 100644
--- a/tests/sentry/api/serializers/test_grouptagvalue.py
+++ b/tests/sentry/api/serializers/test_grouptagvalue.py
@@ -20,12 +20,14 @@ class GroupTagValueSerializerTest(TestCase):
         )
         tagvalue = tagstore.create_tag_value(
             project_id=project.id,
+            environment_id=self.environment.id,
             key='sentry:user',
             value=euser.tag_value,
         )
         grouptagvalue = tagstore.create_group_tag_value(
             project_id=project.id,
             group_id=self.create_group(project=project).id,
+            environment_id=self.environment.id,
             key=tagvalue.key,
             value=tagvalue.value,
         )
diff --git a/tests/sentry/api/serializers/test_release.py b/tests/sentry/api/serializers/test_release.py
index 3243c0c023..121ee5187a 100644
--- a/tests/sentry/api/serializers/test_release.py
+++ b/tests/sentry/api/serializers/test_release.py
@@ -41,6 +41,7 @@ class ReleaseSerializerTest(TestCase):
         value = release.version
         tagstore.create_tag_value(
             project_id=project.id,
+            environment_id=self.environment.id,
             key=key,
             value=value,
             first_seen=timezone.now(),
@@ -49,6 +50,7 @@ class ReleaseSerializerTest(TestCase):
         )
         tagstore.create_tag_value(
             project_id=project2.id,
+            environment_id=self.environment.id,
             key=key,
             value=value,
             first_seen=timezone.now() - datetime.timedelta(days=2),
diff --git a/tests/sentry/api/serializers/test_tagvalue.py b/tests/sentry/api/serializers/test_tagvalue.py
index c19b52c9ec..28a32e13b4 100644
--- a/tests/sentry/api/serializers/test_tagvalue.py
+++ b/tests/sentry/api/serializers/test_tagvalue.py
@@ -20,6 +20,7 @@ class TagValueSerializerTest(TestCase):
         )
         tagvalue = tagstore.create_tag_value(
             project_id=project.id,
+            environment_id=self.environment.id,
             key='sentry:user',
             value=euser.tag_value,
         )
@@ -35,6 +36,7 @@ class TagValueSerializerTest(TestCase):
         project = self.create_project()
         tagvalue = tagstore.create_tag_value(
             project_id=project.id,
+            environment_id=self.environment.id,
             key='sentry:user',
             value='email:foo@example.com',
         )
@@ -50,6 +52,7 @@ class TagValueSerializerTest(TestCase):
         project = self.create_project()
         tagvalue = tagstore.create_tag_value(
             project_id=project.id,
+            environment_id=self.environment.id,
             key='sentry:release',
             value='df84bccbb23ca15f2868be1f2a5f7c7a6464fadd',
         )
diff --git a/tests/sentry/deletions/test_tagkey.py b/tests/sentry/deletions/test_tagkey.py
index 3294a2927f..0a8802ced8 100644
--- a/tests/sentry/deletions/test_tagkey.py
+++ b/tests/sentry/deletions/test_tagkey.py
@@ -13,11 +13,22 @@ class DeleteTagKeyTest(TestCase):
         group = self.create_group(project=project)
         key = 'foo'
         value = 'bar'
-        tk = tagstore.create_tag_key(key=key, project_id=project.id)
-        tagstore.create_tag_value(key=key, value=value, project_id=project.id)
-        tagstore.create_group_tag_key(key=key, group_id=group.id, project_id=project.id)
+        tk = tagstore.create_tag_key(
+            key=key,
+            project_id=project.id,
+            environment_id=self.environment.id)
+        tagstore.create_tag_value(
+            key=key,
+            value=value,
+            project_id=project.id,
+            environment_id=self.environment.id)
+        tagstore.create_group_tag_key(
+            key=key,
+            group_id=group.id,
+            project_id=project.id,
+            environment_id=self.environment.id)
         tagstore.create_group_tag_value(
-            key=key, value=value, group_id=group.id, project_id=project.id
+            key=key, value=value, group_id=group.id, project_id=project.id, environment_id=self.environment.id
         )
         tagstore.create_event_tag(
             key_id=tk.id,
@@ -29,10 +40,14 @@ class DeleteTagKeyTest(TestCase):
 
         project2 = self.create_project(team=team, name='test2')
         group2 = self.create_group(project=project2)
-        tk2 = tagstore.create_tag_key(project2.id, key)
-        tagstore.create_group_tag_key(key=key, group_id=group2.id, project_id=project2.id)
+        tk2 = tagstore.create_tag_key(project2.id, self.environment.id, key)
+        tagstore.create_group_tag_key(
+            key=key,
+            group_id=group2.id,
+            project_id=project2.id,
+            environment_id=self.environment.id)
         tagstore.create_group_tag_value(
-            key=key, value=value, group_id=group2.id, project_id=project2.id
+            key=key, value=value, group_id=group2.id, project_id=project2.id, environment_id=self.environment.id
         )
         tagstore.create_event_tag(
             key_id=tk2.id,
diff --git a/tests/sentry/models/test_group.py b/tests/sentry/models/test_group.py
index 6442d18433..32cbcd1407 100644
--- a/tests/sentry/models/test_group.py
+++ b/tests/sentry/models/test_group.py
@@ -180,7 +180,8 @@ class GroupTest(TestCase):
         )
 
         tagstore.create_group_tag_value(
-            project_id=project.id, group_id=group.id, key='sentry:release', value=release.version
+            project_id=project.id, group_id=group.id, environment_id=self.environment.id,
+            key='sentry:release', value=release.version
         )
 
         assert group.first_release == release
@@ -200,7 +201,8 @@ class GroupTest(TestCase):
         )
 
         tagstore.create_group_tag_value(
-            project_id=project.id, group_id=group.id, key='sentry:release', value=release.version
+            project_id=project.id, group_id=group.id, environment_id=self.environment.id,
+            key='sentry:release', value=release.version
         )
 
         assert group.first_release is None
diff --git a/tests/sentry/models/test_groupsnooze.py b/tests/sentry/models/test_groupsnooze.py
index 95ee112c22..01dc02511f 100644
--- a/tests/sentry/models/test_groupsnooze.py
+++ b/tests/sentry/models/test_groupsnooze.py
@@ -71,6 +71,7 @@ class GroupSnoozeTest(TestCase):
         tagstore.create_group_tag_key(
             project_id=self.group.project_id,
             group_id=self.group.id,
+            environment_id=self.environment.id,
             key='sentry:user',
             values_seen=100,
         )
diff --git a/tests/sentry/receivers/test_releases.py b/tests/sentry/receivers/test_releases.py
index 957d140488..a2465059ea 100644
--- a/tests/sentry/receivers/test_releases.py
+++ b/tests/sentry/receivers/test_releases.py
@@ -17,6 +17,7 @@ class EnsureReleaseExistsTest(TestCase):
     def test_simple(self):
         tv = tagstore.create_tag_value(
             project_id=self.project.id,
+            environment_id=self.environment.id,
             key='sentry:release',
             value='1.0',
         )
diff --git a/tests/sentry/search/django/tests.py b/tests/sentry/search/django/tests.py
index 9bf7f3ef75..cf3acf34a2 100644
--- a/tests/sentry/search/django/tests.py
+++ b/tests/sentry/search/django/tests.py
@@ -20,8 +20,10 @@ class DjangoSearchBackendTest(TestCase):
     def setUp(self):
         self.backend = self.create_backend()
 
-        self.project1 = self.create_project(name='foo')
-        self.project2 = self.create_project(name='bar')
+        self.project1 = self.create_project(name='project1')
+        self.env1 = self.create_environment(project=self.project1, name='env1')
+        self.project2 = self.create_project(name='project2')
+        self.env2 = self.create_environment(project=self.project2, name='env2')
 
         self.group1 = self.create_group(
             project=self.project1,
@@ -75,6 +77,7 @@ class DjangoSearchBackendTest(TestCase):
             tagstore.create_group_tag_value(
                 project_id=self.group1.project_id,
                 group_id=self.group1.id,
+                environment_id=self.env1.id,
                 key=key,
                 value=value,
             )
@@ -82,6 +85,7 @@ class DjangoSearchBackendTest(TestCase):
             tagstore.create_group_tag_value(
                 project_id=self.group2.project_id,
                 group_id=self.group2.id,
+                environment_id=self.env2.id,
                 key=key,
                 value=value,
             )
diff --git a/tests/sentry/tasks/post_process/tests.py b/tests/sentry/tasks/post_process/tests.py
index 13b95a6cee..fb149a1926 100644
--- a/tests/sentry/tasks/post_process/tests.py
+++ b/tests/sentry/tasks/post_process/tests.py
@@ -120,6 +120,7 @@ class IndexEventTagsTest(TestCase):
                 event_id=event.id,
                 group_id=group.id,
                 project_id=self.project.id,
+                environment_id=self.environment.id,
                 organization_id=self.project.organization_id,
                 tags=[('foo', 'bar'), ('biz', 'baz')],
             )
@@ -157,6 +158,7 @@ class IndexEventTagsTest(TestCase):
                 event_id=event.id,
                 group_id=group.id,
                 project_id=self.project.id,
+                environment_id=self.environment.id,
                 organization_id=self.project.organization_id,
                 tags=[('foo', 'bar'), ('biz', 'baz')],
             )
diff --git a/tests/sentry/tasks/test_deletion.py b/tests/sentry/tasks/test_deletion.py
index 25c371a2ee..adb3f9fd4f 100644
--- a/tests/sentry/tasks/test_deletion.py
+++ b/tests/sentry/tasks/test_deletion.py
@@ -191,11 +191,22 @@ class DeleteTagKeyTest(TestCase):
         group = self.create_group(project=project)
         key = 'foo'
         value = 'bar'
-        tk = tagstore.create_tag_key(key=key, project_id=project.id)
-        tagstore.create_tag_value(key=key, value=value, project_id=project.id)
-        tagstore.create_group_tag_key(key=key, group_id=group.id, project_id=project.id)
+        tk = tagstore.create_tag_key(
+            key=key,
+            project_id=project.id,
+            environment_id=self.environment.id)
+        tagstore.create_tag_value(
+            key=key,
+            value=value,
+            project_id=project.id,
+            environment_id=self.environment.id)
+        tagstore.create_group_tag_key(
+            key=key,
+            group_id=group.id,
+            project_id=project.id,
+            environment_id=self.environment.id)
         tagstore.create_group_tag_value(
-            key=key, value=value, group_id=group.id, project_id=project.id
+            key=key, value=value, group_id=group.id, project_id=project.id, environment_id=self.environment.id
         )
         tagstore.create_event_tag(
             key_id=tk.id,
@@ -207,10 +218,15 @@ class DeleteTagKeyTest(TestCase):
 
         project2 = self.create_project(team=team, name='test2')
         group2 = self.create_group(project=project2)
-        tk2 = tagstore.create_tag_key(key=key, project_id=project2.id)
-        tagstore.create_group_tag_key(key=key, group_id=group2.id, project_id=project2.id)
+        tk2 = tagstore.create_tag_key(key=key, project_id=project2.id,
+                                      environment_id=self.environment.id)
+        tagstore.create_group_tag_key(
+            key=key,
+            group_id=group2.id,
+            project_id=project2.id,
+            environment_id=self.environment.id)
         tagstore.create_group_tag_value(
-            key=key, value=value, group_id=group2.id, project_id=project2.id
+            key=key, value=value, group_id=group2.id, project_id=project2.id, environment_id=self.environment.id
         )
         tagstore.create_event_tag(
             key_id=tk2.id,
diff --git a/tests/sentry/tasks/test_merge.py b/tests/sentry/tasks/test_merge.py
index 536e65cc4f..1f971bf26a 100644
--- a/tests/sentry/tasks/test_merge.py
+++ b/tests/sentry/tasks/test_merge.py
@@ -103,6 +103,7 @@ class MergeGroupTest(TestCase):
             tagstore.create_group_tag_key(
                 project_id=project.id,
                 group_id=group.id,
+                environment_id=self.environment.id,
                 key=key,
                 values_seen=values_seen,
             )
@@ -111,6 +112,7 @@ class MergeGroupTest(TestCase):
             tagstore.create_group_tag_value(
                 project_id=project.id,
                 group_id=group.id,
+                environment_id=self.environment.id,
                 key=key,
                 value=value,
                 times_seen=times_seen,
diff --git a/tests/sentry/web/frontend/test_group_tag_export.py b/tests/sentry/web/frontend/test_group_tag_export.py
index f6c8524c18..beab30d052 100644
--- a/tests/sentry/web/frontend/test_group_tag_export.py
+++ b/tests/sentry/web/frontend/test_group_tag_export.py
@@ -16,15 +16,17 @@ class GroupTagExportTest(TestCase):
 
         project = self.create_project()
         group = self.create_group(project=project)
-        tagstore.create_tag_key(project_id=project.id, key=key)
+        tagstore.create_tag_key(project_id=project.id, environment_id=self.environment.id, key=key)
         tagstore.create_tag_value(
             project_id=project.id,
+            environment_id=self.environment.id,
             key=key,
             value=value,
         )
         group_tag_value = tagstore.create_group_tag_value(
             project_id=project.id,
             group_id=group.id,
+            environment_id=self.environment.id,
             key=key,
             value=value,
             times_seen=1,
diff --git a/tests/sentry/web/frontend/test_project_tags.py b/tests/sentry/web/frontend/test_project_tags.py
index fc1a990b63..dc9d8e7ad5 100644
--- a/tests/sentry/web/frontend/test_project_tags.py
+++ b/tests/sentry/web/frontend/test_project_tags.py
@@ -18,9 +18,18 @@ class ProjectTagsTest(TestCase):
         self.assertRequiresAuthentication(self.path)
 
     def test_simple(self):
-        tagstore.create_tag_key(project_id=self.project.id, key='site')
-        tagstore.create_tag_key(project_id=self.project.id, key='url')
-        tagstore.create_tag_key(project_id=self.project.id, key='os')
+        tagstore.create_tag_key(
+            project_id=self.project.id,
+            environment_id=self.environment.id,
+            key='site')
+        tagstore.create_tag_key(
+            project_id=self.project.id,
+            environment_id=self.environment.id,
+            key='url')
+        tagstore.create_tag_key(
+            project_id=self.project.id,
+            environment_id=self.environment.id,
+            key='os')
 
         self.login_as(self.user)
 
