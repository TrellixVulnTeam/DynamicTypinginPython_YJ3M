commit ca04eaaa91b45dac7bc1750c4017cd1bbdbf38c7
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Aug 26 13:20:24 2015 -0700

    Support query in tag value list

diff --git a/src/sentry/api/endpoints/project_tagkey_values.py b/src/sentry/api/endpoints/project_tagkey_values.py
index 430ce671d0..3e6b68c427 100644
--- a/src/sentry/api/endpoints/project_tagkey_values.py
+++ b/src/sentry/api/endpoints/project_tagkey_values.py
@@ -18,6 +18,8 @@ class ProjectTagKeyValuesEndpoint(ProjectEndpoint):
 
             {method} {path}
 
+        The ``query`` parameter can be used to to perform a "starts with" match
+        on values.
         """
         if key in ('release', 'user', 'filename', 'function'):
             lookup_key = 'sentry:{0}'.format(key)
@@ -38,6 +40,10 @@ class ProjectTagKeyValuesEndpoint(ProjectEndpoint):
             key=tagkey.key,
         )
 
+        query = request.GET.get('query')
+        if query:
+            queryset = queryset.filter(value__istartswith=query)
+
         return self.paginate(
             request=request,
             queryset=queryset,
diff --git a/tests/sentry/api/endpoints/test_project_tagkey_values.py b/tests/sentry/api/endpoints/test_project_tagkey_values.py
index 13e94b102a..dd38eeb130 100644
--- a/tests/sentry/api/endpoints/test_project_tagkey_values.py
+++ b/tests/sentry/api/endpoints/test_project_tagkey_values.py
@@ -26,3 +26,27 @@ class ProjectTagKeyValuesTest(APITestCase):
         assert len(response.data) == 1
 
         assert response.data[0]['value'] == 'bar'
+
+    def test_query(self):
+        project = self.create_project()
+        tagkey = TagKey.objects.create(project=project, key='foo')
+        tagvalue = TagValue.objects.create(project=project, key='foo', value='bar')
+
+        self.login_as(user=self.user)
+
+        url = reverse('sentry-api-0-project-tagkey-values', kwargs={
+            'organization_slug': project.organization.slug,
+            'project_slug': project.slug,
+            'key': tagkey.key,
+        })
+        response = self.client.get(url + '?query=bar')
+
+        assert response.status_code == 200
+        assert len(response.data) == 1
+
+        assert response.data[0]['value'] == 'bar'
+
+        response = self.client.get(url + '?query=foo')
+
+        assert response.status_code == 200
+        assert len(response.data) == 0
