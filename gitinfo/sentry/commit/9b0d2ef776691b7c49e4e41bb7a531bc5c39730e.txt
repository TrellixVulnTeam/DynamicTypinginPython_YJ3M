commit 9b0d2ef776691b7c49e4e41bb7a531bc5c39730e
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Mon Jun 29 14:55:16 2020 +0200

    feat(store): Introduce clock_drift eventerror (#19569)
    
    This is the counterpart to getsentry/relay#634

diff --git a/src/sentry/models/eventerror.py b/src/sentry/models/eventerror.py
index 958c23a46b..a5c389bac5 100644
--- a/src/sentry/models/eventerror.py
+++ b/src/sentry/models/eventerror.py
@@ -14,6 +14,7 @@ class EventError(object):
     VALUE_TOO_LONG = "value_too_long"
     FUTURE_TIMESTAMP = "future_timestamp"
     PAST_TIMESTAMP = "past_timestamp"
+    CLOCK_DRIFT = "clock_drift"
     INVALID_ENVIRONMENT = "invalid_environment"
 
     # Processing: Http
@@ -62,6 +63,7 @@ class EventError(object):
         VALUE_TOO_LONG: u"Discarded value due to exceeding maximum length",
         FUTURE_TIMESTAMP: u"Invalid timestamp (in future)",
         PAST_TIMESTAMP: u"Invalid timestamp (too old)",
+        CLOCK_DRIFT: u"Clock drift detected in SDK",
         INVALID_ENVIRONMENT: u'Environment cannot contain "/" or newlines',
         SECURITY_VIOLATION: u"Cannot fetch resource due to security violation",
         RESTRICTED_IP: u"Cannot fetch resource due to restricted IP address",
diff --git a/src/sentry/static/sentry/app/components/events/errorItem.jsx b/src/sentry/static/sentry/app/components/events/errorItem.jsx
index ecc4ef50ae..2b7f44df55 100644
--- a/src/sentry/static/sentry/app/components/events/errorItem.jsx
+++ b/src/sentry/static/sentry/app/components/events/errorItem.jsx
@@ -1,4 +1,5 @@
 import mapKeys from 'lodash/mapKeys';
+import moment from 'moment';
 import startCase from 'lodash/startCase';
 import isEmpty from 'lodash/isEmpty';
 import React from 'react';
@@ -54,6 +55,15 @@ class EventErrorItem extends React.Component {
       data.image_path = path.length ? path.join(separator) + separator : '';
     }
 
+    if (typeof data.server_time === 'string' && typeof data.sdk_time === 'string') {
+      data.message = t(
+        'Adjusted timestamps by %s',
+        moment
+          .duration(moment.utc(data.server_time).diff(moment.utc(data.sdk_time)))
+          .humanize()
+      );
+    }
+
     return mapKeys(data, (_value, key) => t(keyMapping[key] || startCase(key)));
   }
 
