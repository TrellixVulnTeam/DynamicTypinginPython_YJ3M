commit 3f16b6f9cec50c4fed258455a6bc655b8b9526a9
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jan 20 17:59:10 2015 -0800

    Improve assignee action abstraction

diff --git a/src/sentry/static/sentry/app/actions/aggregateListActions.jsx b/src/sentry/static/sentry/app/actions/aggregateListActions.jsx
index 700f673742..4c8d6e472e 100644
--- a/src/sentry/static/sentry/app/actions/aggregateListActions.jsx
+++ b/src/sentry/static/sentry/app/actions/aggregateListActions.jsx
@@ -2,8 +2,34 @@
 
 var Reflux = require("reflux");
 
-var AggregateListActions = Reflux.createActions([
-  "setAssignedTo"
-]);
+var AggregateListActions = Reflux.createActions({
+  "assignTo": {
+    children: ["completed", "failed"]
+  }
+});
+
+
+AggregateListActions.assignTo.listen(function(itemId, userEmail){
+  if (!itemId) {
+    this.failed(itemId, userEmail);
+    return false;
+  }
+
+  $.ajax({
+    url: '/api/0/groups/' + itemId + '/',
+    method: 'PUT',
+    data: JSON.stringify({
+      assignedTo: userEmail
+    }),
+    contentType: 'application/json',
+    success: function(data){
+      this.completed(itemId, userEmail, data);
+    }.bind(this),
+    error: function(){
+      this.failed(itemId, userEmail);
+    }.bind(this)
+  });
+});
+
 
 module.exports = AggregateListActions;
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index b11d13fc6e..dfbfe3699c 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -1,12 +1,15 @@
 /*** @jsx React.DOM */
 
 var React = require("react");
+var Reflux = require("reflux");
 
 var AggregateListActions = require("../actions/aggregateListActions");
 var DropdownLink = require("./dropdownLink");
 var MenuItem = require("./menuItem");
 
 var AssigneeSelector = React.createClass({
+  mixins: [Reflux.ListenerMixin],
+
   propTypes: {
     aggregate: React.PropTypes.shape({
       id: React.PropTypes.string.isRequired
@@ -20,20 +23,34 @@ var AssigneeSelector = React.createClass({
     };
   },
 
-  assignTo: function(member) {
-    this.setState({loading: true});
-    AggregateListActions.setAssignedTo(this.props.aggregate.id, member.email, this.onAssignToComplete);
+  componentDidMount: function() {
+    this.listenTo(AggregateListActions.assignTo, this.onAssignTo);
+    this.listenTo(AggregateListActions.assignTo.completed, this.onAssignToCompleted);
+    this.listenTo(AggregateListActions.assignTo.failed, this.onAssignToCompleted);
   },
 
-  clearAssignTo: function(member) {
+  onAssignTo: function(id) {
+    if (id !== this.props.aggregate.id) {
+      return;
+    }
     this.setState({loading: true});
-    AggregateListActions.setAssignedTo(this.props.aggregate.id, '', this.onAssignToComplete);
   },
 
-  onAssignToComplete: function() {
+  onAssignToCompleted: function(id) {
+    if (id !== this.props.aggregate.id) {
+      return;
+    }
     this.setState({loading: false});
   },
 
+  assignTo: function(member) {
+    AggregateListActions.assignTo(this.props.aggregate.id, member.email);
+  },
+
+  clearAssignTo: function(member) {
+    AggregateListActions.assignTo(this.props.aggregate.id, '');
+  },
+
   render: function() {
     var agg = this.props.aggregate;
 
diff --git a/src/sentry/static/sentry/app/stores/aggregateListStore.jsx b/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
index 2a34069cfe..e6b88fe6e9 100644
--- a/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
+++ b/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
@@ -9,8 +9,6 @@ var utils = require("../utils");
 var ERR_CHANGE_ASSIGNEE = 'Unable to change assignee. Please try again.';
 
 var AggregateListStore = Reflux.createStore({
-  listenables: AggregateListActions,
-
   init: function() {
     // TODO(dcramer): what we want to actually do is keep this as a simple
     // list and have stream add/remove items as they're modified within stream
@@ -21,6 +19,10 @@ var AggregateListStore = Reflux.createStore({
       },
       limit: 50
     });
+
+    // TODO(dcramer): theres no documented way to do listenables via these
+    this.listenTo(AggregateListActions.assignTo.completed, this.onAssignToCompleted);
+    this.listenTo(AggregateListActions.assignTo.failed, this.onAssignToFailed);
   },
 
   // TODO(dcramer): this should actually come from an action of some sorts
@@ -30,24 +32,13 @@ var AggregateListStore = Reflux.createStore({
     this.trigger(this.items, 'initial');
   },
 
-  onSetAssignedTo: function(itemId, userEmail, cb) {
-    $.ajax({
-      url: '/api/0/groups/' + itemId + '/',
-      method: 'PUT',
-      data: JSON.stringify({
-        assignedTo: userEmail
-      }),
-      contentType: 'application/json',
-      success: function(data){
-        this.items.update(data);
-        this.trigger(this.items, 'assignedTo', itemId, userEmail);
-        cb(data);
-      }.bind(this),
-      error: function(){
-        AlertActions.addAlert(ERR_CHANGE_ASSIGNEE, 'error');
-        cb();
-      }.bind(this)
-    });
+  onAssignToCompleted: function(id, email, data) {
+    this.items.update(data);
+  },
+
+  // TODO(dcramer): This is not really the best place for this
+  onAssignToFailed: function(id, email) {
+    AlertActions.addAlert(ERR_CHANGE_ASSIGNEE, 'error');
   }
 });
 
