commit ee95d4dda31632a6010a6be08391f78e27b2b4d9
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Mon Dec 3 15:59:37 2018 -0800

    feat(api): Add OrganizationEventsMetaEndpoint to get total counts for event stream (#10858)

diff --git a/src/sentry/api/endpoints/organization_events.py b/src/sentry/api/endpoints/organization_events.py
index a11a13a84b..700add9dd6 100644
--- a/src/sentry/api/endpoints/organization_events.py
+++ b/src/sentry/api/endpoints/organization_events.py
@@ -75,3 +75,25 @@ class OrganizationEventsStatsEndpoint(OrganizationEventsEndpointBase):
             ),
             status=200,
         )
+
+
+class OrganizationEventsMetaEndpoint(OrganizationEventsEndpointBase):
+
+    def get(self, request, organization):
+        try:
+            snuba_args = self.get_snuba_query_args(request, organization)
+        except OrganizationEventsError as exc:
+            return Response({'detail': exc.message}, status=400)
+
+        data = raw_query(
+            aggregations=[['count()', '', 'count']],
+            referrer='api.organization-event-meta',
+            turbo=True,
+            **snuba_args
+        )['data'][0]
+
+        return Response({
+            # this needs to be multiplied to account for the `TURBO_SAMPLE_RATE`
+            # in snuba
+            'count': data['count'] * 10,
+        })
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 554af4243f..bcfb4421f1 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -61,7 +61,7 @@ from .endpoints.organization_details import OrganizationDetailsEndpoint
 from .endpoints.organization_discover_query import OrganizationDiscoverQueryEndpoint
 from .endpoints.organization_discover_saved_queries import OrganizationDiscoverSavedQueriesEndpoint
 from .endpoints.organization_discover_saved_query_detail import OrganizationDiscoverSavedQueryDetailEndpoint
-from .endpoints.organization_events import OrganizationEventsEndpoint, OrganizationEventsStatsEndpoint
+from .endpoints.organization_events import OrganizationEventsEndpoint, OrganizationEventsMetaEndpoint, OrganizationEventsStatsEndpoint
 from .endpoints.organization_health import OrganizationHealthTopEndpoint, OrganizationHealthGraphEndpoint
 from .endpoints.organization_shortid import ShortIdLookupEndpoint
 from .endpoints.organization_environments import OrganizationEnvironmentsEndpoint
@@ -501,6 +501,11 @@ urlpatterns = patterns(
         OrganizationEventsStatsEndpoint.as_view(),
         name='sentry-api-0-organization-events-stats'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/events-meta/$',
+        OrganizationEventsMetaEndpoint.as_view(),
+        name='sentry-api-0-organization-events-meta'
+    ),
     url(
         r'^organizations/(?P<organization_slug>[^\/]+)/issues/new/$',
         OrganizationIssuesNewEndpoint.as_view(),
diff --git a/tests/snuba/api/endpoints/test_organization_events.py b/tests/snuba/api/endpoints/test_organization_events.py
index 52fa385b8b..4506612a6e 100644
--- a/tests/snuba/api/endpoints/test_organization_events.py
+++ b/tests/snuba/api/endpoints/test_organization_events.py
@@ -507,3 +507,52 @@ class OrganizationEventsStatsEndpointTest(OrganizationEventsTestBase):
             (1541066400, [{'count': 1}]),
             (1541070000, [{'count': 2}]),
         ]
+
+
+class OrganizationEventsMetaEndpoint(OrganizationEventsTestBase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project()
+        project2 = self.create_project()
+        group = self.create_group(project=project)
+        group2 = self.create_group(project=project2)
+        self.create_event('a' * 32, group=group, datetime=self.min_ago)
+        self.create_event('m' * 32, group=group2, datetime=self.min_ago)
+
+        url = reverse(
+            'sentry-api-0-organization-events-meta',
+            kwargs={
+                'organization_slug': project.organization.slug,
+            }
+        )
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        # this is not exact because of turbo=True
+        assert response.data['count'] == 10
+
+    def test_search(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project()
+        group = self.create_group(project=project)
+        self.create_event('x' * 32, group=group, message="how to make fast", datetime=self.min_ago)
+        self.create_event(
+            'm' * 32,
+            group=group,
+            message="Delet the Data",
+            datetime=self.min_ago,
+        )
+
+        url = reverse(
+            'sentry-api-0-organization-events-meta',
+            kwargs={
+                'organization_slug': project.organization.slug,
+            }
+        )
+        response = self.client.get(url, {'query': 'delet'}, format='json')
+
+        assert response.status_code == 200, response.content
+        # this is not exact because of turbo=True
+        assert response.data['count'] == 10
