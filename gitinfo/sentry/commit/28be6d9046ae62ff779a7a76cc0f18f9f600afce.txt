commit 28be6d9046ae62ff779a7a76cc0f18f9f600afce
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 22 11:41:45 2016 -0700

    Improve acceptance tests
    
    - Explicit names for org/team/project
    - Add issue details rendering (cocoa and python)
    
    /cc @getsentry/infrastructure @getsentry/ui

diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index db5dbe1627..8bb0c670d2 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -84,7 +84,7 @@ const EventEntries = React.createClass({
     });
 
     return (
-      <div>
+      <div className="entries">
         {evt.userReport &&
           <EventUserReport
             group={group}
diff --git a/tests/acceptance/test_issue_details.py b/tests/acceptance/test_issue_details.py
new file mode 100644
index 0000000000..646b6f2d8c
--- /dev/null
+++ b/tests/acceptance/test_issue_details.py
@@ -0,0 +1,42 @@
+from __future__ import absolute_import
+
+from sentry.testutils import AcceptanceTestCase
+from sentry.utils.samples import create_sample_event
+
+
+class IssueDetailsTest(AcceptanceTestCase):
+    def setUp(self):
+        super(IssueDetailsTest, self).setUp()
+        self.user = self.create_user('foo@example.com')
+        self.org = self.create_organization(
+            owner=self.user,
+            name='Rowdy Tiger'
+        )
+        self.team = self.create_team(
+            organization=self.org,
+            name='Mariachi Band'
+        )
+        self.project = self.create_project(
+            organization=self.org,
+            team=self.team,
+            name='Bengal',
+        )
+        self.login_as(self.user)
+
+    def test_python_event(self):
+        event = create_sample_event(self.project, platform='python')
+
+        self.browser.get(self.route(
+            '/{}/{}/issues/{}/', self.org.slug, self.project.slug, event.group.id
+        ))
+        self.wait_until('.entries')
+        self.snapshot('issue details python')
+
+    def test_cocoa_event(self):
+        event = create_sample_event(self.project, platform='cocoa')
+
+        self.browser.get(self.route(
+            '/{}/{}/issues/{}/', self.org.slug, self.project.slug, event.group.id
+        ))
+        self.wait_until('.entries')
+        self.snapshot('issue details cocoa')
diff --git a/tests/acceptance/test_project_issues.py b/tests/acceptance/test_project_issues.py
index ec59f915e9..08c3aaef04 100644
--- a/tests/acceptance/test_project_issues.py
+++ b/tests/acceptance/test_project_issues.py
@@ -2,65 +2,52 @@ from __future__ import absolute_import
 
 from django.utils import timezone
 
-from sentry.models import GroupStatus
 from sentry.testutils import AcceptanceTestCase
 
 
 class ProjectIssuesTest(AcceptanceTestCase):
+    def setUp(self):
+        super(ProjectIssuesTest, self).setUp()
+        self.user = self.create_user('foo@example.com')
+        self.org = self.create_organization(
+            owner=self.user,
+            name='Rowdy Tiger'
+        )
+        self.team = self.create_team(
+            organization=self.org,
+            name='Mariachi Band'
+        )
+        self.project = self.create_project(
+            organization=self.org,
+            team=self.team,
+            name='Bengal',
+        )
+        self.login_as(self.user)
+        self.path = self.route(
+            '/{}/{}/', self.org.slug, self.project.slug
+        )
+
     # TODO(dcramer): abstract fixtures into a basic set that is present for
     # all acceptance tests
     def test_not_setup(self):
-        user = self.create_user()
-        org = self.create_organization(owner=user)
-        team = self.create_team(organization=org)
-        project = self.create_project(
-            organization=org, team=team, first_event=None)
-
-        self.login_as(user)
-
         # TODO(dcramer): we should add basic assertions around "i wanted this
         # URL but was sent somewhere else"
-        self.browser.get(self.route(
-            '/{}/{}/', org.slug, project.slug
-        ))
+        self.browser.get(self.path)
         self.wait_until('.awaiting-events')
         self.snapshot('project issues not configured')
 
     def test_with_issues(self):
-        user = self.create_user()
-        org = self.create_organization(owner=user)
-        team = self.create_team(organization=org)
-        project = self.create_project(
-            organization=org, team=team, first_event=timezone.now())
+        self.project.update(first_event=timezone.now())
         self.create_group(
-            project=project,
+            project=self.project,
             message='Foo bar',
-            status=GroupStatus.UNRESOLVED,
         )
-
-        self.login_as(user)
-
-        # TODO(dcramer): we should add basic assertions around "i wanted this
-        # URL but was sent somewhere else"
-        self.browser.get(self.route(
-            '/{}/{}/', org.slug, project.slug
-        ))
+        self.browser.get(self.path)
         self.wait_until('.group-list')
         self.snapshot('project issues with issues')
 
     def test_with_no_issues(self):
-        user = self.create_user()
-        org = self.create_organization(owner=user)
-        team = self.create_team(organization=org)
-        project = self.create_project(
-            organization=org, team=team, first_event=timezone.now())
-
-        self.login_as(user)
-
-        # TODO(dcramer): we should add basic assertions around "i wanted this
-        # URL but was sent somewhere else"
-        self.browser.get(self.route(
-            '/{}/{}/', org.slug, project.slug
-        ))
+        self.project.update(first_event=timezone.now())
+        self.browser.get(self.path)
         self.wait_until('.empty-stream')
         self.snapshot('project issues without issues')
