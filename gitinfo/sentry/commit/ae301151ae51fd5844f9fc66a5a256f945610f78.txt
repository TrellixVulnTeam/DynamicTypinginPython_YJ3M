commit ae301151ae51fd5844f9fc66a5a256f945610f78
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 8 14:16:52 2018 -0800

    feat: Improve organization deletions UX
    
    - Override most organization pages to show deletion notification (React)
    - Fix 'status.id' to be lowercase in API response

diff --git a/src/sentry/api/serializers/models/organization.py b/src/sentry/api/serializers/models/organization.py
index 6d9a863e2c..b0840826f3 100644
--- a/src/sentry/api/serializers/models/organization.py
+++ b/src/sentry/api/serializers/models/organization.py
@@ -44,7 +44,7 @@ class OrganizationSerializer(Serializer):
             'id': six.text_type(obj.id),
             'slug': obj.slug,
             'status': {
-                'id': status.name,
+                'id': status.name.lower(),
                 'name': status.label,
             },
             'name': obj.name or obj.slug,
diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
index 995b6b72fd..8b9ad17df3 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -1,20 +1,152 @@
-import React from 'react';
+import React, {Component} from 'react';
+import PropTypes from 'prop-types';
 
+import AlertActions from '../actions/alertActions';
+import Button from '../components/buttons/button';
+import {Client} from '../api';
 import OrganizationContext from './organizationContext';
-
+import NarrowLayout from '../components/narrowLayout';
 import Footer from '../components/footer';
 import Sidebar from '../components/sidebar';
+import {t, tct} from '../locale';
+
+class DeletionInProgress extends Component {
+  static propTypes = {
+    organization: PropTypes.object.isRequired,
+  };
 
-class OrganizationDetails extends React.Component {
   render() {
+    let {organization} = this.props;
     return (
-      <OrganizationContext {...this.props}>
+      <NarrowLayout>
+        <p>
+          {tct(
+            'The [organization] organization is currently in the process of being deleted from Sentry.',
+            {
+              organization: <strong>{organization.slug}</strong>,
+            }
+          )}
+        </p>
+      </NarrowLayout>
+    );
+  }
+}
+
+class DeletionPending extends Component {
+  static propTypes = {
+    organization: PropTypes.object.isRequired,
+  };
+
+  constructor(...args) {
+    super(...args);
+    this.state = {submitInProgress: false};
+  }
+
+  componentWillMount() {
+    this.api = new Client();
+  }
+
+  componentWillUnmount() {
+    this.api.clear();
+  }
+
+  onRestore = () => {
+    if (this.state.submitInProgress) return;
+    this.setState({submitInProgress: true});
+    this.api.request(`/organizations/${this.props.organization.slug}/`, {
+      method: 'PUT',
+      data: {cancelDeletion: true},
+      success: () => {
+        window.location.reload();
+      },
+      error: () => {
+        AlertActions.addAlert({
+          message:
+            'We were unable to restore this organization. Please try again or contact support.',
+          type: 'error',
+        });
+        this.setState({submitInProgress: false});
+      },
+    });
+  };
+
+  render() {
+    let {organization} = this.props;
+    let access = new Set(organization.access);
+    return (
+      <NarrowLayout>
+        <h3>{t('Deletion Scheduled')}</h3>
+        <p>
+          {tct('The [organization] organization is currently scheduled for deletion.', {
+            organization: <strong>{organization.slug}</strong>,
+          })}
+        </p>
+
+        {access.has('org:admin') ? (
+          <div>
+            <p>
+              {t(
+                'Would you like to cancel this process and restore the organization back to the original state?'
+              )}
+            </p>
+            <p>
+              <Button
+                priority="primary"
+                onClick={this.onRestore}
+                disabled={this.state.submitInProgress}
+              >
+                {t('Restore Organization')}
+              </Button>
+            </p>
+          </div>
+        ) : (
+          <p>
+            {t(
+              'If this is a mistake, contact an organization owner and ask them to restore this organization.'
+            )}
+          </p>
+        )}
+        <p>
+          <small>
+            {t(
+              "Note: Restoration is available until the process begins. Once it does, there's no recovering the data that has been removed."
+            )}
+          </small>
+        </p>
+      </NarrowLayout>
+    );
+  }
+}
+
+class OrganizationDetailsBody extends Component {
+  static contextTypes = {
+    organization: PropTypes.object.isRequired,
+  };
+
+  render() {
+    let {organization} = this.context;
+    if (organization.status)
+      if (organization.status.id === 'pending_deletion') {
+        return <DeletionPending organization={organization} />;
+      } else if (organization.status.id === 'deletion_in_progress') {
+        return <DeletionInProgress organization={organization} />;
+      }
+    return (
+      <div>
         <Sidebar />
         {this.props.children}
         <Footer />
-      </OrganizationContext>
+      </div>
     );
   }
 }
 
-export default OrganizationDetails;
+export default class OrganizationDetails extends Component {
+  render() {
+    return (
+      <OrganizationContext {...this.props}>
+        <OrganizationDetailsBody>{this.props.children}</OrganizationDetailsBody>
+      </OrganizationContext>
+    );
+  }
+}
diff --git a/src/sentry/templates/sentry/restore-organization.html b/src/sentry/templates/sentry/restore-organization.html
index edb048daa2..5f42bb220a 100644
--- a/src/sentry/templates/sentry/restore-organization.html
+++ b/src/sentry/templates/sentry/restore-organization.html
@@ -6,15 +6,14 @@
 
 {% block main %}
   <section class="body">
+    <h3>{% trans "Deletion Scheduled" %}</h3>
     {% if pending_deletion %}
     <form class="form-stacked" action="" method="post">
       {% csrf_token %}
-      <p>The <strong>{{ deleting_organization.name }}</strong> organization is currently scheduled for deletion deletion.</p>
-      <p>{% blocktrans %}Would you like to cancel and restore the organization back to the original state?{% endblocktrans %}</p>
-
-      <div class="actions">
-        <button type="submit" class="btn btn-primary">{% trans "Restore Organization" %}</button>
-      </div>
+      <p>The <strong>{{ deleting_organization.name }}</strong> organization is currently scheduled for deletion.</p>
+      <p>{% blocktrans %}Would you like to cancel this process and restore the organization back to the original state{% endblocktrans %}</p>
+      <p><button type="submit" class="btn btn-primary">{% trans "Restore Organization" %}</button></p>
+      <p>{% blocktrans %}Note: Restoration is available until deletion has started. Once it begins, there's no recovering the data that has been removed.{% endblocktrans %}</p>
     </form>
     {% else %}
     <p>{% blocktrans %}Sorry, but this organization is currently in progress of being deleted. No turning back.{% endblocktrans %} :(</p>
diff --git a/tests/js/setup.js b/tests/js/setup.js
index b295a8a7a3..e5d1f323e0 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -38,7 +38,7 @@ window.TestStubs = {
     pathame: '/mock-pathname/',
   }),
 
-  ApiKey: (...params) => {
+  ApiKey: params => {
     return {
       allowed_origins: '',
       id: 1,
@@ -68,7 +68,7 @@ window.TestStubs = {
     };
   },
 
-  Team: (...params) => {
+  Team: params => {
     return {
       id: '1',
       slug: 'team-slug',
@@ -77,7 +77,7 @@ window.TestStubs = {
     };
   },
 
-  Members: (...params) => [
+  Members: () => [
     {
       id: '1',
       email: '',
@@ -129,10 +129,9 @@ window.TestStubs = {
         username: 'Sentry 3 Username',
       },
     },
-    ...params,
   ],
 
-  Project: (...params) => {
+  Project: params => {
     return {
       id: '2',
       slug: 'project-slug',
@@ -143,7 +142,7 @@ window.TestStubs = {
       ...params,
     };
   },
-  Organization: (...params) => {
+  Organization: params => {
     return {
       id: '3',
       slug: 'org-slug',
@@ -159,13 +158,17 @@ window.TestStubs = {
         'team:write',
         'team:admin',
       ],
+      status: {
+        id: 'active',
+        name: 'active',
+      },
       features: [],
       onboardingTasks: [],
       teams: [],
       ...params,
     };
   },
-  Repository: (...params) => {
+  Repository: params => {
     return {
       id: '4',
       name: 'repo-name',
@@ -175,7 +178,7 @@ window.TestStubs = {
       ...params,
     };
   },
-  GitHubRepositoryProvider: (...params) => {
+  GitHubRepositoryProvider: params => {
     return {
       id: 'github',
       name: 'GitHub',
@@ -192,7 +195,7 @@ window.TestStubs = {
       ...params,
     };
   },
-  Integration: (...params) => {
+  Integration: params => {
     return {
       id: '4',
       name: 'repo-name',
@@ -203,7 +206,7 @@ window.TestStubs = {
       ...params,
     };
   },
-  GitHubIntegrationProvider: (...params) => {
+  GitHubIntegrationProvider: params => {
     return {
       key: 'github',
       name: 'GitHub',
@@ -212,10 +215,10 @@ window.TestStubs = {
       ...params,
     };
   },
-  Tags: (...params) => {
+  Tags: () => {
     return [{key: 'browser', name: 'Browser'}, {key: 'device', name: 'Device'}];
   },
-  Plugin: (...params) => {
+  Plugin: params => {
     return {
       author: {url: 'https://github.com/getsentry/sentry', name: 'Sentry Team'},
       enabled: false,
@@ -226,9 +229,10 @@ window.TestStubs = {
       assets: [],
       hasConfiguration: true,
       canDisable: true,
+      ...params,
     };
   },
-  Plugins: (...params) => {
+  Plugins: () => {
     return [
       {
         author: {url: 'https://github.com/getsentry/sentry', name: 'Sentry Team'},
diff --git a/tests/js/spec/views/__snapshots__/organizationsDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationsDetails.spec.jsx.snap
new file mode 100644
index 0000000000..1ae8290501
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/organizationsDetails.spec.jsx.snap
@@ -0,0 +1,287 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`OrganizationDetails render() deletion in progress should render a deletion in progress prompt 1`] = `
+<div
+  class="app"
+>
+  <div
+    class="app"
+  >
+    <div
+      class="pattern-bg"
+    />
+    <div
+      class="container"
+    >
+      <div
+        class="box box-modal"
+      >
+        <div
+          class="box-header"
+        >
+          <a
+            href="/"
+          >
+            <span
+              class="icon-sentry-logo"
+            />
+          </a>
+        </div>
+        <div
+          class="box-content with-padding"
+        >
+          <p>
+            <span>
+              <span>
+                The 
+              </span>
+              <strong>
+                org-slug
+              </strong>
+              <span>
+                 organization is currently in the process of being deleted from Sentry.
+              </span>
+            </span>
+          </p>
+        </div>
+      </div>
+    </div>
+    <footer>
+      <div
+        class="container"
+      >
+        <div
+          class="pull-right"
+        >
+          <a
+            class="hidden-xs"
+            href="/api/"
+          >
+            API
+          </a>
+          <a
+            href="/docs/"
+          >
+            Docs
+          </a>
+          <a
+            class="hidden-xs"
+            href="https://github.com/getsentry/sentry"
+            rel="noreferrer"
+          >
+            Contribute
+          </a>
+        </div>
+        <a
+          class="icon-sentry-logo"
+          href="/"
+        />
+      </div>
+    </footer>
+  </div>
+</div>
+`;
+
+exports[`OrganizationDetails render() pending deletion should render a restoration prompt 1`] = `
+<div
+  class="app"
+>
+  <div
+    class="app"
+  >
+    <div
+      class="pattern-bg"
+    />
+    <div
+      class="container"
+    >
+      <div
+        class="box box-modal"
+      >
+        <div
+          class="box-header"
+        >
+          <a
+            href="/"
+          >
+            <span
+              class="icon-sentry-logo"
+            />
+          </a>
+        </div>
+        <div
+          class="box-content with-padding"
+        >
+          <h3>
+            Deletion Scheduled
+          </h3>
+          <p>
+            <span>
+              <span>
+                The 
+              </span>
+              <strong>
+                org-slug
+              </strong>
+              <span>
+                 organization is currently scheduled for deletion.
+              </span>
+            </span>
+          </p>
+          <div>
+            <p>
+              Would you like to cancel this process and restore the organization back to the original state?
+            </p>
+            <p>
+              <button
+                class="button button-primary"
+                role="button"
+              >
+                <div
+                  class="flow-layout"
+                >
+                  <span
+                    class="button-label"
+                  >
+                    Restore Organization
+                  </span>
+                </div>
+              </button>
+            </p>
+          </div>
+          <p>
+            <small>
+              Note: Restoration is available until the process begins. Once it does, there's no recovering the data that has been removed.
+            </small>
+          </p>
+        </div>
+      </div>
+    </div>
+    <footer>
+      <div
+        class="container"
+      >
+        <div
+          class="pull-right"
+        >
+          <a
+            class="hidden-xs"
+            href="/api/"
+          >
+            API
+          </a>
+          <a
+            href="/docs/"
+          >
+            Docs
+          </a>
+          <a
+            class="hidden-xs"
+            href="https://github.com/getsentry/sentry"
+            rel="noreferrer"
+          >
+            Contribute
+          </a>
+        </div>
+        <a
+          class="icon-sentry-logo"
+          href="/"
+        />
+      </div>
+    </footer>
+  </div>
+</div>
+`;
+
+exports[`OrganizationDetails render() pending deletion should render a restoration prompt without action for members 1`] = `
+<div
+  class="app"
+>
+  <div
+    class="app"
+  >
+    <div
+      class="pattern-bg"
+    />
+    <div
+      class="container"
+    >
+      <div
+        class="box box-modal"
+      >
+        <div
+          class="box-header"
+        >
+          <a
+            href="/"
+          >
+            <span
+              class="icon-sentry-logo"
+            />
+          </a>
+        </div>
+        <div
+          class="box-content with-padding"
+        >
+          <h3>
+            Deletion Scheduled
+          </h3>
+          <p>
+            <span>
+              <span>
+                The 
+              </span>
+              <strong>
+                org-slug
+              </strong>
+              <span>
+                 organization is currently scheduled for deletion.
+              </span>
+            </span>
+          </p>
+          <p>
+            If this is a mistake, contact an organization owner and ask them to restore this organization.
+          </p>
+          <p>
+            <small>
+              Note: Restoration is available until the process begins. Once it does, there's no recovering the data that has been removed.
+            </small>
+          </p>
+        </div>
+      </div>
+    </div>
+    <footer>
+      <div
+        class="container"
+      >
+        <div
+          class="pull-right"
+        >
+          <a
+            class="hidden-xs"
+            href="/api/"
+          >
+            API
+          </a>
+          <a
+            href="/docs/"
+          >
+            Docs
+          </a>
+          <a
+            class="hidden-xs"
+            href="https://github.com/getsentry/sentry"
+            rel="noreferrer"
+          >
+            Contribute
+          </a>
+        </div>
+        <a
+          class="icon-sentry-logo"
+          href="/"
+        />
+      </div>
+    </footer>
+  </div>
+</div>
+`;
diff --git a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
index 8259886748..549b949335 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
@@ -129,6 +129,10 @@ exports[`ProjectAlertSettings render() renders 1`] = `
           "name": "Organization Name",
           "onboardingTasks": Array [],
           "slug": "org-slug",
+          "status": Object {
+            "id": "active",
+            "name": "active",
+          },
           "teams": Array [],
         }
       }
diff --git a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
index 32f46d3888..a1f4cfcc04 100644
--- a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
@@ -26,6 +26,10 @@ exports[`ProjectPluginDetails renders 1`] = `
       "name": "Organization Name",
       "onboardingTasks": Array [],
       "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
       "teams": Array [],
     }
   }
@@ -72,6 +76,10 @@ exports[`ProjectPluginDetails renders 1`] = `
         "name": "Organization Name",
         "onboardingTasks": Array [],
         "slug": "org-slug",
+        "status": Object {
+          "id": "active",
+          "name": "active",
+        },
         "teams": Array [],
       }
     }
@@ -216,6 +224,10 @@ exports[`ProjectPluginDetails renders 1`] = `
                   "name": "Organization Name",
                   "onboardingTasks": Array [],
                   "slug": "org-slug",
+                  "status": Object {
+                    "id": "active",
+                    "name": "active",
+                  },
                   "teams": Array [],
                 }
               }
@@ -269,6 +281,10 @@ exports[`ProjectPluginDetails renders 1`] = `
                         "name": "Organization Name",
                         "onboardingTasks": Array [],
                         "slug": "org-slug",
+                        "status": Object {
+                          "id": "active",
+                          "name": "active",
+                        },
                         "teams": Array [],
                       }
                     }
diff --git a/tests/js/spec/views/organizationsDetails.spec.jsx b/tests/js/spec/views/organizationsDetails.spec.jsx
new file mode 100644
index 0000000000..0d2b967d5b
--- /dev/null
+++ b/tests/js/spec/views/organizationsDetails.spec.jsx
@@ -0,0 +1,66 @@
+import React from 'react';
+import {render} from 'enzyme';
+
+import {Client} from 'app/api';
+import OrganizationDetails from 'app/views/organizationDetails';
+
+describe('OrganizationDetails', function() {
+  beforeEach(function() {
+    Client.clearMockResponses();
+  });
+
+  describe('render()', function() {
+    describe('pending deletion', () => {
+      it('should render a restoration prompt', function() {
+        Client.addMockResponse({
+          url: '/organizations/org-slug/',
+          body: TestStubs.Organization({
+            slug: 'org-slug',
+            status: {
+              id: 'pending_deletion',
+              name: 'pending deletion',
+            },
+          }),
+        });
+        let tree = render(<OrganizationDetails params={{orgId: 'org-slug'}} />);
+        expect(tree).toMatchSnapshot();
+      });
+
+      it('should render a restoration prompt without action for members', function() {
+        Client.addMockResponse({
+          url: '/organizations/org-slug/',
+          body: TestStubs.Organization({
+            slug: 'org-slug',
+            access: [],
+            status: {
+              id: 'pending_deletion',
+              name: 'pending deletion',
+            },
+          }),
+        });
+        let tree = render(<OrganizationDetails params={{orgId: 'org-slug'}} />);
+        expect(tree).toMatchSnapshot();
+      });
+    });
+
+    describe('deletion in progress', () => {
+      beforeEach(() => {
+        Client.addMockResponse({
+          url: '/organizations/org-slug/',
+          body: TestStubs.Organization({
+            slug: 'org-slug',
+            status: {
+              id: 'deletion_in_progress',
+              name: 'deletion in progress',
+            },
+          }),
+        });
+      });
+
+      it('should render a deletion in progress prompt', function() {
+        let tree = render(<OrganizationDetails params={{orgId: 'org-slug'}} />);
+        expect(tree).toMatchSnapshot();
+      });
+    });
+  });
+});
