commit e5eb18ac03bcb1bb1262a751ed41e5c421593870
Author: Katie Byers <katie.byers@sentry.io>
Date:   Tue Dec 3 00:09:15 2019 -0800

    chore(various): Fix tiny language things (#15906)
    
    Tiny typos and black reformatting

diff --git a/src/sentry/api/endpoints/group_events.py b/src/sentry/api/endpoints/group_events.py
index 506159cee0..7139199c0a 100644
--- a/src/sentry/api/endpoints/group_events.py
+++ b/src/sentry/api/endpoints/group_events.py
@@ -47,7 +47,9 @@ class GroupEventsEndpoint(GroupEndpoint, EnvironmentMixin):
         ``````````````````````
 
         This endpoint lists an issue's events.
-        :qparam bool full: if this is set to true then the event payload will include the full event body, including the stacktrace. Set to 1 to enable.
+        :qparam bool full: if this is set to true then the event payload will
+                           include the full event body, including the stacktrace.
+                           Set to 1 to enable.
 
         :pparam string issue_id: the ID of the issue to retrieve.
 
diff --git a/src/sentry/api/endpoints/project_events.py b/src/sentry/api/endpoints/project_events.py
index e7019b1f70..6d388c465b 100644
--- a/src/sentry/api/endpoints/project_events.py
+++ b/src/sentry/api/endpoints/project_events.py
@@ -30,7 +30,9 @@ class ProjectEventsEndpoint(ProjectEndpoint):
 
         Note: This endpoint is experimental and may be removed without notice.
 
-        :qparam bool full: if this is set to true then the event payload will include the full event body, including the stacktrace. Set to 1 to enable.
+        :qparam bool full: if this is set to true then the event payload will
+                           include the full event body, including the stacktrace.
+                           Set to 1 to enable.
 
         :pparam string organization_slug: the slug of the organization the
                                           groups belong to.
diff --git a/src/sentry/db/models/query.py b/src/sentry/db/models/query.py
index aa438248e4..aebedbb91a 100644
--- a/src/sentry/db/models/query.py
+++ b/src/sentry/db/models/query.py
@@ -38,7 +38,7 @@ def update(self, using=None, **kwargs):
         return affected
     elif affected < 0:
         raise ValueError(
-            "Somehow we have updated a negative amount of rows, you seem to have a problem with your db backend."
+            "Somehow we have updated a negative number of rows. You seem to have a problem with your db backend."
         )
     else:
         raise ValueError("Somehow we have updated multiple rows, and you are now royally fucked.")
diff --git a/src/sentry/integrations/pagerduty/integration.py b/src/sentry/integrations/pagerduty/integration.py
index 955a91f463..b8ae52671c 100644
--- a/src/sentry/integrations/pagerduty/integration.py
+++ b/src/sentry/integrations/pagerduty/integration.py
@@ -16,10 +16,7 @@ from sentry.integrations.base import (
     FeatureDescription,
 )
 
-from sentry.models import (
-    OrganizationIntegration,
-    PagerDutyService,
-)
+from sentry.models import OrganizationIntegration, PagerDutyService
 
 from sentry.pipeline import PipelineView
 from .client import PagerDutyClient
@@ -68,7 +65,7 @@ class PagerDutyIntegration(IntegrationInstallation):
                 "help": "If a services needs to be updated, deleted, or added manually please do so here. Alert rules will need to be individually updated for any additions or deletions of services.",
                 "addButtonText": "",
                 "columnLabels": {"service": "Service", "integration_key": "Integration Key"},
-                "columnKeys": ["service", "integration_key"]
+                "columnKeys": ["service", "integration_key"],
             }
         ]
 
@@ -77,7 +74,9 @@ class PagerDutyIntegration(IntegrationInstallation):
     def update_organization_config(self, data):
         if "service_table" in data:
             with transaction.atomic():
-                PagerDutyService.objects.filter(organization_integration=self.org_integration).delete()
+                PagerDutyService.objects.filter(
+                    organization_integration=self.org_integration
+                ).delete()
                 for item in data["service_table"]:
                     service_name = item["service"]
                     key = item["integration_key"]
@@ -92,7 +91,9 @@ class PagerDutyIntegration(IntegrationInstallation):
     def get_config_data(self):
         service_list = []
         for s in self.services:
-            service_list.append({"service": s.service_name, "integration_key": s.integration_key, "id": s.id})
+            service_list.append(
+                {"service": s.service_name, "integration_key": s.integration_key, "id": s.id}
+            )
         return {"service_table": service_list}
 
     @property
@@ -141,10 +142,7 @@ class PagerDutyIntegrationProvider(IntegrationProvider):
         return {
             "name": account["name"],
             "external_id": account["subdomain"],
-            "metadata": {
-                "services": services,
-                "domain_name": account["subdomain"],
-            },
+            "metadata": {"services": services, "domain_name": account["subdomain"]},
         }
 
 
diff --git a/src/sentry/models/groupcommitresolution.py b/src/sentry/models/groupcommitresolution.py
index e488397aaa..9447a7c66f 100644
--- a/src/sentry/models/groupcommitresolution.py
+++ b/src/sentry/models/groupcommitresolution.py
@@ -7,7 +7,7 @@ from sentry.db.models import BoundedPositiveIntegerField, Model, sane_repr
 
 class GroupCommitResolution(Model):
     """
-    When a Group is referenced via a commit, it's association is stored here.
+    When a Group is referenced via a commit, its association is stored here.
     """
 
     __core__ = False
diff --git a/src/sentry_plugins/base.py b/src/sentry_plugins/base.py
index 240057a896..632afdd4f4 100644
--- a/src/sentry_plugins/base.py
+++ b/src/sentry_plugins/base.py
@@ -7,11 +7,7 @@ import sys
 
 from sentry.exceptions import InvalidIdentity, PluginError
 
-from sentry_plugins.constants import (
-    ERR_INTERNAL,
-    ERR_UNAUTHORIZED,
-    ERR_UNSUPPORTED_RESPONSE_TYPE,
-)
+from sentry_plugins.constants import ERR_INTERNAL, ERR_UNAUTHORIZED, ERR_UNSUPPORTED_RESPONSE_TYPE
 from sentry_plugins.exceptions import (
     ApiError,
     ApiHostError,
