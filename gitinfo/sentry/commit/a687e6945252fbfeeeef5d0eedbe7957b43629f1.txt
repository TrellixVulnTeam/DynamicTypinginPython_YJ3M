commit a687e6945252fbfeeeef5d0eedbe7957b43629f1
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Fri Feb 17 13:47:52 2017 -0800

    Add Avatars

diff --git a/src/sentry/api/serializers/models/filechange.py b/src/sentry/api/serializers/models/filechange.py
index daa4f1bfe4..223161b137 100644
--- a/src/sentry/api/serializers/models/filechange.py
+++ b/src/sentry/api/serializers/models/filechange.py
@@ -4,15 +4,27 @@ import six
 
 from sentry.api.serializers import Serializer, register
 from sentry.models import CommitFileChange
+from sentry.api.serializers.models.release import get_users_for_commits
 
 
 @register(CommitFileChange)
 class CommitFileChangeSerializer(Serializer):
+    def get_attrs(self, item_list, user):
+        commits = [f.commit for f in item_list]
+        author_objs = get_users_for_commits(commits)
+        result = {}
+        for item in item_list:
+            result[item] = {
+                'user': author_objs.get(item.commit.author_id, {})
+            }
+
+        return result
+
     def serialize(self, obj, attrs, user):
         return {
             'id': six.text_type(obj.id),
             'org_id': obj.organization_id,
-            'author': obj.commit.author.name,
+            'author': attrs.get('user', {}),
             'commit_message': obj.commit.message,
             'filename': obj.filename,
             'type': obj.type
diff --git a/src/sentry/static/sentry/app/components/commitAuthorStats.jsx b/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
new file mode 100644
index 0000000000..d76ef683e4
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
@@ -0,0 +1,111 @@
+import React from 'react';
+
+import LoadingIndicator from '../components/loadingIndicator';
+import LoadingError from '../components/loadingError';
+import Avatar from '../components/Avatar';
+
+import TooltipMixin from '../mixins/tooltip';
+import ApiMixin from '../mixins/apiMixin';
+
+const CommitAuthorStats = React.createClass({
+  propTypes: {
+    orgId: React.PropTypes.string.isRequired,
+    projectId: React.PropTypes.string.isRequired,
+    version: React.PropTypes.string.isRequired,
+  },
+
+  mixins: [
+    ApiMixin,
+    TooltipMixin({
+      selector: '.tip'
+    }),
+  ],
+
+  getInitialState() {
+    return {
+      loading: true,
+      error: false,
+    };
+  },
+
+  componentDidMount() {
+    let {orgId, projectId, version} = this.props;
+    let path = `/projects/${orgId}/${projectId}/releases/${version}/commits/`;
+    this.api.request(path, {
+      method: 'GET',
+      success: (data, _, jqXHR) => {
+        this.setState({
+          error: false,
+          loading: false,
+          commitList: data,
+          pageLinks: jqXHR.getResponseHeader('Link')
+        });
+      },
+      error: () => {
+        this.setState({
+          error: true,
+          loading: false
+        });
+      }
+    });
+  },
+
+  emptyState() {
+    return(
+      <div className="box empty-stream m-y-0">
+        <span className="icon icon-exclamation" />
+        <p>There are no commits associated with this release.</p>
+        {/* Todo: Should we link to repo settings from here?  */}
+      </div>
+    );
+  },
+
+  render() {
+
+    if (this.state.loading)
+      return <LoadingIndicator/>;
+
+    if (this.state.error)
+      return <LoadingError/>;
+
+    let {commitList} = this.state;
+    if (!commitList.length)
+      return <this.emptyState/>;
+
+    let commitAuthors = {};
+
+    for (let i = 0; i < commitList.length; i++) {
+      if (!commitAuthors[commitList[i].author.email]) {
+        commitAuthors[commitList[i].author.email] = {
+          commit: 1,
+          author: commitList[i].author
+        };
+      }
+      else {
+        commitAuthors[commitList[i].author.email].commit += 1;
+      }
+    }
+
+    let authors = Object.keys(commitAuthors);
+    return (
+      <div className="col-sm-3">
+        Commits by Author
+        {authors.map(author => {
+          if (!author) {
+            return null;
+          }
+          return (<div className="avatar-grid">
+                    <span className="avatar-grid-item tip"
+                         title={commitAuthors[author].author.name + ' ' + commitAuthors[author].author.email}>
+                      <Avatar user={commitAuthors[author].author}/>
+                    </span>
+                    <span  className="col-sm-2">{commitAuthors[author].commit} commits</span>
+                  </div>);
+          }
+        )}
+      </div>
+    );
+  }
+});
+
+export default CommitAuthorStats;
\ No newline at end of file
diff --git a/src/sentry/static/sentry/app/components/fileChange.jsx b/src/sentry/static/sentry/app/components/fileChange.jsx
index 0cb233af0e..f5b807d275 100644
--- a/src/sentry/static/sentry/app/components/fileChange.jsx
+++ b/src/sentry/static/sentry/app/components/fileChange.jsx
@@ -1,5 +1,7 @@
 import React from 'react';
+import Avatar from '../components/Avatar';
 
+import TooltipMixin from '../mixins/tooltip';
 import ApiMixin from '../mixins/apiMixin';
 
 // import LoadingError from '../components/loadingError';
@@ -15,7 +17,10 @@ const FileChange = React.createClass({
   },
 
   mixins: [
-    ApiMixin
+    ApiMixin,
+    TooltipMixin({
+      selector: '.tip'
+    }),
   ],
 
   getInitialState() {
@@ -29,23 +34,27 @@ const FileChange = React.createClass({
     authors = Array.from(authors);
     types = Array.from(types);
     return (
-      <li div className="row">
-        <div className="col-sm-4">{filename}</div>
-        <div className="col-sm-4">
+      <li className="row">
+        <div className="col-sm-3">{filename}</div>
+        <div className="col-sm-3 avatar-grid">
         {authors.map(author => {
-          return (<span>{author} </span>);
+            return (
+              <span className="avatar-grid-item tip"
+                   title={author.name + ' ' + author.email}>
+                <Avatar user={author}/>
+              </span>);
         })}
         </div>
-        <div className="col-sm-4">
+        <div className="col-sm-3">
         {types.map(type => {
           if (type ===  'A') {
-            return (<span>Added </span>);
+            return (<span key={type}>Added </span>);
           }
           else if (type === 'D') {
-            return (<span>Deleted </span>);
+            return (<span key={type}>Deleted </span>);
           }
           else if (type === 'M') {
-            return (<span>Modified </span>);
+            return (<span key={type}>Modified </span>);
           }
         })}
         </div>
diff --git a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
index 3ad83a4db3..861bf1c710 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
@@ -4,7 +4,7 @@ import LoadingIndicator from '../../components/loadingIndicator';
 import LoadingError from '../../components/loadingError';
 
 import FileChange from '../../components/fileChange';
-
+import CommitAuthorStats from '../../components/commitAuthorStats';
 import ApiMixin from '../../mixins/apiMixin';
 
 const ReleaseOverview = React.createClass({
@@ -52,6 +52,7 @@ const ReleaseOverview = React.createClass({
   },
 
   render() {
+    let {orgId, projectId, version} = this.props.params;
 
     if (this.state.loading)
       return <LoadingIndicator/>;
@@ -96,6 +97,11 @@ const ReleaseOverview = React.createClass({
             );
           })}
         </ul>
+        <CommitAuthorStats
+          orgId={orgId}
+          projectId={projectId}
+          version={version}
+        />
       </div>
     );
   }
