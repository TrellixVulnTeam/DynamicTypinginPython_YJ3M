commit 09b7700a09fd535124d020f54b3d623df0cd54e6
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Oct 12 06:51:43 2016 +0200

    Smaller improvements for the source map fetching

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index b83d68967a..cb5a7897d1 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -379,10 +379,14 @@ def fetch_file(url, project=None, release=None, allow_scraping=True):
                     if cl > settings.SENTRY_SOURCE_FETCH_MAX_SIZE:
                         raise OverflowError()
                     contents = []
-                    for chunk in response.iter_content():
+                    cl = 0
+                    for chunk in response.iter_content(16 * 1024):
                         if time.time() - now > settings.SENTRY_SOURCE_FETCH_TIMEOUT:
                             raise Timeout()
                         contents.append(chunk)
+                        cl += len(chunk)
+                        if cl > settings.SENTRY_SOURCE_FETCH_MAX_SIZE:
+                            raise OverflowError()
                 except Exception as exc:
                     logger.debug('Unable to fetch %r', url, exc_info=True)
                     if isinstance(exc, RestrictedIPAddress):
@@ -397,12 +401,12 @@ def fetch_file(url, project=None, release=None, allow_scraping=True):
                         }
                     elif isinstance(exc, Timeout):
                         error = {
-                            'type': EventError.JS_SOURCEMAP_TIMEOUT,
+                            'type': EventError.JS_FETCH_TIMEOUT,
                             'url': expose_url(url),
                         }
                     elif isinstance(exc, OverflowError):
                         error = {
-                            'type': EventError.JS_SOURCEMAP_TOO_LARGE,
+                            'type': EventError.JS_TOO_LARGE,
                             'url': expose_url(url),
                         }
                     elif isinstance(exc, (RequestException, ZeroReturnError)):
diff --git a/src/sentry/models/eventerror.py b/src/sentry/models/eventerror.py
index b4dae739b2..436585d798 100644
--- a/src/sentry/models/eventerror.py
+++ b/src/sentry/models/eventerror.py
@@ -20,8 +20,8 @@ class EventError(object):
     JS_TOO_MANY_REMOTE_SOURCES = 'js_too_many_sources'
     JS_INVALID_SOURCE_ENCODING = 'js_invalid_source_encoding'
     JS_INVALID_SOURCEMAP_LOCATION = 'js_invalid_sourcemap_location'
-    JS_SOURCEMAP_TOO_LARGE = 'js_sourcemap_too_large'
-    JS_SOURCEMAP_TIMEOUT = 'js_sourcemap_timeout'
+    JS_TOO_LARGE = 'js_too_large'
+    JS_FETCH_TIMEOUT = 'js_fetch_timeout'
     NATIVE_NO_CRASHED_THREAD = 'native_no_crashed_thread'
     NATIVE_INTERNAL_FAILURE = 'native_internal_failure'
     NATIVE_NO_SYMSYND = 'native_no_symsynd'
@@ -42,8 +42,8 @@ class EventError(object):
         JS_TOO_MANY_REMOTE_SOURCES: u'The maximum number of remote source requests was made',
         JS_INVALID_SOURCE_ENCODING: u'Source file was not \'{value}\' encoding: {url}',
         JS_INVALID_SOURCEMAP_LOCATION: u'Invalid location in sourcemap: ({column}, {row})',
-        JS_SOURCEMAP_TOO_LARGE: u'Sourcemap too large',
-        JS_SOURCEMAP_TIMEOUT: u'Sourcemap took too long to load',
+        JS_TOO_LARGE: u'Remote file too large',
+        JS_FETCH_TIMEOUT: u'Remote file took too long to load',
         NATIVE_NO_CRASHED_THREAD: u'No crashed thread found in crash report',
         NATIVE_INTERNAL_FAILURE: u'Internal failure when attempting to symbolicate: {error}',
         NATIVE_NO_SYMSYND: u'The symbolizer is not configured for this system.',
