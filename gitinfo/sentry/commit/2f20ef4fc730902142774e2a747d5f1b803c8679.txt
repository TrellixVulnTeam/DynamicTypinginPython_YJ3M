commit 2f20ef4fc730902142774e2a747d5f1b803c8679
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Mon May 4 17:31:36 2020 +0200

    feat(ui)): Added module in the exception section (#18591)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx
index 7eb936ce7b..969c82a270 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx
@@ -32,7 +32,7 @@ class CrashContent extends React.Component {
     ) : (
       <ExceptionContent
         type={stackType}
-        view={stackView}
+        stackView={stackView}
         values={exception.values}
         platform={event.platform}
         newestFirst={newestFirst}
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
deleted file mode 100644
index f92e7efd08..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
+++ /dev/null
@@ -1,67 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from '@emotion/styled';
-
-import space from 'app/styles/space';
-import Annotated from 'app/components/events/meta/annotated';
-import ExceptionMechanism from 'app/components/events/interfaces/exceptionMechanism';
-import SentryTypes from 'app/sentryTypes';
-
-import ExceptionStacktraceContent from './exceptionStacktraceContent';
-
-class ExceptionContent extends React.Component {
-  static propTypes = {
-    type: PropTypes.oneOf(['original', 'minified']),
-    values: PropTypes.array.isRequired,
-    view: PropTypes.string.isRequired,
-    platform: PropTypes.string,
-    newestFirst: PropTypes.bool,
-    event: SentryTypes.Event.isRequired,
-  };
-
-  render() {
-    const {newestFirst, event, view: stackView, values} = this.props;
-    if (newestFirst) {
-      values.reverse();
-    }
-
-    const children = values.map((exc, excIdx) => (
-      <div key={excIdx} className="exception">
-        <h5 className="break-word" style={{marginBottom: 5}}>
-          <span>{exc.type}</span>
-        </h5>
-
-        <Annotated object={exc} objectKey="value" required>
-          {value => <StyledPre className="exc-message">{value}</StyledPre>}
-        </Annotated>
-
-        {exc.mechanism && (
-          <ExceptionMechanism data={exc.mechanism} platform={this.props.platform} />
-        )}
-        <ExceptionStacktraceContent
-          data={
-            this.props.type === 'original'
-              ? exc.stacktrace
-              : exc.rawStacktrace || exc.stacktrace
-          }
-          stackView={stackView}
-          stacktrace={exc.stacktrace}
-          expandFirstFrame={excIdx === 0}
-          platform={this.props.platform}
-          newestFirst={newestFirst}
-          event={event}
-        />
-      </div>
-    ));
-
-    // TODO(dcramer): implement exceptions omitted
-    return <div>{children}</div>;
-  }
-}
-
-export default ExceptionContent;
-
-const StyledPre = styled('pre')`
-  margin-bottom: ${space(1)};
-  margin-top: 0;
-`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.tsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.tsx
new file mode 100644
index 0000000000..c8285b0e68
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.tsx
@@ -0,0 +1,104 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import space from 'app/styles/space';
+import Annotated from 'app/components/events/meta/annotated';
+import ExceptionMechanism from 'app/components/events/interfaces/exceptionMechanism';
+import {Event} from 'app/types';
+import {Stacktrace, RawStacktrace} from 'app/types/stacktrace';
+
+import ExceptionStacktraceContent from './exceptionStacktraceContent';
+import ExceptionTitle from './exceptionTitle';
+
+type ExceptionStacktraceContentProps = React.ComponentProps<
+  typeof ExceptionStacktraceContent
+>;
+
+// TODO(ts): Move the types below to exceptionMechanism component once it is in typescript
+type MechanismMeta = {
+  errno?: {
+    number: number;
+    name?: string;
+  };
+  mach_exception?: {
+    exception: number;
+    code: number;
+    subcode: number;
+    name?: string;
+  };
+  signal?: {
+    number: number;
+    code?: number;
+    name?: string;
+    code_name?: string;
+  };
+};
+
+type Mechanism = {
+  handled: boolean;
+  synthetic: boolean;
+  type: string;
+  meta?: MechanismMeta;
+  data?: object;
+  description?: string;
+  help_link?: string;
+};
+
+type ExceptionValue = {
+  type: string;
+  value: string;
+  stacktrace: Stacktrace;
+  rawStacktrace: RawStacktrace;
+  mechanism: null | Mechanism;
+  module?: string;
+};
+
+type Props = {
+  event: Event;
+  type: 'original' | 'minified';
+  stackView: ExceptionStacktraceContentProps['stackView'];
+  platform: ExceptionStacktraceContentProps['platform'];
+  values: Array<ExceptionValue>;
+  newestFirst?: boolean;
+};
+
+const ExceptionContent = ({
+  newestFirst,
+  event,
+  stackView,
+  platform,
+  values,
+  type,
+}: Props) => {
+  const exceptionValues = values;
+
+  if (newestFirst) {
+    exceptionValues.reverse();
+  }
+
+  return exceptionValues.map((exc, excIdx) => (
+    <div key={excIdx} className="exception">
+      <ExceptionTitle type={exc.type} exceptionModule={exc?.module} />
+      <Annotated object={exc} objectKey="value" required>
+        {value => <StyledPre className="exc-message">{value}</StyledPre>}
+      </Annotated>
+      {exc.mechanism && <ExceptionMechanism data={exc.mechanism} platform={platform} />}
+      <ExceptionStacktraceContent
+        data={type === 'original' ? exc.stacktrace : exc.rawStacktrace || exc.stacktrace}
+        stackView={stackView}
+        stacktrace={exc.stacktrace}
+        expandFirstFrame={excIdx === 0}
+        platform={platform}
+        newestFirst={newestFirst}
+        event={event}
+      />
+    </div>
+  ));
+};
+
+export default ExceptionContent;
+
+const StyledPre = styled('pre')`
+  margin-bottom: ${space(1)};
+  margin-top: 0;
+`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx
index 4c9d6b905f..227cb78c8c 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx
@@ -3,7 +3,9 @@ import forOwn from 'lodash/forOwn';
 import isObject from 'lodash/isObject';
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from '@emotion/styled';
 
+import space from 'app/styles/space';
 import Pills from 'app/components/pills';
 import Pill from 'app/components/pill';
 import Hovercard from 'app/components/hovercard';
@@ -99,11 +101,15 @@ class ExceptionMechanism extends React.Component {
     });
 
     return (
-      <div className="exception-mechanism">
+      <Wrapper>
         <Pills>{pills}</Pills>
-      </div>
+      </Wrapper>
     );
   }
 }
 
 export default ExceptionMechanism;
+
+const Wrapper = styled('div')`
+  margin: ${space(2)} 0;
+`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionStacktraceContent.tsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionStacktraceContent.tsx
index 7a026ead63..0ce82cf505 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionStacktraceContent.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionStacktraceContent.tsx
@@ -1,29 +1,21 @@
 import React from 'react';
 
-import {Frame, PlatformType} from 'app/components/events/interfaces/frame/types';
+import {PlatformType} from 'app/components/events/interfaces/frame/types';
 import {defined} from 'app/utils';
 import StacktraceContent from 'app/components/events/interfaces/stacktraceContent';
 import {Panel} from 'app/components/panels';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import SentryTypes from 'app/sentryTypes';
-
-type StackViewType = 'app' | 'full' | 'raw';
-
-type Stacktrace = {
-  frames: Array<Frame>;
-  hasSystemFrames: boolean;
-  registers: {[key: string]: string} | null;
-  framesOmitted: any;
-};
+import {Stacktrace, StackViewType} from 'app/types/stacktrace';
 
 type Props = {
   stackView: StackViewType;
   data: Stacktrace | null;
   event: SentryTypes.Event;
   platform: PlatformType;
+  stacktrace: Stacktrace;
   expandFirstFrame?: boolean;
   newestFirst?: boolean;
-  stacktrace: Stacktrace;
 };
 
 const ExceptionStacktraceContent = ({
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionTitle.tsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionTitle.tsx
new file mode 100644
index 0000000000..8587420b04
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionTitle.tsx
@@ -0,0 +1,33 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import space from 'app/styles/space';
+import Tooltip from 'app/components/tooltip';
+import {tct} from 'app/locale';
+import {defined} from 'app/utils';
+
+type Props = {
+  type: string;
+  exceptionModule?: string;
+};
+
+const ExceptionTitle = ({type, exceptionModule}: Props) => {
+  if (defined(exceptionModule)) {
+    return (
+      <Tooltip title={tct('from [exceptionModule]', {exceptionModule})}>
+        <Title>{type}</Title>
+      </Tooltip>
+    );
+  }
+
+  return <Title>{type}</Title>;
+};
+
+export default ExceptionTitle;
+
+const Title = styled('h5')`
+  margin-bottom: ${space(0.5)};
+  overflow-wrap: break-word;
+  word-wrap: break-word;
+  word-break: break-word;
+`;
diff --git a/src/sentry/static/sentry/app/types/stacktrace.tsx b/src/sentry/static/sentry/app/types/stacktrace.tsx
new file mode 100644
index 0000000000..731755c74e
--- /dev/null
+++ b/src/sentry/static/sentry/app/types/stacktrace.tsx
@@ -0,0 +1,12 @@
+import {Frame} from 'app/components/events/interfaces/frame/types';
+
+export type StackViewType = 'app' | 'full' | 'raw';
+
+export type Stacktrace = {
+  frames: Array<Frame>;
+  hasSystemFrames: boolean;
+  registers: {[key: string]: string} | null;
+  framesOmitted: any;
+};
+
+export type RawStacktrace = null | Stacktrace;
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index a08d245bef..5170955450 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -1331,10 +1331,6 @@ div.traceback > ul {
   }
 }
 
-.exception-mechanism {
-  margin: 15px 0;
-}
-
 #full-message {
   line-height: 1.5em;
 
diff --git a/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap b/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
index 44480b2251..32c0212f30 100644
--- a/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
+++ b/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
@@ -48,6 +48,7 @@ exports[`CrashContent renders with meta data 1`] = `
         }
       }
       newestFirst={true}
+      stackView="full"
       type="original"
       values={
         Array [
@@ -61,26 +62,79 @@ exports[`CrashContent renders with meta data 1`] = `
           },
         ]
       }
-      view="full"
     >
-      <div>
-        <div
-          className="exception"
-          key="0"
+      <div
+        className="exception"
+        key="0"
+      >
+        <ExceptionTitle
+          exceptionModule="exceptions"
+          type="ValueError"
         >
-          <h5
-            className="break-word"
-            style={
-              Object {
-                "marginBottom": 5,
-              }
+          <Tooltip
+            containerDisplayMode="inline-block"
+            position="top"
+            title={
+              <span>
+                <span>
+                  from 
+                </span>
+                <span>
+                  exceptions
+                </span>
+              </span>
             }
           >
-            <span>
-              ValueError
-            </span>
-          </h5>
-          <Annotated
+            <Manager>
+              <Reference>
+                <InnerReference
+                  setReferenceNode={[Function]}
+                >
+                  <Container
+                    aria-describedby="tooltip-123456"
+                    containerDisplayMode="inline-block"
+                    onBlur={[Function]}
+                    onFocus={[Function]}
+                    onMouseEnter={[Function]}
+                    onMouseLeave={[Function]}
+                  >
+                    <span
+                      aria-describedby="tooltip-123456"
+                      className="css-1y4rfpo-Container eowlwvy0"
+                      onBlur={[Function]}
+                      onFocus={[Function]}
+                      onMouseEnter={[Function]}
+                      onMouseLeave={[Function]}
+                    >
+                      <Title>
+                        <h5
+                          className="css-dcmuoy-Title e1b96xrx0"
+                        >
+                          ValueError
+                        </h5>
+                      </Title>
+                    </span>
+                  </Container>
+                </InnerReference>
+              </Reference>
+            </Manager>
+          </Tooltip>
+        </ExceptionTitle>
+        <Annotated
+          object={
+            Object {
+              "module": "exceptions",
+              "stacktrace": Object {
+                "frames": Array [],
+              },
+              "type": "ValueError",
+              "value": "python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err",
+            }
+          }
+          objectKey="value"
+          required={true}
+        >
+          <MetaData
             object={
               Object {
                 "module": "exceptions",
@@ -91,96 +145,108 @@ exports[`CrashContent renders with meta data 1`] = `
                 "value": "python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err",
               }
             }
-            objectKey="value"
+            prop="value"
             required={true}
           >
-            <MetaData
-              object={
-                Object {
-                  "module": "exceptions",
-                  "stacktrace": Object {
-                    "frames": Array [],
-                  },
-                  "type": "ValueError",
-                  "value": "python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err",
-                }
-              }
-              prop="value"
-              required={true}
+            <ErrorBoundary
+              mini={true}
             >
-              <ErrorBoundary
-                mini={true}
+              <StyledPre
+                className="exc-message"
               >
-                <StyledPre
-                  className="exc-message"
+                <pre
+                  className="exc-message css-1q8nviw-StyledPre e1jgwng30"
                 >
-                  <pre
-                    className="exc-message css-1q8nviw-StyledPre e1rxtykr0"
-                  >
-                    <AnnotatedText
-                      chunks={Array []}
-                      errors={Array []}
-                      remarks={
+                  <AnnotatedText
+                    chunks={Array []}
+                    errors={Array []}
+                    remarks={
+                      Array [
                         Array [
-                          Array [
-                            "device_id",
-                            "p",
-                            11,
-                            51,
-                          ],
-                        ]
-                      }
-                      value="python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err"
-                    >
-                      <span>
-                        <Tooltip
-                          containerDisplayMode="inline-block"
-                          position="top"
-                          title="Pseudonymized because of PII rule \\"device_id\\""
-                        >
-                          <Manager>
-                            <Reference>
-                              <InnerReference
-                                setReferenceNode={[Function]}
+                          "device_id",
+                          "p",
+                          11,
+                          51,
+                        ],
+                      ]
+                    }
+                    value="python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err"
+                  >
+                    <span>
+                      <Tooltip
+                        containerDisplayMode="inline-block"
+                        position="top"
+                        title="Pseudonymized because of PII rule \\"device_id\\""
+                      >
+                        <Manager>
+                          <Reference>
+                            <InnerReference
+                              setReferenceNode={[Function]}
+                            >
+                              <Container
+                                aria-describedby="tooltip-123456"
+                                containerDisplayMode="inline-block"
+                                onBlur={[Function]}
+                                onFocus={[Function]}
+                                onMouseEnter={[Function]}
+                                onMouseLeave={[Function]}
                               >
-                                <Container
+                                <span
                                   aria-describedby="tooltip-123456"
-                                  containerDisplayMode="inline-block"
+                                  className="css-1y4rfpo-Container eowlwvy0"
                                   onBlur={[Function]}
                                   onFocus={[Function]}
                                   onMouseEnter={[Function]}
                                   onMouseLeave={[Function]}
                                 >
-                                  <span
-                                    aria-describedby="tooltip-123456"
-                                    className="css-1y4rfpo-Container eowlwvy0"
-                                    onBlur={[Function]}
-                                    onFocus={[Function]}
-                                    onMouseEnter={[Function]}
-                                    onMouseLeave={[Function]}
-                                  >
-                                    <Redaction>
-                                      <span
-                                        className="css-1vnqw28-Redaction e1p1th7g1"
-                                      >
-                                        python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err
-                                      </span>
-                                    </Redaction>
-                                  </span>
-                                </Container>
-                              </InnerReference>
-                            </Reference>
-                          </Manager>
-                        </Tooltip>
-                         
-                      </span>
-                    </AnnotatedText>
-                  </pre>
-                </StyledPre>
-              </ErrorBoundary>
-            </MetaData>
-          </Annotated>
-          <ExceptionStacktraceContent
+                                  <Redaction>
+                                    <span
+                                      className="css-1vnqw28-Redaction e1p1th7g1"
+                                    >
+                                      python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err
+                                    </span>
+                                  </Redaction>
+                                </span>
+                              </Container>
+                            </InnerReference>
+                          </Reference>
+                        </Manager>
+                      </Tooltip>
+                       
+                    </span>
+                  </AnnotatedText>
+                </pre>
+              </StyledPre>
+            </ErrorBoundary>
+          </MetaData>
+        </Annotated>
+        <ExceptionStacktraceContent
+          data={
+            Object {
+              "frames": Array [],
+            }
+          }
+          event={
+            Object {
+              "dateCreated": "2019-05-21T18:01:48.762Z",
+              "eventID": "12345678901234567890123456789012",
+              "groupID": "1",
+              "id": "1",
+              "message": "ApiException",
+              "tags": Array [],
+              "title": "ApiException",
+            }
+          }
+          expandFirstFrame={true}
+          newestFirst={true}
+          stackView="full"
+          stacktrace={
+            Object {
+              "frames": Array [],
+            }
+          }
+        >
+          <StacktraceContent
             data={
               Object {
                 "frames": Array [],
@@ -198,43 +264,16 @@ exports[`CrashContent renders with meta data 1`] = `
               }
             }
             expandFirstFrame={true}
+            includeSystemFrames={true}
             newestFirst={true}
-            stackView="full"
-            stacktrace={
-              Object {
-                "frames": Array [],
-              }
-            }
           >
-            <StacktraceContent
-              data={
-                Object {
-                  "frames": Array [],
-                }
-              }
-              event={
-                Object {
-                  "dateCreated": "2019-05-21T18:01:48.762Z",
-                  "eventID": "12345678901234567890123456789012",
-                  "groupID": "1",
-                  "id": "1",
-                  "message": "ApiException",
-                  "tags": Array [],
-                  "title": "ApiException",
-                }
-              }
-              expandFirstFrame={true}
-              includeSystemFrames={true}
-              newestFirst={true}
+            <div
+              className=" traceback full-traceback"
             >
-              <div
-                className=" traceback full-traceback"
-              >
-                <ul />
-              </div>
-            </StacktraceContent>
-          </ExceptionStacktraceContent>
-        </div>
+              <ul />
+            </div>
+          </StacktraceContent>
+        </ExceptionStacktraceContent>
       </div>
     </ExceptionContent>
   </ErrorBoundary>
diff --git a/tests/js/spec/components/events/crashContent.spec.jsx b/tests/js/spec/components/events/crashContent.spec.jsx
index 5e1958c237..de6f9de024 100644
--- a/tests/js/spec/components/events/crashContent.spec.jsx
+++ b/tests/js/spec/components/events/crashContent.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'sentry-test/enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import CrashContent from 'app/components/events/interfaces/crashContent';
 import {withMeta} from 'app/components/events/meta/metaProxy';
 
@@ -11,7 +11,7 @@ describe('CrashContent', function() {
   const proxiedExc = withMeta(exc);
 
   it('renders with meta data', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <CrashContent
         projectId="sentry"
         stackView="full"
diff --git a/tests/js/spec/components/events/interfaces/__snapshots__/exceptionMechanism.spec.jsx.snap b/tests/js/spec/components/events/interfaces/__snapshots__/exceptionMechanism.spec.jsx.snap
index 2fd56f6630..3c78b4af48 100644
--- a/tests/js/spec/components/events/interfaces/__snapshots__/exceptionMechanism.spec.jsx.snap
+++ b/tests/js/spec/components/events/interfaces/__snapshots__/exceptionMechanism.spec.jsx.snap
@@ -1,9 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`ExceptionMechanism additional data should render all fields in the data object 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -16,13 +14,11 @@ exports[`ExceptionMechanism additional data should render all fields in the data
       value="0x1"
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism additional data should skip object-like values 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -30,13 +26,11 @@ exports[`ExceptionMechanism additional data should skip object-like values 1`] =
       value="generic"
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism basic attributes should add the help_link to the description hovercard 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -70,13 +64,11 @@ exports[`ExceptionMechanism basic attributes should add the help_link to the des
       </Hovercard>
     </Pill>
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism basic attributes should not add the help_link if not starts with http(s) 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -102,13 +94,11 @@ exports[`ExceptionMechanism basic attributes should not add the help_link if not
       </Hovercard>
     </Pill>
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism basic attributes should render a description hovercard 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -134,13 +124,11 @@ exports[`ExceptionMechanism basic attributes should render a description hoverca
       </Hovercard>
     </Pill>
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism basic attributes should render a help_link icon 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -157,13 +145,11 @@ exports[`ExceptionMechanism basic attributes should render a help_link icon 1`]
       </a>
     </Pill>
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism basic attributes should render the exception mechanism 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -171,13 +157,11 @@ exports[`ExceptionMechanism basic attributes should render the exception mechani
       value="generic"
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism basic attributes should render the handled pill 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -190,13 +174,11 @@ exports[`ExceptionMechanism basic attributes should render the handled pill 1`]
       value={false}
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism errno meta should prefer the errno name if present 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -209,13 +191,11 @@ exports[`ExceptionMechanism errno meta should prefer the errno name if present 1
       value="E2BIG"
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism errno meta should render the errno number 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -228,13 +208,11 @@ exports[`ExceptionMechanism errno meta should render the errno number 1`] = `
       value={7}
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism mach_exception meta should prefer the exception name if present 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -247,13 +225,11 @@ exports[`ExceptionMechanism mach_exception meta should prefer the exception name
       value="EXC_BAD_ACCESS"
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism mach_exception meta should render the mach exception number 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -266,13 +242,11 @@ exports[`ExceptionMechanism mach_exception meta should render the mach exception
       value={1}
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism signal meta should add the signal code if present 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -285,13 +259,11 @@ exports[`ExceptionMechanism signal meta should add the signal code if present 1`
       value="11 (code 0)"
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism signal meta should prefer signal and code names if present 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -304,13 +276,11 @@ exports[`ExceptionMechanism signal meta should prefer signal and code names if p
       value="SIGSEGV (SEGV_NOOP)"
     />
   </Pills>
-</div>
+</Wrapper>
 `;
 
 exports[`ExceptionMechanism signal meta should render the signal number 1`] = `
-<div
-  className="exception-mechanism"
->
+<Wrapper>
   <Pills>
     <Pill
       key="mechanism"
@@ -323,5 +293,5 @@ exports[`ExceptionMechanism signal meta should render the signal number 1`] = `
       value={11}
     />
   </Pills>
-</div>
+</Wrapper>
 `;
