commit 7e41b9de5566d1fb7d0d3eda8791d73da9801f09
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Jan 23 16:23:07 2019 -0800

    feat(charts): Add click action to release lines on charts (#11654)
    
    This allows you to navigate to a release from charts.

diff --git a/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx b/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
index 049027714d..72c1ca07f4 100644
--- a/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
+++ b/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
@@ -1,3 +1,4 @@
+import {withRouter} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 
@@ -10,47 +11,16 @@ import theme from 'app/utils/theme';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 
+// This is not an exported action/function because releases list uses AsyncComponent
+// and this is not re-used anywhere else afaict
 function getOrganizationReleases(api, organization) {
   return api.requestPromise(`/organizations/${organization.slug}/releases/`);
 }
 
-function getReleaseSeries(releases) {
-  return {
-    seriesName: 'Releases',
-    data: [],
-    markLine: MarkLine({
-      lineStyle: {
-        normal: {
-          color: theme.purpleLight,
-          opacity: 0.3,
-          type: 'solid',
-        },
-      },
-      tooltip: {
-        formatter: ({data}) => {
-          return `<div>${getFormattedDate(data.value, 'MMM D, YYYY LT')} <br />
-            Release: ${data.name}<br />
-            </div>`;
-        },
-      },
-      label: {
-        show: false,
-      },
-      data: releases.map(release => ({
-        xAxis: +new Date(release.dateCreated),
-        name: release.shortVersion,
-        value: release.shortVersion,
-        label: {
-          formatter: () => release.shortVersion,
-        },
-      })),
-    }),
-  };
-}
-
 class ReleaseSeries extends React.Component {
   static propTypes = {
     api: PropTypes.object,
+    router: PropTypes.object,
     organization: SentryTypes.Organization,
 
     // Array of releases, if empty, component will fetch releases itself
@@ -64,6 +34,7 @@ class ReleaseSeries extends React.Component {
 
   componentDidMount() {
     if (this.props.releases) {
+      // No need to fetch releases if passed in from props
       return;
     }
 
@@ -73,7 +44,7 @@ class ReleaseSeries extends React.Component {
       .then(releases => {
         this.setState({
           releases,
-          releaseSeries: [getReleaseSeries(releases)],
+          releaseSeries: [this.getReleaseSeries(releases)],
         });
       })
       .catch(() => {
@@ -81,6 +52,49 @@ class ReleaseSeries extends React.Component {
       });
   }
 
+  getReleaseSeries = releases => {
+    const {organization, router} = this.props;
+
+    return {
+      seriesName: 'Releases',
+      data: [],
+      markLine: MarkLine({
+        lineStyle: {
+          normal: {
+            color: theme.purpleLight,
+            opacity: 0.3,
+            type: 'solid',
+          },
+        },
+        tooltip: {
+          formatter: ({data}) => {
+            return `<div>${getFormattedDate(data.value, 'MMM D, YYYY LT')} <br />
+            Release: ${data.name}<br />
+            </div>`;
+          },
+        },
+        label: {
+          show: false,
+        },
+        data: releases.map(release => ({
+          xAxis: +new Date(release.dateCreated),
+          name: release.shortVersion,
+          value: release.shortVersion,
+          onClick: () => {
+            if (organization.features.includes('sentry10')) {
+              router.push(
+                `/organizations/${organization.slug}/releases/${release.version}/`
+              );
+            }
+          },
+          label: {
+            formatter: () => release.shortVersion,
+          },
+        })),
+      }),
+    };
+  };
+
   render() {
     const {children} = this.props;
 
@@ -91,4 +105,4 @@ class ReleaseSeries extends React.Component {
   }
 }
 
-export default withOrganization(withApi(ReleaseSeries));
+export default withRouter(withOrganization(withApi(ReleaseSeries)));
