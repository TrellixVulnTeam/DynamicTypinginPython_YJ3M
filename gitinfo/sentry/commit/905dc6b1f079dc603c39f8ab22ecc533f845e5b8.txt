commit 905dc6b1f079dc603c39f8ab22ecc533f845e5b8
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Sep 25 13:58:06 2011 -0700

    Project needs to be null by default

diff --git a/sentry/conf/defaults.py b/sentry/conf/defaults.py
index d424b47b1b..2423bb8741 100644
--- a/sentry/conf/defaults.py
+++ b/sentry/conf/defaults.py
@@ -56,6 +56,10 @@ CLIENT = 'sentry.client.base.SentryClient'
 
 NAME = socket.gethostname()
 
+# The primary key of the project which this client should
+# log messages to.
+PROJECT = 1
+
 # We allow setting the site name either by explicitly setting it with the
 # SENTRY_SITE setting, or using the django.contrib.sites framework for
 # fetching the current site. Since we can't reliably query the database
diff --git a/sentry/migrations/0015_auto__add_field_message_project__add_field_messagecountbyminute_projec.py b/sentry/migrations/0015_auto__add_field_message_project__add_field_messagecountbyminute_projec.py
index 7410b66fee..0998acf015 100644
--- a/sentry/migrations/0015_auto__add_field_message_project__add_field_messagecountbyminute_projec.py
+++ b/sentry/migrations/0015_auto__add_field_message_project__add_field_messagecountbyminute_projec.py
@@ -21,28 +21,28 @@ class Migration(SchemaMigration):
         db.delete_unique('sentry_messagecountbyminute', ['date', 'group_id'])
 
         # Adding field 'Message.project'
-        db.add_column('sentry_message', 'project', self.gf('django.db.models.fields.related.ForeignKey')(default=1, to=orm['sentry.Project']), keep_default=False)
+        db.add_column('sentry_message', 'project', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Project'], null=True), keep_default=False)
 
         # Adding field 'MessageCountByMinute.project'
-        db.add_column('sentry_messagecountbyminute', 'project', self.gf('django.db.models.fields.related.ForeignKey')(default=1, to=orm['sentry.Project']), keep_default=False)
+        db.add_column('sentry_messagecountbyminute', 'project', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Project'], null=True), keep_default=False)
 
         # Adding unique constraint on 'MessageCountByMinute', fields ['project', 'date', 'group']
         db.create_unique('sentry_messagecountbyminute', ['project_id', 'date', 'group_id'])
 
         # Adding field 'FilterValue.project'
-        db.add_column('sentry_filtervalue', 'project', self.gf('django.db.models.fields.related.ForeignKey')(default=1, to=orm['sentry.Project']), keep_default=False)
+        db.add_column('sentry_filtervalue', 'project', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Project'], null=True), keep_default=False)
 
         # Adding unique constraint on 'FilterValue', fields ['project', 'value', 'key']
         db.create_unique('sentry_filtervalue', ['project_id', 'value', 'key'])
 
         # Adding field 'MessageFilterValue.project'
-        db.add_column('sentry_messagefiltervalue', 'project', self.gf('django.db.models.fields.related.ForeignKey')(default=1, to=orm['sentry.Project']), keep_default=False)
+        db.add_column('sentry_messagefiltervalue', 'project', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Project'], null=True), keep_default=False)
 
         # Adding unique constraint on 'MessageFilterValue', fields ['project', 'group', 'value', 'key']
         db.create_unique('sentry_messagefiltervalue', ['project_id', 'group_id', 'value', 'key'])
 
         # Adding field 'GroupedMessage.project'
-        db.add_column('sentry_groupedmessage', 'project', self.gf('django.db.models.fields.related.ForeignKey')(default=1, to=orm['sentry.Project']), keep_default=False)
+        db.add_column('sentry_groupedmessage', 'project', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Project'], null=True), keep_default=False)
 
         # Adding unique constraint on 'GroupedMessage', fields ['project', 'checksum', 'logger', 'view']
         db.create_unique('sentry_groupedmessage', ['project_id', 'checksum', 'logger', 'view'])
@@ -131,7 +131,7 @@ class Migration(SchemaMigration):
             'Meta': {'unique_together': "(('project', 'key', 'value'),)", 'object_name': 'FilterValue'},
             'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'key': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
-            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']"}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
             'value': ('django.db.models.fields.CharField', [], {'max_length': '200'})
         },
         'sentry.groupedmessage': {
@@ -145,7 +145,7 @@ class Migration(SchemaMigration):
             'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
             'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
             'message': ('django.db.models.fields.TextField', [], {}),
-            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']"}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
             'score': ('django.db.models.fields.IntegerField', [], {'default': '0'}),
             'status': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0', 'db_index': 'True'}),
             'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '1', 'db_index': 'True'}),
@@ -164,7 +164,7 @@ class Migration(SchemaMigration):
             'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
             'message': ('django.db.models.fields.TextField', [], {}),
             'message_id': ('django.db.models.fields.CharField', [], {'max_length': '32', 'unique': 'True', 'null': 'True'}),
-            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']"}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
             'server_name': ('django.db.models.fields.CharField', [], {'max_length': '128', 'db_index': 'True'}),
             'site': ('django.db.models.fields.CharField', [], {'max_length': '128', 'null': 'True', 'db_index': 'True'}),
             'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
@@ -176,7 +176,7 @@ class Migration(SchemaMigration):
             'date': ('django.db.models.fields.DateTimeField', [], {}),
             'group': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.GroupedMessage']"}),
             'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
-            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']"}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
             'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'})
         },
         'sentry.messagefiltervalue': {
@@ -184,7 +184,7 @@ class Migration(SchemaMigration):
             'group': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.GroupedMessage']"}),
             'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'key': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
-            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']"}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
             'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'}),
             'value': ('django.db.models.fields.CharField', [], {'max_length': '200'})
         },
diff --git a/sentry/models.py b/sentry/models.py
index 05944de426..477d7c4f86 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -107,7 +107,7 @@ class ProjectMember(Model):
         unique_together = (('project', 'user'),)
 
 class MessageBase(Model):
-    project         = models.ForeignKey(Project)
+    project         = models.ForeignKey(Project, null=True)
     logger          = models.CharField(max_length=64, blank=True, default='root', db_index=True)
     class_name      = models.CharField(_('type'), max_length=128, blank=True, null=True, db_index=True)
     level           = models.PositiveIntegerField(choices=settings.LOG_LEVELS, default=logging.ERROR, blank=True, db_index=True)
@@ -323,7 +323,7 @@ class FilterValue(models.Model):
     """
     Stores references to available filters.
     """
-    project = models.ForeignKey(Project)
+    project = models.ForeignKey(Project, null=True)
     key = models.CharField(choices=FILTER_KEYS, max_length=32)
     value = models.CharField(max_length=200)
 
@@ -338,7 +338,7 @@ class MessageFilterValue(models.Model):
     Stores the total number of messages seen by a group matching
     the given filter.
     """
-    project = models.ForeignKey(Project)
+    project = models.ForeignKey(Project, null=True)
     group = models.ForeignKey(GroupedMessage)
     times_seen = models.PositiveIntegerField(default=0)
     key = models.CharField(choices=FILTER_KEYS, max_length=32)
@@ -358,7 +358,7 @@ class MessageCountByMinute(Model):
     e.g. if it happened at 08:34:55 the time would be normalized to 08:30:00
     """
 
-    project = models.ForeignKey(Project)
+    project = models.ForeignKey(Project, null=True)
     group = models.ForeignKey(GroupedMessage)
     date = models.DateTimeField() # normalized to HH:MM:00
     times_seen = models.PositiveIntegerField(default=0)
