commit 7750fef99f062a187c14e00adf6ac6eae004df89
Author: Mark Story <mark@sentry.io>
Date:   Wed Oct 16 11:53:18 2019 -0400

    feat(discover2) Move transaction views to the new feature switch (#15101)
    
    This will allow us to hide transaction related views from enterprise
    alpha customers.
    
    Refs SEN-1156

diff --git a/src/sentry/static/sentry/app/views/eventsV2/data.tsx b/src/sentry/static/sentry/app/views/eventsV2/data.tsx
index 0da8d899ff..4ad5ef6b43 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/data.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/data.tsx
@@ -29,6 +29,53 @@ export const DEFAULT_EVENT_VIEW_V1: Readonly<EventViewv1> = {
   tags: ['event.type', 'release', 'project.name', 'user.email', 'user.ip', 'environment'],
 };
 
+export const TRANSACTION_VIEWS: Readonly<Array<EventViewv1>> = [
+  {
+    name: t('Transactions'),
+    data: {
+      fields: [
+        'transaction',
+        'project',
+        'count()',
+        'avg(transaction.duration)',
+        'p75',
+        'p95',
+      ],
+      fieldnames: ['transaction', 'project', 'volume', 'avg', '75th', '95th'],
+      sort: ['-count'],
+      query: 'event.type:transaction',
+    },
+    tags: ['release', 'project.name', 'user.email', 'user.ip', 'environment'],
+  },
+  {
+    name: t('Transactions by User'),
+    data: {
+      fields: [
+        'user',
+        'count()',
+        'count_unique(transaction)',
+        'avg(transaction.duration)',
+        'p75',
+        'p95',
+      ],
+      fieldnames: ['user', 'events', 'unique transactions', 'avg', '75th', '95th'],
+      sort: ['-count'],
+      query: 'event.type:transaction',
+    },
+    tags: ['release', 'project.name', 'user.email', 'user.ip', 'environment'],
+  },
+  {
+    name: t('Transactions by Region'),
+    data: {
+      fields: ['geo.region', 'count()', 'avg(transaction.duration)', 'p75', 'p95'],
+      fieldnames: ['Region', 'events', 'avg', '75th', '95th'],
+      sort: ['-count'],
+      query: 'event.type:transaction',
+    },
+    tags: ['release', 'project.name', 'user.email', 'user.ip'],
+  },
+];
+
 export const ALL_VIEWS: Readonly<Array<EventViewv1>> = [
   DEFAULT_EVENT_VIEW_V1,
   {
@@ -117,50 +164,6 @@ export const ALL_VIEWS: Readonly<Array<EventViewv1>> = [
     },
     tags: ['project.name', 'blocked-uri', 'browser.name', 'os.name'],
   },
-  {
-    name: t('Transactions'),
-    data: {
-      fields: [
-        'transaction',
-        'project',
-        'count()',
-        'avg(transaction.duration)',
-        'p75',
-        'p95',
-      ],
-      fieldnames: ['transaction', 'project', 'volume', 'avg', '75th', '95th'],
-      sort: ['-count'],
-      query: 'event.type:transaction',
-    },
-    tags: ['release', 'project.name', 'user.email', 'user.ip', 'environment'],
-  },
-  {
-    name: t('Transactions by User'),
-    data: {
-      fields: [
-        'user',
-        'count()',
-        'count_unique(transaction)',
-        'avg(transaction.duration)',
-        'p75',
-        'p95',
-      ],
-      fieldnames: ['user', 'events', 'unique transactions', 'avg', '75th', '95th'],
-      sort: ['-count'],
-      query: 'event.type:transaction',
-    },
-    tags: ['release', 'project.name', 'user.email', 'user.ip', 'environment'],
-  },
-  {
-    name: t('Transactions by Region'),
-    data: {
-      fields: ['geo.region', 'count()', 'avg(transaction.duration)', 'p75', 'p95'],
-      fieldnames: ['Region', 'events', 'avg', '75th', '95th'],
-      sort: ['-count'],
-      query: 'event.type:transaction',
-    },
-    tags: ['release', 'project.name', 'user.email', 'user.ip'],
-  },
 ];
 
 type EventData = {[key: string]: any};
diff --git a/src/sentry/static/sentry/app/views/eventsV2/index.tsx b/src/sentry/static/sentry/app/views/eventsV2/index.tsx
index af50f24500..e39b5cc937 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/index.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/index.tsx
@@ -23,7 +23,7 @@ import Events from './events';
 import EventDetails from './eventDetails';
 import EventsSaveQueryButton from './saveQueryButton';
 import {getFirstQueryString} from './utils';
-import {ALL_VIEWS} from './data';
+import {ALL_VIEWS, TRANSACTION_VIEWS} from './data';
 import EventView from './eventView';
 
 type Props = {
@@ -41,9 +41,13 @@ class EventsV2 extends React.Component<Props> {
   };
 
   renderQueryList() {
-    const {location} = this.props;
+    const {location, organization} = this.props;
+    let views = ALL_VIEWS;
+    if (organization.features.includes('transaction-events')) {
+      views = [...ALL_VIEWS, ...TRANSACTION_VIEWS];
+    }
 
-    const list = ALL_VIEWS.map((eventViewv1, index) => {
+    const list = views.map((eventViewv1, index) => {
       const eventView = EventView.fromEventViewv1(eventViewv1);
       const to = {
         pathname: location.pathname,
