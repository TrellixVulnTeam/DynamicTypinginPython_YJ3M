commit 42a7a2a01986e0f9afa84cf52c4f9f0b8817cb01
Author: ted kaemming <t.kaemming+github@gmail.com>
Date:   Thu Jun 23 18:16:13 2016 -0700

    Guard against empty key sequence provided to `RedisTSDB.get_distinct_counts_union`. (#3580)
    
    * Add failing test for empty key sequence.
    * Add guard for empty key sequence.

diff --git a/src/sentry/tsdb/redis.py b/src/sentry/tsdb/redis.py
index eb43c468aa..4f7df0c7c2 100644
--- a/src/sentry/tsdb/redis.py
+++ b/src/sentry/tsdb/redis.py
@@ -295,6 +295,9 @@ class RedisTSDB(BaseTSDB):
         return {key: value.value for key, value in responses.iteritems()}
 
     def get_distinct_counts_union(self, model, keys, start, end=None, rollup=None):
+        if not keys:
+            return 0
+
         rollup, series = self.get_optimal_rollup_series(start, end, rollup)
 
         temporary_id = uuid.uuid1().hex
diff --git a/tests/sentry/tsdb/test_redis.py b/tests/sentry/tsdb/test_redis.py
index 1d99b4535b..edd5f4eed2 100644
--- a/tests/sentry/tsdb/test_redis.py
+++ b/tests/sentry/tsdb/test_redis.py
@@ -150,6 +150,7 @@ class RedisTSDBTest(TestCase):
             2: 2,
         }
 
+        assert self.db.get_distinct_counts_union(model, [], dts[0], dts[-1], rollup=3600) == 0
         assert self.db.get_distinct_counts_union(model, [1, 2], dts[0], dts[-1], rollup=3600) == 3
 
     def test_frequency_tables(self):
