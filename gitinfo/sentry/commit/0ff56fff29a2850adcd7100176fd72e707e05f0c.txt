commit 0ff56fff29a2850adcd7100176fd72e707e05f0c
Author: Jan Michael Auer <jan.auer@sentry.io>
Date:   Wed Jul 24 16:15:34 2019 +0200

    fix(store): Avoid database access when fetching project config (#14130)
    
    Follow-up to #13992
    
    Fetching project configs introduced a query to the database to store requests. This patch avoids this by introducing a flag that skips this request.

diff --git a/src/sentry/relay/config.py b/src/sentry/relay/config.py
index a4caba5ba3..17a19c3a7c 100644
--- a/src/sentry/relay/config.py
+++ b/src/sentry/relay/config.py
@@ -30,7 +30,7 @@ def get_project_key_config(project_key):
     }
 
 
-def get_project_config(project_id, full_config=True):
+def get_project_config(project_id, full_config=True, for_store=False):
     """
     Constructs the ProjectConfig information.
 
@@ -38,6 +38,11 @@ def get_project_config(project_id, full_config=True):
     :param full_config: True if only the full config is required, False
         if only the restricted (for external relays) is required
         (default True, i.e. full configuration)
+    :param for_store: If set to true, this omits all parameters that are not
+        needed for store normalization. This is a temporary flag that should
+        be removed once store has been moved to Relay. Most importantly, this
+        avoids database accesses.
+
     :return: a ProjectConfig object for the given project
     """
     project = _get_project_from_id(six.text_type(project_id))
@@ -48,12 +53,15 @@ def get_project_config(project_id, full_config=True):
     with configure_scope() as scope:
         scope.set_tag("project", project.id)
 
-    project_keys = ProjectKey.objects.filter(
-        project=project,
-    ).all()
+    if for_store:
+        project_keys = []
+    else:
+        project_keys = ProjectKey.objects \
+            .filter(project=project) \
+            .all()
 
     public_keys = {}
-    for project_key in list(project_keys):
+    for project_key in project_keys:
         public_keys[project_key.public_key] = project_key.status == 0
 
     now = datetime.utcnow().replace(tzinfo=utc)
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 5296a03b73..d698ce7c9b 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -400,7 +400,7 @@ class APIView(BaseView):
             project_id = _get_project_id_from_request(
                 project_id, request, self.auth_helper_cls, helper)
 
-            project_config = get_project_config(project_id)
+            project_config = get_project_config(project_id, for_store=True)
 
             helper.context.bind_project(project_config.project)
 
diff --git a/tests/sentry/event_manager/test_event_manager.py b/tests/sentry/event_manager/test_event_manager.py
index 0dcb17082b..d8d2113902 100644
--- a/tests/sentry/event_manager/test_event_manager.py
+++ b/tests/sentry/event_manager/test_event_manager.py
@@ -1348,7 +1348,7 @@ class EventManagerTest(TestCase):
             },
         }
 
-        project_config = get_project_config(self.project.id)
+        project_config = get_project_config(self.project.id, for_store=True)
         manager = EventManager(data, project=self.project, project_config=project_config)
 
         mock_is_valid_error_message.side_effect = [item.result for item in items]
