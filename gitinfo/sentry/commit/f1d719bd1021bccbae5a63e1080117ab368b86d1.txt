commit f1d719bd1021bccbae5a63e1080117ab368b86d1
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 29 11:27:54 2012 -0800

    Some initial tests for the manager and fix for STOP_WORDS

diff --git a/sentry/manager.py b/sentry/manager.py
index 8e427030ec..41ff4f39a0 100644
--- a/sentry/manager.py
+++ b/sentry/manager.py
@@ -596,7 +596,7 @@ class InstanceMetaManager(models.Manager):
 
 class SearchDocumentManager(models.Manager):
     # Words which should not be indexed
-    STOP_WORDS = set('the', 'of', 'to', 'and', 'a', 'in', 'is', 'it', 'you', 'that')
+    STOP_WORDS = set(['the', 'of', 'to', 'and', 'a', 'in', 'is', 'it', 'you', 'that'])
 
     # Do not index any words shorter than this
     MIN_WORD_LENGTH = 3
@@ -680,3 +680,5 @@ class SearchDocumentManager(models.Manager):
                     token.update(
                         times_seen=F('times_seen') + count,
                     )
+
+        return document
\ No newline at end of file
diff --git a/tests/search/__init__.py b/tests/search/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/search/tests.py b/tests/search/tests.py
new file mode 100644
index 0000000000..3dd38cc368
--- /dev/null
+++ b/tests/search/tests.py
@@ -0,0 +1,27 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from sentry.models import Event, SearchDocument
+
+from tests.base import TestCase
+
+
+class SearchIndexTest(TestCase):
+    fixtures = ['tests/fixtures/views.json']
+
+    def test_index_behavior(self):
+        event = Event.objects.all()[0]
+        doc = SearchDocument.objects.index(event)
+        self.assertEquals(doc.project, event.project)
+        self.assertEquals(doc.group, event.group)
+        self.assertEquals(doc.total_events, 1)
+        self.assertEquals(doc.date_added, event.group.first_seen)
+        self.assertEquals(doc.date_changed, event.group.last_seen)
+
+        doc = SearchDocument.objects.index(event)
+        self.assertEquals(doc.project, event.project)
+        self.assertEquals(doc.group, event.group)
+        self.assertEquals(doc.total_events, 2)
+        self.assertEquals(doc.date_added, event.group.first_seen)
+        self.assertEquals(doc.date_changed, event.group.last_seen)
