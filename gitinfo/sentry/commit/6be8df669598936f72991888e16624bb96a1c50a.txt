commit 6be8df669598936f72991888e16624bb96a1c50a
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri May 4 13:54:04 2018 -0700

    feat(dashboard): Fetch specific project details (APP-190) (#8319)
    
    Previously we were relying on users set of projects contained in
    `/organizations/org/projects/` list, but this breaks down when an org
    has > 100 projects because of pagination.
    
    Instead, fetch stats using specific projects.
    
    Fixes JAVASCRIPT-3S7

diff --git a/src/sentry/api/endpoints/organization_projects.py b/src/sentry/api/endpoints/organization_projects.py
index e8d3ad8ab2..47d07e5554 100644
--- a/src/sentry/api/endpoints/organization_projects.py
+++ b/src/sentry/api/endpoints/organization_projects.py
@@ -89,6 +89,8 @@ class OrganizationProjectsEndpoint(OrganizationEndpoint, EnvironmentMixin):
                 if key == 'query':
                     value = ' '.join(value)
                     queryset = queryset.filter(Q(name__icontains=value) | Q(slug__icontains=value))
+                elif key == 'id':
+                    queryset = queryset.filter(id__in=value)
                 else:
                     queryset = queryset.none()
 
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
index 7c8d6a6f2e..2b5c391117 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
@@ -1,3 +1,4 @@
+import {flatten} from 'lodash';
 import React from 'react';
 import PropTypes from 'prop-types';
 import createReactClass from 'create-react-class';
@@ -34,8 +35,32 @@ class Dashboard extends AsyncComponent {
   }
 
   getEndpoints() {
-    const {orgId} = this.props.params;
-    return [['projectsWithStats', `/organizations/${orgId}/projects/?statsPeriod=24h`]];
+    const {projects, teams, params} = this.props;
+    const {orgId} = params;
+
+    // TODO(billy): Optimize this so we're not running the same sorts multiple times during a render
+    const sortedProjects = sortProjects(projects);
+    const {projectsByTeam} = getProjectsByTeams(teams, sortedProjects);
+
+    // Fetch list of projectIds to get stats for
+    const projectIds =
+      (projectsByTeam &&
+        flatten(
+          Object.keys(projectsByTeam).map(teamSlug =>
+            projectsByTeam[teamSlug].map(({id}) => id)
+          )
+        )) ||
+      [];
+
+    const idQueries = projectIds.map(id => `id:${id}`).join(' ');
+    const idQueryString = (idQueries && `&query=${idQueries}`) || '';
+
+    return [
+      [
+        'projectsWithStats',
+        `/organizations/${orgId}/projects/?statsPeriod=24h${idQueryString}`,
+      ],
+    ];
   }
 
   renderProjectCard(project) {
diff --git a/tests/js/spec/views/organizationDashboard/index.spec.jsx b/tests/js/spec/views/organizationDashboard/index.spec.jsx
index d4bb5fcfa4..df3654bd93 100644
--- a/tests/js/spec/views/organizationDashboard/index.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/index.spec.jsx
@@ -32,7 +32,7 @@ describe('OrganizationDashboard', function() {
   describe('with projects', function() {
     beforeEach(function() {
       MockApiClient.addMockResponse({
-        url: '/organizations/org-slug/projects/?statsPeriod=24h',
+        url: '/organizations/org-slug/projects/?statsPeriod=24h&query=id:2',
         body: [
           TestStubs.Project({
             teams: [TestStubs.Team()],
@@ -119,7 +119,8 @@ describe('OrganizationDashboard', function() {
       ];
 
       MockApiClient.addMockResponse({
-        url: '/organizations/org-slug/projects/?statsPeriod=24h',
+        url:
+          '/organizations/org-slug/projects/?statsPeriod=24h&query=id:3 id:2 id:4 id:5 id:1 id:6',
         body: projects,
       });
 
diff --git a/tests/sentry/api/endpoints/test_organization_projects.py b/tests/sentry/api/endpoints/test_organization_projects.py
index 44d6b60948..2d5421b95a 100644
--- a/tests/sentry/api/endpoints/test_organization_projects.py
+++ b/tests/sentry/api/endpoints/test_organization_projects.py
@@ -66,3 +66,25 @@ class OrganizationProjectsTest(APITestCase):
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 0
+
+    def test_search_by_ids(self):
+        self.login_as(user=self.user)
+
+        org = self.create_organization(owner=self.user, name='baz')
+        team = self.create_team(organization=org)
+        project_bar = self.create_project(teams=[team], name='bar', slug='bar')
+        project_foo = self.create_project(teams=[team], name='foo', slug='foo')
+        self.create_project(teams=[team], name='baz', slug='baz')
+
+        path = '/api/0/organizations/{}/projects/?query=id:{}'.format(org.slug, project_foo.id)
+        response = self.client.get(path)
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 1
+        assert response.data[0]['id'] == six.text_type(project_foo.id)
+
+        path = '/api/0/organizations/{}/projects/?query=id:{} id:{}'.format(org.slug, project_bar.id, project_foo.id)
+        response = self.client.get(path)
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 2
