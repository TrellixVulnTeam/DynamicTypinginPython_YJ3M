commit 1af48b0191e775bbded8ea814014d3dcd0ce9ae8
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Apr 20 16:59:33 2017 +0200

    Initial work for reprocessing email

diff --git a/src/sentry/models/groupsubscription.py b/src/sentry/models/groupsubscription.py
index 767bcbfede..5e174bbb5f 100644
--- a/src/sentry/models/groupsubscription.py
+++ b/src/sentry/models/groupsubscription.py
@@ -12,8 +12,9 @@ from sentry.db.models import (
 
 
 class GroupSubscriptionReason(object):
-    committed = -2  # not for use as a persisted field value
     implicit = -1   # not for use as a persisted field value
+    committed = -2  # not for use as a persisted field value
+    processing_issue = -3  # not for use as a persisted field value
 
     unknown = 0
     comment = 1
@@ -25,6 +26,7 @@ class GroupSubscriptionReason(object):
         implicit: u"have opted to receive updates for all issues within "
                   "projects that you are a member of",
         committed: u"were involved in a commit that is part of this release",
+        processing_issue: u"are subscribed to alerts for this project",
         comment: u"have commented on this issue",
         assigned: u"have been assigned to this issue",
         bookmark: u"have bookmarked this issue",
diff --git a/src/sentry/plugins/sentry_mail/activity/__init__.py b/src/sentry/plugins/sentry_mail/activity/__init__.py
index 53f9ac544d..5fff02fa3e 100644
--- a/src/sentry/plugins/sentry_mail/activity/__init__.py
+++ b/src/sentry/plugins/sentry_mail/activity/__init__.py
@@ -9,6 +9,7 @@ from .regression import RegressionActivityEmail
 from .resolved import ResolvedActivityEmail
 from .resolved_in_release import ResolvedInReleaseActivityEmail
 from .unassigned import UnassignedActivityEmail
+from .new_processing_issues import NewProcessingIssuesActivityEmail
 
 emails = {
     Activity.ASSIGNED: AssignedActivityEmail,
@@ -18,4 +19,5 @@ emails = {
     Activity.SET_RESOLVED: ResolvedActivityEmail,
     Activity.SET_RESOLVED_IN_RELEASE: ResolvedInReleaseActivityEmail,
     Activity.UNASSIGNED: UnassignedActivityEmail,
+    Activity.NEW_PROCESSING_ISSUES: NewProcessingIssuesActivityEmail,
 }
diff --git a/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py b/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py
new file mode 100644
index 0000000000..7caa96eb73
--- /dev/null
+++ b/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py
@@ -0,0 +1,51 @@
+from __future__ import absolute_import
+
+from sentry.models import User, GroupSubscriptionReason
+from sentry.utils.http import absolute_uri
+
+from .base import ActivityEmail
+
+
+class NewProcessingIssuesActivityEmail(ActivityEmail):
+
+    def __init__(self, activity):
+        ActivityEmail.__init__(self, activity)
+        self.organization = self.project.organization
+
+    def get_participants(self):
+        # XXX: We want to send an email to everybody who is subscribed to
+        # the mail alerts.  Since currenlty that is only checked in the
+        # base notify code and requires event information, we use the UI
+        # code (Project.is_user_subscribed_to_mail_alerts) which
+        # replicates the logic on a per-user basis.
+        users = User.objects.filter(
+            sentry_orgmember_set__teams=self.project.team,
+            is_active=True,
+        )
+        participants = {}
+        for user in users:
+            if self.project.is_user_subscribed_to_mail_alerts(user):
+                participants[user] = GroupSubscriptionReason.processing_issue
+        return participants
+
+    def get_context(self):
+        return {
+            'project': self.project,
+            'issues': self.activity.data['issues'],
+            'reprocessing_active': self.activity.data['reprocessing_active'],
+            'info_url': absolute_uri('/{}/{}/settings/processing-issues/'.format(
+                self.organization.slug,
+                self.project.slug,
+            )),
+        }
+
+    def get_subject(self):
+        return u'Processing Isuses on {}'.format(
+            self.project.name,
+        )
+
+    def get_template(self):
+        return 'sentry/emails/activity/new_processing_issues.txt'
+
+    def get_html_template(self):
+        return 'sentry/emails/activity/new_processing_issues.html'
diff --git a/src/sentry/templates/sentry/emails/activity/new_processing_issues.html b/src/sentry/templates/sentry/emails/activity/new_processing_issues.html
new file mode 100644
index 0000000000..5f5b0adf60
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/activity/new_processing_issues.html
@@ -0,0 +1,49 @@
+{% extends "sentry/emails/activity/generic.html" %}
+
+{% load sentry_avatars %}
+{% load sentry_helpers %}
+
+{% block action %}
+{% endblock %}
+
+{% block activity %}
+    <h2 style="margin-bottom: 10px">
+        Failed to Process Events in {{ project.organization.name }} / {{ project.name }}
+    </h2>
+
+    <p class="muted">
+        Some events failed to process in your project "{{ project.name }}".
+        {% if reprocessing_active %}
+          Because reprocessing is enabled you will not see these events until
+          you corrected some issues that affect processing.
+        {% else %}
+          If you enable reprocessing you will not be receiving alert emails
+          for such events in the future until issues are resolved.  We
+          strongly recommend to enable reprocessing.
+        {% endif %}
+    </p>
+    <hr>
+
+    <h6>Project Affected</h6>
+    <div class="table-border">
+      <table class="table projects">
+        <tbody>
+            <tr>
+              <td>
+                <h5 style="margin-bottom: 0">
+                  <a href="{{ project.get_absolute_url }}">{{ project.name }}</a>
+                </h5>
+                <p class="muted" style="margin-bottom: 0">
+                  {% if issues|count == 1 %}one issue{% else %}{{ issues|count }} issues{% endif %}
+                </p>
+              </td>
+              <td style="text-align: right">
+                {% if reprocessing_active %}
+                <a href="{{ info_url }}" class="btn btn-sm btn-primary">View Issues</a>
+                {% endif %}
+              </td>
+            </tr>
+        </tbody>
+      </table>
+    </div>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/activity/new_processing_issues.txt b/src/sentry/templates/sentry/emails/activity/new_processing_issues.txt
new file mode 100644
index 0000000000..52d80f3534
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/activity/new_processing_issues.txt
@@ -0,0 +1 @@
+Some events failed to process in your project "{{ project.name }}".
