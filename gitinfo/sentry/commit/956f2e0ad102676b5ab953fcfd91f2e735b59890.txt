commit 956f2e0ad102676b5ab953fcfd91f2e735b59890
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Jan 4 11:45:09 2019 -0800

    feat(user-feedback): Fix footer on user feedback loading screen (#11347)
    
    Ensure footer on user feedback loading screen is flush with the bottom
    of the page. Also renders header prior to data being loaded (in line
    with other new views).

diff --git a/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
index a676a8c4e7..6985904acd 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
@@ -9,6 +9,7 @@ import Alert from 'app/components/alert';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import CompactIssue from 'app/components/compactIssue';
 import EventUserFeedback from 'app/components/events/userFeedback';
+import LoadingIndicator from 'app/components/loadingIndicator';
 import space from 'app/styles/space';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import AsyncView from 'app/views/asyncView';
@@ -90,11 +91,34 @@ class OrganizationUserFeedback extends AsyncView {
     );
   }
 
-  renderBody() {
-    const {organization, location, params} = this.props;
+  renderLoading() {
+    return this.renderBody();
+  }
+
+  renderStreamBody() {
+    const {location, params} = this.props;
     const {status} = getQuery(location.search);
     const {reportList, reportListPageLinks} = this.state;
 
+    if (this.state.loading) {
+      return <LoadingIndicator />;
+    }
+
+    return (
+      <UserFeedbackContainer
+        pageLinks={reportListPageLinks}
+        status={status}
+        location={location}
+        params={params}
+      >
+        {reportList.length ? this.renderResults() : this.renderEmpty()}
+      </UserFeedbackContainer>
+    );
+  }
+
+  renderBody() {
+    const {organization} = this.props;
+
     return (
       <Feature
         features={['organizations:sentry10']}
@@ -102,16 +126,7 @@ class OrganizationUserFeedback extends AsyncView {
         renderDisabled={this.renderNoAccess}
       >
         <GlobalSelectionHeader organization={organization} />
-        <Content>
-          <UserFeedbackContainer
-            pageLinks={reportListPageLinks}
-            status={status}
-            location={location}
-            params={params}
-          >
-            {reportList.length ? this.renderResults() : this.renderEmpty()}
-          </UserFeedbackContainer>
-        </Content>
+        <Content>{this.renderStreamBody()}</Content>
       </Feature>
     );
   }
