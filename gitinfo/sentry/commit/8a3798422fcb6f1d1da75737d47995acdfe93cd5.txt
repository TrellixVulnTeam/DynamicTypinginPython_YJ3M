commit 8a3798422fcb6f1d1da75737d47995acdfe93cd5
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Sep 9 22:06:58 2015 -0700

    web/forms: handle duplicate header values inside ReplayForm

diff --git a/src/sentry/web/forms/__init__.py b/src/sentry/web/forms/__init__.py
index 97b96233bc..840e72b9c6 100644
--- a/src/sentry/web/forms/__init__.py
+++ b/src/sentry/web/forms/__init__.py
@@ -10,6 +10,7 @@ from __future__ import absolute_import
 from django import forms
 from django.utils.translation import ugettext_lazy as _
 
+from urllib3._collections import HTTPHeaderDict
 from sentry.constants import HTTP_METHODS
 from sentry.models import User, Activity
 from sentry.web.forms.fields import RadioFieldRenderer, ReadOnlyTextField
@@ -26,7 +27,13 @@ class ReplayForm(forms.Form):
         if not value:
             return
 
-        return dict(line.split(': ', 1) for line in value.splitlines())
+        # HTTPHeaderDict will properly handle duplicate header lines
+        # and merge them correctly
+        headers = HTTPHeaderDict(
+            line.split(': ', 1) for line in value.splitlines()
+        )
+        # Convert back into a normal dict for consumption elsewhere
+        return dict(headers)
 
 
 class BaseUserForm(forms.ModelForm):
diff --git a/tests/sentry/web/forms/tests.py b/tests/sentry/web/forms/tests.py
index e69de29bb2..95f925569c 100644
--- a/tests/sentry/web/forms/tests.py
+++ b/tests/sentry/web/forms/tests.py
@@ -0,0 +1,24 @@
+from sentry.web.forms import ReplayForm
+from sentry.testutils import TestCase
+
+
+class ReplayFormTest(TestCase):
+    def test_it_works(self):
+        form = ReplayForm(dict(
+            url='http://example.com',
+            method='GET',
+            data='',
+            headers='Foo: bar\nContent-Type: text/plain',
+        ))
+        assert form.is_valid()
+        assert form.cleaned_data['headers'] == {'Foo': 'bar', 'Content-Type': 'text/plain'}
+
+    def test_duplicate_headers(self):
+        form = ReplayForm(dict(
+            url='http://example.com',
+            method='GET',
+            data='',
+            headers='Foo: bar\nContent-Type: text/plain\nFoo: baz',
+        ))
+        assert form.is_valid()
+        assert form.cleaned_data['headers'] == {'Foo': 'bar, baz', 'Content-Type': 'text/plain'}
