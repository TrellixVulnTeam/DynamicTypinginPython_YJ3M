commit 6c35b85bbe088c16123f8de9627319aa23878a6f
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Mon Sep 16 13:47:10 2019 +0200

    fix: Do not try to store invalid IP addresses in eventuser (#14727)

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index d9adb092e2..b8a1371dc7 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -1,9 +1,11 @@
 from __future__ import absolute_import, print_function
 
-import time
-import jsonschema
 import logging
 import random
+import time
+
+import ipaddress
+import jsonschema
 import six
 
 from datetime import datetime, timedelta
@@ -903,12 +905,20 @@ class EventManager(object):
         if not user_data:
             return
 
+        ip_address = user_data.get("ip_address")
+
+        if ip_address:
+            try:
+                ipaddress.ip_address(six.text_type(ip_address))
+            except ValueError:
+                ip_address = None
+
         euser = EventUser(
             project_id=project.id,
             ident=user_data.get("id"),
             email=user_data.get("email"),
             username=user_data.get("username"),
-            ip_address=user_data.get("ip_address"),
+            ip_address=ip_address,
             name=user_data.get("name"),
         )
         euser.set_hash()
diff --git a/tests/sentry/event_manager/test_event_manager.py b/tests/sentry/event_manager/test_event_manager.py
index f8fbd0ed0a..2780a91427 100644
--- a/tests/sentry/event_manager/test_event_manager.py
+++ b/tests/sentry/event_manager/test_event_manager.py
@@ -709,6 +709,25 @@ class EventManagerTest(TestCase):
         assert euser.name == "jane"
         assert euser.ident == "1"
 
+    def test_event_user_invalid_ip(self):
+        manager = EventManager(
+            make_event(
+                event_id="a", environment="totally unique environment", **{"user": {"id": "1"}}
+            )
+        )
+
+        manager.normalize()
+
+        # This can happen as part of PII stripping, which happens after normalization
+        manager._data["user"]["ip_address"] = "[ip]"
+
+        with self.tasks():
+            manager.save(self.project.id)
+
+        euser = EventUser.objects.get(project_id=self.project.id)
+
+        assert euser.ip_address is None
+
     def test_event_user_unicode_identifier(self):
         manager = EventManager(make_event(**{"user": {"username": u"foÃ´"}}))
         manager.normalize()
