commit eccd884717213fb69cd205ddd2227b75350e5b5f
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Oct 19 18:26:50 2013 -0700

    Expand test coverage for event list and json feed

diff --git a/src/sentry/testutils.py b/src/sentry/testutils.py
index 163a851faa..6dbdf60bbe 100644
--- a/src/sentry/testutils.py
+++ b/src/sentry/testutils.py
@@ -129,12 +129,18 @@ class BaseTestCase(Exam):
 
     @fixture
     def event(self):
+        return self.create_event(event_id='a' * 32)
+
+    def create_event(self, event_id, **kwargs):
+        if 'group' not in kwargs:
+            kwargs['group'] = self.group
+        kwargs.setdefault('project', kwargs['group'].project)
+        kwargs.setdefault('message', 'Foo bar')
+        kwargs.setdefault('data', LEGACY_DATA)
+
         return Event.objects.create(
-            event_id='a' * 32,
-            group=self.group,
-            message='Foo bar',
-            project=self.project,
-            data=LEGACY_DATA,
+            event_id=event_id,
+            **kwargs
         )
 
     def assertRequiresAuthentication(self, path, method='GET'):
diff --git a/tests/sentry/web/frontend/groups/tests.py b/tests/sentry/web/frontend/groups/tests.py
index c7054223de..9fec163bfb 100644
--- a/tests/sentry/web/frontend/groups/tests.py
+++ b/tests/sentry/web/frontend/groups/tests.py
@@ -113,6 +113,9 @@ class GroupEventListTest(TestCase):
         })
 
     def test_does_render(self):
+        event = self.create_event(event_id='a' * 32)
+        event2 = self.create_event(event_id='b' * 32)
+
         self.login()
         resp = self.client.get(self.path)
         assert resp.status_code == 200
@@ -124,6 +127,10 @@ class GroupEventListTest(TestCase):
         assert resp.context['project'] == self.project
         assert resp.context['team'] == self.team
         assert resp.context['group'] == self.group
+        event_list = resp.context['event_list']
+        assert len(event_list) == 2
+        assert event_list[0] == event2
+        assert event_list[1] == event
 
 
 class GroupTagListTest(TestCase):
@@ -185,14 +192,17 @@ class GroupEventListJsonTest(TestCase):
 
     def test_does_render(self):
         self.login()
-        # HACK: force fixture creation
-        self.event
+
+        event = self.create_event(event_id='a' * 32)
+        event2 = self.create_event(event_id='b' * 32)
+
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         assert resp['Content-Type'] == 'application/json'
         data = json.loads(resp.content)
-        assert len(data) == 1
-        assert data[0]['id'] == str(self.event.event_id)
+        assert len(data) == 2
+        assert data[0]['id'] == str(event2.event_id)
+        assert data[1]['id'] == str(event.event_id)
 
     def test_does_not_allow_beyond_limit(self):
         self.login()
