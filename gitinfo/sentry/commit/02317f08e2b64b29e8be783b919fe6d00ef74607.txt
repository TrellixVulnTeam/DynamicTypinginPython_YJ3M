commit 02317f08e2b64b29e8be783b919fe6d00ef74607
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Tue Nov 13 09:58:17 2018 -0800

    ref(integrations): Expose 503s to the enduser rather than give a 500 Internal Error. (#10546)
    
    * Created a new endpoint for integrations that catches the 503 and exposes it to the user.
    
    * removed specific check for apihosterror.
    
    * simplified return statement.

diff --git a/src/sentry/api/bases/integration.py b/src/sentry/api/bases/integration.py
new file mode 100644
index 0000000000..784387559a
--- /dev/null
+++ b/src/sentry/api/bases/integration.py
@@ -0,0 +1,27 @@
+from __future__ import absolute_import
+
+import six
+import sys
+import traceback
+
+from rest_framework.response import Response
+from sentry.utils.sdk import capture_exception
+
+from .organization import OrganizationEndpoint, OrganizationPermission
+
+
+class IntegrationEndpoint(OrganizationEndpoint):
+    permission_classes = (OrganizationPermission, )
+
+    def handle_exception(self, request, exc):
+        if exc.code == 503:
+            sys.stderr.write(traceback.format_exc())
+            event_id = capture_exception()
+            context = {
+                'detail': six.text_type(exc),
+                'errorId': event_id,
+            }
+            response = Response(context, status=503)
+            response.exception = True
+            return response
+        return super(IntegrationEndpoint, self).handle_exception(exc)
diff --git a/src/sentry/integrations/bitbucket/search.py b/src/sentry/integrations/bitbucket/search.py
index 6747aed2ee..76c45f1b91 100644
--- a/src/sentry/integrations/bitbucket/search.py
+++ b/src/sentry/integrations/bitbucket/search.py
@@ -2,12 +2,11 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
-from sentry.api.bases.organization import OrganizationEndpoint, OrganizationPermission
+from sentry.api.bases.integration import IntegrationEndpoint
 from sentry.models import Integration
 
 
-class BitbucketSearchEndpoint(OrganizationEndpoint):
-    permission_classes = (OrganizationPermission, )
+class BitbucketSearchEndpoint(IntegrationEndpoint):
 
     def get(self, request, organization, integration_id):
         try:
diff --git a/src/sentry/integrations/github/search.py b/src/sentry/integrations/github/search.py
index 5006fb9c50..a15d169b11 100644
--- a/src/sentry/integrations/github/search.py
+++ b/src/sentry/integrations/github/search.py
@@ -2,12 +2,11 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
-from sentry.api.bases.organization import OrganizationEndpoint, OrganizationPermission
+from sentry.api.bases.integration import IntegrationEndpoint
 from sentry.models import Integration
 
 
-class GitHubSearchEndpoint(OrganizationEndpoint):
-    permission_classes = (OrganizationPermission, )
+class GitHubSearchEndpoint(IntegrationEndpoint):
 
     def get(self, request, organization, integration_id):
         try:
diff --git a/src/sentry/integrations/gitlab/search.py b/src/sentry/integrations/gitlab/search.py
index d1f4f4030d..ebb2f10aaf 100644
--- a/src/sentry/integrations/gitlab/search.py
+++ b/src/sentry/integrations/gitlab/search.py
@@ -2,12 +2,11 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
-from sentry.api.bases.organization import OrganizationEndpoint, OrganizationPermission
+from sentry.api.bases.integration import IntegrationEndpoint
 from sentry.models import Integration
 
 
-class GitlabIssueSearchEndpoint(OrganizationEndpoint):
-    permission_classes = (OrganizationPermission, )
+class GitlabIssueSearchEndpoint(IntegrationEndpoint):
 
     def get(self, request, organization, integration_id):
         try:
diff --git a/src/sentry/integrations/jira/search.py b/src/sentry/integrations/jira/search.py
index 5a25aaca00..a0024244ad 100644
--- a/src/sentry/integrations/jira/search.py
+++ b/src/sentry/integrations/jira/search.py
@@ -4,13 +4,12 @@ from six.moves.urllib.parse import parse_qs, unquote_plus, urlencode, urlsplit,
 
 from rest_framework.response import Response
 
-from sentry.api.bases.organization import OrganizationEndpoint, OrganizationPermission
+from sentry.api.bases.integration import IntegrationEndpoint
 from sentry.integrations.exceptions import ApiError, ApiUnauthorized
 from sentry.models import Integration
 
 
-class JiraSearchEndpoint(OrganizationEndpoint):
-    permission_classes = (OrganizationPermission, )
+class JiraSearchEndpoint(IntegrationEndpoint):
 
     def _get_formatted_user(self, user):
         display = '%s %s(%s)' % (
diff --git a/src/sentry/integrations/vsts/search.py b/src/sentry/integrations/vsts/search.py
index b4f1619c64..dff13e2f8e 100644
--- a/src/sentry/integrations/vsts/search.py
+++ b/src/sentry/integrations/vsts/search.py
@@ -1,13 +1,12 @@
 from __future__ import absolute_import
 
-from sentry.api.bases.organization import OrganizationEndpoint, OrganizationPermission
+from sentry.api.bases.integration import IntegrationEndpoint
 from rest_framework.response import Response
 
 from sentry.models import Integration
 
 
-class VstsSearchEndpoint(OrganizationEndpoint):
-    permission_classes = (OrganizationPermission, )
+class VstsSearchEndpoint(IntegrationEndpoint):
 
     def get(self, request, organization, integration_id):
         try:
diff --git a/tests/sentry/integrations/gitlab/test_search.py b/tests/sentry/integrations/gitlab/test_search.py
index 052adb96ce..ed42c26388 100644
--- a/tests/sentry/integrations/gitlab/test_search.py
+++ b/tests/sentry/integrations/gitlab/test_search.py
@@ -255,7 +255,7 @@ class GitlabSearchTest(GitLabTestCase):
                 'project': '5',
             }
         )
-        assert resp.status_code == 500
+        assert resp.status_code == 503
 
     def test_projects_request_fails(self):
         responses.add(
@@ -269,4 +269,4 @@ class GitlabSearchTest(GitLabTestCase):
                 'query': 'GetSentry',
             }
         )
-        assert resp.status_code == 500
+        assert resp.status_code == 503
