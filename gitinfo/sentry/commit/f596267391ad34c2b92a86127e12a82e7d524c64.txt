commit f596267391ad34c2b92a86127e12a82e7d524c64
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Fri Jun 29 13:45:55 2018 -0700

    feat(2fa): Send additional security emails (#8824)

diff --git a/src/sentry/api/endpoints/user_authenticator_details.py b/src/sentry/api/endpoints/user_authenticator_details.py
index fd80281c0a..7950d49012 100644
--- a/src/sentry/api/endpoints/user_authenticator_details.py
+++ b/src/sentry/api/endpoints/user_authenticator_details.py
@@ -77,6 +77,16 @@ class UserAuthenticatorDetailsEndpoint(UserEndpoint):
         if interface.interface_id == 'recovery':
             interface.regenerate_codes()
 
+            capture_security_activity(
+                account=user,
+                type='recovery-codes-regenerated',
+                actor=request.user,
+                ip_address=request.META['REMOTE_ADDR'],
+                context={
+                    'authenticator': authenticator,
+                },
+                send_email=True
+            )
         return Response(serialize(interface))
 
     @sudo_required
@@ -109,6 +119,8 @@ class UserAuthenticatorDetailsEndpoint(UserEndpoint):
                 return Response(status=status.HTTP_500_INTERNAL_SERVER_ERROR)
 
             interface.authenticator.save()
+            device_name = interface.get_device_name(interface_device_id)
+
             capture_security_activity(
                 account=user,
                 type='mfa-removed',
@@ -116,8 +128,9 @@ class UserAuthenticatorDetailsEndpoint(UserEndpoint):
                 ip_address=request.META['REMOTE_ADDR'],
                 context={
                     'authenticator': authenticator,
+                    'device_name': device_name
                 },
-                send_email=False
+                send_email=True
             )
             return Response(status=status.HTTP_204_NO_CONTENT)
 
diff --git a/src/sentry/api/endpoints/user_authenticator_enroll.py b/src/sentry/api/endpoints/user_authenticator_enroll.py
index dda66b8f89..5d145a4978 100644
--- a/src/sentry/api/endpoints/user_authenticator_enroll.py
+++ b/src/sentry/api/endpoints/user_authenticator_enroll.py
@@ -156,6 +156,7 @@ class UserAuthenticatorEnrollEndpoint(UserEndpoint):
         except KeyError:
             pass
 
+        context = {}
         # Need to update interface with phone number before validating OTP
         if 'phone' in request.DATA:
             interface.phone_number = serializer.data['phone']
@@ -181,20 +182,24 @@ class UserAuthenticatorEnrollEndpoint(UserEndpoint):
                 serializer.data['response'],
                 serializer.data['deviceName']
             )
+            context.update({
+                'device_name': serializer.data['deviceName']
+            })
 
         try:
             interface.enroll(request.user)
         except Authenticator.AlreadyEnrolled:
             return Response(ALREADY_ENROLLED_ERR, status=status.HTTP_400_BAD_REQUEST)
         else:
+            context.update({
+                'authenticator': interface.authenticator
+            })
             capture_security_activity(
                 account=request.user,
                 type='mfa-added',
                 actor=request.user,
                 ip_address=request.META['REMOTE_ADDR'],
-                context={
-                    'authenticator': interface.authenticator,
-                },
+                context=context,
                 send_email=True,
             )
             request.user.clear_lost_passwords()
diff --git a/src/sentry/models/authenticator.py b/src/sentry/models/authenticator.py
index 02f0f75dec..5a6a29f7a3 100644
--- a/src/sentry/models/authenticator.py
+++ b/src/sentry/models/authenticator.py
@@ -536,6 +536,11 @@ class U2fInterface(AuthenticatorInterface):
             return True
         return False
 
+    def get_device_name(self, key):
+        for device in self.config.get('devices') or ():
+            if device['binding']['keyHandle'] == key:
+                return device['name']
+
     def get_registered_devices(self):
         rv = []
         for device in self.config.get('devices') or ():
diff --git a/src/sentry/security/emails.py b/src/sentry/security/emails.py
index ca2086c4e5..9571126f36 100644
--- a/src/sentry/security/emails.py
+++ b/src/sentry/security/emails.py
@@ -21,6 +21,9 @@ def generate_security_email(account, type, actor, ip_address, context=None, curr
     elif type == 'password-changed':
         template = 'sentry/emails/password-changed.txt'
         html_template = 'sentry/emails/password-changed.html'
+    elif type == 'recovery-codes-regenerated':
+        template = 'sentry/emails/recovery-codes-regenerated.txt'
+        html_template = 'sentry/emails/recovery-codes-regenerated.html'
     else:
         raise ValueError('unknown type: {}'.format(type))
 
diff --git a/src/sentry/templates/sentry/emails/mfa-added.html b/src/sentry/templates/sentry/emails/mfa-added.html
index 9ae2472f62..a8dfa22566 100644
--- a/src/sentry/templates/sentry/emails/mfa-added.html
+++ b/src/sentry/templates/sentry/emails/mfa-added.html
@@ -5,8 +5,14 @@
 {% endblock %}
 
 {% block security_metadata %}
+  <tr>
+    <td></td>
+    <td style="padding-bottom: 0px"><strong>{{ authenticator.interface.name }}</strong></td>
+  </tr>
+  {% if device_name %}
     <tr>
       <td></td>
-      <td><strong>{{ authenticator.interface.name }}</strong></td>
+      <td style="padding-top: 0px"><strong>{{ device_name }}</strong></td>
     </tr>
+  {% endif %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/mfa-added.txt b/src/sentry/templates/sentry/emails/mfa-added.txt
index 725bff5b51..ab8a132b98 100644
--- a/src/sentry/templates/sentry/emails/mfa-added.txt
+++ b/src/sentry/templates/sentry/emails/mfa-added.txt
@@ -6,4 +6,5 @@ An authenticator has been added to your Sentry account.
 
 {% block security_metadata %}
 Authenticator: {{ authenticator.interface.name }}
+{% if device_name %}Device: {{ device_name }}{% endif %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/mfa-removed.html b/src/sentry/templates/sentry/emails/mfa-removed.html
index 5ecbc38581..836281514a 100644
--- a/src/sentry/templates/sentry/emails/mfa-removed.html
+++ b/src/sentry/templates/sentry/emails/mfa-removed.html
@@ -5,8 +5,14 @@
 {% endblock %}
 
 {% block security_metadata %}
+  <tr>
+    <td></td>
+    <td style="padding-bottom: 0px"><strong>{{ authenticator.interface.name }}</strong></td>
+  </tr>
+  {% if device_name %}
     <tr>
       <td></td>
-      <td><strong>{{ authenticator.interface.name }}</strong></td>
+      <td style="padding-top: 0px"><strong>{{ device_name }}</strong></td>
     </tr>
+  {% endif %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/mfa-removed.txt b/src/sentry/templates/sentry/emails/mfa-removed.txt
index 1ed15da53e..5082efd39c 100644
--- a/src/sentry/templates/sentry/emails/mfa-removed.txt
+++ b/src/sentry/templates/sentry/emails/mfa-removed.txt
@@ -6,4 +6,5 @@ An authenticator has been removed from your Sentry account.
 
 {% block security_metadata %}
 Authenticator: {{ authenticator.interface.name }}
+{% if device_name %}Device: {{ device_name }}{% endif %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/recovery-codes-regenerated.html b/src/sentry/templates/sentry/emails/recovery-codes-regenerated.html
new file mode 100644
index 0000000000..db2a36d626
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/recovery-codes-regenerated.html
@@ -0,0 +1,5 @@
+{% extends "sentry/emails/security_base.html" %}
+
+{% block security_body %}
+  <p>Recovery codes have been regenerated for your Sentry account.</p>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/recovery-codes-regenerated.txt b/src/sentry/templates/sentry/emails/recovery-codes-regenerated.txt
new file mode 100644
index 0000000000..88cdb98871
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/recovery-codes-regenerated.txt
@@ -0,0 +1,5 @@
+{% extends "sentry/emails/security_base.txt" %}
+
+{% block security_body %}
+Recovery codes have been regenerated for your Sentry account.
+{% endblock %}
diff --git a/src/sentry/web/debug_urls.py b/src/sentry/web/debug_urls.py
index b4fd1f1ff6..ff742bbdf4 100644
--- a/src/sentry/web/debug_urls.py
+++ b/src/sentry/web/debug_urls.py
@@ -17,6 +17,7 @@ from sentry.web.frontend.debug.debug_new_release_email import (DebugNewReleaseEm
 from sentry.web.frontend.debug.debug_new_user_feedback_email import (DebugNewUserFeedbackEmailView)
 from sentry.web.frontend.debug.debug_note_email import DebugNoteEmailView
 from sentry.web.frontend.debug.debug_password_changed_email import (DebugPasswordChangedEmailView)
+from sentry.web.frontend.debug.debug_recovery_codes_regenerated_email import (DebugRecoveryCodesRegeneratedEmailView)
 from sentry.web.frontend.debug.debug_regression_email import (
     DebugRegressionEmailView, DebugRegressionReleaseEmailView
 )
@@ -74,6 +75,7 @@ urlpatterns = patterns(
     url(r'^debug/mail/org-delete-confirm/$', sentry.web.frontend.debug.mail.org_delete_confirm),
     url(r'^debug/mail/mfa-removed/$', DebugMfaRemovedEmailView.as_view()),
     url(r'^debug/mail/mfa-added/$', DebugMfaAddedEmailView.as_view()),
+    url(r'^debug/mail/recovery-codes-regenerated/$', DebugRecoveryCodesRegeneratedEmailView.as_view()),
     url(r'^debug/mail/password-changed/$', DebugPasswordChangedEmailView.as_view()),
     url(r'^debug/mail/new-processing-issues/$', DebugNewProcessingIssuesEmailView.as_view()),
     url(
diff --git a/src/sentry/web/frontend/accounts_twofactor.py b/src/sentry/web/frontend/accounts_twofactor.py
index 8ff40d14fa..44e2a959ac 100644
--- a/src/sentry/web/frontend/accounts_twofactor.py
+++ b/src/sentry/web/frontend/accounts_twofactor.py
@@ -182,6 +182,16 @@ class RecoveryCodeSettingsView(TwoFactorSettingsView):
     def configure(self, request, interface):
         if 'regenerate' in request.POST:
             interface.regenerate_codes()
+            capture_security_activity(
+                account=request.user,
+                type='recovery-codes-regenerated',
+                actor=request.user,
+                ip_address=request.META['REMOTE_ADDR'],
+                context={
+                    'authenticator': interface.authenticator,
+                },
+                send_email=True,
+            )
             return HttpResponseRedirect(request.path)
         return TwoFactorSettingsView.configure(self, request, interface)
 
@@ -271,6 +281,19 @@ class U2fSettingsView(TwoFactorSettingsView):
         if key_handle and 'remove' in request.POST and \
            interface.remove_u2f_device(key_handle):
             interface.authenticator.save()
+            device_name = interface.get_device_name(key_handle)
+
+            capture_security_activity(
+                account=request.user,
+                type='mfa-removed',
+                actor=request.user,
+                ip_address=request.META['REMOTE_ADDR'],
+                context={
+                    'authenticator': interface.authenticator,
+                    'device_name': device_name
+                },
+                send_email=True,
+            )
             return HttpResponseRedirect(request.path)
 
         return TwoFactorSettingsView.configure(self, request, interface)
diff --git a/src/sentry/web/frontend/debug/debug_mfa_added_email.py b/src/sentry/web/frontend/debug/debug_mfa_added_email.py
index 03f46b8d10..c4420e72c8 100644
--- a/src/sentry/web/frontend/debug/debug_mfa_added_email.py
+++ b/src/sentry/web/frontend/debug/debug_mfa_added_email.py
@@ -25,6 +25,7 @@ class DebugMfaAddedEmailView(View):
             ip_address=request.META['REMOTE_ADDR'],
             context={
                 'authenticator': authenticator,
+                'device_name': 'Home computer'
             },
             # make this consistent for acceptance tests
             current_datetime=datetime.datetime(2017, 1, 20, 21, 39, 23, 30723)
diff --git a/src/sentry/web/frontend/debug/debug_mfa_removed_email.py b/src/sentry/web/frontend/debug/debug_mfa_removed_email.py
index e3bc2eb1c5..f801975490 100644
--- a/src/sentry/web/frontend/debug/debug_mfa_removed_email.py
+++ b/src/sentry/web/frontend/debug/debug_mfa_removed_email.py
@@ -25,6 +25,7 @@ class DebugMfaRemovedEmailView(View):
             ip_address=request.META['REMOTE_ADDR'],
             context={
                 'authenticator': authenticator,
+                'device_name': 'Home computer'
             },
             # make this consistent for acceptance tests
             current_datetime=datetime.datetime(2017, 1, 20, 21, 39, 23, 30723)
diff --git a/src/sentry/web/frontend/debug/debug_recovery_codes_regenerated_email.py b/src/sentry/web/frontend/debug/debug_recovery_codes_regenerated_email.py
new file mode 100644
index 0000000000..208e3cc065
--- /dev/null
+++ b/src/sentry/web/frontend/debug/debug_recovery_codes_regenerated_email.py
@@ -0,0 +1,36 @@
+from __future__ import absolute_import, print_function
+
+import datetime
+
+from django.views.generic import View
+
+from sentry.models import Authenticator
+from sentry.security.emails import generate_security_email
+
+from .mail import MailPreview
+
+
+class DebugRecoveryCodesRegeneratedEmailView(View):
+    def get(self, request):
+        authenticator = Authenticator(
+            id=0,
+            type=3,  # u2f
+            user=request.user,
+        )
+
+        email = generate_security_email(
+            account=request.user,
+            actor=request.user,
+            type='recovery-codes-regenerated',
+            ip_address=request.META['REMOTE_ADDR'],
+            context={
+                'authenticator': authenticator,
+            },
+            # make this consistent for acceptance tests
+            current_datetime=datetime.datetime(2017, 1, 20, 21, 39, 23, 30723)
+        )
+        return MailPreview(
+            html_template=email.html_template,
+            text_template=email.template,
+            context=email.context,
+        ).render(request)
diff --git a/tests/acceptance/test_emails.py b/tests/acceptance/test_emails.py
index 5c57e72a64..5be4b63bfe 100644
--- a/tests/acceptance/test_emails.py
+++ b/tests/acceptance/test_emails.py
@@ -27,6 +27,7 @@ EMAILS = (
     ('/debug/mail/report/', 'report'),
     ('/debug/mail/mfa-added/', 'mfa added'),
     ('/debug/mail/mfa-removed/', 'mfa removed'),
+    ('/debug/mail/recovery-codes-regenerated/', 'recovery codes regenerated'),
     ('/debug/mail/password-changed/', 'password changed'),
     ('/debug/mail/sso-linked', 'sso linked'),
     ('/debug/mail/sso-unlinked', 'sso unlinked'),
diff --git a/tests/fixtures/emails/mfa_added.txt b/tests/fixtures/emails/mfa_added.txt
index 1f52a2f2fb..53a12632ca 100644
--- a/tests/fixtures/emails/mfa_added.txt
+++ b/tests/fixtures/emails/mfa_added.txt
@@ -12,6 +12,7 @@ IP: 127.0.0.1
 When: Jan. 20, 2017, 9:39 p.m. UTC
 
 Authenticator: U2F (Universal 2nd Factor)
+Device: Home computer
 
 
 Don't recognize this activity?
diff --git a/tests/fixtures/emails/mfa_removed.txt b/tests/fixtures/emails/mfa_removed.txt
index a4e3f63b33..e40a576f94 100644
--- a/tests/fixtures/emails/mfa_removed.txt
+++ b/tests/fixtures/emails/mfa_removed.txt
@@ -12,6 +12,7 @@ IP: 127.0.0.1
 When: Jan. 20, 2017, 9:39 p.m. UTC
 
 Authenticator: U2F (Universal 2nd Factor)
+Device: Home computer
 
 
 Don't recognize this activity?
diff --git a/tests/fixtures/emails/recovery_codes_regenerated.txt b/tests/fixtures/emails/recovery_codes_regenerated.txt
new file mode 100644
index 0000000000..3f336661aa
--- /dev/null
+++ b/tests/fixtures/emails/recovery_codes_regenerated.txt
@@ -0,0 +1,18 @@
+Security Notice
+---------------
+
+Recovery codes have been regenerated for your Sentry account.
+
+
+Details
+-------
+
+Account: foo@example.com
+IP: 127.0.0.1
+When: Jan. 20, 2017, 9:39 p.m. UTC
+
+
+Don't recognize this activity?
+------------------------------
+
+If you didn't trigger this action, we recommend you immediately review your account security, including changing your password. If you determine that this activity is malicious please contact .
diff --git a/tests/sentry/api/endpoints/test_user_authenticator_details.py b/tests/sentry/api/endpoints/test_user_authenticator_details.py
index 2df6c33dff..2f10fba110 100644
--- a/tests/sentry/api/endpoints/test_user_authenticator_details.py
+++ b/tests/sentry/api/endpoints/test_user_authenticator_details.py
@@ -14,11 +14,10 @@ class UserAuthenticatorDetailsTest(APITestCase):
         self.user = self.create_user(email='test@example.com', is_superuser=False)
         self.login_as(user=self.user)
 
-    def _assert_mfa_removed_email_sent(*args):
-        test, email_log = args
+    def _assert_security_email_sent(self, email_type, email_log):
         assert email_log.info.call_count == 1
         assert 'mail.queued' in email_log.info.call_args[0]
-        assert email_log.info.call_args[1]['extra']['message_type'] == 'mfa-removed'
+        assert email_log.info.call_args[1]['extra']['message_type'] == email_type
 
     def test_wrong_auth_id(self):
         url = reverse(
@@ -56,7 +55,8 @@ class UserAuthenticatorDetailsTest(APITestCase):
         assert 'form' not in resp.data
         assert 'qrcode' not in resp.data
 
-    def test_get_recovery_codes(self):
+    @mock.patch('sentry.utils.email.logger')
+    def test_get_recovery_codes(self, email_log):
         interface = RecoveryCodeInterface()
         interface.enroll(self.user)
 
@@ -74,6 +74,8 @@ class UserAuthenticatorDetailsTest(APITestCase):
         assert resp.data['authId'] == six.text_type(interface.authenticator.id)
         assert len(resp.data['codes'])
 
+        assert email_log.info.call_count == 0
+
     def test_u2f_get_devices(self):
         auth = Authenticator.objects.create(
             type=3,  # u2f
@@ -110,6 +112,34 @@ class UserAuthenticatorDetailsTest(APITestCase):
         assert 'challenge' not in resp.data
         assert 'response' not in resp.data
 
+    def test_get_device_name(self):
+        auth = Authenticator.objects.create(
+            type=3,  # u2f
+            user=self.user,
+            config={
+                'devices': [{
+                    'binding': {
+                        'publicKey': 'aowekroawker',
+                        'keyHandle': 'devicekeyhandle',
+                        'appId': 'https://dev.getsentry.net:8000/auth/2fa/u2fappid.json'
+                    },
+                    'name': 'Amused Beetle',
+                    'ts': 1512505334
+                }, {
+                    'binding': {
+                        'publicKey': 'publickey',
+                        'keyHandle': 'aowerkoweraowerkkro',
+                        'appId': 'https://dev.getsentry.net:8000/auth/2fa/u2fappid.json'
+                    },
+                    'name': 'Sentry',
+                    'ts': 1512505334
+                }]
+            }
+        )
+
+        assert auth.interface.get_device_name('devicekeyhandle') == 'Amused Beetle'
+        assert auth.interface.get_device_name('aowerkoweraowerkkro') == 'Sentry'
+
     @mock.patch('sentry.utils.email.logger')
     def test_u2f_remove_device(self, email_log):
         auth = Authenticator.objects.create(
@@ -151,6 +181,8 @@ class UserAuthenticatorDetailsTest(APITestCase):
         authenticator = Authenticator.objects.get(id=auth.id)
         assert len(authenticator.interface.get_registered_devices()) == 1
 
+        self._assert_security_email_sent('mfa-removed', email_log)
+
         # Can't remove last device
         url = reverse(
             'sentry-api-0-user-authenticator-device-details',
@@ -163,7 +195,8 @@ class UserAuthenticatorDetailsTest(APITestCase):
         resp = self.client.delete(url)
         assert resp.status_code == 500
 
-        assert email_log.info.call_count == 0
+        # only one send
+        self._assert_security_email_sent('mfa-removed', email_log)
 
     def test_sms_get_phone(self):
         interface = SmsInterface()
@@ -214,7 +247,7 @@ class UserAuthenticatorDetailsTest(APITestCase):
         resp = self.client.get(url)
         assert old_codes != resp.data['codes']
 
-        assert email_log.info.call_count == 0
+        self._assert_security_email_sent('recovery-codes-regenerated', email_log)
 
     @mock.patch('sentry.utils.email.logger')
     def test_delete(self, email_log):
@@ -240,7 +273,7 @@ class UserAuthenticatorDetailsTest(APITestCase):
             id=auth.id,
         ).exists()
 
-        self._assert_mfa_removed_email_sent(email_log)
+        self._assert_security_email_sent('mfa-removed', email_log)
 
     @mock.patch('sentry.utils.email.logger')
     def test_cannot_delete_without_superuser(self, email_log):
diff --git a/tests/sentry/api/endpoints/test_user_authenticator_enroll.py b/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
index 92cefc0255..3c2590faf0 100644
--- a/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
+++ b/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
@@ -14,11 +14,10 @@ class UserAuthenticatorEnrollTest(APITestCase):
         self.user = self.create_user(email='a@example.com', is_superuser=False)
         self.login_as(user=self.user)
 
-    def _assert_mfa_added_email_sent(*args):
-        test, email_log = args
+    def _assert_security_email_sent(self, email_type, email_log):
         assert email_log.info.call_count == 1
         assert 'mail.queued' in email_log.info.call_args[0]
-        assert email_log.info.call_args[1]['extra']['message_type'] == 'mfa-added'
+        assert email_log.info.call_args[1]['extra']['message_type'] == email_type
 
     @mock.patch('sentry.utils.email.logger')
     @mock.patch('sentry.models.TotpInterface.validate_otp', return_value=True)
@@ -49,7 +48,7 @@ class UserAuthenticatorEnrollTest(APITestCase):
         recovery = Authenticator.objects.get_interface(user=self.user, interface_id="recovery")
         assert recovery.is_enrolled
 
-        self._assert_mfa_added_email_sent(email_log)
+        self._assert_security_email_sent('mfa-added', email_log)
 
         # can't enroll again because no multi enrollment is allowed
         resp = self.client.get(url)
@@ -110,7 +109,7 @@ class UserAuthenticatorEnrollTest(APITestCase):
             interface = Authenticator.objects.get_interface(user=self.user, interface_id="sms")
             assert interface.phone_number == "1231234"
 
-            self._assert_mfa_added_email_sent(email_log)
+            self._assert_security_email_sent('mfa-added', email_log)
 
     @mock.patch('sentry.utils.email.logger')
     @mock.patch('sentry.models.U2fInterface.try_enroll', return_value=True)
@@ -139,4 +138,4 @@ class UserAuthenticatorEnrollTest(APITestCase):
             assert try_enroll.call_args == mock.call("challenge", "response", "device name")
             assert resp.status_code == 204
 
-            self._assert_mfa_added_email_sent(email_log)
+            self._assert_security_email_sent('mfa-added', email_log)
