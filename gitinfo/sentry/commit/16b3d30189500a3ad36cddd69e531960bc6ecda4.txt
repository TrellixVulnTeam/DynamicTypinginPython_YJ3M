commit 16b3d30189500a3ad36cddd69e531960bc6ecda4
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 19 15:23:36 2015 -0800

    Expand accepted args of safe_urlopen

diff --git a/src/sentry/http.py b/src/sentry/http.py
index 0e38a47682..b88c4700fd 100644
--- a/src/sentry/http.py
+++ b/src/sentry/http.py
@@ -57,20 +57,41 @@ def build_session():
     return session
 
 
-def safe_urlopen(url, params=None, data=None, headers=None, allow_redirects=False,
-                 timeout=30):
+def safe_urlopen(url, method=None, params=None, data=None, json=None,
+                 headers=None, allow_redirects=False, timeout=30):
     """
     A slightly safer version of ``urlib2.urlopen`` which prevents redirection
     and ensures the URL isn't attempting to hit a blacklisted IP range.
     """
 
     session = build_session()
+
+    kwargs = {}
+
+    if json:
+        kwargs['json'] = json
+        if not headers:
+            headers = {}
+        headers.setdefault('Content-Type', 'application/json')
+
     if data:
-        method = session.post
-    else:
-        method = session.get
-    return method(url, headers=headers, params=params, data=data, stream=True,
-                  allow_redirects=allow_redirects, timeout=timeout)
+        kwargs['data'] = data
+
+    if params:
+        kwargs['params'] = params
+
+    if headers:
+        kwargs['headers'] = headers
+
+    if method is None:
+        method = 'POST' if (data or json) else 'GET'
+
+    return getattr(session, method.lower())(
+        url,
+        allow_redirects=allow_redirects,
+        timeout=timeout,
+        **kwargs
+    )
 
 
 def safe_urlread(response):
