commit 921a3c38f25882d9c9182a2f12be8b222ed47e6f
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue May 21 13:17:29 2019 +0200

    feat(grouping): Move hardcoded in_app logic to enhancers (#13301)

diff --git a/src/sentry/grouping/enhancement-configs/common:2019-03-23.txt b/src/sentry/grouping/enhancement-configs/common:2019-03-23.txt
index 7fa82a60b5..221e421d6a 100644
--- a/src/sentry/grouping/enhancement-configs/common:2019-03-23.txt
+++ b/src/sentry/grouping/enhancement-configs/common:2019-03-23.txt
@@ -1,9 +1,23 @@
 ## * The default configuration of stacktrace grouping enhancers
 
-# exclude common paths
-family:native path:/usr/lib/**                                    -app
-family:native path:/usr/local/lib/**                              -app
-family:native path:/usr/local/Cellar/**                           -app
+# iOS known apps
+family:native package:/var/containers/Bundle/Application/**          +app
+family:native package:/private/var/containers/Bundle/Application/**  +app
+
+# iOS apps in simulator
+family:native package:**/Developer/CoreSimulator/Devices/**          +app
+family:native package:**/Containers/Bundle/Application/**            +app
+
+# known well locations for unix paths
+family:native package:/lib/**                                        -app
+family:native package:/usr/lib/**                                    -app
+family:native path:/usr/local/lib/**                                 -app
+family:native path:/usr/local/Cellar/**                              -app
+family:native package:linux-gate.so*                                 -app
+
+# well known path components for mac paths
+family:native package:**.app/Contents/**                             +app
+family:native package:/Users/**                                      +app
 
 # rust common modules
 family:native function:std::*                                     -app
@@ -31,6 +45,12 @@ family:native function:google_breakpad::*                         -app -group
 family:native function:google_breakpad::ExceptionHandler::SignalHandler ^-group -group
 family:native function:google_breakpad::ExceptionHandler::WriteMinidumpWithException ^-group -group
 
+# Support frameworks that are not in-app
+family:native package:**/Frameworks/libswift*.dylib                  -app
+family:native package:**/Frameworks/KSCrash.framework/**             -app
+family:native package:**/Frameworks/SentrySwift.framework/**         -app
+family:native package:**/Frameworks/Sentry.framework/**              -app
+
 # Sentry internal functions in Cocoa SDK
 family:native function:kscm_*                                     -app -group
 family:native function:sentrycrashcm_*                            -app -group
diff --git a/src/sentry/grouping/enhancement-configs/legacy:2019-03-12.txt b/src/sentry/grouping/enhancement-configs/legacy:2019-03-12.txt
index 9ccc46a24b..d3eaf03ded 100644
--- a/src/sentry/grouping/enhancement-configs/legacy:2019-03-12.txt
+++ b/src/sentry/grouping/enhancement-configs/legacy:2019-03-12.txt
@@ -1,8 +1,31 @@
-## * The default configuration of stacktrace grouping enhancers
+## * The legacy configuration of stacktrace grouping enhancers
+
+# iOS known apps
+family:native package:/var/containers/Bundle/Application/**          +app
+family:native package:/private/var/containers/Bundle/Application/**  +app
+
+# iOS apps in simulator
+family:native package:**/Developer/CoreSimulator/Devices/**          +app
+family:native package:**/Containers/Bundle/Application/**            +app
+
+# known well locations for linux paths
+family:native package:/lib/**                                        -app
+family:native package:/usr/lib/**                                    -app
+family:native package:linux-gate.so*                                 -app
+
+# well known path components for mac paths
+family:native package:**.app/Contents/**                             +app
+family:native package:/Users/**                                      +app
+
+# Support frameworks that are not in-app
+family:native package:**/Frameworks/libswift*.dylib                  -app
+family:native package:**/Frameworks/KSCrash.framework/**             -app
+family:native package:**/Frameworks/SentrySwift.framework/**         -app
+family:native package:**/Frameworks/Sentry.framework/**              -app
 
 # Sentry internal functions in Cocoa SDK
-family:native function:kscm_*                                     -app -group
-family:native function:kscrash_*                                  -app -group
-family:native function:"?[KSCrash *"                              -app -group
-family:native function:"?[SentryClient *"                         -app -group
-family:native function:"?[RNSentry *"                             -app -group
+family:native function:kscm_*                                        -app -group
+family:native function:kscrash_*                                     -app -group
+family:native function:"?[KSCrash *"                                 -app -group
+family:native function:"?[SentryClient *"                            -app -group
+family:native function:"?[RNSentry *"                                -app -group
diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 8bcded5edd..e6293c22ad 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -273,7 +273,8 @@ class NativeStacktraceProcessor(StacktraceProcessor):
 
             obj = pf.data['obj']
             package = obj and obj.code_file
-            # TODO(ja): This should check for iOS specifically
+            # TODO(ja): This should check for iOS specifically.  Also
+            # check in symbolicator.py for handle_symbolicator_status
             if not package or not is_known_third_party(package):
                 continue
 
diff --git a/src/sentry/lang/native/symbolicator.py b/src/sentry/lang/native/symbolicator.py
index 094df663be..e5bac094c6 100644
--- a/src/sentry/lang/native/symbolicator.py
+++ b/src/sentry/lang/native/symbolicator.py
@@ -390,6 +390,9 @@ def handle_symbolicator_status(status, image, sdk_info, handle_symbolication_fai
         'missing'
     ):
         package = image.get('code_file')
+        # TODO(mitsuhiko): This check seems wrong?  This call seems to
+        # mirror the one in the ios symbol server support.  If we change
+        # one we need to change the other.
         if not package or is_known_third_party(package, sdk_info=sdk_info):
             return
 
diff --git a/src/sentry/stacktraces/processing.py b/src/sentry/stacktraces/processing.py
index 1094e258f8..a99e114470 100644
--- a/src/sentry/stacktraces/processing.py
+++ b/src/sentry/stacktraces/processing.py
@@ -8,11 +8,9 @@ from django.utils import timezone
 from collections import namedtuple, OrderedDict
 
 from sentry.models import Project, Release
-from sentry.utils.in_app import is_known_third_party
 from sentry.utils.cache import cache
 from sentry.utils.hashlib import hash_values
 from sentry.utils.safe import get_path, safe_execute
-from sentry.stacktraces.platform import get_behavior_family_for_platform
 from sentry.stacktraces.functions import trim_function_name
 
 
@@ -216,19 +214,6 @@ def _normalize_in_app(stacktrace, platform=None, sdk_info=None):
     """
     Ensures consistent values of in_app across a stacktrace.
     """
-    # Native frames have special rules regarding in_app. Apply them before other
-    # normalization, just like grouping enhancers.
-    # TODO(ja): Clean up those rules and put them in enhancers instead
-    for frame in stacktrace:
-        if frame.get('in_app') is not None:
-            continue
-
-        family = get_behavior_family_for_platform(frame.get('platform') or platform)
-        if family == 'native':
-            frame_package = frame.get('package')
-            frame['in_app'] = bool(frame_package) and \
-                not is_known_third_party(frame_package, sdk_info=sdk_info)
-
     has_system_frames = _has_system_frames(stacktrace)
     for frame in stacktrace:
         # If all frames are in_app, flip all of them. This is expected by the UI
