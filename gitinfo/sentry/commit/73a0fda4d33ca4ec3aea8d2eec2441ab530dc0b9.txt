commit 73a0fda4d33ca4ec3aea8d2eec2441ab530dc0b9
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Thu Apr 9 15:48:04 2020 +0200

    ref(ui): reduced size selectors - data scrubbing (#18181)

diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelFooter.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelFooter.tsx
index 183ef23a22..fa4f1fea99 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelFooter.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelFooter.tsx
@@ -25,15 +25,24 @@ const DataPrivacyRulesPanelFooter = ({
   disableSaveButton,
 }: Props) => (
   <PanelAction>
-    <StyledLink
+    <ButtonAddRuleLink
       disabled={disabled}
       icon={<IconAdd circle />}
       onClick={onAddRule}
-      size="zero"
-      borderless
+      size="small"
+      priority="link"
     >
       {t('Add Rule')}
-    </StyledLink>
+    </ButtonAddRuleLink>
+    <ButtonAddRule
+      disabled={disabled}
+      icon={<IconAdd circle />}
+      onClick={onAddRule}
+      size="small"
+      priority="default"
+    >
+      {t('Add Rule')}
+    </ButtonAddRule>
     {!hideButtonBar && (
       <Actions>
         <ButtonBar gap={1.5}>
@@ -49,7 +58,7 @@ const DataPrivacyRulesPanelFooter = ({
             {t('Save Rules')}
           </Button>
         </ButtonBar>
-        <Info>{t('* The new rules will only apply to upcoming events')}</Info>
+        <Info>{t('The new rules will only apply to upcoming events')}</Info>
       </Actions>
     )}
   </PanelAction>
@@ -59,6 +68,7 @@ export default DataPrivacyRulesPanelFooter;
 
 const PanelAction = styled('div')`
   padding: ${space(1.5)} ${space(2)};
+  position: relative;
   display: grid;
   grid-template-columns: auto 1fr;
   grid-row-gap: ${space(2)};
@@ -68,13 +78,27 @@ const PanelAction = styled('div')`
   }
 `;
 
-const StyledLink = styled(Button)`
+const ButtonAddRule = styled(Button)`
   color: ${p => p.theme.blue};
   &:hover,
   &:active,
   &:focus {
     color: ${p => p.theme.blueDark};
   }
+  grid-column-start: 1;
+  grid-column-end: -1;
+
+  @media (min-width: ${p => p.theme.breakpoints[1]}) {
+    display: none;
+  }
+`;
+
+const ButtonAddRuleLink = styled(Button)`
+  display: none;
+  font-size: ${p => p.theme.fontSizeMedium};
+  @media (min-width: ${p => p.theme.breakpoints[1]}) {
+    display: block;
+  }
 `;
 
 const Actions = styled('div')`
@@ -84,7 +108,7 @@ const Actions = styled('div')`
   flex-direction: column;
   grid-column-start: 1;
   grid-column-end: -1;
-
+  padding-bottom: ${space(3)};
   @media (min-width: ${p => p.theme.breakpoints[1]}) {
     align-items: flex-end;
     grid-column-start: auto;
@@ -93,5 +117,6 @@ const Actions = styled('div')`
 `;
 
 const Info = styled('div')`
-  margin-top: ${space(1)};
+  position: absolute;
+  bottom: ${space(1)};
 `;
diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelForm.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelForm.tsx
index fc1663f164..793478f965 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelForm.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelForm.tsx
@@ -128,17 +128,19 @@ class DataPrivacyRulesForm extends React.PureComponent<Props, State> {
             openOnFocus
             required
           />
-          <From disabled={disabled}>{t('from')}</From>
-          <DataPrivacyRulesPanelSelectorField
-            onChange={(value: string) => {
-              this.handleChange('from', value);
-            }}
-            value={from}
-            onBlur={this.handleValidation('from')}
-            selectorSuggestions={selectorSuggestions}
-            error={errors.from}
-            disabled={disabled}
-          />
+          <From>
+            <FromLabel disabled={disabled}>{t('from')}</FromLabel>
+            <DataPrivacyRulesPanelSelectorField
+              onChange={(value: string) => {
+                this.handleChange('from', value);
+              }}
+              value={from}
+              onBlur={this.handleValidation('from')}
+              selectorSuggestions={selectorSuggestions}
+              error={errors.from}
+              disabled={disabled}
+            />
+          </From>
           {type === RULE_TYPE.PATTERN && (
             <CustomRegularExpression
               name="customRegularExpression"
@@ -194,18 +196,31 @@ const WrapperFields = styled('div')`
   }
 
   @media (min-width: ${p => p.theme.breakpoints[3]}) {
-    grid-template-columns: minmax(157px, 1fr) minmax(300px, 1fr) max-content minmax(
-        300px,
-        1fr
-      );
+    grid-template-columns: 200px 200px 1fr;
   }
 `;
 
-const From = styled('div')<{disabled?: boolean}>`
+const FromLabel = styled('div')<{disabled?: boolean}>`
   color: ${p => (p.disabled ? p.theme.disabled : p.theme.gray5)};
   height: 34px;
   align-items: center;
   display: flex;
+  width: 100%;
+  justify-content: center;
+`;
+
+const From = styled('div')`
+  display: grid;
+  grid-template-columns: 40px 1fr;
+  grid-column-end: -1;
+  grid-column-start: 1;
+  grid-gap: ${space(2)};
+  width: 100%;
+
+  @media (min-width: ${p => p.theme.breakpoints[3]}) {
+    grid-column-end: auto;
+    grid-column-start: auto;
+  }
 `;
 
 const StyledSelectControl = styled(SelectControl)<{isDisabled?: boolean}>`
