commit ad6f95074a13b5118ac5b640bcef446ca5347e9b
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Wed Jun 3 15:41:29 2020 +0200

    fix(contexts): Missing information added (#19155)

diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index 5710ce090c..a017ceeae6 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -4,6 +4,7 @@ import React from 'react';
 import {objectIsEmpty, toTitleCase, defined} from 'app/utils';
 import EventDataSection from 'app/components/events/eventDataSection';
 import plugins from 'app/plugins';
+import {t} from 'app/locale';
 
 const CONTEXT_TYPES = {
   default: require('app/components/events/contexts/default').default,
@@ -93,25 +94,44 @@ class ContextChunk extends React.Component {
     }
   };
 
-  renderTitle = component => {
-    const {value, alias, type} = this.props;
-    let title = null;
+  getTitle = () => {
+    const {value, type} = this.props;
+
     if (defined(value.title)) {
-      title = value.title;
-    } else {
-      if (component.getTitle) {
-        title = component.getTitle(value);
-      }
-      if (!defined(title)) {
-        title = toTitleCase(alias);
-      }
+      return value.title;
+    }
+
+    if (!defined(type)) {
+      return t('Default');
     }
 
+    switch (type) {
+      case 'app':
+        return t('App');
+      case 'device':
+        return t('Device');
+      case 'os':
+        return t('Operating System');
+      case 'user':
+        return t('User');
+      case 'gpu':
+        return t('Graphics Processing Unit');
+      case 'runtime':
+        return t('Runtime');
+      case 'default':
+        return t('Default');
+      default:
+        return toTitleCase(type);
+    }
+  };
+
+  renderSectionTitle = () => {
+    const {alias, type} = this.props;
     return (
-      <span>
-        {title + ' '}
-        {alias !== type ? <small>({alias})</small> : null}
-      </span>
+      <React.Fragment>
+        {this.getTitle()}
+        {alias !== type && <small>({alias})</small>}
+      </React.Fragment>
     );
   };
 
@@ -140,7 +160,7 @@ class ContextChunk extends React.Component {
         event={evt}
         key={`context-${alias}`}
         type={`context-${alias}`}
-        title={this.renderTitle(Component)}
+        title={this.renderSectionTitle()}
       >
         <Component alias={alias} data={value} />
       </EventDataSection>
diff --git a/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx b/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx
index 98aaab7d3a..5fbab452a2 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx
@@ -23,6 +23,4 @@ const App = ({data}: Props) => (
   <ContextBlock knownData={getAppKnownData(data, appKnownDataValues)} />
 );
 
-App.getTitle = () => 'App';
-
 export default App;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx
index bdf3800f86..f60782a772 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx
@@ -1,5 +1,6 @@
 import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
 import {getMeta} from 'app/components/events/meta/metaProxy';
+import {defined} from 'app/utils';
 
 import getAppKnownDataDetails from './getAppKnownDataDetails';
 import {AppData, AppKnownDataType} from './types';
@@ -10,8 +11,8 @@ function getAppKnownData(
 ): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = appKnownDataValues.filter(
-    appKnownDataValue => data[appKnownDataValue]
+  const dataKeys = appKnownDataValues.filter(appKnownDataValue =>
+    defined(data[appKnownDataValue])
   );
 
   for (const key of dataKeys) {
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx b/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx
index 5476122ca6..36edbd3447 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx
@@ -18,7 +18,15 @@ const deviceKnownDataValues = [
   DeviceKnownDataType.BATTERY_STATUS,
   DeviceKnownDataType.ORIENTATION,
   DeviceKnownDataType.MEMORY,
+  DeviceKnownDataType.MEMORY_SIZE,
+  DeviceKnownDataType.FREE_MEMORY,
+  DeviceKnownDataType.USABLE_MEMORY,
+  DeviceKnownDataType.LOW_MEMORY,
+  DeviceKnownDataType.STORAGE_SIZE,
+  DeviceKnownDataType.EXTERNAL_STORAGE_SIZE,
+  DeviceKnownDataType.EXTERNAL_FREE_STORAGE,
   DeviceKnownDataType.STORAGE,
+  DeviceKnownDataType.FREE_STORAGE,
   DeviceKnownDataType.SIMULATOR,
   DeviceKnownDataType.BOOT_TIME,
   DeviceKnownDataType.TIMEZONE,
@@ -29,7 +37,6 @@ const deviceKnownDataValues = [
   DeviceKnownDataType.CONNECTION_TYPE,
   DeviceKnownDataType.ID,
   DeviceKnownDataType.LANGUAGE,
-  DeviceKnownDataType.LOW_MEMORY,
   DeviceKnownDataType.MANUFACTURER,
   DeviceKnownDataType.ONLINE,
   DeviceKnownDataType.SCREEN_DENSITY,
@@ -38,12 +45,12 @@ const deviceKnownDataValues = [
   DeviceKnownDataType.SCREEN_RESOLUTION,
   DeviceKnownDataType.SCREEN_WIDTH_PIXELS,
   DeviceKnownDataType.MODEL,
+  DeviceKnownDataType.MODEL_ID,
+  DeviceKnownDataType.RENDERED_MODEL,
 ];
 
 const Device = ({data}: Props) => (
   <ContextBlock knownData={getDeviceKnownData(data, deviceKnownDataValues)} />
 );
 
-Device.getTitle = () => 'Device';
-
 export default Device;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownData.tsx
index 6036baa1ae..d5374834dc 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownData.tsx
@@ -1,5 +1,6 @@
 import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
 import {getMeta} from 'app/components/events/meta/metaProxy';
+import {defined} from 'app/utils';
 
 import getDeviceKnownDataDetails from './getDeviceKnownDataDetails';
 import {DeviceKnownDataType, DeviceData} from './types';
@@ -10,8 +11,8 @@ function getOperatingSystemKnownData(
 ): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = deviceKnownDataValues.filter(
-    deviceKnownDataValue => data[deviceKnownDataValue]
+  const dataKeys = deviceKnownDataValues.filter(deviceKnownDataValue =>
+    defined(data[deviceKnownDataValue])
   );
 
   for (const key of dataKeys) {
@@ -23,6 +24,7 @@ function getOperatingSystemKnownData(
       meta: getMeta(data, key),
     });
   }
+
   return knownData;
 }
 
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownDataDetails.tsx b/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownDataDetails.tsx
index afe114d014..91753a7eea 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownDataDetails.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownDataDetails.tsx
@@ -25,6 +25,11 @@ function getDeviceKnownDataDetails(data: DeviceData, type: DeviceKnownDataType):
         subject: t('Family'),
         value: data.family,
       };
+    case DeviceKnownDataType.MODEL_ID:
+      return {
+        subject: t('Model Id'),
+        value: data.model_id,
+      };
     case DeviceKnownDataType.MODEL:
       return {
         subject: t('Model'),
@@ -37,6 +42,11 @@ function getDeviceKnownDataDetails(data: DeviceData, type: DeviceKnownDataType):
             undefined
           ),
       };
+    case DeviceKnownDataType.RENDERED_MODEL:
+      return {
+        subject: t('Rendered Model'),
+        value: data.renderedModel,
+      };
     case DeviceKnownDataType.CPU_DESCRIPTION:
       return {
         subject: t('CPU Description'),
@@ -90,6 +100,30 @@ function getDeviceKnownDataDetails(data: DeviceData, type: DeviceKnownDataType):
               )
             : undefined,
       };
+    case DeviceKnownDataType.FREE_STORAGE: {
+      return {
+        subject: t('Free Storage'),
+        value: data.free_storage,
+      };
+    }
+    case DeviceKnownDataType.STORAGE_SIZE: {
+      return {
+        subject: t('Storage Size'),
+        value: data.storage_size,
+      };
+    }
+    case DeviceKnownDataType.EXTERNAL_STORAGE_SIZE: {
+      return {
+        subject: t('External Storage Size'),
+        value: data.external_storage_size,
+      };
+    }
+    case DeviceKnownDataType.EXTERNAL_FREE_STORAGE: {
+      return {
+        subject: t('External Free Storage'),
+        value: data.external_free_storage,
+      };
+    }
     case DeviceKnownDataType.SIMULATOR:
       return {
         subject: t('Simulator'),
@@ -145,6 +179,21 @@ function getDeviceKnownDataDetails(data: DeviceData, type: DeviceKnownDataType):
         subject: t('Low Memory'),
         value: data.low_memory,
       };
+    case DeviceKnownDataType.FREE_MEMORY:
+      return {
+        subject: t('Free Memory'),
+        value: data.free_memory,
+      };
+    case DeviceKnownDataType.MEMORY_SIZE:
+      return {
+        subject: t('Memory Size'),
+        value: data.memory_size,
+      };
+    case DeviceKnownDataType.USABLE_MEMORY:
+      return {
+        subject: t('Usable Memory'),
+        value: data.usable_memory,
+      };
     case DeviceKnownDataType.MANUFACTURER:
       return {
         subject: t('Manufacturer'),
@@ -157,7 +206,7 @@ function getDeviceKnownDataDetails(data: DeviceData, type: DeviceKnownDataType):
       };
     case DeviceKnownDataType.SCREEN_DENSITY:
       return {
-        subject: t('Screen density'),
+        subject: t('Screen Density'),
         value: data.screen_density,
       };
     case DeviceKnownDataType.SCREEN_DPI:
@@ -167,17 +216,17 @@ function getDeviceKnownDataDetails(data: DeviceData, type: DeviceKnownDataType):
       };
     case DeviceKnownDataType.SCREEN_HEIGHT_PIXELS:
       return {
-        subject: t('Screen height pixels'),
+        subject: t('Screen Height Pixels'),
         value: data.screen_height_pixels,
       };
     case DeviceKnownDataType.SCREEN_RESOLUTION:
       return {
-        subject: t('Screen resolution'),
+        subject: t('Screen Resolution'),
         value: data.screen_resolution,
       };
     case DeviceKnownDataType.SCREEN_WIDTH_PIXELS:
       return {
-        subject: t('Screen width pixels'),
+        subject: t('Screen Width Pixels'),
         value: data.screen_width_pixels,
       };
     default:
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device/types.tsx b/src/sentry/static/sentry/app/components/events/contexts/device/types.tsx
index 8560256130..ce1fb3c86a 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device/types.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device/types.tsx
@@ -1,34 +1,41 @@
 export enum DeviceKnownDataType {
-  NAME = 'name',
-  FAMILY = 'family',
-  RENDERED_MODEL = 'renderedModel',
-  MODEL = 'model',
-  MODEL_ID = 'model_id',
-  CPU_DESCRIPTION = 'cpu_description',
   ARCH = 'arch',
+  ARCHS = 'archs',
   BATTERY_LEVEL = 'battery_level',
   BATTERY_STATUS = 'baterry_status',
-  ORIENTATION = 'orientation',
-  MEMORY = 'memory',
-  STORAGE = 'storage',
-  SIMULATOR = 'simulator',
-  BOOT_TIME = 'boot_time',
-  TIMEZONE = 'timezone',
-  DEVICE_TYPE = 'device_type',
-  ARCHS = 'archs',
   BRAND = 'brand',
-  CHARGING = 'charging',
+  BOOT_TIME = 'boot_time',
   CONNECTION_TYPE = 'connection_type',
+  CHARGING = 'charging',
+  CPU_DESCRIPTION = 'cpu_description',
+  DEVICE_TYPE = 'device_type',
+  EXTERNAL_STORAGE_SIZE = 'external_storage_size',
+  EXTERNAL_FREE_STORAGE = 'external_free_storage',
+  FAMILY = 'family',
+  FREE_STORAGE = 'free_storage',
+  FREE_MEMORY = 'free_memory',
   ID = 'id',
   LANGUAGE = 'language',
   LOW_MEMORY = 'low_memory',
   MANUFACTURER = 'manufacturer',
+  MODEL = 'model',
+  MODEL_ID = 'model_id',
+  MEMORY = 'memory',
+  MEMORY_SIZE = 'memory_size',
+  NAME = 'name',
   ONLINE = 'online',
+  ORIENTATION = 'orientation',
+  RENDERED_MODEL = 'renderedModel',
+  SIMULATOR = 'simulator',
   SCREEN_DENSITY = 'screen_density',
   SCREEN_DPI = 'screen_dpi',
   SCREEN_HEIGHT_PIXELS = 'screen_height_pixels',
   SCREEN_RESOLUTION = 'screen_resolution',
   SCREEN_WIDTH_PIXELS = 'screen_width_pixels',
+  STORAGE_SIZE = 'storage_size',
+  STORAGE = 'storage',
+  TIMEZONE = 'timezone',
+  USABLE_MEMORY = 'usable_memory',
 }
 
 // TODO(ts): add correct types
diff --git a/src/sentry/static/sentry/app/components/events/contexts/gpu/getGPUKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/gpu/getGPUKnownData.tsx
index a4aae75f6f..eae8c5ceef 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/gpu/getGPUKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/gpu/getGPUKnownData.tsx
@@ -1,5 +1,6 @@
 import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
 import {getMeta} from 'app/components/events/meta/metaProxy';
+import {defined} from 'app/utils';
 
 import getGpuKnownDataDetails from './getGPUKnownDataDetails';
 import {GPUData, GPUKnownDataType} from './types';
@@ -10,8 +11,8 @@ function getGPUKnownData(
 ): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = gpuKnownDataValues.filter(
-    gpuKnownDataValue => data[gpuKnownDataValue]
+  const dataKeys = gpuKnownDataValues.filter(gpuKnownDataValue =>
+    defined(data[gpuKnownDataValue])
   );
 
   for (const key of dataKeys) {
diff --git a/src/sentry/static/sentry/app/components/events/contexts/gpu/gpu.tsx b/src/sentry/static/sentry/app/components/events/contexts/gpu/gpu.tsx
index 2b941804e7..fe0390e77d 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/gpu/gpu.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/gpu/gpu.tsx
@@ -32,6 +32,4 @@ const GPU = ({data}: Props) => {
   );
 };
 
-GPU.getTitle = () => 'GPU';
-
 export default GPU;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx
index 9e4214110f..2470ca9927 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx
@@ -1,5 +1,6 @@
 import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
 import {getMeta} from 'app/components/events/meta/metaProxy';
+import {defined} from 'app/utils';
 
 import getOperatingSystemKnownDataDetails from './getOperatingSystemKnownDataDetails';
 import {OperatingSystemKnownData, OperatingSystemKnownDataType} from './types';
@@ -10,8 +11,8 @@ function getOperatingSystemKnownData(
 ): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = operatingSystemKnownDataValues.filter(
-    operatingSystemKnownDataValue => data[operatingSystemKnownDataValue]
+  const dataKeys = operatingSystemKnownDataValues.filter(operatingSystemKnownDataValue =>
+    defined(data[operatingSystemKnownDataValue])
   );
 
   for (const key of dataKeys) {
diff --git a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx
index 68cb6b0da8..d99437e96a 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx
@@ -22,6 +22,4 @@ const OperatingSystem = ({data}: Props) => (
   />
 );
 
-OperatingSystem.getTitle = () => 'Operating System';
-
 export default OperatingSystem;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx
index 9d83330e88..a87130078f 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx
@@ -1,5 +1,6 @@
 import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
 import {getMeta} from 'app/components/events/meta/metaProxy';
+import {defined} from 'app/utils';
 
 import getRuntimeKnownDataDetails from './getRuntimeKnownDataDetails';
 import {RuntimeData, RuntimeKnownDataType} from './types';
@@ -10,8 +11,8 @@ function getRuntimeKnownData(
 ): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = runTimerKnownDataValues.filter(
-    runTimerKnownDataValue => data[runTimerKnownDataValue]
+  const dataKeys = runTimerKnownDataValues.filter(runTimerKnownDataValue =>
+    defined(data[runTimerKnownDataValue])
   );
 
   for (const key of dataKeys) {
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx b/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx
index fc026dc16c..31c2539750 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx
@@ -15,6 +15,4 @@ const Runtime = ({data}: Props) => (
   <ContextBlock knownData={getRuntimeKnownData(data, runTimerKnownDataValues)} />
 );
 
-Runtime.getTitle = () => 'Runtime';
-
 export default Runtime;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/user/getUserKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/user/getUserKnownData.tsx
index b1a966a1b0..f4579639c4 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user/getUserKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user/getUserKnownData.tsx
@@ -12,8 +12,8 @@ function getUserKnownData(
 ): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = userKnownDataValues.filter(
-    userKnownDataValue => data[userKnownDataValue]
+  const dataKeys = userKnownDataValues.filter(userKnownDataValue =>
+    defined(data[userKnownDataValue])
   );
 
   for (const key of dataKeys) {
diff --git a/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx b/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx
index 86c39af51c..738c5c4196 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx
@@ -45,6 +45,4 @@ const User = ({data}: Props) => {
   );
 };
 
-User.getTitle = () => 'User';
-
 export default User;
