commit 5ce99c03fcdc6acaf453ae0fac6d780243acfb3e
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Feb 26 12:45:14 2020 -0800

    chore(frontend): Minor cleanups (#17259)

diff --git a/src/sentry/static/sentry/app/views/discover/conditions/condition.tsx b/src/sentry/static/sentry/app/views/discover/conditions/condition.tsx
index 58d6da4206..ec1f8bb477 100644
--- a/src/sentry/static/sentry/app/views/discover/conditions/condition.tsx
+++ b/src/sentry/static/sentry/app/views/discover/conditions/condition.tsx
@@ -21,22 +21,21 @@ type ConditionState = {
   isOpen: boolean;
 };
 
-const initalState = {
-  inputValue: '',
-  isOpen: false,
-};
-
 export default class ConditionRow extends React.Component<
   ConditionProps,
   ConditionState
 > {
-  state = initalState;
+  state: ConditionState = {
+    inputValue: '',
+    isOpen: false,
+  };
 
-  // This is the ref of the inner react-select component
-  private select: any;
+  selectRef = React.createRef<HTMLInputElement>();
 
   focus() {
-    this.select.focus();
+    if (this.selectRef.current) {
+      this.selectRef.current.focus();
+    }
   }
 
   handleChange = (option: ReactSelectOption) => {
@@ -214,7 +213,7 @@ export default class ConditionRow extends React.Component<
       <Box>
         <SelectControl
           deprecatedSelectControl
-          ref={(ref: any) => (this.select = ref)}
+          ref={this.selectRef}
           value={getInternal(this.props.value)}
           placeholder={<PlaceholderText>{t('Add condition...')}</PlaceholderText>}
           options={this.getOptions()}
diff --git a/tests/js/spec/views/issueList/tagFilter.spec.jsx b/tests/js/spec/views/issueList/tagFilter.spec.jsx
index 89a3c04eb6..14f111476f 100644
--- a/tests/js/spec/views/issueList/tagFilter.spec.jsx
+++ b/tests/js/spec/views/issueList/tagFilter.spec.jsx
@@ -11,9 +11,9 @@ describe('IssueListTagFilter', function() {
     MockApiClient.clearMockResponses();
     project = TestStubs.ProjectDetails();
 
-    tagValueLoader = () => {
-      return new Promise(function(resolve) {
-        const data = [
+    tagValueLoader = () =>
+      new Promise(resolve =>
+        resolve([
           {
             count: 0,
             firstSeen: '2018-05-30T11:33:46.535Z',
@@ -22,10 +22,8 @@ describe('IssueListTagFilter', function() {
             name: 'foo',
             value: 'foo',
           },
-        ];
-        return resolve(data);
-      });
-    };
+        ])
+      );
   });
 
   it('calls API and renders options when opened', async function() {
diff --git a/tests/js/spec/views/settings/projectReleaseTracking.spec.jsx b/tests/js/spec/views/settings/projectReleaseTracking.spec.jsx
index a793404e98..43570b9328 100644
--- a/tests/js/spec/views/settings/projectReleaseTracking.spec.jsx
+++ b/tests/js/spec/views/settings/projectReleaseTracking.spec.jsx
@@ -7,7 +7,7 @@ import ProjectReleaseTrackingContainer, {
 import {fetchPlugins} from 'app/actionCreators/plugins';
 
 jest.mock('app/actionCreators/plugins', () => ({
-  fetchPlugins: jest.fn(),
+  fetchPlugins: jest.fn().mockResolvedValue([]),
 }));
 
 describe('ProjectReleaseTracking', function() {
