commit 82656e5426faa9977f96f5ae793a650496dace37
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Mon May 25 15:13:37 2020 +0200

    fix(ui): Added disabled props (#19003)

diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRules.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRules.tsx
index 1759352817..9ff3d425a8 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRules.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRules.tsx
@@ -430,6 +430,7 @@ class DataPrivacyRules extends React.Component<Props, State> {
               onUpdateEventId={this.handleUpdateEventId}
               eventId={eventId}
               sourceSuggestions={sourceSuggestions}
+              disabled={disabled}
             />
             <PanelAction>
               <Button
diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesContent.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesContent.tsx
index abfddd38fd..1c709cc67a 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesContent.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/dataPrivacyRulesContent.tsx
@@ -15,6 +15,7 @@ type Props = {
   rules: Array<Rule>;
   onUpdateRule: ModalProps['onSaveRule'];
   onDeleteRule: (rulesToBeDeleted: Array<Rule['id']>) => void;
+  disabled?: boolean;
 } & Pick<ModalProps, 'eventId' | 'onUpdateEventId' | 'sourceSuggestions'>;
 
 type State = {
@@ -59,7 +60,7 @@ class DataPrivacyRulesContent extends React.Component<Props, State> {
 
   render() {
     const {editRule} = this.state;
-    const {rules, sourceSuggestions, onUpdateEventId, eventId} = this.props;
+    const {rules, sourceSuggestions, onUpdateEventId, eventId, disabled} = this.props;
 
     if (rules.length === 0) {
       return (
@@ -76,6 +77,7 @@ class DataPrivacyRulesContent extends React.Component<Props, State> {
           rules={rules}
           onDeleteRule={this.handleDeleteRule}
           onShowEditRuleModal={this.handleShowEditRuleModal}
+          disabled={disabled}
         />
         {defined(editRule) && (
           <DataPrivacyRulesModal
diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/rulesList.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/rulesList.tsx
index ac1c9b1328..fbc7fcfcf5 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/rulesList.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRules/rulesList.tsx
@@ -16,14 +16,15 @@ type Props = {
   rules: Array<Rule>;
   onShowEditRuleModal?: (id: Rule['id']) => () => void;
   onDeleteRule?: (id: Rule['id']) => () => void;
+  disabled?: boolean;
 };
 
 const RulesList = React.forwardRef<HTMLUListElement, Props>(function RulesList(
-  {rules, onShowEditRuleModal, onDeleteRule},
+  {rules, onShowEditRuleModal, onDeleteRule, disabled},
   ref
 ) {
   return (
-    <List ref={ref}>
+    <List ref={ref} isDisabled={disabled}>
       {rules.map(({id, method, type, source}) => {
         const methodLabel = getMethodTypeLabel(method);
         const typelabel = getRuleTypeLabel(type);
@@ -38,6 +39,7 @@ const RulesList = React.forwardRef<HTMLUListElement, Props>(function RulesList(
                 size="small"
                 onClick={onShowEditRuleModal(id)}
                 icon={<IconEdit />}
+                disabled={disabled}
               />
             )}
             {onDeleteRule && (
@@ -46,6 +48,7 @@ const RulesList = React.forwardRef<HTMLUListElement, Props>(function RulesList(
                 size="small"
                 onClick={onDeleteRule(id)}
                 icon={<IconDelete />}
+                disabled={disabled}
               />
             )}
           </ListItem>
@@ -59,15 +62,22 @@ RulesList.propTypes = {
   rules: PropTypes.array.isRequired,
   onShowEditRuleModal: PropTypes.func,
   onDeleteRule: PropTypes.func,
+  disabled: PropTypes.bool,
 };
 
 export default RulesList;
 
-const List = styled('ul')`
+const List = styled('ul')<{isDisabled?: boolean}>`
   list-style: none;
   margin: 0;
   padding: 0;
   margin-bottom: 0 !important;
+  ${p =>
+    p.isDisabled &&
+    `
+      color: ${p.theme.gray1};
+      background: ${p.theme.offWhite};
+  `}
 `;
 
 const ListItem = styled('li')`
