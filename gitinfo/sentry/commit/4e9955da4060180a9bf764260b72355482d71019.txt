commit 4e9955da4060180a9bf764260b72355482d71019
Author: Stephen Cefali <scefali@sentry.io>
Date:   Mon Aug 19 21:29:22 2019 +0000

    Feat(app-platform): Remove org sentry apps feature flag (#14436)

diff --git a/src/sentry/api/endpoints/sentry_app_details.py b/src/sentry/api/endpoints/sentry_app_details.py
index 6a9d7dbf93..2e6790043b 100644
--- a/src/sentry/api/endpoints/sentry_app_details.py
+++ b/src/sentry/api/endpoints/sentry_app_details.py
@@ -16,17 +16,9 @@ logger = logging.getLogger(__name__)
 
 class SentryAppDetailsEndpoint(SentryAppBaseEndpoint):
     def get(self, request, sentry_app):
-        if not features.has("organizations:sentry-apps", sentry_app.owner, actor=request.user):
-
-            return Response(status=404)
-
         return Response(serialize(sentry_app, request.user))
 
     def put(self, request, sentry_app):
-        if not features.has("organizations:sentry-apps", sentry_app.owner, actor=request.user):
-
-            return Response(status=404)
-
         if self._has_hook_events(request) and not features.has(
             "organizations:integrations-event-hooks", sentry_app.owner, actor=request.user
         ):
@@ -81,9 +73,6 @@ class SentryAppDetailsEndpoint(SentryAppBaseEndpoint):
         return Response(serializer.errors, status=400)
 
     def delete(self, request, sentry_app):
-        if not features.has("organizations:sentry-apps", sentry_app.owner, actor=request.user):
-            return Response(status=404)
-
         if sentry_app.is_unpublished or sentry_app.is_internal:
             Destroyer.run(user=request.user, sentry_app=sentry_app, request=request)
             return Response(status=204)
diff --git a/src/sentry/api/endpoints/sentry_app_publish_request.py b/src/sentry/api/endpoints/sentry_app_publish_request.py
index 93a381d1d5..f614e89637 100644
--- a/src/sentry/api/endpoints/sentry_app_publish_request.py
+++ b/src/sentry/api/endpoints/sentry_app_publish_request.py
@@ -3,17 +3,12 @@ from __future__ import absolute_import
 from rest_framework.response import Response
 
 from sentry import options
-from sentry import features
 from sentry.api.bases.sentryapps import SentryAppBaseEndpoint
 from sentry.utils import email
 
 
 class SentryAppPublishRequestEndpoint(SentryAppBaseEndpoint):
     def post(self, request, sentry_app):
-        if not features.has("organizations:sentry-apps", sentry_app.owner, actor=request.user):
-
-            return Response(status=404)
-
         # check status of app to make sure it is unpublished
         if sentry_app.is_published:
             return Response({"detail": "Cannot publish already published integration"}, status=400)
diff --git a/src/sentry/api/endpoints/sentry_apps.py b/src/sentry/api/endpoints/sentry_apps.py
index b570556b5f..cf7bdf5976 100644
--- a/src/sentry/api/endpoints/sentry_apps.py
+++ b/src/sentry/api/endpoints/sentry_apps.py
@@ -11,7 +11,6 @@ from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.api.serializers.rest_framework import SentryAppSerializer
 from sentry.constants import SentryAppStatus
-from sentry.features.helpers import requires_feature
 from sentry.mediators.sentry_apps import Creator, InternalCreator
 from sentry.models import SentryApp
 from sentry.utils import json
@@ -49,7 +48,6 @@ class SentryAppsEndpoint(SentryAppsBaseEndpoint):
             on_results=lambda x: serialize(x, request.user),
         )
 
-    @requires_feature("organizations:sentry-apps", any_org=True)
     def post(self, request, organization):
         data = {
             "name": request.json_body.get("name"),
diff --git a/src/sentry/api/endpoints/sentry_internal_app_token_details.py b/src/sentry/api/endpoints/sentry_internal_app_token_details.py
index a97c537099..84cd1805cc 100644
--- a/src/sentry/api/endpoints/sentry_internal_app_token_details.py
+++ b/src/sentry/api/endpoints/sentry_internal_app_token_details.py
@@ -6,7 +6,6 @@ from django.http import Http404
 
 from sentry.api.bases import SentryInternalAppTokenPermission, SentryAppBaseEndpoint
 from sentry.models import ApiToken
-from sentry.features.helpers import requires_feature
 from sentry.mediators.sentry_app_installation_tokens import Destroyer
 
 
@@ -26,7 +25,6 @@ class SentryInternalAppTokenDetailsEndpoint(SentryAppBaseEndpoint):
 
         return (args, kwargs)
 
-    @requires_feature("organizations:sentry-apps", any_org=True)
     def delete(self, request, sentry_app, api_token):
         # Validate the token is associated with the application
         if api_token.application_id != sentry_app.application_id:
diff --git a/src/sentry/api/endpoints/sentry_internal_app_tokens.py b/src/sentry/api/endpoints/sentry_internal_app_tokens.py
index 33707d9ba1..91d25eb66b 100644
--- a/src/sentry/api/endpoints/sentry_internal_app_tokens.py
+++ b/src/sentry/api/endpoints/sentry_internal_app_tokens.py
@@ -5,7 +5,6 @@ from rest_framework import status
 
 from sentry.api.bases import SentryInternalAppTokenPermission, SentryAppBaseEndpoint
 from sentry.models import ApiToken, SentryAppInstallation
-from sentry.features.helpers import requires_feature
 from sentry.mediators.sentry_app_installation_tokens import Creator
 from sentry.api.serializers.models.apitoken import ApiTokenSerializer
 from sentry.exceptions import ApiTokenLimitError
@@ -14,7 +13,6 @@ from sentry.exceptions import ApiTokenLimitError
 class SentryInternalAppTokensEndpoint(SentryAppBaseEndpoint):
     permission_classes = (SentryInternalAppTokenPermission,)
 
-    @requires_feature("organizations:sentry-apps", any_org=True)
     def get(self, request, sentry_app):
         if not sentry_app.is_internal:
             return Response([])
@@ -25,7 +23,6 @@ class SentryInternalAppTokensEndpoint(SentryAppBaseEndpoint):
             ApiTokenSerializer().serialize(token, attrs, request.user) for token in tokens
         )
 
-    @requires_feature("organizations:sentry-apps", any_org=True)
     def post(self, request, sentry_app):
         if not sentry_app.is_internal:
             return Response(
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 9fe057e7f4..c54e4fb840 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -846,9 +846,8 @@ SENTRY_FEATURES = {
     # Enable inviting members to organizations.
     "organizations:invite-members": True,
     # Enable org-wide saved searches and user pinned search
-    "organizations:org-saved-searches": False,
-    # Enable organizations to create and utilize Sentry Apps.
-    "organizations:sentry-apps": False,
+    'organizations:org-saved-searches': False,
+
     # Enable the relay functionality, for use with sentry semaphore. See
     # https://github.com/getsentry/semaphore.
     "organizations:relay": False,
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 0517a7545d..e2feb814ed 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -68,7 +68,6 @@ default_manager.add("organizations:integrations-issue-sync", OrganizationFeature
 default_manager.add("organizations:integrations-event-hooks", OrganizationFeature)  # NOQA
 default_manager.add("organizations:internal-catchall", OrganizationFeature)  # NOQA
 default_manager.add("organizations:incidents", OrganizationFeature)  # NOQA
-default_manager.add("organizations:sentry-apps", OrganizationFeature)  # NOQA
 default_manager.add("organizations:invite-members", OrganizationFeature)  # NOQA
 default_manager.add("organizations:large-debug-files", OrganizationFeature)  # NOQA
 default_manager.add("organizations:monitors", OrganizationFeature)  # NOQA
diff --git a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
index 5dcc465bb1..5643d58c81 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
@@ -87,7 +87,6 @@ const organizationNavigation = [
       {
         path: `${pathPrefix}/developer-settings/`,
         title: t('Developer Settings'),
-        show: ({features}) => features.has('sentry-apps'),
         description: t('Manage developer applications'),
         id: 'developer-settings',
       },
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx
index 07041abd6e..379132b9d8 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx
@@ -123,25 +123,6 @@ class OrganizationDeveloperSettings extends AsyncView {
   }
 
   renderBody() {
-    const {organization} = this.props;
-
-    if (!organization.features.includes('sentry-apps')) {
-      return (
-        <div>
-          <SettingsPageHeader title={t('Developer Settings')} />
-          <Panel>
-            <PanelBody>
-              <EmptyMessage>
-                {t(
-                  "Want to build on top of the Sentry Integration Platform? We're working closely with early adopters. Please reach out to us by contacting partners@sentry.io"
-                )}
-              </EmptyMessage>
-            </PanelBody>
-          </Panel>
-        </div>
-      );
-    }
-
     return (
       <div>
         <SettingsPageHeader title={t('Developer Settings')} />
diff --git a/tests/acceptance/test_organization_developer_settings.py b/tests/acceptance/test_organization_developer_settings.py
index 5445df6ad0..e07117131f 100644
--- a/tests/acceptance/test_organization_developer_settings.py
+++ b/tests/acceptance/test_organization_developer_settings.py
@@ -25,40 +25,34 @@ class OrganizationDeveloperSettingsNewAcceptanceTest(AcceptanceTestCase):
         self.browser.wait_until_not(".loading-indicator")
 
     def test_create_new_public_integration(self):
-        with self.feature("organizations:sentry-apps"):
-            self.load_page(self.org_developer_settings_path)
+        self.load_page(self.org_developer_settings_path)
 
-            self.browser.click('[aria-label="New Public Integration"]')
+        self.browser.click('[aria-label="New Public Integration"]')
 
-            self.browser.element('input[name="name"]').send_keys("Tesla")
-            self.browser.element('input[name="author"]').send_keys("Elon Musk")
-            self.browser.element('input[name="webhookUrl"]').send_keys(
-                "https://example.com/webhook"
-            )
+        self.browser.element('input[name="name"]').send_keys("Tesla")
+        self.browser.element('input[name="author"]').send_keys("Elon Musk")
+        self.browser.element('input[name="webhookUrl"]').send_keys("https://example.com/webhook")
 
-            self.browser.click('[aria-label="Save Changes"]')
+        self.browser.click('[aria-label="Save Changes"]')
 
-            self.browser.wait_until(".ref-success")
+        self.browser.wait_until(".ref-success")
 
-            assert self.browser.find_element_by_link_text("Tesla")
+        assert self.browser.find_element_by_link_text("Tesla")
 
     def test_create_new_internal_integration(self):
-        with self.feature("organizations:sentry-apps"):
-            self.load_page(self.org_developer_settings_path)
+        self.load_page(self.org_developer_settings_path)
 
-            self.browser.click('[aria-label="New Internal Integration"]')
+        self.browser.click('[aria-label="New Internal Integration"]')
 
-            self.browser.element('input[name="name"]').send_keys("Tesla")
-            self.browser.element('input[name="author"]').send_keys("Elon Musk")
-            self.browser.element('input[name="webhookUrl"]').send_keys(
-                "https://example.com/webhook"
-            )
+        self.browser.element('input[name="name"]').send_keys("Tesla")
+        self.browser.element('input[name="author"]').send_keys("Elon Musk")
+        self.browser.element('input[name="webhookUrl"]').send_keys("https://example.com/webhook")
 
-            self.browser.click('[aria-label="Save Changes"]')
+        self.browser.click('[aria-label="Save Changes"]')
 
-            self.browser.wait_until(".ref-success")
+        self.browser.wait_until(".ref-success")
 
-            assert self.browser.find_element_by_link_text("Tesla")
+        assert self.browser.find_element_by_link_text("Tesla")
 
 
 class OrganizationDeveloperSettingsEditAcceptanceTest(AcceptanceTestCase):
@@ -88,50 +82,44 @@ class OrganizationDeveloperSettingsEditAcceptanceTest(AcceptanceTestCase):
         self.browser.wait_until_not(".loading-indicator")
 
     def test_edit_integration_schema(self):
-        with self.feature("organizations:sentry-apps"):
-            self.load_page(self.org_developer_settings_path)
+        self.load_page(self.org_developer_settings_path)
 
-            textarea = self.browser.element('textarea[name="schema"]')
-            textarea.clear()
-            textarea.send_keys("{}")
+        textarea = self.browser.element('textarea[name="schema"]')
+        textarea.clear()
+        textarea.send_keys("{}")
 
-            self.browser.click('[aria-label="Save Changes"]')
+        self.browser.click('[aria-label="Save Changes"]')
 
-            self.browser.wait_until(".ref-success")
+        self.browser.wait_until(".ref-success")
 
-            link = self.browser.find_element_by_link_text("Tesla App")
-            link.click()
+        link = self.browser.find_element_by_link_text("Tesla App")
+        link.click()
 
-            self.browser.wait_until_not(".loading-indicator")
+        self.browser.wait_until_not(".loading-indicator")
 
-            schema = self.browser.element('textarea[name="schema"]')
-            assert schema.text == ""
+        schema = self.browser.element('textarea[name="schema"]')
+        assert schema.text == ""
 
     def test_remove_tokens_internal_app(self):
         internal_app = self.create_internal_integration(name="Internal App", organization=self.org)
         url = u"/settings/{}/developer-settings/{}".format(self.org.slug, internal_app.slug)
 
-        with self.feature("organizations:sentry-apps"):
-            self.load_page(url)
+        self.load_page(url)
 
-            self.browser.click('[data-test-id="token-delete"]')
-            self.browser.wait_until(".ref-success")
+        self.browser.click('[data-test-id="token-delete"]')
+        self.browser.wait_until(".ref-success")
 
-            assert self.browser.find_element_by_xpath(
-                "//div[contains(text(), 'No tokens created yet.')]"
-            )
+        assert self.browser.find_element_by_xpath(
+            "//div[contains(text(), 'No tokens created yet.')]"
+        )
 
     def test_add_tokens_internal_app(self):
         internal_app = self.create_internal_integration(name="Internal App", organization=self.org)
         url = u"/settings/{}/developer-settings/{}".format(self.org.slug, internal_app.slug)
 
-        with self.feature("organizations:sentry-apps"):
-            self.load_page(url)
+        self.load_page(url)
 
-            self.browser.click('[data-test-id="token-add"]')
-            self.browser.wait_until(".ref-success")
+        self.browser.click('[data-test-id="token-add"]')
+        self.browser.wait_until(".ref-success")
 
-            assert (
-                len(self.browser.find_elements_by_css_selector('[data-test-id="token-delete"]'))
-                == 2
-            )
+        assert len(self.browser.find_elements_by_css_selector('[data-test-id="token-delete"]')) == 2
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
index a961a3c24b..81b1d58943 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
@@ -1,6 +1,6 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`Organization Developer Settings when not flagged in to sentry-apps displays contact us info 1`] = `
+exports[`Organization Developer Settings when no Apps exist displays empty state 1`] = `
 <WithOrganizationMockWrapper
   organization={
     Object {
@@ -16,9 +16,7 @@ exports[`Organization Developer Settings when not flagged in to sentry-apps disp
         "team:write",
         "team:admin",
       ],
-      "features": Array [
-        "sentry-apps",
-      ],
+      "features": Array [],
       "id": "3",
       "name": "Organization Name",
       "onboardingTasks": Array [],
@@ -53,9 +51,7 @@ exports[`Organization Developer Settings when not flagged in to sentry-apps disp
           "team:write",
           "team:admin",
         ],
-        "features": Array [
-          "sentry-apps",
-        ],
+        "features": Array [],
         "id": "3",
         "name": "Organization Name",
         "onboardingTasks": Array [],
@@ -127,6 +123,66 @@ exports[`Organization Developer Settings when not flagged in to sentry-apps disp
               </div>
             </Wrapper>
           </SettingsPageHeading>
+          <AlertLink
+            priority="warning"
+            to="https://docs.sentry.io/workflow/integrations/integration-platform/"
+          >
+            <StyledLink
+              priority="warning"
+              to="https://docs.sentry.io/workflow/integrations/integration-platform/"
+            >
+              <Link
+                className="css-1925ci1-StyledLink e1fthm6j0"
+                priority="warning"
+                to="https://docs.sentry.io/workflow/integrations/integration-platform/"
+              >
+                <Link
+                  className="css-1925ci1-StyledLink e1fthm6j0"
+                  onlyActiveOnIndex={false}
+                  priority="warning"
+                  style={Object {}}
+                  to="https://docs.sentry.io/workflow/integrations/integration-platform/"
+                >
+                  <a
+                    className="css-1925ci1-StyledLink e1fthm6j0"
+                    onClick={[Function]}
+                    priority="warning"
+                    style={Object {}}
+                  >
+                    <AlertLinkText>
+                      <div
+                        className="css-19z7wog-AlertLinkText e1fthm6j1"
+                      >
+                        Have questions about the Integration Platform? Learn more about it in our docs.
+                      </div>
+                    </AlertLinkText>
+                    <InlineSvg
+                      size="1em"
+                      src="icon-chevron-right"
+                    >
+                      <ForwardRef
+                        className="css-qmmkxg-InlineSvg enyz4ql0"
+                        size="1em"
+                        src="icon-chevron-right"
+                      >
+                        <svg
+                          className="css-qmmkxg-InlineSvg enyz4ql0"
+                          height="1em"
+                          viewBox={Object {}}
+                          width="1em"
+                        >
+                          <use
+                            href="#test"
+                            xlinkHref="#test"
+                          />
+                        </svg>
+                      </ForwardRef>
+                    </InlineSvg>
+                  </a>
+                </Link>
+              </Link>
+            </StyledLink>
+          </AlertLink>
           <Panel>
             <Component
               className="css-10qfvek-Panel e1laxa7d0"
@@ -134,6 +190,325 @@ exports[`Organization Developer Settings when not flagged in to sentry-apps disp
               <div
                 className="css-10qfvek-Panel e1laxa7d0"
               >
+                <PanelHeader
+                  hasButtons={true}
+                >
+                  <Component
+                    className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
+                    hasButtons={true}
+                  >
+                    <Flex
+                      align="center"
+                      className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
+                      justify="space-between"
+                    >
+                      <Base
+                        align="center"
+                        className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
+                        justify="space-between"
+                      >
+                        <div
+                          className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
+                          is={null}
+                        >
+                          Public Integrations
+                          <Button
+                            align="center"
+                            disabled={false}
+                            icon="icon-circle-add"
+                            priority="primary"
+                            size="small"
+                            to="/settings/org-slug/developer-settings/new-public/"
+                          >
+                            <StyledButton
+                              aria-disabled={false}
+                              aria-label="New Public Integration"
+                              disabled={false}
+                              onClick={[Function]}
+                              priority="primary"
+                              role="button"
+                              size="small"
+                              to="/settings/org-slug/developer-settings/new-public/"
+                            >
+                              <ForwardRef
+                                aria-disabled={false}
+                                aria-label="New Public Integration"
+                                className="css-1lua553-StyledButton-getColors edwq9my0"
+                                disabled={false}
+                                onClick={[Function]}
+                                priority="primary"
+                                role="button"
+                                size="small"
+                                to="/settings/org-slug/developer-settings/new-public/"
+                              >
+                                <Link
+                                  aria-disabled={false}
+                                  aria-label="New Public Integration"
+                                  className="css-1lua553-StyledButton-getColors edwq9my0"
+                                  onClick={[Function]}
+                                  onlyActiveOnIndex={false}
+                                  role="button"
+                                  size="small"
+                                  style={Object {}}
+                                  to="/settings/org-slug/developer-settings/new-public/"
+                                >
+                                  <a
+                                    aria-disabled={false}
+                                    aria-label="New Public Integration"
+                                    className="css-1lua553-StyledButton-getColors edwq9my0"
+                                    onClick={[Function]}
+                                    role="button"
+                                    size="small"
+                                    style={Object {}}
+                                  >
+                                    <ButtonLabel
+                                      align="center"
+                                      priority="primary"
+                                      size="small"
+                                    >
+                                      <Component
+                                        align="center"
+                                        className="css-1h693nz-ButtonLabel edwq9my1"
+                                        priority="primary"
+                                        size="small"
+                                      >
+                                        <span
+                                          className="css-1h693nz-ButtonLabel edwq9my1"
+                                        >
+                                          <Icon
+                                            hasChildren={true}
+                                            size="small"
+                                          >
+                                            <Component
+                                              className="css-1vdnsie-Icon edwq9my2"
+                                              hasChildren={true}
+                                              size="small"
+                                            >
+                                              <span
+                                                className="css-1vdnsie-Icon edwq9my2"
+                                                size="small"
+                                              >
+                                                <StyledInlineSvg
+                                                  size="12px"
+                                                  src="icon-circle-add"
+                                                >
+                                                  <ForwardRef
+                                                    className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                    size="12px"
+                                                    src="icon-circle-add"
+                                                  >
+                                                    <svg
+                                                      className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                      height="12px"
+                                                      viewBox={Object {}}
+                                                      width="12px"
+                                                    >
+                                                      <use
+                                                        href="#test"
+                                                        xlinkHref="#test"
+                                                      />
+                                                    </svg>
+                                                  </ForwardRef>
+                                                </StyledInlineSvg>
+                                              </span>
+                                            </Component>
+                                          </Icon>
+                                          New Public Integration
+                                        </span>
+                                      </Component>
+                                    </ButtonLabel>
+                                  </a>
+                                </Link>
+                              </ForwardRef>
+                            </StyledButton>
+                          </Button>
+                        </div>
+                      </Base>
+                    </Flex>
+                  </Component>
+                </PanelHeader>
+                <PanelBody
+                  direction="column"
+                  disablePadding={true}
+                  flex={false}
+                >
+                  <div
+                    className="css-a4ya23-textStyles"
+                  >
+                    <EmptyMessage>
+                      <Wrapper
+                        data-test-id="empty-message"
+                      >
+                        <div
+                          className="css-ev9qm0-Wrapper eh488yo0"
+                          data-test-id="empty-message"
+                        >
+                          <Description
+                            noMargin={true}
+                          >
+                            <Component
+                              className="css-pwn5v-TextBlock-Description-MarginStyles eh488yo1"
+                              noMargin={true}
+                            >
+                              <div
+                                className="css-pwn5v-TextBlock-Description-MarginStyles eh488yo1"
+                              >
+                                No public integrations have been created yet.
+                              </div>
+                            </Component>
+                          </Description>
+                        </div>
+                      </Wrapper>
+                    </EmptyMessage>
+                  </div>
+                </PanelBody>
+              </div>
+            </Component>
+          </Panel>
+          <Panel>
+            <Component
+              className="css-10qfvek-Panel e1laxa7d0"
+            >
+              <div
+                className="css-10qfvek-Panel e1laxa7d0"
+              >
+                <PanelHeader
+                  hasButtons={true}
+                >
+                  <Component
+                    className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
+                    hasButtons={true}
+                  >
+                    <Flex
+                      align="center"
+                      className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
+                      justify="space-between"
+                    >
+                      <Base
+                        align="center"
+                        className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
+                        justify="space-between"
+                      >
+                        <div
+                          className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
+                          is={null}
+                        >
+                          Internal Integrations
+                          <Button
+                            align="center"
+                            disabled={false}
+                            icon="icon-circle-add"
+                            priority="primary"
+                            size="small"
+                            to="/settings/org-slug/developer-settings/new-internal/"
+                          >
+                            <StyledButton
+                              aria-disabled={false}
+                              aria-label="New Internal Integration"
+                              disabled={false}
+                              onClick={[Function]}
+                              priority="primary"
+                              role="button"
+                              size="small"
+                              to="/settings/org-slug/developer-settings/new-internal/"
+                            >
+                              <ForwardRef
+                                aria-disabled={false}
+                                aria-label="New Internal Integration"
+                                className="css-1lua553-StyledButton-getColors edwq9my0"
+                                disabled={false}
+                                onClick={[Function]}
+                                priority="primary"
+                                role="button"
+                                size="small"
+                                to="/settings/org-slug/developer-settings/new-internal/"
+                              >
+                                <Link
+                                  aria-disabled={false}
+                                  aria-label="New Internal Integration"
+                                  className="css-1lua553-StyledButton-getColors edwq9my0"
+                                  onClick={[Function]}
+                                  onlyActiveOnIndex={false}
+                                  role="button"
+                                  size="small"
+                                  style={Object {}}
+                                  to="/settings/org-slug/developer-settings/new-internal/"
+                                >
+                                  <a
+                                    aria-disabled={false}
+                                    aria-label="New Internal Integration"
+                                    className="css-1lua553-StyledButton-getColors edwq9my0"
+                                    onClick={[Function]}
+                                    role="button"
+                                    size="small"
+                                    style={Object {}}
+                                  >
+                                    <ButtonLabel
+                                      align="center"
+                                      priority="primary"
+                                      size="small"
+                                    >
+                                      <Component
+                                        align="center"
+                                        className="css-1h693nz-ButtonLabel edwq9my1"
+                                        priority="primary"
+                                        size="small"
+                                      >
+                                        <span
+                                          className="css-1h693nz-ButtonLabel edwq9my1"
+                                        >
+                                          <Icon
+                                            hasChildren={true}
+                                            size="small"
+                                          >
+                                            <Component
+                                              className="css-1vdnsie-Icon edwq9my2"
+                                              hasChildren={true}
+                                              size="small"
+                                            >
+                                              <span
+                                                className="css-1vdnsie-Icon edwq9my2"
+                                                size="small"
+                                              >
+                                                <StyledInlineSvg
+                                                  size="12px"
+                                                  src="icon-circle-add"
+                                                >
+                                                  <ForwardRef
+                                                    className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                    size="12px"
+                                                    src="icon-circle-add"
+                                                  >
+                                                    <svg
+                                                      className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                      height="12px"
+                                                      viewBox={Object {}}
+                                                      width="12px"
+                                                    >
+                                                      <use
+                                                        href="#test"
+                                                        xlinkHref="#test"
+                                                      />
+                                                    </svg>
+                                                  </ForwardRef>
+                                                </StyledInlineSvg>
+                                              </span>
+                                            </Component>
+                                          </Icon>
+                                          New Internal Integration
+                                        </span>
+                                      </Component>
+                                    </ButtonLabel>
+                                  </a>
+                                </Link>
+                              </ForwardRef>
+                            </StyledButton>
+                          </Button>
+                        </div>
+                      </Base>
+                    </Flex>
+                  </Component>
+                </PanelHeader>
                 <PanelBody
                   direction="column"
                   disablePadding={true}
@@ -160,7 +535,7 @@ exports[`Organization Developer Settings when not flagged in to sentry-apps disp
                               <div
                                 className="css-pwn5v-TextBlock-Description-MarginStyles eh488yo1"
                               >
-                                Want to build on top of the Sentry Integration Platform? We're working closely with early adopters. Please reach out to us by contacting partners@sentry.io
+                                No internal integrations have been created yet.
                               </div>
                             </Component>
                           </Description>
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
index d250319a23..ee0e10531d 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
@@ -15,38 +15,19 @@ describe('Organization Developer Settings', function() {
     Client.clearMockResponses();
   });
 
-  describe('when not flagged in to sentry-apps', () => {
-    Client.addMockResponse({
-      url: `/organizations/${org.slug}/sentry-apps/`,
-      body: [],
-    });
-
-    const wrapper = mount(
-      <OrganizationDeveloperSettings params={{orgId: org.slug}} organization={org} />,
-      routerContext
-    );
-
-    it('displays contact us info', () => {
-      expect(wrapper).toMatchSnapshot();
-      expect(wrapper.find('[icon="icon-circle-add"]').exists()).toBe(false);
-      expect(wrapper.exists('EmptyMessage')).toBe(true);
-    });
-  });
-
   describe('when no Apps exist', () => {
     Client.addMockResponse({
       url: `/organizations/${org.slug}/sentry-apps/`,
       body: [],
     });
 
-    org.features = ['sentry-apps'];
-
     const wrapper = mount(
       <OrganizationDeveloperSettings params={{orgId: org.slug}} organization={org} />,
       routerContext
     );
 
     it('displays empty state', () => {
+      expect(wrapper).toMatchSnapshot();
       expect(wrapper.exists('EmptyMessage')).toBe(true);
       expect(wrapper.text()).toMatch('No internal integrations have been created yet');
       expect(wrapper.text()).toMatch('No public integrations have been created yet');
@@ -62,7 +43,6 @@ describe('Organization Developer Settings', function() {
         body: [sentryApp],
       });
 
-      org.features = ['sentry-apps'];
       wrapper = mount(
         <OrganizationDeveloperSettings params={{orgId: org.slug}} organization={org} />,
         routerContext
@@ -120,8 +100,6 @@ describe('Organization Developer Settings', function() {
       body: [publishedSentryApp],
     });
 
-    org.features = ['sentry-apps'];
-
     const wrapper = mount(
       <OrganizationDeveloperSettings params={{orgId: org.slug}} organization={org} />,
       routerContext
@@ -173,8 +151,6 @@ describe('Organization Developer Settings', function() {
       body: [sentryApp],
     });
 
-    newOrg.features = ['sentry-apps'];
-
     const wrapper = mount(
       <OrganizationDeveloperSettings
         params={{orgId: newOrg.slug}}
diff --git a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
index 09816e6ebb..5a968048cf 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
@@ -108,8 +108,6 @@ describe('OrganizationIntegrations', () => {
     let sentryAppInstall;
 
     beforeEach(() => {
-      org = {...org, features: ['sentry-apps']};
-
       installedSentryApp = TestStubs.SentryApp({
         name: 'An Integration',
         slug: 'an-integration',
diff --git a/tests/sentry/api/endpoints/test_group_external_issue_details.py b/tests/sentry/api/endpoints/test_group_external_issue_details.py
index 614d2a253e..95fc31322c 100644
--- a/tests/sentry/api/endpoints/test_group_external_issue_details.py
+++ b/tests/sentry/api/endpoints/test_group_external_issue_details.py
@@ -2,7 +2,6 @@ from __future__ import absolute_import, print_function
 
 from sentry.models import PlatformExternalIssue
 from sentry.testutils import APITestCase
-from sentry.testutils.helpers import with_feature
 
 
 class GroupExternalIssueDetailsEndpointTest(APITestCase):
@@ -21,14 +20,12 @@ class GroupExternalIssueDetailsEndpointTest(APITestCase):
             self.group.id, self.external_issue.id
         )
 
-    @with_feature("organizations:sentry-apps")
     def test_deletes_external_issue(self):
         response = self.client.delete(self.url, format="json")
 
         assert response.status_code == 204, response.content
         assert not PlatformExternalIssue.objects.filter(id=self.external_issue.id).exists()
 
-    @with_feature("organizations:sentry-apps")
     def test_handles_non_existing_external_issue(self):
         url = u"/api/0/issues/{}/external-issues/{}/".format(self.group.id, 99999)
 
@@ -36,7 +33,6 @@ class GroupExternalIssueDetailsEndpointTest(APITestCase):
 
         assert response.status_code == 404, response.content
 
-    @with_feature("organizations:sentry-apps")
     def test_forbids_deleting_an_inaccessible_issue(self):
         group = self.create_group(
             project=self.create_project(
diff --git a/tests/sentry/api/endpoints/test_group_external_issues.py b/tests/sentry/api/endpoints/test_group_external_issues.py
index 69fac57cb4..0ed594b2d4 100644
--- a/tests/sentry/api/endpoints/test_group_external_issues.py
+++ b/tests/sentry/api/endpoints/test_group_external_issues.py
@@ -4,11 +4,9 @@ import six
 
 from sentry.models import PlatformExternalIssue
 from sentry.testutils import APITestCase
-from sentry.testutils.helpers import with_feature
 
 
 class GroupExternalIssuesEndpointTest(APITestCase):
-    @with_feature("organizations:sentry-apps")
     def test_simple(self):
         self.login_as(user=self.user)
 
diff --git a/tests/sentry/api/endpoints/test_sentry_app_details.py b/tests/sentry/api/endpoints/test_sentry_app_details.py
index 6f8933c17d..28db5a4e3f 100644
--- a/tests/sentry/api/endpoints/test_sentry_app_details.py
+++ b/tests/sentry/api/endpoints/test_sentry_app_details.py
@@ -35,7 +35,6 @@ class SentryAppDetailsTest(APITestCase):
 
 
 class GetSentryAppDetailsTest(SentryAppDetailsTest):
-    @with_feature("organizations:sentry-apps")
     def test_superuser_sees_all_apps(self):
         self.login_as(user=self.superuser, superuser=True)
         response = self.client.get(self.url, format="json")
@@ -50,7 +49,6 @@ class GetSentryAppDetailsTest(SentryAppDetailsTest):
         assert response.status_code == 200
         assert response.data["uuid"] == self.unpublished_app.uuid
 
-    @with_feature("organizations:sentry-apps")
     def test_users_see_published_app(self):
         self.login_as(user=self.user)
 
@@ -58,7 +56,6 @@ class GetSentryAppDetailsTest(SentryAppDetailsTest):
         assert response.status_code == 200
         assert response.data["uuid"] == self.published_app.uuid
 
-    @with_feature("organizations:sentry-apps")
     def test_users_see_unpublished_apps_owned_by_their_org(self):
         self.login_as(self.user)
 
@@ -67,7 +64,6 @@ class GetSentryAppDetailsTest(SentryAppDetailsTest):
         response = self.client.get(url, format="json")
         assert response.status_code == 200
 
-    @with_feature("organizations:sentry-apps")
     def test_retrieving_internal_integrations_as_org_member(self):
         self.login_as(self.user)
 
@@ -76,7 +72,6 @@ class GetSentryAppDetailsTest(SentryAppDetailsTest):
         response = self.client.get(url, format="json")
         assert response.status_code == 200
 
-    @with_feature("organizations:sentry-apps")
     def test_internal_integrations_are_not_public(self):
         # User not in Org who owns the Integration
         self.login_as(self.create_user())
@@ -86,7 +81,6 @@ class GetSentryAppDetailsTest(SentryAppDetailsTest):
         response = self.client.get(url, format="json")
         assert response.status_code == 404
 
-    @with_feature("organizations:sentry-apps")
     def test_users_do_not_see_unowned_unpublished_apps(self):
         self.login_as(self.user)
 
@@ -95,15 +89,8 @@ class GetSentryAppDetailsTest(SentryAppDetailsTest):
         response = self.client.get(url, format="json")
         assert response.status_code == 404
 
-    def test_no_access_without_internal_catchall(self):
-        self.login_as(user=self.user)
-
-        response = self.client.get(self.url, format="json")
-        assert response.status_code == 404
-
 
 class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
-    @with_feature("organizations:sentry-apps")
     def test_update_published_app(self):
         self.login_as(user=self.superuser, superuser=True)
         response = self.client.put(
@@ -136,7 +123,6 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
             "owner": {"id": self.org.id, "slug": self.org.slug},
         }
 
-    @with_feature("organizations:sentry-apps")
     def test_update_unpublished_app(self):
         self.login_as(user=self.user)
         url = reverse("sentry-api-0-sentry-app-details", args=[self.unpublished_app.slug])
@@ -159,7 +145,6 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         assert response.data["uuid"] == self.unpublished_app.uuid
         assert response.data["webhookUrl"] == "https://newurl.com"
 
-    @with_feature("organizations:sentry-apps")
     def test_cannot_update_name_with_non_unique_slug(self):
         from sentry.mediators import sentry_apps
 
@@ -172,7 +157,6 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         assert response.status_code == 400
         assert response.data == {"name": ["Name Foo Bar is already taken, please use another."]}
 
-    @with_feature("organizations:sentry-apps")
     def test_cannot_update_events_without_permissions(self):
         self.login_as(user=self.user)
         url = reverse("sentry-api-0-sentry-app-details", args=[self.unpublished_app.slug])
@@ -191,7 +175,6 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         assert response.status_code == 400
         assert response.data == {"events": ["issue webhooks require the event:read permission."]}
 
-    @with_feature("organizations:sentry-apps")
     def test_cannot_update_scopes_published_app(self):
         self.login_as(user=self.user)
 
@@ -206,7 +189,6 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         )
         assert response.status_code == 500
 
-    @with_feature("organizations:sentry-apps")
     def test_cannot_update_non_owned_apps(self):
         self.login_as(user=self.user)
         app = self.create_sentry_app(name="SampleApp", organization=self.super_org)
@@ -216,7 +198,6 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         )
         assert response.status_code == 404
 
-    @with_feature("organizations:sentry-apps")
     def test_superusers_can_publish_apps(self):
         self.login_as(user=self.superuser, superuser=True)
         app = self.create_sentry_app(name="SampleApp", organization=self.org)
@@ -225,7 +206,6 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         assert response.status_code == 200
         assert SentryApp.objects.get(id=app.id).status == SentryAppStatus.PUBLISHED
 
-    @with_feature("organizations:sentry-apps")
     def test_nonsuperusers_cannot_publish_apps(self):
         self.login_as(user=self.user)
         app = self.create_sentry_app(name="SampleApp", organization=self.org)
@@ -234,7 +214,6 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         assert response.status_code == 200
         assert SentryApp.objects.get(id=app.id).status == SentryAppStatus.UNPUBLISHED
 
-    @with_feature("organizations:sentry-apps")
     def test_cannot_add_error_created_hook_without_flag(self):
         self.login_as(user=self.user)
         app = self.create_sentry_app(name="SampleApp", organization=self.org)
@@ -242,7 +221,7 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         response = self.client.put(url, data={"events": ("error",)}, format="json")
         assert response.status_code == 403
 
-    @with_feature(["organizations:sentry-apps", "organizations:integrations-event-hooks"])
+    @with_feature("organizations:integrations-event-hooks")
     def test_can_add_error_created_hook_with_flag(self):
         self.login_as(user=self.user)
         app = self.create_sentry_app(name="SampleApp", organization=self.org)
@@ -253,7 +232,6 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         assert response.status_code == 200
 
     @patch("sentry.analytics.record")
-    @with_feature("organizations:sentry-apps")
     def test_bad_schema(self, record):
         self.login_as(user=self.user)
         app = self.create_sentry_app(name="SampleApp", organization=self.org)
@@ -274,14 +252,12 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
 
 
 class DeleteSentryAppDetailsTest(SentryAppDetailsTest):
-    @with_feature("organizations:sentry-apps")
     def test_delete_unpublished_app(self):
         self.login_as(user=self.superuser, superuser=True)
         url = reverse("sentry-api-0-sentry-app-details", args=[self.unpublished_app.slug])
         response = self.client.delete(url)
         assert response.status_code == 204
 
-    @with_feature("organizations:sentry-apps")
     def test_cannot_delete_published_app(self):
         self.login_as(user=self.superuser, superuser=True)
         url = reverse("sentry-api-0-sentry-app-details", args=[self.published_app.slug])
diff --git a/tests/sentry/api/endpoints/test_sentry_app_publish_request.py b/tests/sentry/api/endpoints/test_sentry_app_publish_request.py
index 6e65348f6a..e1fff20556 100644
--- a/tests/sentry/api/endpoints/test_sentry_app_publish_request.py
+++ b/tests/sentry/api/endpoints/test_sentry_app_publish_request.py
@@ -4,7 +4,6 @@ from django.core.urlresolvers import reverse
 
 import mock
 from sentry.testutils import APITestCase
-from sentry.testutils.helpers import with_feature
 from sentry.constants import SentryAppStatus
 
 
@@ -19,8 +18,7 @@ class SentryAppPublishRequestTest(APITestCase):
 
         self.url = reverse("sentry-api-0-sentry-app-publish-request", args=[self.sentry_app.slug])
 
-    @with_feature("organizations:sentry-apps")
-    @mock.patch("sentry.utils.email.send_mail")
+    @mock.patch('sentry.utils.email.send_mail')
     def test_publish_request(self, send_mail):
         self.login_as(user=self.user)
         response = self.client.post(self.url, format="json")
@@ -33,8 +31,7 @@ class SentryAppPublishRequestTest(APITestCase):
             fail_silently=False,
         )
 
-    @with_feature("organizations:sentry-apps")
-    @mock.patch("sentry.utils.email.send_mail")
+    @mock.patch('sentry.utils.email.send_mail')
     def test_publish_already_published(self, send_mail):
         self.sentry_app.update(status=SentryAppStatus.PUBLISHED)
         self.login_as(user=self.user)
@@ -43,8 +40,7 @@ class SentryAppPublishRequestTest(APITestCase):
         assert response.data["detail"] == "Cannot publish already published integration"
         send_mail.asssert_not_called()
 
-    @with_feature("organizations:sentry-apps")
-    @mock.patch("sentry.utils.email.send_mail")
+    @mock.patch('sentry.utils.email.send_mail')
     def test_publish_internal(self, send_mail):
         self.sentry_app.update(status=SentryAppStatus.INTERNAL)
         self.login_as(user=self.user)
diff --git a/tests/sentry/api/endpoints/test_sentry_apps.py b/tests/sentry/api/endpoints/test_sentry_apps.py
index e0e99c913c..c814138957 100644
--- a/tests/sentry/api/endpoints/test_sentry_apps.py
+++ b/tests/sentry/api/endpoints/test_sentry_apps.py
@@ -253,7 +253,6 @@ class GetSentryAppsTest(SentryAppsTest):
 
 
 class PostSentryAppsTest(SentryAppsTest):
-    @with_feature("organizations:sentry-apps")
     def test_creates_sentry_app(self):
         self.login_as(user=self.user)
 
@@ -268,7 +267,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.status_code == 201, response.content
         assert six.viewitems(expected) <= six.viewitems(json.loads(response.content))
 
-    @with_feature("organizations:sentry-apps")
     def test_non_unique_app_slug(self):
         from sentry.mediators import sentry_apps
 
@@ -279,7 +277,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.status_code == 400
         assert response.data == {"name": ["Name Foo Bar is already taken, please use another."]}
 
-    @with_feature("organizations:sentry-apps")
     def test_invalid_with_missing_webhool_url_scheme(self):
         self.login_as(user=self.user)
         kwargs = {"webhookUrl": "example.com"}
@@ -288,7 +285,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.status_code == 400
         assert response.data == {"webhookUrl": ["URL must start with http[s]://"]}
 
-    @with_feature("organizations:sentry-apps")
     def test_cannot_create_app_without_correct_permissions(self):
         self.login_as(user=self.user)
         kwargs = {"scopes": ("project:read",)}
@@ -298,7 +294,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.data == {"events": ["issue webhooks require the event:read permission."]}
 
     @patch("sentry.analytics.record")
-    @with_feature("organizations:sentry-apps")
     def test_wrong_schema_format(self, record):
         self.login_as(user=self.user)
         kwargs = {
@@ -335,7 +330,7 @@ class PostSentryAppsTest(SentryAppsTest):
             schema='{"elements":[{"required_fields":[{"label":"Channel","type":"select","options":[["#general"]],"name":"channel"}],"type":"alert-rule-action"}]}',
         )
 
-    @with_feature(["organizations:sentry-apps", "organizations:integrations-event-hooks"])
+    @with_feature("organizations:integrations-event-hooks")
     def test_can_create_with_error_created_hook_with_flag(self):
         self.login_as(user=self.user)
 
@@ -351,7 +346,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.status_code == 201, response.content
         assert six.viewitems(expected) <= six.viewitems(json.loads(response.content))
 
-    @with_feature("organizations:sentry-apps")
     def test_cannot_create_with_error_created_hook_without_flag(self):
         self.login_as(user=self.user)
 
@@ -364,14 +358,12 @@ class PostSentryAppsTest(SentryAppsTest):
             == '{"non_field_errors":["Your organization does not have access to the \'error\' resource subscription."]}'
         )
 
-    @with_feature("organizations:sentry-apps")
     def test_allows_empty_schema(self):
         self.login_as(self.user)
         response = self._post(schema={})
 
         assert response.status_code == 201, response.content
 
-    @with_feature("organizations:sentry-apps")
     def test_missing_name(self):
         self.login_as(self.user)
         response = self._post(name=None)
@@ -379,7 +371,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.status_code == 400, response.content
         assert "name" in response.data
 
-    @with_feature("organizations:sentry-apps")
     def test_invalid_events(self):
         self.login_as(self.user)
         response = self._post(events=["project"])
@@ -387,7 +378,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.status_code == 400, response.content
         assert "events" in response.data
 
-    @with_feature("organizations:sentry-apps")
     def test_invalid_scope(self):
         self.login_as(self.user)
         response = self._post(scopes=("not:ascope",))
@@ -395,7 +385,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.status_code == 400, response.content
         assert "scopes" in response.data
 
-    @with_feature("organizations:sentry-apps")
     def test_missing_webhook_url(self):
         self.login_as(self.user)
         response = self._post(webhookUrl=None)
@@ -403,7 +392,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.status_code == 400, response.content
         assert "webhookUrl" in response.data
 
-    @with_feature("organizations:sentry-apps")
     def test_allows_empty_permissions(self):
         self.login_as(self.user)
         response = self._post(scopes=None)
@@ -411,7 +399,6 @@ class PostSentryAppsTest(SentryAppsTest):
         assert response.status_code == 201, response.content
         assert response.data["scopes"] == []
 
-    @with_feature("organizations:sentry-apps")
     def test_creates_internal_integration(self):
         self.create_project(organization=self.org)
         self.login_as(self.user)
diff --git a/tests/sentry/api/endpoints/test_sentry_apps_stats.py b/tests/sentry/api/endpoints/test_sentry_apps_stats.py
index e5dfe7ef7d..025aabad89 100644
--- a/tests/sentry/api/endpoints/test_sentry_apps_stats.py
+++ b/tests/sentry/api/endpoints/test_sentry_apps_stats.py
@@ -4,7 +4,6 @@ from django.core.urlresolvers import reverse
 
 from sentry.utils import json
 from sentry.testutils import APITestCase
-from sentry.testutils.helpers import with_feature
 
 
 class SentryAppsStatsTest(APITestCase):
@@ -45,7 +44,6 @@ class SentryAppsStatsTest(APITestCase):
             "installs": 1,
         } in json.loads(response.content)
 
-    @with_feature("organizations:sentry-apps")
     def test_nonsuperusers_have_no_access(self):
         self.login_as(user=self.user)
 
diff --git a/tests/sentry/api/endpoints/test_sentry_internal_app_token_details.py b/tests/sentry/api/endpoints/test_sentry_internal_app_token_details.py
index 7d1a5563b2..b717c15a9a 100644
--- a/tests/sentry/api/endpoints/test_sentry_internal_app_token_details.py
+++ b/tests/sentry/api/endpoints/test_sentry_internal_app_token_details.py
@@ -3,7 +3,6 @@ from __future__ import absolute_import
 from django.core.urlresolvers import reverse
 
 from sentry.testutils import APITestCase
-from sentry.testutils.helpers import with_feature
 from sentry.models import ApiToken
 from sentry.mediators.token_exchange import GrantExchanger
 
@@ -25,14 +24,12 @@ class SentryInternalAppTokenCreationTest(APITestCase):
             args=[self.internal_sentry_app.slug, self.api_token.token],
         )
 
-    @with_feature("organizations:sentry-apps")
     def test_delete_token(self):
         self.login_as(user=self.user)
         response = self.client.delete(self.url, format="json")
         assert response.status_code == 204
         assert not ApiToken.objects.filter(pk=self.api_token.id).exists()
 
-    @with_feature("organizations:sentry-apps")
     def test_delete_invalid_token(self):
         self.login_as(user=self.user)
 
@@ -44,7 +41,6 @@ class SentryInternalAppTokenCreationTest(APITestCase):
         response = self.client.delete(url, format="json")
         assert response.status_code == 404
 
-    @with_feature("organizations:sentry-apps")
     def test_delete_token_another_app(self):
 
         another_app = self.create_internal_integration(name="Another app", organization=self.org)
@@ -59,7 +55,6 @@ class SentryInternalAppTokenCreationTest(APITestCase):
         response = self.client.delete(url, format="json")
         assert response.status_code == 404
 
-    @with_feature("organizations:sentry-apps")
     def test_non_internal_app(self):
         sentry_app = self.create_sentry_app(name="My External App", organization=self.org)
 
@@ -85,7 +80,6 @@ class SentryInternalAppTokenCreationTest(APITestCase):
         assert response.status_code == 403
         assert response.data == "This route is limited to internal integrations only"
 
-    @with_feature("organizations:sentry-apps")
     def test_sentry_app_not_found(self):
 
         url = reverse(
diff --git a/tests/sentry/api/endpoints/test_sentry_internal_app_tokens.py b/tests/sentry/api/endpoints/test_sentry_internal_app_tokens.py
index 0679108c1f..6877af4874 100644
--- a/tests/sentry/api/endpoints/test_sentry_internal_app_tokens.py
+++ b/tests/sentry/api/endpoints/test_sentry_internal_app_tokens.py
@@ -5,7 +5,6 @@ import six
 from django.core.urlresolvers import reverse
 
 from sentry.testutils import APITestCase
-from sentry.testutils.helpers import with_feature
 from sentry.utils import json
 from sentry.models import ApiToken
 
@@ -26,7 +25,6 @@ class SentryInternalAppTokenTest(APITestCase):
 
 
 class PostSentryInternalAppTokenTest(SentryInternalAppTokenTest):
-    @with_feature("organizations:sentry-apps")
     def test_create_token(self):
         self.login_as(user=self.user)
         response = self.client.post(self.url, format="json")
@@ -34,7 +32,6 @@ class PostSentryInternalAppTokenTest(SentryInternalAppTokenTest):
 
         assert ApiToken.objects.get(token=response.data["token"])
 
-    @with_feature("organizations:sentry-apps")
     def test_non_internal_app(self):
         sentry_app = self.create_sentry_app(name="My External App", organization=self.org)
 
@@ -46,7 +43,6 @@ class PostSentryInternalAppTokenTest(SentryInternalAppTokenTest):
         assert response.status_code == 403
         assert response.data == "This route is limited to internal integrations only"
 
-    @with_feature("organizations:sentry-apps")
     def test_sentry_app_not_found(self):
 
         url = reverse("sentry-api-0-sentry-internal-app-tokens", args=["not_a_slug"])
@@ -56,7 +52,6 @@ class PostSentryInternalAppTokenTest(SentryInternalAppTokenTest):
 
         assert response.status_code == 404
 
-    @with_feature("organizations:sentry-apps")
     def test_token_limit(self):
         self.login_as(user=self.user)
 
@@ -71,7 +66,6 @@ class PostSentryInternalAppTokenTest(SentryInternalAppTokenTest):
 
 
 class GetSentryInternalAppTokenTest(SentryInternalAppTokenTest):
-    @with_feature("organizations:sentry-apps")
     def test_get_tokens(self):
         self.login_as(self.user)
 
