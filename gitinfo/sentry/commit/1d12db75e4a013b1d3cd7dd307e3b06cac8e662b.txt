commit 1d12db75e4a013b1d3cd7dd307e3b06cac8e662b
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Sat May 17 18:39:03 2014 -0700

    Email preview should probably go through the css inliner too

diff --git a/src/sentry/templates/sentry/debug/mail/preview.html b/src/sentry/templates/sentry/debug/mail/preview.html
index 52328fa3d3..4619b13b38 100644
--- a/src/sentry/templates/sentry/debug/mail/preview.html
+++ b/src/sentry/templates/sentry/debug/mail/preview.html
@@ -1,8 +1 @@
-<html>
-<head>
-	<title>Mail Preview</title>
-</head>
-<body>
-	{{ preview.html_body }}
-</body>
-</html>
+{{ preview.html_body|safe }}
diff --git a/src/sentry/utils/email.py b/src/sentry/utils/email.py
index 850db66c39..144e88fd3e 100644
--- a/src/sentry/utils/email.py
+++ b/src/sentry/utils/email.py
@@ -84,7 +84,7 @@ class MessageBuilder(object):
             html_body = self._html_body
 
         if html_body is not None:
-            return toronado.from_string(html_body)
+            return inline_css(html_body)
 
     @cached_property
     def txt_body(self):
@@ -187,3 +187,7 @@ class MessageBuilder(object):
     def send_all(self, messages, fail_silently=False):
         connection = get_connection(fail_silently=fail_silently)
         return connection.send_messages(messages)
+
+
+def inline_css(html):
+    return toronado.from_string(html)
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index 7c8cbaf79f..848b302a0a 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -4,6 +4,7 @@ from django.utils.safestring import mark_safe
 
 from sentry.models import Activity, Event, Group, Project, Team
 from sentry.utils.samples import load_data
+from sentry.utils.email import inline_css
 from sentry.web.decorators import login_required
 from sentry.web.helpers import render_to_response, render_to_string
 
@@ -19,7 +20,7 @@ class MailPreview(object):
         return render_to_string(self.text_template, self.context)
 
     def html_body(self):
-        return render_to_string(self.html_template, self.context)
+        return inline_css(render_to_string(self.html_template, self.context))
 
 
 @login_required
@@ -48,7 +49,6 @@ def new_event(request):
         group=group,
         message=group.message,
         data=load_data('python'),
-        level=logging.ERROR,
     )
 
     interface_list = []
