commit c2e320832af15f02012f9497216e3226070b076e
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Mar 25 14:53:41 2015 -0700

    Gracefully handle duplicate release creation

diff --git a/src/sentry/api/endpoints/project_releases.py b/src/sentry/api/endpoints/project_releases.py
index a779f84a30..440a75b895 100644
--- a/src/sentry/api/endpoints/project_releases.py
+++ b/src/sentry/api/endpoints/project_releases.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from django.db import IntegrityError, transaction
 from rest_framework import serializers
 from rest_framework.response import Response
 
@@ -53,10 +54,16 @@ class ProjectReleasesEndpoint(ProjectEndpoint):
         if serializer.is_valid():
             result = serializer.object
 
-            release = Release.objects.create(
-                version=result['version'],
-                project=project,
-            )
+            with transaction.atomic():
+                try:
+                    release = Release.objects.create(
+                        version=result['version'],
+                        project=project,
+                    )
+                except IntegrityError:
+                    return Response({
+                        'detail': 'Release with version already exists'
+                    }, status=400)
 
             return Response(serialize(release, request.user), status=201)
         return Response(serializer.errors, status=400)
diff --git a/tests/sentry/api/endpoints/test_project_releases.py b/tests/sentry/api/endpoints/test_project_releases.py
index 0cb27159d9..53f2d44640 100644
--- a/tests/sentry/api/endpoints/test_project_releases.py
+++ b/tests/sentry/api/endpoints/test_project_releases.py
@@ -64,3 +64,22 @@ class ProjectReleaseCreateTest(APITestCase):
             project=project,
             version=response.data['version'],
         ).exists()
+
+    def test_duplicate(self):
+        self.login_as(user=self.user)
+
+        team = self.create_team(owner=self.user)
+        project = self.create_project(team=team, name='foo')
+
+        Release.objects.create(version='1.2.1', project=project)
+
+        url = reverse('sentry-api-0-project-releases', kwargs={
+            'organization_slug': project.organization.slug,
+            'project_slug': project.slug,
+        })
+
+        response = self.client.post(url, data={
+            'version': '1.2.1',
+        })
+
+        assert response.status_code == 400, response.content
