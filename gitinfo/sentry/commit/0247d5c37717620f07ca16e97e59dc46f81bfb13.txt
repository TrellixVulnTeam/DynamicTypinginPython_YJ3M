commit 0247d5c37717620f07ca16e97e59dc46f81bfb13
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 20 13:21:11 2015 -0700

    More descriptive test names

diff --git a/tests/sentry/api/bases/test_team.py b/tests/sentry/api/bases/test_team.py
index d80bcf014b..10fb620a16 100644
--- a/tests/sentry/api/bases/test_team.py
+++ b/tests/sentry/api/bases/test_team.py
@@ -9,11 +9,11 @@ from sentry.testutils import TestCase
 
 class TeamPermissionBase(TestCase):
     def setUp(self):
-        self.org = self.create_organization()
+        self.org = self.create_organization(flags=0)
         self.team = self.create_team(organization=self.org)
         super(TeamPermissionBase, self).setUp()
 
-    def has_object_perm(self, auth, user, obj, method='GET'):
+    def has_perm(self, method, obj, auth=None, user=None):
         perm = TeamPermission()
         request = Mock()
         request.auth = auth
@@ -23,15 +23,15 @@ class TeamPermissionBase(TestCase):
 
 
 class TeamPermissionTest(TeamPermissionBase):
-    def test_regular_user(self):
+    def test_get_regular_user(self):
         user = self.create_user()
-        assert not self.has_object_perm(None, user, self.team)
+        assert not self.has_perm('GET', self.team, user=user)
 
-    def test_superuser(self):
+    def test_get_superuser(self):
         user = self.create_user(is_superuser=True)
-        assert self.has_object_perm(None, user, self.team)
+        assert self.has_perm('GET', self.team, user=user)
 
-    def test_member_without_team_access(self):
+    def test_get_without_team_membership(self):
         user = self.create_user()
         self.create_member(
             user=user,
@@ -39,9 +39,9 @@ class TeamPermissionTest(TeamPermissionBase):
             role='member',
             teams=[],
         )
-        assert not self.has_object_perm(None, user, self.team)
+        assert not self.has_perm('GET', self.team, user=user)
 
-    def test_member_with_team_access(self):
+    def test_get_with_team_membership(self):
         user = self.create_user()
         self.create_member(
             user=user,
@@ -49,22 +49,22 @@ class TeamPermissionTest(TeamPermissionBase):
             role='member',
             teams=[self.team],
         )
-        assert self.has_object_perm(None, user, self.team)
+        assert self.has_perm('GET', self.team, user=user)
 
-    def test_project_key(self):
+    def test_get_project_key(self):
         key = ProjectKey.objects.create(
             project=self.create_project(team=self.team),
         )
-        assert not self.has_object_perm(key, None, self.team)
+        assert not self.has_perm('GET', self.team, auth=key)
 
-    def test_api_key_with_org_access(self):
+    def test_get_api_key_with_org_access(self):
         key = ApiKey.objects.create(
             organization=self.org,
         )
-        assert self.has_object_perm(key, None, self.team)
+        assert self.has_perm('GET', self.team, auth=key)
 
-    def test_api_key_without_org_access(self):
+    def test_get_api_key_without_org_access(self):
         key = ApiKey.objects.create(
             organization=self.create_organization(),
         )
-        assert not self.has_object_perm(key, None, self.team)
+        assert not self.has_perm('GET', self.team, auth=key)
