commit 58ea3669c5f22ec54e8b75da199c77f7557cab10
Author: josh <josh@jrl.ninja>
Date:   Mon Dec 2 14:11:49 2019 -0800

    ref(django 1.10): fix unpacking values to for during templating (#15897)

diff --git a/src/sentry/data/samples/python.json b/src/sentry/data/samples/python.json
index 93f949a4ba..e5c24aecd2 100644
--- a/src/sentry/data/samples/python.json
+++ b/src/sentry/data/samples/python.json
@@ -259,21 +259,5 @@
         "lineno": 112
       }
     ]
-  },
-  "sentry.interfaces.Template": {
-    "abs_path": "/srv/example/templates/debug_toolbar/base.html",
-    "pre_context": [
-      "{% endif %}\n",
-      "<script src=\"{% static 'debug_toolbar/js/toolbar.js' %}\"></script>\n",
-      "<div id=\"djDebug\" hidden=\"hidden\" dir=\"ltr\"\n"
-    ],
-    "post_context": [
-      "     {{ toolbar.config.ROOT_TAG_EXTRA_ATTRS|safe }}>\n",
-      "\t<div hidden=\"hidden\" id=\"djDebugToolbar\">\n",
-      "\t\t<ul id=\"djDebugPanelList\">\n"
-    ],
-    "filename": "debug_toolbar/base.html",
-    "lineno": 14,
-    "context_line": "     data-store-id=\"{{ toolbar.store_id }}\" data-render-panel-url=\"{% url 'djdt:render_panel' %}\"\n"
   }
 }
diff --git a/src/sentry/templatetags/sentry_plugins.py b/src/sentry/templatetags/sentry_plugins.py
index 41484cc0a9..7ed46d924c 100644
--- a/src/sentry/templatetags/sentry_plugins.py
+++ b/src/sentry/templatetags/sentry_plugins.py
@@ -27,7 +27,7 @@ def get_actions(group, request):
         ):
             action_list.append(action)
 
-    return [(a[0], a[1], request.path == a[1]) for a in action_list]
+    return [(a[0], a[1]) for a in action_list]
 
 
 @register.filter
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index f8372b9c31..fa99a15d0c 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -250,12 +250,15 @@ def alert(request):
 
     rule = Rule(label="An example rule")
 
+    # XXX: this interface_list code needs to be the same as in
+    #      src/sentry/plugins/sentry_mail/models.py
     interface_list = []
     for interface in six.itervalues(event.interfaces):
         body = interface.to_email_html(event)
         if not body:
             continue
-        interface_list.append((interface.get_title(), mark_safe(body)))
+        text_body = interface.to_string(event)
+        interface_list.append((interface.get_title(), mark_safe(body), text_body))
 
     return MailPreview(
         html_template="sentry/emails/error.html",
diff --git a/tests/fixtures/emails/alert.txt b/tests/fixtures/emails/alert.txt
index fd917aad65..9f14f558c6 100644
--- a/tests/fixtures/emails/alert.txt
+++ b/tests/fixtures/emails/alert.txt
@@ -28,13 +28,18 @@ Tags
 Stacktrace
 -----------
 
+Stacktrace (most recent call last):
 
-
-
-Template
------------
-
-
+  File "raven/base.py", line 303, in build_msg
+    transformer=self.transform)
+  File "raven/base.py", line 459, in capture
+    **kwargs)
+  File "raven/base.py", line 577, in captureMessage
+    return self.capture('raven.events.Message', message=message, **kwargs)
+  File "raven/scripts/runner.py", line 77, in send_test_message
+    'loadavg': get_loadavg(),
+  File "raven/scripts/runner.py", line 112, in main
+    send_test_message(client, opts.__dict__)
 
 
 Request
@@ -52,7 +57,7 @@ User
 Message
 -----------
 
-
+ornare elit pulvinar nisl integer cum ad massa
 
 
 
