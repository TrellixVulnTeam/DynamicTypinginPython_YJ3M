commit 0aa61280abe85c25512a68663d2e1f783ec492bb
Author: ted kaemming <t.kaemming+github@gmail.com>
Date:   Wed Oct 12 14:00:05 2016 -0700

    Add reason for receiving a notification to workflow emails. (#4333)
    
    This also moves the unsubscribe link so that it doesn't look so out of place.

diff --git a/src/sentry/models/groupsubscription.py b/src/sentry/models/groupsubscription.py
index 3aef5e875d..2c93b867bb 100644
--- a/src/sentry/models/groupsubscription.py
+++ b/src/sentry/models/groupsubscription.py
@@ -6,18 +6,28 @@ from django.db.models import Q
 from django.utils import timezone
 
 from sentry.db.models import (
-    BoundedPositiveIntegerField, FlexibleForeignKey, Model, BaseManager,
+    BaseManager, BoundedPositiveIntegerField, FlexibleForeignKey, Model,
     sane_repr
 )
 
 
 class GroupSubscriptionReason(object):
+    implicit = -1  # not for use as a persisted field value
     unknown = 0
     comment = 1
     assigned = 2
     bookmark = 3
     status_change = 4
 
+    descriptions = {
+        implicit: u"have opted to receive updates for all issues within "
+                  "projects that you are a member of",
+        comment: u"have commented on this issue",
+        assigned: u"have been assigned to this issue",
+        bookmark: u"have bookmarked this issue",
+        status_change: u"have changed the resolution status of this issue",
+    }
+
 
 class GroupSubscriptionManager(BaseManager):
     def subscribe(self, group, user, reason=GroupSubscriptionReason.unknown):
@@ -43,14 +53,16 @@ class GroupSubscriptionManager(BaseManager):
         """
         from sentry.models import User, UserOption, UserOptionValue
 
-        # identify all members of a project
+        # Identify all members of a project -- we'll use this to start figuring
+        # out who could possibly be associated with this group due to implied
+        # subscriptions.
         users = User.objects.filter(
             sentry_orgmember_set__teams=group.project.team,
             is_active=True,
         )
 
-        # TODO(dcramer): allow members to change from default particpating to
-        # explicit
+        # Obviously, users who have explicitly unsubscribed from this issue
+        # aren't considered participants.
         users = users.exclude(
             id__in=GroupSubscription.objects.filter(
                 group=group,
@@ -59,36 +71,48 @@ class GroupSubscriptionManager(BaseManager):
             ).values('user')
         )
 
-        # find users which by default do not subscribe
-        participating_only = set(UserOption.objects.filter(
-            Q(project__isnull=True) | Q(project=group.project),
-            user__in=users,
-            key='workflow:notifications',
-            value=UserOptionValue.participating_only,
-        ).exclude(
-            user__in=UserOption.objects.filter(
+        # Fetch all of the users that have been explicitly associated with this
+        # issue.
+        participants = {
+            subscription.user: subscription.reason
+            for subscription in
+            GroupSubscription.objects.filter(
+                group=group,
+                is_active=True,
+            ).select_related('user')
+        }
+
+        # Find users which by default do not subscribe.
+        participating_only = set(
+            UserOption.objects.filter(
+                Q(project__isnull=True) | Q(project=group.project),
                 user__in=users,
                 key='workflow:notifications',
-                project=group.project,
-                value=UserOptionValue.all_conversations,
-            )
-        ).values_list('user', flat=True))
+                value=UserOptionValue.participating_only,
+            ).exclude(
+                user__in=UserOption.objects.filter(
+                    user__in=users,
+                    key='workflow:notifications',
+                    project=group.project,
+                    value=UserOptionValue.all_conversations,
+                )
+            ).values_list('user', flat=True)
+        )
 
         if participating_only:
-            excluded = participating_only.difference(
-                GroupSubscription.objects.filter(
-                    group=group,
-                    is_active=True,
-                    user__in=participating_only,
-                ).values_list('user', flat=True)
-            )
-
+            excluded = participating_only.difference(participants.keys())
             if excluded:
-                users = users.exclude(
-                    id__in=excluded,
-                )
+                users = users.exclude(id__in=excluded)
+
+        results = {}
+
+        for user in users:
+            results[user] = GroupSubscriptionReason.implicit
+
+        for user, reason in participants.items():
+            results[user] = reason
 
-        return list(users)
+        return results
 
 
 class GroupSubscription(Model):
diff --git a/src/sentry/plugins/sentry_mail/activity/base.py b/src/sentry/plugins/sentry_mail/activity/base.py
index d1d9eba667..94d4f8e4ea 100644
--- a/src/sentry/plugins/sentry_mail/activity/base.py
+++ b/src/sentry/plugins/sentry_mail/activity/base.py
@@ -5,7 +5,8 @@ from django.utils.html import escape, mark_safe
 
 from sentry import options
 from sentry.models import (
-    GroupSubscription, ProjectOption, UserAvatar, UserOption
+    GroupSubscription, GroupSubscriptionReason, ProjectOption, UserAvatar,
+    UserOption
 )
 from sentry.utils.avatar import get_email_avatar
 from sentry.utils.email import MessageBuilder, group_id_to_email
@@ -37,13 +38,9 @@ class ActivityEmail(object):
         if not self.group:
             return []
 
-        participants = set(
-            GroupSubscription.objects.get_participants(
-                group=self.group
-            )
-        )
+        participants = GroupSubscription.objects.get_participants(group=self.group)
 
-        if self.activity.user is not None:
+        if self.activity.user is not None and self.activity.user in participants:
             receive_own_activity = UserOption.objects.get_value(
                 user=self.activity.user,
                 project=None,
@@ -52,7 +49,7 @@ class ActivityEmail(object):
             ) == '1'
 
             if not receive_own_activity:
-                participants.discard(self.activity.user)
+                del participants[self.activity.user]
 
         return participants
 
@@ -224,8 +221,8 @@ class ActivityEmail(object):
         if not self.should_email():
             return
 
-        users = self.get_participants()
-        if not users:
+        participants = self.get_participants()
+        if not participants:
             return
 
         activity = self.activity
@@ -246,13 +243,19 @@ class ActivityEmail(object):
         email_type = self.get_email_type()
         headers = self.get_headers()
 
-        for user in users:
+        for user, reason in participants.items():
             if group:
-                context['unsubscribe_link'] = generate_signed_link(
-                    user.id,
-                    'sentry-account-email-unsubscribe-issue',
-                    kwargs={'issue_id': group.id},
-                )
+                context.update({
+                    'reason': GroupSubscriptionReason.descriptions.get(
+                        reason,
+                        "are subscribed to this issue",
+                    ),
+                    'unsubscribe_link': generate_signed_link(
+                        user.id,
+                        'sentry-account-email-unsubscribe-issue',
+                        kwargs={'issue_id': group.id},
+                    ),
+                })
 
             msg = MessageBuilder(
                 subject=subject,
diff --git a/src/sentry/templates/sentry/emails/activity/generic.html b/src/sentry/templates/sentry/emails/activity/generic.html
index eb0b92bb3f..0b3986b7a4 100644
--- a/src/sentry/templates/sentry/emails/activity/generic.html
+++ b/src/sentry/templates/sentry/emails/activity/generic.html
@@ -4,14 +4,28 @@
 {% load sentry_assets %}
 
 {% block header %}
-  <a href="{{ link }}" class="btn">View on Sentry</a>
+  {% block action %}
+    <a href="{{ link }}" class="btn">View on Sentry</a>
+  {% endblock %}
   {{ block.super }}
 {% endblock %}
 
 {% block main %}
-  <h2>{{ activity_name }}</h2>
 
-  <p>{{ html_description }}</p>
+  {% block activity %}
+
+    <h2>{{ activity_name }}</h2>
+
+    <p>{{ html_description }}</p>
+
+  {% endblock %}
 
   {% include "sentry/emails/group_header.html" %}
+
+  {% if reason %}
+    <p class="via">
+      You are receiving this email because you {{ reason }}.
+    </p>
+  {% endif %}
+
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/activity/note.html b/src/sentry/templates/sentry/emails/activity/note.html
index fd015743c5..3fb850aee8 100644
--- a/src/sentry/templates/sentry/emails/activity/note.html
+++ b/src/sentry/templates/sentry/emails/activity/note.html
@@ -1,14 +1,14 @@
-{% extends "sentry/emails/base.html" %}
+{% extends "sentry/emails/activity/generic.html" %}
 
 {% load sentry_helpers %}
 {% load sentry_assets %}
 
-{% block header %}
+{% block action %}
   <a href="{{ activity_link }}" class="btn">View on Sentry</a>
-  {{ block.super }}
 {% endblock %}
 
-{% block main %}
+{% block activity %}
+
   <h3>New comment by {{ author.get_display_name }}</h3>
 
   <table class="note">
@@ -31,5 +31,4 @@
     </tr>
   </table>
 
-  {% include "sentry/emails/group_header.html" %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/base.html b/src/sentry/templates/sentry/emails/base.html
index c1d9cc4ac6..61bb2d7438 100644
--- a/src/sentry/templates/sentry/emails/base.html
+++ b/src/sentry/templates/sentry/emails/base.html
@@ -32,17 +32,15 @@
           {% block main %}
           <p>This is the body of an email</p>
           {% endblock %}
-          {% if unsubscribe_link %}
-            <p>
-              <a href="{{ unsubscribe_link }}">Click to unsubscribe</a>
-            </p>
-          {% endif %}
         </div>
         <div class="footer">
           {% block footer %}
           <a href="{% absolute_uri %}" style="float:right">Home</a>
           {% url 'sentry-account-settings-notifications' as settings_link %}
           <a href="{% absolute_uri settings_link %}">Notification Settings</a>
+          {% if unsubscribe_link %}
+            &middot; <a href="{{ unsubscribe_link }}">Unsubscribe</a>
+          {% endif %}
           {% endblock %}
         </div>
       </div>
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index 15a04b30f8..f5e2a69a09 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -23,8 +23,8 @@ from sentry.digests.notifications import Notification, build_digest
 from sentry.digests.utilities import get_digest_metadata
 from sentry.http import get_server_hostname
 from sentry.models import (
-    Activity, Event, Group, GroupStatus, Organization, OrganizationMember,
-    Project, Release, Rule, Team
+    Activity, Event, Group, GroupStatus, GroupSubscriptionReason, Organization,
+    OrganizationMember, Project, Release, Rule, Team
 )
 from sentry.plugins.sentry_mail.activity import emails
 from sentry.utils.dates import to_datetime, to_timestamp
@@ -123,11 +123,18 @@ class MailPreview(object):
 
 
 class ActivityMailPreview(object):
-    def __init__(self, activity):
+    def __init__(self, request, activity):
+        self.request = request
         self.email = emails.get(activity.type)(activity)
 
     def get_context(self):
         context = self.email.get_base_context()
+        context.update({
+            'reason': get_random(self.request).choice(
+                GroupSubscriptionReason.descriptions.values()
+            ),
+            'unsubscribe_link': 'javascript:alert("This is a preview page, what did you expect to happen?");',
+        })
         context.update(self.email.get_context())
         return context
 
@@ -187,7 +194,7 @@ class ActivityMailDebugView(View):
         )
 
         return render_to_response('sentry/debug/mail/preview.html', {
-            'preview': ActivityMailPreview(activity),
+            'preview': ActivityMailPreview(request, activity),
             'format': request.GET.get('format'),
         })
 
diff --git a/tests/sentry/models/test_groupsubscription.py b/tests/sentry/models/test_groupsubscription.py
index f86a907281..b5e118bf5c 100644
--- a/tests/sentry/models/test_groupsubscription.py
+++ b/tests/sentry/models/test_groupsubscription.py
@@ -1,6 +1,8 @@
 from __future__ import absolute_import
 
-from sentry.models import GroupSubscription, UserOption, UserOptionValue
+from sentry.models import (
+    GroupSubscription, GroupSubscriptionReason, UserOption, UserOptionValue
+)
 from sentry.testutils import TestCase
 
 
@@ -34,7 +36,9 @@ class GetParticipantsTest(TestCase):
         # implicit membership
         users = GroupSubscription.objects.get_participants(group=group)
 
-        assert users == [user]
+        assert users == {
+            user: GroupSubscriptionReason.implicit,
+        }
 
         # unsubscribed
         GroupSubscription.objects.create(
@@ -46,7 +50,7 @@ class GetParticipantsTest(TestCase):
 
         users = GroupSubscription.objects.get_participants(group=group)
 
-        assert users == []
+        assert users == {}
 
         # not participating by default
         GroupSubscription.objects.filter(
@@ -63,7 +67,7 @@ class GetParticipantsTest(TestCase):
 
         users = GroupSubscription.objects.get_participants(group=group)
 
-        assert users == []
+        assert users == {}
 
         # explicitly participating
         GroupSubscription.objects.create(
@@ -71,11 +75,14 @@ class GetParticipantsTest(TestCase):
             group=group,
             project=project,
             is_active=True,
+            reason=GroupSubscriptionReason.comment,
         )
 
         users = GroupSubscription.objects.get_participants(group=group)
 
-        assert users == [user]
+        assert users == {
+            user: GroupSubscriptionReason.comment,
+        }
 
     def test_excludes_project_participating_only(self):
         org = self.create_organization()
@@ -94,4 +101,4 @@ class GetParticipantsTest(TestCase):
 
         users = GroupSubscription.objects.get_participants(group=group)
 
-        assert users == []
+        assert users == {}
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 5a3fe3512c..08ac421644 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -373,7 +373,7 @@ class ActivityEmailTestCase(TestCase):
             )
         )
 
-        assert email.get_participants() == set([other])
+        assert set(email.get_participants()) == set([other])
 
         UserOption.objects.set_value(
             user=actor,
@@ -382,7 +382,7 @@ class ActivityEmailTestCase(TestCase):
             value='1'
         )
 
-        assert email.get_participants() == set([actor, other])
+        assert set(email.get_participants()) == set([actor, other])
 
     def test_get_participants_without_actor(self):
         group, (user,) = self.get_fixture_data(1)
@@ -394,4 +394,4 @@ class ActivityEmailTestCase(TestCase):
             )
         )
 
-        assert email.get_participants() == set([user])
+        assert set(email.get_participants()) == set([user])
