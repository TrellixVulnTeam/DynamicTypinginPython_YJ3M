commit 1bf6534b7664959ff466938a7d4e5f0f3ef5a552
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 13 12:37:58 2012 -0800

    Plugin registration now happens via an @register decorator

diff --git a/CHANGES b/CHANGES
index 050b0ec1ca..b8b5af8942 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,3 +1,9 @@
+Version 2.9.0
+-------------
+
+* Plugins must now behave as singletons and be registered with a newly provided
+  sentry.plugins.@register decorator.
+
 Version 2.8.0
 -------------
 
diff --git a/sentry/plugins/base.py b/sentry/plugins/base.py
index 0d985fb16e..4becb812e8 100644
--- a/sentry/plugins/base.py
+++ b/sentry/plugins/base.py
@@ -6,7 +6,7 @@ sentry.plugins.base
 :license: BSD, see LICENSE for more details.
 """
 
-__all__ = ('Plugin', 'plugins')
+__all__ = ('Plugin', 'plugins', 'register')
 
 from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect, HttpResponse
@@ -52,23 +52,27 @@ class PluginManager(InstanceManager):
                 return plugin
         raise KeyError
 
+    def register(self, cls):
+        self.add('%s.%s' % (cls.__module__, cls.__name__))
+
+    def unregister(self, cls):
+        self.remove('%s.%s' % (cls.__module__, cls.__name__))
 
 plugins = PluginManager()
+register = plugins.register
+unregister = plugins.unregister
 
 
-def PluginMount(manager):
-    class PluginMount(type):
-        def __new__(cls, name, bases, attrs):
-            new_cls = type.__new__(cls, name, bases, attrs)
-            if IPlugin in bases:
-                return new_cls
-            if not new_cls.title:
-                new_cls.title = new_cls.__name__
-            if not new_cls.slug:
-                new_cls.slug = new_cls.title.replace(' ', '-').lower()
-            manager.add('%s.%s' % (new_cls.__module__, new_cls.__name__))
+class PluginMount(type):
+    def __new__(cls, name, bases, attrs):
+        new_cls = type.__new__(cls, name, bases, attrs)
+        if IPlugin in bases:
             return new_cls
-    return PluginMount
+        if not new_cls.title:
+            new_cls.title = new_cls.__name__
+        if not new_cls.slug:
+            new_cls.slug = new_cls.title.replace(' ', '-').lower()
+        return new_cls
 
 
 class IPlugin(object):
@@ -203,6 +207,9 @@ class IPlugin(object):
 
 class Plugin(IPlugin):
     """
+    A plugin should be treated as if it were a singleton. The owner does not
+    control when or how the plugin gets instantiated, nor is it guaranteed that
+    it will happen, or happen more than once.
     """
-    __metaclass__ = PluginMount(plugins)
+    __metaclass__ = PluginMount
 
diff --git a/sentry/plugins/sentry_bugzilla/models.py b/sentry/plugins/sentry_bugzilla/models.py
index 4a574bc154..f68307f7fc 100644
--- a/sentry/plugins/sentry_bugzilla/models.py
+++ b/sentry/plugins/sentry_bugzilla/models.py
@@ -8,7 +8,7 @@ sentry.plugins.sentry_bugzilla.models
 
 from django import forms
 
-from sentry.plugins import Plugin
+from sentry.plugins import Plugin, register
 
 
 class BugzillaConfigurationForm(forms.Form):
@@ -22,6 +22,7 @@ class BugzillaSubmitForm(forms.Form):
     version = forms.CharField(max_length=64)
 
 
+@register
 class CreateBugzillaIssue(Plugin):
     title = 'Create Bugzilla Issue'
     slug = 'bugzilla'
diff --git a/sentry/plugins/sentry_mail/__init__.py b/sentry/plugins/sentry_mail/__init__.py
index e0db1a88bb..6ea79129c0 100644
--- a/sentry/plugins/sentry_mail/__init__.py
+++ b/sentry/plugins/sentry_mail/__init__.py
@@ -9,7 +9,7 @@ from django import forms
 from django.core.mail import send_mail
 from django.template.loader import render_to_string
 from sentry.conf import settings
-from sentry.plugins import Plugin
+from sentry.plugins import Plugin, register
 
 NOTSET = object()
 
@@ -20,6 +20,7 @@ class MailConfigurationForm(forms.Form):
     }))
 
 
+@register
 class MailProcessor(Plugin):
     title = 'Mail'
     conf_key = 'mail'
diff --git a/sentry/plugins/sentry_redmine/models.py b/sentry/plugins/sentry_redmine/models.py
index c2cd06ca77..f27dd3cb9f 100644
--- a/sentry/plugins/sentry_redmine/models.py
+++ b/sentry/plugins/sentry_redmine/models.py
@@ -14,7 +14,7 @@ from django.http import HttpResponseRedirect
 from django.utils.safestring import mark_safe
 
 from sentry.models import Group
-from sentry.plugins import Plugin
+from sentry.plugins import Plugin, register
 from sentry.plugins.sentry_redmine import conf
 from sentry.utils import json
 
@@ -33,6 +33,7 @@ class RedmineIssueForm(forms.Form):
     description = forms.CharField(widget=forms.Textarea())
 
 
+@register
 class CreateRedmineIssue(Plugin):
     title = 'Create Redmine Issue'
 
diff --git a/sentry/plugins/sentry_servers/__init__.py b/sentry/plugins/sentry_servers/__init__.py
index 370dcd4a86..1afb74e28a 100644
--- a/sentry/plugins/sentry_servers/__init__.py
+++ b/sentry/plugins/sentry_servers/__init__.py
@@ -7,9 +7,10 @@ sentry.plugins.sentry_servers
 """
 
 from django.db.models import Sum
-from sentry.plugins import Plugin
+from sentry.plugins import Plugin, register
 
 
+@register
 class ServersPlugin(Plugin):
     """
     Adds additional support for showing information about servers including:
diff --git a/sentry/plugins/sentry_sites/__init__.py b/sentry/plugins/sentry_sites/__init__.py
index 562e40feec..1670dff992 100644
--- a/sentry/plugins/sentry_sites/__init__.py
+++ b/sentry/plugins/sentry_sites/__init__.py
@@ -6,9 +6,10 @@ sentry.plugins.sentry_sites
 :license: BSD, see LICENSE for more details.
 """
 from django.db.models import Sum
-from sentry.plugins import Plugin
+from sentry.plugins import Plugin, register
 
 
+@register
 class SitesPlugin(Plugin):
     """
     Adds additional support for showing information about sites including:
diff --git a/sentry/plugins/sentry_urls/__init__.py b/sentry/plugins/sentry_urls/__init__.py
index 2bc3220d00..3a34edfc9e 100644
--- a/sentry/plugins/sentry_urls/__init__.py
+++ b/sentry/plugins/sentry_urls/__init__.py
@@ -6,9 +6,10 @@ sentry.plugins.sentry_urls
 :license: BSD, see LICENSE for more details.
 """
 from django.db.models import Sum
-from sentry.plugins import Plugin
+from sentry.plugins import Plugin, register
 
 
+@register
 class UrlsPlugin(Plugin):
     """
     Adds additional support for showing information about urls including:
diff --git a/sentry/utils/__init__.py b/sentry/utils/__init__.py
index bbb51d0b10..6b1f33f28f 100644
--- a/sentry/utils/__init__.py
+++ b/sentry/utils/__init__.py
@@ -26,6 +26,10 @@ class InstanceManager(object):
         self.cache = None
         self.class_list.append(class_path)
 
+    def remove(self, class_path):
+        self.cache = None
+        self.class_list.remove(class_path)
+
     def update(self, class_list):
         """
         Updates the class list and wipes the cache.
diff --git a/setup.py b/setup.py
index 5fe22365a5..3a33fc65ea 100755
--- a/setup.py
+++ b/setup.py
@@ -46,7 +46,7 @@ install_requires = [
 
 setup(
     name='sentry',
-    version='2.8.2',
+    version='2.9.0',
     author='David Cramer',
     author_email='dcramer@gmail.com',
     url='http://github.com/dcramer/sentry',
