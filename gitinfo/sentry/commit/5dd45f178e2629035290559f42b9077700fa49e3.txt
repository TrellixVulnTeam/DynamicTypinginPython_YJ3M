commit 5dd45f178e2629035290559f42b9077700fa49e3
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Jan 4 13:38:08 2019 -0800

    ref(ui): Organization level pages share styled components (#11346)

diff --git a/src/sentry/static/sentry/app/styles/organization.jsx b/src/sentry/static/sentry/app/styles/organization.jsx
new file mode 100644
index 0000000000..302865fe89
--- /dev/null
+++ b/src/sentry/static/sentry/app/styles/organization.jsx
@@ -0,0 +1,28 @@
+// Shared styles for the new org level pages with global project/env/time selection
+import styled from 'react-emotion';
+import space from 'app/styles/space';
+
+export const PageContent = styled('div')`
+  display: flex;
+  flex-direction: column;
+  flex: 1;
+  overflow: hidden;
+  padding: ${space(2)} ${space(4)} ${space(3)};
+  margin-bottom: -20px; /* <footer> has margin-top: 20px; */
+`;
+
+export const PageHeader = styled('div')`
+  display: flex;
+  justify-content: space-between;
+  align-items: center;
+  margin-bottom: ${space(2)};
+`;
+
+export const HeaderTitle = styled('h4')`
+  flex: 1;
+  font-size: ${p => p.theme.headerFontSize};
+  line-height: ${p => p.theme.headerFontSize};
+  font-weight: normal;
+  color: ${p => p.theme.gray4};
+  margin: 0;
+`;
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
index 3517e12f24..3f566316c8 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
@@ -1,4 +1,3 @@
-import {Flex} from 'grid-emotion';
 import {withRouter} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
@@ -10,9 +9,9 @@ import BetaTag from 'app/components/betaTag';
 import Feature from 'app/components/acl/feature';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import SentryTypes from 'app/sentryTypes';
-import space from 'app/styles/space';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
 import withOrganization from 'app/utils/withOrganization';
+import {PageContent, PageHeader, HeaderTitle} from 'app/styles/organization';
 
 import EventsContext from './utils/eventsContext';
 import SearchBar from './searchBar';
@@ -53,15 +52,14 @@ class OrganizationEventsContainer extends React.Component {
           ...selection.datetime,
         }}
       >
-        <OrganizationEventsContent>
-          <Feature features={['global-views']} renderDisabled>
-            <GlobalSelectionHeader
-              organization={organization}
-              resetParamsOnChange={['zoom', 'cursor']}
-            />
-
+        <Feature features={['global-views']} renderDisabled>
+          <GlobalSelectionHeader
+            organization={organization}
+            resetParamsOnChange={['zoom', 'cursor']}
+          />
+          <PageContent>
             <Body>
-              <Flex align="center" justify="space-between" mb={2}>
+              <PageHeader>
                 <HeaderTitle>
                   {t('Events')} <BetaTag />
                 </HeaderTitle>
@@ -71,12 +69,12 @@ class OrganizationEventsContainer extends React.Component {
                   placeholder={t('Search for events, users, tags, and everything else.')}
                   onSearch={this.handleSearch}
                 />
-              </Flex>
+              </PageHeader>
 
               {children}
             </Body>
-          </Feature>
-        </OrganizationEventsContent>
+          </PageContent>
+        </Feature>
       </EventsContext.Provider>
     );
   }
@@ -86,27 +84,10 @@ export default withRouter(
 );
 export {OrganizationEventsContainer};
 
-const OrganizationEventsContent = styled(Flex)`
-  flex-direction: column;
-  flex: 1;
-  overflow: hidden;
-  margin-bottom: -20px; /* <footer> has margin-top: 20px; */
-`;
-
 const Body = styled('div')`
   display: flex;
   flex-direction: column;
   flex: 1;
-  padding: ${space(2)} ${space(4)} ${space(3)};
-`;
-
-const HeaderTitle = styled('h4')`
-  flex: 1;
-  font-size: ${p => p.theme.headerFontSize};
-  line-height: ${p => p.theme.headerFontSize};
-  font-weight: normal;
-  color: ${p => p.theme.gray4};
-  margin: 0;
 `;
 
 const StyledSearchBar = styled(SearchBar)`
diff --git a/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx b/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
index 32db12359a..5a2987da91 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
@@ -1,6 +1,5 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import styled from 'react-emotion';
 
 import SentryTypes from 'app/sentryTypes';
 import Feature from 'app/components/acl/feature';
@@ -9,8 +8,8 @@ import Alert from 'app/components/alert';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import withOrganization from 'app/utils/withOrganization';
-import space from 'app/styles/space';
 import AsyncView from 'app/views/asyncView';
+import {PageContent} from 'app/styles/organization';
 
 import ReleaseHeader from '../shared/releaseHeader';
 
@@ -42,7 +41,11 @@ class OrganizationReleaseDetails extends AsyncView {
   }
 
   renderNoAccess() {
-    return <Alert type="warning">{t("You don't have access to this feature")}</Alert>;
+    return (
+      <PageContent>
+        <Alert type="warning">{t("You don't have access to this feature")}</Alert>
+      </PageContent>
+    );
   }
 
   renderBody() {
@@ -53,30 +56,20 @@ class OrganizationReleaseDetails extends AsyncView {
     if (this.state.error) return <LoadingError onRetry={this.fetchData} />;
 
     return (
-      <Content>
-        <Feature
-          features={['organizations:sentry10']}
-          organization={this.props.organization}
-          renderDisabled={this.renderNoAccess}
-        >
+      <Feature
+        features={['organizations:sentry10']}
+        organization={this.props.organization}
+        renderDisabled={this.renderNoAccess}
+      >
+        <PageContent>
           <ReleaseHeader release={release} orgId={orgId} />
           {React.cloneElement(this.props.children, {
             release,
           })}
-        </Feature>
-      </Content>
+        </PageContent>
+      </Feature>
     );
   }
 }
 
 export default withOrganization(OrganizationReleaseDetails);
-
-// TODO: refactor as this same component is used in events, release list and user feedback
-const Content = styled('div')`
-  display: flex;
-  flex-direction: column;
-  flex: 1;
-  overflow: hidden;
-  padding: ${space(2)} ${space(4)} ${space(3)};
-  margin-bottom: -20px; /* <footer> has margin-top: 20px; */
-`;
diff --git a/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
index 15000304dc..120162e233 100644
--- a/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import styled from 'react-emotion';
 import {browserHistory} from 'react-router';
 
 import SentryTypes from 'app/sentryTypes';
@@ -17,7 +16,7 @@ import AsyncView from 'app/views/asyncView';
 
 import withOrganization from 'app/utils/withOrganization';
 
-import space from 'app/styles/space';
+import {PageContent, PageHeader, HeaderTitle} from 'app/styles/organization';
 
 import ReleaseList from '../shared/releaseList';
 import ReleaseListHeader from '../shared/releaseListHeader';
@@ -81,9 +80,9 @@ class OrganizationReleases extends AsyncView {
 
   renderNoAccess() {
     return (
-      <Content>
+      <PageContent>
         <Alert type="warning">{t("You don't have access to this feature")}</Alert>
-      </Content>
+      </PageContent>
     );
   }
 
@@ -101,8 +100,8 @@ class OrganizationReleases extends AsyncView {
         renderDisabled={this.renderNoAccess}
       >
         <GlobalSelectionHeader organization={organization} />
-        <Content>
-          <Header>
+        <PageContent>
+          <PageHeader>
             <HeaderTitle>{t('Releases')}</HeaderTitle>
             <div>
               <SearchBar
@@ -112,45 +111,18 @@ class OrganizationReleases extends AsyncView {
                 onSearch={this.onSearch}
               />
             </div>
-          </Header>
-          <Body>
+          </PageHeader>
+          <div>
             <Panel>
               <ReleaseListHeader />
               <PanelBody>{this.renderStreamBody()}</PanelBody>
             </Panel>
             <Pagination pageLinks={this.state.releaseListPageLinks} />
-          </Body>
-        </Content>
+          </div>
+        </PageContent>
       </Feature>
     );
   }
 }
 
-const Content = styled('div')`
-  display: flex;
-  flex-direction: column;
-  flex: 1;
-  overflow: hidden;
-  padding: ${space(2)} ${space(4)} ${space(3)};
-  margin-bottom: -20px; /* <footer> has margin-top: 20px; */
-`;
-
-const Header = styled('div')`
-  display: flex;
-  justify-content: space-between;
-  margin-bottom: ${space(2)};
-  align-items: center;
-`;
-
-const HeaderTitle = styled('h4')`
-  flex: 1;
-  font-size: ${p => p.theme.headerFontSize};
-  line-height: ${p => p.theme.headerFontSize};
-  font-weight: normal;
-  color: ${p => p.theme.gray4};
-  margin: 0;
-`;
-
-const Body = styled('div')``;
-
 export default withOrganization(OrganizationReleases);
diff --git a/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
index 6985904acd..25d04f5795 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import styled from 'react-emotion';
 
 import {t} from 'app/locale';
 import withOrganization from 'app/utils/withOrganization';
@@ -10,9 +9,9 @@ import EmptyStateWarning from 'app/components/emptyStateWarning';
 import CompactIssue from 'app/components/compactIssue';
 import EventUserFeedback from 'app/components/events/userFeedback';
 import LoadingIndicator from 'app/components/loadingIndicator';
-import space from 'app/styles/space';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import AsyncView from 'app/views/asyncView';
+import {PageContent} from 'app/styles/organization';
 
 import UserFeedbackContainer from './container';
 import {getQuery} from './utils';
@@ -85,9 +84,9 @@ class OrganizationUserFeedback extends AsyncView {
 
   renderNoAccess() {
     return (
-      <Content>
+      <PageContent>
         <Alert type="warning">{t("You don't have access to this feature")}</Alert>
-      </Content>
+      </PageContent>
     );
   }
 
@@ -126,20 +125,11 @@ class OrganizationUserFeedback extends AsyncView {
         renderDisabled={this.renderNoAccess}
       >
         <GlobalSelectionHeader organization={organization} />
-        <Content>{this.renderStreamBody()}</Content>
+        <PageContent>{this.renderStreamBody()}</PageContent>
       </Feature>
     );
   }
 }
 
-const Content = styled('div')`
-  display: flex;
-  flex-direction: column;
-  flex: 1;
-  overflow: hidden;
-  padding: ${space(2)} ${space(4)} ${space(3)};
-  margin-bottom: -20px; /* <footer> has margin-top: 20px; */
-`;
-
 export {OrganizationUserFeedback};
 export default withOrganization(OrganizationUserFeedback);
diff --git a/tests/js/spec/views/organizationEvents/index.spec.jsx b/tests/js/spec/views/organizationEvents/index.spec.jsx
index 527b420627..0a6880098f 100644
--- a/tests/js/spec/views/organizationEvents/index.spec.jsx
+++ b/tests/js/spec/views/organizationEvents/index.spec.jsx
@@ -59,7 +59,7 @@ describe('OrganizationEvents', function() {
     });
 
     it('renders', function() {
-      expect(wrapper.find('OrganizationEventsContent')).toHaveLength(1);
+      expect(wrapper.find('PageContent')).toHaveLength(1);
     });
 
     it('updates router when changing environments', async function() {
diff --git a/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
index b6767e44a5..d51d751a4d 100644
--- a/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
+++ b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
@@ -1551,9 +1551,9 @@ exports[`OrganizationUserFeedback renders 1`] = `
               </GlobalSelectionHeader>
             </withGlobalSelection(GlobalSelectionHeader)>
           </withRouter(withGlobalSelection(GlobalSelectionHeader))>
-          <Content>
+          <PageContent>
             <div
-              className="css-1wsl7kd-Content euo9in30"
+              className="css-rejmra-PageContent e6lvex70"
             >
               <UserFeedbackContainer
                 location={
@@ -2224,7 +2224,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                 </div>
               </UserFeedbackContainer>
             </div>
-          </Content>
+          </PageContent>
         </Feature>
       </FeatureContainer>
     </DocumentTitle>
