commit 7b4cfbc14258f75e093a3ef4e9926a0175d7b57b
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 3 12:20:55 2015 -0800

    Remove can_admin_group and can_remove_group helpers

diff --git a/src/sentry/permissions.py b/src/sentry/permissions.py
index 7afd2cc3e2..8264ec3a04 100644
--- a/src/sentry/permissions.py
+++ b/src/sentry/permissions.py
@@ -215,33 +215,6 @@ def can_remove_project(user, project):
     return True
 
 
-@requires_login
-def can_admin_group(user, group, is_remove=False):
-    if user.is_superuser:
-        return True
-
-    if not group.project.has_access(user, OrganizationMemberType.MEMBER):
-        return False
-
-    # The "remove_event" permission was added after "admin_event".
-    # First check the new "remove_event" permission, then fall back
-    # to the "admin_event" permission.
-    if is_remove:
-        result = plugins.first('has_perm', user, 'remove_event', group)
-        if result is False:
-            return False
-
-    result = plugins.first('has_perm', user, 'admin_event', group)
-    if result is False:
-        return False
-
-    return True
-
-
-def can_remove_group(user, group):
-    return can_admin_group(user, group, is_remove=True)
-
-
 @requires_login
 def can_add_project_key(user, project):
     if user.is_superuser:
diff --git a/src/sentry/plugins/base/v1.py b/src/sentry/plugins/base/v1.py
index 909eee8816..31fd6dff1b 100644
--- a/src/sentry/plugins/base/v1.py
+++ b/src/sentry/plugins/base/v1.py
@@ -14,6 +14,7 @@ from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
 from threading import local
 
+from sentry.auth import access
 from sentry.plugins.base.response import Response
 from sentry.plugins.base.view import PluggableViewMixin
 
@@ -209,7 +210,6 @@ class IPlugin(local, PluggableViewMixin):
 
     def get_view_response(self, request, group):
         from sentry.models import Event
-        from sentry.permissions import can_admin_group, can_remove_group
 
         self.selected = request.path == self.get_url(group)
 
@@ -230,13 +230,15 @@ class IPlugin(local, PluggableViewMixin):
         event = group.get_latest_event() or Event()
         event.group = group
 
+        request.access = access.for_user(request.user, group.organization)
+
         return response.respond(request, {
             'plugin': self,
             'project': group.project,
             'group': group,
             'event': event,
-            'can_admin_event': can_admin_group(request.user, group),
-            'can_remove_event': can_remove_group(request.user, group),
+            'can_admin_event': request.access.has_scope('event:write'),
+            'can_remove_event': request.access.has_scope('event:delete'),
         })
 
     def view(self, request, group, **kwargs):
