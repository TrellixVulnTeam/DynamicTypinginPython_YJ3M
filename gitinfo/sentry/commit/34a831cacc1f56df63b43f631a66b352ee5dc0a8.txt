commit 34a831cacc1f56df63b43f631a66b352ee5dc0a8
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Aug 4 14:53:55 2013 -0700

    Correct fetch_source and expand tests

diff --git a/src/sentry/tasks/fetch_source.py b/src/sentry/tasks/fetch_source.py
index 0f73562a97..03575f0d96 100644
--- a/src/sentry/tasks/fetch_source.py
+++ b/src/sentry/tasks/fetch_source.py
@@ -195,11 +195,13 @@ def expand_javascript_source(data, **kwargs):
         return
 
     # build list of frames that we can actually grab source for
-    frames = [
-        f for f in stacktrace.frames
-        if f.lineno is not None
-        and f.is_url()
-    ]
+    frames = []
+    for stacktrace in stacktraces:
+        frames.extend([
+            f for f in stacktrace.frames
+            if f.lineno is not None
+            and f.is_url()
+        ])
 
     if not frames:
         logger.debug('Event %r has no frames with enough context to fetch remote source', data['event_id'])
diff --git a/tests/sentry/tasks/fetch_source/tests.py b/tests/sentry/tasks/fetch_source/tests.py
index 9e39223023..21529ef286 100644
--- a/tests/sentry/tasks/fetch_source/tests.py
+++ b/tests/sentry/tasks/fetch_source/tests.py
@@ -54,22 +54,26 @@ class ExpandJavascriptSourceTest(TestCase):
     @mock.patch('sentry.tasks.fetch_source.fetch_sourcemap')
     def test_new_style(self, fetch_sourcemap, fetch_url, update):
         data = {
-            'sentry.interfaces.Stacktrace': {
-                'frames': [
-                    {
-                        'abs_path': 'http://example.com/foo.js',
-                        'filename': 'foo.js',
-                        'lineno': 4,
-                        'colno': 0,
-                    },
-                    {
-                        'abs_path': 'http://example.com/foo.js',
-                        'filename': 'foo.js',
-                        'lineno': 1,
-                        'colno': 0,
+            'sentry.interfaces.Exception': {
+                'values': [{
+                    'stacktrace': {
+                        'frames': [
+                            {
+                                'abs_path': 'http://example.com/foo.js',
+                                'filename': 'foo.js',
+                                'lineno': 4,
+                                'colno': 0,
+                            },
+                            {
+                                'abs_path': 'http://example.com/foo.js',
+                                'filename': 'foo.js',
+                                'lineno': 1,
+                                'colno': 0,
+                            },
+                        ],
                     },
-                ],
-            },
+                }],
+            }
         }
         fetch_sourcemap.return_value = None
         fetch_url.return_value.body = '\n'.join('hello world')
@@ -78,7 +82,7 @@ class ExpandJavascriptSourceTest(TestCase):
 
         fetch_url.assert_called_once_with('http://example.com/foo.js')
 
-        frame_list = data['sentry.interfaces.Stacktrace']['frames']
+        frame_list = data['sentry.interfaces.Exception']['values'][0]['stacktrace']['frames']
         frame = frame_list[0]
         assert frame['pre_context'] == ['h', 'e', 'l']
         assert frame['context_line'] == 'l'
