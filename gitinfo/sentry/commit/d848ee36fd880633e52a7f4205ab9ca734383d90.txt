commit d848ee36fd880633e52a7f4205ab9ca734383d90
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Sep 22 15:49:18 2015 -0700

    Fix metrics usage for several internal counters

diff --git a/src/sentry/tasks/check_auth.py b/src/sentry/tasks/check_auth.py
index 1b5dbdebc6..47cedc2a6d 100644
--- a/src/sentry/tasks/check_auth.py
+++ b/src/sentry/tasks/check_auth.py
@@ -84,14 +84,14 @@ def check_auth_identity(auth_identity_id, **kwargs):
                 unicode(exc),
                 exc_info=True,
             )
-            metrics.incr('auth.identities.invalidated', 1)
+            metrics.incr('auth.identities.invalidated')
         is_linked = False
         is_valid = False
     except Exception as exc:
         # to ensure security we count any kind of error as an invalidation
         # event
         if prev_is_valid:
-            metrics.incr('auth.identities.refresh_error', 1)
+            metrics.incr('auth.identities.refresh_error')
             logger.exception(
                 u'AuthIdentity(id=%s) returned an error during validation: %s',
                 auth_identity_id,
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index 6614e7853f..38a3d4a4db 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -31,12 +31,12 @@ def _capture_stats(event, is_new):
         return
 
     if is_new:
-        metrics.incr('events.unique', 1)
+        metrics.incr('events.unique')
 
-    metrics.incr('events.processed', 1)
+    metrics.incr('events.processed')
     metrics.incr('events.processed.{platform}'.format(
-        platform=platform), 1)
-    metrics.timing('events.size.data', len(unicode(event.data)))
+        platform=platform))
+    metrics.timing('events.size.data', amount=len(unicode(event.data)))
 
 
 @instrumented_task(
diff --git a/src/sentry/utils/metrics.py b/src/sentry/utils/metrics.py
index 8a4af58329..5a3cf090aa 100644
--- a/src/sentry/utils/metrics.py
+++ b/src/sentry/utils/metrics.py
@@ -51,7 +51,7 @@ def _incr_internal(key, instance=None, tags=None, amount=1):
         tsdb.incr(tsdb.models.internal, full_key, count=amount)
 
 
-def incr(key, instance=None, tags=None, amount=1):
+def incr(key, amount=1, instance=None, tags=None):
     sample_rate = settings.SENTRY_METRICS_SAMPLE_RATE
     _incr_internal(key, instance, tags, amount)
     backend.incr(key, instance, tags, amount, sample_rate)
diff --git a/src/sentry/utils/raven.py b/src/sentry/utils/raven.py
index 93a6b390d8..0aeed7e948 100644
--- a/src/sentry/utils/raven.py
+++ b/src/sentry/utils/raven.py
@@ -68,7 +68,7 @@ class SentryInternalClient(DjangoClient):
 
         helper.context.bind_project(project)
 
-        metrics.incr('events.total', 1)
+        metrics.incr('events.total')
 
         kwargs['project'] = project.id
         try:
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 3e2896f04c..5e329c0391 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -288,7 +288,7 @@ class StoreView(APIView):
         return response
 
     def process(self, request, project, auth, helper, data, **kwargs):
-        metrics.incr('events.total', 1)
+        metrics.incr('events.total')
 
         event_received.send_robust(ip=request.META['REMOTE_ADDR'], sender=type(self))
 
@@ -305,7 +305,7 @@ class StoreView(APIView):
                 (app.tsdb.models.organization_total_received, project.organization_id),
                 (app.tsdb.models.organization_total_rejected, project.organization_id),
             ])
-            metrics.incr('events.dropped', 1)
+            metrics.incr('events.dropped')
             raise APIRateLimited(rate_limit.retry_after)
         else:
             app.tsdb.incr_multi([
