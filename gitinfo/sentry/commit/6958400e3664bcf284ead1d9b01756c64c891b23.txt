commit 6958400e3664bcf284ead1d9b01756c64c891b23
Author: Max Bittker <maxbittker@gmail.com>
Date:   Wed Mar 28 15:27:53 2018 -0700

    fixes for dropdownmenu and rule builder (#7840)

diff --git a/docs-ui/components/dropdownAutoComplete.stories.js b/docs-ui/components/dropdownAutoComplete.stories.js
index 9d85d3ec75..447a0fd5e8 100644
--- a/docs-ui/components/dropdownAutoComplete.stories.js
+++ b/docs-ui/components/dropdownAutoComplete.stories.js
@@ -23,17 +23,15 @@ const items = [
 
 const groupedItems = [
   {
-    group: {
-      value: 'countries',
-      label: (
-        <div>
-          Countries{' '}
-          <a style={{float: 'right'}} href="#">
-            + Add
-          </a>
-        </div>
-      ),
-    },
+    value: 'countries',
+    label: (
+      <div>
+        Countries{' '}
+        <a style={{float: 'right'}} href="#">
+          + Add
+        </a>
+      </div>
+    ),
     items: [
       {
         value: 'new zealand',
@@ -50,10 +48,8 @@ const groupedItems = [
     ],
   },
   {
-    group: {
-      value: 'foods',
-      label: 'Foods',
-    },
+    value: 'foods',
+    label: 'Foods',
     items: [
       {
         value: 'apple',
@@ -75,7 +71,7 @@ storiesOf('DropdownAutoComplete', module)
   .add(
     'ungrouped',
     withInfo('The item label can be a component or a string')(() => (
-      <DropdownAutoComplete items={items}>
+      <DropdownAutoComplete items={items} alignMenu="left">
         {({isOpen, selectedItem}) => (selectedItem ? selectedItem.label : 'Click me!')}
       </DropdownAutoComplete>
     ))
@@ -83,7 +79,7 @@ storiesOf('DropdownAutoComplete', module)
   .add(
     'grouped',
     withInfo('Group labels can receive a component too')(() => (
-      <DropdownAutoComplete items={groupedItems}>
+      <DropdownAutoComplete items={groupedItems} alignMenu="left">
         {({isOpen, selectedItem}) => (selectedItem ? selectedItem.label : 'Click me!')}
       </DropdownAutoComplete>
     ))
@@ -91,7 +87,7 @@ storiesOf('DropdownAutoComplete', module)
   .add(
     'with dropdownButton',
     withInfo('Use it with dropdownbutton for maximum fun')(() => (
-      <DropdownAutoComplete items={groupedItems}>
+      <DropdownAutoComplete items={groupedItems} alignMenu="left">
         {({isOpen, selectedItem}) => (
           <DropdownButton isOpen={isOpen}>
             {selectedItem ? selectedItem.label : 'Click me!'}
@@ -106,6 +102,7 @@ storiesOf('DropdownAutoComplete', module)
       <DropdownAutoComplete
         items={items}
         action={<Button priority="primary">Now click me!</Button>}
+        alignMenu="left"
       >
         {({isOpen, selectedItem}) => (
           <DropdownButton isOpen={isOpen}>
diff --git a/src/sentry/static/sentry/app/components/autoComplete.jsx b/src/sentry/static/sentry/app/components/autoComplete.jsx
index 8bc56dea18..363c614ffa 100644
--- a/src/sentry/static/sentry/app/components/autoComplete.jsx
+++ b/src/sentry/static/sentry/app/components/autoComplete.jsx
@@ -185,7 +185,7 @@ class AutoComplete extends React.Component {
       onOpen(...args);
       return;
     }
-
+    this.resetHighlightState();
     this.setState({
       isOpen: true,
     });
diff --git a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
index 3db619d1b6..3fe6efeb58 100644
--- a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
@@ -153,15 +153,15 @@ class DropdownAutoCompleteMenu extends React.Component {
                   <div>
                     {menuHeader && <StyledLabel>{menuHeader}</StyledLabel>}
                     {this.autoCompleteFilter(items, inputValue).map(
-                      (item, index) =>
+                      ({index, ...item}) =>
                         item.groupLabel ? (
-                          <StyledLabel key={index}>{item.label}</StyledLabel>
+                          <StyledLabel key={item.value}>{item.label}</StyledLabel>
                         ) : (
                           <AutoCompleteItem
                             key={`${item.value}-${index}`}
                             index={index}
                             highlightedIndex={highlightedIndex}
-                            {...getItemProps({item, index: item.index})}
+                            {...getItemProps({item, index})}
                           >
                             {item.label}
                           </AutoCompleteItem>
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
index 3a222a83d2..8e9da91b1a 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
@@ -116,7 +116,7 @@ class RuleBuilder extends React.Component {
     return projectData.teams.map(team => ({
       value: buildTeamId(team.id),
       label: `#${team.slug}`,
-      searchKey: team.slug,
+      searchKey: `#${team.slug}`,
       actor: {
         type: 'team',
         id: team.id,
diff --git a/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx b/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx
index f847725535..a4b9e9f8b0 100644
--- a/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx
+++ b/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx
@@ -66,10 +66,8 @@ describe('DropdownAutoCompleteMenu', function() {
         isOpen={true}
         items={[
           {
-            group: {
-              value: 'countries',
-              label: 'countries',
-            },
+            value: 'countries',
+            label: 'countries',
             items: [
               {
                 value: 'new zealand',
@@ -86,6 +84,7 @@ describe('DropdownAutoCompleteMenu', function() {
         {({selectedItem}) => (selectedItem ? selectedItem.label : 'Click me!')}
       </DropdownAutoCompleteMenu>
     );
+
     wrapper
       .find('AutoCompleteItem')
       .last()
