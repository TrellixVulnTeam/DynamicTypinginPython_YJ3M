commit 773b530f425122a82ad418a66fe2443d6d57e7cc
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Feb 9 13:31:09 2013 -0800

    Remainder of access group pages

diff --git a/src/sentry/static/sentry/scripts/app.js b/src/sentry/static/sentry/scripts/app.js
index 418352c27d..8feb1425c9 100644
--- a/src/sentry/static/sentry/scripts/app.js
+++ b/src/sentry/static/sentry/scripts/app.js
@@ -401,6 +401,14 @@
         }
     });
 
+    app.AccessGroupProjectsPage = BasePage.extend({
+        initialize: function(data){
+            BasePage.prototype.initialize.call(this, data);
+
+            app.utils.makeSearchableProjectsInput('form input[name=project]');
+        }
+    });
+
     app.TeamDetailsPage = BasePage.extend({
         initialize: function(data){
             BasePage.prototype.initialize.call(this, data);
diff --git a/src/sentry/static/sentry/scripts/global.min.js b/src/sentry/static/sentry/scripts/global.min.js
index b77d655aa8..4128d136a0 100644
--- a/src/sentry/static/sentry/scripts/global.min.js
+++ b/src/sentry/static/sentry/scripts/global.min.js
@@ -1,2 +1,2 @@
-app=window.app={config:{},templates:{},utils:{}};(function(app,Backbone){"use strict";app.models={};app.models.Group=Backbone.Model.extend({defaults:{tags:[],versions:[],isBookmarked:false,historicalData:[]}});app.models.User=Backbone.Model.extend({defaults:{}})})(app,Backbone);(function(app){"use strict";app.templates={group:""+'<div class="count" data-count="<%= app.utils.formatNumber(count) %>"><span title="<%= count %>"><%= app.utils.formatNumber(count) %></span></div>'+'<div class="details">'+'<h3><a href="<%= permalink %>"><%= title %></a></h3>'+'<p class="message">'+"<%= message %>"+"</p>"+'<div class="meta">'+'<span class="last-seen pretty-date" title="<%= lastSeen %>"><%= app.utils.prettyDate(lastSeen) %></span>'+"<% if (timeSpent) { %>"+'<span class="time-spent"><%= Math.round(timeSpent) %>ms</span>'+"<% } %>"+'<span class="tag tag-project"><%= project.name %></span>'+'<span class="tag tag-logger"><%= logger %></span>'+"<% _.each(versions, function(version){ %> "+'<span class="tag tag-version"><%= version %></span>'+"<% }) %>"+"<% _.each(tags, function(tag){ %> "+'<span class="tag"><%= tag %></span>'+"<% }) %>"+"</div>"+'<span class="sparkline"></span>'+'<ul class="actions">'+"<% if (canResolve) { %>"+"<li>"+'<a href="#"<% if (!isResolved) { %> data-action="resolve" title="Mark as Resolved"<% } %> >'+'<i aria-hidden="true" class="icon-checkmark"></i>'+"</a>"+"</li>"+"<li>"+'<a href="#" data-action="bookmark" class="bookmark<% if (isBookmarked) { %> checked<% } %>" title="Bookmark">'+'<i aria-hidden="true" class="icon-star"></i>'+"</a>"+"</li>"+"<% } %>"+"</ul>"+"</div>"+"</script>"}})(app);(function(app,jQuery){"use strict";var $=jQuery;var time_formats=[[60,"just now","just now"],[120,"1 minute ago","1 minute from now"],[3600,"minutes",60],[7200,"1 hour ago","1 hour from now"],[86400,"hours",3600],[172800,"yesterday","tomorrow"],[604800,"days",86400],[1209600,"last week","next week"],[2419200,"weeks",604800],[4838400,"last month","next month"],[29030400,"months",2419200],[58060800,"last year","next year"],[290304e4,"years",29030400],[580608e4,"last century","next century"],[580608e5,"centuries",290304e4]];var number_formats=[[1e9,"b"],[1e6,"m"],[1e3,"k"]];app.utils={getQueryParams:function(){var vars={},href=window.location.href,hashes,hash;if(href.indexOf("?")==-1)return vars;hashes=href.slice(href.indexOf("?")+1,href.indexOf("#")!=-1?href.indexOf("#"):href.length).split("&");$.each(hashes,function(_,chunk){hash=chunk.split("=");if(!hash[0]&&!hash[1])return;vars[hash[0]]=hash[1]?decodeURIComponent(hash[1]).replace(/\+/," "):""});return vars},floatFormat:function(number,places){var multi=Math.pow(10,places);return parseInt(number*multi,10)/multi},formatNumber:function(number){var b,x,y,o,p;number=parseInt(number,10);for(var i=0;b=number_formats[i];i++){x=b[0];y=b[1];o=Math.floor(number/x);p=number%x;if(o>0){if(o/10>1||!p)return""+o+y;return""+this.floatFormat(number/x,1)+y}}return""+number},prettyDate:function(date_str){var time=Date.parse(date_str);var now=new Date;var now_utc=Date.UTC(now.getUTCFullYear(),now.getUTCMonth(),now.getUTCDate(),now.getUTCHours(),now.getUTCMinutes(),now.getUTCSeconds());var token="ago";var seconds=(now_utc-time)/1e3;var list_choice=1;if(seconds<0){seconds=Math.abs(seconds);token="from now";list_choice=2}for(var i=0,format;format=time_formats[i];i++){if(seconds<format[0]){if(typeof format[2]=="string")return format[list_choice];else return Math.floor(seconds/format[2])+" "+format[1]+" "+token}}return time},slugify:function(str){str=str.replace(/^\s+|\s+$/g,"");str=str.toLowerCase();var from="àáäâèéëêìíïîòóöôùúüûñç·/_,:;";var to="aaaaeeeeiiiioooouuuunc------";for(var i=0,l=from.length;i<l;i++){str=str.replace(new RegExp(from.charAt(i),"g"),to.charAt(i))}str=str.replace(/[^a-z0-9\s\-]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-");return str},varToggle:function(link,$elm){var $link=$(link);if(!$link.attr("data-expand-label"))$link.attr("data-expand-label",$link.html());$elm.toggle();if($elm.is(":visible"))$link.html($link.attr("data-collapse-label"));else $link.html($link.attr("data-expand-label"))},getSearchUsersUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/users/search/"},makeSearchableUsersInput:function(el){$(el).select2({allowClear:true,width:"element",initSelection:function(el,callback){var $el=$(el);callback({id:$el.val(),text:$el.val()})},ajax:{url:this.getSearchUsersUrl(),dataType:"json",data:function(term,page){return{query:term,quietMillis:300,limit:10}},results:function(data,page,context){var results=[];$(data.results).each(function(_,val){var label;if(val.first_name){label=val.first_name+" &mdash; "+val.username}else{label=val.username}label+="<br>"+val.email;results.push({id:val.username,text:label})});if($(results).filter(function(){return this.id.localeCompare(data.query)===0}).length===0){results.push({id:data.query,text:data.query})}return{results:results}}}})}};$(function(){$(".body select, .toolbar select, .project-controls select").each(function(){var $this=$(this),options={width:"element",allowClear:false};if($this.attr("data-allowClear")){options.allowClear=$this.attr("data-allowClear")}$this.select2(options)});setInterval(function(){$(".pretty-date").each(function(_,el){var $el=$(el);var title=$el.attr("title");if(title){var date=app.utils.prettyDate(title);if(date){$el.text(date)}}})},5e3)})})(app,jQuery);(function(Date,undefined){"use strict";var origParse=Date.parse,numericKeys=[1,4,5,6,7,10,11];Date.parse=function(date){var timestamp,struct,minutesOffset=0;if(struct=/^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(date)){for(var i=0,k;k=numericKeys[i];++i){struct[k]=+struct[k]||0}struct[2]=(+struct[2]||1)-1;struct[3]=+struct[3]||1;if(struct[8]!=="Z"&&struct[9]!==undefined){minutesOffset=struct[10]*60+struct[11];if(struct[9]==="+"){minutesOffset=0-minutesOffset}}timestamp=Date.UTC(struct[1],struct[2],struct[3],struct[4],struct[5]+minutesOffset,struct[6],struct[7])}else{timestamp=origParse?origParse(date):NaN}return timestamp}})(Date);(function(app,Backbone){"use strict";app.ScoredList=Backbone.Collection.extend({comparator:function(member){return-member.get("score")}})})(app,Backbone);(function(app,Backbone,jQuery,_){"use strict";var $=jQuery;app.charts={render:function(el,options){var $el=$("#chart");var url=$el.attr("data-api-url");var title=$(el).attr("data-title");var $spark=$el.find(".sparkline");$spark.height($el.height());$.ajax({url:$el.attr("data-api-url"),type:"get",dataType:"json",data:{days:$el.attr("data-days")||7,gid:$el.attr("data-group")||undefined},success:function(resp){var data=[],maxval=10;$spark.empty();$.each(resp,function(_,val){var date=new Date(val[0]);data.push({y:val[1],label:app.utils.prettyDate(date)});if(val[1]>maxval){maxval=val[1]}});app.charts.createSparkline($spark,data,options)}})},createSparkline:function(el,points,options){var $el=$(el),existing=$el.children(),maxval=10,title,point,pct,child,point_width;if(options===undefined){options={}}for(var i=0;i<points.length;i++){point=points[i];if(typeof point==="number"){point=points[i]={y:point}}if(point.y>maxval){maxval=point.y}}point_width=app.utils.floatFormat(100/points.length,2)+"%";for(i=0;i<points.length;i++){point=points[i];pct=app.utils.floatFormat(point.y/maxval*99,2)+"%";title=point.y+" events";if(point.label){title=title+"<br>("+point.label+")"}if(existing.get(i)===undefined){$('<a style="width:'+point_width+';" rel="tooltip" title="'+title+'"><span style="height:'+pct+'">'+point.y+"</span></a>").tooltip({placement:options.placement||"bottom"}).appendTo($el)}else{$(existing[i]).find("span").css("height",pct).text(point.y).attr("title",point.label||point.y)}}}}})(app,Backbone,jQuery);(function(app,Backbone,jQuery,_){"use strict";var $=jQuery;app.GroupView=Backbone.View.extend({tagName:"li",className:"group",template:_.template(app.templates.group),initialize:function(){_.bindAll(this);this.model.on("change:count",this.updateCount);this.model.on("change:lastSeen",this.updateLastSeen);this.model.on("change:isBookmarked",this.render);this.model.on("change:isResolved",this.render);this.model.on("change:historicalData",this.renderSparkline)},render:function(){var data=this.model.toJSON();this.$el.html(this.template(data));this.$el.attr("data-id",this.model.id);this.$el.addClass(this.getLevelClassName());if(this.model.get("isResolved")){this.$el.addClass("resolved")}this.$el.find("a[data-action=resolve]").click(_.bind(function(e){e.preventDefault();this.resolve()},this));this.$el.find("a[data-action=bookmark]").click(_.bind(function(e){e.preventDefault();this.bookmark()},this));this.renderSparkline()},renderSparkline:function(obj){var data=this.model.get("historicalData");if(!data||!data.length)return;this.$el.addClass("with-sparkline");app.charts.createSparkline(this.$el.find(".sparkline"),data)},getResolveUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/resolve/"},resolve:function(){$.ajax({url:this.getResolveUrl(),type:"post",dataType:"json",data:{gid:this.model.get("id")},success:_.bind(function(response){this.model.set("isResolved",true)},this)})},getBookmarkUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/bookmark/"},bookmark:function(){$.ajax({url:this.getBookmarkUrl(),type:"post",dataType:"json",data:{gid:this.model.get("id")},success:_.bind(function(response){this.model.set("isBookmarked",response.isBookmarked)},this)})},getLevelClassName:function(){return"level-"+this.model.get("levelName")},updateLastSeen:function(){this.$el.find(".last-seen").text(app.utils.prettyDate(this.model.get("lastSeen"))).attr("title",this.model.get("lastSeen"))},updateCount:function(){var new_count=app.utils.formatNumber(this.model.get("count"));var counter=this.$el.find(".count");var digit=counter.find("span");if(digit.is(":animated"))return false;if(counter.data("count")==new_count){return false}counter.data("count",new_count);var replacement=$("<span></span>",{css:{top:"-2.1em",opacity:0},text:new_count});digit.before(replacement).animate({top:"2.5em",opacity:0},"fast",function(){digit.remove()});replacement.delay(100).animate({top:0,opacity:1},"fast")}});app.OrderedElementsView=Backbone.View.extend({emptyMessage:"<p>There is nothing to show here.</p>",loadingMessage:"<p>Loading...</p>",model:app.models.Group,defaults:{maxItems:50},initialize:function(data){var members=data.members;_.bindAll(this);this.options=$.extend({},this.defaults,this.options,data);this.$wrapper=$("#"+this.id);this.$parent=$("<ul></ul>");this.$empty=$('<li class="empty"></li>');this.$wrapper.html(this.$parent);if(this.options.className)this.$parent.addClass(this.options.className);this.collection=new app.ScoredList;this.collection.on("add",this.renderMemberInContainer);this.collection.on("remove",this.unrenderMember);this.collection.on("reset",this.reSortMembers);delete data.members;this.reset(members)},reset:function(members){this.$parent.empty();this.setEmpty();if(members===undefined){this.$empty.html(this.loadingMessage);this.collection.reset();this.setEmpty();this.loaded=false}else{this.$empty.html(this.emptyMessage);this.collection.reset(members);this.loaded=true}},setEmpty:function(){this.$parent.html(this.$empty)},extend:function(data){for(var i=0;i<data.length;i++){this.addMember(data[i])}},addMember:function(member){if(member.get===undefined){member=new this.model(member)}if(!this.hasMember(member)){if(this.collection.models.length>=this.options.maxItems-1)if(member.get("score")<this.collection.last().get("score"))return;while(this.collection.models.length>=this.options.maxItems)this.collection.pop();this.collection.add(member)}else{this.updateMember(member)}},reSortMembers:function(){this.collection.each(_.bind(function(member){this.renderMemberInContainer(member)},this))},updateMember:function(member,options){if(_.isUndefined(options))options={};var existing=this.collection.get(member.id);for(var key in member.attributes){if(existing.get(key)!=member.get(key)){existing.set(key,member.get(key))}}if(options.sort!==false){this.collection.sort()}},hasMember:function(member){return this.collection.get(member.id)?true:false},removeMember:function(member){this.collection.remove(member)},renderMemberInContainer:function(member){var new_pos=this.collection.indexOf(member),$el,$rel;this.$parent.find("li.empty").remove();$el=$("#"+this.id+member.id);if(!$el.length){$el=this.renderMember(member)}else if($el.index()===new_pos){return}if(new_pos===0){this.$parent.prepend($el)}else{$rel=$("#"+this.id+this.collection.at(new_pos).id);if(!$rel.length){this.$parent.append($el)}else if($el.id!==$rel.id){$el.insertBefore($rel)}else{return}}if(this.loaded)$el.css("background-color","#eee").animate({backgroundColor:"#fff"},1200)},renderMember:function(member){var view=new app.GroupView({model:member,id:this.id+member.id});view.render();return view.$el},unrenderMember:function(member){$("#"+this.id+member.id).remove();if(!this.$parent.find("li").length)this.setEmpty()}});app.GroupListView=app.OrderedElementsView.extend({defaults:{realtime:false,stream:false,pollUrl:null,pollTime:1e3,tickTime:100},initialize:function(data){if(_.isUndefined(data))data={};data.model=app.models.Group;app.OrderedElementsView.prototype.initialize.call(this,data);this.options=$.extend({},this.defaults,this.options,data);this.queue=new app.ScoredList;this.cursor=null;this.poll();window.setInterval(this.tick,this.options.tickTime)},tick:function(){if(!this.queue.length)return;var item=this.queue.pop();if(this.options.canStream){this.addMember(item)}else if(this.hasMember(item)){this.updateMember(item,{sort:false})}},poll:function(){var data;if(!this.options.realtime||!this.options.pollUrl)return window.setTimeout(this.poll,this.options.pollTime);data=app.utils.getQueryParams();data.cursor=this.cursor||undefined;$.ajax({url:this.options.pollUrl,type:"get",dataType:"json",data:data,success:_.bind(function(groups){var i,data,obj;if(!groups.length)return setTimeout(this.poll,this.options.pollTime*5);this.cursor=groups[groups.length-1].score||undefined;for(i=0;data=groups[i];i+=1){obj=this.queue.get(data.id);if(!_.isUndefined(obj)){obj.set("count",data.count);obj.set("score",data.score);this.queue.sort()}else{this.queue.add(data)}}window.setTimeout(this.poll,this.options.pollTime)},this),error:_.bind(function(){window.setTimeout(this.poll,this.options.pollTime*10)},this)})}});app.UserListView=app.OrderedElementsView.extend({defaults:{},initialize:function(data){if(_.isUndefined(data))data={};data.model=app.User;app.OrderedElementsView.prototype.initialize.call(this,data);this.options=$.extend({},this.defaults,this.options,data)}})})(app,Backbone,jQuery,_);(function(window,app,Backbone,jQuery,_){"use strict";var $=jQuery;var BasePage=Backbone.View.extend({defaults:{canStream:false,realtime:false},initialize:function(data){_.bindAll(this);if(_.isUndefined(data))data={};this.options=$.extend({},this.defaults,this.options,data);this.views={};this.initializeAjaxTabs()},initializeAjaxTabs:function(){$("a[data-toggle=ajtab]").click(_.bind(function(e){var $tab=$(e.target),uri=$tab.attr("data-uri"),view_id=$tab.attr("href").substr(1),view=this.getView(view_id,uri),$cont,$parent;e.preventDefault();if(!uri)return view.reset();$cont=$("#"+view_id);$parent=$cont.parent();$parent.css("opacity",.6);$.ajax({url:uri,dataType:"json",success:function(data){view.reset(data);$parent.css("opacity",1);$tab.tab("show")},error:function(){$cont.html("<p>There was an error fetching data from the server.</p>")}})},this));$("li.active a[data-toggle=ajtab]").click()},makeDefaultView:function(id){return new app.GroupListView({className:"group-list small",id:id,maxItems:5,stream:this.options.stream,realtime:this.options.realtime,model:app.models.Group})},getView:function(id,uri){if(!this.views[id])this.views[id]=this.makeDefaultView(id);var view=this.views[id];view.options.pollUrl=uri;return view}});app.StreamPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);this.group_list=new app.GroupListView({className:"group-list",id:"event_list",members:data.groups,maxItems:50,realtime:$.cookie("pausestream")?false:true,canStream:this.options.canStream,pollUrl:app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/poll/",model:app.models.Group});this.control=$("a[data-action=pause]");this.updateStreamOptions();this.initFilters();this.control.click(_.bind(function(e){e.preventDefault();this.options.realtime=this.group_list.options.realtime=this.control.hasClass("realtime-pause");this.updateStreamOptions()},this));$("#chart").height("50px");app.charts.render("#chart",{placement:"left"})},initFilters:function(){$(".filter").each(function(_,el){var $filter=$(el);var $input=$filter.find("input[type=text]");if($input.length>0){$input.select2({initSelection:function(el,callback){var $el=$(el);callback({id:$el.val(),text:$el.val()})},allowClear:true,minimumInputLength:3,ajax:{url:this.getSearchTagsUrl(),dataType:"json",data:function(term,page){return{query:term,quietMillis:300,name:$input.attr("name"),limit:10}},results:function(data,page){var results=[];$(data.results).each(function(_,val){results.push({id:val,text:val})});return{results:results}}}})}else{$input=$filter.find("select").select2({allowClear:true})}if($input.length>0){$input.on("change",function(e){var query=app.utils.getQueryParams();query[e.target.name]=e.val;window.location.href="?"+$.param(query)})}})},updateStreamOptions:function(){if(this.options.realtime){$.removeCookie("pausestream");this.control.removeClass("realtime-pause");this.control.addClass("realtime-play");this.control.html(this.control.attr("data-pause-label"))}else{$.cookie("pausestream","1",{expires:7});this.control.addClass("realtime-pause");this.control.removeClass("realtime-play");this.control.html(this.control.attr("data-play-label"))}},getSearchTagsUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/tags/search/"}});app.DashboardPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);$("#chart").height("150px");Sentry.charts.render("#chart")}});app.GroupDetailsPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);this.group_list=new app.GroupListView({className:"group-list",id:"event_list",members:[data.group],model:app.models.Group});$("#chart").height("150px");Sentry.charts.render("#chart");$("#public-status .action").click(function(){var $this=$(this);$.ajax({url:$this.attr("data-api-url"),type:"post",success:function(group){var selector=group.isPublic?"true":"false";var nselector=group.isPublic?"false":"true";$('#public-status span[data-public="'+selector+'"]').show();$('#public-status span[data-public="'+nselector+'"]').hide()},error:function(){window.alert("There was an error changing the public status")}})});var $event_nav=$("#event_nav");if($event_nav.length>0){var $window=$(window);var $nav_links=$event_nav.find("a[href*=#]");var $nav_targets=[];var scroll_offset=$event_nav.offset().top;var event_nav_height;var last_target;$nav_links.click(function(e){var $el=$(this);var target=$(this.hash);$el.parent().addClass("active").siblings().removeClass("active");$("html,body").animate({scrollTop:$(target).position().top+event_nav_height},"fast");e.preventDefault()}).each(function(){if(this.hash.length>1&&$(this.hash).length){$nav_targets.push(this.hash)}});$window.resize(function(){event_nav_height=$event_nav.find(".nav").outerHeight();$event_nav.height(event_nav_height+"px")}).resize();$window.scroll(function(){if($window.scrollTop()>scroll_offset){if(!$event_nav.hasClass("fixed")){$event_nav.addClass("fixed")}}else if($event_nav.hasClass("fixed")){$event_nav.removeClass("fixed")}if($nav_targets.length){var from_top=$window.scrollTop()+event_nav_height+20;var cur=$.map($nav_targets,function(hash){if($(hash).offset().top<from_top){return hash}});var target=cur?cur[cur.length-1]:null;if(!target){target=$nav_targets[0]}if(last_target!==target){last_target=target;$nav_links.parent().removeClass("active").end().filter("[href="+target+"]").parent().addClass("active")}}}).scroll()}}});app.WallPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.call(this,{realtime:true,pollTime:3e3});this.sparkline=$(".chart");this.sparkline.height(this.sparkline.parent().height());this.stats=$("#stats");this.refreshSparkline();this.refreshStats()},refreshSparkline:function(){$.ajax({url:this.sparkline.attr("data-api-url"),type:"get",dataType:"json",data:{days:1,gid:this.sparkline.attr("data-group")||undefined},success:_.bind(function(data){$.plot(this.sparkline,[{data:data,color:"#52566c",shadowSize:0,lines:{lineWidth:2,show:true,fill:true,fillColor:"#232428"}}],{yaxis:{min:0},grid:{show:false},hoverable:false,legend:{noColumns:5},lines:{show:false}})},this)})},refreshStats:function(){$.ajax({url:this.stats.attr("data-uri"),dataType:"json",success:_.bind(function(data){this.stats.find("[data-stat]").each(function(){var $this=$(this);$this.find("big").text(data[$this.attr("data-stat")])});window.setTimeout(this.refreshStats,1e3)},this)})}});app.UserListPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);this.list=new app.UserListView({className:"user-list",id:"user_list",members:data.users})}});app.AddTeamMemberPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);app.utils.makeSearchableUsersInput("form input[name=add-user]")}});app.AccessGroupMembersPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);app.utils.makeSearchableUsersInput("form input[name=user]")}});app.TeamDetailsPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);app.utils.makeSearchableUsersInput("form input[name=owner]")}});app.ProjectDetailsPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);app.utils.makeSearchableUsersInput("form input[name=owner]")}});app.NewProjectPage=BasePage.extend({initialize:function(data){this.el=$(data.el);BasePage.prototype.initialize.call(this,data);if(this.options.canSelectTeam&&this.options.canCreateTeam){$("#new_team").hide();$('a[rel="create-new-team"]').click(function(){$("#new_team").show();$("#select_team").hide()});$('a[rel="select-team"]').click(function(){$("#new_team").hide();$("#select_team").show()})}}});Backbone.sync=function(method,model,success,error){success()}})(window,app,Backbone,jQuery,_);
+app=window.app={config:{},templates:{},utils:{}};(function(app,Backbone){"use strict";app.models={};app.models.Group=Backbone.Model.extend({defaults:{tags:[],versions:[],isBookmarked:false,historicalData:[]}});app.models.User=Backbone.Model.extend({defaults:{}})})(app,Backbone);(function(app){"use strict";app.templates={group:""+'<div class="count" data-count="<%= app.utils.formatNumber(count) %>"><span title="<%= count %>"><%= app.utils.formatNumber(count) %></span></div>'+'<div class="details">'+'<h3><a href="<%= permalink %>"><%= title %></a></h3>'+'<p class="message">'+"<%= message %>"+"</p>"+'<div class="meta">'+'<span class="last-seen pretty-date" title="<%= lastSeen %>"><%= app.utils.prettyDate(lastSeen) %></span>'+"<% if (timeSpent) { %>"+'<span class="time-spent"><%= Math.round(timeSpent) %>ms</span>'+"<% } %>"+'<span class="tag tag-project"><%= project.name %></span>'+'<span class="tag tag-logger"><%= logger %></span>'+"<% _.each(versions, function(version){ %> "+'<span class="tag tag-version"><%= version %></span>'+"<% }) %>"+"<% _.each(tags, function(tag){ %> "+'<span class="tag"><%= tag %></span>'+"<% }) %>"+"</div>"+'<span class="sparkline"></span>'+'<ul class="actions">'+"<% if (canResolve) { %>"+"<li>"+'<a href="#"<% if (!isResolved) { %> data-action="resolve" title="Mark as Resolved"<% } %> >'+'<i aria-hidden="true" class="icon-checkmark"></i>'+"</a>"+"</li>"+"<li>"+'<a href="#" data-action="bookmark" class="bookmark<% if (isBookmarked) { %> checked<% } %>" title="Bookmark">'+'<i aria-hidden="true" class="icon-star"></i>'+"</a>"+"</li>"+"<% } %>"+"</ul>"+"</div>"+"</script>"}})(app);(function(app,jQuery){"use strict";var $=jQuery;var time_formats=[[60,"just now","just now"],[120,"1 minute ago","1 minute from now"],[3600,"minutes",60],[7200,"1 hour ago","1 hour from now"],[86400,"hours",3600],[172800,"yesterday","tomorrow"],[604800,"days",86400],[1209600,"last week","next week"],[2419200,"weeks",604800],[4838400,"last month","next month"],[29030400,"months",2419200],[58060800,"last year","next year"],[290304e4,"years",29030400],[580608e4,"last century","next century"],[580608e5,"centuries",290304e4]];var number_formats=[[1e9,"b"],[1e6,"m"],[1e3,"k"]];app.utils={getQueryParams:function(){var vars={},href=window.location.href,hashes,hash;if(href.indexOf("?")==-1)return vars;hashes=href.slice(href.indexOf("?")+1,href.indexOf("#")!=-1?href.indexOf("#"):href.length).split("&");$.each(hashes,function(_,chunk){hash=chunk.split("=");if(!hash[0]&&!hash[1])return;vars[hash[0]]=hash[1]?decodeURIComponent(hash[1]).replace(/\+/," "):""});return vars},floatFormat:function(number,places){var multi=Math.pow(10,places);return parseInt(number*multi,10)/multi},formatNumber:function(number){var b,x,y,o,p;number=parseInt(number,10);for(var i=0;b=number_formats[i];i++){x=b[0];y=b[1];o=Math.floor(number/x);p=number%x;if(o>0){if(o/10>1||!p)return""+o+y;return""+this.floatFormat(number/x,1)+y}}return""+number},prettyDate:function(date_str){var time=Date.parse(date_str);var now=new Date;var now_utc=Date.UTC(now.getUTCFullYear(),now.getUTCMonth(),now.getUTCDate(),now.getUTCHours(),now.getUTCMinutes(),now.getUTCSeconds());var token="ago";var seconds=(now_utc-time)/1e3;var list_choice=1;if(seconds<0){seconds=Math.abs(seconds);token="from now";list_choice=2}for(var i=0,format;format=time_formats[i];i++){if(seconds<format[0]){if(typeof format[2]=="string")return format[list_choice];else return Math.floor(seconds/format[2])+" "+format[1]+" "+token}}return time},slugify:function(str){str=str.replace(/^\s+|\s+$/g,"");str=str.toLowerCase();var from="àáäâèéëêìíïîòóöôùúüûñç·/_,:;";var to="aaaaeeeeiiiioooouuuunc------";for(var i=0,l=from.length;i<l;i++){str=str.replace(new RegExp(from.charAt(i),"g"),to.charAt(i))}str=str.replace(/[^a-z0-9\s\-]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-");return str},varToggle:function(link,$elm){var $link=$(link);if(!$link.attr("data-expand-label"))$link.attr("data-expand-label",$link.html());$elm.toggle();if($elm.is(":visible"))$link.html($link.attr("data-collapse-label"));else $link.html($link.attr("data-expand-label"))},getSearchUsersUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/users/search/"},getSearchProjectsUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/projects/search/"},makeSearchableInput:function(el,url,callback){$(el).select2({allowClear:true,width:"element",initSelection:function(el,callback){var $el=$(el);callback({id:$el.val(),text:$el.val()})},ajax:{url:url,dataType:"json",data:function(term,page){return{query:term,limit:10}},results:function(data,page){var results=callback(data);return{results:callback(data)}}}})},makeSearchableUsersInput:function(el){this.makeSearchableInput(el,this.getSearchUsersUrl(),function(data){var results=[];$(data.results).each(function(_,val){var label;if(val.first_name){label=val.first_name+" &mdash; "+val.username}else{label=val.username}label+="<br>"+val.email;results.push({id:val.username,text:label})});if($(results).filter(function(){return this.id.localeCompare(data.query)===0}).length===0){results.push({id:data.query,text:data.query})}return results})},makeSearchableProjectsInput:function(el){this.makeSearchableInput(el,this.getSearchProjectsUrl(),function(data){var results=[];$(data.results).each(function(_,val){results.push({id:val.slug,text:val.name+"<br>"+val.slug})});return results})}};$(function(){$(".body select, .toolbar select, .project-controls select").each(function(){var $this=$(this),options={width:"element",allowClear:false};if($this.attr("data-allowClear")){options.allowClear=$this.attr("data-allowClear")}$this.select2(options)});setInterval(function(){$(".pretty-date").each(function(_,el){var $el=$(el);var title=$el.attr("title");if(title){var date=app.utils.prettyDate(title);if(date){$el.text(date)}}})},5e3)})})(app,jQuery);(function(Date,undefined){"use strict";var origParse=Date.parse,numericKeys=[1,4,5,6,7,10,11];Date.parse=function(date){var timestamp,struct,minutesOffset=0;if(struct=/^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(date)){for(var i=0,k;k=numericKeys[i];++i){struct[k]=+struct[k]||0}struct[2]=(+struct[2]||1)-1;struct[3]=+struct[3]||1;if(struct[8]!=="Z"&&struct[9]!==undefined){minutesOffset=struct[10]*60+struct[11];if(struct[9]==="+"){minutesOffset=0-minutesOffset}}timestamp=Date.UTC(struct[1],struct[2],struct[3],struct[4],struct[5]+minutesOffset,struct[6],struct[7])}else{timestamp=origParse?origParse(date):NaN}return timestamp}})(Date);(function(app,Backbone){"use strict";app.ScoredList=Backbone.Collection.extend({comparator:function(member){return-member.get("score")}})})(app,Backbone);(function(app,Backbone,jQuery,_){"use strict";var $=jQuery;app.charts={render:function(el,options){var $el=$("#chart");var url=$el.attr("data-api-url");var title=$(el).attr("data-title");var $spark=$el.find(".sparkline");$spark.height($el.height());$.ajax({url:$el.attr("data-api-url"),type:"get",dataType:"json",data:{days:$el.attr("data-days")||7,gid:$el.attr("data-group")||undefined},success:function(resp){var data=[],maxval=10;$spark.empty();$.each(resp,function(_,val){var date=new Date(val[0]);data.push({y:val[1],label:app.utils.prettyDate(date)});if(val[1]>maxval){maxval=val[1]}});app.charts.createSparkline($spark,data,options)}})},createSparkline:function(el,points,options){var $el=$(el),existing=$el.children(),maxval=10,title,point,pct,child,point_width;if(options===undefined){options={}}for(var i=0;i<points.length;i++){point=points[i];if(typeof point==="number"){point=points[i]={y:point}}if(point.y>maxval){maxval=point.y}}point_width=app.utils.floatFormat(100/points.length,2)+"%";for(i=0;i<points.length;i++){point=points[i];pct=app.utils.floatFormat(point.y/maxval*99,2)+"%";title=point.y+" events";if(point.label){title=title+"<br>("+point.label+")"}if(existing.get(i)===undefined){$('<a style="width:'+point_width+';" rel="tooltip" title="'+title+'"><span style="height:'+pct+'">'+point.y+"</span></a>").tooltip({placement:options.placement||"bottom"}).appendTo($el)}else{$(existing[i]).find("span").css("height",pct).text(point.y).attr("title",point.label||point.y)}}}}})(app,Backbone,jQuery);(function(app,Backbone,jQuery,_){"use strict";var $=jQuery;app.GroupView=Backbone.View.extend({tagName:"li",className:"group",template:_.template(app.templates.group),initialize:function(){_.bindAll(this);this.model.on("change:count",this.updateCount);this.model.on("change:lastSeen",this.updateLastSeen);this.model.on("change:isBookmarked",this.render);this.model.on("change:isResolved",this.render);this.model.on("change:historicalData",this.renderSparkline)},render:function(){var data=this.model.toJSON();this.$el.html(this.template(data));this.$el.attr("data-id",this.model.id);this.$el.addClass(this.getLevelClassName());if(this.model.get("isResolved")){this.$el.addClass("resolved")}this.$el.find("a[data-action=resolve]").click(_.bind(function(e){e.preventDefault();this.resolve()},this));this.$el.find("a[data-action=bookmark]").click(_.bind(function(e){e.preventDefault();this.bookmark()},this));this.renderSparkline()},renderSparkline:function(obj){var data=this.model.get("historicalData");if(!data||!data.length)return;this.$el.addClass("with-sparkline");app.charts.createSparkline(this.$el.find(".sparkline"),data)},getResolveUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/resolve/"},resolve:function(){$.ajax({url:this.getResolveUrl(),type:"post",dataType:"json",data:{gid:this.model.get("id")},success:_.bind(function(response){this.model.set("isResolved",true)},this)})},getBookmarkUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/bookmark/"},bookmark:function(){$.ajax({url:this.getBookmarkUrl(),type:"post",dataType:"json",data:{gid:this.model.get("id")},success:_.bind(function(response){this.model.set("isBookmarked",response.isBookmarked)},this)})},getLevelClassName:function(){return"level-"+this.model.get("levelName")},updateLastSeen:function(){this.$el.find(".last-seen").text(app.utils.prettyDate(this.model.get("lastSeen"))).attr("title",this.model.get("lastSeen"))},updateCount:function(){var new_count=app.utils.formatNumber(this.model.get("count"));var counter=this.$el.find(".count");var digit=counter.find("span");if(digit.is(":animated"))return false;if(counter.data("count")==new_count){return false}counter.data("count",new_count);var replacement=$("<span></span>",{css:{top:"-2.1em",opacity:0},text:new_count});digit.before(replacement).animate({top:"2.5em",opacity:0},"fast",function(){digit.remove()});replacement.delay(100).animate({top:0,opacity:1},"fast")}});app.OrderedElementsView=Backbone.View.extend({emptyMessage:"<p>There is nothing to show here.</p>",loadingMessage:"<p>Loading...</p>",model:app.models.Group,defaults:{maxItems:50},initialize:function(data){var members=data.members;_.bindAll(this);this.options=$.extend({},this.defaults,this.options,data);this.$wrapper=$("#"+this.id);this.$parent=$("<ul></ul>");this.$empty=$('<li class="empty"></li>');this.$wrapper.html(this.$parent);if(this.options.className)this.$parent.addClass(this.options.className);this.collection=new app.ScoredList;this.collection.on("add",this.renderMemberInContainer);this.collection.on("remove",this.unrenderMember);this.collection.on("reset",this.reSortMembers);delete data.members;this.reset(members)},reset:function(members){this.$parent.empty();this.setEmpty();if(members===undefined){this.$empty.html(this.loadingMessage);this.collection.reset();this.setEmpty();this.loaded=false}else{this.$empty.html(this.emptyMessage);this.collection.reset(members);this.loaded=true}},setEmpty:function(){this.$parent.html(this.$empty)},extend:function(data){for(var i=0;i<data.length;i++){this.addMember(data[i])}},addMember:function(member){if(member.get===undefined){member=new this.model(member)}if(!this.hasMember(member)){if(this.collection.models.length>=this.options.maxItems-1)if(member.get("score")<this.collection.last().get("score"))return;while(this.collection.models.length>=this.options.maxItems)this.collection.pop();this.collection.add(member)}else{this.updateMember(member)}},reSortMembers:function(){this.collection.each(_.bind(function(member){this.renderMemberInContainer(member)},this))},updateMember:function(member,options){if(_.isUndefined(options))options={};var existing=this.collection.get(member.id);for(var key in member.attributes){if(existing.get(key)!=member.get(key)){existing.set(key,member.get(key))}}if(options.sort!==false){this.collection.sort()}},hasMember:function(member){return this.collection.get(member.id)?true:false},removeMember:function(member){this.collection.remove(member)},renderMemberInContainer:function(member){var new_pos=this.collection.indexOf(member),$el,$rel;this.$parent.find("li.empty").remove();$el=$("#"+this.id+member.id);if(!$el.length){$el=this.renderMember(member)}else if($el.index()===new_pos){return}if(new_pos===0){this.$parent.prepend($el)}else{$rel=$("#"+this.id+this.collection.at(new_pos).id);if(!$rel.length){this.$parent.append($el)}else if($el.id!==$rel.id){$el.insertBefore($rel)}else{return}}if(this.loaded)$el.css("background-color","#eee").animate({backgroundColor:"#fff"},1200)},renderMember:function(member){var view=new app.GroupView({model:member,id:this.id+member.id});view.render();return view.$el},unrenderMember:function(member){$("#"+this.id+member.id).remove();if(!this.$parent.find("li").length)this.setEmpty()}});app.GroupListView=app.OrderedElementsView.extend({defaults:{realtime:false,stream:false,pollUrl:null,pollTime:1e3,tickTime:100},initialize:function(data){if(_.isUndefined(data))data={};data.model=app.models.Group;app.OrderedElementsView.prototype.initialize.call(this,data);this.options=$.extend({},this.defaults,this.options,data);this.queue=new app.ScoredList;this.cursor=null;this.poll();window.setInterval(this.tick,this.options.tickTime)},tick:function(){if(!this.queue.length)return;var item=this.queue.pop();if(this.options.canStream){this.addMember(item)}else if(this.hasMember(item)){this.updateMember(item,{sort:false})}},poll:function(){var data;if(!this.options.realtime||!this.options.pollUrl)return window.setTimeout(this.poll,this.options.pollTime);data=app.utils.getQueryParams();data.cursor=this.cursor||undefined;$.ajax({url:this.options.pollUrl,type:"get",dataType:"json",data:data,success:_.bind(function(groups){var i,data,obj;if(!groups.length)return setTimeout(this.poll,this.options.pollTime*5);this.cursor=groups[groups.length-1].score||undefined;for(i=0;data=groups[i];i+=1){obj=this.queue.get(data.id);if(!_.isUndefined(obj)){obj.set("count",data.count);obj.set("score",data.score);this.queue.sort()}else{this.queue.add(data)}}window.setTimeout(this.poll,this.options.pollTime)},this),error:_.bind(function(){window.setTimeout(this.poll,this.options.pollTime*10)},this)})}});app.UserListView=app.OrderedElementsView.extend({defaults:{},initialize:function(data){if(_.isUndefined(data))data={};data.model=app.User;app.OrderedElementsView.prototype.initialize.call(this,data);this.options=$.extend({},this.defaults,this.options,data)}})})(app,Backbone,jQuery,_);(function(window,app,Backbone,jQuery,_){"use strict";var $=jQuery;var BasePage=Backbone.View.extend({defaults:{canStream:false,realtime:false},initialize:function(data){_.bindAll(this);if(_.isUndefined(data))data={};this.options=$.extend({},this.defaults,this.options,data);this.views={};this.initializeAjaxTabs()},initializeAjaxTabs:function(){$("a[data-toggle=ajtab]").click(_.bind(function(e){var $tab=$(e.target),uri=$tab.attr("data-uri"),view_id=$tab.attr("href").substr(1),view=this.getView(view_id,uri),$cont,$parent;e.preventDefault();if(!uri)return view.reset();$cont=$("#"+view_id);$parent=$cont.parent();$parent.css("opacity",.6);$.ajax({url:uri,dataType:"json",success:function(data){view.reset(data);$parent.css("opacity",1);$tab.tab("show")},error:function(){$cont.html("<p>There was an error fetching data from the server.</p>")}})},this));$("li.active a[data-toggle=ajtab]").click()},makeDefaultView:function(id){return new app.GroupListView({className:"group-list small",id:id,maxItems:5,stream:this.options.stream,realtime:this.options.realtime,model:app.models.Group})},getView:function(id,uri){if(!this.views[id])this.views[id]=this.makeDefaultView(id);var view=this.views[id];view.options.pollUrl=uri;return view}});app.StreamPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);this.group_list=new app.GroupListView({className:"group-list",id:"event_list",members:data.groups,maxItems:50,realtime:$.cookie("pausestream")?false:true,canStream:this.options.canStream,pollUrl:app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/poll/",model:app.models.Group});this.control=$("a[data-action=pause]");this.updateStreamOptions();this.initFilters();this.control.click(_.bind(function(e){e.preventDefault();this.options.realtime=this.group_list.options.realtime=this.control.hasClass("realtime-pause");this.updateStreamOptions()},this));$("#chart").height("50px");app.charts.render("#chart",{placement:"left"})},initFilters:function(){$(".filter").each(function(_,el){var $filter=$(el);var $input=$filter.find("input[type=text]");if($input.length>0){$input.select2({initSelection:function(el,callback){var $el=$(el);callback({id:$el.val(),text:$el.val()})},allowClear:true,minimumInputLength:3,ajax:{url:this.getSearchTagsUrl(),dataType:"json",data:function(term,page){return{query:term,quietMillis:300,name:$input.attr("name"),limit:10}},results:function(data,page){var results=[];$(data.results).each(function(_,val){results.push({id:val,text:val})});return{results:results}}}})}else{$input=$filter.find("select").select2({allowClear:true})}if($input.length>0){$input.on("change",function(e){var query=app.utils.getQueryParams();query[e.target.name]=e.val;window.location.href="?"+$.param(query)})}})},updateStreamOptions:function(){if(this.options.realtime){$.removeCookie("pausestream");this.control.removeClass("realtime-pause");this.control.addClass("realtime-play");this.control.html(this.control.attr("data-pause-label"))}else{$.cookie("pausestream","1",{expires:7});this.control.addClass("realtime-pause");this.control.removeClass("realtime-play");this.control.html(this.control.attr("data-play-label"))}},getSearchTagsUrl:function(){return app.config.urlPrefix+"/api/"+app.config.teamId+"/"+app.config.projectId+"/tags/search/"}});app.DashboardPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);$("#chart").height("150px");Sentry.charts.render("#chart")}});app.GroupDetailsPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);this.group_list=new app.GroupListView({className:"group-list",id:"event_list",members:[data.group],model:app.models.Group});$("#chart").height("150px");Sentry.charts.render("#chart");$("#public-status .action").click(function(){var $this=$(this);$.ajax({url:$this.attr("data-api-url"),type:"post",success:function(group){var selector=group.isPublic?"true":"false";var nselector=group.isPublic?"false":"true";$('#public-status span[data-public="'+selector+'"]').show();$('#public-status span[data-public="'+nselector+'"]').hide()},error:function(){window.alert("There was an error changing the public status")}})});var $event_nav=$("#event_nav");if($event_nav.length>0){var $window=$(window);var $nav_links=$event_nav.find("a[href*=#]");var $nav_targets=[];var scroll_offset=$event_nav.offset().top;var event_nav_height;var last_target;$nav_links.click(function(e){var $el=$(this);var target=$(this.hash);$el.parent().addClass("active").siblings().removeClass("active");$("html,body").animate({scrollTop:$(target).position().top+event_nav_height},"fast");e.preventDefault()}).each(function(){if(this.hash.length>1&&$(this.hash).length){$nav_targets.push(this.hash)}});$window.resize(function(){event_nav_height=$event_nav.find(".nav").outerHeight();$event_nav.height(event_nav_height+"px")}).resize();$window.scroll(function(){if($window.scrollTop()>scroll_offset){if(!$event_nav.hasClass("fixed")){$event_nav.addClass("fixed")}}else if($event_nav.hasClass("fixed")){$event_nav.removeClass("fixed")}if($nav_targets.length){var from_top=$window.scrollTop()+event_nav_height+20;var cur=$.map($nav_targets,function(hash){if($(hash).offset().top<from_top){return hash}});var target=cur?cur[cur.length-1]:null;if(!target){target=$nav_targets[0]}if(last_target!==target){last_target=target;$nav_links.parent().removeClass("active").end().filter("[href="+target+"]").parent().addClass("active")}}}).scroll()}}});app.WallPage=BasePage.extend({initialize:function(){BasePage.prototype.initialize.call(this,{realtime:true,pollTime:3e3});this.sparkline=$(".chart");this.sparkline.height(this.sparkline.parent().height());this.stats=$("#stats");this.refreshSparkline();this.refreshStats()},refreshSparkline:function(){$.ajax({url:this.sparkline.attr("data-api-url"),type:"get",dataType:"json",data:{days:1,gid:this.sparkline.attr("data-group")||undefined},success:_.bind(function(data){$.plot(this.sparkline,[{data:data,color:"#52566c",shadowSize:0,lines:{lineWidth:2,show:true,fill:true,fillColor:"#232428"}}],{yaxis:{min:0},grid:{show:false},hoverable:false,legend:{noColumns:5},lines:{show:false}})},this)})},refreshStats:function(){$.ajax({url:this.stats.attr("data-uri"),dataType:"json",success:_.bind(function(data){this.stats.find("[data-stat]").each(function(){var $this=$(this);$this.find("big").text(data[$this.attr("data-stat")])});window.setTimeout(this.refreshStats,1e3)},this)})}});app.UserListPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);this.list=new app.UserListView({className:"user-list",id:"user_list",members:data.users})}});app.AddTeamMemberPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);app.utils.makeSearchableUsersInput("form input[name=add-user]")}});app.AccessGroupMembersPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);app.utils.makeSearchableUsersInput("form input[name=user]")}});app.AccessGroupProjectsPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);app.utils.makeSearchableProjectsInput("form input[name=project]")}});app.TeamDetailsPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);app.utils.makeSearchableUsersInput("form input[name=owner]")}});app.ProjectDetailsPage=BasePage.extend({initialize:function(data){BasePage.prototype.initialize.call(this,data);app.utils.makeSearchableUsersInput("form input[name=owner]")}});app.NewProjectPage=BasePage.extend({initialize:function(data){this.el=$(data.el);BasePage.prototype.initialize.call(this,data);if(this.options.canSelectTeam&&this.options.canCreateTeam){$("#new_team").hide();$('a[rel="create-new-team"]').click(function(){$("#new_team").show();$("#select_team").hide()});$('a[rel="select-team"]').click(function(){$("#new_team").hide();$("#select_team").show()})}}});Backbone.sync=function(method,model,success,error){success()}})(window,app,Backbone,jQuery,_);
 //@ sourceMappingURL=global.min.map.js
\ No newline at end of file
diff --git a/src/sentry/static/sentry/scripts/utils.js b/src/sentry/static/sentry/scripts/utils.js
index 5dfb2a19ea..a48304c276 100644
--- a/src/sentry/static/sentry/scripts/utils.js
+++ b/src/sentry/static/sentry/scripts/utils.js
@@ -140,7 +140,11 @@
             return app.config.urlPrefix + '/api/' + app.config.teamId + '/users/search/';
         },
 
-        makeSearchableUsersInput: function(el) {
+        getSearchProjectsUrl: function(){
+            return app.config.urlPrefix + '/api/' + app.config.teamId + '/projects/search/';
+        },
+
+        makeSearchableInput: function(el, url, callback) {
             $(el).select2({
                 allowClear: true,
                 width: 'element',
@@ -149,40 +153,60 @@
                     callback({id: $el.val(), text: $el.val()});
                 },
                 ajax: {
-                    url: this.getSearchUsersUrl(),
+                    url: url,
                     dataType: 'json',
                     data: function (term, page) {
                         return {
                             query: term,
-                            quietMillis: 300,
                             limit: 10
                         };
                     },
-                    results: function (data, page, context) {
-                        var results = [];
-                        $(data.results).each(function(_, val){
-                            var label;
-                            if (val.first_name) {
-                                label = val.first_name + ' &mdash; ' + val.username;
-                            } else {
-                                label = val.username;
-                            }
-                            label += '<br>' + val.email;
-                            results.push({
-                                id: val.username,
-                                text: label
-                            });
-                        });
-                        if ($(results).filter(function(){
-                            return this.id.localeCompare(data.query) === 0;
-                        }).length === 0) {
-                            results.push({id:data.query, text:data.query});
-                        }
-
-                        return {results: results};
+                    results: function(data, page) {
+                        var results = callback(data);
+                        return {results: callback(data)};
                     }
                 }
             });
+        },
+
+        makeSearchableUsersInput: function(el) {
+            this.makeSearchableInput(el, this.getSearchUsersUrl(), function(data){
+                var results = [];
+                $(data.results).each(function(_, val){
+                    var label;
+                    if (val.first_name) {
+                        label = val.first_name + ' &mdash; ' + val.username;
+                    } else {
+                        label = val.username;
+                    }
+                    label += '<br>' + val.email;
+                    results.push({
+                        id: val.username,
+                        text: label
+                    });
+                });
+
+                if ($(results).filter(function(){
+                    return this.id.localeCompare(data.query) === 0;
+                }).length === 0) {
+                    results.push({id:data.query, text:data.query});
+                }
+
+                return results;
+            });
+        },
+
+        makeSearchableProjectsInput: function(el) {
+            this.makeSearchableInput(el, this.getSearchProjectsUrl(), function(data){
+                var results = [];
+                $(data.results).each(function(_, val){
+                    results.push({
+                        id: val.slug,
+                        text: val.name + '<br>' + val.slug
+                    });
+                });
+                return results;
+            });
         }
 
     };
diff --git a/src/sentry/templates/sentry/teams/groups/details.html b/src/sentry/templates/sentry/teams/groups/details.html
index f95e3d0f08..77c9477404 100644
--- a/src/sentry/templates/sentry/teams/groups/details.html
+++ b/src/sentry/templates/sentry/teams/groups/details.html
@@ -1,5 +1,6 @@
 {% extends "sentry/teams/groups/list.html" %}
 
+{% load crispy_forms_tags %}
 {% load i18n %}
 {% load sentry_helpers %}
 
@@ -41,5 +42,18 @@
         <h2>{% trans "Group Settings" %}</h2>
     </div>
 
-    {% include "sentry/partial/_form.html" %}
+    <form action="" method="post">
+        {% csrf_token %}
+        {{ form|as_crispy_errors }}
+
+        {% for field in form %}
+            {% include "sentry/partial/_form_field.html" %}
+        {% endfor %}
+
+        <fieldset class="form-actions">
+            <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
+            <a href="{% url sentry-remove-access-group group.team.slug group.id %}" class="btn btn-danger">{% trans "Remove Access Group" %}</a>
+        </fieldset>
+    </form>
+    
 {% endblock %}
diff --git a/src/sentry/templates/sentry/teams/groups/members.html b/src/sentry/templates/sentry/teams/groups/members.html
index 98611042be..10173c07c3 100644
--- a/src/sentry/templates/sentry/teams/groups/members.html
+++ b/src/sentry/templates/sentry/teams/groups/members.html
@@ -5,7 +5,7 @@
 {% load sentry_helpers %}
 
 {% block title %}
-    {{ group.name }} | {{ block.super }}
+    {% trans "Members" %} | {{ block.super }}
 {% endblock %}
 
 
@@ -35,6 +35,7 @@
                             {{ member.email }}
                         </td>
                         <td style="text-align:center;">
+                            <a href="{% url sentry-remove-access-group-member group.team.slug group.id member.id %}" class="btn">{% trans "Remove" %}</a>
                         </td>
                     </tr>
                 {% endfor %}
diff --git a/src/sentry/templates/sentry/teams/groups/projects.html b/src/sentry/templates/sentry/teams/groups/projects.html
index e69de29bb2..bb333eb11f 100644
--- a/src/sentry/templates/sentry/teams/groups/projects.html
+++ b/src/sentry/templates/sentry/teams/groups/projects.html
@@ -0,0 +1,58 @@
+{% extends "sentry/teams/groups/details.html" %}
+
+{% load crispy_forms_tags %}
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}
+    {% trans "Projects" %} | {{ block.super }}
+{% endblock %}
+
+
+{% block inner %}
+    <div class="page-header">
+        <h2>{% trans "Group Projects" %}</h2>
+    </div>
+
+    {% if project_list %}
+        <table class="table table-striped">
+            <colgroup>
+                <col/>
+                <col width="100px"/>
+                <col width="180px"/>
+            </colgroup>
+            <thead>
+                <tr>
+                    <th>{% trans "Project" %}</th>
+                    <th style="text-align:center">{% trans "Actions" %}</th>
+                </tr>
+            </thead>
+            <tbody>
+                {% for project in project_list %}
+                    <tr>
+                        <td>
+                            {{ project.name }} &mdash; {{ project.slug }}
+                        </td>
+                        <td style="text-align:center;">
+                            <a href="{% url sentry-remove-access-group-project group.team.slug group.id project.id %}" class="btn">{% trans "Remove" %}</a>
+                        </td>
+                    </tr>
+                {% endfor %}
+            </tbody>
+        </table>
+    {% else %}
+        <p>{% trans "There are no projects assigned to this group." %}
+    {% endif %}
+
+    <form action="" method="post" class="form-search">
+        {% csrf_token %}
+        {{ form|as_crispy_errors }}
+
+        {{ form.project }} <button type="submit" class="btn btn-primary" style="padding: 6px 10px; margin-left: 5px">{% trans "Add Project" %}</button>
+    </form>
+
+    <script type="text/javascript">
+    new app.AccessGroupProjectsPage();
+    </script>
+
+{% endblock %}
diff --git a/src/sentry/templates/sentry/teams/groups/remove.html b/src/sentry/templates/sentry/teams/groups/remove.html
new file mode 100644
index 0000000000..136c53da5f
--- /dev/null
+++ b/src/sentry/templates/sentry/teams/groups/remove.html
@@ -0,0 +1,28 @@
+{% extends "sentry/teams/groups/details.html" %}
+
+{% load crispy_forms_tags %}
+{% load i18n %}
+
+{% block title %}{% trans "Remove Access Group" %} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    {{ block.super }}
+    <li class="divider"></li>
+    <li><a href="{% url sentry-remove-access-group group.team.slug group.id %}">{% trans "Remove Access Group" %}</a></li>
+{% endblock %}
+
+{% block main %}
+    <section class="body">
+        <form action="" method="post">
+            <p>{% trans "Are you sure you wish to remove this acess group? This change is permanent!" %}</p>
+            {% csrf_token %}
+            {{ form|as_crispy_errors }}
+            {% for field in form %}
+                {% include "sentry/partial/_form_field.html" %}
+            {% endfor %}
+            <fieldset class="form-actions">
+                <button type="submit" class="btn btn-danger">{% trans "Confirm" %}</button> <a href="{% url sentry-manage-access-groups group.team.slug %}" class="btn">{% trans "Cancel" %}</a>
+            </fieldset>
+        </form>
+    </section>
+{% endblock %}
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index c39e840755..2617291229 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -720,6 +720,26 @@ def search_users(request, team):
     return response
 
 
+@never_cache
+@csrf_exempt
+@has_access
+def search_projects(request, team):
+    limit = min(100, int(request.GET.get('limit', 10)))
+    query = request.GET['query']
+
+    results = list(Project.objects.filter(
+        Q(name__istartswith=query) | Q(slug__istartswith=query),
+    ).filter(team=team).distinct().order_by('name', 'slug').values('id', 'name', 'slug')[:limit])
+
+    response = HttpResponse(json.dumps({
+        'results': results,
+        'query': query,
+    }))
+    response['Content-Type'] = 'application/json'
+
+    return response
+
+
 def crossdomain_xml_index(request):
     response = render_to_response('sentry/crossdomain_index.xml')
     response['Content-Type'] = 'application/xml'
diff --git a/src/sentry/web/forms/fields.py b/src/sentry/web/forms/fields.py
index 1a6792a43c..39f8cfc640 100644
--- a/src/sentry/web/forms/fields.py
+++ b/src/sentry/web/forms/fields.py
@@ -33,7 +33,7 @@ class UserField(CharField):
             if 'placeholder' not in attrs:
                 attrs['placeholder'] = 'username'
             if isinstance(value, (int, long)):
-                value = User.objects.get(pk=value).username
+                value = User.objects.get(id=value).username
             return super(UserField.widget, self).render(name, value, attrs)
 
     def clean(self, value):
diff --git a/src/sentry/web/forms/teams.py b/src/sentry/web/forms/teams.py
index 2419759441..1eb630ffdd 100644
--- a/src/sentry/web/forms/teams.py
+++ b/src/sentry/web/forms/teams.py
@@ -9,7 +9,7 @@ from django import forms
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.constants import MEMBER_TYPES
-from sentry.models import Team, TeamMember, PendingTeamMember, AccessGroup
+from sentry.models import Team, TeamMember, PendingTeamMember, AccessGroup, Project
 from sentry.web.forms.fields import UserField, get_team_choices
 
 
@@ -137,19 +137,24 @@ class EditAccessGroupForm(BaseAccessGroupForm):
     pass
 
 
+class RemoveAccessGroupForm(forms.Form):
+    pass
+
+
 class NewAccessGroupMemberForm(forms.Form):
     user = UserField()
 
-    def __init__(self, group, data, *args, **kwargs):
-        super(NewAccessGroupMemberForm, self).__init__(data=data, *args, **kwargs)
-        self.group = group
 
-    def clean_user(self):
-        value = self.cleaned_data['user']
-        if not value:
-            return None
+class NewAccessGroupProjectForm(forms.Form):
+    project = forms.CharField(label=_('Project'), widget=forms.TextInput(attrs={'placeholder': _('slug')}))
 
-        if self.group.members.filter(id=value.id).exists():
-            raise forms.ValidationError(_('User is already a member of this acces group'))
+    def __init__(self, group, *args, **kwargs):
+        super(NewAccessGroupProjectForm, self).__init__(*args, **kwargs)
+        self.group = group
 
-        return value
+    def clean_project(self):
+        value = self.cleaned_data['project']
+        try:
+            return Project.objects.get(team=self.group.team, slug=value)
+        except Project.DoesNotExist:
+            raise forms.ValidationError(_('Invalid project slug'))
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index 4d0ad5c4ce..d093648b74 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -6,6 +6,7 @@ sentry.web.frontend.teams
 :license: BSD, see LICENSE for more details.
 """
 from django.contrib import messages
+from django.contrib.auth.models import User
 from django.core.context_processors import csrf
 from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
@@ -21,7 +22,8 @@ from sentry.web.decorators import login_required, has_access
 from sentry.web.forms.teams import (NewTeamForm, NewTeamAdminForm,
     EditTeamForm, EditTeamAdminForm, EditTeamMemberForm, NewTeamMemberForm,
     InviteTeamMemberForm, RemoveTeamForm, AcceptInviteForm, NewAccessGroupForm,
-    EditAccessGroupForm, NewAccessGroupMemberForm)
+    EditAccessGroupForm, NewAccessGroupMemberForm, NewAccessGroupProjectForm,
+    RemoveAccessGroupForm)
 from sentry.web.helpers import render_to_response
 
 
@@ -536,6 +538,37 @@ def access_group_details(request, team, group_id):
     return render_to_response('sentry/teams/groups/details.html', context, request)
 
 
+@has_access(MEMBER_OWNER)
+@csrf_protect
+def remove_access_group(request, team, group_id):
+    try:
+        group = AccessGroup.objects.get(team=team, id=group_id)
+    except AccessGroup.DoesNotExist:
+        return HttpResponseRedirect(reverse('sentry-manage-access-groups', args=[team.slug]))
+
+    form = RemoveAccessGroupForm(request.POST or None)
+
+    if form.is_valid():
+        group.delete()
+
+        messages.add_message(request, messages.SUCCESS,
+            _('%s was permanently removed.') % (group.name,))
+
+        return HttpResponseRedirect(reverse('sentry-manage-access-groups', args=[team.slug]))
+
+    context = csrf(request)
+    context.update({
+        'form': form,
+        'team': team,
+        'group': group,
+        'page': 'details',
+        'SECTION': 'team',
+        'SUBSECTION': 'groups',
+    })
+
+    return render_to_response('sentry/teams/groups/remove.html', context, request)
+
+
 @has_access(MEMBER_OWNER)
 @csrf_protect
 def access_group_members(request, team, group_id):
@@ -544,7 +577,7 @@ def access_group_members(request, team, group_id):
     except AccessGroup.DoesNotExist:
         return HttpResponseRedirect(reverse('sentry-manage-access-groups', args=[team.slug]))
 
-    form = NewAccessGroupMemberForm(group, request.POST or None)
+    form = NewAccessGroupMemberForm(request.POST or None)
     if form.is_valid():
         user = form.cleaned_data['user']
         group.members.add(user)
@@ -569,6 +602,24 @@ def access_group_members(request, team, group_id):
     return render_to_response('sentry/teams/groups/members.html', context, request)
 
 
+@csrf_protect
+@has_access(MEMBER_OWNER)
+def remove_access_group_member(request, team, group_id, user_id):
+    try:
+        group = AccessGroup.objects.get(team=team, id=group_id)
+    except AccessGroup.DoesNotExist:
+        return HttpResponseRedirect(reverse('sentry-access-group-members', args=[team.slug, group.id]))
+
+    try:
+        user = User.objects.get(id=user_id)
+    except User.DoesNotExist:
+        return HttpResponseRedirect(reverse('sentry-access-group-members', args=[team.slug, group.id]))
+
+    group.members.remove(user)
+
+    return HttpResponseRedirect(reverse('sentry-access-group-members', args=[team.slug, group.id]))
+
+
 @has_access(MEMBER_OWNER)
 @csrf_protect
 def access_group_projects(request, team, group_id):
@@ -577,10 +628,21 @@ def access_group_projects(request, team, group_id):
     except AccessGroup.DoesNotExist:
         return HttpResponseRedirect(reverse('sentry-manage-access-groups', args=[team.slug]))
 
+    form = NewAccessGroupProjectForm(group, request.POST or None)
+    if form.is_valid():
+        project = form.cleaned_data['project']
+        group.projects.add(project)
+
+        messages.add_message(request, messages.SUCCESS,
+            _('%s was added to this access group.') % (project.name,))
+
+        return HttpResponseRedirect(reverse('sentry-access-group-projects', args=[team.slug, group.id]))
+
     context = csrf(request)
     context.update({
         'team': team,
         'group': group,
+        'form': form,
         'project_list': group.projects.all(),
         'group_list': AccessGroup.objects.filter(team=team),
         'page': 'projects',
@@ -589,3 +651,17 @@ def access_group_projects(request, team, group_id):
     })
 
     return render_to_response('sentry/teams/groups/projects.html', context, request)
+
+
+@csrf_protect
+@has_access(MEMBER_OWNER)
+# XXX: has_access is automatically converting project for us
+def remove_access_group_project(request, team, group_id, project):
+    try:
+        group = AccessGroup.objects.get(team=team, id=group_id)
+    except AccessGroup.DoesNotExist:
+        return HttpResponseRedirect(reverse('sentry-access-group-projects', args=[team.slug, group.id]))
+
+    group.projects.remove(project)
+
+    return HttpResponseRedirect(reverse('sentry-access-group-projects', args=[team.slug, group.id]))
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index f889cf9f70..3cefe8a2b2 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -60,10 +60,16 @@ urlpatterns = patterns('',
         name='sentry-new-access-group'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/edit/$', teams.access_group_details,
         name='sentry-edit-access-group'),
+    url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/remove/$', teams.remove_access_group,
+        name='sentry-remove-access-group'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/members/$', teams.access_group_members,
         name='sentry-access-group-members'),
+    url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/members/(?P<user_id>\d+)/remove/$',
+        teams.remove_access_group_member, name='sentry-remove-access-group-member'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/projects/$', teams.access_group_projects,
         name='sentry-access-group-projects'),
+    url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/projects/(?P<project_id>\d+)/remove/$',
+        teams.remove_access_group_project, name='sentry-remove-access-group-project'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/members/$', teams.manage_team_members,
         name='sentry-manage-team-members'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/members/new/$', teams.new_team_member,
@@ -177,6 +183,8 @@ urlpatterns = patterns('',
         name='sentry-api-search-tags'),
     url(r'^api/(?P<team_slug>[\w_-]+)/users/search/$', api.search_users,
         name='sentry-api-search-users'),
+    url(r'^api/(?P<team_slug>[\w_-]+)/projects/search/$', api.search_projects,
+        name='sentry-api-search-projects'),
 
     # Users
     url(r'^(?P<team_slug>[\w_-]+)/users/$', users.user_list, name='sentry-users'),
