commit aef99259d893cf8c8fea81f18b29c05788b9d942
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Oct 29 09:57:31 2019 -0700

    feat(ui): Move `replaceAtArrayIndex` to utils (#15286)

diff --git a/src/sentry/static/sentry/app/utils/replaceAtArrayIndex.tsx b/src/sentry/static/sentry/app/utils/replaceAtArrayIndex.tsx
new file mode 100644
index 0000000000..4b1bb6dbe7
--- /dev/null
+++ b/src/sentry/static/sentry/app/utils/replaceAtArrayIndex.tsx
@@ -0,0 +1,8 @@
+/**
+ * Replace item at `index` in `array` with `obj`
+ */
+export function replaceAtArrayIndex<T>(array: T[], index: number, obj: T): T[] {
+  const newArray = [...array];
+  newArray.splice(index, 1, obj);
+  return newArray;
+}
diff --git a/src/sentry/static/sentry/app/views/incidents/details/activity/index.tsx b/src/sentry/static/sentry/app/views/incidents/details/activity/index.tsx
index 20106c5e30..4687b74732 100644
--- a/src/sentry/static/sentry/app/views/incidents/details/activity/index.tsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/activity/index.tsx
@@ -8,14 +8,15 @@ import {
   fetchIncidentActivities,
   updateIncidentNote,
 } from 'app/actionCreators/incident';
+import {replaceAtArrayIndex} from 'app/utils/replaceAtArrayIndex';
 import {t} from 'app/locale';
 import {uniqueId} from 'app/utils/guid';
 import ConfigStore from 'app/stores/configStore';
 import withApi from 'app/utils/withApi';
 
-import Activity from './activity';
-import {IncidentActivityType, IncidentStatus} from '../../utils';
 import {ActivityType, ActivityTypeDraft, NoteType} from '../../types';
+import {IncidentActivityType, IncidentStatus} from '../../utils';
+import Activity from './activity';
 
 function makeDefaultErrorJson() {
   return {detail: t('Unknown error. Please try again.')};
@@ -223,9 +224,3 @@ function removeFromArrayIndex<T>(array: T[], index: number): T[] {
   newArray.splice(index, 1);
   return newArray;
 }
-
-function replaceAtArrayIndex<T>(array: T[], index: number, obj: T): T[] {
-  const newArray = [...array];
-  newArray.splice(index, 1, obj);
-  return newArray;
-}
diff --git a/tests/js/spec/utils/replaceAtArrayIndex.spec.jsx b/tests/js/spec/utils/replaceAtArrayIndex.spec.jsx
new file mode 100644
index 0000000000..a46fd1e57c
--- /dev/null
+++ b/tests/js/spec/utils/replaceAtArrayIndex.spec.jsx
@@ -0,0 +1,23 @@
+import {replaceAtArrayIndex} from 'app/utils/replaceAtArrayIndex';
+
+describe('utils/replaceAtArrayIndex', function() {
+  it('replaces simple value at index', function() {
+    const arr = [1, 2, 3];
+
+    expect(replaceAtArrayIndex(arr, 1, 40)).toEqual([1, 40, 3]);
+  });
+
+  it('does not mutate array', function() {
+    const arr = [1, 2, 3];
+    expect(replaceAtArrayIndex(arr, 0, 40)).toEqual([40, 2, 3]);
+    expect(arr).toEqual([1, 2, 3]);
+  });
+
+  it('replaces at boundaries of array', function() {
+    const arr = [1, 2, 3];
+    expect(replaceAtArrayIndex(arr, 0, 40)).toEqual([40, 2, 3]);
+
+    const arr2 = [1, 2, 3];
+    expect(replaceAtArrayIndex(arr2, 2, 40)).toEqual([1, 2, 40]);
+  });
+});
