commit 2a3ae5b69078ae4d30c586b9721c97c7b3cf8022
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 4 17:24:59 2015 -0800

    Adjust bulk mutation response to return attributes only

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 9560c9031d..18b2dffc76 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -272,13 +272,7 @@ class ProjectGroupIndexEndpoint(Endpoint):
                     to_object_id=primary_group.id,
                 )
 
-        if group_list:
-            GroupMeta.objects.populate_cache(group_list)
-            # TODO(dcramer): we need create a public API for 'sort_value'
-            context = serialize(list(group_list), request.user)
-            return Response(context)
-
-        return Response(status=204)
+        return Response(dict(result))
 
     def delete(self, request, project_id):
         """
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index dfa185bb7b..5c6e4ee527 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -43,7 +43,10 @@ class GroupUpdateTest(APITestCase):
         response = self.client.put(url, data={
             'status': 'resolved',
         }, format='json')
-        assert response.status_code == 204
+        assert response.status_code == 200
+        assert response.data == {
+            'status': 'resolved',
+        }
 
         new_group1 = Group.objects.get(id=group1.id)
         assert new_group1.status == GroupStatus.RESOLVED
@@ -82,6 +85,9 @@ class GroupUpdateTest(APITestCase):
             'status': 'resolved',
         }, format='json')
         assert response.status_code == 200
+        assert response.data == {
+            'status': 'resolved',
+        }
 
         new_group1 = Group.objects.get(id=group1.id)
         assert new_group1.resolved_at is None
@@ -119,6 +125,9 @@ class GroupUpdateTest(APITestCase):
             'isBookmarked': 'true',
         }, format='json')
         assert response.status_code == 200
+        assert response.data == {
+            'isBookmarked': True,
+        }
 
         bookmark1 = GroupBookmark.objects.filter(group=group1, user=self.user)
         assert bookmark1.exists()
@@ -190,6 +199,9 @@ class GroupUpdateTest(APITestCase):
             'merge': '1',
         }, format='json')
         assert response.status_code == 200
+        assert response.data == {
+            'merge': True,
+        }
 
         assert len(merge_group.mock_calls) == 2
         merge_group.delay.assert_any_call(from_object_id=group1.id, to_object_id=group2.id)
