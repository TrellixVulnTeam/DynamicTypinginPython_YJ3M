commit 78945dafb00cf0c65ea7bd1f45598fbf2a858aed
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Tue May 7 17:40:50 2019 +0200

    ref: Do not load symcaches if we will not use them (#13081)

diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 9c831474da..189d7db95e 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -194,6 +194,7 @@ class NativeStacktraceProcessor(StacktraceProcessor):
             self.project,
             self.object_lookup,
             referenced_images=referenced_images,
+            use_symbolicator=self.use_symbolicator
         )
 
         if options.get('symbolserver.enabled'):
diff --git a/src/sentry/lang/native/symbolizer.py b/src/sentry/lang/native/symbolizer.py
index 5f8f41ffc0..9050e60a6b 100644
--- a/src/sentry/lang/native/symbolizer.py
+++ b/src/sentry/lang/native/symbolizer.py
@@ -92,17 +92,20 @@ class Symbolizer(object):
     we have in the database and reports errors slightly differently.
     """
 
-    def __init__(self, project, object_lookup, referenced_images,
+    def __init__(self, project, object_lookup, referenced_images, use_symbolicator,
                  on_dif_referenced=None):
         if not isinstance(object_lookup, ObjectLookup):
             object_lookup = ObjectLookup(object_lookup)
         self.object_lookup = object_lookup
 
-        self.symcaches, self.symcaches_conversion_errors = \
-            ProjectDebugFile.difcache.get_symcaches(
-                project, referenced_images,
-                on_dif_referenced=on_dif_referenced,
-                with_conversion_errors=True)
+        self.symcaches = self.symcaches_conversion_errors = None
+
+        if not use_symbolicator:
+            self.symcaches, self.symcaches_conversion_errors = \
+                ProjectDebugFile.difcache.get_symcaches(
+                    project, referenced_images,
+                    on_dif_referenced=on_dif_referenced,
+                    with_conversion_errors=True)
 
     def _process_frame(self, sym, package=None, addr_off=0):
         frame = {
@@ -128,11 +131,15 @@ class Symbolizer(object):
         return frame
 
     def _symbolize_app_frame(self, instruction_addr, obj, sdk_info=None, trust=None):
-        symcache = self.symcaches.get(obj.debug_id)
+        symcache = None
+        if self.symcaches is not None:
+            symcache = self.symcaches.get(obj.debug_id)
+
         if symcache is None:
             # In case we know what error happened on symcache conversion
             # we can report it to the user now.
-            if obj.debug_id in self.symcaches_conversion_errors:
+            if self.symcaches_conversion_errors is not None and \
+               obj.debug_id in self.symcaches_conversion_errors:
                 raise SymbolicationFailed(
                     message=self.symcaches_conversion_errors[obj.debug_id],
                     type=EventError.NATIVE_BAD_DSYM,
