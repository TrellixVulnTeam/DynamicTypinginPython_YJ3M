commit f5ed19c4e64d2badc6aa048be3a7aa981a564c48
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Oct 10 11:26:11 2016 -0700

    [debug] add logging context for raven in API (#4285)
    
    - add project/org context
    - update api credential context

diff --git a/src/sentry/api/authentication.py b/src/sentry/api/authentication.py
index 62fcec84e8..a6cdc1cb1e 100644
--- a/src/sentry/api/authentication.py
+++ b/src/sentry/api/authentication.py
@@ -37,7 +37,7 @@ class ApiKeyAuthentication(QuietBasicAuthentication):
             raise AuthenticationFailed('Key is disabled')
 
         raven.tags_context({
-            'api_key': userid,
+            'api_key': key.id,
         })
 
         return (AnonymousUser(), key)
@@ -68,4 +68,8 @@ class TokenAuthentication(QuietBasicAuthentication):
         if not token.user.is_active:
             raise AuthenticationFailed('User inactive or deleted')
 
+        raven.tags_context({
+            'api_token': token.id,
+        })
+
         return (token.user, token)
diff --git a/src/sentry/api/bases/group.py b/src/sentry/api/bases/group.py
index e092fed917..9595aeb239 100644
--- a/src/sentry/api/bases/group.py
+++ b/src/sentry/api/bases/group.py
@@ -5,6 +5,7 @@ import logging
 from sentry.api.base import Endpoint
 from sentry.api.bases.project import ProjectPermission
 from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.app import raven
 from sentry.models import Group, get_group_with_redirect
 
 logger = logging.getLogger(__name__)
@@ -46,5 +47,12 @@ class GroupEndpoint(Endpoint):
             raise ResourceDoesNotExist
 
         self.check_object_permissions(request, group)
+
+        raven.tags_context({
+            'project': group.project_id,
+            'organization': group.project.organization_id,
+        })
+
         kwargs['group'] = group
+
         return (args, kwargs)
diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index 5f5aeec024..f8917aa9e2 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -1,9 +1,10 @@
 from __future__ import absolute_import
 
-from sentry.auth import access
 from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
+from sentry.app import raven
+from sentry.auth import access
 from sentry.models import Organization, OrganizationStatus
 from sentry.models.apikey import ROOT_KEY
 
@@ -50,5 +51,9 @@ class OrganizationEndpoint(Endpoint):
 
         self.check_object_permissions(request, organization)
 
+        raven.tags_context({
+            'organization': organization.id,
+        })
+
         kwargs['organization'] = organization
         return (args, kwargs)
diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index 23b20039c3..23fd85e308 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -1,9 +1,10 @@
 from __future__ import absolute_import
 
-from sentry.auth import access
 from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
+from sentry.app import raven
+from sentry.auth import access
 from sentry.models import Project, ProjectStatus
 from sentry.models.apikey import ROOT_KEY
 
@@ -82,5 +83,10 @@ class ProjectEndpoint(Endpoint):
 
         self.check_object_permissions(request, project)
 
+        raven.tags_context({
+            'project': project.id,
+            'organization': project.organization_id,
+        })
+
         kwargs['project'] = project
         return (args, kwargs)
diff --git a/src/sentry/api/bases/team.py b/src/sentry/api/bases/team.py
index 231cf714ec..b918e60af2 100644
--- a/src/sentry/api/bases/team.py
+++ b/src/sentry/api/bases/team.py
@@ -1,9 +1,10 @@
 from __future__ import absolute_import
 
-from sentry.auth import access
 from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
+from sentry.app import raven
+from sentry.auth import access
 from sentry.models import Team, TeamStatus
 from sentry.models.apikey import ROOT_KEY
 
@@ -54,5 +55,9 @@ class TeamEndpoint(Endpoint):
 
         self.check_object_permissions(request, team)
 
+        raven.tags_context({
+            'organization': team.organization_id,
+        })
+
         kwargs['team'] = team
         return (args, kwargs)
