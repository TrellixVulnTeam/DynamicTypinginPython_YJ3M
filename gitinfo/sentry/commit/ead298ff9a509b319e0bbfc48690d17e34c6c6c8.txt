commit ead298ff9a509b319e0bbfc48690d17e34c6c6c8
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Sep 30 16:50:31 2010 -0700

    Bump Sentry version. Added git revision to version. Clean up template tags.

diff --git a/sentry/__init__.py b/sentry/__init__.py
index c2f26d9282..9d19b016d3 100644
--- a/sentry/__init__.py
+++ b/sentry/__init__.py
@@ -1 +1,40 @@
-__version__ = (1, 3, 7)
\ No newline at end of file
+"""
+Sentry
+~~~~~~
+"""
+
+__all__ = ('__version__', '__build__', '__docformat__', 'get_revision')
+__version__ = (1, 3, 8)
+__docformat__ = 'restructuredtext en'
+
+import os
+
+def _get_git_revision(path):
+    revision_file = os.path.join(path, 'refs', 'heads', 'master')
+    if not os.path.exists(revision_file):
+        return None
+    fh = open(revision_file, 'r')
+    try:
+        return fh.read().strip()
+    finally:
+        fh.close()
+
+def get_revision():
+    """
+    :returns: Revision number of this branch/checkout, if available. None if
+        no revision number can be determined.
+    """
+    package_dir = os.path.dirname(__file__)
+    checkout_dir = os.path.normpath(os.path.join(package_dir, '..'))
+    path = os.path.join(checkout_dir, '.git')
+    if os.path.exists(path):
+        return _get_git_revision(path)
+    return None
+
+__build__ = get_revision()
+
+def get_version():
+    base = '.'.join(map(str, __version__))
+    if __build__:
+        base = '%s (%s)' % (base, __build__)
+    return base
\ No newline at end of file
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index e09124f8c2..cff57c2e55 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -14,7 +14,7 @@ register = template.Library()
 
 def is_dict(value):
     return isinstance(value, dict)
-is_dict = register.filter(is_dict)
+register.filter(is_dict)
 
 def with_priority(result_list, key='score'):
     if result_list:
@@ -38,16 +38,16 @@ def with_priority(result_list, key='score'):
             else:
                 priority = 'verylow'
             yield result, priority
-with_priority = register.filter(with_priority)
+register.filter(with_priority)
 
 def num_digits(value):
     return len(str(value))
-num_digits = register.filter(num_digits)
+register.filter(num_digits)
 
 def can_chart(group):
     engine = get_db_engine()
     return SimpleLineChart and not engine.startswith('sqlite')
-can_chart = register.filter(can_chart)
+register.filter(can_chart)
 
 def chart_url(group):
     today = datetime.datetime.now()
@@ -73,15 +73,15 @@ def chart_url(group):
     chart.set_colours(['eeeeee', '999999', 'eeeeee'])
     chart.set_line_style(1, 1)
     return chart.get_url()
-chart_url = register.filter(chart_url)
+register.filter(chart_url)
 
 def sentry_version():
-    import sentry
-    return '.'.join(map(str, sentry.__version__))
-sentry_version = register.simple_tag(sentry_version)
+    from sentry import get_version
+    return get_version()
+register.simple_tag(sentry_version)
 
 def get_actions(group):
     for cls in GroupActionProvider.plugins.itervalues():
         action = cls(group.pk)
         yield action.url, action.title
-get_actions = register.filter(get_actions)
\ No newline at end of file
+register.filter(get_actions)
\ No newline at end of file
