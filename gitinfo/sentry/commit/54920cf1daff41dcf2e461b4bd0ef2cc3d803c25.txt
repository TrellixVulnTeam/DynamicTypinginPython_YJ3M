commit 54920cf1daff41dcf2e461b4bd0ef2cc3d803c25
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Nov 25 10:44:05 2019 -0800

    feat(form): Refactor some small components to separate modules (#15761)
    
    This moves some error state/control state components into a module and allow normal `<Field>` components to have an error and control state (e.g. loading, saved, and error states)

diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/field/controlState.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/field/controlState.tsx
new file mode 100644
index 0000000000..121335b3dd
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/field/controlState.tsx
@@ -0,0 +1,72 @@
+import React from 'react';
+import styled from 'react-emotion';
+
+import {fadeOut, pulse} from 'app/styles/animations';
+import InlineSvg from 'app/components/inlineSvg';
+import Spinner from 'app/views/settings/components/forms/spinner';
+
+type Props = {
+  isSaving?: boolean;
+  isSaved?: boolean;
+  error?: boolean;
+};
+
+/**
+ * ControlState (i.e. loading/error icons) for form fields
+ */
+class ControlState extends React.Component<Props> {
+  render() {
+    const {isSaving, isSaved, error} = this.props;
+
+    return (
+      <React.Fragment>
+        {isSaving ? (
+          <ControlStateWrapper>
+            <FormSpinner />
+          </ControlStateWrapper>
+        ) : isSaved ? (
+          <ControlStateWrapper>
+            <FieldIsSaved>
+              <InlineSvg src="icon-checkmark-sm" size="18px" />
+            </FieldIsSaved>
+          </ControlStateWrapper>
+        ) : null}
+
+        {error ? (
+          <ControlStateWrapper>
+            <FieldError>
+              <InlineSvg src="icon-warning-sm" size="18px" />
+            </FieldError>
+          </ControlStateWrapper>
+        ) : null}
+      </React.Fragment>
+    );
+  }
+}
+
+const ControlStateWrapper = styled('div')`
+  padding: 0 8px;
+`;
+
+const FieldIsSaved = styled('div')`
+  color: ${p => p.theme.green};
+  animation: ${fadeOut} 0.3s ease 2s 1 forwards;
+  position: absolute;
+  top: 0;
+  bottom: 0;
+  left: 0;
+  right: 0;
+  display: flex;
+  align-items: center;
+  justify-content: center;
+`;
+
+const FormSpinner = styled(Spinner)`
+  margin-left: 0;
+`;
+
+const FieldError = styled('div')`
+  color: ${p => p.theme.redDark};
+  animation: ${() => pulse(1.15)} 1s ease infinite;
+`;
+export default ControlState;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldErrorReason.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldErrorReason.tsx
new file mode 100644
index 0000000000..f733a1e196
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldErrorReason.tsx
@@ -0,0 +1,36 @@
+import styled from 'react-emotion';
+
+import {slideInUp} from 'app/styles/animations';
+
+const FieldErrorReason = styled('div')`
+  color: ${p => p.theme.redDark};
+  position: absolute;
+  right: 2px;
+  margin-top: 6px;
+  background: #fff;
+  padding: 6px 8px;
+  font-weight: 600;
+  font-size: ${p => p.theme.fontSizeSmall};
+  border-radius: 3px;
+  box-shadow: 0 0 0 1px rgba(64, 11, 54, 0.15), 0 4px 20px 0 rgba(64, 11, 54, 0.36);
+  z-index: ${p => p.theme.zIndex.errorMessage};
+  animation: ${slideInUp} 200ms ease-in-out forwards;
+
+  &:before,
+  &:after {
+    content: '';
+    border: 7px solid transparent;
+    border-bottom-color: #fff;
+    position: absolute;
+    top: -14px;
+    right: 9px;
+  }
+
+  &:before {
+    margin-top: -1px;
+    border-bottom-color: rgba(64, 11, 54, 0.15);
+    filter: drop-shadow(0 -2px 5px rgba(64, 11, 54, 1));
+  }
+`;
+
+export default FieldErrorReason;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/field/index.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/field/index.jsx
index c08b743f93..0b9e57150a 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/field/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/field/index.jsx
@@ -8,8 +8,10 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
+import ControlState from 'app/views/settings/components/forms/field/controlState';
 import FieldControl from 'app/views/settings/components/forms/field/fieldControl';
 import FieldDescription from 'app/views/settings/components/forms/field/fieldDescription';
+import FieldErrorReason from 'app/views/settings/components/forms/field/fieldErrorReason';
 import FieldHelp from 'app/views/settings/components/forms/field/fieldHelp';
 import FieldLabel from 'app/views/settings/components/forms/field/fieldLabel';
 import FieldRequiredBadge from 'app/views/settings/components/forms/field/fieldRequiredBadge';
@@ -47,6 +49,11 @@ class Field extends React.Component {
      */
     disabledReason: PropTypes.string,
 
+    /**
+     * Error message
+     */
+    error: PropTypes.string,
+
     /**
      * Hide ControlState component
      */
@@ -77,6 +84,16 @@ class Field extends React.Component {
      */
     id: PropTypes.string,
 
+    /**
+     * Field is in saving state
+     */
+    isSaving: PropTypes.bool,
+
+    /**
+     * Field has finished saving state
+     */
+    isSaved: PropTypes.bool,
+
     /**
      * The Control component
      */
@@ -110,10 +127,13 @@ class Field extends React.Component {
       visible,
       disabled,
       disabledReason,
+      error,
       flexibleControlStateSize,
-      label,
       help,
       id,
+      isSaving,
+      isSaved,
+      label,
       stacked,
       children,
       style,
@@ -136,6 +156,8 @@ class Field extends React.Component {
       disabledReason,
       flexibleControlStateSize,
       help: helpElement,
+      errorState: error ? <FieldErrorReason>{error}</FieldErrorReason> : null,
+      controlState: <ControlState error={error} isSaving={isSaving} isSaved={isSaved} />,
     };
 
     // See comments in prop types
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/formField/controlState.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/formField/controlState.tsx
new file mode 100644
index 0000000000..d2b6db4391
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/formField/controlState.tsx
@@ -0,0 +1,34 @@
+import {Observer} from 'mobx-react';
+import React from 'react';
+
+import ControlState from 'app/views/settings/components/forms/field/controlState';
+import FormState from 'app/components/forms/state';
+import FormModel from 'app/views/settings/components/forms/model';
+
+type Props = {
+  model: FormModel;
+  name: string;
+};
+
+/**
+ * ControlState (i.e. loading/error icons) for connected form components
+ */
+class FormFieldControlState extends React.Component<Props> {
+  render() {
+    const {model, name} = this.props;
+
+    return (
+      <Observer>
+        {() => {
+          const isSaving = model.getFieldState(name, FormState.SAVING);
+          const isSaved = model.getFieldState(name, FormState.READY);
+          const error = model.getError(name);
+
+          return <ControlState isSaving={isSaving} isSaved={isSaved} error={error} />;
+        }}
+      </Observer>
+    );
+  }
+}
+
+export default FormFieldControlState;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
index 210235b337..8b950a5468 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
@@ -4,78 +4,17 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import {defined} from 'app/utils';
-import {pulse, fadeOut, slideInUp} from 'app/styles/animations';
+import {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';
 import {t} from 'app/locale';
 import Button from 'app/components/button';
 import Field from 'app/views/settings/components/forms/field';
 import FieldControl from 'app/views/settings/components/forms/field/fieldControl';
-import FormState from 'app/components/forms/state';
-import InlineSvg from 'app/components/inlineSvg';
+import FieldErrorReason from 'app/views/settings/components/forms/field/fieldErrorReason';
+import FormFieldControlState from 'app/views/settings/components/forms/formField/controlState';
 import PanelAlert from 'app/components/panels/panelAlert';
-import Spinner from 'app/views/settings/components/forms/spinner';
-import returnButton from 'app/views/settings/components/forms/returnButton';
-import {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';
+import ReturnButton from 'app/views/settings/components/forms/returnButton';
 import space from 'app/styles/space';
 
-const FormFieldErrorReason = styled('div')`
-  color: ${p => p.theme.redDark};
-  position: absolute;
-  right: 2px;
-  margin-top: 6px;
-  background: #fff;
-  padding: 6px 8px;
-  font-weight: 600;
-  font-size: 12px;
-  border-radius: 3px;
-  box-shadow: 0 0 0 1px rgba(64, 11, 54, 0.15), 0 4px 20px 0 rgba(64, 11, 54, 0.36);
-  z-index: ${p => p.theme.zIndex.errorMessage};
-  animation: ${slideInUp} 200ms ease-in-out forwards;
-
-  &:before,
-  &:after {
-    content: '';
-    border: 7px solid transparent;
-    border-bottom-color: #fff;
-    position: absolute;
-    top: -14px;
-    right: 9px;
-  }
-
-  &:before {
-    margin-top: -1px;
-    border-bottom-color: rgba(64, 11, 54, 0.15);
-    filter: drop-shadow(0 -2px 5px rgba(64, 11, 54, 1));
-  }
-`;
-
-const FormFieldError = styled('div')`
-  color: ${p => p.theme.redDark};
-  animation: ${() => pulse(1.15)} 1s ease infinite;
-`;
-
-const FormFieldIsSaved = styled('div')`
-  color: ${p => p.theme.green};
-  animation: ${fadeOut} 0.3s ease 2s 1 forwards;
-  position: absolute;
-  top: 0;
-  bottom: 0;
-  left: 0;
-  right: 0;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-`;
-
-const FormSpinner = styled(Spinner)`
-  margin-left: 0;
-`;
-
-const ReturnButtonStyled = styled(returnButton)`
-  position: absolute;
-  right: 0;
-  top: 0;
-`;
-
 /**
  * Some fields don't need to implement their own onChange handlers, in
  * which case we will receive an Event, but if they do we should handle
@@ -91,71 +30,6 @@ const getValueFromEvent = (valueOrEvent, e) => {
   };
 };
 
-const ControlStateWrapper = styled('div')`
-  padding: 0 8px;
-`;
-
-/**
- * ControlState (i.e. loading/error icons) for connected form components
- */
-class ControlState extends React.Component {
-  static propTypes = {
-    model: PropTypes.object,
-    name: PropTypes.string,
-  };
-
-  render() {
-    const {model, name} = this.props;
-
-    return (
-      <React.Fragment>
-        <Observer>
-          {() => {
-            const isSaving = model.getFieldState(name, FormState.SAVING);
-            const isSaved = model.getFieldState(name, FormState.READY);
-
-            if (isSaving) {
-              return (
-                <ControlStateWrapper>
-                  <FormSpinner />
-                </ControlStateWrapper>
-              );
-            } else if (isSaved) {
-              return (
-                <ControlStateWrapper>
-                  <FormFieldIsSaved>
-                    <InlineSvg src="icon-checkmark-sm" size="18px" />
-                  </FormFieldIsSaved>
-                </ControlStateWrapper>
-              );
-            }
-
-            return null;
-          }}
-        </Observer>
-
-        <Observer>
-          {() => {
-            const error = model.getError(name);
-
-            if (!error) {
-              return null;
-            }
-
-            return (
-              <ControlStateWrapper>
-                <FormFieldError>
-                  <InlineSvg src="icon-warning-sm" size="18px" />
-                </FormFieldError>
-              </ControlStateWrapper>
-            );
-          }}
-        </Observer>
-      </React.Fragment>
-    );
-  }
-}
-
 // MockedModel that returns values from props
 // Disables a lot of functionality but allows you to use fields
 // without wrapping them in a Form
@@ -242,16 +116,16 @@ class FormField extends React.Component {
     onMouseOut: PropTypes.func,
   };
 
-  static defaultProps = {
-    hideErrorMessage: false,
-    flexibleControlStateSize: false,
-  };
-
   static contextTypes = {
     location: PropTypes.object,
     form: PropTypes.object,
   };
 
+  static defaultProps = {
+    hideErrorMessage: false,
+    flexibleControlStateSize: false,
+  };
+
   componentDidMount() {
     // Tell model about this field's props
     this.getModel().setFieldDescriptor(this.props.name, this.props);
@@ -401,7 +275,7 @@ class FormField extends React.Component {
               inline={inline}
               alignRight={alignRight}
               flexibleControlStateSize={flexibleControlStateSize}
-              controlState={<ControlState model={model} name={name} />}
+              controlState={<FormFieldControlState model={model} name={name} />}
               errorState={
                 <Observer>
                   {() => {
@@ -410,7 +284,7 @@ class FormField extends React.Component {
                     if (!shouldShowErrorMessage) {
                       return null;
                     }
-                    return <FormFieldErrorReason>{error}</FormFieldErrorReason>;
+                    return <FieldErrorReason>{error}</FieldErrorReason>;
                   }}
                 </Observer>
               }
@@ -438,7 +312,7 @@ class FormField extends React.Component {
                         disabled,
                         initialData: model.initialData,
                       })}
-                      {showReturnButton && <ReturnButtonStyled />}
+                      {showReturnButton && <StyledReturnButton />}
                     </React.Fragment>
                   );
                 }}
@@ -536,3 +410,9 @@ const CancelButton = styled(Button)`
 const SaveButton = styled(Button)`
   margin-left: ${space(1)};
 `;
+
+const StyledReturnButton = styled(ReturnButton)`
+  position: absolute;
+  right: 0;
+  top: 0;
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/spinner.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/spinner.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/components/forms/spinner.jsx
rename to src/sentry/static/sentry/app/views/settings/components/forms/spinner.tsx
diff --git a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
index 54c7df2ddb..f7d3dea714 100644
--- a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
@@ -118,7 +118,9 @@ exports[`ConfirmDelete renders 1`] = `
                       </FieldDescription>
                       <FieldControl
                         alignRight={false}
+                        controlState={<ControlState />}
                         disabled={false}
+                        errorState={null}
                         flexibleControlStateSize={true}
                         inline={false}
                       >
@@ -205,7 +207,9 @@ exports[`ConfirmDelete renders 1`] = `
                                                     <div
                                                       className="e1rziqw00 css-dgyrfj-FieldControlState"
                                                       is={null}
-                                                    />
+                                                    >
+                                                      <ControlState />
+                                                    </div>
                                                   </Base>
                                                 </Flex>
                                               </Component>
diff --git a/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
index 0e4c216243..6b302be3a5 100644
--- a/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
@@ -104,7 +104,7 @@ exports[`FormField + model renders with Form 1`] = `
                         <FieldControl
                           alignRight={false}
                           controlState={
-                            <ControlState
+                            <FormFieldControlState
                               model={
                                 FormModel {
                                   "api": Client {
@@ -256,7 +256,7 @@ exports[`FormField + model renders with Form 1`] = `
                                                         className="e1rziqw00 css-1fqbh7r-FieldControlState"
                                                         is={null}
                                                       >
-                                                        <ControlState
+                                                        <FormFieldControlState
                                                           model={
                                                             FormModel {
                                                               "api": Client {
@@ -300,9 +300,14 @@ exports[`FormField + model renders with Form 1`] = `
                                                           }
                                                           name="fieldName"
                                                         >
-                                                          <Observer />
-                                                          <Observer />
-                                                        </ControlState>
+                                                          <Observer>
+                                                            <ControlState
+                                                              error={false}
+                                                              isSaved={null}
+                                                              isSaving={null}
+                                                            />
+                                                          </Observer>
+                                                        </FormFieldControlState>
                                                       </div>
                                                     </Base>
                                                   </Flex>
diff --git a/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap
index 65c30678a6..c93ff5236f 100644
--- a/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap
@@ -53,7 +53,7 @@ exports[`RadioBooleanField render() renders new field without form context 1`] =
                   <FieldControl
                     alignRight={false}
                     controlState={
-                      <ControlState
+                      <FormFieldControlState
                         model={
                           MockModel {
                             "initialData": Object {
@@ -237,7 +237,7 @@ exports[`RadioBooleanField render() renders new field without form context 1`] =
                                                   className="e1rziqw00 css-1fqbh7r-FieldControlState"
                                                   is={null}
                                                 >
-                                                  <ControlState
+                                                  <FormFieldControlState
                                                     model={
                                                       MockModel {
                                                         "initialData": Object {
@@ -257,9 +257,13 @@ exports[`RadioBooleanField render() renders new field without form context 1`] =
                                                     }
                                                     name="fieldName"
                                                   >
-                                                    <Observer />
-                                                    <Observer />
-                                                  </ControlState>
+                                                    <Observer>
+                                                      <ControlState
+                                                        isSaved={false}
+                                                        isSaving={false}
+                                                      />
+                                                    </Observer>
+                                                  </FormFieldControlState>
                                                 </div>
                                               </Base>
                                             </Flex>
diff --git a/tests/js/spec/components/forms/__snapshots__/tableField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/tableField.spec.jsx.snap
index c77d1c9bc3..3acd48e251 100644
--- a/tests/js/spec/components/forms/__snapshots__/tableField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/tableField.spec.jsx.snap
@@ -176,7 +176,7 @@ exports[`TableField renders renders with form context 1`] = `
                           <FieldControl
                             alignRight={false}
                             controlState={
-                              <ControlState
+                              <FormFieldControlState
                                 model={
                                   FormModel {
                                     "api": Client {
@@ -405,7 +405,7 @@ exports[`TableField renders renders with form context 1`] = `
                                                           className="e1rziqw00 css-1fqbh7r-FieldControlState"
                                                           is={null}
                                                         >
-                                                          <ControlState
+                                                          <FormFieldControlState
                                                             model={
                                                               FormModel {
                                                                 "api": Client {
@@ -460,9 +460,14 @@ exports[`TableField renders renders with form context 1`] = `
                                                             }
                                                             name="fieldName"
                                                           >
-                                                            <Observer />
-                                                            <Observer />
-                                                          </ControlState>
+                                                            <Observer>
+                                                              <ControlState
+                                                                error={false}
+                                                                isSaved={null}
+                                                                isSaving={null}
+                                                              />
+                                                            </Observer>
+                                                          </FormFieldControlState>
                                                         </div>
                                                       </Base>
                                                     </Flex>
@@ -670,7 +675,7 @@ exports[`TableField renders renders without form context 1`] = `
                     <FieldControl
                       alignRight={false}
                       controlState={
-                        <ControlState
+                        <FormFieldControlState
                           model={
                             MockModel {
                               "initialData": Object {
@@ -874,7 +879,7 @@ exports[`TableField renders renders without form context 1`] = `
                                                     className="e1rziqw00 css-1fqbh7r-FieldControlState"
                                                     is={null}
                                                   >
-                                                    <ControlState
+                                                    <FormFieldControlState
                                                       model={
                                                         MockModel {
                                                           "initialData": Object {
@@ -904,9 +909,13 @@ exports[`TableField renders renders without form context 1`] = `
                                                       }
                                                       name="fieldName"
                                                     >
-                                                      <Observer />
-                                                      <Observer />
-                                                    </ControlState>
+                                                      <Observer>
+                                                        <ControlState
+                                                          isSaved={false}
+                                                          isSaving={false}
+                                                        />
+                                                      </Observer>
+                                                    </FormFieldControlState>
                                                   </div>
                                                 </Base>
                                               </Flex>
diff --git a/tests/js/spec/views/passwordForm.spec.jsx b/tests/js/spec/views/passwordForm.spec.jsx
index 33a23ce2ea..0fa02e6819 100644
--- a/tests/js/spec/views/passwordForm.spec.jsx
+++ b/tests/js/spec/views/passwordForm.spec.jsx
@@ -98,7 +98,7 @@ describe('PasswordForm', function() {
       .find('input[name="passwordVerify"]')
       .simulate('change', {target: {value: 'nottest-mismatch'}});
 
-    const error = wrapper.find('Field[id="passwordVerify"] FormFieldErrorReason');
+    const error = wrapper.find('Field[id="passwordVerify"] FieldErrorReason');
 
     expect(error.exists()).toBe(true);
     expect(error.text()).toBe('Passwords do not match');
@@ -107,7 +107,7 @@ describe('PasswordForm', function() {
       .find('input[name="passwordVerify"]')
       .simulate('change', {target: {value: 'nottest'}});
 
-    expect(wrapper.find('Field[id="passwordVerify"] FormFieldErrorReason').exists()).toBe(
+    expect(wrapper.find('Field[id="passwordVerify"] FieldErrorReason').exists()).toBe(
       false
     );
   });
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx
index b9c17443ae..32b976c42d 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx
@@ -433,7 +433,7 @@ describe('Sentry Application Details', function() {
       await tick();
       wrapper.update();
 
-      expect(wrapper.find('div FormFieldErrorReason').text()).toEqual(
+      expect(wrapper.find('div FieldErrorReason').text()).toEqual(
         "Requested permission of member:admin exceeds requester's permission. Please contact an administrator to make the requested change."
       );
     });
