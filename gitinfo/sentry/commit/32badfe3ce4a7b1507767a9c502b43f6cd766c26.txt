commit 32badfe3ce4a7b1507767a9c502b43f6cd766c26
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Sep 30 13:46:50 2011 -0700

    include checksum as part of the message id

diff --git a/CHANGES b/CHANGES
index e2a448702a..7734264f0f 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,3 +1,8 @@
+1.12.0
+
+* Adjusted message_id to include the checksum to avoid situations were the message_id
+  that was generated did not exist due to sampling.
+
 1.11.4
 
 * Several design improvements for group/message details panes.
diff --git a/sentry/client/base.py b/sentry/client/base.py
index e12c5574e2..fcf264ea52 100644
--- a/sentry/client/base.py
+++ b/sentry/client/base.py
@@ -209,7 +209,7 @@ class SentryClient(object):
             if request and message_id:
                 # attach the sentry object to the request
                 request.sentry = {
-                    'id': message_id,
+                    'id': '%s$%s' % (message_id, checksum),
                     'thrashed': True,
                 }
             
@@ -233,7 +233,7 @@ class SentryClient(object):
         if request:
             # attach the sentry object to the request
             request.sentry = {
-                'id': message_id,
+                'id': '%s$%s' % (message_id, checksum),
                 'thrashed': False,
             }
         
diff --git a/sentry/migrations/0014_auto.py b/sentry/migrations/0014_auto.py
new file mode 100644
index 0000000000..a31f27d75b
--- /dev/null
+++ b/sentry/migrations/0014_auto.py
@@ -0,0 +1,93 @@
+# encoding: utf-8
+import datetime
+from south.db import db
+from south.v2 import SchemaMigration
+from django.db import models
+
+class Migration(SchemaMigration):
+
+    def forwards(self, orm):
+        
+        # Adding index on 'Message', fields ['checksum']
+        db.create_index('sentry_message', ['checksum'])
+
+        # Adding index on 'GroupedMessage', fields ['checksum']
+        db.create_index('sentry_groupedmessage', ['checksum'])
+
+
+    def backwards(self, orm):
+        
+        # Removing index on 'GroupedMessage', fields ['checksum']
+        db.delete_index('sentry_groupedmessage', ['checksum'])
+
+        # Removing index on 'Message', fields ['checksum']
+        db.delete_index('sentry_message', ['checksum'])
+
+
+    models = {
+        'sentry.filtervalue': {
+            'Meta': {'unique_together': "(('key', 'value'),)", 'object_name': 'FilterValue'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'key': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
+            'value': ('django.db.models.fields.CharField', [], {'max_length': '200'})
+        },
+        'sentry.groupedmessage': {
+            'Meta': {'unique_together': "(('logger', 'view', 'checksum'),)", 'object_name': 'GroupedMessage'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'data': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'first_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'last_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'score': ('django.db.models.fields.IntegerField', [], {'default': '0'}),
+            'status': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0', 'db_index': 'True'}),
+            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '1', 'db_index': 'True'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'view': ('django.db.models.fields.CharField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'})
+        },
+        'sentry.message': {
+            'Meta': {'object_name': 'Message'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'data': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'datetime': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'group': ('django.db.models.fields.related.ForeignKey', [], {'blank': 'True', 'related_name': "'message_set'", 'null': 'True', 'to': "orm['sentry.GroupedMessage']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'message_id': ('django.db.models.fields.CharField', [], {'max_length': '32', 'unique': 'True', 'null': 'True'}),
+            'server_name': ('django.db.models.fields.CharField', [], {'max_length': '128', 'db_index': 'True'}),
+            'site': ('django.db.models.fields.CharField', [], {'max_length': '128', 'null': 'True', 'db_index': 'True'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'}),
+            'view': ('django.db.models.fields.CharField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'})
+        },
+        'sentry.messagecountbyminute': {
+            'Meta': {'unique_together': "(('group', 'date'),)", 'object_name': 'MessageCountByMinute'},
+            'date': ('django.db.models.fields.DateTimeField', [], {}),
+            'group': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.GroupedMessage']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'})
+        },
+        'sentry.messagefiltervalue': {
+            'Meta': {'unique_together': "(('key', 'value', 'group'),)", 'object_name': 'MessageFilterValue'},
+            'group': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.GroupedMessage']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'key': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
+            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'}),
+            'value': ('django.db.models.fields.CharField', [], {'max_length': '200'})
+        },
+        'sentry.messageindex': {
+            'Meta': {'unique_together': "(('column', 'value', 'object_id'),)", 'object_name': 'MessageIndex'},
+            'column': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'object_id': ('django.db.models.fields.PositiveIntegerField', [], {}),
+            'value': ('django.db.models.fields.CharField', [], {'max_length': '128'})
+        }
+    }
+
+    complete_apps = ['sentry']
diff --git a/sentry/models.py b/sentry/models.py
index 034a7fede0..0a65bbdbf0 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -90,7 +90,7 @@ class MessageBase(Model):
     message         = models.TextField()
     traceback       = models.TextField(blank=True, null=True)
     view            = models.CharField(max_length=200, blank=True, null=True)
-    checksum        = models.CharField(max_length=32)
+    checksum        = models.CharField(max_length=32, db_index=True)
     data            = GzippedDictField(blank=True, null=True)
 
     objects         = SentryManager()
diff --git a/sentry/web/views.py b/sentry/web/views.py
index ad351c9431..8aed1ee1a5 100644
--- a/sentry/web/views.py
+++ b/sentry/web/views.py
@@ -34,7 +34,8 @@ from sentry.utils import get_filters, is_float, get_signature, parse_auth_header
 from sentry.utils.compat import pickle
 from sentry.utils.stacks import get_template_info
 
-uuid_re = re.compile(r'^[a-z0-9]{32}$')
+uuid_re = re.compile(r'^[a-z0-9]{32}$', re.I)
+message_re = re.compile(r'^(?P<message_id>[a-z0-9]{32})\$(?P<checksum>[a-z0-9]{32})$', re.I)
 
 _LOGIN_URL = None
 def get_login_url(reset=False):
@@ -142,7 +143,21 @@ def search(request):
     has_search = bool(settings.SEARCH_ENGINE)
 
     if query:
-        if uuid_re.match(query):
+        result = message_re.match(query)
+        if result:
+            # Forward to message if it exists
+            message_id = result.group(1)
+            checksum = result.group(2)
+            try:
+                message = GroupedMessage.objects.get(checksum=checksum)
+            except GroupedMessage.DoesNotExist:
+                if not has_search:
+                    return render_to_response('sentry/invalid_message_id.html')
+                else:
+                    message_list = get_search_query_set(query)
+            else:
+                return HttpResponseRedirect(message.get_absolute_url())
+        elif uuid_re.match(query):
             # Forward to message if it exists
             try:
                 message = Message.objects.get(message_id=query)
diff --git a/setup.py b/setup.py
index 40d7d9d319..8a6f0387b4 100755
--- a/setup.py
+++ b/setup.py
@@ -38,7 +38,7 @@ if sys.version_info[:2] < (2, 5):
 
 setup(
     name='django-sentry',
-    version='1.11.4',
+    version='1.12.0',
     author='David Cramer',
     author_email='dcramer@gmail.com',
     url='http://github.com/dcramer/django-sentry',
