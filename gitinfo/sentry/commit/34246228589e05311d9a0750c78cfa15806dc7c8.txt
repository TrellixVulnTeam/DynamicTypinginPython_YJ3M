commit 34246228589e05311d9a0750c78cfa15806dc7c8
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Mon Mar 6 14:04:45 2017 -0600

    Update some SDK versions, add Java. (#5029)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index fe9f68ff95..9edfac4b85 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -1133,13 +1133,19 @@ SUDO_URL = 'sentry-sudo'
 
 # TODO(dcramer): move this to sentry.io so it can be automated
 SDK_VERSIONS = {
-    'raven-js': '3.9.1',
-    'raven-python': '5.32.0',
-    'sentry-laravel': '0.5.0',
-    'sentry-php': '1.6.0',
+    'raven-java': '7.8.3',
+    'raven-js': '3.12.0',
+    'raven-python': '6.0.0',
+    'sentry-laravel': '0.6.1',
+    'sentry-php': '1.6.2',
 }
 
 SDK_URLS = {
+    'raven-java': 'https://docs.sentry.io/clients/java/',
+    'raven-java:android': 'https://docs.sentry.io/clients/java/modules/android/',
+    'raven-java:log4j': 'https://docs.sentry.io/clients/java/modules/log4j/',
+    'raven-java:log4j2': 'https://docs.sentry.io/clients/java/modules/log4j2/',
+    'raven-java:logback': 'https://docs.sentry.io/clients/java/modules/logback/',
     'raven-js': 'https://docs.sentry.io/clients/javascript/',
     'raven-python': 'https://docs.sentry.io/clients/python/',
     'raven-swift': 'https://docs.sentry.io/clients/cocoa/',
diff --git a/src/sentry/interfaces/sdk.py b/src/sentry/interfaces/sdk.py
index c2e942be58..1a27a8b164 100644
--- a/src/sentry/interfaces/sdk.py
+++ b/src/sentry/interfaces/sdk.py
@@ -9,6 +9,23 @@ from sentry.interfaces.base import Interface, InterfaceValidationError
 from sentry.utils.safe import trim
 
 
+def get_with_prefix(d, k, default=None, delimiter=":"):
+    """\
+    Retrieve a value from the dictionary, falling back to using its
+    prefix, denoted by a delimiter (default ':'). Useful for cases
+    such as looking up `raven-java:logback` in a dict like
+    {"raven-java": "7.0.0"}.
+    """
+
+    prefix = k.split(delimiter, 1)[0]
+    if k in d:
+        return d[k]
+    elif prefix in d:
+        return d[prefix]
+    else:
+        return default
+
+
 class Sdk(Interface):
     """
     The SDK used to transmit this event.
@@ -39,8 +56,8 @@ class Sdk(Interface):
         return 'sdk'
 
     def get_api_context(self):
-        newest_version = settings.SDK_VERSIONS.get(self.name)
-        newest_name = settings.DEPRECATED_SDKS.get(self.name, self.name)
+        newest_version = get_with_prefix(settings.SDK_VERSIONS, self.name)
+        newest_name = get_with_prefix(settings.DEPRECATED_SDKS, self.name, self.name)
         if newest_version is not None:
             try:
                 is_newer = (
@@ -61,6 +78,6 @@ class Sdk(Interface):
                 # when this is correct we can make it available
                 # 'version': newest_version,
                 'isNewer': is_newer,
-                'url': settings.SDK_URLS.get(newest_name),
+                'url': get_with_prefix(settings.SDK_URLS, newest_name),
             },
         }
