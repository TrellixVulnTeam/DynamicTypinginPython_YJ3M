commit 09693d4fbe32a3dcd9def5e9413189a3b3929956
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Apr 27 15:18:31 2016 -0700

    Fixed API keys not correctly reflecting scopes

diff --git a/src/sentry/models/apikey.py b/src/sentry/models/apikey.py
index 6306bd982b..6815b0fec3 100644
--- a/src/sentry/models/apikey.py
+++ b/src/sentry/models/apikey.py
@@ -95,7 +95,7 @@ class ApiKey(Model):
         }
 
     def get_scopes(self):
-        return self.scopes.keys()
+        return [k for k, v in self.scopes.iteritems() if v]
 
     def has_scope(self, scope):
         return scope in self.scopes
@@ -120,5 +120,8 @@ class SystemKey(object):
         # All scopes!
         return ApiKey.scopes
 
+    def has_scope(self, scope):
+        return True
+
 
 ROOT_KEY = SystemKey()
diff --git a/tests/sentry/api/bases/test_organization.py b/tests/sentry/api/bases/test_organization.py
index e346aafac3..c06ee33b02 100644
--- a/tests/sentry/api/bases/test_organization.py
+++ b/tests/sentry/api/bases/test_organization.py
@@ -19,7 +19,10 @@ class OrganizationPermissionBase(TestCase):
         request.user = user
         request.method = method
         request.is_superuser = lambda: is_superuser if is_superuser is not None else user.is_superuser
-        return perm.has_object_permission(request, None, obj)
+        return (
+            perm.has_permission(request, None) and
+            perm.has_object_permission(request, None, obj)
+        )
 
 
 class OrganizationPermissionTest(OrganizationPermissionBase):
@@ -44,11 +47,34 @@ class OrganizationPermissionTest(OrganizationPermissionBase):
     def test_api_key_with_org_access(self):
         key = ApiKey.objects.create(
             organization=self.org,
+            scopes=getattr(ApiKey.scopes, 'org:read'),
         )
         assert self.has_object_perm('GET', self.org, auth=key)
 
     def test_api_key_without_org_access(self):
         key = ApiKey.objects.create(
             organization=self.create_organization(),
+            scopes=getattr(ApiKey.scopes, 'org:read')
+        )
+        assert not self.has_object_perm('GET', self.org, auth=key)
+
+    def test_api_key_without_access(self):
+        key = ApiKey.objects.create(
+            organization=self.org,
+            scopes=0,
         )
         assert not self.has_object_perm('GET', self.org, auth=key)
+
+    def test_api_key_with_wrong_access(self):
+        key = ApiKey.objects.create(
+            organization=self.org,
+            scopes=getattr(ApiKey.scopes, 'team:read'),
+        )
+        assert not self.has_object_perm('GET', self.org, auth=key)
+
+    def test_api_key_with_wrong_access_for_method(self):
+        key = ApiKey.objects.create(
+            organization=self.org,
+            scopes=getattr(ApiKey.scopes, 'org:read'),
+        )
+        assert not self.has_object_perm('PUT', self.org, auth=key)
diff --git a/tests/sentry/api/bases/test_project.py b/tests/sentry/api/bases/test_project.py
index 4fe16f2552..afb337a450 100644
--- a/tests/sentry/api/bases/test_project.py
+++ b/tests/sentry/api/bases/test_project.py
@@ -21,7 +21,10 @@ class ProjectPermissionBase(TestCase):
         request.user = user
         request.method = method
         request.is_superuser = lambda: is_superuser if is_superuser is not None else user.is_superuser
-        return perm.has_object_permission(request, None, obj)
+        return (
+            perm.has_permission(request, None) and
+            perm.has_object_permission(request, None, obj)
+        )
 
 
 class ProjectPermissionTest(ProjectPermissionBase):
@@ -76,11 +79,34 @@ class ProjectPermissionTest(ProjectPermissionBase):
     def test_api_key_with_org_access(self):
         key = ApiKey.objects.create(
             organization=self.org,
+            scopes=getattr(ApiKey.scopes, 'project:read'),
         )
         assert self.has_object_perm('GET', self.project, auth=key)
 
     def test_api_key_without_org_access(self):
         key = ApiKey.objects.create(
             organization=self.create_organization(),
+            scopes=getattr(ApiKey.scopes, 'project:read'),
+        )
+        assert not self.has_object_perm('GET', self.project, auth=key)
+
+    def test_api_key_without_access(self):
+        key = ApiKey.objects.create(
+            organization=self.org,
+            scopes=0,
         )
         assert not self.has_object_perm('GET', self.project, auth=key)
+
+    def test_api_key_with_wrong_access(self):
+        key = ApiKey.objects.create(
+            organization=self.org,
+            scopes=getattr(ApiKey.scopes, 'team:read'),
+        )
+        assert not self.has_object_perm('GET', self.project, auth=key)
+
+    def test_api_key_with_wrong_access_for_method(self):
+        key = ApiKey.objects.create(
+            organization=self.org,
+            scopes=getattr(ApiKey.scopes, 'project:read'),
+        )
+        assert not self.has_object_perm('PUT', self.project, auth=key)
diff --git a/tests/sentry/api/bases/test_team.py b/tests/sentry/api/bases/test_team.py
index 190cc24553..bb9f48528a 100644
--- a/tests/sentry/api/bases/test_team.py
+++ b/tests/sentry/api/bases/test_team.py
@@ -20,7 +20,10 @@ class TeamPermissionBase(TestCase):
         request.user = user
         request.method = method
         request.is_superuser = lambda: is_superuser if is_superuser is not None else user.is_superuser
-        return perm.has_object_permission(request, None, obj)
+        return (
+            perm.has_permission(request, None) and
+            perm.has_object_permission(request, None, obj)
+        )
 
 
 class TeamPermissionTest(TeamPermissionBase):
@@ -55,11 +58,34 @@ class TeamPermissionTest(TeamPermissionBase):
     def test_get_api_key_with_org_access(self):
         key = ApiKey.objects.create(
             organization=self.org,
+            scopes=getattr(ApiKey.scopes, 'team:read'),
         )
         assert self.has_object_perm('GET', self.team, auth=key)
 
     def test_get_api_key_without_org_access(self):
         key = ApiKey.objects.create(
             organization=self.create_organization(),
+            scopes=getattr(ApiKey.scopes, 'team:read'),
         )
         assert not self.has_object_perm('GET', self.team, auth=key)
+
+    def test_api_key_without_access(self):
+        key = ApiKey.objects.create(
+            organization=self.org,
+            scopes=0,
+        )
+        assert not self.has_object_perm('GET', self.org, auth=key)
+
+    def test_api_key_with_wrong_access(self):
+        key = ApiKey.objects.create(
+            organization=self.org,
+            scopes=getattr(ApiKey.scopes, 'project:read'),
+        )
+        assert not self.has_object_perm('GET', self.org, auth=key)
+
+    def test_api_key_with_wrong_access_for_method(self):
+        key = ApiKey.objects.create(
+            organization=self.org,
+            scopes=getattr(ApiKey.scopes, 'team:read'),
+        )
+        assert not self.has_object_perm('PUT', self.project, auth=key)
