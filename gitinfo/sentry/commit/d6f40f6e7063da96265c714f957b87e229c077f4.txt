commit d6f40f6e7063da96265c714f957b87e229c077f4
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Thu Aug 1 14:56:02 2019 -0700

    ref(suspect-commits): Add example ribbon (#14197)

diff --git a/src/sentry/static/sentry/app/components/events/eventCauseEmpty.jsx b/src/sentry/static/sentry/app/components/events/eventCauseEmpty.jsx
index b27cb34f8b..ff5079a7ab 100644
--- a/src/sentry/static/sentry/app/components/events/eventCauseEmpty.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventCauseEmpty.jsx
@@ -175,13 +175,13 @@ class EventCauseEmpty extends React.Component {
               </div>
             </ButtonList>
           </BoxHeader>
-          <Panel>
+          <ExampleCommitPanel>
             <CommitRow
               key={DUMMY_COMMIT.id}
               commit={DUMMY_COMMIT}
               customAvatar={<CustomAvatar src={codesworth} />}
             />
-          </Panel>
+          </ExampleCommitPanel>
         </StyledPanel>
       </div>
     );
@@ -242,6 +242,28 @@ const DismissButton = styled(Button)`
   border-bottom-left-radius: 0;
 `;
 
+const ExampleCommitPanel = styled(Panel)`
+  overflow: hidden;
+  pointer-events: none;
+  position: relative;
+  padding-right: ${space(3)};
+
+  &:after {
+    display: block;
+    content: 'Example';
+    position: absolute;
+    top: 16px;
+    right: -24px;
+    text-transform: uppercase;
+    background: #e46187;
+    padding: 4px 26px;
+    line-height: 11px;
+    font-size: 11px;
+    color: ${p => p.theme.white};
+    transform: rotate(45deg);
+  }
+`;
+
 const CustomAvatar = styled('img')`
   height: 48px;
   padding-right: 12px;
diff --git a/tests/js/spec/components/events/eventCauseEmpty.spec.jsx b/tests/js/spec/components/events/eventCauseEmpty.spec.jsx
index b8927913aa..56ce588358 100644
--- a/tests/js/spec/components/events/eventCauseEmpty.spec.jsx
+++ b/tests/js/spec/components/events/eventCauseEmpty.spec.jsx
@@ -40,7 +40,7 @@ describe('EventCauseEmpty', function() {
     await tick();
     wrapper.update();
 
-    expect(wrapper.find('CommitRow').exists()).toBe(true);
+    expect(wrapper.find('ExampleCommitPanel').exists()).toBe(true);
 
     expect(trackAdhocEvent).toHaveBeenCalledWith({
       eventKey: 'event_cause.viewed',
@@ -77,7 +77,7 @@ describe('EventCauseEmpty', function() {
       })
     );
 
-    expect(wrapper.find('CommitRow').exists()).toBe(false);
+    expect(wrapper.find('ExampleCommitPanel').exists()).toBe(false);
 
     expect(trackAnalyticsEvent).toHaveBeenCalledWith({
       eventKey: 'event_cause.snoozed',
@@ -107,7 +107,7 @@ describe('EventCauseEmpty', function() {
     await tick();
     wrapper.update();
 
-    expect(wrapper.find('CommitRow').exists()).toBe(false);
+    expect(wrapper.find('ExampleCommitPanel').exists()).toBe(false);
   });
 
   it('renders when snoozed more than 7 days ago', async function() {
@@ -129,7 +129,7 @@ describe('EventCauseEmpty', function() {
     await tick();
     wrapper.update();
 
-    expect(wrapper.find('CommitRow').exists()).toBe(true);
+    expect(wrapper.find('ExampleCommitPanel').exists()).toBe(true);
   });
 
   it('can be dismissed', async function() {
@@ -159,7 +159,7 @@ describe('EventCauseEmpty', function() {
       })
     );
 
-    expect(wrapper.find('CommitRow').exists()).toBe(false);
+    expect(wrapper.find('ExampleCommitPanel').exists()).toBe(false);
 
     expect(trackAnalyticsEvent).toHaveBeenCalledWith({
       eventKey: 'event_cause.dismissed',
@@ -185,7 +185,7 @@ describe('EventCauseEmpty', function() {
     await tick();
     wrapper.update();
 
-    expect(wrapper.find('CommitRow').exists()).toBe(false);
+    expect(wrapper.find('ExampleCommitPanel').exists()).toBe(false);
   });
 
   it('can capture analytics on docs click', async function() {
