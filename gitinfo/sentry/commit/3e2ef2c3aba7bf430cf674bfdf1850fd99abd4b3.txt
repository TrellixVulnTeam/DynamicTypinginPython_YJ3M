commit 3e2ef2c3aba7bf430cf674bfdf1850fd99abd4b3
Author: David Cramer <dcramer@david-cramers-macbook-2.local>
Date:   Thu Sep 17 14:57:15 2009 -0500

    Several fixes from existing Google Code tickets.

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000000..50b82d2290
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,4 @@
+/build
+/dist
+/django_db_log.egg-info
+*.pyc
\ No newline at end of file
diff --git a/README.rst b/README.rst
new file mode 100644
index 0000000000..0bc905e1df
--- /dev/null
+++ b/README.rst
@@ -0,0 +1,43 @@
+django-db-log
+-------------
+
+Logs Django exceptions to your database handler.
+
+Install
+=======
+
+The easiest way to install the package is via setuptools::
+
+	easy_install django-db-log
+
+Once installed, update your settings.py and add the middleware and installed apps settings::
+
+	MIDDLEWARE_CLASSES = (
+	    'django.middleware.common.CommonMiddleware',
+	    'django.contrib.sessions.middleware.SessionMiddleware',
+	    'django.contrib.auth.middleware.AuthenticationMiddleware',
+	    ...
+	    'djangodblog.middleware.DBLogMiddleware',
+	)
+
+	INSTALLED_APPS = (
+	    'django.contrib.admin',
+	    'django.contrib.auth',
+	    'django.contrib.contenttypes',
+	    'django.contrib.sessions',
+	    'djangodblog',
+	    ...
+	)
+
+Finally, run ``python manage.py syncdb`` to create the database tables.
+
+Usage
+=====
+
+You will find two new admin panels in the automatically built Django administration:
+
+* Errors
+* Error batchs
+
+It will store every single error inside of the `Errors` model, and it will store a collective, or summary, of errors inside of `Error batchs` (this is more useful for most cases).
+
diff --git a/djangodblog/__init__.py b/djangodblog/__init__.py
index 55996692ec..660268c015 100644
--- a/djangodblog/__init__.py
+++ b/djangodblog/__init__.py
@@ -1,4 +1 @@
-import djangodblog.admin
-
-from models import *
-from middleware import *
+__version__ = (1, 1, 0)
\ No newline at end of file
diff --git a/djangodblog/middleware.py b/djangodblog/middleware.py
index ae9cbf4450..f1fa86bd07 100644
--- a/djangodblog/middleware.py
+++ b/djangodblog/middleware.py
@@ -6,6 +6,7 @@ import datetime
 from django.conf import settings
 from django.http import Http404
 from django.utils.hashcompat import md5_constructor
+from django.utils.encoding import smart_unicode
 
 from djangodblog.models import Error, ErrorBatch
 
@@ -24,7 +25,7 @@ class DBLogMiddleware(object):
 
         defaults = dict(
             class_name  = class_name,
-            message     = getattr(exception, 'message', ''),
+            message     = smart_unicode(exception),
             url         = request.build_absolute_uri(),
             server_name = server_name,
             traceback   = tb_text,
@@ -44,4 +45,4 @@ class DBLogMiddleware(object):
                 batch.last_seen = datetime.datetime.now()
                 batch.save()
         except Exception, exc:
-            warnings.warn(unicode(exc))
\ No newline at end of file
+            warnings.warn(smart_unicode(exc))
\ No newline at end of file
diff --git a/djangodblog/models.py b/djangodblog/models.py
index ffb53fba0f..5598567cea 100644
--- a/djangodblog/models.py
+++ b/djangodblog/models.py
@@ -1,11 +1,15 @@
 from django.db import models
 from django.utils.translation import ugettext_lazy as _
+try:
+    from idmapper.models import SharedMemoryModel as Model
+except ImportError:
+    Model = models.Model
 
 import datetime
 
 __all__ = ('Error', 'ErrorBatch')
 
-class ErrorBatch(models.Model):
+class ErrorBatch(Model):
     class_name      = models.CharField(_('Type'), max_length=128)
     message         = models.TextField()
     traceback       = models.TextField()
@@ -19,8 +23,9 @@ class ErrorBatch(models.Model):
 
     class Meta:
         unique_together = (('class_name', 'server_name', 'checksum'),)
+        verbose_name_plural = 'Error batches'
 
-class Error(models.Model):
+class Error(Model):
     class_name      = models.CharField(_('type'), max_length=128)
     message         = models.TextField()
     traceback       = models.TextField()
diff --git a/setup.py b/setup.py
index 3002c0f382..d4296b1e4c 100644
--- a/setup.py
+++ b/setup.py
@@ -1,12 +1,26 @@
 #!/usr/bin/env python
 
-from distutils.core import setup
+from setuptools import setup, find_packages
 
-setup(name='django-db-log',
-      version='1.0.1',
-      description='Django DB Error Logging',
-      author='David Cramer',
-      author_email='dcramer@gmail.com',
-      url='http://code.google.com/p/django-db-log/',
-      packages=['djangodblog'],
-     )
+import djangodblog
+
+setup(
+    name='django-db-log',
+    version=".".join(map(str, djangodblog.__version__)),
+    author="David Cramer",
+    author_email="dcramer@gmail.com",
+    url='http://github.com/dcramer/django-db-log',
+    install_requires=[
+        'Django>=1.0'
+    ],
+    description = 'Exception Logging to a Database in Django',
+    packages=find_packages(),
+    include_package_data=True,
+    classifiers=[
+        "Framework :: Django",
+        "Intended Audience :: Developers",
+        "Intended Audience :: System Administrators",
+        "Operating System :: OS Independent",
+        "Topic :: Software Development"
+    ],
+)
\ No newline at end of file
