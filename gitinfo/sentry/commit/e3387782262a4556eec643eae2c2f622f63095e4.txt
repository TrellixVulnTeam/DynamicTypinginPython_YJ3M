commit e3387782262a4556eec643eae2c2f622f63095e4
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 8 19:09:14 2012 -0800

    Initial work on Django 1.4 support

diff --git a/setup.py b/setup.py
index 1fedb182fc..487dbab1a6 100755
--- a/setup.py
+++ b/setup.py
@@ -28,6 +28,7 @@ from setuptools import setup, find_packages
 tests_require = [
     'nose==1.1.2',
     'django-nose==0.1.3',
+    'pytz==2011n',
 ]
 
 install_requires = [
diff --git a/tests/tests.py b/tests/tests.py
index 21966331dc..c82843a8b9 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -2,8 +2,10 @@
 
 from __future__ import absolute_import
 
+import datetime
 import getpass
 import logging
+import pytz
 
 from django.core import mail
 
@@ -116,9 +118,26 @@ class SentryManagerTest(TestCase):
         self.assertRaises(InvalidData, Group.objects.from_kwargs, 1)
 
     def test_valid_only_message(self):
-        group = Group.objects.from_kwargs(1, message='foo')
-        self.assertEquals(group.message, 'foo')
-        self.assertEquals(group.project_id, 1)
+        event = Group.objects.from_kwargs(1, message='foo')
+        self.assertEquals(event.message, 'foo')
+        self.assertEquals(event.project_id, 1)
+
+    def test_valid_timestamp_with_tz(self):
+        with self.Settings(USE_TZ=True):
+            date = datetime.datetime.now().replace(tzinfo=pytz.utc)
+            event = Group.objects.from_kwargs(1, message='foo', timestamp=date)
+            self.assertEquals(event.message, 'foo')
+            self.assertEquals(event.project_id, 1)
+            self.assertEquals(event.datetime, date)
+
+    def test_valid_timestamp_without_tz(self):
+        # TODO: this doesnt error, but it will throw a warning. What should we do?
+        with self.Settings(USE_TZ=True):
+            date = datetime.datetime.now()
+            event = Group.objects.from_kwargs(1, message='foo', timestamp=date)
+            self.assertEquals(event.message, 'foo')
+            self.assertEquals(event.project_id, 1)
+            self.assertEquals(event.datetime, date)
 
     def test_legacy_data(self):
         result = Group.objects.convert_legacy_kwargs({'message_id': '1234'})
diff --git a/tests/web/tests.py b/tests/web/tests.py
index 74041f1928..0ff2e08605 100644
--- a/tests/web/tests.py
+++ b/tests/web/tests.py
@@ -346,23 +346,16 @@ class SentryHelpersTest(TestCase):
     def test_get_db_engine(self):
         from sentry.utils import get_db_engine
         _databases = getattr(django_settings, 'DATABASES', {}).copy()
-        _engine = django_settings.DATABASE_ENGINE
 
-        django_settings.DATABASE_ENGINE = ''
         django_settings.DATABASES['default'] = {'ENGINE': 'blah.sqlite3'}
 
         self.assertEquals(get_db_engine(), 'sqlite3')
 
-        django_settings.DATABASE_ENGINE = 'mysql'
-
-        self.assertEquals(get_db_engine(), 'sqlite3')
-
         django_settings.DATABASES['default'] = {'ENGINE': 'blah.mysql'}
 
         self.assertEquals(get_db_engine(), 'mysql')
 
         django_settings.DATABASES = _databases
-        django_settings.DATABASE_ENGINE = _engine
 
     def test_get_login_url(self):
         with self.Settings(LOGIN_URL='/really-a-404'):
