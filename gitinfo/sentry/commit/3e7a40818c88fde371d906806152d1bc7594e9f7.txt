commit 3e7a40818c88fde371d906806152d1bc7594e9f7
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Oct 12 18:16:01 2014 +0100

    Expand assignee API support

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index b0bbc31c85..0fe579c635 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -90,7 +90,7 @@ class GroupDetailsEndpoint(Endpoint):
 
         serializer = GroupSerializer(data=request.DATA, partial=True)
         if not serializer.is_valid():
-            return Response(status=400)
+            return Response(serializer.errors, status=400)
 
         result = serializer.object
 
@@ -158,22 +158,32 @@ class GroupDetailsEndpoint(Endpoint):
                     )
                 else:
                     affected = True
+
+                if affected:
+                    create_or_update(
+                        Activity,
+                        project=group.project,
+                        group=group,
+                        type=Activity.ASSIGNED,
+                        user=request.user,
+                        data={
+                            'assignee': result['assignedTo'].id,
+                        }
+                    )
+
             else:
                 affected = GroupAssignee.objects.filter(
                     group=group,
                 ).delete()
 
-            if affected:
-                create_or_update(
-                    Activity,
-                    project=group.project,
-                    group=group,
-                    type=Activity.ASSIGNED,
-                    user=request.user,
-                    data={
-                        'assignee': result['assignedTo'].id,
-                    }
-                )
+                if affected:
+                    create_or_update(
+                        Activity,
+                        project=group.project,
+                        group=group,
+                        type=Activity.UNASSIGNED,
+                        user=request.user,
+                    )
 
         return Response(serialize(group, request.user))
 
diff --git a/src/sentry/api/fields/user.py b/src/sentry/api/fields/user.py
index ed543c9565..2ff62c5706 100644
--- a/src/sentry/api/fields/user.py
+++ b/src/sentry/api/fields/user.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import, print_function
 from rest_framework import serializers
 
 from sentry.models import User
+from sentry.utils.auth import find_users
 
 
 class UserField(serializers.WritableField):
@@ -13,7 +14,13 @@ class UserField(serializers.WritableField):
         if not data:
             return None
 
+        if data.isdigit():
+            try:
+                return User.objects.get(id=data)
+            except User.DoesNotExist:
+                pass
+
         try:
-            return User.objects.get(username__iexact=data)
-        except User.DoesNotExist:
+            return find_users(data)[0]
+        except IndexError:
             raise serializers.ValidationError('Unable to find user')
diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index ffbfcee159..c88013900c 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -5,7 +5,7 @@ from datetime import timedelta
 from django.core.urlresolvers import reverse
 from django.utils import timezone
 
-from sentry.api.serializers import Serializer, register
+from sentry.api.serializers import Serializer, register, serialize
 from sentry.app import tsdb
 from sentry.constants import TAG_LABELS
 from sentry.models import (
@@ -82,7 +82,7 @@ class GroupSerializer(Serializer):
                 }
 
             result[item] = {
-                'assigned_to': assignees.get(item),
+                'assigned_to': serialize(assignees.get(item.id)),
                 'is_bookmarked': item.id in bookmarks,
                 'has_seen': seen_groups.get(item.id, active_date) > active_date,
                 'tags': tags,
diff --git a/src/sentry/models/activity.py b/src/sentry/models/activity.py
index f850781ba1..d9923c4975 100644
--- a/src/sentry/models/activity.py
+++ b/src/sentry/models/activity.py
@@ -28,6 +28,7 @@ class Activity(Model):
     FIRST_SEEN = 9
     RELEASE = 10
     ASSIGNED = 11
+    UNASSIGNED = 12
 
     TYPE = (
         # (TYPE, verb-slug)
@@ -42,6 +43,7 @@ class Activity(Model):
         (FIRST_SEEN, 'first_seen'),
         (RELEASE, 'release'),
         (ASSIGNED, 'assigned'),
+        (UNASSIGNED, 'unassigned'),
     )
 
     project = models.ForeignKey('sentry.Project')
diff --git a/src/sentry/templatetags/sentry_activity.py b/src/sentry/templatetags/sentry_activity.py
index 1fdfb72244..f2a865751a 100644
--- a/src/sentry/templatetags/sentry_activity.py
+++ b/src/sentry/templatetags/sentry_activity.py
@@ -26,6 +26,8 @@ ACTIVITY_ACTION_STRINGS = {
     Activity.SET_REGRESSION: 'marked this event as a regression',
     Activity.CREATE_ISSUE: u'created an issue on {provider:s} titled <a href="{location:s}">{title:s}</a>',
     Activity.FIRST_SEEN: 'first saw this event',
+    Activity.ASSIGNED: 'assigned this event',
+    Activity.UNASSIGNED: 'unassigned this event',
 }
 
 
