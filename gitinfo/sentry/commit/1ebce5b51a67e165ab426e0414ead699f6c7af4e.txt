commit 1ebce5b51a67e165ab426e0414ead699f6c7af4e
Author: ted kaemming <t.kaemming+github@gmail.com>
Date:   Fri Aug 12 12:44:26 2016 -0700

    Support report unsubscribe options. (#3928)

diff --git a/src/sentry/tasks/reports.py b/src/sentry/tasks/reports.py
index 766ec8fc18..2c7c5469da 100644
--- a/src/sentry/tasks/reports.py
+++ b/src/sentry/tasks/reports.py
@@ -15,7 +15,7 @@ from sentry import features
 from sentry.app import tsdb
 from sentry.models import (
     Activity, Group, GroupStatus, Organization, OrganizationStatus, Project,
-    Team, User
+    Team, User, UserOption,
 )
 from sentry.tasks.base import instrumented_task
 from sentry.utils.dates import floor_to_utc_day, to_datetime, to_timestamp
@@ -373,6 +373,23 @@ def build_message(timestamp, duration, organization, user, report):
     return message
 
 
+DISABLED_ORGANIZATIONS_USER_OPTION_KEY = 'reports:disabled-organizations'
+
+
+def user_subscribed_to_organization_reports(user, organization):
+    return organization.id not in UserOption.objects.get_value(
+        user=user,
+        project=None,
+        key=DISABLED_ORGANIZATIONS_USER_OPTION_KEY,
+        default=[],
+    )
+
+
+class Skipped(object):
+    NotSubscribed = object()
+    NoProjects = object()
+
+
 @instrumented_task(
     name='sentry.tasks.reports.deliver_organization_user_report',
     queue='reports.deliver')
@@ -380,6 +397,14 @@ def deliver_organization_user_report(timestamp, duration, organization_id, user_
     organization = _get_organization_queryset().get(id=organization_id)
     user = User.objects.get(id=user_id)
 
+    if not user_subscribed_to_organization_reports(user, organization):
+        logger.debug(
+            'Skipping report for %r to %r, user is not subscribed to reports.',
+            organization,
+            user,
+        )
+        return Skipped.NotSubscribed
+
     projects = set()
     for team in Team.objects.get_for_user(organization, user):
         projects.update(
@@ -387,7 +412,12 @@ def deliver_organization_user_report(timestamp, duration, organization_id, user_
         )
 
     if not projects:
-        return
+        logger.debug(
+            'Skipping report for %r to %r, user is not associated with any projects.',
+            organization,
+            user,
+        )
+        return Skipped.NoProjects
 
     interval = _to_interval(timestamp, duration)
 
diff --git a/tests/sentry/tasks/test_reports.py b/tests/sentry/tasks/test_reports.py
index 7cd3387867..7f62464cee 100644
--- a/tests/sentry/tasks/test_reports.py
+++ b/tests/sentry/tasks/test_reports.py
@@ -1,13 +1,17 @@
 from __future__ import absolute_import
 
-import pytest
+import functools
+
 import mock
+import pytest
 from django.core import mail
 
-from sentry.models import Project
+from sentry.models import Project, UserOption
 from sentry.tasks.reports import (
-    change, clean_series, merge_mappings, merge_sequences, merge_series,
-    safe_add, prepare_reports,
+    DISABLED_ORGANIZATIONS_USER_OPTION_KEY, Skipped, change, clean_series,
+    deliver_organization_user_report, merge_mappings, merge_sequences,
+    merge_series, prepare_reports, safe_add,
+    user_subscribed_to_organization_reports
 )
 from sentry.testutils.cases import TestCase
 from sentry.utils.dates import to_datetime
@@ -175,3 +179,48 @@ class ReportTestCase(TestCase):
 
             message = mail.outbox[0]
             assert self.organization.name in message.subject
+
+    def test_deliver_organization_user_report_respects_settings(self):
+        user = self.user
+        organization = self.organization
+
+        set_option_value = functools.partial(
+            UserOption.objects.set_value,
+            user,
+            None,
+            DISABLED_ORGANIZATIONS_USER_OPTION_KEY,
+        )
+
+        deliver_report = functools.partial(
+            deliver_organization_user_report,
+            0,
+            60 * 60 * 24 * 7,
+            organization.id,
+            user.id,
+        )
+
+        set_option_value([])
+        assert deliver_report() is not Skipped.NotSubscribed
+
+        set_option_value([organization.id])
+        assert deliver_report() is Skipped.NotSubscribed
+
+    def test_user_subscribed_to_organization_reports(self):
+        user = self.user
+        organization = self.organization
+
+        set_option_value = functools.partial(
+            UserOption.objects.set_value,
+            user,
+            None,
+            DISABLED_ORGANIZATIONS_USER_OPTION_KEY,
+        )
+
+        set_option_value([])
+        assert user_subscribed_to_organization_reports(user, organization) is True
+
+        set_option_value([-1])
+        assert user_subscribed_to_organization_reports(user, organization) is True
+
+        set_option_value([organization.id])
+        assert user_subscribed_to_organization_reports(user, organization) is False
