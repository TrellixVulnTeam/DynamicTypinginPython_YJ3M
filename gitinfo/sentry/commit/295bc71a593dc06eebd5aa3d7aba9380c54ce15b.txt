commit 295bc71a593dc06eebd5aa3d7aba9380c54ce15b
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jul 23 22:48:07 2013 -0700

    Strip message and exception values

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index 71b7561257..83eb45e848 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -24,6 +24,7 @@ from django.utils.translation import ugettext as _
 
 from sentry.app import env
 from sentry.models import UserOption
+from sentry.utils.strings import strip
 from sentry.web.helpers import render_to_string
 
 _Exception = Exception
@@ -704,7 +705,7 @@ class SingleException(Interface):
         return {
             'is_public': is_public,
             'event': event,
-            'exception_value': self.value,
+            'exception_value': strip(self.value) or strip(self.type) or '<empty value>',
             'exception_type': self.type,
             'exception_module': self.module,
             'fullname': fullname,
diff --git a/src/sentry/models.py b/src/sentry/models.py
index b696d1041a..1bf156c26c 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -52,7 +52,7 @@ from sentry.utils.models import (
     update)
 from sentry.utils.imports import import_string
 from sentry.utils.safe import safe_execute
-from sentry.utils.strings import truncatechars
+from sentry.utils.strings import truncatechars, strip
 
 __all__ = ('Event', 'Group', 'Project', 'SearchDocument')
 
@@ -478,7 +478,7 @@ class EventBase(Model):
         super(EventBase, self).save(*args, **kwargs)
 
     def error(self):
-        if self.message:
+        if strip(self.message):
             message = smart_unicode(self.message)
             if len(message) > 100:
                 message = message[:97] + '...'
@@ -491,9 +491,9 @@ class EventBase(Model):
         return '\n' in self.message.strip('\n') or len(self.message) > 100
 
     def message_top(self):
-        if self.culprit:
+        if strip(self.culprit):
             return self.culprit
-        if not self.message:
+        if not strip(self.message):
             return '<unlabeled message>'
         return truncatechars(self.message.splitlines()[0], 100)
 
diff --git a/src/sentry/utils/strings.py b/src/sentry/utils/strings.py
index 3ce947be66..7b0da217cc 100644
--- a/src/sentry/utils/strings.py
+++ b/src/sentry/utils/strings.py
@@ -34,3 +34,9 @@ def decompress(value):
 
 def gunzip(value):
     return zlib.decompress(value, 16 + zlib.MAX_WBITS)
+
+
+def strip(value):
+    if not value:
+        return ''
+    return value.strip()
