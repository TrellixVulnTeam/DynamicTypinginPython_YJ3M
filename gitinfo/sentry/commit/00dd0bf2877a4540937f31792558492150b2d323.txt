commit 00dd0bf2877a4540937f31792558492150b2d323
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Dec 6 13:23:34 2015 -0800

    Dont re-render hook-injected nodes

diff --git a/src/sentry/static/sentry/app/components/footer.jsx b/src/sentry/static/sentry/app/components/footer.jsx
index e1b5786df7..7fe574907e 100644
--- a/src/sentry/static/sentry/app/components/footer.jsx
+++ b/src/sentry/static/sentry/app/components/footer.jsx
@@ -4,13 +4,20 @@ import HookStore from '../stores/hookStore';
 import {t} from '../locale';
 
 const Footer = React.createClass({
-  render() {
-    let config = ConfigStore.getConfig();
-    let children = [];
+  getInitialState() {
+    // Allow injection via getsentry et all
+    let hooks = [];
     HookStore.get('footer').forEach((cb) => {
-      children.push(cb());
+      hooks.push(cb());
     });
 
+    return {
+      hooks: hooks,
+    };
+  },
+
+  render() {
+    let config = ConfigStore.getConfig();
     return (
       <footer>
         <div className="container">
@@ -23,7 +30,7 @@ const Footer = React.createClass({
             Sentry {config.version.current}
           </div>
           <a href="/" className="icon-sentry-logo"></a>
-          {children}
+          {this.state.hooks}
         </div>
       </footer>
     );
diff --git a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
index cfc968c240..076e4c31fd 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
@@ -8,18 +8,25 @@ import {t} from '../../locale';
 const HomeSidebar = React.createClass({
   mixins: [OrganizationState],
 
+  getInitialState() {
+    // Allow injection via getsentry et all
+    let org = this.getOrganization();
+    let hooks = [];
+    HookStore.get('organization:sidebar').forEach((cb) => {
+      hooks.push(cb(org));
+    });
+
+    return {
+      hooks: hooks,
+    };
+  },
+
   render() {
     let access = this.getAccess();
     let features = this.getFeatures();
     let org = this.getOrganization();
     let urlPrefix = ConfigStore.get('urlPrefix') + '/organizations/' + org.slug;
 
-    // Allow injection via getsentry et all
-    let children = [];
-    HookStore.get('organization:sidebar').forEach((cb) => {
-      children.push(cb(org));
-    });
-
     let orgId = org.slug;
     return (
       <div>
@@ -70,7 +77,7 @@ const HomeSidebar = React.createClass({
             </ul>
           </div>
         }
-        {children}
+        {this.state.hooks}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
index 06fa5da3f7..a5c9c3abcf 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -59,11 +59,18 @@ const OrganizationDetails = React.createClass({
   fetchData() {
     this.api.request(this.getOrganizationDetailsEndpoint(), {
       success: (data) => {
+        // Allow injection via getsentry et all
+        let hooks = [];
+        HookStore.get('organization:header').forEach((cb) => {
+          hooks.push(cb(data));
+        });
+
         this.setState({
           organization: data,
           loading: false,
           error: false,
-          errorType: null
+          errorType: null,
+          hooks: hooks,
         });
 
         TeamStore.loadInitialData(data.teams);
@@ -116,19 +123,12 @@ const OrganizationDetails = React.createClass({
       }
     }
 
-    // Allow injection via getsentry et all
-    let org = this.state.organization;
-    let children = [];
-    HookStore.get('organization:header').forEach((cb) => {
-      children.push(cb(org));
-    });
-
     let params = this.props.params;
 
     return (
       <DocumentTitle title={this.getTitle()}>
         <div className="app">
-          {children}
+          {this.state.hooks}
           <Header orgId={params.orgId}/>
           {this.props.children}
           <Footer />
