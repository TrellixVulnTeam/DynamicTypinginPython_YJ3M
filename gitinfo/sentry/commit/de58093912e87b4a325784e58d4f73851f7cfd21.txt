commit de58093912e87b4a325784e58d4f73851f7cfd21
Author: NisanthanNanthakumar <nisanthan.nanthakumar@sentry.io>
Date:   Tue Apr 7 13:42:48 2020 -0700

    feat(IntegrationDirectory): Update integrationListDirectory to use experiment variant (#18119)
    
    Objective
    Control whether category select is shown in the Integration Directory with the IntegrationDirectoryCategoryExperiment Planout experiment.

diff --git a/src/sentry/static/sentry/app/data/experimentConfig.tsx b/src/sentry/static/sentry/app/data/experimentConfig.tsx
index d6225efd22..1f4b154062 100644
--- a/src/sentry/static/sentry/app/data/experimentConfig.tsx
+++ b/src/sentry/static/sentry/app/data/experimentConfig.tsx
@@ -25,6 +25,12 @@ export const experimentList = [
     parameter: 'exposed',
     assignments: [1, 0, -1],
   },
+  {
+    key: 'IntegrationDirectoryCategoryExperiment',
+    type: ExperimentType.Organization,
+    parameter: 'variant',
+    assignments: ['0', '1'],
+  },
 ] as const;
 
 export const experimentConfig = experimentList.reduce(
diff --git a/src/sentry/static/sentry/app/utils/integrationUtil.tsx b/src/sentry/static/sentry/app/utils/integrationUtil.tsx
index 165c594cd8..17e236df38 100644
--- a/src/sentry/static/sentry/app/utils/integrationUtil.tsx
+++ b/src/sentry/static/sentry/app/utils/integrationUtil.tsx
@@ -33,8 +33,17 @@ export const clearAnalyticsSession = () => {
 export const getAnalyticsSessionId = () =>
   window.sessionStorage.getItem(INTEGRATIONS_ANALYTICS_SESSION_KEY);
 
-export const getCategorySelectActive = () =>
-  localStorage.getItem(SHOW_INTEGRATION_DIRECTORY_CATEGORY_SELECT) === '1';
+export const getCategorySelectActive = (organization?: Organization) => {
+  const variant = organization?.experiments?.IntegrationDirectoryCategoryExperiment;
+  switch (localStorage.getItem(SHOW_INTEGRATION_DIRECTORY_CATEGORY_SELECT)) {
+    case '1':
+      return true;
+    case '0':
+      return false;
+    default:
+      return variant && variant === '1';
+  }
+};
 
 export type SingleIntegrationEvent = {
   eventKey:
@@ -93,10 +102,17 @@ type IntegrationSearchEvent = {
   num_results: number;
 };
 
+type IntegrationCategorySelectEvent = {
+  eventKey: 'integrations.directory_category_selected';
+  eventName: 'Integrations: Directory Category Selected';
+  category: string;
+};
+
 type IntegrationsEventParams = (
   | MultipleIntegrationsEvent
   | SingleIntegrationEvent
   | IntegrationSearchEvent
+  | IntegrationCategorySelectEvent
 ) & {
   view?:
     | 'external_install'
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
index d0e924c563..7a0baa4ea4 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
@@ -36,6 +36,7 @@ import SearchInput from 'app/components/forms/searchInput';
 import {createFuzzySearch} from 'app/utils/createFuzzySearch';
 import space from 'app/styles/space';
 import SelectControl from 'app/components/forms/selectControl';
+import {logExperiment} from 'app/utils/analytics';
 
 import {POPULARITY_WEIGHT, documentIntegrations} from './constants';
 import IntegrationRow from './integrationRow';
@@ -81,6 +82,13 @@ export class IntegrationListDirectory extends AsyncComponent<
     };
   }
 
+  componentDidMount() {
+    logExperiment({
+      organization: this.props.organization,
+      key: 'IntegrationDirectoryCategoryExperiment',
+    });
+  }
+
   onLoadAllEndpointsSuccess() {
     const {publishedApps, orgOwnedApps, extraApp, plugins} = this.state;
     const published = publishedApps || [];
@@ -290,7 +298,17 @@ export class IntegrationListDirectory extends AsyncComponent<
         return getCategoriesForIntegration(integration).includes(category);
       });
 
-      return this.setState({displayedList: result});
+      return this.setState({displayedList: result}, () =>
+        trackIntegrationEvent(
+          {
+            eventKey: 'integrations.directory_category_selected',
+            eventName: 'Integrations: Directory Category Selected',
+            view: 'integrations_directory',
+            category,
+          },
+          this.props.organization
+        )
+      );
     });
   };
   // Rendering
@@ -399,6 +417,7 @@ export class IntegrationListDirectory extends AsyncComponent<
 
     const title = t('Integrations');
     const categoryList = uniq(flatten(list.map(getCategoriesForIntegration)));
+
     return (
       <React.Fragment>
         <SentryDocumentTitle title={title} objSlug={orgId} />
@@ -408,7 +427,7 @@ export class IntegrationListDirectory extends AsyncComponent<
             title={title}
             action={
               <ActionContainer>
-                {getCategorySelectActive() ? (
+                {getCategorySelectActive(this.props.organization) ? (
                   <SelectControl
                     name="select-categories"
                     onChange={this.onCategorySelect}
