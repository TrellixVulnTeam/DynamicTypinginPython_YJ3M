commit 354842912fa10de391af09b25bd68edf77ea887b
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Thu Sep 8 10:41:25 2016 -0700

    Add password confirmation when enabling or disabling 2fa (#4068)

diff --git a/src/sentry/templates/sentry/account/twofactor/enroll_totp.html b/src/sentry/templates/sentry/account/twofactor/enroll_totp.html
index df100e5e0a..66f95d1219 100644
--- a/src/sentry/templates/sentry/account/twofactor/enroll_totp.html
+++ b/src/sentry/templates/sentry/account/twofactor/enroll_totp.html
@@ -35,7 +35,7 @@
       <input type="hidden" name="totp_secret" value="{{ auth.secret }}">
       <div>
         <a href="{% url 'sentry-account-settings-2fa-totp' %}" class="btn btn-default">{% trans "Cancel" %}</a>
-        <button type="submit" class="btn btn-primary">{% trans "Confirm" %}</button> 
+        <button type="submit" class="btn btn-primary">{% trans "Confirm" %}</button>
       </div>
     </form>
   </fieldset>
diff --git a/src/sentry/templates/sentry/account/twofactor/remove.html b/src/sentry/templates/sentry/account/twofactor/remove.html
index 2ee0745b5e..e0aef22ed9 100644
--- a/src/sentry/templates/sentry/account/twofactor/remove.html
+++ b/src/sentry/templates/sentry/account/twofactor/remove.html
@@ -1,5 +1,6 @@
 {% extends "sentry/bases/twofactor_settings.html" %}
 
+{% load crispy_forms_tags %}
 {% load i18n %}
 {% load sentry_helpers %}
 
@@ -21,6 +22,8 @@
 
   <form action="" method="post" class="form-stacked">
     {% csrf_token %}
+    {{ password_form|as_crispy_errors }}
+    {{ password_form.password|as_crispy_field }}
     <input type="hidden" name="remove" value="1">
     <fieldset class="form-actions">
       <button type="submit" name="yes" class="btn btn-default btn-primary">{% trans "Yes" %}</button>
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index 91e63710b0..ca5b2706aa 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -531,3 +531,18 @@ class TwoFactorForm(forms.Form):
                    'autofocus': True,
         }),
     )
+    password = forms.CharField(
+        label=_('Sentry account password'),
+        widget=forms.PasswordInput(),
+        help_text='You will need to enter your current Sentry account password to make changes.',
+        required=True,
+    )
+
+
+class ConfirmPasswordForm(forms.Form):
+    password = forms.CharField(
+        label=_('Sentry account password'),
+        widget=forms.PasswordInput(),
+        help_text='You will need to enter your current Sentry account password to make changes.',
+        required=True,
+    )
diff --git a/src/sentry/web/frontend/accounts_twofactor.py b/src/sentry/web/frontend/accounts_twofactor.py
index f5ebc0c9b3..50bc2a527d 100644
--- a/src/sentry/web/frontend/accounts_twofactor.py
+++ b/src/sentry/web/frontend/accounts_twofactor.py
@@ -17,7 +17,7 @@ from sentry.models import Authenticator
 from sentry.web.frontend.base import BaseView
 from sentry.web.decorators import login_required
 from sentry.web.helpers import render_to_response
-from sentry.web.forms.accounts import TwoFactorForm
+from sentry.web.forms.accounts import TwoFactorForm, ConfirmPasswordForm
 from sentry.utils import json
 
 
@@ -78,12 +78,19 @@ class TwoFactorSettingsView(BaseView):
                 iface.authenticator.delete()
 
     def remove(self, request, interface):
+        form = ConfirmPasswordForm
+
         if 'no' in request.POST or \
            not interface.is_enrolled:
             return HttpResponseRedirect(reverse('sentry-account-settings-2fa'))
         elif 'yes' in request.POST:
-            self.delete_authenticator(interface)
-            return HttpResponseRedirect(reverse('sentry-account-settings-2fa'))
+            form = ConfirmPasswordForm(request.POST)
+            if form.is_valid():
+                if request.user.check_password(form.cleaned_data['password']):
+                    self.delete_authenticator(interface)
+                    return HttpResponseRedirect(reverse('sentry-account-settings-2fa'))
+                else:
+                    form.errors['__all__'] = ['Invalid password.']
 
         all_interfaces = Authenticator.objects.all_interfaces_for_user(
             request.user)
@@ -94,6 +101,7 @@ class TwoFactorSettingsView(BaseView):
             len(backup_interfaces) == len(other_interfaces)
 
         context = self.make_context(request, interface)
+        context['password_form'] = form
         context['removes_backups'] = removes_backups
         return render_to_response('sentry/account/twofactor/remove.html',
                                   context, request)
@@ -151,11 +159,15 @@ class TotpSettingsView(TwoFactorSettingsView):
 
         if 'otp' in request.POST:
             form = TwoFactorForm(request.POST)
-            if form.is_valid() and interface.validate_otp(
-                    form.cleaned_data['otp']):
-                return TwoFactorSettingsView.enroll(self, request, interface)
-            else:
-                form.errors['__all__'] = ['Invalid confirmation code.']
+            if form.is_valid():
+                if request.user.check_password(form.cleaned_data['password']):
+                    if form.is_valid() and interface.validate_otp(
+                            form.cleaned_data['otp']):
+                        return TwoFactorSettingsView.enroll(self, request, interface)
+                    else:
+                        form.errors['__all__'] = ['Invalid confirmation code.']
+                else:
+                    form.errors['__all__'] = ['Invalid password.']
         else:
             form = TwoFactorForm()
 
