commit 00bc99073756935b4a6c0689e4f7b6a8d26bcf17
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Apr 22 16:46:32 2015 -0700

    Add access approved email

diff --git a/src/sentry/api/endpoints/organization_access_request_details.py b/src/sentry/api/endpoints/organization_access_request_details.py
index 11932ac10f..6ab7dc6cc5 100644
--- a/src/sentry/api/endpoints/organization_access_request_details.py
+++ b/src/sentry/api/endpoints/organization_access_request_details.py
@@ -65,6 +65,8 @@ class OrganizationAccessRequestDetailsEndpoint(OrganizationEndpoint):
                     data=omt.get_audit_log_data(),
                 )
 
+                access_request.send_approved_email()
+
         access_request.delete()
 
         return Response(status=204)
diff --git a/src/sentry/models/organizationaccessrequest.py b/src/sentry/models/organizationaccessrequest.py
index 10c037c6ec..74603cd2c2 100644
--- a/src/sentry/models/organizationaccessrequest.py
+++ b/src/sentry/models/organizationaccessrequest.py
@@ -55,3 +55,30 @@ class OrganizationAccessRequest(Model):
         except Exception as e:
             logger = logging.getLogger('sentry.mail.errors')
             logger.exception(e)
+
+    def send_approved_email(self):
+        from sentry.utils.email import MessageBuilder
+
+        user = self.member.user
+        email = user.email
+        organization = self.team.organization
+
+        context = {
+            'email': email,
+            'name': user.get_display_name(),
+            'organization': organization,
+            'team': self.team,
+        }
+
+        msg = MessageBuilder(
+            subject='Sentry Access Request',
+            template='sentry/emails/access-approved.txt',
+            html_template='sentry/emails/access-approved.html',
+            context=context,
+        )
+
+        try:
+            msg.send([email])
+        except Exception as e:
+            logger = logging.getLogger('sentry.mail.errors')
+            logger.exception(e)
diff --git a/src/sentry/templates/sentry/emails/access-approved.html b/src/sentry/templates/sentry/emails/access-approved.html
new file mode 100644
index 0000000000..04df0f9903
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/access-approved.html
@@ -0,0 +1,11 @@
+{% extends "sentry/emails/base.html" %}
+
+{% load i18n %}
+
+{% block header %}
+    <h1>Sentry <small>Access Approved</small></h1>
+{% endblock %}
+
+{% block inner %}
+    <p>You have been granted access to the {{ team.name }} team on Sentry.</p>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/access-approved.txt b/src/sentry/templates/sentry/emails/access-approved.txt
new file mode 100644
index 0000000000..f02b1367ef
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/access-approved.txt
@@ -0,0 +1 @@
+You have been granted access to the {{ team.name }} team on Sentry.
diff --git a/src/sentry/templates/sentry/emails/request-team-access.html b/src/sentry/templates/sentry/emails/request-team-access.html
index 2f70ca2881..647311f47f 100644
--- a/src/sentry/templates/sentry/emails/request-team-access.html
+++ b/src/sentry/templates/sentry/emails/request-team-access.html
@@ -7,9 +7,9 @@
 {% endblock %}
 
 {% block inner %}
-	<p>{{ name }} is requesting access to the {{ team.name }} team on Sentry.</p>
+    <p>{{ name }} is requesting access to the {{ team.name }} team on Sentry.</p>
 
-	<p>You can accept or decline this request in via the pending requests panel:</p>
+    <p>You can accept or decline this request in via the pending requests panel:</p>
 
     <p><a href="{{ url }}">{{ url }}</a></p>
 {% endblock %}
diff --git a/tests/sentry/api/endpoints/test_organization_access_request_details.py b/tests/sentry/api/endpoints/test_organization_access_request_details.py
index 26bb804c03..b235977d3d 100644
--- a/tests/sentry/api/endpoints/test_organization_access_request_details.py
+++ b/tests/sentry/api/endpoints/test_organization_access_request_details.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from django.core import mail
 from django.core.urlresolvers import reverse
 
 from sentry.models import (
@@ -45,6 +46,8 @@ class UpdateOrganizationAccessRequestTest(APITestCase):
             id=access_request.id,
         ).exists()
 
+        assert len(mail.outbox) == 1
+
     def test_deny_request(self):
         self.login_as(user=self.user)
 
