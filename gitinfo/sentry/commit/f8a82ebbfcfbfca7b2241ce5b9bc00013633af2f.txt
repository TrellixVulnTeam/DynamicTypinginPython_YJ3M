commit f8a82ebbfcfbfca7b2241ce5b9bc00013633af2f
Author: Mark Story <mark@mark-story.com>
Date:   Thu Nov 29 09:59:50 2018 -0500

    fix(plugins) Don't create issues when plugins/integrations are sad (#10815)
    
    We cannot fix SSL errors on remote systems so we don't need to be
    alerted about them.  Eat ApiError as well.
    
    Fixes SENTRY-306
    Fixes SENTRY-8ER

diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 2f6ca3b52f..cef768e79f 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -8,7 +8,6 @@ sentry.plugins.bases.notify
 from __future__ import absolute_import, print_function
 
 import logging
-import requests
 import six
 from six.moves.urllib.parse import (
     urlparse,
@@ -18,6 +17,7 @@ from six.moves.urllib.parse import (
 )
 
 from django import forms
+from requests.exceptions import SSLError, HTTPError
 
 from sentry import digests, ratelimits
 from sentry.digests import get_option_key as get_digest_option_key
@@ -25,6 +25,7 @@ from sentry.digests.notifications import (
     event_to_record,
     unsplit_key,
 )
+from sentry.integrations.exceptions import ApiError
 from sentry.plugins import Notification, Plugin
 from sentry.plugins.base.configuration import react_plugin_config
 from sentry.models import ProjectOption
@@ -71,7 +72,7 @@ class NotificationPlugin(Plugin):
         try:
             return self.notify_users(event.group, event, triggering_rules=[
                                      r.label for r in notification.rules])
-        except requests.HTTPError as err:
+        except (SSLError, HTTPError, ApiError) as err:
             self.logger.info('notification-plugin.notify-failed.', extra={
                 'error': six.text_type(err),
                 'plugin': self.slug
diff --git a/tests/sentry/plugins/bases/notify/tests.py b/tests/sentry/plugins/bases/notify/tests.py
index 4b38940f3f..8dbf077395 100644
--- a/tests/sentry/plugins/bases/notify/tests.py
+++ b/tests/sentry/plugins/bases/notify/tests.py
@@ -1,9 +1,10 @@
 from __future__ import absolute_import
 
+from sentry.integrations.exceptions import ApiError
 from sentry.plugins import NotificationPlugin
 from sentry.plugins.base.structs import Notification
 from sentry.testutils import TestCase
-from requests import HTTPError
+from requests.exceptions import HTTPError, SSLError
 
 
 class NotifyPlugin(TestCase):
@@ -26,13 +27,19 @@ class NotifyPlugin(TestCase):
         assert n.add_notification_referrer_param(url) == 'https://sentry.io/'
 
     def test_notify_failure(self):
-        n = NotificationPlugin()
-        n.slug = 'slack'
-
-        def hook(*a, **kw):
-            raise HTTPError('401 Unauthorized')
-        event = self.create_event()
-        notification = Notification(event)
-
-        n.notify_users = hook
-        assert n.notify(notification) is False
+        errors = (
+            ApiError('The server is sad'),
+            SSLError('[SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:590)'),
+            HTTPError('A bad response'),
+        )
+        for err in errors:
+            n = NotificationPlugin()
+            n.slug = 'slack'
+
+            def hook(*a, **kw):
+                raise err
+            event = self.create_event()
+            notification = Notification(event)
+
+            n.notify_users = hook
+            assert n.notify(notification) is False
