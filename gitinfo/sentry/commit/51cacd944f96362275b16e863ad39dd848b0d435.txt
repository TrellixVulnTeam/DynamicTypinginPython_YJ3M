commit 51cacd944f96362275b16e863ad39dd848b0d435
Author: Jan Michael Auer <account@jauer.org>
Date:   Thu Nov 8 15:50:33 2018 +0100

    fix(utils): Fix hashlib for nested structures (#10478)
    
    * fix(utils): Fix hashlib for nested structures
    
    * test: Fix tests

diff --git a/src/sentry/utils/hashlib.py b/src/sentry/utils/hashlib.py
index a5dcf22ae9..0b7c623df9 100644
--- a/src/sentry/utils/hashlib.py
+++ b/src/sentry/utils/hashlib.py
@@ -40,12 +40,12 @@ def hash_value(h, value):
     elif isinstance(value, (tuple, list)):
         h.update(b'\x04' + six.text_type(len(value)).encode('utf-8'))
         for item in value:
-            hash_value(item)
+            hash_value(h, item)
     elif isinstance(value, dict):
         h.update(b'\x05' + six.text_type(len(value)).encode('utf-8'))
         for k, v in six.iteritems(value):
-            hash_value(k)
-            hash_value(v)
+            hash_value(h, k)
+            hash_value(h, v)
     elif isinstance(value, bytes):
         h.update(b'\x06' + value + b'\x00')
     elif isinstance(value, six.text_type):
diff --git a/tests/sentry/utils/hashlib/tests.py b/tests/sentry/utils/hashlib/tests.py
index 1e6869183a..caf7d45c12 100644
--- a/tests/sentry/utils/hashlib/tests.py
+++ b/tests/sentry/utils/hashlib/tests.py
@@ -2,10 +2,30 @@
 
 from __future__ import absolute_import
 
-from sentry.utils.hashlib import md5_text, sha1_text
+import pytest
+import six
+
+from sentry.utils.hashlib import md5_text, sha1_text, hash_values
 from sentry.testutils import TestCase
 
 
+HASHLIB_VALUES_TESTS = (
+    ('seed', None, '75a0ad233bd9a091d9d26bacbe2f377e'),
+    ('seed', True, '1057fb936dc9056388c0b9b48dd0c7df'),
+    ('seed', False, '07aae33053c0f3487882d61353780682'),
+    ('seed', 42, 'd1ce9a19d659ae70a6b76ef6029ae542'),
+    ('seed', six.binary_type('test'), '334e3fd2f66966a5c785d825c5f03494'),
+    ('seed', six.text_type('test'), 'ce35c0ce0d38976f61a5ca951de74a16'),
+    ('seed', (4, 2), 'd03b32e798444249d726158594d370f6'),
+    ('seed', {'test': 42}, 'c545cf1c4ab09eff4a1e0fa5209f1645'),
+)
+
+
+@pytest.mark.parametrize('seed,value,hash', HASHLIB_VALUES_TESTS)
+def test_hash_values(seed, value, hash):
+    assert hash_values([value], seed=seed) == hash
+
+
 class HashlibTest(TestCase):
     def test_simple(self):
         md5_text('x').hexdigest() == '9dd4e461268c8034f5c8564e155c67a6'
