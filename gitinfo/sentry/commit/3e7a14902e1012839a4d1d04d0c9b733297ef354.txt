commit 3e7a14902e1012839a4d1d04d0c9b733297ef354
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Mar 7 14:02:57 2018 -0800

    feat(api): Allow teams to be created with slug instead of name

diff --git a/src/sentry/api/endpoints/organization_teams.py b/src/sentry/api/endpoints/organization_teams.py
index 66c0274aa8..53994218c4 100644
--- a/src/sentry/api/endpoints/organization_teams.py
+++ b/src/sentry/api/endpoints/organization_teams.py
@@ -38,9 +38,14 @@ class OrganizationTeamsPermission(OrganizationPermission):
 
 
 class TeamSerializer(serializers.Serializer):
-    name = serializers.CharField(max_length=200, required=True)
+    name = serializers.CharField(max_length=200, required=False)
     slug = serializers.RegexField(r'^[a-z0-9_\-]+$', max_length=50, required=False)
 
+    def validate(self, attrs):
+        if not (attrs.get('name') or attrs.get('slug')):
+            raise serializers.ValidationError('Name or slug is required')
+        return attrs
+
 
 class OrganizationTeamsEndpoint(OrganizationEndpoint):
     permission_classes = (OrganizationTeamsPermission,)
@@ -97,7 +102,7 @@ class OrganizationTeamsEndpoint(OrganizationEndpoint):
             try:
                 with transaction.atomic():
                     team = Team.objects.create(
-                        name=result['name'],
+                        name=result.get('name') or result['slug'],
                         slug=result.get('slug'),
                         organization=organization,
                     )
diff --git a/tests/sentry/api/endpoints/test_organization_teams.py b/tests/sentry/api/endpoints/test_organization_teams.py
index d9cd4a6c1f..1eaa279d09 100644
--- a/tests/sentry/api/endpoints/test_organization_teams.py
+++ b/tests/sentry/api/endpoints/test_organization_teams.py
@@ -52,6 +52,7 @@ class OrganizationTeamsCreateTest(APITestCase):
         self.login_as(user=self.user)
         resp = self.client.post(self.path)
         assert resp.status_code == 400
+        assert 'Name or slug is required' in resp.content
 
     def test_valid_params(self):
         self.login_as(user=self.user)
@@ -91,6 +92,19 @@ class OrganizationTeamsCreateTest(APITestCase):
         team = Team.objects.get(id=resp.data['id'])
         assert team.slug == 'hello-world'
 
+    def test_without_name(self):
+        self.login_as(user=self.user)
+
+        resp = self.client.post(
+            self.path, data={
+                'slug': 'example-slug',
+            }
+        )
+        assert resp.status_code == 201, resp.content
+        team = Team.objects.get(id=resp.data['id'])
+        assert team.slug == 'example-slug'
+        assert team.name == 'example-slug'
+
     def test_duplicate(self):
         self.login_as(user=self.user)
 
