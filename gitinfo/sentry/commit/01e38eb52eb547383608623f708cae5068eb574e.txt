commit 01e38eb52eb547383608623f708cae5068eb574e
Author: Dena Mwangi <dena@getsentry.com>
Date:   Thu Jun 14 11:22:11 2018 -0700

    feat(analytics): Onboarding wizard analytics (#8707)
    
    * Add wizard open, close, skip and click through events

diff --git a/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx b/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx
index ccaebf6569..ebca4a416e 100644
--- a/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx
+++ b/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx
@@ -5,6 +5,7 @@ import createReactClass from 'create-react-class';
 import classNames from 'classnames';
 import {t, tct} from 'app/locale';
 
+import analytics from 'app/utils/analytics';
 import OrganizationState from 'app/mixins/organizationState';
 import Confirmation from 'app/components/onboardingWizard/confirmation';
 
@@ -18,7 +19,7 @@ const TodoItem = createReactClass({
 
   mixins: [OrganizationState],
 
-  getInitialState: function() {
+  getInitialState() {
     return {
       showConfirmation: false,
       isExpanded: false,
@@ -29,29 +30,31 @@ const TodoItem = createReactClass({
     this.setState({isExpanded: !this.state.isExpanded});
   },
 
-  toggleConfirmation: function() {
+  toggleConfirmation() {
     this.setState({showConfirmation: !this.state.showConfirmation});
   },
 
-  formatDescription: function() {
+  formatDescription() {
+    let {task} = this.props;
+    let {isExpanded} = this.state;
+
     return (
       <p>
-        {this.props.task.description}{' '}
-        {this.state.isExpanded && '. ' + this.props.task.detailedDescription}
+        {task.description} {isExpanded && '. ' + task.detailedDescription}
       </p>
     );
   },
 
-  learnMoreUrlCreator: function() {
+  learnMoreUrlCreator() {
     let org = this.getOrganization();
+    let {task} = this.props;
     let learnMoreUrl;
-    if (this.props.task.featureLocation === 'project') {
-      learnMoreUrl = `/organizations/${org.slug}/projects/choose/?onboarding=1&task=${this
-        .props.task.task}`;
-    } else if (this.props.task.featureLocation === 'organization') {
-      learnMoreUrl = `/organizations/${org.slug}/${this.props.task.location}`;
-    } else if (this.props.task.featureLocation === 'absolute') {
-      learnMoreUrl = this.props.task.location;
+    if (task.featureLocation === 'project') {
+      learnMoreUrl = `/organizations/${org.slug}/projects/choose/?onboarding=1&task=${task.task}`;
+    } else if (task.featureLocation === 'organization') {
+      learnMoreUrl = `/organizations/${org.slug}/${task.location}`;
+    } else if (task.featureLocation === 'absolute') {
+      learnMoreUrl = task.location;
     } else {
       Raven.captureMessage('No learnMoreUrl created for this featureLocation ', {
         extra: {props: this.props, state: this.state},
@@ -60,47 +63,66 @@ const TodoItem = createReactClass({
     return learnMoreUrl;
   },
 
-  skip: function(task) {
+  recordAnalytics(action) {
+    let org = this.getOrganization();
+    let {task} = this.props;
+    analytics('onboarding.wizard_clicked', {
+      org_id: parseInt(org.id, 10),
+      todo_id: parseInt(task.task, 10),
+      todo_title: task.title,
+      action,
+    });
+  },
+
+  onSkip(task) {
+    this.recordAnalytics('skipped');
     this.props.onSkip(task);
     this.setState({showConfirmation: false});
   },
 
-  render: function() {
+  handleClick(e) {
+    this.recordAnalytics('clickthrough');
+    e.stopPropagation();
+  },
+
+  render() {
+    let {task, className} = this.props;
+    let {showConfirmation} = this.state;
     let learnMoreUrl = this.learnMoreUrlCreator();
     let description;
 
-    switch (this.props.task.status) {
+    switch (task.status) {
       case 'complete':
         description = tct('[user] completed [dateCompleted]', {
-          user: this.props.task.user,
-          dateCompleted: moment(this.props.task.dateCompleted).fromNow(),
+          user: task.user,
+          dateCompleted: moment(task.dateCompleted).fromNow(),
         });
         break;
       case 'pending':
         description = tct('[user] kicked off [dateCompleted]', {
-          user: this.props.task.user,
-          dateCompleted: moment(this.props.task.dateCompleted).fromNow(),
+          user: task.user,
+          dateCompleted: moment(task.dateCompleted).fromNow(),
         });
         break;
       case 'skipped':
         description = tct('[user] skipped [dateCompleted]', {
-          user: this.props.task.user,
-          dateCompleted: moment(this.props.task.dateCompleted).fromNow(),
+          user: task.user,
+          dateCompleted: moment(task.dateCompleted).fromNow(),
         });
         break;
       default:
         description = this.formatDescription();
     }
 
-    let classes = classNames(this.props.className, this.props.task.status, {
-      blur: this.state.showConfirmation,
+    let classes = classNames(className, task.status, {
+      blur: showConfirmation,
     });
 
     let showSkipButton =
-      this.props.task.skippable &&
-      this.props.task.status != 'skipped' &&
-      this.props.task.status != 'complete' &&
-      !this.state.showConfirmation;
+      task.skippable &&
+      task.status !== 'skipped' &&
+      task.status !== 'complete' &&
+      !showConfirmation;
 
     return (
       <li
@@ -108,28 +130,27 @@ const TodoItem = createReactClass({
         onMouseOver={this.toggleDescription}
         onMouseOut={this.toggleDescription}
       >
-        {this.props.task.status == 'pending' && <div className="pending-bar" />}
+        {task.status === 'pending' && <div className="pending-bar" />}
         <div className="todo-content">
           <div className="ob-checkbox">
-            {this.props.task.status == 'complete' && <span className="icon-checkmark" />}
-            {this.props.task.status == 'skipped' && <span className="icon-x" />}
-            {this.props.task.status == 'pending' && <span className="icon-ellipsis" />}
+            {task.status === 'complete' && <span className="icon-checkmark" />}
+            {task.status === 'skipped' && <span className="icon-x" />}
+            {task.status === 'pending' && <span className="icon-ellipsis" />}
           </div>
-          <a href={learnMoreUrl}>
-            <h4>{this.props.task.title}</h4>
+          <a href={learnMoreUrl} onClick={this.handleClick}>
+            <h4>{task.title}</h4>
           </a>
           <div>{description}</div>
-
           {showSkipButton && (
             <a className="skip-btn btn btn-default" onClick={this.toggleConfirmation}>
               {t('Skip')}
             </a>
           )}
         </div>
-        {this.state.showConfirmation && (
+        {showConfirmation && (
           <Confirmation
-            task={this.props.task.task}
-            onSkip={() => this.skip(this.props.task.task)}
+            task={task.task}
+            onSkip={() => this.onSkip(task.task)}
             dismiss={this.toggleConfirmation}
           />
         )}
diff --git a/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx b/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx
index 207ef5c80f..7cfd4381ea 100644
--- a/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx
+++ b/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx
@@ -178,10 +178,6 @@ const TodoList = createReactClass({
     this.getOnboardingTasks();
   },
 
-  click(e) {
-    e.stopPropagation();
-  },
-
   render() {
     let nextTasks = this.state.tasks.filter(task => task.display);
 
@@ -191,7 +187,7 @@ const TodoList = createReactClass({
 
     return (
       <div>
-        <div onClick={this.click} className="onboarding-wrapper">
+        <div className="onboarding-wrapper">
           <ul className="list-unstyled">{todoListTasks}</ul>
         </div>
       </div>
diff --git a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
index 395ca2b304..12c1f9af1d 100644
--- a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
@@ -1,6 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
+import analytics from 'app/utils/analytics';
 import {t} from '../../locale';
 import SidebarPanel from './sidebarPanel';
 import TodoList from '../onboardingWizard/todos';
@@ -16,6 +17,22 @@ class OnboardingStatus extends React.Component {
     collapsed: PropTypes.bool,
   };
 
+  componentDidUpdate(prevProps) {
+    let {currentPanel, org} = this.props;
+    if (
+      currentPanel !== prevProps.currentPanel &&
+      (currentPanel || prevProps.currentPanel == 'todos')
+    ) {
+      this.recordAnalytics(currentPanel, org.id);
+    }
+  }
+
+  recordAnalytics(currentPanel, orgId) {
+    currentPanel === 'todos'
+      ? analytics('onboarding.wizard_opened', {org_id: orgId})
+      : analytics('onboarding.wizard_closed', {org_id: orgId});
+  }
+
   render() {
     let {collapsed, org, currentPanel, hidePanel, showPanel, onShowPanel} = this.props;
     if (org.features && org.features.indexOf('onboarding') === -1) return null;
diff --git a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
index 8cfac84a64..8f082f2f3f 100644
--- a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
@@ -1203,7 +1203,6 @@ exports[`Sidebar can have onboarding feature 1`] = `
               <div>
                 <div
                   className="onboarding-wrapper"
-                  onClick={[Function]}
                 >
                   <ul
                     className="list-unstyled"
@@ -1238,6 +1237,7 @@ exports[`Sidebar can have onboarding feature 1`] = `
                           />
                           <a
                             href="/organizations/org-slug/projects/new/"
+                            onClick={[Function]}
                           >
                             <h4>
                               Create a project
@@ -1284,6 +1284,7 @@ exports[`Sidebar can have onboarding feature 1`] = `
                           />
                           <a
                             href="/organizations/org-slug/projects/choose/?onboarding=1&task=2"
+                            onClick={[Function]}
                           >
                             <h4>
                               Send your first event
@@ -1329,6 +1330,7 @@ exports[`Sidebar can have onboarding feature 1`] = `
                           />
                           <a
                             href="/organizations/org-slug/members/"
+                            onClick={[Function]}
                           >
                             <h4>
                               Invite team member
@@ -1382,6 +1384,7 @@ exports[`Sidebar can have onboarding feature 1`] = `
                           />
                           <a
                             href="/organizations/org-slug/projects/new/"
+                            onClick={[Function]}
                           >
                             <h4>
                               Add a second platform
@@ -1436,6 +1439,7 @@ exports[`Sidebar can have onboarding feature 1`] = `
                           />
                           <a
                             href="https://docs.sentry.io/hosted/learn/context/#capturing-the-user"
+                            onClick={[Function]}
                           >
                             <h4>
                               Add user context
@@ -1490,6 +1494,7 @@ exports[`Sidebar can have onboarding feature 1`] = `
                           />
                           <a
                             href="/organizations/org-slug/projects/choose/?onboarding=1&task=6"
+                            onClick={[Function]}
                           >
                             <h4>
                               Set up release tracking
@@ -1544,6 +1549,7 @@ exports[`Sidebar can have onboarding feature 1`] = `
                           />
                           <a
                             href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/"
+                            onClick={[Function]}
                           >
                             <h4>
                               Upload sourcemaps
