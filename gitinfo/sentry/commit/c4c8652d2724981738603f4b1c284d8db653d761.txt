commit c4c8652d2724981738603f4b1c284d8db653d761
Author: Eric Feng <ehfeng@users.noreply.github.com>
Date:   Wed Jun 21 13:19:47 2017 -0700

    Improving Feature Adoption manager's errors by using UnknownFeature instead of generic KeyError (#5595)

diff --git a/src/sentry/adoption/manager.py b/src/sentry/adoption/manager.py
index e5dbabed2b..7be6c82bd3 100644
--- a/src/sentry/adoption/manager.py
+++ b/src/sentry/adoption/manager.py
@@ -8,6 +8,10 @@ FEATURE_LOCATION = {'language', 'integration', 'code', 'web', 'admin'}
 Feature = namedtuple('Feature', ['id', 'slug', 'name', 'location', 'prerequisite'])
 
 
+class UnknownFeature(KeyError):
+    pass
+
+
 class AdoptionManager(object):
     def __init__(self):
         self._id_registry = {}
@@ -31,10 +35,16 @@ class AdoptionManager(object):
             self._integration_slugs[prerequisite[0]].add(slug)
 
     def get_by_id(self, id):
-        return self._id_registry[id]
+        try:
+            return self._id_registry[id]
+        except KeyError:
+            raise UnknownFeature(id)
 
     def get_by_slug(self, slug):
-        return self._slug_registry[slug]
+        try:
+            return self._slug_registry[slug]
+        except KeyError:
+            raise UnknownFeature(slug)
 
     def all(self):
         return [self._id_registry[k] for k in self._id_registry]
diff --git a/src/sentry/models/featureadoption.py b/src/sentry/models/featureadoption.py
index e6c048fa68..fd44233323 100644
--- a/src/sentry/models/featureadoption.py
+++ b/src/sentry/models/featureadoption.py
@@ -7,6 +7,7 @@ from django.utils import timezone
 from jsonfield import JSONField
 
 from sentry.adoption import manager
+from sentry.adoption.manager import UnknownFeature
 from sentry.db.models import (
     BaseManager,
     FlexibleForeignKey,
@@ -108,7 +109,7 @@ class FeatureAdoptionManager(BaseManager):
     def record(self, organization_id, feature_slug, **kwargs):
         try:
             feature_id = manager.get_by_slug(feature_slug).id
-        except KeyError as e:
+        except UnknownFeature as e:
             logger.exception(e)
             return
 
@@ -123,13 +124,16 @@ class FeatureAdoptionManager(BaseManager):
         return False
 
     def bulk_record(self, organization_id, feature_slugs, **kwargs):
+        features = []
+
         try:
-            features = []
-            incomplete_feature_ids = set([manager.get_by_slug(slug).id for slug in feature_slugs]) - self.get_all_cache(organization_id)
-        except KeyError as e:
+            feature_ids = set([manager.get_by_slug(slug).id for slug in feature_slugs])
+        except UnknownFeature as e:
             logger.exception(e)
             return
 
+        incomplete_feature_ids = feature_ids - self.get_all_cache(organization_id)
+
         for feature_id in incomplete_feature_ids:
             features.append(FeatureAdoption(
                 organization_id=organization_id,
