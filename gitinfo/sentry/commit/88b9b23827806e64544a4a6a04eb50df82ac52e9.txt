commit 88b9b23827806e64544a4a6a04eb50df82ac52e9
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Mar 29 16:30:18 2018 -0700

    fix(slack): Ensure users can't associate multiple slack IDs

diff --git a/src/sentry/integrations/slack/link_identity.py b/src/sentry/integrations/slack/link_identity.py
index 2fd5dbb472..384c534272 100644
--- a/src/sentry/integrations/slack/link_identity.py
+++ b/src/sentry/integrations/slack/link_identity.py
@@ -66,13 +66,23 @@ class SlackLinkIdentitiyView(BaseView):
         # TODO(epurkhiser): We could do some fancy slack querying here to
         # render a nice linking page with info about the user their linking.
 
-        Identity.objects.get_or_create(
-            external_id=params['slack_id'],
+        identity, created = Identity.objects.get_or_create(
             user=request.user,
             idp=idp,
-            status=IdentityStatus.VALID,
+            defaults={
+                'external_id': params['slack_id'],
+                'status': IdentityStatus.VALID,
+            },
         )
 
+        if not created:
+            # TODO(epurkhiser): In this case we probably want to prompt and
+            # warn them that they had a previous identity linked to slack.
+            identity.update(
+                external_id=params['slack_id'],
+                status=IdentityStatus.VALID
+            )
+
         payload = {
             'replace_original': False,
             'response_type': 'ephemeral',
diff --git a/tests/sentry/integrations/slack/test_link_identity.py b/tests/sentry/integrations/slack/test_link_identity.py
index fadd21ee5e..bdabf106fe 100644
--- a/tests/sentry/integrations/slack/test_link_identity.py
+++ b/tests/sentry/integrations/slack/test_link_identity.py
@@ -80,3 +80,44 @@ class SlackIntegrationLinkIdentityTest(TestCase):
         assert identity[0].idp == self.idp
         assert identity[0].status == IdentityStatus.VALID
         assert len(responses.calls) == 1
+
+    @responses.activate
+    @patch('sentry.integrations.slack.link_identity.unsign')
+    def test_overwrites_existing_external_id(self, unsign):
+        existing_identity = Identity.objects.create(
+            user=self.user,
+            idp=self.idp,
+            external_id='old-slack-id',
+            status=IdentityStatus.VALID,
+        )
+
+        unsign.return_value = {
+            'integration_id': self.integration.id,
+            'organization_id': self.org.id,
+            'slack_id': 'new-slack-id',
+            'channel_id': 'my-channel',
+            'response_url': 'http://example.slack.com/response_url',
+        }
+
+        linking_url = build_linking_url(
+            self.integration,
+            self.org,
+            'new-slack-id',
+            'my-channel',
+            'http://example.slack.com/response_url'
+        )
+        responses.add(
+            method=responses.POST,
+            url='http://example.slack.com/response_url',
+            body='{"ok": true}',
+            status=200,
+            content_type='application/json',
+        )
+
+        self.client.post(linking_url)
+
+        assert Identity.objects.filter(
+            id=existing_identity.id,
+            external_id='new-slack-id',
+            user=self.user,
+        ).exists()
