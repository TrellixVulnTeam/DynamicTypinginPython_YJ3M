commit d3c23e9a77a5f21dd8069a0feb0440fdbd03a289
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jan 29 17:02:05 2015 -0800

    Add tag key deletion endpoint

diff --git a/src/sentry/api/endpoints/project_tagkey_details.py b/src/sentry/api/endpoints/project_tagkey_details.py
new file mode 100644
index 0000000000..3913de4d16
--- /dev/null
+++ b/src/sentry/api/endpoints/project_tagkey_details.py
@@ -0,0 +1,45 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.base import Endpoint
+from sentry.api.permissions import assert_perm
+from sentry.models import (
+    AuditLogEntry, AuditLogEntryEvent, Project, TagKey, TagKeyStatus
+)
+from sentry.tasks.deletion import delete_tag_key
+
+
+class ProjectTagKeyDetailsEndpoint(Endpoint):
+    def delete(self, request, project_id, key):
+        """
+        Remove all occurances of the given tag key.
+
+            {method} {path}
+
+        """
+        project = Project.objects.get(
+            id=project_id,
+        )
+
+        tagkey = TagKey.objects.get(
+            project=project,
+            key=key,
+        )
+
+        assert_perm(tagkey, request.user, request.auth)
+
+        if tagkey.status == TagKeyStatus.VISIBLE:
+            tagkey.update(status=TagKeyStatus.PENDING_DELETION)
+            delete_tag_key.delay(object_id=tagkey.id)
+
+            AuditLogEntry.objects.create(
+                organization=project.organization,
+                actor=request.user,
+                ip_address=request.META['REMOTE_ADDR'],
+                target_object=tagkey.id,
+                event=AuditLogEntryEvent.TAGKEY_REMOVE,
+                data=tagkey.get_audit_log_data(),
+            )
+
+        return Response(status=204)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index d3c216776b..96e3efe109 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -21,6 +21,7 @@ from .endpoints.project_details import ProjectDetailsEndpoint
 from .endpoints.project_group_index import ProjectGroupIndexEndpoint
 from .endpoints.project_releases import ProjectReleasesEndpoint
 from .endpoints.project_stats import ProjectStatsEndpoint
+from .endpoints.project_tagkey_details import ProjectTagKeyDetailsEndpoint
 from .endpoints.release_details import ReleaseDetailsEndpoint
 from .endpoints.team_details import TeamDetailsEndpoint
 from .endpoints.team_access_group_index import TeamAccessGroupIndexEndpoint
@@ -96,6 +97,9 @@ urlpatterns = patterns(
     url(r'^projects/(?P<project_id>\d+)/stats/$',
         ProjectStatsEndpoint.as_view(),
         name='sentry-api-0-project-stats'),
+    url(r'^projects/(?P<project_id>\d+)/tags/(?P<key>[^/]+)/$',
+        ProjectTagKeyDetailsEndpoint.as_view(),
+        name='sentry-api-0-project-tagkey-details'),
 
     # Releases
     url(r'^releases/(?P<release_id>\d+)/$',
diff --git a/src/sentry/models/auditlogentry.py b/src/sentry/models/auditlogentry.py
index 207d6320a9..840070b572 100644
--- a/src/sentry/models/auditlogentry.py
+++ b/src/sentry/models/auditlogentry.py
@@ -36,6 +36,8 @@ class AuditLogEntryEvent(object):
     PROJECT_SET_PUBLIC = 33
     PROJECT_SET_PRIVATE = 34
 
+    TAGKEY_REMOVE = 40
+
 
 class AuditLogEntry(Model):
     organization = FlexibleForeignKey('sentry.Organization')
@@ -63,6 +65,8 @@ class AuditLogEntry(Model):
 
         (AuditLogEntryEvent.ORG_ADD, 'org.create'),
         (AuditLogEntryEvent.ORG_EDIT, 'org.edit'),
+
+        (AuditLogEntryEvent.TAGKEY_REMOVE, 'tagkey.remove'),
     ))
     ip_address = models.GenericIPAddressField(null=True, unpack_ipv4=True)
     data = GzippedDictField()
@@ -102,4 +106,7 @@ class AuditLogEntry(Model):
         elif self.event == AuditLogEntryEvent.PROJECT_REMOVE:
             return 'removed project %s' % (self.data['slug'],)
 
+        elif self.event == AuditLogEntryEvent.TAGKEY_REMOVE:
+            return 'removed tags matching %s = *' % (self.data['key'],)
+
         return ''
diff --git a/tests/sentry/api/endpoints/test_project_tagkey_details.py b/tests/sentry/api/endpoints/test_project_tagkey_details.py
new file mode 100644
index 0000000000..aecb36a296
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_project_tagkey_details.py
@@ -0,0 +1,32 @@
+from __future__ import absolute_import
+
+import mock
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import TagKey, TagKeyStatus
+from sentry.testutils import APITestCase
+
+
+class ProjectTagKeyDeleteTest(APITestCase):
+    @mock.patch('sentry.api.endpoints.project_tagkey_details.delete_tag_key')
+    def test_simple(self, mock_delete_tag_key):
+        project = self.create_project()
+        tagkey = TagKey.objects.create(project=project, key='foo')
+
+        self.login_as(user=self.user)
+
+        url = reverse('sentry-api-0-project-tagkey-details', kwargs={
+            'project_id': project.id,
+            'key': tagkey.key,
+        })
+
+        response = self.client.delete(url)
+
+        assert response.status_code == 204
+
+        mock_delete_tag_key.delay.assert_called_once_with(
+            object_id=tagkey.id
+        )
+
+        assert TagKey.objects.get(id=tagkey.id).status == TagKeyStatus.PENDING_DELETION
