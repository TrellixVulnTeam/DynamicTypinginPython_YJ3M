commit 7e12a77938e2d6ef2eb5ded14ea9a46ab3a4d258
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Dec 22 14:48:57 2016 -0500

    api: Move '?' filename handling before validation (#4656)
    
    Previously, a frame that had a function name of simply '?' with nothing
    else was considered a valid `Frame`:
    
    ```
    >>> Frame.to_python({'function': '?'}).to_json()
    {}
    ```
    
    But this resulting `Frame` was not able to be re-converted back into a
    `Frame` interface later, causing it to be invalid because there is now a
    missing `function` that was stripped.
    
    The side effect of this is that during event ingestion, the event with a
    frame shaped like this passed through the intial `validate_data` pass
    and gets it's data mutated and massaged into a cleaned up version. Then
    later, during EventManager.normalize(), we now raise an
    InterfaceValidationError causing the entire exception interface to be
    discarded and ignored silently.
    
    This fix changes it so the initial `validate_data` call will detect the
    bad frame and attach an appropriate error onto the event.

diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index e805f7bb14..9fb7c798ed 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -250,6 +250,14 @@ class Frame(Interface):
         module = data.get('module')
         package = data.get('package')
 
+        # For legacy reasons
+        if function == '?':
+            function = None
+
+        # For consistency reasons
+        if symbol == '?':
+            symbol = None
+
         for name in ('abs_path', 'filename', 'symbol', 'function', 'module',
                      'package'):
             v = data.get(name)
@@ -276,14 +284,6 @@ class Frame(Interface):
             raise InterfaceValidationError("No 'filename' or 'function' or "
                                            "'module' or 'package'")
 
-        # For legacy reasons
-        if function == '?':
-            function = None
-
-        # For consistency reasons
-        if symbol == '?':
-            symbol = None
-
         platform = data.get('platform')
         if platform not in VALID_PLATFORMS:
             platform = None
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index bffe619498..e03328c72f 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -531,6 +531,11 @@ class StacktraceTest(TestCase):
                 'module': 1,
             })
 
+        with self.assertRaises(InterfaceValidationError):
+            Frame.to_python({
+                'function': '?',
+            })
+
     def test_context_with_nan(self):
         self.assertEquals(
             Frame.to_python({
