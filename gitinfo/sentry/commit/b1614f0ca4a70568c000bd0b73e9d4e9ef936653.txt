commit b1614f0ca4a70568c000bd0b73e9d4e9ef936653
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Apr 26 15:15:47 2018 -0700

    feat(dashboard): Add empty state

diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/emptyState.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/emptyState.jsx
new file mode 100644
index 0000000000..3779919ab9
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/emptyState.jsx
@@ -0,0 +1,42 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import {Flex} from 'grid-emotion';
+import styled from 'react-emotion';
+
+import {t} from '../../locale';
+import img from '../../../images/dashboard/hair-on-fire.svg';
+import Button from '../../components/buttons/button';
+
+export default class EmptyState extends React.Component {
+  static propTypes = {
+    orgId: PropTypes.string,
+  };
+
+  render() {
+    const {orgId} = this.props;
+    return (
+      <Flex flex="1" align="center" justify="center">
+        <Wrapper>
+          <img src={img} height={350} alt="Nothing to see" />
+          <Content direction="column" justify="center">
+            <h2>{t('Remain calm.')}</h2>
+            <p>{t("Sentry's got you covered.")}</p>
+            <div>
+              <Button priority="primary" to={`organizations/${orgId}/projects/new/`}>
+                {t('Create project')}
+              </Button>
+            </div>
+          </Content>
+        </Wrapper>
+      </Flex>
+    );
+  }
+}
+
+const Wrapper = styled(Flex)`
+  height: 350px;
+`;
+
+const Content = styled(Flex)`
+  margin-left: 40px;
+`;
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
index 0e49dbd1d0..7fb01d1fe3 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
@@ -9,6 +9,7 @@ import OldDashboard from 'app/views/organizationDashboard/oldDashboard';
 import ProjectNav from 'app/views/organizationDashboard/projectNav';
 import TeamMembers from 'app/views/organizationDashboard/teamMembers';
 import ProjectCard from 'app/views/organizationDashboard/projectCard';
+import EmptyState from 'app/views/organizationDashboard/emptyState';
 import getProjectsByTeams from 'app/utils/getProjectsByTeams';
 import withTeams from 'app/utils/withTeams';
 import withProjects from 'app/utils/withProjects';
@@ -27,37 +28,36 @@ class Dashboard extends React.Component {
   }
 
   render() {
-    const {projects, teams} = this.props;
+    const {projects, teams, params} = this.props;
     const {projectsByTeam} = getProjectsByTeams(teams, projects);
     const projectKeys = Object.keys(projectsByTeam);
 
     return (
       <Flex flex="1" direction="column">
         <ProjectNav />
-        <div>
-          {projectKeys.map((slug, index) => {
-            return (
-              <TeamSection key={slug} showBorder={index !== projectKeys.length - 1}>
-                <TeamTitleBar justify="space-between" align="center">
-                  <TeamName>{`#${slug}`}</TeamName>
-                  <TeamMembers teamId={slug} orgId={this.props.params.orgId} />
-                </TeamTitleBar>
-                <ProjectCards>
-                  {projectsByTeam[slug].map(project => {
-                    return (
-                      <ProjectCardWrapper
-                        key={project.id}
-                        width={['100%', '50%', '33%', '25%']}
-                      >
-                        <ProjectCard project={project} />
-                      </ProjectCardWrapper>
-                    );
-                  })}
-                </ProjectCards>
-              </TeamSection>
-            );
-          })}
-        </div>
+        {projectKeys.map((slug, index) => {
+          return (
+            <TeamSection key={slug} showBorder={index !== projectKeys.length - 1}>
+              <TeamTitleBar justify="space-between" align="center">
+                <TeamName>{`#${slug}`}</TeamName>
+                <TeamMembers teamId={slug} orgId={params.orgId} />
+              </TeamTitleBar>
+              <ProjectCards>
+                {projectsByTeam[slug].map(project => {
+                  return (
+                    <ProjectCardWrapper
+                      key={project.id}
+                      width={['100%', '50%', '33%', '25%']}
+                    >
+                      <ProjectCard project={project} />
+                    </ProjectCardWrapper>
+                  );
+                })}
+              </ProjectCards>
+            </TeamSection>
+          );
+        })}
+        {!projectKeys.length && <EmptyState orgId={params.orgId} />}
       </Flex>
     );
   }
@@ -101,4 +101,5 @@ const OrganizationDashboard = createReactClass({
   },
 });
 
+export {Dashboard};
 export default withTeams(withProjects(OrganizationDashboard));
diff --git a/tests/acceptance/test_dashboard.py b/tests/acceptance/test_dashboard.py
index 6884a2e662..f149dd6b37 100644
--- a/tests/acceptance/test_dashboard.py
+++ b/tests/acceptance/test_dashboard.py
@@ -74,3 +74,28 @@ class DashboardTest(AcceptanceTestCase):
             self.browser.get(self.path)
             self.browser.wait_until_not('.loading-indicator')
             self.browser.snapshot('new dashboard')
+
+
+class EmptyDashboardTest(AcceptanceTestCase):
+    def setUp(self):
+        super(EmptyDashboardTest, self).setUp()
+        self.user = self.create_user('foo@example.com')
+        self.org = self.create_organization(
+            name='Rowdy Tiger',
+            owner=None,
+        )
+        self.team = self.create_team(organization=self.org, name='Mariachi Band')
+        self.create_member(
+            user=self.user,
+            organization=self.org,
+            role='owner',
+            teams=[self.team],
+        )
+        self.login_as(self.user)
+        self.path = '/{}/'.format(self.org.slug)
+
+    def test_new_dashboard_empty(self):
+        with self.feature('organizations:dashboard'):
+            self.browser.get(self.path)
+            self.browser.wait_until_not('.loading-indicator')
+            self.browser.snapshot('new dashboard empty')
diff --git a/tests/js/spec/views/organizationDashboard/index.spec.jsx b/tests/js/spec/views/organizationDashboard/index.spec.jsx
new file mode 100644
index 0000000000..f70e7dd6cf
--- /dev/null
+++ b/tests/js/spec/views/organizationDashboard/index.spec.jsx
@@ -0,0 +1,18 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import {Dashboard} from 'app/views/organizationDashboard';
+
+describe('OrganizationDashboard', function() {
+  it('renders empty state', function() {
+    const teams = [TestStubs.Team()];
+    const projects = [];
+
+    const wrapper = mount(
+      <Dashboard teams={teams} projects={projects} params={{orgId: 'org-slug'}} />,
+      TestStubs.routerContext()
+    );
+    const emptyState = wrapper.find('EmptyState');
+    expect(emptyState).toHaveLength(1);
+  });
+});
