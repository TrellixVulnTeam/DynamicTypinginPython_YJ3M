commit 94668b61c851d313379ea09b31500e37fa81cae0
Author: ted kaemming <ted@kaemming.com>
Date:   Tue Feb 7 13:19:18 2017 -0800

    Change MinHash strategy to use independent hash functions. (#4874)

diff --git a/setup.py b/setup.py
index 3f5771ff3f..e781cce6d7 100755
--- a/setup.py
+++ b/setup.py
@@ -113,6 +113,7 @@ install_requires = [
     'ipaddress>=1.0.16,<1.1.0',
     'libsourcemap>=0.5.0,<0.6.0',
     'mock>=0.8.0,<1.1',
+    'mmh3>=2.3.1,<2.4',
     'oauth2>=1.5.167',
     'percy>=0.2.5',
     'petname>=1.7,<1.8',
diff --git a/src/sentry/similarity.py b/src/sentry/similarity.py
index afecae7742..a52b6718eb 100644
--- a/src/sentry/similarity.py
+++ b/src/sentry/similarity.py
@@ -1,9 +1,11 @@
 from __future__ import absolute_import
 
+import itertools
 import math
-import random
 import struct
 
+import mmh3
+
 
 def scale_to_total(value):
     """\
@@ -106,25 +108,21 @@ class MinHashIndex(object):
         self.cluster = cluster
         self.rows = rows
 
-        generator = random.Random(0)
-
-        def shuffle(value):
-            generator.shuffle(value)
-            return value
-
-        self.bands = [
-            [shuffle(range(rows)) for _ in xrange(buckets)]
-            for _ in xrange(bands)
-        ]
+        sequence = itertools.count()
+        self.bands = [[next(sequence) for j in xrange(buckets)] for i in xrange(bands)]
 
         self.__bucket_format = get_number_format(rows, buckets)
 
     def get_signature(self, value):
-        """Generate a minhash signature for a value."""
-        columns = set(hash(token) % self.rows for token in value)
+        """Generate a signature for a value."""
         return map(
             lambda band: map(
-                lambda permutation: next(i for i, a in enumerate(permutation) if a in columns),
+                lambda bucket: min(
+                    map(
+                        lambda item: mmh3.hash(item, bucket) % self.rows,
+                        value,
+                    ),
+                ),
                 band,
             ),
             self.bands,
diff --git a/tests/sentry/test_similarity.py b/tests/sentry/test_similarity.py
index 03baecbaac..0b23cb06d6 100644
--- a/tests/sentry/test_similarity.py
+++ b/tests/sentry/test_similarity.py
@@ -171,6 +171,6 @@ class MinHashIndexTestCase(TestCase):
         results = index.query('example', '1')
         assert results[0] == ('1', 1.0)
         assert results[1] == ('2', 1.0)  # identical contents
-        assert results[2][0] == '3'
-        assert results[3][0] == '4'
+        assert results[2][0] in ('3', '4')  # equidistant pairs, order doesn't really matter
+        assert results[3][0] in ('3', '4')
         assert results[4][0] == '5'
