commit 091db272a52eb9df3849c2804bf6b34195d7995e
Author: Matej Minar <matej.minar@sentry.io>
Date:   Mon Apr 27 21:56:02 2020 +0200

    ref(ui): Remove SearchInput component in favor of SearchBar (#18460)
    
    This PR removes SearchInput in favor of SearchBar which is pretty much the same thing and more widely used.
    
    I created SearchInput for some reason during my very first days at Sentry - I probably didn't know about SearchBar.
    
    I am killing it so that we don't have multiple components that do the same thing.
    I had to add two new props to SearchBar so that it can be used in place of SearchInput (width and onChange).
    
    We still should refactor SearchBar to use components instead of classNames in the future, but this is a step in the right direction.

diff --git a/src/sentry/static/sentry/app/components/events/eventDataSection.tsx b/src/sentry/static/sentry/app/components/events/eventDataSection.tsx
index 691d6470e7..ff85e30deb 100644
--- a/src/sentry/static/sentry/app/components/events/eventDataSection.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventDataSection.tsx
@@ -116,7 +116,7 @@ const Permalink = styled('a')`
   padding: ${space(0.25)} 5px;
 `;
 
-const SectionHeader = styled('div')`
+export const SectionHeader = styled('div')`
   display: flex;
   justify-content: space-between;
   position: relative;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
index ea08d415b1..3e7e817e74 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
@@ -8,12 +8,12 @@ import GuideAnchor from 'app/components/assistant/guideAnchor';
 import Button from 'app/components/button';
 import Checkbox from 'app/components/checkbox';
 import DebugFileFeature from 'app/components/debugFileFeature';
-import EventDataSection from 'app/components/events/eventDataSection';
+import EventDataSection, {SectionHeader} from 'app/components/events/eventDataSection';
 import InlineSvg from 'app/components/inlineSvg';
 import {Panel, PanelBody, PanelItem} from 'app/components/panels';
 import Tooltip from 'app/components/tooltip';
 import DebugMetaStore, {DebugMetaActions} from 'app/stores/debugMetaStore';
-import SearchInput from 'app/components/forms/searchInput';
+import SearchBar from 'app/components/searchBar';
 import {
   formatAddress,
   parseAddress,
@@ -356,8 +356,8 @@ class DebugMetaInterface extends React.PureComponent {
     this.setState({showDetails});
   };
 
-  handleChangeFilter = e => {
-    DebugMetaActions.updateFilter(e.target.value || '');
+  handleChangeFilter = value => {
+    DebugMetaActions.updateFilter(value || '');
   };
 
   isValidImage(image) {
@@ -427,11 +427,10 @@ class DebugMetaInterface extends React.PureComponent {
           {t('show unreferenced')}
         </Label>
         <SearchInputWrapper>
-          <SearchInput
-            value={filter}
+          <StyledSearchBar
+            query={filter}
             onChange={this.handleChangeFilter}
             placeholder={t('Search images\u2026')}
-            smaller
           />
         </SearchInputWrapper>
       </ToolbarWrapper>
@@ -457,7 +456,7 @@ class DebugMetaInterface extends React.PureComponent {
       : null;
 
     return (
-      <EventDataSection
+      <StyledEventDataSection
         event={this.props.event}
         type="packages"
         title={titleElement}
@@ -487,7 +486,7 @@ class DebugMetaInterface extends React.PureComponent {
             )}
           </PanelBody>
         </DebugImagesPanel>
-      </EventDataSection>
+      </StyledEventDataSection>
     );
   }
 }
@@ -495,12 +494,20 @@ class DebugMetaInterface extends React.PureComponent {
 const Label = styled('label')`
   font-weight: normal;
   margin-right: 1em;
+  margin-bottom: 0;
 
   > input {
     margin-right: 1ex;
   }
 `;
 
+const StyledEventDataSection = styled(EventDataSection)`
+  ${SectionHeader} {
+    align-items: center;
+    flex-wrap: wrap;
+  }
+`;
+
 const DebugImagesPanel = styled(Panel)`
   max-height: 600px;
   overflow-y: auto;
@@ -577,12 +584,25 @@ const EmptyItem = styled(PanelItem)`
 `;
 const ToolbarWrapper = styled('div')`
   display: flex;
-  align-items: baseline;
+  align-items: center;
   flex-wrap: wrap;
 `;
 const SearchInputWrapper = styled('div')`
   max-width: 180px;
   display: inline-block;
 `;
+// TODO(matej): remove this once we refactor SearchBar to not use css classes
+// - it could accept size as a prop
+const StyledSearchBar = styled(SearchBar)`
+  .search-input {
+    height: 30px;
+  }
+  .search-clear-form {
+    top: 5px;
+  }
+  .icon-search {
+    top: 8px;
+  }
+`;
 
 export default DebugMetaInterface;
diff --git a/src/sentry/static/sentry/app/components/forms/searchInput.tsx b/src/sentry/static/sentry/app/components/forms/searchInput.tsx
deleted file mode 100644
index 47fd4bab74..0000000000
--- a/src/sentry/static/sentry/app/components/forms/searchInput.tsx
+++ /dev/null
@@ -1,75 +0,0 @@
-import React from 'react';
-import styled from '@emotion/styled';
-
-import InlineSvg from 'app/components/inlineSvg';
-import Input from 'app/components/forms/input';
-import space from 'app/styles/space';
-
-type Props = {
-  value: string;
-  onChange: ({target: {value: string}}) => void;
-  placeholder: string;
-  smaller?: boolean;
-  width?: string;
-};
-
-class SearchInput extends React.Component<Props> {
-  handleResetInput = () => {
-    this.props.onChange({target: {value: ''}});
-  };
-
-  render() {
-    const {placeholder, value, onChange, smaller, width} = this.props;
-    return (
-      <SearchWrapper smaller={!!smaller} width={width ? width : ''}>
-        <SearchIcon />
-        <SearchField placeholder={placeholder} value={value || ''} onChange={onChange} />
-        {value && value.length > 0 && (
-          <a onClick={this.handleResetInput}>
-            <SearchReset />
-          </a>
-        )}
-      </SearchWrapper>
-    );
-  }
-}
-
-const SearchIcon = styled(props => <InlineSvg src="icon-search" {...props} />)`
-  color: ${p => p.theme.gray2};
-  position: absolute;
-  z-index: 1;
-  left: 8px;
-`;
-const SearchField = styled(Input)`
-  padding-left: ${space(4)};
-  padding-right: ${space(4)};
-`;
-const SearchReset = styled(props => <InlineSvg src="icon-circle-close" {...props} />)`
-  color: ${p => p.theme.gray2};
-  position: absolute;
-  z-index: 1;
-  right: 8px;
-  opacity: 0.5;
-  transition: opacity 0.3s ease-in-out;
-
-  &:hover {
-    opacity: 1;
-  }
-`;
-
-const SearchWrapper = styled('div')<{smaller: boolean; width: string}>`
-  position: relative;
-  display: inline-block;
-  width: ${p => (p.width ? p.width : 'auto')};
-  ${SearchIcon} {
-    top: ${p => (p.smaller ? '7px' : '11px')};
-  }
-  ${SearchField} {
-    height: ${p => (p.smaller ? '28px' : 'auto')};
-  }
-  ${SearchReset} {
-    top: ${p => (p.smaller ? '6px' : '10px')};
-  }
-`;
-
-export default SearchInput;
diff --git a/src/sentry/static/sentry/app/components/searchBar.tsx b/src/sentry/static/sentry/app/components/searchBar.tsx
index 9d7ffb3a03..8d1fbdb6a0 100644
--- a/src/sentry/static/sentry/app/components/searchBar.tsx
+++ b/src/sentry/static/sentry/app/components/searchBar.tsx
@@ -1,6 +1,9 @@
 import React from 'react';
+import styled from '@emotion/styled';
 import classNames from 'classnames';
 
+import {callIfFunction} from 'app/utils/callIfFunction';
+
 type DefaultProps = {
   query: string;
   defaultQuery: string;
@@ -10,6 +13,8 @@ type DefaultProps = {
 type Props = DefaultProps & {
   placeholder?: string;
   className?: string;
+  onChange?: (query: string) => void;
+  width?: string;
 };
 
 type State = {
@@ -52,9 +57,10 @@ class SearchBar extends React.PureComponent<Props, State> {
   };
 
   clearSearch = () => {
-    this.setState({query: this.props.defaultQuery}, () =>
-      this.props.onSearch(this.state.query)
-    );
+    this.setState({query: this.props.defaultQuery}, () => {
+      this.props.onSearch(this.state.query);
+      callIfFunction(this.props.onChange, this.state.query);
+    });
   };
 
   onQueryFocus = () => {
@@ -68,17 +74,20 @@ class SearchBar extends React.PureComponent<Props, State> {
   };
 
   onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {
-    this.setState({query: evt.target.value});
+    const {value} = evt.target;
+
+    this.setState({query: value});
+    callIfFunction(this.props.onChange, value);
   };
 
   render() {
-    const {className} = this.props;
+    const {className, width} = this.props;
 
     return (
       <div className={classNames('search', className)}>
         <form className="form-horizontal" onSubmit={this.onSubmit}>
           <div>
-            <input
+            <Input
               type="text"
               className="search-input form-control"
               placeholder={this.props.placeholder}
@@ -88,6 +97,7 @@ class SearchBar extends React.PureComponent<Props, State> {
               value={this.state.query}
               onBlur={this.onQueryBlur}
               onChange={this.onQueryChange}
+              width={width}
             />
             <span className="icon-search" />
             {this.state.query !== this.props.defaultQuery && (
@@ -104,4 +114,8 @@ class SearchBar extends React.PureComponent<Props, State> {
   }
 }
 
+const Input = styled('input')`
+  width: ${p => (p.width ? p.width : undefined)};
+`;
+
 export default SearchBar;
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
index 4589a95f36..ce51538232 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
@@ -35,7 +35,7 @@ import PermissionAlert from 'app/views/settings/organization/permissionAlert';
 import SentryDocumentTitle from 'app/components/sentryDocumentTitle';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import withOrganization from 'app/utils/withOrganization';
-import SearchInput from 'app/components/forms/searchInput';
+import SearchBar from 'app/components/searchBar';
 import {createFuzzySearch} from 'app/utils/createFuzzySearch';
 import space from 'app/styles/space';
 import SelectControl from 'app/components/forms/selectControl';
@@ -275,13 +275,13 @@ export class IntegrationListDirectory extends AsyncComponent<
     );
   }, TEXT_SEARCH_ANALYTICS_DEBOUNCE_IN_MS);
 
-  onSearchChange = async ({target}) => {
-    this.setState({searchInput: target.value}, () => {
-      if (!target.value) {
+  handleSearchChange = async (value: string) => {
+    this.setState({searchInput: value}, () => {
+      if (!value) {
         return this.setState({displayedList: this.state.list});
       }
-      const result = this.state.fuzzy && this.state.fuzzy.search(target.value);
-      this.debouncedTrackIntegrationSearch(target.value, result.length);
+      const result = this.state.fuzzy && this.state.fuzzy.search(value);
+      this.debouncedTrackIntegrationSearch(value, result.length);
       return this.setState({
         displayedList: this.sortIntegrations(result.map(i => i.item)),
       });
@@ -452,9 +452,9 @@ export class IntegrationListDirectory extends AsyncComponent<
                 ) : (
                   <div />
                 )}
-                <SearchInput
-                  value={this.state.searchInput || ''}
-                  onChange={this.onSearchChange}
+                <SearchBar
+                  query={this.state.searchInput || ''}
+                  onChange={this.handleSearchChange}
                   placeholder={t('Filter Integrations...')}
                   width="25em"
                 />
diff --git a/tests/js/spec/views/organizationIntegrations/integrationListDirectory.spec.jsx b/tests/js/spec/views/organizationIntegrations/integrationListDirectory.spec.jsx
index 76fefe7c90..c036f839a4 100644
--- a/tests/js/spec/views/organizationIntegrations/integrationListDirectory.spec.jsx
+++ b/tests/js/spec/views/organizationIntegrations/integrationListDirectory.spec.jsx
@@ -44,7 +44,7 @@ describe('IntegrationListDirectory', function() {
     });
 
     it('shows installed integrations at the top in order of weight', async function() {
-      expect(wrapper.find('SearchInput').exists()).toBeTruthy();
+      expect(wrapper.find('SearchBar').exists()).toBeTruthy();
       expect(wrapper.find('PanelBody').exists()).toBeTruthy();
       expect(wrapper.find('IntegrationRow')).toHaveLength(11);
 
