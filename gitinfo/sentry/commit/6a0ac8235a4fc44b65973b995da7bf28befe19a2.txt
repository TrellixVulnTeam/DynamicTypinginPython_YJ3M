commit 6a0ac8235a4fc44b65973b995da7bf28befe19a2
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 6 21:40:18 2015 -0700

    Remove all uses of social auth

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 4a3d649f41..e89c1f1bd4 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -320,7 +320,6 @@ SOCIAL_AUTH_PIPELINE = (
     'social_auth.backends.pipeline.social.social_auth_user',
     'social_auth.backends.pipeline.associate.associate_by_email',
     'social_auth.backends.pipeline.misc.save_status_to_session',
-    'sentry.utils.social_auth.create_user_if_enabled',
     'social_auth.backends.pipeline.social.associate_user',
     'social_auth.backends.pipeline.social.load_extra_data',
     'social_auth.backends.pipeline.user.update_user_details',
@@ -534,7 +533,6 @@ SENTRY_CACHE_BACKEND = 'default'
 
 SENTRY_FEATURES = {
     'auth:register': True,
-    'social-auth:register': True,
     'organizations:create': True,
     'organizations:sso': False,
     'projects:quotas': True,
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 288d5fa9c5..83c1713a78 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -7,7 +7,6 @@ from .manager import *  # NOQA
 
 default_manager = FeatureManager()
 default_manager.add('auth:register')
-default_manager.add('social-auth:register')
 default_manager.add('organizations:create')
 default_manager.add('organizations:sso', OrganizationFeature)
 default_manager.add('teams:create', OrganizationFeature)
diff --git a/src/sentry/utils/runner.py b/src/sentry/utils/runner.py
index d5690dd5eb..c8936d5934 100644
--- a/src/sentry/utils/runner.py
+++ b/src/sentry/utils/runner.py
@@ -358,10 +358,6 @@ def apply_legacy_settings(config):
         warnings.warn('SENTRY_ALLOW_REGISTRATION is deprecated. Use SENTRY_FEATURES instead.', DeprecationWarning)
         settings.SENTRY_FEATURES['auth:register'] = settings.SENTRY_ALLOW_REGISTRATION
 
-    if hasattr(settings, 'SOCIAL_AUTH_CREATE_USERS'):
-        warnings.warn('SOCIAL_AUTH_CREATE_USERS is deprecated. Use SENTRY_FEATURES instead.', DeprecationWarning)
-        settings.SENTRY_FEATURES['social-auth:register'] = settings.SOCIAL_AUTH_CREATE_USERS
-
 
 def skip_migration_if_applied(settings, app_name, table_name,
                               name='0001_initial'):
diff --git a/src/sentry/utils/social_auth.py b/src/sentry/utils/social_auth.py
deleted file mode 100644
index 9ed1b3fbf9..0000000000
--- a/src/sentry/utils/social_auth.py
+++ /dev/null
@@ -1,35 +0,0 @@
-"""
-sentry.utils.social_auth
-~~~~~~~~~~~~~~~~~~~~~~~~
-
-:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
-:license: BSD, see LICENSE for more details.
-"""
-from __future__ import absolute_import
-
-from social_auth.backends.pipeline.user import create_user
-from social_auth.exceptions import SocialAuthBaseException
-
-from sentry import features
-
-
-class AuthNotAllowed(SocialAuthBaseException):
-    pass
-
-
-def create_user_if_enabled(*args, **kwargs):
-    """
-    A pipeline step for django-social-auth
-    Create user. Depends on get_username pipeline.
-    """
-    if not features.has('social-auth:register') and not kwargs.get('user'):
-        raise AuthNotAllowed('You must create an account before associating an identity.')
-
-    backend = kwargs.pop('backend')
-    details = kwargs.pop('details')
-    response = kwargs.pop('response')
-    uid = kwargs.pop('uid')
-    username = kwargs.pop('username', None)
-    user = kwargs.pop('user', None)
-
-    return create_user(backend=backend, details=details, response=response, uid=uid, username=username, user=user, *args, **kwargs)
diff --git a/src/sentry/web/frontend/accounts.py b/src/sentry/web/frontend/accounts.py
index d2bc54a64b..3044d65955 100644
--- a/src/sentry/web/frontend/accounts.py
+++ b/src/sentry/web/frontend/accounts.py
@@ -68,8 +68,6 @@ def register(request):
 
     return render_to_response('sentry/register.html', {
         'form': form,
-        'AUTH_PROVIDERS': get_auth_providers(),
-        'SOCIAL_AUTH_CREATE_USERS': features.has('social-auth:register'),
     }, request)
 
 
diff --git a/src/sentry/web/frontend/auth_login.py b/src/sentry/web/frontend/auth_login.py
index 12478c1cd4..4638604724 100644
--- a/src/sentry/web/frontend/auth_login.py
+++ b/src/sentry/web/frontend/auth_login.py
@@ -5,7 +5,7 @@ from django.contrib.auth import login
 from sentry import features
 from sentry.web.forms.accounts import AuthenticationForm
 from sentry.web.frontend.base import BaseView
-from sentry.utils.auth import get_auth_providers, get_login_redirect
+from sentry.utils.auth import get_login_redirect
 
 
 class AuthLoginView(BaseView):
@@ -35,7 +35,5 @@ class AuthLoginView(BaseView):
             'form': form,
             'next': request.session.get('_next'),
             'CAN_REGISTER': features.has('auth:register') or request.session.get('can_register'),
-            'AUTH_PROVIDERS': get_auth_providers(),
-            'SOCIAL_AUTH_CREATE_USERS': features.has('social-auth:register'),
         }
         return self.respond('sentry/login.html', context)
