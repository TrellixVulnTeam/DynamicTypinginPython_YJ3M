commit 69ee12b1bf847498f3122c3d3eb157cc91f488e6
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Mar 11 12:15:34 2020 -0700

    fix(workflow): Fix missing activities in Alert Details (#17566)
    
    This fixes the missing activities in Alert details when the alert status changes due to trigger thresholds changing.

diff --git a/src/sentry/static/sentry/app/views/alerts/details/activity/statusItem.tsx b/src/sentry/static/sentry/app/views/alerts/details/activity/statusItem.tsx
index 93135dc4a0..bc67918a5e 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/activity/statusItem.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/activity/statusItem.tsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import styled from '@emotion/styled';
 
-import {tct} from 'app/locale';
+import {t, tct} from 'app/locale';
 import ActivityItem from 'app/components/activity/item';
 import getDynamicText from 'app/utils/getDynamicText';
 
@@ -34,12 +34,17 @@ class StatusItem extends React.Component<Props> {
     const isClosed =
       activity.type === IncidentActivityType.STATUS_CHANGE &&
       activity.value === `${IncidentStatus.CLOSED}`;
+    const isTriggerChange =
+      activity.type === IncidentActivityType.STATUS_CHANGE && !isClosed;
 
     // Unknown activity, don't render anything
-    if (!isDetected && !isClosed) {
+    if (!isDetected && !isClosed && !isTriggerChange) {
       return null;
     }
 
+    const currentTrigger = getTriggerName(activity.value);
+    const previousTrigger = getTriggerName(activity.previousValue);
+
     return (
       <ActivityItem
         showTime={showTime}
@@ -49,17 +54,28 @@ class StatusItem extends React.Component<Props> {
         }}
         header={
           <div>
+            {isTriggerChange &&
+              previousTrigger &&
+              tct('Alert status changed from [previousTrigger] to [currentTrigger]', {
+                previousTrigger,
+                currentTrigger: <StatusValue>{currentTrigger}</StatusValue>,
+              })}
+            {isTriggerChange &&
+              !previousTrigger &&
+              tct('Alert status changed to [currentTrigger]', {
+                currentTrigger: <StatusValue>{currentTrigger}</StatusValue>,
+              })}
             {isClosed &&
               tct('[user] resolved the alert', {
-                user: <AuthorName>{authorName}</AuthorName>,
+                user: <StatusValue>{authorName}</StatusValue>,
               })}
             {isDetected &&
               (incident?.alertRule
                 ? tct('[user] was triggered', {
-                    user: <AuthorName>{incident.alertRule.name}</AuthorName>,
+                    user: <StatusValue>{incident.alertRule.name}</StatusValue>,
                   })
                 : tct('[user] created an alert', {
-                    user: <AuthorName>{authorName}</AuthorName>,
+                    user: <StatusValue>{authorName}</StatusValue>,
                   }))}
           </div>
         }
@@ -71,6 +87,19 @@ class StatusItem extends React.Component<Props> {
 
 export default StatusItem;
 
-const AuthorName = styled('span')`
+const StatusValue = styled('span')`
   font-weight: bold;
 `;
+
+function getTriggerName(value: string | null) {
+  if (value === `${IncidentStatus.WARNING}`) {
+    return t('Warning');
+  }
+
+  if (value === `${IncidentStatus.CRITICAL}`) {
+    return t('Critical');
+  }
+
+  // Otherwise, activity type is not status change
+  return '';
+}
diff --git a/src/sentry/static/sentry/app/views/alerts/types.tsx b/src/sentry/static/sentry/app/views/alerts/types.tsx
index ae58946c87..2867f6d6ab 100644
--- a/src/sentry/static/sentry/app/views/alerts/types.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/types.tsx
@@ -19,7 +19,7 @@ export type Incident = {
   organizationId: string;
   projects: string[]; // Array of slugs
   seenBy: User[];
-  status: number;
+  status: IncidentStatus;
   title: string;
   totalEvents: number;
   uniqueUsers: number;
@@ -40,13 +40,13 @@ export type ActivityTypeDraft = {
   id: string;
   incidentIdentifier: string;
   type: IncidentActivityType;
-  user: User;
+  user: User | null;
 };
 
 export type ActivityType = ActivityTypeDraft & {
-  eventStats: {data: Data};
-  previousValue: null;
-  value: null;
+  eventStats?: {data: Data};
+  previousValue: string | null;
+  value: string | null;
 };
 
 export type NoteType = {
