commit ec00641f0578d08beb47643437036a8204c1e5c9
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Jul 30 15:35:02 2019 -0700

    feat(api): Allow fetching team details without projects (#13935)
    
    This allows you to fetch team details that do not include projects, which improves performance.

diff --git a/src/sentry/api/endpoints/organization_teams.py b/src/sentry/api/endpoints/organization_teams.py
index f33e695ba7..92bb1cdc05 100644
--- a/src/sentry/api/endpoints/organization_teams.py
+++ b/src/sentry/api/endpoints/organization_teams.py
@@ -12,7 +12,7 @@ from sentry.api.base import DocSection
 from sentry.api.bases.organization import OrganizationEndpoint, OrganizationPermission
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
-from sentry.api.serializers.models.team import TeamWithProjectsSerializer
+from sentry.api.serializers.models import team as team_serializers
 from sentry.models import (
     AuditLogEntryEvent, OrganizationMember, OrganizationMemberTeam, Team, TeamStatus
 )
@@ -87,6 +87,7 @@ class OrganizationTeamsEndpoint(OrganizationEndpoint):
 
         :pparam string organization_slug: the slug of the organization for
                                           which the teams should be listed.
+        :param string detailed: Specify "0" to return team details that do not include projects
         :auth: required
         """
         # TODO(dcramer): this should be system-wide default for organization
@@ -100,6 +101,7 @@ class OrganizationTeamsEndpoint(OrganizationEndpoint):
         ).order_by('slug')
 
         query = request.GET.get('query')
+
         if query:
             tokens = tokenize_query(query)
             for key, value in six.iteritems(tokens):
@@ -109,11 +111,14 @@ class OrganizationTeamsEndpoint(OrganizationEndpoint):
                 else:
                     queryset = queryset.none()
 
+        is_detailed = request.GET.get('detailed', '1') != '0'
+        serializer = team_serializers.TeamWithProjectsSerializer if is_detailed else team_serializers.TeamSerializer
+
         return self.paginate(
             request=request,
             queryset=queryset,
             order_by='slug',
-            on_results=lambda x: serialize(x, request.user, TeamWithProjectsSerializer()),
+            on_results=lambda x: serialize(x, request.user, serializer()),
             paginator_cls=OffsetPaginator,
         )
 
diff --git a/tests/sentry/api/endpoints/test_organization_teams.py b/tests/sentry/api/endpoints/test_organization_teams.py
index 9a00c7503e..33a5fd966e 100644
--- a/tests/sentry/api/endpoints/test_organization_teams.py
+++ b/tests/sentry/api/endpoints/test_organization_teams.py
@@ -36,6 +36,30 @@ class OrganizationTeamsListTest(APITestCase):
         assert response.data[1]['id'] == six.text_type(team1.id)
         assert response.data[1]['isMember']
 
+    def test_simple_results_no_projects(self):
+        user = self.create_user()
+        org = self.create_organization(owner=self.user)
+        team1 = self.create_team(organization=org, name='foo')
+        self.create_team(organization=org, name='bar')
+
+        self.create_member(
+            organization=org,
+            user=user,
+            has_global_access=False,
+            teams=[team1],
+        )
+
+        path = u'/api/0/organizations/{}/teams/?detailed=0'.format(org.slug)
+
+        self.login_as(user=user)
+
+        response = self.client.get(path)
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 2
+        assert 'projects' not in response.data[0]
+        assert 'projects' not in response.data[1]
+
     def test_search(self):
         user = self.create_user()
         org = self.create_organization(owner=self.user)
