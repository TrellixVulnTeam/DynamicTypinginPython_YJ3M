commit fda682c64b4015c386cba6e33b8986ee6e426cc6
Author: Max Bittker <maxbittker@gmail.com>
Date:   Mon Feb 26 12:37:53 2018 -0800

    fix(tooltip): Refine Tooltip component (#7363)
    
    *fix behavior of this component regarding changing titles and respecting the disabled prop
    
    * tooltip storybook and new logic

diff --git a/docs-ui/components/tooltip.stories.js b/docs-ui/components/tooltip.stories.js
index 1c446a9f25..7afaf91e18 100644
--- a/docs-ui/components/tooltip.stories.js
+++ b/docs-ui/components/tooltip.stories.js
@@ -1,31 +1,39 @@
 import React from 'react';
 import {storiesOf} from '@storybook/react';
 import {withInfo} from '@storybook/addon-info';
+import {text, boolean} from '@storybook/addon-knobs';
 
 import Tooltip from 'sentry-ui/tooltip';
 import Button from 'sentry-ui/buttons/button';
 
 storiesOf('Tooltip', module).add(
   'default',
-  withInfo('Description')(() => (
-    <div>
-      <h1>Test</h1>
-      <div>
-        <Tooltip title="My tooltip">
-          <Button>Custom React Component</Button>
-        </Tooltip>
-      </div>
+  withInfo('Description')(() => {
+    let title = text('My tooltip', 'My tooltip');
+    let disabled = boolean('Disabled', false);
 
+    return (
       <div>
-        <Tooltip
-          title="My tooltip with options"
-          tooltipOptions={{
-            placement: 'bottom',
-          }}
-        >
-          <button>Native button</button>
-        </Tooltip>
+        <p>Test</p>
+        <div>
+          <Tooltip title={title} disabled={disabled}>
+            <Button>Custom React Component</Button>
+          </Tooltip>
+        </div>
+        <p>Test with options</p>
+
+        <div>
+          <Tooltip
+            title={title}
+            disabled={disabled}
+            tooltipOptions={{
+              placement: 'bottom',
+            }}
+          >
+            <button>Native button</button>
+          </Tooltip>
+        </div>
       </div>
-    </div>
-  ))
+    );
+  })
 );
diff --git a/src/sentry/static/sentry/app/components/tooltip.jsx b/src/sentry/static/sentry/app/components/tooltip.jsx
index ff7edeb846..fa6515a1d5 100644
--- a/src/sentry/static/sentry/app/components/tooltip.jsx
+++ b/src/sentry/static/sentry/app/components/tooltip.jsx
@@ -14,44 +14,59 @@ class Tooltip extends React.Component {
     title: PropTypes.node,
   };
 
+  componentWillReceiveProps(newProps) {
+    let {disabled} = this.props;
+    if (newProps.disabled && !disabled) {
+      this.removeTooltips(this.ref);
+    } else if (!newProps.disabled && disabled) {
+      this.attachTooltips(this.ref);
+    }
+  }
+
   componentDidUpdate = prevProps => {
-    if ( prevProps.title != this.props.title ) {
-      this.removeTooltips(this.$ref);
-      this.attachTooltips(this.$ref);
+    if (prevProps.title != this.props.title) {
+      this.removeTooltips(this.ref);
+      this.attachTooltips(this.ref);
     }
   };
 
   handleMount = ref => {
     if (ref && !this.ref) {
       // eslint-disable-next-line react/no-find-dom-node
-      this.$ref = $(ReactDOM.findDOMNode(ref));
-      this.attachTooltips(this.$ref);
+      this.attachTooltips(ref);
     } else if (!ref && this.ref) {
-      this.removeTooltips(this.$ref);
-      this.$ref = null;
+      this.removeTooltips(ref);
     }
 
     this.ref = ref;
   };
 
-  attachTooltips = $el => {
+  attachTooltips = ref => {
+    this.$ref = $(ReactDOM.findDOMNode(ref));
+
     let {title, tooltipOptions} = this.props;
     let options =
       typeof tooltipOptions === 'function'
         ? tooltipOptions.call(this)
         : tooltipOptions || {};
-    $el.tooltip({
+
+    this.$ref.tooltip({
       title,
       ...options,
     });
   };
 
-  removeTooltips = $el => {
+  removeTooltips = ref => {
+    this.$ref = $(ReactDOM.findDOMNode(ref));
+
     let {tooltipOptions} = this.props;
-    $el
+
+    this.$ref
       .tooltip('destroy') // destroy tooltips on parent ...
       .find(tooltipOptions && tooltipOptions.selector)
       .tooltip('destroy'); // ... and descendents
+
+    this.$ref = null;
   };
 
   render() {
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
index 7b77820dea..6e01e11fa1 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
@@ -56,6 +56,8 @@ const ProjectItem = createReactClass({
         },
       })
     );
+    //needed to dismiss tooltip
+    document.activeElement.blur();
   },
 
   render() {
diff --git a/tests/js/spec/components/tooltip.spec.jsx b/tests/js/spec/components/tooltip.spec.jsx
index fc79ddf36e..8afd114cda 100644
--- a/tests/js/spec/components/tooltip.spec.jsx
+++ b/tests/js/spec/components/tooltip.spec.jsx
@@ -11,4 +11,50 @@ describe('Tooltip', function() {
     );
     expect(wrapper).toMatchSnapshot();
   });
+
+  it('updates title', function() {
+    let wrapper = mount(
+      <Tooltip title="test">
+        <span>My Button</span>
+      </Tooltip>
+    );
+
+    wrapper.setProps({title: 'bar'});
+    let tip = wrapper.find('.tip');
+    expect(tip.props().title).toBe('bar');
+    wrapper.setProps({title: 'baz'});
+    tip = wrapper.find('.tip');
+    expect(tip.props().title).toBe('baz');
+  });
+
+  it('disables and re-enables', function() {
+    let wrapper = mount(
+      <Tooltip title="test">
+        <span>My Button</span>
+      </Tooltip>
+    );
+
+    wrapper.setProps({disabled: true});
+    let tip = wrapper.find('span');
+
+    expect(tip.props().title).toBeUndefined();
+    wrapper.setProps({disabled: false});
+
+    tip = wrapper.find('.tip');
+    expect(tip.props().title).toBe('test');
+  });
+
+  it('simultaneous enable and text change', function() {
+    let wrapper = mount(
+      <Tooltip title="test">
+        <span>My Button</span>
+      </Tooltip>
+    );
+
+    wrapper.setProps({disabled: true, title: 'bar'});
+    let tip = wrapper.find('span');
+
+    expect(tip.props().title).toBeUndefined();
+    wrapper.setProps({disabled: false});
+  });
 });
