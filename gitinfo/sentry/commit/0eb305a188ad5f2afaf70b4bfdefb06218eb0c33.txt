commit 0eb305a188ad5f2afaf70b4bfdefb06218eb0c33
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Tue Apr 16 09:34:28 2019 -0700

    ref(app-platform): Add annotations for linked issues (#12650)
    
    * ref(app-platform): Add annotations for linked issues

diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index e52b540e2e..d447366d30 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -244,6 +244,14 @@ class GroupSerializerBase(Serializer):
                     safe_execute(install.get_annotations, group=item, _with_transaction=False) or ()
                 )
 
+            from sentry.models import PlatformExternalIssue
+            annotations.extend(
+                safe_execute(
+                    PlatformExternalIssue.get_annotations,
+                    group=item,
+                    _with_transaction=False) or ()
+            )
+
             resolution_actor = None
             resolution_type = None
             resolution = release_resolutions.get(item.id)
diff --git a/src/sentry/mediators/external_issues/issue_link_creator.py b/src/sentry/mediators/external_issues/issue_link_creator.py
index c8e7dd5203..3c0eaa5804 100644
--- a/src/sentry/mediators/external_issues/issue_link_creator.py
+++ b/src/sentry/mediators/external_issues/issue_link_creator.py
@@ -6,6 +6,7 @@ from sentry.coreapi import APIUnauthorized
 from sentry.mediators import Mediator, Param, external_requests
 from sentry.models import PlatformExternalIssue
 from sentry.utils.cache import memoize
+from sentry.utils.html import escape
 
 
 class IssueLinkCreator(Mediator):
@@ -39,8 +40,8 @@ class IssueLinkCreator(Mediator):
         web_url = self.response['webUrl']
 
         display_name = u'{}#{}'.format(
-            self.response['project'],
-            self.response['identifier'],
+            escape(self.response['project']),
+            escape(self.response['identifier']),
         )
 
         return [web_url, display_name]
diff --git a/src/sentry/models/platformexternalissue.py b/src/sentry/models/platformexternalissue.py
index a38661345f..5b169977b6 100644
--- a/src/sentry/models/platformexternalissue.py
+++ b/src/sentry/models/platformexternalissue.py
@@ -22,3 +22,12 @@ class PlatformExternalIssue(Model):
         unique_together = (('group_id', 'service_type'), )
 
     __repr__ = sane_repr('group_id', 'service_type', 'display_name', 'web_url')
+
+    @classmethod
+    def get_annotations(cls, group):
+        external_issues = cls.objects.filter(group_id=group.id)
+        annotations = []
+        for ei in external_issues:
+            annotations.append('<a href="%s">%s</a>' % (ei.web_url, ei.display_name))
+
+        return annotations
diff --git a/tests/sentry/api/endpoints/test_group_details.py b/tests/sentry/api/endpoints/test_group_details.py
index c7473d3bf0..8bb27ba827 100644
--- a/tests/sentry/api/endpoints/test_group_details.py
+++ b/tests/sentry/api/endpoints/test_group_details.py
@@ -102,6 +102,22 @@ class GroupDetailsTest(APITestCase):
         response = self.client.get(url, {'environment': 'invalid'}, format='json')
         assert response.status_code == 404
 
+    def test_platform_external_issue_annotation(self):
+        self.login_as(user=self.user)
+
+        group = self.create_group()
+        self.create_platform_external_issue(
+            group=group,
+            service_type='sentry-app',
+            web_url='https://example.com/issues/2',
+            display_name='Issue#2',
+        )
+        url = u'/api/0/issues/{}/'.format(group.id)
+        response = self.client.get(url, format='json')
+
+        assert response.data['annotations'] == \
+            [u'<a href="https://example.com/issues/2">Issue#2</a>']
+
 
 class GroupUpdateTest(APITestCase):
     def test_resolve(self):
