commit 1207582b84455df76af68a536610daf3c0fe30c7
Author: David Cramer <cramer@dropbox.com>
Date:   Tue Aug 26 11:01:28 2014 -0700

    Correct Group.is_resolved behavior

diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index 351fd6f602..085df8c8c4 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -119,8 +119,8 @@ class Group(Model):
         return self.get_status() == STATUS_RESOLVED
 
     def get_status(self):
-        if self.status == STATUS_UNRESOLVED and self.is_over_resolve_age():
-            return STATUS_RESOLVED
+        if self.status == STATUS_UNRESOLVED or self.is_over_resolve_age():
+            return STATUS_UNRESOLVED
         return self.status
 
     def get_score(self):
diff --git a/tests/sentry/models/test_group.py b/tests/sentry/models/test_group.py
new file mode 100644
index 0000000000..8e9949787a
--- /dev/null
+++ b/tests/sentry/models/test_group.py
@@ -0,0 +1,31 @@
+from __future__ import absolute_import
+
+from datetime import timedelta
+from django.utils import timezone
+
+from sentry.constants import STATUS_RESOLVED, STATUS_UNRESOLVED, STATUS_MUTED
+from sentry.testutils import TestCase
+
+
+class GroupTest(TestCase):
+    def test_is_resolved(self):
+        group = self.create_group(status=STATUS_UNRESOLVED)
+        assert not group.is_resolved()
+
+        group.status = STATUS_MUTED
+        assert not group.is_resolved()
+
+        group.status = STATUS_RESOLVED
+        assert group.is_resolved()
+
+        group.last_seen = timezone.now() - timedelta(hours=12)
+
+        assert group.is_resolved()
+
+        group.project.update_option('sentry:resolve_age', 24)
+
+        assert group.is_resolved()
+
+        group.project.update_option('sentry:resolve_age', 1)
+
+        assert not group.is_resolved()
