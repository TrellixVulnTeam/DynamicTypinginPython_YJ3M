commit 3bbe9e2619c4f1267a005ecf1d4c0676c8ed25fd
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Feb 6 13:23:53 2015 -0800

    Ensure menuItem always enforces dropdown closure

diff --git a/src/sentry/static/sentry/app/components/dropdownLink.jsx b/src/sentry/static/sentry/app/components/dropdownLink.jsx
index 807fa1adf1..9aa2327cfd 100644
--- a/src/sentry/static/sentry/app/components/dropdownLink.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownLink.jsx
@@ -28,6 +28,16 @@ var DropdownButton = React.createClass({
     disabled:  React.PropTypes.bool,
   },
 
+  childContextTypes: {
+    setDropdownState: React.PropTypes.func,
+  },
+
+  getChildContext() {
+    return {
+      setDropdownState: this.setDropdownState,
+    };
+  },
+
   getDefaultProps: function() {
     return {
       caret: true,
diff --git a/src/sentry/static/sentry/app/components/menuItem.jsx b/src/sentry/static/sentry/app/components/menuItem.jsx
index 238df39cd3..8bf0f69c56 100644
--- a/src/sentry/static/sentry/app/components/menuItem.jsx
+++ b/src/sentry/static/sentry/app/components/menuItem.jsx
@@ -1,36 +1,64 @@
 /*** @jsx React.DOM */
-var React = require('react');
-var joinClasses = require('react-bootstrap/utils/joinClasses');
-var classSet = require('react-bootstrap/utils/classSet');
+
+var React = require("react");
+var Router = require("react-router");
+var joinClasses = require("react-bootstrap/utils/joinClasses");
+var classSet = require("react-bootstrap/utils/classSet");
+
+var DropdownContext = {
+  contextTypes: {
+    setDropdownState: React.PropTypes.func.isRequired
+  },
+
+  setDropdownState() {
+    this.context.setDropdownState.apply(arguments);
+  }
+};
+
 
 var MenuItem = React.createClass({
+  mixins: [DropdownContext],
+
   propTypes: {
     header:    React.PropTypes.bool,
     divider:   React.PropTypes.bool,
-    href:      React.PropTypes.string,
     title:     React.PropTypes.string,
     onSelect:  React.PropTypes.func,
     eventKey:  React.PropTypes.any,
     isActive:  React.PropTypes.bool,
-    noAnchor:  React.PropTypes.bool
-  },
-
-  getDefaultProps: function () {
-    return {
-      href: '#'
-    };
+    noAnchor:  React.PropTypes.bool,
+    // basic link
+    href:      React.PropTypes.string,
+    // router link
+    to:        React.PropTypes.string,
+    params:    React.PropTypes.object,
+    query:     React.PropTypes.object,
   },
 
-  handleClick: function (e) {
+  handleClick(e) {
     if (this.props.onSelect) {
       e.preventDefault();
       this.props.onSelect(this.props.eventKey);
     }
+    this.setDropdownState(false);
   },
 
-  renderAnchor: function () {
+  renderAnchor() {
+    if (this.props.to) {
+      return (
+        <Router.Link
+            to={this.props.to}
+            params={this.props.params}
+            query={this.props.query}
+            title={this.props.title}
+            onClick={this.handleClick}
+            tabIndex="-1">
+          {this.props.children}
+        </Router.Link>
+      );
+    }
     return (
-      <a onClick={this.handleClick} href={this.props.href} title={this.props.title} tabIndex="-1">
+      <a title={this.props.title} onClick={this.handleClick} href={this.props.href} tabIndex="-1">
         {this.props.children}
       </a>
     );
@@ -38,9 +66,9 @@ var MenuItem = React.createClass({
 
   render: function () {
     var classes = {
-      'dropdown-header': this.props.header,
-      'divider': this.props.divider,
-      'active': this.props.isActive
+      "dropdown-header": this.props.header,
+      "divider": this.props.divider,
+      "active": this.props.isActive
     };
 
     var children = null;
