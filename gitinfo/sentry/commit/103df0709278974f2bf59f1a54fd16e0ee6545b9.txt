commit 103df0709278974f2bf59f1a54fd16e0ee6545b9
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Fri Feb 17 10:58:52 2017 +0100

    Weaken release version regex

diff --git a/src/sentry/api/endpoints/project_releases.py b/src/sentry/api/endpoints/project_releases.py
index 20bf3005fe..86329a6277 100644
--- a/src/sentry/api/endpoints/project_releases.py
+++ b/src/sentry/api/endpoints/project_releases.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
-import string
+import re
 
 from django.db import IntegrityError, transaction
 
@@ -17,6 +17,9 @@ from sentry.plugins.interfaces.releasehook import ReleaseHook
 from sentry.utils.apidocs import scenario, attach_scenarios
 
 
+_VERSION_NEWLINE_RE = re.compile(r'[^\S ]')
+
+
 @scenario('CreateNewRelease')
 def create_new_release_scenario(runner):
     runner.request(
@@ -43,7 +46,7 @@ def list_releases_scenario(runner):
 
 
 class ReleaseSerializer(serializers.Serializer):
-    version = serializers.RegexField(r'[a-zA-Z0-9\-_\.]', max_length=64, required=True)
+    version = serializers.RegexField(r'[a-zA-Z0-9\-_\. \(\)]', max_length=64, required=True)
     ref = serializers.CharField(max_length=64, required=False)
     url = serializers.URLField(required=False)
     owner = UserField(required=False)
@@ -53,7 +56,7 @@ class ReleaseSerializer(serializers.Serializer):
 
     def validate_version(self, attrs, source):
         value = attrs[source]
-        if not set(value).isdisjoint(set(string.whitespace)):
+        if _VERSION_NEWLINE_RE.search(value):
             raise serializers.ValidationError('Enter a valid value')
         return attrs
 
diff --git a/tests/sentry/api/endpoints/test_project_releases.py b/tests/sentry/api/endpoints/test_project_releases.py
index bb3c2f1709..b80a3a0110 100644
--- a/tests/sentry/api/endpoints/test_project_releases.py
+++ b/tests/sentry/api/endpoints/test_project_releases.py
@@ -113,6 +113,29 @@ class ProjectReleaseCreateTest(APITestCase):
         assert release.organization == project.organization
         assert release.projects.first() == project
 
+    def test_ios_release(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project(name='foo')
+
+        url = reverse('sentry-api-0-project-releases', kwargs={
+            'organization_slug': project.organization.slug,
+            'project_slug': project.slug,
+        })
+        response = self.client.post(url, data={
+            'version': '1.2.1 (123)',
+        })
+
+        assert response.status_code == 201, response.content
+        assert response.data['version']
+
+        release = Release.objects.get(
+            version=response.data['version'],
+        )
+        assert not release.owner
+        assert release.organization == project.organization
+        assert release.projects.first() == project
+
     def test_duplicate(self):
         self.login_as(user=self.user)
 
