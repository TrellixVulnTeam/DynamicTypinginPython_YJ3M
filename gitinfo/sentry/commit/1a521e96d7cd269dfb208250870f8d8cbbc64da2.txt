commit 1a521e96d7cd269dfb208250870f8d8cbbc64da2
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Feb 27 08:17:46 2019 +0800

    fix(events): Do not include previous period if requesting > 45 days (#12182)
    
    Max is 90day range, so do not request previous period if > 45 days

diff --git a/src/sentry/static/sentry/app/actionCreators/events.jsx b/src/sentry/static/sentry/app/actionCreators/events.jsx
index c16ac548a4..17e62f845f 100644
--- a/src/sentry/static/sentry/app/actionCreators/events.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/events.jsx
@@ -1,3 +1,4 @@
+import {canIncludePreviousPeriod} from 'app/views/organizationEvents/utils/canIncludePreviousPeriod';
 import {getPeriod} from 'app/utils/getPeriod';
 
 const BASE_URL = org => `/organizations/${org.slug}/events-stats/`;
@@ -31,7 +32,7 @@ export const doEventsRequest = (
     query,
   }
 ) => {
-  const shouldDoublePeriod = includePrevious;
+  const shouldDoublePeriod = canIncludePreviousPeriod(includePrevious, period);
   const urlQuery = {
     interval,
     project,
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/utils/canIncludePreviousPeriod.jsx b/src/sentry/static/sentry/app/views/organizationEvents/utils/canIncludePreviousPeriod.jsx
new file mode 100644
index 0000000000..f243396b6e
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationEvents/utils/canIncludePreviousPeriod.jsx
@@ -0,0 +1,16 @@
+import {parsePeriodToHours} from 'app/utils';
+// Max period (in hours) before we can no long include previous period
+const MAX_PERIOD_HOURS_INCLUDE_PREVIOUS = 45 * 24;
+
+export function canIncludePreviousPeriod(includePrevious, period) {
+  if (!includePrevious) {
+    return false;
+  }
+
+  if (period && parsePeriodToHours(period) > MAX_PERIOD_HOURS_INCLUDE_PREVIOUS) {
+    return false;
+  }
+
+  // otherwise true
+  return includePrevious;
+}
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsRequest.jsx b/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsRequest.jsx
index 294e9340e5..2cf9f65c91 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsRequest.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsRequest.jsx
@@ -3,6 +3,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
+import {canIncludePreviousPeriod} from 'app/views/organizationEvents/utils/canIncludePreviousPeriod';
 import {doEventsRequest} from 'app/actionCreators/events';
 import {t} from 'app/locale';
 import SentryTypes from 'app/sentryTypes';
@@ -160,7 +161,7 @@ class EventsRequest extends React.PureComponent {
    * Returns `null` if data does not exist
    */
   getData = data => {
-    const {includePrevious} = this.props;
+    const {period, includePrevious} = this.props;
 
     if (!data) {
       return {
@@ -169,7 +170,7 @@ class EventsRequest extends React.PureComponent {
       };
     }
 
-    const hasPreviousPeriod = includePrevious;
+    const hasPreviousPeriod = canIncludePreviousPeriod(includePrevious, period);
     // Take the floor just in case, but data should always be divisible by 2
     const dataMiddleIndex = Math.floor(data.length / 2);
 
diff --git a/tests/js/spec/views/organizationEvents/utils/canIncludePreviousPeriod.spec.jsx b/tests/js/spec/views/organizationEvents/utils/canIncludePreviousPeriod.spec.jsx
new file mode 100644
index 0000000000..f2a63c3ddb
--- /dev/null
+++ b/tests/js/spec/views/organizationEvents/utils/canIncludePreviousPeriod.spec.jsx
@@ -0,0 +1,20 @@
+import {canIncludePreviousPeriod} from 'app/views/organizationEvents/utils/canIncludePreviousPeriod';
+
+describe('canIncludePreviousPeriod', function() {
+  it('does not include if `includePrevious` is false', function() {
+    expect(canIncludePreviousPeriod(false, '7d')).toBe(false);
+  });
+
+  it('is true if period is less than or equal to 45 days', function() {
+    expect(canIncludePreviousPeriod(true, '45d')).toBe(true);
+  });
+
+  it('is false if period is greater than 45d', function() {
+    expect(canIncludePreviousPeriod(true, '46d')).toBe(false);
+  });
+
+  it('returns value of `includePrevious` if no period', function() {
+    expect(canIncludePreviousPeriod(true)).toBe(true);
+    expect(canIncludePreviousPeriod(false)).toBe(false);
+  });
+});
