commit 74585105a74be21fa0d4880c777917d4bedbe8b3
Author: Ted Kaemming <ted@kaemming.com>
Date:   Thu Oct 1 14:28:42 2015 -0700

    Add helper functions for dealing with timestamp conversions.

diff --git a/src/sentry/utils/dates.py b/src/sentry/utils/dates.py
index af2b6d7442..538cf45a0b 100644
--- a/src/sentry/utils/dates.py
+++ b/src/sentry/utils/dates.py
@@ -7,12 +7,18 @@ sentry.utils.dates
 """
 from __future__ import absolute_import
 
-from datetime import datetime
+from datetime import (
+    datetime,
+    timedelta,
+)
+
+import pytz
 from dateutil.parser import parse
 from django.db import connections
 
 from sentry.utils.db import get_db_engine
 
+
 DATE_TRUNC_GROUPERS = {
     'oracle': {
         'hour': 'hh24',
@@ -25,6 +31,27 @@ DATE_TRUNC_GROUPERS = {
 }
 
 
+epoch = datetime(1970, 1, 1, tzinfo=pytz.utc)
+
+
+def to_timestamp(value):
+    """
+    Convert a time zone aware datetime to a POSIX timestamp (with fractional
+    component.)
+    """
+    return (value - epoch).total_seconds()
+
+
+def to_datetime(value):
+    """
+    Convert a POSIX timestamp to a time zone aware datetime.
+
+    The timestamp value must be a numeric type (either a integer or float,
+    since it may contain a fractional component.)
+    """
+    return epoch + timedelta(seconds=value)
+
+
 def get_sql_date_trunc(col, db='default', grouper='hour'):
     conn = connections[db]
 
diff --git a/tests/sentry/utils/test_dates.py b/tests/sentry/utils/test_dates.py
new file mode 100644
index 0000000000..a0bd8c2f50
--- /dev/null
+++ b/tests/sentry/utils/test_dates.py
@@ -0,0 +1,15 @@
+from __future__ import absolute_import
+
+import datetime
+import pytz
+
+from sentry.utils.dates import (
+    to_datetime,
+    to_timestamp,
+)
+
+
+def test_timestamp_conversions():
+    value = datetime.datetime(2015, 10, 1, 21, 19, 5, 648517, tzinfo=pytz.utc)
+    assert int(to_timestamp(value)) == int(value.strftime('%s'))
+    assert to_datetime(to_timestamp(value)) == value
