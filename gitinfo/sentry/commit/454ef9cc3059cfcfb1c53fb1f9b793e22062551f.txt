commit 454ef9cc3059cfcfb1c53fb1f9b793e22062551f
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Sep 27 19:45:14 2011 -0700

    Ensure add_message requirement is reflected in store view

diff --git a/sentry/models.py b/sentry/models.py
index 1fade97fb4..b23fa31031 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -97,7 +97,7 @@ class ProjectMember(Model):
     project         = models.ForeignKey(Project, related_name="member_set")
     user            = models.ForeignKey(User, related_name="project_set")
     is_superuser    = models.BooleanField(default=False)
-    public_key         = models.CharField(max_length=32, unique=True, null=True)
+    public_key      = models.CharField(max_length=32, unique=True, null=True)
     secret_key      = models.CharField(max_length=32, unique=True, null=True)
     permissions     = BitField(flags=(
         'read_message',
@@ -119,6 +119,11 @@ class ProjectMember(Model):
             self.secret_key = ProjectMember.generate_api_key()
         super(ProjectMember, self).save(*args, **kwargs)
 
+    def has_perm(self, flag):
+        if self.is_superuser:
+            return True
+        return getattr(self.permissions, flag, False)
+
     @classmethod
     def generate_api_key(cls):
         return uuid.uuid4().hex
diff --git a/sentry/web/api.py b/sentry/web/api.py
index afed7189fd..71e604cf49 100644
--- a/sentry/web/api.py
+++ b/sentry/web/api.py
@@ -47,6 +47,8 @@ def store(request):
         if api_key:
             try:
                 pm = ProjectMember.objects.get(api_key=api_key)
+                if not pm.has_perm('add_message'):
+                    raise ProjectMember.DoesNotExist
             except ProjectMember.DoesNotExist:
                 return HttpResponseForbidden('Invalid signature')
             project = pm.project
