commit 9407dbfe7e7f7698770f93be95d17186e1f9d47c
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 2 17:22:59 2016 -0800

    Add "has:[tag]" to search queries (fixes GH-2638)

diff --git a/src/sentry/search/base.py b/src/sentry/search/base.py
index 84205ff678..8b9583e6b8 100644
--- a/src/sentry/search/base.py
+++ b/src/sentry/search/base.py
@@ -8,6 +8,8 @@ sentry.search.base
 
 from __future__ import absolute_import
 
+ANY = object()
+
 
 class SearchBackend(object):
     def __init__(self, **options):
diff --git a/src/sentry/search/django/backend.py b/src/sentry/search/django/backend.py
index bfa7121743..e9a4c07553 100644
--- a/src/sentry/search/django/backend.py
+++ b/src/sentry/search/django/backend.py
@@ -11,7 +11,7 @@ from __future__ import absolute_import
 from django.db.models import Q
 
 from sentry.api.paginator import DateTimePaginator, Paginator
-from sentry.search.base import SearchBackend
+from sentry.search.base import ANY, SearchBackend
 from sentry.search.django.constants import (
     SORT_CLAUSES, SQLITE_SORT_CLAUSES, MYSQL_SORT_CLAUSES, MSSQL_SORT_CLAUSES,
     MSSQL_ENGINES, ORACLE_SORT_CLAUSES
@@ -73,10 +73,13 @@ class DjangoSearchBackend(SearchBackend):
 
         if tags:
             for k, v in tags.iteritems():
-                queryset = queryset.filter(**dict(
-                    grouptag__key=k,
-                    grouptag__value=v,
-                ))
+                if v == ANY:
+                    queryset = queryset.filter(grouptag__key=k)
+                else:
+                    queryset = queryset.filter(
+                        grouptag__key=k,
+                        grouptag__value=v,
+                    )
 
         if age_from and age_to:
             queryset = queryset.filter(
diff --git a/src/sentry/search/utils.py b/src/sentry/search/utils.py
index 6e45728af1..b9f1a6c270 100644
--- a/src/sentry/search/utils.py
+++ b/src/sentry/search/utils.py
@@ -6,6 +6,7 @@ from django.utils import timezone
 
 from sentry.constants import STATUS_CHOICES
 from sentry.models import EventUser, User
+from sentry.search.base import ANY
 from sentry.utils.auth import find_users
 
 
@@ -147,6 +148,12 @@ def parse_query(project, query, user):
                     comp = 'id'
                 results['tags']['sentry:user'] = get_user_tag(
                     project, comp, value)
+            elif key == 'has':
+                if value == 'user':
+                    value = 'sentry:user'
+                elif value == 'release':
+                    value = 'sentry:release'
+                results['tags'][value] = ANY
             elif key == 'age':
                 flag, offset = parse_simple_range(value)
                 date_value = timezone.now() - offset
diff --git a/tests/sentry/search/django/tests.py b/tests/sentry/search/django/tests.py
index 2644afbf08..fa21bc0e1a 100644
--- a/tests/sentry/search/django/tests.py
+++ b/tests/sentry/search/django/tests.py
@@ -5,6 +5,7 @@ from __future__ import absolute_import
 from datetime import datetime, timedelta
 
 from sentry.models import GroupAssignee, GroupBookmark, GroupStatus, GroupTagValue
+from sentry.search.base import ANY
 from sentry.search.django.backend import DjangoSearchBackend
 from sentry.testutils import TestCase
 
@@ -134,6 +135,9 @@ class DjangoSearchBackendTest(TestCase):
         results = self.backend.query(self.project1, tags={'env': 'example.com'})
         assert len(results) == 0
 
+        results = self.backend.query(self.project1, tags={'env': ANY})
+        assert len(results) == 2
+
     def test_bookmarked_by(self):
         results = self.backend.query(self.project1, bookmarked_by=self.user)
         assert len(results) == 1
diff --git a/tests/sentry/search/test_utils.py b/tests/sentry/search/test_utils.py
index bcc9be8f16..0c8cd39043 100644
--- a/tests/sentry/search/test_utils.py
+++ b/tests/sentry/search/test_utils.py
@@ -5,6 +5,7 @@ from django.utils import timezone
 
 from sentry.models import EventUser, GroupStatus
 from sentry.testutils import TestCase
+from sentry.search.base import ANY
 from sentry.search.utils import parse_query
 
 
@@ -140,3 +141,15 @@ class ParseQueryTest(TestCase):
         assert result['age_from'] < timezone.now() - timedelta(hours=23)
         assert result['age_to'] > timezone.now() - timedelta(hours=13)
         assert result['age_to'] < timezone.now() - timedelta(hours=11)
+
+    def test_has_tag(self):
+        result = self.parse_query('has:foo')
+        assert result['tags']['foo'] == ANY
+
+    def test_has_user(self):
+        result = self.parse_query('has:user')
+        assert result['tags']['sentry:user'] == ANY
+
+    def test_has_release(self):
+        result = self.parse_query('has:release')
+        assert result['tags']['sentry:release'] == ANY
