commit 36f166c846190a870ce2430c151324b32c549c20
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Apr 9 09:19:32 2020 -0700

    ref(ts): Convert `<SettingsLayout>` (#18164)
    
    typescript me

diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsLayout.tsx
similarity index 51%
rename from src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx
rename to src/sentry/static/sentry/app/views/settings/components/settingsLayout.tsx
index 0fb6c943fc..9f3d368dc7 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsLayout.tsx
@@ -1,3 +1,4 @@
+import {RouteComponentProps} from 'react-router/lib/Router';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
@@ -8,46 +9,50 @@ import SettingsBreadcrumb from './settingsBreadcrumb';
 import SettingsHeader from './settingsHeader';
 import SettingsSearch from './settingsSearch';
 
-class SettingsLayout extends React.Component {
-  static propTypes = {
-    renderNavigation: PropTypes.func,
-    route: PropTypes.object,
-    router: PropTypes.object,
-    routes: PropTypes.array,
-  };
+type Props = {
+  renderNavigation?: () => React.ReactNode;
+  children: React.ReactNode;
+} & RouteComponentProps<{}, {}>;
 
-  render() {
-    const {params, routes, route, router, renderNavigation, children} = this.props;
-    // We want child's view's props
-    const childProps = (children && children.props) || this.props;
-    const childRoutes = childProps.routes || routes || [];
-    const childRoute = childProps.route || route || {};
-    return (
-      <React.Fragment>
-        <SettingsColumn>
-          <SettingsHeader>
-            <HeaderContent>
-              <StyledSettingsBreadcrumb
-                params={params}
-                routes={childRoutes}
-                route={childRoute}
-              />
-              <SettingsSearch routes={routes} router={router} params={params} />
-            </HeaderContent>
-          </SettingsHeader>
+function SettingsLayout(props: Props) {
+  const {params, routes, route, router, renderNavigation, children} = props;
 
-          <MaxWidthContainer>
-            {typeof renderNavigation === 'function' && (
-              <SidebarWrapper>{renderNavigation()}</SidebarWrapper>
-            )}
-            <Content>{children}</Content>
-          </MaxWidthContainer>
-        </SettingsColumn>
-      </React.Fragment>
-    );
-  }
+  // We want child's view's props
+  const childProps = children && React.isValidElement(children) ? children.props : props;
+  const childRoutes = childProps.routes || routes || [];
+  const childRoute = childProps.route || route || {};
+  return (
+    <React.Fragment>
+      <SettingsColumn>
+        <SettingsHeader>
+          <HeaderContent>
+            <StyledSettingsBreadcrumb
+              params={params}
+              routes={childRoutes}
+              route={childRoute}
+            />
+            <SettingsSearch routes={routes} router={router} params={params} />
+          </HeaderContent>
+        </SettingsHeader>
+
+        <MaxWidthContainer>
+          {typeof renderNavigation === 'function' && (
+            <SidebarWrapper>{renderNavigation()}</SidebarWrapper>
+          )}
+          <Content>{children}</Content>
+        </MaxWidthContainer>
+      </SettingsColumn>
+    </React.Fragment>
+  );
 }
 
+SettingsLayout.propTypes = {
+  renderNavigation: PropTypes.func,
+  route: PropTypes.object,
+  router: PropTypes.object,
+  routes: PropTypes.array,
+};
+
 const MaxWidthContainer = styled('div')`
   display: flex;
   max-width: ${p => p.theme.settings.containerWidth};
@@ -58,7 +63,7 @@ const MaxWidthContainer = styled('div')`
 const SidebarWrapper = styled('div')`
   flex-shrink: 0;
   width: ${p => p.theme.settings.sidebarWidth};
-  background: #fff;
+  background: ${p => p.theme.white};
   border-right: 1px solid ${p => p.theme.borderLight};
   padding: ${space(4)};
 `;
diff --git a/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx b/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx
index 8e2e596ede..a251e63bca 100644
--- a/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx
+++ b/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx
@@ -1,3 +1,4 @@
+import {RouteComponentProps} from 'react-router/lib/Router';
 import DocumentTitle from 'react-document-title';
 import PropTypes from 'prop-types';
 import React from 'react';
@@ -44,7 +45,7 @@ const flexCenter = css`
 
 type Props = {
   organization: Organization;
-};
+} & RouteComponentProps<{}, {}>;
 
 class SettingsIndex extends React.Component<Props> {
   static propTypes = {
