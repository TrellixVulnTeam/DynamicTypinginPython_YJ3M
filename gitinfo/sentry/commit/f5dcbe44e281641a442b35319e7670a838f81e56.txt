commit f5dcbe44e281641a442b35319e7670a838f81e56
Author: jeffkwoh <23180853+jeffkwoh@users.noreply.github.com>
Date:   Fri Feb 14 11:13:09 2020 -0800

    feat(alerts): New project issue alert options (#16697)
    
    * Add frontend work (Failing)
    
    Tests need  updating
    
    * Refactor feature flag to parent
    
    * Add additional checks for disabling submit form button
    
    * Refactor code
    
    * Wrap strings for translation
    
    * Let issueAlertOptions be organization sensitive
    
    Endpoint now requires org id
    
    * Remove snapshot
    
    * Fix bugs and add tests
    
    * Address comments
    
    * Fix spacing
    
    * Add snapshot
    
    * Fix controlled input being initially uncontrolled
    
    * Make radioline have equal height
    
    * Address comments
    
    * Remove redundant !important

diff --git a/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx b/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx
index 4845546077..98b10a21b9 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx
@@ -21,12 +21,14 @@ import space from 'app/styles/space';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 import withTeams from 'app/utils/withTeams';
+import IssueAlertOptions from 'app/views/projectInstall/issueAlertOptions';
 
 class CreateProject extends React.Component {
   static propTypes = {
     api: PropTypes.object,
     teams: PropTypes.arrayOf(SentryTypes.Team),
     organization: SentryTypes.Organization,
+    hasIssueAlertOptionsEnabled: PropTypes.bool,
   };
 
   static contextTypes = {
@@ -50,13 +52,126 @@ class CreateProject extends React.Component {
       platform,
       inFlight: false,
     };
+
+    if (this.props.hasIssueAlertOptionsEnabled) {
+      this.state = {
+        ...this.state,
+        ...{
+          dataFragment: {},
+        },
+      };
+    }
   }
 
-  createProject = e => {
+  renderProjectForm = (
+    projectName,
+    team,
+    teams,
+    platform,
+    hasIssueAlertOptionsEnabled,
+    organization,
+    canSubmitForm
+  ) => {
+    const createProjectFormCaptured = (
+      <CreateProjectForm onSubmit={this.createProject}>
+        <div>
+          <FormLabel>
+            {hasIssueAlertOptionsEnabled
+              ? t('Project name')
+              : t('Give your project a name')}
+          </FormLabel>
+          <ProjectNameInput>
+            <ProjectPlatformIcon monoTone platform={platform} />
+            <input
+              type="text"
+              name="name"
+              label={t('Project Name')}
+              placeholder={t('Project name')}
+              autoComplete="off"
+              value={projectName}
+              onChange={e => this.setState({projectName: e.target.value})}
+            />
+          </ProjectNameInput>
+        </div>
+        <div>
+          <FormLabel>
+            {hasIssueAlertOptionsEnabled ? t('Name') : t('Assign a Team')}
+          </FormLabel>
+          <TeamSelectInput>
+            <SelectControl
+              deprecatedSelectControl
+              name="select-team"
+              clearable={false}
+              value={team}
+              placeholder={t('Select a Team')}
+              onChange={choice => this.setState({team: choice.value})}
+              options={teams.map(({slug}) => ({
+                label: `#${slug}`,
+                value: slug,
+              }))}
+            />
+            <Tooltip title={t('Create a team')}>
+              <Button
+                borderless
+                data-test-id="create-team"
+                type="button"
+                icon="icon-circle-add"
+                onClick={() =>
+                  openCreateTeamModal({
+                    organization,
+                    onClose: ({slug}) => this.setState({team: slug}),
+                  })
+                }
+              />
+            </Tooltip>
+          </TeamSelectInput>
+        </div>
+        <div>
+          <Button
+            data-test-id="create-project"
+            priority="primary"
+            disabled={!canSubmitForm}
+          >
+            {t('Create Project')}
+          </Button>
+        </div>
+      </CreateProjectForm>
+    );
+    return hasIssueAlertOptionsEnabled ? (
+      <React.Fragment>
+        <PageHeading withMargins>{t('Give your project a name')}</PageHeading>
+        {createProjectFormCaptured}
+      </React.Fragment>
+    ) : (
+      <StickyWrapper>{createProjectFormCaptured}</StickyWrapper>
+    );
+  };
+
+  canSubmitForm(inFlight, team, projectName, dataFragment, hasIssueAlertOptionsEnabled) {
+    return (
+      !inFlight &&
+      team &&
+      projectName !== '' &&
+      (!hasIssueAlertOptionsEnabled ||
+        !dataFragment?.shouldCreateCustomRule ||
+        dataFragment?.conditions?.every?.(condition => condition.value))
+    );
+  }
+
+  createProject = async e => {
     e.preventDefault();
-    const {organization, api} = this.props;
-    const {projectName, platform, team} = this.state;
+    const {organization, api, hasIssueAlertOptionsEnabled} = this.props;
+    const {projectName, platform, team, dataFragment} = this.state;
     const {slug} = organization;
+    const {
+      shouldCreateCustomRule,
+      name,
+      conditions,
+      actions,
+      actionMatch,
+      frequency,
+      defaultRules,
+    } = hasIssueAlertOptionsEnabled ? dataFragment : {};
 
     this.setState({inFlight: true});
 
@@ -68,39 +183,53 @@ class CreateProject extends React.Component {
       });
     }
 
-    api.request(`/teams/${slug}/${team}/projects/`, {
-      method: 'POST',
-      data: {
-        name: projectName,
-        platform,
-      },
-      success: data => {
-        ProjectActions.createSuccess(data);
-
-        const platformKey = platform || 'other';
-        const nextUrl = `/${organization.slug}/${data.slug}/getting-started/${platformKey}/`;
-
-        browserHistory.push(nextUrl);
-      },
-      error: err => {
-        this.setState({
-          inFlight: false,
-          error: err.responseJSON.detail,
-        });
+    try {
+      const projectData = await api.requestPromise(`/teams/${slug}/${team}/projects/`, {
+        method: 'POST',
+        data: {
+          name: projectName,
+          platform,
+          default_rules: defaultRules ?? true,
+        },
+      });
+
+      if (shouldCreateCustomRule) {
+        await api.requestPromise(
+          `/projects/${organization.slug}/${projectData.slug}/rules/`,
+          {
+            method: 'POST',
+            data: {
+              name,
+              conditions,
+              actions,
+              actionMatch,
+              frequency,
+            },
+          }
+        );
+      }
+      ProjectActions.createSuccess(projectData);
+      const platformKey = platform || 'other';
+      const nextUrl = `/${organization.slug}/${projectData.slug}/getting-started/${platformKey}/`;
+      browserHistory.push(nextUrl);
+    } catch (err) {
+      this.setState({
+        inFlight: false,
+        error: err.responseJSON.detail,
+      });
 
-        // Only log this if the error is something other than:
-        // * The user not having access to create a project, or,
-        // * A project with that slug already exists
-        if (err.status !== 403 && err.status !== 409) {
-          Sentry.withScope(scope => {
-            scope.setExtra('err', err);
-            scope.setExtra('props', this.props);
-            scope.setExtra('state', this.state);
-            Sentry.captureMessage('Project creation failed');
-          });
-        }
-      },
-    });
+      // Only log this if the error is something other than:
+      // * The user not having access to create a project, or,
+      // * A project with that slug already exists
+      if (err.status !== 403 && err.status !== 409) {
+        Sentry.withScope(scope => {
+          scope.setExtra('err', err);
+          scope.setExtra('props', this.props);
+          scope.setExtra('state', this.state);
+          Sentry.captureMessage('Project creation failed');
+        });
+      }
+    }
   };
 
   setPlatform = platformId =>
@@ -113,10 +242,16 @@ class CreateProject extends React.Component {
     }));
 
   render() {
-    const {organization} = this.props;
-    const {projectName, team, platform, error, inFlight} = this.state;
+    const {organization, hasIssueAlertOptionsEnabled} = this.props;
+    const {projectName, team, platform, error, inFlight, dataFragment} = this.state;
     const teams = this.props.teams.filter(filterTeam => filterTeam.hasAccess);
-
+    const canSubmitForm = this.canSubmitForm(
+      inFlight,
+      team,
+      projectName,
+      dataFragment,
+      hasIssueAlertOptionsEnabled
+    );
     return (
       <React.Fragment>
         {error && <Alert type="error">{error}</Alert>}
@@ -130,65 +265,26 @@ class CreateProject extends React.Component {
                for your API server and frontend client.`
             )}
           </HelpText>
-
+          {hasIssueAlertOptionsEnabled && (
+            <PageHeading withMargins>{t('Choose a platform')}</PageHeading>
+          )}
           <PlatformPicker platform={platform} setPlatform={this.setPlatform} showOther />
-          <CreateProjectForm onSubmit={this.createProject}>
-            <div>
-              <FormLabel>{t('Give your project a name')}</FormLabel>
-              <ProjectNameInput>
-                <ProjectPlatformIcon monoTone platform={platform} />
-                <input
-                  type="text"
-                  name="name"
-                  label={t('Project Name')}
-                  placeholder={t('Project name')}
-                  autoComplete="off"
-                  value={projectName}
-                  onChange={e => this.setState({projectName: e.target.value})}
-                />
-              </ProjectNameInput>
-            </div>
-            <div>
-              <FormLabel>{t('Assign a Team')}</FormLabel>
-              <TeamSelectInput>
-                <SelectControl
-                  deprecatedSelectControl
-                  name="select-team"
-                  clearable={false}
-                  value={team}
-                  placeholder={t('Select a Team')}
-                  onChange={choice => this.setState({team: choice.value})}
-                  options={teams.map(({slug}) => ({
-                    label: `#${slug}`,
-                    value: slug,
-                  }))}
-                />
-                <Tooltip title={t('Create a team')}>
-                  <Button
-                    borderless
-                    data-test-id="create-team"
-                    type="button"
-                    icon="icon-circle-add"
-                    onClick={() =>
-                      openCreateTeamModal({
-                        organization,
-                        onClose: ({slug}) => this.setState({team: slug}),
-                      })
-                    }
-                  />
-                </Tooltip>
-              </TeamSelectInput>
-            </div>
-            <div>
-              <Button
-                data-test-id="create-project"
-                priority="primary"
-                disabled={inFlight || !team || projectName === ''}
-              >
-                {t('Create Project')}
-              </Button>
-            </div>
-          </CreateProjectForm>
+          {hasIssueAlertOptionsEnabled && (
+            <IssueAlertOptions
+              onChange={updatedData => {
+                this.setState({dataFragment: updatedData});
+              }}
+            />
+          )}
+          {this.renderProjectForm(
+            projectName,
+            team,
+            teams,
+            platform,
+            hasIssueAlertOptionsEnabled,
+            organization,
+            canSubmitForm
+          )}
         </div>
       </React.Fragment>
     );
@@ -206,8 +302,6 @@ const CreateProjectForm = styled('form')`
   padding: ${space(3)} 0;
   box-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);
   background: #fff;
-  position: sticky;
-  bottom: 0;
 `;
 
 const FormLabel = styled('div')`
@@ -243,3 +337,9 @@ const HelpText = styled('p')`
   color: ${p => p.theme.gray3};
   max-width: 700px;
 `;
+
+const StickyWrapper = styled('div')`
+  position: sticky;
+  background: #fff;
+  bottom: 0;
+`;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/issueAlertOptions.tsx b/src/sentry/static/sentry/app/views/projectInstall/issueAlertOptions.tsx
new file mode 100644
index 0000000000..239832fedc
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectInstall/issueAlertOptions.tsx
@@ -0,0 +1,322 @@
+import React, {ReactElement} from 'react';
+
+import * as Sentry from '@sentry/browser';
+import isEqual from 'lodash/isEqual';
+import styled from '@emotion/styled';
+
+import {t} from 'app/locale';
+import {Organization} from 'app/types';
+import space from 'app/styles/space';
+import withOrganization from 'app/utils/withOrganization';
+import AsyncComponent from 'app/components/asyncComponent';
+import Input from 'app/views/settings/components/forms/controls/input';
+import PageHeading from 'app/components/pageHeading';
+import SelectControl from 'app/components/forms/selectControl';
+import RadioGroup from 'app/views/settings/components/forms/controls/radioGroup';
+
+enum MetricValues {
+  ERRORS,
+  USERS,
+}
+enum Actions {
+  ALERT_ON_EVERY_ISSUE,
+  CREATE_ALERT_LATER,
+  CUSTOMIZED_ALERTS,
+}
+
+const UNIQUE_USER_FREQUENCY_CONDITION: string =
+  'sentry.rules.conditions.event_frequency.EventUniqueUserFrequencyCondition';
+const EVENT_FREQUENCY_CONDITION: string =
+  'sentry.rules.conditions.event_frequency.EventFrequencyCondition';
+const NOTIFY_EVENT_ACTION: string = 'sentry.rules.actions.notify_event.NotifyEventAction';
+
+const METRIC_CONDITION_MAP = {
+  [MetricValues.ERRORS]: EVENT_FREQUENCY_CONDITION,
+  [MetricValues.USERS]: UNIQUE_USER_FREQUENCY_CONDITION,
+} as const;
+
+type StateUpdater = (updatedData: RequestDataFragment) => void;
+type Props = AsyncComponent['props'] & {
+  organization: Organization;
+  onChange: StateUpdater;
+};
+
+type State = AsyncComponent['state'] & {
+  conditions: any;
+  intervalChoices: [string, string][] | undefined;
+  placeholder: string;
+  threshold: string;
+  interval: string;
+  alertSetting: string;
+  metric: MetricValues;
+};
+
+type RequestDataFragment = {
+  defaultRules: boolean;
+  shouldCreateCustomRule: boolean;
+  name: string;
+  conditions: {interval: string; id: string; value: string}[] | undefined;
+  actions: {id: string}[];
+  actionMatch: string;
+  frequency: number;
+};
+
+function getConditionFrom(
+  interval: string,
+  metricValue: MetricValues,
+  threshold: string
+): {interval: string; id: string; value: string} {
+  let condition;
+  switch (metricValue) {
+    case MetricValues.ERRORS:
+      condition = EVENT_FREQUENCY_CONDITION;
+      break;
+    case MetricValues.USERS:
+      condition = UNIQUE_USER_FREQUENCY_CONDITION;
+      break;
+    default:
+      throw new RangeError('Supplied metric value is not handled');
+  }
+  return {
+    interval,
+    id: condition,
+    value: threshold,
+  };
+}
+
+function unpackConditions(conditions: any[]) {
+  const equalityReducer = (acc, curr) => {
+    if (!acc || !curr || !isEqual(acc, curr)) {
+      return null;
+    }
+    return acc;
+  };
+
+  const intervalChoices = conditions
+    .map(condition => condition.formFields?.interval?.choices)
+    .reduce(equalityReducer);
+  const placeholder = conditions
+    .map(condition => condition.formFields?.value?.placeholder)
+    .reduce(equalityReducer);
+  return {intervalChoices, placeholder, interval: intervalChoices?.[0]?.[0]};
+}
+
+class IssueAlertOptions extends AsyncComponent<Props, State> {
+  getDefaultState(): State {
+    return {
+      ...super.getDefaultState(),
+      conditions: [],
+      intervalChoices: [],
+      alertSetting: `${Actions.CUSTOMIZED_ALERTS}`,
+      metric: MetricValues.ERRORS,
+      interval: '',
+      placeholder: '',
+      threshold: '',
+    };
+  }
+
+  getAvailableMetricChoices() {
+    return [
+      [MetricValues.ERRORS, t('occurrences of')],
+      [MetricValues.USERS, t('users affected by')],
+    ].filter(valueDescriptionPair => {
+      const [value] = valueDescriptionPair;
+      return this.state.conditions?.some?.(
+        object => object?.id === METRIC_CONDITION_MAP[value]
+      );
+    });
+  }
+
+  getIssueAlertsChoices(
+    hasProperlyLoadedConditions: boolean
+  ): [string, string | ReactElement][] {
+    const options: [string, React.ReactNode][] = [
+      [`${Actions.ALERT_ON_EVERY_ISSUE}`, t('Alert me on every new issue')],
+      [`${Actions.CREATE_ALERT_LATER}`, t("I'll create my own alerts later")],
+    ];
+    if (hasProperlyLoadedConditions) {
+      options.unshift([
+        `${Actions.CUSTOMIZED_ALERTS}`,
+        <CustomizeAlertsGrid key={Actions.CUSTOMIZED_ALERTS}>
+          {t('When there are more than')}
+          <InlineInput
+            type="number"
+            min="0"
+            name=""
+            value={this.state.threshold}
+            placeholder={this.state.placeholder}
+            key={name}
+            onChange={threshold =>
+              this.setStateAndUpdateParents({threshold: threshold.target.value})
+            }
+            data-test-id="range-input"
+          />
+          <InlineSelectControl
+            openMenuOnFocus
+            value={this.state.metric}
+            choices={this.getAvailableMetricChoices()}
+            onChange={metric => this.setStateAndUpdateParents({metric: metric.value})}
+            data-test-id="metric-select-control"
+          />
+          {t('a unique error in')}
+          <InlineSelectControl
+            value={this.state.interval}
+            openMenuOnFocus
+            choices={this.state.intervalChoices}
+            onChange={interval =>
+              this.setStateAndUpdateParents({interval: interval.value})
+            }
+            data-test-id="interval-select-control"
+          />
+        </CustomizeAlertsGrid>,
+      ]);
+    }
+    return options.map(([choiceValue, node]) => [
+      choiceValue,
+      <RadioItemWrapper key={choiceValue}>{node}</RadioItemWrapper>,
+    ]);
+  }
+
+  getUpdatedData(): RequestDataFragment {
+    let defaultRules: boolean;
+    let shouldCreateCustomRule: boolean;
+    const alertSetting: Actions = parseInt(this.state.alertSetting, 10);
+    switch (alertSetting) {
+      case Actions.ALERT_ON_EVERY_ISSUE:
+        defaultRules = true;
+        shouldCreateCustomRule = false;
+        break;
+      case Actions.CREATE_ALERT_LATER:
+        defaultRules = false;
+        shouldCreateCustomRule = false;
+        break;
+      case Actions.CUSTOMIZED_ALERTS:
+        defaultRules = false;
+        shouldCreateCustomRule = true;
+        break;
+      default:
+        throw new RangeError('Supplied alert creation action is not handled');
+    }
+
+    return {
+      defaultRules,
+      shouldCreateCustomRule,
+      name: 'Send a notification for new issues',
+      conditions:
+        this.state.interval.length > 0 && this.state.threshold.length > 0
+          ? [
+              getConditionFrom(
+                this.state.interval,
+                this.state.metric,
+                this.state.threshold
+              ),
+            ]
+          : undefined,
+      actions: [{id: NOTIFY_EVENT_ACTION}],
+      actionMatch: 'all',
+      frequency: 5,
+    };
+  }
+
+  setStateAndUpdateParents<K extends keyof State>(
+    state:
+      | ((
+          prevState: Readonly<State>,
+          props: Readonly<Props>
+        ) => Pick<State, K> | State | null)
+      | Pick<State, K>
+      | State
+      | null,
+    callback?: () => void
+  ): void {
+    this.setState(state, () => {
+      callback?.();
+      this.props.onChange(this.getUpdatedData());
+    });
+  }
+
+  getEndpoints(): [string, string][] {
+    return [['conditions', `/projects/${this.props.organization.slug}/rule-conditions/`]];
+  }
+
+  onLoadAllEndpointsSuccess(): void {
+    const conditions = this.state.conditions?.filter?.(object =>
+      Object.values(METRIC_CONDITION_MAP).includes(object?.id)
+    );
+
+    if (!conditions || conditions.length === 0) {
+      this.setStateAndUpdateParents({conditions: undefined});
+      return;
+    }
+
+    const {intervalChoices, placeholder, interval} = unpackConditions(conditions);
+    if (!intervalChoices || !placeholder || !interval) {
+      Sentry.withScope(scope => {
+        scope.setExtra('props', this.props);
+        scope.setExtra('state', this.state);
+        Sentry.captureException(
+          new Error(
+            'Interval choices or value placeholder sent from API endpoint is inconsistent or empty'
+          )
+        );
+      });
+      this.setStateAndUpdateParents({conditions: undefined});
+      return;
+    }
+
+    this.setStateAndUpdateParents({
+      conditions,
+      intervalChoices,
+      placeholder,
+      interval,
+    });
+  }
+
+  renderBody(): React.ReactElement {
+    const issueAlertOptionsChoices = this.getIssueAlertsChoices(
+      this.state.conditions?.length > 0
+    );
+    return (
+      <React.Fragment>
+        <PageHeadingWithTopMargins withMargins>
+          {t('Create an alert')}
+        </PageHeadingWithTopMargins>
+        <RadioGroupWithPadding
+          choices={issueAlertOptionsChoices}
+          label={t('Options for creating an alert')}
+          onChange={alertSetting => this.setStateAndUpdateParents({alertSetting})}
+          value={this.state.alertSetting}
+        />
+      </React.Fragment>
+    );
+  }
+}
+
+export default withOrganization(IssueAlertOptions);
+
+const CustomizeAlertsGrid = styled('div')`
+  display: grid;
+  grid-template-columns: repeat(5, max-content);
+  grid-gap: ${space(1)};
+  align-items: center;
+`;
+const InlineInput = styled(Input)`
+  width: 80px;
+`;
+const InlineSelectControl = styled(SelectControl)`
+  width: 160px;
+`;
+const RadioGroupWithPadding = styled(RadioGroup)`
+  padding: ${space(3)} 0;
+  margin-bottom: 50px;
+  box-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);
+`;
+const PageHeadingWithTopMargins = styled(PageHeading)`
+  margin-top: 65px;
+`;
+const RadioItemWrapper = styled('div')`
+  min-height: 35px;
+  display: flex;
+  flex-direction: column;
+  justify-content: center;
+`;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
index 44db0d7f38..3154ce6851 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
@@ -3,19 +3,29 @@ import React from 'react';
 import styled from '@emotion/styled';
 
 import CreateProject from 'app/views/projectInstall/createProject';
+import withOrganization from 'app/utils/withOrganization';
 import space from 'app/styles/space';
+import SentryTypes from 'app/sentryTypes';
 
-const NewProject = () => (
+const NewProject = ({organization}) => (
   <Container>
     <div className="container">
       <Content>
         <DocumentTitle title="Sentry" />
-        <CreateProject />
+        <CreateProject
+          hasIssueAlertOptionsEnabled={organization.features.includes(
+            'new-project-issue-alert-options'
+          )}
+        />
       </Content>
     </div>
   </Container>
 );
 
+NewProject.propTypes = {
+  organization: SentryTypes.Organization,
+};
+
 const Container = styled('div')`
   flex: 1;
   background: #fff;
@@ -26,4 +36,4 @@ const Content = styled('div')`
   margin-top: ${space(3)};
 `;
 
-export default NewProject;
+export default withOrganization(NewProject);
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/controls/radioGroup.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/controls/radioGroup.tsx
index e04f220b08..adf609f01c 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/controls/radioGroup.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/controls/radioGroup.tsx
@@ -10,7 +10,7 @@ type Props = {
   value: string | number | null;
 
   // An array of [id, name, description]
-  choices: [string, string, string?][];
+  choices: [string, React.ReactNode, React.ReactNode?][];
   disabled?: boolean;
   label: string;
   onChange: (id: string, e: React.MouseEvent) => void;
diff --git a/tests/js/sentry-test/fixtures/ruleConditions.js b/tests/js/sentry-test/fixtures/ruleConditions.js
new file mode 100644
index 0000000000..f4fac546e8
--- /dev/null
+++ b/tests/js/sentry-test/fixtures/ruleConditions.js
@@ -0,0 +1,266 @@
+const DEFAULT_INTERVAL_CHOICES = [
+  ['1m', 'one minute'],
+  ['1h', 'one hour'],
+  ['1d', 'one day'],
+  ['1w', 'one week'],
+  ['30d', '30 days'],
+];
+const DEFAULT_PLACEHOLDER = 100;
+const EVENT_FREQUENCY_CONDITION =
+  'sentry.rules.conditions.event_frequency.EventFrequencyCondition';
+const UNIQUE_USER_FREQUENCY_CONDITION =
+  'sentry.rules.conditions.event_frequency.EventUniqueUserFrequencyCondition';
+
+export const MOCK_RESP_VERBOSE = [
+  {
+    id: 'sentry.rules.conditions.every_event.EveryEventCondition',
+    label: 'An event is seen',
+  },
+  {
+    id: 'sentry.rules.conditions.first_seen_event.FirstSeenEventCondition',
+    label: 'An issue is first seen',
+  },
+  {
+    id: 'sentry.rules.conditions.regression_event.RegressionEventCondition',
+    label: 'An issue changes state from resolved to unresolved',
+  },
+  {
+    id: 'sentry.rules.conditions.reappeared_event.ReappearedEventCondition',
+    label: 'An issue changes state from ignored to unresolved',
+  },
+  {
+    formFields: {
+      value: {
+        placeholder: 'value',
+        type: 'string',
+      },
+      match: {
+        type: 'choice',
+        choices: [
+          ['eq', 'equals'],
+          ['ne', 'does not equal'],
+          ['sw', 'starts with'],
+          ['ew', 'ends with'],
+          ['co', 'contains'],
+          ['nc', 'does not contain'],
+          ['is', 'is set'],
+          ['ns', 'is not set'],
+        ],
+      },
+      key: {
+        placeholder: 'key',
+        type: 'string',
+      },
+    },
+    id: 'sentry.rules.conditions.tagged_event.TaggedEventCondition',
+    label: "An event's tags match {key} {match} {value}",
+  },
+  {
+    formFields: {
+      interval: {
+        type: 'choice',
+        choices: DEFAULT_INTERVAL_CHOICES,
+      },
+      value: {
+        placeholder: DEFAULT_PLACEHOLDER,
+        type: 'number',
+      },
+    },
+    id: EVENT_FREQUENCY_CONDITION,
+    label: 'An issue is seen more than {value} times in {interval}',
+  },
+  {
+    formFields: {
+      interval: {
+        type: 'choice',
+        choices: DEFAULT_INTERVAL_CHOICES,
+      },
+      value: {
+        placeholder: DEFAULT_PLACEHOLDER,
+        type: 'number',
+      },
+    },
+    id: UNIQUE_USER_FREQUENCY_CONDITION,
+    label: 'An issue is seen by more than {value} users in {interval}',
+  },
+  {
+    formFields: {
+      attribute: {
+        placeholder: 'i.e. exception.type',
+        type: 'choice',
+        choices: [
+          ['message', 'message'],
+          ['platform', 'platform'],
+          ['environment', 'environment'],
+          ['type', 'type'],
+          ['exception.type', 'exception.type'],
+          ['exception.value', 'exception.value'],
+          ['user.id', 'user.id'],
+          ['user.email', 'user.email'],
+          ['user.username', 'user.username'],
+          ['user.ip_address', 'user.ip_address'],
+          ['http.method', 'http.method'],
+          ['http.url', 'http.url'],
+          ['stacktrace.code', 'stacktrace.code'],
+          ['stacktrace.module', 'stacktrace.module'],
+          ['stacktrace.filename', 'stacktrace.filename'],
+        ],
+      },
+      value: {
+        placeholder: 'value',
+        type: 'string',
+      },
+      match: {
+        type: 'choice',
+        choices: [
+          ['eq', 'equals'],
+          ['ne', 'does not equal'],
+          ['sw', 'starts with'],
+          ['ew', 'ends with'],
+          ['co', 'contains'],
+          ['nc', 'does not contain'],
+          ['is', 'is set'],
+          ['ns', 'is not set'],
+        ],
+      },
+    },
+    id: 'sentry.rules.conditions.event_attribute.EventAttributeCondition',
+    label: "An event's {attribute} value {match} {value}",
+  },
+  {
+    formFields: {
+      match: {
+        type: 'choice',
+        choices: [
+          ['eq', 'equal to'],
+          ['lte', 'less than or equal to'],
+          ['gte', 'greater than or equal to'],
+        ],
+      },
+      level: {
+        type: 'choice',
+        choices: [
+          ['50', 'fatal'],
+          ['40', 'error'],
+          ['30', 'warning'],
+          ['20', 'info'],
+          ['10', 'debug'],
+          ['0', 'sample'],
+        ],
+      },
+    },
+    id: 'sentry.rules.conditions.level.LevelCondition',
+    label: "An event's level is {match} {level}",
+  },
+];
+
+export const MOCK_RESP_ONLY_IGNORED_CONDITIONS_INVALID = [
+  {
+    formFields: {
+      interval: {
+        type: 'choice',
+        choices: [['@*(&^#$!', 'Invalid choice']],
+      },
+      value: {
+        placeholder: DEFAULT_PLACEHOLDER,
+        type: 'number',
+      },
+    },
+    id: 'cinnamon.rules.conditions.infinite_eclair.A19SeanBanIsabelle',
+    label: 'An issue is seen more than {value} times in {interval}',
+  },
+  {
+    formFields: {
+      interval: {
+        type: 'choice',
+        choices: [
+          ['1m', 'one minute'],
+          ['1h', 'one hour'],
+          ['30d', '30 days'],
+        ],
+      },
+      value: {
+        placeholder: DEFAULT_PLACEHOLDER,
+        type: 'number',
+      },
+    },
+    id: UNIQUE_USER_FREQUENCY_CONDITION,
+    label: 'An issue is seen by more than {value} users in {interval}',
+  },
+];
+
+export const MOCK_RESP_INCONSISTENT_PLACEHOLDERS = [
+  {
+    formFields: {
+      interval: {
+        type: 'choice',
+        choices: [
+          ['1m', 'one minute'],
+          ['1h', 'one hour'],
+          ['12h', 'high noon'],
+          ['1d', 'one day'],
+          ['1w', 'one week'],
+          ['30d', '30 days'],
+        ],
+      },
+      value: {
+        placeholder: 80696,
+        type: 'number',
+      },
+    },
+    id: EVENT_FREQUENCY_CONDITION,
+    label: 'An issue is seen more than {value} times in {interval}',
+  },
+  {
+    formFields: {
+      interval: {
+        type: 'choice',
+        choices: DEFAULT_INTERVAL_CHOICES,
+      },
+      value: {
+        placeholder: DEFAULT_PLACEHOLDER,
+        type: 'number',
+      },
+    },
+    id: UNIQUE_USER_FREQUENCY_CONDITION,
+    label: 'An issue is seen by more than {value} users in {interval}',
+  },
+];
+
+export const MOCK_RESP_INCONSISTENT_INTERVALS = [
+  {
+    formFields: {
+      interval: {
+        type: 'choice',
+        choices: [
+          ['1m', 'one minute'],
+          ['1h', 'one hour'],
+          ['12h', 'high noon'],
+          ['1d', 'one day'],
+          ['1w', 'one week'],
+          ['30d', '30 days'],
+        ],
+      },
+      value: {
+        placeholder: DEFAULT_PLACEHOLDER,
+        type: 'number',
+      },
+    },
+    id: EVENT_FREQUENCY_CONDITION,
+    label: 'An issue is seen more than {value} times in {interval}',
+  },
+  {
+    formFields: {
+      interval: {
+        type: 'choice',
+        choices: DEFAULT_INTERVAL_CHOICES,
+      },
+      value: {
+        placeholder: DEFAULT_PLACEHOLDER,
+        type: 'number',
+      },
+    },
+    id: UNIQUE_USER_FREQUENCY_CONDITION,
+    label: 'An issue is seen by more than {value} users in {interval}',
+  },
+];
diff --git a/tests/js/spec/views/projectInstall/__snapshots__/createProject.spec.jsx.snap b/tests/js/spec/views/projectInstall/__snapshots__/createProject.spec.jsx.snap
index be4bd75ede..5151c6874f 100644
--- a/tests/js/spec/views/projectInstall/__snapshots__/createProject.spec.jsx.snap
+++ b/tests/js/spec/views/projectInstall/__snapshots__/createProject.spec.jsx.snap
@@ -20,68 +20,70 @@ exports[`CreateProject should block if you have access to no teams 1`] = `
       setPlatform={[Function]}
       showOther={true}
     />
-    <CreateProjectForm
-      onSubmit={[Function]}
-    >
-      <div>
-        <FormLabel>
-          Give your project a name
-        </FormLabel>
-        <ProjectNameInput>
-          <ProjectPlatformIcon
-            monoTone={true}
-            platform=""
-          />
-          <input
-            autoComplete="off"
-            label="Project Name"
-            name="name"
-            onChange={[Function]}
-            placeholder="Project name"
-            type="text"
-            value=""
-          />
-        </ProjectNameInput>
-      </div>
-      <div>
-        <FormLabel>
-          Assign a Team
-        </FormLabel>
-        <TeamSelectInput>
-          <ForwardRef(RefForwardedSelectControl)
-            clearable={false}
-            deprecatedSelectControl={true}
-            name="select-team"
-            onChange={[Function]}
-            options={Array []}
-            placeholder="Select a Team"
-            value={0}
-          />
-          <Tooltip
-            containerDisplayMode="inline-block"
-            position="top"
-            title="Create a team"
-          >
-            <forwardRef<Button>
-              borderless={true}
-              data-test-id="create-team"
-              icon="icon-circle-add"
-              onClick={[Function]}
-              type="button"
+    <StickyWrapper>
+      <CreateProjectForm
+        onSubmit={[Function]}
+      >
+        <div>
+          <FormLabel>
+            Give your project a name
+          </FormLabel>
+          <ProjectNameInput>
+            <ProjectPlatformIcon
+              monoTone={true}
+              platform=""
             />
-          </Tooltip>
-        </TeamSelectInput>
-      </div>
-      <div>
-        <forwardRef<Button>
-          data-test-id="create-project"
-          disabled={true}
-          priority="primary"
-        >
-          Create Project
-        </forwardRef<Button>>
-      </div>
-    </CreateProjectForm>
+            <input
+              autoComplete="off"
+              label="Project Name"
+              name="name"
+              onChange={[Function]}
+              placeholder="Project name"
+              type="text"
+              value=""
+            />
+          </ProjectNameInput>
+        </div>
+        <div>
+          <FormLabel>
+            Assign a Team
+          </FormLabel>
+          <TeamSelectInput>
+            <ForwardRef(RefForwardedSelectControl)
+              clearable={false}
+              deprecatedSelectControl={true}
+              name="select-team"
+              onChange={[Function]}
+              options={Array []}
+              placeholder="Select a Team"
+              value={0}
+            />
+            <Tooltip
+              containerDisplayMode="inline-block"
+              position="top"
+              title="Create a team"
+            >
+              <forwardRef<Button>
+                borderless={true}
+                data-test-id="create-team"
+                icon="icon-circle-add"
+                onClick={[Function]}
+                type="button"
+              />
+            </Tooltip>
+          </TeamSelectInput>
+        </div>
+        <div>
+          <forwardRef<Button>
+            data-test-id="create-project"
+            disabled={true}
+            priority="primary"
+          >
+            Create Project
+          </forwardRef<Button>>
+        </div>
+      </CreateProjectForm>
+    </StickyWrapper>
   </div>
 </Fragment>
 `;
@@ -1226,116 +1228,91 @@ exports[`CreateProject should deal with incorrect platform name if its provided
         </div>
       </PlatformList>
     </PlatformPicker>
-    <CreateProjectForm
-      onSubmit={[Function]}
-    >
-      <form
-        className="css-8zz3uw-CreateProjectForm e19kiapg0"
-        onSubmit={[Function]}
+    <StickyWrapper>
+      <div
+        className="css-1n1wv6u-StickyWrapper e19kiapg6"
       >
-        <div>
-          <FormLabel>
-            <div
-              className="css-1ynor6-FormLabel e19kiapg1"
-            >
-              Give your project a name
-            </div>
-          </FormLabel>
-          <ProjectNameInput>
-            <div
-              className="css-9ctizw-ProjectNameInput e19kiapg3"
-            >
-              <ProjectPlatformIcon
-                monoTone={true}
-                platform=""
-              >
+        <CreateProjectForm
+          onSubmit={[Function]}
+        >
+          <form
+            className="css-1dq1lt0-CreateProjectForm e19kiapg0"
+            onSubmit={[Function]}
+          >
+            <div>
+              <FormLabel>
                 <div
-                  className="css-12loq7n-PlatformIconTile-ProjectPlatformIcon e19kiapg2"
-                />
-              </ProjectPlatformIcon>
-              <input
-                autoComplete="off"
-                label="Project Name"
-                name="name"
-                onChange={[Function]}
-                placeholder="Project name"
-                type="text"
-                value=""
-              />
-            </div>
-          </ProjectNameInput>
-        </div>
-        <div>
-          <FormLabel>
-            <div
-              className="css-1ynor6-FormLabel e19kiapg1"
-            >
-              Assign a Team
+                  className="css-1ynor6-FormLabel e19kiapg1"
+                >
+                  Give your project a name
+                </div>
+              </FormLabel>
+              <ProjectNameInput>
+                <div
+                  className="css-9ctizw-ProjectNameInput e19kiapg3"
+                >
+                  <ProjectPlatformIcon
+                    monoTone={true}
+                    platform=""
+                  >
+                    <div
+                      className="css-12loq7n-PlatformIconTile-ProjectPlatformIcon e19kiapg2"
+                    />
+                  </ProjectPlatformIcon>
+                  <input
+                    autoComplete="off"
+                    label="Project Name"
+                    name="name"
+                    onChange={[Function]}
+                    placeholder="Project name"
+                    type="text"
+                    value=""
+                  />
+                </div>
+              </ProjectNameInput>
             </div>
-          </FormLabel>
-          <TeamSelectInput>
-            <div
-              className="css-15lxetg-TeamSelectInput e19kiapg4"
-            >
-              <ForwardRef(RefForwardedSelectControl)
-                clearable={false}
-                deprecatedSelectControl={true}
-                name="select-team"
-                onChange={[Function]}
-                options={Array []}
-                placeholder="Select a Team"
-                value={0}
-              >
-                <SelectControl
-                  clearable={false}
-                  deprecatedSelectControl={true}
-                  forwardedRef={null}
-                  name="select-team"
-                  onChange={[Function]}
-                  options={Array []}
-                  placeholder="Select a Team"
-                  value={0}
+            <div>
+              <FormLabel>
+                <div
+                  className="css-1ynor6-FormLabel e19kiapg1"
+                >
+                  Assign a Team
+                </div>
+              </FormLabel>
+              <TeamSelectInput>
+                <div
+                  className="css-15lxetg-TeamSelectInput e19kiapg4"
                 >
                   <ForwardRef(RefForwardedSelectControl)
                     clearable={false}
-                    forwardedRef={null}
+                    deprecatedSelectControl={true}
                     name="select-team"
                     onChange={[Function]}
                     options={Array []}
                     placeholder="Select a Team"
                     value={0}
                   >
-                    <SelectControlLegacy
+                    <SelectControl
                       clearable={false}
+                      deprecatedSelectControl={true}
                       forwardedRef={null}
-                      height={36}
-                      multiple={false}
                       name="select-team"
                       onChange={[Function]}
                       options={Array []}
                       placeholder="Select a Team"
                       value={0}
                     >
-                      <StyledSelect
-                        arrowRenderer={[Function]}
-                        backspaceRemoves={false}
+                      <ForwardRef(RefForwardedSelectControl)
                         clearable={false}
-                        deleteRemoves={false}
                         forwardedRef={null}
-                        height={36}
-                        multiple={false}
                         name="select-team"
                         onChange={[Function]}
                         options={Array []}
                         placeholder="Select a Team"
                         value={0}
                       >
-                        <SelectPicker
-                          arrowRenderer={[Function]}
-                          backspaceRemoves={false}
-                          className="css-140v9or-StyledSelect e1ynsgsr0"
+                        <SelectControlLegacy
                           clearable={false}
-                          deleteRemoves={false}
                           forwardedRef={null}
                           height={36}
                           multiple={false}
@@ -1345,350 +1322,381 @@ exports[`CreateProject should deal with incorrect platform name if its provided
                           placeholder="Select a Team"
                           value={0}
                         >
-                          <Select
+                          <StyledSelect
                             arrowRenderer={[Function]}
-                            autosize={true}
                             backspaceRemoves={false}
-                            backspaceToRemoveMessage="Press backspace to remove {label}"
-                            className="css-140v9or-StyledSelect e1ynsgsr0"
-                            clearAllText="Clear all"
-                            clearRenderer={[Function]}
-                            clearValueText="Clear value"
                             clearable={false}
-                            closeOnSelect={true}
                             deleteRemoves={false}
-                            delimiter=","
-                            disabled={false}
-                            escapeClearsValue={true}
-                            filterOptions={[Function]}
+                            forwardedRef={null}
                             height={36}
-                            ignoreAccents={true}
-                            ignoreCase={true}
-                            inputProps={Object {}}
-                            isLoading={false}
-                            joinValues={false}
-                            labelKey="label"
-                            matchPos="any"
-                            matchProp="any"
-                            menuBuffer={0}
-                            menuRenderer={[Function]}
-                            multi={false}
                             multiple={false}
                             name="select-team"
-                            noResultsText="No results found"
-                            onBlurResetsInput={true}
                             onChange={[Function]}
-                            onCloseResetsInput={true}
-                            onSelectResetsInput={true}
-                            openOnClick={true}
-                            optionComponent={[Function]}
                             options={Array []}
-                            pageSize={5}
                             placeholder="Select a Team"
-                            removeSelected={true}
-                            required={false}
-                            rtl={false}
-                            scrollMenuIntoView={true}
-                            searchable={true}
-                            simpleValue={false}
-                            tabSelectsValue={true}
-                            trimFilter={true}
                             value={0}
-                            valueComponent={[Function]}
-                            valueKey="value"
                           >
-                            <div
-                              className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
+                            <SelectPicker
+                              arrowRenderer={[Function]}
+                              backspaceRemoves={false}
+                              className="css-140v9or-StyledSelect e1ynsgsr0"
+                              clearable={false}
+                              deleteRemoves={false}
+                              forwardedRef={null}
+                              height={36}
+                              multiple={false}
+                              name="select-team"
+                              onChange={[Function]}
+                              options={Array []}
+                              placeholder="Select a Team"
+                              value={0}
                             >
-                              <div
-                                className="Select-control"
-                                onKeyDown={[Function]}
-                                onMouseDown={[Function]}
-                                onTouchEnd={[Function]}
-                                onTouchMove={[Function]}
-                                onTouchStart={[Function]}
+                              <Select
+                                arrowRenderer={[Function]}
+                                autosize={true}
+                                backspaceRemoves={false}
+                                backspaceToRemoveMessage="Press backspace to remove {label}"
+                                className="css-140v9or-StyledSelect e1ynsgsr0"
+                                clearAllText="Clear all"
+                                clearRenderer={[Function]}
+                                clearValueText="Clear value"
+                                clearable={false}
+                                closeOnSelect={true}
+                                deleteRemoves={false}
+                                delimiter=","
+                                disabled={false}
+                                escapeClearsValue={true}
+                                filterOptions={[Function]}
+                                height={36}
+                                ignoreAccents={true}
+                                ignoreCase={true}
+                                inputProps={Object {}}
+                                isLoading={false}
+                                joinValues={false}
+                                labelKey="label"
+                                matchPos="any"
+                                matchProp="any"
+                                menuBuffer={0}
+                                menuRenderer={[Function]}
+                                multi={false}
+                                multiple={false}
+                                name="select-team"
+                                noResultsText="No results found"
+                                onBlurResetsInput={true}
+                                onChange={[Function]}
+                                onCloseResetsInput={true}
+                                onSelectResetsInput={true}
+                                openOnClick={true}
+                                optionComponent={[Function]}
+                                options={Array []}
+                                pageSize={5}
+                                placeholder="Select a Team"
+                                removeSelected={true}
+                                required={false}
+                                rtl={false}
+                                scrollMenuIntoView={true}
+                                searchable={true}
+                                simpleValue={false}
+                                tabSelectsValue={true}
+                                trimFilter={true}
+                                value={0}
+                                valueComponent={[Function]}
+                                valueKey="value"
                               >
                                 <div
-                                  className="Select-multi-value-wrapper"
-                                  id="react-select-5--value"
+                                  className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
                                 >
                                   <div
-                                    className="Select-placeholder"
-                                  >
-                                    Select a Team
-                                  </div>
-                                  <AutosizeInput
-                                    aria-activedescendant="react-select-5--value"
-                                    aria-expanded="false"
-                                    aria-haspopup="false"
-                                    aria-owns=""
-                                    className="Select-input"
-                                    injectStyles={true}
-                                    minWidth="5"
-                                    onBlur={[Function]}
-                                    onChange={[Function]}
-                                    onFocus={[Function]}
-                                    required={false}
-                                    role="combobox"
-                                    value=""
+                                    className="Select-control"
+                                    onKeyDown={[Function]}
+                                    onMouseDown={[Function]}
+                                    onTouchEnd={[Function]}
+                                    onTouchMove={[Function]}
+                                    onTouchStart={[Function]}
                                   >
                                     <div
-                                      className="Select-input"
-                                      style={
-                                        Object {
-                                          "display": "inline-block",
-                                        }
-                                      }
+                                      className="Select-multi-value-wrapper"
+                                      id="react-select-5--value"
                                     >
-                                      <input
+                                      <div
+                                        className="Select-placeholder"
+                                      >
+                                        Select a Team
+                                      </div>
+                                      <AutosizeInput
                                         aria-activedescendant="react-select-5--value"
                                         aria-expanded="false"
                                         aria-haspopup="false"
                                         aria-owns=""
+                                        className="Select-input"
+                                        injectStyles={true}
+                                        minWidth="5"
                                         onBlur={[Function]}
                                         onChange={[Function]}
                                         onFocus={[Function]}
                                         required={false}
                                         role="combobox"
-                                        style={
-                                          Object {
-                                            "boxSizing": "content-box",
-                                            "width": "5px",
-                                          }
-                                        }
                                         value=""
-                                      />
-                                      <div
-                                        style={
-                                          Object {
-                                            "height": 0,
-                                            "left": 0,
-                                            "overflow": "scroll",
-                                            "position": "absolute",
-                                            "top": 0,
-                                            "visibility": "hidden",
-                                            "whiteSpace": "pre",
+                                      >
+                                        <div
+                                          className="Select-input"
+                                          style={
+                                            Object {
+                                              "display": "inline-block",
+                                            }
                                           }
-                                        }
-                                      />
+                                        >
+                                          <input
+                                            aria-activedescendant="react-select-5--value"
+                                            aria-expanded="false"
+                                            aria-haspopup="false"
+                                            aria-owns=""
+                                            onBlur={[Function]}
+                                            onChange={[Function]}
+                                            onFocus={[Function]}
+                                            required={false}
+                                            role="combobox"
+                                            style={
+                                              Object {
+                                                "boxSizing": "content-box",
+                                                "width": "5px",
+                                              }
+                                            }
+                                            value=""
+                                          />
+                                          <div
+                                            style={
+                                              Object {
+                                                "height": 0,
+                                                "left": 0,
+                                                "overflow": "scroll",
+                                                "position": "absolute",
+                                                "top": 0,
+                                                "visibility": "hidden",
+                                                "whiteSpace": "pre",
+                                              }
+                                            }
+                                          />
+                                        </div>
+                                      </AutosizeInput>
                                     </div>
-                                  </AutosizeInput>
+                                    <span
+                                      className="Select-arrow-zone"
+                                      onMouseDown={[Function]}
+                                    >
+                                      <span
+                                        className="icon-arrow-down"
+                                      />
+                                    </span>
+                                  </div>
                                 </div>
-                                <span
-                                  className="Select-arrow-zone"
-                                  onMouseDown={[Function]}
-                                >
-                                  <span
-                                    className="icon-arrow-down"
-                                  />
-                                </span>
-                              </div>
-                            </div>
-                          </Select>
-                        </SelectPicker>
-                      </StyledSelect>
-                    </SelectControlLegacy>
+                              </Select>
+                            </SelectPicker>
+                          </StyledSelect>
+                        </SelectControlLegacy>
+                      </ForwardRef(RefForwardedSelectControl)>
+                    </SelectControl>
                   </ForwardRef(RefForwardedSelectControl)>
-                </SelectControl>
-              </ForwardRef(RefForwardedSelectControl)>
-              <Tooltip
-                containerDisplayMode="inline-block"
-                position="top"
-                title="Create a team"
-              >
-                <Manager>
-                  <Reference>
-                    <InnerReference
-                      setReferenceNode={[Function]}
-                    >
-                      <Container
-                        aria-describedby="tooltip-123456"
-                        containerDisplayMode="inline-block"
-                        onBlur={[Function]}
-                        onFocus={[Function]}
-                        onMouseEnter={[Function]}
-                        onMouseLeave={[Function]}
-                      >
-                        <span
-                          aria-describedby="tooltip-123456"
-                          className="css-sce1yi-Container eowlwvy0"
-                          onBlur={[Function]}
-                          onFocus={[Function]}
-                          onMouseEnter={[Function]}
-                          onMouseLeave={[Function]}
+                  <Tooltip
+                    containerDisplayMode="inline-block"
+                    position="top"
+                    title="Create a team"
+                  >
+                    <Manager>
+                      <Reference>
+                        <InnerReference
+                          setReferenceNode={[Function]}
                         >
-                          <forwardRef<Button>
-                            borderless={true}
-                            data-test-id="create-team"
-                            icon="icon-circle-add"
-                            onClick={[Function]}
-                            type="button"
+                          <Container
+                            aria-describedby="tooltip-123456"
+                            containerDisplayMode="inline-block"
+                            onBlur={[Function]}
+                            onFocus={[Function]}
+                            onMouseEnter={[Function]}
+                            onMouseLeave={[Function]}
                           >
-                            <Button
-                              align="center"
-                              borderless={true}
-                              data-test-id="create-team"
-                              disabled={false}
-                              forwardRef={null}
-                              icon="icon-circle-add"
-                              onClick={[Function]}
-                              type="button"
+                            <span
+                              aria-describedby="tooltip-123456"
+                              className="css-sce1yi-Container eowlwvy0"
+                              onBlur={[Function]}
+                              onFocus={[Function]}
+                              onMouseEnter={[Function]}
+                              onMouseLeave={[Function]}
                             >
-                              <StyledButton
-                                aria-disabled={false}
+                              <forwardRef<Button>
                                 borderless={true}
                                 data-test-id="create-team"
-                                disabled={false}
-                                forwardRef={null}
+                                icon="icon-circle-add"
                                 onClick={[Function]}
-                                role="button"
                                 type="button"
                               >
-                                <Component
-                                  aria-disabled={false}
-                                  className="css-e1k74m-StyledButton edwq9my0"
+                                <Button
+                                  align="center"
+                                  borderless={true}
                                   data-test-id="create-team"
+                                  disabled={false}
                                   forwardRef={null}
+                                  icon="icon-circle-add"
                                   onClick={[Function]}
-                                  role="button"
                                   type="button"
                                 >
-                                  <button
+                                  <StyledButton
                                     aria-disabled={false}
-                                    className="css-e1k74m-StyledButton edwq9my0"
+                                    borderless={true}
                                     data-test-id="create-team"
+                                    disabled={false}
+                                    forwardRef={null}
                                     onClick={[Function]}
                                     role="button"
                                     type="button"
                                   >
-                                    <ButtonLabel
-                                      align="center"
-                                      borderless={true}
+                                    <Component
+                                      aria-disabled={false}
+                                      className="css-e1k74m-StyledButton edwq9my0"
+                                      data-test-id="create-team"
+                                      forwardRef={null}
+                                      onClick={[Function]}
+                                      role="button"
+                                      type="button"
                                     >
-                                      <Component
-                                        align="center"
-                                        borderless={true}
-                                        className="css-cmi7y3-ButtonLabel edwq9my1"
+                                      <button
+                                        aria-disabled={false}
+                                        className="css-e1k74m-StyledButton edwq9my0"
+                                        data-test-id="create-team"
+                                        onClick={[Function]}
+                                        role="button"
+                                        type="button"
                                       >
-                                        <span
-                                          className="css-cmi7y3-ButtonLabel edwq9my1"
+                                        <ButtonLabel
+                                          align="center"
+                                          borderless={true}
                                         >
-                                          <Icon
-                                            hasChildren={false}
+                                          <Component
+                                            align="center"
+                                            borderless={true}
+                                            className="css-cmi7y3-ButtonLabel edwq9my1"
                                           >
-                                            <Component
-                                              className="css-heib7e-Icon edwq9my2"
-                                              hasChildren={false}
+                                            <span
+                                              className="css-cmi7y3-ButtonLabel edwq9my1"
                                             >
-                                              <span
-                                                className="css-heib7e-Icon edwq9my2"
+                                              <Icon
+                                                hasChildren={false}
                                               >
-                                                <StyledInlineSvg
-                                                  size="14px"
-                                                  src="icon-circle-add"
+                                                <Component
+                                                  className="css-heib7e-Icon edwq9my2"
+                                                  hasChildren={false}
                                                 >
-                                                  <ForwardRef
-                                                    className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
-                                                    size="14px"
-                                                    src="icon-circle-add"
+                                                  <span
+                                                    className="css-heib7e-Icon edwq9my2"
                                                   >
-                                                    <svg
-                                                      className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
-                                                      height="14px"
-                                                      viewBox={Object {}}
-                                                      width="14px"
+                                                    <StyledInlineSvg
+                                                      size="14px"
+                                                      src="icon-circle-add"
                                                     >
-                                                      <use
-                                                        href="#test"
-                                                        xlinkHref="#test"
-                                                      />
-                                                    </svg>
-                                                  </ForwardRef>
-                                                </StyledInlineSvg>
-                                              </span>
-                                            </Component>
-                                          </Icon>
-                                        </span>
-                                      </Component>
-                                    </ButtonLabel>
-                                  </button>
-                                </Component>
-                              </StyledButton>
-                            </Button>
-                          </forwardRef<Button>>
-                        </span>
-                      </Container>
-                    </InnerReference>
-                  </Reference>
-                </Manager>
-              </Tooltip>
+                                                      <ForwardRef
+                                                        className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
+                                                        size="14px"
+                                                        src="icon-circle-add"
+                                                      >
+                                                        <svg
+                                                          className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
+                                                          height="14px"
+                                                          viewBox={Object {}}
+                                                          width="14px"
+                                                        >
+                                                          <use
+                                                            href="#test"
+                                                            xlinkHref="#test"
+                                                          />
+                                                        </svg>
+                                                      </ForwardRef>
+                                                    </StyledInlineSvg>
+                                                  </span>
+                                                </Component>
+                                              </Icon>
+                                            </span>
+                                          </Component>
+                                        </ButtonLabel>
+                                      </button>
+                                    </Component>
+                                  </StyledButton>
+                                </Button>
+                              </forwardRef<Button>>
+                            </span>
+                          </Container>
+                        </InnerReference>
+                      </Reference>
+                    </Manager>
+                  </Tooltip>
+                </div>
+              </TeamSelectInput>
             </div>
-          </TeamSelectInput>
-        </div>
-        <div>
-          <forwardRef<Button>
-            data-test-id="create-project"
-            disabled={true}
-            priority="primary"
-          >
-            <Button
-              align="center"
-              data-test-id="create-project"
-              disabled={true}
-              forwardRef={null}
-              priority="primary"
-            >
-              <StyledButton
-                aria-disabled={true}
-                aria-label="Create Project"
+            <div>
+              <forwardRef<Button>
                 data-test-id="create-project"
                 disabled={true}
-                forwardRef={null}
-                onClick={[Function]}
                 priority="primary"
-                role="button"
               >
-                <Component
-                  aria-disabled={true}
-                  aria-label="Create Project"
-                  className="css-1e3hcbu-StyledButton edwq9my0"
+                <Button
+                  align="center"
                   data-test-id="create-project"
+                  disabled={true}
                   forwardRef={null}
-                  onClick={[Function]}
-                  role="button"
+                  priority="primary"
                 >
-                  <button
+                  <StyledButton
                     aria-disabled={true}
                     aria-label="Create Project"
-                    className="css-1e3hcbu-StyledButton edwq9my0"
                     data-test-id="create-project"
+                    disabled={true}
+                    forwardRef={null}
                     onClick={[Function]}
+                    priority="primary"
                     role="button"
                   >
-                    <ButtonLabel
-                      align="center"
-                      priority="primary"
+                    <Component
+                      aria-disabled={true}
+                      aria-label="Create Project"
+                      className="css-1e3hcbu-StyledButton edwq9my0"
+                      data-test-id="create-project"
+                      forwardRef={null}
+                      onClick={[Function]}
+                      role="button"
                     >
-                      <Component
-                        align="center"
-                        className="css-zmpclt-ButtonLabel edwq9my1"
-                        priority="primary"
+                      <button
+                        aria-disabled={true}
+                        aria-label="Create Project"
+                        className="css-1e3hcbu-StyledButton edwq9my0"
+                        data-test-id="create-project"
+                        onClick={[Function]}
+                        role="button"
                       >
-                        <span
-                          className="css-zmpclt-ButtonLabel edwq9my1"
+                        <ButtonLabel
+                          align="center"
+                          priority="primary"
                         >
-                          Create Project
-                        </span>
-                      </Component>
-                    </ButtonLabel>
-                  </button>
-                </Component>
-              </StyledButton>
-            </Button>
-          </forwardRef<Button>>
-        </div>
-      </form>
-    </CreateProjectForm>
+                          <Component
+                            align="center"
+                            className="css-zmpclt-ButtonLabel edwq9my1"
+                            priority="primary"
+                          >
+                            <span
+                              className="css-zmpclt-ButtonLabel edwq9my1"
+                            >
+                              Create Project
+                            </span>
+                          </Component>
+                        </ButtonLabel>
+                      </button>
+                    </Component>
+                  </StyledButton>
+                </Button>
+              </forwardRef<Button>>
+            </div>
+          </form>
+        </CreateProjectForm>
+      </div>
+    </StickyWrapper>
   </div>
 </CreateProject>
 `;
@@ -2244,116 +2252,91 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
         </div>
       </PlatformList>
     </PlatformPicker>
-    <CreateProjectForm
-      onSubmit={[Function]}
-    >
-      <form
-        className="css-8zz3uw-CreateProjectForm e19kiapg0"
-        onSubmit={[Function]}
+    <StickyWrapper>
+      <div
+        className="css-1n1wv6u-StickyWrapper e19kiapg6"
       >
-        <div>
-          <FormLabel>
-            <div
-              className="css-1ynor6-FormLabel e19kiapg1"
-            >
-              Give your project a name
-            </div>
-          </FormLabel>
-          <ProjectNameInput>
-            <div
-              className="css-9ctizw-ProjectNameInput e19kiapg3"
-            >
-              <ProjectPlatformIcon
-                monoTone={true}
-                platform="ruby"
-              >
+        <CreateProjectForm
+          onSubmit={[Function]}
+        >
+          <form
+            className="css-1dq1lt0-CreateProjectForm e19kiapg0"
+            onSubmit={[Function]}
+          >
+            <div>
+              <FormLabel>
                 <div
-                  className="css-17k22u3-PlatformIconTile-ProjectPlatformIcon e19kiapg2"
-                />
-              </ProjectPlatformIcon>
-              <input
-                autoComplete="off"
-                label="Project Name"
-                name="name"
-                onChange={[Function]}
-                placeholder="Project name"
-                type="text"
-                value="Ruby"
-              />
-            </div>
-          </ProjectNameInput>
-        </div>
-        <div>
-          <FormLabel>
-            <div
-              className="css-1ynor6-FormLabel e19kiapg1"
-            >
-              Assign a Team
+                  className="css-1ynor6-FormLabel e19kiapg1"
+                >
+                  Give your project a name
+                </div>
+              </FormLabel>
+              <ProjectNameInput>
+                <div
+                  className="css-9ctizw-ProjectNameInput e19kiapg3"
+                >
+                  <ProjectPlatformIcon
+                    monoTone={true}
+                    platform="ruby"
+                  >
+                    <div
+                      className="css-17k22u3-PlatformIconTile-ProjectPlatformIcon e19kiapg2"
+                    />
+                  </ProjectPlatformIcon>
+                  <input
+                    autoComplete="off"
+                    label="Project Name"
+                    name="name"
+                    onChange={[Function]}
+                    placeholder="Project name"
+                    type="text"
+                    value="Ruby"
+                  />
+                </div>
+              </ProjectNameInput>
             </div>
-          </FormLabel>
-          <TeamSelectInput>
-            <div
-              className="css-15lxetg-TeamSelectInput e19kiapg4"
-            >
-              <ForwardRef(RefForwardedSelectControl)
-                clearable={false}
-                deprecatedSelectControl={true}
-                name="select-team"
-                onChange={[Function]}
-                options={Array []}
-                placeholder="Select a Team"
-                value={0}
-              >
-                <SelectControl
-                  clearable={false}
-                  deprecatedSelectControl={true}
-                  forwardedRef={null}
-                  name="select-team"
-                  onChange={[Function]}
-                  options={Array []}
-                  placeholder="Select a Team"
-                  value={0}
+            <div>
+              <FormLabel>
+                <div
+                  className="css-1ynor6-FormLabel e19kiapg1"
+                >
+                  Assign a Team
+                </div>
+              </FormLabel>
+              <TeamSelectInput>
+                <div
+                  className="css-15lxetg-TeamSelectInput e19kiapg4"
                 >
                   <ForwardRef(RefForwardedSelectControl)
                     clearable={false}
-                    forwardedRef={null}
+                    deprecatedSelectControl={true}
                     name="select-team"
                     onChange={[Function]}
                     options={Array []}
                     placeholder="Select a Team"
                     value={0}
                   >
-                    <SelectControlLegacy
+                    <SelectControl
                       clearable={false}
+                      deprecatedSelectControl={true}
                       forwardedRef={null}
-                      height={36}
-                      multiple={false}
                       name="select-team"
                       onChange={[Function]}
                       options={Array []}
                       placeholder="Select a Team"
                       value={0}
                     >
-                      <StyledSelect
-                        arrowRenderer={[Function]}
-                        backspaceRemoves={false}
+                      <ForwardRef(RefForwardedSelectControl)
                         clearable={false}
-                        deleteRemoves={false}
                         forwardedRef={null}
-                        height={36}
-                        multiple={false}
                         name="select-team"
                         onChange={[Function]}
                         options={Array []}
                         placeholder="Select a Team"
                         value={0}
                       >
-                        <SelectPicker
-                          arrowRenderer={[Function]}
-                          backspaceRemoves={false}
-                          className="css-140v9or-StyledSelect e1ynsgsr0"
+                        <SelectControlLegacy
                           clearable={false}
-                          deleteRemoves={false}
                           forwardedRef={null}
                           height={36}
                           multiple={false}
@@ -2363,350 +2346,381 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
                           placeholder="Select a Team"
                           value={0}
                         >
-                          <Select
+                          <StyledSelect
                             arrowRenderer={[Function]}
-                            autosize={true}
                             backspaceRemoves={false}
-                            backspaceToRemoveMessage="Press backspace to remove {label}"
-                            className="css-140v9or-StyledSelect e1ynsgsr0"
-                            clearAllText="Clear all"
-                            clearRenderer={[Function]}
-                            clearValueText="Clear value"
                             clearable={false}
-                            closeOnSelect={true}
                             deleteRemoves={false}
-                            delimiter=","
-                            disabled={false}
-                            escapeClearsValue={true}
-                            filterOptions={[Function]}
+                            forwardedRef={null}
                             height={36}
-                            ignoreAccents={true}
-                            ignoreCase={true}
-                            inputProps={Object {}}
-                            isLoading={false}
-                            joinValues={false}
-                            labelKey="label"
-                            matchPos="any"
-                            matchProp="any"
-                            menuBuffer={0}
-                            menuRenderer={[Function]}
-                            multi={false}
                             multiple={false}
                             name="select-team"
-                            noResultsText="No results found"
-                            onBlurResetsInput={true}
                             onChange={[Function]}
-                            onCloseResetsInput={true}
-                            onSelectResetsInput={true}
-                            openOnClick={true}
-                            optionComponent={[Function]}
                             options={Array []}
-                            pageSize={5}
                             placeholder="Select a Team"
-                            removeSelected={true}
-                            required={false}
-                            rtl={false}
-                            scrollMenuIntoView={true}
-                            searchable={true}
-                            simpleValue={false}
-                            tabSelectsValue={true}
-                            trimFilter={true}
                             value={0}
-                            valueComponent={[Function]}
-                            valueKey="value"
                           >
-                            <div
-                              className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
+                            <SelectPicker
+                              arrowRenderer={[Function]}
+                              backspaceRemoves={false}
+                              className="css-140v9or-StyledSelect e1ynsgsr0"
+                              clearable={false}
+                              deleteRemoves={false}
+                              forwardedRef={null}
+                              height={36}
+                              multiple={false}
+                              name="select-team"
+                              onChange={[Function]}
+                              options={Array []}
+                              placeholder="Select a Team"
+                              value={0}
                             >
-                              <div
-                                className="Select-control"
-                                onKeyDown={[Function]}
-                                onMouseDown={[Function]}
-                                onTouchEnd={[Function]}
-                                onTouchMove={[Function]}
-                                onTouchStart={[Function]}
+                              <Select
+                                arrowRenderer={[Function]}
+                                autosize={true}
+                                backspaceRemoves={false}
+                                backspaceToRemoveMessage="Press backspace to remove {label}"
+                                className="css-140v9or-StyledSelect e1ynsgsr0"
+                                clearAllText="Clear all"
+                                clearRenderer={[Function]}
+                                clearValueText="Clear value"
+                                clearable={false}
+                                closeOnSelect={true}
+                                deleteRemoves={false}
+                                delimiter=","
+                                disabled={false}
+                                escapeClearsValue={true}
+                                filterOptions={[Function]}
+                                height={36}
+                                ignoreAccents={true}
+                                ignoreCase={true}
+                                inputProps={Object {}}
+                                isLoading={false}
+                                joinValues={false}
+                                labelKey="label"
+                                matchPos="any"
+                                matchProp="any"
+                                menuBuffer={0}
+                                menuRenderer={[Function]}
+                                multi={false}
+                                multiple={false}
+                                name="select-team"
+                                noResultsText="No results found"
+                                onBlurResetsInput={true}
+                                onChange={[Function]}
+                                onCloseResetsInput={true}
+                                onSelectResetsInput={true}
+                                openOnClick={true}
+                                optionComponent={[Function]}
+                                options={Array []}
+                                pageSize={5}
+                                placeholder="Select a Team"
+                                removeSelected={true}
+                                required={false}
+                                rtl={false}
+                                scrollMenuIntoView={true}
+                                searchable={true}
+                                simpleValue={false}
+                                tabSelectsValue={true}
+                                trimFilter={true}
+                                value={0}
+                                valueComponent={[Function]}
+                                valueKey="value"
                               >
                                 <div
-                                  className="Select-multi-value-wrapper"
-                                  id="react-select-4--value"
+                                  className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
                                 >
                                   <div
-                                    className="Select-placeholder"
-                                  >
-                                    Select a Team
-                                  </div>
-                                  <AutosizeInput
-                                    aria-activedescendant="react-select-4--value"
-                                    aria-expanded="false"
-                                    aria-haspopup="false"
-                                    aria-owns=""
-                                    className="Select-input"
-                                    injectStyles={true}
-                                    minWidth="5"
-                                    onBlur={[Function]}
-                                    onChange={[Function]}
-                                    onFocus={[Function]}
-                                    required={false}
-                                    role="combobox"
-                                    value=""
+                                    className="Select-control"
+                                    onKeyDown={[Function]}
+                                    onMouseDown={[Function]}
+                                    onTouchEnd={[Function]}
+                                    onTouchMove={[Function]}
+                                    onTouchStart={[Function]}
                                   >
                                     <div
-                                      className="Select-input"
-                                      style={
-                                        Object {
-                                          "display": "inline-block",
-                                        }
-                                      }
+                                      className="Select-multi-value-wrapper"
+                                      id="react-select-4--value"
                                     >
-                                      <input
+                                      <div
+                                        className="Select-placeholder"
+                                      >
+                                        Select a Team
+                                      </div>
+                                      <AutosizeInput
                                         aria-activedescendant="react-select-4--value"
                                         aria-expanded="false"
                                         aria-haspopup="false"
                                         aria-owns=""
+                                        className="Select-input"
+                                        injectStyles={true}
+                                        minWidth="5"
                                         onBlur={[Function]}
                                         onChange={[Function]}
                                         onFocus={[Function]}
                                         required={false}
                                         role="combobox"
-                                        style={
-                                          Object {
-                                            "boxSizing": "content-box",
-                                            "width": "5px",
-                                          }
-                                        }
                                         value=""
-                                      />
-                                      <div
-                                        style={
-                                          Object {
-                                            "height": 0,
-                                            "left": 0,
-                                            "overflow": "scroll",
-                                            "position": "absolute",
-                                            "top": 0,
-                                            "visibility": "hidden",
-                                            "whiteSpace": "pre",
+                                      >
+                                        <div
+                                          className="Select-input"
+                                          style={
+                                            Object {
+                                              "display": "inline-block",
+                                            }
                                           }
-                                        }
-                                      />
+                                        >
+                                          <input
+                                            aria-activedescendant="react-select-4--value"
+                                            aria-expanded="false"
+                                            aria-haspopup="false"
+                                            aria-owns=""
+                                            onBlur={[Function]}
+                                            onChange={[Function]}
+                                            onFocus={[Function]}
+                                            required={false}
+                                            role="combobox"
+                                            style={
+                                              Object {
+                                                "boxSizing": "content-box",
+                                                "width": "5px",
+                                              }
+                                            }
+                                            value=""
+                                          />
+                                          <div
+                                            style={
+                                              Object {
+                                                "height": 0,
+                                                "left": 0,
+                                                "overflow": "scroll",
+                                                "position": "absolute",
+                                                "top": 0,
+                                                "visibility": "hidden",
+                                                "whiteSpace": "pre",
+                                              }
+                                            }
+                                          />
+                                        </div>
+                                      </AutosizeInput>
                                     </div>
-                                  </AutosizeInput>
+                                    <span
+                                      className="Select-arrow-zone"
+                                      onMouseDown={[Function]}
+                                    >
+                                      <span
+                                        className="icon-arrow-down"
+                                      />
+                                    </span>
+                                  </div>
                                 </div>
-                                <span
-                                  className="Select-arrow-zone"
-                                  onMouseDown={[Function]}
-                                >
-                                  <span
-                                    className="icon-arrow-down"
-                                  />
-                                </span>
-                              </div>
-                            </div>
-                          </Select>
-                        </SelectPicker>
-                      </StyledSelect>
-                    </SelectControlLegacy>
+                              </Select>
+                            </SelectPicker>
+                          </StyledSelect>
+                        </SelectControlLegacy>
+                      </ForwardRef(RefForwardedSelectControl)>
+                    </SelectControl>
                   </ForwardRef(RefForwardedSelectControl)>
-                </SelectControl>
-              </ForwardRef(RefForwardedSelectControl)>
-              <Tooltip
-                containerDisplayMode="inline-block"
-                position="top"
-                title="Create a team"
-              >
-                <Manager>
-                  <Reference>
-                    <InnerReference
-                      setReferenceNode={[Function]}
-                    >
-                      <Container
-                        aria-describedby="tooltip-123456"
-                        containerDisplayMode="inline-block"
-                        onBlur={[Function]}
-                        onFocus={[Function]}
-                        onMouseEnter={[Function]}
-                        onMouseLeave={[Function]}
-                      >
-                        <span
-                          aria-describedby="tooltip-123456"
-                          className="css-sce1yi-Container eowlwvy0"
-                          onBlur={[Function]}
-                          onFocus={[Function]}
-                          onMouseEnter={[Function]}
-                          onMouseLeave={[Function]}
+                  <Tooltip
+                    containerDisplayMode="inline-block"
+                    position="top"
+                    title="Create a team"
+                  >
+                    <Manager>
+                      <Reference>
+                        <InnerReference
+                          setReferenceNode={[Function]}
                         >
-                          <forwardRef<Button>
-                            borderless={true}
-                            data-test-id="create-team"
-                            icon="icon-circle-add"
-                            onClick={[Function]}
-                            type="button"
+                          <Container
+                            aria-describedby="tooltip-123456"
+                            containerDisplayMode="inline-block"
+                            onBlur={[Function]}
+                            onFocus={[Function]}
+                            onMouseEnter={[Function]}
+                            onMouseLeave={[Function]}
                           >
-                            <Button
-                              align="center"
-                              borderless={true}
-                              data-test-id="create-team"
-                              disabled={false}
-                              forwardRef={null}
-                              icon="icon-circle-add"
-                              onClick={[Function]}
-                              type="button"
+                            <span
+                              aria-describedby="tooltip-123456"
+                              className="css-sce1yi-Container eowlwvy0"
+                              onBlur={[Function]}
+                              onFocus={[Function]}
+                              onMouseEnter={[Function]}
+                              onMouseLeave={[Function]}
                             >
-                              <StyledButton
-                                aria-disabled={false}
+                              <forwardRef<Button>
                                 borderless={true}
                                 data-test-id="create-team"
-                                disabled={false}
-                                forwardRef={null}
+                                icon="icon-circle-add"
                                 onClick={[Function]}
-                                role="button"
                                 type="button"
                               >
-                                <Component
-                                  aria-disabled={false}
-                                  className="css-e1k74m-StyledButton edwq9my0"
+                                <Button
+                                  align="center"
+                                  borderless={true}
                                   data-test-id="create-team"
+                                  disabled={false}
                                   forwardRef={null}
+                                  icon="icon-circle-add"
                                   onClick={[Function]}
-                                  role="button"
                                   type="button"
                                 >
-                                  <button
+                                  <StyledButton
                                     aria-disabled={false}
-                                    className="css-e1k74m-StyledButton edwq9my0"
+                                    borderless={true}
                                     data-test-id="create-team"
+                                    disabled={false}
+                                    forwardRef={null}
                                     onClick={[Function]}
                                     role="button"
                                     type="button"
                                   >
-                                    <ButtonLabel
-                                      align="center"
-                                      borderless={true}
+                                    <Component
+                                      aria-disabled={false}
+                                      className="css-e1k74m-StyledButton edwq9my0"
+                                      data-test-id="create-team"
+                                      forwardRef={null}
+                                      onClick={[Function]}
+                                      role="button"
+                                      type="button"
                                     >
-                                      <Component
-                                        align="center"
-                                        borderless={true}
-                                        className="css-cmi7y3-ButtonLabel edwq9my1"
+                                      <button
+                                        aria-disabled={false}
+                                        className="css-e1k74m-StyledButton edwq9my0"
+                                        data-test-id="create-team"
+                                        onClick={[Function]}
+                                        role="button"
+                                        type="button"
                                       >
-                                        <span
-                                          className="css-cmi7y3-ButtonLabel edwq9my1"
+                                        <ButtonLabel
+                                          align="center"
+                                          borderless={true}
                                         >
-                                          <Icon
-                                            hasChildren={false}
+                                          <Component
+                                            align="center"
+                                            borderless={true}
+                                            className="css-cmi7y3-ButtonLabel edwq9my1"
                                           >
-                                            <Component
-                                              className="css-heib7e-Icon edwq9my2"
-                                              hasChildren={false}
+                                            <span
+                                              className="css-cmi7y3-ButtonLabel edwq9my1"
                                             >
-                                              <span
-                                                className="css-heib7e-Icon edwq9my2"
+                                              <Icon
+                                                hasChildren={false}
                                               >
-                                                <StyledInlineSvg
-                                                  size="14px"
-                                                  src="icon-circle-add"
+                                                <Component
+                                                  className="css-heib7e-Icon edwq9my2"
+                                                  hasChildren={false}
                                                 >
-                                                  <ForwardRef
-                                                    className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
-                                                    size="14px"
-                                                    src="icon-circle-add"
+                                                  <span
+                                                    className="css-heib7e-Icon edwq9my2"
                                                   >
-                                                    <svg
-                                                      className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
-                                                      height="14px"
-                                                      viewBox={Object {}}
-                                                      width="14px"
+                                                    <StyledInlineSvg
+                                                      size="14px"
+                                                      src="icon-circle-add"
                                                     >
-                                                      <use
-                                                        href="#test"
-                                                        xlinkHref="#test"
-                                                      />
-                                                    </svg>
-                                                  </ForwardRef>
-                                                </StyledInlineSvg>
-                                              </span>
-                                            </Component>
-                                          </Icon>
-                                        </span>
-                                      </Component>
-                                    </ButtonLabel>
-                                  </button>
-                                </Component>
-                              </StyledButton>
-                            </Button>
-                          </forwardRef<Button>>
-                        </span>
-                      </Container>
-                    </InnerReference>
-                  </Reference>
-                </Manager>
-              </Tooltip>
+                                                      <ForwardRef
+                                                        className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
+                                                        size="14px"
+                                                        src="icon-circle-add"
+                                                      >
+                                                        <svg
+                                                          className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
+                                                          height="14px"
+                                                          viewBox={Object {}}
+                                                          width="14px"
+                                                        >
+                                                          <use
+                                                            href="#test"
+                                                            xlinkHref="#test"
+                                                          />
+                                                        </svg>
+                                                      </ForwardRef>
+                                                    </StyledInlineSvg>
+                                                  </span>
+                                                </Component>
+                                              </Icon>
+                                            </span>
+                                          </Component>
+                                        </ButtonLabel>
+                                      </button>
+                                    </Component>
+                                  </StyledButton>
+                                </Button>
+                              </forwardRef<Button>>
+                            </span>
+                          </Container>
+                        </InnerReference>
+                      </Reference>
+                    </Manager>
+                  </Tooltip>
+                </div>
+              </TeamSelectInput>
             </div>
-          </TeamSelectInput>
-        </div>
-        <div>
-          <forwardRef<Button>
-            data-test-id="create-project"
-            disabled={true}
-            priority="primary"
-          >
-            <Button
-              align="center"
-              data-test-id="create-project"
-              disabled={true}
-              forwardRef={null}
-              priority="primary"
-            >
-              <StyledButton
-                aria-disabled={true}
-                aria-label="Create Project"
+            <div>
+              <forwardRef<Button>
                 data-test-id="create-project"
                 disabled={true}
-                forwardRef={null}
-                onClick={[Function]}
                 priority="primary"
-                role="button"
               >
-                <Component
-                  aria-disabled={true}
-                  aria-label="Create Project"
-                  className="css-1e3hcbu-StyledButton edwq9my0"
+                <Button
+                  align="center"
                   data-test-id="create-project"
+                  disabled={true}
                   forwardRef={null}
-                  onClick={[Function]}
-                  role="button"
+                  priority="primary"
                 >
-                  <button
+                  <StyledButton
                     aria-disabled={true}
                     aria-label="Create Project"
-                    className="css-1e3hcbu-StyledButton edwq9my0"
                     data-test-id="create-project"
+                    disabled={true}
+                    forwardRef={null}
                     onClick={[Function]}
+                    priority="primary"
                     role="button"
                   >
-                    <ButtonLabel
-                      align="center"
-                      priority="primary"
+                    <Component
+                      aria-disabled={true}
+                      aria-label="Create Project"
+                      className="css-1e3hcbu-StyledButton edwq9my0"
+                      data-test-id="create-project"
+                      forwardRef={null}
+                      onClick={[Function]}
+                      role="button"
                     >
-                      <Component
-                        align="center"
-                        className="css-zmpclt-ButtonLabel edwq9my1"
-                        priority="primary"
+                      <button
+                        aria-disabled={true}
+                        aria-label="Create Project"
+                        className="css-1e3hcbu-StyledButton edwq9my0"
+                        data-test-id="create-project"
+                        onClick={[Function]}
+                        role="button"
                       >
-                        <span
-                          className="css-zmpclt-ButtonLabel edwq9my1"
+                        <ButtonLabel
+                          align="center"
+                          priority="primary"
                         >
-                          Create Project
-                        </span>
-                      </Component>
-                    </ButtonLabel>
-                  </button>
-                </Component>
-              </StyledButton>
-            </Button>
-          </forwardRef<Button>>
-        </div>
-      </form>
-    </CreateProjectForm>
+                          <Component
+                            align="center"
+                            className="css-zmpclt-ButtonLabel edwq9my1"
+                            priority="primary"
+                          >
+                            <span
+                              className="css-zmpclt-ButtonLabel edwq9my1"
+                            >
+                              Create Project
+                            </span>
+                          </Component>
+                        </ButtonLabel>
+                      </button>
+                    </Component>
+                  </StyledButton>
+                </Button>
+              </forwardRef<Button>>
+            </div>
+          </form>
+        </CreateProjectForm>
+      </div>
+    </StickyWrapper>
   </div>
 </CreateProject>
 `;
@@ -3962,116 +3976,91 @@ exports[`CreateProject should fill in project name if its empty when platform is
         </div>
       </PlatformList>
     </PlatformPicker>
-    <CreateProjectForm
-      onSubmit={[Function]}
-    >
-      <form
-        className="css-8zz3uw-CreateProjectForm e19kiapg0"
-        onSubmit={[Function]}
+    <StickyWrapper>
+      <div
+        className="css-1n1wv6u-StickyWrapper e19kiapg6"
       >
-        <div>
-          <FormLabel>
-            <div
-              className="css-1ynor6-FormLabel e19kiapg1"
-            >
-              Give your project a name
-            </div>
-          </FormLabel>
-          <ProjectNameInput>
-            <div
-              className="css-9ctizw-ProjectNameInput e19kiapg3"
-            >
-              <ProjectPlatformIcon
-                monoTone={true}
-                platform="csharp"
-              >
+        <CreateProjectForm
+          onSubmit={[Function]}
+        >
+          <form
+            className="css-1dq1lt0-CreateProjectForm e19kiapg0"
+            onSubmit={[Function]}
+          >
+            <div>
+              <FormLabel>
                 <div
-                  className="css-nwocbk-PlatformIconTile-ProjectPlatformIcon e19kiapg2"
-                />
-              </ProjectPlatformIcon>
-              <input
-                autoComplete="off"
-                label="Project Name"
-                name="name"
-                onChange={[Function]}
-                placeholder="Project name"
-                type="text"
-                value="another"
-              />
-            </div>
-          </ProjectNameInput>
-        </div>
-        <div>
-          <FormLabel>
-            <div
-              className="css-1ynor6-FormLabel e19kiapg1"
-            >
-              Assign a Team
+                  className="css-1ynor6-FormLabel e19kiapg1"
+                >
+                  Give your project a name
+                </div>
+              </FormLabel>
+              <ProjectNameInput>
+                <div
+                  className="css-9ctizw-ProjectNameInput e19kiapg3"
+                >
+                  <ProjectPlatformIcon
+                    monoTone={true}
+                    platform="csharp"
+                  >
+                    <div
+                      className="css-nwocbk-PlatformIconTile-ProjectPlatformIcon e19kiapg2"
+                    />
+                  </ProjectPlatformIcon>
+                  <input
+                    autoComplete="off"
+                    label="Project Name"
+                    name="name"
+                    onChange={[Function]}
+                    placeholder="Project name"
+                    type="text"
+                    value="another"
+                  />
+                </div>
+              </ProjectNameInput>
             </div>
-          </FormLabel>
-          <TeamSelectInput>
-            <div
-              className="css-15lxetg-TeamSelectInput e19kiapg4"
-            >
-              <ForwardRef(RefForwardedSelectControl)
-                clearable={false}
-                deprecatedSelectControl={true}
-                name="select-team"
-                onChange={[Function]}
-                options={Array []}
-                placeholder="Select a Team"
-                value={0}
-              >
-                <SelectControl
-                  clearable={false}
-                  deprecatedSelectControl={true}
-                  forwardedRef={null}
-                  name="select-team"
-                  onChange={[Function]}
-                  options={Array []}
-                  placeholder="Select a Team"
-                  value={0}
+            <div>
+              <FormLabel>
+                <div
+                  className="css-1ynor6-FormLabel e19kiapg1"
+                >
+                  Assign a Team
+                </div>
+              </FormLabel>
+              <TeamSelectInput>
+                <div
+                  className="css-15lxetg-TeamSelectInput e19kiapg4"
                 >
                   <ForwardRef(RefForwardedSelectControl)
                     clearable={false}
-                    forwardedRef={null}
+                    deprecatedSelectControl={true}
                     name="select-team"
                     onChange={[Function]}
                     options={Array []}
                     placeholder="Select a Team"
                     value={0}
                   >
-                    <SelectControlLegacy
+                    <SelectControl
                       clearable={false}
+                      deprecatedSelectControl={true}
                       forwardedRef={null}
-                      height={36}
-                      multiple={false}
                       name="select-team"
                       onChange={[Function]}
                       options={Array []}
                       placeholder="Select a Team"
                       value={0}
                     >
-                      <StyledSelect
-                        arrowRenderer={[Function]}
-                        backspaceRemoves={false}
+                      <ForwardRef(RefForwardedSelectControl)
                         clearable={false}
-                        deleteRemoves={false}
                         forwardedRef={null}
-                        height={36}
-                        multiple={false}
                         name="select-team"
                         onChange={[Function]}
                         options={Array []}
                         placeholder="Select a Team"
                         value={0}
                       >
-                        <SelectPicker
-                          arrowRenderer={[Function]}
-                          backspaceRemoves={false}
-                          className="css-140v9or-StyledSelect e1ynsgsr0"
+                        <SelectControlLegacy
                           clearable={false}
-                          deleteRemoves={false}
                           forwardedRef={null}
                           height={36}
                           multiple={false}
@@ -4081,350 +4070,381 @@ exports[`CreateProject should fill in project name if its empty when platform is
                           placeholder="Select a Team"
                           value={0}
                         >
-                          <Select
+                          <StyledSelect
                             arrowRenderer={[Function]}
-                            autosize={true}
                             backspaceRemoves={false}
-                            backspaceToRemoveMessage="Press backspace to remove {label}"
-                            className="css-140v9or-StyledSelect e1ynsgsr0"
-                            clearAllText="Clear all"
-                            clearRenderer={[Function]}
-                            clearValueText="Clear value"
                             clearable={false}
-                            closeOnSelect={true}
                             deleteRemoves={false}
-                            delimiter=","
-                            disabled={false}
-                            escapeClearsValue={true}
-                            filterOptions={[Function]}
+                            forwardedRef={null}
                             height={36}
-                            ignoreAccents={true}
-                            ignoreCase={true}
-                            inputProps={Object {}}
-                            isLoading={false}
-                            joinValues={false}
-                            labelKey="label"
-                            matchPos="any"
-                            matchProp="any"
-                            menuBuffer={0}
-                            menuRenderer={[Function]}
-                            multi={false}
                             multiple={false}
                             name="select-team"
-                            noResultsText="No results found"
-                            onBlurResetsInput={true}
                             onChange={[Function]}
-                            onCloseResetsInput={true}
-                            onSelectResetsInput={true}
-                            openOnClick={true}
-                            optionComponent={[Function]}
                             options={Array []}
-                            pageSize={5}
                             placeholder="Select a Team"
-                            removeSelected={true}
-                            required={false}
-                            rtl={false}
-                            scrollMenuIntoView={true}
-                            searchable={true}
-                            simpleValue={false}
-                            tabSelectsValue={true}
-                            trimFilter={true}
                             value={0}
-                            valueComponent={[Function]}
-                            valueKey="value"
                           >
-                            <div
-                              className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
+                            <SelectPicker
+                              arrowRenderer={[Function]}
+                              backspaceRemoves={false}
+                              className="css-140v9or-StyledSelect e1ynsgsr0"
+                              clearable={false}
+                              deleteRemoves={false}
+                              forwardedRef={null}
+                              height={36}
+                              multiple={false}
+                              name="select-team"
+                              onChange={[Function]}
+                              options={Array []}
+                              placeholder="Select a Team"
+                              value={0}
                             >
-                              <div
-                                className="Select-control"
-                                onKeyDown={[Function]}
-                                onMouseDown={[Function]}
-                                onTouchEnd={[Function]}
-                                onTouchMove={[Function]}
-                                onTouchStart={[Function]}
+                              <Select
+                                arrowRenderer={[Function]}
+                                autosize={true}
+                                backspaceRemoves={false}
+                                backspaceToRemoveMessage="Press backspace to remove {label}"
+                                className="css-140v9or-StyledSelect e1ynsgsr0"
+                                clearAllText="Clear all"
+                                clearRenderer={[Function]}
+                                clearValueText="Clear value"
+                                clearable={false}
+                                closeOnSelect={true}
+                                deleteRemoves={false}
+                                delimiter=","
+                                disabled={false}
+                                escapeClearsValue={true}
+                                filterOptions={[Function]}
+                                height={36}
+                                ignoreAccents={true}
+                                ignoreCase={true}
+                                inputProps={Object {}}
+                                isLoading={false}
+                                joinValues={false}
+                                labelKey="label"
+                                matchPos="any"
+                                matchProp="any"
+                                menuBuffer={0}
+                                menuRenderer={[Function]}
+                                multi={false}
+                                multiple={false}
+                                name="select-team"
+                                noResultsText="No results found"
+                                onBlurResetsInput={true}
+                                onChange={[Function]}
+                                onCloseResetsInput={true}
+                                onSelectResetsInput={true}
+                                openOnClick={true}
+                                optionComponent={[Function]}
+                                options={Array []}
+                                pageSize={5}
+                                placeholder="Select a Team"
+                                removeSelected={true}
+                                required={false}
+                                rtl={false}
+                                scrollMenuIntoView={true}
+                                searchable={true}
+                                simpleValue={false}
+                                tabSelectsValue={true}
+                                trimFilter={true}
+                                value={0}
+                                valueComponent={[Function]}
+                                valueKey="value"
                               >
                                 <div
-                                  className="Select-multi-value-wrapper"
-                                  id="react-select-3--value"
+                                  className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
                                 >
                                   <div
-                                    className="Select-placeholder"
-                                  >
-                                    Select a Team
-                                  </div>
-                                  <AutosizeInput
-                                    aria-activedescendant="react-select-3--value"
-                                    aria-expanded="false"
-                                    aria-haspopup="false"
-                                    aria-owns=""
-                                    className="Select-input"
-                                    injectStyles={true}
-                                    minWidth="5"
-                                    onBlur={[Function]}
-                                    onChange={[Function]}
-                                    onFocus={[Function]}
-                                    required={false}
-                                    role="combobox"
-                                    value=""
+                                    className="Select-control"
+                                    onKeyDown={[Function]}
+                                    onMouseDown={[Function]}
+                                    onTouchEnd={[Function]}
+                                    onTouchMove={[Function]}
+                                    onTouchStart={[Function]}
                                   >
                                     <div
-                                      className="Select-input"
-                                      style={
-                                        Object {
-                                          "display": "inline-block",
-                                        }
-                                      }
+                                      className="Select-multi-value-wrapper"
+                                      id="react-select-3--value"
                                     >
-                                      <input
+                                      <div
+                                        className="Select-placeholder"
+                                      >
+                                        Select a Team
+                                      </div>
+                                      <AutosizeInput
                                         aria-activedescendant="react-select-3--value"
                                         aria-expanded="false"
                                         aria-haspopup="false"
                                         aria-owns=""
+                                        className="Select-input"
+                                        injectStyles={true}
+                                        minWidth="5"
                                         onBlur={[Function]}
                                         onChange={[Function]}
                                         onFocus={[Function]}
                                         required={false}
                                         role="combobox"
-                                        style={
-                                          Object {
-                                            "boxSizing": "content-box",
-                                            "width": "5px",
-                                          }
-                                        }
                                         value=""
-                                      />
-                                      <div
-                                        style={
-                                          Object {
-                                            "height": 0,
-                                            "left": 0,
-                                            "overflow": "scroll",
-                                            "position": "absolute",
-                                            "top": 0,
-                                            "visibility": "hidden",
-                                            "whiteSpace": "pre",
+                                      >
+                                        <div
+                                          className="Select-input"
+                                          style={
+                                            Object {
+                                              "display": "inline-block",
+                                            }
                                           }
-                                        }
-                                      />
+                                        >
+                                          <input
+                                            aria-activedescendant="react-select-3--value"
+                                            aria-expanded="false"
+                                            aria-haspopup="false"
+                                            aria-owns=""
+                                            onBlur={[Function]}
+                                            onChange={[Function]}
+                                            onFocus={[Function]}
+                                            required={false}
+                                            role="combobox"
+                                            style={
+                                              Object {
+                                                "boxSizing": "content-box",
+                                                "width": "5px",
+                                              }
+                                            }
+                                            value=""
+                                          />
+                                          <div
+                                            style={
+                                              Object {
+                                                "height": 0,
+                                                "left": 0,
+                                                "overflow": "scroll",
+                                                "position": "absolute",
+                                                "top": 0,
+                                                "visibility": "hidden",
+                                                "whiteSpace": "pre",
+                                              }
+                                            }
+                                          />
+                                        </div>
+                                      </AutosizeInput>
                                     </div>
-                                  </AutosizeInput>
+                                    <span
+                                      className="Select-arrow-zone"
+                                      onMouseDown={[Function]}
+                                    >
+                                      <span
+                                        className="icon-arrow-down"
+                                      />
+                                    </span>
+                                  </div>
                                 </div>
-                                <span
-                                  className="Select-arrow-zone"
-                                  onMouseDown={[Function]}
-                                >
-                                  <span
-                                    className="icon-arrow-down"
-                                  />
-                                </span>
-                              </div>
-                            </div>
-                          </Select>
-                        </SelectPicker>
-                      </StyledSelect>
-                    </SelectControlLegacy>
+                              </Select>
+                            </SelectPicker>
+                          </StyledSelect>
+                        </SelectControlLegacy>
+                      </ForwardRef(RefForwardedSelectControl)>
+                    </SelectControl>
                   </ForwardRef(RefForwardedSelectControl)>
-                </SelectControl>
-              </ForwardRef(RefForwardedSelectControl)>
-              <Tooltip
-                containerDisplayMode="inline-block"
-                position="top"
-                title="Create a team"
-              >
-                <Manager>
-                  <Reference>
-                    <InnerReference
-                      setReferenceNode={[Function]}
-                    >
-                      <Container
-                        aria-describedby="tooltip-123456"
-                        containerDisplayMode="inline-block"
-                        onBlur={[Function]}
-                        onFocus={[Function]}
-                        onMouseEnter={[Function]}
-                        onMouseLeave={[Function]}
-                      >
-                        <span
-                          aria-describedby="tooltip-123456"
-                          className="css-sce1yi-Container eowlwvy0"
-                          onBlur={[Function]}
-                          onFocus={[Function]}
-                          onMouseEnter={[Function]}
-                          onMouseLeave={[Function]}
+                  <Tooltip
+                    containerDisplayMode="inline-block"
+                    position="top"
+                    title="Create a team"
+                  >
+                    <Manager>
+                      <Reference>
+                        <InnerReference
+                          setReferenceNode={[Function]}
                         >
-                          <forwardRef<Button>
-                            borderless={true}
-                            data-test-id="create-team"
-                            icon="icon-circle-add"
-                            onClick={[Function]}
-                            type="button"
+                          <Container
+                            aria-describedby="tooltip-123456"
+                            containerDisplayMode="inline-block"
+                            onBlur={[Function]}
+                            onFocus={[Function]}
+                            onMouseEnter={[Function]}
+                            onMouseLeave={[Function]}
                           >
-                            <Button
-                              align="center"
-                              borderless={true}
-                              data-test-id="create-team"
-                              disabled={false}
-                              forwardRef={null}
-                              icon="icon-circle-add"
-                              onClick={[Function]}
-                              type="button"
+                            <span
+                              aria-describedby="tooltip-123456"
+                              className="css-sce1yi-Container eowlwvy0"
+                              onBlur={[Function]}
+                              onFocus={[Function]}
+                              onMouseEnter={[Function]}
+                              onMouseLeave={[Function]}
                             >
-                              <StyledButton
-                                aria-disabled={false}
+                              <forwardRef<Button>
                                 borderless={true}
                                 data-test-id="create-team"
-                                disabled={false}
-                                forwardRef={null}
+                                icon="icon-circle-add"
                                 onClick={[Function]}
-                                role="button"
                                 type="button"
                               >
-                                <Component
-                                  aria-disabled={false}
-                                  className="css-e1k74m-StyledButton edwq9my0"
+                                <Button
+                                  align="center"
+                                  borderless={true}
                                   data-test-id="create-team"
+                                  disabled={false}
                                   forwardRef={null}
+                                  icon="icon-circle-add"
                                   onClick={[Function]}
-                                  role="button"
                                   type="button"
                                 >
-                                  <button
+                                  <StyledButton
                                     aria-disabled={false}
-                                    className="css-e1k74m-StyledButton edwq9my0"
+                                    borderless={true}
                                     data-test-id="create-team"
+                                    disabled={false}
+                                    forwardRef={null}
                                     onClick={[Function]}
                                     role="button"
                                     type="button"
                                   >
-                                    <ButtonLabel
-                                      align="center"
-                                      borderless={true}
+                                    <Component
+                                      aria-disabled={false}
+                                      className="css-e1k74m-StyledButton edwq9my0"
+                                      data-test-id="create-team"
+                                      forwardRef={null}
+                                      onClick={[Function]}
+                                      role="button"
+                                      type="button"
                                     >
-                                      <Component
-                                        align="center"
-                                        borderless={true}
-                                        className="css-cmi7y3-ButtonLabel edwq9my1"
+                                      <button
+                                        aria-disabled={false}
+                                        className="css-e1k74m-StyledButton edwq9my0"
+                                        data-test-id="create-team"
+                                        onClick={[Function]}
+                                        role="button"
+                                        type="button"
                                       >
-                                        <span
-                                          className="css-cmi7y3-ButtonLabel edwq9my1"
+                                        <ButtonLabel
+                                          align="center"
+                                          borderless={true}
                                         >
-                                          <Icon
-                                            hasChildren={false}
+                                          <Component
+                                            align="center"
+                                            borderless={true}
+                                            className="css-cmi7y3-ButtonLabel edwq9my1"
                                           >
-                                            <Component
-                                              className="css-heib7e-Icon edwq9my2"
-                                              hasChildren={false}
+                                            <span
+                                              className="css-cmi7y3-ButtonLabel edwq9my1"
                                             >
-                                              <span
-                                                className="css-heib7e-Icon edwq9my2"
+                                              <Icon
+                                                hasChildren={false}
                                               >
-                                                <StyledInlineSvg
-                                                  size="14px"
-                                                  src="icon-circle-add"
+                                                <Component
+                                                  className="css-heib7e-Icon edwq9my2"
+                                                  hasChildren={false}
                                                 >
-                                                  <ForwardRef
-                                                    className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
-                                                    size="14px"
-                                                    src="icon-circle-add"
+                                                  <span
+                                                    className="css-heib7e-Icon edwq9my2"
                                                   >
-                                                    <svg
-                                                      className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
-                                                      height="14px"
-                                                      viewBox={Object {}}
-                                                      width="14px"
+                                                    <StyledInlineSvg
+                                                      size="14px"
+                                                      src="icon-circle-add"
                                                     >
-                                                      <use
-                                                        href="#test"
-                                                        xlinkHref="#test"
-                                                      />
-                                                    </svg>
-                                                  </ForwardRef>
-                                                </StyledInlineSvg>
-                                              </span>
-                                            </Component>
-                                          </Icon>
-                                        </span>
-                                      </Component>
-                                    </ButtonLabel>
-                                  </button>
-                                </Component>
-                              </StyledButton>
-                            </Button>
-                          </forwardRef<Button>>
-                        </span>
-                      </Container>
-                    </InnerReference>
-                  </Reference>
-                </Manager>
-              </Tooltip>
+                                                      <ForwardRef
+                                                        className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
+                                                        size="14px"
+                                                        src="icon-circle-add"
+                                                      >
+                                                        <svg
+                                                          className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
+                                                          height="14px"
+                                                          viewBox={Object {}}
+                                                          width="14px"
+                                                        >
+                                                          <use
+                                                            href="#test"
+                                                            xlinkHref="#test"
+                                                          />
+                                                        </svg>
+                                                      </ForwardRef>
+                                                    </StyledInlineSvg>
+                                                  </span>
+                                                </Component>
+                                              </Icon>
+                                            </span>
+                                          </Component>
+                                        </ButtonLabel>
+                                      </button>
+                                    </Component>
+                                  </StyledButton>
+                                </Button>
+                              </forwardRef<Button>>
+                            </span>
+                          </Container>
+                        </InnerReference>
+                      </Reference>
+                    </Manager>
+                  </Tooltip>
+                </div>
+              </TeamSelectInput>
             </div>
-          </TeamSelectInput>
-        </div>
-        <div>
-          <forwardRef<Button>
-            data-test-id="create-project"
-            disabled={true}
-            priority="primary"
-          >
-            <Button
-              align="center"
-              data-test-id="create-project"
-              disabled={true}
-              forwardRef={null}
-              priority="primary"
-            >
-              <StyledButton
-                aria-disabled={true}
-                aria-label="Create Project"
+            <div>
+              <forwardRef<Button>
                 data-test-id="create-project"
                 disabled={true}
-                forwardRef={null}
-                onClick={[Function]}
                 priority="primary"
-                role="button"
               >
-                <Component
-                  aria-disabled={true}
-                  aria-label="Create Project"
-                  className="css-1e3hcbu-StyledButton edwq9my0"
+                <Button
+                  align="center"
                   data-test-id="create-project"
+                  disabled={true}
                   forwardRef={null}
-                  onClick={[Function]}
-                  role="button"
+                  priority="primary"
                 >
-                  <button
+                  <StyledButton
                     aria-disabled={true}
                     aria-label="Create Project"
-                    className="css-1e3hcbu-StyledButton edwq9my0"
                     data-test-id="create-project"
+                    disabled={true}
+                    forwardRef={null}
                     onClick={[Function]}
+                    priority="primary"
                     role="button"
                   >
-                    <ButtonLabel
-                      align="center"
-                      priority="primary"
+                    <Component
+                      aria-disabled={true}
+                      aria-label="Create Project"
+                      className="css-1e3hcbu-StyledButton edwq9my0"
+                      data-test-id="create-project"
+                      forwardRef={null}
+                      onClick={[Function]}
+                      role="button"
                     >
-                      <Component
-                        align="center"
-                        className="css-zmpclt-ButtonLabel edwq9my1"
-                        priority="primary"
+                      <button
+                        aria-disabled={true}
+                        aria-label="Create Project"
+                        className="css-1e3hcbu-StyledButton edwq9my0"
+                        data-test-id="create-project"
+                        onClick={[Function]}
+                        role="button"
                       >
-                        <span
-                          className="css-zmpclt-ButtonLabel edwq9my1"
+                        <ButtonLabel
+                          align="center"
+                          priority="primary"
                         >
-                          Create Project
-                        </span>
-                      </Component>
-                    </ButtonLabel>
-                  </button>
-                </Component>
-              </StyledButton>
-            </Button>
-          </forwardRef<Button>>
-        </div>
-      </form>
-    </CreateProjectForm>
+                          <Component
+                            align="center"
+                            className="css-zmpclt-ButtonLabel edwq9my1"
+                            priority="primary"
+                          >
+                            <span
+                              className="css-zmpclt-ButtonLabel edwq9my1"
+                            >
+                              Create Project
+                            </span>
+                          </Component>
+                        </ButtonLabel>
+                      </button>
+                    </Component>
+                  </StyledButton>
+                </Button>
+              </forwardRef<Button>>
+            </div>
+          </form>
+        </CreateProjectForm>
+      </div>
+    </StickyWrapper>
   </div>
 </CreateProject>
 `;
diff --git a/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap b/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap
index 27cf82efa8..77e180d7b7 100644
--- a/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap
+++ b/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap
@@ -1,16 +1,17 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`NewProjectPlatform render() should render 1`] = `
-<Container>
-  <div
-    className="container"
-  >
-    <Content>
-      <SideEffect(DocumentTitle)
-        title="Sentry"
-      />
-      <withApi(withTeams(WithOrganizationMockWrapper)) />
-    </Content>
-  </div>
-</Container>
+<NewProject
+  organization={
+    Object {
+      "id": "1337",
+      "slug": "testOrg",
+      "teams": Array [
+        Array [
+          "testProject",
+        ],
+      ],
+    }
+  }
+/>
 `;
diff --git a/tests/js/spec/views/projectInstall/createProject.spec.jsx b/tests/js/spec/views/projectInstall/createProject.spec.jsx
index 5a3caeb01a..aaf13fd50c 100644
--- a/tests/js/spec/views/projectInstall/createProject.spec.jsx
+++ b/tests/js/spec/views/projectInstall/createProject.spec.jsx
@@ -3,6 +3,7 @@ import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {CreateProject} from 'app/views/projectInstall/createProject';
 import {openCreateTeamModal} from 'app/actionCreators/modal';
+import {MOCK_RESP_VERBOSE} from 'sentry-test/fixtures/ruleConditions';
 
 jest.mock('app/actionCreators/modal');
 
@@ -146,4 +147,73 @@ describe('CreateProject', function() {
 
     expect(wrapper).toMatchSnapshot();
   });
+
+  describe('Issue Alerts Options', () => {
+    let props = {};
+    beforeEach(() => {
+      props = {
+        ...baseProps,
+        hasIssueAlertOptionsEnabled: true,
+      };
+      props.organization.teams = [{slug: 'test', id: '1', name: 'test', hasAccess: true}];
+      MockApiClient.addMockResponse({
+        url: `/projects/${props.organization.slug}/rule-conditions/`,
+        body: MOCK_RESP_VERBOSE,
+      });
+    });
+
+    afterEach(() => {
+      MockApiClient.clearMockResponses();
+    });
+
+    it('should enabled the submit button if and only if all the required information has been filled', () => {
+      const wrapper = mountWithTheme(
+        <CreateProject {...props} />,
+        TestStubs.routerContext([
+          {
+            location: {query: {}},
+          },
+        ])
+      );
+
+      const expectSubmitButtonToBeDisabled = isDisabled => {
+        expect(
+          wrapper.find('Button[data-test-id="create-project"]').props().disabled
+        ).toBe(isDisabled);
+      };
+
+      wrapper
+        .find('SelectControl[data-test-id="metric-select-control"]')
+        .closest('RadioLineItem')
+        .simulate('click');
+      expectSubmitButtonToBeDisabled(true);
+
+      wrapper.find('input[data-test-id="range-input"]');
+      expectSubmitButtonToBeDisabled(true);
+
+      wrapper
+        .find('PlatformCard')
+        .first()
+        .simulate('click');
+      expectSubmitButtonToBeDisabled(true);
+
+      wrapper
+        .find('input[data-test-id="range-input"]')
+        .first()
+        .simulate('change', {target: {value: '2712'}});
+      expectSubmitButtonToBeDisabled(false);
+
+      wrapper
+        .find('input[data-test-id="range-input"]')
+        .first()
+        .simulate('change', {target: {value: ''}});
+      expectSubmitButtonToBeDisabled(true);
+
+      wrapper
+        .find('RadioLineItem')
+        .last()
+        .simulate('click');
+      expectSubmitButtonToBeDisabled(false);
+    });
+  });
 });
diff --git a/tests/js/spec/views/projectInstall/issueAlertOptions.spec.jsx b/tests/js/spec/views/projectInstall/issueAlertOptions.spec.jsx
new file mode 100644
index 0000000000..a7c3999777
--- /dev/null
+++ b/tests/js/spec/views/projectInstall/issueAlertOptions.spec.jsx
@@ -0,0 +1,129 @@
+import React from 'react';
+import {mountWithTheme} from 'sentry-test/enzyme';
+
+import IssueAlertOptions from 'app/views/projectInstall/issueAlertOptions';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {
+  MOCK_RESP_VERBOSE,
+  MOCK_RESP_INCONSISTENT_INTERVALS,
+  MOCK_RESP_INCONSISTENT_PLACEHOLDERS,
+  MOCK_RESP_ONLY_IGNORED_CONDITIONS_INVALID,
+} from 'sentry-test/fixtures/ruleConditions';
+
+describe('IssueAlertOptions', function() {
+  const {organization, routerContext} = initializeOrg();
+  const URL = `/projects/${organization.slug}/rule-conditions/`;
+  let props;
+  const baseProps = {
+    onChange: _ => {},
+  };
+  beforeEach(() => {
+    MockApiClient.clearMockResponses();
+    MockApiClient.addMockResponse({
+      url: `/projects/${organization.slug}/rule-conditions/`,
+      body: MOCK_RESP_VERBOSE,
+    });
+    props = {...baseProps};
+  });
+
+  const selectControlVerifier = (wrapper, dataTestId, optionsText) => {
+    wrapper
+      .find(`[data-test-id="${dataTestId}"] input[id*="react-select"]`)
+      .last()
+      .simulate('focus');
+
+    expect(
+      wrapper.find(`InlineSelectControl[data-test-id="${dataTestId}"] Option`)
+    ).toHaveLength(optionsText.length);
+
+    optionsText.forEach((metricText, idx) =>
+      expect(
+        wrapper
+          .find(`InlineSelectControl[data-test-id="${dataTestId}"] Option`)
+          .at(idx)
+          .text()
+      ).toBe(metricText)
+    );
+  };
+
+  it('should render only the `Default Rule` and `Create Later` option on empty response:[]', () => {
+    MockApiClient.addMockResponse({
+      url: URL,
+      body: [],
+    });
+
+    const wrapper = mountWithTheme(<IssueAlertOptions {...props} />, routerContext);
+    expect(wrapper.find('RadioLineItem')).toHaveLength(2);
+  });
+
+  it('should render only the `Default Rule` and `Create Later` option on empty response:{}', () => {
+    MockApiClient.addMockResponse({
+      url: URL,
+      body: {},
+    });
+
+    const wrapper = mountWithTheme(<IssueAlertOptions {...props} />, routerContext);
+    expect(wrapper.find('RadioLineItem')).toHaveLength(2);
+  });
+
+  it('should render only the `Default Rule` and `Create Later` option on responses with different allowable intervals', () => {
+    MockApiClient.addMockResponse({
+      url: URL,
+      body: MOCK_RESP_INCONSISTENT_INTERVALS,
+    });
+
+    const wrapper = mountWithTheme(<IssueAlertOptions {...props} />, routerContext);
+    expect(wrapper.find('RadioLineItem')).toHaveLength(2);
+  });
+
+  it('should render only the `Default Rule` and `Create Later` option on responses with different placeholder values', () => {
+    MockApiClient.addMockResponse({
+      url: URL,
+      body: MOCK_RESP_INCONSISTENT_PLACEHOLDERS,
+    });
+    const wrapper = mountWithTheme(<IssueAlertOptions {...props} />, routerContext);
+    expect(wrapper.find('RadioLineItem')).toHaveLength(2);
+  });
+
+  it('should ignore conditions that are not `sentry.rules.conditions.event_frequency.EventFrequencyCondition` and `sentry.rules.conditions.event_frequency.EventUniqueUserFrequencyCondition` ', () => {
+    MockApiClient.addMockResponse({
+      url: URL,
+      body: MOCK_RESP_ONLY_IGNORED_CONDITIONS_INVALID,
+    });
+
+    const wrapper = mountWithTheme(<IssueAlertOptions {...props} />, routerContext);
+    expect(wrapper.find('RadioLineItem')).toHaveLength(3);
+    selectControlVerifier(wrapper, 'metric-select-control', ['users affected by']);
+  });
+
+  it('should render all(three) options on a valid response', () => {
+    MockApiClient.addMockResponse({
+      url: URL,
+      body: MOCK_RESP_VERBOSE,
+    });
+
+    const wrapper = mountWithTheme(<IssueAlertOptions {...props} />, routerContext);
+    expect(wrapper.find('RadioLineItem')).toHaveLength(3);
+  });
+
+  it('should pre-populate fields from server response', () => {
+    MockApiClient.addMockResponse({
+      url: URL,
+      body: MOCK_RESP_VERBOSE,
+    });
+
+    const wrapper = mountWithTheme(<IssueAlertOptions {...props} />, routerContext);
+
+    expect(wrapper.find('input[data-test-id="range-input"]').props().placeholder).toBe(
+      100
+    );
+
+    [
+      ['metric-select-control', ['occurrences of', 'users affected by']],
+      [
+        'interval-select-control',
+        ['one minute', 'one hour', 'one day', 'one week', '30 days'],
+      ],
+    ].forEach(tuple => selectControlVerifier(wrapper, tuple[0], tuple[1]));
+  });
+});
