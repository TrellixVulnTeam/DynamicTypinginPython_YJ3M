commit 8983d14697bb6247a327cf2f4f76571780afcd1e
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Nov 16 14:09:07 2013 -0800

    Install user model, store usernames in lowercase

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 71129f4ddf..342467cc2f 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -196,7 +196,7 @@ AUTHENTICATION_BACKENDS = (
     'sentry.utils.auth.EmailAuthBackend',
 )
 
-SOCIAL_AUTH_USER_MODEL = AUTH_USER_MODEL = 'auth.User'
+SOCIAL_AUTH_USER_MODEL = AUTH_USER_MODEL = 'sentry.User'
 
 SESSION_ENGINE = "django.contrib.sessions.backends.signed_cookies"
 
diff --git a/src/sentry/models.py b/src/sentry/models.py
index 6b810ce35f..632afa4278 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -21,7 +21,7 @@ from picklefield.fields import PickledObjectField
 from south.modelsinspector import add_introspection_rules
 
 from django.conf import settings
-from django.contrib.auth.models import AbstractBaseUser
+from django.contrib.auth.models import AbstractBaseUser, PermissionsMixin
 from django.contrib.auth.signals import user_logged_in
 from django.core.urlresolvers import reverse
 from django.db import models
@@ -72,7 +72,7 @@ def slugify_instance(inst, label, reserved=(), **kwargs):
         inst.slug = base_slug + '-' + str(n)
 
 
-class User(Model, AbstractBaseUser):
+class User(Model, AbstractBaseUser, PermissionsMixin):
     username = models.CharField(_('username'), max_length=128, unique=True)
     first_name = models.CharField(_('first name'), max_length=30, blank=True)
     last_name = models.CharField(_('last name'), max_length=30, blank=True)
@@ -96,7 +96,7 @@ class User(Model, AbstractBaseUser):
         verbose_name = _('user')
         verbose_name_plural = _('users')
         db_table = 'auth_user'
-        app_label = 'auth'
+        # app_label = 'auth'
 
     def merge_to(from_user, to_user):
         # TODO: we could discover relations automatically and make this useful
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index bea101a26c..8b0cc40929 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -34,7 +34,7 @@ TIMEZONE_CHOICES = _get_timezone_choices()
 
 
 class RegistrationForm(forms.ModelForm):
-    username = forms.EmailField(label=_('Email'))
+    username = forms.EmailField(label=_('Email'), max_length=128)
     password = forms.CharField(widget=forms.PasswordInput)
 
     class Meta:
@@ -45,15 +45,13 @@ class RegistrationForm(forms.ModelForm):
         value = self.cleaned_data.get('username')
         if not value:
             return
-        # We don't really care about why people think they need multiple User accounts with the same
-        # email address -- dealwithit.jpg
         if User.objects.filter(username__iexact=value).exists():
             raise forms.ValidationError(_('An account is already registered with that email address.'))
-        return value
+        return value.lower()
 
     def save(self, commit=True):
         user = super(RegistrationForm, self).save(commit=False)
-        user.email = self.cleaned_data['username']
+        user.email = user.username
         user.set_password(self.cleaned_data['password'])
         if commit:
             user.save()
