commit 88b3fda27d1213794f5dc448a5e3d5ac9aecc634
Author: Mark Story <mark@mark-story.com>
Date:   Fri Feb 15 22:01:10 2019 -0500

    fix(issues) Keep environment picker relevant to selected projects (#12092)
    
    Use the project selection to only display the relevant environments.
    When the project selection changes the environment selection should also
    update if the previously selected environments are now invalid.
    
    I've added a property to the organization fixture, which churned all of
    these snapshots.
    
    
    Fixes APP-1128

diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/globalSelectionHeader.jsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/globalSelectionHeader.jsx
index b04f3517c3..fd43caa553 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/globalSelectionHeader.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/globalSelectionHeader.jsx
@@ -374,6 +374,7 @@ class GlobalSelectionHeader extends React.Component {
             <HeaderItemPosition>
               <MultipleEnvironmentSelector
                 organization={organization}
+                selectedProjects={this.props.selection.projects}
                 value={this.state.environments || this.props.selection.environments}
                 onChange={this.handleChangeEnvironments}
                 onUpdate={this.handleUpdateEnvironmments}
diff --git a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
index 30a6405b5d..15d8b767f5 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
@@ -1,9 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled, {css} from 'react-emotion';
+import {uniq, intersection} from 'lodash';
 
 import {analytics} from 'app/utils/analytics';
-import {fetchOrganizationEnvironments} from 'app/actionCreators/environments';
 import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
 import {t} from 'app/locale';
 import CheckboxFancy from 'app/components/checkboxFancy';
@@ -11,7 +11,6 @@ import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
 import HeaderItem from 'app/components/organizations/headerItem';
 import Highlight from 'app/components/highlight';
 import InlineSvg from 'app/components/inlineSvg';
-import LoadingIndicator from 'app/components/loadingIndicator';
 import SentryTypes from 'app/sentryTypes';
 import theme from 'app/utils/theme';
 import withApi from 'app/utils/withApi';
@@ -34,6 +33,8 @@ class MultipleEnvironmentSelector extends React.PureComponent {
 
     organization: SentryTypes.Organization,
 
+    selectedProjects: PropTypes.arrayOf(PropTypes.number),
+
     // This component must be controlled using a value array
     value: PropTypes.array,
 
@@ -57,6 +58,30 @@ class MultipleEnvironmentSelector extends React.PureComponent {
     };
   }
 
+  componentDidUpdate(prevProps, prevState) {
+    // When projects change we may need to update the selected value if the current values
+    // become invalid.
+    const sharedProjects = intersection(
+      prevProps.selectedProjects,
+      this.props.selectedProjects
+    );
+    if (sharedProjects.length !== prevProps.selectedProjects.length) {
+      const selectedEnvs = Array.from(this.state.selectedEnvs.values());
+      const validEnvironments = this.getEnvironments();
+      const newSelection = validEnvironments.filter(env => selectedEnvs.includes(env));
+
+      if (newSelection.length !== selectedEnvs.length) {
+        this.replaceSelected(newSelection);
+      }
+    }
+  }
+
+  replaceSelected(newSelection) {
+    this.setState({selectedEnvs: new Set(newSelection)});
+    this.props.onChange(newSelection);
+    this.props.onUpdate();
+  }
+
   /**
    * If value in state is different than value from props, propagate changes
    */
@@ -78,14 +103,14 @@ class MultipleEnvironmentSelector extends React.PureComponent {
     this.setState(state => {
       const selectedEnvs = new Set(state.selectedEnvs);
 
-      if (selectedEnvs.has(env.name)) {
-        selectedEnvs.delete(env.name);
+      if (selectedEnvs.has(env)) {
+        selectedEnvs.delete(env);
       } else {
-        selectedEnvs.add(env.name);
+        selectedEnvs.add(env);
       }
 
       analytics('environmentselector.toggle', {
-        action: selectedEnvs.has(env.name) ? 'added' : 'removed',
+        action: selectedEnvs.has(env) ? 'added' : 'removed',
         path: getRouteStringFromRoutes(this.context.router.routes),
         org_id: parseInt(this.props.organization.id, 10),
       });
@@ -151,10 +176,10 @@ class MultipleEnvironmentSelector extends React.PureComponent {
     });
 
     this.setState(state => {
-      this.doChange([env.name], e);
+      this.doChange([env], e);
 
       return {
-        selectedEnvs: new Set([env.name]),
+        selectedEnvs: new Set([env]),
       };
     }, this.doUpdate);
   };
@@ -167,113 +192,83 @@ class MultipleEnvironmentSelector extends React.PureComponent {
     this.toggleSelected(env, e);
   };
 
+  getEnvironments() {
+    const {organization, selectedProjects} = this.props;
+    let environments = [];
+    organization.projects.forEach(function(project) {
+      const projectId = parseInt(project.id, 10);
+      // When selectedProjects is empty all projects are selected.
+      if (selectedProjects.includes(projectId) || selectedProjects.length === 0) {
+        environments = environments.concat(project.environments);
+      }
+    });
+
+    return uniq(environments);
+  }
+
   render() {
-    const {value, organization} = this.props;
+    const {value} = this.props;
+    const environments = this.getEnvironments();
+
+    const validatedValue = value.filter(env => environments.includes(env));
+    const summary = validatedValue.length
+      ? `${validatedValue.join(', ')}`
+      : t('All Environments');
 
     return (
-      <FetchOrganizationEnvironments organization={organization}>
-        {({environments}) => {
-          const envNames = new Set((environments || []).map(env => env.name));
-          const validatedValue = value.filter(env => envNames.has(env));
-          const summary = validatedValue.length
-            ? `${validatedValue.join(', ')}`
-            : t('All Environments');
-
-          return (
-            <StyledDropdownAutoComplete
-              alignMenu="left"
-              allowActorToggle={true}
-              closeOnSelect={true}
-              blendCorner={false}
-              searchPlaceholder={t('Filter environments')}
-              onSelect={this.handleSelect}
-              onClose={this.handleClose}
-              maxHeight={500}
-              rootClassName={rootClassName}
-              zIndex={theme.zIndex.dropdown}
-              inputProps={{style: {padding: 8, paddingLeft: 14}}}
-              emptyMessage={
-                environments === null ? (
-                  <LoadingIndicator />
-                ) : (
-                  t('You have no environments')
-                )
-              }
-              noResultsMessage={t('No environments found')}
-              virtualizedHeight={40}
-              emptyHidesInput
-              menuProps={{style: {position: 'relative'}}}
-              items={
-                environments
-                  ? environments.map(env => ({
-                      value: env,
-                      searchKey: env.name,
-                      label: ({inputValue}) => (
-                        <EnvironmentSelectorItem
-                          environment={env}
-                          multi={true}
-                          inputValue={inputValue}
-                          isChecked={this.state.selectedEnvs.has(env.name)}
-                          onMultiSelect={this.handleMultiSelect}
-                        />
-                      ),
-                    }))
-                  : []
-              }
-            >
-              {({isOpen, getActorProps, actions}) => (
-                <StyledHeaderItem
-                  icon={<StyledInlineSvg src="icon-window" />}
-                  isOpen={isOpen}
-                  hasSelected={value && !!value.length}
-                  hasChanges={this.state.hasChanges}
-                  onSubmit={() => this.handleUpdate(actions)}
-                  onClear={this.handleClear}
-                  {...getActorProps({
-                    isStyled: true,
-                  })}
-                >
-                  {summary}
-                </StyledHeaderItem>
-              )}
-            </StyledDropdownAutoComplete>
-          );
-        }}
-      </FetchOrganizationEnvironments>
+      <StyledDropdownAutoComplete
+        alignMenu="left"
+        allowActorToggle={true}
+        closeOnSelect={true}
+        blendCorner={false}
+        searchPlaceholder={t('Filter environments')}
+        onSelect={this.handleSelect}
+        onClose={this.handleClose}
+        maxHeight={500}
+        rootClassName={rootClassName}
+        zIndex={theme.zIndex.dropdown}
+        inputProps={{style: {padding: 8, paddingLeft: 14}}}
+        emptyMessage={t('You have no environments')}
+        noResultsMessage={t('No environments found')}
+        virtualizedHeight={40}
+        emptyHidesInput
+        menuProps={{style: {position: 'relative'}}}
+        items={environments.map(env => ({
+          value: env,
+          searchKey: env,
+          label: ({inputValue}) => (
+            <EnvironmentSelectorItem
+              environment={env}
+              multi={true}
+              inputValue={inputValue}
+              isChecked={this.state.selectedEnvs.has(env)}
+              onMultiSelect={this.handleMultiSelect}
+            />
+          ),
+        }))}
+      >
+        {({isOpen, getActorProps, actions}) => (
+          <StyledHeaderItem
+            icon={<StyledInlineSvg src="icon-window" />}
+            isOpen={isOpen}
+            hasSelected={value && !!value.length}
+            hasChanges={this.state.hasChanges}
+            onSubmit={() => this.handleUpdate(actions)}
+            onClear={this.handleClear}
+            {...getActorProps({
+              isStyled: true,
+            })}
+          >
+            {summary}
+          </StyledHeaderItem>
+        )}
+      </StyledDropdownAutoComplete>
     );
   }
 }
 
 export default withApi(MultipleEnvironmentSelector);
 
-const FetchOrganizationEnvironments = withApi(
-  class FetchOrganizationEnvironments extends React.Component {
-    static propTypes = {
-      api: PropTypes.object,
-      organization: SentryTypes.Organization,
-    };
-    constructor(props) {
-      super(props);
-      this.state = {
-        environments: null,
-      };
-    }
-
-    componentDidMount() {
-      const {api, organization} = this.props;
-      fetchOrganizationEnvironments(api, organization.slug).then(environments =>
-        this.setState({environments})
-      );
-    }
-    render() {
-      const {children} = this.props;
-      return children({
-        environments: this.state.environments,
-      });
-    }
-  }
-);
-
 const StyledHeaderItem = styled(HeaderItem)`
   height: 100%;
 `;
@@ -298,7 +293,7 @@ const StyledDropdownAutoComplete = styled(DropdownAutoComplete)`
 class EnvironmentSelectorItem extends React.PureComponent {
   static propTypes = {
     onMultiSelect: PropTypes.func.isRequired,
-    environment: SentryTypes.Environment,
+    environment: PropTypes.string.isRequired,
     inputValue: PropTypes.string,
     isChecked: PropTypes.bool,
   };
@@ -318,7 +313,7 @@ class EnvironmentSelectorItem extends React.PureComponent {
     return (
       <EnvironmentRow>
         <div>
-          <Highlight text={inputValue}>{environment.name}</Highlight>
+          <Highlight text={inputValue}>{environment}</Highlight>
         </div>
 
         <MultiSelectWrapper onClick={this.handleClick}>
diff --git a/tests/js/fixtures/project.js b/tests/js/fixtures/project.js
index d78a2ac52e..e32c83f005 100644
--- a/tests/js/fixtures/project.js
+++ b/tests/js/fixtures/project.js
@@ -7,6 +7,7 @@ export function Project(params) {
     isMember: true,
     isBookmarked: false,
     teams: [],
+    environments: [],
     ...params,
   };
 }
diff --git a/tests/js/spec/components/group/__snapshots__/releaseStats.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/releaseStats.spec.jsx.snap
index bfe0e1e3b0..f50a3a844b 100644
--- a/tests/js/spec/components/group/__snapshots__/releaseStats.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/releaseStats.spec.jsx.snap
@@ -76,6 +76,7 @@ exports[`GroupReleaseStats renders 1`] = `
   }
   project={
     Object {
+      "environments": Array [],
       "hasAccess": true,
       "id": "2",
       "isBookmarked": false,
diff --git a/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap
index 6a826b3a02..7ab2891f98 100644
--- a/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap
@@ -73,6 +73,7 @@ exports[`GroupSidebar renders with tags renders 1`] = `
     }
     project={
       Object {
+        "environments": Array [],
         "hasAccess": true,
         "id": "2",
         "isBookmarked": false,
@@ -202,6 +203,7 @@ exports[`GroupSidebar renders with tags renders 1`] = `
     }
     project={
       Object {
+        "environments": Array [],
         "hasAccess": true,
         "id": "2",
         "isBookmarked": false,
@@ -274,6 +276,7 @@ exports[`GroupSidebar renders with tags renders 1`] = `
     orgId="org-slug"
     project={
       Object {
+        "environments": Array [],
         "hasAccess": true,
         "id": "2",
         "isBookmarked": false,
diff --git a/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx b/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx
index 76ba667943..045c871277 100644
--- a/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx
+++ b/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx
@@ -1,37 +1,42 @@
 import React from 'react';
 
 import {mount} from 'enzyme';
-import {setActiveOrganization} from 'app/actionCreators/organizations';
 import MultipleEnvironmentSelector from 'app/components/organizations/multipleEnvironmentSelector';
 
 describe('MultipleEnvironmentSelector', function() {
-  let getMock;
   let wrapper;
   const onChange = jest.fn();
   const onUpdate = jest.fn();
-  const organization = TestStubs.Organization({});
-  const envs = TestStubs.Environments();
+
+  const envs = ['production', 'staging', 'dev'];
+  const organization = TestStubs.Organization({
+    projects: [
+      TestStubs.Project({
+        id: '1',
+        slug: 'first',
+        environments: ['production', 'staging'],
+      }),
+      TestStubs.Project({
+        id: '2',
+        slug: 'second',
+        environments: ['dev'],
+      }),
+    ],
+  });
+  const selectedProjects = [1, 2];
   const routerContext = TestStubs.routerContext([
     {
       organization,
     },
   ]);
 
-  beforeAll(async function() {
-    getMock = MockApiClient.addMockResponse({
-      url: `/organizations/${organization.slug}/environments/`,
-      body: envs,
-    });
-    setActiveOrganization(organization);
-    await tick();
-  });
-
   beforeEach(function() {
     onChange.mockReset();
     onUpdate.mockReset();
     wrapper = mount(
       <MultipleEnvironmentSelector
         organization={organization}
+        selectedProjects={selectedProjects}
         onChange={onChange}
         onUpdate={onUpdate}
       />,
@@ -39,22 +44,8 @@ describe('MultipleEnvironmentSelector', function() {
     );
   });
 
-  it('fetches environments when mounting', async function() {
-    expect(getMock).toHaveBeenCalled();
-    await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
-    wrapper.update();
-    expect(wrapper.find('FetchOrganizationEnvironments')).toHaveLength(1);
-
-    // Close
-    wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
-    expect(wrapper.find('FetchOrganizationEnvironments')).toHaveLength(1);
-
-    wrapper.unmount();
-    expect(getMock).toHaveBeenCalledTimes(1);
-  });
-
   it('can select and change environments', async function() {
-    wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
+    await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
 
     // Select all envs
     envs.forEach((env, i) => {
@@ -64,13 +55,10 @@ describe('MultipleEnvironmentSelector', function() {
         .find('MultiSelect')
         .simulate('click', {});
     });
-    expect(onChange).toHaveBeenCalledTimes(2);
-    expect(onChange).toHaveBeenLastCalledWith(
-      envs.map(({name}) => name),
-      expect.anything()
-    );
+    expect(onChange).toHaveBeenCalledTimes(3);
+    expect(onChange).toHaveBeenLastCalledWith(envs, expect.anything());
 
-    wrapper.setProps({value: envs.map(({name}) => name)});
+    wrapper.setProps({value: envs});
     wrapper.update();
     wrapper
       .find('MultipleEnvironmentSelector')
@@ -79,6 +67,26 @@ describe('MultipleEnvironmentSelector', function() {
     expect(onUpdate).toHaveBeenCalledWith();
   });
 
+  it('will call onUpdate when project selection change causes invalid values', async function() {
+    await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
+
+    // Select 'production'
+    await wrapper
+      .find('MultipleEnvironmentSelector AutoCompleteItem MultiSelectWrapper')
+      .at(0)
+      .simulate('click');
+    await wrapper.update();
+
+    // Update project selection so that 'production' is no longer an option.
+    wrapper.setProps({selectedProjects: [2]});
+    await wrapper.update();
+
+    expect(onChange).toHaveBeenCalled();
+    expect(onUpdate).toHaveBeenCalled();
+    const selector = wrapper.find('MultipleEnvironmentSelector').instance();
+    expect(selector.state.selectedEnvs).toEqual(new Set([]));
+  });
+
   it('selects multiple environments and uses chevron to update', async function() {
     await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
 
@@ -107,4 +115,39 @@ describe('MultipleEnvironmentSelector', function() {
     wrapper.find('MultipleEnvironmentSelector StyledChevron').simulate('click');
     expect(onUpdate).not.toHaveBeenCalled();
   });
+
+  it('updates environment options when projects selection changes', async function() {
+    // project 2 only has 1 environment.
+    wrapper.setProps({selectedProjects: [2]});
+    wrapper.update();
+
+    await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
+    const items = wrapper.find('MultipleEnvironmentSelector EnvironmentRow');
+    expect(items.length).toEqual(1);
+    expect(items.at(0).text()).toBe('dev');
+  });
+
+  it('shows the all environments when there are no projects selected', async function() {
+    wrapper.setProps({selectedProjects: []});
+    wrapper.update();
+
+    await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
+    const items = wrapper.find('MultipleEnvironmentSelector EnvironmentRow');
+
+    expect(items.length).toEqual(3);
+    expect(items.at(0).text()).toBe('production');
+    expect(items.at(1).text()).toBe('staging');
+    expect(items.at(2).text()).toBe('dev');
+  });
+
+  it('shows the distinct union of environments across all projects', async function() {
+    wrapper.setProps({selectedProjects: [1, 2]});
+    await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
+    const items = wrapper.find('MultipleEnvironmentSelector EnvironmentRow');
+
+    expect(items.length).toEqual(3);
+    expect(items.at(0).text()).toBe('production');
+    expect(items.at(1).text()).toBe('staging');
+    expect(items.at(2).text()).toBe('dev');
+  });
 });
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index d02665187c..348cd88af7 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -286,6 +286,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                     }
                     project={
                       Object {
+                        "environments": Array [],
                         "hasAccess": true,
                         "id": "2",
                         "isBookmarked": false,
@@ -342,6 +343,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                             <ProjectLabel
                               project={
                                 Object {
+                                  "environments": Array [],
                                   "hasAccess": true,
                                   "id": "2",
                                   "isBookmarked": false,
@@ -364,6 +366,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                 className="project-label"
                                 project={
                                   Object {
+                                    "environments": Array [],
                                     "hasAccess": true,
                                     "id": "2",
                                     "isBookmarked": false,
diff --git a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
index 9ab1cf913e..baf82d3bee 100644
--- a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
@@ -38,6 +38,7 @@ exports[`Project Ownership Input renders 1`] = `
   }
   project={
     Object {
+      "environments": Array [],
       "hasAccess": true,
       "id": "2",
       "isBookmarked": false,
@@ -79,6 +80,7 @@ exports[`Project Ownership Input renders 1`] = `
     }
     project={
       Object {
+        "environments": Array [],
         "hasAccess": true,
         "id": "2",
         "isBookmarked": false,
@@ -562,6 +564,7 @@ exports[`Project Ownership Input renders 1`] = `
                 }
                 project={
                   Object {
+                    "environments": Array [],
                     "hasAccess": true,
                     "id": "2",
                     "isBookmarked": false,
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
index 2aff9cbdcf..259db00360 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
@@ -122,6 +122,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
         }
         project={
           Object {
+            "environments": Array [],
             "hasAccess": true,
             "id": "2",
             "isBookmarked": false,
@@ -2653,6 +2654,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
         }
         project={
           Object {
+            "environments": Array [],
             "hasAccess": true,
             "id": "2",
             "isBookmarked": false,
diff --git a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
index d40aef23d9..2db64628a5 100644
--- a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
@@ -117,6 +117,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
               "dataScrubberDefaults": false,
               "digestsMaxDelay": 60,
               "digestsMinDelay": 5,
+              "environments": Array [],
               "features": Array [],
               "hasAccess": true,
               "id": "2",
diff --git a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
index 481e62d0c8..f4d2ce4491 100644
--- a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
@@ -44,6 +44,7 @@ exports[`ProjectPluginDetails renders 1`] = `
   }
   project={
     Object {
+      "environments": Array [],
       "hasAccess": true,
       "id": "2",
       "isBookmarked": false,
@@ -105,6 +106,7 @@ exports[`ProjectPluginDetails renders 1`] = `
     }
     project={
       Object {
+        "environments": Array [],
         "hasAccess": true,
         "id": "2",
         "isBookmarked": false,
@@ -369,6 +371,7 @@ exports[`ProjectPluginDetails renders 1`] = `
                 }
                 project={
                   Object {
+                    "environments": Array [],
                     "hasAccess": true,
                     "id": "2",
                     "isBookmarked": false,
@@ -543,6 +546,7 @@ exports[`ProjectPluginDetails renders 1`] = `
                                 }
                                 project={
                                   Object {
+                                    "environments": Array [],
                                     "hasAccess": true,
                                     "id": "2",
                                     "isBookmarked": false,
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index d7f687eabe..3720e9639a 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -46,6 +46,7 @@ exports[`RuleBuilder renders 1`] = `
   }
   project={
     Object {
+      "environments": Array [],
       "hasAccess": true,
       "id": "2",
       "isBookmarked": false,
@@ -537,6 +538,7 @@ exports[`RuleBuilder renders 1`] = `
               }
               project={
                 Object {
+                  "environments": Array [],
                   "hasAccess": true,
                   "id": "2",
                   "isBookmarked": false,
@@ -1124,6 +1126,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
   }
   project={
     Object {
+      "environments": Array [],
       "hasAccess": true,
       "id": "2",
       "isBookmarked": false,
@@ -1831,6 +1834,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
               }
               project={
                 Object {
+                  "environments": Array [],
                   "hasAccess": true,
                   "id": "2",
                   "isBookmarked": false,
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
index b21f882a19..7b9b2ddffc 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
@@ -71,6 +71,7 @@ exports[`GroupActions render() renders correctly 1`] = `
         "dataScrubberDefaults": false,
         "digestsMaxDelay": 60,
         "digestsMinDelay": 5,
+        "environments": Array [],
         "features": Array [],
         "hasAccess": true,
         "id": "2448",
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/groupSimilar.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/groupSimilar.spec.jsx.snap
index 13569fad78..ef0552968a 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/groupSimilar.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/groupSimilar.spec.jsx.snap
@@ -28,6 +28,7 @@ exports[`Issues Similar View renders with mocked data 1`] = `
   }
   project={
     Object {
+      "environments": Array [],
       "features": Array [
         "similarity-view",
       ],
diff --git a/tests/js/spec/views/organizationEvents/index.spec.jsx b/tests/js/spec/views/organizationEvents/index.spec.jsx
index a5baa03b11..1bd0e544f2 100644
--- a/tests/js/spec/views/organizationEvents/index.spec.jsx
+++ b/tests/js/spec/views/organizationEvents/index.spec.jsx
@@ -9,8 +9,12 @@ import OrganizationEventsContainer from 'app/views/organizationEvents';
 
 describe('OrganizationEvents', function() {
   let wrapper;
+  const environments = ['production', 'staging'];
   const {organization, router, routerContext} = initializeOrg({
-    projects: [{isMember: true}, {isMember: true, slug: 'new-project', id: 3}],
+    projects: [
+      {isMember: true, environments},
+      {isMember: true, slug: 'new-project', id: 3, environments},
+    ],
     organization: {
       features: ['events', 'global-views'],
     },
@@ -27,10 +31,6 @@ describe('OrganizationEvents', function() {
       url: '/organizations/org-slug/tags/',
       body: [{count: 1, tag: 'transaction'}, {count: 2, tag: 'mechanism'}],
     });
-    MockApiClient.addMockResponse({
-      url: `/organizations/${organization.slug}/environments/`,
-      body: TestStubs.Environments(),
-    });
 
     setActiveOrganization(organization);
     await tick();
diff --git a/tests/js/spec/views/organizationProjectsDashboard/__snapshots__/projectCard.spec.jsx.snap b/tests/js/spec/views/organizationProjectsDashboard/__snapshots__/projectCard.spec.jsx.snap
index 19671c4ef2..15197b1a26 100644
--- a/tests/js/spec/views/organizationProjectsDashboard/__snapshots__/projectCard.spec.jsx.snap
+++ b/tests/js/spec/views/organizationProjectsDashboard/__snapshots__/projectCard.spec.jsx.snap
@@ -9,6 +9,7 @@ exports[`ProjectCard renders 1`] = `
   }
   project={
     Object {
+      "environments": Array [],
       "hasAccess": true,
       "id": "2",
       "isBookmarked": false,
@@ -75,6 +76,7 @@ exports[`ProjectCard renders 1`] = `
                   }
                   project={
                     Object {
+                      "environments": Array [],
                       "hasAccess": true,
                       "id": "2",
                       "isBookmarked": false,
@@ -106,6 +108,7 @@ exports[`ProjectCard renders 1`] = `
                     }
                     project={
                       Object {
+                        "environments": Array [],
                         "hasAccess": true,
                         "id": "2",
                         "isBookmarked": false,
@@ -146,6 +149,7 @@ exports[`ProjectCard renders 1`] = `
                           hideOverflow={true}
                           project={
                             Object {
+                              "environments": Array [],
                               "hasAccess": true,
                               "id": "2",
                               "isBookmarked": false,
@@ -179,6 +183,7 @@ exports[`ProjectCard renders 1`] = `
                             hideAvatar={false}
                             project={
                               Object {
+                                "environments": Array [],
                                 "hasAccess": true,
                                 "id": "2",
                                 "isBookmarked": false,
@@ -216,6 +221,7 @@ exports[`ProjectCard renders 1`] = `
                                     className="css-0"
                                     project={
                                       Object {
+                                        "environments": Array [],
                                         "hasAccess": true,
                                         "id": "2",
                                         "isBookmarked": false,
@@ -243,6 +249,7 @@ exports[`ProjectCard renders 1`] = `
                                       hasTooltip={false}
                                       project={
                                         Object {
+                                          "environments": Array [],
                                           "hasAccess": true,
                                           "id": "2",
                                           "isBookmarked": false,
@@ -270,6 +277,7 @@ exports[`ProjectCard renders 1`] = `
                                         hasTooltip={false}
                                         project={
                                           Object {
+                                            "environments": Array [],
                                             "hasAccess": true,
                                             "id": "2",
                                             "isBookmarked": false,
@@ -648,6 +656,7 @@ exports[`ProjectCard renders 1`] = `
               orgId="org-slug"
               project={
                 Object {
+                  "environments": Array [],
                   "hasAccess": true,
                   "id": "2",
                   "isBookmarked": false,
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
index d08d6af0da..737cc75721 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
@@ -383,6 +383,7 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                 }
                                 project={
                                   Object {
+                                    "environments": Array [],
                                     "hasAccess": true,
                                     "id": "2",
                                     "isBookmarked": false,
@@ -431,6 +432,7 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                         <ProjectLabel
                                           project={
                                             Object {
+                                              "environments": Array [],
                                               "hasAccess": true,
                                               "id": "2",
                                               "isBookmarked": false,
@@ -445,6 +447,7 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                             className="project-label"
                                             project={
                                               Object {
+                                                "environments": Array [],
                                                 "hasAccess": true,
                                                 "id": "2",
                                                 "isBookmarked": false,
@@ -487,6 +490,7 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                 key="2"
                                 project={
                                   Object {
+                                    "environments": Array [],
                                     "hasAccess": true,
                                     "id": "2",
                                     "isBookmarked": false,
diff --git a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
index a57e87a9f6..b721e32ef6 100644
--- a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
+++ b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
@@ -107,6 +107,7 @@ exports[`Stream render() displays the group list 1`] = `
               "dataScrubberDefaults": false,
               "digestsMaxDelay": 60,
               "digestsMinDelay": 5,
+              "environments": Array [],
               "features": Array [],
               "firstEvent": true,
               "hasAccess": true,
@@ -351,6 +352,7 @@ exports[`Stream toggles environment select all environments 1`] = `
               "dataScrubberDefaults": false,
               "digestsMaxDelay": 60,
               "digestsMinDelay": 5,
+              "environments": Array [],
               "features": Array [],
               "firstEvent": true,
               "hasAccess": true,
diff --git a/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
index c9ba417188..00a0b64ede 100644
--- a/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
+++ b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
@@ -29,6 +29,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
       "onboardingTasks": Array [],
       "projects": Array [
         Object {
+          "environments": Array [],
           "hasAccess": true,
           "id": "2",
           "isBookmarked": false,
@@ -86,6 +87,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
             "onboardingTasks": Array [],
             "projects": Array [
               Object {
+                "environments": Array [],
                 "hasAccess": true,
                 "id": "2",
                 "isBookmarked": false,
@@ -134,6 +136,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
               "onboardingTasks": Array [],
               "projects": Array [
                 Object {
+                  "environments": Array [],
                   "hasAccess": true,
                   "id": "2",
                   "isBookmarked": false,
@@ -154,6 +157,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
           }
           project={
             Object {
+              "environments": Array [],
               "hasAccess": true,
               "id": "2",
               "isBookmarked": false,
@@ -188,6 +192,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                 "onboardingTasks": Array [],
                 "projects": Array [
                   Object {
+                    "environments": Array [],
                     "hasAccess": true,
                     "id": "2",
                     "isBookmarked": false,
@@ -234,6 +239,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                   "onboardingTasks": Array [],
                   "projects": Array [
                     Object {
+                      "environments": Array [],
                       "hasAccess": true,
                       "id": "2",
                       "isBookmarked": false,
@@ -382,6 +388,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                     "onboardingTasks": Array [],
                     "projects": Array [
                       Object {
+                        "environments": Array [],
                         "hasAccess": true,
                         "id": "2",
                         "isBookmarked": false,
@@ -554,6 +561,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                 "onboardingTasks": Array [],
                                 "projects": Array [
                                   Object {
+                                    "environments": Array [],
                                     "hasAccess": true,
                                     "id": "2",
                                     "isBookmarked": false,
@@ -575,6 +583,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                             projects={
                               Array [
                                 Object {
+                                  "environments": Array [],
                                   "hasAccess": true,
                                   "id": "2",
                                   "isBookmarked": false,
@@ -615,6 +624,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                   "onboardingTasks": Array [],
                                   "projects": Array [
                                     Object {
+                                      "environments": Array [],
                                       "hasAccess": true,
                                       "id": "2",
                                       "isBookmarked": false,
@@ -636,6 +646,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                               projects={
                                 Array [
                                   Object {
+                                    "environments": Array [],
                                     "hasAccess": true,
                                     "id": "2",
                                     "isBookmarked": false,
@@ -679,6 +690,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                     "onboardingTasks": Array [],
                                     "projects": Array [
                                       Object {
+                                        "environments": Array [],
                                         "hasAccess": true,
                                         "id": "2",
                                         "isBookmarked": false,
@@ -701,6 +713,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                 projects={
                                   Array [
                                     Object {
+                                      "environments": Array [],
                                       "hasAccess": true,
                                       "id": "2",
                                       "isBookmarked": false,
@@ -738,6 +751,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                         "label": [Function],
                                         "searchKey": "project-slug",
                                         "value": Object {
+                                          "environments": Array [],
                                           "hasAccess": true,
                                           "id": "2",
                                           "isBookmarked": false,
@@ -781,6 +795,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                           "label": [Function],
                                           "searchKey": "project-slug",
                                           "value": Object {
+                                            "environments": Array [],
                                             "hasAccess": true,
                                             "id": "2",
                                             "isBookmarked": false,
@@ -1095,6 +1110,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                 "onboardingTasks": Array [],
                                 "projects": Array [
                                   Object {
+                                    "environments": Array [],
                                     "hasAccess": true,
                                     "id": "2",
                                     "isBookmarked": false,
@@ -1113,6 +1129,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                 "teams": Array [],
                               }
                             }
+                            selectedProjects={Array []}
                             value={Array []}
                           >
                             <MultipleEnvironmentSelector
@@ -1140,6 +1157,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                   "onboardingTasks": Array [],
                                   "projects": Array [
                                     Object {
+                                      "environments": Array [],
                                       "hasAccess": true,
                                       "id": "2",
                                       "isBookmarked": false,
@@ -1158,98 +1176,81 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                   "teams": Array [],
                                 }
                               }
+                              selectedProjects={Array []}
                               value={Array []}
                             >
-                              <withApi(FetchOrganizationEnvironments)
-                                organization={
+                              <StyledDropdownAutoComplete
+                                alignMenu="left"
+                                allowActorToggle={true}
+                                blendCorner={false}
+                                closeOnSelect={true}
+                                emptyHidesInput={true}
+                                emptyMessage="You have no environments"
+                                inputProps={
                                   Object {
-                                    "access": Array [
-                                      "org:read",
-                                      "org:write",
-                                      "org:admin",
-                                      "project:read",
-                                      "project:write",
-                                      "project:admin",
-                                      "team:read",
-                                      "team:write",
-                                      "team:admin",
-                                    ],
-                                    "features": Array [
-                                      "sentry10",
-                                    ],
-                                    "id": "3",
-                                    "name": "Organization Name",
-                                    "onboardingTasks": Array [],
-                                    "projects": Array [
-                                      Object {
-                                        "hasAccess": true,
-                                        "id": "2",
-                                        "isBookmarked": false,
-                                        "isMember": true,
-                                        "name": "Project Name",
-                                        "slug": "project-slug",
-                                        "teams": Array [],
-                                      },
-                                    ],
-                                    "scrapeJavaScript": true,
-                                    "slug": "org-slug",
-                                    "status": Object {
-                                      "id": "active",
-                                      "name": "active",
+                                    "style": Object {
+                                      "padding": 8,
+                                      "paddingLeft": 14,
                                     },
-                                    "teams": Array [],
                                   }
                                 }
+                                items={Array []}
+                                maxHeight={500}
+                                menuProps={
+                                  Object {
+                                    "style": Object {
+                                      "position": "relative",
+                                    },
+                                  }
+                                }
+                                noResultsMessage="No environments found"
+                                onClose={[Function]}
+                                onSelect={[Function]}
+                                rootClassName="css-1utm1zz-rootClassName"
+                                searchPlaceholder="Filter environments"
+                                virtualizedHeight={40}
+                                zIndex={1001}
                               >
-                                <FetchOrganizationEnvironments
-                                  api={Client {}}
-                                  organization={
+                                <DropdownAutoComplete
+                                  alignMenu="left"
+                                  allowActorToggle={true}
+                                  blendCorner={false}
+                                  className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
+                                  closeOnSelect={true}
+                                  emptyHidesInput={true}
+                                  emptyMessage="You have no environments"
+                                  inputProps={
                                     Object {
-                                      "access": Array [
-                                        "org:read",
-                                        "org:write",
-                                        "org:admin",
-                                        "project:read",
-                                        "project:write",
-                                        "project:admin",
-                                        "team:read",
-                                        "team:write",
-                                        "team:admin",
-                                      ],
-                                      "features": Array [
-                                        "sentry10",
-                                      ],
-                                      "id": "3",
-                                      "name": "Organization Name",
-                                      "onboardingTasks": Array [],
-                                      "projects": Array [
-                                        Object {
-                                          "hasAccess": true,
-                                          "id": "2",
-                                          "isBookmarked": false,
-                                          "isMember": true,
-                                          "name": "Project Name",
-                                          "slug": "project-slug",
-                                          "teams": Array [],
-                                        },
-                                      ],
-                                      "scrapeJavaScript": true,
-                                      "slug": "org-slug",
-                                      "status": Object {
-                                        "id": "active",
-                                        "name": "active",
+                                      "style": Object {
+                                        "padding": 8,
+                                        "paddingLeft": 14,
+                                      },
+                                    }
+                                  }
+                                  items={Array []}
+                                  maxHeight={500}
+                                  menuProps={
+                                    Object {
+                                      "style": Object {
+                                        "position": "relative",
                                       },
-                                      "teams": Array [],
                                     }
                                   }
+                                  noResultsMessage="No environments found"
+                                  onClose={[Function]}
+                                  onSelect={[Function]}
+                                  rootClassName="css-1utm1zz-rootClassName"
+                                  searchPlaceholder="Filter environments"
+                                  virtualizedHeight={40}
+                                  zIndex={1001}
                                 >
-                                  <StyledDropdownAutoComplete
+                                  <DropdownAutoCompleteMenu
                                     alignMenu="left"
-                                    allowActorToggle={true}
                                     blendCorner={false}
+                                    className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
                                     closeOnSelect={true}
                                     emptyHidesInput={true}
-                                    emptyMessage={<LoadingIndicator />}
+                                    emptyMessage="You have no environments"
                                     inputProps={
                                       Object {
                                         "style": Object {
@@ -1275,107 +1276,79 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                     virtualizedHeight={40}
                                     zIndex={1001}
                                   >
-                                    <DropdownAutoComplete
-                                      alignMenu="left"
-                                      allowActorToggle={true}
-                                      blendCorner={false}
-                                      className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
+                                    <AutoComplete
                                       closeOnSelect={true}
-                                      emptyHidesInput={true}
-                                      emptyMessage={<LoadingIndicator />}
-                                      inputProps={
-                                        Object {
-                                          "style": Object {
-                                            "padding": 8,
-                                            "paddingLeft": 14,
-                                          },
-                                        }
-                                      }
-                                      items={Array []}
-                                      maxHeight={500}
-                                      menuProps={
-                                        Object {
-                                          "style": Object {
-                                            "position": "relative",
-                                          },
-                                        }
-                                      }
-                                      noResultsMessage="No environments found"
+                                      disabled={false}
+                                      inputIsActor={false}
+                                      itemToString={[Function]}
                                       onClose={[Function]}
                                       onSelect={[Function]}
-                                      rootClassName="css-1utm1zz-rootClassName"
-                                      searchPlaceholder="Filter environments"
+                                      resetInputOnClose={true}
+                                      shouldSelectWithEnter={true}
+                                      shouldSelectWithTab={false}
                                       virtualizedHeight={40}
                                       zIndex={1001}
                                     >
-                                      <DropdownAutoCompleteMenu
-                                        alignMenu="left"
-                                        blendCorner={false}
-                                        className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
-                                        closeOnSelect={true}
-                                        emptyHidesInput={true}
-                                        emptyMessage={<LoadingIndicator />}
-                                        inputProps={
-                                          Object {
-                                            "style": Object {
-                                              "padding": 8,
-                                              "paddingLeft": 14,
-                                            },
-                                          }
-                                        }
-                                        items={Array []}
-                                        maxHeight={500}
-                                        menuProps={
-                                          Object {
-                                            "style": Object {
-                                              "position": "relative",
-                                            },
-                                          }
-                                        }
-                                        noResultsMessage="No environments found"
-                                        onClose={[Function]}
-                                        onSelect={[Function]}
-                                        rootClassName="css-1utm1zz-rootClassName"
-                                        searchPlaceholder="Filter environments"
-                                        virtualizedHeight={40}
-                                        zIndex={1001}
+                                      <DropdownMenu
+                                        closeOnEscape={true}
+                                        isOpen={false}
+                                        keepMenuOpen={false}
+                                        onClickOutside={[Function]}
                                       >
-                                        <AutoComplete
-                                          closeOnSelect={true}
-                                          disabled={false}
-                                          inputIsActor={false}
-                                          itemToString={[Function]}
-                                          onClose={[Function]}
-                                          onSelect={[Function]}
-                                          resetInputOnClose={true}
-                                          shouldSelectWithEnter={true}
-                                          shouldSelectWithTab={false}
-                                          virtualizedHeight={40}
-                                          zIndex={1001}
+                                        <AutoCompleteRoot
+                                          className="css-1utm1zz-rootClassName"
                                         >
-                                          <DropdownMenu
-                                            closeOnEscape={true}
-                                            isOpen={false}
-                                            keepMenuOpen={false}
-                                            onClickOutside={[Function]}
+                                          <Component
+                                            className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
                                           >
-                                            <AutoCompleteRoot
-                                              className="css-1utm1zz-rootClassName"
+                                            <div
+                                              className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
                                             >
-                                              <Component
-                                                className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
+                                              <Actor
+                                                innerRef={[Function]}
+                                                isOpen={false}
+                                                onClick={[Function]}
+                                                onKeyDown={[Function]}
+                                                onMouseEnter={[Function]}
+                                                onMouseLeave={[Function]}
+                                                role="button"
+                                                style={
+                                                  Object {
+                                                    "outline": "none",
+                                                  }
+                                                }
+                                                tabIndex={-1}
                                               >
                                                 <div
-                                                  className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
+                                                  className="css-17fe80j-Actor e53us8t0"
+                                                  onClick={[Function]}
+                                                  onKeyDown={[Function]}
+                                                  onMouseEnter={[Function]}
+                                                  onMouseLeave={[Function]}
+                                                  role="button"
+                                                  style={
+                                                    Object {
+                                                      "outline": "none",
+                                                    }
+                                                  }
+                                                  tabIndex={-1}
                                                 >
-                                                  <Actor
+                                                  <StyledHeaderItem
+                                                    hasChanges={false}
+                                                    hasSelected={false}
+                                                    icon={
+                                                      <StyledInlineSvg
+                                                        src="icon-window"
+                                                      />
+                                                    }
                                                     innerRef={[Function]}
                                                     isOpen={false}
+                                                    onClear={[Function]}
                                                     onClick={[Function]}
                                                     onKeyDown={[Function]}
                                                     onMouseEnter={[Function]}
                                                     onMouseLeave={[Function]}
-                                                    role="button"
+                                                    onSubmit={[Function]}
                                                     style={
                                                       Object {
                                                         "outline": "none",
@@ -1383,13 +1356,22 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                                     }
                                                     tabIndex={-1}
                                                   >
-                                                    <div
-                                                      className="css-17fe80j-Actor e53us8t0"
+                                                    <ForwardRef
+                                                      className="css-22y332-StyledHeaderItem e1gsuvme0"
+                                                      hasChanges={false}
+                                                      hasSelected={false}
+                                                      icon={
+                                                        <StyledInlineSvg
+                                                          src="icon-window"
+                                                        />
+                                                      }
+                                                      isOpen={false}
+                                                      onClear={[Function]}
                                                       onClick={[Function]}
                                                       onKeyDown={[Function]}
                                                       onMouseEnter={[Function]}
                                                       onMouseLeave={[Function]}
-                                                      role="button"
+                                                      onSubmit={[Function]}
                                                       style={
                                                         Object {
                                                           "outline": "none",
@@ -1397,7 +1379,9 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                                       }
                                                       tabIndex={-1}
                                                     >
-                                                      <StyledHeaderItem
+                                                      <HeaderItem
+                                                        allowClear={true}
+                                                        className="css-22y332-StyledHeaderItem e1gsuvme0"
                                                         hasChanges={false}
                                                         hasSelected={false}
                                                         icon={
@@ -1420,22 +1404,15 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                                         }
                                                         tabIndex={-1}
                                                       >
-                                                        <ForwardRef
+                                                        <StyledHeaderItem
                                                           className="css-22y332-StyledHeaderItem e1gsuvme0"
-                                                          hasChanges={false}
                                                           hasSelected={false}
-                                                          icon={
-                                                            <StyledInlineSvg
-                                                              src="icon-window"
-                                                            />
-                                                          }
+                                                          innerRef={[Function]}
                                                           isOpen={false}
-                                                          onClear={[Function]}
                                                           onClick={[Function]}
                                                           onKeyDown={[Function]}
                                                           onMouseEnter={[Function]}
                                                           onMouseLeave={[Function]}
-                                                          onSubmit={[Function]}
                                                           style={
                                                             Object {
                                                               "outline": "none",
@@ -1443,24 +1420,12 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                                           }
                                                           tabIndex={-1}
                                                         >
-                                                          <HeaderItem
-                                                            allowClear={true}
-                                                            className="css-22y332-StyledHeaderItem e1gsuvme0"
-                                                            hasChanges={false}
-                                                            hasSelected={false}
-                                                            icon={
-                                                              <StyledInlineSvg
-                                                                src="icon-window"
-                                                              />
-                                                            }
-                                                            innerRef={[Function]}
-                                                            isOpen={false}
-                                                            onClear={[Function]}
+                                                          <div
+                                                            className="e1gsuvme0 css-1v6igws-StyledHeaderItem-StyledHeaderItem enk2k7v0"
                                                             onClick={[Function]}
                                                             onKeyDown={[Function]}
                                                             onMouseEnter={[Function]}
                                                             onMouseLeave={[Function]}
-                                                            onSubmit={[Function]}
                                                             style={
                                                               Object {
                                                                 "outline": "none",
@@ -1468,126 +1433,95 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                                             }
                                                             tabIndex={-1}
                                                           >
-                                                            <StyledHeaderItem
-                                                              className="css-22y332-StyledHeaderItem e1gsuvme0"
+                                                            <IconContainer
                                                               hasSelected={false}
-                                                              innerRef={[Function]}
-                                                              isOpen={false}
-                                                              onClick={[Function]}
-                                                              onKeyDown={[Function]}
-                                                              onMouseEnter={[Function]}
-                                                              onMouseLeave={[Function]}
-                                                              style={
-                                                                Object {
-                                                                  "outline": "none",
-                                                                }
-                                                              }
-                                                              tabIndex={-1}
                                                             >
-                                                              <div
-                                                                className="e1gsuvme0 css-1v6igws-StyledHeaderItem-StyledHeaderItem enk2k7v0"
-                                                                onClick={[Function]}
-                                                                onKeyDown={[Function]}
-                                                                onMouseEnter={[Function]}
-                                                                onMouseLeave={[Function]}
-                                                                style={
-                                                                  Object {
-                                                                    "outline": "none",
-                                                                  }
-                                                                }
-                                                                tabIndex={-1}
+                                                              <span
+                                                                className="css-1g4tz50-IconContainer enk2k7v2"
                                                               >
-                                                                <IconContainer
-                                                                  hasSelected={false}
-                                                                >
-                                                                  <span
-                                                                    className="css-1g4tz50-IconContainer enk2k7v2"
-                                                                  >
-                                                                    <StyledInlineSvg
-                                                                      src="icon-window"
-                                                                    >
-                                                                      <InlineSvg
-                                                                        className="css-1ctth4-StyledInlineSvg e1gsuvme1"
-                                                                        src="icon-window"
-                                                                      >
-                                                                        <StyledSvg
-                                                                          className="css-1ctth4-StyledInlineSvg e1gsuvme1"
-                                                                          height="1em"
-                                                                          viewBox={Object {}}
-                                                                          width="1em"
-                                                                        >
-                                                                          <svg
-                                                                            className="e1gsuvme1 css-1vh2z4q-StyledSvg-StyledInlineSvg e2idor0"
-                                                                            height="1em"
-                                                                            viewBox={Object {}}
-                                                                            width="1em"
-                                                                          >
-                                                                            <use
-                                                                              href="#test"
-                                                                              xlinkHref="#test"
-                                                                            />
-                                                                          </svg>
-                                                                        </StyledSvg>
-                                                                      </InlineSvg>
-                                                                    </StyledInlineSvg>
-                                                                  </span>
-                                                                </IconContainer>
-                                                                <Content>
-                                                                  <div
-                                                                    className="css-1yquznf-Content enk2k7v1"
-                                                                  >
-                                                                    All Environments
-                                                                  </div>
-                                                                </Content>
-                                                                <StyledChevron
-                                                                  hasChanges={false}
-                                                                  isOpen={false}
-                                                                  onClick={[Function]}
+                                                                <StyledInlineSvg
+                                                                  src="icon-window"
                                                                 >
-                                                                  <div
-                                                                    className="css-ft4nwy-StyledChevron enk2k7v4"
-                                                                    onClick={[Function]}
+                                                                  <InlineSvg
+                                                                    className="css-1ctth4-StyledInlineSvg e1gsuvme1"
+                                                                    src="icon-window"
                                                                   >
-                                                                    <InlineSvg
-                                                                      src="icon-chevron-down"
+                                                                    <StyledSvg
+                                                                      className="css-1ctth4-StyledInlineSvg e1gsuvme1"
+                                                                      height="1em"
+                                                                      viewBox={Object {}}
+                                                                      width="1em"
                                                                     >
-                                                                      <StyledSvg
+                                                                      <svg
+                                                                        className="e1gsuvme1 css-1vh2z4q-StyledSvg-StyledInlineSvg e2idor0"
                                                                         height="1em"
                                                                         viewBox={Object {}}
                                                                         width="1em"
                                                                       >
-                                                                        <svg
-                                                                          className="css-ryh69w-StyledSvg e2idor0"
-                                                                          height="1em"
-                                                                          viewBox={Object {}}
-                                                                          width="1em"
-                                                                        >
-                                                                          <use
-                                                                            href="#test"
-                                                                            xlinkHref="#test"
-                                                                          />
-                                                                        </svg>
-                                                                      </StyledSvg>
-                                                                    </InlineSvg>
-                                                                  </div>
-                                                                </StyledChevron>
+                                                                        <use
+                                                                          href="#test"
+                                                                          xlinkHref="#test"
+                                                                        />
+                                                                      </svg>
+                                                                    </StyledSvg>
+                                                                  </InlineSvg>
+                                                                </StyledInlineSvg>
+                                                              </span>
+                                                            </IconContainer>
+                                                            <Content>
+                                                              <div
+                                                                className="css-1yquznf-Content enk2k7v1"
+                                                              >
+                                                                All Environments
                                                               </div>
-                                                            </StyledHeaderItem>
-                                                          </HeaderItem>
-                                                        </ForwardRef>
-                                                      </StyledHeaderItem>
-                                                    </div>
-                                                  </Actor>
+                                                            </Content>
+                                                            <StyledChevron
+                                                              hasChanges={false}
+                                                              isOpen={false}
+                                                              onClick={[Function]}
+                                                            >
+                                                              <div
+                                                                className="css-ft4nwy-StyledChevron enk2k7v4"
+                                                                onClick={[Function]}
+                                                              >
+                                                                <InlineSvg
+                                                                  src="icon-chevron-down"
+                                                                >
+                                                                  <StyledSvg
+                                                                    height="1em"
+                                                                    viewBox={Object {}}
+                                                                    width="1em"
+                                                                  >
+                                                                    <svg
+                                                                      className="css-ryh69w-StyledSvg e2idor0"
+                                                                      height="1em"
+                                                                      viewBox={Object {}}
+                                                                      width="1em"
+                                                                    >
+                                                                      <use
+                                                                        href="#test"
+                                                                        xlinkHref="#test"
+                                                                      />
+                                                                    </svg>
+                                                                  </StyledSvg>
+                                                                </InlineSvg>
+                                                              </div>
+                                                            </StyledChevron>
+                                                          </div>
+                                                        </StyledHeaderItem>
+                                                      </HeaderItem>
+                                                    </ForwardRef>
+                                                  </StyledHeaderItem>
                                                 </div>
-                                              </Component>
-                                            </AutoCompleteRoot>
-                                          </DropdownMenu>
-                                        </AutoComplete>
-                                      </DropdownAutoCompleteMenu>
-                                    </DropdownAutoComplete>
-                                  </StyledDropdownAutoComplete>
-                                </FetchOrganizationEnvironments>
-                              </withApi(FetchOrganizationEnvironments)>
+                                              </Actor>
+                                            </div>
+                                          </Component>
+                                        </AutoCompleteRoot>
+                                      </DropdownMenu>
+                                    </AutoComplete>
+                                  </DropdownAutoCompleteMenu>
+                                </DropdownAutoComplete>
+                              </StyledDropdownAutoComplete>
                             </MultipleEnvironmentSelector>
                           </withApi(MultipleEnvironmentSelector)>
                         </div>
@@ -1632,6 +1566,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                 "onboardingTasks": Array [],
                                 "projects": Array [
                                   Object {
+                                    "environments": Array [],
                                     "hasAccess": true,
                                     "id": "2",
                                     "isBookmarked": false,
@@ -1886,6 +1821,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                     "onboardingTasks": Array [],
                     "projects": Array [
                       Object {
+                        "environments": Array [],
                         "hasAccess": true,
                         "id": "2",
                         "isBookmarked": false,
