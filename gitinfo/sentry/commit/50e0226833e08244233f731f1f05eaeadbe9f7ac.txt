commit 50e0226833e08244233f731f1f05eaeadbe9f7ac
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Feb 15 11:30:56 2018 -0800

    fix(ui): Fix PluginConfig calling disable plugin multiple times (#7215)
    
    * Use es6 class + add display name for PluginList

diff --git a/src/sentry/static/sentry/app/components/pluginConfig.jsx b/src/sentry/static/sentry/app/components/pluginConfig.jsx
index 59512d7d5c..204c50d800 100644
--- a/src/sentry/static/sentry/app/components/pluginConfig.jsx
+++ b/src/sentry/static/sentry/app/components/pluginConfig.jsx
@@ -4,7 +4,6 @@ import React from 'react';
 import _ from 'lodash';
 import createReactClass from 'create-react-class';
 
-import {disablePlugin} from '../actionCreators/plugins';
 import {t} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
 import Button from './buttons/button';
@@ -75,9 +74,6 @@ const PluginConfig = createReactClass({
   },
 
   disablePlugin() {
-    let {organization, project, data} = this.props;
-    disablePlugin({projectId: project.slug, orgId: organization.slug, pluginId: data.id});
-
     this.props.onDisablePlugin(this.props.data);
   },
 
diff --git a/src/sentry/static/sentry/app/components/pluginList.jsx b/src/sentry/static/sentry/app/components/pluginList.jsx
index 1c2d426feb..3573c2a43a 100644
--- a/src/sentry/static/sentry/app/components/pluginList.jsx
+++ b/src/sentry/static/sentry/app/components/pluginList.jsx
@@ -1,35 +1,26 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import createReactClass from 'create-react-class';
 
 import {enablePlugin, disablePlugin} from '../actionCreators/plugins';
-import ApiMixin from '../mixins/apiMixin';
 import InactivePlugins from './inactivePlugins';
 import PluginConfig from './pluginConfig';
 import {t} from '../locale';
 
-
-export default createReactClass({
-  displayName: 'PluginList',
-
-  propTypes: {
+export default class PluginList extends React.Component {
+  static propTypes = {
     organization: PropTypes.object.isRequired,
     project: PropTypes.object.isRequired,
     pluginList: PropTypes.array.isRequired,
     onDisablePlugin: PropTypes.func.isRequired,
     onEnablePlugin: PropTypes.func.isRequired,
-  },
-
-  mixins: [ApiMixin],
+  };
 
-  getDefaultProps() {
-    return {
-      onDisablePlugin: () => {},
-      onEnablePlugin: () => {},
-    };
-  },
+  static defaultProps = {
+    onDisablePlugin: () => {},
+    onEnablePlugin: () => {},
+  };
 
-  handleEnablePlugin(plugin) {
+  handleEnablePlugin = plugin => {
     let {organization, project} = this.props;
     enablePlugin({
       projectId: project.slug,
@@ -38,9 +29,9 @@ export default createReactClass({
     });
 
     this.props.onEnablePlugin(plugin);
-  },
+  };
 
-  handleDisablePlugin(plugin) {
+  handleDisablePlugin = plugin => {
     let {organization, project} = this.props;
     disablePlugin({
       projectId: project.slug,
@@ -49,7 +40,7 @@ export default createReactClass({
     });
 
     this.props.onDisablePlugin(plugin);
-  },
+  };
 
   render() {
     let {organization, pluginList, project} = this.props;
@@ -86,5 +77,5 @@ export default createReactClass({
         />
       </div>
     );
-  },
-});
+  }
+}
