commit bfc7752a86e447cd47dcf6b56f768c83159538be
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Mar 14 16:43:37 2018 -0700

    test: Add tests to cover owner assignee search/endpoint results

diff --git a/tests/sentry/api/endpoints/test_organization_member_issues_assigned.py b/tests/sentry/api/endpoints/test_organization_member_issues_assigned.py
index dc69b2ded6..43d133a539 100644
--- a/tests/sentry/api/endpoints/test_organization_member_issues_assigned.py
+++ b/tests/sentry/api/endpoints/test_organization_member_issues_assigned.py
@@ -89,3 +89,32 @@ class OrganizationMemberIssuesAssignedTest(APITestCase):
         assert resp.status_code == 200
         assert len(resp.data) == 1
         assert resp.data[0]['id'] == six.text_type(group1.id)
+
+    def test_team_does_not_return_all_org_teams_for_owners(self):
+        now = timezone.now()
+        user = self.create_user('foo@example.com')
+        org = self.create_organization(name='foo')
+        team = self.create_team(name='foo', organization=org)
+        self.create_member(
+            organization=org,
+            user=user,
+            role='owner',
+            teams=[],
+        )
+        project1 = self.create_project(name='foo', organization=org, teams=[team])
+        group1 = self.create_group(project=project1)
+        GroupAssignee.objects.create(
+            group=group1,
+            project=project1,
+            team=team,
+            date_added=now,
+        )
+
+        path = reverse('sentry-api-0-organization-member-issues-assigned', args=[org.slug, 'me'])
+
+        self.login_as(user)
+
+        resp = self.client.get(path)
+
+        assert resp.status_code == 200
+        assert len(resp.data) == 0
diff --git a/tests/sentry/search/django/tests.py b/tests/sentry/search/django/tests.py
index 5f773610b2..8f6607d5be 100644
--- a/tests/sentry/search/django/tests.py
+++ b/tests/sentry/search/django/tests.py
@@ -289,6 +289,18 @@ class DjangoSearchBackendTest(TestCase):
         results = self.backend.query(self.project, assigned_to=other_user)
         assert set(results) == set([])
 
+        owner = self.create_user()
+        self.create_member(
+            organization=self.project.organization,
+            user=owner,
+            role='owner',
+            teams=[],
+        )
+
+        # test that owners don't see results for all teams
+        results = self.backend.query(self.project, assigned_to=owner)
+        assert set(results) == set([])
+
     def test_subscribed_by(self):
         results = self.backend.query(
             self.group1.project,
