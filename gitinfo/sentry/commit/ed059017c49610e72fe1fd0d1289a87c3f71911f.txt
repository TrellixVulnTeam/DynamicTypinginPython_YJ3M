commit ed059017c49610e72fe1fd0d1289a87c3f71911f
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Sep 18 15:38:10 2018 -0700

    feat(discover): Add GET request for discover saved queries (#9794)

diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index a0e521f9ea..6e17a72006 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -129,6 +129,13 @@ class OrganizationAuthProviderPermission(OrganizationPermission):
     }
 
 
+class OrganizationDiscoverPermission(OrganizationPermission):
+    scope_map = {
+        'GET': ['org:read', 'project:read'],
+        'POST': ['org:read', 'project:read'],
+    }
+
+
 class OrganizationEndpoint(Endpoint):
     permission_classes = (OrganizationPermission, )
 
diff --git a/src/sentry/api/endpoints/organization_discover_query.py b/src/sentry/api/endpoints/organization_discover_query.py
index 973edbaf60..9983ff4d53 100644
--- a/src/sentry/api/endpoints/organization_discover_query.py
+++ b/src/sentry/api/endpoints/organization_discover_query.py
@@ -13,7 +13,7 @@ from sentry.utils.dates import (
 )
 
 from sentry.api.serializers.rest_framework import ListField
-from sentry.api.bases.organization import OrganizationPermission
+from sentry.api.bases.organization import OrganizationDiscoverPermission
 from sentry.api.bases import OrganizationEndpoint
 from sentry.models import Project, ProjectStatus, OrganizationMember, OrganizationMemberTeam
 from sentry.utils import snuba
@@ -21,13 +21,7 @@ from sentry import roles
 from sentry import features
 
 
-class OrganizationDiscoverPermission(OrganizationPermission):
-    scope_map = {
-        'POST': ['org:read', 'project:read']
-    }
-
-
-class DiscoverSerializer(serializers.Serializer):
+class DiscoverQuerySerializer(serializers.Serializer):
     projects = ListField(
         child=serializers.IntegerField(),
         required=True,
@@ -62,7 +56,7 @@ class DiscoverSerializer(serializers.Serializer):
     )
 
     def __init__(self, *args, **kwargs):
-        super(DiscoverSerializer, self).__init__(*args, **kwargs)
+        super(DiscoverQuerySerializer, self).__init__(*args, **kwargs)
         self.member = OrganizationMember.objects.get(
             user=self.context['user'], organization=self.context['organization'])
 
@@ -189,7 +183,7 @@ class OrganizationDiscoverQueryEndpoint(OrganizationEndpoint):
         if not features.has('organizations:discover', organization, actor=request.user):
             return self.respond(status=404)
 
-        serializer = DiscoverSerializer(
+        serializer = DiscoverQuerySerializer(
             data=request.DATA, context={
                 'organization': organization, 'user': request.user})
 
diff --git a/src/sentry/api/endpoints/organization_discover_saved_queries.py b/src/sentry/api/endpoints/organization_discover_saved_queries.py
new file mode 100644
index 0000000000..87875cb607
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_discover_saved_queries.py
@@ -0,0 +1,29 @@
+from __future__ import absolute_import
+
+from sentry.api.bases.organization import OrganizationDiscoverPermission
+from sentry.api.bases import OrganizationEndpoint
+from sentry.models import DiscoverSavedQuery
+
+from sentry.api.serializers import serialize
+from rest_framework.response import Response
+
+from sentry import features
+
+
+class OrganizationDiscoverSavedQueriesEndpoint(OrganizationEndpoint):
+    permission_classes = (OrganizationDiscoverPermission, )
+
+    def get(self, request, organization):
+        """
+        List saved queries for organization
+        """
+        if not features.has('organizations:discover', organization, actor=request.user):
+            return self.respond(status=404)
+
+        saved_queries = list(
+            DiscoverSavedQuery.objects.filter(
+                organization=organization,
+            ).order_by('name')
+        )
+
+        return Response(serialize(saved_queries), status=200)
diff --git a/src/sentry/api/serializers/models/discoversavedquery.py b/src/sentry/api/serializers/models/discoversavedquery.py
new file mode 100644
index 0000000000..a3145fee84
--- /dev/null
+++ b/src/sentry/api/serializers/models/discoversavedquery.py
@@ -0,0 +1,17 @@
+from __future__ import absolute_import
+
+import six
+from sentry.api.serializers import Serializer, register
+from sentry.models import DiscoverSavedQuery
+
+
+@register(DiscoverSavedQuery)
+class DiscoverSavedQuerySerializer(Serializer):
+    def serialize(self, obj, attrs, user, *args, **kwargs):
+        return {
+            'id': six.text_type(obj.id),
+            'name': obj.name,
+            'query': obj.query,
+            'dateCreated': obj.date_created,
+            'dateUpdated': obj.date_updated,
+        }
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index a967be1729..09186713fd 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -59,6 +59,7 @@ from .endpoints.organization_auth_provider_send_reminders import OrganizationAut
 from .endpoints.organization_avatar import OrganizationAvatarEndpoint
 from .endpoints.organization_details import OrganizationDetailsEndpoint
 from .endpoints.organization_discover_query import OrganizationDiscoverQueryEndpoint
+from .endpoints.organization_discover_saved_queries import OrganizationDiscoverSavedQueriesEndpoint
 from .endpoints.organization_health import OrganizationHealthTopEndpoint, OrganizationHealthGraphEndpoint
 from .endpoints.organization_shortid import ShortIdLookupEndpoint
 from .endpoints.organization_environments import OrganizationEnvironmentsEndpoint
@@ -379,6 +380,11 @@ urlpatterns = patterns(
         OrganizationDiscoverQueryEndpoint.as_view(),
         name='sentry-api-0-organization-discover-query'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/discover/saved/$',
+        OrganizationDiscoverSavedQueriesEndpoint.as_view(),
+        name='sentry-api-0-organization-discover-saved-queries'
+    ),
     url(
         r'^organizations/(?P<organization_slug>[^\/]+)/health/top/$',
         OrganizationHealthTopEndpoint.as_view(),
diff --git a/tests/snuba/test_organization_discover_query.py b/tests/snuba/test_organization_discover_query.py
index f5a31dd265..978c1ad526 100644
--- a/tests/snuba/test_organization_discover_query.py
+++ b/tests/snuba/test_organization_discover_query.py
@@ -1,8 +1,6 @@
 from __future__ import absolute_import
 
 from datetime import datetime, timedelta
-import time
-import uuid
 
 from sentry.testutils import APITestCase
 from django.core.urlresolvers import reverse
@@ -24,16 +22,16 @@ class OrganizationDiscoverQueryTest(APITestCase, SnubaTestCase):
             organization=self.org,
         )
 
-        events = [{
-            'event_id': uuid.uuid4().hex,
-            'primary_hash': uuid.uuid4().hex,
-            'project_id': self.project.id,
-            'message': 'message!',
-            'platform': 'python',
-            'datetime': one_second_ago.strftime('%Y-%m-%dT%H:%M:%S.%fZ'),
-            'data': {
-                'received': time.mktime(one_second_ago.timetuple()),
-                'exception': {
+        self.group = self.create_group(project=self.project)
+
+        self.event = self.create_event(
+            group=self.group,
+            message="message!",
+            platform="python",
+            datetime=one_second_ago,
+            tags={'environment': 'production'},
+            data={
+                'sentry.interfaces.Exception': {
                     'values': [
                         {
                             'type': 'ValidationError',
@@ -55,12 +53,9 @@ class OrganizationDiscoverQueryTest(APITestCase, SnubaTestCase):
                             },
                         }
                     ]
-                },
+                }
             },
-
-        }]
-
-        self.snuba_insert(events)
+        )
 
     def test(self):
         with self.feature('organizations:discover'):
diff --git a/tests/snuba/test_organization_discover_saved_queries.py b/tests/snuba/test_organization_discover_saved_queries.py
new file mode 100644
index 0000000000..2dd49cbbc3
--- /dev/null
+++ b/tests/snuba/test_organization_discover_saved_queries.py
@@ -0,0 +1,38 @@
+from __future__ import absolute_import
+
+from sentry.testutils import APITestCase
+from django.core.urlresolvers import reverse
+from sentry.testutils import SnubaTestCase
+
+from sentry.models import DiscoverSavedQuery
+
+
+class OrganizationDiscoverSavedQueriesTest(APITestCase, SnubaTestCase):
+    def setUp(self):
+        super(OrganizationDiscoverSavedQueriesTest, self).setUp()
+
+        self.login_as(user=self.user)
+        self.org = self.create_organization(owner=self.user)
+        project_ids = [
+            self.create_project(organization=self.org).id,
+            self.create_project(organization=self.org).id
+        ]
+        query = {
+            'fields': ['test'],
+            'conditions': [],
+            'limit': 10
+        }
+
+        model = DiscoverSavedQuery.objects.create(
+            organization=self.org, name="Test query", query=query)
+
+        model.add_projects(project_ids)
+
+    def test_get(self):
+        with self.feature('organizations:discover'):
+            url = reverse('sentry-api-0-organization-discover-saved-queries', args=[self.org.slug])
+            response = self.client.get(url)
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 1
+        assert response.data[0]['name'] == 'Test query'
