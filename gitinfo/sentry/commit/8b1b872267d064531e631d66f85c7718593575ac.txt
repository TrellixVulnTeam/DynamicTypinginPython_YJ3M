commit 8b1b872267d064531e631d66f85c7718593575ac
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Feb 4 01:30:56 2014 -0800

    Modernize exception syntax

diff --git a/src/sentry/__init__.py b/src/sentry/__init__.py
index 93264629ef..c097660040 100644
--- a/src/sentry/__init__.py
+++ b/src/sentry/__init__.py
@@ -11,7 +11,7 @@ import os.path
 try:
     VERSION = __import__('pkg_resources') \
         .get_distribution('sentry').version
-except Exception, e:
+except Exception as e:
     VERSION = 'unknown'
 
 
diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index bdffc302e6..880a6d386d 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -168,7 +168,7 @@ def decode_and_decompress_data(encoded_data):
             return decompress(encoded_data)
         except zlib.error:
             return base64.b64decode(encoded_data)
-    except Exception, e:
+    except Exception as e:
         # This error should be caught as it suggests that there's a
         # bug somewhere in the client's code.
         logger.info(e, **client_metadata(exception=e))
@@ -179,7 +179,7 @@ def decode_and_decompress_data(encoded_data):
 def safely_load_json_string(json_string):
     try:
         obj = json.loads(json_string)
-    except Exception, e:
+    except Exception as e:
         # This error should be caught as it suggests that there's a
         # bug somewhere in the client's code.
         logger.info(e, **client_metadata(exception=e))
@@ -268,7 +268,7 @@ def validate_data(project, data, client=None):
     if 'timestamp' in data:
         try:
             process_data_timestamp(data)
-        except InvalidTimestamp, e:
+        except InvalidTimestamp as e:
             # Log the error, remove the timestamp, and continue
             logger.info(
                 'Discarded invalid value for timestamp: %r', data['timestamp'],
@@ -368,7 +368,7 @@ def validate_data(project, data, client=None):
                 inst = interface(value)
             inst.validate()
             data[import_path] = inst.serialize()
-        except Exception, e:
+        except Exception as e:
             if isinstance(e, AssertionError):
                 log = logger.info
             else:
@@ -381,7 +381,7 @@ def validate_data(project, data, client=None):
         # assume it's something like 'warning'
         try:
             data['level'] = LOG_LEVEL_REVERSE_MAP[level]
-        except KeyError, e:
+        except KeyError as e:
             logger.info(
                 'Discarded invalid logger value: %s', level,
                 **client_metadata(client, project, exception=e))
diff --git a/src/sentry/db/models/fields/gzippeddict.py b/src/sentry/db/models/fields/gzippeddict.py
index 72f7ab7d09..778b92d7e1 100644
--- a/src/sentry/db/models/fields/gzippeddict.py
+++ b/src/sentry/db/models/fields/gzippeddict.py
@@ -31,7 +31,7 @@ class GzippedDictField(models.TextField):
         if isinstance(value, basestring) and value:
             try:
                 value = pickle.loads(decompress(value))
-            except Exception, e:
+            except Exception as e:
                 logger.exception(e)
                 return {}
         elif not value:
diff --git a/src/sentry/db/models/fields/node.py b/src/sentry/db/models/fields/node.py
index 3b265dd1dc..97ba0246f5 100644
--- a/src/sentry/db/models/fields/node.py
+++ b/src/sentry/db/models/fields/node.py
@@ -97,7 +97,7 @@ class NodeField(GzippedDictField):
         if isinstance(value, basestring) and value:
             try:
                 value = pickle.loads(decompress(value))
-            except Exception, e:
+            except Exception as e:
                 logger.exception(e)
                 value = {}
         elif not value:
diff --git a/src/sentry/manager.py b/src/sentry/manager.py
index 1ec5262a59..9a1332d3f8 100644
--- a/src/sentry/manager.py
+++ b/src/sentry/manager.py
@@ -428,7 +428,7 @@ class GroupManager(BaseManager, ChartMixin):
             # TODO: should we mail admins when there are failures?
             try:
                 logger.exception(u'Unable to process log entry: %s', exc)
-            except Exception, exc:
+            except Exception as exc:
                 warnings.warn(u'Unable to process log entry: %s', exc)
             return
 
@@ -573,7 +573,7 @@ class GroupManager(BaseManager, ChartMixin):
 
         try:
             self.add_tags(group, tags)
-        except Exception, e:
+        except Exception as e:
             logger.exception('Unable to record tags: %s' % (e,))
 
         return group, is_new, is_sample
diff --git a/src/sentry/models/activity.py b/src/sentry/models/activity.py
index ab58addcc8..598fdcd11b 100644
--- a/src/sentry/models/activity.py
+++ b/src/sentry/models/activity.py
@@ -150,6 +150,6 @@ class Activity(Model):
 
         try:
             msg.send()
-        except Exception, e:
+        except Exception as e:
             logger = logging.getLogger('sentry.mail.errors')
             logger.exception(e)
diff --git a/src/sentry/models/pendingteammember.py b/src/sentry/models/pendingteammember.py
index 4d2b4fa4d0..a614963fac 100644
--- a/src/sentry/models/pendingteammember.py
+++ b/src/sentry/models/pendingteammember.py
@@ -67,6 +67,6 @@ class PendingTeamMember(Model):
 
         try:
             msg.send([self.email])
-        except Exception, e:
+        except Exception as e:
             logger = logging.getLogger('sentry.mail.errors')
             logger.exception(e)
diff --git a/src/sentry/plugins/base.py b/src/sentry/plugins/base.py
index e3b00e2b5d..de5f46be86 100644
--- a/src/sentry/plugins/base.py
+++ b/src/sentry/plugins/base.py
@@ -76,7 +76,7 @@ class PluginManager(InstanceManager):
         for plugin in self.all():
             try:
                 result = getattr(plugin, func_name)(*args, **kwargs)
-            except Exception, e:
+            except Exception as e:
                 logger = logging.getLogger('sentry.plugins')
                 logger.error('Error processing %s() on %r: %s', func_name, plugin.__class__, e, extra={
                     'func_arg': args,
diff --git a/src/sentry/plugins/bases/issue.py b/src/sentry/plugins/bases/issue.py
index 156d788370..cce7608359 100644
--- a/src/sentry/plugins/bases/issue.py
+++ b/src/sentry/plugins/bases/issue.py
@@ -173,7 +173,7 @@ class IssuePlugin(Plugin):
                     form_data=form.cleaned_data,
                     request=request,
                 )
-            except forms.ValidationError, e:
+            except forms.ValidationError as e:
                 form.errors['__all__'] = [u'Error creating issue: %s' % e]
 
         if form.is_valid():
diff --git a/src/sentry/replays.py b/src/sentry/replays.py
index 13bef76283..39e838023f 100644
--- a/src/sentry/replays.py
+++ b/src/sentry/replays.py
@@ -34,7 +34,7 @@ class Replayer(object):
             conn.request(self.method, full_url, data, self.headers or {})
 
             response = conn.getresponse()
-        except socket.error, e:
+        except socket.error as e:
             return {
                 'status': 'error',
                 'reason': str(e),
diff --git a/src/sentry/tasks/store.py b/src/sentry/tasks/store.py
index 4dee400d55..012492769d 100644
--- a/src/sentry/tasks/store.py
+++ b/src/sentry/tasks/store.py
@@ -24,7 +24,7 @@ def preprocess_event(data, **kwargs):
         if settings.SENTRY_SCRAPE_JAVASCRIPT_CONTEXT and data['platform'] == 'javascript':
             try:
                 expand_javascript_source(data)
-            except Exception, e:
+            except Exception as e:
                 logger.exception(u'Error fetching javascript source: %s', e)
     finally:
         save_event.delay(data=data)
diff --git a/src/sentry/utils/cache.py b/src/sentry/utils/cache.py
index 7dd3ddcdc2..6af86899c5 100644
--- a/src/sentry/utils/cache.py
+++ b/src/sentry/utils/cache.py
@@ -63,7 +63,7 @@ class Lock(object):
     def __exit__(self, exc_type, exc_value, traceback):
         try:
             self.cache.delete(self.lock_key)
-        except Exception, e:
+        except Exception as e:
             logger.exception(e)
 
 
diff --git a/src/sentry/utils/safe.py b/src/sentry/utils/safe.py
index f9bf82421c..41f3311b6a 100644
--- a/src/sentry/utils/safe.py
+++ b/src/sentry/utils/safe.py
@@ -17,7 +17,7 @@ from sentry.utils.strings import truncatechars
 def safe_execute(func, *args, **kwargs):
     try:
         result = func(*args, **kwargs)
-    except Exception, e:
+    except Exception as e:
         transaction.rollback_unless_managed()
         if hasattr(func, 'im_class'):
             cls = func.im_class
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 2928047333..73ad9c2228 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -197,7 +197,7 @@ class APIView(BaseView):
 
             try:
                 project_, user = project_from_auth_vars(auth_vars)
-            except APIError, error:
+            except APIError as error:
                 return HttpResponse(unicode(error.msg), status=error.http_status)
             else:
                 if user:
@@ -231,7 +231,7 @@ class APIView(BaseView):
             try:
                 response = super(APIView, self).dispatch(request, project=project, auth=auth, **kwargs)
 
-            except APIError, error:
+            except APIError as error:
                 response = HttpResponse(unicode(error.msg), content_type='text/plain', status=error.http_status)
 
         if origin:
@@ -316,7 +316,7 @@ class StoreView(APIView):
         try:
             # mutates data
             validate_data(project, data, auth.client)
-        except InvalidData, e:
+        except InvalidData as e:
             raise APIError(u'Invalid data: %s (%s)' % (unicode(e), type(e)))
 
         # mutates data
diff --git a/src/sentry/web/frontend/admin.py b/src/sentry/web/frontend/admin.py
index 9776f753d0..a90927d37b 100644
--- a/src/sentry/web/frontend/admin.py
+++ b/src/sentry/web/frontend/admin.py
@@ -161,7 +161,7 @@ def create_new_user(request):
                     body, settings.SERVER_EMAIL, [user.email],
                     fail_silently=False
                 )
-            except Exception, e:
+            except Exception as e:
                 logger = logging.getLogger('sentry.mail.errors')
                 logger.exception(e)
 
@@ -339,7 +339,7 @@ def status_mail(request):
                 body, settings.SERVER_EMAIL, [request.user.email],
                 fail_silently=False
             )
-        except Exception, e:
+        except Exception as e:
             form.errors['__all__'] = [unicode(e)]
 
     return render_to_response('sentry/admin/status/mail.html', {
diff --git a/src/sentry/web/frontend/groups.py b/src/sentry/web/frontend/groups.py
index 3ff09b8676..318ddf57e6 100644
--- a/src/sentry/web/frontend/groups.py
+++ b/src/sentry/web/frontend/groups.py
@@ -53,7 +53,7 @@ def _get_group_list(request, project):
     for cls in get_filters(Group, project):
         try:
             filters.append(cls(request, project))
-        except Exception, e:
+        except Exception as e:
             logger = logging.getLogger('sentry.filters')
             logger.exception('Error initializing filter %r: %s', cls, e)
 
@@ -71,7 +71,7 @@ def _get_group_list(request, project):
             if not filter_.is_set():
                 continue
             event_list = filter_.get_query_set(event_list)
-        except Exception, e:
+        except Exception as e:
             logger = logging.getLogger('sentry.filters')
             logger.exception('Error processing filter %r: %s', cls, e)
 
diff --git a/tests/sentry/web/views.py b/tests/sentry/web/views.py
index a7d0536beb..86b834f71f 100644
--- a/tests/sentry/web/views.py
+++ b/tests/sentry/web/views.py
@@ -28,6 +28,6 @@ def logging_request_exc(request):
     logger = logging.getLogger('sentry.test')
     try:
         raise Exception(request.GET.get('message', 'view exception'))
-    except Exception, e:
+    except Exception as e:
         logger.error(e, exc_info=True, extra={'request': request})
     return HttpResponse('')
