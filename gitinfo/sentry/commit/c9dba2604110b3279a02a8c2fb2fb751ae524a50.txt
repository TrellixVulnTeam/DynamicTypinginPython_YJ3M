commit c9dba2604110b3279a02a8c2fb2fb751ae524a50
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Sep 17 11:26:51 2018 -0700

    fix(discover): Dropdown input retains value when reopend (#9774)
    
    This is a bit of a workaround since react-select v1 doesn't support
    controlling open/close state of dropdowns and open/close is called far
    more than we actually want it to be (we use focus() to get around this).
    inputState == "" implies that the dropdown is in a real closed state and
    we want to reset the input preserving it's value for editing.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
index 8f14f7de5a..b340efd4e8 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
@@ -68,6 +68,14 @@ export default class Aggregation extends React.Component {
     }
   };
 
+  handleOpen = () => {
+    if (this.state.inputValue === '') {
+      this.setState({
+        inputValue: getInternal(this.props.value),
+      });
+    }
+  };
+
   inputRenderer = props => {
     return (
       <input
@@ -102,6 +110,7 @@ export default class Aggregation extends React.Component {
           options={this.getOptions()}
           filterOptions={this.filterOptions}
           onChange={this.handleChange}
+          onOpen={this.handleOpen}
           closeOnSelect={true}
           openOnFocus={true}
           autoBlur={true}
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx
index 3f94185a04..e4082af755 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx
@@ -50,6 +50,14 @@ export default class Condition extends React.Component {
     );
   };
 
+  handleOpen = () => {
+    if (this.state.inputValue === '') {
+      this.setState({
+        inputValue: getInternal(this.props.value),
+      });
+    }
+  };
+
   getOptions() {
     const currentValue = getInternal(this.props.value);
     const shouldDisplayValue = currentValue || this.state.inputValue;
@@ -155,6 +163,7 @@ export default class Condition extends React.Component {
           options={this.getOptions()}
           filterOptions={this.filterOptions}
           onChange={this.handleChange}
+          onOpen={this.handleOpen}
           closeOnSelect={true}
           openOnFocus={true}
           autoBlur={true}
