commit ca9030eb88ae49ec6e459aa502642c2b3ddc546b
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Feb 13 08:09:50 2020 +0100

    feat(ui): Shorter release version format (#16813)
    
    * projects
    
    * activity
    
    * seenInfo
    
    * replaced version component with the new one
    
    * tags
    
    * full version in release detail, tagDistribution shortened
    
    * added types after typescript conversion
    
    * tooltip with copy icon
    
    * added tooltip to versions
    
    * copy button in VersionHoverCard
    
    * discover, dashboards
    
    * truncating
    
    * original version component replaced with the v2
    
    * truncating version in tags
    
    * review revisions

diff --git a/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx b/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
index 4d07c9025b..b0cc021fb1 100644
--- a/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
+++ b/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
@@ -12,6 +12,7 @@ import SentryTypes from 'app/sentryTypes';
 import theme from 'app/utils/theme';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
+import {formatVersion} from 'app/utils/formatters';
 
 // This is not an exported action/function because releases list uses AsyncComponent
 // and this is not re-used anywhere else afaict
@@ -45,8 +46,11 @@ class ReleaseSeries extends React.Component {
   };
 
   componentDidMount() {
-    if (this.props.releases) {
+    const {releases} = this.props;
+
+    if (releases) {
       // No need to fetch releases if passed in from props
+      this.setReleasesWithSeries(releases);
       return;
     }
 
@@ -64,16 +68,20 @@ class ReleaseSeries extends React.Component {
 
     getOrganizationReleases(api, organization, projects)
       .then(releases => {
-        this.setState({
-          releases,
-          releaseSeries: [this.getReleaseSeries(releases)],
-        });
+        this.setReleasesWithSeries(releases);
       })
       .catch(() => {
         addErrorMessage(t('Error fetching releases'));
       });
   }
 
+  setReleasesWithSeries(releases) {
+    this.setState({
+      releases,
+      releaseSeries: [this.getReleaseSeries(releases)],
+    });
+  }
+
   getReleaseSeries = releases => {
     const {utc, organization, router, tooltip} = this.props;
 
@@ -93,7 +101,7 @@ class ReleaseSeries extends React.Component {
             return `<div>${moment
               .tz(data.value, utc ? 'UTC' : getUserTimezone())
               .format('MMM D, YYYY LT')} <br />
-            Release: ${data.name}<br />
+            Release: ${formatVersion(data.name, true)}<br />
             </div>`;
           },
         },
@@ -102,15 +110,15 @@ class ReleaseSeries extends React.Component {
         },
         data: releases.map(release => ({
           xAxis: +new Date(release.dateCreated),
-          name: release.shortVersion,
-          value: release.shortVersion,
+          name: formatVersion(release.version, true),
+          value: formatVersion(release.version, true),
           onClick: () => {
             router.push(
               `/organizations/${organization.slug}/releases/${release.version}/`
             );
           },
           label: {
-            formatter: () => release.shortVersion,
+            formatter: () => formatVersion(release.version, true),
           },
         })),
       }),
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.tsx b/src/sentry/static/sentry/app/components/events/eventTags.tsx
index bd59ca2936..3d41da8699 100644
--- a/src/sentry/static/sentry/app/components/events/eventTags.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventTags.tsx
@@ -14,6 +14,7 @@ import Pills from 'app/components/pills';
 import Pill from 'app/components/pill';
 import VersionHoverCard from 'app/components/versionHoverCard';
 import InlineSvg from 'app/components/inlineSvg';
+import Version from 'app/components/version';
 
 type DefaultProps = {
   hideGuide: boolean;
@@ -45,7 +46,11 @@ class EventTags extends React.Component<Props> {
             search: locationSearch,
           }}
         >
-          <DeviceName>{tag.value}</DeviceName>
+          {tag.key === 'release' ? (
+            <Version version={tag.value} anchor={false} tooltipRawVersion truncate />
+          ) : (
+            <DeviceName>{tag.value}</DeviceName>
+          )}
         </Link>
         {isUrl(tag.value) && (
           <a href={tag.value} className="external-icon">
diff --git a/src/sentry/static/sentry/app/components/group/seenInfo.jsx b/src/sentry/static/sentry/app/components/group/seenInfo.jsx
index 80223e623f..65432d573e 100644
--- a/src/sentry/static/sentry/app/components/group/seenInfo.jsx
+++ b/src/sentry/static/sentry/app/components/group/seenInfo.jsx
@@ -99,7 +99,7 @@ class SeenInfo extends React.Component {
               projectId={projectId}
               version={release.version}
             >
-              <Version orgId={orgId} version={release.version} className="truncate" />
+              <Version orgId={orgId} version={release.version} truncate />
             </VersionHoverCard>
           </dd>
         ) : !this.props.hasRelease ? (
diff --git a/src/sentry/static/sentry/app/components/resolutionBox.jsx b/src/sentry/static/sentry/app/components/resolutionBox.jsx
index 47d54a9546..989d9731fa 100644
--- a/src/sentry/static/sentry/app/components/resolutionBox.jsx
+++ b/src/sentry/static/sentry/app/components/resolutionBox.jsx
@@ -39,11 +39,15 @@ export default class ResolutionBox extends React.Component {
     } else if (statusDetails.inRelease && statusDetails.actor) {
       return tct('[actor] marked this issue as resolved in version [version].', {
         actor,
-        version: <Version version={statusDetails.inRelease} orgId={orgId} />,
+        version: (
+          <Version version={statusDetails.inRelease} orgId={orgId} tooltipRawVersion />
+        ),
       });
     } else if (statusDetails.inRelease) {
       return tct('This issue has been marked as resolved in version [version].', {
-        version: <Version version={statusDetails.inRelease} orgId={orgId} />,
+        version: (
+          <Version version={statusDetails.inRelease} orgId={orgId} tooltipRawVersion />
+        ),
       });
     } else if (!!statusDetails.inCommit) {
       return tct('This issue has been marked as resolved by [commit]', {
diff --git a/src/sentry/static/sentry/app/components/tagDistributionMeter.tsx b/src/sentry/static/sentry/app/components/tagDistributionMeter.tsx
index 3568182311..4401944c21 100644
--- a/src/sentry/static/sentry/app/components/tagDistributionMeter.tsx
+++ b/src/sentry/static/sentry/app/components/tagDistributionMeter.tsx
@@ -10,9 +10,11 @@ import space from 'app/styles/space';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import {percent} from 'app/utils';
 import Tooltip from 'app/components/tooltip';
+import Version from 'app/components/version';
 
 type DefaultProps = {
   isLoading: boolean;
+  showReleasePackage: boolean;
   hasError: boolean;
   renderLoading: () => React.ReactNode;
   renderEmpty: () => React.ReactNode;
@@ -25,6 +27,7 @@ export type TagSegment = {
   value: string;
   url: LocationDescriptor;
   isOther?: boolean;
+  key?: string;
 };
 
 type Props = DefaultProps & {
@@ -66,10 +69,18 @@ export default class TagDistributionMeter extends React.Component<Props> {
     renderLoading: () => null,
     renderEmpty: () => <p>{t('No recent data.')}</p>,
     renderError: () => null,
+    showReleasePackage: false,
   };
 
   renderTitle() {
-    const {segments, totalValues, title, isLoading, hasError} = this.props;
+    const {
+      segments,
+      totalValues,
+      title,
+      isLoading,
+      hasError,
+      showReleasePackage,
+    } = this.props;
 
     if (!Array.isArray(segments) || segments.length <= 0) {
       return (
@@ -82,12 +93,30 @@ export default class TagDistributionMeter extends React.Component<Props> {
     const largestSegment = segments[0];
     const pct = percent(largestSegment.count, totalValues);
     const pctLabel = Math.floor(pct);
+    const renderLabel = () => {
+      switch (title) {
+        case 'release':
+          return (
+            <Label>
+              <Version
+                version={largestSegment.name}
+                anchor={false}
+                tooltipRawVersion
+                withPackage={showReleasePackage}
+                truncate
+              />
+            </Label>
+          );
+        default:
+          return <Label>{largestSegment.name || t('n/a')}</Label>;
+      }
+    };
 
     return (
       <Title>
         <TitleType>{title}</TitleType>
         <TitleDescription>
-          <Label>{largestSegment.name || t('n/a')}</Label>
+          {renderLabel()}
           {isLoading || hasError ? null : <Percent>{pctLabel}%</Percent>}
         </TitleDescription>
       </Title>
@@ -105,6 +134,7 @@ export default class TagDistributionMeter extends React.Component<Props> {
       renderLoading,
       renderError,
       renderEmpty,
+      showReleasePackage,
     } = this.props;
 
     if (isLoading) {
@@ -124,10 +154,24 @@ export default class TagDistributionMeter extends React.Component<Props> {
         {segments.map((value, index) => {
           const pct = percent(value.count, totalValues);
           const pctLabel = Math.floor(pct);
+          const renderTooltipValue = () => {
+            switch (title) {
+              case 'release':
+                return (
+                  <Version
+                    version={value.name}
+                    anchor={false}
+                    withPackage={showReleasePackage}
+                  />
+                );
+              default:
+                return value.name || t('n/a');
+            }
+          };
 
           const tooltipHtml = (
             <React.Fragment>
-              <div className="truncate">{value.name || t('n/a')}</div>
+              <div className="truncate">{renderTooltipValue()}</div>
               {pctLabel}%
             </React.Fragment>
           );
diff --git a/src/sentry/static/sentry/app/components/version.tsx b/src/sentry/static/sentry/app/components/version.tsx
index 47850665b0..485cf5d9fa 100644
--- a/src/sentry/static/sentry/app/components/version.tsx
+++ b/src/sentry/static/sentry/app/components/version.tsx
@@ -1,56 +1,159 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from '@emotion/styled';
 
 import GlobalSelectionLink from 'app/components/globalSelectionLink';
 import Link from 'app/components/links/link';
+import Tooltip from 'app/components/tooltip';
+import {IconCopy} from 'app/icons';
+import Clipboard from 'app/components/clipboard';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
+import space from 'app/styles/space';
+import {formatVersion} from 'app/utils/formatters';
 
-type DefaultProps = {
-  anchor: boolean;
-};
-
-type Props = DefaultProps & {
+type Props = {
+  /**
+   * Raw version (canonical release identifier)
+   */
   version: string;
-  orgId: string;
+  /**
+   * Should the version be a link to the release page
+   */
+  anchor?: boolean;
+  /**
+   * Organization id needed for linking to release page
+   */
+  orgId?: string;
+  /**
+   * Should link to Release preserve user's global selection values
+   */
   preserveGlobalSelection?: boolean;
+  /**
+   * Should there be a tooltip with raw version on hover
+   */
+  tooltipRawVersion?: boolean;
+  /**
+   * Should we also show package name
+   */
+  withPackage?: boolean;
+  /**
+   * Will add project project ID to the linked url
+   */
+  projectId?: string;
+  /**
+   * Ellipsis on overflow
+   */
+  truncate?: boolean;
   className?: string;
 };
 
-export default class Version extends React.Component<Props> {
-  static propTypes = {
-    anchor: PropTypes.bool,
-    version: PropTypes.string.isRequired,
-    orgId: PropTypes.string,
-
-    /**
-     * Should link to Release preserve user's global selection values
-     */
-    preserveGlobalSelection: PropTypes.bool,
-  };
-
-  static defaultProps: DefaultProps = {
-    anchor: true,
-  };
-
-  render() {
-    const {orgId, version, anchor, className, preserveGlobalSelection} = this.props;
-
-    const LinkComponent = preserveGlobalSelection ? GlobalSelectionLink : Link;
+const Version = ({
+  version,
+  orgId,
+  anchor = true,
+  preserveGlobalSelection,
+  tooltipRawVersion,
+  withPackage,
+  projectId,
+  className,
+  truncate,
+}: Props) => {
+  const LinkComponent = preserveGlobalSelection ? GlobalSelectionLink : Link;
+  const versionToDisplay = formatVersion(version, withPackage);
 
+  const renderVersion = () => {
     if (anchor && orgId) {
       return (
         <LinkComponent
-          to={`/organizations/${orgId}/releases/${encodeURIComponent(version)}/`}
+          to={{
+            pathname: `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`,
+            query: {project: projectId},
+          }}
           className={className}
         >
-          <span title={version}>{version}</span>
+          <VersionText truncate={truncate}>{versionToDisplay}</VersionText>
         </LinkComponent>
       );
     }
 
     return (
-      <span title={version} className={className}>
-        {version}
-      </span>
+      <VersionText className={className} truncate={truncate}>
+        {versionToDisplay}
+      </VersionText>
+    );
+  };
+
+  const renderTooltipContent = () => {
+    return (
+      <TooltipContent
+        onClick={e => {
+          e.stopPropagation();
+        }}
+      >
+        <TooltipVersionWrapper>{version}</TooltipVersionWrapper>
+
+        <Clipboard value={version}>
+          <TooltipClipboardIconWrapper>
+            <IconCopy size="xs" color="white" />
+          </TooltipClipboardIconWrapper>
+        </Clipboard>
+      </TooltipContent>
     );
+  };
+
+  return (
+    <Tooltip
+      title={renderTooltipContent()}
+      disabled={!tooltipRawVersion}
+      isHoverable
+      containerDisplayMode={truncate ? 'block' : 'inline-block'}
+    >
+      {renderVersion()}
+    </Tooltip>
+  );
+};
+
+Version.propTypes = {
+  version: PropTypes.string.isRequired,
+  orgId: PropTypes.string,
+  anchor: PropTypes.bool,
+  /**
+   * Should link to Release preserve user's global selection values
+   */
+  preserveGlobalSelection: PropTypes.bool,
+  tooltipRawVersion: PropTypes.bool,
+  className: PropTypes.string,
+  projectId: PropTypes.string,
+  truncate: PropTypes.bool,
+};
+
+const VersionText = styled('span')<{truncate?: boolean}>`
+  ${p =>
+    p.truncate &&
+    `max-width: 100%;
+  display: block;
+  overflow: hidden;
+  text-overflow: ellipsis;
+  white-space: nowrap;`}
+`;
+
+const TooltipContent = styled('span')`
+  display: flex;
+  align-items: center;
+`;
+
+const TooltipVersionWrapper = styled('span')`
+  ${overflowEllipsis}
+`;
+
+const TooltipClipboardIconWrapper = styled('span')`
+  margin-left: ${space(0.5)};
+  position: relative;
+  bottom: -${space(0.25)};
+
+  &:hover {
+    cursor: pointer;
   }
-}
+`;
+
+export default Version;
diff --git a/src/sentry/static/sentry/app/components/versionHoverCard.jsx b/src/sentry/static/sentry/app/components/versionHoverCard.jsx
index ba9ced1b74..9420d3861b 100644
--- a/src/sentry/static/sentry/app/components/versionHoverCard.jsx
+++ b/src/sentry/static/sentry/app/components/versionHoverCard.jsx
@@ -2,7 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
 
-import {t, tct} from 'app/locale';
+import {t} from 'app/locale';
 import AvatarList from 'app/components/avatar/avatarList';
 import Button from 'app/components/button';
 import Hovercard from 'app/components/hovercard';
@@ -13,6 +13,9 @@ import RepoLabel from 'app/components/repoLabel';
 import TimeSince from 'app/components/timeSince';
 import space from 'app/styles/space';
 import withApi from 'app/utils/withApi';
+import Clipboard from 'app/components/clipboard';
+import {IconCopy} from 'app/icons';
+import Version from 'app/components/version';
 
 class VersionHoverCard extends React.Component {
   static propTypes = {
@@ -120,7 +123,20 @@ class VersionHoverCard extends React.Component {
       mostRecentDeploySlice = Object.keys(recentDeploysByEnviroment).slice(0, 3);
     }
     return {
-      header: <span className="truncate">{tct('Release [version]', {version})}</span>,
+      header: (
+        <HeaderWrapper>
+          {t('Release')}
+          <VersionWrapper>
+            <StyledVersion version={version} truncate />
+
+            <Clipboard value={version}>
+              <ClipboardIconWrapper>
+                <IconCopy size="xs" />
+              </ClipboardIconWrapper>
+            </Clipboard>
+          </VersionWrapper>
+        </HeaderWrapper>
+      ),
       body: (
         <div>
           <div className="row row-flex">
@@ -209,3 +225,24 @@ const StyledTimeSince = styled(TimeSince)`
   width: 50%;
   padding: 3px 0;
 `;
+
+const HeaderWrapper = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
+`;
+const VersionWrapper = styled('div')`
+  display: flex;
+  flex: 1;
+  align-items: center;
+  justify-content: flex-end;
+`;
+const StyledVersion = styled(Version)`
+  margin-right: ${space(0.5)};
+  max-width: 190px;
+`;
+const ClipboardIconWrapper = styled('span')`
+  &:hover {
+    cursor: pointer;
+  }
+`;
diff --git a/src/sentry/static/sentry/app/components/versionV2.tsx b/src/sentry/static/sentry/app/components/versionV2.tsx
deleted file mode 100644
index bdbf69de0c..0000000000
--- a/src/sentry/static/sentry/app/components/versionV2.tsx
+++ /dev/null
@@ -1,68 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {Release} from '@sentry/release-parser';
-
-import GlobalSelectionLink from 'app/components/globalSelectionLink';
-import Link from 'app/components/links/link';
-import Tooltip from 'app/components/tooltip';
-
-type Props = {
-  version: string;
-  orgId: string;
-  anchor?: boolean;
-  /**
-   * Should link to Release preserve user's global selection values
-   */
-  preserveGlobalSelection?: boolean;
-  tooltipRawVersion?: boolean;
-  className?: string;
-};
-
-const VersionV2 = ({
-  version,
-  orgId,
-  anchor = true,
-  preserveGlobalSelection,
-  tooltipRawVersion,
-  className,
-}: Props) => {
-  const parsedVersion = new Release(version);
-  const LinkComponent = preserveGlobalSelection ? GlobalSelectionLink : Link;
-
-  const renderVersion = () => {
-    if (anchor && orgId) {
-      return (
-        <LinkComponent
-          to={`/organizations/${orgId}/releases-v2/${encodeURIComponent(
-            parsedVersion.raw
-          )}/`}
-          className={className}
-        >
-          <span>{parsedVersion.describe()}</span>
-        </LinkComponent>
-      );
-    }
-
-    return <span className={className}>{parsedVersion.describe()}</span>;
-  };
-
-  return (
-    <Tooltip title={parsedVersion.raw} disabled={!tooltipRawVersion} isHoverable>
-      {renderVersion()}
-    </Tooltip>
-  );
-};
-
-VersionV2.propTypes = {
-  version: PropTypes.string.isRequired,
-  orgId: PropTypes.string,
-  anchor: PropTypes.bool,
-  /**
-   * Should link to Release preserve user's global selection values
-   */
-  preserveGlobalSelection: PropTypes.bool,
-  tooltipRawVersion: PropTypes.bool,
-  className: PropTypes.string,
-};
-
-export default VersionV2;
diff --git a/src/sentry/static/sentry/app/utils/formatters.tsx b/src/sentry/static/sentry/app/utils/formatters.tsx
index 4ffd3f7f03..b8c095a220 100644
--- a/src/sentry/static/sentry/app/utils/formatters.tsx
+++ b/src/sentry/static/sentry/app/utils/formatters.tsx
@@ -1,4 +1,5 @@
 import get from 'lodash/get';
+import {Release} from '@sentry/release-parser';
 
 import {t} from 'app/locale';
 import {CommitAuthor, User} from 'app/types';
@@ -17,3 +18,11 @@ export function userDisplayName(user: User | CommitAuthor): string {
   }
   return displayName;
 }
+
+export const formatVersion = (rawVersion: string, withPackage: boolean | undefined) => {
+  const parsedVersion = new Release(rawVersion);
+
+  return `${parsedVersion.describe()}${
+    withPackage && parsedVersion.package ? `, ${parsedVersion.package}` : ''
+  }`;
+};
diff --git a/src/sentry/static/sentry/app/views/dashboards/utils/getData.jsx b/src/sentry/static/sentry/app/views/dashboards/utils/getData.jsx
index 808abb6ff5..752e267aa4 100644
--- a/src/sentry/static/sentry/app/views/dashboards/utils/getData.jsx
+++ b/src/sentry/static/sentry/app/views/dashboards/utils/getData.jsx
@@ -27,7 +27,10 @@ export function getData(results, widget) {
 
   let series = results
     .map((result, i) =>
-      chartDataFunc(result.data, queries.discover[i], ...chartDataFuncArgs)
+      chartDataFunc(result.data, queries.discover[i], {
+        ...chartDataFuncArgs,
+        formatVersion: true,
+      })
     )
     .reduce((acc, s) => [...acc, ...s], []);
 
diff --git a/src/sentry/static/sentry/app/views/discover/result/utils.tsx b/src/sentry/static/sentry/app/views/discover/result/utils.tsx
index e20ab70832..e0f9fa607e 100644
--- a/src/sentry/static/sentry/app/views/discover/result/utils.tsx
+++ b/src/sentry/static/sentry/app/views/discover/result/utils.tsx
@@ -2,6 +2,7 @@ import orderBy from 'lodash/orderBy';
 import Papa from 'papaparse';
 import React from 'react';
 import styled from '@emotion/styled';
+import {formatVersion} from 'app/utils/formatters';
 
 import {Aggregation, Query, Result, SnubaResult} from '../types';
 import {NUMBER_OF_SERIES_BY_DAY} from '../data';
@@ -263,7 +264,9 @@ function getLabel(value: any, options: any): string {
     return options.fieldLabelMap[value];
   }
 
-  return value;
+  return options.formatVersion && typeof value === 'string'
+    ? formatVersion(value, true)
+    : value;
 }
 
 /**
diff --git a/src/sentry/static/sentry/app/views/eventsV2/chartFooter.tsx b/src/sentry/static/sentry/app/views/eventsV2/chartFooter.tsx
index cc67bc94ba..6fe23e712d 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/chartFooter.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/chartFooter.tsx
@@ -7,6 +7,7 @@ import Duration from 'app/components/duration';
 import YAxisSelector from 'app/views/events/yAxisSelector';
 import {getFormattedDate} from 'app/utils/dates';
 import space from 'app/styles/space';
+import Version from 'app/components/version';
 
 import {decodeColumnOrder} from './utils';
 import {ChartControls, InlineContainer, SectionHeading} from './styles';
@@ -29,11 +30,19 @@ type Props = {
   hoverState: TooltipData;
 };
 
-function formatValue(val: string | number, columnName: string) {
+function formatValue(val: string | number, columnName: string, itemName: string) {
   // Extract metadata from the columnName so we can format the
   // value appropriately.
   const columnData = decodeColumnOrder([{field: columnName}])[0];
 
+  if (itemName === t('Release')) {
+    return (
+      <Value>
+        <Version version={String(val)} anchor={false} withPackage />
+      </Value>
+    );
+  }
+
   if (val === null || val === undefined) {
     return <Value>-</Value>;
   }
@@ -82,7 +91,7 @@ export default function ChartFooter({
       );
       elements.push(
         <React.Fragment key={`${item.name}-value`}>
-          {formatValue(item.value, yAxisValue)}
+          {formatValue(item.value, yAxisValue, item.name)}
         </React.Fragment>
       );
     });
diff --git a/src/sentry/static/sentry/app/views/eventsV2/data.tsx b/src/sentry/static/sentry/app/views/eventsV2/data.tsx
index 9d0641e583..672b619ed5 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/data.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/data.tsx
@@ -11,8 +11,15 @@ import {Organization, NewQuery} from 'app/types';
 import Duration from 'app/components/duration';
 import ShortId from 'app/components/shortId';
 import floatFormat from 'app/utils/floatFormat';
+import Version from 'app/components/version';
 
-import {Container, NumberContainer, OverflowLink, StyledDateTime} from './styles';
+import {
+  Container,
+  NumberContainer,
+  OverflowLink,
+  StyledDateTime,
+  VersionContainer,
+} from './styles';
 
 export const PIN_ICON = `image://${pinIcon}`;
 export const AGGREGATE_ALIASES = [
@@ -203,6 +210,7 @@ type SpecialFields = {
   last_seen: SpecialField;
   'issue.id': SpecialField;
   issue: SpecialField;
+  release: SpecialField;
 };
 
 /**
@@ -283,4 +291,16 @@ export const SPECIAL_FIELDS: SpecialFields = {
       );
     },
   },
+  release: {
+    sortField: 'release',
+    renderFunc: data => {
+      return (
+        data.release && (
+          <VersionContainer>
+            <Version version={data.release} anchor={false} tooltipRawVersion truncate />
+          </VersionContainer>
+        )
+      );
+    },
+  },
 };
diff --git a/src/sentry/static/sentry/app/views/eventsV2/styles.tsx b/src/sentry/static/sentry/app/views/eventsV2/styles.tsx
index 16721673bb..3452f904e2 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/styles.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/styles.tsx
@@ -17,6 +17,13 @@ export const Container = styled('div')`
   ${overflowEllipsis};
 `;
 
+export const VersionContainer = styled('div')`
+  ${overflowEllipsis};
+  max-width: 100%;
+  width: auto;
+  display: inline-block;
+`;
+
 export const NumberContainer = styled('div')`
   text-align: right;
   ${overflowEllipsis};
diff --git a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
index ee3e76382b..1064d05752 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
@@ -124,6 +124,7 @@ class Tags extends React.Component<Props, State> {
         totalValues={Number(maxTotalValues)}
         renderLoading={() => <StyledPlaceholder height="16px" />}
         onTagClick={this.onTagClick}
+        showReleasePackage
       />
     );
   }
diff --git a/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx b/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
index 54b1315f47..c226db94ae 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
@@ -7,6 +7,7 @@ import {t} from 'app/locale';
 import space from 'app/styles/space';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import {Event, OrganizationSummary} from 'app/types';
+import Version from 'app/components/version';
 
 import EventView from './eventView';
 import {getExpandedResults} from './utils';
@@ -29,6 +30,14 @@ const TagsTable = (props: Props) => {
           {tags.map(tag => {
             let target;
             const tagInQuery = eventView.query.includes(`${tag.key}:`);
+            const renderTagValue = () => {
+              switch (tag.key) {
+                case 'release':
+                  return <Version version={tag.value} anchor={false} withPackage />;
+                default:
+                  return tag.value;
+              }
+            };
             if (!tagInQuery) {
               const nextView = getExpandedResults(
                 eventView,
@@ -37,16 +46,17 @@ const TagsTable = (props: Props) => {
               );
               target = nextView.getResultsViewUrlTarget(organization.slug);
             }
+
             return (
               <StyledTr key={tag.key}>
                 <TagKey>{tag.key}</TagKey>
                 <TagValue>
                   {tagInQuery ? (
                     <Tooltip title={t('This tag is in the current filter conditions')}>
-                      <span>{tag.value}</span>
+                      <span>{renderTagValue()}</span>
                     </Tooltip>
                   ) : (
-                    <Link to={target}>{tag.value}</Link>
+                    <Link to={target}>{renderTagValue()}</Link>
                   )}
                 </TagValue>
               </StyledTr>
diff --git a/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx b/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
index 30ae5e5d60..908c43d7c4 100644
--- a/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
+++ b/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
@@ -73,7 +73,7 @@ class ActivityItem extends React.Component {
 
     const versionLink = data.version ? (
       <VersionHoverCard orgId={orgId} projectId={project.slug} version={data.version}>
-        <Version version={data.version} orgId={orgId} projectId={null} />
+        <Version version={data.version} orgId={orgId} />
       </VersionHoverCard>
     ) : null;
 
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
index aa0966396f..2dfb18a16f 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
@@ -36,7 +36,7 @@ class GroupActivityItem extends React.Component {
         return data.version
           ? t('%(author)s marked this issue as resolved in %(version)s', {
               author,
-              version: <Version version={data.version} orgId={orgId} />,
+              version: <Version version={data.version} orgId={orgId} tooltipRawVersion />,
             })
           : t('%s marked this issue as resolved in the upcoming release', author);
       case 'set_resolved_in_commit':
@@ -108,7 +108,12 @@ class GroupActivityItem extends React.Component {
           ? t('%(author)s marked this issue as a regression in %(version)s', {
               author,
               version: (
-                <Version version={data.version} orgId={orgId} projectId={projectId} />
+                <Version
+                  version={data.version}
+                  orgId={orgId}
+                  projectId={projectId}
+                  tooltipRawVersion
+                />
               ),
             })
           : t('%s marked this issue as a regression', author);
diff --git a/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx b/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx
index 06962e57d5..7a2ebcd3c5 100644
--- a/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx
+++ b/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx
@@ -5,10 +5,10 @@ import styled from '@emotion/styled';
 
 import {t} from 'app/locale';
 import Button from 'app/components/button';
-import Link from 'app/components/links/link';
 import SentryTypes from 'app/sentryTypes';
 import TextOverflow from 'app/components/textOverflow';
 import getDynamicText from 'app/utils/getDynamicText';
+import Version from 'app/components/version';
 
 const DEPLOY_COUNT = 2;
 
@@ -63,14 +63,18 @@ class Deploy extends React.Component {
     return (
       <DeployRow justifyContent="space-between">
         <Environment>{deploy.environment}</Environment>
-        <Version>
-          <StyledLink
-            to={`/organizations/${organization.slug}/releases/${deploy.version}/?project=${project.id}`}
-          >
-            {deploy.version}
-          </StyledLink>
-        </Version>
-        <Flex width={90} justifyContent="flex-end">
+
+        <StyledTextOverflow>
+          <Version
+            version={deploy.version}
+            orgId={organization.slug}
+            projectId={project.id}
+            tooltipRawVersion
+            truncate
+          />
+        </StyledTextOverflow>
+
+        <Flex width={90} justifyContent="flex-end" flexGrow={1} flexShrink={0}>
           <DeployTimeWrapper>
             {getDynamicText({
               value: moment(deploy.dateFinished).fromNow(),
@@ -98,20 +102,13 @@ const Environment = styled(TextOverflow)`
   background-color: ${p => p.theme.offWhite};
   text-align: center;
   border-radius: ${p => p.theme.borderRadius};
+  flex-shrink: 0;
 `;
 
-const Version = styled(TextOverflow)`
-  display: flex;
-  flex: 1;
+const StyledTextOverflow = styled(TextOverflow)`
   margin-right: 8px;
 `;
 
-const StyledLink = styled(Link)`
-  text-overflow: ellipsis;
-  overflow: hidden;
-  white-space: nowrap;
-`;
-
 const DeployTimeWrapper = styled('div')`
   overflow: hidden;
   text-overflow: ellipsis;
diff --git a/src/sentry/static/sentry/app/views/releases/detail/releaseHeader.jsx b/src/sentry/static/sentry/app/views/releases/detail/releaseHeader.jsx
index ea094a6e42..78fb977e78 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/releaseHeader.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/releaseHeader.jsx
@@ -13,6 +13,7 @@ import ReleaseStats from 'app/components/releaseStats';
 import TextOverflow from 'app/components/textOverflow';
 import TimeSince from 'app/components/timeSince';
 import Version from 'app/components/version';
+import TextCopyInput from 'app/views/settings/components/forms/textCopyInput';
 
 import ReleaseDetailsActions from './releaseDetailActions';
 
@@ -46,7 +47,10 @@ export default class ReleaseHeader extends React.Component {
         <div className="row">
           <div className="col-sm-4 col-xs-12">
             <PageHeading>{t('Release')} </PageHeading>
-            <StyledVersion orgId={orgId} version={release.version} anchor={false} />
+            <StyledVersion version={release.version} anchor={false} />
+            <FullVersionWrapper>
+              <TextCopyInput>{release.version}</TextCopyInput>
+            </FullVersionWrapper>
             {!!release.url && (
               <div>
                 <ExternalLink href={release.url}>
@@ -119,3 +123,20 @@ const StyledVersion = styled(Version)`
   display: block;
   margin: 6px 0;
 `;
+
+const FullVersionWrapper = styled('div')`
+  width: 285px;
+  max-width: 100%;
+  input {
+    padding-top: 0;
+    padding-bottom: 0;
+    line-height: 1.5;
+  }
+  button > span {
+    padding: 2px 5px;
+  }
+  svg {
+    width: 0.9em;
+    height: 0.9em;
+  }
+`;
diff --git a/src/sentry/static/sentry/app/views/releases/list/releaseList.jsx b/src/sentry/static/sentry/app/views/releases/list/releaseList.jsx
index a4985ec2d1..ce8a49fcb7 100644
--- a/src/sentry/static/sentry/app/views/releases/list/releaseList.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/releaseList.jsx
@@ -45,6 +45,8 @@ const ReleaseList = props => {
                         orgId={orgId}
                         version={release.version}
                         preserveGlobalSelection
+                        tooltipRawVersion
+                        truncate
                       />
                     </VersionWrapper>
                     <LatestDeployOrReleaseTime orgId={orgId} release={release} />
@@ -96,4 +98,7 @@ const VersionWrapper = styled('div')`
   font-weight: bold;
   margin-bottom: ${space(0.25)};
   ${overflowEllipsis};
+  display: inline-block;
+  max-width: 100%;
+  width: auto;
 `;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableRow.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableRow.tsx
index 4de9f02476..a394aba25d 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableRow.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableRow.tsx
@@ -16,7 +16,7 @@ import {ReleasesV2RowData} from 'app/views/releasesV2/list/types';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import HealthStatus from 'app/views/releasesV2/list/healthStatus';
 import LatestDeployOrReleaseTime from 'app/views/releases/list/latestDeployOrReleaseTime';
-import Version from 'app/components/versionV2';
+import Version from 'app/components/version';
 
 type Props = ReleasesV2RowData & {
   organizationId: string;
diff --git a/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap b/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
index fe163f18d1..5016acd08e 100644
--- a/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
@@ -237,9 +237,9 @@ exports[`ResolutionBox render() handles inRelease 1`] = `
         This issue has been marked as resolved in version 
       </span>
       <Version
-        anchor={true}
         key="1"
         orgId="org"
+        tooltipRawVersion={true}
         version="1.0"
       />
       <span
@@ -316,9 +316,9 @@ exports[`ResolutionBox render() handles inRelease with actor 1`] = `
          marked this issue as resolved in version 
       </span>
       <Version
-        anchor={true}
         key="2"
         orgId="org"
+        tooltipRawVersion={true}
         version="1.0"
       />
       <span
diff --git a/tests/js/spec/components/__snapshots__/versionV2.spec.jsx.snap b/tests/js/spec/components/__snapshots__/versionV2.spec.jsx.snap
index 6e9ff6658f..e0825a9774 100644
--- a/tests/js/spec/components/__snapshots__/versionV2.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/versionV2.spec.jsx.snap
@@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`Version renders 1`] = `
-<VersionV2
+<Version
   orgId="sentry"
   version="foo.bar.Baz@1.0.0+20200101"
 >
@@ -10,19 +10,58 @@ exports[`Version renders 1`] = `
     disabled={true}
     isHoverable={true}
     position="top"
-    title="foo.bar.Baz@1.0.0+20200101"
+    title={
+      <ForwardRef(render)
+        onClick={[Function]}
+      >
+        <ForwardRef(render)>
+          foo.bar.Baz@1.0.0+20200101
+        </ForwardRef(render)>
+        <Clipboard
+          errorMessage="Error copying to clipboard"
+          hideMessages={false}
+          successMessage="Copied to clipboard"
+          value="foo.bar.Baz@1.0.0+20200101"
+        >
+          <ForwardRef(render)>
+            <IconCopy
+              color="white"
+              size="xs"
+            />
+          </ForwardRef(render)>
+        </Clipboard>
+      </ForwardRef(render)>
+    }
   >
     <Link
-      to="/organizations/sentry/releases-v2/foo.bar.Baz%401.0.0%2B20200101/"
+      to={
+        Object {
+          "pathname": "/organizations/sentry/releases/foo.bar.Baz%401.0.0%2B20200101/",
+          "query": Object {
+            "project": undefined,
+          },
+        }
+      }
     >
       <a
-        href="/organizations/sentry/releases-v2/foo.bar.Baz%401.0.0%2B20200101/"
+        href={
+          Object {
+            "pathname": "/organizations/sentry/releases/foo.bar.Baz%401.0.0%2B20200101/",
+            "query": Object {
+              "project": undefined,
+            },
+          }
+        }
       >
-        <span>
-          1.0.0 (20200101)
-        </span>
+        <VersionText>
+          <span
+            className="css-16sjfe2-VersionText e19pxt500"
+          >
+            1.0.0 (20200101)
+          </span>
+        </VersionText>
       </a>
     </Link>
   </Tooltip>
-</VersionV2>
+</Version>
 `;
diff --git a/tests/js/spec/components/charts/releaseSeries.spec.jsx b/tests/js/spec/components/charts/releaseSeries.spec.jsx
index ca4178078f..38cd8ed615 100644
--- a/tests/js/spec/components/charts/releaseSeries.spec.jsx
+++ b/tests/js/spec/components/charts/releaseSeries.spec.jsx
@@ -75,8 +75,8 @@ describe('ReleaseSeries', function() {
             markLine: expect.objectContaining({
               data: [
                 expect.objectContaining({
-                  name: '92eccef',
-                  value: '92eccef',
+                  name: '92eccef279d9',
+                  value: '92eccef279d9',
                   xAxis: 1530206345000,
                 }),
               ],
diff --git a/tests/js/spec/components/versionV2.spec.jsx b/tests/js/spec/components/versionV2.spec.jsx
index 5b7021ae54..54e00ec5f6 100644
--- a/tests/js/spec/components/versionV2.spec.jsx
+++ b/tests/js/spec/components/versionV2.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import {mount} from 'sentry-test/enzyme';
-import Version from 'app/components/versionV2';
+import Version from 'app/components/version';
 
 const VERSION = 'foo.bar.Baz@1.0.0+20200101';
 const ORG_ID = 'sentry';
@@ -19,16 +19,19 @@ describe('Version', () => {
   });
 
   it('links to release page', () => {
-    const wrapper = mount(<Version version={VERSION} orgId={ORG_ID} />);
+    const wrapper = mount(<Version version={VERSION} orgId={ORG_ID} projectId="1" />);
 
-    expect(wrapper.find('Link').prop('to')).toBe(
-      '/organizations/sentry/releases-v2/foo.bar.Baz%401.0.0%2B20200101/'
-    );
+    expect(wrapper.find('Link').prop('to')).toEqual({
+      pathname: '/organizations/sentry/releases/foo.bar.Baz%401.0.0%2B20200101/',
+      query: {project: '1'},
+    });
   });
 
   it('shows raw version in tooltip', () => {
     const wrapper = mount(<Version version={VERSION} orgId={ORG_ID} tooltipRawVersion />);
 
-    expect(wrapper.find('Tooltip').prop('title')).toBe(VERSION);
+    const tooltipContent = mount(wrapper.find('Tooltip').prop('title'));
+
+    expect(tooltipContent.text()).toBe(VERSION);
   });
 });
diff --git a/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap b/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap
index e4da7ceb05..3db544cdc2 100644
--- a/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap
+++ b/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap
@@ -948,14 +948,14 @@ exports[`ProjectCard renders 1`] = `
                 p={2}
               >
                 <div
-                  className="css-d9a0z6-DeployBox elff1ar5"
+                  className="css-d9a0z6-DeployBox elff1ar4"
                 >
                   <Background
                     alignItems="center"
                     justifyContent="center"
                   >
                     <div
-                      className="css-4zyp61-Background elff1ar6"
+                      className="css-4zyp61-Background elff1ar5"
                     >
                       <forwardRef<Button>
                         external={true}
