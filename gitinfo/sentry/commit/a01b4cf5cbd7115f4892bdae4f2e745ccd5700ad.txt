commit a01b4cf5cbd7115f4892bdae4f2e745ccd5700ad
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Nov 22 13:28:08 2014 -0800

    Add SENTRY_PUBLIC support to TeamManager

diff --git a/src/sentry/models/team.py b/src/sentry/models/team.py
index 3c2ae5e6dd..890f72349d 100644
--- a/src/sentry/models/team.py
+++ b/src/sentry/models/team.py
@@ -31,36 +31,39 @@ class TeamManager(BaseManager):
         MEMBER_TYPE value.
         """
         from sentry.models import (
-            OrganizationMember, Project
+            OrganizationMember, OrganizationMemberType, Project
         )
 
         if not user.is_authenticated():
             return []
 
-        all_teams = set()
-
-        qs = OrganizationMember.objects.filter(
-            user=user,
-            organization=organization,
-        )
-        if access is not None:
-            qs = qs.filter(type__lte=access)
-
-        try:
-            om = qs.get()
-        except OrganizationMember.DoesNotExist:
-            return []
-
-        if om.has_global_access:
+        if settings.SENTRY_PUBLIC and access is None:
             team_qs = self.filter(organization=organization)
-        else:
-            team_qs = om.teams.all()
+            for team in team_qs:
+                team.access_type = OrganizationMemberType.MEMBER
 
-        for team in team_qs:
-            team.access_type = om.type
-            all_teams.add(team)
-
-        results = sorted(all_teams, key=lambda x: x.name.lower())
+        else:
+            qs = OrganizationMember.objects.filter(
+                user=user,
+                organization=organization,
+            )
+            if access is not None:
+                qs = qs.filter(type__lte=access)
+
+            try:
+                om = qs.get()
+            except OrganizationMember.DoesNotExist:
+                return []
+
+            if om.has_global_access:
+                team_qs = self.filter(organization=organization)
+            else:
+                team_qs = om.teams.all()
+
+            for team in team_qs:
+                team.access_type = om.type
+
+        results = sorted(team_qs, key=lambda x: x.name.lower())
 
         if with_projects:
             # these kinds of queries make people sad :(
