commit 60b69c696984c617293ad7bf823d480d6d4d687f
Author: Ben Vinegar <ben@benv.ca>
Date:   Fri Sep 30 17:28:03 2016 -0700

    Move incidents panel into its own component

diff --git a/src/sentry/static/sentry/app/components/sidebar/incidents.jsx b/src/sentry/static/sentry/app/components/sidebar/incidents.jsx
new file mode 100644
index 0000000000..acce6203bb
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/incidents.jsx
@@ -0,0 +1,73 @@
+import React from 'react';
+import Reflux from 'reflux';
+
+import SidebarPanel from '../sidebarPanel';
+
+import IncidentStore from '../../stores/incidentStore';
+import {t} from '../../locale';
+
+const Incidents = React.createClass({
+  propTypes: {
+    showPanel: React.PropTypes.bool,
+    currentPanel: React.PropTypes.currentPanel,
+    hidePanel: React.PropTypes.func,
+    onShowPanel: React.PropTypes.func.isRequired
+  },
+
+  mixins: [
+    Reflux.listenTo(IncidentStore, 'onIncidentChange'),
+  ],
+
+  getInitialState() {
+    return {
+      status: null
+    };
+  },
+
+  onIncidentChange(status) {
+    this.setState({
+      status: {...status}
+    });
+  },
+
+  render() {
+    let {status} = this.state;
+    if (!status) return null;
+
+    return status && status.incidents.length > 0 &&
+      <li className={this.props.currentPanel == 'statusupdate' ? 'active' : null }>
+        <a onClick={this.props.onShowPanel}><span className="icon icon-alert"/></a>
+        {this.props.showPanel && this.props.currentPanel == 'statusupdate' && status &&
+          <SidebarPanel title={t('Recent status updates')}
+                        hidePanel={this.props.hidePanel}>
+            <ul className="incident-list list-unstyled">
+              {status.incidents.map((incident) =>
+                <li className="incident-item" key={incident.id}>
+                  <h4>{incident.title}</h4>
+                  {incident.updates ?
+                    <div>
+                      <h6>Latest updates:</h6>
+                      <ul className="status-list list-unstyled">
+                        {incident.updates.map((update, key) =>
+                          <li className="status-item" key={key}>
+                            <p>{update}</p>
+                          </li>
+                        )}
+                      </ul>
+                    </div>
+                    :
+                    null
+                  }
+                  <p>
+                    <a href={incident.url} className="btn btn-default btn-sm">Learn more</a>
+                  </p>
+                </li>
+              )}
+            </ul>
+          </SidebarPanel>
+        }
+      </li>;
+  }
+});
+
+export default Incidents;
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 38d7a61b7a..21c1feb4d4 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -1,13 +1,12 @@
 import React from 'react';
-import Reflux from 'reflux';
 import $ from 'jquery';
 
 import ApiMixin from '../../mixins/apiMixin';
-import IncidentStore from '../../stores/incidentStore';
 import OrganizationState from '../../mixins/organizationState';
 import {load as loadIncidents} from '../../actionCreators/incidents';
 
 import Broadcasts from './broadcasts';
+import Incidents from './incidents';
 import UserNav from './userNav';
 import requiredAdminActions from '../requiredAdminActions';
 import OrganizationSelector from './organizationSelector';
@@ -75,13 +74,11 @@ const Sidebar = React.createClass({
   mixins: [
     ApiMixin,
     OrganizationState,
-    Reflux.listenTo(IncidentStore, 'onIncidentChange'),
   ],
 
   getInitialState: function() {
     return {
-      showTodos: location.hash === '#welcome',
-      status: null
+      showTodos: location.hash === '#welcome'
     };
   },
 
@@ -111,12 +108,6 @@ const Sidebar = React.createClass({
     }
   },
 
-  onIncidentChange(status) {
-    this.setState({
-      status: {...status}
-    });
-  },
-
   toggleTodos(e) {
     this.setState({showTodos: !this.state.showTodos});
   },
@@ -155,8 +146,6 @@ const Sidebar = React.createClass({
       );
     }
 
-    let status = this.state.status;
-
     return (<div>
       <OrganizationSelector
         organization={org}
@@ -236,35 +225,6 @@ const Sidebar = React.createClass({
             params={{orgId: org.slug}} />
         </SidebarPanel>
       }
-      {this.state.showPanel && this.state.currentPanel == 'statusupdate' && status &&
-        <SidebarPanel title={t('Recent status updates')}
-                      hidePanel={()=>this.hidePanel()}>
-          <ul className="incident-list list-unstyled">
-            {status.incidents.map((incident) =>
-              <li className="incident-item" key={incident.id}>
-                <h4>{incident.title}</h4>
-                {incident.updates ?
-                  <div>
-                    <h6>Latest updates:</h6>
-                    <ul className="status-list list-unstyled">
-                      {incident.updates.map((update, key) =>
-                        <li className="status-item" key={key}>
-                          <p>{update}</p>
-                        </li>
-                      )}
-                    </ul>
-                  </div>
-                  :
-                  null
-                }
-                <p>
-                  <a href={incident.url} className="btn btn-default btn-sm">Learn more</a>
-                </p>
-              </li>
-            )}
-          </ul>
-        </SidebarPanel>
-      }
     </div>);
   },
 
@@ -314,11 +274,12 @@ const Sidebar = React.createClass({
               onShowPanel={()=>this.togglePanel('broadcasts')}
               hidePanel={()=>this.hidePanel()} />
 
-            {this.state.status && this.state.status.incidents.length > 0 &&
-              <li className={this.state.currentPanel == 'statusupdate' ? 'active' : null }>
-                <a onClick={()=>this.togglePanel('statusupdate')}><span className="icon icon-alert"/></a>
-              </li>
-            }
+            <Incidents
+              showPanel={this.state.showPanel}
+              currentPanel={this.state.currentPanel}
+              onShowPanel={()=>this.togglePanel('statusupdate')}
+              hidePanel={()=>this.hidePanel()} />
+
             <li>
               <UserNav className="user-settings" />
             </li>
