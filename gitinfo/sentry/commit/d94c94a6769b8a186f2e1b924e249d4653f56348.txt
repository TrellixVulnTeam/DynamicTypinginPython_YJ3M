commit d94c94a6769b8a186f2e1b924e249d4653f56348
Author: Mark Story <mark@sentry.io>
Date:   Thu Sep 13 15:25:29 2018 -0400

    ref(settings) Remove feature checks for new-settings
    
    Old settings are no longer a thing for any customers, we can remove
    feature checks as they aren't doing much.

diff --git a/src/sentry/api/serializers/models/organization.py b/src/sentry/api/serializers/models/organization.py
index 38087330a7..a59a6a88ea 100644
--- a/src/sentry/api/serializers/models/organization.py
+++ b/src/sentry/api/serializers/models/organization.py
@@ -109,8 +109,6 @@ class DetailedOrganizationSerializer(OrganizationSerializer):
             feature_list.append('group-unmerge')
         if features.has('organizations:github-apps', obj, actor=user):
             feature_list.append('github-apps')
-        if features.has('organizations:new-settings', obj, actor=user):
-            feature_list.append('new-settings')
         if features.has('organizations:require-2fa', obj, actor=user):
             feature_list.append('require-2fa')
         if features.has('organizations:environments', obj, actor=user):
@@ -159,6 +157,10 @@ class DetailedOrganizationSerializer(OrganizationSerializer):
         if features.has('organizations:event-attachments', obj, actor=user):
             feature_list.append('event-attachments')
 
+        # deleteme: new-settings UI checks have been removed, but this was
+        # left behind to smooth over deploy boundaries.
+        feature_list.append('new-settings')
+
         experiment_assignments = experiments.all(org=obj)
 
         context = super(DetailedOrganizationSerializer, self).serialize(obj, attrs, user)
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 3ad1341e7b..ba20101440 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -769,7 +769,6 @@ SENTRY_FEATURES = {
     'organizations:group-unmerge': False,
     'organizations:github-apps': True,
     'organizations:invite-members': True,
-    'organizations:new-settings': True,
     'organizations:require-2fa': False,
     'organizations:environments': True,
     'organizations:internal-catchall': False,
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 42a5ec71b4..98aaa3b83a 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -19,7 +19,6 @@ default_manager.add('organizations:suggested-commits', OrganizationFeature)  # N
 default_manager.add('organizations:group-unmerge', OrganizationFeature)  # NOQA
 default_manager.add('organizations:github-apps', OrganizationFeature)  # NOQA
 default_manager.add('organizations:invite-members', OrganizationFeature)  # NOQA
-default_manager.add('organizations:new-settings', OrganizationFeature)  # NOQA
 default_manager.add('organizations:require-2fa', OrganizationFeature)  # NOQA
 default_manager.add('organizations:internal-catchall', OrganizationFeature)  # NOQA
 default_manager.add('organizations:new-issue-ui', OrganizationFeature)  # NOQA
diff --git a/src/sentry/static/sentry/app/components/projectHeader/index.jsx b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
index 4db2e16abb..26aa144d3b 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
@@ -93,13 +93,7 @@ class ProjectHeader extends React.Component {
               </li>
               {access.has('project:write') && (
                 <li className={navSection == 'settings' ? 'active' : ''}>
-                  <Link
-                    to={
-                      orgFeatures.has('new-settings')
-                        ? `/settings/${org.slug}/${project.slug}/`
-                        : `/${org.slug}/${project.slug}/settings/`
-                    }
-                  >
+                  <Link to={`/settings/${org.slug}/${project.slug}/`}>
                     {t('Settings')}
                   </Link>
                 </li>
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index b764df6f60..295e8c05f1 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -83,12 +83,8 @@ const ProjectSettings = createReactClass({
     else if (this.state.error) return <LoadingError onRetry={this.fetchData} />;
 
     let access = this.getAccess();
-    let features = this.getFeatures();
     let {orgId, projectId} = this.props.params;
-    let hasNewSettings = features.has('new-settings');
-    let pathPrefix = hasNewSettings
-      ? `/settings/${orgId}/${projectId}`
-      : `/${orgId}/${projectId}/settings`;
+    let pathPrefix = `/settings/${orgId}/${projectId}`;
     let settingsUrlRoot = pathPrefix;
     let project = this.state.project;
     let rootInstallPath = `${pathPrefix}/install/`;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
index 48b5702080..0113473eda 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
@@ -7,12 +7,10 @@ import Reflux from 'reflux';
 import {fetchTeamDetails} from 'app/actionCreators/teams';
 import {t} from 'app/locale';
 import ApiMixin from 'app/mixins/apiMixin';
-import DropdownLink from 'app/components/dropdownLink';
 import IdBadge from 'app/components/idBadge';
 import ListLink from 'app/components/listLink';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
-import MenuItem from 'app/components/menuItem';
 import NavTabs from 'app/components/navTabs';
 import OrganizationState from 'app/mixins/organizationState';
 import TeamStore from 'app/stores/teamStore';
@@ -91,34 +89,16 @@ const TeamDetails = createReactClass({
     else if (!team || this.state.error) return <LoadingError onRetry={this.fetchData} />;
 
     let routePrefix = recreateRoute('', {routes, params, stepBack: -1}); //`/organizations/${orgId}/teams/${teamId}`;
-    let access = this.getAccess();
 
-    //TODO(maxbittker) remove hack to not show this page on old settings
-    let onNewSettings = routePrefix.startsWith('/settings/');
-
-    const features = new Set(this.context.organization.features);
     return (
       <div>
         <h3>
           <IdBadge hideAvatar team={team} avatarSize={36} />
         </h3>
 
-        {!features.has('new-settings') &&
-          access.has('team:admin') && (
-            <DropdownLink anchorRight title={t('More')}>
-              <MenuItem
-                href={`/organizations/${params.orgId}/teams/${params.teamId}/remove/`}
-              >
-                {t('Remove Team')}
-              </MenuItem>
-            </DropdownLink>
-          )}
-
         <NavTabs underlined={true}>
           <ListLink to={`${routePrefix}members/`}>{t('Members')}</ListLink>
-          {onNewSettings ? (
-            <ListLink to={`${routePrefix}projects/`}>{t('Projects')}</ListLink>
-          ) : null}
+          <ListLink to={`${routePrefix}projects/`}>{t('Projects')}</ListLink>
           <ListLink to={`${routePrefix}settings/`}>{t('Settings')}</ListLink>
         </NavTabs>
 
