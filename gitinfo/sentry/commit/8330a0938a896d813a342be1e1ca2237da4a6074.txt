commit 8330a0938a896d813a342be1e1ca2237da4a6074
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Aug 31 15:24:46 2017 -0700

    feat(workflow): change events tab (#5929)
    
    * feat(workflow): add <ScoreBar>
    
    * feat(workflow): change "similar issues" ui
    
    * build(storybook): add knobs addon
    
    * feat(workflow): add Hovercard component
    
    * ref(workflow): VersionHoverCard to use Hovercard
    
    * feat(workflow): Add FlowLayout
    
    Add additional stories for split/spreadLayout
    
    * fix(workflow): undefined classNames in Pills
    
    * feat(workflow): Add <Toolbar> and <ToolbarHeader>
    
    * ref(workflow): old stream actions to use <Toolbar>
    
    * feat(workflow): move merged events to new tab
    
    * Moved "Merged Items" from old "Grouping" tab to new "Merged" tab

diff --git a/.storybook/addons.js b/.storybook/addons.js
index 5dea101a7c..218bf7a5e6 100644
--- a/.storybook/addons.js
+++ b/.storybook/addons.js
@@ -1 +1,2 @@
 import '@storybook/addon-actions/register';
+import '@storybook/addon-knobs/register';
diff --git a/.storybook/config.js b/.storybook/config.js
index 854b685385..db80432fdb 100644
--- a/.storybook/config.js
+++ b/.storybook/config.js
@@ -1,5 +1,6 @@
-import {configure, setAddon} from '@storybook/react';
+import {configure, setAddon, addDecorator} from '@storybook/react';
 import infoAddon, {setDefaults} from '@storybook/addon-info';
+import {withKnobs} from '@storybook/addon-knobs';
 import './storybook.less';
 
 setDefaults({
@@ -9,6 +10,7 @@ setDefaults({
 });
 setAddon(infoAddon);
 
+addDecorator(withKnobs);
 // Use webpack's require.context to load modules dynamically
 // From https://storybook.js.org/basics/writing-stories/
 const req = require.context('../docs-ui/components', true, /\.stories\.js$/);
diff --git a/docs-ui/components/clippedBox.stories.js b/docs-ui/components/clippedBox.stories.js
index f273d24327..e18e14c311 100644
--- a/docs-ui/components/clippedBox.stories.js
+++ b/docs-ui/components/clippedBox.stories.js
@@ -1,16 +1,13 @@
 import React from 'react';
 import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
 // import {action} from '@storybook/addon-actions';
 
 import ClippedBox from 'sentry-ui/clippedBox';
 
-storiesOf(
-  'ClippedBox',
-  module
-).addWithInfo(
+storiesOf('ClippedBox', module).add(
   'default',
-  'Component that clips content and allows expansion of container',
-  () => (
+  withInfo('Component that clips content and allows expansion of container')(() => (
     <div>
       <div>
         <ClippedBox
@@ -24,5 +21,5 @@ storiesOf(
         </ClippedBox>
       </div>
     </div>
-  )
+  ))
 );
diff --git a/docs-ui/components/flowLayout.stories.js b/docs-ui/components/flowLayout.stories.js
new file mode 100644
index 0000000000..e833e16b92
--- /dev/null
+++ b/docs-ui/components/flowLayout.stories.js
@@ -0,0 +1,63 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+// import {action} from '@storybook/addon-actions';
+
+import FlowLayout from 'sentry-ui/flowLayout';
+import SpreadLayout from 'sentry-ui/spreadLayout';
+
+storiesOf('ComponentLayouts/FlowLayout', module)
+  .add(
+    'default',
+    withInfo('Horizontal row with vertical centering')(() => (
+      <FlowLayout style={{backgroundColor: '#fff'}}>
+        <div style={{padding: 6, backgroundColor: 'rgba(0, 0, 0, 0.2)'}}>
+          Flow
+        </div>
+        <div style={{padding: 12, backgroundColor: 'rgba(0, 0, 0, 0.1)'}}>
+          Layout
+        </div>
+        <div style={{padding: 24, backgroundColor: 'rgba(0, 0, 0, 0.05)'}}>
+          Flow
+        </div>
+        <div style={{padding: 18, backgroundColor: 'rgba(0, 0, 0, 0.3)'}}>
+          Layout
+        </div>
+      </FlowLayout>
+    ))
+  )
+  .add(
+    'long content (truncate)',
+    withInfo(
+      'When you use <FlowLayout> with content that does not get wrapped and overflows, by default hide overflow.'
+    )(() => (
+      <div>
+        <h3 style={{marginBottom: 0, marginTop: 24}}>With "truncate"</h3>
+        <SpreadLayout style={{backgroundColor: 'white', width: 250}}>
+          <FlowLayout truncate={true}>
+            <span className="truncate" style={{whiteSpace: 'nowrap'}}>
+              Very very long content Very very long content Very very long content Very very long content
+            </span>
+          </FlowLayout>
+
+          <div style={{backgroundColor: '#ccc'}}>
+            Important
+          </div>
+        </SpreadLayout>
+
+        <h3 style={{marginBottom: 0, marginTop: 24}}>Without "truncate"</h3>
+        <SpreadLayout style={{backgroundColor: 'white', width: 250}}>
+          <FlowLayout truncate={false}>
+            <span className="truncate" style={{whiteSpace: 'nowrap'}}>
+              Very very long content Very very long content Very very long content Very very long content
+            </span>
+          </FlowLayout>
+
+          <div style={{backgroundColor: '#ccc'}}>
+            Important
+          </div>
+        </SpreadLayout>
+
+      </div>
+    ))
+  );
diff --git a/docs-ui/components/form.stories.js b/docs-ui/components/form.stories.js
index 8812892bd8..9d363300ca 100644
--- a/docs-ui/components/form.stories.js
+++ b/docs-ui/components/form.stories.js
@@ -15,7 +15,7 @@ storiesOf('Forms/Form', module)
     ))
   );
 
-storiesOf('Forms/Fields')
+storiesOf('Forms/Fields', module)
   .add(
     'TextField',
     withInfo('Simple text input')(() => (
diff --git a/docs-ui/components/formatters.stories.js b/docs-ui/components/formatters.stories.js
index edd1d2a520..ff68159be5 100644
--- a/docs-ui/components/formatters.stories.js
+++ b/docs-ui/components/formatters.stories.js
@@ -9,10 +9,9 @@ import DateTime from 'sentry-ui/dateTime';
 import Count from 'sentry-ui/count';
 
 storiesOf('Formatters', module)
-  .addWithInfo(
+  .add(
     'DateTime',
-    'Formats number (in ms or seconds) into a datetime string',
-    () => (
+    withInfo('Formats number (in ms or seconds) into a datetime string')(() => (
       <div>
         <div>
           <DateTime date={1500000000000} />
@@ -21,7 +20,7 @@ storiesOf('Formatters', module)
           <DateTime seconds={false} date={1500000000000} />
         </div>
       </div>
-    )
+    ))
   )
   .add(
     'FileSize',
diff --git a/docs-ui/components/hovercard.stories.js b/docs-ui/components/hovercard.stories.js
new file mode 100644
index 0000000000..6abb23c9b3
--- /dev/null
+++ b/docs-ui/components/hovercard.stories.js
@@ -0,0 +1,27 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import {text} from '@storybook/addon-knobs';
+
+import Hovercard from 'sentry-ui/hovercard';
+
+storiesOf('Hovercard', module).add(
+  'default',
+  withInfo(
+    'Good luck if your container element is near the top and/or left side of the screen'
+  )(() => (
+    <div
+      style={{
+        height: 300,
+        display: 'flex',
+        justifyContent: 'center',
+        alignItems: 'center'
+      }}>
+      <Hovercard
+        header={text('Header', 'Hovercard Header')}
+        body={text('Body', 'Hovercard body (can also be a React node)')}>
+        Hover over me
+      </Hovercard>
+    </div>
+  ))
+);
diff --git a/docs-ui/components/scoreBar.stories.js b/docs-ui/components/scoreBar.stories.js
new file mode 100644
index 0000000000..163de5f01e
--- /dev/null
+++ b/docs-ui/components/scoreBar.stories.js
@@ -0,0 +1,62 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import {number, boolean, array, color} from '@storybook/addon-knobs';
+// import {action} from '@storybook/addon-actions';
+
+import ScoreBar from 'sentry-ui/scoreBar';
+
+const stories = storiesOf('ScoreBar', module);
+stories
+  .add(
+    'horizontal',
+    withInfo('Description')(() => (
+      <div style={{backgroundColor: 'white', padding: 12}}>
+        <ScoreBar
+          vertical={boolean('Vertical', false)}
+          size={number('Size')}
+          thickness={number('Thickness')}
+          score={number('Score', 3)}
+        />
+      </div>
+    ))
+  )
+  .add(
+    'vertical',
+    withInfo('Description')(() => {
+      return (
+        <div style={{backgroundColor: 'white', padding: 12}}>
+          <ScoreBar
+            vertical={boolean('Vertical', true)}
+            size={number('Size')}
+            thickness={number('Thickness')}
+            score={number('Score', 3)}
+          />
+        </div>
+      );
+    })
+  )
+  .add(
+    'custom palette',
+    withInfo('Description')(() => {
+      let palette = array('Palette', [
+        color('Lower', 'pink'),
+        color('Low', 'yellow'),
+        color('Med', 'lime'),
+        color('High', 'blue'),
+        color('Higher', 'purple')
+      ]);
+
+      return (
+        <div style={{backgroundColor: 'white', padding: 12}}>
+          <ScoreBar
+            vertical={boolean('Vertical', false)}
+            size={number('Size')}
+            thickness={number('Thickness')}
+            score={number('Score', 3)}
+            palette={palette}
+          />
+        </div>
+      );
+    })
+  );
diff --git a/docs-ui/components/splitLayout.stories.js b/docs-ui/components/splitLayout.stories.js
new file mode 100644
index 0000000000..fcc49b9449
--- /dev/null
+++ b/docs-ui/components/splitLayout.stories.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+// import {action} from '@storybook/addon-actions';
+
+import SplitLayout from 'sentry-ui/splitLayout';
+
+storiesOf('ComponentLayouts/SplitLayout', module).add(
+  'default',
+  withInfo('Children elements have equal size')(() => (
+    <SplitLayout style={{backgroundColor: '#fff'}}>
+      <div style={{padding: 6, backgroundColor: 'rgba(0, 0, 0, 0.2)'}}>
+        Split
+      </div>
+      <div style={{padding: 12, backgroundColor: 'rgba(0, 0, 0, 0.1)'}}>
+        Layout
+      </div>
+    </SplitLayout>
+  ))
+);
diff --git a/docs-ui/components/spreadLayout.stories.js b/docs-ui/components/spreadLayout.stories.js
new file mode 100644
index 0000000000..7df533f6b5
--- /dev/null
+++ b/docs-ui/components/spreadLayout.stories.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+// import {action} from '@storybook/addon-actions';
+
+import SpreadLayout from 'sentry-ui/spreadLayout';
+
+storiesOf('ComponentLayouts/SpreadLayout', module).add(
+  'default',
+  withInfo('Children elements get spread out (flexbox space-between)')(() => (
+    <SpreadLayout style={{backgroundColor: '#fff'}}>
+      <div style={{padding: 6, backgroundColor: 'rgba(0, 0, 0, 0.2)'}}>
+        Spread
+      </div>
+      <div style={{padding: 12, backgroundColor: 'rgba(0, 0, 0, 0.1)'}}>
+        Layout
+      </div>
+    </SpreadLayout>
+  ))
+);
diff --git a/docs-ui/components/toolbar.stories.js b/docs-ui/components/toolbar.stories.js
new file mode 100644
index 0000000000..57e2bb9de4
--- /dev/null
+++ b/docs-ui/components/toolbar.stories.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+// import {action} from '@storybook/addon-actions';
+
+import Toolbar from 'sentry-ui/toolbar';
+import ToolbarHeader from 'sentry-ui/toolbarHeader';
+import SpreadLayout from 'sentry-ui/spreadLayout';
+
+storiesOf('Toolbar', module).add(
+  'default',
+  withInfo(
+    'Toolbar that is used on top of a box. i.e. Issue Stream. Not responsible for any layout/padding.'
+  )(() => (
+    <Toolbar>
+      <SpreadLayout>
+        <ToolbarHeader>Left</ToolbarHeader><ToolbarHeader>Right</ToolbarHeader>
+      </SpreadLayout>
+    </Toolbar>
+  ))
+);
diff --git a/package.json b/package.json
index e1557fd1ee..cfe2ac692a 100644
--- a/package.json
+++ b/package.json
@@ -98,6 +98,9 @@
     "setupFiles": [
       "<rootDir>/tests/js/setup.js"
     ],
+    "testPathIgnorePatterns": [
+      "<rootDir>/tests/sentry/lang/javascript/"
+    ],
     "unmockedModulePathPatterns": [
       "<rootDir>/node_modules/react",
       "<rootDir>/node_modules/reflux"
@@ -107,6 +110,7 @@
     "@percy-io/react-percy-storybook": "^1.0.2",
     "@storybook/addon-actions": "^3.2.0",
     "@storybook/addon-info": "^3.2.0",
+    "@storybook/addon-knobs": "^3.2.0",
     "@storybook/react": "^3.2.0",
     "babel-eslint": "7.1.1",
     "babel-jest": "^19.0.0",
diff --git a/src/sentry/static/sentry/app/actions/groupingActions.jsx b/src/sentry/static/sentry/app/actions/groupingActions.jsx
index d42452054f..3ef7c32e6d 100644
--- a/src/sentry/static/sentry/app/actions/groupingActions.jsx
+++ b/src/sentry/static/sentry/app/actions/groupingActions.jsx
@@ -7,6 +7,9 @@ let GroupingActions = Reflux.createActions([
   'toggleUnmerge',
   'toggleMerge',
   'unmerge',
-  'merge'
+  'merge',
+  'expandFingerprints',
+  'collapseFingerprints',
+  'toggleCollapseFingerprint'
 ]);
 export default GroupingActions;
diff --git a/src/sentry/static/sentry/app/components/eventsTable/eventsTable.jsx b/src/sentry/static/sentry/app/components/eventsTable/eventsTable.jsx
new file mode 100644
index 0000000000..8b482ee42d
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/eventsTable/eventsTable.jsx
@@ -0,0 +1,66 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import classNames from 'classnames';
+
+import {t} from '../../locale';
+import CustomPropTypes from '../../proptypes';
+import EventsTableRow from './eventsTableRow';
+
+const EventsTable = React.createClass({
+  propTypes: {
+    fixedDimensions: PropTypes.bool,
+    events: PropTypes.arrayOf(CustomPropTypes.Event),
+    tagList: PropTypes.arrayOf(CustomPropTypes.Tag)
+  },
+
+  getDefaultProps() {
+    return {
+      fixedDimensions: false
+    };
+  },
+
+  render() {
+    let {className, events, fixedDimensions, tagList} = this.props;
+
+    let cx = classNames('table events-table', className);
+    let hasUser = !!events.find(event => event.user);
+    let {orgId, projectId, groupId} = this.props.params;
+
+    return (
+      <table className={cx}>
+        <thead>
+          <tr>
+            <th>{t('ID')}</th>
+            {hasUser && <th>{t('User')}</th>}
+
+            {tagList.map(tag => {
+              return (
+                <th key={tag.key}>
+                  {tag.name}
+                </th>
+              );
+            })}
+          </tr>
+        </thead>
+        <tbody>
+          {events.map(event => {
+            return (
+              <EventsTableRow
+                truncate={fixedDimensions}
+                key={event.id}
+                event={event}
+                orgId={orgId}
+                projectId={projectId}
+                groupId={groupId}
+                tagList={tagList}
+                hasUser={hasUser}
+              />
+            );
+          })}
+        </tbody>
+      </table>
+    );
+  }
+});
+
+export default EventsTable;
diff --git a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
new file mode 100644
index 0000000000..fdf0741eff
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
@@ -0,0 +1,102 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import {Link} from 'react-router';
+import classNames from 'classnames';
+
+import CustomPropTypes from '../../proptypes';
+import Avatar from '../../components/avatar';
+import DateTime from '../../components/dateTime';
+import deviceNameMapper from '../../utils/deviceNameMapper';
+
+import '../../../less/components/eventsTableRow.less';
+
+const EventsTableRow = React.createClass({
+  propTypes: {
+    hasUser: PropTypes.bool,
+    truncate: PropTypes.bool,
+    orgId: PropTypes.string.isRequired,
+    groupId: PropTypes.string.isRequired,
+    projectId: PropTypes.string.isRequired,
+    event: CustomPropTypes.Event.isRequired,
+    tagList: PropTypes.arrayOf(CustomPropTypes.Tag)
+  },
+
+  getDefaultProps() {
+    return {truncate: false};
+  },
+
+  getEventTitle(event) {
+    switch (event.type) {
+      case 'error':
+        if (event.metadata.type && event.metadata.value)
+          return `${event.metadata.type}: ${event.metadata.value}`;
+        return event.metadata.type || event.metadata.value || event.metadata.title;
+      case 'csp':
+        return event.metadata.message;
+      case 'default':
+        return event.metadata.title;
+      default:
+        return event.message.split('\n')[0];
+    }
+  },
+
+  render() {
+    let {
+      className,
+      event,
+      orgId,
+      projectId,
+      groupId,
+      tagList,
+      truncate,
+      hasUser
+    } = this.props;
+    let cx = classNames('events-table-row', className);
+    let tagMap = {};
+    event.tags.forEach(tag => {
+      tagMap[tag.key] = tag.value;
+    });
+
+    return (
+      <tr key={event.id} className={cx}>
+        <td>
+          <h5 className={truncate ? 'truncate' : ''}>
+            <Link to={`/${orgId}/${projectId}/issues/${groupId}/events/${event.id}/`}>
+              <DateTime date={event.dateCreated} />
+            </Link>
+            <small>{(this.getEventTitle(event) || '').substr(0, 100)}</small>
+          </h5>
+        </td>
+
+        {hasUser &&
+          <td className="event-user table-user-info">
+            {event.user
+              ? <div>
+                  <Avatar
+                    user={event.user}
+                    size={64}
+                    className="avatar"
+                    gravatar={false}
+                  />
+                  {event.user.email}
+                </div>
+              : <span>—</span>}
+          </td>}
+
+        {tagList.map(tag => {
+          return (
+            <td key={tag.key}>
+              <div className={truncate ? 'truncate' : ''}>
+                {tag.key === 'device'
+                  ? deviceNameMapper(tagMap[tag.key])
+                  : tagMap[tag.key]}
+              </div>
+            </td>
+          );
+        })}
+      </tr>
+    );
+  }
+});
+
+export default EventsTableRow;
diff --git a/src/sentry/static/sentry/app/components/flowLayout.jsx b/src/sentry/static/sentry/app/components/flowLayout.jsx
new file mode 100644
index 0000000000..c72d480a3c
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/flowLayout.jsx
@@ -0,0 +1,34 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import classNames from 'classnames';
+import '../../less/components/flowLayout.less';
+
+// Simple horizontal layout with vertical centering
+// Takes up remaining space of a flexbox container (i.e. "flex: 1")
+const FlowLayout = React.createClass({
+  propTypes: {
+    /** Applies "overflow: hidden" to container so that children can be truncated */
+    truncate: PropTypes.bool
+  },
+
+  getDefaultProps() {
+    return {
+      truncate: true
+    };
+  },
+
+  render() {
+    let {className, children, truncate, ...otherProps} = this.props;
+    let cx = classNames('flow-layout', className, {
+      'is-truncated': truncate
+    });
+
+    return (
+      <div className={cx} {...otherProps}>
+        {children}
+      </div>
+    );
+  }
+});
+
+export default FlowLayout;
diff --git a/src/sentry/static/sentry/app/components/groupListHeader.jsx b/src/sentry/static/sentry/app/components/groupListHeader.jsx
index f68c734471..eeec7e82ee 100644
--- a/src/sentry/static/sentry/app/components/groupListHeader.jsx
+++ b/src/sentry/static/sentry/app/components/groupListHeader.jsx
@@ -1,24 +1,26 @@
 import React from 'react';
 import {t} from '../locale';
+import Toolbar from './toolbar';
+import ToolbarHeader from './toolbarHeader';
 
 const GroupListHeader = React.createClass({
   render() {
     return (
       <div className="group-header">
-        <div className="stream-actions row">
-          <div className="stream-actions-left col-md-7 col-sm-8 col-xs-8 nav-header">
+        <Toolbar className="stream-actions row">
+          <ToolbarHeader className="stream-actions-left col-md-7 col-sm-8 col-xs-8 nav-header">
             {t('Event')}
-          </div>
-          <div className="hidden-sm hidden-xs stream-actions-graph col-md-2 col-md-offset-1 align-right nav-header">
+          </ToolbarHeader>
+          <ToolbarHeader className="hidden-sm hidden-xs stream-actions-graph col-md-2 col-md-offset-1 align-right nav-header">
             {t('Last 24 hours')}
-          </div>
-          <div className="stream-actions-count align-right col-md-1 col-sm-2 col-xs-2">
+          </ToolbarHeader>
+          <ToolbarHeader className="stream-actions-count align-right col-md-1 col-sm-2 col-xs-2">
             {t('events')}
-          </div>
-          <div className="stream-actions-users align-right col-md-1 col-sm-2 col-xs-2">
+          </ToolbarHeader>
+          <ToolbarHeader className="stream-actions-users align-right col-md-1 col-sm-2 col-xs-2">
             {t('users')}
-          </div>
-        </div>
+          </ToolbarHeader>
+        </Toolbar>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/hovercard.jsx b/src/sentry/static/sentry/app/components/hovercard.jsx
new file mode 100644
index 0000000000..7163bb1cff
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/hovercard.jsx
@@ -0,0 +1,60 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import classNames from 'classnames';
+
+const Hovercard = React.createClass({
+  propTypes: {
+    className: PropTypes.string,
+    containerClassName: PropTypes.string,
+    header: PropTypes.node,
+    body: PropTypes.node
+  },
+
+  getInitialState() {
+    return {
+      visible: false
+    };
+  },
+
+  handleToggleHovercard() {
+    let {header, body} = this.props;
+
+    // Don't toggle hovercard if both of these are null
+    if (!header && !body) return;
+
+    this.setState({
+      visible: !this.state.visible
+    });
+  },
+
+  render() {
+    let {containerClassName, className, header, body} = this.props;
+    let {visible} = this.state;
+
+    let containerCx = classNames('hovercard-container', containerClassName);
+    let cx = classNames('hovercard', className);
+
+    return (
+      <span
+        className={containerCx}
+        onMouseEnter={this.handleToggleHovercard}
+        onMouseLeave={this.handleToggleHovercard}>
+        {this.props.children}
+        {visible &&
+          <div className={cx}>
+            <div className="hovercard-hoverlap" />
+            {header &&
+              <div className="hovercard-header">
+                {header}
+              </div>}
+            {body &&
+              <div className="hovercard-body">
+                {body}
+              </div>}
+          </div>}
+      </span>
+    );
+  }
+});
+
+export default Hovercard;
diff --git a/src/sentry/static/sentry/app/components/pill.jsx b/src/sentry/static/sentry/app/components/pill.jsx
index c726a15feb..ea1786ca88 100644
--- a/src/sentry/static/sentry/app/components/pill.jsx
+++ b/src/sentry/static/sentry/app/components/pill.jsx
@@ -1,5 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import classNames from 'classnames';
 
 const Pill = React.createClass({
   propTypes: {
@@ -32,7 +33,7 @@ const Pill = React.createClass({
     let [extraClass, renderedValue] = this.renderValue();
 
     return (
-      <li className={(className || '') + (extraClass ? ' ' + extraClass : '')} {...props}>
+      <li className={classNames(className, extraClass)} {...props}>
         <span className="key">{name}</span>
         <span className="value">{renderedValue}{children}</span>
       </li>
diff --git a/src/sentry/static/sentry/app/components/pills.jsx b/src/sentry/static/sentry/app/components/pills.jsx
index 869c53b73e..b68e2e3df6 100644
--- a/src/sentry/static/sentry/app/components/pills.jsx
+++ b/src/sentry/static/sentry/app/components/pills.jsx
@@ -1,10 +1,12 @@
 import React from 'react';
+import classNames from 'classnames';
 
 const Pills = React.createClass({
   render() {
+    let {className, children, ...otherProps} = this.props;
     return (
-      <div className={this.props.className + ' pills'}>
-        {this.props.children}
+      <div className={classNames('pills', className)} {...otherProps}>
+        {children}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/scoreBar.jsx b/src/sentry/static/sentry/app/components/scoreBar.jsx
new file mode 100644
index 0000000000..35e5375c25
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/scoreBar.jsx
@@ -0,0 +1,88 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import classNames from 'classnames';
+import '../../less/components/scoreBar.less';
+
+const ScoreBar = React.createClass({
+  propTypes: {
+    vertical: PropTypes.bool,
+    score: PropTypes.number.isRequired,
+    /** Array of strings */
+    palette: PropTypes.arrayOf(PropTypes.string),
+    /** Array of classNames whose index maps to score */
+    paletteClassNames: PropTypes.arrayOf(PropTypes.string),
+    /** Default controlled by CSS */
+    size: PropTypes.number,
+    thickness: PropTypes.number
+  },
+
+  getDefaultProps() {
+    return {
+      palette: [],
+      paletteClassNames: ['red', 'red', 'orange', 'green', 'green']
+    };
+  },
+
+  getInitialState() {
+    return {};
+  },
+
+  render() {
+    let {
+      className,
+      vertical,
+      palette,
+      paletteClassNames,
+      score,
+      size,
+      thickness
+    } = this.props;
+    let useCss = !!paletteClassNames.length && !palette.length;
+    let maxScore = useCss ? paletteClassNames.length : palette.length;
+    let cx = classNames('score-bar', className, {
+      vertical,
+      horizontal: !vertical
+    });
+
+    // Make sure score is between 0 and maxScore
+    let scoreInBounds = score >= maxScore ? maxScore : score <= 0 ? 0 : score;
+    // Make sure paletteIndex is 0 based
+    let paletteIndex = scoreInBounds - 1;
+
+    // Size of bar, depends on orientation, although we could just apply a transformation via css
+    let sizeStyle = {
+      [vertical ? 'width' : 'height']: size,
+      [vertical ? 'height' : 'width']: thickness
+    };
+
+    let style = {
+      ...sizeStyle,
+      ...(!useCss
+        ? {
+            backgroundColor: palette[paletteIndex]
+          }
+        : {})
+    };
+
+    return (
+      <div className={cx}>
+        {[...Array(scoreInBounds)].map((j, i) => {
+          let paletteClassName = (useCss && paletteClassNames[paletteIndex]) || '';
+          let barCx = classNames('score-bar-bar', {
+            [paletteClassName]: !!paletteClassName
+          });
+          return <div key={i} style={style} className={barCx} />;
+        })}
+        {[...Array(maxScore - scoreInBounds)].map((j, i) => (
+          <div
+            style={{...sizeStyle}}
+            key={`empty-${i}`}
+            className="score-bar-bar empty"
+          />
+        ))}
+      </div>
+    );
+  }
+});
+
+export default ScoreBar;
diff --git a/src/sentry/static/sentry/app/components/similarScoreCard.jsx b/src/sentry/static/sentry/app/components/similarScoreCard.jsx
new file mode 100644
index 0000000000..67aab07229
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/similarScoreCard.jsx
@@ -0,0 +1,60 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import classNames from 'classnames';
+
+import {t} from '../locale';
+import SpreadLayout from './spreadLayout';
+
+import '../../less/components/similarScoreCard.less';
+
+const scoreComponents = {
+  'exception:message:character-shingles': t('Exception Message'),
+  'exception:stacktrace:application-chunks': t('Application Code'),
+  'exception:stacktrace:pairs': t('Stacktrace Frames'),
+  'message:message:character-shingles': t('Log Message')
+};
+
+// classnames that map to colors to css
+const scoreClassNames = ['low', 'low', 'low', 'med', 'high', 'high'];
+
+const SimilarScoreCard = React.createClass({
+  propTypes: {
+    scoreList: PropTypes.arrayOf(PropTypes.array)
+  },
+
+  getDefaultProps() {
+    return {
+      scoreList: []
+    };
+  },
+
+  render() {
+    let {className, scoreList} = this.props;
+    let cx = classNames('similar-score-card', className);
+
+    if (!scoreList.length) {
+      return null;
+    }
+
+    return (
+      <div className={cx}>
+        {scoreList.map(([key, score]) => (
+          <SpreadLayout className="similar-score-card-row" key={key}>
+            <div>
+              {scoreComponents[key]}
+            </div>
+
+            <div
+              className={classNames(
+                'similar-score-quantity',
+                scoreClassNames[Math.round(score * 5)]
+              )}
+            />
+          </SpreadLayout>
+        ))}
+      </div>
+    );
+  }
+});
+
+export default SimilarScoreCard;
diff --git a/src/sentry/static/sentry/app/components/splitLayout.jsx b/src/sentry/static/sentry/app/components/splitLayout.jsx
index 089f926b5b..8078271648 100644
--- a/src/sentry/static/sentry/app/components/splitLayout.jsx
+++ b/src/sentry/static/sentry/app/components/splitLayout.jsx
@@ -4,8 +4,6 @@ import classNames from 'classnames';
 import SpreadLayout from './spreadLayout';
 
 // Flexbox, use when you want your children to be equal sizes
-//
-// "responsive" will change flex-direction to be column on small widths
 const SplitLayout = ({children, className, responsive, ...props}) => {
   const cx = classNames('split-layout', className, {
     'allow-responsive': responsive
diff --git a/src/sentry/static/sentry/app/components/spreadLayout.jsx b/src/sentry/static/sentry/app/components/spreadLayout.jsx
index 95a9b5e231..3d9d7797a8 100644
--- a/src/sentry/static/sentry/app/components/spreadLayout.jsx
+++ b/src/sentry/static/sentry/app/components/spreadLayout.jsx
@@ -5,8 +5,12 @@ import classNames from 'classnames';
 // Flexbox container whose children will have `justify-content: space-between`
 //
 // Intended for children.length == 2
-const SpreadLayout = ({children, className, ...props}) => {
-  const cx = classNames(className, 'spread-layout', {});
+// "responsive" will change flex-direction to be column on small widths
+const SpreadLayout = ({children, className, responsive, ...props}) => {
+  const cx = classNames('spread-layout', className, {
+    'allow-responsive': responsive
+  });
+
   return (
     <div {...props} className={cx}>
       {children}
@@ -17,7 +21,7 @@ const SpreadLayout = ({children, className, ...props}) => {
 SpreadLayout.propTypes = {
   children: PropTypes.node,
   style: PropTypes.object,
-  className: PropTypes.string
+  responsive: PropTypes.bool
 };
 
 export default SpreadLayout;
diff --git a/src/sentry/static/sentry/app/components/toolbar.jsx b/src/sentry/static/sentry/app/components/toolbar.jsx
new file mode 100644
index 0000000000..d6f258dd9c
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/toolbar.jsx
@@ -0,0 +1,15 @@
+import React from 'react';
+import classNames from 'classnames';
+import '../../less/components/toolbar.less';
+
+const Toolbar = ({className, children, ...otherProps}) => {
+  let cx = classNames('toolbar', className);
+
+  return (
+    <div className={cx} {...otherProps}>
+      {children}
+    </div>
+  );
+};
+
+export default Toolbar;
diff --git a/src/sentry/static/sentry/app/components/toolbarHeader.jsx b/src/sentry/static/sentry/app/components/toolbarHeader.jsx
new file mode 100644
index 0000000000..837c525020
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/toolbarHeader.jsx
@@ -0,0 +1,15 @@
+import React from 'react';
+import classNames from 'classnames';
+import '../../less/components/toolbarHeader.less';
+
+const ToolbarHeader = ({className, children, ...otherProps}) => {
+  let cx = classNames('toolbar-header', className);
+
+  return (
+    <div className={cx} {...otherProps}>
+      {children}
+    </div>
+  );
+};
+
+export default ToolbarHeader;
diff --git a/src/sentry/static/sentry/app/components/versionHoverCard.jsx b/src/sentry/static/sentry/app/components/versionHoverCard.jsx
index c2e6e6f195..463f5ae905 100644
--- a/src/sentry/static/sentry/app/components/versionHoverCard.jsx
+++ b/src/sentry/static/sentry/app/components/versionHoverCard.jsx
@@ -8,6 +8,7 @@ import LastCommit from './lastCommit';
 import LoadingIndicator from './loadingIndicator';
 import LoadingError from './loadingError';
 import TimeSince from './timeSince';
+import Hovercard from './hovercard';
 
 import {getShortVersion} from '../utils';
 import {t} from '../locale';
@@ -102,22 +103,24 @@ const VersionHoverCard = React.createClass({
     });
   },
 
-  renderRepoLink() {
+  getRepoLink() {
     let {orgId} = this.props;
-    return (
-      <div className="version-hovercard blankslate m-a-0 p-x-1 p-y-1 align-center">
-        <h5>Releases are better with commit data!</h5>
-        <p>
-          Connect a repository to see commit info, files changed, and authors involved in future releases.
-        </p>
-        <a className="btn btn-primary" href={`/organizations/${orgId}/repos/`}>
-          Connect a repository
-        </a>
-      </div>
-    );
+    return {
+      body: (
+        <div className="version-hovercard blankslate m-a-0 p-x-1 p-y-1 align-center">
+          <h5>Releases are better with commit data!</h5>
+          <p>
+            Connect a repository to see commit info, files changed, and authors involved in future releases.
+          </p>
+          <a className="btn btn-primary" href={`/organizations/${orgId}/repos/`}>
+            Connect a repository
+          </a>
+        </div>
+      )
+    };
   },
 
-  renderBody() {
+  getBody() {
     let {release, deploys} = this.state;
     let {version} = this.props;
     let lastCommit = release.lastCommit;
@@ -135,12 +138,10 @@ const VersionHoverCard = React.createClass({
     if (Object.keys(recentDeploysByEnviroment).length > 3) {
       mostRecentDeploySlice = Object.keys(recentDeploysByEnviroment).slice(0, 3);
     }
-    return (
-      <div>
-        <div className="hovercard-header">
-          <span className="truncate">Release {shortVersion}</span>
-        </div>
-        <div className="hovercard-body">
+    return {
+      header: <span className="truncate">Release {shortVersion}</span>,
+      body: (
+        <div>
           <div className="row row-flex">
             <div className="col-xs-4">
               <h6>New Issues</h6>
@@ -213,25 +214,27 @@ const VersionHoverCard = React.createClass({
               })}
             </div>}
         </div>
-      </div>
-    );
+      )
+    };
   },
 
   render() {
-    let {visible} = this.state;
+    let {loading, error, hasRepos} = this.state;
+    let header = null;
+    let body = loading
+      ? <LoadingIndicator mini={true} />
+      : error ? <LoadingError /> : null;
+
+    if (!loading && !error) {
+      let renderObj = hasRepos ? this.getBody() : this.getRepoLink();
+      header = renderObj.header;
+      body = renderObj.body;
+    }
+
     return (
-      <span onMouseEnter={this.toggleHovercard} onMouseLeave={this.toggleHovercard}>
+      <Hovercard header={header} body={body}>
         {this.props.children}
-        {visible &&
-          <div className="hovercard">
-            <div className="hovercard-hoverlap" />
-            {this.state.loading
-              ? <div className="hovercard-body"><LoadingIndicator mini={true} /></div>
-              : this.state.error
-                  ? <div className="hovercard-body"><LoadingError /></div>
-                  : this.state.hasRepos ? this.renderBody() : this.renderRepoLink()}
-          </div>}
-      </span>
+      </Hovercard>
     );
   }
 });
diff --git a/src/sentry/static/sentry/app/proptypes.jsx b/src/sentry/static/sentry/app/proptypes.jsx
index 03aee7d696..d443eb6efc 100644
--- a/src/sentry/static/sentry/app/proptypes.jsx
+++ b/src/sentry/static/sentry/app/proptypes.jsx
@@ -81,6 +81,13 @@ const Event = PropTypes.shape({
   user: PropTypes.object
 });
 
+const Tag = PropTypes.shape({
+  id: PropTypes.string.isRequired,
+  key: PropTypes.string.isRequired,
+  name: PropTypes.string.isRequired,
+  uniqueValues: PropTypes.number
+});
+
 let SentryTypes = {
   AnyModel: PropTypes.shape({
     id: PropTypes.string.isRequired
@@ -90,6 +97,7 @@ let SentryTypes = {
   Organization: PropTypes.shape({
     id: PropTypes.string.isRequired
   }),
+  Tag,
   Project: PropTypes.shape({
     id: PropTypes.string.isRequired
   }),
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 0fc6482e13..e558ea0978 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -27,7 +27,8 @@ import GroupEvents from './views/groupEvents';
 import GroupTags from './views/groupTags';
 import GroupTagValues from './views/groupTagValues';
 import GroupUserReports from './views/groupUserReports';
-import GroupGroupingView from './views/groupGrouping/groupGroupingView';
+import GroupSimilarView from './views/groupSimilar/groupSimilarView';
+import GroupMergedView from './views/groupMerged/groupMergedView';
 import MyIssuesAssignedToMe from './views/myIssues/assignedToMe';
 import MyIssuesBookmarked from './views/myIssues/bookmarked';
 import MyIssuesViewed from './views/myIssues/viewed';
@@ -304,7 +305,8 @@ function routes() {
             <Route path="tags/" component={errorHandler(GroupTags)} />
             <Route path="tags/:tagKey/" component={errorHandler(GroupTagValues)} />
             <Route path="feedback/" component={errorHandler(GroupUserReports)} />
-            <Route path="grouping/" component={errorHandler(GroupGroupingView)} />
+            <Route path="similar/" component={errorHandler(GroupSimilarView)} />
+            <Route path="merged/" component={errorHandler(GroupMergedView)} />
 
           </Route>
         </Route>
diff --git a/src/sentry/static/sentry/app/stores/groupingStore.jsx b/src/sentry/static/sentry/app/stores/groupingStore.jsx
index b87368fff1..9da13b1e3a 100644
--- a/src/sentry/static/sentry/app/stores/groupingStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupingStore.jsx
@@ -32,6 +32,7 @@ const GroupingStore = Reflux.createStore({
       unmergeList: new Set(),
       unmergeState: new Map(),
       unmergeDisabled: false,
+      unmergeCollapseState: new Set(),
 
       similarItems: [],
       filteredSimilarItems: [],
@@ -128,13 +129,38 @@ const GroupingStore = Reflux.createStore({
         });
         return item;
       },
-      similar: ([issue, score]) => {
+      similar: ([issue, scoreMap]) => {
         // Hide items with a low scores
-        let isBelowThreshold = checkBelowThreshold(score);
+        let isBelowThreshold = checkBelowThreshold(scoreMap);
+
+        // List of scores indexed by interface (i.e., exception and message)
+        let scoresByInterface = Object.keys(scoreMap)
+          .map(scoreKey => [scoreKey, scoreMap[scoreKey]])
+          .reduce((acc, [scoreKey, score]) => {
+            // tokenize scorekey, first token is the interface name
+            let [interfaceName] = scoreKey.split(':');
+            if (!acc[interfaceName]) {
+              acc[interfaceName] = [];
+            }
+            acc[interfaceName].push([scoreKey, score]);
+
+            return acc;
+          }, {});
+
+        // Aggregate score by interface
+        let aggregate = Object.keys(scoresByInterface)
+          .map(interfaceName => [interfaceName, scoresByInterface[interfaceName]])
+          .reduce((acc, [interfaceName, scores]) => {
+            let avg = scores.reduce((sum, [, score]) => sum + score, 0) / scores.length;
+            acc[interfaceName] = avg;
+            return acc;
+          }, {});
 
         return {
           issue,
-          score,
+          score: scoreMap,
+          scoresByInterface,
+          aggregate,
           isBelowThreshold
         };
       }
@@ -295,7 +321,6 @@ const GroupingStore = Reflux.createStore({
           {
             orgId,
             projectId,
-            // parent = last element in array
             itemIds: [...ids, groupId],
             query
           },
@@ -328,6 +353,43 @@ const GroupingStore = Reflux.createStore({
     return promise;
   },
 
+  onMergeSuccess(id, ids, response) {
+    if (!response || !response.merge || !response.merge.parent) return;
+
+    this.trigger({
+      mergedParent: response.merge.parent
+    });
+  },
+
+  onExpandFingerprints() {
+    this.setStateForId(this.unmergeState, this.mergedItems.map(({id}) => id), {
+      collapsed: false
+    });
+
+    this.trigger({
+      unmergeCollapseState: this.unmergeCollapseState
+    });
+  },
+
+  onCollapseFingerprints() {
+    this.setStateForId(this.unmergeState, this.mergedItems.map(({id}) => id), {
+      collapsed: true
+    });
+
+    this.trigger({
+      unmergeState: this.unmergeState
+    });
+  },
+
+  onToggleCollapseFingerprint(fingerprint) {
+    let collapsed =
+      this.unmergeState.has(fingerprint) && this.unmergeState.get(fingerprint).collapsed;
+    this.setStateForId(this.unmergeState, fingerprint, {collapsed: !collapsed});
+    this.trigger({
+      unmergeState: this.unmergeState
+    });
+  },
+
   triggerFetchState() {
     let state = {
       similarItems: this.similarItems.filter(({isBelowThreshold}) => !isBelowThreshold),
@@ -349,7 +411,12 @@ const GroupingStore = Reflux.createStore({
   },
 
   triggerUnmergeState() {
-    let state = pick(this, ['unmergeDisabled', 'unmergeState', 'unmergeList']);
+    let state = pick(this, [
+      'unmergeDisabled',
+      'unmergeState',
+      'unmergeList',
+      'unmergeCollapseState'
+    ]);
     this.trigger(state);
     return state;
   },
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index 6f5386e97c..9acb5dedf6 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -12,7 +12,6 @@ import ShortId from '../../components/shortId';
 import EventOrGroupTitle from '../../components/eventOrGroupTitle';
 import ProjectState from '../../mixins/projectState';
 import TooltipMixin from '../../mixins/tooltip';
-import ConfigStore from '../../stores/configStore';
 import {t} from '../../locale';
 
 const GroupHeader = React.createClass({
@@ -99,6 +98,7 @@ const GroupHeader = React.createClass({
   render() {
     let group = this.props.group,
       orgFeatures = new Set(this.getOrganization().features),
+      projectFeatures = this.getProjectFeatures(),
       userCount = group.userCount;
 
     let className = 'group-detail';
@@ -121,9 +121,8 @@ const GroupHeader = React.createClass({
       orgId = this.getOrganization().slug;
     let message = this.getMessage();
 
-    let hasSimView = ConfigStore.getConfig().features.has('similarity-view');
-
-    let hasGroupingView = hasSimView || orgFeatures.has('group-unmerge');
+    let hasSimilarView = projectFeatures.has('similarity-view');
+    let hasMergeView = orgFeatures.has('group-unmerge');
 
     return (
       <div className={className}>
@@ -230,9 +229,13 @@ const GroupHeader = React.createClass({
           <ListLink to={`/${orgId}/${projectId}/issues/${groupId}/events/`}>
             {t('Events')}
           </ListLink>
-          {hasGroupingView &&
-            <ListLink to={`/${orgId}/${projectId}/issues/${groupId}/grouping/`}>
-              {t('Grouping')}
+          {hasMergeView &&
+            <ListLink to={`/${orgId}/${projectId}/issues/${groupId}/merged/`}>
+              {t('Merged')}
+            </ListLink>}
+          {hasSimilarView &&
+            <ListLink to={`/${orgId}/${projectId}/issues/${groupId}/similar/`}>
+              {t('Similar Issues')}
             </ListLink>}
         </ul>
       </div>
diff --git a/src/sentry/static/sentry/app/views/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupEvents.jsx
index 61785b9f24..c3c4eb2d8d 100644
--- a/src/sentry/static/sentry/app/views/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/groupEvents.jsx
@@ -1,16 +1,14 @@
 import React from 'react';
-import {browserHistory, Link} from 'react-router';
+import {browserHistory} from 'react-router';
 
 import ApiMixin from '../mixins/apiMixin';
-import DateTime from '../components/dateTime';
-import Avatar from '../components/avatar';
 import GroupState from '../mixins/groupState';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import Pagination from '../components/pagination';
 import SearchBar from '../components/searchBar.jsx';
+import EventsTable from '../components/eventsTable/eventsTable';
 import {t} from '../locale';
-import {deviceNameMapper} from '../utils';
 
 const GroupEvents = React.createClass({
   mixins: [ApiMixin, GroupState],
@@ -98,21 +96,6 @@ const GroupEvents = React.createClass({
     });
   },
 
-  getEventTitle(event) {
-    switch (event.type) {
-      case 'error':
-        if (event.metadata.type && event.metadata.value)
-          return `${event.metadata.type}: ${event.metadata.value}`;
-        return event.metadata.type || event.metadata.value || event.metadata.title;
-      case 'csp':
-        return event.metadata.message;
-      case 'default':
-        return event.metadata.title;
-      default:
-        return event.message.split('\n')[0];
-    }
-  },
-
   renderNoQueryResults() {
     return (
       <div className="box empty-stream">
@@ -133,84 +116,16 @@ const GroupEvents = React.createClass({
 
   renderResults() {
     let group = this.getGroup();
-    let tagList = group.tags.filter(tag => {
-      return tag.key !== 'user';
-    });
-
-    let hasUser = false;
-    for (let i = 0; i < this.state.eventList.length; i++) {
-      if (this.state.eventList[i].user) {
-        hasUser = true;
-        break;
-      }
-    }
-
-    let {orgId, projectId, groupId} = this.props.params;
-
-    let children = this.state.eventList.map(event => {
-      let tagMap = {};
-      event.tags.forEach(tag => {
-        tagMap[tag.key] = tag.value;
-      });
-
-      return (
-        <tr key={event.id}>
-          <td>
-            <h5>
-              <Link to={`/${orgId}/${projectId}/issues/${groupId}/events/${event.id}/`}>
-                <DateTime date={event.dateCreated} />
-              </Link>
-              <small>{(this.getEventTitle(event) || '').substr(0, 100)}</small>
-            </h5>
-          </td>
-          {tagList.map(tag => {
-            return (
-              <td key={tag.key}>
-                {tag.key === 'device'
-                  ? deviceNameMapper(tagMap[tag.key])
-                  : tagMap[tag.key]}
-              </td>
-            );
-          })}
-          {hasUser &&
-            <td className="event-user table-user-info">
-              {event.user
-                ? <div>
-                    <Avatar
-                      user={event.user}
-                      size={64}
-                      className="avatar"
-                      gravatar={false}
-                    />
-                    {event.user.email}
-                  </div>
-                : <span>—</span>}
-            </td>}
-        </tr>
-      );
-    });
+    let tagList = group.tags.filter(tag => tag.key !== 'user') || [];
 
     return (
       <div>
         <div className="event-list">
-          <table className="table">
-            <thead>
-              <tr>
-                <th>{t('ID')}</th>
-                {tagList.map(tag => {
-                  return (
-                    <th key={tag.key}>
-                      {tag.name}
-                    </th>
-                  );
-                })}
-                {hasUser && <th>{t('User')}</th>}
-              </tr>
-            </thead>
-            <tbody>
-              {children}
-            </tbody>
-          </table>
+          <EventsTable
+            tagList={tagList}
+            events={this.state.eventList}
+            params={this.props.params}
+          />
         </div>
         <Pagination pageLinks={this.state.pageLinks} />
       </div>
diff --git a/src/sentry/static/sentry/app/views/groupGrouping/mergedItem.jsx b/src/sentry/static/sentry/app/views/groupGrouping/mergedItem.jsx
deleted file mode 100644
index f190a8694a..0000000000
--- a/src/sentry/static/sentry/app/views/groupGrouping/mergedItem.jsx
+++ /dev/null
@@ -1,112 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import Reflux from 'reflux';
-import classNames from 'classnames';
-
-import GroupingStore from '../../stores/groupingStore';
-import GroupingActions from '../../actions/groupingActions';
-import EventOrGroupHeader from '../../components/eventOrGroupHeader';
-import EventOrGroupExtraDetails from '../../components/eventOrGroupExtraDetails';
-import SpreadLayout from '../../components/spreadLayout';
-import SplitLayout from '../../components/splitLayout';
-import Checkbox from '../../components/checkbox';
-
-const MergedItem = React.createClass({
-  propTypes: {
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
-    groupId: PropTypes.string.isRequired,
-    fingerprint: PropTypes.string.isRequired,
-    disabled: PropTypes.bool,
-    event: PropTypes.shape({
-      groupID: PropTypes.string,
-      type: PropTypes.oneOf(['error', 'csp', 'default']),
-      dateCreated: PropTypes.string,
-      platform: PropTypes.string
-    })
-  },
-
-  mixins: [Reflux.listenTo(GroupingStore, 'onGroupingChange')],
-
-  getInitialState() {
-    return {
-      checked: false,
-      busy: false
-    };
-  },
-
-  onGroupingChange({unmergeState}) {
-    if (!unmergeState) return;
-
-    let {fingerprint} = this.props;
-    const stateForId = unmergeState.has(fingerprint) && unmergeState.get(fingerprint);
-    if (!stateForId) return;
-
-    Object.keys(stateForId).forEach(key => {
-      if (stateForId[key] === this.state[key]) return;
-
-      this.setState({
-        [key]: stateForId[key]
-      });
-    });
-  },
-
-  handleToggle(e) {
-    let {disabled, fingerprint} = this.props;
-
-    if (disabled || this.state.busy) return;
-
-    // clicking anywhere in the row will toggle the checkbox
-    GroupingActions.toggleUnmerge(fingerprint);
-  },
-
-  render() {
-    let {disabled, event, orgId, fingerprint, projectId, groupId} = this.props;
-    let checkboxDisabled = disabled || this.state.disabled;
-    let cx = classNames('group', 'merged-event', {
-      busy: this.state.busy
-    });
-
-    // Not sure why, but `event` can be null
-    return (
-      <SplitLayout onClick={this.handleToggle} className={cx} responsive>
-        <div>
-          <div className="event-details">
-            {event &&
-              <EventOrGroupHeader
-                orgId={orgId}
-                projectId={projectId}
-                data={event}
-                hideLevel
-              />}
-            {event &&
-              <EventOrGroupExtraDetails
-                groupId={groupId}
-                orgId={orgId}
-                projectId={projectId}
-                event={event}
-                firstSeen={event.dateCreated}
-                logger={event.platform}
-              />}
-          </div>
-        </div>
-
-        <SpreadLayout className="grouping-controls">
-          <div className="truncate fingerprint">
-            {fingerprint}
-          </div>
-          <div className="align-right action-column">
-            <Checkbox
-              id={fingerprint}
-              value={fingerprint}
-              checked={this.state.checked}
-              disabled={checkboxDisabled}
-            />
-          </div>
-        </SpreadLayout>
-      </SplitLayout>
-    );
-  }
-});
-
-export default MergedItem;
diff --git a/src/sentry/static/sentry/app/views/groupGrouping/mergedList.jsx b/src/sentry/static/sentry/app/views/groupGrouping/mergedList.jsx
deleted file mode 100644
index 135b340b36..0000000000
--- a/src/sentry/static/sentry/app/views/groupGrouping/mergedList.jsx
+++ /dev/null
@@ -1,57 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import {t} from '../../locale';
-import {Event} from '../../proptypes';
-
-import Pagination from '../../components/pagination';
-import MergedItem from './mergedItem';
-import MergedToolbar from './mergedToolbar';
-
-const MergedList = React.createClass({
-  propTypes: {
-    onUnmerge: PropTypes.func.isRequired,
-    items: PropTypes.arrayOf(Event),
-    pageLinks: PropTypes.string
-  },
-
-  renderEmpty() {
-    return (
-      <div className="box empty-stream">
-        <span className="icon icon-exclamation" />
-        <p>{t("There don't seem to be any hashes for this issue.")}</p>
-      </div>
-    );
-  },
-
-  render() {
-    let {items, pageLinks, onUnmerge, ...otherProps} = this.props;
-    let hasResults = items.length > 0;
-
-    if (hasResults) {
-      return (
-        <div className="grouping-list-container grouping-merged-list-container">
-          <h2>{t('Merged with this Issue')}</h2>
-          <MergedToolbar onUnmerge={onUnmerge} />
-
-          <div className="grouping-list">
-            {items.map(({id, latestEvent}) => (
-              <MergedItem
-                key={id}
-                {...otherProps}
-                event={latestEvent}
-                fingerprint={id}
-                itemCount={items.length}
-              />
-            ))}
-          </div>
-          <Pagination pageLinks={pageLinks} />
-        </div>
-      );
-    }
-
-    return this.renderEmpty();
-  }
-});
-
-export default MergedList;
diff --git a/src/sentry/static/sentry/app/views/groupGrouping/similarItem.jsx b/src/sentry/static/sentry/app/views/groupGrouping/similarItem.jsx
deleted file mode 100644
index 6b1ed82889..0000000000
--- a/src/sentry/static/sentry/app/views/groupGrouping/similarItem.jsx
+++ /dev/null
@@ -1,158 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import Reflux from 'reflux';
-import classNames from 'classnames';
-
-import {t} from '../../locale';
-import GroupingStore from '../../stores/groupingStore';
-import GroupingActions from '../../actions/groupingActions';
-
-import Count from '../../components/count';
-import EventOrGroupHeader from '../../components/eventOrGroupHeader';
-import EventOrGroupExtraDetails from '../../components/eventOrGroupExtraDetails';
-import SpreadLayout from '../../components/spreadLayout';
-import SplitLayout from '../../components/splitLayout';
-import Checkbox from '../../components/checkbox';
-
-// TODO(billy): Replace this with a quantified aggregate score
-const scoreComponents = {
-  'exception:message:character-shingles': t('Exception'),
-  'exception:stacktrace:application-chunks': t('App code'),
-  'exception:stacktrace:pairs': t('Stacktrace'),
-  'message:message:character-shingles': t('Message')
-};
-
-const SimilarIssueItem = React.createClass({
-  propTypes: {
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
-    score: PropTypes.object,
-    issue: PropTypes.shape({
-      id: PropTypes.string.isRequired,
-      level: PropTypes.string.isRequired,
-      type: PropTypes.oneOf(['error', 'csp', 'default']).isRequired,
-      title: PropTypes.string.isRequired,
-      metadata: PropTypes.shape({
-        value: PropTypes.string,
-        message: PropTypes.string,
-        directive: PropTypes.string,
-        type: PropTypes.string,
-        title: PropTypes.string,
-        uri: PropTypes.string
-      }).isRequired,
-      culprit: PropTypes.string,
-      hideLevel: PropTypes.bool
-    })
-  },
-  mixins: [Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
-
-  getInitialState() {
-    return {
-      visible: true,
-      checked: false,
-      busy: false
-    };
-  },
-
-  onGroupingUpdate({mergeState}) {
-    let {issue} = this.props;
-    if (mergeState) {
-      const stateForId = mergeState.has(issue.id) && mergeState.get(issue.id);
-      if (stateForId) {
-        Object.keys(stateForId).forEach(key => {
-          if (stateForId[key] !== this.state[key]) {
-            this.setState({
-              [key]: stateForId[key]
-            });
-          }
-        });
-      }
-    }
-  },
-
-  displaySimilarity(value) {
-    return isNaN(value) ? '' : `${Math.round(value * 100)}%`;
-  },
-
-  handleToggle(e) {
-    let {issue} = this.props;
-
-    // clicking anywhere in the row will toggle the checkbox
-    if (!this.state.busy) {
-      GroupingActions.toggleMerge(issue.id);
-    }
-  },
-
-  render() {
-    let {score, issue, orgId, projectId} = this.props;
-
-    if (!this.state.visible) {
-      return null;
-    }
-
-    let cx = classNames('group', 'similar-issue', {
-      busy: this.state.busy
-    });
-
-    return (
-      <SplitLayout className={cx} responsive onClick={this.handleToggle}>
-        <SpreadLayout>
-          <div className="event-details">
-            <EventOrGroupHeader
-              orgId={orgId}
-              projectId={projectId}
-              data={issue}
-              hideLevel
-            />
-            <EventOrGroupExtraDetails
-              {...issue}
-              groupId={issue.id}
-              orgId={orgId}
-              projectId={projectId}
-              group
-            />
-          </div>
-
-          <Count className="event-count" value={issue.count} />
-        </SpreadLayout>
-
-        <SpreadLayout>
-          <div className="similarity-score">
-            {Object.keys(score).map(scoreKey => {
-              const color = `hsl(${score[scoreKey] * 100},40%,50%)`;
-              return (
-                <div key={scoreKey} className="similarity-score-row">
-                  <div className="similarity-score-label">
-                    <span>
-                      {scoreComponents[scoreKey]}
-                    </span>
-                    <span
-                      style={{
-                        fontWeight: 'bold',
-                        color
-                      }}>
-                      {this.displaySimilarity(score[scoreKey])}
-                    </span>
-                  </div>
-                  <div
-                    className="similarity-score-bar"
-                    style={{
-                      width: `${Math.round(score[scoreKey] * 100)}%`,
-                      backgroundColor: color
-                    }}
-                  />
-                </div>
-              );
-            })}
-          </div>
-
-          <div className="action-column">
-            <Checkbox id={issue.id} value={issue.id} checked={this.state.checked} />
-          </div>
-        </SpreadLayout>
-      </SplitLayout>
-    );
-  }
-});
-
-export default SimilarIssueItem;
diff --git a/src/sentry/static/sentry/app/views/groupGrouping/similarToolbar.jsx b/src/sentry/static/sentry/app/views/groupGrouping/similarToolbar.jsx
deleted file mode 100644
index f35e97a3b0..0000000000
--- a/src/sentry/static/sentry/app/views/groupGrouping/similarToolbar.jsx
+++ /dev/null
@@ -1,68 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import Reflux from 'reflux';
-
-import {t} from '../../locale';
-import GroupingStore from '../../stores/groupingStore';
-
-import SpreadLayout from '../../components/spreadLayout';
-import SplitLayout from '../../components/splitLayout';
-import LinkWithConfirmation from '../../components/linkWithConfirmation';
-
-const SimilarToolbar = React.createClass({
-  propTypes: {
-    onMerge: PropTypes.func.isRequired
-  },
-
-  mixins: [Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
-
-  getInitialState() {
-    return {
-      mergeCount: 0
-    };
-  },
-
-  onGroupingUpdate({mergeList}) {
-    if (mergeList && mergeList.size !== this.state.mergedCount) {
-      this.setState({
-        mergeCount: mergeList.size
-      });
-    }
-  },
-
-  render() {
-    let {onMerge} = this.props;
-    return (
-      <div className="grouping-toolbar stream-actions">
-        <SplitLayout responsive>
-          <SpreadLayout>
-            <div className="stream-actions-header">
-              {t('Issue')}
-            </div>
-            <div className="stream-actions-header event-count-header">
-              {t('Events')}
-            </div>
-          </SpreadLayout>
-
-          <SpreadLayout>
-            <div className="stream-actions-header event-similar-header">
-              {t('Similarity Score')}
-            </div>
-            <div className="grouping-toolbar-actions">
-              <LinkWithConfirmation
-                disabled={this.state.mergeCount === 0}
-                title={t(`Merging ${this.state.mergeCount} issues`)}
-                message={t('Are you sure you want to merge these issues?')}
-                className="btn btn-sm btn-default"
-                onConfirm={onMerge}>
-                {t('Merge')} ({this.state.mergeCount || 0})
-              </LinkWithConfirmation>
-            </div>
-          </SpreadLayout>
-        </SplitLayout>
-      </div>
-    );
-  }
-});
-
-export default SimilarToolbar;
diff --git a/src/sentry/static/sentry/app/views/groupMerged/groupMergedView.jsx b/src/sentry/static/sentry/app/views/groupMerged/groupMergedView.jsx
new file mode 100644
index 0000000000..903bed6f48
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/groupMerged/groupMergedView.jsx
@@ -0,0 +1,126 @@
+import React from 'react';
+import Reflux from 'reflux';
+
+import {t} from '../../locale';
+import ApiMixin from '../../mixins/apiMixin';
+import MergedList from './mergedList';
+import GroupingActions from '../../actions/groupingActions';
+import GroupingStore from '../../stores/groupingStore';
+import LoadingError from '../../components/loadingError';
+import LoadingIndicator from '../../components/loadingIndicator';
+
+const GroupMergedView = React.createClass({
+  mixins: [ApiMixin, Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
+
+  getInitialState() {
+    let queryParams = this.props.location.query;
+    return {
+      mergedItems: [],
+      loading: true,
+      error: false,
+      query: queryParams.query || ''
+    };
+  },
+
+  componentWillMount() {
+    this.fetchData();
+  },
+
+  componentWillReceiveProps(nextProps) {
+    if (
+      nextProps.params.groupId !== this.props.params.groupId ||
+      nextProps.location.search !== this.props.location.search
+    ) {
+      let queryParams = nextProps.location.query;
+      this.setState(
+        {
+          query: queryParams.query
+        },
+        this.fetchData
+      );
+    }
+  },
+
+  onGroupingUpdate({mergedItems, mergedLinks, loading, error}) {
+    if (mergedItems) {
+      this.setState({
+        mergedItems,
+        mergedLinks,
+        loading: typeof loading !== 'undefined' ? loading : false,
+        error: typeof error !== 'undefined' ? error : false
+      });
+    }
+  },
+
+  getEndpoint(type = 'hashes') {
+    let params = this.props.params;
+    let queryParams = {
+      ...this.props.location.query,
+      limit: 50,
+      query: this.state.query
+    };
+
+    return `/issues/${params.groupId}/${type}/?${jQuery.param(queryParams)}`;
+  },
+
+  fetchData() {
+    GroupingActions.fetch([
+      {
+        endpoint: this.getEndpoint('hashes'),
+        dataKey: 'merged',
+        queryParams: this.props.location.query
+      }
+    ]);
+  },
+
+  handleCollapse(...args) {
+    GroupingActions.collapseFingerprints();
+  },
+
+  handleUnmerge(...args) {
+    GroupingActions.unmerge({
+      groupId: this.props.params.groupId,
+      loadingMessage: `${t('Unmerging events')}...`,
+      successMessage: t('Events successfully queued for unmerging.'),
+      errorMessage: t('Unable to queue events for unmerging.')
+    });
+  },
+
+  render() {
+    let {orgId, projectId, groupId} = this.props.params;
+    let isLoading = this.state.loading;
+    let isError = this.state.error && !isLoading;
+    let isLoadedSuccessfully = !isError && !isLoading;
+
+    return (
+      <div>
+        <div className="alert alert-block alert-warning">
+          <strong>{t('Warning')}:</strong>
+          {' '}
+          {t(
+            'This is an experimental feature. Data may not be immediately available while we process unmerges.'
+          )}
+        </div>
+
+        {isLoading && <LoadingIndicator />}
+        {isError && <LoadingError message={this.state.error} onRetry={this.fetchData} />}
+
+        {isLoadedSuccessfully &&
+          <MergedList
+            items={this.state.mergedItems}
+            orgId={orgId}
+            projectId={projectId}
+            groupId={groupId}
+            pageLinks={this.state.mergedLinks}
+            busyMap={this.state.busy}
+            hiddenMap={this.state.hidden}
+            onUnmerge={this.handleUnmerge}
+            onCollapse={GroupingActions.collapseFingerprints}
+            onExpand={GroupingActions.expandFingerprints}
+          />}
+      </div>
+    );
+  }
+});
+
+export default GroupMergedView;
diff --git a/src/sentry/static/sentry/app/views/groupMerged/mergedItem.jsx b/src/sentry/static/sentry/app/views/groupMerged/mergedItem.jsx
new file mode 100644
index 0000000000..534aae554d
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/groupMerged/mergedItem.jsx
@@ -0,0 +1,138 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import Reflux from 'reflux';
+import classNames from 'classnames';
+
+import Checkbox from '../../components/checkbox';
+import EventsTable from '../../components/eventsTable/eventsTable';
+import FlowLayout from '../../components/flowLayout';
+import GroupState from '../../mixins/groupState';
+import GroupingActions from '../../actions/groupingActions';
+import GroupingStore from '../../stores/groupingStore';
+import SpreadLayout from '../../components/spreadLayout';
+
+import '../../../less/components/mergedItem.less';
+
+const MergedItem = React.createClass({
+  propTypes: {
+    orgId: PropTypes.string.isRequired,
+    projectId: PropTypes.string.isRequired,
+    groupId: PropTypes.string.isRequired,
+    fingerprint: PropTypes.string.isRequired,
+    disabled: PropTypes.bool,
+    event: PropTypes.shape({
+      groupID: PropTypes.string,
+      type: PropTypes.oneOf(['error', 'csp', 'default']),
+      dateCreated: PropTypes.string,
+      platform: PropTypes.string
+    })
+  },
+
+  mixins: [GroupState, Reflux.listenTo(GroupingStore, 'onGroupingChange')],
+
+  getInitialState() {
+    return {
+      collapsed: false,
+      checked: false,
+      busy: false
+    };
+  },
+
+  onGroupingChange({unmergeState}) {
+    if (!unmergeState) return;
+
+    let {fingerprint} = this.props;
+    let stateForId = unmergeState.has(fingerprint) && unmergeState.get(fingerprint);
+    if (!stateForId) return;
+
+    Object.keys(stateForId).forEach(key => {
+      if (stateForId[key] === this.state[key]) return;
+
+      this.setState({
+        [key]: stateForId[key]
+      });
+    });
+  },
+
+  handleToggleEvents() {
+    let {fingerprint} = this.props;
+    GroupingActions.toggleCollapseFingerprint(fingerprint);
+  },
+
+  // Disable default behavior of toggling checkbox
+  handleLabelClick(e) {
+    e.preventDefault();
+  },
+
+  handleToggle(e) {
+    let {disabled, fingerprint} = this.props;
+
+    if (disabled || this.state.busy) return;
+
+    // clicking anywhere in the row will toggle the checkbox
+    GroupingActions.toggleUnmerge(fingerprint);
+  },
+
+  render() {
+    let {disabled, event, orgId, fingerprint, projectId, groupId} = this.props;
+    let checkboxDisabled = disabled || this.state.disabled;
+    let cx = classNames('fingerprint-group', {
+      expanded: !this.state.collapsed,
+      busy: this.state.busy
+    });
+    let group = this.getGroup();
+
+    let tagList = (group && group.tags.filter(tag => tag.key !== 'user')) || [];
+
+    // `event` can be null if last event w/ fingerprint is not within retention period
+    return (
+      <div className={cx}>
+        <SpreadLayout className="merged-controls" responsive>
+          <FlowLayout onClick={this.handleToggle}>
+            <div className="action-column">
+              <Checkbox
+                id={fingerprint}
+                value={fingerprint}
+                checked={this.state.checked}
+                disabled={checkboxDisabled}
+              />
+            </div>
+
+            <label
+              onClick={this.handleLabelClick}
+              htmlFor={fingerprint}
+              className="truncate fingerprint">
+              {fingerprint}
+            </label>
+          </FlowLayout>
+
+          <div>
+            <span />
+            <span className="merged-collapse" onClick={this.handleToggleEvents}>
+              {this.state.collapsed
+                ? <i className="icon-arrow-down" />
+                : <i className="icon-arrow-up" />}
+            </span>
+          </div>
+        </SpreadLayout>
+
+        {!this.state.collapsed &&
+          <div className="merged-events-list event-list">
+            {event &&
+              <EventsTable
+                fixedDimensions
+                tagList={tagList}
+                events={[event]}
+                params={{
+                  orgId,
+                  projectId,
+                  groupId
+                }}
+              />}
+          </div>}
+      </div>
+    );
+  }
+});
+
+export default MergedItem;
diff --git a/src/sentry/static/sentry/app/views/groupMerged/mergedList.jsx b/src/sentry/static/sentry/app/views/groupMerged/mergedList.jsx
new file mode 100644
index 0000000000..9221809c34
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/groupMerged/mergedList.jsx
@@ -0,0 +1,68 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import {Event} from '../../proptypes';
+import {t} from '../../locale';
+import MergedItem from './mergedItem';
+import MergedToolbar from './mergedToolbar';
+import Pagination from '../../components/pagination';
+import QueryCount from '../../components/queryCount';
+
+const MergedList = React.createClass({
+  propTypes: {
+    onUnmerge: PropTypes.func.isRequired,
+    onCollapse: PropTypes.func.isRequired,
+    items: PropTypes.arrayOf(Event),
+    pageLinks: PropTypes.string
+  },
+
+  renderEmpty() {
+    return (
+      <div className="box empty-stream">
+        <span className="icon icon-exclamation" />
+        <p>{t("There don't seem to be any hashes for this issue.")}</p>
+      </div>
+    );
+  },
+
+  render() {
+    let {items, pageLinks, onCollapse, onUnmerge, ...otherProps} = this.props;
+    let itemsWithLatestEvent = items.filter(({latestEvent}) => !!latestEvent);
+    let hasResults = itemsWithLatestEvent.length > 0;
+
+    if (!hasResults) {
+      return (
+        <div className="merged-list-container">
+          {this.renderEmpty()}
+        </div>
+      );
+    }
+
+    return (
+      <div className="merged-list-container">
+        <h2>
+          <span>{t('Merged fingerprints with latest event')}</span>
+          <QueryCount count={itemsWithLatestEvent.length} />
+        </h2>
+
+        <MergedToolbar onCollapse={onCollapse} onUnmerge={onUnmerge} />
+
+        <div className="merged-list">
+          {itemsWithLatestEvent.map(({id, latestEvent}) => (
+            <MergedItem
+              key={id}
+              {...otherProps}
+              disabled={items.length === 1}
+              event={latestEvent}
+              fingerprint={id}
+              itemCount={items.length}
+            />
+          ))}
+        </div>
+        <Pagination pageLinks={pageLinks} />
+      </div>
+    );
+  }
+});
+
+export default MergedList;
diff --git a/src/sentry/static/sentry/app/views/groupGrouping/mergedToolbar.jsx b/src/sentry/static/sentry/app/views/groupMerged/mergedToolbar.jsx
similarity index 74%
rename from src/sentry/static/sentry/app/views/groupGrouping/mergedToolbar.jsx
rename to src/sentry/static/sentry/app/views/groupMerged/mergedToolbar.jsx
index 79a2138c13..35a773c906 100644
--- a/src/sentry/static/sentry/app/views/groupGrouping/mergedToolbar.jsx
+++ b/src/sentry/static/sentry/app/views/groupMerged/mergedToolbar.jsx
@@ -6,13 +6,15 @@ import {t} from '../../locale';
 import GroupingStore from '../../stores/groupingStore';
 
 import LinkWithConfirmation from '../../components/linkWithConfirmation';
+import Toolbar from '../../components/toolbar';
 import SpreadLayout from '../../components/spreadLayout';
-import SplitLayout from '../../components/splitLayout';
 
 const MergedToolbar = React.createClass({
   propTypes: {
-    onUnmerge: PropTypes.func
+    onUnmerge: PropTypes.func,
+    onCollapse: PropTypes.func
   },
+
   mixins: [Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
   getInitialState() {
     return {
@@ -29,20 +31,12 @@ const MergedToolbar = React.createClass({
   },
 
   render() {
-    let {onUnmerge} = this.props;
+    let {onUnmerge, onCollapse} = this.props;
     return (
-      <div className="grouping-toolbar stream-actions">
-        <SplitLayout responsive>
-          <SpreadLayout>
-            <div className="stream-actions-header">
-              {t('Event')}
-            </div>
-          </SpreadLayout>
+      <Toolbar className="merged-toolbar">
+        <SpreadLayout responsive>
           <SpreadLayout>
-            <div className="stream-actions-header event-fingerprint-header">
-              {t('Fingerprint')}
-            </div>
-            <div className="grouping-toolbar-actions">
+            <div className="merged-toolbar-actions">
               <LinkWithConfirmation
                 disabled={this.state.unmergeCount === 0}
                 title={t(`Unmerging ${this.state.unmergeCount} events`)}
@@ -55,8 +49,15 @@ const MergedToolbar = React.createClass({
               </LinkWithConfirmation>
             </div>
           </SpreadLayout>
-        </SplitLayout>
-      </div>
+          <SpreadLayout>
+            <div>
+              <button className="btn btn-sm btn-default" onClick={onCollapse}>
+                Collapse All
+              </button>
+            </div>
+          </SpreadLayout>
+        </SpreadLayout>
+      </Toolbar>
     );
   }
 });
diff --git a/src/sentry/static/sentry/app/views/groupGrouping/groupGroupingView.jsx b/src/sentry/static/sentry/app/views/groupSimilar/groupSimilarView.jsx
similarity index 73%
rename from src/sentry/static/sentry/app/views/groupGrouping/groupGroupingView.jsx
rename to src/sentry/static/sentry/app/views/groupSimilar/groupSimilarView.jsx
index 94fe51994e..216e3a870b 100644
--- a/src/sentry/static/sentry/app/views/groupGrouping/groupGroupingView.jsx
+++ b/src/sentry/static/sentry/app/views/groupSimilar/groupSimilarView.jsx
@@ -1,5 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import {browserHistory} from 'react-router';
 import Reflux from 'reflux';
 
 import {t} from '../../locale';
@@ -7,7 +8,6 @@ import GroupingActions from '../../actions/groupingActions';
 import GroupingStore from '../../stores/groupingStore';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
-import MergedList from './mergedList';
 import ProjectState from '../../mixins/projectState';
 import SimilarList from './similarList';
 
@@ -20,10 +20,8 @@ const GroupGroupingView = React.createClass({
 
   getInitialState() {
     return {
-      mergedItems: [],
       similarItems: [],
       filteredSimilarItems: [],
-      mergedLinks: [],
       similarLinks: [],
       loading: true,
       error: false
@@ -44,28 +42,28 @@ const GroupGroupingView = React.createClass({
   },
 
   onGroupingUpdate({
-    mergedItems,
-    mergedLinks,
+    mergedParent,
     similarItems,
     similarLinks,
     filteredSimilarItems,
     loading,
     error
   }) {
-    if (mergedItems && similarItems) {
+    if (similarItems) {
       this.setState({
-        mergedItems,
-        mergedLinks,
         similarItems,
         similarLinks,
         filteredSimilarItems,
         loading: typeof loading !== 'undefined' ? loading : false,
         error: typeof error !== 'undefined' ? error : false
       });
+    } else if (mergedParent && mergedParent !== this.props.params.groupId) {
+      // Merge success, since we can't specify target, we need to redirect to new parent
+      browserHistory.push(`/issues/${mergedParent}/similar/`);
     }
   },
 
-  getEndpoint(type) {
+  getEndpoint(type = 'similar') {
     let params = this.props.params;
     let queryParams = {
       ...this.props.location.query,
@@ -82,13 +80,7 @@ const GroupGroupingView = React.createClass({
       error: false
     });
 
-    let reqs = [
-      {
-        endpoint: this.getEndpoint('hashes'),
-        dataKey: 'merged',
-        queryParams: this.props.location.query
-      }
-    ];
+    let reqs = [];
 
     if (projectFeatures.has('similarity-view')) {
       reqs.push({
@@ -112,29 +104,17 @@ const GroupGroupingView = React.createClass({
     }
   },
 
-  handleUnmerge() {
-    let {params} = this.props;
-
-    GroupingActions.unmerge({
-      groupId: params.groupId,
-      loadingMessage: `${t('Unmerging events')}...`,
-      successMessage: t('Events successfully queued for unmerging.'),
-      errorMessage: t('Unable to queue events for unmerging.')
-    });
-  },
-
   render() {
     let {orgId, projectId, groupId} = this.props.params;
     let isLoading = this.state.loading;
     let isError = this.state.error && !isLoading;
+    let isLoadedSuccessfully = !isError && !isLoading;
     let projectFeatures = this.getProjectFeatures();
-    let hasMergedItems = this.state.mergedItems.length >= 0 && !isError && !isLoading;
     let hasSimilarItems =
       projectFeatures.has('similarity-view') &&
       (this.state.similarItems.length >= 0 ||
         this.state.filteredSimilarItems.length >= 0) &&
-      !isError &&
-      !isLoading;
+      isLoadedSuccessfully;
 
     return (
       <div>
@@ -142,7 +122,7 @@ const GroupGroupingView = React.createClass({
           <strong>{t('Warning')}:</strong>
           {' '}
           {t(
-            'This is an experimental feature. Data may not be immediately available while we process the unmerge.'
+            'This is an experimental feature. Data may not be immediately available while we process merges.'
           )}
         </div>
 
@@ -156,19 +136,8 @@ const GroupGroupingView = React.createClass({
             onMerge={this.handleMerge}
             orgId={orgId}
             projectId={projectId}
-            pageLinks={this.state.similarLinks}
-          />}
-
-        {hasMergedItems &&
-          <MergedList
-            items={this.state.mergedItems}
-            onUnmerge={this.handleUnmerge}
-            orgId={orgId}
-            projectId={projectId}
             groupId={groupId}
-            pageLinks={this.state.mergedLinks}
-            busyMap={this.state.busy}
-            hiddenMap={this.state.hidden}
+            pageLinks={this.state.similarLinks}
           />}
 
       </div>
diff --git a/src/sentry/static/sentry/app/views/groupSimilar/similarItem.jsx b/src/sentry/static/sentry/app/views/groupSimilar/similarItem.jsx
new file mode 100644
index 0000000000..23e7b3d7f5
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/groupSimilar/similarItem.jsx
@@ -0,0 +1,144 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import Reflux from 'reflux';
+import classNames from 'classnames';
+
+import GroupingStore from '../../stores/groupingStore';
+import GroupingActions from '../../actions/groupingActions';
+
+import Count from '../../components/count';
+import EventOrGroupHeader from '../../components/eventOrGroupHeader';
+import EventOrGroupExtraDetails from '../../components/eventOrGroupExtraDetails';
+import SpreadLayout from '../../components/spreadLayout';
+import FlowLayout from '../../components/flowLayout';
+import Checkbox from '../../components/checkbox';
+import ScoreBar from '../../components/scoreBar';
+import Hovercard from '../../components/hovercard';
+import SimilarScoreCard from '../../components/similarScoreCard';
+
+const similarInterfaces = ['exception', 'message'];
+
+const SimilarIssueItem = React.createClass({
+  propTypes: {
+    orgId: PropTypes.string.isRequired,
+    projectId: PropTypes.string.isRequired,
+    score: PropTypes.object,
+    scoresByInterface: PropTypes.shape({
+      exception: PropTypes.array,
+      message: PropTypes.array
+    }),
+    aggregate: PropTypes.shape({
+      exception: PropTypes.number,
+      message: PropTypes.number
+    }),
+    issue: PropTypes.shape({
+      id: PropTypes.string.isRequired,
+      level: PropTypes.string.isRequired,
+      type: PropTypes.oneOf(['error', 'csp', 'default']).isRequired,
+      title: PropTypes.string.isRequired,
+      metadata: PropTypes.shape({
+        value: PropTypes.string,
+        message: PropTypes.string,
+        directive: PropTypes.string,
+        type: PropTypes.string,
+        title: PropTypes.string,
+        uri: PropTypes.string
+      }).isRequired,
+      culprit: PropTypes.string,
+      hideLevel: PropTypes.bool
+    })
+  },
+  mixins: [Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
+
+  getInitialState() {
+    return {
+      visible: true,
+      checked: false,
+      busy: false
+    };
+  },
+
+  onGroupingUpdate({mergeState}) {
+    let {issue} = this.props;
+    if (mergeState) {
+      const stateForId = mergeState.has(issue.id) && mergeState.get(issue.id);
+      if (stateForId) {
+        Object.keys(stateForId).forEach(key => {
+          if (stateForId[key] !== this.state[key]) {
+            this.setState({
+              [key]: stateForId[key]
+            });
+          }
+        });
+      }
+    }
+  },
+
+  handleToggle(e) {
+    let {issue} = this.props;
+
+    // clicking anywhere in the row will toggle the checkbox
+    if (!this.state.busy) {
+      GroupingActions.toggleMerge(issue.id);
+    }
+  },
+
+  render() {
+    let {aggregate, scoresByInterface, issue, orgId, projectId} = this.props;
+
+    if (!this.state.visible) {
+      return null;
+    }
+
+    let cx = classNames('group', 'similar-issue', {
+      busy: this.state.busy
+    });
+
+    return (
+      <SpreadLayout className={cx} responsive onClick={this.handleToggle}>
+        <FlowLayout truncate>
+          <FlowLayout truncate>
+            <div className="action-column">
+              <Checkbox id={issue.id} value={issue.id} checked={this.state.checked} />
+            </div>
+            <div className="event-details level-error" style={{flex: 1}}>
+              <EventOrGroupHeader orgId={orgId} projectId={projectId} data={issue} />
+              <EventOrGroupExtraDetails
+                {...issue}
+                groupId={issue.id}
+                orgId={orgId}
+                projectId={projectId}
+                lastSeen={null}
+                group
+              />
+            </div>
+          </FlowLayout>
+        </FlowLayout>
+
+        <div className="similar-score-columns">
+          <Count className="similar-score-column" value={issue.count} />
+
+          {similarInterfaces.map(interfaceName => {
+            let avgScore = aggregate[interfaceName];
+            let scoreList = scoresByInterface[interfaceName] || [];
+            // Check for valid number (and not NaN)
+            let scoreValue = typeof avgScore === 'number' && !Number.isNaN(avgScore)
+              ? avgScore
+              : 0;
+
+            return (
+              <div key={interfaceName} className="similar-score-column">
+                <Hovercard
+                  body={scoreList.length && <SimilarScoreCard scoreList={scoreList} />}>
+                  <ScoreBar vertical score={Math.round(scoreValue * 5)} />
+                </Hovercard>
+              </div>
+            );
+          })}
+        </div>
+      </SpreadLayout>
+    );
+  }
+});
+
+export default SimilarIssueItem;
diff --git a/src/sentry/static/sentry/app/views/groupGrouping/similarList.jsx b/src/sentry/static/sentry/app/views/groupSimilar/similarList.jsx
similarity index 51%
rename from src/sentry/static/sentry/app/views/groupGrouping/similarList.jsx
rename to src/sentry/static/sentry/app/views/groupSimilar/similarList.jsx
index 9868bfe023..2ae1a5f19b 100644
--- a/src/sentry/static/sentry/app/views/groupGrouping/similarList.jsx
+++ b/src/sentry/static/sentry/app/views/groupSimilar/similarList.jsx
@@ -1,13 +1,12 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {t} from '../../locale';
 import {Group} from '../../proptypes';
-
+import {t} from '../../locale';
 import Pagination from '../../components/pagination';
-
-import SimilarToolbar from './similarToolbar';
+import QueryCount from '../../components/queryCount';
 import SimilarItem from './similarItem';
+import SimilarToolbar from './similarToolbar';
 
 const SimilarItemPropType = PropTypes.shape({
   issue: Group,
@@ -26,6 +25,12 @@ const SimilarList = React.createClass({
     filteredItems: PropTypes.arrayOf(SimilarItemPropType)
   },
 
+  getDefaultProps() {
+    return {
+      filteredItems: []
+    };
+  },
+
   getInitialState() {
     return {
       showAllItems: false
@@ -43,54 +48,53 @@ const SimilarList = React.createClass({
     );
   },
 
+  handleShowAll() {
+    this.setState({showAllItems: true});
+  },
+
   render() {
     let {orgId, projectId, items, filteredItems, pageLinks, onMerge} = this.props;
     let hasHiddenItems = !!filteredItems.length;
     let hasResults = items.length > 0 || hasHiddenItems;
+    let itemsWithFiltered = items.concat(
+      (this.state.showAllItems && filteredItems) || []
+    );
 
-    if (hasResults) {
+    if (!hasResults) {
       return (
-        <div className="grouping-list-container grouping-similar-list-container">
-          <h2>{t('Similar Issues')}</h2>
-          <SimilarToolbar onMerge={onMerge} />
-
-          <div className="grouping-list">
-            {items.map(item => (
-              <SimilarItem
-                key={item.issue.id}
-                orgId={orgId}
-                projectId={projectId}
-                {...item}
-              />
-            ))}
-
-            {this.state.showAllItems &&
-              filteredItems.map(item => (
-                <SimilarItem
-                  key={item.issue.id}
-                  orgId={orgId}
-                  projectId={projectId}
-                  {...item}
-                />
-              ))}
-            {hasHiddenItems &&
-              !this.state.showAllItems &&
-              <div className="similar-items-footer">
-                <button
-                  className="btn btn-default btn-xl"
-                  onClick={() => this.setState({showAllItems: true})}>
-                  Show {filteredItems.length} issues below threshold
-                </button>
-              </div>}
-          </div>
-          <Pagination pageLinks={pageLinks} />
+        <div className="similar-list-container">
+          {this.renderEmpty()}
         </div>
       );
     }
 
     return (
-      <div className="grouping-list-container grouping-similar-list-container">
-        {this.renderEmpty()}
+      <div className="similar-list-container">
+        <h2>
+          <span>{t('Similar Issues')}</span>
+          <QueryCount count={items.length + filteredItems.length} />
+        </h2>
+        <SimilarToolbar onMerge={onMerge} />
+
+        <div className="similar-list">
+          {itemsWithFiltered.map(item => (
+            <SimilarItem
+              key={item.issue.id}
+              orgId={orgId}
+              projectId={projectId}
+              {...item}
+            />
+          ))}
+
+          {hasHiddenItems &&
+            !this.state.showAllItems &&
+            <div className="similar-items-footer">
+              <button className="btn btn-default btn-xl" onClick={this.handleShowAll}>
+                Show {filteredItems.length} issues below threshold
+              </button>
+            </div>}
+        </div>
+        <Pagination pageLinks={pageLinks} />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/groupSimilar/similarToolbar.jsx b/src/sentry/static/sentry/app/views/groupSimilar/similarToolbar.jsx
new file mode 100644
index 0000000000..b35fe13205
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/groupSimilar/similarToolbar.jsx
@@ -0,0 +1,72 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import Reflux from 'reflux';
+
+import {t} from '../../locale';
+import GroupingStore from '../../stores/groupingStore';
+
+import SpreadLayout from '../../components/spreadLayout';
+import FlowLayout from '../../components/flowLayout';
+import LinkWithConfirmation from '../../components/linkWithConfirmation';
+import Toolbar from '../../components/toolbar';
+import ToolbarHeader from '../../components/toolbarHeader';
+
+const SimilarToolbar = React.createClass({
+  propTypes: {
+    onMerge: PropTypes.func.isRequired
+  },
+
+  mixins: [Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
+
+  getInitialState() {
+    return {
+      mergeCount: 0
+    };
+  },
+
+  onGroupingUpdate({mergeList}) {
+    if (mergeList && mergeList.size !== this.state.mergedCount) {
+      this.setState({
+        mergeCount: mergeList.size
+      });
+    }
+  },
+
+  render() {
+    let {onMerge} = this.props;
+    return (
+      <Toolbar className="similar-toolbar">
+        <SpreadLayout responsive>
+          <FlowLayout style={{flex: 1}}>
+            <FlowLayout>
+              <div className="similar-toolbar-actions">
+                <LinkWithConfirmation
+                  disabled={this.state.mergeCount === 0}
+                  title={t(`Merging ${this.state.mergeCount} issues`)}
+                  message={t('Are you sure you want to merge these issues?')}
+                  className="btn btn-sm btn-default"
+                  onConfirm={onMerge}>
+                  {t('Merge')} ({this.state.mergeCount || 0})
+                </LinkWithConfirmation>
+              </div>
+            </FlowLayout>
+          </FlowLayout>
+
+          <div className="similar-score-columns">
+            <ToolbarHeader className="similar-score-column event-count-header">
+              {t('Events')}
+            </ToolbarHeader>
+            <ToolbarHeader className="similar-score-column event-similar-header">
+              {t('Exception')}
+            </ToolbarHeader>
+            <ToolbarHeader className="similar-score-column event-similar-header">
+              {t('Message')}
+            </ToolbarHeader>
+          </div>
+        </SpreadLayout>
+      </Toolbar>
+    );
+  }
+});
+
+export default SimilarToolbar;
diff --git a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
index b6e10c655d..8f5d803c35 100644
--- a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
@@ -9,15 +9,16 @@ import {getPlatformName} from './utils';
 import OnboardingProject from '../onboarding/project';
 
 import {t} from '../../locale';
+import PropTypes from 'prop-types';
 import Raven from 'raven-js';
 
 const CreateProject = React.createClass({
   propTypes: {
-    getDocsUrl: React.PropTypes.func
+    getDocsUrl: PropTypes.func
   },
 
   contextTypes: {
-    location: React.PropTypes.object
+    location: PropTypes.object
   },
 
   mixins: [ApiMixin, OrganizationState],
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index 553edd036b..53c791b06d 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -17,6 +17,8 @@ import CustomIgnoreCountModal from '../../components/customIgnoreCountModal';
 import CustomIgnoreDurationModal from '../../components/customIgnoreDurationModal';
 import CustomResolutionModal from '../../components/customResolutionModal';
 import Checkbox from '../../components/checkbox';
+import Toolbar from '../../components/toolbar';
+import ToolbarHeader from '../../components/toolbarHeader';
 
 const IgnoreActions = React.createClass({
   propTypes: {
@@ -546,7 +548,7 @@ const StreamActions = React.createClass({
 
     return (
       <div>
-        <div className="stream-actions row">
+        <Toolbar className="stream-actions row">
           <div className="stream-actions-left col-md-6 col-sm-8 col-xs-8">
             <div className="checkbox">
               <Checkbox
@@ -748,10 +750,12 @@ const StreamActions = React.createClass({
               </a>
             </div>
           </div>
-          <div className="hidden-sm stream-actions-assignee col-md-1" />
+          <div className="hidden-sm steream-actions-assignee col-md-1" />
           <div className="stream-actions-level col-md-1 hidden-xs" />
           <div className="hidden-sm hidden-xs stream-actions-graph col-md-2">
-            <span className="stream-actions-graph-label">{t('Graph:')}</span>
+            <ToolbarHeader className="stream-actions-graph-label">
+              {t('Graph:')}
+            </ToolbarHeader>
             <ul className="toggle-graph">
               <li className={this.props.statsPeriod === '24h' ? 'active' : ''}>
                 <a onClick={this.selectStatsPeriod.bind(this, '24h')}>{t('24h')}</a>
@@ -761,13 +765,14 @@ const StreamActions = React.createClass({
               </li>
             </ul>
           </div>
-          <div className="stream-actions-count align-right col-md-1 col-sm-2 col-xs-2">
+          <ToolbarHeader className="stream-actions-count align-right col-md-1 col-sm-2 col-xs-2">
             {t('Events')}
-          </div>
-          <div className="stream-actions-users align-right col-md-1 col-sm-2 col-xs-2">
+          </ToolbarHeader>
+          <ToolbarHeader className="stream-actions-users align-right col-md-1 col-sm-2 col-xs-2">
             {t('Users')}
-          </div>
-        </div>
+          </ToolbarHeader>
+        </Toolbar>
+
         {!this.props.allResultsVisible &&
           this.state.pageSelected &&
           <div className="row stream-select-all-notice">
diff --git a/src/sentry/static/sentry/less/component-layouts.less b/src/sentry/static/sentry/less/component-layouts.less
index 72a80b84d4..1cc2cb0df0 100644
--- a/src/sentry/static/sentry/less/component-layouts.less
+++ b/src/sentry/static/sentry/less/component-layouts.less
@@ -1,5 +1,5 @@
 @media(max-width:629px) {
-  .split-layout {
+  .split-layout, .spread-layout {
     &.allow-responsive {
       flex-direction: column;
       align-items: stretch;
diff --git a/src/sentry/static/sentry/less/components/eventsTableRow.less b/src/sentry/static/sentry/less/components/eventsTableRow.less
new file mode 100644
index 0000000000..a7b257a0c6
--- /dev/null
+++ b/src/sentry/static/sentry/less/components/eventsTableRow.less
@@ -0,0 +1,5 @@
+.events-table-row {
+  .truncate {
+    padding: 2px 0;
+  }
+}
diff --git a/src/sentry/static/sentry/less/components/flowLayout.less b/src/sentry/static/sentry/less/components/flowLayout.less
new file mode 100644
index 0000000000..1b42486a85
--- /dev/null
+++ b/src/sentry/static/sentry/less/components/flowLayout.less
@@ -0,0 +1,10 @@
+.flow-layout {
+  display: flex;
+  flex: 1;
+  align-items: center;
+
+
+  &.is-truncated {
+    overflow: hidden;
+  }
+}
diff --git a/src/sentry/static/sentry/less/components/mergedItem.less b/src/sentry/static/sentry/less/components/mergedItem.less
new file mode 100644
index 0000000000..7352b2c08f
--- /dev/null
+++ b/src/sentry/static/sentry/less/components/mergedItem.less
@@ -0,0 +1,79 @@
+@import '../palette.less';
+
+.merged-list {
+  border: 1px solid @trim;
+  border-bottom: none;
+}
+
+.merged-group {
+  &.busy {
+    opacity: 0.2;
+  }
+  &:first-child {
+    .merged-controls {
+      border-top: none;
+    }
+  }
+
+  &:last-child {
+    .merged-controls {
+      border-bottom: 1px solid @trim;
+    }
+  }
+}
+
+.expanded {
+  .merged-controls {
+    border-bottom: 1px solid @trim;
+  }
+}
+
+.merged-controls {
+  border-top: 1px solid @trim;
+  background-color: #f3f1f6;
+  padding: 5px 0;
+
+  .action-column {
+    padding: 0 10px;
+    display: flex;
+    align-items: center;
+
+    input {
+      margin: 0;
+    }
+  }
+
+  label {
+    margin: 0;
+    font-weight: normal;
+  }
+}
+
+
+.merged-collapse {
+  cursor: pointer;
+  padding: 0 10px;
+}
+
+.merged-list .table {
+  table-layout: fixed;
+
+  & > thead > tr > th,
+  & > tbody > tr > td {
+    width: 300px;
+  }
+}
+
+.merged-events-list {
+  &.event-list {
+    border: none;
+  }
+}
+
+.fingerprint {
+  font-family: Monaco, monospace;
+}
+
+.merged-toolbar {
+  padding: 5px 10px;
+}
diff --git a/src/sentry/static/sentry/less/components/scoreBar.less b/src/sentry/static/sentry/less/components/scoreBar.less
new file mode 100644
index 0000000000..fe4dcfe2ff
--- /dev/null
+++ b/src/sentry/static/sentry/less/components/scoreBar.less
@@ -0,0 +1,51 @@
+@import '../palette.less';
+
+
+@thickness: 4px;
+@size: 40px;
+
+.score-bar {
+  display: flex;
+
+  &.vertical {
+    flex-direction: column-reverse;
+    justify-content: flex-end;
+  }
+
+}
+
+.score-bar-bar {
+  border-radius: 3px;
+  margin: 2px;
+
+  &.empty {
+    background-color: @gray-lightest;
+  }
+
+  // Colors
+  &.red {
+    background-color: @orange;
+  }
+
+  &.orange {
+    background-color: @yellow-orange;
+  }
+
+  &.green {
+    background-color: @green;
+  }
+}
+
+.horizontal {
+  .score-bar-bar {
+    width: @thickness;
+    height: @size;
+  }
+}
+
+.vertical {
+  .score-bar-bar {
+    height: @thickness;
+    width: @size;
+  }
+}
diff --git a/src/sentry/static/sentry/less/components/similarScoreCard.less b/src/sentry/static/sentry/less/components/similarScoreCard.less
new file mode 100644
index 0000000000..eecf072fb8
--- /dev/null
+++ b/src/sentry/static/sentry/less/components/similarScoreCard.less
@@ -0,0 +1,3 @@
+.similar-score-card-row {
+  margin: 2px 0;
+}
diff --git a/src/sentry/static/sentry/less/components/toolbar.less b/src/sentry/static/sentry/less/components/toolbar.less
new file mode 100644
index 0000000000..0bb13d983b
--- /dev/null
+++ b/src/sentry/static/sentry/less/components/toolbar.less
@@ -0,0 +1,10 @@
+@import '../palette.less';
+
+.toolbar {
+  background: @white-dark;
+  border: 1px solid @trim;
+  border-bottom: none;
+  border-radius: 3px 3px 0 0;
+  box-shadow: 0 1px 0 @trim;
+  margin: 0;
+}
diff --git a/src/sentry/static/sentry/less/components/toolbarHeader.less b/src/sentry/static/sentry/less/components/toolbarHeader.less
new file mode 100644
index 0000000000..a3bfd6112d
--- /dev/null
+++ b/src/sentry/static/sentry/less/components/toolbarHeader.less
@@ -0,0 +1,8 @@
+@import '../palette.less';
+
+.toolbar-header {
+  color: lighten(@gray, 10);
+  font-size: 12px;
+  text-transform: uppercase;
+  font-weight: bold;
+}
diff --git a/src/sentry/static/sentry/less/group-grouping.less b/src/sentry/static/sentry/less/group-similar.less
similarity index 51%
rename from src/sentry/static/sentry/less/group-grouping.less
rename to src/sentry/static/sentry/less/group-similar.less
index 8b5e34cca2..407f8641ac 100644
--- a/src/sentry/static/sentry/less/group-grouping.less
+++ b/src/sentry/static/sentry/less/group-similar.less
@@ -1,7 +1,7 @@
 // For interface for merging/unmerging events/issues
 // Shares CSS with "stream.less" so some defs are in there
 
-.grouping-list-container {
+.similar-list-container, .merged-list-container {
   h2 {
     font-size: 18px;
     text-transform: uppercase;
@@ -10,32 +10,33 @@
     margin-bottom: 10px;
   }
 
-  .stream-actions-header {
-    padding: 3px 12px;
+  .event-details {
+    overflow: hidden;
   }
 
   .event-count-header {
     padding-right: 0;
-    padding-left: 12px;
+    padding-left: 0;
   }
 
   .event-count {
-    padding: 12px 12px 12px 24px;
+    padding: 0;
   }
 }
 
-.grouping-list {
+.similar-list {
   .group {
     padding-right: 0;
   }
   .event-details {
-    padding: 12px;
+    padding: 12px 12px 12px 0;
   }
   .fingerprint {
     padding: 12px;
   }
   .action-column {
-    padding: 12px;
+    text-align: center;
+    width: 54px;
   }
   .event-extra {
     ul {
@@ -44,64 +45,73 @@
   }
 }
 
-.grouping-similar-list-container {
-  .event-details {
-    overflow: hidden;
-  }
-}
-
-.grouping-toolbar {
+.similar-toolbar {
   &.stream-actions {
     height: auto;
     padding-right: 0;
   }
 }
-.grouping-toolbar-actions {
-  padding: 6px;
+.similar-toolbar-actions {
+  /* margin-left: 54px; */
+  margin-left: 20px;
+  padding: 5px 0;
 }
 
-.similar-items-footer {
+.similar-score-columns {
   display: flex;
-  justify-content: center;
-  padding: 12px;
+  align-items: center;
+  flex-shrink: 0;
+  min-width: 300px;
+  width: 300px;
 }
 
-.similarity-score {
+.similar-score-column {
   flex: 1;
-  padding: 6px 12px;
-}
-.similarity-score-row {
+  flex-shrink: 0;
   display: flex;
-  flex-direction: column;
-  margin-bottom: 12px;
+  justify-content: center;
+  padding: 5px 0;
+
+  .hovercard {
+    width: 264px;
 
-  &:last-child {
-    margin-bottom: 0;
+    &:after {
+      right: 13px;
+    }
+    .hovercard-body {
+      min-height: auto;
+    }
   }
 }
 
-.similarity-score-label {
-  display: flex;
-  justify-content: space-between;
-  flex: 1;
-}
-.similarity-score-bar {
-  height: 3px;
+.similar-score-quantity {
+  height: 16px;
+  width: 48px;
   border-radius: 2px;
-}
 
-.merged-event {
-  .fingerprint {
-    font-size: 12px;
+  &.low {
+    background-color: @orange;
+  }
+  &.med {
+    background-color: @yellow-orange;
   }
+  &.high {
+    background-color: @green;
+  }
+}
+
+.similar-items-footer {
+  display: flex;
+  justify-content: center;
+  padding: 12px;
 }
 
-.merged-event.busy, .similar-issue.busy {
+.similar-issue.busy {
   opacity: 0.3;
 }
 
 @media(max-width: 629px) {
-  .grouping-similar-list-container {
+  .similar-list-container {
     .event-count-header {
       padding-right: 12px;
     }
diff --git a/src/sentry/static/sentry/less/misc.less b/src/sentry/static/sentry/less/misc.less
index 3a57110ca1..0262064c36 100644
--- a/src/sentry/static/sentry/less/misc.less
+++ b/src/sentry/static/sentry/less/misc.less
@@ -87,4 +87,4 @@ span.translation-wrapper {
   to {
     width: 1em;
   }
-}
\ No newline at end of file
+}
diff --git a/src/sentry/static/sentry/less/sentry-hovercard.less b/src/sentry/static/sentry/less/sentry-hovercard.less
index 37e83c83ea..2d067925ee 100644
--- a/src/sentry/static/sentry/less/sentry-hovercard.less
+++ b/src/sentry/static/sentry/less/sentry-hovercard.less
@@ -3,6 +3,10 @@
  * ============================================================================
  */
 
+.hovercard-container {
+  position: relative;
+}
+
 .hovercard {
   @hovercard-padding: 15px;
   border: none;
diff --git a/src/sentry/static/sentry/less/sentry.less b/src/sentry/static/sentry/less/sentry.less
index 28892a2634..4d5177bc6e 100644
--- a/src/sentry/static/sentry/less/sentry.less
+++ b/src/sentry/static/sentry/less/sentry.less
@@ -46,7 +46,7 @@
 @import url("./setup-wizard.less");
 @import url("./spacing.less");
 @import url("./stream.less");
-@import url("./group-grouping.less");
+@import url("./group-similar.less");
 @import url("./component-layouts");
 @import url("./queryCount.less");
 @import url("../app/views/onboarding/onboarding.less");
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index c751a8e2b9..2d97be7085 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -498,6 +498,11 @@ table.integrations {
     border: 0;
     margin-bottom: 0;
 
+    & > thead > tr > th,
+    & > tbody > tr > td {
+      padding: 10px 15px;
+    }
+
     h5 {
       margin-bottom: 0;
       font-size: 16px;
@@ -509,8 +514,17 @@ table.integrations {
       }
     }
 
+    th {
+      text-transform: uppercase;
+      font-size: 14px;
+      color: #95899f;
+    }
+
     th, td {
       white-space: nowrap;
+      // #2d2635;
+      //
+      // fingerprint #3c3644
     }
 
     .table-user-info {
@@ -531,6 +545,7 @@ table.integrations {
     time {
       white-space: nowrap;
     }
+
   }
 }
 /**
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index 4e7b9cf330..f61ba06b04 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -65,13 +65,9 @@
   }
 }
 
-.stream-actions {
-  background: @white-dark;
-  border: 1px solid @trim;
-  border-bottom: none;
-  border-radius: 3px 3px 0 0;
-  box-shadow: 0 1px 0 @trim;
-  margin: 0;
+.stream-actions, .stream-actions.toolbar {
+  padding-top: 0;
+  padding-bottom: 0;
   padding-right: 10px;
   height: 44px;
 
@@ -116,16 +112,15 @@
     padding-top: 11px;
   }
 
-  .stream-actions-header,
+  .stream-actions-graph-label {
+    display: inline-block;
+  }
+
   .stream-actions-count,
   .stream-actions-users,
   .stream-actions-level,
   .stream-actions-graph {
-    color: lighten(@gray, 10);
     padding-top: 11px;
-    font-size: 12px;
-    text-transform: uppercase;
-    font-weight: bold;
   }
 
   .realtime-paused {
@@ -226,7 +221,7 @@
   }
 }
 
-.group-list, .grouping-list {
+.group-list, .similar-list {
   background: #fff;
   border: 1px solid @trim;
   border-top: 1px solid @trim;
@@ -235,8 +230,8 @@
   // position: relative;
 }
 
-// .grouping-list is used in a tab in an Issue
-.group-list, .events, .grouping-list {
+// .similar-list is used in a tab in an Issue
+.group-list, .events, .similar-list {
   .list-unstyled;
 
   .group {
@@ -549,7 +544,7 @@
 }
 
 // stop from accidentally clicking event title
-.grouping-list .event-details h3 a {
+.similar-list .event-details h3 a {
   display: inline-block;
 }
 
@@ -1240,7 +1235,7 @@
   }
 
   .stream-actions {
-    .stream-actions-header, .stream-actions-count, .stream-actions-users {
+    .stream-actions-count, .stream-actions-users {
       font-size: 13px;
       padding-top: 8px;
     }
diff --git a/tests/acceptance/test_project_issues_grouping.py b/tests/acceptance/test_project_similar_issues.py
similarity index 69%
rename from tests/acceptance/test_project_issues_grouping.py
rename to tests/acceptance/test_project_similar_issues.py
index b2aa9b6495..dfd0d08e37 100644
--- a/tests/acceptance/test_project_issues_grouping.py
+++ b/tests/acceptance/test_project_similar_issues.py
@@ -12,6 +12,8 @@ class ProjectIssuesGroupingTest(AcceptanceTestCase):
         super(ProjectIssuesGroupingTest, self).setUp()
         self.user = self.create_user('foo@example.com')
         self.org = self.create_organization(owner=self.user, name='Rowdy Tiger')
+        self.org.flags.early_adopter = True
+        self.org.save()
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
@@ -33,13 +35,14 @@ class ProjectIssuesGroupingTest(AcceptanceTestCase):
         )
         return event
 
-    def test_issues_grouping_tab(self):
-        event = self.create_sample_event(
-            platform='python',
-        )
+    # TODO(billy): skip until we enable for early adopters
+    #  def test_issues_similar_issues_tab(self):
+        #  event = self.create_sample_event(
+        #  platform='python',
+        #  )
 
-        self.browser.get(
-            '/{}/{}/issues/{}/grouping/'.format(self.org.slug, self.project.slug, event.group.id)
-        )
-        self.browser.wait_until('.grouping-merged-list-container')
-        self.browser.snapshot('issue details grouping tab')
+        #  self.browser.get(
+        #  '/{}/{}/issues/{}/similar/'.format(self.org.slug, self.project.slug, event.group.id)
+        #  )
+        #  self.browser.wait_until('.similar-list-container')
+        #  self.browser.snapshot('issue details, similar issues tab')
diff --git a/tests/js/mocks/events.js b/tests/js/mocks/events.js
new file mode 100644
index 0000000000..b3960ec547
--- /dev/null
+++ b/tests/js/mocks/events.js
@@ -0,0 +1,116 @@
+export default [
+  {
+    eventID: '807f0de4d8c246098f21f8e0f1684f3d',
+    packages: {},
+    dist: null,
+    tags: [
+      {value: 'Chrome 59.0.3071', key: 'browser'},
+      {value: 'Chrome', key: 'browser.name'},
+      {value: 'error', key: 'level'},
+      {value: 'javascript', key: 'logger'},
+      {value: 'Mac OS X 10.12.5', key: 'os'},
+      {value: 'Mac OS X', key: 'os.name'},
+      {value: 'd5241c9d9d2bcda918c7af72f07cea1e39a096ac', key: 'release'},
+      {
+        value: 'app/components/assigneeSelector in assignedTo',
+        key: 'transaction'
+      },
+      {
+        value: 'http://localhost:8000/sentry/internal/issues/227/grouping/',
+        key: 'url'
+      },
+      {value: 'id:1', key: 'user'}
+    ],
+    contexts: {
+      os: {version: '10.12.5', type: 'os', name: 'Mac OS X'},
+      browser: {version: '59.0.3071', type: 'browser', name: 'Chrome'}
+    },
+    dateReceived: '2017-07-26T00:34:20Z',
+    dateCreated: '2017-07-26T00:34:20Z',
+    fingerprints: [
+      '2c4887696f708c476a81ce4e834c4b02',
+      'e05da55328a860b21f62e371f0a7507d'
+    ],
+    metadata: {
+      type: 'TypeError',
+      value: "Cannot read property 'assignedTo' of undefined"
+    },
+    groupID: '268',
+    platform: 'javascript',
+    errors: [],
+    user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
+    context: {'session:duration': 46363},
+    entries: [],
+    message: "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+    sdk: {
+      clientIP: '127.0.0.1',
+      version: '3.16.1',
+      name: 'raven-js',
+      upstream: {
+        url: 'https://docs.sentry.io/clients/javascript/',
+        isNewer: false,
+        name: 'raven-js'
+      }
+    },
+    type: 'error',
+    id: '904',
+    size: 21896
+  },
+  {
+    eventID: '807f0de4d8c246098f21f8e0f1684f3d',
+    packages: {},
+    dist: null,
+    tags: [
+      {value: 'Chrome 59.0.3071', key: 'browser'},
+      {value: 'Chrome', key: 'browser.name'},
+      {value: 'error', key: 'level'},
+      {value: 'javascript', key: 'logger'},
+      {value: 'Mac OS X 10.12.5', key: 'os'},
+      {value: 'Mac OS X', key: 'os.name'},
+      {value: 'd5241c9d9d2bcda918c7af72f07cea1e39a096ac', key: 'release'},
+      {
+        value: 'app/components/assigneeSelector in assignedTo',
+        key: 'transaction'
+      },
+      {
+        value: 'http://localhost:8000/sentry/internal/issues/227/grouping/',
+        key: 'url'
+      },
+      {value: 'id:1', key: 'user'}
+    ],
+    contexts: {
+      os: {version: '10.12.5', type: 'os', name: 'Mac OS X'},
+      browser: {version: '59.0.3071', type: 'browser', name: 'Chrome'}
+    },
+    dateReceived: '2017-07-26T00:34:20Z',
+    dateCreated: '2017-07-26T00:34:20Z',
+    fingerprints: [
+      '2c4887696f708c476a81ce4e834c4b02',
+      'e05da55328a860b21f62e371f0a7507d'
+    ],
+    metadata: {
+      type: 'TypeError',
+      value: "Cannot read property 'assignedTo' of undefined"
+    },
+    groupID: '268',
+    platform: 'javascript',
+    errors: [],
+    user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
+    context: {'session:duration': 46363},
+    entries: [],
+    message: "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+    sdk: {
+      clientIP: '127.0.0.1',
+      version: '3.16.1',
+      name: 'raven-js',
+      upstream: {
+        url: 'https://docs.sentry.io/clients/javascript/',
+        isNewer: false,
+        name: 'raven-js'
+      }
+    },
+    type: 'error',
+    id: '904',
+    size: 21896
+  }
+];
diff --git a/tests/js/mocks/issues.js b/tests/js/mocks/issues.js
new file mode 100644
index 0000000000..920fc67003
--- /dev/null
+++ b/tests/js/mocks/issues.js
@@ -0,0 +1,128 @@
+export default [
+  {
+    lastSeen: '2017-07-25T02:22:19Z',
+    numComments: 0,
+    userCount: 1,
+    culprit: 'Constructor.onSimilarUpdate(app/views/groupSimilar/groupingMergedList)',
+    title: 'ReferenceError: unmergedList is not defined',
+    id: '274',
+    assignedTo: null,
+    logger: 'javascript',
+    type: 'error',
+    annotations: [],
+    metadata: {type: 'ReferenceError', value: 'unmergedList is not defined'},
+    status: 'unresolved',
+    subscriptionDetails: null,
+    isPublic: false,
+    hasSeen: false,
+    shortId: 'INTERNAL-4K',
+    shareId: '312e323734',
+    firstSeen: '2017-07-25T02:21:52Z',
+    count: '2',
+    permalink: 'http://localhost:8000/sentry/internal/issues/274/',
+    level: 'error',
+    isSubscribed: true,
+    isBookmarked: false,
+    project: {name: 'Internal', slug: 'internal'},
+    statusDetails: {}
+  },
+  {
+    lastSeen: '2017-07-25T02:20:35Z',
+    numComments: 0,
+    userCount: 1,
+    culprit: 'size(app/views/groupSimilar/groupingMergedList)',
+    title: "TypeError: Cannot read property 'size' of undefined",
+    id: '275',
+    assignedTo: null,
+    logger: 'javascript',
+    type: 'error',
+    annotations: [],
+    metadata: {type: 'TypeError', value: "Cannot read property 'size' of undefined"},
+    status: 'unresolved',
+    subscriptionDetails: null,
+    isPublic: false,
+    hasSeen: true,
+    shortId: 'INTERNAL-4M',
+    shareId: '312e323735',
+    firstSeen: '2017-07-25T02:20:35Z',
+    count: '1',
+    permalink: 'http://localhost:8000/sentry/internal/issues/275/',
+    level: 'error',
+    isSubscribed: true,
+    isBookmarked: false,
+    project: {name: 'Internal', slug: 'internal'},
+    statusDetails: {}
+  },
+  {
+    lastSeen: '2017-07-24T23:41:44Z',
+    numComments: 0,
+    userCount: 3,
+    culprit: 'length(app/views/groupSimilar/groupSimilarView)',
+    title: "TypeError: Cannot read property 'length' of undefined",
+    id: '271',
+    assignedTo: null,
+    logger: 'javascript',
+    type: 'error',
+    annotations: [],
+    metadata: {
+      type: 'TypeError',
+      value: "Cannot read property 'length' of undefined"
+    },
+    status: 'unresolved',
+    subscriptionDetails: null,
+    isPublic: false,
+    hasSeen: false,
+    shortId: 'INTERNAL-4G',
+    shareId: '312e323731',
+    firstSeen: '2017-07-10T18:32:43Z',
+    count: '90',
+    permalink: 'http://localhost:8000/sentry/internal/issues/271/',
+    level: 'error',
+    isSubscribed: true,
+    isBookmarked: false,
+    project: {name: 'Internal', slug: 'internal'},
+    statusDetails: {}
+  },
+  {
+    lastSeen: '2017-07-25T23:21:19Z',
+    numComments: 0,
+    userCount: 1,
+    culprit: 'stale(app/views/groupDetails)',
+    title: "TypeError: Cannot read property 'stale' of undefined",
+    id: '216',
+    assignedTo: {
+      username: 'billy@sentry.io',
+      isManaged: false,
+      lastActive: '2017-07-26T18:28:19.391Z',
+      identities: [],
+      id: '1',
+      isActive: true,
+      has2fa: false,
+      name: 'billy@sentry.io',
+      avatarUrl: 'https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm',
+      dateJoined: '2017-06-26T21:02:13.264Z',
+      emails: [{is_verified: false, id: '1', email: 'billy@sentry.io'}],
+      avatar: {avatarUuid: null, avatarType: 'letter_avatar'},
+      lastLogin: '2017-07-25T01:00:50.473Z',
+      email: 'billy@sentry.io'
+    },
+    logger: 'javascript',
+    type: 'error',
+    annotations: [],
+    metadata: {type: 'TypeError', value: "Cannot read property 'stale' of undefined"},
+    status: 'unresolved',
+    subscriptionDetails: {reason: 'changed_status'},
+    isPublic: false,
+    hasSeen: true,
+    shortId: 'INTERNAL-2S',
+    shareId: '312e323136',
+    firstSeen: '2017-07-25T02:20:35Z',
+    count: '15',
+    permalink: 'http://localhost:8000/sentry/internal/issues/216/',
+    level: 'error',
+    isSubscribed: true,
+    isBookmarked: false,
+    project: {name: 'Internal', slug: 'internal'},
+    statusDetails: {}
+  }
+];
diff --git a/tests/js/spec/components/__snapshots__/scoreBar.spec.jsx.snap b/tests/js/spec/components/__snapshots__/scoreBar.spec.jsx.snap
new file mode 100644
index 0000000000..2c0f461bc1
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/scoreBar.spec.jsx.snap
@@ -0,0 +1,347 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ScoreBar has custom palette 1`] = `
+<div
+  className="score-bar vertical"
+>
+  <div
+    className="score-bar-bar"
+    style={
+      Object {
+        "backgroundColor": "purple",
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar"
+    style={
+      Object {
+        "backgroundColor": "purple",
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar"
+    style={
+      Object {
+        "backgroundColor": "purple",
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar"
+    style={
+      Object {
+        "backgroundColor": "purple",
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar"
+    style={
+      Object {
+        "backgroundColor": "purple",
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar"
+    style={
+      Object {
+        "backgroundColor": "purple",
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar"
+    style={
+      Object {
+        "backgroundColor": "purple",
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+</div>
+`;
+
+exports[`ScoreBar renders 1`] = `
+<div
+  className="score-bar horizontal"
+>
+  <div
+    className="score-bar-bar orange"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar orange"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar orange"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+</div>
+`;
+
+exports[`ScoreBar renders vertically 1`] = `
+<div
+  className="score-bar vertical"
+>
+  <div
+    className="score-bar-bar red"
+    style={
+      Object {
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar red"
+    style={
+      Object {
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 2,
+        "width": 60,
+      }
+    }
+  />
+</div>
+`;
+
+exports[`ScoreBar renders with < 0 score 1`] = `
+<div
+  className="score-bar horizontal"
+>
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+</div>
+`;
+
+exports[`ScoreBar renders with score = 0 1`] = `
+<div
+  className="score-bar horizontal"
+>
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar empty"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+</div>
+`;
+
+exports[`ScoreBar renders with score > max score 1`] = `
+<div
+  className="score-bar horizontal"
+>
+  <div
+    className="score-bar-bar green"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar green"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar green"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar green"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+  <div
+    className="score-bar-bar green"
+    style={
+      Object {
+        "height": 60,
+        "width": 2,
+      }
+    }
+  />
+</div>
+`;
diff --git a/tests/js/spec/components/__snapshots__/similarScoreCard.spec.jsx.snap b/tests/js/spec/components/__snapshots__/similarScoreCard.spec.jsx.snap
new file mode 100644
index 0000000000..db5d06a0fd
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/similarScoreCard.spec.jsx.snap
@@ -0,0 +1,42 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`SimilarScoreCard renders 1`] = `null`;
+
+exports[`SimilarScoreCard renders with score list 1`] = `
+<div
+  className="similar-score-card"
+>
+  <SpreadLayout
+    className="similar-score-card-row"
+  >
+    <div />
+    <div
+      className="similar-score-quantity low"
+    />
+  </SpreadLayout>
+  <SpreadLayout
+    className="similar-score-card-row"
+  >
+    <div />
+    <div
+      className="similar-score-quantity high"
+    />
+  </SpreadLayout>
+  <SpreadLayout
+    className="similar-score-card-row"
+  >
+    <div />
+    <div
+      className="similar-score-quantity high"
+    />
+  </SpreadLayout>
+  <SpreadLayout
+    className="similar-score-card-row"
+  >
+    <div />
+    <div
+      className="similar-score-quantity med"
+    />
+  </SpreadLayout>
+</div>
+`;
diff --git a/tests/js/spec/components/__snapshots__/toolbar.spec.jsx.snap b/tests/js/spec/components/__snapshots__/toolbar.spec.jsx.snap
new file mode 100644
index 0000000000..847069d627
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/toolbar.spec.jsx.snap
@@ -0,0 +1,9 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Toolbar renders 1`] = `
+<div
+  className="toolbar"
+>
+  <div />
+</div>
+`;
diff --git a/tests/js/spec/components/__snapshots__/toolbarHeader.spec.jsx.snap b/tests/js/spec/components/__snapshots__/toolbarHeader.spec.jsx.snap
new file mode 100644
index 0000000000..ed0233ba43
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/toolbarHeader.spec.jsx.snap
@@ -0,0 +1,9 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ToolbarHeader renders 1`] = `
+<div
+  className="toolbar-header"
+>
+  <div />
+</div>
+`;
diff --git a/tests/js/spec/components/eventsTable/__snapshots__/eventsTable.spec.jsx.snap b/tests/js/spec/components/eventsTable/__snapshots__/eventsTable.spec.jsx.snap
new file mode 100644
index 0000000000..94369e3998
--- /dev/null
+++ b/tests/js/spec/components/eventsTable/__snapshots__/eventsTable.spec.jsx.snap
@@ -0,0 +1,230 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`EventsTable renders 1`] = `
+<table
+  className="table events-table"
+>
+  <thead>
+    <tr>
+      <th>
+        ID
+      </th>
+      <th>
+        User
+      </th>
+    </tr>
+  </thead>
+  <tbody>
+    <EventsTableRow
+      event={
+        Object {
+          "context": Object {
+            "session:duration": 46363,
+          },
+          "contexts": Object {
+            "browser": Object {
+              "name": "Chrome",
+              "type": "browser",
+              "version": "59.0.3071",
+            },
+            "os": Object {
+              "name": "Mac OS X",
+              "type": "os",
+              "version": "10.12.5",
+            },
+          },
+          "dateCreated": "2017-07-26T00:34:20Z",
+          "dateReceived": "2017-07-26T00:34:20Z",
+          "dist": null,
+          "entries": Array [],
+          "errors": Array [],
+          "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+          "fingerprints": Array [
+            "2c4887696f708c476a81ce4e834c4b02",
+            "e05da55328a860b21f62e371f0a7507d",
+          ],
+          "groupID": "268",
+          "id": "904",
+          "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+          "metadata": Object {
+            "type": "TypeError",
+            "value": "Cannot read property 'assignedTo' of undefined",
+          },
+          "packages": Object {},
+          "platform": "javascript",
+          "sdk": Object {
+            "clientIP": "127.0.0.1",
+            "name": "raven-js",
+            "upstream": Object {
+              "isNewer": false,
+              "name": "raven-js",
+              "url": "https://docs.sentry.io/clients/javascript/",
+            },
+            "version": "3.16.1",
+          },
+          "size": 21896,
+          "tags": Array [
+            Object {
+              "key": "browser",
+              "value": "Chrome 59.0.3071",
+            },
+            Object {
+              "key": "browser.name",
+              "value": "Chrome",
+            },
+            Object {
+              "key": "level",
+              "value": "error",
+            },
+            Object {
+              "key": "logger",
+              "value": "javascript",
+            },
+            Object {
+              "key": "os",
+              "value": "Mac OS X 10.12.5",
+            },
+            Object {
+              "key": "os.name",
+              "value": "Mac OS X",
+            },
+            Object {
+              "key": "release",
+              "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+            },
+            Object {
+              "key": "transaction",
+              "value": "app/components/assigneeSelector in assignedTo",
+            },
+            Object {
+              "key": "url",
+              "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+            },
+            Object {
+              "key": "user",
+              "value": "id:1",
+            },
+          ],
+          "type": "error",
+          "user": Object {
+            "email": "billy@sentry.io",
+            "id": "1",
+            "ip_address": "127.0.0.1",
+          },
+        }
+      }
+      groupId="groupId"
+      hasUser={true}
+      orgId="orgId"
+      projectId="projectId"
+      tagList={Array []}
+      truncate={false}
+    />
+    <EventsTableRow
+      event={
+        Object {
+          "context": Object {
+            "session:duration": 46363,
+          },
+          "contexts": Object {
+            "browser": Object {
+              "name": "Chrome",
+              "type": "browser",
+              "version": "59.0.3071",
+            },
+            "os": Object {
+              "name": "Mac OS X",
+              "type": "os",
+              "version": "10.12.5",
+            },
+          },
+          "dateCreated": "2017-07-26T00:34:20Z",
+          "dateReceived": "2017-07-26T00:34:20Z",
+          "dist": null,
+          "entries": Array [],
+          "errors": Array [],
+          "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+          "fingerprints": Array [
+            "2c4887696f708c476a81ce4e834c4b02",
+            "e05da55328a860b21f62e371f0a7507d",
+          ],
+          "groupID": "268",
+          "id": "904",
+          "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+          "metadata": Object {
+            "type": "TypeError",
+            "value": "Cannot read property 'assignedTo' of undefined",
+          },
+          "packages": Object {},
+          "platform": "javascript",
+          "sdk": Object {
+            "clientIP": "127.0.0.1",
+            "name": "raven-js",
+            "upstream": Object {
+              "isNewer": false,
+              "name": "raven-js",
+              "url": "https://docs.sentry.io/clients/javascript/",
+            },
+            "version": "3.16.1",
+          },
+          "size": 21896,
+          "tags": Array [
+            Object {
+              "key": "browser",
+              "value": "Chrome 59.0.3071",
+            },
+            Object {
+              "key": "browser.name",
+              "value": "Chrome",
+            },
+            Object {
+              "key": "level",
+              "value": "error",
+            },
+            Object {
+              "key": "logger",
+              "value": "javascript",
+            },
+            Object {
+              "key": "os",
+              "value": "Mac OS X 10.12.5",
+            },
+            Object {
+              "key": "os.name",
+              "value": "Mac OS X",
+            },
+            Object {
+              "key": "release",
+              "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+            },
+            Object {
+              "key": "transaction",
+              "value": "app/components/assigneeSelector in assignedTo",
+            },
+            Object {
+              "key": "url",
+              "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+            },
+            Object {
+              "key": "user",
+              "value": "id:1",
+            },
+          ],
+          "type": "error",
+          "user": Object {
+            "email": "billy@sentry.io",
+            "id": "1",
+            "ip_address": "127.0.0.1",
+          },
+        }
+      }
+      groupId="groupId"
+      hasUser={true}
+      orgId="orgId"
+      projectId="projectId"
+      tagList={Array []}
+      truncate={false}
+    />
+  </tbody>
+</table>
+`;
diff --git a/tests/js/spec/components/eventsTable/__snapshots__/eventsTableRow.spec.jsx.snap b/tests/js/spec/components/eventsTable/__snapshots__/eventsTableRow.spec.jsx.snap
new file mode 100644
index 0000000000..8643606c63
--- /dev/null
+++ b/tests/js/spec/components/eventsTable/__snapshots__/eventsTableRow.spec.jsx.snap
@@ -0,0 +1,27 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`EventsTableRow renders 1`] = `
+<tr
+  className="events-table-row"
+>
+  <td>
+    <h5
+      className=""
+    >
+      <Link
+        onlyActiveOnIndex={false}
+        style={Object {}}
+        to="/orgId/projectId/issues/groupId/events/904/"
+      >
+        <DateTime
+          date="2017-07-26T00:34:20Z"
+          seconds={true}
+        />
+      </Link>
+      <small>
+        TypeError: Cannot read property 'assignedTo' of undefined
+      </small>
+    </h5>
+  </td>
+</tr>
+`;
diff --git a/tests/js/spec/components/eventsTable/eventsTable.spec.jsx b/tests/js/spec/components/eventsTable/eventsTable.spec.jsx
new file mode 100644
index 0000000000..960e355432
--- /dev/null
+++ b/tests/js/spec/components/eventsTable/eventsTable.spec.jsx
@@ -0,0 +1,26 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import EventsTable from 'app/components/eventsTable/eventsTable';
+
+import events from '../../../mocks/events';
+
+describe('EventsTable', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  it('renders', function() {
+    let wrapper = shallow(
+      <EventsTable
+        tagList={[]}
+        params={{orgId: 'orgId', projectId: 'projectId', groupId: 'groupId'}}
+        events={events}
+      />
+    );
+    expect(wrapper).toMatchSnapshot();
+  });
+});
diff --git a/tests/js/spec/components/eventsTable/eventsTableRow.spec.jsx b/tests/js/spec/components/eventsTable/eventsTableRow.spec.jsx
new file mode 100644
index 0000000000..39343b26bc
--- /dev/null
+++ b/tests/js/spec/components/eventsTable/eventsTableRow.spec.jsx
@@ -0,0 +1,25 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import EventsTableRow from 'app/components/eventsTable/eventsTableRow';
+import events from '../../../mocks/events';
+
+describe('EventsTableRow', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  it('renders', function() {
+    let wrapper = shallow(
+      <EventsTableRow
+        tagList={[]}
+        {...{orgId: 'orgId', projectId: 'projectId', groupId: 'groupId'}}
+        event={events[0]}
+      />
+    );
+    expect(wrapper).toMatchSnapshot();
+  });
+});
diff --git a/tests/js/spec/components/scoreBar.spec.jsx b/tests/js/spec/components/scoreBar.spec.jsx
new file mode 100644
index 0000000000..5233fdab2e
--- /dev/null
+++ b/tests/js/spec/components/scoreBar.spec.jsx
@@ -0,0 +1,51 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import ScoreBar from 'app/components/scoreBar';
+
+describe('ScoreBar', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  it('renders', function() {
+    let wrapper = shallow(<ScoreBar size={60} thickness={2} score={3} />);
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('renders vertically', function() {
+    let wrapper = shallow(<ScoreBar size={60} thickness={2} vertical score={2} />);
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('renders with score = 0', function() {
+    let wrapper = shallow(<ScoreBar size={60} thickness={2} score={0} />);
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('renders with score > max score', function() {
+    let wrapper = shallow(<ScoreBar size={60} thickness={2} score={10} />);
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('renders with < 0 score', function() {
+    let wrapper = shallow(<ScoreBar size={60} thickness={2} score={-2} />);
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('has custom palette', function() {
+    let wrapper = shallow(
+      <ScoreBar
+        vertical
+        size={60}
+        thickness={2}
+        score={7}
+        palette={['white', 'red', 'red', 'pink', 'pink', 'purple', 'purple', 'black']}
+      />
+    );
+    expect(wrapper).toMatchSnapshot();
+  });
+});
diff --git a/tests/js/spec/components/similarScoreCard.spec.jsx b/tests/js/spec/components/similarScoreCard.spec.jsx
new file mode 100644
index 0000000000..02a44b4d9a
--- /dev/null
+++ b/tests/js/spec/components/similarScoreCard.spec.jsx
@@ -0,0 +1,32 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import SimilarScoreCard from 'app/components/similarScoreCard';
+
+describe('SimilarScoreCard', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  it('renders', function() {
+    let wrapper = shallow(<SimilarScoreCard />);
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('renders with score list', function() {
+    let wrapper = shallow(
+      <SimilarScoreCard
+        scoreList={[
+          ['exception,message,character-shingles', 0.2],
+          ['exception,stacktrace,application-chunks', 0.8],
+          ['exception,stacktrace,pairs', 1],
+          ['message,message,character-shingles', 0.5]
+        ]}
+      />
+    );
+    expect(wrapper).toMatchSnapshot();
+  });
+});
diff --git a/tests/js/spec/components/toolbar.spec.jsx b/tests/js/spec/components/toolbar.spec.jsx
new file mode 100644
index 0000000000..40a1156343
--- /dev/null
+++ b/tests/js/spec/components/toolbar.spec.jsx
@@ -0,0 +1,18 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import Toolbar from 'app/components/toolbar';
+
+describe('Toolbar', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  it('renders', function() {
+    let wrapper = shallow(<Toolbar><div /></Toolbar>);
+    expect(wrapper).toMatchSnapshot();
+  });
+});
diff --git a/tests/js/spec/components/toolbarHeader.spec.jsx b/tests/js/spec/components/toolbarHeader.spec.jsx
new file mode 100644
index 0000000000..0601052479
--- /dev/null
+++ b/tests/js/spec/components/toolbarHeader.spec.jsx
@@ -0,0 +1,18 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import ToolbarHeader from 'app/components/toolbarHeader';
+
+describe('ToolbarHeader', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  it('renders', function() {
+    let wrapper = shallow(<ToolbarHeader><div /></ToolbarHeader>);
+    expect(wrapper).toMatchSnapshot();
+  });
+});
diff --git a/tests/js/spec/stores/__snapshots__/groupingStore.spec.jsx.snap b/tests/js/spec/stores/__snapshots__/groupingStore.spec.jsx.snap
new file mode 100644
index 0000000000..8b6a238ee3
--- /dev/null
+++ b/tests/js/spec/stores/__snapshots__/groupingStore.spec.jsx.snap
@@ -0,0 +1,95 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Grouping Store onFetch() fetches list of similar items 1`] = `
+Object {
+  "error": false,
+  "filteredSimilarItems": Array [
+    Object {
+      "aggregate": Object {
+        "exception": 0.0008615,
+      },
+      "isBelowThreshold": true,
+      "issue": Object {
+        "id": "216",
+      },
+      "score": Object {
+        "exception:stacktrace:application-chunks": 0.000235,
+        "exception:stacktrace:pairs": 0.001488,
+      },
+      "scoresByInterface": Object {
+        "exception": Array [
+          Array [
+            "exception:stacktrace:application-chunks",
+            0.000235,
+          ],
+          Array [
+            "exception:stacktrace:pairs",
+            0.001488,
+          ],
+        ],
+      },
+    },
+  ],
+  "loading": false,
+  "mergeState": Array [],
+  "mergedItems": Array [],
+  "mergedLinks": "",
+  "similarItems": Array [
+    Object {
+      "aggregate": Object {
+        "exception": 0.275,
+        "message": 0.775,
+      },
+      "isBelowThreshold": false,
+      "issue": Object {
+        "id": "274",
+      },
+      "score": Object {
+        "exception:stacktrace:application-chunks": 0.175,
+        "exception:stacktrace:pairs": 0.375,
+        "message:message:character-shingles": 0.775,
+      },
+      "scoresByInterface": Object {
+        "exception": Array [
+          Array [
+            "exception:stacktrace:pairs",
+            0.375,
+          ],
+          Array [
+            "exception:stacktrace:application-chunks",
+            0.175,
+          ],
+        ],
+        "message": Array [
+          Array [
+            "message:message:character-shingles",
+            0.775,
+          ],
+        ],
+      },
+    },
+    Object {
+      "aggregate": Object {
+        "exception": 1,
+      },
+      "isBelowThreshold": false,
+      "issue": Object {
+        "id": "275",
+      },
+      "score": Object {
+        "exception:stacktrace:pairs": 1,
+      },
+      "scoresByInterface": Object {
+        "exception": Array [
+          Array [
+            "exception:stacktrace:pairs",
+            1,
+          ],
+        ],
+      },
+    },
+  ],
+  "similarLinks": undefined,
+  "unmergeState": Array [],
+}
+`;
diff --git a/tests/js/spec/stores/groupingStore.spec.jsx b/tests/js/spec/stores/groupingStore.spec.jsx
index 82bb5b5f57..ed6e8d81b4 100644
--- a/tests/js/spec/stores/groupingStore.spec.jsx
+++ b/tests/js/spec/stores/groupingStore.spec.jsx
@@ -154,6 +154,8 @@ describe('Grouping Store', function() {
         ],
         unmergeState: new Map()
       });
+
+      expect(arg).toMatchSnapshot();
     });
 
     it('unsuccessfully fetches list of similar items', function() {
@@ -408,10 +410,12 @@ describe('Grouping Store', function() {
   describe('Hashes list (to be unmerged)', function() {
     let unmergeList;
     let unmergeState;
+    let unmergeCollapseState;
 
     beforeEach(async function() {
       unmergeList = new Set();
       unmergeState = new Map();
+      unmergeCollapseState = new Set();
       await GroupingStore.onFetch([
         {dataKey: 'merged', endpoint: '/issues/groupId/hashes/'}
       ]);
@@ -456,6 +460,7 @@ describe('Grouping Store', function() {
         expect(GroupingStore.unmergeState).toEqual(unmergeState);
 
         expect(trigger).toHaveBeenLastCalledWith({
+          unmergeCollapseState,
           unmergeDisabled: false,
           unmergeList,
           unmergeState
@@ -488,6 +493,7 @@ describe('Grouping Store', function() {
         expect(GroupingStore.unmergeState).toEqual(unmergeState);
 
         expect(trigger).toHaveBeenLastCalledWith({
+          unmergeCollapseState,
           unmergeDisabled: false,
           unmergeList,
           unmergeState
@@ -516,13 +522,14 @@ describe('Grouping Store', function() {
         });
 
         expect(trigger).toHaveBeenCalledWith({
+          unmergeCollapseState,
           unmergeDisabled: true,
           unmergeList,
           unmergeState
         });
       });
 
-      it('keeps rows in "busy" state and unchecks after successfully adding to merge queue', async function() {
+      it('keeps rows in "busy" state and unchecks after successfully adding to unmerge queue', async function() {
         GroupingStore.onToggleUnmerge('1');
         unmergeList.add('1');
         unmergeState.set('1', {checked: true, busy: false});
@@ -532,6 +539,7 @@ describe('Grouping Store', function() {
         });
 
         expect(trigger).toHaveBeenCalledWith({
+          unmergeCollapseState,
           unmergeDisabled: true,
           unmergeList,
           unmergeState
@@ -540,6 +548,7 @@ describe('Grouping Store', function() {
         await promise;
 
         expect(trigger).toHaveBeenLastCalledWith({
+          unmergeCollapseState,
           unmergeDisabled: false,
           unmergeList: new Set(),
           unmergeState
@@ -564,6 +573,7 @@ describe('Grouping Store', function() {
         });
 
         expect(trigger).toHaveBeenCalledWith({
+          unmergeCollapseState,
           unmergeDisabled: true,
           unmergeList,
           unmergeState
@@ -572,6 +582,7 @@ describe('Grouping Store', function() {
         await promise;
 
         expect(trigger).toHaveBeenLastCalledWith({
+          unmergeCollapseState,
           unmergeDisabled: false,
           unmergeList,
           unmergeState
diff --git a/tests/js/spec/views/__snapshots__/groupGroupingView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/groupGroupingView.spec.jsx.snap
deleted file mode 100644
index f0bd1057c6..0000000000
--- a/tests/js/spec/views/__snapshots__/groupGroupingView.spec.jsx.snap
+++ /dev/null
@@ -1,93 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`Issues Grouping View renders initially with loading component 1`] = `
-<div>
-  <div
-    className="alert alert-block alert-warning"
-  >
-    <strong>
-      Warning
-      :
-    </strong>
-     
-    This is an experimental feature. Data may not be immediately available while we process the unmerge.
-  </div>
-  <LoadingIndicator />
-</div>
-`;
-
-exports[`Issues Grouping View renders with mocked data 1`] = `
-<GroupGroupingView
-  location={Object {}}
-  params={
-    Object {
-      "groupId": "groupId",
-      "orgId": "orgId",
-      "projectId": "projectId",
-    }
-  }
->
-  <div>
-    <div
-      className="alert alert-block alert-warning"
-    >
-      <strong>
-        Warning
-        :
-      </strong>
-       
-      This is an experimental feature. Data may not be immediately available while we process the unmerge.
-    </div>
-    <LoadingIndicator>
-      <div
-        className="loading"
-      >
-        <div
-          className="loading-indicator"
-        />
-        <div
-          className="loading-message"
-        />
-      </div>
-    </LoadingIndicator>
-  </div>
-</GroupGroupingView>
-`;
-
-exports[`Issues Grouping View renders with mocked data 2`] = `
-<GroupGroupingView
-  location={Object {}}
-  params={
-    Object {
-      "groupId": "groupId",
-      "orgId": "orgId",
-      "projectId": "projectId",
-    }
-  }
->
-  <div>
-    <div
-      className="alert alert-block alert-warning"
-    >
-      <strong>
-        Warning
-        :
-      </strong>
-       
-      This is an experimental feature. Data may not be immediately available while we process the unmerge.
-    </div>
-    <LoadingIndicator>
-      <div
-        className="loading"
-      >
-        <div
-          className="loading-indicator"
-        />
-        <div
-          className="loading-message"
-        />
-      </div>
-    </LoadingIndicator>
-  </div>
-</GroupGroupingView>
-`;
diff --git a/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap
new file mode 100644
index 0000000000..6736829622
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap
@@ -0,0 +1,2799 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Issues -> Merged View renders initially with loading component 1`] = `
+<div>
+  <div
+    className="alert alert-block alert-warning"
+  >
+    <strong>
+      Warning
+      :
+    </strong>
+     
+    This is an experimental feature. Data may not be immediately available while we process unmerges.
+  </div>
+  <LoadingIndicator />
+</div>
+`;
+
+exports[`Issues -> Merged View renders with mocked data 1`] = `
+<GroupMergedView
+  location={
+    Object {
+      "query": Object {},
+    }
+  }
+  params={
+    Object {
+      "groupId": "groupId",
+      "orgId": "orgId",
+      "projectId": "projectId",
+    }
+  }
+>
+  <div>
+    <div
+      className="alert alert-block alert-warning"
+    >
+      <strong>
+        Warning
+        :
+      </strong>
+       
+      This is an experimental feature. Data may not be immediately available while we process unmerges.
+    </div>
+    <MergedList
+      groupId="groupId"
+      items={
+        Array [
+          Object {
+            "id": "2c4887696f708c476a81ce4e834c4b02",
+            "latestEvent": Object {
+              "context": Object {
+                "session:duration": 46363,
+              },
+              "contexts": Object {
+                "browser": Object {
+                  "name": "Chrome",
+                  "type": "browser",
+                  "version": "59.0.3071",
+                },
+                "os": Object {
+                  "name": "Mac OS X",
+                  "type": "os",
+                  "version": "10.12.5",
+                },
+              },
+              "dateCreated": "2017-07-26T00:34:20Z",
+              "dateReceived": "2017-07-26T00:34:20Z",
+              "dist": null,
+              "entries": Array [],
+              "errors": Array [],
+              "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+              "fingerprints": Array [
+                "2c4887696f708c476a81ce4e834c4b02",
+                "e05da55328a860b21f62e371f0a7507d",
+              ],
+              "groupID": "268",
+              "id": "904",
+              "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'assignedTo' of undefined",
+              },
+              "packages": Object {},
+              "platform": "javascript",
+              "sdk": Object {
+                "clientIP": "127.0.0.1",
+                "name": "raven-js",
+                "upstream": Object {
+                  "isNewer": false,
+                  "name": "raven-js",
+                  "url": "https://docs.sentry.io/clients/javascript/",
+                },
+                "version": "3.16.1",
+              },
+              "size": 21896,
+              "tags": Array [
+                Object {
+                  "key": "browser",
+                  "value": "Chrome 59.0.3071",
+                },
+                Object {
+                  "key": "browser.name",
+                  "value": "Chrome",
+                },
+                Object {
+                  "key": "level",
+                  "value": "error",
+                },
+                Object {
+                  "key": "logger",
+                  "value": "javascript",
+                },
+                Object {
+                  "key": "os",
+                  "value": "Mac OS X 10.12.5",
+                },
+                Object {
+                  "key": "os.name",
+                  "value": "Mac OS X",
+                },
+                Object {
+                  "key": "release",
+                  "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                },
+                Object {
+                  "key": "transaction",
+                  "value": "app/components/assigneeSelector in assignedTo",
+                },
+                Object {
+                  "key": "url",
+                  "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                },
+                Object {
+                  "key": "user",
+                  "value": "id:1",
+                },
+              ],
+              "type": "error",
+              "user": Object {
+                "email": "billy@sentry.io",
+                "id": "1",
+                "ip_address": "127.0.0.1",
+              },
+            },
+            "state": "unlocked",
+          },
+          Object {
+            "id": "e05da55328a860b21f62e371f0a7507d",
+            "latestEvent": Object {
+              "context": Object {
+                "session:duration": 46363,
+              },
+              "contexts": Object {
+                "browser": Object {
+                  "name": "Chrome",
+                  "type": "browser",
+                  "version": "59.0.3071",
+                },
+                "os": Object {
+                  "name": "Mac OS X",
+                  "type": "os",
+                  "version": "10.12.5",
+                },
+              },
+              "dateCreated": "2017-07-26T00:34:20Z",
+              "dateReceived": "2017-07-26T00:34:20Z",
+              "dist": null,
+              "entries": Array [],
+              "errors": Array [],
+              "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+              "fingerprints": Array [
+                "2c4887696f708c476a81ce4e834c4b02",
+                "e05da55328a860b21f62e371f0a7507d",
+              ],
+              "groupID": "268",
+              "id": "904",
+              "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'assignedTo' of undefined",
+              },
+              "packages": Object {},
+              "platform": "javascript",
+              "sdk": Object {
+                "clientIP": "127.0.0.1",
+                "name": "raven-js",
+                "upstream": Object {
+                  "isNewer": false,
+                  "name": "raven-js",
+                  "url": "https://docs.sentry.io/clients/javascript/",
+                },
+                "version": "3.16.1",
+              },
+              "size": 21896,
+              "tags": Array [
+                Object {
+                  "key": "browser",
+                  "value": "Chrome 59.0.3071",
+                },
+                Object {
+                  "key": "browser.name",
+                  "value": "Chrome",
+                },
+                Object {
+                  "key": "level",
+                  "value": "error",
+                },
+                Object {
+                  "key": "logger",
+                  "value": "javascript",
+                },
+                Object {
+                  "key": "os",
+                  "value": "Mac OS X 10.12.5",
+                },
+                Object {
+                  "key": "os.name",
+                  "value": "Mac OS X",
+                },
+                Object {
+                  "key": "release",
+                  "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                },
+                Object {
+                  "key": "transaction",
+                  "value": "app/components/assigneeSelector in assignedTo",
+                },
+                Object {
+                  "key": "url",
+                  "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                },
+                Object {
+                  "key": "user",
+                  "value": "id:1",
+                },
+              ],
+              "type": "error",
+              "user": Object {
+                "email": "billy@sentry.io",
+                "id": "1",
+                "ip_address": "127.0.0.1",
+              },
+            },
+            "state": "unlocked",
+          },
+        ]
+      }
+      onCollapse={[Function]}
+      onExpand={[Function]}
+      onUnmerge={[Function]}
+      orgId="orgId"
+      projectId="projectId"
+    >
+      <div
+        className="merged-list-container"
+      >
+        <h2>
+          <span>
+            Merged fingerprints with latest event
+          </span>
+          <QueryCount
+            count={2}
+            hideIfEmpty={true}
+            inline={true}
+          >
+            <div
+              className="query-count inline"
+            >
+              <span>
+                (
+              </span>
+              <span
+                className="query-count-value"
+              >
+                2
+              </span>
+              <span>
+                )
+              </span>
+            </div>
+          </QueryCount>
+        </h2>
+        <MergedToolbar
+          onCollapse={[Function]}
+          onUnmerge={[Function]}
+        >
+          <Toolbar
+            className="merged-toolbar"
+          >
+            <div
+              className="toolbar merged-toolbar"
+            >
+              <SpreadLayout
+                responsive={true}
+              >
+                <div
+                  className="spread-layout allow-responsive"
+                >
+                  <SpreadLayout>
+                    <div
+                      className="spread-layout"
+                    >
+                      <div
+                        className="merged-toolbar-actions"
+                      >
+                        <LinkWithConfirmation
+                          className="btn btn-sm btn-default"
+                          disabled={true}
+                          message="These events will be unmerged and grouped into a new issue. Are you sure you want to unmerge these events?"
+                          onConfirm={[Function]}
+                          title="Unmerging 0 events"
+                        >
+                          <a
+                            className="btn btn-sm btn-default disabled"
+                            disabled={true}
+                            onClick={[Function]}
+                            title="Unmerging 0 events"
+                          >
+                            Unmerge
+                             (
+                            0
+                            )
+                            <Modal
+                              animation={false}
+                              autoFocus={true}
+                              backdrop={true}
+                              bsClass="modal"
+                              dialogComponentClass={[Function]}
+                              enforceFocus={true}
+                              keyboard={true}
+                              manager={
+                                ModalManager {
+                                  "containers": Array [],
+                                  "data": Array [],
+                                  "handleContainerOverflow": true,
+                                  "hideSiblingNodes": true,
+                                  "modals": Array [],
+                                }
+                              }
+                              onHide={[Function]}
+                              renderBackdrop={[Function]}
+                              restoreFocus={true}
+                              show={false}
+                              title="Please confirm"
+                            >
+                              <Modal
+                                autoFocus={true}
+                                backdrop={true}
+                                backdropClassName="modal-backdrop"
+                                backdropTransitionTimeout={150}
+                                containerClassName="modal-open"
+                                dialogTransitionTimeout={300}
+                                enforceFocus={true}
+                                keyboard={true}
+                                manager={
+                                  ModalManager {
+                                    "containers": Array [],
+                                    "data": Array [],
+                                    "handleContainerOverflow": true,
+                                    "hideSiblingNodes": true,
+                                    "modals": Array [],
+                                  }
+                                }
+                                onEntering={[Function]}
+                                onExited={[Function]}
+                                onHide={[Function]}
+                                renderBackdrop={[Function]}
+                                restoreFocus={true}
+                                show={false}
+                              />
+                            </Modal>
+                          </a>
+                        </LinkWithConfirmation>
+                      </div>
+                    </div>
+                  </SpreadLayout>
+                  <SpreadLayout>
+                    <div
+                      className="spread-layout"
+                    >
+                      <div>
+                        <button
+                          className="btn btn-sm btn-default"
+                          onClick={[Function]}
+                        >
+                          Collapse All
+                        </button>
+                      </div>
+                    </div>
+                  </SpreadLayout>
+                </div>
+              </SpreadLayout>
+            </div>
+          </Toolbar>
+        </MergedToolbar>
+        <div
+          className="merged-list"
+        >
+          <MergedItem
+            disabled={false}
+            event={
+              Object {
+                "context": Object {
+                  "session:duration": 46363,
+                },
+                "contexts": Object {
+                  "browser": Object {
+                    "name": "Chrome",
+                    "type": "browser",
+                    "version": "59.0.3071",
+                  },
+                  "os": Object {
+                    "name": "Mac OS X",
+                    "type": "os",
+                    "version": "10.12.5",
+                  },
+                },
+                "dateCreated": "2017-07-26T00:34:20Z",
+                "dateReceived": "2017-07-26T00:34:20Z",
+                "dist": null,
+                "entries": Array [],
+                "errors": Array [],
+                "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                "fingerprints": Array [
+                  "2c4887696f708c476a81ce4e834c4b02",
+                  "e05da55328a860b21f62e371f0a7507d",
+                ],
+                "groupID": "268",
+                "id": "904",
+                "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                "metadata": Object {
+                  "type": "TypeError",
+                  "value": "Cannot read property 'assignedTo' of undefined",
+                },
+                "packages": Object {},
+                "platform": "javascript",
+                "sdk": Object {
+                  "clientIP": "127.0.0.1",
+                  "name": "raven-js",
+                  "upstream": Object {
+                    "isNewer": false,
+                    "name": "raven-js",
+                    "url": "https://docs.sentry.io/clients/javascript/",
+                  },
+                  "version": "3.16.1",
+                },
+                "size": 21896,
+                "tags": Array [
+                  Object {
+                    "key": "browser",
+                    "value": "Chrome 59.0.3071",
+                  },
+                  Object {
+                    "key": "browser.name",
+                    "value": "Chrome",
+                  },
+                  Object {
+                    "key": "level",
+                    "value": "error",
+                  },
+                  Object {
+                    "key": "logger",
+                    "value": "javascript",
+                  },
+                  Object {
+                    "key": "os",
+                    "value": "Mac OS X 10.12.5",
+                  },
+                  Object {
+                    "key": "os.name",
+                    "value": "Mac OS X",
+                  },
+                  Object {
+                    "key": "release",
+                    "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                  },
+                  Object {
+                    "key": "transaction",
+                    "value": "app/components/assigneeSelector in assignedTo",
+                  },
+                  Object {
+                    "key": "url",
+                    "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                  },
+                  Object {
+                    "key": "user",
+                    "value": "id:1",
+                  },
+                ],
+                "type": "error",
+                "user": Object {
+                  "email": "billy@sentry.io",
+                  "id": "1",
+                  "ip_address": "127.0.0.1",
+                },
+              }
+            }
+            fingerprint="2c4887696f708c476a81ce4e834c4b02"
+            groupId="groupId"
+            itemCount={2}
+            onExpand={[Function]}
+            orgId="orgId"
+            projectId="projectId"
+          >
+            <div
+              className="fingerprint-group expanded"
+            >
+              <SpreadLayout
+                className="merged-controls"
+                responsive={true}
+              >
+                <div
+                  className="spread-layout merged-controls allow-responsive"
+                >
+                  <FlowLayout
+                    onClick={[Function]}
+                    truncate={true}
+                  >
+                    <div
+                      className="flow-layout is-truncated"
+                      onClick={[Function]}
+                    >
+                      <div
+                        className="action-column"
+                      >
+                        <Checkbox
+                          checked={false}
+                          id="2c4887696f708c476a81ce4e834c4b02"
+                          value="2c4887696f708c476a81ce4e834c4b02"
+                        >
+                          <input
+                            checked={false}
+                            className="chk-select"
+                            id="2c4887696f708c476a81ce4e834c4b02"
+                            type="checkbox"
+                            value="2c4887696f708c476a81ce4e834c4b02"
+                          />
+                        </Checkbox>
+                      </div>
+                      <label
+                        className="truncate fingerprint"
+                        htmlFor="2c4887696f708c476a81ce4e834c4b02"
+                        onClick={[Function]}
+                      >
+                        2c4887696f708c476a81ce4e834c4b02
+                      </label>
+                    </div>
+                  </FlowLayout>
+                  <div>
+                    <span />
+                    <span
+                      className="merged-collapse"
+                      onClick={[Function]}
+                    >
+                      <i
+                        className="icon-arrow-up"
+                      />
+                    </span>
+                  </div>
+                </div>
+              </SpreadLayout>
+              <div
+                className="merged-events-list event-list"
+              >
+                <EventsTable
+                  events={
+                    Array [
+                      Object {
+                        "context": Object {
+                          "session:duration": 46363,
+                        },
+                        "contexts": Object {
+                          "browser": Object {
+                            "name": "Chrome",
+                            "type": "browser",
+                            "version": "59.0.3071",
+                          },
+                          "os": Object {
+                            "name": "Mac OS X",
+                            "type": "os",
+                            "version": "10.12.5",
+                          },
+                        },
+                        "dateCreated": "2017-07-26T00:34:20Z",
+                        "dateReceived": "2017-07-26T00:34:20Z",
+                        "dist": null,
+                        "entries": Array [],
+                        "errors": Array [],
+                        "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                        "fingerprints": Array [
+                          "2c4887696f708c476a81ce4e834c4b02",
+                          "e05da55328a860b21f62e371f0a7507d",
+                        ],
+                        "groupID": "268",
+                        "id": "904",
+                        "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                        "metadata": Object {
+                          "type": "TypeError",
+                          "value": "Cannot read property 'assignedTo' of undefined",
+                        },
+                        "packages": Object {},
+                        "platform": "javascript",
+                        "sdk": Object {
+                          "clientIP": "127.0.0.1",
+                          "name": "raven-js",
+                          "upstream": Object {
+                            "isNewer": false,
+                            "name": "raven-js",
+                            "url": "https://docs.sentry.io/clients/javascript/",
+                          },
+                          "version": "3.16.1",
+                        },
+                        "size": 21896,
+                        "tags": Array [
+                          Object {
+                            "key": "browser",
+                            "value": "Chrome 59.0.3071",
+                          },
+                          Object {
+                            "key": "browser.name",
+                            "value": "Chrome",
+                          },
+                          Object {
+                            "key": "level",
+                            "value": "error",
+                          },
+                          Object {
+                            "key": "logger",
+                            "value": "javascript",
+                          },
+                          Object {
+                            "key": "os",
+                            "value": "Mac OS X 10.12.5",
+                          },
+                          Object {
+                            "key": "os.name",
+                            "value": "Mac OS X",
+                          },
+                          Object {
+                            "key": "release",
+                            "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                          },
+                          Object {
+                            "key": "transaction",
+                            "value": "app/components/assigneeSelector in assignedTo",
+                          },
+                          Object {
+                            "key": "url",
+                            "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                          },
+                          Object {
+                            "key": "user",
+                            "value": "id:1",
+                          },
+                        ],
+                        "type": "error",
+                        "user": Object {
+                          "email": "billy@sentry.io",
+                          "id": "1",
+                          "ip_address": "127.0.0.1",
+                        },
+                      },
+                    ]
+                  }
+                  fixedDimensions={true}
+                  params={
+                    Object {
+                      "groupId": "groupId",
+                      "orgId": "orgId",
+                      "projectId": "projectId",
+                    }
+                  }
+                  tagList={Array []}
+                >
+                  <table
+                    className="table events-table"
+                  >
+                    <thead>
+                      <tr>
+                        <th>
+                          ID
+                        </th>
+                        <th>
+                          User
+                        </th>
+                      </tr>
+                    </thead>
+                    <tbody>
+                      <EventsTableRow
+                        event={
+                          Object {
+                            "context": Object {
+                              "session:duration": 46363,
+                            },
+                            "contexts": Object {
+                              "browser": Object {
+                                "name": "Chrome",
+                                "type": "browser",
+                                "version": "59.0.3071",
+                              },
+                              "os": Object {
+                                "name": "Mac OS X",
+                                "type": "os",
+                                "version": "10.12.5",
+                              },
+                            },
+                            "dateCreated": "2017-07-26T00:34:20Z",
+                            "dateReceived": "2017-07-26T00:34:20Z",
+                            "dist": null,
+                            "entries": Array [],
+                            "errors": Array [],
+                            "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                            "fingerprints": Array [
+                              "2c4887696f708c476a81ce4e834c4b02",
+                              "e05da55328a860b21f62e371f0a7507d",
+                            ],
+                            "groupID": "268",
+                            "id": "904",
+                            "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                            "metadata": Object {
+                              "type": "TypeError",
+                              "value": "Cannot read property 'assignedTo' of undefined",
+                            },
+                            "packages": Object {},
+                            "platform": "javascript",
+                            "sdk": Object {
+                              "clientIP": "127.0.0.1",
+                              "name": "raven-js",
+                              "upstream": Object {
+                                "isNewer": false,
+                                "name": "raven-js",
+                                "url": "https://docs.sentry.io/clients/javascript/",
+                              },
+                              "version": "3.16.1",
+                            },
+                            "size": 21896,
+                            "tags": Array [
+                              Object {
+                                "key": "browser",
+                                "value": "Chrome 59.0.3071",
+                              },
+                              Object {
+                                "key": "browser.name",
+                                "value": "Chrome",
+                              },
+                              Object {
+                                "key": "level",
+                                "value": "error",
+                              },
+                              Object {
+                                "key": "logger",
+                                "value": "javascript",
+                              },
+                              Object {
+                                "key": "os",
+                                "value": "Mac OS X 10.12.5",
+                              },
+                              Object {
+                                "key": "os.name",
+                                "value": "Mac OS X",
+                              },
+                              Object {
+                                "key": "release",
+                                "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                              },
+                              Object {
+                                "key": "transaction",
+                                "value": "app/components/assigneeSelector in assignedTo",
+                              },
+                              Object {
+                                "key": "url",
+                                "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                              },
+                              Object {
+                                "key": "user",
+                                "value": "id:1",
+                              },
+                            ],
+                            "type": "error",
+                            "user": Object {
+                              "email": "billy@sentry.io",
+                              "id": "1",
+                              "ip_address": "127.0.0.1",
+                            },
+                          }
+                        }
+                        groupId="groupId"
+                        hasUser={true}
+                        orgId="orgId"
+                        projectId="projectId"
+                        tagList={Array []}
+                        truncate={true}
+                      >
+                        <tr
+                          className="events-table-row"
+                        >
+                          <td>
+                            <h5
+                              className="truncate"
+                            >
+                              <Link
+                                onlyActiveOnIndex={false}
+                                style={Object {}}
+                                to="/orgId/projectId/issues/groupId/events/904/"
+                              >
+                                <a
+                                  onClick={[Function]}
+                                  style={Object {}}
+                                >
+                                  <DateTime
+                                    date="2017-07-26T00:34:20Z"
+                                    seconds={true}
+                                  >
+                                    <time>
+                                      Jul 26, 2017 12:34:20 AM UTC
+                                    </time>
+                                  </DateTime>
+                                </a>
+                              </Link>
+                              <small>
+                                TypeError: Cannot read property 'assignedTo' of undefined
+                              </small>
+                            </h5>
+                          </td>
+                          <td
+                            className="event-user table-user-info"
+                          >
+                            <div>
+                              <Avatar
+                                className="avatar"
+                                gravatar={false}
+                                size={64}
+                                user={
+                                  Object {
+                                    "email": "billy@sentry.io",
+                                    "id": "1",
+                                    "ip_address": "127.0.0.1",
+                                  }
+                                }
+                              >
+                                <span
+                                  className="avatar"
+                                >
+                                  <UserLetterAvatar
+                                    user={
+                                      Object {
+                                        "email": "billy@sentry.io",
+                                        "id": "1",
+                                        "ip_address": "127.0.0.1",
+                                      }
+                                    }
+                                  >
+                                    <LetterAvatar
+                                      displayName="billy@sentry.io"
+                                      identifier="billy@sentry.io"
+                                    >
+                                      <svg
+                                        viewBox="0 0 120 120"
+                                      >
+                                        <rect
+                                          fill="#f868bc"
+                                          height="120"
+                                          rx="15"
+                                          ry="15"
+                                          width="120"
+                                          x="0"
+                                          y="0"
+                                        />
+                                        <text
+                                          fill="#FFFFFF"
+                                          fontSize="65"
+                                          style={
+                                            Object {
+                                              "dominantBaseline": "central",
+                                            }
+                                          }
+                                          textAnchor="middle"
+                                          x="50%"
+                                          y="50%"
+                                        >
+                                          B
+                                        </text>
+                                      </svg>
+                                    </LetterAvatar>
+                                  </UserLetterAvatar>
+                                </span>
+                              </Avatar>
+                              billy@sentry.io
+                            </div>
+                          </td>
+                        </tr>
+                      </EventsTableRow>
+                    </tbody>
+                  </table>
+                </EventsTable>
+              </div>
+            </div>
+          </MergedItem>
+          <MergedItem
+            disabled={false}
+            event={
+              Object {
+                "context": Object {
+                  "session:duration": 46363,
+                },
+                "contexts": Object {
+                  "browser": Object {
+                    "name": "Chrome",
+                    "type": "browser",
+                    "version": "59.0.3071",
+                  },
+                  "os": Object {
+                    "name": "Mac OS X",
+                    "type": "os",
+                    "version": "10.12.5",
+                  },
+                },
+                "dateCreated": "2017-07-26T00:34:20Z",
+                "dateReceived": "2017-07-26T00:34:20Z",
+                "dist": null,
+                "entries": Array [],
+                "errors": Array [],
+                "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                "fingerprints": Array [
+                  "2c4887696f708c476a81ce4e834c4b02",
+                  "e05da55328a860b21f62e371f0a7507d",
+                ],
+                "groupID": "268",
+                "id": "904",
+                "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                "metadata": Object {
+                  "type": "TypeError",
+                  "value": "Cannot read property 'assignedTo' of undefined",
+                },
+                "packages": Object {},
+                "platform": "javascript",
+                "sdk": Object {
+                  "clientIP": "127.0.0.1",
+                  "name": "raven-js",
+                  "upstream": Object {
+                    "isNewer": false,
+                    "name": "raven-js",
+                    "url": "https://docs.sentry.io/clients/javascript/",
+                  },
+                  "version": "3.16.1",
+                },
+                "size": 21896,
+                "tags": Array [
+                  Object {
+                    "key": "browser",
+                    "value": "Chrome 59.0.3071",
+                  },
+                  Object {
+                    "key": "browser.name",
+                    "value": "Chrome",
+                  },
+                  Object {
+                    "key": "level",
+                    "value": "error",
+                  },
+                  Object {
+                    "key": "logger",
+                    "value": "javascript",
+                  },
+                  Object {
+                    "key": "os",
+                    "value": "Mac OS X 10.12.5",
+                  },
+                  Object {
+                    "key": "os.name",
+                    "value": "Mac OS X",
+                  },
+                  Object {
+                    "key": "release",
+                    "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                  },
+                  Object {
+                    "key": "transaction",
+                    "value": "app/components/assigneeSelector in assignedTo",
+                  },
+                  Object {
+                    "key": "url",
+                    "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                  },
+                  Object {
+                    "key": "user",
+                    "value": "id:1",
+                  },
+                ],
+                "type": "error",
+                "user": Object {
+                  "email": "billy@sentry.io",
+                  "id": "1",
+                  "ip_address": "127.0.0.1",
+                },
+              }
+            }
+            fingerprint="e05da55328a860b21f62e371f0a7507d"
+            groupId="groupId"
+            itemCount={2}
+            onExpand={[Function]}
+            orgId="orgId"
+            projectId="projectId"
+          >
+            <div
+              className="fingerprint-group expanded"
+            >
+              <SpreadLayout
+                className="merged-controls"
+                responsive={true}
+              >
+                <div
+                  className="spread-layout merged-controls allow-responsive"
+                >
+                  <FlowLayout
+                    onClick={[Function]}
+                    truncate={true}
+                  >
+                    <div
+                      className="flow-layout is-truncated"
+                      onClick={[Function]}
+                    >
+                      <div
+                        className="action-column"
+                      >
+                        <Checkbox
+                          checked={false}
+                          id="e05da55328a860b21f62e371f0a7507d"
+                          value="e05da55328a860b21f62e371f0a7507d"
+                        >
+                          <input
+                            checked={false}
+                            className="chk-select"
+                            id="e05da55328a860b21f62e371f0a7507d"
+                            type="checkbox"
+                            value="e05da55328a860b21f62e371f0a7507d"
+                          />
+                        </Checkbox>
+                      </div>
+                      <label
+                        className="truncate fingerprint"
+                        htmlFor="e05da55328a860b21f62e371f0a7507d"
+                        onClick={[Function]}
+                      >
+                        e05da55328a860b21f62e371f0a7507d
+                      </label>
+                    </div>
+                  </FlowLayout>
+                  <div>
+                    <span />
+                    <span
+                      className="merged-collapse"
+                      onClick={[Function]}
+                    >
+                      <i
+                        className="icon-arrow-up"
+                      />
+                    </span>
+                  </div>
+                </div>
+              </SpreadLayout>
+              <div
+                className="merged-events-list event-list"
+              >
+                <EventsTable
+                  events={
+                    Array [
+                      Object {
+                        "context": Object {
+                          "session:duration": 46363,
+                        },
+                        "contexts": Object {
+                          "browser": Object {
+                            "name": "Chrome",
+                            "type": "browser",
+                            "version": "59.0.3071",
+                          },
+                          "os": Object {
+                            "name": "Mac OS X",
+                            "type": "os",
+                            "version": "10.12.5",
+                          },
+                        },
+                        "dateCreated": "2017-07-26T00:34:20Z",
+                        "dateReceived": "2017-07-26T00:34:20Z",
+                        "dist": null,
+                        "entries": Array [],
+                        "errors": Array [],
+                        "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                        "fingerprints": Array [
+                          "2c4887696f708c476a81ce4e834c4b02",
+                          "e05da55328a860b21f62e371f0a7507d",
+                        ],
+                        "groupID": "268",
+                        "id": "904",
+                        "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                        "metadata": Object {
+                          "type": "TypeError",
+                          "value": "Cannot read property 'assignedTo' of undefined",
+                        },
+                        "packages": Object {},
+                        "platform": "javascript",
+                        "sdk": Object {
+                          "clientIP": "127.0.0.1",
+                          "name": "raven-js",
+                          "upstream": Object {
+                            "isNewer": false,
+                            "name": "raven-js",
+                            "url": "https://docs.sentry.io/clients/javascript/",
+                          },
+                          "version": "3.16.1",
+                        },
+                        "size": 21896,
+                        "tags": Array [
+                          Object {
+                            "key": "browser",
+                            "value": "Chrome 59.0.3071",
+                          },
+                          Object {
+                            "key": "browser.name",
+                            "value": "Chrome",
+                          },
+                          Object {
+                            "key": "level",
+                            "value": "error",
+                          },
+                          Object {
+                            "key": "logger",
+                            "value": "javascript",
+                          },
+                          Object {
+                            "key": "os",
+                            "value": "Mac OS X 10.12.5",
+                          },
+                          Object {
+                            "key": "os.name",
+                            "value": "Mac OS X",
+                          },
+                          Object {
+                            "key": "release",
+                            "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                          },
+                          Object {
+                            "key": "transaction",
+                            "value": "app/components/assigneeSelector in assignedTo",
+                          },
+                          Object {
+                            "key": "url",
+                            "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                          },
+                          Object {
+                            "key": "user",
+                            "value": "id:1",
+                          },
+                        ],
+                        "type": "error",
+                        "user": Object {
+                          "email": "billy@sentry.io",
+                          "id": "1",
+                          "ip_address": "127.0.0.1",
+                        },
+                      },
+                    ]
+                  }
+                  fixedDimensions={true}
+                  params={
+                    Object {
+                      "groupId": "groupId",
+                      "orgId": "orgId",
+                      "projectId": "projectId",
+                    }
+                  }
+                  tagList={Array []}
+                >
+                  <table
+                    className="table events-table"
+                  >
+                    <thead>
+                      <tr>
+                        <th>
+                          ID
+                        </th>
+                        <th>
+                          User
+                        </th>
+                      </tr>
+                    </thead>
+                    <tbody>
+                      <EventsTableRow
+                        event={
+                          Object {
+                            "context": Object {
+                              "session:duration": 46363,
+                            },
+                            "contexts": Object {
+                              "browser": Object {
+                                "name": "Chrome",
+                                "type": "browser",
+                                "version": "59.0.3071",
+                              },
+                              "os": Object {
+                                "name": "Mac OS X",
+                                "type": "os",
+                                "version": "10.12.5",
+                              },
+                            },
+                            "dateCreated": "2017-07-26T00:34:20Z",
+                            "dateReceived": "2017-07-26T00:34:20Z",
+                            "dist": null,
+                            "entries": Array [],
+                            "errors": Array [],
+                            "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                            "fingerprints": Array [
+                              "2c4887696f708c476a81ce4e834c4b02",
+                              "e05da55328a860b21f62e371f0a7507d",
+                            ],
+                            "groupID": "268",
+                            "id": "904",
+                            "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                            "metadata": Object {
+                              "type": "TypeError",
+                              "value": "Cannot read property 'assignedTo' of undefined",
+                            },
+                            "packages": Object {},
+                            "platform": "javascript",
+                            "sdk": Object {
+                              "clientIP": "127.0.0.1",
+                              "name": "raven-js",
+                              "upstream": Object {
+                                "isNewer": false,
+                                "name": "raven-js",
+                                "url": "https://docs.sentry.io/clients/javascript/",
+                              },
+                              "version": "3.16.1",
+                            },
+                            "size": 21896,
+                            "tags": Array [
+                              Object {
+                                "key": "browser",
+                                "value": "Chrome 59.0.3071",
+                              },
+                              Object {
+                                "key": "browser.name",
+                                "value": "Chrome",
+                              },
+                              Object {
+                                "key": "level",
+                                "value": "error",
+                              },
+                              Object {
+                                "key": "logger",
+                                "value": "javascript",
+                              },
+                              Object {
+                                "key": "os",
+                                "value": "Mac OS X 10.12.5",
+                              },
+                              Object {
+                                "key": "os.name",
+                                "value": "Mac OS X",
+                              },
+                              Object {
+                                "key": "release",
+                                "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                              },
+                              Object {
+                                "key": "transaction",
+                                "value": "app/components/assigneeSelector in assignedTo",
+                              },
+                              Object {
+                                "key": "url",
+                                "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                              },
+                              Object {
+                                "key": "user",
+                                "value": "id:1",
+                              },
+                            ],
+                            "type": "error",
+                            "user": Object {
+                              "email": "billy@sentry.io",
+                              "id": "1",
+                              "ip_address": "127.0.0.1",
+                            },
+                          }
+                        }
+                        groupId="groupId"
+                        hasUser={true}
+                        orgId="orgId"
+                        projectId="projectId"
+                        tagList={Array []}
+                        truncate={true}
+                      >
+                        <tr
+                          className="events-table-row"
+                        >
+                          <td>
+                            <h5
+                              className="truncate"
+                            >
+                              <Link
+                                onlyActiveOnIndex={false}
+                                style={Object {}}
+                                to="/orgId/projectId/issues/groupId/events/904/"
+                              >
+                                <a
+                                  onClick={[Function]}
+                                  style={Object {}}
+                                >
+                                  <DateTime
+                                    date="2017-07-26T00:34:20Z"
+                                    seconds={true}
+                                  >
+                                    <time>
+                                      Jul 26, 2017 12:34:20 AM UTC
+                                    </time>
+                                  </DateTime>
+                                </a>
+                              </Link>
+                              <small>
+                                TypeError: Cannot read property 'assignedTo' of undefined
+                              </small>
+                            </h5>
+                          </td>
+                          <td
+                            className="event-user table-user-info"
+                          >
+                            <div>
+                              <Avatar
+                                className="avatar"
+                                gravatar={false}
+                                size={64}
+                                user={
+                                  Object {
+                                    "email": "billy@sentry.io",
+                                    "id": "1",
+                                    "ip_address": "127.0.0.1",
+                                  }
+                                }
+                              >
+                                <span
+                                  className="avatar"
+                                >
+                                  <UserLetterAvatar
+                                    user={
+                                      Object {
+                                        "email": "billy@sentry.io",
+                                        "id": "1",
+                                        "ip_address": "127.0.0.1",
+                                      }
+                                    }
+                                  >
+                                    <LetterAvatar
+                                      displayName="billy@sentry.io"
+                                      identifier="billy@sentry.io"
+                                    >
+                                      <svg
+                                        viewBox="0 0 120 120"
+                                      >
+                                        <rect
+                                          fill="#f868bc"
+                                          height="120"
+                                          rx="15"
+                                          ry="15"
+                                          width="120"
+                                          x="0"
+                                          y="0"
+                                        />
+                                        <text
+                                          fill="#FFFFFF"
+                                          fontSize="65"
+                                          style={
+                                            Object {
+                                              "dominantBaseline": "central",
+                                            }
+                                          }
+                                          textAnchor="middle"
+                                          x="50%"
+                                          y="50%"
+                                        >
+                                          B
+                                        </text>
+                                      </svg>
+                                    </LetterAvatar>
+                                  </UserLetterAvatar>
+                                </span>
+                              </Avatar>
+                              billy@sentry.io
+                            </div>
+                          </td>
+                        </tr>
+                      </EventsTableRow>
+                    </tbody>
+                  </table>
+                </EventsTable>
+              </div>
+            </div>
+          </MergedItem>
+        </div>
+        <pagination
+          onCursor={[Function]}
+        />
+      </div>
+    </MergedList>
+  </div>
+</GroupMergedView>
+`;
+
+exports[`Issues -> Merged View renders with mocked data 2`] = `
+<GroupMergedView
+  location={
+    Object {
+      "query": Object {},
+    }
+  }
+  params={
+    Object {
+      "groupId": "groupId",
+      "orgId": "orgId",
+      "projectId": "projectId",
+    }
+  }
+>
+  <div>
+    <div
+      className="alert alert-block alert-warning"
+    >
+      <strong>
+        Warning
+        :
+      </strong>
+       
+      This is an experimental feature. Data may not be immediately available while we process unmerges.
+    </div>
+    <MergedList
+      groupId="groupId"
+      items={
+        Array [
+          Object {
+            "id": "2c4887696f708c476a81ce4e834c4b02",
+            "latestEvent": Object {
+              "context": Object {
+                "session:duration": 46363,
+              },
+              "contexts": Object {
+                "browser": Object {
+                  "name": "Chrome",
+                  "type": "browser",
+                  "version": "59.0.3071",
+                },
+                "os": Object {
+                  "name": "Mac OS X",
+                  "type": "os",
+                  "version": "10.12.5",
+                },
+              },
+              "dateCreated": "2017-07-26T00:34:20Z",
+              "dateReceived": "2017-07-26T00:34:20Z",
+              "dist": null,
+              "entries": Array [],
+              "errors": Array [],
+              "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+              "fingerprints": Array [
+                "2c4887696f708c476a81ce4e834c4b02",
+                "e05da55328a860b21f62e371f0a7507d",
+              ],
+              "groupID": "268",
+              "id": "904",
+              "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'assignedTo' of undefined",
+              },
+              "packages": Object {},
+              "platform": "javascript",
+              "sdk": Object {
+                "clientIP": "127.0.0.1",
+                "name": "raven-js",
+                "upstream": Object {
+                  "isNewer": false,
+                  "name": "raven-js",
+                  "url": "https://docs.sentry.io/clients/javascript/",
+                },
+                "version": "3.16.1",
+              },
+              "size": 21896,
+              "tags": Array [
+                Object {
+                  "key": "browser",
+                  "value": "Chrome 59.0.3071",
+                },
+                Object {
+                  "key": "browser.name",
+                  "value": "Chrome",
+                },
+                Object {
+                  "key": "level",
+                  "value": "error",
+                },
+                Object {
+                  "key": "logger",
+                  "value": "javascript",
+                },
+                Object {
+                  "key": "os",
+                  "value": "Mac OS X 10.12.5",
+                },
+                Object {
+                  "key": "os.name",
+                  "value": "Mac OS X",
+                },
+                Object {
+                  "key": "release",
+                  "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                },
+                Object {
+                  "key": "transaction",
+                  "value": "app/components/assigneeSelector in assignedTo",
+                },
+                Object {
+                  "key": "url",
+                  "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                },
+                Object {
+                  "key": "user",
+                  "value": "id:1",
+                },
+              ],
+              "type": "error",
+              "user": Object {
+                "email": "billy@sentry.io",
+                "id": "1",
+                "ip_address": "127.0.0.1",
+              },
+            },
+            "state": "unlocked",
+          },
+          Object {
+            "id": "e05da55328a860b21f62e371f0a7507d",
+            "latestEvent": Object {
+              "context": Object {
+                "session:duration": 46363,
+              },
+              "contexts": Object {
+                "browser": Object {
+                  "name": "Chrome",
+                  "type": "browser",
+                  "version": "59.0.3071",
+                },
+                "os": Object {
+                  "name": "Mac OS X",
+                  "type": "os",
+                  "version": "10.12.5",
+                },
+              },
+              "dateCreated": "2017-07-26T00:34:20Z",
+              "dateReceived": "2017-07-26T00:34:20Z",
+              "dist": null,
+              "entries": Array [],
+              "errors": Array [],
+              "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+              "fingerprints": Array [
+                "2c4887696f708c476a81ce4e834c4b02",
+                "e05da55328a860b21f62e371f0a7507d",
+              ],
+              "groupID": "268",
+              "id": "904",
+              "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'assignedTo' of undefined",
+              },
+              "packages": Object {},
+              "platform": "javascript",
+              "sdk": Object {
+                "clientIP": "127.0.0.1",
+                "name": "raven-js",
+                "upstream": Object {
+                  "isNewer": false,
+                  "name": "raven-js",
+                  "url": "https://docs.sentry.io/clients/javascript/",
+                },
+                "version": "3.16.1",
+              },
+              "size": 21896,
+              "tags": Array [
+                Object {
+                  "key": "browser",
+                  "value": "Chrome 59.0.3071",
+                },
+                Object {
+                  "key": "browser.name",
+                  "value": "Chrome",
+                },
+                Object {
+                  "key": "level",
+                  "value": "error",
+                },
+                Object {
+                  "key": "logger",
+                  "value": "javascript",
+                },
+                Object {
+                  "key": "os",
+                  "value": "Mac OS X 10.12.5",
+                },
+                Object {
+                  "key": "os.name",
+                  "value": "Mac OS X",
+                },
+                Object {
+                  "key": "release",
+                  "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                },
+                Object {
+                  "key": "transaction",
+                  "value": "app/components/assigneeSelector in assignedTo",
+                },
+                Object {
+                  "key": "url",
+                  "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                },
+                Object {
+                  "key": "user",
+                  "value": "id:1",
+                },
+              ],
+              "type": "error",
+              "user": Object {
+                "email": "billy@sentry.io",
+                "id": "1",
+                "ip_address": "127.0.0.1",
+              },
+            },
+            "state": "unlocked",
+          },
+        ]
+      }
+      onCollapse={[Function]}
+      onExpand={[Function]}
+      onUnmerge={[Function]}
+      orgId="orgId"
+      projectId="projectId"
+    >
+      <div
+        className="merged-list-container"
+      >
+        <h2>
+          <span>
+            Merged fingerprints with latest event
+          </span>
+          <QueryCount
+            count={2}
+            hideIfEmpty={true}
+            inline={true}
+          >
+            <div
+              className="query-count inline"
+            >
+              <span>
+                (
+              </span>
+              <span
+                className="query-count-value"
+              >
+                2
+              </span>
+              <span>
+                )
+              </span>
+            </div>
+          </QueryCount>
+        </h2>
+        <MergedToolbar
+          onCollapse={[Function]}
+          onUnmerge={[Function]}
+        >
+          <Toolbar
+            className="merged-toolbar"
+          >
+            <div
+              className="toolbar merged-toolbar"
+            >
+              <SpreadLayout
+                responsive={true}
+              >
+                <div
+                  className="spread-layout allow-responsive"
+                >
+                  <SpreadLayout>
+                    <div
+                      className="spread-layout"
+                    >
+                      <div
+                        className="merged-toolbar-actions"
+                      >
+                        <LinkWithConfirmation
+                          className="btn btn-sm btn-default"
+                          disabled={true}
+                          message="These events will be unmerged and grouped into a new issue. Are you sure you want to unmerge these events?"
+                          onConfirm={[Function]}
+                          title="Unmerging 0 events"
+                        >
+                          <a
+                            className="btn btn-sm btn-default disabled"
+                            disabled={true}
+                            onClick={[Function]}
+                            title="Unmerging 0 events"
+                          >
+                            Unmerge
+                             (
+                            0
+                            )
+                            <Modal
+                              animation={false}
+                              autoFocus={true}
+                              backdrop={true}
+                              bsClass="modal"
+                              dialogComponentClass={[Function]}
+                              enforceFocus={true}
+                              keyboard={true}
+                              manager={
+                                ModalManager {
+                                  "containers": Array [],
+                                  "data": Array [],
+                                  "handleContainerOverflow": true,
+                                  "hideSiblingNodes": true,
+                                  "modals": Array [],
+                                }
+                              }
+                              onHide={[Function]}
+                              renderBackdrop={[Function]}
+                              restoreFocus={true}
+                              show={false}
+                              title="Please confirm"
+                            >
+                              <Modal
+                                autoFocus={true}
+                                backdrop={true}
+                                backdropClassName="modal-backdrop"
+                                backdropTransitionTimeout={150}
+                                containerClassName="modal-open"
+                                dialogTransitionTimeout={300}
+                                enforceFocus={true}
+                                keyboard={true}
+                                manager={
+                                  ModalManager {
+                                    "containers": Array [],
+                                    "data": Array [],
+                                    "handleContainerOverflow": true,
+                                    "hideSiblingNodes": true,
+                                    "modals": Array [],
+                                  }
+                                }
+                                onEntering={[Function]}
+                                onExited={[Function]}
+                                onHide={[Function]}
+                                renderBackdrop={[Function]}
+                                restoreFocus={true}
+                                show={false}
+                              />
+                            </Modal>
+                          </a>
+                        </LinkWithConfirmation>
+                      </div>
+                    </div>
+                  </SpreadLayout>
+                  <SpreadLayout>
+                    <div
+                      className="spread-layout"
+                    >
+                      <div>
+                        <button
+                          className="btn btn-sm btn-default"
+                          onClick={[Function]}
+                        >
+                          Collapse All
+                        </button>
+                      </div>
+                    </div>
+                  </SpreadLayout>
+                </div>
+              </SpreadLayout>
+            </div>
+          </Toolbar>
+        </MergedToolbar>
+        <div
+          className="merged-list"
+        >
+          <MergedItem
+            disabled={false}
+            event={
+              Object {
+                "context": Object {
+                  "session:duration": 46363,
+                },
+                "contexts": Object {
+                  "browser": Object {
+                    "name": "Chrome",
+                    "type": "browser",
+                    "version": "59.0.3071",
+                  },
+                  "os": Object {
+                    "name": "Mac OS X",
+                    "type": "os",
+                    "version": "10.12.5",
+                  },
+                },
+                "dateCreated": "2017-07-26T00:34:20Z",
+                "dateReceived": "2017-07-26T00:34:20Z",
+                "dist": null,
+                "entries": Array [],
+                "errors": Array [],
+                "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                "fingerprints": Array [
+                  "2c4887696f708c476a81ce4e834c4b02",
+                  "e05da55328a860b21f62e371f0a7507d",
+                ],
+                "groupID": "268",
+                "id": "904",
+                "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                "metadata": Object {
+                  "type": "TypeError",
+                  "value": "Cannot read property 'assignedTo' of undefined",
+                },
+                "packages": Object {},
+                "platform": "javascript",
+                "sdk": Object {
+                  "clientIP": "127.0.0.1",
+                  "name": "raven-js",
+                  "upstream": Object {
+                    "isNewer": false,
+                    "name": "raven-js",
+                    "url": "https://docs.sentry.io/clients/javascript/",
+                  },
+                  "version": "3.16.1",
+                },
+                "size": 21896,
+                "tags": Array [
+                  Object {
+                    "key": "browser",
+                    "value": "Chrome 59.0.3071",
+                  },
+                  Object {
+                    "key": "browser.name",
+                    "value": "Chrome",
+                  },
+                  Object {
+                    "key": "level",
+                    "value": "error",
+                  },
+                  Object {
+                    "key": "logger",
+                    "value": "javascript",
+                  },
+                  Object {
+                    "key": "os",
+                    "value": "Mac OS X 10.12.5",
+                  },
+                  Object {
+                    "key": "os.name",
+                    "value": "Mac OS X",
+                  },
+                  Object {
+                    "key": "release",
+                    "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                  },
+                  Object {
+                    "key": "transaction",
+                    "value": "app/components/assigneeSelector in assignedTo",
+                  },
+                  Object {
+                    "key": "url",
+                    "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                  },
+                  Object {
+                    "key": "user",
+                    "value": "id:1",
+                  },
+                ],
+                "type": "error",
+                "user": Object {
+                  "email": "billy@sentry.io",
+                  "id": "1",
+                  "ip_address": "127.0.0.1",
+                },
+              }
+            }
+            fingerprint="2c4887696f708c476a81ce4e834c4b02"
+            groupId="groupId"
+            itemCount={2}
+            onExpand={[Function]}
+            orgId="orgId"
+            projectId="projectId"
+          >
+            <div
+              className="fingerprint-group expanded"
+            >
+              <SpreadLayout
+                className="merged-controls"
+                responsive={true}
+              >
+                <div
+                  className="spread-layout merged-controls allow-responsive"
+                >
+                  <FlowLayout
+                    onClick={[Function]}
+                    truncate={true}
+                  >
+                    <div
+                      className="flow-layout is-truncated"
+                      onClick={[Function]}
+                    >
+                      <div
+                        className="action-column"
+                      >
+                        <Checkbox
+                          checked={false}
+                          id="2c4887696f708c476a81ce4e834c4b02"
+                          value="2c4887696f708c476a81ce4e834c4b02"
+                        >
+                          <input
+                            checked={false}
+                            className="chk-select"
+                            id="2c4887696f708c476a81ce4e834c4b02"
+                            type="checkbox"
+                            value="2c4887696f708c476a81ce4e834c4b02"
+                          />
+                        </Checkbox>
+                      </div>
+                      <label
+                        className="truncate fingerprint"
+                        htmlFor="2c4887696f708c476a81ce4e834c4b02"
+                        onClick={[Function]}
+                      >
+                        2c4887696f708c476a81ce4e834c4b02
+                      </label>
+                    </div>
+                  </FlowLayout>
+                  <div>
+                    <span />
+                    <span
+                      className="merged-collapse"
+                      onClick={[Function]}
+                    >
+                      <i
+                        className="icon-arrow-up"
+                      />
+                    </span>
+                  </div>
+                </div>
+              </SpreadLayout>
+              <div
+                className="merged-events-list event-list"
+              >
+                <EventsTable
+                  events={
+                    Array [
+                      Object {
+                        "context": Object {
+                          "session:duration": 46363,
+                        },
+                        "contexts": Object {
+                          "browser": Object {
+                            "name": "Chrome",
+                            "type": "browser",
+                            "version": "59.0.3071",
+                          },
+                          "os": Object {
+                            "name": "Mac OS X",
+                            "type": "os",
+                            "version": "10.12.5",
+                          },
+                        },
+                        "dateCreated": "2017-07-26T00:34:20Z",
+                        "dateReceived": "2017-07-26T00:34:20Z",
+                        "dist": null,
+                        "entries": Array [],
+                        "errors": Array [],
+                        "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                        "fingerprints": Array [
+                          "2c4887696f708c476a81ce4e834c4b02",
+                          "e05da55328a860b21f62e371f0a7507d",
+                        ],
+                        "groupID": "268",
+                        "id": "904",
+                        "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                        "metadata": Object {
+                          "type": "TypeError",
+                          "value": "Cannot read property 'assignedTo' of undefined",
+                        },
+                        "packages": Object {},
+                        "platform": "javascript",
+                        "sdk": Object {
+                          "clientIP": "127.0.0.1",
+                          "name": "raven-js",
+                          "upstream": Object {
+                            "isNewer": false,
+                            "name": "raven-js",
+                            "url": "https://docs.sentry.io/clients/javascript/",
+                          },
+                          "version": "3.16.1",
+                        },
+                        "size": 21896,
+                        "tags": Array [
+                          Object {
+                            "key": "browser",
+                            "value": "Chrome 59.0.3071",
+                          },
+                          Object {
+                            "key": "browser.name",
+                            "value": "Chrome",
+                          },
+                          Object {
+                            "key": "level",
+                            "value": "error",
+                          },
+                          Object {
+                            "key": "logger",
+                            "value": "javascript",
+                          },
+                          Object {
+                            "key": "os",
+                            "value": "Mac OS X 10.12.5",
+                          },
+                          Object {
+                            "key": "os.name",
+                            "value": "Mac OS X",
+                          },
+                          Object {
+                            "key": "release",
+                            "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                          },
+                          Object {
+                            "key": "transaction",
+                            "value": "app/components/assigneeSelector in assignedTo",
+                          },
+                          Object {
+                            "key": "url",
+                            "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                          },
+                          Object {
+                            "key": "user",
+                            "value": "id:1",
+                          },
+                        ],
+                        "type": "error",
+                        "user": Object {
+                          "email": "billy@sentry.io",
+                          "id": "1",
+                          "ip_address": "127.0.0.1",
+                        },
+                      },
+                    ]
+                  }
+                  fixedDimensions={true}
+                  params={
+                    Object {
+                      "groupId": "groupId",
+                      "orgId": "orgId",
+                      "projectId": "projectId",
+                    }
+                  }
+                  tagList={Array []}
+                >
+                  <table
+                    className="table events-table"
+                  >
+                    <thead>
+                      <tr>
+                        <th>
+                          ID
+                        </th>
+                        <th>
+                          User
+                        </th>
+                      </tr>
+                    </thead>
+                    <tbody>
+                      <EventsTableRow
+                        event={
+                          Object {
+                            "context": Object {
+                              "session:duration": 46363,
+                            },
+                            "contexts": Object {
+                              "browser": Object {
+                                "name": "Chrome",
+                                "type": "browser",
+                                "version": "59.0.3071",
+                              },
+                              "os": Object {
+                                "name": "Mac OS X",
+                                "type": "os",
+                                "version": "10.12.5",
+                              },
+                            },
+                            "dateCreated": "2017-07-26T00:34:20Z",
+                            "dateReceived": "2017-07-26T00:34:20Z",
+                            "dist": null,
+                            "entries": Array [],
+                            "errors": Array [],
+                            "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                            "fingerprints": Array [
+                              "2c4887696f708c476a81ce4e834c4b02",
+                              "e05da55328a860b21f62e371f0a7507d",
+                            ],
+                            "groupID": "268",
+                            "id": "904",
+                            "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                            "metadata": Object {
+                              "type": "TypeError",
+                              "value": "Cannot read property 'assignedTo' of undefined",
+                            },
+                            "packages": Object {},
+                            "platform": "javascript",
+                            "sdk": Object {
+                              "clientIP": "127.0.0.1",
+                              "name": "raven-js",
+                              "upstream": Object {
+                                "isNewer": false,
+                                "name": "raven-js",
+                                "url": "https://docs.sentry.io/clients/javascript/",
+                              },
+                              "version": "3.16.1",
+                            },
+                            "size": 21896,
+                            "tags": Array [
+                              Object {
+                                "key": "browser",
+                                "value": "Chrome 59.0.3071",
+                              },
+                              Object {
+                                "key": "browser.name",
+                                "value": "Chrome",
+                              },
+                              Object {
+                                "key": "level",
+                                "value": "error",
+                              },
+                              Object {
+                                "key": "logger",
+                                "value": "javascript",
+                              },
+                              Object {
+                                "key": "os",
+                                "value": "Mac OS X 10.12.5",
+                              },
+                              Object {
+                                "key": "os.name",
+                                "value": "Mac OS X",
+                              },
+                              Object {
+                                "key": "release",
+                                "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                              },
+                              Object {
+                                "key": "transaction",
+                                "value": "app/components/assigneeSelector in assignedTo",
+                              },
+                              Object {
+                                "key": "url",
+                                "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                              },
+                              Object {
+                                "key": "user",
+                                "value": "id:1",
+                              },
+                            ],
+                            "type": "error",
+                            "user": Object {
+                              "email": "billy@sentry.io",
+                              "id": "1",
+                              "ip_address": "127.0.0.1",
+                            },
+                          }
+                        }
+                        groupId="groupId"
+                        hasUser={true}
+                        orgId="orgId"
+                        projectId="projectId"
+                        tagList={Array []}
+                        truncate={true}
+                      >
+                        <tr
+                          className="events-table-row"
+                        >
+                          <td>
+                            <h5
+                              className="truncate"
+                            >
+                              <Link
+                                onlyActiveOnIndex={false}
+                                style={Object {}}
+                                to="/orgId/projectId/issues/groupId/events/904/"
+                              >
+                                <a
+                                  onClick={[Function]}
+                                  style={Object {}}
+                                >
+                                  <DateTime
+                                    date="2017-07-26T00:34:20Z"
+                                    seconds={true}
+                                  >
+                                    <time>
+                                      Jul 26, 2017 12:34:20 AM UTC
+                                    </time>
+                                  </DateTime>
+                                </a>
+                              </Link>
+                              <small>
+                                TypeError: Cannot read property 'assignedTo' of undefined
+                              </small>
+                            </h5>
+                          </td>
+                          <td
+                            className="event-user table-user-info"
+                          >
+                            <div>
+                              <Avatar
+                                className="avatar"
+                                gravatar={false}
+                                size={64}
+                                user={
+                                  Object {
+                                    "email": "billy@sentry.io",
+                                    "id": "1",
+                                    "ip_address": "127.0.0.1",
+                                  }
+                                }
+                              >
+                                <span
+                                  className="avatar"
+                                >
+                                  <UserLetterAvatar
+                                    user={
+                                      Object {
+                                        "email": "billy@sentry.io",
+                                        "id": "1",
+                                        "ip_address": "127.0.0.1",
+                                      }
+                                    }
+                                  >
+                                    <LetterAvatar
+                                      displayName="billy@sentry.io"
+                                      identifier="billy@sentry.io"
+                                    >
+                                      <svg
+                                        viewBox="0 0 120 120"
+                                      >
+                                        <rect
+                                          fill="#f868bc"
+                                          height="120"
+                                          rx="15"
+                                          ry="15"
+                                          width="120"
+                                          x="0"
+                                          y="0"
+                                        />
+                                        <text
+                                          fill="#FFFFFF"
+                                          fontSize="65"
+                                          style={
+                                            Object {
+                                              "dominantBaseline": "central",
+                                            }
+                                          }
+                                          textAnchor="middle"
+                                          x="50%"
+                                          y="50%"
+                                        >
+                                          B
+                                        </text>
+                                      </svg>
+                                    </LetterAvatar>
+                                  </UserLetterAvatar>
+                                </span>
+                              </Avatar>
+                              billy@sentry.io
+                            </div>
+                          </td>
+                        </tr>
+                      </EventsTableRow>
+                    </tbody>
+                  </table>
+                </EventsTable>
+              </div>
+            </div>
+          </MergedItem>
+          <MergedItem
+            disabled={false}
+            event={
+              Object {
+                "context": Object {
+                  "session:duration": 46363,
+                },
+                "contexts": Object {
+                  "browser": Object {
+                    "name": "Chrome",
+                    "type": "browser",
+                    "version": "59.0.3071",
+                  },
+                  "os": Object {
+                    "name": "Mac OS X",
+                    "type": "os",
+                    "version": "10.12.5",
+                  },
+                },
+                "dateCreated": "2017-07-26T00:34:20Z",
+                "dateReceived": "2017-07-26T00:34:20Z",
+                "dist": null,
+                "entries": Array [],
+                "errors": Array [],
+                "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                "fingerprints": Array [
+                  "2c4887696f708c476a81ce4e834c4b02",
+                  "e05da55328a860b21f62e371f0a7507d",
+                ],
+                "groupID": "268",
+                "id": "904",
+                "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                "metadata": Object {
+                  "type": "TypeError",
+                  "value": "Cannot read property 'assignedTo' of undefined",
+                },
+                "packages": Object {},
+                "platform": "javascript",
+                "sdk": Object {
+                  "clientIP": "127.0.0.1",
+                  "name": "raven-js",
+                  "upstream": Object {
+                    "isNewer": false,
+                    "name": "raven-js",
+                    "url": "https://docs.sentry.io/clients/javascript/",
+                  },
+                  "version": "3.16.1",
+                },
+                "size": 21896,
+                "tags": Array [
+                  Object {
+                    "key": "browser",
+                    "value": "Chrome 59.0.3071",
+                  },
+                  Object {
+                    "key": "browser.name",
+                    "value": "Chrome",
+                  },
+                  Object {
+                    "key": "level",
+                    "value": "error",
+                  },
+                  Object {
+                    "key": "logger",
+                    "value": "javascript",
+                  },
+                  Object {
+                    "key": "os",
+                    "value": "Mac OS X 10.12.5",
+                  },
+                  Object {
+                    "key": "os.name",
+                    "value": "Mac OS X",
+                  },
+                  Object {
+                    "key": "release",
+                    "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                  },
+                  Object {
+                    "key": "transaction",
+                    "value": "app/components/assigneeSelector in assignedTo",
+                  },
+                  Object {
+                    "key": "url",
+                    "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                  },
+                  Object {
+                    "key": "user",
+                    "value": "id:1",
+                  },
+                ],
+                "type": "error",
+                "user": Object {
+                  "email": "billy@sentry.io",
+                  "id": "1",
+                  "ip_address": "127.0.0.1",
+                },
+              }
+            }
+            fingerprint="e05da55328a860b21f62e371f0a7507d"
+            groupId="groupId"
+            itemCount={2}
+            onExpand={[Function]}
+            orgId="orgId"
+            projectId="projectId"
+          >
+            <div
+              className="fingerprint-group expanded"
+            >
+              <SpreadLayout
+                className="merged-controls"
+                responsive={true}
+              >
+                <div
+                  className="spread-layout merged-controls allow-responsive"
+                >
+                  <FlowLayout
+                    onClick={[Function]}
+                    truncate={true}
+                  >
+                    <div
+                      className="flow-layout is-truncated"
+                      onClick={[Function]}
+                    >
+                      <div
+                        className="action-column"
+                      >
+                        <Checkbox
+                          checked={false}
+                          id="e05da55328a860b21f62e371f0a7507d"
+                          value="e05da55328a860b21f62e371f0a7507d"
+                        >
+                          <input
+                            checked={false}
+                            className="chk-select"
+                            id="e05da55328a860b21f62e371f0a7507d"
+                            type="checkbox"
+                            value="e05da55328a860b21f62e371f0a7507d"
+                          />
+                        </Checkbox>
+                      </div>
+                      <label
+                        className="truncate fingerprint"
+                        htmlFor="e05da55328a860b21f62e371f0a7507d"
+                        onClick={[Function]}
+                      >
+                        e05da55328a860b21f62e371f0a7507d
+                      </label>
+                    </div>
+                  </FlowLayout>
+                  <div>
+                    <span />
+                    <span
+                      className="merged-collapse"
+                      onClick={[Function]}
+                    >
+                      <i
+                        className="icon-arrow-up"
+                      />
+                    </span>
+                  </div>
+                </div>
+              </SpreadLayout>
+              <div
+                className="merged-events-list event-list"
+              >
+                <EventsTable
+                  events={
+                    Array [
+                      Object {
+                        "context": Object {
+                          "session:duration": 46363,
+                        },
+                        "contexts": Object {
+                          "browser": Object {
+                            "name": "Chrome",
+                            "type": "browser",
+                            "version": "59.0.3071",
+                          },
+                          "os": Object {
+                            "name": "Mac OS X",
+                            "type": "os",
+                            "version": "10.12.5",
+                          },
+                        },
+                        "dateCreated": "2017-07-26T00:34:20Z",
+                        "dateReceived": "2017-07-26T00:34:20Z",
+                        "dist": null,
+                        "entries": Array [],
+                        "errors": Array [],
+                        "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                        "fingerprints": Array [
+                          "2c4887696f708c476a81ce4e834c4b02",
+                          "e05da55328a860b21f62e371f0a7507d",
+                        ],
+                        "groupID": "268",
+                        "id": "904",
+                        "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                        "metadata": Object {
+                          "type": "TypeError",
+                          "value": "Cannot read property 'assignedTo' of undefined",
+                        },
+                        "packages": Object {},
+                        "platform": "javascript",
+                        "sdk": Object {
+                          "clientIP": "127.0.0.1",
+                          "name": "raven-js",
+                          "upstream": Object {
+                            "isNewer": false,
+                            "name": "raven-js",
+                            "url": "https://docs.sentry.io/clients/javascript/",
+                          },
+                          "version": "3.16.1",
+                        },
+                        "size": 21896,
+                        "tags": Array [
+                          Object {
+                            "key": "browser",
+                            "value": "Chrome 59.0.3071",
+                          },
+                          Object {
+                            "key": "browser.name",
+                            "value": "Chrome",
+                          },
+                          Object {
+                            "key": "level",
+                            "value": "error",
+                          },
+                          Object {
+                            "key": "logger",
+                            "value": "javascript",
+                          },
+                          Object {
+                            "key": "os",
+                            "value": "Mac OS X 10.12.5",
+                          },
+                          Object {
+                            "key": "os.name",
+                            "value": "Mac OS X",
+                          },
+                          Object {
+                            "key": "release",
+                            "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                          },
+                          Object {
+                            "key": "transaction",
+                            "value": "app/components/assigneeSelector in assignedTo",
+                          },
+                          Object {
+                            "key": "url",
+                            "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                          },
+                          Object {
+                            "key": "user",
+                            "value": "id:1",
+                          },
+                        ],
+                        "type": "error",
+                        "user": Object {
+                          "email": "billy@sentry.io",
+                          "id": "1",
+                          "ip_address": "127.0.0.1",
+                        },
+                      },
+                    ]
+                  }
+                  fixedDimensions={true}
+                  params={
+                    Object {
+                      "groupId": "groupId",
+                      "orgId": "orgId",
+                      "projectId": "projectId",
+                    }
+                  }
+                  tagList={Array []}
+                >
+                  <table
+                    className="table events-table"
+                  >
+                    <thead>
+                      <tr>
+                        <th>
+                          ID
+                        </th>
+                        <th>
+                          User
+                        </th>
+                      </tr>
+                    </thead>
+                    <tbody>
+                      <EventsTableRow
+                        event={
+                          Object {
+                            "context": Object {
+                              "session:duration": 46363,
+                            },
+                            "contexts": Object {
+                              "browser": Object {
+                                "name": "Chrome",
+                                "type": "browser",
+                                "version": "59.0.3071",
+                              },
+                              "os": Object {
+                                "name": "Mac OS X",
+                                "type": "os",
+                                "version": "10.12.5",
+                              },
+                            },
+                            "dateCreated": "2017-07-26T00:34:20Z",
+                            "dateReceived": "2017-07-26T00:34:20Z",
+                            "dist": null,
+                            "entries": Array [],
+                            "errors": Array [],
+                            "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                            "fingerprints": Array [
+                              "2c4887696f708c476a81ce4e834c4b02",
+                              "e05da55328a860b21f62e371f0a7507d",
+                            ],
+                            "groupID": "268",
+                            "id": "904",
+                            "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                            "metadata": Object {
+                              "type": "TypeError",
+                              "value": "Cannot read property 'assignedTo' of undefined",
+                            },
+                            "packages": Object {},
+                            "platform": "javascript",
+                            "sdk": Object {
+                              "clientIP": "127.0.0.1",
+                              "name": "raven-js",
+                              "upstream": Object {
+                                "isNewer": false,
+                                "name": "raven-js",
+                                "url": "https://docs.sentry.io/clients/javascript/",
+                              },
+                              "version": "3.16.1",
+                            },
+                            "size": 21896,
+                            "tags": Array [
+                              Object {
+                                "key": "browser",
+                                "value": "Chrome 59.0.3071",
+                              },
+                              Object {
+                                "key": "browser.name",
+                                "value": "Chrome",
+                              },
+                              Object {
+                                "key": "level",
+                                "value": "error",
+                              },
+                              Object {
+                                "key": "logger",
+                                "value": "javascript",
+                              },
+                              Object {
+                                "key": "os",
+                                "value": "Mac OS X 10.12.5",
+                              },
+                              Object {
+                                "key": "os.name",
+                                "value": "Mac OS X",
+                              },
+                              Object {
+                                "key": "release",
+                                "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                              },
+                              Object {
+                                "key": "transaction",
+                                "value": "app/components/assigneeSelector in assignedTo",
+                              },
+                              Object {
+                                "key": "url",
+                                "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                              },
+                              Object {
+                                "key": "user",
+                                "value": "id:1",
+                              },
+                            ],
+                            "type": "error",
+                            "user": Object {
+                              "email": "billy@sentry.io",
+                              "id": "1",
+                              "ip_address": "127.0.0.1",
+                            },
+                          }
+                        }
+                        groupId="groupId"
+                        hasUser={true}
+                        orgId="orgId"
+                        projectId="projectId"
+                        tagList={Array []}
+                        truncate={true}
+                      >
+                        <tr
+                          className="events-table-row"
+                        >
+                          <td>
+                            <h5
+                              className="truncate"
+                            >
+                              <Link
+                                onlyActiveOnIndex={false}
+                                style={Object {}}
+                                to="/orgId/projectId/issues/groupId/events/904/"
+                              >
+                                <a
+                                  onClick={[Function]}
+                                  style={Object {}}
+                                >
+                                  <DateTime
+                                    date="2017-07-26T00:34:20Z"
+                                    seconds={true}
+                                  >
+                                    <time>
+                                      Jul 26, 2017 12:34:20 AM UTC
+                                    </time>
+                                  </DateTime>
+                                </a>
+                              </Link>
+                              <small>
+                                TypeError: Cannot read property 'assignedTo' of undefined
+                              </small>
+                            </h5>
+                          </td>
+                          <td
+                            className="event-user table-user-info"
+                          >
+                            <div>
+                              <Avatar
+                                className="avatar"
+                                gravatar={false}
+                                size={64}
+                                user={
+                                  Object {
+                                    "email": "billy@sentry.io",
+                                    "id": "1",
+                                    "ip_address": "127.0.0.1",
+                                  }
+                                }
+                              >
+                                <span
+                                  className="avatar"
+                                >
+                                  <UserLetterAvatar
+                                    user={
+                                      Object {
+                                        "email": "billy@sentry.io",
+                                        "id": "1",
+                                        "ip_address": "127.0.0.1",
+                                      }
+                                    }
+                                  >
+                                    <LetterAvatar
+                                      displayName="billy@sentry.io"
+                                      identifier="billy@sentry.io"
+                                    >
+                                      <svg
+                                        viewBox="0 0 120 120"
+                                      >
+                                        <rect
+                                          fill="#f868bc"
+                                          height="120"
+                                          rx="15"
+                                          ry="15"
+                                          width="120"
+                                          x="0"
+                                          y="0"
+                                        />
+                                        <text
+                                          fill="#FFFFFF"
+                                          fontSize="65"
+                                          style={
+                                            Object {
+                                              "dominantBaseline": "central",
+                                            }
+                                          }
+                                          textAnchor="middle"
+                                          x="50%"
+                                          y="50%"
+                                        >
+                                          B
+                                        </text>
+                                      </svg>
+                                    </LetterAvatar>
+                                  </UserLetterAvatar>
+                                </span>
+                              </Avatar>
+                              billy@sentry.io
+                            </div>
+                          </td>
+                        </tr>
+                      </EventsTableRow>
+                    </tbody>
+                  </table>
+                </EventsTable>
+              </div>
+            </div>
+          </MergedItem>
+        </div>
+        <pagination
+          onCursor={[Function]}
+        />
+      </div>
+    </MergedList>
+  </div>
+</GroupMergedView>
+`;
diff --git a/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap
new file mode 100644
index 0000000000..674e727e5c
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap
@@ -0,0 +1,951 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Issues Similar View renders initially with loading component 1`] = `
+<div>
+  <div
+    className="alert alert-block alert-warning"
+  >
+    <strong>
+      Warning
+      :
+    </strong>
+     
+    This is an experimental feature. Data may not be immediately available while we process merges.
+  </div>
+  <LoadingIndicator />
+</div>
+`;
+
+exports[`Issues Similar View renders with mocked data 1`] = `
+<GroupGroupingView
+  location={Object {}}
+  params={
+    Object {
+      "groupId": "groupId",
+      "orgId": "orgId",
+      "projectId": "projectId",
+    }
+  }
+>
+  <div>
+    <div
+      className="alert alert-block alert-warning"
+    >
+      <strong>
+        Warning
+        :
+      </strong>
+       
+      This is an experimental feature. Data may not be immediately available while we process merges.
+    </div>
+    <SimilarList
+      filteredItems={
+        Array [
+          Object {
+            "aggregate": Object {
+              "exception": 0.375,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": null,
+              "count": "2",
+              "culprit": "Constructor.onSimilarUpdate(app/views/groupSimilar/groupingMergedList)",
+              "firstSeen": "2017-07-25T02:21:52Z",
+              "hasSeen": false,
+              "id": "274",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-25T02:22:19Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "ReferenceError",
+                "value": "unmergedList is not defined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/274/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323734",
+              "shortId": "INTERNAL-4K",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": null,
+              "title": "ReferenceError: unmergedList is not defined",
+              "type": "error",
+              "userCount": 1,
+            },
+            "score": Object {
+              "exception:stacktrace:pairs": 0.375,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.375,
+                ],
+              ],
+            },
+          },
+          Object {
+            "aggregate": Object {
+              "exception": 0.375,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": null,
+              "count": "1",
+              "culprit": "size(app/views/groupSimilar/groupingMergedList)",
+              "firstSeen": "2017-07-25T02:20:35Z",
+              "hasSeen": true,
+              "id": "275",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-25T02:20:35Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'size' of undefined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/275/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323735",
+              "shortId": "INTERNAL-4M",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": null,
+              "title": "TypeError: Cannot read property 'size' of undefined",
+              "type": "error",
+              "userCount": 1,
+            },
+            "score": Object {
+              "exception:stacktrace:pairs": 0.375,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.375,
+                ],
+              ],
+            },
+          },
+          Object {
+            "aggregate": Object {
+              "exception": 0.01264,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": null,
+              "count": "90",
+              "culprit": "length(app/views/groupSimilar/groupSimilarView)",
+              "firstSeen": "2017-07-10T18:32:43Z",
+              "hasSeen": false,
+              "id": "271",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-24T23:41:44Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'length' of undefined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/271/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323731",
+              "shortId": "INTERNAL-4G",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": null,
+              "title": "TypeError: Cannot read property 'length' of undefined",
+              "type": "error",
+              "userCount": 3,
+            },
+            "score": Object {
+              "exception:stacktrace:pairs": 0.01264,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.01264,
+                ],
+              ],
+            },
+          },
+          Object {
+            "aggregate": Object {
+              "exception": 0.0008615,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": Object {
+                "avatar": Object {
+                  "avatarType": "letter_avatar",
+                  "avatarUuid": null,
+                },
+                "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
+                "dateJoined": "2017-06-26T21:02:13.264Z",
+                "email": "billy@sentry.io",
+                "emails": Array [
+                  Object {
+                    "email": "billy@sentry.io",
+                    "id": "1",
+                    "is_verified": false,
+                  },
+                ],
+                "has2fa": false,
+                "id": "1",
+                "identities": Array [],
+                "isActive": true,
+                "isManaged": false,
+                "lastActive": "2017-07-26T18:28:19.391Z",
+                "lastLogin": "2017-07-25T01:00:50.473Z",
+                "name": "billy@sentry.io",
+                "username": "billy@sentry.io",
+              },
+              "count": "15",
+              "culprit": "stale(app/views/groupDetails)",
+              "firstSeen": "2017-07-25T02:20:35Z",
+              "hasSeen": true,
+              "id": "216",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-25T23:21:19Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'stale' of undefined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/216/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323136",
+              "shortId": "INTERNAL-2S",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": Object {
+                "reason": "changed_status",
+              },
+              "title": "TypeError: Cannot read property 'stale' of undefined",
+              "type": "error",
+              "userCount": 1,
+            },
+            "score": Object {
+              "exception:stacktrace:application-chunks": 0.000235,
+              "exception:stacktrace:pairs": 0.001488,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:application-chunks",
+                  0.000235,
+                ],
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.001488,
+                ],
+              ],
+            },
+          },
+        ]
+      }
+      groupId="groupId"
+      items={Array []}
+      onMerge={[Function]}
+      orgId="orgId"
+      projectId="projectId"
+    >
+      <div
+        className="similar-list-container"
+      >
+        <h2>
+          <span>
+            Similar Issues
+          </span>
+          <QueryCount
+            count={4}
+            hideIfEmpty={true}
+            inline={true}
+          >
+            <div
+              className="query-count inline"
+            >
+              <span>
+                (
+              </span>
+              <span
+                className="query-count-value"
+              >
+                4
+              </span>
+              <span>
+                )
+              </span>
+            </div>
+          </QueryCount>
+        </h2>
+        <SimilarToolbar
+          onMerge={[Function]}
+        >
+          <Toolbar
+            className="similar-toolbar"
+          >
+            <div
+              className="toolbar similar-toolbar"
+            >
+              <SpreadLayout
+                responsive={true}
+              >
+                <div
+                  className="spread-layout allow-responsive"
+                >
+                  <FlowLayout
+                    style={
+                      Object {
+                        "flex": 1,
+                      }
+                    }
+                    truncate={true}
+                  >
+                    <div
+                      className="flow-layout is-truncated"
+                      style={
+                        Object {
+                          "flex": 1,
+                        }
+                      }
+                    >
+                      <FlowLayout
+                        truncate={true}
+                      >
+                        <div
+                          className="flow-layout is-truncated"
+                        >
+                          <div
+                            className="similar-toolbar-actions"
+                          >
+                            <LinkWithConfirmation
+                              className="btn btn-sm btn-default"
+                              disabled={true}
+                              message="Are you sure you want to merge these issues?"
+                              onConfirm={[Function]}
+                              title="Merging 0 issues"
+                            >
+                              <a
+                                className="btn btn-sm btn-default disabled"
+                                disabled={true}
+                                onClick={[Function]}
+                                title="Merging 0 issues"
+                              >
+                                Merge
+                                 (
+                                0
+                                )
+                                <Modal
+                                  animation={false}
+                                  autoFocus={true}
+                                  backdrop={true}
+                                  bsClass="modal"
+                                  dialogComponentClass={[Function]}
+                                  enforceFocus={true}
+                                  keyboard={true}
+                                  manager={
+                                    ModalManager {
+                                      "containers": Array [],
+                                      "data": Array [],
+                                      "handleContainerOverflow": true,
+                                      "hideSiblingNodes": true,
+                                      "modals": Array [],
+                                    }
+                                  }
+                                  onHide={[Function]}
+                                  renderBackdrop={[Function]}
+                                  restoreFocus={true}
+                                  show={false}
+                                  title="Please confirm"
+                                >
+                                  <Modal
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    backdropClassName="modal-backdrop"
+                                    backdropTransitionTimeout={150}
+                                    containerClassName="modal-open"
+                                    dialogTransitionTimeout={300}
+                                    enforceFocus={true}
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "modals": Array [],
+                                      }
+                                    }
+                                    onEntering={[Function]}
+                                    onExited={[Function]}
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  />
+                                </Modal>
+                              </a>
+                            </LinkWithConfirmation>
+                          </div>
+                        </div>
+                      </FlowLayout>
+                    </div>
+                  </FlowLayout>
+                  <div
+                    className="similar-score-columns"
+                  >
+                    <ToolbarHeader
+                      className="similar-score-column event-count-header"
+                    >
+                      <div
+                        className="toolbar-header similar-score-column event-count-header"
+                      >
+                        Events
+                      </div>
+                    </ToolbarHeader>
+                    <ToolbarHeader
+                      className="similar-score-column event-similar-header"
+                    >
+                      <div
+                        className="toolbar-header similar-score-column event-similar-header"
+                      >
+                        Exception
+                      </div>
+                    </ToolbarHeader>
+                    <ToolbarHeader
+                      className="similar-score-column event-similar-header"
+                    >
+                      <div
+                        className="toolbar-header similar-score-column event-similar-header"
+                      >
+                        Message
+                      </div>
+                    </ToolbarHeader>
+                  </div>
+                </div>
+              </SpreadLayout>
+            </div>
+          </Toolbar>
+        </SimilarToolbar>
+        <div
+          className="similar-list"
+        >
+          <div
+            className="similar-items-footer"
+          >
+            <button
+              className="btn btn-default btn-xl"
+              onClick={[Function]}
+            >
+              Show 
+              4
+               issues below threshold
+            </button>
+          </div>
+        </div>
+        <pagination
+          onCursor={[Function]}
+        />
+      </div>
+    </SimilarList>
+  </div>
+</GroupGroupingView>
+`;
+
+exports[`Issues Similar View renders with mocked data 2`] = `
+<GroupGroupingView
+  location={Object {}}
+  params={
+    Object {
+      "groupId": "groupId",
+      "orgId": "orgId",
+      "projectId": "projectId",
+    }
+  }
+>
+  <div>
+    <div
+      className="alert alert-block alert-warning"
+    >
+      <strong>
+        Warning
+        :
+      </strong>
+       
+      This is an experimental feature. Data may not be immediately available while we process merges.
+    </div>
+    <SimilarList
+      filteredItems={
+        Array [
+          Object {
+            "aggregate": Object {
+              "exception": 0.375,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": null,
+              "count": "2",
+              "culprit": "Constructor.onSimilarUpdate(app/views/groupSimilar/groupingMergedList)",
+              "firstSeen": "2017-07-25T02:21:52Z",
+              "hasSeen": false,
+              "id": "274",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-25T02:22:19Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "ReferenceError",
+                "value": "unmergedList is not defined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/274/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323734",
+              "shortId": "INTERNAL-4K",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": null,
+              "title": "ReferenceError: unmergedList is not defined",
+              "type": "error",
+              "userCount": 1,
+            },
+            "score": Object {
+              "exception:stacktrace:pairs": 0.375,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.375,
+                ],
+              ],
+            },
+          },
+          Object {
+            "aggregate": Object {
+              "exception": 0.375,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": null,
+              "count": "1",
+              "culprit": "size(app/views/groupSimilar/groupingMergedList)",
+              "firstSeen": "2017-07-25T02:20:35Z",
+              "hasSeen": true,
+              "id": "275",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-25T02:20:35Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'size' of undefined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/275/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323735",
+              "shortId": "INTERNAL-4M",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": null,
+              "title": "TypeError: Cannot read property 'size' of undefined",
+              "type": "error",
+              "userCount": 1,
+            },
+            "score": Object {
+              "exception:stacktrace:pairs": 0.375,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.375,
+                ],
+              ],
+            },
+          },
+          Object {
+            "aggregate": Object {
+              "exception": 0.01264,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": null,
+              "count": "90",
+              "culprit": "length(app/views/groupSimilar/groupSimilarView)",
+              "firstSeen": "2017-07-10T18:32:43Z",
+              "hasSeen": false,
+              "id": "271",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-24T23:41:44Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'length' of undefined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/271/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323731",
+              "shortId": "INTERNAL-4G",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": null,
+              "title": "TypeError: Cannot read property 'length' of undefined",
+              "type": "error",
+              "userCount": 3,
+            },
+            "score": Object {
+              "exception:stacktrace:pairs": 0.01264,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.01264,
+                ],
+              ],
+            },
+          },
+          Object {
+            "aggregate": Object {
+              "exception": 0.0008615,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": Object {
+                "avatar": Object {
+                  "avatarType": "letter_avatar",
+                  "avatarUuid": null,
+                },
+                "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
+                "dateJoined": "2017-06-26T21:02:13.264Z",
+                "email": "billy@sentry.io",
+                "emails": Array [
+                  Object {
+                    "email": "billy@sentry.io",
+                    "id": "1",
+                    "is_verified": false,
+                  },
+                ],
+                "has2fa": false,
+                "id": "1",
+                "identities": Array [],
+                "isActive": true,
+                "isManaged": false,
+                "lastActive": "2017-07-26T18:28:19.391Z",
+                "lastLogin": "2017-07-25T01:00:50.473Z",
+                "name": "billy@sentry.io",
+                "username": "billy@sentry.io",
+              },
+              "count": "15",
+              "culprit": "stale(app/views/groupDetails)",
+              "firstSeen": "2017-07-25T02:20:35Z",
+              "hasSeen": true,
+              "id": "216",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-25T23:21:19Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'stale' of undefined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/216/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323136",
+              "shortId": "INTERNAL-2S",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": Object {
+                "reason": "changed_status",
+              },
+              "title": "TypeError: Cannot read property 'stale' of undefined",
+              "type": "error",
+              "userCount": 1,
+            },
+            "score": Object {
+              "exception:stacktrace:application-chunks": 0.000235,
+              "exception:stacktrace:pairs": 0.001488,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:application-chunks",
+                  0.000235,
+                ],
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.001488,
+                ],
+              ],
+            },
+          },
+        ]
+      }
+      groupId="groupId"
+      items={Array []}
+      onMerge={[Function]}
+      orgId="orgId"
+      projectId="projectId"
+    >
+      <div
+        className="similar-list-container"
+      >
+        <h2>
+          <span>
+            Similar Issues
+          </span>
+          <QueryCount
+            count={4}
+            hideIfEmpty={true}
+            inline={true}
+          >
+            <div
+              className="query-count inline"
+            >
+              <span>
+                (
+              </span>
+              <span
+                className="query-count-value"
+              >
+                4
+              </span>
+              <span>
+                )
+              </span>
+            </div>
+          </QueryCount>
+        </h2>
+        <SimilarToolbar
+          onMerge={[Function]}
+        >
+          <Toolbar
+            className="similar-toolbar"
+          >
+            <div
+              className="toolbar similar-toolbar"
+            >
+              <SpreadLayout
+                responsive={true}
+              >
+                <div
+                  className="spread-layout allow-responsive"
+                >
+                  <FlowLayout
+                    style={
+                      Object {
+                        "flex": 1,
+                      }
+                    }
+                    truncate={true}
+                  >
+                    <div
+                      className="flow-layout is-truncated"
+                      style={
+                        Object {
+                          "flex": 1,
+                        }
+                      }
+                    >
+                      <FlowLayout
+                        truncate={true}
+                      >
+                        <div
+                          className="flow-layout is-truncated"
+                        >
+                          <div
+                            className="similar-toolbar-actions"
+                          >
+                            <LinkWithConfirmation
+                              className="btn btn-sm btn-default"
+                              disabled={true}
+                              message="Are you sure you want to merge these issues?"
+                              onConfirm={[Function]}
+                              title="Merging 0 issues"
+                            >
+                              <a
+                                className="btn btn-sm btn-default disabled"
+                                disabled={true}
+                                onClick={[Function]}
+                                title="Merging 0 issues"
+                              >
+                                Merge
+                                 (
+                                0
+                                )
+                                <Modal
+                                  animation={false}
+                                  autoFocus={true}
+                                  backdrop={true}
+                                  bsClass="modal"
+                                  dialogComponentClass={[Function]}
+                                  enforceFocus={true}
+                                  keyboard={true}
+                                  manager={
+                                    ModalManager {
+                                      "containers": Array [],
+                                      "data": Array [],
+                                      "handleContainerOverflow": true,
+                                      "hideSiblingNodes": true,
+                                      "modals": Array [],
+                                    }
+                                  }
+                                  onHide={[Function]}
+                                  renderBackdrop={[Function]}
+                                  restoreFocus={true}
+                                  show={false}
+                                  title="Please confirm"
+                                >
+                                  <Modal
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    backdropClassName="modal-backdrop"
+                                    backdropTransitionTimeout={150}
+                                    containerClassName="modal-open"
+                                    dialogTransitionTimeout={300}
+                                    enforceFocus={true}
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "modals": Array [],
+                                      }
+                                    }
+                                    onEntering={[Function]}
+                                    onExited={[Function]}
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  />
+                                </Modal>
+                              </a>
+                            </LinkWithConfirmation>
+                          </div>
+                        </div>
+                      </FlowLayout>
+                    </div>
+                  </FlowLayout>
+                  <div
+                    className="similar-score-columns"
+                  >
+                    <ToolbarHeader
+                      className="similar-score-column event-count-header"
+                    >
+                      <div
+                        className="toolbar-header similar-score-column event-count-header"
+                      >
+                        Events
+                      </div>
+                    </ToolbarHeader>
+                    <ToolbarHeader
+                      className="similar-score-column event-similar-header"
+                    >
+                      <div
+                        className="toolbar-header similar-score-column event-similar-header"
+                      >
+                        Exception
+                      </div>
+                    </ToolbarHeader>
+                    <ToolbarHeader
+                      className="similar-score-column event-similar-header"
+                    >
+                      <div
+                        className="toolbar-header similar-score-column event-similar-header"
+                      >
+                        Message
+                      </div>
+                    </ToolbarHeader>
+                  </div>
+                </div>
+              </SpreadLayout>
+            </div>
+          </Toolbar>
+        </SimilarToolbar>
+        <div
+          className="similar-list"
+        >
+          <div
+            className="similar-items-footer"
+          >
+            <button
+              className="btn btn-default btn-xl"
+              onClick={[Function]}
+            >
+              Show 
+              4
+               issues below threshold
+            </button>
+          </div>
+        </div>
+        <pagination
+          onCursor={[Function]}
+        />
+      </div>
+    </SimilarList>
+  </div>
+</GroupGroupingView>
+`;
diff --git a/tests/js/spec/views/groupGroupingView.spec.jsx b/tests/js/spec/views/groupGroupingView.spec.jsx
deleted file mode 100644
index 99849e1c3d..0000000000
--- a/tests/js/spec/views/groupGroupingView.spec.jsx
+++ /dev/null
@@ -1,320 +0,0 @@
-/* eslint-env jest */
-import React from 'react';
-import {mount, shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
-
-import GroupGroupingView from 'app/views/groupGrouping/groupGroupingView';
-import {Client} from 'app/api';
-
-jest.mock('app/api');
-jest.mock('app/mixins/projectState', () => {
-  return {
-    getFeatures: () => new Set(['callsigns']),
-    getProjectFeatures: () => new Set(['similarity-view'])
-  };
-});
-
-const mockData = {
-  similar: [
-    [
-      {
-        lastSeen: '2017-07-25T02:22:19Z',
-        numComments: 0,
-        userCount: 1,
-        culprit: 'Constructor.onGroupingUpdate(app/views/groupGrouping/groupingMergedList)',
-        title: 'ReferenceError: unmergedList is not defined',
-        id: '274',
-        assignedTo: null,
-        logger: 'javascript',
-        type: 'error',
-        annotations: [],
-        metadata: {type: 'ReferenceError', value: 'unmergedList is not defined'},
-        status: 'unresolved',
-        subscriptionDetails: null,
-        isPublic: false,
-        hasSeen: false,
-        shortId: 'INTERNAL-4K',
-        shareId: '312e323734',
-        firstSeen: '2017-07-25T02:21:52Z',
-        count: '2',
-        permalink: 'http://localhost:8000/sentry/internal/issues/274/',
-        level: 'error',
-        isSubscribed: true,
-        isBookmarked: false,
-        project: {name: 'Internal', slug: 'internal'},
-        statusDetails: {}
-      },
-      {'exception:stacktrace:pairs': 0.375}
-    ],
-    [
-      {
-        lastSeen: '2017-07-25T02:20:35Z',
-        numComments: 0,
-        userCount: 1,
-        culprit: 'size(app/views/groupGrouping/groupingMergedList)',
-        title: "TypeError: Cannot read property 'size' of undefined",
-        id: '275',
-        assignedTo: null,
-        logger: 'javascript',
-        type: 'error',
-        annotations: [],
-        metadata: {type: 'TypeError', value: "Cannot read property 'size' of undefined"},
-        status: 'unresolved',
-        subscriptionDetails: null,
-        isPublic: false,
-        hasSeen: true,
-        shortId: 'INTERNAL-4M',
-        shareId: '312e323735',
-        firstSeen: '2017-07-25T02:20:35Z',
-        count: '1',
-        permalink: 'http://localhost:8000/sentry/internal/issues/275/',
-        level: 'error',
-        isSubscribed: true,
-        isBookmarked: false,
-        project: {name: 'Internal', slug: 'internal'},
-        statusDetails: {}
-      },
-      {'exception:stacktrace:pairs': 0.375}
-    ],
-    [
-      {
-        lastSeen: '2017-07-24T23:41:44Z',
-        numComments: 0,
-        userCount: 3,
-        culprit: 'length(app/views/groupGrouping/groupGroupingView)',
-        title: "TypeError: Cannot read property 'length' of undefined",
-        id: '271',
-        assignedTo: null,
-        logger: 'javascript',
-        type: 'error',
-        annotations: [],
-        metadata: {
-          type: 'TypeError',
-          value: "Cannot read property 'length' of undefined"
-        },
-        status: 'unresolved',
-        subscriptionDetails: null,
-        isPublic: false,
-        hasSeen: false,
-        shortId: 'INTERNAL-4G',
-        shareId: '312e323731',
-        firstSeen: '2017-07-10T18:32:43Z',
-        count: '90',
-        permalink: 'http://localhost:8000/sentry/internal/issues/271/',
-        level: 'error',
-        isSubscribed: true,
-        isBookmarked: false,
-        project: {name: 'Internal', slug: 'internal'},
-        statusDetails: {}
-      },
-      {'exception:stacktrace:pairs': 0.01264}
-    ],
-    [
-      {
-        lastSeen: '2017-07-25T23:21:19Z',
-        numComments: 0,
-        userCount: 1,
-        culprit: 'stale(app/views/groupDetails)',
-        title: "TypeError: Cannot read property 'stale' of undefined",
-        id: '216',
-        assignedTo: {
-          username: 'billy@sentry.io',
-          isManaged: false,
-          lastActive: '2017-07-26T18:28:19.391Z',
-          identities: [],
-          id: '1',
-          isActive: true,
-          has2fa: false,
-          name: 'billy@sentry.io',
-          avatarUrl: 'https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm',
-          dateJoined: '2017-06-26T21:02:13.264Z',
-          emails: [{is_verified: false, id: '1', email: 'billy@sentry.io'}],
-          avatar: {avatarUuid: null, avatarType: 'letter_avatar'},
-          lastLogin: '2017-07-25T01:00:50.473Z',
-          email: 'billy@sentry.io'
-        },
-        logger: 'javascript',
-        type: 'error',
-        annotations: [],
-        metadata: {type: 'TypeError', value: "Cannot read property 'stale' of undefined"},
-        status: 'unresolved',
-        subscriptionDetails: {reason: 'changed_status'},
-        isPublic: false,
-        hasSeen: true,
-        shortId: 'INTERNAL-2S',
-        shareId: '312e323136',
-        firstSeen: '2017-07-25T02:20:35Z',
-        count: '15',
-        permalink: 'http://localhost:8000/sentry/internal/issues/216/',
-        level: 'error',
-        isSubscribed: true,
-        isBookmarked: false,
-        project: {name: 'Internal', slug: 'internal'},
-        statusDetails: {}
-      },
-      {
-        'exception:stacktrace:application-chunks': 0.000235,
-        'exception:stacktrace:pairs': 0.001488
-      }
-    ]
-  ],
-  merged: [
-    {
-      latestEvent: {
-        eventID: '807f0de4d8c246098f21f8e0f1684f3d',
-        packages: {},
-        dist: null,
-        tags: [
-          {value: 'Chrome 59.0.3071', key: 'browser'},
-          {value: 'Chrome', key: 'browser.name'},
-          {value: 'error', key: 'level'},
-          {value: 'javascript', key: 'logger'},
-          {value: 'Mac OS X 10.12.5', key: 'os'},
-          {value: 'Mac OS X', key: 'os.name'},
-          {value: 'd5241c9d9d2bcda918c7af72f07cea1e39a096ac', key: 'release'},
-          {
-            value: 'app/components/assigneeSelector in assignedTo',
-            key: 'transaction'
-          },
-          {
-            value: 'http://localhost:8000/sentry/internal/issues/227/grouping/',
-            key: 'url'
-          },
-          {value: 'id:1', key: 'user'}
-        ],
-        contexts: {
-          os: {version: '10.12.5', type: 'os', name: 'Mac OS X'},
-          browser: {version: '59.0.3071', type: 'browser', name: 'Chrome'}
-        },
-        dateReceived: '2017-07-26T00:34:20Z',
-        dateCreated: '2017-07-26T00:34:20Z',
-        fingerprints: [
-          '2c4887696f708c476a81ce4e834c4b02',
-          'e05da55328a860b21f62e371f0a7507d'
-        ],
-        metadata: {
-          type: 'TypeError',
-          value: "Cannot read property 'assignedTo' of undefined"
-        },
-        groupID: '268',
-        platform: 'javascript',
-        errors: [],
-        user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
-        context: {'session:duration': 46363},
-        entries: [],
-        message: "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
-        sdk: {
-          clientIP: '127.0.0.1',
-          version: '3.16.1',
-          name: 'raven-js',
-          upstream: {
-            url: 'https://docs.sentry.io/clients/javascript/',
-            isNewer: false,
-            name: 'raven-js'
-          }
-        },
-        type: 'error',
-        id: '904',
-        size: 21896
-      },
-      state: 'unlocked',
-      id: '2c4887696f708c476a81ce4e834c4b02'
-    },
-    {
-      latestEvent: {
-        eventID: '807f0de4d8c246098f21f8e0f1684f3d',
-        packages: {},
-        dist: null,
-        tags: [
-          {value: 'Chrome 59.0.3071', key: 'browser'},
-          {value: 'Chrome', key: 'browser.name'},
-          {value: 'error', key: 'level'},
-          {value: 'javascript', key: 'logger'},
-          {value: 'Mac OS X 10.12.5', key: 'os'},
-          {value: 'Mac OS X', key: 'os.name'},
-          {value: 'd5241c9d9d2bcda918c7af72f07cea1e39a096ac', key: 'release'},
-          {
-            value: 'app/components/assigneeSelector in assignedTo',
-            key: 'transaction'
-          },
-          {
-            value: 'http://localhost:8000/sentry/internal/issues/227/grouping/',
-            key: 'url'
-          },
-          {value: 'id:1', key: 'user'}
-        ],
-        contexts: {
-          os: {version: '10.12.5', type: 'os', name: 'Mac OS X'},
-          browser: {version: '59.0.3071', type: 'browser', name: 'Chrome'}
-        },
-        dateReceived: '2017-07-26T00:34:20Z',
-        dateCreated: '2017-07-26T00:34:20Z',
-        fingerprints: [
-          '2c4887696f708c476a81ce4e834c4b02',
-          'e05da55328a860b21f62e371f0a7507d'
-        ],
-        metadata: {
-          type: 'TypeError',
-          value: "Cannot read property 'assignedTo' of undefined"
-        },
-        groupID: '268',
-        platform: 'javascript',
-        errors: [],
-        user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
-        context: {'session:duration': 46363},
-        entries: [],
-        message: "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
-        sdk: {
-          clientIP: '127.0.0.1',
-          version: '3.16.1',
-          name: 'raven-js',
-          upstream: {
-            url: 'https://docs.sentry.io/clients/javascript/',
-            isNewer: false,
-            name: 'raven-js'
-          }
-        },
-        type: 'error',
-        id: '904',
-        size: 21896
-      },
-      state: 'unlocked',
-      id: 'e05da55328a860b21f62e371f0a7507d'
-    }
-  ]
-};
-
-describe('Issues Grouping View', function() {
-  beforeAll(function() {
-    Client.addMockResponse({
-      url: '/issues/groupId/hashes/?limit=50',
-      body: mockData.merged
-    });
-    Client.addMockResponse({
-      url: '/issues/groupId/similar/?limit=50',
-      body: mockData.similar
-    });
-  });
-
-  it('renders initially with loading component', function() {
-    let component = shallow(
-      <GroupGroupingView params={{groupId: 'groupId'}} location={{}} />
-    );
-
-    expect(toJson(component)).toMatchSnapshot();
-  });
-
-  it('renders with mocked data', function(done) {
-    let wrapper = mount(
-      <GroupGroupingView
-        params={{orgId: 'orgId', projectId: 'projectId', groupId: 'groupId'}}
-        location={{}}
-      />
-    );
-
-    wrapper.instance().componentDidUpdate = jest.fn(() => {
-      expect(toJson(wrapper)).toMatchSnapshot();
-      done();
-    });
-  });
-});
diff --git a/tests/js/spec/views/groupMergedView.spec.jsx b/tests/js/spec/views/groupMergedView.spec.jsx
new file mode 100644
index 0000000000..619363ac7c
--- /dev/null
+++ b/tests/js/spec/views/groupMergedView.spec.jsx
@@ -0,0 +1,78 @@
+/* eslint-env jest */
+import React, {PropTypes} from 'react';
+import {mount, shallow} from 'enzyme';
+import toJson from 'enzyme-to-json';
+
+import GroupMergedView from 'app/views/groupMerged/groupMergedView';
+import {Client} from 'app/api';
+import events from '../../mocks/events';
+
+jest.mock('app/api');
+jest.mock('app/mixins/projectState', () => {
+  return {
+    getFeatures: () => new Set(['callsigns'])
+  };
+});
+
+const mockData = {
+  merged: [
+    {
+      latestEvent: events[0],
+      state: 'unlocked',
+      id: '2c4887696f708c476a81ce4e834c4b02'
+    },
+    {
+      latestEvent: events[1],
+      state: 'unlocked',
+      id: 'e05da55328a860b21f62e371f0a7507d'
+    }
+  ]
+};
+
+describe('Issues -> Merged View', function() {
+  let context = {
+    group: {
+      id: 'id',
+      tags: []
+    }
+  };
+  beforeAll(function() {
+    Client.addMockResponse({
+      url: '/issues/groupId/hashes/?limit=50&query=',
+      body: mockData.merged
+    });
+  });
+
+  it('renders initially with loading component', function() {
+    let component = shallow(
+      <GroupMergedView
+        params={{orgId: 'orgId', projectId: 'projectId', groupId: 'groupId'}}
+        location={{query: {}}}
+      />
+    );
+
+    expect(toJson(component)).toMatchSnapshot();
+  });
+
+  it('renders with mocked data', function(done) {
+    let wrapper = mount(
+      <GroupMergedView
+        params={{orgId: 'orgId', projectId: 'projectId', groupId: 'groupId'}}
+        location={{query: {}}}
+      />,
+      {
+        context,
+        childContextTypes: {
+          group: PropTypes.object
+        }
+      }
+    );
+
+    wrapper.instance().componentDidUpdate = jest.fn(() => {
+      if (!wrapper.state('loading')) {
+        expect(toJson(wrapper)).toMatchSnapshot();
+        done();
+      }
+    });
+  });
+});
diff --git a/tests/js/spec/views/groupSimilarView.spec.jsx b/tests/js/spec/views/groupSimilarView.spec.jsx
new file mode 100644
index 0000000000..88e111e806
--- /dev/null
+++ b/tests/js/spec/views/groupSimilarView.spec.jsx
@@ -0,0 +1,63 @@
+/* eslint-env jest */
+import React from 'react';
+import {mount, shallow} from 'enzyme';
+import toJson from 'enzyme-to-json';
+
+import GroupSimilarView from 'app/views/groupSimilar/groupSimilarView';
+import {Client} from 'app/api';
+import issues from '../../mocks/issues';
+
+jest.mock('app/api');
+jest.mock('app/mixins/projectState', () => {
+  return {
+    getFeatures: () => new Set(['callsigns']),
+    getProjectFeatures: () => new Set(['similarity-view'])
+  };
+});
+
+const scores = [
+  {'exception:stacktrace:pairs': 0.375},
+  {'exception:stacktrace:pairs': 0.375},
+  {'exception:stacktrace:pairs': 0.01264},
+  {
+    'exception:stacktrace:application-chunks': 0.000235,
+    'exception:stacktrace:pairs': 0.001488
+  }
+];
+
+const mockData = {
+  similar: issues.map((issue, i) => [issue, scores[i]])
+};
+
+describe('Issues Similar View', function() {
+  beforeAll(function() {
+    Client.addMockResponse({
+      url: '/issues/groupId/similar/?limit=50',
+      body: mockData.similar
+    });
+  });
+
+  it('renders initially with loading component', function() {
+    let component = shallow(
+      <GroupSimilarView params={{groupId: 'groupId'}} location={{}} />
+    );
+
+    expect(toJson(component)).toMatchSnapshot();
+  });
+
+  it('renders with mocked data', function(done) {
+    let wrapper = mount(
+      <GroupSimilarView
+        params={{orgId: 'orgId', projectId: 'projectId', groupId: 'groupId'}}
+        location={{}}
+      />
+    );
+
+    wrapper.instance().componentDidUpdate = jest.fn(() => {
+      if (!wrapper.state('loading')) {
+        expect(toJson(wrapper)).toMatchSnapshot();
+        done();
+      }
+    });
+  });
+});
diff --git a/yarn.lock b/yarn.lock
index 56575d9d5a..142b7604bf 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -61,6 +61,23 @@
     react-addons-create-fragment "^15.5.3"
     util-deprecate "^1.0.2"
 
+"@storybook/addon-knobs@^3.2.0":
+  version "3.2.8"
+  resolved "https://registry.yarnpkg.com/@storybook/addon-knobs/-/addon-knobs-3.2.8.tgz#eb4821409e62f2f886d7ae9333bcc95e4b0714eb"
+  dependencies:
+    "@storybook/addons" "^3.2.6"
+    babel-runtime "^6.23.0"
+    deep-equal "^1.0.1"
+    global "^4.3.2"
+    insert-css "^1.0.0"
+    lodash.debounce "^4.0.8"
+    moment "^2.18.1"
+    prop-types "^15.5.10"
+    react-color "^2.11.4"
+    react-datetime "^2.8.10"
+    react-textarea-autosize "^4.3.0"
+    util-deprecate "^1.0.2"
+
 "@storybook/addon-links@^3.2.6":
   version "3.2.6"
   resolved "https://registry.yarnpkg.com/@storybook/addon-links/-/addon-links-3.2.6.tgz#93029ecee8a1a1939f01381c06ed19327acd746b"
@@ -186,6 +203,10 @@
     react-treebeard "^2.0.3"
     redux "^3.6.0"
 
+"@types/react@>=15":
+  version "16.0.5"
+  resolved "https://registry.yarnpkg.com/@types/react/-/react-16.0.5.tgz#d713cf67cc211dea20463d2a0b66005c22070c4b"
+
 Base64@~0.2.0:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/Base64/-/Base64-0.2.1.tgz#ba3a4230708e186705065e66babdd4c35cf60028"
@@ -2214,6 +2235,14 @@ create-hmac@^1.1.0, create-hmac@^1.1.2, create-hmac@^1.1.4:
     safe-buffer "^5.0.1"
     sha.js "^2.4.8"
 
+create-react-class@^15.5.2, create-react-class@^15.5.x:
+  version "15.6.0"
+  resolved "https://registry.yarnpkg.com/create-react-class/-/create-react-class-15.6.0.tgz#ab448497c26566e1e29413e883207d57cfe7bed4"
+  dependencies:
+    fbjs "^0.8.9"
+    loose-envify "^1.3.1"
+    object-assign "^4.1.1"
+
 cross-spawn@^5.0.1:
   version "5.1.0"
   resolved "https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-5.1.0.tgz#e8bd0efee58fcff6f8f94510a0a554bbfa235449"
@@ -3706,6 +3735,10 @@ inquirer@^0.12.0:
     strip-ansi "^3.0.0"
     through "^2.3.6"
 
+insert-css@^1.0.0:
+  version "1.1.0"
+  resolved "https://registry.yarnpkg.com/insert-css/-/insert-css-1.1.0.tgz#4a3f7a3e783877381bb8471a6452d1d27315db9e"
+
 interpret@^1.0.0:
   version "1.0.3"
   resolved "https://registry.yarnpkg.com/interpret/-/interpret-1.0.3.tgz#cbc35c62eeee73f19ab7b10a801511401afc0f90"
@@ -4630,7 +4663,7 @@ lodash.uniq@^4.5.0:
   version "4.5.0"
   resolved "https://registry.yarnpkg.com/lodash.uniq/-/lodash.uniq-4.5.0.tgz#d0225373aeb652adc1bc82e4945339a842754773"
 
-lodash@4.x.x, lodash@^4.0.0, lodash@^4.13.1, lodash@^4.14.0, lodash@^4.17.2, lodash@^4.17.4, lodash@^4.2.0, lodash@^4.2.1, lodash@^4.3.0, lodash@^4.5.1:
+lodash@4.x.x, lodash@^4.0.0, lodash@^4.0.1, lodash@^4.13.1, lodash@^4.14.0, lodash@^4.17.2, lodash@^4.17.4, lodash@^4.2.0, lodash@^4.2.1, lodash@^4.3.0, lodash@^4.5.1:
   version "4.17.4"
   resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.4.tgz#78203a4d1c328ae1d86dca6460e369b57f4055ae"
 
@@ -4699,6 +4732,10 @@ marksy@^2.0.0:
     he "^1.1.1"
     marked "^0.3.6"
 
+material-colors@^1.2.1:
+  version "1.2.5"
+  resolved "https://registry.yarnpkg.com/material-colors/-/material-colors-1.2.5.tgz#5292593e6754cb1bcc2b98030e4e0d6a3afc9ea1"
+
 math-expression-evaluator@^1.2.14:
   version "1.2.17"
   resolved "https://registry.yarnpkg.com/math-expression-evaluator/-/math-expression-evaluator-1.2.17.tgz#de819fdbcd84dccd8fae59c6aeb79615b9d266ac"
@@ -4837,6 +4874,10 @@ moment@2.10.6, "moment@>= 2.6.0":
   version "2.10.6"
   resolved "https://registry.yarnpkg.com/moment/-/moment-2.10.6.tgz#6cb21967c79cba7b0ca5e66644f173662b3efa77"
 
+moment@^2.18.1:
+  version "2.18.1"
+  resolved "https://registry.yarnpkg.com/moment/-/moment-2.18.1.tgz#c36193dd3ce1c2eed2adb7c802dbbc77a81b1c0f"
+
 ms@0.7.1:
   version "0.7.1"
   resolved "https://registry.yarnpkg.com/ms/-/ms-0.7.1.tgz#9cd13c03adbff25b65effde7ce864ee952017098"
@@ -5042,6 +5083,10 @@ oauth-sign@~0.8.1:
   version "0.8.2"
   resolved "https://registry.yarnpkg.com/oauth-sign/-/oauth-sign-0.8.2.tgz#46a6ab7f0aead8deae9ec0565780b7d4efeb9d43"
 
+object-assign@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/object-assign/-/object-assign-3.0.0.tgz#9bedd5ca0897949bca47e7ff408062d549f587f2"
+
 object-assign@^4.0.1, object-assign@^4.1.0, object-assign@^4.1.1:
   version "4.1.1"
   resolved "https://registry.yarnpkg.com/object-assign/-/object-assign-4.1.1.tgz#2109adc7965887cfc05cbbd442cac8bfbb360863"
@@ -5717,7 +5762,7 @@ prop-types@15.5.8:
   dependencies:
     fbjs "^0.8.9"
 
-prop-types@^15.5.10, prop-types@^15.5.4, prop-types@^15.5.6, prop-types@^15.5.8, prop-types@^15.5.9:
+prop-types@^15.5.10, prop-types@^15.5.4, prop-types@^15.5.6, prop-types@^15.5.7, prop-types@^15.5.8, prop-types@^15.5.9:
   version "15.5.10"
   resolved "https://registry.yarnpkg.com/prop-types/-/prop-types-15.5.10.tgz#2797dfc3126182e3a95e3dfbb2e893ddd7456154"
   dependencies:
@@ -5907,6 +5952,25 @@ react-code-input@1.0.8:
   dependencies:
     react "^15.3.2"
 
+react-color@^2.11.4:
+  version "2.13.5"
+  resolved "https://registry.yarnpkg.com/react-color/-/react-color-2.13.5.tgz#741cbfa2bfca1e86b08d13886051ea2017414043"
+  dependencies:
+    lodash "^4.0.1"
+    material-colors "^1.2.1"
+    reactcss "^1.2.0"
+    tinycolor2 "^1.1.2"
+
+react-datetime@^2.8.10:
+  version "2.10.1"
+  resolved "https://registry.yarnpkg.com/react-datetime/-/react-datetime-2.10.1.tgz#25ba863551ae6e5ae80d8a7f99d359ea063c4a38"
+  dependencies:
+    "@types/react" ">=15"
+    create-react-class "^15.5.2"
+    object-assign "^3.0.0"
+    prop-types "^15.5.7"
+    react-onclickoutside "^5.9.0"
+
 react-docgen@^2.15.0:
   version "2.17.0"
   resolved "https://registry.yarnpkg.com/react-docgen/-/react-docgen-2.17.0.tgz#b0f3e85af955714e1067593c1043cb82611a93d1"
@@ -6007,6 +6071,12 @@ react-modal@^2.2.4:
     prop-types "^15.5.10"
     react-dom-factories "^1.0.0"
 
+react-onclickoutside@^5.9.0:
+  version "5.11.1"
+  resolved "https://registry.yarnpkg.com/react-onclickoutside/-/react-onclickoutside-5.11.1.tgz#00314e52567cf55faba94cabbacd119619070623"
+  dependencies:
+    create-react-class "^15.5.x"
+
 react-overlays@^0.6.3:
   version "0.6.12"
   resolved "https://registry.yarnpkg.com/react-overlays/-/react-overlays-0.6.12.tgz#a079c750cc429d7db4c7474a95b4b54033e255c3"
@@ -6081,6 +6151,12 @@ react-style-proptype@^3.0.0:
   dependencies:
     prop-types "^15.5.4"
 
+react-textarea-autosize@^4.3.0:
+  version "4.3.2"
+  resolved "https://registry.yarnpkg.com/react-textarea-autosize/-/react-textarea-autosize-4.3.2.tgz#962a52c68caceae408c18acecec29049b81e42fa"
+  dependencies:
+    prop-types "^15.5.8"
+
 react-transition-group@^1.1.2:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/react-transition-group/-/react-transition-group-1.2.0.tgz#b51fc921b0c3835a7ef7c571c79fc82c73e9204f"
@@ -6110,6 +6186,12 @@ react@15.3.2, react@^15.3.2:
     loose-envify "^1.1.0"
     object-assign "^4.1.0"
 
+reactcss@^1.2.0:
+  version "1.2.2"
+  resolved "https://registry.yarnpkg.com/reactcss/-/reactcss-1.2.2.tgz#41b0ef43e01d54880357c34b11ac1531209350ef"
+  dependencies:
+    lodash "^4.0.1"
+
 read-pkg-up@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/read-pkg-up/-/read-pkg-up-1.0.1.tgz#9d63c13276c065918d57f002a57f40a1b643fb02"
@@ -6968,6 +7050,10 @@ tiny-lr@^0.2.0:
     parseurl "~1.3.0"
     qs "~5.1.0"
 
+tinycolor2@^1.1.2:
+  version "1.4.1"
+  resolved "https://registry.yarnpkg.com/tinycolor2/-/tinycolor2-1.4.1.tgz#f4fad333447bc0b07d4dc8e9209d8f39a8ac77e8"
+
 tmpl@1.0.x:
   version "1.0.4"
   resolved "https://registry.yarnpkg.com/tmpl/-/tmpl-1.0.4.tgz#23640dd7b42d00433911140820e5cf440e521dd1"
@@ -7240,7 +7326,7 @@ webidl-conversions@^4.0.0:
   version "4.0.1"
   resolved "https://registry.yarnpkg.com/webidl-conversions/-/webidl-conversions-4.0.1.tgz#8015a17ab83e7e1b311638486ace81da6ce206a0"
 
-webpack-dev-middleware@1.9.0, webpack-dev-middleware@^1.0.11:
+webpack-dev-middleware@1.9.0:
   version "1.9.0"
   resolved "https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-1.9.0.tgz#a1c67a3dfd8a5c5d62740aa0babe61758b4c84aa"
   dependencies:
@@ -7249,7 +7335,7 @@ webpack-dev-middleware@1.9.0, webpack-dev-middleware@^1.0.11:
     path-is-absolute "^1.0.0"
     range-parser "^1.0.3"
 
-webpack-dev-middleware@^1.10.2:
+webpack-dev-middleware@^1.0.11, webpack-dev-middleware@^1.10.2:
   version "1.12.0"
   resolved "https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-1.12.0.tgz#d34efefb2edda7e1d3b5dbe07289513219651709"
   dependencies:
