commit b5b5ed815b5fe3389ed35a31ac3adbd63ce9ba18
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Mon Mar 9 11:05:29 2020 +0100

    Revert "feat(ingest): Ability to disable automatic GC (#17188)" (#17508)
    
    This reverts commit b99e4a145096857f0f6c136af2e863ebddfa3539.

diff --git a/src/sentry/runner/commands/run.py b/src/sentry/runner/commands/run.py
index 2f4be280a9..6d09dab82c 100644
--- a/src/sentry/runner/commands/run.py
+++ b/src/sentry/runner/commands/run.py
@@ -404,13 +404,6 @@ def batching_kafka_options(group):
             help="Position in the commit log topic to begin reading from when no prior offset has been recorded.",
         )(f)
 
-        f = click.option(
-            "--pause-gc/--no-pause-gc",
-            "pause_gc",
-            default=False,
-            help="Disable GC, and run it manually after each batch flush.",
-        )(f)
-
         return f
 
     return inner
diff --git a/src/sentry/utils/batching_kafka_consumer.py b/src/sentry/utils/batching_kafka_consumer.py
index 81720273ae..78253e770e 100644
--- a/src/sentry/utils/batching_kafka_consumer.py
+++ b/src/sentry/utils/batching_kafka_consumer.py
@@ -1,7 +1,6 @@
 from __future__ import absolute_import
 
 import abc
-import gc
 import logging
 import six
 import time
@@ -116,7 +115,6 @@ class BatchingKafkaConsumer(object):
         queued_min_messages=DEFAULT_QUEUED_MIN_MESSAGES,
         metrics_sample_rates=None,
         metrics_default_tags=None,
-        pause_gc=False,
     ):
         assert isinstance(worker, AbstractBatchWorker)
         self.worker = worker
@@ -158,9 +156,6 @@ class BatchingKafkaConsumer(object):
         self.producer = producer
         self.commit_log_topic = commit_log_topic
         self.dead_letter_topic = dead_letter_topic
-        self.pause_gc = pause_gc
-        if pause_gc:
-            gc.disable()
 
     def __record_timing(self, metric, value, tags=None):
         if self.__metrics is None:
@@ -304,15 +299,6 @@ class BatchingKafkaConsumer(object):
         self.__batch_messages_processed_count = 0
         self.__batch_processing_time_ms = 0.0
 
-        if self.pause_gc:
-            logger.debug("Running manual full GC after batch")
-            gc_start = time.time()
-            gc.collect()
-            gc_end = time.time()
-            gc_duration = (gc_end - gc_start) * 1000
-            logger.debug("Finished manual GC, took %dms", gc_duration)
-            self.__record_timing("gc.collect", gc_duration)
-
     def _flush(self, force=False):
         """Decides whether the `BatchingKafkaConsumer` should flush because of either
         batch size or time. If so, delegate to the worker, clear the current batch,
