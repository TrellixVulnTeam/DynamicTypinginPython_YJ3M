commit cffca1b78ee7a378a81acf5f7971fca33100a574
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 23 20:14:04 2012 -0800

    Improve HTML email for errors utilizing pynliner for css

diff --git a/sentry/interfaces.py b/sentry/interfaces.py
index 29415aaea5..f635cdb445 100644
--- a/sentry/interfaces.py
+++ b/sentry/interfaces.py
@@ -222,15 +222,11 @@ class Stacktrace(Interface):
         })
 
     def to_string(self, event):
-        r = ['Stacktrace (most recent call last):']
-        for f in self.frames:
-            r.append('  File "%(filename)s", line %(lineno)s, in %(function)s\n    %(context_line)s' % f)
-        return '\n'.join(r)
+        return self.get_stacktrace(event)
 
-    def get_traceback(self, event):
+    def get_stacktrace(self, event):
         result = [
-            event.message, '',
-            'Traceback (most recent call last):', '',
+            'Stacktrace (most recent call last):', '',
         ]
         for frame in self.frames:
             if 'function' in frame:
@@ -243,6 +239,14 @@ class Stacktrace(Interface):
 
         return '\n'.join(result)
 
+    def get_traceback(self, event):
+        result = [
+            event.message, '',
+            self.get_stacktrace(event),
+        ]
+
+        return '\n'.join(result)
+
     def get_search_context(self, event):
         return {
             'text': list(itertools.chain(*[[f.get('filename'), f.get('function'), f.get('context_line')] for f in self.frames])),
diff --git a/sentry/plugins/sentry_mail/__init__.py b/sentry/plugins/sentry_mail/__init__.py
index b79b6101fd..4c28e7894d 100644
--- a/sentry/plugins/sentry_mail/__init__.py
+++ b/sentry/plugins/sentry_mail/__init__.py
@@ -11,6 +11,8 @@ from django.template.loader import render_to_string
 from sentry.conf import settings
 from sentry.plugins import Plugin, register
 
+import pynliner
+
 NOTSET = object()
 
 
@@ -64,7 +66,7 @@ class MailProcessor(Plugin):
             fail_silently=False,
         )
 
-    def mail_admins(self, group, event, fail_silently=True):
+    def mail_admins(self, group, event, fail_silently=False):
         project = group.project
 
         interface_list = []
@@ -74,7 +76,7 @@ class MailProcessor(Plugin):
                 continue
             interface_list.append((interface.get_title(), body))
 
-        subject = event.message
+        subject = '%s: %s' % (event.get_level_display().upper(), event.message)
 
         if event.site:
             subject = '[%s] %s' % (event.site, subject)
@@ -87,12 +89,12 @@ class MailProcessor(Plugin):
             'link': link,
             'interfaces': interface_list,
         })
-        html_body = render_to_string('sentry/emails/error.html', {
+        html_body = pynliner.fromString(render_to_string('sentry/emails/error.html', {
             'group': group,
             'event': event,
             'link': link,
             'interfaces': interface_list,
-        })
+        }))
 
         self._send_mail(
             subject=subject,
@@ -103,6 +105,7 @@ class MailProcessor(Plugin):
         )
 
     def should_mail(self, group, event):
+        return True
         project = group.project
         send_to = self.get_option('send_to', project) or self.send_to
         if not send_to:
diff --git a/sentry/templates/sentry/emails/error.html b/sentry/templates/sentry/emails/error.html
index e1e9e626b7..b2ca249ab9 100644
--- a/sentry/templates/sentry/emails/error.html
+++ b/sentry/templates/sentry/emails/error.html
@@ -1,19 +1,108 @@
-<p>A new event has been recorded in Sentry:</p>
+{% load i18n %}
+<!DOCTYPE html>
+<html>
+    <head>
+        <style type="text/css">
+        body, .main {
+            width: 100%;
+            font-size: 12px;
+            font-family: "helvetica neue", helvetica, sans-serif;
+            border: 0;
+            padding: 0;
+            margin: 0;
+        }
+        pre, code {
+            font-size: 11px;
+            font-family: Menlo, Monaco, "Courier New", monospace;
+        }
+        table {
+            width: 100%;
+        }
+        td {
+            padding: 0;
+            margin: 0;
+        }
+        td {
+            text-align: center;
+        }
+        .body {
+            margin: 0 auto;
+            text-align: left;
+            width: 600px;
+            border: 5px solid #404f60;
+        }
+        .header {
+            background: #404f60;
+            color: #fff;
+            padding: 10px;
+            font-size: 14px;
+        }
+        .inner {
+            background: #fff;
+            padding: 10px;
+        }
+        .inner pre,
+        .inner p,
+        .inner table {
+            margin-bottom: 15px;
+        }
+        .inner table th,
+        .inner table td {
+            text-align: left;
+            width: 25%;
+        }
+        .interface {
+            margin-bottom: 15px;
+        }
+        .interface .title {
+            color: #404f60;
+            font-size: 14px;
+            padding-bottom: 5px;
+            margin-bottom: 5px;
+            border-bottom: 1px solid #404f60;
+            font-weight: bold;
+        }
+        </style>
+    </head>
+    <body>
+        <table class="main">
+            <tr>
+                <td>
+                    <div class="body">
+                        <div class="header">
+                            {% trans "A new event has been recorded in Sentry" %}
+                        </div>
+                        <div class="inner">
+                            <p>{{ event.message }}</p>
 
-<pre>{{ event.message }}</pre>
+                            <p><a href="{{ link }}">{{ link }}</a></p>
 
-<p><a href="{{ link }}">{{ link }}</a></p>
+                            <table>
+                                <tr>
+                                    <th>Logger:</th>
+                                    <td>{{ event.logger }}</td>
+                                    <th>Level:</th>
+                                    <td>{{ event.get_level_display }}</td>
+                                </tr>
+                                <tr>
+                                    <th>Server:</th>
+                                    <td>{{ event.server_name }}</td>
+                                    <th>First Seen:</th>
+                                    <td>{{ group.first_seen|date }}</td>
+                                </tr>
+                            </table>
 
-<dl>
-    <dt>Logger:</dt>
-    <dd>{{ event.logger }}</dd>
-    <dt>First Seen:</dt>
-    <dd>{{ group.first_seen|date }}</dd>
-</dt>
+                            {% for label, text in interfaces %}
+                            <div class="interface">
+                                <div class="title">{{ label }}</div>
 
-{% for label, text in interfaces %}
-<p><strong>{{ label }}</strong></p>
-
-<pre>{{ text }}</pre>
-
-{% endfor %}
+                                <pre>{{ text }}</pre>
+                            </div>
+                            {% endfor %}
+                        </div>
+                    </div>
+                </td>
+            </tr>
+        </table>
+    </body>
+</html>
\ No newline at end of file
diff --git a/setup.py b/setup.py
index f7b69d0915..e29c99d8fe 100755
--- a/setup.py
+++ b/setup.py
@@ -30,6 +30,8 @@ tests_require = [
 ]
 
 install_requires = [
+    'cssutils>=0.9.9',
+    'BeautifulSoup>=3.2.1',
     'Django>=1.2,<1.4',
     'django-indexer>=0.3.0',
     'django-paging>=0.2.4',
@@ -38,6 +40,7 @@ install_requires = [
     'kombu>=2.1.0,<3.0',
     'gunicorn>=0.13.4',
     'logan>=0.2.1',
+    'pynliner>=0.4.0',
     'pytz>=2011n',
     'raven>=1.4.4',
     'South>=0.7',
