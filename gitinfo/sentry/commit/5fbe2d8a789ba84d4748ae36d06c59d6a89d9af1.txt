commit 5fbe2d8a789ba84d4748ae36d06c59d6a89d9af1
Author: Matej Minar <matej.minar@sentry.io>
Date:   Tue Mar 24 15:32:27 2020 +0100

    feat(ui): Add yAxis in URL (#17877)

diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
index 8e0dea079d..714820e3c7 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
@@ -34,11 +34,7 @@ type Props = RouteComponentProps<RouteParams, {}> & {
   api: Client;
 };
 
-type State = {
-  yAxis: YAxis;
-} & AsyncView['state'];
-
-class ReleaseOverview extends AsyncView<Props, State> {
+class ReleaseOverview extends AsyncView<Props> {
   getTitle() {
     const {params, organization} = this.props;
     return routeTitleGen(
@@ -48,20 +44,24 @@ class ReleaseOverview extends AsyncView<Props, State> {
     );
   }
 
-  getDefaultState() {
-    return {
-      ...super.getDefaultState(),
-      yAxis: 'sessions',
-    };
-  }
-
   handleYAxisChange = (yAxis: YAxis) => {
-    this.setState({yAxis});
+    const {location, router} = this.props;
+
+    router.push({
+      ...location,
+      query: {...location.query, yAxis},
+    });
   };
 
+  getYAxis(): YAxis {
+    const {yAxis} = this.props.location.query;
+
+    return typeof yAxis === 'string' ? (yAxis as YAxis) : 'sessions';
+  }
+
   render() {
     const {organization, params, selection, location, api, router} = this.props;
-    const {yAxis} = this.state;
+    const yAxis = this.getYAxis();
 
     return (
       <ReleaseContext.Consumer>
