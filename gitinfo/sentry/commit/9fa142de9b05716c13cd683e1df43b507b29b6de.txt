commit 9fa142de9b05716c13cd683e1df43b507b29b6de
Author: Nola Chen <chen.no@husky.neu.edu>
Date:   Mon Nov 25 10:48:46 2019 -0800

    ref(app-platform): Refactor sentryapplicationrow & enable dashboard link for all users (#15768)
    
    * refactor sentryApplicationRow & enable dashboard link for all users
    
    * fix tests
    
    * Address review comments + move SentryApplicationRow buttons to a new file
    
    * refactor: move sentryApplicationRow files to a new folder
    
    * update snapshot

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 1988d623e0..adce2f936d 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -741,7 +741,7 @@ function routes() {
         />
         <Route
           name="Integration Dashboard"
-          path=":appSlug/dashboard"
+          path=":appSlug/dashboard/"
           componentPromise={() =>
             import(/* webpackChunkName: "SentryApplicationDashboard" */ 'app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard')
           }
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.tsx
index b942b30f73..ac44638c78 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.tsx
@@ -245,6 +245,7 @@ class OrganizationIntegrations extends AsyncComponent<
           organization={organization}
           install={this.getAppInstall(app)}
           app={app}
+          isOnIntegrationPage
         />
       );
     }
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallationDetail.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallationDetail.tsx
index 294101d505..5ea7178868 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallationDetail.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallationDetail.tsx
@@ -91,6 +91,7 @@ class SentryAppInstallationDetail extends React.Component<Props> {
           onInstall={this.handleInstall}
           onUninstall={this.handleUninstall}
           install={install}
+          isOnIntegrationPage
         />
       </React.Fragment>
     );
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx
index efac3ff0af..5b2fbb4561 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx
@@ -47,8 +47,7 @@ class OrganizationDeveloperSettings extends AsyncView {
         app={app}
         organization={organization}
         onRemoveApp={this.removeApp}
-        showInstallationStatus={false}
-        showAppDashboardLink={app.status === 'published'}
+        isOnIntegrationPage={false}
       />
     );
   };
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/actionButtons.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/actionButtons.tsx
new file mode 100644
index 0000000000..892523ba84
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/actionButtons.tsx
@@ -0,0 +1,108 @@
+import React from 'react';
+
+import styled from 'react-emotion';
+
+import {LightWeightOrganization, SentryApp} from 'app/types';
+
+import Button from 'app/components/button';
+import ConfirmDelete from 'app/components/confirmDelete';
+
+import {t} from 'app/locale';
+import space from 'app/styles/space';
+
+type Props = {
+  org: LightWeightOrganization;
+  app: SentryApp;
+
+  showDashboard: boolean;
+  showPublish: boolean;
+  showDelete: boolean;
+  onPublish?: () => void;
+  onDelete?: (app: SentryApp) => void;
+  // If you want to disable the publish or delete buttons, pass in a reason to display to the user in a tooltip
+  disablePublishReason?: string;
+  disableDeleteReason?: string;
+};
+
+const ActionButtons = ({
+  org,
+  app,
+  showDashboard,
+  showPublish,
+  showDelete,
+  onPublish,
+  onDelete,
+  disablePublishReason,
+  disableDeleteReason,
+}: Props) => {
+  const appDashboardButton = showDashboard ? (
+    <StyledButton
+      size="small"
+      icon="icon-stats"
+      to={`/settings/${org.slug}/developer-settings/${app.slug}/dashboard/`}
+    >
+      {t('Dashboard')}
+    </StyledButton>
+  ) : null;
+
+  const publishRequestButton = showPublish ? (
+    <StyledButton
+      disabled={!!disablePublishReason}
+      title={disablePublishReason}
+      icon="icon-upgrade"
+      size="small"
+      onClick={onPublish}
+    >
+      {t('Publish')}
+    </StyledButton>
+  ) : null;
+
+  const deleteConfirmMessage = t(
+    `Deleting ${app.slug} will also delete any and all of its installations. \
+         This is a permanent action. Do you wish to continue?`
+  );
+  const deleteButton = showDelete ? (
+    disableDeleteReason ? (
+      <StyledButton
+        disabled
+        title={disableDeleteReason}
+        size="small"
+        icon="icon-trash"
+        label="Delete"
+      />
+    ) : (
+      onDelete && (
+        <ConfirmDelete
+          message={deleteConfirmMessage}
+          confirmInput={app.slug}
+          priority="danger"
+          onConfirm={() => onDelete(app)}
+        >
+          <StyledButton size="small" icon="icon-trash" label="Delete" />
+        </ConfirmDelete>
+      )
+    )
+  ) : null;
+
+  return (
+    <ButtonHolder>
+      {appDashboardButton}
+      {publishRequestButton}
+      {deleteButton}
+    </ButtonHolder>
+  );
+};
+
+const ButtonHolder = styled('div')`
+  flex-direction: row;
+  display: flex;
+  & > * {
+    margin-left: ${space(0.5)};
+  }
+`;
+
+const StyledButton = styled(Button)`
+  color: ${p => p.theme.gray2};
+`;
+
+export default ActionButtons;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/index.tsx
similarity index 53%
rename from src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.tsx
rename to src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/index.tsx
index 1307e2a1f9..5c02fac4d8 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/index.tsx
@@ -6,10 +6,6 @@ import omit from 'lodash/omit';
 import styled from 'react-emotion';
 import PropTypes from 'prop-types';
 
-import Access from 'app/components/acl/access';
-import Button from 'app/components/button';
-import Confirm from 'app/components/confirm';
-import ConfirmDelete from 'app/components/confirmDelete';
 import SentryTypes from 'app/sentryTypes';
 import {PanelItem} from 'app/components/panels';
 import {t} from 'app/locale';
@@ -21,6 +17,7 @@ import SentryAppPublishRequestModal from 'app/components/modals/sentryAppPublish
 import {Organization, SentryApp, SentryAppInstallation} from 'app/types';
 import {recordInteraction} from 'app/utils/recordSentryAppInteraction';
 import theme from 'app/utils/theme';
+import SentryApplicationRowButtons from './sentryApplicationRowButtons';
 
 const INSTALLED = 'Installed';
 const NOT_INSTALLED = 'Not Installed';
@@ -33,8 +30,7 @@ type Props = {
   onInstall?: () => void;
   onUninstall?: (install: SentryAppInstallation) => void;
   onRemoveApp?: (app: SentryApp) => void;
-  showInstallationStatus: boolean;
-  showAppDashboardLink?: boolean;
+  isOnIntegrationPage: boolean;
   ['data-test-id']?: string;
 };
 
@@ -46,135 +42,26 @@ export default class SentryApplicationRow extends React.PureComponent<Props> {
     onInstall: PropTypes.func,
     onUninstall: PropTypes.func,
     onRemoveApp: PropTypes.func,
-    showInstallationStatus: PropTypes.bool, //false if we are on the developer settings page where we don't show installation status
-    showAppDashboardLink: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    showInstallationStatus: true,
+    isOnIntegrationPage: PropTypes.bool,
   };
 
   get isInternal() {
     return this.props.app.status === 'internal';
   }
 
-  renderUnpublishedAdminButtons() {
-    return (
-      <ButtonHolder>
-        {this.isInternal ? null : this.renderPublishRequest()}
-        {this.renderRemoveApp()}
-      </ButtonHolder>
-    );
-  }
-
-  renderDisabledPublishRequestButton(message: string) {
-    return (
-      <StyledButton disabled title={t(message)} size="small" icon="icon-upgrade">
-        {t('Publish')}
-      </StyledButton>
-    );
-  }
-
-  renderDisabledRemoveButton(message: string) {
-    return <Button disabled title={t(message)} size="small" icon="icon-trash" />;
-  }
-
-  renderAppDashboardLink() {
-    const {app, organization} = this.props;
-
-    return (
-      <Access isSuperuser>
-        <StyledButton
-          size="small"
-          icon="icon-stats"
-          to={`/settings/${organization.slug}/developer-settings/${app.slug}/dashboard`}
-        >
-          {t('Dashboard')}
-        </StyledButton>
-      </Access>
-    );
-  }
-
-  renderUnpublishedNonAdminButtons() {
-    return (
-      <ButtonHolder>
-        {this.renderDisabledPublishRequestButton(
-          'Organization owner permissions are required for this action.'
-        )}
-        {this.renderDisabledRemoveButton(
-          'Organization owner permissions are required for this action.'
-        )}
-      </ButtonHolder>
-    );
-  }
-
-  renderPublishedAppButtons() {
-    return (
-      <ButtonHolder>
-        {this.props.showAppDashboardLink && this.renderAppDashboardLink()}
-        {this.renderDisabledPublishRequestButton(
-          'Published integrations cannot be re-published.'
-        )}
-        {this.renderDisabledRemoveButton('Published integrations cannot be removed.')}
-      </ButtonHolder>
-    );
-  }
-
-  renderRemoveApp() {
-    const {app, onRemoveApp} = this.props;
-    const message = t(
-      `Deleting ${app.slug} will also delete any and all of its installations. \
-       This is a permanent action. Do you wish to continue?`
-    );
-    return (
-      <ConfirmDelete
-        message={message}
-        confirmInput={app.slug}
-        priority="danger"
-        onConfirm={() => onRemoveApp && onRemoveApp(app)}
-      >
-        <Button size="small" icon="icon-trash" />
-      </ConfirmDelete>
-    );
-  }
-
-  renderPublishRequest() {
-    return (
-      <StyledButton icon="icon-upgrade" size="small" onClick={this.handlePublish}>
-        {t('Publish')}
-      </StyledButton>
-    );
-  }
-
-  renderUninstallButton() {
-    const {install, app, onUninstall} = this.props;
-    const message = t(`Are you sure you want to remove the ${app.slug} installation?`);
-    return (
-      <Confirm
-        message={message}
-        priority="danger"
-        onConfirm={() => onUninstall && install && onUninstall(install)}
-      >
-        <StyledButton borderless icon="icon-trash" data-test-id="sentry-app-uninstall">
-          {t('Uninstall')}
-        </StyledButton>
-      </Confirm>
-    );
-  }
-
   hideStatus() {
     //no publishing for internal apps so hide the status on the developer settings page
-    return this.isInternal && !this.props.showInstallationStatus;
+    return this.isInternal && !this.props.isOnIntegrationPage;
   }
 
   renderStatus() {
-    const {app, showInstallationStatus} = this.props;
+    const {app, isOnIntegrationPage} = this.props;
     const isInternal = this.isInternal;
     const status = this.installationStatus;
     if (this.hideStatus()) {
       return null;
     }
-    if (showInstallationStatus) {
+    if (isOnIntegrationPage) {
       //if internal and we show installation status, we don't show the learn more
       if (isInternal) {
         return <StatusIndicator status={status} isInternal={isInternal} />;
@@ -224,60 +111,22 @@ export default class SentryApplicationRow extends React.PureComponent<Props> {
       });
   };
 
-  renderInstallButton() {
-    return (
-      <Button
-        onClick={() => this.openLearnMore()}
-        size="small"
-        icon="icon-circle-add"
-        className="btn btn-default"
-      >
-        {t('Install')}
-      </Button>
-    );
-  }
-
-  renderUnpublishedAppButtons() {
-    return (
-      <Access access={['org:admin']}>
-        {({hasAccess}) => (
-          <React.Fragment>
-            {hasAccess
-              ? this.renderUnpublishedAdminButtons()
-              : this.renderUnpublishedNonAdminButtons()}
-          </React.Fragment>
-        )}
-      </Access>
-    );
-  }
-
   linkToEdit() {
-    const {app, showInstallationStatus} = this.props;
+    const {isOnIntegrationPage} = this.props;
     // show the link if the app is internal or we are on the developer settings page
-    return app.status === 'internal' || !showInstallationStatus;
-  }
-
-  renderButtons() {
-    const {app, showInstallationStatus} = this.props;
-    const isInstalled = this.isInstalled;
-
-    //showInstallationStatus = true on integrations page
-    if (showInstallationStatus) {
-      //no installation buttons to show if internal
-      if (this.isInternal) {
-        return null;
-      }
-      //if installed, render the uninstall button and if installed, render install button
-      return isInstalled ? this.renderUninstallButton() : this.renderInstallButton();
-    }
-
-    return app.status === 'published'
-      ? this.renderPublishedAppButtons()
-      : this.renderUnpublishedAppButtons();
+    // We don't want to show the link to edit on the main integrations list unless the app is internal
+    return this.isInternal || !isOnIntegrationPage;
   }
 
   render() {
-    const {app, organization} = this.props;
+    const {
+      app,
+      organization,
+      install,
+      isOnIntegrationPage,
+      onUninstall,
+      onRemoveApp,
+    } = this.props;
     return (
       <SentryAppItem data-test-id={app.slug}>
         <StyledFlex>
@@ -297,7 +146,18 @@ export default class SentryApplicationRow extends React.PureComponent<Props> {
             <SentryAppDetails>{this.renderStatus()}</SentryAppDetails>
           </SentryAppBox>
 
-          <Box>{this.renderButtons()}</Box>
+          <Box>
+            <SentryApplicationRowButtons
+              organization={organization}
+              app={app}
+              install={install}
+              isOnIntegrationPage={isOnIntegrationPage}
+              onClickInstall={this.openLearnMore}
+              onClickUninstall={onUninstall}
+              onClickRemove={onRemoveApp}
+              onClickPublish={this.handlePublish}
+            />
+          </Box>
         </StyledFlex>
       </SentryAppItem>
     );
@@ -339,10 +199,6 @@ const SentryAppLink = styled(Link)`
   color: ${props => props.theme.textColor};
 `;
 
-const StyledButton = styled(Button)`
-  color: ${p => p.theme.gray2};
-`;
-
 const color = {
   [INSTALLED]: 'success',
   [NOT_INSTALLED]: 'gray2',
@@ -387,11 +243,3 @@ const PublishStatus = styled(({status, ...props}: PublishStatusProps) => {
   font-weight: light;
   margin-right: ${space(0.75)};
 `;
-
-const ButtonHolder = styled('div')`
-  flex-direction: row;
-  display: flex;
-  & > * {
-    margin-left: ${space(0.5)};
-  }
-`;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/installButtons.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/installButtons.tsx
new file mode 100644
index 0000000000..2c1efe5614
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/installButtons.tsx
@@ -0,0 +1,53 @@
+import React from 'react';
+import styled from 'react-emotion';
+
+import Button from 'app/components/button';
+import Confirm from 'app/components/confirm';
+
+import {t} from 'app/locale';
+import {SentryApp, SentryAppInstallation} from 'app/types';
+
+type UninstallButtonProps = {
+  install: SentryAppInstallation;
+  app: SentryApp;
+  onClickUninstall?: (install: SentryAppInstallation) => void;
+};
+export const UninstallButton = ({
+  install,
+  app,
+  onClickUninstall,
+}: UninstallButtonProps) => {
+  const message = t(`Are you sure you want to remove the ${app.slug} installation?`);
+
+  return (
+    <Confirm
+      message={message}
+      priority="danger"
+      onConfirm={() => onClickUninstall && install && onClickUninstall(install)}
+    >
+      <StyledButton borderless icon="icon-trash" data-test-id="sentry-app-uninstall">
+        {t('Uninstall')}
+      </StyledButton>
+    </Confirm>
+  );
+};
+
+type InstallButtonProps = {
+  onClickInstall?: () => void;
+};
+export const InstallButton = ({onClickInstall}: InstallButtonProps) => {
+  return (
+    <Button
+      onClick={onClickInstall}
+      size="small"
+      icon="icon-circle-add"
+      className="btn btn-default"
+    >
+      {t('Install')}
+    </Button>
+  );
+};
+
+const StyledButton = styled(Button)`
+  color: ${p => p.theme.gray2};
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/sentryApplicationRowButtons.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/sentryApplicationRowButtons.tsx
new file mode 100644
index 0000000000..d42de64e10
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow/sentryApplicationRowButtons.tsx
@@ -0,0 +1,90 @@
+import React from 'react';
+
+import Access from 'app/components/acl/access';
+
+import {t} from 'app/locale';
+import {LightWeightOrganization, SentryApp, SentryAppInstallation} from 'app/types';
+import ActionButtons from './actionButtons';
+import {InstallButton, UninstallButton} from './installButtons';
+
+type Props = {
+  organization: LightWeightOrganization;
+  app: SentryApp;
+  install?: SentryAppInstallation;
+
+  isOnIntegrationPage: boolean;
+
+  onClickInstall?: () => void;
+  onClickUninstall?: (install: SentryAppInstallation) => void;
+
+  onClickRemove?: (app: SentryApp) => void;
+  onClickPublish?: () => void;
+};
+
+const SentryApplicationRowButtons = ({
+  organization,
+  app,
+  install,
+  isOnIntegrationPage,
+  onClickInstall,
+  onClickUninstall,
+
+  onClickRemove,
+  onClickPublish,
+}: Props) => {
+  const isInternal = app.status === 'internal';
+
+  // On the Integrations page, we show the install/uninstall buttons
+  if (isOnIntegrationPage) {
+    //no installation buttons to show if internal
+    if (isInternal) {
+      return null;
+    }
+    //if installed, render the uninstall button and if installed, render install button
+    return !!install ? (
+      <UninstallButton install={install} app={app} onClickUninstall={onClickUninstall} />
+    ) : (
+      <InstallButton onClickInstall={onClickInstall} />
+    );
+  }
+
+  // Otherwise, we are on the Developer Settings page and we want to show the action buttons
+  return (
+    <Access access={['org:admin']}>
+      {({hasAccess}) => {
+        let disablePublishReason = '';
+        let disableDeleteReason = '';
+
+        // Publish & Delete buttons will always be disabled if the app is published
+        if (app.status === 'published') {
+          disablePublishReason = t('Published integrations cannot be re-published.');
+          disableDeleteReason = t('Published integrations cannot be removed.');
+        } else if (!hasAccess) {
+          disablePublishReason = t(
+            'Organization owner permissions are required for this action.'
+          );
+          disableDeleteReason = t(
+            'Organization owner permissions are required for this action.'
+          );
+        }
+
+        return (
+          <ActionButtons
+            org={organization}
+            app={app}
+            // we only want to show the dashboard link on developer settings page
+            showDashboard={!isOnIntegrationPage}
+            showPublish={!isInternal}
+            showDelete
+            onPublish={onClickPublish}
+            onDelete={onClickRemove}
+            disablePublishReason={disablePublishReason}
+            disableDeleteReason={disableDeleteReason}
+          />
+        );
+      }}
+    </Access>
+  );
+};
+
+export default SentryApplicationRowButtons;
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
index 93cef4a285..25e203bb3a 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
@@ -19,7 +19,8 @@ describe('Organization Developer Settings', function() {
   });
   const routerContext = TestStubs.routerContext();
 
-  const publishButtonSelector = 'StyledButton[icon="icon-upgrade"]';
+  const publishButtonSelector = 'StyledButton[aria-label="Publish"]';
+  const deleteButtonSelector = 'StyledButton[aria-label="Delete"]';
 
   beforeEach(() => {
     Client.clearMockResponses();
@@ -75,8 +76,8 @@ describe('Organization Developer Settings', function() {
         body: [],
       });
 
-      expect(wrapper.find('[icon="icon-trash"]').prop('disabled')).toEqual(false);
-      wrapper.find('[icon="icon-trash"]').simulate('click');
+      expect(wrapper.find(deleteButtonSelector).prop('disabled')).toEqual(false);
+      wrapper.find(deleteButtonSelector).simulate('click');
       // confirm deletion by entering in app slug
       wrapper.find('input').simulate('change', {target: {value: 'sample-app'}});
       wrapper
@@ -191,7 +192,7 @@ describe('Organization Developer Settings', function() {
     });
 
     it('trash button is disabled', () => {
-      expect(wrapper.find('[icon="icon-trash"]').prop('disabled')).toEqual(true);
+      expect(wrapper.find(deleteButtonSelector).prop('disabled')).toEqual(true);
     });
 
     it('publish button is disabled', () => {
@@ -217,7 +218,7 @@ describe('Organization Developer Settings', function() {
     });
 
     it('allows deleting', () => {
-      expect(wrapper.find('[icon="icon-trash"]').prop('disabled')).toEqual(false);
+      expect(wrapper.find(deleteButtonSelector).prop('disabled')).toEqual(false);
     });
 
     it('publish button does not exist', () => {
@@ -241,7 +242,7 @@ describe('Organization Developer Settings', function() {
     );
 
     it('trash button is disabled', () => {
-      expect(wrapper.find('[icon="icon-trash"]').prop('disabled')).toEqual(true);
+      expect(wrapper.find(deleteButtonSelector).prop('disabled')).toEqual(true);
     });
 
     it('publish button is disabled', () => {
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallationDetail.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallationDetail.spec.jsx.snap
index f128aae5e8..434cae6de1 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallationDetail.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallationDetail.spec.jsx.snap
@@ -83,6 +83,7 @@ exports[`Sentry App Installations displays all Apps owned by the Org 1`] = `
         "webhookUrl": "https://example.com/webhook",
       }
     }
+    isOnIntegrationPage={true}
     onInstall={[Function]}
     onUninstall={[Function]}
     organization={
@@ -113,28 +114,27 @@ exports[`Sentry App Installations displays all Apps owned by the Org 1`] = `
         "teams": Array [],
       }
     }
-    showInstallationStatus={true}
   >
     <SentryAppItem
       data-test-id="sample-app"
       p={2}
     >
       <Base
-        className="css-13p7dw9-PanelItem-SentryAppItem e6pby8e0"
+        className="css-13p7dw9-PanelItem-SentryAppItem e5fmmf40"
         data-test-id="sample-app"
         p={2}
       >
         <div
-          className="css-13p7dw9-PanelItem-SentryAppItem e6pby8e0"
+          className="css-13p7dw9-PanelItem-SentryAppItem e5fmmf40"
           data-test-id="sample-app"
           is={null}
         >
           <StyledFlex>
             <Base
-              className="css-14n192s-StyledFlex e6pby8e1"
+              className="css-14n192s-StyledFlex e5fmmf41"
             >
               <div
-                className="css-14n192s-StyledFlex e6pby8e1"
+                className="css-14n192s-StyledFlex e5fmmf41"
                 is={null}
               >
                 <PluginIcon
@@ -148,27 +148,27 @@ exports[`Sentry App Installations displays all Apps owned by the Org 1`] = `
                 </PluginIcon>
                 <SentryAppBox>
                   <Base
-                    className="css-161g25b-SentryAppBox e6pby8e2"
+                    className="css-161g25b-SentryAppBox e5fmmf42"
                   >
                     <div
-                      className="css-161g25b-SentryAppBox e6pby8e2"
+                      className="css-161g25b-SentryAppBox e5fmmf42"
                       is={null}
                     >
                       <SentryAppName
                         hideStatus={false}
                       >
                         <div
-                          className="css-4cu42i-SentryAppName e6pby8e4"
+                          className="css-4cu42i-SentryAppName e5fmmf44"
                         >
                           Sample App
                         </div>
                       </SentryAppName>
                       <SentryAppDetails>
                         <Base
-                          className="css-f0t6d-SentryAppDetails e6pby8e3"
+                          className="css-f0t6d-SentryAppDetails e5fmmf43"
                         >
                           <div
-                            className="css-f0t6d-SentryAppDetails e6pby8e3"
+                            className="css-f0t6d-SentryAppDetails e5fmmf43"
                             is={null}
                           >
                             <StatusIndicator
@@ -176,7 +176,7 @@ exports[`Sentry App Installations displays all Apps owned by the Org 1`] = `
                               status="Not Installed"
                             >
                               <Component
-                                className="css-tr2f8g-StatusIndicator e6pby8e8"
+                                className="css-tr2f8g-StatusIndicator e5fmmf47"
                                 isInternal={false}
                                 status="Not Installed"
                               >
@@ -203,7 +203,7 @@ exports[`Sentry App Installations displays all Apps owned by the Org 1`] = `
                                         />
                                       </CircleIndicator>
                                       <div
-                                        className="css-tr2f8g-StatusIndicator e6pby8e8"
+                                        className="css-tr2f8g-StatusIndicator e5fmmf47"
                                       >
                                         Not Installed
                                       </div>
@@ -219,14 +219,14 @@ exports[`Sentry App Installations displays all Apps owned by the Org 1`] = `
                               to=""
                             >
                               <Link
-                                className="css-u3fgwp-StyledLink e6pby8e5"
+                                className="css-u3fgwp-StyledLink e5fmmf45"
                                 onClick={[Function]}
                                 onlyActiveOnIndex={false}
                                 style={Object {}}
                                 to=""
                               >
                                 <a
-                                  className="css-u3fgwp-StyledLink e6pby8e5"
+                                  className="css-u3fgwp-StyledLink e5fmmf45"
                                   onClick={[Function]}
                                   style={Object {}}
                                 >
@@ -248,98 +248,157 @@ exports[`Sentry App Installations displays all Apps owned by the Org 1`] = `
                       className="css-roynbj"
                       is={null}
                     >
-                      <Button
-                        align="center"
-                        className="btn btn-default"
-                        disabled={false}
-                        icon="icon-circle-add"
-                        onClick={[Function]}
-                        size="small"
+                      <SentryApplicationRowButtons
+                        app={
+                          Object {
+                            "author": "Sentry",
+                            "clientId": "client-id",
+                            "clientSecret": "client-secret",
+                            "events": Array [],
+                            "isAlertable": false,
+                            "name": "Sample App",
+                            "overview": "This is an app.",
+                            "redirectUrl": "https://example/com/setup",
+                            "schema": Object {},
+                            "scopes": Array [
+                              "project:read",
+                            ],
+                            "slug": "sample-app",
+                            "status": "unpublished",
+                            "uuid": "123456123456123456123456",
+                            "webhookUrl": "https://example.com/webhook",
+                          }
+                        }
+                        isOnIntegrationPage={true}
+                        onClickInstall={[Function]}
+                        onClickPublish={[Function]}
+                        onClickUninstall={[Function]}
+                        organization={
+                          Object {
+                            "access": Array [
+                              "org:read",
+                              "org:write",
+                              "org:admin",
+                              "org:integrations",
+                              "project:read",
+                              "project:write",
+                              "project:admin",
+                              "team:read",
+                              "team:write",
+                              "team:admin",
+                            ],
+                            "features": Array [],
+                            "id": "3",
+                            "name": "Organization Name",
+                            "onboardingTasks": Array [],
+                            "projects": Array [],
+                            "scrapeJavaScript": true,
+                            "slug": "org-slug",
+                            "status": Object {
+                              "id": "active",
+                              "name": "active",
+                            },
+                            "teams": Array [],
+                          }
+                        }
                       >
-                        <StyledButton
-                          aria-disabled={false}
-                          aria-label="Install"
-                          className="btn btn-default"
-                          disabled={false}
-                          onClick={[Function]}
-                          role="button"
-                          size="small"
+                        <InstallButton
+                          onClickInstall={[Function]}
                         >
-                          <ForwardRef
-                            aria-disabled={false}
-                            aria-label="Install"
-                            className="btn btn-default css-z6hjis-StyledButton-getColors edwq9my0"
+                          <Button
+                            align="center"
+                            className="btn btn-default"
                             disabled={false}
+                            icon="icon-circle-add"
                             onClick={[Function]}
-                            role="button"
                             size="small"
                           >
-                            <button
+                            <StyledButton
                               aria-disabled={false}
                               aria-label="Install"
-                              className="btn btn-default css-z6hjis-StyledButton-getColors edwq9my0"
+                              className="btn btn-default"
+                              disabled={false}
                               onClick={[Function]}
                               role="button"
                               size="small"
                             >
-                              <ButtonLabel
-                                align="center"
+                              <ForwardRef
+                                aria-disabled={false}
+                                aria-label="Install"
+                                className="btn btn-default css-z6hjis-StyledButton-getColors edwq9my0"
+                                disabled={false}
+                                onClick={[Function]}
+                                role="button"
                                 size="small"
                               >
-                                <Component
-                                  align="center"
-                                  className="css-1h693nz-ButtonLabel edwq9my1"
+                                <button
+                                  aria-disabled={false}
+                                  aria-label="Install"
+                                  className="btn btn-default css-z6hjis-StyledButton-getColors edwq9my0"
+                                  onClick={[Function]}
+                                  role="button"
                                   size="small"
                                 >
-                                  <span
-                                    className="css-1h693nz-ButtonLabel edwq9my1"
+                                  <ButtonLabel
+                                    align="center"
+                                    size="small"
                                   >
-                                    <Icon
-                                      hasChildren={true}
+                                    <Component
+                                      align="center"
+                                      className="css-1h693nz-ButtonLabel edwq9my1"
                                       size="small"
                                     >
-                                      <Component
-                                        className="css-1vdnsie-Icon edwq9my2"
-                                        hasChildren={true}
-                                        size="small"
+                                      <span
+                                        className="css-1h693nz-ButtonLabel edwq9my1"
                                       >
-                                        <span
-                                          className="css-1vdnsie-Icon edwq9my2"
+                                        <Icon
+                                          hasChildren={true}
                                           size="small"
                                         >
-                                          <StyledInlineSvg
-                                            size="12px"
-                                            src="icon-circle-add"
+                                          <Component
+                                            className="css-1vdnsie-Icon edwq9my2"
+                                            hasChildren={true}
+                                            size="small"
                                           >
-                                            <ForwardRef
-                                              className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
-                                              size="12px"
-                                              src="icon-circle-add"
+                                            <span
+                                              className="css-1vdnsie-Icon edwq9my2"
+                                              size="small"
                                             >
-                                              <svg
-                                                className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
-                                                height="12px"
-                                                viewBox={Object {}}
-                                                width="12px"
+                                              <StyledInlineSvg
+                                                size="12px"
+                                                src="icon-circle-add"
                                               >
-                                                <use
-                                                  href="#test"
-                                                  xlinkHref="#test"
-                                                />
-                                              </svg>
-                                            </ForwardRef>
-                                          </StyledInlineSvg>
-                                        </span>
-                                      </Component>
-                                    </Icon>
-                                    Install
-                                  </span>
-                                </Component>
-                              </ButtonLabel>
-                            </button>
-                          </ForwardRef>
-                        </StyledButton>
-                      </Button>
+                                                <ForwardRef
+                                                  className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                  size="12px"
+                                                  src="icon-circle-add"
+                                                >
+                                                  <svg
+                                                    className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                    height="12px"
+                                                    viewBox={Object {}}
+                                                    width="12px"
+                                                  >
+                                                    <use
+                                                      href="#test"
+                                                      xlinkHref="#test"
+                                                    />
+                                                  </svg>
+                                                </ForwardRef>
+                                              </StyledInlineSvg>
+                                            </span>
+                                          </Component>
+                                        </Icon>
+                                        Install
+                                      </span>
+                                    </Component>
+                                  </ButtonLabel>
+                                </button>
+                              </ForwardRef>
+                            </StyledButton>
+                          </Button>
+                        </InstallButton>
+                      </SentryApplicationRowButtons>
                     </div>
                   </Base>
                 </Box>
