commit cfd59fafc9c8d2a625c388ea884a5928c48aa9c1
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Dec 12 14:46:30 2017 -0800

    ref(project-settings): Convert project integrations collection page to React (#6680)

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index f95cda8856..e942f27bad 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -81,6 +81,7 @@ import ProjectSettings from './views/projectSettings';
 import ProjectSettingsLayout from './views/settings/project/projectSettingsLayout';
 import ProjectUserReportSettings from './views/projectUserReportSettings';
 import ProjectUserReports from './views/projectUserReports';
+import ProjectPlugins from './views/projectPlugins';
 import ReleaseAllEvents from './views/releaseAllEvents';
 import ReleaseArtifacts from './views/releaseArtifacts';
 import ReleaseCommits from './views/releases/releaseCommits';
@@ -292,6 +293,12 @@ const projectSettingsRoutes = [
     name="CSP Reports"
     component={errorHandler(ProjectCspSettings)}
   />,
+  <Route
+    key="plugins/"
+    path="plugins/"
+    name="Integrations"
+    component={errorHandler(ProjectPlugins)}
+  />,
   <Route
     key="install/"
     path="install/"
diff --git a/src/sentry/static/sentry/app/stores/indicatorStore.jsx b/src/sentry/static/sentry/app/stores/indicatorStore.jsx
index 480267a304..48983269d9 100644
--- a/src/sentry/static/sentry/app/stores/indicatorStore.jsx
+++ b/src/sentry/static/sentry/app/stores/indicatorStore.jsx
@@ -6,6 +6,14 @@ const IndicatorStore = Reflux.createStore({
     this.lastId = 0;
   },
 
+  addSuccess(message) {
+    return this.add(message, 'success', {duration: 2000});
+  },
+
+  addError(message = 'An error Occurred') {
+    return this.add(message, 'error', {duration: 2000});
+  },
+
   add(message, type, options) {
     options = options || {};
 
diff --git a/src/sentry/static/sentry/app/views/projectPlugins.jsx b/src/sentry/static/sentry/app/views/projectPlugins.jsx
new file mode 100644
index 0000000000..3b1426ed65
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectPlugins.jsx
@@ -0,0 +1,102 @@
+import React from 'react';
+import AsyncView from './asyncView';
+import {t} from '../locale';
+import ExternalLink from '../components/externalLink';
+import Checkbox from '../components/checkbox';
+import IndicatorStore from '../stores/indicatorStore';
+
+export default class ProjectPlugins extends AsyncView {
+  getTitle() {
+    return 'Project Integration Settings';
+  }
+
+  getEndpoints() {
+    let {projectId, orgId} = this.props.params;
+    return [['plugins', `/projects/${orgId}/${projectId}/plugins/`]];
+  }
+
+  handleChange(pluginId, shouldEnable, idx) {
+    let {projectId, orgId} = this.props.params;
+
+    let method = shouldEnable ? 'POST' : 'DELETE';
+
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
+
+    this.api.request(`/projects/${orgId}/${projectId}/plugins/${pluginId}/`, {
+      method,
+      success: () => {
+        let plugins = this.state.plugins.slice();
+        plugins[idx].enabled = shouldEnable;
+        this.setState({
+          plugins,
+        });
+        IndicatorStore.addSuccess(
+          t(`Plugin was ${shouldEnable ? 'enabled' : 'disabled'}`)
+        );
+      },
+      error: () => {
+        IndicatorStore.addError(t('An error occurred'));
+      },
+      complete: () => IndicatorStore.remove(loadingIndicator),
+    });
+  }
+
+  renderBody() {
+    let {projectId, orgId} = this.props.params;
+
+    return (
+      <div>
+        <h2>{t('Integrations')}</h2>
+
+        <div className="panel panel-default">
+          <table className="table integrations simple">
+            <thead>
+              <tr>
+                <th colSpan={2}>{t('Integration')}</th>
+                <th className="align-right">{t('Enabled')}</th>
+              </tr>
+            </thead>
+            <tbody>
+              {this.state.plugins.map(
+                ({id, name, slug, version, author, hasConfiguration, enabled}, idx) => {
+                  return (
+                    <tr key={id} className={slug}>
+                      <td colSpan={2}>
+                        <div className={`icon-integration icon-${id}`} />
+                        <h5>
+                          {`${name} `}
+                          <span>{version ? `v${version}` : <em>{t('n/a')}</em>}</span>
+                        </h5>
+                        <p>
+                          {author && (
+                            <ExternalLink href={author.url}>{author.name}</ExternalLink>
+                          )}
+                          {hasConfiguration && (
+                            <span>
+                              {' '}
+                              &middot;{' '}
+                              <a href={`/${orgId}/${projectId}/settings/plugins/${id}`}>
+                                {t('Configure plugin')}
+                              </a>
+                            </span>
+                          )}
+                        </p>
+                      </td>
+                      <td className="align-right">
+                        <Checkbox
+                          name={slug}
+                          checked={enabled}
+                          onChange={evt => this.handleChange(id, !enabled, idx)}
+                        />
+                      </td>
+                    </tr>
+                  );
+                }
+              )}
+            </tbody>
+          </table>
+        </div>
+      </div>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index afb795dfc4..e85eba77c4 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -156,9 +156,9 @@ const ProjectSettings = React.createClass({
           </ul>
           <h6 className="nav-header">{t('Integrations')}</h6>
           <ul className="nav nav-stacked">
-            <li>
-              <a href={`${settingsUrlRoot}/plugins/`}>{t('All Integrations')}</a>
-            </li>
+            <ListLink to={`/${orgId}/${projectId}/settings/plugins/`}>
+              {t('All Integrations')}
+            </ListLink>
             {project.plugins.filter(p => p.enabled).map(plugin => {
               return (
                 <li key={plugin.id}>
diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index cb328b5ec0..82031c5d63 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -262,14 +262,14 @@
   {% with project|get_plugins as plugins %}
     <h6 class="nav-header">{% trans "Integrations" %}</h6>
     <ul class="nav nav-stacked">
-      <li class="{% if page == 'plugins' %} active{% endif %}">
-        <a href="{% url 'sentry-manage-project-plugins' project.organization.slug project.slug %}">{% trans "All Integrations" %}</a>
+      <li>
+        <a href="{% absolute_uri '/{}/{}/settings/plugins/' project.organization.slug project.slug %}">{% trans "All Integrations" %}</a>
       </li>
-    {% for p in plugins %}
-      <li{% if page == 'plugin' and plugin.slug == p.slug %} class="active"{% endif %}>
-          <a href="{% url 'sentry-configure-project-plugin' project.organization.slug project.slug p.slug %}">{{ p.get_title }}</a>
-      </li>
-    {% endfor %}
+      {% for p in plugins %}
+        <li{% if page == 'plugin' and plugin.slug == p.slug %} class="active"{% endif %}>
+            <a href="{% url 'sentry-configure-project-plugin' project.organization.slug project.slug p.slug %}">{{ p.get_title }}</a>
+        </li>
+      {% endfor %}
     </ul>
   {% endwith %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/projects/plugins/list.html b/src/sentry/templates/sentry/projects/plugins/list.html
deleted file mode 100644
index 4205e25a15..0000000000
--- a/src/sentry/templates/sentry/projects/plugins/list.html
+++ /dev/null
@@ -1,45 +0,0 @@
-{% extends "sentry/projects/manage.html" %}
-
-{% load i18n %}
-{% load sentry_helpers %}
-{% load sentry_plugins %}
-
-{% block title %}{% trans "Manage Integrations" %} | {{ block.super }}{% endblock %}
-
-{% block main %}
-    <h2>{% trans "Integrations" %}</h2>
-
-    <form method="POST">
-        {% csrf_token %}
-        <div class="panel panel-default">
-          <table class="table integrations simple">
-              <thead>
-                  <th colspan="2">Integration</th>
-                  <th class="align-right">Enabled</th>
-              </thead>
-              <tbody>
-                  {% for plugin, is_enabled in project|get_plugins_with_status %}
-                      <tr class="{{ plugin.get_title|slugify }}">
-                          <td colspan="2">
-                              <div class="icon-integration icon-{{ plugin.slug }}"></div>
-                              <h5>{{ plugin.get_title }} {% if plugin.version %}<span>v{{ plugin.version }}</span>{% else %}<span><em>{% trans "n/a" %}</em></span>{% endif %}</h5>
-                              <p>
-                              {% if plugin.author %}
-                                  {% if plugin.author_url %}<a href="{{ plugin.author_url }}">{{ plugin.author }}</a>{% else %}{{ plugin.author }}{% endif %}
-                              {% endif %}
-                              {% if plugin.has_project_conf %} &middot; <a href="{% url 'sentry-configure-project-plugin' project.organization.slug project.slug plugin.slug %}">Configure plugin</a>{% endif %}
-                              </p>
-                          </td>
-                          <td class="align-right">
-                              <input type="checkbox" name="plugin" value="{{ plugin.slug }}"{% if is_enabled %} checked="checked"{% endif %}/>
-                          </td>
-                      </tr>
-                  {% endfor %}
-              </tbody>
-          </table>
-        </div>
-        <div class="form-actions" style="border: 0">
-            <input type="submit" class="btn btn-primary pull-right" value="Save Changes">
-        </div>
-    </form>
-{% endblock %}
diff --git a/src/sentry/web/frontend/project_plugins.py b/src/sentry/web/frontend/project_plugins.py
index 30451ad0ba..73aad3281b 100644
--- a/src/sentry/web/frontend/project_plugins.py
+++ b/src/sentry/web/frontend/project_plugins.py
@@ -24,9 +24,3 @@ class ProjectPluginsView(ProjectView):
             )
 
             return self.redirect(request.path)
-
-        context = {
-            'page': 'plugins',
-        }
-
-        return self.respond('sentry/projects/plugins/list.html', context)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 3abb79412b..1a5ddb5697 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -50,7 +50,6 @@ from sentry.web.frontend.project_plugin_configure import \
 from sentry.web.frontend.project_plugin_disable import ProjectPluginDisableView
 from sentry.web.frontend.project_plugin_enable import ProjectPluginEnableView
 from sentry.web.frontend.project_plugin_reset import ProjectPluginResetView
-from sentry.web.frontend.project_plugins import ProjectPluginsView
 from sentry.web.frontend.project_rule_edit import ProjectRuleEditView
 from sentry.web.frontend.project_settings import ProjectSettingsView
 from sentry.web.frontend.react_page import GenericReactPageView, ReactPageView
@@ -427,11 +426,6 @@ urlpatterns += patterns(
         ProjectIssueTrackingView.as_view(),
         name='sentry-project-issue-tracking'
     ),
-    url(
-        r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/settings/plugins/$',
-        ProjectPluginsView.as_view(),
-        name='sentry-manage-project-plugins'
-    ),
     url(
         r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/settings/plugins/(?P<slug>[\w_-]+)/$',
         ProjectPluginConfigureView.as_view(),
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 20c2887465..30d9d4ad7b 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -209,6 +209,26 @@ window.TestStubs = {
   Tags: (...params) => {
     return [{key: 'browser', name: 'Browser'}, {key: 'device', name: 'Device'}];
   },
+  Plugins: (...params) => {
+    return [
+      {
+        author: {url: 'https://github.com/getsentry/sentry', name: 'Sentry Team'},
+        enabled: false,
+        id: 'amazon-sqs',
+        name: 'Amazon SQS',
+        slug: 'amazon-sqs',
+        version: '8.23.0.dev0',
+      },
+      {
+        author: {url: 'https://github.com/getsentry/sentry', name: 'Sentry Team'},
+        enabled: true,
+        id: 'github',
+        name: 'GitHub',
+        slug: 'github',
+        version: '8.23.0.dev0',
+      },
+    ];
+  },
 };
 
 // this is very commonly used, so expose it globally
diff --git a/tests/js/spec/views/__snapshots__/projectPlugins.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPlugins.spec.jsx.snap
new file mode 100644
index 0000000000..e3f1bfc37e
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/projectPlugins.spec.jsx.snap
@@ -0,0 +1,144 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ProjectPlugins renders 1`] = `
+<ProjectPlugins
+  params={
+    Object {
+      "orgId": "org-slug",
+      "projectId": "project-slug",
+    }
+  }
+>
+  <DocumentTitle
+    title="Project Integration Settings"
+  >
+    <div>
+      <h2>
+        Integrations
+      </h2>
+      <div
+        className="panel panel-default"
+      >
+        <table
+          className="table integrations simple"
+        >
+          <thead>
+            <tr>
+              <th
+                colSpan={2}
+              >
+                Integration
+              </th>
+              <th
+                className="align-right"
+              >
+                Enabled
+              </th>
+            </tr>
+          </thead>
+          <tbody>
+            <tr
+              className="amazon-sqs"
+            >
+              <td
+                colSpan={2}
+              >
+                <div
+                  className="icon-integration icon-amazon-sqs"
+                />
+                <h5>
+                  Amazon SQS 
+                  <span>
+                    v8.23.0.dev0
+                  </span>
+                </h5>
+                <p>
+                  <ExternalLink
+                    href="https://github.com/getsentry/sentry"
+                    rel="noreferrer noopener"
+                    target="_blank"
+                  >
+                    <a
+                      href="https://github.com/getsentry/sentry"
+                      rel="noreferrer noopener"
+                      target="_blank"
+                    >
+                      Sentry Team
+                    </a>
+                  </ExternalLink>
+                </p>
+              </td>
+              <td
+                className="align-right"
+              >
+                <Checkbox
+                  checked={false}
+                  name="amazon-sqs"
+                  onChange={[Function]}
+                >
+                  <input
+                    checked={false}
+                    className="chk-select"
+                    name="amazon-sqs"
+                    onChange={[Function]}
+                    type="checkbox"
+                  />
+                </Checkbox>
+              </td>
+            </tr>
+            <tr
+              className="github"
+            >
+              <td
+                colSpan={2}
+              >
+                <div
+                  className="icon-integration icon-github"
+                />
+                <h5>
+                  GitHub 
+                  <span>
+                    v8.23.0.dev0
+                  </span>
+                </h5>
+                <p>
+                  <ExternalLink
+                    href="https://github.com/getsentry/sentry"
+                    rel="noreferrer noopener"
+                    target="_blank"
+                  >
+                    <a
+                      href="https://github.com/getsentry/sentry"
+                      rel="noreferrer noopener"
+                      target="_blank"
+                    >
+                      Sentry Team
+                    </a>
+                  </ExternalLink>
+                </p>
+              </td>
+              <td
+                className="align-right"
+              >
+                <Checkbox
+                  checked={true}
+                  name="github"
+                  onChange={[Function]}
+                >
+                  <input
+                    checked={true}
+                    className="chk-select"
+                    name="github"
+                    onChange={[Function]}
+                    type="checkbox"
+                  />
+                </Checkbox>
+              </td>
+            </tr>
+          </tbody>
+        </table>
+      </div>
+    </div>
+  </DocumentTitle>
+</ProjectPlugins>
+`;
diff --git a/tests/js/spec/views/projectPlugins.spec.jsx b/tests/js/spec/views/projectPlugins.spec.jsx
new file mode 100644
index 0000000000..0778fc06cb
--- /dev/null
+++ b/tests/js/spec/views/projectPlugins.spec.jsx
@@ -0,0 +1,54 @@
+import React from 'react';
+import {mount} from 'enzyme';
+import ProjectPlugins from 'app/views/projectPlugins';
+
+describe('ProjectPlugins', function() {
+  let org, project, plugins, wrapper;
+
+  beforeEach(function() {
+    org = TestStubs.Organization();
+    project = TestStubs.Project();
+    plugins = TestStubs.Plugins();
+
+    MockApiClient.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/plugins/`,
+      method: 'GET',
+      body: plugins,
+    });
+    MockApiClient.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/plugins/amazon-sqs/`,
+      method: 'POST',
+    });
+    MockApiClient.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/plugins/github/`,
+      method: 'DELETE',
+    });
+    wrapper = mount(
+      <ProjectPlugins params={{orgId: org.slug, projectId: project.slug}} />,
+      {
+        context: {
+          router: TestStubs.router(),
+        },
+      }
+    );
+  });
+  it('renders', function() {
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('enables plugin', function() {
+    let checkbox = wrapper.find('input[name="amazon-sqs"]');
+
+    checkbox.simulate('change', {target: {checked: true}});
+
+    expect(checkbox.props().checked).toBe(true);
+  });
+
+  it('disables plugin', function() {
+    let checkbox = wrapper.find('input[name="github"]');
+
+    checkbox.simulate('change', {target: {checked: false}});
+
+    expect(checkbox.props().checked).toBe(false);
+  });
+});
diff --git a/tests/sentry/web/frontend/test_project_plugins.py b/tests/sentry/web/frontend/test_project_plugins.py
deleted file mode 100644
index df3edb4b8b..0000000000
--- a/tests/sentry/web/frontend/test_project_plugins.py
+++ /dev/null
@@ -1,47 +0,0 @@
-from __future__ import absolute_import
-
-from exam import fixture
-
-from django.core.urlresolvers import reverse
-
-from sentry.models import ProjectOption
-from sentry.testutils import TestCase
-
-
-class ManageProjectPluginsTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-manage-project-plugins', args=[
-            self.organization.slug, self.project.slug])
-
-    def test_requires_authentication(self):
-        self.assertRequiresAuthentication(self.path)
-
-    def test_renders_with_required_context(self):
-        self.login_as(self.user)
-
-        resp = self.client.get(self.path)
-        assert resp.status_code == 200
-        self.assertTemplateUsed('sentry/projects/plugins/manage.html')
-
-    def test_saves_settings(self):
-        self.login_as(self.user)
-
-        resp = self.client.post(self.path, {
-            'plugin': ['os', 'urls'],
-        })
-        assert resp.status_code == 302
-
-        opts = dict(
-            (p.key, p.value)
-            for p in ProjectOption.objects.filter(
-                project=self.project,
-                key__in=[
-                    'auto_tag:_operating_systems:enabled', 'auto_tag:_urls:enabled',
-                    'mail:enabled',
-                ],
-            ),
-        )
-        assert opts.get('auto_tag:_operating_systems:enabled') is True
-        assert opts.get('auto_tag:_urls:enabled') is True
-        assert opts.get('mail:enabled') is False
