commit 088a24d66bd2dc8c46881c35001bba3dc0b272ad
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Nov 15 02:04:38 2012 -0800

    Tests for .load

diff --git a/src/sentry/static/sentry/coffee/views.coffee b/src/sentry/static/sentry/coffee/views.coffee
index 75861167ca..18200aefb2 100644
--- a/src/sentry/static/sentry/coffee/views.coffee
+++ b/src/sentry/static/sentry/coffee/views.coffee
@@ -3,6 +3,8 @@ window.app = app = window.app || {}
 jQuery ->
 
     app.OrderedElementsView = class OrderedElementsView extends Backbone.View
+        emptyMessage: $('<p>There is nothing to show here.</p>');
+        loadingMessage: $('<p>Loading...</p>');
 
         initialize: (data) ->
             _.bindAll(@)
@@ -12,9 +14,9 @@ jQuery ->
             @$empty = $('<li class="empty"></li>')
             @loaded = data.members ? false
             if @loaded
-                @$empty.html('<p>There is nothing to show here.</p>')
+                @$empty.html(@emptyMessage)
             else
-                @$empty.html('<p>Loading ...</p>')
+                @$empty.html(@loadingMessage)
             @setEmpty()
             @$wrapper.html(@$parent)
 
@@ -35,7 +37,7 @@ jQuery ->
 
         load: (data) ->
             @loaded = true
-            @$empty.html('<p>There is nothing to show here.</p>')
+            @$empty.html(@emptyMessage)
             @extend(data) if data
 
         setEmpty: ->
diff --git a/src/sentry/static/sentry/scripts/site.js b/src/sentry/static/sentry/scripts/site.js
index 75607cb82e..de3ef1374f 100644
--- a/src/sentry/static/sentry/scripts/site.js
+++ b/src/sentry/static/sentry/scripts/site.js
@@ -433,6 +433,10 @@
         return OrderedElementsView.__super__.constructor.apply(this, arguments);
       }
 
+      OrderedElementsView.prototype.emptyMessage = $('<p>There is nothing to show here.</p>');
+
+      OrderedElementsView.prototype.loadingMessage = $('<p>Loading...</p>');
+
       OrderedElementsView.prototype.initialize = function(data) {
         var _ref, _ref1;
         _.bindAll(this);
@@ -441,9 +445,9 @@
         this.$empty = $('<li class="empty"></li>');
         this.loaded = (_ref = data.members) != null ? _ref : false;
         if (this.loaded) {
-          this.$empty.html('<p>There is nothing to show here.</p>');
+          this.$empty.html(this.emptyMessage);
         } else {
-          this.$empty.html('<p>Loading ...</p>');
+          this.$empty.html(this.loadingMessage);
         }
         this.setEmpty();
         this.$wrapper.html(this.$parent);
@@ -463,7 +467,7 @@
 
       OrderedElementsView.prototype.load = function(data) {
         this.loaded = true;
-        this.$empty.html('<p>There is nothing to show here.</p>');
+        this.$empty.html(this.emptyMessage);
         if (data) {
           return this.extend(data);
         }
diff --git a/tests/js/spec/OrderedElementsViewSpec.js b/tests/js/spec/OrderedElementsViewSpec.js
index d2f560f330..0dc8559909 100644
--- a/tests/js/spec/OrderedElementsViewSpec.js
+++ b/tests/js/spec/OrderedElementsViewSpec.js
@@ -33,10 +33,63 @@ describe("OrderedElementsView", function() {
     view.$parent = $('<ul></ul>');
   });
 
-  it("should suggest its loading", function() {
+  describe("with initial data", function() {
+
+  });
+
+  it("should suggest its not loaded", function() {
     expect(view.loaded).toBe(false);
   });
 
+  it("has status text to loading", function() {
+    expect(view.$empty.html()).toBe(view.loadingMessage.parent().html());
+  });
+
+  describe(".load", function() {
+
+    describe("with data", function(){
+      beforeEach(function(){
+        group1 = make_group({id: 1, score: 3});
+        view.extend = sinon.spy();
+        view.load([group1]);
+      });
+
+      it("calls extend with data", function() {
+        expect(view.extend.called).toBe(true);
+        expect(view.extend.calledWithExactly([group1])).toBe(true);
+      });
+
+      it("suggests its loaded", function() {
+        expect(view.loaded).toBe(true);
+      });
+
+      it("changes status text to empty", function() {
+        expect(view.$empty.html()).toBe(view.emptyMessage.parent().html());
+      });
+    });
+
+    describe("without data", function(){
+      beforeEach(function(){
+        group1 = make_group({id: 1, score: 3});
+        view.extend = sinon.spy();
+        view.load([]);
+      });
+
+      it("calls extend with data", function() {
+        expect(view.extend.called).toBe(true);
+        expect(view.extend.calledWithExactly([])).toBe(true);
+      });
+
+      it("suggests its loaded", function() {
+        expect(view.loaded).toBe(true);
+      });
+
+      it("changes status text to empty", function() {
+        expect(view.$empty.html()).toBe(view.emptyMessage.parent().html());
+      });
+    });
+  });
+
   describe(".extend", function() {
     it("calls addMember for each item", function() {
       group1 = make_group({id: 1, score: 3});
