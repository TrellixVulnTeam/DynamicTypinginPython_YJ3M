commit d6f3fc6ea0cbef4021941d342f84f78e5e274a85
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Jul 22 10:11:51 2019 -0700

    ref(onobarding): Remove old onboarding experience (#14066)

diff --git a/src/sentry/static/sentry/app/components/createProject.jsx b/src/sentry/static/sentry/app/components/createProject.jsx
index 07606b3dbc..187cb8f722 100644
--- a/src/sentry/static/sentry/app/components/createProject.jsx
+++ b/src/sentry/static/sentry/app/components/createProject.jsx
@@ -9,7 +9,6 @@ import {openCreateTeamModal} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
 import Alert from 'app/components/alert';
 import Button from 'app/components/button';
-import HookStore from 'app/stores/hookStore';
 import PageHeading from 'app/components/pageHeading';
 import PlatformIconTile from 'app/components/platformIconTile';
 import PlatformPicker from 'app/components/platformPicker';
@@ -28,12 +27,6 @@ class CreateProject extends React.Component {
     api: PropTypes.object,
     teams: PropTypes.arrayOf(SentryTypes.Team),
     organization: SentryTypes.Organization,
-    nextStepUrl: PropTypes.func,
-  };
-
-  static defaultProps = {
-    nextStepUrl: ({slug, projectSlug, platform}) =>
-      `/onboarding/${slug}/${projectSlug}/configure/${platform}`,
   };
 
   static contextTypes = {
@@ -61,7 +54,7 @@ class CreateProject extends React.Component {
 
   createProject = e => {
     e.preventDefault();
-    const {organization, api, nextStepUrl} = this.props;
+    const {organization, api} = this.props;
     const {projectName, platform, team} = this.state;
     const {slug} = organization;
 
@@ -71,7 +64,7 @@ class CreateProject extends React.Component {
       Sentry.withScope(scope => {
         scope.setExtra('props', this.props);
         scope.setExtra('state', this.state);
-        Sentry.captureMessage('Onboarding no project name');
+        Sentry.captureMessage('No project name');
       });
     }
 
@@ -84,19 +77,12 @@ class CreateProject extends React.Component {
       success: data => {
         ProjectActions.createSuccess(data);
 
-        const urlData = {
-          slug: organization.slug,
-          projectSlug: data.slug,
-          platform: platform || 'other',
-        };
-
-        const defaultNextUrl = nextStepUrl(urlData);
-        const hookNextUrl =
-          organization.projects.length === 0 &&
-          HookStore.get('utils:onboarding-survey-url').length &&
-          HookStore.get('utils:onboarding-survey-url')[0](urlData, organization);
+        const platformKey = platform || 'other';
+        const nextUrl = `/${organization.slug}/${
+          data.slug
+        }/getting-started/${platformKey}/`;
 
-        browserHistory.push(hookNextUrl || defaultNextUrl);
+        browserHistory.push(nextUrl);
       },
       error: err => {
         this.setState({
@@ -112,7 +98,7 @@ class CreateProject extends React.Component {
             scope.setExtra('err', err);
             scope.setExtra('props', this.props);
             scope.setExtra('state', this.state);
-            Sentry.captureMessage('Onboarding project creation failed');
+            Sentry.captureMessage('Project creation failed');
           });
         }
       },
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 0e1821aa7e..50b726e3ce 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -45,12 +45,6 @@ const OrganizationMembersView = HookOrDefault({
     import(/* webpackChunkName: "OrganizationMembers" */ 'app/views/settings/organizationMembers'),
 });
 
-const OnboardingNewProjectView = HookOrDefault({
-  hookName: 'component:onboarding-new-project',
-  defaultComponentPromise: () =>
-    import(/* webpackChunkName: "OnboardingNewProject" */ 'app/views/onboarding/newProject'),
-});
-
 function routes() {
   const accountSettingsRoutes = (
     <React.Fragment>
@@ -794,9 +788,7 @@ function routes() {
       />
 
       <Route path="/onboarding/:orgId/" component={errorHandler(OrganizationContext)}>
-        {/* The current (old) version of the onboarding experience does not
-            route to anything here. So even though this is new, the route can
-            live where it will eventually live. */}
+        <IndexRedirect to="welcome/" />
         <Route
           path=":step/"
           componentPromise={() =>
@@ -804,23 +796,6 @@ function routes() {
           }
           component={errorHandler(LazyLoad)}
         />
-        {/* TODO(epurkhiser): Old style onboarding experience routes. To be removed in the future */}
-        <Route
-          componentPromise={() =>
-            import(/* webpackChunkName: "OnboardingWizard" */ 'app/views/onboarding/wizard')
-          }
-          component={errorHandler(LazyLoad)}
-        >
-          <IndexRoute component={errorHandler(OnboardingNewProjectView)} />
-          <Route
-            path=":projectId/configure/:platform/"
-            componentPromise={() =>
-              import(/* webpackChunkName: "OnboardingConfigure" */ 'app/views/onboarding/configure')
-            }
-            component={errorHandler(LazyLoad)}
-          />
-          {hook('routes:onboarding')}
-        </Route>
       </Route>
       <Route component={errorHandler(OrganizationDetails)}>
         <Route path="/settings/" name="Settings" component={SettingsWrapper}>
diff --git a/src/sentry/static/sentry/app/stores/hookStore.jsx b/src/sentry/static/sentry/app/stores/hookStore.jsx
index 798fda08c0..51118181a5 100644
--- a/src/sentry/static/sentry/app/stores/hookStore.jsx
+++ b/src/sentry/static/sentry/app/stores/hookStore.jsx
@@ -6,7 +6,6 @@ const validHookNames = new Set([
   // Additional routes
   'routes',
   'routes:admin',
-  'routes:onboarding',
   'routes:organization',
   'routes:organization-root',
 
@@ -41,11 +40,7 @@ const validHookNames = new Set([
   'sidebar:item-label',
 
   // Onboarding experience
-  // TODO(epurkhiser): These all should become less getsentry specific
-  'utils:onboarding-survey-url',
-  'sidebar:onboarding-assets',
   'onboarding:invite-members',
-  'component:onboarding-new-project',
 
   // Used to provide a component for integration features.
   'integrations:feature-gates',
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure.jsx b/src/sentry/static/sentry/app/views/onboarding/configure.jsx
deleted file mode 100644
index 000dfad5aa..0000000000
--- a/src/sentry/static/sentry/app/views/onboarding/configure.jsx
+++ /dev/null
@@ -1,115 +0,0 @@
-import {browserHistory} from 'react-router';
-import React from 'react';
-import styled from 'react-emotion';
-
-import {t} from 'app/locale';
-import {trackAnalyticsEvent} from 'app/utils/analytics';
-import Button from 'app/components/button';
-import ProjectContext from 'app/views/projects/projectContext';
-import ProjectInstallPlatform from 'app/views/projectInstall/platform';
-import SentryTypes from 'app/sentryTypes';
-import withOrganization from 'app/utils/withOrganization';
-
-import CreateSampleEventButton from './createSampleEventButton';
-
-class Configure extends React.Component {
-  static propTypes = {
-    organization: SentryTypes.Organization,
-  };
-
-  state = {
-    hasSentRealEvent: false,
-  };
-
-  componentDidMount() {
-    const {organization, params} = this.props;
-
-    trackAnalyticsEvent({
-      eventKey: 'onboarding.configure_viewed',
-      eventName: 'Viewed Onboarding Installation Instructions',
-      organization_id: organization.id,
-      project: params.projectId,
-      platform: params.platform,
-    });
-
-    this.sentRealEvent();
-  }
-
-  get project() {
-    return this.props.organization.projects.find(
-      p => p.slug === this.props.params.projectId
-    );
-  }
-
-  sentRealEvent() {
-    const project = this.project;
-    let hasSentRealEvent = false;
-    if (project && project.firstEvent) {
-      hasSentRealEvent = true;
-    }
-    this.setState({hasSentRealEvent});
-  }
-
-  redirectUrl() {
-    const {orgId} = this.props.params;
-
-    const url = `/organizations/${orgId}/issues/#welcome`;
-    browserHistory.push(url);
-  }
-
-  submit = () => {
-    const {organization} = this.props;
-    const {projectId} = this.props.params;
-
-    trackAnalyticsEvent({
-      eventKey: 'onboarding.complete',
-      eventName: 'Completed Onboarding Installation Instructions',
-      organization_id: organization.id,
-      projectId,
-    });
-    this.redirectUrl();
-  };
-
-  render() {
-    const {orgId, projectId} = this.props.params;
-    const {hasSentRealEvent} = this.state;
-
-    return (
-      <div>
-        <div className="onboarding-Configure">
-          <h2 style={{marginBottom: 30}}>
-            {t('Configure your application')}
-            {!hasSentRealEvent && (
-              <div className="pull-right">
-                <CreateSampleEventButton project={this.project} source="header">
-                  {t('Or Create a Sample Event')}
-                </CreateSampleEventButton>
-              </div>
-            )}
-          </h2>
-          <ProjectContext projectId={projectId} orgId={orgId} style={{marginBottom: 30}}>
-            <ProjectInstallPlatform params={this.props.params} />
-          </ProjectContext>
-          <DoneButton>
-            <Button
-              priority="primary"
-              data-test-id="configure-done"
-              onClick={this.submit}
-            >
-              {t('All done!')}
-            </Button>
-          </DoneButton>
-        </div>
-      </div>
-    );
-  }
-}
-
-const DoneButton = styled('div')`
-  display: grid;
-  grid-template-columns: max-content;
-  place-content: end;
-  margin-bottom: 20px;
-`;
-
-export default withOrganization(Configure);
diff --git a/src/sentry/static/sentry/app/views/onboarding/newProject.jsx b/src/sentry/static/sentry/app/views/onboarding/newProject.jsx
deleted file mode 100644
index dfc43432d0..0000000000
--- a/src/sentry/static/sentry/app/views/onboarding/newProject.jsx
+++ /dev/null
@@ -1,14 +0,0 @@
-import React from 'react';
-
-import CreateProject from 'app/components/createProject';
-
-const NewProject = props => (
-  <CreateProject
-    {...props}
-    nextStepUrl={({slug, projectSlug, platform}) =>
-      `/onboarding/${slug}/${projectSlug}/configure/${platform}/`
-    }
-  />
-);
-
-export default NewProject;
diff --git a/src/sentry/static/sentry/app/views/onboarding/platform.jsx b/src/sentry/static/sentry/app/views/onboarding/platform.jsx
index 7d4ce63b5d..0850c32c9e 100644
--- a/src/sentry/static/sentry/app/views/onboarding/platform.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/platform.jsx
@@ -46,7 +46,7 @@ class OnboardingPlatform extends React.Component {
     progressing: false,
   };
 
-  componentDidUpdate(prevProps, prevState) {
+  componentDidUpdate(prevProps) {
     if (prevProps.active && !this.props.active) {
       // eslint-disable-next-line react/no-did-update-set-state
       this.setState({progressing: false});
@@ -144,6 +144,7 @@ class OnboardingPlatform extends React.Component {
           setPlatform={this.handleSetPlatform}
         />
         <Button
+          data-test-id="platform-select-next"
           priority="primary"
           disabled={continueDisabled}
           onClick={this.handleContinue}
diff --git a/src/sentry/static/sentry/app/views/onboarding/progress.jsx b/src/sentry/static/sentry/app/views/onboarding/progress.jsx
deleted file mode 100644
index 085c5baab6..0000000000
--- a/src/sentry/static/sentry/app/views/onboarding/progress.jsx
+++ /dev/null
@@ -1,138 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import styled from 'react-emotion';
-
-import {onboardingSteps, stepDescriptions} from 'app/views/onboarding/utils';
-import {trackAnalyticsEvent} from 'app/utils/analytics';
-import ConfigStore from 'app/stores/configStore';
-import HookStore from 'app/stores/hookStore';
-import InlineSvg from 'app/components/inlineSvg';
-import space from 'app/styles/space';
-
-const ProgressNodes = createReactClass({
-  displayName: 'ProgressNodes',
-
-  propTypes: {
-    params: PropTypes.object,
-  },
-
-  contextTypes: {
-    organization: PropTypes.object,
-    location: PropTypes.object,
-  },
-
-  componentDidMount() {
-    const {organization} = this.context;
-    const step = this.inferStep();
-
-    if (step === 1) {
-      trackAnalyticsEvent({
-        eventKey: 'onboarding.create_project_viewed',
-        eventName: 'Viewed Onboarding Create Project',
-        organization_id: organization.id,
-      });
-    }
-  },
-
-  steps: Object.keys(onboardingSteps),
-
-  getAsset(type) {
-    const {organization} = this.context;
-
-    const hook =
-      HookStore.get('sidebar:onboarding-assets').length &&
-      HookStore.get('sidebar:onboarding-assets')[0]({organization});
-
-    let asset, hookAsset;
-    if (type === 'steps') {
-      asset = onboardingSteps;
-      hookAsset = hook[0];
-    } else {
-      asset = stepDescriptions;
-      hookAsset = hook[1];
-    }
-
-    return hook ? hookAsset : asset;
-  },
-
-  inferStep() {
-    const {pathname} = this.context.location;
-    const {params} = this.props;
-    const steps = this.getAsset('steps');
-
-    if (!params.projectId) {
-      return steps.project;
-    }
-    if (params.projectId && pathname.indexOf('/configure/') === -1) {
-      return steps.survey;
-    }
-
-    return steps.configure;
-  },
-
-  node(stepKey, stepIndex) {
-    const done = stepIndex < this.inferStep();
-    const active = stepIndex === this.inferStep();
-    const descriptions = this.getAsset('descriptions');
-
-    return (
-      <Node key={stepIndex} done={done} active={active} data-test-id="node">
-        <NodeIcon src={done ? 'icon-circle-check' : 'icon-circle-empty'} />
-        <NodeDescription data-test-id="node-description">
-          {descriptions[stepKey]}
-        </NodeDescription>
-      </Node>
-    );
-  },
-
-  render() {
-    const config = ConfigStore.getConfig();
-    const {slug} = this.context.organization;
-    const steps = Object.keys(this.getAsset('steps'));
-    return (
-      <div className="onboarding-sidebar">
-        <div className="sentry-flag">
-          <span href="/" className="icon-sentry-logo-full" />
-        </div>
-        <React.Fragment>{steps.map(this.node)}</React.Fragment>
-        <div className="stuck">
-          <a
-            href={
-              !config.isOnPremise
-                ? `/organizations/${slug}/support/`
-                : 'https://forum.sentry.io/'
-            }
-          >
-            <p> Stuck?</p>
-            <p> Ask for help</p>
-          </a>
-        </div>
-      </div>
-    );
-  },
-});
-
-const Node = styled('div')`
-  display: flex;
-  align-items: center;
-  width: 220px;
-  margin: auto;
-  margin-bottom: ${space(4)};
-  color: ${p => (p.active ? '#fff' : p.theme.gray2)};
-  font-weight: ${p => (p.active ? 600 : 400)};
-`;
-
-const NodeIcon = styled(InlineSvg)`
-  position: relative;
-  margin-right: ${space(1.5)};
-  width: 22px;
-  height: 22px;
-`;
-
-const NodeDescription = styled('div')`
-  flex: 1;
-  line-height: 1.2;
-`;
-
-export default ProgressNodes;
diff --git a/src/sentry/static/sentry/app/views/onboarding/projectSetup/index.jsx b/src/sentry/static/sentry/app/views/onboarding/projectSetup/index.jsx
index 60d9bae435..123150723c 100644
--- a/src/sentry/static/sentry/app/views/onboarding/projectSetup/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/projectSetup/index.jsx
@@ -6,6 +6,7 @@ import {stepPropTypes} from 'app/views/onboarding/wizardNew';
 import {t} from 'app/locale';
 import HookOrDefault from 'app/components/hookOrDefault';
 import SentryTypes from 'app/sentryTypes';
+import testablePose from 'app/utils/testablePose';
 import withOrganization from 'app/utils/withOrganization';
 
 import InviteMembers from './inviteMembers';
@@ -92,10 +93,12 @@ class OnboardingProjectSetup extends React.Component {
   }
 }
 
-const PosedChoice = posed.div({
-  choiceInit: {opacity: 0, x: -20},
-  choiceEnter: {opacity: 1, x: 0},
-  choiceExit: {opacity: 0, x: 20},
-});
+const PosedChoice = posed.div(
+  testablePose({
+    choiceInit: {opacity: 0, x: -20},
+    choiceEnter: {opacity: 1, x: 0},
+    choiceExit: {opacity: 0, x: 20},
+  })
+);
 
 export default withOrganization(OnboardingProjectSetup);
diff --git a/src/sentry/static/sentry/app/views/onboarding/projectSetup/setupChoices.jsx b/src/sentry/static/sentry/app/views/onboarding/projectSetup/setupChoices.jsx
index 67841ce94a..a48ab8fa3b 100644
--- a/src/sentry/static/sentry/app/views/onboarding/projectSetup/setupChoices.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/projectSetup/setupChoices.jsx
@@ -13,6 +13,7 @@ const SetupChoices = ({choices, selectedChoice, onSelect}) => (
       <li key={id} className={id === selectedChoice ? 'active' : null}>
         <a
           href="#"
+          data-test-id={`onboarding-getting-started-${id}`}
           onClick={e => {
             onSelect(id);
             e.preventDefault();
diff --git a/src/sentry/static/sentry/app/views/onboarding/styles.jsx b/src/sentry/static/sentry/app/views/onboarding/styles.jsx
deleted file mode 100644
index a54c2c1e0a..0000000000
--- a/src/sentry/static/sentry/app/views/onboarding/styles.jsx
+++ /dev/null
@@ -1,35 +0,0 @@
-import styled from 'react-emotion';
-import posed from 'react-pose';
-
-import space from 'app/styles/space';
-
-const PosedOnboardingStep = posed.div({
-  start: {opacity: 0, y: 100},
-  enter: {opacity: 1, y: 0},
-});
-
-export const OnboardingStep = styled(PosedOnboardingStep)`
-  margin-left: -20px;
-  padding-left: 18px;
-  border-left: 2px solid ${p => p.theme.borderLighter};
-  counter-increment: step;
-  position: relative;
-
-  &:before {
-    content: counter(step);
-    position: absolute;
-    display: flex;
-    align-items: center;
-    justify-content: center;
-    width: 20px;
-    height: 20px;
-    left: -20px;
-    background-color: ${p => p.theme.gray5};
-    color: #fff;
-    font-size: 1.5rem;
-  }
-
-  &:not(:last-child) {
-    margin-bottom: ${space(4)};
-  }
-`;
diff --git a/src/sentry/static/sentry/app/views/onboarding/utils.js b/src/sentry/static/sentry/app/views/onboarding/utils.js
deleted file mode 100644
index 97bc0e46b5..0000000000
--- a/src/sentry/static/sentry/app/views/onboarding/utils.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import {t} from 'app/locale';
-
-const onboardingSteps = {organization: 0, project: 1, configure: 2};
-
-const stepDescriptions = {
-  organization: t('Create an organization in Sentry'),
-  project: t('Tell us about your project'),
-  configure: t('Send an event from your application'),
-};
-
-export {onboardingSteps, stepDescriptions};
diff --git a/src/sentry/static/sentry/app/views/onboarding/welcome.jsx b/src/sentry/static/sentry/app/views/onboarding/welcome.jsx
index 7ff43f6c21..7d2307076b 100644
--- a/src/sentry/static/sentry/app/views/onboarding/welcome.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/welcome.jsx
@@ -20,7 +20,7 @@ class OnboardingWelcome extends React.Component {
     config: SentryTypes.Config.isRequired,
   };
 
-  skipOnboarding = e => {
+  skipOnboarding = () => {
     const {organization} = this.props;
     recordAnalyticsOnboardingSkipped({organization});
   };
@@ -53,7 +53,12 @@ class OnboardingWelcome extends React.Component {
           </li>
         </ul>
         <ActionGroup>
-          <Button disabled={!active} priority="primary" onClick={e => onComplete()}>
+          <Button
+            data-test-id="welcome-next"
+            disabled={!active}
+            priority="primary"
+            onClick={() => onComplete()}
+          >
             {t("I'm Ready!")}
           </Button>
           <SecondaryAction>
diff --git a/src/sentry/static/sentry/app/views/onboarding/wizard.jsx b/src/sentry/static/sentry/app/views/onboarding/wizard.jsx
deleted file mode 100644
index 0648078bf0..0000000000
--- a/src/sentry/static/sentry/app/views/onboarding/wizard.jsx
+++ /dev/null
@@ -1,35 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import DocumentTitle from 'react-document-title';
-import styled from 'react-emotion';
-
-import ProgressNodes from 'app/views/onboarding/progress';
-
-class OnboardingWizard extends React.Component {
-  static contextTypes = {
-    organization: PropTypes.object,
-  };
-
-  render() {
-    return (
-      <OnboardingBackground>
-        <div className="onboarding-container">
-          <DocumentTitle title="Sentry" />
-          <div className="step-container">
-            <ProgressNodes params={this.props.params} />
-            <div>{this.props.children}</div>
-          </div>
-        </div>
-      </OnboardingBackground>
-    );
-  }
-}
-
-const OnboardingBackground = styled('div')`
-  width: 100%;
-  height: 100%;
-  min-height: 100vh;
-  background: #fff;
-`;
-
-export default OnboardingWizard;
diff --git a/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx b/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx
index 52e2e329ba..4b5b70648f 100644
--- a/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx
@@ -155,6 +155,7 @@ class OnboardingWizard extends React.Component {
     return visibleSteps.map((step, index) => (
       <OnboardingStep
         key={step.id}
+        data-test-id={`onboarding-step-${step.id}`}
         onPoseComplete={this.scrollToActiveStep}
         active={activeStepIndex === index}
       >
diff --git a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
index 1083a9ccc5..49f3650522 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
@@ -3,29 +3,19 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import CreateProject from 'app/components/createProject';
-import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
-import withOrganization from 'app/utils/withOrganization';
 
-const NewProject = ({organization}) => (
+const NewProject = () => (
   <Container>
     <div className="container">
       <Content>
         <DocumentTitle title="Sentry" />
-        <CreateProject
-          nextStepUrl={({slug, projectSlug, platform}) =>
-            `/${slug}/${projectSlug}/getting-started/${platform}/`
-          }
-        />
+        <CreateProject />
       </Content>
     </div>
   </Container>
 );
 
-NewProject.propTypes = {
-  organization: SentryTypes.Organization.isRequired,
-};
-
 const Container = styled('div')`
   flex: 1;
   background: #fff;
@@ -36,4 +26,4 @@ const Content = styled('div')`
   margin-top: ${space(3)};
 `;
 
-export default withOrganization(NewProject);
+export default NewProject;
diff --git a/src/sentry/static/sentry/less/onboarding.less b/src/sentry/static/sentry/less/onboarding.less
deleted file mode 100644
index 56bbe6aa57..0000000000
--- a/src/sentry/static/sentry/less/onboarding.less
+++ /dev/null
@@ -1,112 +0,0 @@
-@onboarding-sidebar-width: 300px;
-
-.onboarding-container {
-  margin-left: @onboarding-sidebar-width;
-
-  max-width: 800px + @onboarding-sidebar-width;
-  margin-top: 30px;
-
-  @media (max-width: @screen-sm-max) {
-    margin-left: 0;
-  }
-
-  .step-container {
-    padding: 0 40px;
-  }
-
-  // Awaiting event
-
-  .awaiting-event {
-    background: rgba(255, 255, 255, 0.9);
-    box-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);
-    padding: 20px 0;
-    position: sticky;
-    bottom: 0;
-    .clearfix;
-  }
-
-  .wrap {
-    position: relative;
-  }
-
-  .waiting-text {
-    padding-right: 10px;
-    padding-left: 80px;
-    position: relative;
-    margin-right: 200px;
-
-    h3 {
-      margin: 5px 0 0;
-    }
-  }
-
-  .robot {
-    position: absolute;
-    left: 0;
-    top: -30px;
-    padding-bottom: 5px;
-    width: 70px;
-    height: 82px;
-    background: url(../images/sentry-robot.png);
-    background-size: cover;
-
-    .eye {
-      display: block;
-      .square(4px);
-      border-radius: 6px;
-      position: absolute;
-      top: 21px;
-      left: 26px;
-      transform: translateZ(0);
-
-      -webkit-animation: blink-eye 0.6s infinite;
-      -moz-animation: blink-eye 0.6s infinite;
-      -o-animation: blink-eye 0.6s infinite;
-      animation: blink-eye 0.6s infinite;
-    }
-  }
-
-  .onboarding-sidebar {
-    width: 300px;
-    height: 100%;
-    position: fixed;
-    z-index: 10000;
-    top: 0;
-    left: 0;
-    color: whitesmoke;
-    background: url(../images/sentry-pattern-dark.png);
-    background-color: #3b3247;
-    background-size: 400px;
-
-    @media (max-width: @screen-sm-max) {
-      display: none;
-    }
-
-    .sentry-flag {
-      font-size: 24px;
-      line-height: 1;
-      width: 150px;
-      margin: 30px 0px;
-      background-color: #e03e2f;
-      padding: 14px 20px 11px;
-    }
-
-    .stuck {
-      position: absolute;
-      bottom: 0px;
-      text-align: center;
-      width: 100%;
-      padding: 20px;
-      p,
-      a {
-        margin: 0;
-        color: @40;
-      }
-
-      &:hover p,
-      a {
-        color: @30;
-      }
-    }
-  }
-}
diff --git a/src/sentry/static/sentry/less/sentry.less b/src/sentry/static/sentry/less/sentry.less
index eaf7029a5a..ea52742ed6 100644
--- a/src/sentry/static/sentry/less/sentry.less
+++ b/src/sentry/static/sentry/less/sentry.less
@@ -42,4 +42,3 @@
 @import url('./group-similar.less');
 @import url('./component-layouts');
 @import url('./queryCount.less');
-@import url('./onboarding.less');
diff --git a/tests/acceptance/test_onboarding.py b/tests/acceptance/test_onboarding.py
index 2dbc3dbe45..1fc5fd1f90 100644
--- a/tests/acceptance/test_onboarding.py
+++ b/tests/acceptance/test_onboarding.py
@@ -23,27 +23,35 @@ class OrganizationOnboardingTest(AcceptanceTestCase):
         )
         self.login_as(self.user)
 
-    @mock.patch('sentry.models.ProjectKey.generate_api_key',
-                return_value='031667ea1758441f92c7995a428d2d14')
+    @mock.patch('sentry.models.ProjectKey.generate_api_key', return_value='test-dsn')
     def test_onboarding(self, generate_api_key):
         self.browser.get('/onboarding/%s/' % self.org.slug)
-        self.browser.wait_until('.onboarding-container')
-        self.browser.wait_until_not('.loading-indicator')
-        self.browser.snapshot(name='onboarding-choose-platform')
 
-        self.browser.click('[data-test-id="platform-javascript-angular"]')
-        self.browser.click('[data-test-id="create-project"]')
+        # Welcome step
+        self.browser.wait_until('[data-test-id="onboarding-step-welcome"]')
+        self.browser.snapshot(name='onboarding - welcome')
 
-        self.browser.wait_until('.onboarding-Configure')
-        self.browser.wait_until_not('.loading-indicator')
+        # Platform selection step
+        self.browser.click('[data-test-id="welcome-next"]')
+        self.browser.wait_until('[data-test-id="onboarding-step-select-platform"]')
 
+        self.browser.snapshot(name='onboarding - select platform')
+
+        # Select and create node JS project
+        self.browser.click('[data-test-id="platform-node"]')
+        self.browser.click('[data-test-id="platform-select-next"]')
+
+        # Project getting started
+        self.browser.wait_until('[data-test-id="onboarding-step-get-started"]')
+        self.browser.snapshot(name='onboarding - get started')
+
+        # Verify project was created for org
         project = Project.objects.get(organization=self.org)
-        assert project.name == 'Angular'
-        assert project.platform == 'javascript-angular'
+        assert project.name == 'rowdy-tiger'
+        assert project.platform == 'node'
 
-        self.browser.snapshot(name='onboarding-configure-project')
-        self.browser.click('[data-test-id="configure-done"]')
-        self.browser.wait_until_not('.loading-indicator')
+        self.browser.click('[data-test-id="onboarding-getting-started-invite-members"]')
+        self.browser.snapshot(name='onboarding - invite members')
 
-        assert self.browser.element_exists('.robot')
-        assert self.browser.element_exists_by_test_id('install-instructions')
+        self.browser.click('[data-test-id="onboarding-getting-started-learn-more"]')
+        self.browser.snapshot(name='onboarding - learn more')
diff --git a/tests/js/spec/components/__snapshots__/createProject.spec.jsx.snap b/tests/js/spec/components/__snapshots__/createProject.spec.jsx.snap
index bbfac31363..401f1fa426 100644
--- a/tests/js/spec/components/__snapshots__/createProject.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/createProject.spec.jsx.snap
@@ -98,7 +98,6 @@ exports[`CreateProject should deal with incorrect platform name if its provided
       "query": Object {},
     }
   }
-  nextStepUrl={[Function]}
   organization={
     Object {
       "access": Array [
@@ -1679,7 +1678,6 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
       "query": Object {},
     }
   }
-  nextStepUrl={[Function]}
   organization={
     Object {
       "access": Array [
@@ -2669,7 +2667,6 @@ exports[`CreateProject should fill in project name if its empty when platform is
       "query": Object {},
     }
   }
-  nextStepUrl={[Function]}
   organization={
     Object {
       "access": Array [
diff --git a/tests/js/spec/views/onboarding/__snapshots__/configure.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/configure.spec.jsx.snap
deleted file mode 100644
index a17a884fd5..0000000000
--- a/tests/js/spec/views/onboarding/__snapshots__/configure.spec.jsx.snap
+++ /dev/null
@@ -1,986 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`Configure should render correctly render() should render platform docs 1`] = `
-<WithOrganizationMockWrapper
-  api={Client {}}
-  next={[Function]}
-  params={
-    Object {
-      "orgId": "testOrg",
-      "platform": "node",
-      "projectId": "project-slug",
-    }
-  }
->
-  <Configure
-    api={Client {}}
-    next={[Function]}
-    organization={
-      Object {
-        "id": "1337",
-        "projects": Array [
-          Object {
-            "hasAccess": true,
-            "id": "testProject",
-            "isBookmarked": false,
-            "isMember": true,
-            "name": "Test Project",
-            "slug": "project-slug",
-            "teams": Array [
-              Object {
-                "hasAccess": true,
-                "id": "coolteam",
-                "slug": "coolteam",
-              },
-            ],
-          },
-        ],
-        "slug": "testOrg",
-        "teams": Array [
-          Object {
-            "hasAccess": true,
-            "id": "coolteam",
-            "projects": Array [
-              Object {
-                "id": "testProject",
-                "name": "Test Project",
-                "slug": "project-slug",
-              },
-            ],
-            "slug": "coolteam",
-          },
-        ],
-      }
-    }
-    params={
-      Object {
-        "orgId": "testOrg",
-        "platform": "node",
-        "projectId": "project-slug",
-      }
-    }
-  >
-    <div>
-      <div
-        className="onboarding-Configure"
-      >
-        <h2
-          style={
-            Object {
-              "marginBottom": 30,
-            }
-          }
-        >
-          Configure your application
-          <div
-            className="pull-right"
-          >
-            <withApi(WithOrganizationMockWrapper)
-              project={
-                Object {
-                  "hasAccess": true,
-                  "id": "testProject",
-                  "isBookmarked": false,
-                  "isMember": true,
-                  "name": "Test Project",
-                  "slug": "project-slug",
-                  "teams": Array [
-                    Object {
-                      "hasAccess": true,
-                      "id": "coolteam",
-                      "slug": "coolteam",
-                    },
-                  ],
-                }
-              }
-              source="header"
-            >
-              <WithOrganizationMockWrapper
-                api={Client {}}
-                project={
-                  Object {
-                    "hasAccess": true,
-                    "id": "testProject",
-                    "isBookmarked": false,
-                    "isMember": true,
-                    "name": "Test Project",
-                    "slug": "project-slug",
-                    "teams": Array [
-                      Object {
-                        "hasAccess": true,
-                        "id": "coolteam",
-                        "slug": "coolteam",
-                      },
-                    ],
-                  }
-                }
-                source="header"
-              >
-                <CreateSampleEventButton
-                  api={Client {}}
-                  organization={
-                    Object {
-                      "id": "1337",
-                      "projects": Array [
-                        Object {
-                          "hasAccess": true,
-                          "id": "testProject",
-                          "isBookmarked": false,
-                          "isMember": true,
-                          "name": "Test Project",
-                          "slug": "project-slug",
-                          "teams": Array [
-                            Object {
-                              "hasAccess": true,
-                              "id": "coolteam",
-                              "slug": "coolteam",
-                            },
-                          ],
-                        },
-                      ],
-                      "slug": "testOrg",
-                      "teams": Array [
-                        Object {
-                          "hasAccess": true,
-                          "id": "coolteam",
-                          "projects": Array [
-                            Object {
-                              "id": "testProject",
-                              "name": "Test Project",
-                              "slug": "project-slug",
-                            },
-                          ],
-                          "slug": "coolteam",
-                        },
-                      ],
-                    }
-                  }
-                  project={
-                    Object {
-                      "hasAccess": true,
-                      "id": "testProject",
-                      "isBookmarked": false,
-                      "isMember": true,
-                      "name": "Test Project",
-                      "slug": "project-slug",
-                      "teams": Array [
-                        Object {
-                          "hasAccess": true,
-                          "id": "coolteam",
-                          "slug": "coolteam",
-                        },
-                      ],
-                    }
-                  }
-                  source="header"
-                >
-                  <Button
-                    align="center"
-                    disabled={false}
-                    onClick={[Function]}
-                  >
-                    <StyledButton
-                      aria-disabled={false}
-                      aria-label="Or Create a Sample Event"
-                      disabled={false}
-                      onClick={[Function]}
-                      role="button"
-                    >
-                      <ForwardRef
-                        aria-disabled={false}
-                        aria-label="Or Create a Sample Event"
-                        className="css-1i9cddn-StyledButton-getColors e12ma6z0"
-                        disabled={false}
-                        onClick={[Function]}
-                        role="button"
-                      >
-                        <button
-                          aria-disabled={false}
-                          aria-label="Or Create a Sample Event"
-                          className="css-1i9cddn-StyledButton-getColors e12ma6z0"
-                          onClick={[Function]}
-                          role="button"
-                        >
-                          <ButtonLabel
-                            align="center"
-                          >
-                            <Component
-                              align="center"
-                              className="css-oo1m2a-ButtonLabel e12ma6z1"
-                            >
-                              <span
-                                className="css-oo1m2a-ButtonLabel e12ma6z1"
-                              >
-                                Or Create a Sample Event
-                              </span>
-                            </Component>
-                          </ButtonLabel>
-                        </button>
-                      </ForwardRef>
-                    </StyledButton>
-                  </Button>
-                </CreateSampleEventButton>
-              </WithOrganizationMockWrapper>
-            </withApi(WithOrganizationMockWrapper)>
-          </div>
-        </h2>
-        <withApi(WithOrganizationMockWrapper)
-          orgId="testOrg"
-          projectId="project-slug"
-          style={
-            Object {
-              "marginBottom": 30,
-            }
-          }
-        >
-          <WithOrganizationMockWrapper
-            api={Client {}}
-            orgId="testOrg"
-            projectId="project-slug"
-            style={
-              Object {
-                "marginBottom": 30,
-              }
-            }
-          >
-            <withProjects(withRouter(ProjectContext))
-              api={Client {}}
-              orgId="testOrg"
-              organization={
-                Object {
-                  "id": "1337",
-                  "projects": Array [
-                    Object {
-                      "hasAccess": true,
-                      "id": "testProject",
-                      "isBookmarked": false,
-                      "isMember": true,
-                      "name": "Test Project",
-                      "slug": "project-slug",
-                      "teams": Array [
-                        Object {
-                          "hasAccess": true,
-                          "id": "coolteam",
-                          "slug": "coolteam",
-                        },
-                      ],
-                    },
-                  ],
-                  "slug": "testOrg",
-                  "teams": Array [
-                    Object {
-                      "hasAccess": true,
-                      "id": "coolteam",
-                      "projects": Array [
-                        Object {
-                          "id": "testProject",
-                          "name": "Test Project",
-                          "slug": "project-slug",
-                        },
-                      ],
-                      "slug": "coolteam",
-                    },
-                  ],
-                }
-              }
-              projectId="project-slug"
-              style={
-                Object {
-                  "marginBottom": 30,
-                }
-              }
-            >
-              <withRouter(ProjectContext)
-                api={Client {}}
-                orgId="testOrg"
-                organization={
-                  Object {
-                    "id": "1337",
-                    "projects": Array [
-                      Object {
-                        "hasAccess": true,
-                        "id": "testProject",
-                        "isBookmarked": false,
-                        "isMember": true,
-                        "name": "Test Project",
-                        "slug": "project-slug",
-                        "teams": Array [
-                          Object {
-                            "hasAccess": true,
-                            "id": "coolteam",
-                            "slug": "coolteam",
-                          },
-                        ],
-                      },
-                    ],
-                    "slug": "testOrg",
-                    "teams": Array [
-                      Object {
-                        "hasAccess": true,
-                        "id": "coolteam",
-                        "projects": Array [
-                          Object {
-                            "id": "testProject",
-                            "name": "Test Project",
-                            "slug": "project-slug",
-                          },
-                        ],
-                        "slug": "coolteam",
-                      },
-                    ],
-                  }
-                }
-                projectId="project-slug"
-                projects={
-                  Array [
-                    Object {
-                      "hasAccess": true,
-                      "id": "testProject",
-                      "isBookmarked": false,
-                      "isMember": true,
-                      "name": "Test Project",
-                      "slug": "project-slug",
-                      "teams": Array [
-                        Object {
-                          "hasAccess": true,
-                          "id": "coolid",
-                          "slug": "coolteam",
-                        },
-                      ],
-                    },
-                  ]
-                }
-                style={
-                  Object {
-                    "marginBottom": 30,
-                  }
-                }
-              >
-                <ProjectContext
-                  api={Client {}}
-                  location={
-                    Object {
-                      "query": Object {},
-                    }
-                  }
-                  orgId="testOrg"
-                  organization={
-                    Object {
-                      "id": "1337",
-                      "projects": Array [
-                        Object {
-                          "hasAccess": true,
-                          "id": "testProject",
-                          "isBookmarked": false,
-                          "isMember": true,
-                          "name": "Test Project",
-                          "slug": "project-slug",
-                          "teams": Array [
-                            Object {
-                              "hasAccess": true,
-                              "id": "coolteam",
-                              "slug": "coolteam",
-                            },
-                          ],
-                        },
-                      ],
-                      "slug": "testOrg",
-                      "teams": Array [
-                        Object {
-                          "hasAccess": true,
-                          "id": "coolteam",
-                          "projects": Array [
-                            Object {
-                              "id": "testProject",
-                              "name": "Test Project",
-                              "slug": "project-slug",
-                            },
-                          ],
-                          "slug": "coolteam",
-                        },
-                      ],
-                    }
-                  }
-                  projectId="project-slug"
-                  projects={
-                    Array [
-                      Object {
-                        "hasAccess": true,
-                        "id": "testProject",
-                        "isBookmarked": false,
-                        "isMember": true,
-                        "name": "Test Project",
-                        "slug": "project-slug",
-                        "teams": Array [
-                          Object {
-                            "hasAccess": true,
-                            "id": "coolid",
-                            "slug": "coolteam",
-                          },
-                        ],
-                      },
-                    ]
-                  }
-                  router={
-                    Object {
-                      "createHref": [MockFunction],
-                      "go": [MockFunction],
-                      "goBack": [MockFunction],
-                      "goForward": [MockFunction],
-                      "isActive": [MockFunction],
-                      "listen": [MockFunction],
-                      "location": Object {
-                        "query": Object {},
-                      },
-                      "push": [MockFunction],
-                      "replace": [MockFunction],
-                      "setRouteLeaveHook": [MockFunction],
-                    }
-                  }
-                  style={
-                    Object {
-                      "marginBottom": 30,
-                    }
-                  }
-                >
-                  <SideEffect(DocumentTitle)
-                    title="project-slug"
-                  >
-                    <DocumentTitle
-                      title="project-slug"
-                    >
-                      <withApi(WithOrganizationMockWrapper)
-                        params={
-                          Object {
-                            "orgId": "testOrg",
-                            "platform": "node",
-                            "projectId": "project-slug",
-                          }
-                        }
-                      >
-                        <WithOrganizationMockWrapper
-                          api={Client {}}
-                          params={
-                            Object {
-                              "orgId": "testOrg",
-                              "platform": "node",
-                              "projectId": "project-slug",
-                            }
-                          }
-                        >
-                          <withProject(ProjectInstallPlatform)
-                            api={Client {}}
-                            organization={
-                              Object {
-                                "id": "1337",
-                                "projects": Array [
-                                  Object {
-                                    "hasAccess": true,
-                                    "id": "testProject",
-                                    "isBookmarked": false,
-                                    "isMember": true,
-                                    "name": "Test Project",
-                                    "slug": "project-slug",
-                                    "teams": Array [
-                                      Object {
-                                        "hasAccess": true,
-                                        "id": "coolteam",
-                                        "slug": "coolteam",
-                                      },
-                                    ],
-                                  },
-                                ],
-                                "slug": "testOrg",
-                                "teams": Array [
-                                  Object {
-                                    "hasAccess": true,
-                                    "id": "coolteam",
-                                    "projects": Array [
-                                      Object {
-                                        "id": "testProject",
-                                        "name": "Test Project",
-                                        "slug": "project-slug",
-                                      },
-                                    ],
-                                    "slug": "coolteam",
-                                  },
-                                ],
-                              }
-                            }
-                            params={
-                              Object {
-                                "orgId": "testOrg",
-                                "platform": "node",
-                                "projectId": "project-slug",
-                              }
-                            }
-                          >
-                            <ProjectInstallPlatform
-                              api={Client {}}
-                              organization={
-                                Object {
-                                  "id": "1337",
-                                  "projects": Array [
-                                    Object {
-                                      "hasAccess": true,
-                                      "id": "testProject",
-                                      "isBookmarked": false,
-                                      "isMember": true,
-                                      "name": "Test Project",
-                                      "slug": "project-slug",
-                                      "teams": Array [
-                                        Object {
-                                          "hasAccess": true,
-                                          "id": "coolteam",
-                                          "slug": "coolteam",
-                                        },
-                                      ],
-                                    },
-                                  ],
-                                  "slug": "testOrg",
-                                  "teams": Array [
-                                    Object {
-                                      "hasAccess": true,
-                                      "id": "coolteam",
-                                      "projects": Array [
-                                        Object {
-                                          "id": "testProject",
-                                          "name": "Test Project",
-                                          "slug": "project-slug",
-                                        },
-                                      ],
-                                      "slug": "coolteam",
-                                    },
-                                  ],
-                                }
-                              }
-                              params={
-                                Object {
-                                  "orgId": "testOrg",
-                                  "platform": "node",
-                                  "projectId": "project-slug",
-                                }
-                              }
-                              project={
-                                Object {
-                                  "environments": Array [],
-                                  "hasAccess": true,
-                                  "id": "2",
-                                  "isBookmarked": false,
-                                  "isMember": true,
-                                  "name": "Project Name",
-                                  "slug": "project-slug",
-                                  "teams": Array [],
-                                }
-                              }
-                            >
-                              <Panel>
-                                <Component
-                                  className="css-10qfvek-Panel e1laxa7d0"
-                                >
-                                  <div
-                                    className="css-10qfvek-Panel e1laxa7d0"
-                                  >
-                                    <PanelHeader
-                                      hasButtons={true}
-                                    >
-                                      <Component
-                                        className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
-                                        hasButtons={true}
-                                      >
-                                        <Flex
-                                          align="center"
-                                          className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
-                                          justify="space-between"
-                                        >
-                                          <Base
-                                            align="center"
-                                            className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
-                                            justify="space-between"
-                                          >
-                                            <div
-                                              className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
-                                              is={null}
-                                            >
-                                              Configure Node.js
-                                              <Flex>
-                                                <Base
-                                                  className="css-sncxrr"
-                                                >
-                                                  <div
-                                                    className="css-sncxrr"
-                                                    is={null}
-                                                  >
-                                                    <Box
-                                                      ml={1}
-                                                    >
-                                                      <Base
-                                                        className="css-re0chm"
-                                                        ml={1}
-                                                      >
-                                                        <div
-                                                          className="css-re0chm"
-                                                          is={null}
-                                                        >
-                                                          <Button
-                                                            align="center"
-                                                            disabled={false}
-                                                            href="/organizations/testOrg/projects/project-slug/getting-started/"
-                                                            size="small"
-                                                          >
-                                                            <StyledButton
-                                                              aria-disabled={false}
-                                                              aria-label="< Back"
-                                                              disabled={false}
-                                                              href="/organizations/testOrg/projects/project-slug/getting-started/"
-                                                              onClick={[Function]}
-                                                              role="button"
-                                                              size="small"
-                                                            >
-                                                              <ForwardRef
-                                                                aria-disabled={false}
-                                                                aria-label="< Back"
-                                                                className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                                disabled={false}
-                                                                href="/organizations/testOrg/projects/project-slug/getting-started/"
-                                                                onClick={[Function]}
-                                                                role="button"
-                                                                size="small"
-                                                              >
-                                                                <a
-                                                                  aria-disabled={false}
-                                                                  aria-label="< Back"
-                                                                  className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                                  href="/organizations/testOrg/projects/project-slug/getting-started/"
-                                                                  onClick={[Function]}
-                                                                  role="button"
-                                                                  size="small"
-                                                                >
-                                                                  <ButtonLabel
-                                                                    align="center"
-                                                                    size="small"
-                                                                  >
-                                                                    <Component
-                                                                      align="center"
-                                                                      className="css-1h693nz-ButtonLabel e12ma6z1"
-                                                                      size="small"
-                                                                    >
-                                                                      <span
-                                                                        className="css-1h693nz-ButtonLabel e12ma6z1"
-                                                                      >
-                                                                        &lt; Back
-                                                                      </span>
-                                                                    </Component>
-                                                                  </ButtonLabel>
-                                                                </a>
-                                                              </ForwardRef>
-                                                            </StyledButton>
-                                                          </Button>
-                                                        </div>
-                                                      </Base>
-                                                    </Box>
-                                                    <Box
-                                                      ml={1}
-                                                    >
-                                                      <Base
-                                                        className="css-re0chm"
-                                                        ml={1}
-                                                      >
-                                                        <div
-                                                          className="css-re0chm"
-                                                          is={null}
-                                                        >
-                                                          <Button
-                                                            align="center"
-                                                            disabled={false}
-                                                            external={true}
-                                                            href="https://docs.getsentry.com/hosted/clients/node/"
-                                                            size="small"
-                                                          >
-                                                            <StyledButton
-                                                              aria-disabled={false}
-                                                              aria-label="Full Documentation"
-                                                              disabled={false}
-                                                              external={true}
-                                                              href="https://docs.getsentry.com/hosted/clients/node/"
-                                                              onClick={[Function]}
-                                                              role="button"
-                                                              size="small"
-                                                            >
-                                                              <ForwardRef
-                                                                aria-disabled={false}
-                                                                aria-label="Full Documentation"
-                                                                className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                                disabled={false}
-                                                                external={true}
-                                                                href="https://docs.getsentry.com/hosted/clients/node/"
-                                                                onClick={[Function]}
-                                                                role="button"
-                                                                size="small"
-                                                              >
-                                                                <ForwardRef
-                                                                  aria-disabled={false}
-                                                                  aria-label="Full Documentation"
-                                                                  className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                                  href="https://docs.getsentry.com/hosted/clients/node/"
-                                                                  onClick={[Function]}
-                                                                  rel="noreferrer noopener"
-                                                                  role="button"
-                                                                  size="small"
-                                                                  target="_blank"
-                                                                >
-                                                                  <a
-                                                                    aria-disabled={false}
-                                                                    aria-label="Full Documentation"
-                                                                    className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                                    href="https://docs.getsentry.com/hosted/clients/node/"
-                                                                    onClick={[Function]}
-                                                                    rel="noreferrer noopener"
-                                                                    role="button"
-                                                                    size="small"
-                                                                    target="_blank"
-                                                                  >
-                                                                    <ButtonLabel
-                                                                      align="center"
-                                                                      size="small"
-                                                                    >
-                                                                      <Component
-                                                                        align="center"
-                                                                        className="css-1h693nz-ButtonLabel e12ma6z1"
-                                                                        size="small"
-                                                                      >
-                                                                        <span
-                                                                          className="css-1h693nz-ButtonLabel e12ma6z1"
-                                                                        >
-                                                                          Full Documentation
-                                                                        </span>
-                                                                      </Component>
-                                                                    </ButtonLabel>
-                                                                  </a>
-                                                                </ForwardRef>
-                                                              </ForwardRef>
-                                                            </StyledButton>
-                                                          </Button>
-                                                        </div>
-                                                      </Base>
-                                                    </Box>
-                                                  </div>
-                                                </Base>
-                                              </Flex>
-                                            </div>
-                                          </Base>
-                                        </Flex>
-                                      </Component>
-                                    </PanelHeader>
-                                    <PanelAlert
-                                      type="info"
-                                    >
-                                      <Component
-                                        className="css-e1otmf-PanelAlert e1wrupv90"
-                                        type="info"
-                                      >
-                                        <Alert
-                                          alignTop={false}
-                                          className="css-e1otmf-PanelAlert e1wrupv90"
-                                          icon="icon-circle-info"
-                                          iconSize="24px"
-                                          system={true}
-                                          type="info"
-                                        >
-                                          <AlertWrapper
-                                            alignTop={false}
-                                            className="ref-info css-e1otmf-PanelAlert e1wrupv90"
-                                            system={true}
-                                            type="info"
-                                          >
-                                            <div
-                                              className="ref-info e1wrupv90 css-omcr89-AlertWrapper-alertStyles-PanelAlert e1xb5l7j1"
-                                              type="info"
-                                            >
-                                              <StyledInlineSvg
-                                                size="24px"
-                                                src="icon-circle-info"
-                                              >
-                                                <InlineSvg
-                                                  className="css-1e3iblq-StyledInlineSvg e1xb5l7j0"
-                                                  size="24px"
-                                                  src="icon-circle-info"
-                                                >
-                                                  <StyledSvg
-                                                    className="css-1e3iblq-StyledInlineSvg e1xb5l7j0"
-                                                    height="24px"
-                                                    viewBox={Object {}}
-                                                    width="24px"
-                                                  >
-                                                    <svg
-                                                      className="e1xb5l7j0 css-lbx2sj-StyledSvg-StyledInlineSvg e2idor0"
-                                                      height="24px"
-                                                      viewBox={Object {}}
-                                                      width="24px"
-                                                    >
-                                                      <use
-                                                        href="#test"
-                                                        xlinkHref="#test"
-                                                      />
-                                                    </svg>
-                                                  </StyledSvg>
-                                                </InlineSvg>
-                                              </StyledInlineSvg>
-                                              <StyledTextBlock>
-                                                <Component
-                                                  className="css-1h3n7tg-TextBlock-StyledTextBlock e1xb5l7j2"
-                                                >
-                                                  <div
-                                                    className="css-1h3n7tg-TextBlock-StyledTextBlock e1xb5l7j2"
-                                                  >
-                                                    <span
-                                                      key="8"
-                                                    >
-                                                      <span
-                                                        key="0"
-                                                      >
-                                                        
-             This is a quick getting started guide. For in-depth instructions
-             on integrating Sentry with 
-                                                      </span>
-                                                      <span
-                                                        key="2"
-                                                      >
-                                                        Node.js
-                                                      </span>
-                                                      <span
-                                                        key="3"
-                                                      >
-                                                        , view
-             
-                                                      </span>
-                                                      <a
-                                                        href="https://docs.getsentry.com/hosted/clients/node/"
-                                                        key="5"
-                                                      >
-                                                        <span
-                                                          key="4"
-                                                        >
-                                                          our complete documentation
-                                                        </span>
-                                                      </a>
-                                                      <span
-                                                        key="6"
-                                                      >
-                                                        .
-            
-                                                      </span>
-                                                    </span>
-                                                  </div>
-                                                </Component>
-                                              </StyledTextBlock>
-                                            </div>
-                                          </AlertWrapper>
-                                        </Alert>
-                                      </Component>
-                                    </PanelAlert>
-                                    <PanelBody
-                                      direction="column"
-                                      disablePadding={false}
-                                      flex={false}
-                                    >
-                                      <div
-                                        className="css-8qprok-padding-textStyles"
-                                      >
-                                        <DocumentationWrapper
-                                          dangerouslySetInnerHTML={
-                                            Object {
-                                              "__html": undefined,
-                                            }
-                                          }
-                                        >
-                                          <div
-                                            className="css-1y7l4t-DocumentationWrapper e1w9lqpk0"
-                                            dangerouslySetInnerHTML={
-                                              Object {
-                                                "__html": undefined,
-                                              }
-                                            }
-                                          />
-                                        </DocumentationWrapper>
-                                      </div>
-                                    </PanelBody>
-                                  </div>
-                                </Component>
-                              </Panel>
-                            </ProjectInstallPlatform>
-                          </withProject(ProjectInstallPlatform)>
-                        </WithOrganizationMockWrapper>
-                      </withApi(WithOrganizationMockWrapper)>
-                    </DocumentTitle>
-                  </SideEffect(DocumentTitle)>
-                </ProjectContext>
-              </withRouter(ProjectContext)>
-            </withProjects(withRouter(ProjectContext))>
-          </WithOrganizationMockWrapper>
-        </withApi(WithOrganizationMockWrapper)>
-        <DoneButton>
-          <div
-            className="css-5mss3k-DoneButton e1f5fl7e0"
-          >
-            <Button
-              align="center"
-              data-test-id="configure-done"
-              disabled={false}
-              onClick={[Function]}
-              priority="primary"
-            >
-              <StyledButton
-                aria-disabled={false}
-                aria-label="All done!"
-                data-test-id="configure-done"
-                disabled={false}
-                onClick={[Function]}
-                priority="primary"
-                role="button"
-              >
-                <ForwardRef
-                  aria-disabled={false}
-                  aria-label="All done!"
-                  className="css-1qchtmp-StyledButton-getColors e12ma6z0"
-                  data-test-id="configure-done"
-                  disabled={false}
-                  onClick={[Function]}
-                  priority="primary"
-                  role="button"
-                >
-                  <button
-                    aria-disabled={false}
-                    aria-label="All done!"
-                    className="css-1qchtmp-StyledButton-getColors e12ma6z0"
-                    data-test-id="configure-done"
-                    onClick={[Function]}
-                    role="button"
-                  >
-                    <ButtonLabel
-                      align="center"
-                      priority="primary"
-                    >
-                      <Component
-                        align="center"
-                        className="css-oo1m2a-ButtonLabel e12ma6z1"
-                        priority="primary"
-                      >
-                        <span
-                          className="css-oo1m2a-ButtonLabel e12ma6z1"
-                        >
-                          All done!
-                        </span>
-                      </Component>
-                    </ButtonLabel>
-                  </button>
-                </ForwardRef>
-              </StyledButton>
-            </Button>
-          </div>
-        </DoneButton>
-      </div>
-    </div>
-  </Configure>
-</WithOrganizationMockWrapper>
-`;
diff --git a/tests/js/spec/views/onboarding/__snapshots__/progress.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/progress.spec.jsx.snap
deleted file mode 100644
index d45cfa4e69..0000000000
--- a/tests/js/spec/views/onboarding/__snapshots__/progress.spec.jsx.snap
+++ /dev/null
@@ -1,149 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`ProgressNodes render() should render step 0 if no projectId 1`] = `
-<div
-  className="onboarding-sidebar"
->
-  <div
-    className="sentry-flag"
-  >
-    <span
-      className="icon-sentry-logo-full"
-      href="/"
-    />
-  </div>
-  <Node
-    active={false}
-    data-test-id="node"
-    done={true}
-    key="0"
-  >
-    <NodeIcon
-      src="icon-circle-check"
-    />
-    <NodeDescription
-      data-test-id="node-description"
-    >
-      Create an organization in Sentry
-    </NodeDescription>
-  </Node>
-  <Node
-    active={true}
-    data-test-id="node"
-    done={false}
-    key="1"
-  >
-    <NodeIcon
-      src="icon-circle-empty"
-    />
-    <NodeDescription
-      data-test-id="node-description"
-    >
-      Tell us about your project
-    </NodeDescription>
-  </Node>
-  <Node
-    active={false}
-    data-test-id="node"
-    done={false}
-    key="2"
-  >
-    <NodeIcon
-      src="icon-circle-empty"
-    />
-    <NodeDescription
-      data-test-id="node-description"
-    >
-      Send an event from your application
-    </NodeDescription>
-  </Node>
-  <div
-    className="stuck"
-  >
-    <a
-      href="/organizations/testOrg/support/"
-    >
-      <p>
-         Stuck?
-      </p>
-      <p>
-         Ask for help
-      </p>
-    </a>
-  </div>
-</div>
-`;
-
-exports[`ProgressNodes render() should render step 1 if has projectId 1`] = `
-<div
-  className="onboarding-sidebar"
->
-  <div
-    className="sentry-flag"
-  >
-    <span
-      className="icon-sentry-logo-full"
-      href="/"
-    />
-  </div>
-  <Node
-    active={false}
-    data-test-id="node"
-    done={true}
-    key="0"
-  >
-    <NodeIcon
-      src="icon-circle-check"
-    />
-    <NodeDescription
-      data-test-id="node-description"
-    >
-      Create an organization in Sentry
-    </NodeDescription>
-  </Node>
-  <Node
-    active={false}
-    data-test-id="node"
-    done={true}
-    key="1"
-  >
-    <NodeIcon
-      src="icon-circle-check"
-    />
-    <NodeDescription
-      data-test-id="node-description"
-    >
-      Tell us about your project
-    </NodeDescription>
-  </Node>
-  <Node
-    active={true}
-    data-test-id="node"
-    done={false}
-    key="2"
-  >
-    <NodeIcon
-      src="icon-circle-empty"
-    />
-    <NodeDescription
-      data-test-id="node-description"
-    >
-      Send an event from your application
-    </NodeDescription>
-  </Node>
-  <div
-    className="stuck"
-  >
-    <a
-      href="/organizations/testOrg/support/"
-    >
-      <p>
-         Stuck?
-      </p>
-      <p>
-         Ask for help
-      </p>
-    </a>
-  </div>
-</div>
-`;
diff --git a/tests/js/spec/views/onboarding/__snapshots__/wizard.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/wizard.spec.jsx.snap
deleted file mode 100644
index 06fc647cd1..0000000000
--- a/tests/js/spec/views/onboarding/__snapshots__/wizard.spec.jsx.snap
+++ /dev/null
@@ -1,25 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`OnboardingWizard render() should render NotFound if no matching organization 1`] = `
-<OnboardingBackground>
-  <div
-    className="onboarding-container"
-  >
-    <SideEffect(DocumentTitle)
-      title="Sentry"
-    />
-    <div
-      className="step-container"
-    >
-      <ProgressNodes
-        params={
-          Object {
-            "orgId": "my-cool-org",
-          }
-        }
-      />
-      <div />
-    </div>
-  </div>
-</OnboardingBackground>
-`;
diff --git a/tests/js/spec/views/onboarding/configure.spec.jsx b/tests/js/spec/views/onboarding/configure.spec.jsx
deleted file mode 100644
index ff2a0711e1..0000000000
--- a/tests/js/spec/views/onboarding/configure.spec.jsx
+++ /dev/null
@@ -1,122 +0,0 @@
-import React from 'react';
-import {mount} from 'enzyme';
-
-import Configure from 'app/views/onboarding/configure';
-import ProjectsStore from 'app/stores/projectsStore';
-
-describe('Configure should render correctly', function() {
-  let organization, project, team;
-
-  beforeEach(function() {
-    MockApiClient.addMockResponse({
-      url: '/projects/testOrg/project-slug/',
-      body: TestStubs.Project(),
-    });
-    MockApiClient.addMockResponse({
-      url: '/projects/testOrg/project-slug/events/',
-      body: {},
-    });
-    MockApiClient.addMockResponse({
-      url: '/organizations/testOrg/users/',
-      body: [],
-    });
-    MockApiClient.addMockResponse({
-      url: '/projects/testOrg/project-slug/environments/',
-      body: [],
-    });
-    MockApiClient.addMockResponse({
-      url: '/projects/testOrg/project-slug/docs/node/',
-      body: {},
-    });
-    MockApiClient.addMockResponse({
-      url: '/projects/testOrg/project-slug/docs/other/',
-      body: {},
-    });
-    ProjectsStore.loadInitialData([
-      {
-        name: 'Test Project',
-        slug: 'project-slug',
-        id: 'testProject',
-        hasAccess: true,
-        isMember: true,
-        isBookmarked: false,
-        teams: [
-          {
-            slug: 'coolteam',
-            id: 'coolid',
-            hasAccess: true,
-          },
-        ],
-      },
-    ]);
-
-    project = {
-      name: 'Test Project',
-      slug: 'project-slug',
-      id: 'testProject',
-      hasAccess: true,
-      isBookmarked: false,
-      isMember: true,
-      teams: [
-        {
-          id: 'coolteam',
-          slug: 'coolteam',
-          hasAccess: true,
-        },
-      ],
-    };
-
-    team = {
-      id: 'coolteam',
-      slug: 'coolteam',
-      hasAccess: true,
-      projects: [
-        {
-          name: 'Test Project',
-          slug: 'project-slug',
-          id: 'testProject',
-        },
-      ],
-    };
-
-    organization = {
-      id: '1337',
-      slug: 'testOrg',
-      projects: [project],
-      teams: [team],
-    };
-  });
-
-  afterEach(function() {
-    ProjectsStore.loadInitialData([]);
-  });
-
-  afterAll(function() {
-    MockApiClient.clearMockResponses();
-  });
-
-  describe('render()', function() {
-    const baseProps = {
-      api: new MockApiClient(),
-      next: () => {},
-      params: {
-        projectId: 'project-slug',
-        orgId: 'testOrg',
-      },
-    };
-
-    it('should render platform docs', async function() {
-      const props = {...baseProps};
-      props.params.platform = 'node';
-
-      const wrapper = mount(
-        <Configure {...props} />,
-        TestStubs.routerContext([{organization}])
-      );
-
-      await tick();
-      wrapper.update();
-      expect(wrapper).toMatchSnapshot();
-    });
-  });
-});
diff --git a/tests/js/spec/views/onboarding/progress.spec.jsx b/tests/js/spec/views/onboarding/progress.spec.jsx
deleted file mode 100644
index 580a39341c..0000000000
--- a/tests/js/spec/views/onboarding/progress.spec.jsx
+++ /dev/null
@@ -1,74 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-
-import ProgressNodes from 'app/views/onboarding/progress';
-
-describe('ProgressNodes', function() {
-  describe('render()', function() {
-    const baseProps = {
-      params: {
-        projectId: '',
-      },
-    };
-
-    it('should render step 0 if no projectId', function() {
-      const baseContext = {
-        context: {
-          organization: {id: '1337', slug: 'testOrg', experiments: {}},
-          location: {pathname: 'http://onboarding/lol/', query: {}},
-        },
-      };
-      const wrapper = shallow(<ProgressNodes {...baseProps} />, baseContext);
-
-      expect(wrapper.find('[data-test-id="node"]')).toHaveLength(3);
-      expect(wrapper.find('[data-test-id="node"]').find({active: true})).toHaveLength(1);
-      expect(
-        wrapper
-          .find('[data-test-id="node"]')
-          .find({active: true})
-          .find('[data-test-id="node-description"]')
-          .children()
-          .text()
-      ).toEqual('Tell us about your project');
-
-      expect(wrapper.find('[data-test-id="node"]').find({done: true})).toHaveLength(1);
-
-      expect(wrapper).toMatchSnapshot();
-    });
-
-    it('should render step 1 if has projectId', function() {
-      const baseContext = {
-        context: {
-          organization: {id: '1337', slug: 'testOrg', experiments: {}},
-          location: {
-            pathname: 'http://onboarding/lol/projectSlug/configure/platform/',
-            query: {},
-          },
-        },
-      };
-      const props = {
-        ...baseProps,
-        params: {
-          projectId: 'my-cool-project',
-        },
-      };
-
-      const wrapper = shallow(<ProgressNodes {...props} />, baseContext);
-
-      expect(wrapper.find('[data-test-id="node"]')).toHaveLength(3);
-      expect(wrapper.find('[data-test-id="node"]').find({active: true})).toHaveLength(1);
-      expect(
-        wrapper
-          .find('[data-test-id="node"]')
-          .find({active: true})
-          .find('[data-test-id="node-description"]')
-          .children()
-          .text()
-      ).toEqual('Send an event from your application');
-
-      expect(wrapper.find('[data-test-id="node"]').find({done: true})).toHaveLength(2);
-
-      expect(wrapper).toMatchSnapshot();
-    });
-  });
-});
diff --git a/tests/js/spec/views/onboarding/wizard.spec.jsx b/tests/js/spec/views/onboarding/wizard.spec.jsx
deleted file mode 100644
index 9fd558f030..0000000000
--- a/tests/js/spec/views/onboarding/wizard.spec.jsx
+++ /dev/null
@@ -1,37 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-
-import {Client} from 'app/api';
-import OnboardingWizard from 'app/views/onboarding/wizard';
-
-describe('OnboardingWizard', function() {
-  beforeEach(function() {
-    this.stubbedApiRequest = jest.spyOn(Client.prototype, 'request');
-  });
-
-  afterEach(function() {});
-
-  describe('render()', function() {
-    const baseProps = {
-      location: {query: {}},
-      params: {
-        projectId: '',
-        orgId: 'testOrg',
-      },
-    };
-
-    it('should render NotFound if no matching organization', function() {
-      const props = {
-        ...baseProps,
-        params: {
-          orgId: 'my-cool-org',
-        },
-      };
-
-      const wrapper = shallow(<OnboardingWizard {...props} />, {
-        organization: {id: '1337', slug: 'testOrg', experiments: {}},
-      });
-      expect(wrapper).toMatchSnapshot();
-    });
-  });
-});
diff --git a/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap b/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap
index 77e180d7b7..27cf82efa8 100644
--- a/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap
+++ b/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap
@@ -1,17 +1,16 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`NewProjectPlatform render() should render 1`] = `
-<NewProject
-  organization={
-    Object {
-      "id": "1337",
-      "slug": "testOrg",
-      "teams": Array [
-        Array [
-          "testProject",
-        ],
-      ],
-    }
-  }
-/>
+<Container>
+  <div
+    className="container"
+  >
+    <Content>
+      <SideEffect(DocumentTitle)
+        title="Sentry"
+      />
+      <withApi(withTeams(WithOrganizationMockWrapper)) />
+    </Content>
+  </div>
+</Container>
 `;
