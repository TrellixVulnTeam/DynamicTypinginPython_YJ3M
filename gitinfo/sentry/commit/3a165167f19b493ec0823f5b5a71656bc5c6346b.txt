commit 3a165167f19b493ec0823f5b5a71656bc5c6346b
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Dec 17 11:55:00 2015 -0800

    Backfill tests for system-options endpoint

diff --git a/src/sentry/api/endpoints/system_options.py b/src/sentry/api/endpoints/system_options.py
index a5211be440..e4789c0d5c 100644
--- a/src/sentry/api/endpoints/system_options.py
+++ b/src/sentry/api/endpoints/system_options.py
@@ -18,7 +18,7 @@ class SystemOptionsEndpoint(Endpoint):
         if query == 'is:required':
             option_list = options.filter(flag=options.FLAG_REQUIRED)
         elif query:
-            raise ValueError('{} is not a supported search query'.format(query))
+            return Response('{} is not a supported search query'.format(query), status=400)
         else:
             option_list = options.all()
 
diff --git a/tests/sentry/api/endpoints/test_system_options.py b/tests/sentry/api/endpoints/test_system_options.py
new file mode 100644
index 0000000000..fcdb14889a
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_system_options.py
@@ -0,0 +1,35 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.testutils import APITestCase
+
+
+class SystemOptionsTest(APITestCase):
+    url = reverse('sentry-api-0-system-options')
+
+    def test_simple(self):
+        self.login_as(user=self.user)
+        response = self.client.get(self.url)
+        assert response.status_code == 200
+        assert 'system.secret-key' in response.data
+        assert 'system.url-prefix' in response.data
+        assert 'system.admin-email' in response.data
+        assert 'cache.backend' in response.data
+
+    def test_bad_query(self):
+        self.login_as(user=self.user)
+        response = self.client.get(self.url, {'query': 'nonsense'})
+        assert response.status_code == 400
+        assert 'nonsense' in response.data
+
+    def test_required(self):
+        self.login_as(user=self.user)
+        response = self.client.get(self.url, {'query': 'is:required'})
+        assert response.status_code == 200
+        assert 'system.rate-limit' not in response.data
+        assert 'system.url-prefix' in response.data
+
+    def test_not_logged_in(self):
+        response = self.client.get(self.url)
+        assert response.status_code == 401
