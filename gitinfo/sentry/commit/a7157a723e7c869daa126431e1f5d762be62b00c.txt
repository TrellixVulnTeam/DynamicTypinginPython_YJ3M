commit a7157a723e7c869daa126431e1f5d762be62b00c
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Feb 11 15:51:25 2020 -0800

    feat(workflow): Update Alert email design (#16832)
    
    This updates the alert emails to reflect new designs. Still need to add an actual Environment

diff --git a/src/sentry/incidents/action_handlers.py b/src/sentry/incidents/action_handlers.py
index 371669d066..f058311349 100644
--- a/src/sentry/incidents/action_handlers.py
+++ b/src/sentry/incidents/action_handlers.py
@@ -4,8 +4,15 @@ import abc
 
 import six
 from django.core.urlresolvers import reverse
-
-from sentry.incidents.models import AlertRuleTriggerAction, QueryAggregations, TriggerStatus
+from django.template.defaultfilters import pluralize
+
+from sentry.incidents.models import (
+    AlertRuleThresholdType,
+    AlertRuleTriggerAction,
+    QueryAggregations,
+    TriggerStatus,
+    IncidentStatus,
+)
 from sentry.utils.email import MessageBuilder
 from sentry.utils.http import absolute_uri
 
@@ -13,6 +20,12 @@ from sentry.utils.http import absolute_uri
 @six.add_metaclass(abc.ABCMeta)
 class ActionHandler(object):
     status_display = {TriggerStatus.ACTIVE: "Fired", TriggerStatus.RESOLVED: "Resolved"}
+    incident_status = {
+        IncidentStatus.OPEN: "Open",
+        IncidentStatus.CLOSED: "Resolved",
+        IncidentStatus.CRITICAL: "Critical",
+        IncidentStatus.WARNING: "Warning",
+    }
 
     def __init__(self, action, incident, project):
         self.action = action
@@ -77,7 +90,7 @@ class EmailActionHandler(ActionHandler):
     def build_message(self, context, status, user_id):
         display = self.status_display[status]
         return MessageBuilder(
-            subject=u"Incident Alert Rule {} for Project {}".format(display, self.project.slug),
+            subject=u"Alert Rule {} for Project {}".format(display, self.project.slug),
             template=u"sentry/emails/incidents/trigger.txt",
             html_template=u"sentry/emails/incidents/trigger.html",
             type="incident.alert_rule_{}".format(display.lower()),
@@ -87,6 +100,14 @@ class EmailActionHandler(ActionHandler):
     def generate_email_context(self, status):
         trigger = self.action.alert_rule_trigger
         alert_rule = trigger.alert_rule
+        is_active = status == TriggerStatus.ACTIVE
+        is_threshold_type_above = trigger.threshold_type == AlertRuleThresholdType.ABOVE
+
+        # if alert threshold and threshold type is above then show '>'
+        # if resolve threshold and threshold type is *BELOW* then show '>'
+        # we can simplify this to be the below statement
+        show_greater_than_string = is_active == is_threshold_type_above
+
         return {
             "link": absolute_uri(
                 reverse(
@@ -108,12 +129,20 @@ class EmailActionHandler(ActionHandler):
                 )
             ),
             "incident_name": self.incident.title,
+            # TODO(alerts): Add environment
+            "environment": "All",
+            "time_window": format_duration(alert_rule.time_window),
+            "triggered_at": trigger.date_added,
             "aggregate": self.query_aggregations_display[QueryAggregations(alert_rule.aggregation)],
             "query": alert_rule.query,
-            "threshold": trigger.alert_threshold
-            if status == TriggerStatus.ACTIVE
-            else trigger.resolve_threshold,
-            "status": self.status_display[status],
+            "threshold": trigger.alert_threshold if is_active else trigger.resolve_threshold,
+            # if alert threshold and threshold type is above then show '>'
+            # if resolve threshold and threshold type is *BELOW* then show '>'
+            "threshold_direction_string": ">" if show_greater_than_string else "<",
+            "status": self.incident_status[IncidentStatus(self.incident.status)],
+            "is_critical": self.incident.status == IncidentStatus.CRITICAL,
+            "is_warning": self.incident.status == IncidentStatus.WARNING,
+            "unsubscribe_link": None,
         }
 
 
@@ -137,3 +166,23 @@ class SlackActionHandler(ActionHandler):
         send_incident_alert_notification(
             self.action.integration, self.incident, self.action.target_identifier
         )
+
+
+def format_duration(minutes):
+    """
+    Format minutes into a duration string
+    """
+
+    if minutes >= 1440:
+        days = minutes / 1440
+        return "{} day{}".format(days, pluralize(days))
+
+    if minutes >= 60:
+        hours = minutes / 60
+        return "{} hour{}".format(hours, pluralize(hours))
+
+    if minutes >= 1:
+        return "{} minute{}".format(minutes, pluralize(minutes))
+
+    seconds = minutes / 60
+    return "{} second{}".format(seconds, pluralize(seconds))
diff --git a/src/sentry/static/sentry/images/email/icon-circle-exclamation.png b/src/sentry/static/sentry/images/email/icon-circle-exclamation.png
new file mode 100644
index 0000000000..aecd767a84
Binary files /dev/null and b/src/sentry/static/sentry/images/email/icon-circle-exclamation.png differ
diff --git a/src/sentry/static/sentry/images/email/icon-warning.png b/src/sentry/static/sentry/images/email/icon-warning.png
new file mode 100644
index 0000000000..b80a7a1f53
Binary files /dev/null and b/src/sentry/static/sentry/images/email/icon-warning.png differ
diff --git a/src/sentry/templates/sentry/emails/email-styles.html b/src/sentry/templates/sentry/emails/email-styles.html
index e3926a861b..74d4b75366 100644
--- a/src/sentry/templates/sentry/emails/email-styles.html
+++ b/src/sentry/templates/sentry/emails/email-styles.html
@@ -746,6 +746,53 @@
     border-radius: 3px;
   }
 
+  /* Alert rule / incidents */
+
+  a.alert-title-link {
+    font-size: 24px;
+    font-weight: bold;
+  }
+
+  h3.alert-title {
+    margin-bottom: 0;
+  }
+
+  .alert-header {
+    font-size: 12px;
+    color: #9585A3;
+    font-weight: bold;
+    text-transform: uppercase;
+  }
+
+  table.alert-rule-table thead th {
+    font-size: 12px;
+    color: #9585A3;
+    font-weight: bold;
+    text-transform: uppercase;
+  }
+
+  .alert-query-box {
+    background-color: #E7E1EC;
+    border-radius: 4px;
+    padding: 8px;
+    color: #645574;
+    margin-top: 12px;
+  }
+
+  .alert-critical {
+    fill: #e03e2f;
+    font-weight: bold;
+    text-transform: uppercase;
+    margin-bottom: -2px;
+  }
+
+  .alert-warning {
+    fill: #e6bc23;
+    font-weight: bold;
+    text-transform: uppercase;
+    margin-bottom: -2px;
+  }
+
   /*
     ===
     Release / Deploy email specific styles
diff --git a/src/sentry/templates/sentry/emails/incidents/trigger.html b/src/sentry/templates/sentry/emails/incidents/trigger.html
index 14da28c62e..0a0628fe09 100644
--- a/src/sentry/templates/sentry/emails/incidents/trigger.html
+++ b/src/sentry/templates/sentry/emails/incidents/trigger.html
@@ -5,32 +5,87 @@
 {% load sentry_assets %}
 
 {% block activity %}
-    <h3>
-        <a href="{{ link }}">Alert Rule Trigger {{ status }} on Incident {{ incident_name }}.</a>
-    </h3>
+    <table>
+      <tr>
+        <td>
+        <h3 class="alert-title">
+            <a class="alert-title-link" href="{{ link }}">{{ incident_name }}</a>
+        </h3>
+        </td>
+        <td>
+          <div class="alert-header">
+          Status
+          </div>
+        </td>
+      </tr>
+      <tr>
+        <td>
+          Created on {{ triggered_at }}
+        </td>
+        <td>
+          {% if is_critical %}
+            <img class="alert-critical" src="{% absolute_asset_url 'sentry' 'images/email/icon-circle-exclamation.png' %}" width="16px" height="16px" alt="Critical" />
+          {% elif is_warning %}
+            <img class="alert-warning" src="{% absolute_asset_url 'sentry' 'images/email/icon-warning.png' %}" width="16px" height="16px" alt="Warning" />
+          {% endif %}
 
+          <span class="alert-status">{{ status }}</span>
+        </td>
+      </tr>
+    </table>
+
+
+    <hr />
 
   {% if enhanced_privacy %}
     <div class="notice">
-      Details about this incident alert are not shown in this email since enhanced privacy
-      controls are enabled. For more details about this incident, <a href="{{ link }}">view on Sentry.</a>
+      Details about this alert are not shown in this email since enhanced privacy
+      controls are enabled. For more details about this alert, <a href="{{ link }}">view on Sentry.</a>
     </div>
 
   {% else %}
-      <table >
-        <tr>
-            <td>Rule: <a href="{{ rule_link }}">{{ rule_link }}</a></td>
-        </tr>
-        <tr>
-          <td>Aggregate: {{ aggregate }} </td>
-        </tr>
-        <tr>
-          <td>Query: {{ query }}</td>
-        </tr>
+      <table class="alert-rule-table">
+        <thead>
+          <th>
+            Metric
+          </th>
+          <th>
+            Environment
+          </th>
+          <th>
+            Threshold
+          </th>
+          <th>
+            Time Interval
+          </th>
+        </thead>
+
+        <tbody>
         <tr>
-          <td>Threshold: {{ threshold }}</td>
-        </tr>
-        </tr>
+          <td>
+            {{ aggregate }}
+          </td>
+          <td>
+            {{ environment }}
+          </td>
+        <td>
+          {{ threshold_direction_string }} {{ threshold }}
+          </td>
+          <td>
+            {{ time_window }}
+          </td>
+
+
+        </tbody>
       </table>
+
+      <div>
+        <div class="alert-header">
+          Query
+        </div>
+        <div class="alert-query-box">
+          {{ query }}
+        </div>
+      </div>
   {% endif %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/incidents/trigger.txt b/src/sentry/templates/sentry/emails/incidents/trigger.txt
index 883f05445c..2b4b2d871a 100644
--- a/src/sentry/templates/sentry/emails/incidents/trigger.txt
+++ b/src/sentry/templates/sentry/emails/incidents/trigger.txt
@@ -1,18 +1,21 @@
 {% spaceless %}
 {% autoescape off %}
-# Alert Rule Trigger {{ status }} on Incident {{ incident_name }}.
+# Alert Rule Trigger on {{ incident_name }}.
 
 {% if enhanced_privacy %}
-Details about this incident alert are not shown in this email since enhanced privacy
-controls are enabled. For more details about this incident alert, view on Sentry:
+Details about this alert are not shown in this email since enhanced privacy
+controls are enabled. For more details about this alert alert, view on Sentry:
 {{ incident_link }}.
 {% else %}
 Incident: {{ link }}
 Rule: {{ rule_link }}
+Status: {{ status }}
 
-Aggregate: {{ aggregate }}
+Metric: {{ aggregate }}
+Environment: {{ environment }}
+Threshold: {{ threshold_direction_string }} {{ threshold }}
+Time Interval: {{ time_window }}
 Query: {{ query }}
-Threshold: {{ threshold }}
 
 {% endif %}
 
diff --git a/src/sentry/web/frontend/debug/debug_alert_rule_trigger_email.py b/src/sentry/web/frontend/debug/debug_alert_rule_trigger_email.py
index dd2b9b4b58..c03a7a0ebf 100644
--- a/src/sentry/web/frontend/debug/debug_alert_rule_trigger_email.py
+++ b/src/sentry/web/frontend/debug/debug_alert_rule_trigger_email.py
@@ -8,6 +8,7 @@ from sentry.incidents.models import (
     AlertRuleTrigger,
     AlertRuleTriggerAction,
     TriggerStatus,
+    IncidentStatus,
 )
 from sentry.models.project import Project
 from sentry.models.organization import Organization
@@ -21,9 +22,14 @@ class DebugAlertRuleTriggerEmailView(View):
         organization = Organization(slug="myorg")
         project = Project(id=30, slug="myproj")
 
-        incident = Incident(identifier=123, organization=organization, title="Something broke")
+        incident = Incident(
+            identifier=123,
+            organization=organization,
+            title="Something broke",
+            status=IncidentStatus.CRITICAL,
+        )
         alert_rule = AlertRule(
-            id=1, organization=organization, aggregation=1, query="is:unresolved"
+            id=1, organization=organization, aggregation=1, query="is:unresolved", time_window=60
         )
         alert_rule_trigger = AlertRuleTrigger(
             id=5, alert_rule=alert_rule, alert_threshold=100, resolve_threshold=50
diff --git a/tests/sentry/incidents/test_action_handlers.py b/tests/sentry/incidents/test_action_handlers.py
index abccaf8bd7..b214e259a2 100644
--- a/tests/sentry/incidents/test_action_handlers.py
+++ b/tests/sentry/incidents/test_action_handlers.py
@@ -6,6 +6,7 @@ import responses
 import six
 from django.core import mail
 from django.core.urlresolvers import reverse
+from django.utils import timezone
 from exam import fixture
 from freezegun import freeze_time
 from six.moves.urllib.parse import parse_qs
@@ -110,7 +111,14 @@ class EmailActionHandlerGenerateEmailContextTest(TestCase):
             ],
             "query": action.alert_rule_trigger.alert_rule.query,
             "threshold": action.alert_rule_trigger.alert_threshold,
-            "status": handler.status_display[status],
+            "status": handler.incident_status[IncidentStatus(incident.status)],
+            "environment": "All",
+            "is_critical": False,
+            "is_warning": False,
+            "threshold_direction_string": "<",
+            "time_window": "10 minutes",
+            "triggered_at": timezone.now(),
+            "unsubscribe_link": None,
         }
         assert expected == handler.generate_email_context(status)
 
@@ -127,7 +135,7 @@ class EmailActionHandlerFireTest(TestCase):
             handler.fire()
         out = mail.outbox[0]
         assert out.to == [self.user.email]
-        assert out.subject.startswith("Incident Alert Rule Fired")
+        assert out.subject.startswith("Alert Rule Fired")
 
 
 @freeze_time()
@@ -142,7 +150,7 @@ class EmailActionHandlerResolveTest(TestCase):
             handler.resolve()
         out = mail.outbox[0]
         assert out.to == [self.user.email]
-        assert out.subject.startswith("Incident Alert Rule Resolved")
+        assert out.subject.startswith("Alert Rule Resolved")
 
 
 @freeze_time()
