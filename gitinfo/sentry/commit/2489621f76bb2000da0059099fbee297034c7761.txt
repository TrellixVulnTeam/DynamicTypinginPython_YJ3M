commit 2489621f76bb2000da0059099fbee297034c7761
Author: Ben Vinegar <ben.vinegar@gmail.com>
Date:   Thu Jan 3 12:49:56 2019 -0800

    feat(ui): Redirect to event details w/o reloading page + UI (#11307)
    
    * feat(ui): Redirect to event details w/o reloading page + UI
    
    * Update component description for clarity

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 7e1722509c..908d3b0222 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -29,6 +29,7 @@ import OrganizationMembers from 'app/views/settings/organizationMembers';
 import OrganizationRoot from 'app/views/organizationRoot';
 import OrganizationStats from 'app/views/organizationStats';
 import ProjectEnvironments from 'app/views/projectEnvironments';
+import ProjectEventRedirect from 'app/views/projectEventRedirect';
 import ProjectTags from 'app/views/projectTags';
 import ProjectChooser from 'app/views/projectChooser';
 import ProjectDashboard from 'app/views/projectDashboard';
@@ -865,7 +866,6 @@ function routes() {
             component={errorHandler(ProjectChooser)}
           />
         </Route>
-
         <Route
           path=":projectId/getting-started/"
           component={errorHandler(ProjectGettingStarted)}
@@ -1044,6 +1044,8 @@ function routes() {
             <Route path="similar/" component={errorHandler(GroupSimilarView)} />
             <Route path="merged/" component={errorHandler(GroupMergedView)} />
           </Route>
+
+          <Route path="events/:eventId/" component={errorHandler(ProjectEventRedirect)} />
         </Route>
       </Route>
 
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
index e8f8673b35..bbb6c0e978 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
@@ -33,9 +33,7 @@ class EventsTableBody extends React.PureComponent {
         <TableRow key={`${project.slug}-${event.eventID}`} first={eventIdx == 0}>
           <TableData>
             <EventTitle>
-              <Link
-                href={`/${organization.slug}/${project.slug}/events/${event.eventID}/`}
-              >
+              <Link to={`/${organization.slug}/${project.slug}/events/${event.eventID}/`}>
                 {trimmedMessage}
               </Link>
             </EventTitle>
diff --git a/src/sentry/static/sentry/app/views/projectEventRedirect.jsx b/src/sentry/static/sentry/app/views/projectEventRedirect.jsx
new file mode 100644
index 0000000000..41988660aa
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectEventRedirect.jsx
@@ -0,0 +1,60 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import {t} from 'app/locale';
+
+/**
+ * This component performs a client-side redirect to Event Details given only
+ * an event ID (which normally additionally requires the event's Issue/Group ID).
+ * It does this by using an XHR against the identically-named ProjectEventRedirect
+ * _Django_ view, which responds with a 302 with the Location of the corresponding
+ * Event Details page (if it exists).
+ *
+ * See:
+ * https://github.com/getsentry/sentry/blob/824c03089907ad22a9282303a5eaca33989ce481/src/sentry/web/urls.py#L578
+ */
+class ProjectEventRedirect extends React.Component {
+  static propTypes = {
+    router: PropTypes.object,
+  };
+
+  constructor(props) {
+    super(props);
+    const {router} = props;
+
+    // This presumes that _this_ React view/route is only reachable at
+    // /:org/:project/events/:eventId (the same URL which serves the ProjectEventRedirect
+    // Django view).
+    const endpoint = router.location.pathname;
+
+    // Use XmlHttpRequest directly instead of our client API helper (jQuery),
+    // because you can't reach the underlying XHR via $.ajax, and we need
+    // access to `xhr.responseURL`.
+    const xhr = new XMLHttpRequest();
+
+    // Hitting this endpoint will return a 302 with a new location, which
+    // the XHR will follow and make a _second_ request. Using HEAD instead
+    // of GET returns an empty response instead of the entire HTML content.
+    xhr.open('HEAD', endpoint);
+    xhr.send();
+
+    xhr.onload = () => {
+      // responseURL is the URL of the document the browser ultimately loaded,
+      // after following any redirects. It _should_ be the page we're trying
+      // to reach; use the router to go there.
+
+      // Use `replace` so that hitting the browser back button will skip all
+      // this redirect business.
+      router.replace(xhr.responseURL);
+    };
+    xhr.onerror = () => {
+      throw new Error(t('An error occurred'));
+    };
+  }
+
+  render() {
+    return null;
+  }
+}
+
+export default ProjectEventRedirect;
