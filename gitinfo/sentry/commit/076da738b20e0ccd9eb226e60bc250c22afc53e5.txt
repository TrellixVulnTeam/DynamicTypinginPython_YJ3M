commit 076da738b20e0ccd9eb226e60bc250c22afc53e5
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Jul 19 11:30:57 2019 -0700

    feat: Update Group.filter_by_event_id to use Snuba (#14035)
    
    This is the second part of
    https://github.com/getsentry/sentry/pull/13905, which updates
    the group model to use events from Snuba instead of Postgres.
    This PR updates the filter_by_event_id function.

diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index 0ed5c85fc3..1420c69cc3 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -208,18 +208,22 @@ class GroupManager(BaseManager):
         return Group.objects.get(id=group_id)
 
     def filter_by_event_id(self, project_ids, event_id):
-        from sentry.models import EventMapping, Event
-        group_ids = set()
-        # see above for explanation as to why we're
-        # looking at both Event and EventMapping
-        for model in Event, EventMapping:
-            group_ids.update(
-                model.objects.filter(
-                    project_id__in=project_ids,
-                    event_id=event_id,
-                    group_id__isnull=False,
-                ).values_list('group_id', flat=True)
-            )
+        from sentry.utils import snuba
+
+        data = snuba.raw_query(
+            start=datetime.utcfromtimestamp(0),
+            end=datetime.utcnow(),
+            selected_columns=['issue'],
+            conditions=[['issue', 'IS NOT NULL', None]],
+            filter_keys={
+                'event_id': [event_id],
+                'project_id': project_ids,
+            },
+            limit=len(project_ids),
+            referrer="Group.filter_by_event_id",
+        )['data']
+
+        group_ids = set([evt['issue'] for evt in data])
 
         return Group.objects.filter(id__in=group_ids)
 
diff --git a/tests/snuba/api/endpoints/test_organization_group_index.py b/tests/snuba/api/endpoints/test_organization_group_index.py
index 47cd36c926..40dadecd04 100644
--- a/tests/snuba/api/endpoints/test_organization_group_index.py
+++ b/tests/snuba/api/endpoints/test_organization_group_index.py
@@ -10,9 +10,9 @@ from django.utils import timezone
 from mock import patch, Mock
 
 from sentry.models import (
-    Activity, ApiToken, Event, EventMapping, ExternalIssue, Group, GroupAssignee,
-    GroupBookmark, GroupHash, GroupLink, GroupSeen, GroupShare, GroupSnooze,
-    GroupStatus, GroupResolution, GroupSubscription, GroupTombstone, Integration,
+    Activity, ApiToken, ExternalIssue, Group, GroupAssignee, GroupBookmark,
+    GroupHash, GroupLink, GroupSeen, GroupShare, GroupSnooze, GroupStatus,
+    GroupResolution, GroupSubscription, GroupTombstone, Integration,
     OrganizationIntegration, UserOption, Release
 )
 from sentry.testutils import APITestCase, SnubaTestCase
@@ -209,14 +209,13 @@ class GroupListTest(APITestCase, SnubaTestCase):
     def test_lookup_by_event_id(self):
         project = self.project
         project.update_option('sentry:resolve_age', 1)
-        group = self.create_group(checksum='a' * 32)
-        self.create_group(checksum='b' * 32)
         event_id = 'c' * 32
-        Event.objects.create(project_id=self.project.id, event_id=event_id)
-        EventMapping.objects.create(
-            event_id=event_id,
-            project=group.project,
-            group=group,
+        event = self.store_event(
+            data={
+                'event_id': event_id,
+                'timestamp': self.min_ago.isoformat()[:19],
+            },
+            project_id=self.project.id
         )
 
         self.login_as(user=self.user)
@@ -224,7 +223,7 @@ class GroupListTest(APITestCase, SnubaTestCase):
         response = self.get_valid_response(query='c' * 32)
         assert response['X-Sentry-Direct-Hit'] == '1'
         assert len(response.data) == 1
-        assert response.data[0]['id'] == six.text_type(group.id)
+        assert response.data[0]['id'] == six.text_type(event.group.id)
         assert response.data[0]['matchingEventId'] == event_id
 
     def test_lookup_by_event_id_incorrect_project_id(self):
@@ -257,20 +256,20 @@ class GroupListTest(APITestCase, SnubaTestCase):
     def test_lookup_by_event_id_with_whitespace(self):
         project = self.project
         project.update_option('sentry:resolve_age', 1)
-        group = self.create_group(checksum='a' * 32)
         event_id = 'c' * 32
-        self.create_group(checksum='b' * 32)
-        EventMapping.objects.create(
-            event_id=event_id,
-            project=group.project,
-            group=group,
+        event = self.store_event(
+            data={
+                'event_id': event_id,
+                'timestamp': self.min_ago.isoformat()[:19],
+            },
+            project_id=self.project.id
         )
 
         self.login_as(user=self.user)
         response = self.get_valid_response(query='  {}  '.format('c' * 32))
         assert response['X-Sentry-Direct-Hit'] == '1'
         assert len(response.data) == 1
-        assert response.data[0]['id'] == six.text_type(group.id)
+        assert response.data[0]['id'] == six.text_type(event.group.id)
         assert response.data[0]['matchingEventId'] == event_id
 
     def test_lookup_by_unknown_event_id(self):
