commit 5eb2cd294fcab08451f1b6903265dbde5ad5812f
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Mon Apr 3 10:50:27 2017 -0700

    Fix duplicate authors in releases (#5176)

diff --git a/src/sentry/api/serializers/models/release.py b/src/sentry/api/serializers/models/release.py
index dfc7deaf04..e006d8e0e8 100644
--- a/src/sentry/api/serializers/models/release.py
+++ b/src/sentry/api/serializers/models/release.py
@@ -98,12 +98,24 @@ class ReleaseSerializer(Serializer):
         authors_by_release_id = defaultdict(dict)
         latest_commit_by_release_id = {}
 
+        # it's possible to have duplicate users in users_by_email
+        # when CommitAuthor objects are different
+        # but emails are associated to the same user, so
+        # this is to prevent duplicate users from being returned
+        authors_seen_in_release = defaultdict(set)
+
         for rc in release_commits:
             # Accumulate authors per release
             author = rc.commit.author
+
             if author:
-                authors_by_release_id[rc.release_id][author.id] = \
-                    users_by_email[author.id]
+                author_user = users_by_email[author.id]
+                if author_user.get('id') and author_user['id'] in authors_seen_in_release[rc.release_id]:
+                    pass
+                else:
+                    authors_by_release_id[rc.release_id][author.id] = \
+                        users_by_email[author.id]
+                author_user.get('id') and authors_seen_in_release[rc.release_id].add(author_user['id'])
 
             # Increment commit count per release
             commit_count_by_release_id[rc.release_id] += 1
diff --git a/tests/sentry/api/serializers/test_release.py b/tests/sentry/api/serializers/test_release.py
index a46e09239f..9a35734a7c 100644
--- a/tests/sentry/api/serializers/test_release.py
+++ b/tests/sentry/api/serializers/test_release.py
@@ -277,3 +277,62 @@ class ReleaseSerializerTest(TestCase):
 
         result = serialize(release, user)
         assert result['authors'] == []
+
+    def test_deduplicate_users(self):
+        """
+        Tests that the same user is not returned more than once
+        if there are commits associated with multiple of their
+        emails
+        """
+        user = User.objects.create(email='stebe@sentry.io')
+        email = UserEmail.objects.get(user=user, email='stebe@sentry.io')
+        otheremail = UserEmail.objects.create(email='alsostebe@sentry.io', user=user)
+        project = self.create_project()
+        self.create_member(user=user, organization=project.organization)
+        release = Release.objects.create(
+            organization_id=project.organization_id,
+            version=uuid4().hex,
+            new_groups=1,
+        )
+        release.add_project(project)
+        commit_author1 = CommitAuthor.objects.create(
+            name='stebe',
+            email=email.email,
+            organization_id=project.organization_id,
+        )
+        commit_author2 = CommitAuthor.objects.create(
+            name='stebe',
+            email=otheremail.email,
+            organization_id=project.organization_id,
+        )
+        commit1 = Commit.objects.create(
+            organization_id=project.organization_id,
+            repository_id=1,
+            key='abc',
+            author=commit_author1,
+            message='waddap',
+        )
+        commit2 = Commit.objects.create(
+            organization_id=project.organization_id,
+            repository_id=1,
+            key='cde',
+            author=commit_author2,
+            message='oh hi',
+        )
+        ReleaseCommit.objects.create(
+            organization_id=project.organization_id,
+            project_id=project.id,
+            release=release,
+            commit=commit1,
+            order=1,
+        )
+        ReleaseCommit.objects.create(
+            organization_id=project.organization_id,
+            project_id=project.id,
+            release=release,
+            commit=commit2,
+            order=2,
+        )
+        result = serialize(release, user)
+        assert len(result['authors']) == 1
+        assert result['authors'][0]['email'] == 'stebe@sentry.io'
