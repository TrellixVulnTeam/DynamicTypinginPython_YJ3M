commit 1cd6912625447b83e85e1fd85e7d6dba93b974b4
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Apr 26 12:02:52 2018 -0700

    feat(dashboard): Add ability to star project (#8205)

diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
index 31cff81ab9..505ae41459 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
@@ -1,13 +1,32 @@
 import React from 'react';
+import PropTypes from 'prop-types';
 import styled from 'react-emotion';
 import {withRouter} from 'react-router';
+import {Flex} from 'grid-emotion';
 
 import SentryTypes from '../../proptypes';
 import Link from '../../components/link';
 
+import {Client} from '../../api';
+
+import {update} from '../../actionCreators/projects';
+
 class ProjectCard extends React.Component {
   static propTypes = {
     project: SentryTypes.Project.isRequired,
+    params: PropTypes.object,
+  };
+
+  toggleProjectBookmark = () => {
+    const {project, params} = this.props;
+
+    update(new Client(), {
+      orgId: params.orgId,
+      projectId: project.slug,
+      data: {
+        isBookmarked: !project.isBookmarked,
+      },
+    });
   };
 
   render() {
@@ -15,9 +34,16 @@ class ProjectCard extends React.Component {
 
     return (
       <StyledProjectCard>
-        <ProjectCardHeader>
-          <Link to={`/${params.orgId}/${project.slug}/`}>{project.slug}</Link>
-        </ProjectCardHeader>
+        <Flex justify="space-between" p={2} align="center">
+          <Link to={`/${params.orgId}/${project.slug}/`}>
+            <strong>{project.slug}</strong>
+          </Link>
+          <Star
+            active={project.isBookmarked}
+            className="project-select-bookmark icon icon-star-solid"
+            onClick={this.toggleProjectBookmark}
+          />
+        </Flex>
       </StyledProjectCard>
     );
   }
@@ -30,6 +56,13 @@ const StyledProjectCard = styled.div`
   box-shadow: ${p => p.theme.dropShadowLight};
 `;
 
-const ProjectCardHeader = styled.div``;
+const Star = styled.a`
+  color: ${p => (p.active ? p.theme.yellowOrange : '#afa3bb')};
+  &:hover {
+    color: ${p => p.theme.yellowOrange};
+    opacity: 0.6;
+  }
+`;
 
+export {ProjectCard};
 export default withRouter(ProjectCard);
diff --git a/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap b/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
new file mode 100644
index 0000000000..0f8ca11d5c
--- /dev/null
+++ b/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
@@ -0,0 +1,75 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ProjectCard renders 1`] = `
+<ProjectCard
+  params={
+    Object {
+      "orgId": "org-slug",
+    }
+  }
+  project={
+    Object {
+      "hasAccess": true,
+      "id": "2",
+      "isBookmarked": false,
+      "isMember": true,
+      "name": "Project Name",
+      "slug": "project-slug",
+      "teams": Array [],
+    }
+  }
+>
+  <StyledProjectCard>
+    <div
+      className="css-1u6ttyz-StyledProjectCard css-19wy04p0"
+    >
+      <Flex
+        align="center"
+        justify="space-between"
+        p={2}
+      >
+        <Base
+          align="center"
+          className="css-188rjiu"
+          justify="space-between"
+          p={2}
+        >
+          <div
+            className="css-188rjiu"
+            is={null}
+          >
+            <Link
+              to="/org-slug/project-slug/"
+            >
+              <Link
+                onlyActiveOnIndex={false}
+                style={Object {}}
+                to="/org-slug/project-slug/"
+              >
+                <a
+                  onClick={[Function]}
+                  style={Object {}}
+                >
+                  <strong>
+                    project-slug
+                  </strong>
+                </a>
+              </Link>
+            </Link>
+            <Star
+              active={false}
+              className="project-select-bookmark icon icon-star-solid"
+              onClick={[Function]}
+            >
+              <a
+                className="project-select-bookmark icon icon-star-solid css-x8d2hc-Star css-19wy04p1"
+                onClick={[Function]}
+              />
+            </Star>
+          </div>
+        </Base>
+      </Flex>
+    </div>
+  </StyledProjectCard>
+</ProjectCard>
+`;
diff --git a/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx b/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx
new file mode 100644
index 0000000000..7efecdbc90
--- /dev/null
+++ b/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx
@@ -0,0 +1,43 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import {ProjectCard} from 'app/views/organizationDashboard/projectCard';
+
+describe('ProjectCard', function() {
+  let wrapper, projectMock;
+  beforeEach(function() {
+    wrapper = mount(
+      <ProjectCard project={TestStubs.Project()} params={{orgId: 'org-slug'}} />,
+      TestStubs.routerContext()
+    );
+
+    projectMock = MockApiClient.addMockResponse({
+      url: '/projects/org-slug/project-slug/',
+      method: 'PUT',
+      data: TestStubs.Project({isBookmarked: false}),
+    });
+  });
+
+  afterEach(function() {
+    MockApiClient.clearMockResponses();
+  });
+
+  it('renders', function() {
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('can star', async function() {
+    const star = wrapper.find('Star');
+
+    expect(star.prop('active')).toBe(false);
+    star.simulate('click');
+    expect(projectMock).toHaveBeenCalledWith(
+      '/projects/org-slug/project-slug/',
+      expect.objectContaining({
+        data: {
+          isBookmarked: true,
+        },
+      })
+    );
+  });
+});
