commit f613aa4455a72acba58fc47d77882aed2ec249f4
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Jan 31 08:53:48 2018 -0800

    feat(ui): Change "Debug Symbols" to use `Panel` (#6989)

diff --git a/src/sentry/static/sentry/app/utils/theme.js b/src/sentry/static/sentry/app/utils/theme.js
index d2de297806..c73b067a8c 100644
--- a/src/sentry/static/sentry/app/utils/theme.js
+++ b/src/sentry/static/sentry/app/utils/theme.js
@@ -1,5 +1,6 @@
 const theme = {
   offWhite: '#FAF9FB',
+  whiteDark: '#fbfbfc',
 
   gray1: '#BDB4C7',
   gray2: '#9585A3',
@@ -37,6 +38,7 @@ const theme = {
   pinkDark: '#DF4FA3',
 
   purple: '#6C5FC7',
+  purple2: '#6f617c', // This is from event-details
   purplelightest: '#9F92FA',
   purpleLight: '#8679E1',
   purpleDark: '#5346AE',
diff --git a/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx b/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
index 0edf4d6fbe..d351bf04f7 100644
--- a/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
+++ b/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
@@ -1,6 +1,8 @@
+import {Flex} from 'grid-emotion';
 import Modal from 'react-bootstrap/lib/Modal';
 import React from 'react';
 import createReactClass from 'create-react-class';
+import styled from 'react-emotion';
 
 import {t} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
@@ -9,12 +11,33 @@ import FileSize from '../components/fileSize';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import OrganizationState from '../mixins/organizationState';
+import Panel from './settings/components/panel';
+import PanelBody from './settings/components/panelBody';
+import PanelHeader from './settings/components/panelHeader';
+import Row from './settings/components/row';
 import SettingsPageHeader from './settings/components/settingsPageHeader';
 import TextBlock from './settings/components/text/textBlock';
 import TimeSince from '../components/timeSince';
 
 const marginBottomStyle = {marginBottom: 40};
 
+const LastSeen = styled(Flex)`
+  font-size: 12px;
+  color: ${p => p.theme.purple2};
+`;
+
+const TimeIcon = styled.span`
+  margin-right: 4px;
+`;
+
+const HoverableRow = styled(Row)`
+  cursor: pointer;
+  transition: all 0s ease-in-out;
+  &:hover {
+    background-color: ${p => p.theme.whiteDark};
+  }
+`;
+
 const ProjectDebugSymbols = createReactClass({
   displayName: 'ProjectDebugSymbols',
   mixins: [ApiMixin, OrganizationState],
@@ -149,86 +172,68 @@ const ProjectDebugSymbols = createReactClass({
 
     return indexedApps.map(app => {
       return (
-        <div style={marginBottomStyle} className="box dashboard-widget" key={app.id}>
-          <div className="box-content">
-            <div className="tab-pane active">
-              <div>
-                <div className="box-header clearfix">
-                  <div className="row">
-                    <h3 className="debug-symbols">
-                      <div
-                        className="app-icon"
-                        style={app.iconUrl && {backgroundImage: `url(${app.iconUrl})`}}
-                      />
-                      {app.name} <small>({app.appId})</small>
-                    </h3>
-                  </div>
-                </div>
-                {this.mapObject(groupedDsyms[app.id], (builds, version) => {
-                  let symbolsInVersion = 0;
-                  let lastSeen = null;
-                  this.mapObject(groupedDsyms[app.id][version], (dsyms, build) => {
-                    symbolsInVersion += Object.keys(dsyms).length;
-                    if (
-                      lastSeen === null ||
-                      (lastSeen &&
-                        new Date(dsyms[0].dateAdded).getTime() >
-                          new Date(lastSeen).getTime())
-                    ) {
-                      lastSeen = dsyms[0].dateAdded;
-                    }
-                  });
-                  let row = (
-                    <li
-                      className="group hoverable"
-                      onClick={() => this.setActive(app.id, version, builds)}
-                    >
-                      <div>
-                        <div className="col-xs-8 event-details">
-                          <h3 className="truncate">{version}</h3>
-                          <div className="event-message">
-                            {t('Builds')}: {Object.keys(builds).length}
-                          </div>
-                          <div className="event-extra">
-                            <ul>
-                              <li>
-                                <span className="icon icon-clock" />
-                                <TimeSince date={lastSeen} />
-                              </li>
-                            </ul>
-                          </div>
-                        </div>
-                        <div className="col-xs-4 event-details align-right">
-                          {t('Debug Information Files')}: {symbolsInVersion}
-                        </div>
-                      </div>
-                    </li>
-                  );
-
-                  let buildRows = '';
-                  if (
-                    this.state.activeVersion &&
-                    this.state.activeBuilds &&
-                    this.state.activeVersion == version &&
-                    this.state.activeAppID == app.id
-                  ) {
-                    buildRows = this.renderBuilds(version, this.state.activeBuilds);
-                  }
-                  return (
-                    <div className="box-content" key={version}>
-                      <div className="tab-pane active">
-                        <ul className="group-list group-list-small">
-                          {row}
-                          {buildRows}
-                        </ul>
-                      </div>
+        <Panel style={marginBottomStyle} key={app.id}>
+          <PanelHeader>
+            <div
+              className="app-icon"
+              style={app.iconUrl && {backgroundImage: `url(${app.iconUrl})`}}
+            />
+            {app.name} <small>({app.appId})</small>
+          </PanelHeader>
+
+          <PanelBody>
+            {this.mapObject(groupedDsyms[app.id], (builds, version) => {
+              let symbolsInVersion = 0;
+              let lastSeen = null;
+              this.mapObject(groupedDsyms[app.id][version], (dsyms, build) => {
+                symbolsInVersion += Object.keys(dsyms).length;
+                if (
+                  lastSeen === null ||
+                  (lastSeen &&
+                    new Date(dsyms[0].dateAdded).getTime() > new Date(lastSeen).getTime())
+                ) {
+                  lastSeen = dsyms[0].dateAdded;
+                }
+              });
+              let row = (
+                <HoverableRow
+                  className="hoverable"
+                  onClick={() => this.setActive(app.id, version, builds)}
+                >
+                  <Flex p={2} flex="1" direction="column">
+                    <h3 className="truncate">{version}</h3>
+                    <div className="event-message">
+                      {t('Builds')}: {Object.keys(builds).length}
                     </div>
-                  );
-                })}
-              </div>
-            </div>
-          </div>
-        </div>
+                    <LastSeen align="center">
+                      <TimeIcon className="icon icon-clock" />
+                      <TimeSince date={lastSeen} />
+                    </LastSeen>
+                  </Flex>
+                  <Flex p={2}>
+                    {t('Debug Information Files')}: {symbolsInVersion}
+                  </Flex>
+                </HoverableRow>
+              );
+
+              let buildRows = '';
+              if (
+                this.state.activeVersion &&
+                this.state.activeBuilds &&
+                this.state.activeVersion == version &&
+                this.state.activeAppID == app.id
+              ) {
+                buildRows = this.renderBuilds(version, this.state.activeBuilds);
+              }
+              return (
+                <Row direction="column" key={version}>
+                  {row}
+                  {buildRows}
+                </Row>
+              );
+            })}
+          </PanelBody>
+        </Panel>
       );
     });
   },
@@ -247,32 +252,18 @@ const ProjectDebugSymbols = createReactClass({
     });
     this.mapObject(builds, (dsyms, build) => {
       buildRows.push(
-        <li
-          className="group hoverable"
-          key={build}
-          onClick={() => this.openModal(build, dsyms)}
-        >
-          <div>
-            <div className="col-xs-8 event-details">
-              <div className="event-message">{build}</div>
-              <div className="event-extra">
-                <ul>
-                  <li>
-                    <span className="icon icon-clock" />
-                    <TimeSince date={dateAdded} />
-                  </li>
-                </ul>
-              </div>
-            </div>
-            <div className="col-xs-4 event-details">
-              <div className="event-message">
-                <span className="align-right pull-right" style={{paddingRight: 16}}>
-                  {t('Debug Information Files')}: {dsyms.length}
-                </span>
-              </div>
-            </div>
-          </div>
-        </li>
+        <HoverableRow key={build} onClick={() => this.openModal(build, dsyms)}>
+          <Flex p={2} flex="1" direction="column">
+            <div>{build}</div>
+            <LastSeen align="center">
+              <TimeIcon className="icon icon-clock" />
+              <TimeSince date={dateAdded} />
+            </LastSeen>
+          </Flex>
+          <Flex p={2}>
+            {t('Debug Information Files')}: {dsyms.length}
+          </Flex>
+        </HoverableRow>
       );
     });
     return buildRows;
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 5f4c1aa502..819de9cf22 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -45,10 +45,12 @@ window.TestStubs = {
     context: {
       location: TestStubs.location(),
       router: TestStubs.router(),
+      organization: TestStubs.Organization(),
     },
     childContextTypes: {
       router: PropTypes.object,
       location: PropTypes.object,
+      organization: PropTypes.object,
     },
   }),
 
@@ -119,6 +121,42 @@ window.TestStubs = {
     ];
   },
 
+  DebugSymbols: params => ({
+    debugSymbols: [
+      {
+        dateAdded: '2018-01-31T07:16:26.072Z',
+        dsym: {
+          headers: {'Content-Type': 'text/x-proguard+plain'},
+          sha1: 'e6d3c5185dac63eddfdc1a5edfffa32d46103b44',
+          uuid: '6dc7fdb0-d2fb-4c8e-9d6b-bb1aa98929b1',
+          objectName: 'proguard-mapping',
+          dateCreated: '2018-01-31T07:16:26.010Z',
+          cpuName: 'any',
+          id: '1',
+          symbolType: 'proguard',
+          size: 212,
+        },
+        dsymAppId: 1,
+        version: '1.0',
+        build: '1',
+        id: '1',
+      },
+    ],
+    unreferencedDebugSymbols: [],
+    apps: [
+      {
+        lastSync: '2018-01-31T07:16:26.070Z',
+        name: 'MyApp',
+        iconUrl: null,
+        platforms: '',
+        platform: 'android',
+        appId: 'com.example.myapp',
+        id: '1',
+      },
+    ],
+    ...params,
+  }),
+
   GitHubRepositoryProvider: params => {
     return {
       id: 'github',
diff --git a/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
new file mode 100644
index 0000000000..257e8959f8
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
@@ -0,0 +1,610 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ProjectDebugSymbols renders 1`] = `
+.glamor-4 {
+  font-size: 14px;
+  box-shadow: inset 0 -1px 0;
+  margin: -20px 0 30px;
+}
+
+.glamor-2 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-align-items: center;
+  -webkit-box-align: center;
+  -ms-flex-align: center;
+  align-items: center;
+}
+
+.glamor-0 {
+  font-size: 20px;
+  font-weight: bold;
+  margin: 20px 0;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-6 {
+  line-height: 1.5;
+  margin-bottom: 30px;
+}
+
+.glamor-41 {
+  background: #fff;
+  border: 1px solid;
+  margin-bottom: 30px;
+  position: relative;
+}
+
+.glamor-15 {
+  border-bottom: 1px solid;
+  border-radius: 0 0;
+  text-transform: uppercase;
+  font-size: 13px;
+  line-height: 1;
+  padding: 15px 20px;
+}
+
+.glamor-11 {
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-9 {
+  font-size: 12px;
+  font-weight: 600;
+  text-transform: uppercase;
+  margin-bottom: 20px;
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-37 {
+  box-sizing: border-box;
+  padding: 16px;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-flex-direction: column;
+  -ms-flex-direction: column;
+  flex-direction: column;
+  border-bottom: 1px solid;
+}
+
+.glamor-37:last-child {
+  border: 0;
+}
+
+.glamor-33 {
+  cursor: pointer;
+  -webkit-transition: all 0s ease-in-out;
+  transition: all 0s ease-in-out;
+}
+
+.glamor-28 {
+  box-sizing: border-box;
+  padding: 16px;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  border-bottom: 1px solid;
+  cursor: pointer;
+  -webkit-transition: all 0s ease-in-out;
+  transition: all 0s ease-in-out;
+}
+
+.glamor-28:last-child {
+  border: 0;
+}
+
+.glamor-23 {
+  box-sizing: border-box;
+  padding: 16px;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-flex-direction: column;
+  -ms-flex-direction: column;
+  flex-direction: column;
+}
+
+.glamor-19 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-align-items: center;
+  -webkit-box-align: center;
+  -ms-flex-align: center;
+  align-items: center;
+  font-size: 12px;
+}
+
+.glamor-17 {
+  margin-right: 4px;
+}
+
+.glamor-25 {
+  box-sizing: border-box;
+  padding: 16px;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+}
+
+<ProjectDebugSymbols
+  params={
+    Object {
+      "orgId": "org",
+      "projectId": "project",
+    }
+  }
+>
+  <div>
+    <SettingsPageHeading
+      title="Debug Information Files"
+    >
+      <Styled(div)>
+        <div
+          className="glamor-4 glamor-5"
+        >
+          <Flex
+            align="center"
+          >
+            <Base
+              align="center"
+              className="glamor-2"
+            >
+              <div
+                className="glamor-2"
+                is={null}
+              >
+                <Styled(div)>
+                  <div
+                    className="glamor-0 glamor-1"
+                  >
+                    Debug Information Files
+                  </div>
+                </Styled(div)>
+              </div>
+            </Base>
+          </Flex>
+        </div>
+      </Styled(div)>
+    </SettingsPageHeading>
+    <Styled(div)>
+      <div
+        className="glamor-6 glamor-7"
+      >
+        
+          Here you can find uploaded debug information (for instance debug
+          symbol files or proguard mappings).  This is used to convert
+          addresses and minified function names from crash dumps
+          into function names and locations.  For JavaScript debug support
+          look at releases instead.
+        
+      </div>
+    </Styled(div)>
+    <Styled(div)
+      key="1"
+      style={
+        Object {
+          "marginBottom": 40,
+        }
+      }
+    >
+      <div
+        className="glamor-41 glamor-42"
+        style={
+          Object {
+            "marginBottom": 40,
+          }
+        }
+      >
+        <PanelHeader>
+          <Styled(div)>
+            <div
+              className="glamor-15 glamor-16"
+            >
+              <Styled(Component)>
+                <Component
+                  className="glamor-11 glamor-8"
+                >
+                  <Styled(div)
+                    className="glamor-11 glamor-8"
+                  >
+                    <div
+                      className="glamor-8 glamor-9 glamor-10"
+                    >
+                      <div
+                        className="app-icon"
+                        style={null}
+                      />
+                      MyApp
+                       
+                      <small>
+                        (
+                        com.example.myapp
+                        )
+                      </small>
+                    </div>
+                  </Styled(div)>
+                </Component>
+              </Styled(Component)>
+            </div>
+          </Styled(div)>
+        </PanelHeader>
+        <PanelBody
+          direction="column"
+          disablePadding={true}
+          flex={false}
+        >
+          <div
+            className=""
+          >
+            <Row
+              direction="column"
+              key="1.0"
+              p={2}
+            >
+              <Styled(Base)
+                direction="column"
+                p={2}
+              >
+                <Base
+                  className="glamor-37 glamor-29"
+                  direction="column"
+                  p={2}
+                >
+                  <div
+                    className="glamor-37 glamor-29"
+                    is={null}
+                  >
+                    <Styled(Row)
+                      className="hoverable"
+                      onClick={[Function]}
+                    >
+                      <Row
+                        className="hoverable glamor-33 glamor-27"
+                        onClick={[Function]}
+                        p={2}
+                      >
+                        <Styled(Base)
+                          className="hoverable glamor-33 glamor-27"
+                          onClick={[Function]}
+                          p={2}
+                        >
+                          <Base
+                            className="hoverable glamor-27 glamor-28 glamor-29"
+                            onClick={[Function]}
+                            p={2}
+                          >
+                            <div
+                              className="hoverable glamor-27 glamor-28 glamor-29"
+                              is={null}
+                              onClick={[Function]}
+                            >
+                              <Flex
+                                direction="column"
+                                flex="1"
+                                p={2}
+                              >
+                                <Base
+                                  className="glamor-23"
+                                  direction="column"
+                                  flex="1"
+                                  p={2}
+                                >
+                                  <div
+                                    className="glamor-23"
+                                    is={null}
+                                  >
+                                    <h3
+                                      className="truncate"
+                                    >
+                                      1.0
+                                    </h3>
+                                    <div
+                                      className="event-message"
+                                    >
+                                      Builds
+                                      : 
+                                      1
+                                    </div>
+                                    <Styled(Base)
+                                      align="center"
+                                    >
+                                      <Base
+                                        align="center"
+                                        className="glamor-19 glamor-20"
+                                      >
+                                        <div
+                                          className="glamor-19 glamor-20"
+                                          is={null}
+                                        >
+                                          <Styled(span)
+                                            className="icon icon-clock"
+                                          >
+                                            <span
+                                              className="icon icon-clock glamor-17 glamor-18"
+                                            />
+                                          </Styled(span)>
+                                          <TimeSince
+                                            date="2018-01-31T07:16:26.072Z"
+                                            suffix="ago"
+                                          >
+                                            <time
+                                              dateTime="2018-01-31T07:16:26.072Z"
+                                              title="January 31, 2018 7:16 AM UTC"
+                                            >
+                                              in 3 months
+                                            </time>
+                                          </TimeSince>
+                                        </div>
+                                      </Base>
+                                    </Styled(Base)>
+                                  </div>
+                                </Base>
+                              </Flex>
+                              <Flex
+                                p={2}
+                              >
+                                <Base
+                                  className="glamor-25"
+                                  p={2}
+                                >
+                                  <div
+                                    className="glamor-25"
+                                    is={null}
+                                  >
+                                    Debug Information Files
+                                    : 
+                                    1
+                                  </div>
+                                </Base>
+                              </Flex>
+                            </div>
+                          </Base>
+                        </Styled(Base)>
+                      </Row>
+                    </Styled(Row)>
+                  </div>
+                </Base>
+              </Styled(Base)>
+            </Row>
+          </div>
+        </PanelBody>
+      </div>
+    </Styled(div)>
+    <div>
+      <SettingsPageHeading
+        title="Unreferenced Debug Information Files"
+      >
+        <Styled(div)>
+          <div
+            className="glamor-4 glamor-5"
+          >
+            <Flex
+              align="center"
+            >
+              <Base
+                align="center"
+                className="glamor-2"
+              >
+                <div
+                  className="glamor-2"
+                  is={null}
+                >
+                  <Styled(div)>
+                    <div
+                      className="glamor-0 glamor-1"
+                    >
+                      Unreferenced Debug Information Files
+                    </div>
+                  </Styled(div)>
+                </div>
+              </Base>
+            </Flex>
+          </div>
+        </Styled(div)>
+      </SettingsPageHeading>
+      <Styled(div)>
+        <div
+          className="glamor-6 glamor-7"
+        >
+          
+          This list represents all Debug Information Files which are not assigned to an
+          app version. We will still find these debug symbols for symbolication
+          but we can't tell you which versions they belong to.  This happens
+          if you upload them with an old verison of sentry-cli or if sentry-cli
+          can't locate the Info.plist file at the time of upload.
+        
+        </div>
+      </Styled(div)>
+      <table
+        className="table"
+      >
+        <thead>
+          <tr>
+            <th>
+              UUID
+            </th>
+            <th>
+              Object
+            </th>
+            <th>
+              Type
+            </th>
+            <th>
+              Uploaded
+            </th>
+            <th>
+              Size
+            </th>
+            <th />
+          </tr>
+        </thead>
+        <tbody />
+      </table>
+    </div>
+    <Modal
+      animation={false}
+      autoFocus={true}
+      backdrop="static"
+      bsClass="modal"
+      bsSize="lg"
+      dialogComponentClass={[Function]}
+      enforceFocus={false}
+      keyboard={true}
+      manager={
+        ModalManager {
+          "add": [Function],
+          "containers": Array [],
+          "data": Array [],
+          "handleContainerOverflow": true,
+          "hideSiblingNodes": true,
+          "isTopModal": [Function],
+          "modals": Array [],
+          "remove": [Function],
+        }
+      }
+      onHide={[Function]}
+      renderBackdrop={[Function]}
+      restoreFocus={true}
+      show={false}
+    >
+      <Modal
+        autoFocus={true}
+        backdrop="static"
+        backdropClassName="modal-backdrop"
+        containerClassName="modal-open"
+        enforceFocus={false}
+        keyboard={true}
+        manager={
+          ModalManager {
+            "add": [Function],
+            "containers": Array [],
+            "data": Array [],
+            "handleContainerOverflow": true,
+            "hideSiblingNodes": true,
+            "isTopModal": [Function],
+            "modals": Array [],
+            "remove": [Function],
+          }
+        }
+        onEntering={[Function]}
+        onExited={[Function]}
+        onHide={[Function]}
+        renderBackdrop={[Function]}
+        restoreFocus={true}
+        show={false}
+      />
+    </Modal>
+  </div>
+</ProjectDebugSymbols>
+`;
+
+exports[`ProjectDebugSymbols renders empty 1`] = `
+<div>
+  <SettingsPageHeading
+    title="Debug Information Files"
+  />
+  <Styled(div)>
+    
+          Here you can find uploaded debug information (for instance debug
+          symbol files or proguard mappings).  This is used to convert
+          addresses and minified function names from crash dumps
+          into function names and locations.  For JavaScript debug support
+          look at releases instead.
+        
+  </Styled(div)>
+  <div
+    className="box"
+  >
+    <LoadingIndicator />
+  </div>
+  <Modal
+    animation={false}
+    autoFocus={true}
+    backdrop="static"
+    bsClass="modal"
+    bsSize="lg"
+    dialogComponentClass={[Function]}
+    enforceFocus={false}
+    keyboard={true}
+    manager={
+      ModalManager {
+        "add": [Function],
+        "containers": Array [],
+        "data": Array [],
+        "handleContainerOverflow": true,
+        "hideSiblingNodes": true,
+        "isTopModal": [Function],
+        "modals": Array [],
+        "remove": [Function],
+      }
+    }
+    onHide={[Function]}
+    renderBackdrop={[Function]}
+    restoreFocus={true}
+    show={false}
+  >
+    <ModalHeader
+      bsClass="modal-header"
+      closeButton={true}
+      closeLabel="Close"
+    >
+      <ModalTitle
+        bsClass="modal-title"
+        componentClass="h4"
+      >
+         (
+        )
+      </ModalTitle>
+    </ModalHeader>
+    <ModalBody
+      bsClass="modal-body"
+      componentClass="div"
+    >
+      <table
+        className="table"
+      >
+        <thead>
+          <tr>
+            <th>
+              UUID
+            </th>
+            <th>
+              Object
+            </th>
+            <th>
+              Type
+            </th>
+            <th>
+              Uploaded
+            </th>
+            <th>
+              Size
+            </th>
+          </tr>
+        </thead>
+        <tbody />
+      </table>
+    </ModalBody>
+  </Modal>
+</div>
+`;
diff --git a/tests/js/spec/views/projectDebugSymbols.spec.jsx b/tests/js/spec/views/projectDebugSymbols.spec.jsx
new file mode 100644
index 0000000000..5a03175e7c
--- /dev/null
+++ b/tests/js/spec/views/projectDebugSymbols.spec.jsx
@@ -0,0 +1,44 @@
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+
+import {Client} from 'app/api';
+import ProjectDebugSymbols from 'app/views/projectDebugSymbols';
+
+const ENDPOINT = '/projects/org/project/files/dsyms/';
+
+describe('ProjectDebugSymbols', function() {
+  beforeEach(function() {
+    Client.clearMockResponses();
+  });
+
+  it('renders empty', function() {
+    Client.addMockResponse({
+      url: ENDPOINT,
+      body: [],
+    });
+    let wrapper = shallow(
+      <ProjectDebugSymbols params={{orgId: 'org', projectId: 'project'}} />,
+      TestStubs.routerContext()
+    );
+
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('renders', function() {
+    Client.addMockResponse({
+      url: ENDPOINT,
+      body: TestStubs.DebugSymbols(),
+    });
+    Client.addMockResponse({
+      url: ENDPOINT,
+      method: 'PUT',
+    });
+
+    let wrapper = mount(
+      <ProjectDebugSymbols params={{orgId: 'org', projectId: 'project'}} />,
+      TestStubs.routerContext()
+    );
+
+    expect(wrapper).toMatchSnapshot();
+  });
+});
