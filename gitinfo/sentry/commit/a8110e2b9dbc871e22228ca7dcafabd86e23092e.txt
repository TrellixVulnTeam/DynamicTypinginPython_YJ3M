commit a8110e2b9dbc871e22228ca7dcafabd86e23092e
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jan 17 12:06:40 2013 -0800

    Discard timestamps that are in the future

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 7a2946d989..3ca99e2f30 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -237,8 +237,7 @@ def process_data_timestamp(data):
         try:
             data['timestamp'] = datetime.fromtimestamp(float(data['timestamp']))
         except Exception:
-            logger.exception('Failed reading timestamp')
-            del data['timestamp']
+            raise InvalidTimestamp('Invalid value for timestamp: %r' % data['timestamp'])
     elif not isinstance(data['timestamp'], datetime):
         if '.' in data['timestamp']:
             format = '%Y-%m-%dT%H:%M:%S.%f'
@@ -252,6 +251,9 @@ def process_data_timestamp(data):
         except Exception:
             raise InvalidTimestamp('Invalid value for timestamp: %r' % data['timestamp'])
 
+    if data['timestamp'] > datetime.now():
+        raise InvalidTimestamp('Invalid value for timestamp (in future): %r' % data['timestamp'])
+
     return data
 
 
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index 92ca614d12..2b328b7c54 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -176,6 +176,11 @@ class ProcessDataTimestampTest(BaseAPITest):
             'timestamp': 'foo'
         })
 
+    def test_future_timestamp(self):
+        self.assertRaises(InvalidTimestamp, process_data_timestamp, {
+            'timestamp': '2052-01-01T10:30:45Z'
+        })
+
 
 class InsertDataToDatabaseTest(BaseAPITest):
     @mock.patch('sentry.models.Group.objects.from_kwargs')
