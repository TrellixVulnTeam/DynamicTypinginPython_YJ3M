commit 4bb492245937226a58d4755bda41c89d4ff7ac9e
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Jun 6 13:20:49 2019 -0700

    ref(sentry10): Remove Sentry 9 releases code (#13527)

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index c768179cd0..a6f0985c58 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -1045,48 +1045,48 @@ function routes() {
           <Route
             path="/organizations/:orgId/releases/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationReleases" */ './views/releases/list/organizationReleases')
+              import(/* webpackChunkName: "OrganizationReleases" */ './views/organizationReleases/list')
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/releases/:version/"
             componentPromise={() =>
-              import(/*webpackChunkName: "OrganizationReleaseDetail"*/ './views/releases/detail/organization')
+              import(/*webpackChunkName: "OrganizationReleaseDetail"*/ './views/organizationReleases/detail')
             }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/*webpackChunkName: "OrganizationReleaseOverview"*/ './views/releases/detail/organization/releaseOverview')
+                import(/*webpackChunkName: "OrganizationReleaseOverview"*/ './views/organizationReleases/detail/releaseOverview')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="new-events/"
               componentPromise={() =>
-                import(/*webpackChunkName: "OrganizationReleaseNewEvents"*/ './views/releases/detail/organization/releaseNewEvents')
+                import(/*webpackChunkName: "OrganizationReleaseNewEvents"*/ './views/organizationReleases/detail/releaseNewEvents')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="all-events/"
               componentPromise={() =>
-                import(/*webpackChunkName: "OrganizationReleaseAllEvents"*/ './views/releases/detail/organization/releaseAllEvents')
+                import(/*webpackChunkName: "OrganizationReleaseAllEvents"*/ './views/organizationReleases/detail/releaseAllEvents')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="artifacts/"
               componentPromise={() =>
-                import(/*webpackChunkName: "ReleaseArtifacts"*/ './views/releases/detail/shared/releaseArtifacts')
+                import(/*webpackChunkName: "ReleaseArtifacts"*/ './views/organizationReleases/detail/releaseArtifacts')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="commits/"
               componentPromise={() =>
-                import(/*webpackChunkName: "ReleaseCommits"*/ './views/releases/detail/shared/releaseCommits')
+                import(/*webpackChunkName: "ReleaseCommits"*/ './views/organizationReleases/detail/releaseCommits')
               }
               component={errorHandler(LazyLoad)}
             />
@@ -1157,57 +1157,28 @@ function routes() {
             }
             component={errorHandler(LazyLoad)}
           />
-          <Route
-            path="releases/"
-            componentPromise={() =>
-              import(/* webpackChunkName: "ProjectReleases" */ './views/releases/list/projectReleases')
-            }
-            component={errorHandler(LazyLoad)}
+          <Redirect from="releases/" to="/organizations/:orgId/releases/" />
+          <Redirect
+            from="releases/:version/"
+            to="/organizations/:orgId/releases/:version/"
+          />
+          <Redirect
+            from="releases/:version/new-events/"
+            to="/organizations/:orgId/releases/:version/new-events/"
+          />
+          <Redirect
+            from="releases/:version/all-events/"
+            to="/organizations/:orgId/releases/:version/all-events/"
+          />
+          <Redirect
+            from="releases/:version/artifacts/"
+            to="/organizations/:orgId/releases/:version/artifacts/"
+          />
+          <Redirect
+            from="releases/:version/commits/"
+            to="/organizations/:orgId/releases/:version/commits/"
           />
-          <Route
-            path="releases/:version/"
-            componentPromise={() =>
-              import(/*webpackChunkName:"ProjectReleaseDetails"*/ './views/releases/detail/project')
-            }
-            component={errorHandler(LazyLoad)}
-          >
-            <IndexRoute
-              componentPromise={() =>
-                import(/*webpackChunkName:"ProjectReleaseOverview"*/ './views/releases/detail/project/releaseOverview')
-              }
-              component={errorHandler(LazyLoad)}
-            />
-
-            <Route
-              path="new-events/"
-              componentPromise={() =>
-                import(/*webpackChunkName:"ProjectReleaseNewEvents"*/ './views/releases/detail/project/releaseNewEvents')
-              }
-              component={errorHandler(LazyLoad)}
-            />
 
-            <Route
-              path="all-events/"
-              componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseAllEvents" */ './views/releases/detail/project/releaseAllEvents')
-              }
-              component={errorHandler(LazyLoad)}
-            />
-            <Route
-              path="artifacts/"
-              componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseArtifacts" */ './views/releases/detail/shared/releaseArtifacts')
-              }
-              component={errorHandler(LazyLoad)}
-            />
-            <Route
-              path="commits/"
-              componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseCommits" */ './views/releases/detail/shared/releaseCommits')
-              }
-              component={errorHandler(LazyLoad)}
-            />
-          </Route>
           <Redirect from="user-feedback/" to="/organizations/:orgId/user-feedback/" />
           <Route path="settings/" component={errorHandler(ProjectSettings)}>
             <Redirect from="teams/" to="/settings/:orgId/projects/:projectId/teams/" />
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/commitAuthorStats.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/commitAuthorStats.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/commitAuthorStats.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/commitAuthorStats.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/groupList.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/groupList.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/groupList.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/groupList.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/groupListHeader.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/groupListHeader.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/groupListHeader.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/groupListHeader.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/index.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/index.jsx
index 787fe43807..2dbabf866e 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationReleases/detail/index.jsx
@@ -11,7 +11,7 @@ import withOrganization from 'app/utils/withOrganization';
 import AsyncView from 'app/views/asyncView';
 import {PageContent} from 'app/styles/organization';
 
-import ReleaseHeader from '../shared/releaseHeader';
+import ReleaseHeader from './releaseHeader';
 
 class OrganizationReleaseDetailsContainer extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/views/releases/detail/organization/releaseAllEvents.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseAllEvents.jsx
similarity index 95%
rename from src/sentry/static/sentry/app/views/releases/detail/organization/releaseAllEvents.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseAllEvents.jsx
index 3295720c17..c2f6c09ce6 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/organization/releaseAllEvents.jsx
+++ b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseAllEvents.jsx
@@ -5,7 +5,7 @@ import SentryTypes from 'app/sentryTypes';
 import Alert from 'app/components/alert';
 import {t} from 'app/locale';
 
-import GroupList from '../shared/groupList';
+import GroupList from './groupList';
 
 export default class ReleaseAllEvents extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseArtifacts.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseArtifacts.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/releaseArtifacts.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseArtifacts.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseCommits.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseCommits.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/releaseCommits.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseCommits.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseDeploys.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseDeploys.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/releaseDeploys.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseDeploys.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseDetailActions.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseDetailActions.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/releaseDetailActions.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseDetailActions.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseEmptyState.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseEmptyState.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/releaseEmptyState.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseEmptyState.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseHeader.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseHeader.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/releaseHeader.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseHeader.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseIssues.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseIssues.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/releaseIssues.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseIssues.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/organization/releaseNewEvents.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseNewEvents.jsx
similarity index 95%
rename from src/sentry/static/sentry/app/views/releases/detail/organization/releaseNewEvents.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseNewEvents.jsx
index 0b3eee7a91..a831c58afc 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/organization/releaseNewEvents.jsx
+++ b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseNewEvents.jsx
@@ -5,7 +5,7 @@ import SentryTypes from 'app/sentryTypes';
 import Alert from 'app/components/alert';
 import {t} from 'app/locale';
 
-import GroupList from '../shared/groupList';
+import GroupList from './groupList';
 
 export default class OrganizationReleaseNewEvents extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/views/releases/detail/organization/releaseOverview.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseOverview.jsx
similarity index 89%
rename from src/sentry/static/sentry/app/views/releases/detail/organization/releaseOverview.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseOverview.jsx
index 5f5d590eee..404c39fcc8 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/organization/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseOverview.jsx
@@ -8,12 +8,12 @@ import RepositoryFileSummary from 'app/components/repositoryFileSummary';
 import AsyncComponent from 'app/components/asyncComponent';
 import {t} from 'app/locale';
 
-import {getFilesByRepository} from '../shared/utils';
-import ReleaseDeploys from '../shared/releaseDeploys';
-import ReleaseEmptyState from '../shared/releaseEmptyState';
-import ReleaseIssues from '../shared/releaseIssues';
-import CommitAuthorStats from '../shared/commitAuthorStats';
-import ReleaseProjectStatSparkline from '../shared/releaseProjectStatSparkline';
+import {getFilesByRepository} from './utils';
+import ReleaseDeploys from './releaseDeploys';
+import ReleaseEmptyState from './releaseEmptyState';
+import ReleaseIssues from './releaseIssues';
+import CommitAuthorStats from './commitAuthorStats';
+import ReleaseProjectStatSparkline from './releaseProjectStatSparkline';
 
 export default class OrganizationReleaseOverview extends AsyncComponent {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseProjectStatSparkline.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/releaseProjectStatSparkline.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/releaseProjectStatSparkline.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/releaseProjectStatSparkline.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/utils.jsx b/src/sentry/static/sentry/app/views/organizationReleases/detail/utils.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/detail/shared/utils.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/detail/utils.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx b/src/sentry/static/sentry/app/views/organizationReleases/list/index.jsx
similarity index 94%
rename from src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/list/index.jsx
index 2c943cb60a..afc19d44d1 100644
--- a/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationReleases/list/index.jsx
@@ -16,11 +16,11 @@ import withGlobalSelection from 'app/utils/withGlobalSelection';
 import {PageContent, PageHeader} from 'app/styles/organization';
 import PageHeading from 'app/components/pageHeading';
 
-import ReleaseList from '../shared/releaseList';
-import ReleaseListHeader from '../shared/releaseListHeader';
-import ReleaseLanding from '../shared/releaseLanding';
-import ReleaseProgress from '../shared/releaseProgress';
-import {getQuery} from '../shared/utils';
+import ReleaseList from './releaseList';
+import ReleaseListHeader from './releaseListHeader';
+import ReleaseLanding from './releaseLanding';
+import ReleaseProgress from './releaseProgress';
+import {getQuery} from './utils';
 
 class OrganizationReleasesContainer extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/views/releases/list/shared/progressBar.jsx b/src/sentry/static/sentry/app/views/organizationReleases/list/progressBar.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/list/shared/progressBar.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/list/progressBar.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/list/shared/releaseLanding.jsx b/src/sentry/static/sentry/app/views/organizationReleases/list/releaseLanding.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/list/shared/releaseLanding.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/list/releaseLanding.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/list/shared/releaseLandingCard.jsx b/src/sentry/static/sentry/app/views/organizationReleases/list/releaseLandingCard.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/list/shared/releaseLandingCard.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/list/releaseLandingCard.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/list/shared/releaseList.jsx b/src/sentry/static/sentry/app/views/organizationReleases/list/releaseList.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/list/shared/releaseList.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/list/releaseList.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/list/shared/releaseListHeader.jsx b/src/sentry/static/sentry/app/views/organizationReleases/list/releaseListHeader.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/list/shared/releaseListHeader.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/list/releaseListHeader.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/list/shared/releaseProgress.jsx b/src/sentry/static/sentry/app/views/organizationReleases/list/releaseProgress.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/list/shared/releaseProgress.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/list/releaseProgress.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/list/shared/utils.jsx b/src/sentry/static/sentry/app/views/organizationReleases/list/utils.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/releases/list/shared/utils.jsx
rename to src/sentry/static/sentry/app/views/organizationReleases/list/utils.jsx
diff --git a/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx b/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx
deleted file mode 100644
index 2a43b4d1f2..0000000000
--- a/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx
+++ /dev/null
@@ -1,141 +0,0 @@
-import DocumentTitle from 'react-document-title';
-import PropTypes from 'prop-types';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import {browserHistory} from 'react-router';
-
-import withApi from 'app/utils/withApi';
-
-import LoadingError from 'app/components/loadingError';
-import LoadingIndicator from 'app/components/loadingIndicator';
-import ProjectState from 'app/mixins/projectState';
-import SentryTypes from 'app/sentryTypes';
-
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-
-import ReleaseHeader from '../shared/releaseHeader';
-
-const ProjectReleaseDetails = createReactClass({
-  displayName: 'ProjectReleaseDetails',
-
-  propTypes: {
-    api: PropTypes.object,
-    setProjectNavSection: PropTypes.func,
-    environment: SentryTypes.Environment,
-  },
-
-  contextTypes: {
-    organization: SentryTypes.Organization,
-  },
-
-  childContextTypes: {
-    release: PropTypes.object,
-  },
-
-  mixins: [ProjectState],
-
-  getInitialState() {
-    return {
-      release: null,
-      loading: true,
-      error: false,
-    };
-  },
-
-  getChildContext() {
-    return {
-      release: this.state.release,
-    };
-  },
-
-  componentWillMount() {
-    // Redirect any Sentry 10 user that has followed an old link and ended up here
-    const {
-      location,
-      params: {orgId, version},
-    } = this.props;
-    const hasSentry10 = new Set(this.context.organization.features).has('sentry10');
-    if (hasSentry10) {
-      browserHistory.replace(
-        `/organizations/${orgId}/releases/${version}/${location.search}`
-      );
-    }
-
-    this.props.setProjectNavSection('releases');
-    this.fetchData();
-  },
-
-  componentDidUpdate(prevProps) {
-    if (this.props.environment !== prevProps.environment) {
-      this.fetchData();
-    }
-  },
-
-  getTitle() {
-    const project = this.getProject();
-    const params = this.props.params;
-    return 'Release ' + params.version + ' | ' + project.slug;
-  },
-
-  fetchData() {
-    this.setState({
-      loading: true,
-      error: false,
-    });
-
-    const {environment} = this.props;
-    const query = environment ? {environment: environment.name} : {};
-
-    this.props.api.request(this.getReleaseDetailsEndpoint(), {
-      query,
-      success: data => {
-        this.setState({
-          loading: false,
-          release: data,
-        });
-      },
-      error: () => {
-        this.setState({
-          loading: false,
-          error: true,
-        });
-      },
-    });
-  },
-
-  getReleaseDetailsEndpoint() {
-    const params = this.props.params;
-    const orgId = params.orgId;
-    const projectId = params.projectId;
-    const version = encodeURIComponent(params.version);
-
-    return `/projects/${orgId}/${projectId}/releases/${version}/`;
-  },
-
-  render() {
-    if (this.state.loading) {
-      return <LoadingIndicator />;
-    } else if (this.state.error) {
-      return <LoadingError onRetry={this.fetchData} />;
-    }
-
-    const release = this.state.release;
-    const {orgId, projectId} = this.props.params;
-
-    return (
-      <DocumentTitle title={this.getTitle()}>
-        <div className="ref-release-details">
-          <ReleaseHeader release={release} orgId={orgId} projectId={projectId} />
-          {React.cloneElement(this.props.children, {
-            release,
-            environment: this.props.environment,
-          })}
-        </div>
-      </DocumentTitle>
-    );
-  },
-});
-
-export {ProjectReleaseDetails};
-
-export default withApi(withEnvironmentInQueryString(ProjectReleaseDetails));
diff --git a/src/sentry/static/sentry/app/views/releases/detail/project/releaseAllEvents.jsx b/src/sentry/static/sentry/app/views/releases/detail/project/releaseAllEvents.jsx
deleted file mode 100644
index 4c4438d66c..0000000000
--- a/src/sentry/static/sentry/app/views/releases/detail/project/releaseAllEvents.jsx
+++ /dev/null
@@ -1,47 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {Link} from 'react-router';
-
-import SentryTypes from 'app/sentryTypes';
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-import {t} from 'app/locale';
-
-import GroupList from '../shared/groupList';
-
-class ReleaseAllEvents extends React.Component {
-  static propTypes = {
-    environment: SentryTypes.Environment,
-  };
-
-  static contextTypes = {
-    release: PropTypes.object,
-  };
-
-  render() {
-    const {orgId, projectId} = this.props.params;
-    return (
-      <div>
-        <div className="alert alert-block">
-          <Link
-            to={{
-              pathname: `/${orgId}/${projectId}/`,
-              query: {query: 'release:' + this.context.release.version},
-            }}
-          >
-            <span className="icon icon-open" />
-            {t('View all events seen in this release in the stream')}
-          </Link>
-        </div>
-        <GroupList
-          orgId={orgId}
-          projectId={projectId}
-          query={'release:"' + this.context.release.version + '"'}
-          canSelectGroups={false}
-          environment={this.props.environment}
-        />
-      </div>
-    );
-  }
-}
-
-export default withEnvironmentInQueryString(ReleaseAllEvents);
diff --git a/src/sentry/static/sentry/app/views/releases/detail/project/releaseNewEvents.jsx b/src/sentry/static/sentry/app/views/releases/detail/project/releaseNewEvents.jsx
deleted file mode 100644
index 8ec51bdd5a..0000000000
--- a/src/sentry/static/sentry/app/views/releases/detail/project/releaseNewEvents.jsx
+++ /dev/null
@@ -1,47 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {Link} from 'react-router';
-
-import SentryTypes from 'app/sentryTypes';
-import {t} from 'app/locale';
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-
-import GroupList from '../shared/groupList';
-
-class ReleaseNewEvents extends React.Component {
-  static propTypes = {
-    environment: SentryTypes.Environment,
-  };
-
-  static contextTypes = {
-    release: PropTypes.object,
-  };
-
-  render() {
-    const {orgId, projectId} = this.props.params;
-    return (
-      <div>
-        <div className="alert alert-block">
-          <Link
-            to={{
-              pathname: `/${orgId}/${projectId}/`,
-              query: {query: 'first-release:' + this.context.release.version},
-            }}
-          >
-            <span className="icon icon-open" />
-            {t('View new events seen in this release in the stream')}
-          </Link>
-        </div>
-        <GroupList
-          orgId={orgId}
-          projectId={projectId}
-          query={'first-release:"' + this.context.release.version + '"'}
-          canSelectGroups={false}
-          environment={this.props.environment}
-        />
-      </div>
-    );
-  }
-}
-
-export default withEnvironmentInQueryString(ReleaseNewEvents);
diff --git a/src/sentry/static/sentry/app/views/releases/detail/project/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/detail/project/releaseOverview.jsx
deleted file mode 100644
index 30631c46f4..0000000000
--- a/src/sentry/static/sentry/app/views/releases/detail/project/releaseOverview.jsx
+++ /dev/null
@@ -1,259 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import createReactClass from 'create-react-class';
-
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-import LoadingIndicator from 'app/components/loadingIndicator';
-import LoadingError from 'app/components/loadingError';
-import LastCommit from 'app/components/lastCommit';
-import RepositoryFileSummary from 'app/components/repositoryFileSummary';
-
-import withApi from 'app/utils/withApi';
-
-import {t} from 'app/locale';
-import SentryTypes from 'app/sentryTypes';
-import OrganizationState from 'app/mixins/organizationState';
-
-import {getFilesByRepository} from '../shared/utils';
-import ReleaseDeploys from '../shared/releaseDeploys';
-import ReleaseEmptyState from '../shared/releaseEmptyState';
-import ReleaseIssues from '../shared/releaseIssues';
-import CommitAuthorStats from '../shared/commitAuthorStats';
-import ReleaseProjectStatSparkline from '../shared/releaseProjectStatSparkline';
-
-const ReleaseOverview = createReactClass({
-  displayName: 'ReleaseOverview',
-
-  propTypes: {
-    api: PropTypes.object,
-    environment: SentryTypes.Environment,
-  },
-
-  contextTypes: {
-    release: PropTypes.object,
-  },
-
-  mixins: [OrganizationState],
-
-  getInitialState() {
-    return {
-      loading: true,
-      error: false,
-      projects: [],
-      fileList: [],
-      deploys: [],
-      hasRepos: false,
-    };
-  },
-
-  componentDidMount() {
-    this.fetchAll();
-  },
-
-  componentDidUpdate(prevProps) {
-    if (prevProps.environment !== this.props.environment) {
-      this.fetchAll();
-    }
-  },
-
-  fetchAll() {
-    const {orgId, version} = this.props.params;
-    const query = {
-      ...this.props.location.query,
-    };
-
-    if (this.props.environment) {
-      query.environment = this.props.environment.name;
-    } else {
-      delete query.environment;
-    }
-
-    const path = `/organizations/${orgId}/releases/${encodeURIComponent(
-      version
-    )}/commitfiles/`;
-    this.props.api.request(path, {
-      method: 'GET',
-      data: query,
-      success: (data, _, jqXHR) => {
-        this.setState({
-          fileList: data,
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-        });
-      },
-    });
-    this.getReleaseProjects();
-    this.getDeploys();
-    this.getRepos();
-  },
-
-  getReleaseProjects() {
-    const {orgId, version} = this.props.params;
-    const query = this.props.environment
-      ? {environment: this.props.environment.name}
-      : {};
-
-    const path = `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`;
-    this.props.api.request(path, {
-      query,
-      method: 'GET',
-      success: (data, _, jqXHR) => {
-        this.setState({
-          projects: data.projects,
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-        });
-      },
-    });
-  },
-
-  getDeploys() {
-    const {orgId, version} = this.props.params;
-
-    const path = `/organizations/${orgId}/releases/${encodeURIComponent(
-      version
-    )}/deploys/`;
-    this.props.api.request(path, {
-      method: 'GET',
-      success: (data, _, jqXHR) => {
-        this.setState({
-          deploys: data,
-          loading: false,
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-        });
-      },
-    });
-  },
-
-  getRepos() {
-    const {orgId} = this.props.params;
-    const query = this.props.environment
-      ? {environment: this.props.environment.name}
-      : {};
-
-    const path = `/organizations/${orgId}/repos/`;
-    this.props.api.request(path, {
-      method: 'GET',
-      query,
-      success: (data, _, jqXHR) => {
-        this.setState({
-          hasRepos: data.length > 0,
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-        });
-      },
-    });
-  },
-
-  renderEmpty() {
-    return <div className="box empty">{t('None')}</div>;
-  },
-
-  render() {
-    const {orgId, projectId, version} = this.props.params;
-    const {release} = this.context;
-    const lastCommit = release.lastCommit;
-
-    if (this.state.loading) {
-      return <LoadingIndicator />;
-    }
-
-    if (this.state.error) {
-      return <LoadingError />;
-    }
-
-    const {fileList, projects, hasRepos} = this.state;
-
-    const filesByRepository = getFilesByRepository(fileList);
-
-    const query = this.props.environment
-      ? {environment: this.props.environment.name}
-      : {};
-
-    return (
-      <div>
-        <div className="row" style={{paddingTop: 10}}>
-          <div className="col-sm-8">
-            <ReleaseIssues
-              version={version}
-              query={query}
-              orgId={orgId}
-              projectId={projectId}
-            />
-            {hasRepos && (
-              <div>
-                {Object.keys(filesByRepository).map((repository, i) => {
-                  return (
-                    <RepositoryFileSummary
-                      key={i}
-                      repository={repository}
-                      fileChangeSummary={filesByRepository[repository]}
-                    />
-                  );
-                })}
-              </div>
-            )}
-          </div>
-          <div className="col-sm-4">
-            {hasRepos ? (
-              <div>
-                {lastCommit && (
-                  <LastCommit commit={lastCommit} headerClass="nav-header" />
-                )}
-                <CommitAuthorStats
-                  orgId={orgId}
-                  projectId={projectId}
-                  version={version}
-                />
-                <h6 className="nav-header m-b-1">{t('Other Projects Affected')}</h6>
-                <ul className="nav nav-stacked">
-                  {projects.length === 1
-                    ? this.renderEmpty()
-                    : projects.map(project => {
-                        if (project.slug === projectId) {
-                          return null;
-                        }
-                        return (
-                          <ReleaseProjectStatSparkline
-                            key={project.id}
-                            orgId={orgId}
-                            project={project}
-                            version={version}
-                          />
-                        );
-                      })}
-                </ul>
-              </div>
-            ) : (
-              <ReleaseEmptyState />
-            )}
-            <ReleaseDeploys
-              deploys={this.state.deploys}
-              version={version}
-              orgId={orgId}
-              projectId={projectId}
-            />
-          </div>
-        </div>
-      </div>
-    );
-  },
-});
-
-export {ReleaseOverview};
-
-export default withApi(withEnvironmentInQueryString(ReleaseOverview));
diff --git a/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
deleted file mode 100644
index 617bc15af0..0000000000
--- a/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
+++ /dev/null
@@ -1,252 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import {browserHistory} from 'react-router';
-import DocumentTitle from 'react-document-title';
-import {omit, isEqual} from 'lodash';
-import qs from 'query-string';
-
-import {analytics} from 'app/utils/analytics';
-import SentryTypes from 'app/sentryTypes';
-import withApi from 'app/utils/withApi';
-import LoadingError from 'app/components/loadingError';
-import LoadingIndicator from 'app/components/loadingIndicator';
-import Pagination from 'app/components/pagination';
-import GuideAnchor from 'app/components/assistant/guideAnchor';
-import SearchBar from 'app/components/searchBar';
-import {t, tct} from 'app/locale';
-import {Panel, PanelBody} from 'app/components/panels';
-import EmptyStateWarning from 'app/components/emptyStateWarning';
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-import PageHeading from 'app/components/pageHeading';
-import ReleaseLanding from '../shared/releaseLanding';
-import ReleaseEmptyState from './releaseEmptyState';
-import ReleaseList from '../shared/releaseList';
-import ReleaseListHeader from '../shared/releaseListHeader';
-import ReleaseProgress from '../shared/releaseProgress';
-
-const DEFAULT_QUERY = '';
-
-const ProjectReleases = createReactClass({
-  displayName: 'ProjectReleases',
-
-  propTypes: {
-    api: PropTypes.object,
-    setProjectNavSection: PropTypes.func,
-    environment: SentryTypes.Environment,
-  },
-
-  contextTypes: {
-    organization: SentryTypes.Organization,
-    project: SentryTypes.Project,
-  },
-
-  getInitialState() {
-    const queryParams = this.props.location.query;
-
-    return {
-      releaseList: [],
-      loading: true,
-      error: false,
-      query: queryParams.query || DEFAULT_QUERY,
-      pageLinks: '',
-      environment: this.props.environment,
-    };
-  },
-
-  componentWillMount() {
-    // Redirect any Sentry 10 user that has followed an old link and ended up here
-    const {
-      location,
-      params: {orgId},
-    } = this.props;
-    const hasSentry10 = new Set(this.context.organization.features).has('sentry10');
-    if (hasSentry10) {
-      browserHistory.replace(`/organizations/${orgId}/releases/${location.search}`);
-    }
-
-    this.props.setProjectNavSection('releases');
-    this.fetchData();
-  },
-
-  componentDidMount() {
-    const {organization, project} = this.context;
-
-    analytics('releases.tab_viewed', {
-      org_id: parseInt(organization.id, 10),
-      project_id: parseInt(project.id, 10),
-    });
-  },
-
-  componentWillReceiveProps(nextProps) {
-    const searchHasChanged = !isEqual(
-      omit(qs.parse(nextProps.location.search), 'environment'),
-      omit(qs.parse(this.props.location.search), 'environment')
-    );
-
-    if (searchHasChanged) {
-      const queryParams = nextProps.location.query;
-      this.setState(
-        {
-          query: queryParams.query,
-        },
-        this.fetchData
-      );
-    }
-
-    if (nextProps.environment !== this.props.environment) {
-      this.setState({environment: nextProps.environment}, this.fetchData);
-    }
-  },
-
-  onSearch(query) {
-    const targetQueryParams = {};
-    if (query !== '') {
-      targetQueryParams.query = query;
-    }
-
-    const {orgId, projectId} = this.props.params;
-    browserHistory.push({
-      pathname: `/${orgId}/${projectId}/releases/`,
-      query: targetQueryParams,
-    });
-  },
-
-  fetchData() {
-    this.setState({
-      loading: true,
-      error: false,
-    });
-
-    const {orgId, projectId} = this.props.params;
-
-    const url = `/projects/${orgId}/${projectId}/releases/`;
-
-    const query = {
-      ...this.props.location.query,
-      per_page: 20,
-      query: this.state.query,
-    };
-
-    if (this.state.environment) {
-      query.environment = this.state.environment.name;
-    } else {
-      delete query.environment;
-    }
-
-    this.props.api.request(url, {
-      query,
-      success: (data, _, jqXHR) => {
-        this.setState({
-          error: false,
-          loading: false,
-          releaseList: data,
-          pageLinks: jqXHR.getResponseHeader('Link'),
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-          loading: false,
-        });
-      },
-    });
-  },
-
-  renderStreamBody() {
-    let body;
-    const {params} = this.props;
-
-    if (this.state.loading) {
-      body = this.renderLoading();
-    } else if (this.state.error) {
-      body = <LoadingError onRetry={this.fetchData} />;
-    } else if (this.state.releaseList.length > 0) {
-      body = (
-        <div>
-          <ReleaseProgress project={this.context.project} />
-          <ReleaseList
-            orgId={params.orgId}
-            projectId={params.projectId}
-            releaseList={this.state.releaseList}
-          />
-        </div>
-      );
-    } else if (this.state.query && this.state.query !== DEFAULT_QUERY) {
-      body = this.renderNoQueryResults();
-    } else {
-      body = this.renderEmpty();
-    }
-
-    return body;
-  },
-
-  renderLoading() {
-    return <LoadingIndicator />;
-  },
-
-  renderNoQueryResults() {
-    return (
-      <EmptyStateWarning>
-        <p>{t('Sorry, no releases match your filters.')}</p>
-      </EmptyStateWarning>
-    );
-  },
-
-  renderEmpty() {
-    const {environment} = this.state;
-    const {project} = this.context;
-    const anyProjectReleases = project.latestRelease;
-
-    const message = environment
-      ? tct("There don't seem to be any releases in your [env] environment yet", {
-          env: environment.displayName,
-        })
-      : t("There don't seem to be any releases yet.");
-
-    return anyProjectReleases === null ? (
-      <ReleaseLanding />
-    ) : (
-      <div>
-        <ReleaseProgress project={project} />
-        <ReleaseEmptyState message={message} />
-      </div>
-    );
-  },
-
-  render() {
-    const {
-      project: {slug: projectSlug},
-      organization: {name: orgName},
-    } = this.context;
-
-    return (
-      <DocumentTitle title={`Releases - ${projectSlug} - ${orgName} - Sentry`}>
-        <div className="ref-project-releases">
-          <GuideAnchor target="releases" type="invisible" />
-          <div className="row" style={{marginBottom: '5px'}}>
-            <div className="col-sm-7">
-              <PageHeading withMargins>{t('Releases')}</PageHeading>
-            </div>
-            <div className="col-sm-5 release-search" style={{marginTop: '5px'}}>
-              <SearchBar
-                defaultQuery=""
-                placeholder={t('Search for a release')}
-                query={this.state.query}
-                onSearch={this.onSearch}
-              />
-            </div>
-          </div>
-          <Panel>
-            <ReleaseListHeader />
-            <PanelBody>{this.renderStreamBody()}</PanelBody>
-          </Panel>
-          <Pagination pageLinks={this.state.pageLinks} />
-        </div>
-      </DocumentTitle>
-    );
-  },
-});
-
-export {ProjectReleases}; // For tests
-export default withApi(withEnvironmentInQueryString(ProjectReleases));
diff --git a/src/sentry/static/sentry/app/views/releases/list/projectReleases/releaseEmptyState.jsx b/src/sentry/static/sentry/app/views/releases/list/projectReleases/releaseEmptyState.jsx
deleted file mode 100644
index a70c63e605..0000000000
--- a/src/sentry/static/sentry/app/views/releases/list/projectReleases/releaseEmptyState.jsx
+++ /dev/null
@@ -1,26 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {t} from 'app/locale';
-
-import EmptyStateWarning from 'app/components/emptyStateWarning';
-
-class ReleaseEmptyState extends React.Component {
-  static propTypes = {
-    message: PropTypes.string.isRequired,
-  };
-
-  render() {
-    return (
-      <EmptyStateWarning>
-        <p>{this.props.message}</p>
-        <p>
-          <a href="https://docs.sentry.io/learn/releases/">
-            {t('Learn how to integrate Release Tracking')}
-          </a>
-        </p>
-      </EmptyStateWarning>
-    );
-  }
-}
-
-export default ReleaseEmptyState;
diff --git a/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap b/tests/js/spec/views/organizationReleases/detail/__snapshots__/releaseCommits.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
rename to tests/js/spec/views/organizationReleases/detail/__snapshots__/releaseCommits.spec.jsx.snap
diff --git a/tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx b/tests/js/spec/views/organizationReleases/detail/releaseArtifacts.spec.jsx
similarity index 97%
rename from tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx
rename to tests/js/spec/views/organizationReleases/detail/releaseArtifacts.spec.jsx
index faee153075..64c2a04a4b 100644
--- a/tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx
+++ b/tests/js/spec/views/organizationReleases/detail/releaseArtifacts.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {shallow, mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import {ReleaseArtifacts} from 'app/views/releases/detail/shared/releaseArtifacts';
+import {ReleaseArtifacts} from 'app/views/organizationReleases/detail/releaseArtifacts';
 
 describe('ReleaseArtifacts', function() {
   let wrapper;
diff --git a/tests/js/spec/views/releases/detail/releaseCommits.spec.jsx b/tests/js/spec/views/organizationReleases/detail/releaseCommits.spec.jsx
similarity index 93%
rename from tests/js/spec/views/releases/detail/releaseCommits.spec.jsx
rename to tests/js/spec/views/organizationReleases/detail/releaseCommits.spec.jsx
index b0c66c1fae..045ece4a28 100644
--- a/tests/js/spec/views/releases/detail/releaseCommits.spec.jsx
+++ b/tests/js/spec/views/organizationReleases/detail/releaseCommits.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import ReleaseCommits from 'app/views/releases/detail/shared/releaseCommits';
+import ReleaseCommits from 'app/views/organizationReleases/detail/releaseCommits';
 
 describe('ReleaseCommits', function() {
   let wrapper, projectMockResponse, organizationMockResponse;
diff --git a/tests/js/spec/views/releases/detail/releaseDetails.spec.jsx b/tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx
similarity index 92%
rename from tests/js/spec/views/releases/detail/releaseDetails.spec.jsx
rename to tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx
index 0f0e1863d1..b7fc2b4244 100644
--- a/tests/js/spec/views/releases/detail/releaseDetails.spec.jsx
+++ b/tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import ReleaseDetails from 'app/views/releases/detail/project';
+import ReleaseDetails from 'app/views/organizationReleases/detail/';
 
 describe('ReleaseDetails', function() {
   let deleteMock;
@@ -9,7 +9,7 @@ describe('ReleaseDetails', function() {
   beforeEach(function() {
     MockApiClient.clearMockResponses();
     MockApiClient.addMockResponse({
-      url: '/projects/acme/anvils/releases/9.1.1/',
+      url: '/organizations/acme/releases/9.1.1/',
       body: {
         version: '9.1.1',
         ref: 'some-tag',
diff --git a/tests/js/spec/views/releases/list/organizationReleases.spec.jsx b/tests/js/spec/views/organizationReleases/list/organizationReleases.spec.jsx
similarity index 97%
rename from tests/js/spec/views/releases/list/organizationReleases.spec.jsx
rename to tests/js/spec/views/organizationReleases/list/organizationReleases.spec.jsx
index 80eda8a4ad..6a5def0b59 100644
--- a/tests/js/spec/views/releases/list/organizationReleases.spec.jsx
+++ b/tests/js/spec/views/organizationReleases/list/organizationReleases.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import OrganizationReleases from 'app/views/releases/list/organizationReleases';
+import OrganizationReleases from 'app/views/organizationReleases/list/';
 
 describe('OrganizationReleases', function() {
   let organization;
diff --git a/tests/js/spec/views/releases/list/releaseLanding.jsx b/tests/js/spec/views/organizationReleases/list/releaseLanding.jsx
similarity index 93%
rename from tests/js/spec/views/releases/list/releaseLanding.jsx
rename to tests/js/spec/views/organizationReleases/list/releaseLanding.jsx
index 879b553817..8214631b88 100644
--- a/tests/js/spec/views/releases/list/releaseLanding.jsx
+++ b/tests/js/spec/views/organizationReleases/list/releaseLanding.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import ReleaseLanding from 'app/views/releases/list/shared/releaseLanding';
+import ReleaseLanding from 'app/views/organizationReleases/list/releaseLanding';
 
 describe('ProjectReleasesLanding', function() {
   describe('renders and progresses', function() {
diff --git a/tests/js/spec/views/releases/list/projectReleasesProgress.spec.jsx b/tests/js/spec/views/organizationReleases/list/releaseProgress.spec.jsx
similarity index 97%
rename from tests/js/spec/views/releases/list/projectReleasesProgress.spec.jsx
rename to tests/js/spec/views/organizationReleases/list/releaseProgress.spec.jsx
index e90d682aab..7d7fd9a0a0 100644
--- a/tests/js/spec/views/releases/list/projectReleasesProgress.spec.jsx
+++ b/tests/js/spec/views/organizationReleases/list/releaseProgress.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {Client} from 'app/api';
 import {mount} from 'enzyme';
 
-import {ReleaseProgress} from 'app/views/releases/list/shared/releaseProgress';
+import {ReleaseProgress} from 'app/views/organizationReleases/list/releaseProgress';
 
 describe('ReleaseProgress', function() {
   let wrapper, organization, project, getPromptsMock, putMock, routerContext;
diff --git a/tests/js/spec/views/releases/list/projectReleases.spec.jsx b/tests/js/spec/views/releases/list/projectReleases.spec.jsx
deleted file mode 100644
index 56d5571ff2..0000000000
--- a/tests/js/spec/views/releases/list/projectReleases.spec.jsx
+++ /dev/null
@@ -1,145 +0,0 @@
-import React from 'react';
-import {shallow, mount} from 'enzyme';
-import {browserHistory} from 'react-router';
-
-import {ProjectReleases} from 'app/views/releases/list/projectReleases';
-
-describe('ProjectReleases', function() {
-  let props;
-  let projectReleases;
-  const requestMock = MockApiClient.addMockResponse({
-    url: '/projects/123/456/releases/',
-    body: [],
-  });
-
-  MockApiClient.addMockResponse({
-    url: '/promptsactivity/',
-    body: [],
-  });
-
-  MockApiClient.addMockResponse({
-    url: '/projects/org-slug/project-slug/releases/completion/',
-    body: [],
-  });
-
-  beforeEach(function() {
-    props = {
-      api: new MockApiClient(),
-      setProjectNavSection: function() {},
-      params: {orgId: '123', projectId: '456'},
-      location: {query: {per_page: 0, query: 'derp'}},
-    };
-    projectReleases = shallow(<ProjectReleases {...props} />, TestStubs.routerContext());
-  });
-
-  afterEach(function() {});
-
-  describe('fetchData()', function() {
-    it('should call releases endpoint', function() {
-      expect(requestMock).toHaveBeenCalledWith(
-        expect.anything(),
-        expect.objectContaining({
-          query: {per_page: 20, query: 'derp'},
-        })
-      );
-    });
-  });
-
-  describe('getInitialState()', function() {
-    it('should take query state from query string', function() {
-      expect(projectReleases.state('query')).toEqual('derp');
-    });
-  });
-
-  describe('onSearch', function() {
-    it('should change query string with new search parameter', function() {
-      projectReleases.instance().onSearch('searchquery');
-
-      expect(browserHistory.push).toHaveBeenCalledTimes(1);
-      expect(browserHistory.push).toHaveBeenCalledWith({
-        pathname: '/123/456/releases/',
-        query: {query: 'searchquery'},
-      });
-    });
-  });
-
-  // TODO: figure how to trigger componentWillReceiveProps
-
-  describe('componentWillReceiveProps()', function() {
-    it('should update state with latest query pulled from query string', function() {
-      const setState = jest.spyOn(projectReleases.instance(), 'setState');
-
-      const newProps = {
-        ...props,
-        location: {
-          search: '?query=newquery',
-          query: {query: 'newquery'},
-        },
-      };
-      projectReleases.setProps(newProps);
-      projectReleases.update();
-
-      expect(setState).toHaveBeenCalledWith(
-        {
-          query: 'newquery',
-        },
-        expect.anything()
-      );
-    });
-  });
-
-  describe('loads landing cards', function() {
-    it('should take query state from query string', function() {
-      const org = TestStubs.Organization({
-        id: '4',
-      });
-      const project = TestStubs.Project({latestRelease: null});
-      const routerContext = TestStubs.routerContext([{organization: org, project}]);
-
-      props = {
-        api: new MockApiClient(),
-        setProjectNavSection: function() {},
-        params: {orgId: '123', projectId: '456'},
-        location: {query: {per_page: 0, query: ''}},
-      };
-
-      const wrapper = mount(<ProjectReleases {...props} />, routerContext);
-
-      wrapper.setState({
-        loading: false,
-        environment: null,
-      });
-      wrapper.update();
-      expect(wrapper.find('ReleaseLanding')).toHaveLength(1);
-      expect(wrapper.find('ReleaseProgress')).toHaveLength(0);
-      expect(wrapper.find('Contributors')).toHaveLength(1);
-    });
-  });
-
-  describe('loads progress bar', function() {
-    it('should take query state from query string', function() {
-      const org = TestStubs.Organization({
-        id: '4',
-      });
-      const project = TestStubs.Project({latestRelease: null});
-      const routerContext = TestStubs.routerContext([{organization: org, project}]);
-
-      props = {
-        api: new MockApiClient(),
-        setProjectNavSection: function() {},
-        params: {orgId: '123', projectId: '456'},
-        location: {query: {per_page: 0, query: ''}},
-      };
-
-      const wrapper = mount(<ProjectReleases {...props} />, routerContext);
-      wrapper.setState({
-        loading: false,
-        environment: null,
-        releaseList: [{dateCreated: new Date('2017-10-17'), version: 'blah-blah-blah'}],
-      });
-      wrapper.update();
-      expect(wrapper.find('ReleaseLanding')).toHaveLength(0);
-      expect(wrapper.find('ReleaseProgress')).toHaveLength(1);
-    });
-  });
-});
