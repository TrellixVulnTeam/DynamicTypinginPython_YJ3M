commit ab3f94a454c3dbd3c336797bdadc8c48a3ea1a5a
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Sep 21 11:27:20 2010 -0700

    Added message list and details panes

diff --git a/sentry/__init__.py b/sentry/__init__.py
index 660268c015..023c9d6587 100644
--- a/sentry/__init__.py
+++ b/sentry/__init__.py
@@ -1 +1 @@
-__version__ = (1, 1, 0)
\ No newline at end of file
+__version__ = (1, 2, 0)
\ No newline at end of file
diff --git a/sentry/media/styles/global.css b/sentry/media/styles/global.css
index 6b741fc28d..cfd5269d62 100644
--- a/sentry/media/styles/global.css
+++ b/sentry/media/styles/global.css
@@ -65,6 +65,8 @@ ul { margin: 1em 0 1em 2em; }
     padding: 0;
 }
 .nav a { color: inherit; }
+.nav li { display: inline; }
+.nav li a { display: inline-block; }
 
 .sentry-logo {
 	display: inline-block;
@@ -86,17 +88,6 @@ ul { margin: 1em 0 1em 2em; }
 			font-weight: normal; color: #888; margin-bottom: 0; margin-left: 15px;
 			color: #ccc; vertical-align: middle;}
 
-#header .backlink {
-    position: absolute;
-    right: 20px;
-    top: 20px;
-    color: #ccc;
-    text-decoration: none;
-}
-
-#header .backlink:hover {
-    color: #fff;
-}
 
 #footer { clear: both; border-top:1px solid #ddd; background-color: #e5e5e5; }
 #footer .container {
@@ -471,6 +462,7 @@ pre {
     background: rgba(255,255,255,.50);
     -moz-border-radius: 18px;
     -webkit-border-radius: 18px;
+	border-radius: 18px;
     -moz-box-shadow: inset 0 1px 5px rgba(0,0,0, .30), 0 1px 0 #fff;
     -webkit-box-shadow: inset 0 1px 5px rgba(0,0,0, .30), 0 1px 0 #fff;
     position: relative;
@@ -515,4 +507,21 @@ pre {
 }
 .login-form td input { width: 100%; }
 .login-form table td { padding: 5px; }
-.login-submit { text-align: right; }
\ No newline at end of file
+.login-submit { text-align: right; }
+
+#group_nav {
+    border-bottom: 1px solid #ddd;
+}
+#group_nav a {
+    -moz-border-radius: 6px 6px 0 0;
+    -webkit-border-radius: 6px 6px 0 0;
+    border-radius: 6px 6px 0 0;
+    padding: 6px 12px;
+    text-decoration: none;
+}
+#group_nav a:hover {
+    background: #eee;
+}
+#group_nav .active a {
+    background: #ddd;
+}
\ No newline at end of file
diff --git a/sentry/models.py b/sentry/models.py
index fbfc3ecb02..ca50736597 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -127,6 +127,10 @@ class GroupedMessage(MessageBase):
     def __unicode__(self):
         return "(%s) %s" % (self.times_seen, self.error())
 
+    @models.permalink
+    def get_absolute_url(self):
+        return ('sentry-group', (self.pk), {})
+
     def natural_key(self):
         return (self.logger, self.view, self.checksum)
 
@@ -208,8 +212,9 @@ class Message(MessageBase):
             self.checksum = construct_checksum(**self.__dict__)
         super(Message, self).save(*args, **kwargs)
 
+    @models.permalink
     def get_absolute_url(self):
-        return self.url
+        return ('sentry-group-message', (self.group_id, self.pk), {})
     
     def shortened_url(self):
         if not self.url:
diff --git a/sentry/templates/sentry/group.html b/sentry/templates/sentry/group.html
deleted file mode 100644
index 9234e0f3e7..0000000000
--- a/sentry/templates/sentry/group.html
+++ /dev/null
@@ -1,118 +0,0 @@
-{% extends "sentry/index.html" %}
-
-{% load sentry_helpers %}
-
-{% block title %}{{ group.error }} | Django Sentry{% endblock %}
-
-{% block body %}
-	<div id="header">
-		<div class="container">
-			<h1><a href="{% url sentry %}"><span class="sentry-logo" title="Django Sentry"><img src="{% url sentry-media "images/sentry.png" %}" border=0/></span></a></h1>
-			<h2>Message Details</h2>
-			<a class="backlink" href="{% url sentry %}">&laquo; back to list</a>
-		</div>
-	</div> 
-	<div id="content">
-		<div class="container">
-			<div id="sidebar">
-				{% if chart_url %}
-					<h2>Last 24 Hours</h2>
-		
-					<img src="{{ chart_url }}" class="chart" alt="chart"/>
-				{% endif %}
-				
-				<h2>Meta</h2>
-		
-				<dl class="flat">
-					<dt>First Seen:</dt>
-					<dd>{{ group.first_seen }}</dd>
-					<dt>Last Seen:</dt>
-					<dd>{{ group.last_seen }}</dd>
-					<dt>Status:</dt>
-					<dd>{{ group.get_status_display|title }}</dd>
-				</dl>
-
-				{% if unique_servers %}
-					<h2>Servers</h2>
-		
-					<ul class="server-list">
-						{% for server, priority in unique_servers|with_priority:"times_seen" %}
-							<li class="priority-{{ priority }}"><span class="count">{{ server.times_seen }}</span> {{ server.server_name }}</li>
-						{% endfor %}
-					</ul>
-				{% endif %}
-
-				{% if unique_urls %}
-					<h2>URLs</h2>
-		
-					<ul class="url-list">
-						{% for link, priority in unique_urls|with_priority:"times_seen" %}
-							<li class="priority-{{ priority }}"><span class="count">{{ link.times_seen }}</span> <a href="{{ link.url }}">{{ link.url }}</a></li>
-						{% endfor %}
-					</ul>
-				{% endif %}
-			</div>
-
-			<div id="body" class="with-sidebar">
-				<ul class="messages" id="message_list">
-					<li class="{% cycle 'row1' 'row2' %} level-{{ group.level }} active" id="group_{{ group.pk }}" data-sentry-count="{{ group.times_seen }}">
-						<span class="count count-digits-{{ group.times_seen|num_digits }}">{{ group.times_seen }}</span>
-						<h3>{% if group.view %}{{ group.view }}{% else %}{{ group.message }}{% endif %}</h3>
-						<span class="last_seen">{{ group.last_seen|timesince }} ago</span>
-						<span class="status status-{{ group.status }}">{{ group.get_status_display }}</span>
-						<p class="message"><span class="tag tag-level">{{ group.get_level_display }}</span> {{ group.error }}</p>
-						<pre class="traceback">{{ group.shortened_traceback }}</pre>
-						{% if group.status == 0 %}
-							<a href="{% url sentry-ajax %}?op=resolve&amp;gid={{ group.pk }}" class="hidden button button_resolve">&#10003;</a>
-						{% endif %}
-					</li>
-				</ul>
-		
-				{% if traceback %}
-
-					<h2>Sample Traceback</h2>
-
-					{{ traceback }}
-
-				{% endif %}
-				
-				<div id="requestinfo">
-					<h2>Request information</h2>
-				  
-					{% for k, v in json_data %}
-						<h3 id="get-info">{{ k }}</h3>
-						{% if v %}
-							{% if v|is_dict %}
-								<table class="req">
-									<thead>
-										<tr>
-											<th>Variable</th>
-											<th>Value</th>
-										</tr>
-									</thead>
-									<tbody>
-										{% for k_, v_ in v.iteritems %}
-										<tr>
-											<td>{{ k_ }}</td>
-											<td class="code"><div>{{ v_|pprint }}</div></td>
-										</tr>
-										{% endfor %}
-									</tbody>
-								</table>
-							{% else %}
-								{{ v|pprint }}
-							{% endif %}
-						{% else %}
-							<p>No data for {{ k }}</p>
-						{% endif %}
-					{% endfor %}
-				</div>
-			</div>
-		</div>
-	</div>
-	<div id="footer">
-		<div class="container">
-			Powered by sexy django magic | Conjured up by the <a href="http://disqus.com">DISQUS</a> team and other noble <a href="http://github.com/dcramer/django-sentry/contributors">sorcerers</a>.
-		</div>	
-	</div> 
-{% endblock %}
diff --git a/sentry/templates/sentry/group/details.html b/sentry/templates/sentry/group/details.html
new file mode 100644
index 0000000000..c760817776
--- /dev/null
+++ b/sentry/templates/sentry/group/details.html
@@ -0,0 +1,113 @@
+{% extends "sentry/index.html" %}
+
+{% load sentry_helpers %}
+
+{% block title %}{{ group.error }} | Django Sentry{% endblock %}
+
+{% block heading %}Message Details{% endblock %}
+
+{% block content %}
+	<div id="sidebar">
+		<a href="{% url sentry %}">&laquo; back to list</a>
+		{% if chart_url %}
+			<h2>Last 24 Hours</h2>
+
+			<img src="{{ chart_url }}" class="chart" alt="chart"/>
+		{% endif %}
+	
+		<h2>Meta</h2>
+
+		<dl class="flat">
+			<dt>First Seen:</dt>
+			<dd>{{ group.first_seen }}</dd>
+			<dt>Last Seen:</dt>
+			<dd>{{ group.last_seen }}</dd>
+			<dt>Status:</dt>
+			<dd>{{ group.get_status_display|title }}</dd>
+		</dl>
+
+		{% if unique_servers %}
+			<h2>Servers</h2>
+
+			<ul class="server-list">
+				{% for server, priority in unique_servers|with_priority:"times_seen" %}
+					<li class="priority-{{ priority }}"><span class="count">{{ server.times_seen }}</span> {{ server.server_name }}</li>
+				{% endfor %}
+			</ul>
+		{% endif %}
+
+		{% if unique_urls %}
+			<h2>URLs</h2>
+
+			<ul class="url-list">
+				{% for link, priority in unique_urls|with_priority:"times_seen" %}
+					<li class="priority-{{ priority }}"><span class="count">{{ link.times_seen }}</span> <a href="{{ link.url }}">{{ link.url }}</a></li>
+				{% endfor %}
+			</ul>
+		{% endif %}
+	</div>
+
+	<div id="body" class="with-sidebar">
+		<ul class="messages" id="message_list">
+			<li class="{% cycle 'row1' 'row2' %} level-{{ group.level }} active" id="group_{{ group.pk }}" data-sentry-count="{{ group.times_seen }}">
+				<span class="count count-digits-{{ group.times_seen|num_digits }}">{{ group.times_seen }}</span>
+				<h3>{% if group.view %}{{ group.view }}{% else %}{{ group.message }}{% endif %}</h3>
+				<span class="last_seen">{{ group.last_seen|timesince }} ago</span>
+				<span class="status status-{{ group.status }}">{{ group.get_status_display }}</span>
+				<p class="message"><span class="tag tag-level">{{ group.get_level_display }}</span> {{ group.error }}</p>
+				{% if group.status == 0 %}
+					<a href="{% url sentry-ajax %}?op=resolve&amp;gid={{ group.pk }}" class="hidden button button_resolve">&#10003;</a>
+				{% endif %}
+			</li>
+		</ul>
+
+		<ul class="nav" id="group_nav">
+			<li{% if not page %} class="active"{% endif %}><a href="{% url sentry-group group.pk %}">Details</a></li>
+			<li{% ifequal page 'messages' %} class="active"{% endifequal %}><a href="{% url sentry-group-messages group.pk %}">Messages</a></li>
+		</ul>
+		
+		{% block inner %}
+			<div id="details">
+				{% if traceback %}
+
+					<h2>Sample Traceback</h2>
+
+					{{ traceback }}
+
+				{% endif %}
+	
+				<div id="requestinfo">
+					<h2>More Information</h2>
+	  
+					{% for k, v in json_data %}
+						<h3 id="get-info">{{ k }}</h3>
+						{% if v %}
+							{% if v|is_dict %}
+								<table class="req">
+									<thead>
+										<tr>
+											<th>Variable</th>
+											<th>Value</th>
+										</tr>
+									</thead>
+									<tbody>
+										{% for k_, v_ in v.iteritems %}
+										<tr>
+											<td>{{ k_ }}</td>
+											<td class="code"><div>{{ v_|pprint }}</div></td>
+										</tr>
+										{% endfor %}
+									</tbody>
+								</table>
+							{% else %}
+								{{ v|pprint }}
+							{% endif %}
+						{% else %}
+							<p>No data for {{ k }}</p>
+						{% endif %}
+					{% endfor %}
+				</div>
+			</div>
+		{% endblock %}
+	</div>
+{% endblock %}
\ No newline at end of file
diff --git a/sentry/templates/sentry/group/message.html b/sentry/templates/sentry/group/message.html
new file mode 100644
index 0000000000..1b0f8b434f
--- /dev/null
+++ b/sentry/templates/sentry/group/message.html
@@ -0,0 +1,59 @@
+{% extends "sentry/group/details.html" %}
+
+{% load paging_extras %}
+{% load sentry_helpers %}
+
+{% block title %}{{ group.error }} | Django Sentry{% endblock %}
+
+{% block inner %}
+	<ul class="messages" id="message_list">
+		<li class="row1 active level-{{ message.level }}" data-sentry-count="{{ message.times_seen }}">
+			<h3><a href="{% url sentry-group-message group.pk message.pk %}">{% if message.url %}{{ message.url }}{% else %}{{ message.server_name }}{% endif %}</a></h3>
+			<span class="status status-{{ message.status }}">{{ message.get_status_display }}</span>
+			<p class="message"><span class="tag tag-level">{{ message.get_level_display }}</span> <span class="tag tag-server">{{ message.server_name }}</span><span class="last_seen">{{ message.datetime|timesince }} ago</span>
+			</p>
+		    <a href="{% url sentry-group-message group.pk message.pk %}" class="row_link"></a>
+		</li>
+		
+	</ul>
+
+	{% if traceback %}
+
+		<h2>Traceback</h2>
+
+		{{ traceback }}
+
+	{% endif %}
+
+	<div id="requestinfo">
+		<h2>More Information</h2>
+
+		{% for k, v in json_data %}
+			<h3 id="get-info">{{ k }}</h3>
+			{% if v %}
+				{% if v|is_dict %}
+					<table class="req">
+						<thead>
+							<tr>
+								<th>Variable</th>
+								<th>Value</th>
+							</tr>
+						</thead>
+						<tbody>
+							{% for k_, v_ in v.iteritems %}
+							<tr>
+								<td>{{ k_ }}</td>
+								<td class="code"><div>{{ v_|pprint }}</div></td>
+							</tr>
+							{% endfor %}
+						</tbody>
+					</table>
+				{% else %}
+					{{ v|pprint }}
+				{% endif %}
+			{% else %}
+				<p>No data for {{ k }}</p>
+			{% endif %}
+		{% endfor %}
+	</div>
+{% endblock %}
\ No newline at end of file
diff --git a/sentry/templates/sentry/group/message_list.html b/sentry/templates/sentry/group/message_list.html
new file mode 100644
index 0000000000..6e68156e2b
--- /dev/null
+++ b/sentry/templates/sentry/group/message_list.html
@@ -0,0 +1,19 @@
+{% extends "sentry/group/details.html" %}
+
+{% load paging_extras %}
+
+{% block inner %}
+	<h2>Message List</h2>
+	{% paginate message_list from request as message_list per_page 15 %}
+	<div class="clearfix">
+		{{ message_list.paging }}
+	</div>
+	<ul class="messages" id="message_list">
+		{% for message in message_list.objects %}
+			{% include "sentry/partial/_message.html" %}
+		{% endfor %}
+	</ul>
+	<div class="clearfix">
+		{{ message_list.paging }}
+	</div>
+{% endblock %}
\ No newline at end of file
diff --git a/sentry/templates/sentry/index.html b/sentry/templates/sentry/index.html
index 1633f6230c..57d712117c 100644
--- a/sentry/templates/sentry/index.html
+++ b/sentry/templates/sentry/index.html
@@ -21,7 +21,7 @@
 		<div id="header"> 
 			<div class="container">
 				<h1><a href="{% url sentry %}"><span class="sentry-logo" title="Django Sentry"><img src="{% url sentry-media "images/sentry.png" %}" border=0/></span></a></h1>
-				<h2>Dashboard</h2>
+				<h2>{% block heading %}Dashboard{% endblock %}</h2>
 				<ul class="nav" id="account">
 					{% if request.user.is_authenticated %}
 						<li><a href="{% url sentry-logout %}">Logout</a>
@@ -31,53 +31,57 @@
 		</div> 
 		<div id="content">
 			<div class="container">
-				<div id="sidebar" class="column">
-					{% if chart_url %}
-						<h2>Last 24 Hours</h2>
-						<img src="{{ chart_url }}" class="chart" alt="chart"/>
-					{% endif %}
+				{% block content %}
+					<div id="sidebar" class="column">
+						{% if chart_url %}
+							<h2>Last 24 Hours</h2>
+							<img src="{{ chart_url }}" class="chart" alt="chart"/>
+						{% endif %}
 					
-					{% for filter in filters %}
-						<h2>{{ filter.label }}</h2>
-						<form method="get" action="{{ filter.get_query_string|safe }}">
-							{{ filter.render }}
-						</form>
-					{% endfor %}
-				</div>
+						{% for filter in filters %}
+							<h2>{{ filter.label }}</h2>
+							<form method="get" action="{{ filter.get_query_string|safe }}">
+								{{ filter.render }}
+							</form>
+						{% endfor %}
+					</div>
 
-				<div id="body" class="with-sidebar column">
-					{% paginate message_list from request as message_list per_page 15 %}
-					{% if message_list.objects %}
-						<div class="clearfix">
-							<div class="paging-wrap">
-								<form method="GET" action="">
-									{% for k, v in request.GET.iteritems %}
-										<input type="hidden" name="{{ k }}" value="{{ v }}"/>
-									{% endfor %}
-									<div class="sort-by">Sort by <select name="sort" onchange="this.form.submit()">
-										<option value=""{% ifequal sort 'priority' %} selected="selected"{% endifequal %}>Priority</option>
-										<option value="date"{% ifequal sort 'date' %} selected="selected"{% endifequal %}>Last Seen</option>
-										<option value="new"{% ifequal sort 'new' %} selected="selected"{% endifequal %}>First Seen</option>
-									</select>
-									</div>
-								</form>
-								{% if has_realtime %}
-									<a id="sentry_realtime" class="realtime realtime-pause">Pause Feed</a>
-								{% endif %}
+					<div id="body" class="with-sidebar column">
+						{% paginate message_list from request as message_list per_page 15 %}
+						{% if message_list.objects %}
+							<div class="clearfix">
+								<div class="paging-wrap">
+									<form method="GET" action="">
+										{% for k, v in request.GET.iteritems %}
+											<input type="hidden" name="{{ k }}" value="{{ v }}"/>
+										{% endfor %}
+										<div class="sort-by">Sort by <select name="sort" onchange="this.form.submit()">
+											<option value=""{% ifequal sort 'priority' %} selected="selected"{% endifequal %}>Priority</option>
+											<option value="date"{% ifequal sort 'date' %} selected="selected"{% endifequal %}>Last Seen</option>
+											<option value="new"{% ifequal sort 'new' %} selected="selected"{% endifequal %}>First Seen</option>
+										</select>
+										</div>
+									</form>
+									{% if has_realtime %}
+										<a id="sentry_realtime" class="realtime realtime-pause">Pause Feed</a>
+									{% endif %}
+									{{ message_list.paging }}
+								</div>
+							</div>
+							<ul class="messages" id="message_list">
+								{% for group, priority in message_list.objects|with_priority %}
+									{% include "sentry/partial/_group.html" %}
+								{% endfor %}
+							</ul>
+							<div class="clearfix">
 								{{ message_list.paging }}
 							</div>
-						</div>
-						<ul class="messages" id="message_list">
-							{% for group, priority in message_list.objects|with_priority %}
-								{% include "sentry/partial/_group.html" %}
-							{% endfor %}
-						</ul>
-						{{ message_list.paging }}
-					{% else %}
-						<ul class="messages" id="message_list"></ul>
-						<p class="no-messages" id="no_messages">No messages match your filters.</p>
-					{% endif %}
-				</div>
+						{% else %}
+							<ul class="messages" id="message_list"></ul>
+							<p class="no-messages" id="no_messages">No messages match your filters.</p>
+						{% endif %}
+					</div>
+				{% endblock %}
 			</div>
  		</div>
 		<div id="footer">
diff --git a/sentry/templates/sentry/login.html b/sentry/templates/sentry/login.html
index 228cdecb68..e206988703 100644
--- a/sentry/templates/sentry/login.html
+++ b/sentry/templates/sentry/login.html
@@ -4,52 +4,39 @@
 
 {% block title %}Login | Django Sentry{% endblock %}
 
-{% block body %}
-	<div id="header">
-		<div class="container">
-				<h1><a href="{% url sentry %}"><span class="sentry-logo" title="Django Sentry"><img src="{% url sentry-media "images/sentry.png" %}" border=0/></span></a></h1>
-			<h2>Login</h2>
-		</div>
-	</div> 
-	<div id="content">
-		<div class="container">
-			<div id="body">
-				<div class="login-area">
-					<p>You must log in to continue</p>
-				
-					{% if form.errors %}
-						<p class="error">Your username and password didn't match. Please try again.</p>
-					{% endif %}
+{% block heading %}Login{% endblock %}
+
+{% block content %}
+	<div id="body">
+		<div class="login-area">
+			<p>You must log in to continue</p>
+		
+			{% if form.errors %}
+				<p class="error">Your username and password didn't match. Please try again.</p>
+			{% endif %}
 
-					<form method="post" action="" class="login-form">
-						<input type="hidden" name="next" value="{{ next }}" />
-					
-						{% csrf_token %}
-						<table>
-							<colgroup>
-								<col width="100px"/>
-								<col/>
-							</colgroup>
-							<tr>
-							    <td>{{ form.username.label_tag }}</td>
-							    <td>{{ form.username }}</td>
-							</tr>
-							<tr>
-							    <td>{{ form.password.label_tag }}</td>
-							    <td>{{ form.password }}</td>
-							</tr>
-						</table>
-						<div class="login-submit">
-							<input type="submit" value="Login" />
-						</div>
-					</form>
+			<form method="post" action="" class="login-form">
+				<input type="hidden" name="next" value="{{ next }}" />
+			
+				{% csrf_token %}
+				<table>
+					<colgroup>
+						<col width="100px"/>
+						<col/>
+					</colgroup>
+					<tr>
+					    <td>{{ form.username.label_tag }}</td>
+					    <td>{{ form.username }}</td>
+					</tr>
+					<tr>
+					    <td>{{ form.password.label_tag }}</td>
+					    <td>{{ form.password }}</td>
+					</tr>
+				</table>
+				<div class="login-submit">
+					<input type="submit" value="Login" />
 				</div>
-			</div>
+			</form>
 		</div>
 	</div>
-	<div id="footer">
-		<div class="container">
-			Powered by sexy django magic | Conjured up by the <a href="http://disqus.com">DISQUS</a> team and other noble <a href="http://github.com/dcramer/django-sentry/contributors">sorcerers</a>.
-		</div>	
-	</div> 
 {% endblock %}
diff --git a/sentry/templates/sentry/partial/_group.html b/sentry/templates/sentry/partial/_group.html
index ab9a28a212..12ea901839 100644
--- a/sentry/templates/sentry/partial/_group.html
+++ b/sentry/templates/sentry/partial/_group.html
@@ -6,7 +6,6 @@
 	<span class="last_seen">{{ group.last_seen|timesince }} ago</span>
 	<span class="status status-{{ group.status }}">{{ group.get_status_display }}</span>
 	<p class="message"><span class="tag tag-level">{{ group.get_level_display }}</span> {{ group.error }}</p>
-	<pre class="traceback">{{ group.shortened_traceback }}</pre>
     <a href="{% url sentry-group group.pk %}" class="row_link"></a>
 	{% if group.status == 0 %}
 		<a href="{% url sentry-ajax %}?op=resolve&amp;gid={{ group.pk }}" onclick="sentryResolve({{ group.pk }});returnfalse;" class="button resolve_button hidden">&#10003;</a>
diff --git a/sentry/templates/sentry/partial/_message.html b/sentry/templates/sentry/partial/_message.html
new file mode 100644
index 0000000000..ec98a115e3
--- /dev/null
+++ b/sentry/templates/sentry/partial/_message.html
@@ -0,0 +1,9 @@
+{% load sentry_helpers %}
+
+<li class="{% cycle 'row1' 'row2' %} level-{{ message.level }}{% if priority %} priority-{{ priority }}{% endif %}" id="message_{{ message.pk }}" data-sentry-count="{{ message.times_seen }}">
+	<h3><a href="{% url sentry-group-message group.pk message.pk %}">{% if message.url %}{{ message.url }}{% else %}{{ message.server_name }}{% endif %}</a></h3>
+	<span class="status status-{{ message.status }}">{{ message.get_status_display }}</span>
+	<p class="message"><span class="tag tag-level">{{ message.get_level_display }}</span> <span class="tag tag-server">{{ message.server_name }}</span><span class="last_seen">{{ message.datetime|timesince }} ago</span>
+	</p>
+    <a href="{% url sentry-group-message group.pk message.pk %}" class="row_link"></a>
+</li>
diff --git a/sentry/tests/tests.py b/sentry/tests/tests.py
index 96771d11d9..9e3f1d8d20 100644
--- a/sentry/tests/tests.py
+++ b/sentry/tests/tests.py
@@ -567,7 +567,7 @@ class SentryViewsTest(TestCase):
         self.client.login(username='admin', password='admin')
         resp = self.client.get(reverse('sentry-group', args=[2]), follow=True)
         self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/group.html')
+        self.assertTemplateUsed(resp, 'sentry/group/details.html')
 
 class RemoteSentryTest(TestCase):
     urls = 'sentry.tests.urls'
diff --git a/sentry/urls.py b/sentry/urls.py
index 8c6ca5a056..b1613df330 100644
--- a/sentry/urls.py
+++ b/sentry/urls.py
@@ -28,6 +28,8 @@ urlpatterns = patterns('',
     url(r'^login$', views.login, name='sentry-login'),
     url(r'^logout$', views.logout, name='sentry-logout'),
     url(r'^group/(\d+)$', views.group, name='sentry-group'),
+    url(r'^group/(\d+)/messages$', views.group_message_list, name='sentry-group-messages'),
+    url(r'^group/(\d+)/messages/(\d+)$', views.group_message_details, name='sentry-group-message'),
 
     url(r'^$', views.index, name='sentry'),
 )
diff --git a/sentry/views.py b/sentry/views.py
index 27c0ea334b..5079300d79 100644
--- a/sentry/views.py
+++ b/sentry/views.py
@@ -233,6 +233,7 @@ def group(request, group_id):
     
     json_data = iter_data(obj)
     
+    # TODO: this should be a template tag
     engine = get_db_engine()
     if SimpleLineChart and not engine.startswith('sqlite'):
         today = datetime.datetime.now()
@@ -259,7 +260,111 @@ def group(request, group_id):
         chart.set_line_style(1, 1)
         chart_url = chart.get_url()
     
-    return render_to_response('sentry/group.html', locals())
+    return render_to_response('sentry/group/details.html', locals())
+
+@login_required
+def group_message_list(request, group_id):
+    group = get_object_or_404(GroupedMessage, pk=group_id)
+
+    message_list = group.message_set.all().order_by('-datetime')
+    
+    unique_urls = message_list.filter(url__isnull=False).values_list('url', 'logger', 'view', 'checksum').annotate(times_seen=Count('url')).values('url', 'times_seen').order_by('-times_seen')
+    
+    unique_servers = message_list.filter(server_name__isnull=False).values_list('server_name', 'logger', 'view', 'checksum').annotate(times_seen=Count('server_name')).values('server_name', 'times_seen').order_by('-times_seen')
+    
+    engine = get_db_engine()
+    if SimpleLineChart and not engine.startswith('sqlite'):
+        today = datetime.datetime.now()
+
+        chart_qs = message_list\
+                          .filter(datetime__gte=today - datetime.timedelta(hours=24))\
+                          .extra(select={'hour': 'extract(hour from datetime)'}).values('hour')\
+                          .annotate(num=Count('id')).values_list('hour', 'num')
+
+        rows = dict(chart_qs)
+        if rows:
+            max_y = max(rows.values())
+        else:
+            max_y = 1
+
+        chart = SimpleLineChart(300, 80, y_range=[0, max_y])
+        chart.add_data([max_y]*30)
+        chart.add_data([rows.get((today-datetime.timedelta(hours=d)).hour, 0) for d in range(0, 24)][::-1])
+        chart.add_data([0]*30)
+        chart.fill_solid(chart.BACKGROUND, 'eeeeee')
+        chart.add_fill_range('eeeeee', 0, 1)
+        chart.add_fill_range('e0ebff', 1, 2)
+        chart.set_colours(['eeeeee', '999999', 'eeeeee'])
+        chart.set_line_style(1, 1)
+        chart_url = chart.get_url()
+    
+    page = 'messages'
+    
+    return render_to_response('sentry/group/message_list.html', locals())
+
+@login_required
+def group_message_details(request, group_id, message_id):
+    group = get_object_or_404(GroupedMessage, pk=group_id)
+
+    message_list = group.message_set.all()
+
+    message = get_object_or_404(group.message_set, pk=message_id)
+    
+    unique_urls = message_list.filter(url__isnull=False).values_list('url', 'logger', 'view', 'checksum').annotate(times_seen=Count('url')).values('url', 'times_seen').order_by('-times_seen')
+    
+    unique_servers = message_list.filter(server_name__isnull=False).values_list('server_name', 'logger', 'view', 'checksum').annotate(times_seen=Count('server_name')).values('server_name', 'times_seen').order_by('-times_seen')
+    
+    if '__sentry__' in message.data:
+        module, args, frames = message.data['__sentry__']['exc']
+        message.class_name = str(message.class_name)
+        # We fake the exception class due to many issues with imports/builtins/etc
+        exc_type = type(message.class_name, (Exception,), {})
+        exc_value = exc_type(message.message)
+
+        exc_value.args = args
+    
+        reporter = ImprovedExceptionReporter(message.request, exc_type, exc_value, frames, message.data['__sentry__'].get('template'))
+        traceback = mark_safe(reporter.get_traceback_html())
+    elif group.traceback:
+        traceback = mark_safe('<pre>%s</pre>' % (group.traceback,))
+    
+    def iter_data(obj):
+        for k, v in obj.data.iteritems():
+            if k.startswith('_') or k in ['url']:
+                continue
+            yield k, v
+    
+    json_data = iter_data(message)
+    
+    engine = get_db_engine()
+    if SimpleLineChart and not engine.startswith('sqlite'):
+        today = datetime.datetime.now()
+
+        chart_qs = message_list\
+                          .filter(datetime__gte=today - datetime.timedelta(hours=24))\
+                          .extra(select={'hour': 'extract(hour from datetime)'}).values('hour')\
+                          .annotate(num=Count('id')).values_list('hour', 'num')
+
+        rows = dict(chart_qs)
+        if rows:
+            max_y = max(rows.values())
+        else:
+            max_y = 1
+
+        chart = SimpleLineChart(300, 80, y_range=[0, max_y])
+        chart.add_data([max_y]*30)
+        chart.add_data([rows.get((today-datetime.timedelta(hours=d)).hour, 0) for d in range(0, 24)][::-1])
+        chart.add_data([0]*30)
+        chart.fill_solid(chart.BACKGROUND, 'eeeeee')
+        chart.add_fill_range('eeeeee', 0, 1)
+        chart.add_fill_range('e0ebff', 1, 2)
+        chart.set_colours(['eeeeee', '999999', 'eeeeee'])
+        chart.set_line_style(1, 1)
+        chart_url = chart.get_url()
+    
+    page = 'messages'
+    
+    return render_to_response('sentry/group/message.html', locals())
 
 @csrf_exempt
 def store(request):
