commit c8cacf4103ed75d5055ef9582c44a6baecc480ea
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed Sep 30 15:55:56 2015 -0700

    Remove calls to getDOMNode (deprecated in 0.14.x)

diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index 65457dbe59..071df29e57 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -87,7 +87,7 @@ var AssigneeSelector = React.createClass({
   },
 
   onDropdownOpen() {
-    this.refs.filter.getDOMNode().focus();
+    React.findDOMNode(this.refs.filter).focus();
   },
 
   onDropdownClose() {
@@ -118,7 +118,7 @@ var AssigneeSelector = React.createClass({
 
   componentDidUpdate(prevProps, prevState) {
     // XXX(dcramer): fix odd dedraw issue as of Chrome 45.0.2454.15 dev (64-bit)
-    var node = jQuery(this.refs.container.getDOMNode());
+    var node = jQuery(React.findDOMNode(this.refs.container));
     node.hide().show(0);
   },
 
diff --git a/src/sentry/static/sentry/app/components/autoSelectText.jsx b/src/sentry/static/sentry/app/components/autoSelectText.jsx
index 07fe971604..ed62e60328 100644
--- a/src/sentry/static/sentry/app/components/autoSelectText.jsx
+++ b/src/sentry/static/sentry/app/components/autoSelectText.jsx
@@ -3,17 +3,17 @@ import React from "react";
 
 const AutoSelectText = React.createClass({
   componentDidMount() {
-    let ref = this.refs.element.getDOMNode();
+    let ref = React.findDOMNode(this.refs.element);
     jQuery(ref).bind('click', this.selectText);
   },
 
   componentWillUnmount() {
-    let ref = this.refs.element.getDOMNode();
+    let ref = React.findDOMNode(this.refs.element);
     jQuery(ref).unbind('click', this.selectText);
   },
 
   selectText() {
-    var node = this.refs.element.getDOMNode().firstChild;
+    var node = React.findDOMNode(this.refs.element).firstChild;
     if (document.selection) {
       let range = document.body.createTextRange();
       range.moveToElementText(node);
diff --git a/src/sentry/static/sentry/app/components/clippedBox.jsx b/src/sentry/static/sentry/app/components/clippedBox.jsx
index fee68c695e..2b55b5a5c4 100644
--- a/src/sentry/static/sentry/app/components/clippedBox.jsx
+++ b/src/sentry/static/sentry/app/components/clippedBox.jsx
@@ -20,7 +20,7 @@ var ClippedBox = React.createClass({
   },
 
   componentDidMount() {
-    var renderedHeight = this.getDOMNode().offsetHeight;
+    var renderedHeight = React.findDOMNode(this).offsetHeight;
 
     if (renderedHeight > this.props.clipHeight ) {
       /*eslint react/no-did-mount-set-state:0*/
diff --git a/src/sentry/static/sentry/app/components/dropdownLink.jsx b/src/sentry/static/sentry/app/components/dropdownLink.jsx
index 8b68399894..7e14cca36b 100644
--- a/src/sentry/static/sentry/app/components/dropdownLink.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownLink.jsx
@@ -21,11 +21,11 @@ var DropdownLink = React.createClass({
   },
 
   isOpen() {
-    return this.getDOMNode().classList.contains("open");
+    return React.findDOMNode(this).classList.contains("open");
   },
 
   close() {
-    this.getDOMNode().classList.remove("open");
+    React.findDOMNode(this).classList.remove("open");
   },
 
   onToggle(e) {
diff --git a/src/sentry/static/sentry/app/components/flotChart.jsx b/src/sentry/static/sentry/app/components/flotChart.jsx
index 71d07341a2..c328578671 100644
--- a/src/sentry/static/sentry/app/components/flotChart.jsx
+++ b/src/sentry/static/sentry/app/components/flotChart.jsx
@@ -113,7 +113,7 @@ var FlotChart = React.createClass({
       lines: { show: false }
     };
 
-    var chart = this.refs.chartNode.getDOMNode();
+    var chart = React.findDOMNode(this.refs.chartNode);
     jQuery.plot(chart, series, plotOptions);
   },
 
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index 0c59fe100b..c03e15add0 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -132,7 +132,7 @@ var ProjectSelector = React.createClass({
   },
 
   onOpen(evt) {
-    this.refs.filter.getDOMNode().focus();
+    React.findDOMNode(this.refs.filter).focus();
   },
 
   onClose() {
@@ -143,7 +143,7 @@ var ProjectSelector = React.createClass({
 
   componentDidUpdate(prevProps, prevState) {
     // XXX(dcramer): fix odd dedraw issue as of Chrome 45.0.2454.15 dev (64-bit)
-    var node = jQuery(this.refs.container.getDOMNode());
+    var node = jQuery(React.findDOMNode(this.refs.container));
     node.hide().show(0);
   },
 
diff --git a/src/sentry/static/sentry/app/components/searchBar.jsx b/src/sentry/static/sentry/app/components/searchBar.jsx
index 69a3e753c4..5a70aab97b 100644
--- a/src/sentry/static/sentry/app/components/searchBar.jsx
+++ b/src/sentry/static/sentry/app/components/searchBar.jsx
@@ -24,7 +24,7 @@ var SearchBar = React.createClass({
   },
 
   blur() {
-    this.refs.searchInput.getDOMNode().blur();
+    React.findDOMNode(this.refs.searchInput).blur();
   },
 
   onSubmit(evt) {
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
index 62e2fbb2c5..816f7e92e2 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
@@ -31,13 +31,13 @@ var RuleEditor = React.createClass({
 
   componentDidUpdate() {
     if (this.state.error) {
-      $(document.body).scrollTop($(this.refs.form.getDOMNode()).offset().top);
+      $(document.body).scrollTop($(React.findDOMNode(this.refs.form)).offset().top);
     }
   },
 
   onSubmit(e) {
     e.preventDefault();
-    var form = $(this.refs.form.getDOMNode());
+    var form = $(React.findDOMNode(this.refs.form));
     var conditions = [];
     form.find('.rule-condition-list .rule-form').each((_, el) => {
       conditions.push(this.serializeNode(el));
@@ -46,8 +46,8 @@ var RuleEditor = React.createClass({
     form.find('.rule-action-list .rule-form').each((_, el) => {
       actions.push(this.serializeNode(el));
     });
-    var actionMatch = $(this.refs.actionMatch.getDOMNode()).val();
-    var name = $(this.refs.name.getDOMNode()).val();
+    var actionMatch = $(React.findDOMNode(this.refs.actionMatch)).val();
+    var name = $(React.findDOMNode(this.refs.name)).val();
     var data = {
       actionMatch: actionMatch,
       actions: actions,
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
index aff4a85fd3..fbe218fe0a 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
@@ -10,7 +10,7 @@ var RuleNode = React.createClass({
   },
 
   componentDidMount() {
-    let $html = $(this.refs.html.getDOMNode());
+    let $html = $(React.findDOMNode(this.refs.html));
 
     $html.find('select, input, textarea').each((_, el) => {
       let $el = $(el);
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 888403013f..edfb7a3202 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -109,7 +109,7 @@ var SearchBar = React.createClass({
   },
 
   blur() {
-    this.refs.searchInput.getDOMNode().blur();
+    React.findDOMNode(this.refs.searchInput).blur();
   },
 
   onSubmit(evt) {
@@ -155,7 +155,7 @@ var SearchBar = React.createClass({
   },
 
   getCursorPosition() {
-    return this.refs.searchInput.getDOMNode().selectionStart;
+    return React.findDOMNode(this.refs.searchInput).selectionStart;
   },
 
   /**
@@ -217,7 +217,7 @@ var SearchBar = React.createClass({
       this.setState(
         { query: this.state.query + ' ' },
         () => {
-          this.refs.searchInput.getDOMNode().setSelectionRange(cursor + 1, cursor + 1);
+          React.findDOMNode(this.refs.searchInput).setSelectionRange(cursor + 1, cursor + 1);
           this.updateAutoCompleteItems();
         }
       );
@@ -376,7 +376,7 @@ var SearchBar = React.createClass({
       query: newQuery
     }, () => {
       // setting a new input value will lose focus; restore it
-      var node = this.refs.searchInput.getDOMNode();
+      var node = React.findDOMNode(this.refs.searchInput);
       node.focus();
 
       // then update the autocomplete box with new contextTypes
diff --git a/src/sentry/static/sentry/app/views/stream/streamSearchBar.jsx b/src/sentry/static/sentry/app/views/stream/streamSearchBar.jsx
deleted file mode 100644
index e69de29bb2..0000000000
diff --git a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
index e8aca9c759..7cd011938f 100644
--- a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
+++ b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
@@ -46,7 +46,7 @@ var StreamTagFilter = React.createClass({
   },
 
   componentDidMount() {
-    let select = this.refs.select.getDOMNode();
+    let select = React.findDOMNode(this.refs.select);
 
     let selectOpts = {
       placeholder: '--',
@@ -84,7 +84,7 @@ var StreamTagFilter = React.createClass({
   },
 
   componentWillUnmount() {
-    let select = this.refs.select.getDOMNode();
+    let select = React.findDOMNode(this.refs.select);
     $(select).select2('destroy');
   },
 
