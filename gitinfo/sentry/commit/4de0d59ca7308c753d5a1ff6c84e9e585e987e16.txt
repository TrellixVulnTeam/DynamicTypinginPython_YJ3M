commit 4de0d59ca7308c753d5a1ff6c84e9e585e987e16
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Nov 13 10:35:01 2019 -0800

    build(webpack): Remove `lodash-webpack-plugin` (#15521)
    
    Undoes the work introduced in https://github.com/getsentry/sentry/pull/5616.
    
    This plugin adds around 40-50 seconds to webpack build times and has caused confusion (see https://github.com/getsentry/sentry/pull/13834).
    
    Also adds an eslint rule to prevent importing `lodash` bundle: https://github.com/getsentry/eslint-config-sentry/pull/46
    
    | -- | With Plugin | Without Plugin | Difference | lodash-es | lodash-es + react-mentions |
    | -- | ----------- | -------------- | ---------- | --------- | - |
    | app.js | 739051 | 739120 | 0% | | |
    | app.js.gzip | 184017 | 184040 | 0% | | 186949 |
    | vendor.js | 2076311 | 2090876 | +0.7% | 2089352 |
    | vendor.js.gizp | 375718 | 380446 | + 1.2% | 380630 | 380476 |
    | build time (w/ stats) | 316s | 466s | + 47% | |
    | build time (env=prod) | 335s | 198s | n/a | |
    
    Currently, there is no sizable difference between `lodash-es` and `lodash` -- we should revisit this in the future.

diff --git a/.storybook/.babelrc b/.storybook/.babelrc
index 71e26cf313..5d646f5641 100644
--- a/.storybook/.babelrc
+++ b/.storybook/.babelrc
@@ -3,7 +3,6 @@
   "presets": ["@babel/react", "@babel/env"],
   "plugins": [
     "emotion",
-    "lodash",
     "react-hot-loader/babel",
     "@babel/plugin-syntax-dynamic-import",
     "@babel/plugin-proposal-object-rest-spread",
diff --git a/babel.config.js b/babel.config.js
index 69ec2b655e..ff40b034bc 100644
--- a/babel.config.js
+++ b/babel.config.js
@@ -3,7 +3,6 @@ module.exports = {
   presets: ['@babel/react', '@babel/env', '@babel/preset-typescript'],
   plugins: [
     'emotion',
-    'lodash',
     'react-hot-loader/babel',
     '@babel/plugin-syntax-dynamic-import',
     '@babel/plugin-proposal-object-rest-spread',
diff --git a/package.json b/package.json
index d0b3916911..433948e21e 100644
--- a/package.json
+++ b/package.json
@@ -43,7 +43,6 @@
     "babel-loader": "^8.0.0",
     "babel-plugin-add-react-displayname": "^0.0.5",
     "babel-plugin-emotion": "9.2.11",
-    "babel-plugin-lodash": "^3.3.4",
     "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
     "bootstrap": "3.4.0",
     "classnames": "2.2.0",
@@ -75,7 +74,6 @@
     "less": "^3.9.0",
     "less-loader": "^4.1.0",
     "lodash": "^4.17.11",
-    "lodash-webpack-plugin": "^0.11.5",
     "marked": "0.6.2",
     "mini-css-extract-plugin": "^v0.5.0",
     "mobx": "^5.13.0",
@@ -145,7 +143,7 @@
     "enzyme-adapter-react-16": "1.14.0",
     "enzyme-to-json": "3.4.0",
     "eslint": "5.11.1",
-    "eslint-config-sentry-app": "1.26.0",
+    "eslint-config-sentry-app": "1.27.0",
     "jest": "24.1.0",
     "jest-canvas-mock": "^2.1.0",
     "jest-junit": "^3.4.1",
diff --git a/src/sentry/static/sentry/app/actionCreators/formSearch.jsx b/src/sentry/static/sentry/app/actionCreators/formSearch.jsx
index 0feb7cf28d..13d6d21c84 100644
--- a/src/sentry/static/sentry/app/actionCreators/formSearch.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/formSearch.jsx
@@ -1,4 +1,6 @@
-import {flatten, flatMap} from 'lodash';
+import flatten from 'lodash/flatten';
+
+import flatMap from 'lodash/flatMap';
 
 import FormSearchActions from 'app/actions/formSearchActions';
 
diff --git a/src/sentry/static/sentry/app/actionCreators/globalSelection.jsx b/src/sentry/static/sentry/app/actionCreators/globalSelection.jsx
index 9bc08ed6f4..2873843acc 100644
--- a/src/sentry/static/sentry/app/actionCreators/globalSelection.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/globalSelection.jsx
@@ -1,4 +1,6 @@
-import {isEqual, isInteger, omit} from 'lodash';
+import isEqual from 'lodash/isEqual';
+import isInteger from 'lodash/isInteger';
+import omit from 'lodash/omit';
 import * as Sentry from '@sentry/browser';
 
 import {defined} from 'app/utils';
diff --git a/src/sentry/static/sentry/app/actionCreators/projects.jsx b/src/sentry/static/sentry/app/actionCreators/projects.jsx
index 3ecbbf0d4d..733c3854f1 100644
--- a/src/sentry/static/sentry/app/actionCreators/projects.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/projects.jsx
@@ -1,4 +1,6 @@
-import {chunk, debounce} from 'lodash';
+import chunk from 'lodash/chunk';
+
+import debounce from 'lodash/debounce';
 
 import {
   addLoadingMessage,
diff --git a/src/sentry/static/sentry/app/api.tsx b/src/sentry/static/sentry/app/api.tsx
index 47627ceccf..890c559252 100644
--- a/src/sentry/static/sentry/app/api.tsx
+++ b/src/sentry/static/sentry/app/api.tsx
@@ -1,4 +1,6 @@
-import {isUndefined, isNil, get} from 'lodash';
+import isUndefined from 'lodash/isUndefined';
+import isNil from 'lodash/isNil';
+import get from 'lodash/get';
 import $ from 'jquery';
 import * as Sentry from '@sentry/browser';
 
diff --git a/src/sentry/static/sentry/app/components/activity/note/inputWithStorage.jsx b/src/sentry/static/sentry/app/components/activity/note/inputWithStorage.jsx
index d8c888f8c5..e48cd3477c 100644
--- a/src/sentry/static/sentry/app/components/activity/note/inputWithStorage.jsx
+++ b/src/sentry/static/sentry/app/components/activity/note/inputWithStorage.jsx
@@ -1,4 +1,4 @@
-import _ from 'lodash';
+import debounce from 'lodash/debounce';
 import PropTypes from 'prop-types';
 import React from 'react';
 import * as Sentry from '@sentry/browser';
@@ -75,7 +75,7 @@ class NoteInputWithStorage extends React.Component {
     return onLoad(storageObj[itemKey]);
   };
 
-  save = _.debounce(value => {
+  save = debounce(value => {
     const {itemKey, onSave} = this.props;
 
     const currentObj = this.fetchFromStorage() || {};
diff --git a/src/sentry/static/sentry/app/components/activity/note/mentionables.jsx b/src/sentry/static/sentry/app/components/activity/note/mentionables.jsx
index 6db8287414..3c1cc6d167 100644
--- a/src/sentry/static/sentry/app/components/activity/note/mentionables.jsx
+++ b/src/sentry/static/sentry/app/components/activity/note/mentionables.jsx
@@ -1,4 +1,4 @@
-import {uniqBy} from 'lodash';
+import uniqBy from 'lodash/uniqBy';
 import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
diff --git a/src/sentry/static/sentry/app/components/asyncComponent.tsx b/src/sentry/static/sentry/app/components/asyncComponent.tsx
index 59f0ad3f77..61109d5c5f 100644
--- a/src/sentry/static/sentry/app/components/asyncComponent.tsx
+++ b/src/sentry/static/sentry/app/components/asyncComponent.tsx
@@ -1,4 +1,4 @@
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import PropTypes from 'prop-types';
 import React from 'react';
 import {Location} from 'history';
diff --git a/src/sentry/static/sentry/app/components/asyncComponentSearchInput.jsx b/src/sentry/static/sentry/app/components/asyncComponentSearchInput.jsx
index 716294ef2a..8cfd77c43e 100644
--- a/src/sentry/static/sentry/app/components/asyncComponentSearchInput.jsx
+++ b/src/sentry/static/sentry/app/components/asyncComponentSearchInput.jsx
@@ -1,4 +1,4 @@
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import {withRouter} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/components/bases/pluginComponentBase.jsx b/src/sentry/static/sentry/app/components/bases/pluginComponentBase.jsx
index f8d328cba5..4f7c48ca9c 100644
--- a/src/sentry/static/sentry/app/components/bases/pluginComponentBase.jsx
+++ b/src/sentry/static/sentry/app/components/bases/pluginComponentBase.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import _ from 'lodash';
+import isFunction from 'lodash/isFunction';
 
 import {Client} from 'app/api';
 import {FormState, GenericField} from 'app/components/forms';
@@ -7,7 +7,7 @@ import IndicatorStore from 'app/stores/indicatorStore';
 import {t} from 'app/locale';
 
 const callbackWithArgs = function(callback, ...args) {
-  if (_.isFunction(callback)) {
+  if (isFunction(callback)) {
     callback = callback.bind(this, ...args);
   } else {
     callback = null;
diff --git a/src/sentry/static/sentry/app/components/button.tsx b/src/sentry/static/sentry/app/components/button.tsx
index d9ea1f2335..7f12434273 100644
--- a/src/sentry/static/sentry/app/components/button.tsx
+++ b/src/sentry/static/sentry/app/components/button.tsx
@@ -3,7 +3,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled, {css} from 'react-emotion';
 import isPropValid from '@emotion/is-prop-valid';
-import {pickBy} from 'lodash';
+import pickBy from 'lodash/pickBy';
 
 import ExternalLink from 'app/components/links/externalLink';
 import InlineSvg from 'app/components/inlineSvg';
diff --git a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
index ab2550431d..41350bceb4 100644
--- a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
@@ -1,6 +1,6 @@
 import 'echarts/lib/component/tooltip';
 
-import {get} from 'lodash';
+import get from 'lodash/get';
 import {getFormattedDate} from 'app/utils/dates';
 import {truncationFormatter} from '../utils';
 
diff --git a/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx b/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
index ce96fc8c9d..248a3d5339 100644
--- a/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
+++ b/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
@@ -2,7 +2,7 @@ import {withRouter} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 import moment from 'moment';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
 import {getUserTimezone} from 'app/utils/dates';
diff --git a/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx b/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
index 664cf8560f..ef5d3229e7 100644
--- a/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
@@ -1,4 +1,4 @@
-import {max} from 'lodash';
+import max from 'lodash/max';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/components/contextData.jsx b/src/sentry/static/sentry/app/components/contextData.jsx
index a17a72c9b8..d5e45f929c 100644
--- a/src/sentry/static/sentry/app/components/contextData.jsx
+++ b/src/sentry/static/sentry/app/components/contextData.jsx
@@ -4,7 +4,9 @@ import React from 'react';
 
 import classNames from 'classnames';
 
-import _ from 'lodash';
+import isString from 'lodash/isString';
+import isNumber from 'lodash/isNumber';
+import isArray from 'lodash/isArray';
 
 import {isUrl} from 'app/utils';
 
@@ -116,7 +118,7 @@ class ContextData extends React.Component {
         return <span className="val-null">{'None'}</span>;
       } else if (value === true || value === false) {
         return <span className="val-bool">{value ? 'True' : 'False'}</span>;
-      } else if (_.isString(value)) {
+      } else if (isString(value)) {
         const valueInfo = analyzeStringForRepr(value);
 
         const out = [
@@ -141,9 +143,9 @@ class ContextData extends React.Component {
         }
 
         return out;
-      } else if (_.isNumber(value)) {
+      } else if (isNumber(value)) {
         return <span className="val-number">{value}</span>;
-      } else if (_.isArray(value)) {
+      } else if (isArray(value)) {
         for (i = 0; i < value.length; i++) {
           children.push(
             <span className="val-array-item" key={i}>
@@ -204,7 +206,7 @@ class ContextData extends React.Component {
   };
 
   renderKeyPosValue = value => {
-    if (_.isString(value)) {
+    if (isString(value)) {
       return <span className="val-string">{value}</span>;
     }
     return this.renderValue(value);
diff --git a/src/sentry/static/sentry/app/components/dateTime.tsx b/src/sentry/static/sentry/app/components/dateTime.tsx
index 7607dc2c1a..85ee88a6fc 100644
--- a/src/sentry/static/sentry/app/components/dateTime.tsx
+++ b/src/sentry/static/sentry/app/components/dateTime.tsx
@@ -1,7 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import moment from 'moment-timezone';
-import _ from 'lodash';
 
 import ConfigStore from 'app/stores/configStore';
 
diff --git a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
index 043c2991fa..cd1cf463ca 100644
--- a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
@@ -1,7 +1,7 @@
 import {AutoSizer, List} from 'react-virtualized';
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import flatMap from 'lodash/flatMap';
 import styled from 'react-emotion';
 
 import {t} from 'app/locale';
@@ -202,7 +202,7 @@ class DropdownAutoCompleteMenu extends React.Component {
 
     if (items[0] && items[0].items) {
       //if the first item has children, we assume it is a group
-      return _.flatMap(this.filterGroupedItems(items, inputValue), item => {
+      return flatMap(this.filterGroupedItems(items, inputValue), item => {
         const groupItems = item.items.map(groupedItem => ({
           ...groupedItem,
           index: itemCount++,
diff --git a/src/sentry/static/sentry/app/components/dropdownButton.jsx b/src/sentry/static/sentry/app/components/dropdownButton.jsx
index b5202f719a..b3f6aa9a4b 100644
--- a/src/sentry/static/sentry/app/components/dropdownButton.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownButton.jsx
@@ -3,7 +3,7 @@ import React from 'react';
 import styled from 'react-emotion';
 import Button from 'app/components/button';
 import InlineSvg from 'app/components/inlineSvg';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 
 class DropdownButton extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
index cf5c5f6b14..48e1324dab 100644
--- a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
+++ b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
@@ -3,7 +3,7 @@ import React from 'react';
 import {withRouter} from 'react-router';
 import styled, {css} from 'react-emotion';
 import classNames from 'classnames';
-import {capitalize} from 'lodash';
+import capitalize from 'lodash/capitalize';
 
 import SentryTypes from 'app/sentryTypes';
 import EventOrGroupTitle from 'app/components/eventOrGroupTitle';
diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index 738eea610d..6ff8cb4a72 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {get} from 'lodash';
+import get from 'lodash/get';
 import {objectIsEmpty, toTitleCase, defined} from 'app/utils';
 import EventDataSection from 'app/components/events/eventDataSection';
 import plugins from 'app/plugins';
diff --git a/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx b/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
index 328b1749b9..eed42750dc 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import sortBy from 'lodash/sortBy';
 
 import {defined} from 'app/utils';
 import ErrorBoundary from 'app/components/errorBoundary';
@@ -39,7 +39,7 @@ class ContextBlock extends React.Component {
     }
 
     if (extraData.length > 0) {
-      data = data.concat(_.sortBy(extraData, (key, value) => key));
+      data = data.concat(sortBy(extraData, (key, value) => key));
     }
 
     return (
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device.jsx b/src/sentry/static/sentry/app/components/events/contexts/device.jsx
index 7677acadda..36fb0916ce 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device.jsx
@@ -1,4 +1,4 @@
-import {isString} from 'lodash';
+import isString from 'lodash/isString';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/components/events/contexts/user.jsx b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
index a144f991c6..3b4f438ac0 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
@@ -1,7 +1,7 @@
 /*eslint react/jsx-key:0*/
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import each from 'lodash/each';
 
 import Avatar from 'app/components/avatar';
 import ErrorBoundary from 'app/components/errorBoundary';
@@ -40,7 +40,7 @@ class UserContextType extends React.Component {
     user.name && builtins.push(['Name', <pre>{user.name}</pre>]);
 
     // We also attach user supplied data as 'user.data'
-    _.each(user.data, function(value, key) {
+    each(user.data, function(value, key) {
       children.push([key, value]);
     });
 
diff --git a/src/sentry/static/sentry/app/components/events/errorItem.jsx b/src/sentry/static/sentry/app/components/events/errorItem.jsx
index a7c77078cf..97293aa325 100644
--- a/src/sentry/static/sentry/app/components/events/errorItem.jsx
+++ b/src/sentry/static/sentry/app/components/events/errorItem.jsx
@@ -1,4 +1,6 @@
-import _ from 'lodash';
+import mapKeys from 'lodash/mapKeys';
+import startCase from 'lodash/startCase';
+import isEmpty from 'lodash/isEmpty';
 import React from 'react';
 import KeyValueList from 'app/components/events/interfaces/keyValueList';
 import {t} from 'app/locale';
@@ -51,7 +53,7 @@ class EventErrorItem extends React.Component {
       data.image_path = path.length ? path.join(separator) + separator : '';
     }
 
-    return _.mapKeys(data, (value, key) => t(keyMapping[key] || _.startCase(key)));
+    return mapKeys(data, (value, key) => t(keyMapping[key] || startCase(key)));
   }
 
   renderPath() {
@@ -77,7 +79,7 @@ class EventErrorItem extends React.Component {
       <li>
         {this.renderPath()}
         {error.message}
-        {!_.isEmpty(data) && (
+        {!isEmpty(data) && (
           <small>
             {' '}
             <a style={{marginLeft: 10}} onClick={this.toggle}>
diff --git a/src/sentry/static/sentry/app/components/events/errors.jsx b/src/sentry/static/sentry/app/components/events/errors.jsx
index af8ab8a8d0..7a342eded2 100644
--- a/src/sentry/static/sentry/app/components/events/errors.jsx
+++ b/src/sentry/static/sentry/app/components/events/errors.jsx
@@ -1,5 +1,6 @@
 import React from 'react';
-import _ from 'lodash';
+import uniqWith from 'lodash/uniqWith';
+import isEqual from 'lodash/isEqual';
 
 import EventDataSection from 'app/components/events/eventDataSection';
 import EventErrorItem from 'app/components/events/errorItem';
@@ -32,7 +33,7 @@ class EventErrors extends React.Component {
   };
 
   uniqueErrors = errors => {
-    return _.uniqWith(errors, _.isEqual);
+    return uniqWith(errors, isEqual);
   };
 
   render() {
diff --git a/src/sentry/static/sentry/app/components/events/eventCause.jsx b/src/sentry/static/sentry/app/components/events/eventCause.jsx
index 7b947a94f9..9ec19b9e3b 100644
--- a/src/sentry/static/sentry/app/components/events/eventCause.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventCause.jsx
@@ -1,6 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {uniqBy, flatMap} from 'lodash';
+import uniqBy from 'lodash/uniqBy';
+import flatMap from 'lodash/flatMap';
 import styled from 'react-emotion';
 
 import CommitRow from 'app/components/commitRow';
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.tsx b/src/sentry/static/sentry/app/components/events/eventTags.tsx
index 5020487afa..9bec4be25c 100644
--- a/src/sentry/static/sentry/app/components/events/eventTags.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventTags.tsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import {Link} from 'react-router';
-import _ from 'lodash';
+import isEmpty from 'lodash/isEmpty';
 import queryString from 'query-string';
 
 import {Location} from 'history';
@@ -75,7 +75,7 @@ class EventTags extends React.Component<EventTagsProps> {
     const {event, orgId, hideGuide} = this.props;
     const {tags} = event;
 
-    if (_.isEmpty(tags)) {
+    if (isEmpty(tags)) {
       return null;
     }
 
diff --git a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
index 0a361c4253..3c6c42db01 100644
--- a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
+++ b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import styled from 'react-emotion';
-import {isObject} from 'lodash';
+import isObject from 'lodash/isObject';
 import AsyncComponent from 'app/components/asyncComponent';
 import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
 import DropdownButton from 'app/components/dropdownButton';
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/crumbTable.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/crumbTable.jsx
index 35979c6146..a37b11bcf0 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/crumbTable.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/crumbTable.jsx
@@ -1,6 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import map from 'lodash/map';
+import isObject from 'lodash/isObject';
 
 import Category from 'app/components/events/interfaces/breadcrumbs/category';
 
@@ -15,12 +16,12 @@ class CrumbTable extends React.Component {
     if (!this.props.kvData) {
       return null;
     }
-    return _.map(this.props.kvData, (val, key) => {
+    return map(this.props.kvData, (val, key) => {
       return (
         <tr key={key}>
           <td className="key">{key}</td>
           <td className="value">
-            <pre>{_.isObject(val) ? JSON.stringify(val) : val}</pre>
+            <pre>{isObject(val) ? JSON.stringify(val) : val}</pre>
           </td>
         </tr>
       );
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx
index 553b4c4ede..464a52a480 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx
@@ -1,4 +1,6 @@
-import _ from 'lodash';
+import isNil from 'lodash/isNil';
+import forOwn from 'lodash/forOwn';
+import isObject from 'lodash/isObject';
 import PropTypes from 'prop-types';
 import React from 'react';
 import Pills from 'app/components/pills';
@@ -68,7 +70,7 @@ class ExceptionMechanism extends React.Component {
       </Pill>,
     ];
 
-    if (!_.isNil(handled)) {
+    if (!isNil(handled)) {
       pills.push(<Pill key="handled" name="handled" value={handled} />);
     }
 
@@ -85,12 +87,12 @@ class ExceptionMechanism extends React.Component {
     if (signal) {
       const code = signal.code_name || `${t('code')} ${signal.code}`;
       const name = signal.name || signal.number;
-      const value = _.isNil(signal.code) ? name : `${name} (${code})`;
+      const value = isNil(signal.code) ? name : `${name} (${code})`;
       pills.push(<Pill key="signal" name="signal" value={value} />);
     }
 
-    _.forOwn(data, (value, key) => {
-      if (!_.isObject(value)) {
+    forOwn(data, (value, key) => {
+      if (!isObject(value)) {
         pills.push(<Pill key={`data:${key}`} name={key} value={value} />);
       }
     });
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
index aa4cd8c08c..4647af5ba3 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import sortBy from 'lodash/sortBy';
 
 import ContextData from 'app/components/contextData';
 
@@ -32,7 +32,7 @@ class KeyValueList extends React.Component {
       data = data.filter(kv => kv !== null);
     }
 
-    data = this.props.isSorted ? _.sortBy(data, [([key]) => key]) : data;
+    data = this.props.isSorted ? sortBy(data, [([key]) => key]) : data;
     const raw = this.props.raw;
     const props = this.props.onClick ? {onClick: this.props.onClick} : {};
     return (
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/header.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/header.tsx
index a2eac716f7..eec2260248 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/header.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/header.tsx
@@ -2,7 +2,7 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import space from 'app/styles/space';
-import {get} from 'lodash';
+import get from 'lodash/get';
 
 import {
   rectOfContent,
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
index c9159a41c3..69e32e8ee1 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import styled from 'react-emotion';
-import {get} from 'lodash';
+import get from 'lodash/get';
 import color from 'color';
 import 'intersection-observer'; // this is a polyfill
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
index c811982131..8be66249ba 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
@@ -1,6 +1,7 @@
 import React from 'react';
 import styled from 'react-emotion';
-import {get, map} from 'lodash';
+import get from 'lodash/get';
+import map from 'lodash/map';
 
 import DateTime from 'app/components/dateTime';
 import Pills from 'app/components/pills';
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx
index cf1d569313..6c7ed052bd 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import styled from 'react-emotion';
-import {get} from 'lodash';
+import get from 'lodash/get';
 
 import {t} from 'app/locale';
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/traceView.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/traceView.tsx
index 0cfbb0a423..9512f6449e 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/traceView.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/traceView.tsx
@@ -1,5 +1,7 @@
 import React from 'react';
-import {get, set, isNumber} from 'lodash';
+import get from 'lodash/get';
+import set from 'lodash/set';
+import isNumber from 'lodash/isNumber';
 
 import {t} from 'app/locale';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/utils.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/utils.tsx
index 4d25b339d9..b57891b9ba 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/utils.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/utils.tsx
@@ -1,4 +1,4 @@
-import {isString} from 'lodash';
+import isString from 'lodash/isString';
 import {divergentColorScale, spanColors} from 'app/utils/theme';
 
 type Rect = {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx b/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
index 4d9447edaa..22c3e4fa77 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
@@ -1,4 +1,4 @@
-import {isNil} from 'lodash';
+import isNil from 'lodash/isNil';
 import PropTypes from 'prop-types';
 import React from 'react';
 import {t} from 'app/locale';
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
index 928fd70055..984498a314 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
@@ -1,4 +1,5 @@
-import {isEmpty, isString} from 'lodash';
+import isEmpty from 'lodash/isEmpty';
+import isString from 'lodash/isString';
 import * as Sentry from '@sentry/browser';
 import queryString from 'query-string';
 
diff --git a/src/sentry/static/sentry/app/components/events/meta/annotatedText.jsx b/src/sentry/static/sentry/app/components/events/meta/annotatedText.jsx
index f1c9832f7f..b6e6eea31d 100644
--- a/src/sentry/static/sentry/app/components/events/meta/annotatedText.jsx
+++ b/src/sentry/static/sentry/app/components/events/meta/annotatedText.jsx
@@ -1,4 +1,3 @@
-import _ from 'lodash';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
diff --git a/src/sentry/static/sentry/app/components/events/meta/metaData.jsx b/src/sentry/static/sentry/app/components/events/meta/metaData.jsx
index 1bf7135312..1396b95db2 100644
--- a/src/sentry/static/sentry/app/components/events/meta/metaData.jsx
+++ b/src/sentry/static/sentry/app/components/events/meta/metaData.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import isNil from 'lodash/isNil';
 
 import {getMeta} from 'app/components/events/meta/metaProxy';
 import ErrorBoundary from 'app/components/errorBoundary';
@@ -30,7 +30,7 @@ export default class MetaData extends React.Component {
 
     return (
       <ErrorBoundary mini>
-        {required && _.isNil(value) && !meta ? null : children(value, meta)}
+        {required && isNil(value) && !meta ? null : children(value, meta)}
       </ErrorBoundary>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/meta/metaProxy.jsx b/src/sentry/static/sentry/app/components/events/meta/metaProxy.jsx
index 82c387622a..be2144995a 100644
--- a/src/sentry/static/sentry/app/components/events/meta/metaProxy.jsx
+++ b/src/sentry/static/sentry/app/components/events/meta/metaProxy.jsx
@@ -1,13 +1,14 @@
-import _ from 'lodash';
+import isEmpty from 'lodash/isEmpty';
+import isNull from 'lodash/isNull';
 
 const GET_META = Symbol('GET_META');
 const IS_PROXY = Symbol('IS_PROXY');
 
 function isAnnotated(meta) {
-  if (_.isEmpty(meta)) {
+  if (isEmpty(meta)) {
     return false;
   }
-  return !_.isEmpty(meta.rem) || !_.isEmpty(meta.err);
+  return !isEmpty(meta.rem) || !isEmpty(meta.err);
 }
 
 export class MetaProxy {
@@ -38,11 +39,7 @@ export class MetaProxy {
     }
 
     const value = Reflect.get(obj, prop, receiver);
-    if (
-      !Reflect.has(obj, prop, receiver) ||
-      typeof value !== 'object' ||
-      _.isNull(value)
-    ) {
+    if (!Reflect.has(obj, prop, receiver) || typeof value !== 'object' || isNull(value)) {
       return value;
     }
 
diff --git a/src/sentry/static/sentry/app/components/forms/form.tsx b/src/sentry/static/sentry/app/components/forms/form.tsx
index ba5e285687..0ced23b58a 100644
--- a/src/sentry/static/sentry/app/components/forms/form.tsx
+++ b/src/sentry/static/sentry/app/components/forms/form.tsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import isEqual from 'lodash/isEqual';
 import styled from 'react-emotion';
 
 import FormState from 'app/components/forms/state';
@@ -163,7 +163,7 @@ class Form<
     const {initialData, data} = this.state;
     const {errorMessage, hideErrors, requireChanges} = this.props;
     const hasChanges = requireChanges
-      ? Object.keys(data).length && !_.isEqual(data, initialData)
+      ? Object.keys(data).length && !isEqual(data, initialData)
       : true;
     const isError = this.state.state === FormState.ERROR;
     const nonFieldErrors = this.state.errors && this.state.errors.non_field_errors;
diff --git a/src/sentry/static/sentry/app/components/forms/selectAsyncControl.jsx b/src/sentry/static/sentry/app/components/forms/selectAsyncControl.jsx
index 9c56948852..2b4c6ef178 100644
--- a/src/sentry/static/sentry/app/components/forms/selectAsyncControl.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectAsyncControl.jsx
@@ -1,4 +1,4 @@
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/components/group/externalIssueForm.jsx b/src/sentry/static/sentry/app/components/group/externalIssueForm.jsx
index 5dd6f12cf6..5ee36ed43c 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssueForm.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssueForm.jsx
@@ -2,7 +2,7 @@ import $ from 'jquery';
 import React from 'react';
 import PropTypes from 'prop-types';
 import queryString from 'query-string';
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 
 import {addSuccessMessage} from 'app/actionCreators/indicator';
 import AsyncComponent from 'app/components/asyncComponent';
diff --git a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.tsx b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.tsx
index 95892123ed..acd45323fa 100644
--- a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.tsx
+++ b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.tsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
 import {addQueryParamsToExistingUrl} from 'app/utils/queryString';
diff --git a/src/sentry/static/sentry/app/components/group/sidebar.jsx b/src/sentry/static/sentry/app/components/group/sidebar.jsx
index 4a13477fb9..b54e49d32f 100644
--- a/src/sentry/static/sentry/app/components/group/sidebar.jsx
+++ b/src/sentry/static/sentry/app/components/group/sidebar.jsx
@@ -1,6 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {isEqual, pickBy, keyBy, isObject} from 'lodash';
+import isEqual from 'lodash/isEqual';
+import pickBy from 'lodash/pickBy';
+import keyBy from 'lodash/keyBy';
+import isObject from 'lodash/isObject';
 
 import ErrorBoundary from 'app/components/errorBoundary';
 import SentryTypes from 'app/sentryTypes';
diff --git a/src/sentry/static/sentry/app/components/idBadge/organizationBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/organizationBadge.jsx
index e146a42106..44f4cd7bf1 100644
--- a/src/sentry/static/sentry/app/components/idBadge/organizationBadge.jsx
+++ b/src/sentry/static/sentry/app/components/idBadge/organizationBadge.jsx
@@ -1,4 +1,4 @@
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import createReactClass from 'create-react-class';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/components/idBadge/teamBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/teamBadge.jsx
index 095fb15490..1d56098a35 100644
--- a/src/sentry/static/sentry/app/components/idBadge/teamBadge.jsx
+++ b/src/sentry/static/sentry/app/components/idBadge/teamBadge.jsx
@@ -1,4 +1,4 @@
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import createReactClass from 'create-react-class';
 import React from 'react';
 import Reflux from 'reflux';
diff --git a/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
index c38175c4f7..3fb6924c4c 100644
--- a/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
+++ b/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
@@ -6,7 +6,7 @@ import Link from 'app/components/links/link';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import space from 'app/styles/space';
 import SentryTypes from 'app/sentryTypes';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 
 const UserBadge = ({
   displayName,
diff --git a/src/sentry/static/sentry/app/components/inlineSvg.tsx b/src/sentry/static/sentry/app/components/inlineSvg.tsx
index 6f6276a3b7..fbfbb57b3b 100644
--- a/src/sentry/static/sentry/app/components/inlineSvg.tsx
+++ b/src/sentry/static/sentry/app/components/inlineSvg.tsx
@@ -1,4 +1,4 @@
-import {pickBy} from 'lodash';
+import pickBy from 'lodash/pickBy';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
diff --git a/src/sentry/static/sentry/app/components/issueSyncListElement.tsx b/src/sentry/static/sentry/app/components/issueSyncListElement.tsx
index 101e40f84a..2c98d42364 100644
--- a/src/sentry/static/sentry/app/components/issueSyncListElement.tsx
+++ b/src/sentry/static/sentry/app/components/issueSyncListElement.tsx
@@ -3,7 +3,7 @@ import React from 'react';
 import styled, {css} from 'react-emotion';
 import InlineSvg from 'app/components/inlineSvg';
 import space from 'app/styles/space';
-import {capitalize} from 'lodash';
+import capitalize from 'lodash/capitalize';
 import Hovercard from 'app/components/hovercard';
 import {callIfFunction} from 'app/utils/callIfFunction';
 
diff --git a/src/sentry/static/sentry/app/components/links/listLink.jsx b/src/sentry/static/sentry/app/components/links/listLink.jsx
index 45a980d563..2607820e9f 100644
--- a/src/sentry/static/sentry/app/components/links/listLink.jsx
+++ b/src/sentry/static/sentry/app/components/links/listLink.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import omit from 'lodash/omit';
 import {Link} from 'react-router';
 import classNames from 'classnames';
 
@@ -51,7 +51,7 @@ class ListLink extends React.Component {
   };
 
   render() {
-    const carriedProps = _.omit(this.props, 'activeClassName', 'isActive', 'index');
+    const carriedProps = omit(this.props, 'activeClassName', 'isActive', 'index');
     return (
       <li className={this.getClassName()}>
         <Link {...carriedProps} onlyActiveOnIndex={this.props.index}>
diff --git a/src/sentry/static/sentry/app/components/modals/sentryAppPublishRequestModal.tsx b/src/sentry/static/sentry/app/components/modals/sentryAppPublishRequestModal.tsx
index 608f4f90a1..bea4054c35 100644
--- a/src/sentry/static/sentry/app/components/modals/sentryAppPublishRequestModal.tsx
+++ b/src/sentry/static/sentry/app/components/modals/sentryAppPublishRequestModal.tsx
@@ -3,7 +3,7 @@ import styled from 'react-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
-import _ from 'lodash';
+import intersection from 'lodash/intersection';
 
 import {SentryApp, Scope} from 'app/types';
 import {t} from 'app/locale';
@@ -23,9 +23,12 @@ const getPermissionSelectionsFromScopes = (scopes: Scope[]) => {
     let highestChoice: PermissionChoice | undefined;
     for (const perm in permObj.choices) {
       const choice = permObj.choices[perm];
-      const intersection = _.intersection(choice.scopes, scopes);
-      if (intersection.length > 0 && intersection.length === choice.scopes.length) {
-        if (!highestChoice || intersection.length > highestChoice.scopes.length) {
+      const scopesIntersection = intersection(choice.scopes, scopes);
+      if (
+        scopesIntersection.length > 0 &&
+        scopesIntersection.length === choice.scopes.length
+      ) {
+        if (!highestChoice || scopesIntersection.length > highestChoice.scopes.length) {
           highestChoice = choice;
         }
       }
diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
index e661b09199..dd23df631d 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
@@ -1,4 +1,7 @@
-import {flatten, isEqual, pick, partition} from 'lodash';
+import flatten from 'lodash/flatten';
+import isEqual from 'lodash/isEqual';
+import pick from 'lodash/pick';
+import partition from 'lodash/partition';
 import {withRouter} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/utils.jsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/utils.jsx
index b7dbd8926d..944a1f2c72 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/utils.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/utils.jsx
@@ -1,4 +1,7 @@
-import {pick, pickBy, identity} from 'lodash';
+import pick from 'lodash/pick';
+
+import pickBy from 'lodash/pickBy';
+import identity from 'lodash/identity';
 
 import {defined} from 'app/utils';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
diff --git a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
index 04b73e64d3..96edb2b4e9 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled, {css} from 'react-emotion';
-import {uniq} from 'lodash';
+import uniq from 'lodash/uniq';
 
 import {analytics} from 'app/utils/analytics';
 import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
diff --git a/src/sentry/static/sentry/app/components/passwordStrength.jsx b/src/sentry/static/sentry/app/components/passwordStrength.jsx
index 765f818cdd..672b6769bd 100644
--- a/src/sentry/static/sentry/app/components/passwordStrength.jsx
+++ b/src/sentry/static/sentry/app/components/passwordStrength.jsx
@@ -1,4 +1,4 @@
-import {throttle} from 'lodash';
+import throttle from 'lodash/throttle';
 import PropTypes from 'prop-types';
 import React from 'react';
 import ReactDOM from 'react-dom';
diff --git a/src/sentry/static/sentry/app/components/platformPicker.jsx b/src/sentry/static/sentry/app/components/platformPicker.jsx
index 9a60a11418..1ff780d657 100644
--- a/src/sentry/static/sentry/app/components/platformPicker.jsx
+++ b/src/sentry/static/sentry/app/components/platformPicker.jsx
@@ -1,4 +1,4 @@
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import PropTypes from 'prop-types';
 import React from 'react';
 import keydown from 'react-keydown';
diff --git a/src/sentry/static/sentry/app/components/pluginConfig.jsx b/src/sentry/static/sentry/app/components/pluginConfig.jsx
index de27c98e9c..efc8c6fe90 100644
--- a/src/sentry/static/sentry/app/components/pluginConfig.jsx
+++ b/src/sentry/static/sentry/app/components/pluginConfig.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import isEqual from 'lodash/isEqual';
 import styled from 'react-emotion';
 
 import {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';
@@ -45,9 +45,7 @@ class PluginConfig extends React.Component {
   }
 
   shouldComponentUpdate(nextProps, nextState) {
-    return (
-      !_.isEqual(nextState, this.state) || !_.isEqual(nextProps.data, this.props.data)
-    );
+    return !isEqual(nextState, this.state) || !isEqual(nextProps.data, this.props.data);
   }
 
   loadPlugin(data) {
diff --git a/src/sentry/static/sentry/app/components/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectSelector.jsx
index 35e53f40fe..d082a7d3b1 100644
--- a/src/sentry/static/sentry/app/components/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectSelector.jsx
@@ -2,7 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 import {Link} from 'react-router';
-import {flatten} from 'lodash';
+import flatten from 'lodash/flatten';
 
 import {analytics} from 'app/utils/analytics';
 import {sortArray} from 'app/utils';
diff --git a/src/sentry/static/sentry/app/components/search/index.jsx b/src/sentry/static/sentry/app/components/search/index.jsx
index b48f272c51..dbda09368d 100644
--- a/src/sentry/static/sentry/app/components/search/index.jsx
+++ b/src/sentry/static/sentry/app/components/search/index.jsx
@@ -1,4 +1,4 @@
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import {withRouter} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
index 3c18dc324a..9c4cd171dd 100644
--- a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
@@ -1,4 +1,5 @@
-import {flatten, debounce} from 'lodash';
+import flatten from 'lodash/flatten';
+import debounce from 'lodash/debounce';
 import {withRouter} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/components/search/sources/helpSource.jsx b/src/sentry/static/sentry/app/components/search/sources/helpSource.jsx
index abf0b4ed12..41092ba780 100644
--- a/src/sentry/static/sentry/app/components/search/sources/helpSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/helpSource.jsx
@@ -1,4 +1,4 @@
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import {withRouter} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/components/search/sources/index.jsx b/src/sentry/static/sentry/app/components/search/sources/index.jsx
index 7d98008f9a..07f2d85495 100644
--- a/src/sentry/static/sentry/app/components/search/sources/index.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/index.jsx
@@ -1,4 +1,4 @@
-import {flatten} from 'lodash';
+import flatten from 'lodash/flatten';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/components/search/sources/routeSource.jsx b/src/sentry/static/sentry/app/components/search/sources/routeSource.jsx
index e9c8373872..5f66b33b16 100644
--- a/src/sentry/static/sentry/app/components/search/sources/routeSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/routeSource.jsx
@@ -1,4 +1,4 @@
-import {flattenDepth} from 'lodash';
+import flattenDepth from 'lodash/flattenDepth';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/components/selectMembers/index.tsx b/src/sentry/static/sentry/app/components/selectMembers/index.tsx
index 8b94dd1f8e..ab2bd01d11 100644
--- a/src/sentry/static/sentry/app/components/selectMembers/index.tsx
+++ b/src/sentry/static/sentry/app/components/selectMembers/index.tsx
@@ -1,4 +1,4 @@
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 84dba9d582..3256f44451 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -1,4 +1,4 @@
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import {withRouter, browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
index ac2604efaa..c8a372198c 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
@@ -3,7 +3,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
 import * as Sentry from '@sentry/browser';
-import _ from 'lodash';
+import debounce from 'lodash/debounce';
 import createReactClass from 'create-react-class';
 import styled, {css} from 'react-emotion';
 
@@ -465,7 +465,7 @@ class SmartSearchBar extends React.Component {
    * Returns array of tag values that substring match `query`; invokes `callback`
    * with data when ready
    */
-  getTagValues = _.debounce(
+  getTagValues = debounce(
     async (tag, query) => {
       // Strip double quotes if there are any
       query = query.replace(/"/g, '').trim();
@@ -513,7 +513,7 @@ class SmartSearchBar extends React.Component {
   /**
    * Get recent searches
    */
-  getRecentSearches = _.debounce(
+  getRecentSearches = debounce(
     async () => {
       const {savedSearchType, hasRecentSearches, onGetRecentSearches} = this.props;
       // `savedSearchType` can be 0
@@ -553,7 +553,7 @@ class SmartSearchBar extends React.Component {
     return [];
   };
 
-  getReleases = _.debounce(
+  getReleases = debounce(
     async (tag, query) => {
       const releasePromise = this.fetchReleases(query);
 
diff --git a/src/sentry/static/sentry/app/components/stackedBarChart.jsx b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
index 65f6c79a8e..fd9cb2f4f6 100644
--- a/src/sentry/static/sentry/app/components/stackedBarChart.jsx
+++ b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import moment from 'moment-timezone';
-import _ from 'lodash';
+import isEqual from 'lodash/isEqual';
 import styled, {cx} from 'react-emotion';
 
 import Tooltip from 'app/components/tooltip';
@@ -101,7 +101,7 @@ class StackedBarChart extends React.Component {
   }
 
   shouldComponentUpdate(nextProps, nextState) {
-    return !_.isEqual(this.props, nextProps);
+    return !isEqual(this.props, nextProps);
   }
 
   getInterval = series => {
diff --git a/src/sentry/static/sentry/app/components/stream/processingIssueList.jsx b/src/sentry/static/sentry/app/components/stream/processingIssueList.jsx
index 54e4a38531..77927e515f 100644
--- a/src/sentry/static/sentry/app/components/stream/processingIssueList.jsx
+++ b/src/sentry/static/sentry/app/components/stream/processingIssueList.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import PropTypes from 'prop-types';
 
 import {Client} from 'app/api';
diff --git a/src/sentry/static/sentry/app/components/timeSince.tsx b/src/sentry/static/sentry/app/components/timeSince.tsx
index ccaee0dfb3..e8dacb4b42 100644
--- a/src/sentry/static/sentry/app/components/timeSince.tsx
+++ b/src/sentry/static/sentry/app/components/timeSince.tsx
@@ -1,4 +1,5 @@
-import {isNumber, isString} from 'lodash';
+import isNumber from 'lodash/isNumber';
+import isString from 'lodash/isString';
 import PropTypes from 'prop-types';
 import React from 'react';
 import moment from 'moment-timezone';
diff --git a/src/sentry/static/sentry/app/data/forms/projectDebugFiles.jsx b/src/sentry/static/sentry/app/data/forms/projectDebugFiles.jsx
index 8cb4083659..f586bcb295 100644
--- a/src/sentry/static/sentry/app/data/forms/projectDebugFiles.jsx
+++ b/src/sentry/static/sentry/app/data/forms/projectDebugFiles.jsx
@@ -1,4 +1,6 @@
-import _ from 'lodash';
+import isObject from 'lodash/isObject';
+import forEach from 'lodash/forEach';
+import set from 'lodash/set';
 import React from 'react';
 
 import {t} from 'app/locale';
@@ -13,9 +15,9 @@ export const route = '/settings/:orgId/projects/:projectId/debug-symbols/';
 
 function flattenKeys(obj) {
   const result = {};
-  _.forEach(obj, (value, key) => {
-    if (_.isObject(value)) {
-      _.forEach(value, (innerValue, innerKey) => {
+  forEach(obj, (value, key) => {
+    if (isObject(value)) {
+      forEach(value, (innerValue, innerKey) => {
         result[`${key}.${innerKey}`] = innerValue;
       });
     } else {
@@ -27,8 +29,8 @@ function flattenKeys(obj) {
 
 function unflattenKeys(obj) {
   const result = {};
-  _.forEach(obj, (value, key) => {
-    _.set(result, key.split('.'), value);
+  forEach(obj, (value, key) => {
+    set(result, key.split('.'), value);
   });
   return result;
 }
diff --git a/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx b/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx
index 116c17c185..9ed1caffd3 100644
--- a/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx
+++ b/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import _ from 'lodash';
 
 import {extractMultilineFields} from 'app/utils';
 import {tct} from 'app/locale';
diff --git a/src/sentry/static/sentry/app/locale.tsx b/src/sentry/static/sentry/app/locale.tsx
index 091f98ef4b..4b152a9a79 100644
--- a/src/sentry/static/sentry/app/locale.tsx
+++ b/src/sentry/static/sentry/app/locale.tsx
@@ -1,7 +1,9 @@
 import React from 'react';
 import Jed from 'jed';
 import {sprintf} from 'sprintf-js';
-import {isString, isArray, isObject} from 'lodash';
+import isString from 'lodash/isString';
+import isArray from 'lodash/isArray';
+import isObject from 'lodash/isObject';
 import {css} from 'react-emotion';
 
 import {getTranslations} from 'app/translations';
diff --git a/src/sentry/static/sentry/app/options.jsx b/src/sentry/static/sentry/app/options.jsx
index f6c6253b0c..6ee8b96b91 100644
--- a/src/sentry/static/sentry/app/options.jsx
+++ b/src/sentry/static/sentry/app/options.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import _ from 'lodash';
+import keyBy from 'lodash/keyBy';
 import ConfigStore from 'app/stores/configStore';
 import {t, tct} from 'app/locale';
 import {
@@ -159,7 +159,7 @@ const definitions = [
   },
 ];
 
-const definitionsMap = _.keyBy(definitions, def => def.key);
+const definitionsMap = keyBy(definitions, def => def.key);
 
 const disabledReasons = {
   diskPriority:
diff --git a/src/sentry/static/sentry/app/plugins/components/settings.jsx b/src/sentry/static/sentry/app/plugins/components/settings.jsx
index ae3f301a9d..afbe91da18 100644
--- a/src/sentry/static/sentry/app/plugins/components/settings.jsx
+++ b/src/sentry/static/sentry/app/plugins/components/settings.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
+import isEqual from 'lodash/isEqual';
 import styled from 'react-emotion';
 
 import {Form, FormState} from 'app/components/forms';
@@ -112,7 +112,7 @@ class PluginSettings extends PluginComponentBase {
       return <LoadingIndicator />;
     }
     const isSaving = this.state.state === FormState.SAVING;
-    const hasChanges = !_.isEqual(this.state.initialData, this.state.formData);
+    const hasChanges = !isEqual(this.state.initialData, this.state.formData);
 
     const data = this.state.rawData;
     if (data.config_error) {
diff --git a/src/sentry/static/sentry/app/stores/eventStore.jsx b/src/sentry/static/sentry/app/stores/eventStore.jsx
index dfd2ddf00a..28d2574b0f 100644
--- a/src/sentry/static/sentry/app/stores/eventStore.jsx
+++ b/src/sentry/static/sentry/app/stores/eventStore.jsx
@@ -1,6 +1,6 @@
 import $ from 'jquery';
 import Reflux from 'reflux';
-import _ from 'lodash';
+import isArray from 'lodash/isArray';
 
 const EventStore = Reflux.createStore({
   init() {
@@ -24,7 +24,7 @@ const EventStore = Reflux.createStore({
   },
 
   add(items) {
-    if (!_.isArray(items)) {
+    if (!isArray(items)) {
       items = [items];
     }
 
diff --git a/src/sentry/static/sentry/app/stores/globalSelectionStore.jsx b/src/sentry/static/sentry/app/stores/globalSelectionStore.jsx
index cdadcef86b..04c77c9740 100644
--- a/src/sentry/static/sentry/app/stores/globalSelectionStore.jsx
+++ b/src/sentry/static/sentry/app/stores/globalSelectionStore.jsx
@@ -1,4 +1,5 @@
-import {isEqual, pick} from 'lodash';
+import isEqual from 'lodash/isEqual';
+import pick from 'lodash/pick';
 import Reflux from 'reflux';
 
 import {
diff --git a/src/sentry/static/sentry/app/stores/groupStore.jsx b/src/sentry/static/sentry/app/stores/groupStore.jsx
index b4261e98d1..6c15b85387 100644
--- a/src/sentry/static/sentry/app/stores/groupStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupStore.jsx
@@ -1,4 +1,5 @@
-import _ from 'lodash';
+import isArray from 'lodash/isArray';
+import isUndefined from 'lodash/isUndefined';
 import Reflux from 'reflux';
 
 import GroupActions from 'app/actions/groupActions';
@@ -39,7 +40,7 @@ const GroupStore = Reflux.createStore({
   },
 
   add(items) {
-    if (!_.isArray(items)) {
+    if (!isArray(items)) {
       items = [items];
     }
 
@@ -80,21 +81,21 @@ const GroupStore = Reflux.createStore({
   },
 
   addStatus(id, status) {
-    if (_.isUndefined(this.statuses[id])) {
+    if (isUndefined(this.statuses[id])) {
       this.statuses[id] = {};
     }
     this.statuses[id][status] = true;
   },
 
   clearStatus(id, status) {
-    if (_.isUndefined(this.statuses[id])) {
+    if (isUndefined(this.statuses[id])) {
       return;
     }
     this.statuses[id][status] = false;
   },
 
   hasStatus(id, status) {
-    if (_.isUndefined(this.statuses[id])) {
+    if (isUndefined(this.statuses[id])) {
       return false;
     }
     return this.statuses[id][status] || false;
@@ -208,7 +209,7 @@ const GroupStore = Reflux.createStore({
     // regroup pending changes by their itemID
     const pendingById = {};
     this.pendingChanges.forEach(change => {
-      if (_.isUndefined(pendingById[change.id])) {
+      if (isUndefined(pendingById[change.id])) {
         pendingById[change.id] = [];
       }
       pendingById[change.id].push(change);
@@ -216,7 +217,7 @@ const GroupStore = Reflux.createStore({
 
     return this.items.map(item => {
       let rItem = item;
-      if (!_.isUndefined(pendingById[item.id])) {
+      if (!isUndefined(pendingById[item.id])) {
         // copy the object so dirty state doesnt mutate original
         rItem = {...rItem};
         pendingById[item.id].forEach(change => {
@@ -350,7 +351,7 @@ const GroupStore = Reflux.createStore({
    * If itemIds is undefined, returns all ids in the store
    */
   _itemIdsOrAll(itemIds) {
-    if (_.isUndefined(itemIds)) {
+    if (isUndefined(itemIds)) {
       itemIds = this.items.map(item => item.id);
     }
     return itemIds;
diff --git a/src/sentry/static/sentry/app/stores/groupingStore.jsx b/src/sentry/static/sentry/app/stores/groupingStore.jsx
index ff583799ff..1af1e8d3c0 100644
--- a/src/sentry/static/sentry/app/stores/groupingStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupingStore.jsx
@@ -1,5 +1,5 @@
 import Reflux from 'reflux';
-import {pick} from 'lodash';
+import pick from 'lodash/pick';
 
 import IndicatorStore from 'app/stores/indicatorStore';
 import {Client} from 'app/api';
diff --git a/src/sentry/static/sentry/app/stores/hookStore.tsx b/src/sentry/static/sentry/app/stores/hookStore.tsx
index 238c7bf1f1..0ac4f953ef 100644
--- a/src/sentry/static/sentry/app/stores/hookStore.tsx
+++ b/src/sentry/static/sentry/app/stores/hookStore.tsx
@@ -1,5 +1,5 @@
 import Reflux from 'reflux';
-import _ from 'lodash';
+import isUndefined from 'lodash/isUndefined';
 import * as Sentry from '@sentry/browser';
 
 import {Hooks, HookName} from 'app/types/hooks';
@@ -79,7 +79,7 @@ const hookStoreConfig: Reflux.StoreDefinition & HookStoreInterface = {
       });
     }
 
-    if (_.isUndefined(this.hooks[hookName])) {
+    if (isUndefined(this.hooks[hookName])) {
       this.hooks[hookName] = [];
     }
 
@@ -88,7 +88,7 @@ const hookStoreConfig: Reflux.StoreDefinition & HookStoreInterface = {
   },
 
   remove(hookName, callback) {
-    if (_.isUndefined(this.hooks[hookName])) {
+    if (isUndefined(this.hooks[hookName])) {
       return;
     }
     this.hooks[hookName] = this.hooks[hookName]!.filter(cb => {
diff --git a/src/sentry/static/sentry/app/stores/projectsStore.jsx b/src/sentry/static/sentry/app/stores/projectsStore.jsx
index dc00614bca..e67c879f0a 100644
--- a/src/sentry/static/sentry/app/stores/projectsStore.jsx
+++ b/src/sentry/static/sentry/app/stores/projectsStore.jsx
@@ -1,5 +1,5 @@
 import Reflux from 'reflux';
-import _ from 'lodash';
+import each from 'lodash/each';
 
 import ProjectActions from 'app/actions/projectActions';
 import TeamActions from 'app/actions/teamActions';
@@ -76,7 +76,7 @@ const ProjectsStore = Reflux.createStore({
 
   onStatsLoadSuccess(data) {
     const touchedIds = [];
-    _.each(data || [], (stats, projectId) => {
+    each(data || [], (stats, projectId) => {
       if (projectId in this.itemsById) {
         this.itemsById[projectId].stats = stats;
         touchedIds.push(projectId);
diff --git a/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx b/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx
index c642e57d5a..0bacd2697a 100644
--- a/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx
+++ b/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx
@@ -1,4 +1,4 @@
-import {findIndex} from 'lodash';
+import findIndex from 'lodash/findIndex';
 import Reflux from 'reflux';
 
 import SavedSearchesActions from 'app/actions/savedSearchesActions';
diff --git a/src/sentry/static/sentry/app/stores/tagStore.jsx b/src/sentry/static/sentry/app/stores/tagStore.jsx
index e247057bb5..3c6988d905 100644
--- a/src/sentry/static/sentry/app/stores/tagStore.jsx
+++ b/src/sentry/static/sentry/app/stores/tagStore.jsx
@@ -1,5 +1,5 @@
 import Reflux from 'reflux';
-import _ from 'lodash';
+import reduce from 'lodash/reduce';
 
 import TagActions from 'app/actions/tagActions';
 import MemberListStore from 'app/stores/memberListStore';
@@ -119,7 +119,7 @@ const TagStore = Reflux.createStore({
   onLoadTagsSuccess(data) {
     Object.assign(
       this.tags,
-      _.reduce(
+      reduce(
         data,
         (obj, tag) => {
           tag = Object.assign(
diff --git a/src/sentry/static/sentry/app/utils.tsx b/src/sentry/static/sentry/app/utils.tsx
index c47ef48cd6..0386d79c6f 100644
--- a/src/sentry/static/sentry/app/utils.tsx
+++ b/src/sentry/static/sentry/app/utils.tsx
@@ -1,5 +1,8 @@
-import _ from 'lodash';
 import {Query} from 'history';
+import isArray from 'lodash/isArray';
+import isObject from 'lodash/isObject';
+import isString from 'lodash/isString';
+import isUndefined from 'lodash/isUndefined';
 
 import {NewQuery} from 'app/stores/discoverSavedQueriesStore';
 import {Project} from 'app/types/index';
@@ -26,11 +29,11 @@ function arrayIsEqual(arr?: any[], other?: any[], deep?: boolean): boolean {
 export function valueIsEqual(value?: any, other?: any, deep?: boolean): boolean {
   if (value === other) {
     return true;
-  } else if (_.isArray(value) || _.isArray(other)) {
+  } else if (isArray(value) || isArray(other)) {
     if (arrayIsEqual(value, other, deep)) {
       return true;
     }
-  } else if (_.isObject(value) || _.isObject(other)) {
+  } else if (isObject(value) || isObject(other)) {
     if (objectMatchesSubset(value, other, deep)) {
       return true;
     }
@@ -111,7 +114,7 @@ export function explodeSlug(slug: string): string {
 }
 
 export function defined(item: any): boolean {
-  return !_.isUndefined(item) && item !== null;
+  return !isUndefined(item) && item !== null;
 }
 
 export function nl2br(str: string): string {
@@ -125,7 +128,7 @@ export function nl2br(str: string): string {
 export function isUrl(str: any): boolean {
   return (
     !!str &&
-    _.isString(str) &&
+    isString(str) &&
     (str.indexOf('http://') === 0 || str.indexOf('https://') === 0)
   );
 }
diff --git a/src/sentry/static/sentry/app/utils/consolidatedScopes.tsx b/src/sentry/static/sentry/app/utils/consolidatedScopes.tsx
index a4fbda0110..ccb9b1e7c9 100644
--- a/src/sentry/static/sentry/app/utils/consolidatedScopes.tsx
+++ b/src/sentry/static/sentry/app/utils/consolidatedScopes.tsx
@@ -1,4 +1,6 @@
-import {invertBy, groupBy, pick} from 'lodash';
+import invertBy from 'lodash/invertBy';
+import groupBy from 'lodash/groupBy';
+import pick from 'lodash/pick';
 import {Permissions} from 'app/types';
 
 const PERMISSION_LEVELS = {
diff --git a/src/sentry/static/sentry/app/utils/formatters.tsx b/src/sentry/static/sentry/app/utils/formatters.tsx
index bc4b0e4518..4ffd3f7f03 100644
--- a/src/sentry/static/sentry/app/utils/formatters.tsx
+++ b/src/sentry/static/sentry/app/utils/formatters.tsx
@@ -1,4 +1,4 @@
-import {get} from 'lodash';
+import get from 'lodash/get';
 
 import {t} from 'app/locale';
 import {CommitAuthor, User} from 'app/types';
diff --git a/src/sentry/static/sentry/app/utils/getRouteStringFromRoutes.tsx b/src/sentry/static/sentry/app/utils/getRouteStringFromRoutes.tsx
index 12335857bd..854dde541e 100644
--- a/src/sentry/static/sentry/app/utils/getRouteStringFromRoutes.tsx
+++ b/src/sentry/static/sentry/app/utils/getRouteStringFromRoutes.tsx
@@ -1,5 +1,5 @@
 import {PlainRoute} from 'react-router/lib/Route';
-import {findLastIndex} from 'lodash';
+import findLastIndex from 'lodash/findLastIndex';
 
 type RouteWithPath = Omit<PlainRoute, 'path'> & Required<Pick<PlainRoute, 'path'>>;
 
diff --git a/src/sentry/static/sentry/app/utils/isEqualWithDates.jsx b/src/sentry/static/sentry/app/utils/isEqualWithDates.jsx
index 869f0f7790..7c78f52505 100644
--- a/src/sentry/static/sentry/app/utils/isEqualWithDates.jsx
+++ b/src/sentry/static/sentry/app/utils/isEqualWithDates.jsx
@@ -1,4 +1,6 @@
-import {isDate, isEqualWith} from 'lodash';
+import isDate from 'lodash/isDate';
+
+import isEqualWith from 'lodash/isEqualWith';
 
 // `lodash.isEqual` does not compare date objects
 const dateComparator = (value, other) => {
diff --git a/src/sentry/static/sentry/app/utils/projects.jsx b/src/sentry/static/sentry/app/utils/projects.jsx
index 9416488380..117c25b6f6 100644
--- a/src/sentry/static/sentry/app/utils/projects.jsx
+++ b/src/sentry/static/sentry/app/utils/projects.jsx
@@ -1,4 +1,6 @@
-import {memoize, partition, uniqBy} from 'lodash';
+import memoize from 'lodash/memoize';
+import partition from 'lodash/partition';
+import uniqBy from 'lodash/uniqBy';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/utils/queryString.tsx b/src/sentry/static/sentry/app/utils/queryString.tsx
index 31a9a88600..2b1c265c45 100644
--- a/src/sentry/static/sentry/app/utils/queryString.tsx
+++ b/src/sentry/static/sentry/app/utils/queryString.tsx
@@ -1,6 +1,6 @@
 import queryString from 'query-string';
 import parseurl from 'parseurl';
-import {isString} from 'lodash';
+import isString from 'lodash/isString';
 
 // remove leading and trailing whitespace and remove double spaces
 export function formatQueryString(qs: string): string {
diff --git a/src/sentry/static/sentry/app/utils/recreateRoute.tsx b/src/sentry/static/sentry/app/utils/recreateRoute.tsx
index 863d494b16..58c11efd17 100644
--- a/src/sentry/static/sentry/app/utils/recreateRoute.tsx
+++ b/src/sentry/static/sentry/app/utils/recreateRoute.tsx
@@ -1,6 +1,6 @@
 import {Location} from 'history';
 import {PlainRoute} from 'react-router/lib/Route';
-import {findLastIndex} from 'lodash';
+import findLastIndex from 'lodash/findLastIndex';
 
 import replaceRouterParams from 'app/utils/replaceRouterParams';
 
diff --git a/src/sentry/static/sentry/app/utils/withTeamsForUser.tsx b/src/sentry/static/sentry/app/utils/withTeamsForUser.tsx
index 67e329d8f4..6bde622a0c 100644
--- a/src/sentry/static/sentry/app/utils/withTeamsForUser.tsx
+++ b/src/sentry/static/sentry/app/utils/withTeamsForUser.tsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import _ from 'lodash';
 
 import {Client} from 'app/api';
 import {Organization, Project, Team, TeamWithProjects} from 'app/types';
diff --git a/src/sentry/static/sentry/app/views/admin/adminSettings.jsx b/src/sentry/static/sentry/app/views/admin/adminSettings.jsx
index f9492fb4d1..28d24d7021 100644
--- a/src/sentry/static/sentry/app/views/admin/adminSettings.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminSettings.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import _ from 'lodash';
+import isUndefined from 'lodash/isUndefined';
 
 import AsyncView from 'app/views/asyncView';
 import {t} from 'app/locale';
@@ -36,7 +36,7 @@ export default class AdminSettings extends AsyncView {
     for (const key of optionsAvailable) {
       // TODO(dcramer): we should not be mutating options
       const option = data[key] || {field: {}};
-      if (_.isUndefined(option.value) || option.value === '') {
+      if (isUndefined(option.value) || option.value === '') {
         const defn = getOption(key);
         initialData[key] = defn.defaultValue ? defn.defaultValue() : '';
       } else {
diff --git a/src/sentry/static/sentry/app/views/app.jsx b/src/sentry/static/sentry/app/views/app.jsx
index f4f61a050b..8def0f99dc 100644
--- a/src/sentry/static/sentry/app/views/app.jsx
+++ b/src/sentry/static/sentry/app/views/app.jsx
@@ -1,7 +1,8 @@
 import $ from 'jquery';
 import {ThemeProvider} from 'emotion-theming';
 import {browserHistory} from 'react-router';
-import {get, isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
+import get from 'lodash/get';
 import {injectGlobal} from 'emotion';
 import Cookies from 'js-cookie';
 import PropTypes from 'prop-types';
diff --git a/src/sentry/static/sentry/app/views/dashboards/discoverQuery.jsx b/src/sentry/static/sentry/app/views/dashboards/discoverQuery.jsx
index b88866f6b8..efde77e5be 100644
--- a/src/sentry/static/sentry/app/views/dashboards/discoverQuery.jsx
+++ b/src/sentry/static/sentry/app/views/dashboards/discoverQuery.jsx
@@ -1,4 +1,6 @@
-import {isEqual, memoize, omit} from 'lodash';
+import isEqual from 'lodash/isEqual';
+import memoize from 'lodash/memoize';
+import omit from 'lodash/omit';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/dashboards/exploreWidget.jsx b/src/sentry/static/sentry/app/views/dashboards/exploreWidget.jsx
index d63473e3b1..664f6aa972 100644
--- a/src/sentry/static/sentry/app/views/dashboards/exploreWidget.jsx
+++ b/src/sentry/static/sentry/app/views/dashboards/exploreWidget.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import styled from 'react-emotion';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 
 import {getDiscoverUrlPathFromDiscoverQuery} from 'app/views/dashboards/utils/getDiscoverUrlPathFromDiscoverQuery';
 import {getEventsUrlPathFromDiscoverQuery} from 'app/views/dashboards/utils/getEventsUrlPathFromDiscoverQuery';
diff --git a/src/sentry/static/sentry/app/views/dashboards/utils/getEventsUrlFromDiscoverQueryWithConditions.jsx b/src/sentry/static/sentry/app/views/dashboards/utils/getEventsUrlFromDiscoverQueryWithConditions.jsx
index 96b9ca0421..eef9a00109 100644
--- a/src/sentry/static/sentry/app/views/dashboards/utils/getEventsUrlFromDiscoverQueryWithConditions.jsx
+++ b/src/sentry/static/sentry/app/views/dashboards/utils/getEventsUrlFromDiscoverQueryWithConditions.jsx
@@ -7,7 +7,7 @@
  *   e.g. if the query has multiple fields (browser, device), values could be ["Chrome", "iPhone"]
  * @return {String} Returns a url to the "events" page with any discover conditions tranformed to search query syntax
  */
-import {zipWith} from 'lodash';
+import zipWith from 'lodash/zipWith';
 
 import {OPERATOR} from 'app/views/discover/data';
 import {escapeQuotes} from 'app/components/events/interfaces/utils';
diff --git a/src/sentry/static/sentry/app/views/dashboards/utils/getEventsUrlPathFromDiscoverQuery.jsx b/src/sentry/static/sentry/app/views/dashboards/utils/getEventsUrlPathFromDiscoverQuery.jsx
index e09b209a3f..021d1c2e8f 100644
--- a/src/sentry/static/sentry/app/views/dashboards/utils/getEventsUrlPathFromDiscoverQuery.jsx
+++ b/src/sentry/static/sentry/app/views/dashboards/utils/getEventsUrlPathFromDiscoverQuery.jsx
@@ -1,4 +1,4 @@
-import {pickBy} from 'lodash';
+import pickBy from 'lodash/pickBy';
 import qs from 'query-string';
 
 import {getUtcDateString} from 'app/utils/dates';
diff --git a/src/sentry/static/sentry/app/views/dashboards/widgetChart.jsx b/src/sentry/static/sentry/app/views/dashboards/widgetChart.jsx
index 1e63a7d210..7aa22945cf 100644
--- a/src/sentry/static/sentry/app/views/dashboards/widgetChart.jsx
+++ b/src/sentry/static/sentry/app/views/dashboards/widgetChart.jsx
@@ -1,5 +1,5 @@
 import {css} from 'react-emotion';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/discover/queryBuilder.tsx b/src/sentry/static/sentry/app/views/discover/queryBuilder.tsx
index 952f283ad4..5859f7aed3 100644
--- a/src/sentry/static/sentry/app/views/discover/queryBuilder.tsx
+++ b/src/sentry/static/sentry/app/views/discover/queryBuilder.tsx
@@ -1,5 +1,6 @@
 import React from 'react';
-import {uniq, partition} from 'lodash';
+import uniq from 'lodash/uniq';
+import partition from 'lodash/partition';
 import moment from 'moment-timezone';
 
 import {Client} from 'app/api';
diff --git a/src/sentry/static/sentry/app/views/discover/result/index.tsx b/src/sentry/static/sentry/app/views/discover/result/index.tsx
index cb4bde755e..2a5417e77e 100644
--- a/src/sentry/static/sentry/app/views/discover/result/index.tsx
+++ b/src/sentry/static/sentry/app/views/discover/result/index.tsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import {browserHistory} from 'react-router';
-import {throttle} from 'lodash';
+import throttle from 'lodash/throttle';
 
 import {t} from 'app/locale';
 import getDynamicText from 'app/utils/getDynamicText';
diff --git a/src/sentry/static/sentry/app/views/discover/result/utils.tsx b/src/sentry/static/sentry/app/views/discover/result/utils.tsx
index 7b22a675df..4c05b6b625 100644
--- a/src/sentry/static/sentry/app/views/discover/result/utils.tsx
+++ b/src/sentry/static/sentry/app/views/discover/result/utils.tsx
@@ -1,4 +1,4 @@
-import {orderBy} from 'lodash';
+import orderBy from 'lodash/orderBy';
 import Papa from 'papaparse';
 import React from 'react';
 import styled from 'react-emotion';
diff --git a/src/sentry/static/sentry/app/views/discover/sidebar/editSavedQuery.tsx b/src/sentry/static/sentry/app/views/discover/sidebar/editSavedQuery.tsx
index 514d45d8bc..94f28ba291 100644
--- a/src/sentry/static/sentry/app/views/discover/sidebar/editSavedQuery.tsx
+++ b/src/sentry/static/sentry/app/views/discover/sidebar/editSavedQuery.tsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 
 import Button from 'app/components/button';
 import {t} from 'app/locale';
diff --git a/src/sentry/static/sentry/app/views/discover/utils.tsx b/src/sentry/static/sentry/app/views/discover/utils.tsx
index 99f789a448..83f65ecc03 100644
--- a/src/sentry/static/sentry/app/views/discover/utils.tsx
+++ b/src/sentry/static/sentry/app/views/discover/utils.tsx
@@ -1,5 +1,6 @@
 import {Client} from 'app/api';
-import {isEqual, pick} from 'lodash';
+import isEqual from 'lodash/isEqual';
+import pick from 'lodash/pick';
 import moment from 'moment';
 import qs from 'query-string';
 
diff --git a/src/sentry/static/sentry/app/views/events/events.jsx b/src/sentry/static/sentry/app/views/events/events.jsx
index 2e3d689459..66d7ad33bc 100644
--- a/src/sentry/static/sentry/app/views/events/events.jsx
+++ b/src/sentry/static/sentry/app/views/events/events.jsx
@@ -1,5 +1,5 @@
 import {browserHistory} from 'react-router';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import PropTypes from 'prop-types';
 import React from 'react';
 import * as Sentry from '@sentry/browser';
diff --git a/src/sentry/static/sentry/app/views/events/eventsChart.jsx b/src/sentry/static/sentry/app/views/events/eventsChart.jsx
index c72b421460..3a576cd279 100644
--- a/src/sentry/static/sentry/app/views/events/eventsChart.jsx
+++ b/src/sentry/static/sentry/app/views/events/eventsChart.jsx
@@ -1,4 +1,4 @@
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
diff --git a/src/sentry/static/sentry/app/views/events/searchBar.jsx b/src/sentry/static/sentry/app/views/events/searchBar.jsx
index 631188ee90..796d4a8f35 100644
--- a/src/sentry/static/sentry/app/views/events/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/events/searchBar.jsx
@@ -1,5 +1,6 @@
 import {css} from 'react-emotion';
-import {flatten, memoize} from 'lodash';
+import flatten from 'lodash/flatten';
+import memoize from 'lodash/memoize';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx b/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx
index 96027dd863..81e471dbf4 100644
--- a/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx
+++ b/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx
@@ -1,4 +1,5 @@
-import {isEqual, omitBy} from 'lodash';
+import isEqual from 'lodash/isEqual';
+import omitBy from 'lodash/omitBy';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails.tsx
index df5348e0b4..decb35d6d2 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails.tsx
@@ -1,7 +1,7 @@
 import {Params} from 'react-router/lib/Router';
 import {browserHistory} from 'react-router';
 import styled, {css} from 'react-emotion';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
index 1976d95532..1b21d86899 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
@@ -1,5 +1,8 @@
 import {Location, Query} from 'history';
-import {isString, cloneDeep, pick, isEqual} from 'lodash';
+import isString from 'lodash/isString';
+import cloneDeep from 'lodash/cloneDeep';
+import pick from 'lodash/pick';
+import isEqual from 'lodash/isEqual';
 import moment from 'moment';
 
 import {DEFAULT_PER_PAGE} from 'app/constants';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/events.tsx b/src/sentry/static/sentry/app/views/eventsV2/events.tsx
index 132bbff1f4..c36e397cbc 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/events.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/events.tsx
@@ -2,7 +2,8 @@ import React from 'react';
 import styled from 'react-emotion';
 import * as ReactRouter from 'react-router';
 import {Location} from 'history';
-import {omit, uniqBy} from 'lodash';
+import omit from 'lodash/omit';
+import uniqBy from 'lodash/uniqBy';
 
 import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {Organization} from 'app/types';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/modalLineGraph.tsx b/src/sentry/static/sentry/app/views/eventsV2/modalLineGraph.tsx
index 27351baad6..22f9125484 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/modalLineGraph.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/modalLineGraph.tsx
@@ -2,7 +2,7 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import {browserHistory} from 'react-router';
 import {Location} from 'history';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 
 import {Client} from 'app/api';
 import {t} from 'app/locale';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/modalPagination.tsx b/src/sentry/static/sentry/app/views/eventsV2/modalPagination.tsx
index 9400cbd95a..23f936b9fc 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/modalPagination.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/modalPagination.tsx
@@ -2,7 +2,7 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import styled from 'react-emotion';
 import isPropValid from '@emotion/is-prop-valid';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 import {Location} from 'history';
 
 import {t} from 'app/locale';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx b/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx
index ea6b870cd8..243925c503 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import styled from 'react-emotion';
 import PropTypes from 'prop-types';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 import {Location} from 'history';
 
 import {Organization, Event, Project} from 'app/types';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/sortLink.tsx b/src/sentry/static/sentry/app/views/eventsV2/sortLink.tsx
index 1ae1374c76..be234fe8cb 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/sortLink.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/sortLink.tsx
@@ -2,7 +2,7 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import styled from 'react-emotion';
 import {Location} from 'history';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 
 import InlineSvg from 'app/components/inlineSvg';
 import Link from 'app/components/links/link';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/draggableColumns.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/draggableColumns.tsx
index 696386dd06..69f48ca317 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/draggableColumns.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/draggableColumns.tsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import ReactDOM from 'react-dom';
 import styled from 'react-emotion';
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 
 import space from 'app/styles/space';
 import {
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
index 25d272604a..1eab2a8fba 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
@@ -1,6 +1,6 @@
 import React, {ReactText} from 'react';
 import styled from 'react-emotion';
-import {uniq} from 'lodash';
+import uniq from 'lodash/uniq';
 
 import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {t} from 'app/locale';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
index 120b7bc9ad..611d93cbd1 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import styled from 'react-emotion';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import {Location} from 'history';
 import {t} from 'app/locale';
 import * as Sentry from '@sentry/browser';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/utils.tsx b/src/sentry/static/sentry/app/views/eventsV2/utils.tsx
index 82c98e7fcb..ff866d2a71 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/utils.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/utils.tsx
@@ -1,4 +1,5 @@
-import {partial, pick} from 'lodash';
+import partial from 'lodash/partial';
+import pick from 'lodash/pick';
 import {Location, Query} from 'history';
 import {browserHistory} from 'react-router';
 
diff --git a/src/sentry/static/sentry/app/views/incidents/details/activity/activity.tsx b/src/sentry/static/sentry/app/views/incidents/details/activity/activity.tsx
index fc803e69f9..9a90c3d72e 100644
--- a/src/sentry/static/sentry/app/views/incidents/details/activity/activity.tsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/activity/activity.tsx
@@ -1,4 +1,4 @@
-import {groupBy} from 'lodash';
+import groupBy from 'lodash/groupBy';
 import React from 'react';
 import moment from 'moment';
 import styled from 'react-emotion';
diff --git a/src/sentry/static/sentry/app/views/incidents/list/index.tsx b/src/sentry/static/sentry/app/views/incidents/list/index.tsx
index af46b52c30..a0fe569733 100644
--- a/src/sentry/static/sentry/app/views/incidents/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/incidents/list/index.tsx
@@ -1,6 +1,6 @@
 import {Location} from 'history';
 import {Params} from 'react-router/lib/Router';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 import DocumentTitle from 'react-document-title';
 import React from 'react';
 import moment from 'moment';
diff --git a/src/sentry/static/sentry/app/views/issueList/actions.jsx b/src/sentry/static/sentry/app/views/issueList/actions.jsx
index 167596bdf0..82d2732b0c 100644
--- a/src/sentry/static/sentry/app/views/issueList/actions.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/actions.jsx
@@ -1,5 +1,5 @@
 import {Flex, Box} from 'grid-emotion';
-import {capitalize} from 'lodash';
+import capitalize from 'lodash/capitalize';
 import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
diff --git a/src/sentry/static/sentry/app/views/issueList/overview.jsx b/src/sentry/static/sentry/app/views/issueList/overview.jsx
index 454433ce83..fb77b0fa0d 100644
--- a/src/sentry/static/sentry/app/views/issueList/overview.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/overview.jsx
@@ -1,5 +1,8 @@
 import {browserHistory} from 'react-router';
-import {isEqual, omit, pickBy, uniq} from 'lodash';
+import isEqual from 'lodash/isEqual';
+import omit from 'lodash/omit';
+import pickBy from 'lodash/pickBy';
+import uniq from 'lodash/uniq';
 import Cookies from 'js-cookie';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/views/issueList/sidebar.jsx b/src/sentry/static/sentry/app/views/issueList/sidebar.jsx
index f630ca2bef..903dd0331b 100644
--- a/src/sentry/static/sentry/app/views/issueList/sidebar.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/sidebar.jsx
@@ -1,7 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
-import _ from 'lodash';
+import isEqual from 'lodash/isEqual';
+import debounce from 'lodash/debounce';
+import map from 'lodash/map';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import {queryToObj, objToQuery} from 'app/utils/stream';
 import {t} from 'app/locale';
@@ -43,7 +45,7 @@ const IssueListSidebar = createReactClass({
     // clobber state of sidebar with new query.
     const query = objToQuery(this.state.queryObj);
 
-    if (!_.isEqual(nextProps.query, query)) {
+    if (!isEqual(nextProps.query, query)) {
       const queryObj = queryToObj(nextProps.query);
       this.setState({
         queryObj,
@@ -72,7 +74,7 @@ const IssueListSidebar = createReactClass({
     this.setState({textFilter: evt.target.value});
   },
 
-  debouncedTextChange: _.debounce(function(text) {
+  debouncedTextChange: debounce(function(text) {
     this.setState(
       {
         queryObj: {...this.state.queryObj, __text: text},
@@ -137,7 +139,7 @@ const IssueListSidebar = createReactClass({
               <hr />
             </div>
 
-            {_.map(tags, tag => {
+            {map(tags, tag => {
               return (
                 <IssueListTagFilter
                   value={this.state.queryObj[tag.key]}
diff --git a/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx b/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
index 79ace15b17..df062cb943 100644
--- a/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
@@ -1,4 +1,4 @@
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
index 0db003d1b4..6b513a1b09 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
@@ -1,6 +1,5 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import _ from 'lodash';
 
 import {
   addErrorMessage,
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx
index ef219b5761..6aee3f3c2f 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx
@@ -1,5 +1,5 @@
 import {browserHistory} from 'react-router';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import DocumentTitle from 'react-document-title';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx
index 10a943d6ad..249f2dab26 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx
@@ -1,5 +1,5 @@
 import {browserHistory} from 'react-router';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEvents.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEvents.jsx
index bb96d7ad66..2248f78273 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEvents.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import {browserHistory} from 'react-router';
 import React from 'react';
-import {pick} from 'lodash';
+import pick from 'lodash/pick';
 
 import SentryTypes from 'app/sentryTypes';
 import {Panel, PanelBody} from 'app/components/panels';
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedToolbar.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedToolbar.jsx
index 01888d735c..360f97bec7 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedToolbar.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedToolbar.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
-import _ from 'lodash';
+import pick from 'lodash/pick';
 import createReactClass from 'create-react-class';
 import styled from 'react-emotion';
 
@@ -51,7 +51,7 @@ const MergedToolbar = createReactClass({
       'enableFingerprintCompare',
     ];
 
-    this.setState(_.pick(updateObj, allowedKeys));
+    this.setState(pick(updateObj, allowedKeys));
   },
 
   handleShowDiff(e) {
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
index 4ca9ab4edb..80deb38a62 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
@@ -1,4 +1,6 @@
-import {sortBy, property, isEqual} from 'lodash';
+import sortBy from 'lodash/sortBy';
+import property from 'lodash/property';
+import isEqual from 'lodash/isEqual';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx
index c324d75b91..f188bd991c 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import {Box, Flex} from 'grid-emotion';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 
 import SentryTypes from 'app/sentryTypes';
 import Count from 'app/components/count';
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupUserFeedback.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupUserFeedback.jsx
index f2f1590118..e05d7e4fde 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupUserFeedback.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 
 import SentryTypes from 'app/sentryTypes';
 import EventUserFeedback from 'app/components/events/userFeedback';
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
index 38108210f7..aee60c736c 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
@@ -1,5 +1,5 @@
 import {Link} from 'react-router';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.tsx
index ccca857e09..b942b30f73 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.tsx
@@ -1,4 +1,6 @@
-import {compact, groupBy, keyBy} from 'lodash';
+import compact from 'lodash/compact';
+import groupBy from 'lodash/groupBy';
+import keyBy from 'lodash/keyBy';
 import React from 'react';
 import styled from 'react-emotion';
 
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.tsx
index 8f6ad153d6..9a6f338122 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.tsx
@@ -1,6 +1,6 @@
 import {Box} from 'grid-emotion';
 import PropTypes from 'prop-types';
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import React from 'react';
 import styled from 'react-emotion';
 
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx
index 72f9038e27..059e26657f 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {groupBy} from 'lodash';
+import groupBy from 'lodash/groupBy';
 
 import {tct} from 'app/locale';
 import AddIntegration from 'app/views/organizationIntegrations/addIntegration';
diff --git a/src/sentry/static/sentry/app/views/projects/redirectDeprecatedProjectRoute.jsx b/src/sentry/static/sentry/app/views/projects/redirectDeprecatedProjectRoute.jsx
index 346cc33207..8ef5ad384b 100644
--- a/src/sentry/static/sentry/app/views/projects/redirectDeprecatedProjectRoute.jsx
+++ b/src/sentry/static/sentry/app/views/projects/redirectDeprecatedProjectRoute.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import _ from 'lodash';
+import isString from 'lodash/isString';
 
 import {t} from 'app/locale';
 import withApi from 'app/utils/withApi';
@@ -64,7 +64,7 @@ class ProjectDetailsInner extends React.Component {
 
   hasProjectId = () => {
     const projectID = this.getProjectId(this.state.project);
-    return _.isString(projectID) && projectID.length > 0;
+    return isString(projectID) && projectID.length > 0;
   };
 
   getOrganizationId = () => {
diff --git a/src/sentry/static/sentry/app/views/projectsDashboard/index.jsx b/src/sentry/static/sentry/app/views/projectsDashboard/index.jsx
index 9abeaa0660..5f1412412a 100644
--- a/src/sentry/static/sentry/app/views/projectsDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectsDashboard/index.jsx
@@ -3,7 +3,8 @@ import LazyLoad from 'react-lazyload';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
-import _ from 'lodash';
+import uniq from 'lodash/uniq';
+import flatten from 'lodash/flatten';
 
 import {sortProjects} from 'app/utils';
 import {t} from 'app/locale';
@@ -60,7 +61,7 @@ class Dashboard extends React.Component {
     const filteredTeams = teams.filter(team => team.projects.length);
     filteredTeams.sort((team1, team2) => team1.slug.localeCompare(team2.slug));
 
-    const projects = _.uniq(_.flatten(teams.map(teamObj => teamObj.projects)), 'id');
+    const projects = uniq(flatten(teams.map(teamObj => teamObj.projects)), 'id');
     const favorites = projects.filter(project => project.isBookmarked);
 
     const access = new Set(organization.access);
diff --git a/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx b/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx
index d146982b39..7b877a0fdd 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx
@@ -1,4 +1,4 @@
-import {isEqual} from 'lodash';
+import isEqual from 'lodash/isEqual';
 import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
diff --git a/src/sentry/static/sentry/app/views/releases/detail/index.jsx b/src/sentry/static/sentry/app/views/releases/detail/index.jsx
index 685c68bde6..0e00e6c79c 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/index.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {pick} from 'lodash';
+import pick from 'lodash/pick';
 
 import SentryTypes from 'app/sentryTypes';
 import LoadingError from 'app/components/loadingError';
diff --git a/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx b/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx
index 474ecefe3c..e5f3efe3e2 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx
@@ -1,5 +1,5 @@
 import {Flex} from 'grid-emotion';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/releases/detail/releaseCommits.jsx b/src/sentry/static/sentry/app/views/releases/detail/releaseCommits.jsx
index dd04174167..7d63a196cd 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/releaseCommits.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/releaseCommits.jsx
@@ -1,5 +1,5 @@
 import PropTypes from 'prop-types';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 import React from 'react';
 
 import {Panel, PanelHeader, PanelBody} from 'app/components/panels';
diff --git a/src/sentry/static/sentry/app/views/releases/list/utils.jsx b/src/sentry/static/sentry/app/views/releases/list/utils.jsx
index fecd1829a9..e4bcb7979c 100644
--- a/src/sentry/static/sentry/app/views/releases/list/utils.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/utils.jsx
@@ -1,4 +1,4 @@
-import {pick} from 'lodash';
+import pick from 'lodash/pick';
 import {URL_PARAM} from 'app/constants/globalSelectionHeader';
 
 /**
diff --git a/src/sentry/static/sentry/app/views/sentryAppExternalInstallation.jsx b/src/sentry/static/sentry/app/views/sentryAppExternalInstallation.jsx
index 23e9605281..3d5b4ae895 100644
--- a/src/sentry/static/sentry/app/views/sentryAppExternalInstallation.jsx
+++ b/src/sentry/static/sentry/app/views/sentryAppExternalInstallation.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import styled from 'react-emotion';
-import _ from 'lodash';
+import get from 'lodash/get';
 
 import {t, tct} from 'app/locale';
 import Alert from 'app/components/alert';
@@ -55,7 +55,7 @@ export default class SentryAppExternalInstallation extends AsyncView {
     //if the app is unpublished for a different org
     return (
       selectedOrgSlug &&
-      _.get(sentryApp, 'owner.slug') !== selectedOrgSlug &&
+      get(sentryApp, 'owner.slug') !== selectedOrgSlug &&
       sentryApp.status === 'unpublished'
     );
   }
@@ -170,7 +170,7 @@ export default class SentryAppExternalInstallation extends AsyncView {
 
     if (this.isSentryAppUnavailableForOrg) {
       // use the slug of the owner if we have it, otherwise use 'another organization'
-      const ownerSlug = _.get(sentryApp, 'owner.slug', 'another organization');
+      const ownerSlug = get(sentryApp, 'owner.slug', 'another organization');
       return (
         <Alert type="error" icon="icon-circle-exclamation">
           {tct(
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/model.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/model.tsx
index 04bc2fcc26..d5783cb190 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/model.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/model.tsx
@@ -1,5 +1,5 @@
 import {observable, computed, action, ObservableMap} from 'mobx';
-import _ from 'lodash';
+import isEqual from 'lodash/isEqual';
 
 import {Client, APIRequestMethod} from 'app/api';
 import {addErrorMessage, saveOnBlurUndoMessage} from 'app/actionCreators/indicator';
@@ -111,7 +111,7 @@ class FormModel {
    */
   @computed
   get formChanged() {
-    return !_.isEqual(this.initialData, this.fields.toJSON());
+    return !isEqual(this.initialData, this.fields.toJSON());
   }
 
   @computed
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/richListField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/richListField.jsx
index dd78db5bd0..fa0673d963 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/richListField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/richListField.jsx
@@ -1,4 +1,4 @@
-import _ from 'lodash';
+import pickBy from 'lodash/pickBy';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
@@ -49,7 +49,7 @@ const RichListProps = {
 };
 
 function getDefinedProps(propTypes, props) {
-  return _.pickBy(props, (_prop, key) => key in propTypes);
+  return pickBy(props, (_prop, key) => key in propTypes);
 }
 
 class RichList extends React.PureComponent {
diff --git a/src/sentry/static/sentry/app/views/settings/components/teamSelect.jsx b/src/sentry/static/sentry/app/views/settings/components/teamSelect.jsx
index b3bbfbca19..bf925484cb 100644
--- a/src/sentry/static/sentry/app/views/settings/components/teamSelect.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/teamSelect.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 
 import {t} from 'app/locale';
 import Button from 'app/components/button';
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx
index 1a163e36e4..d2743aa2f6 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx
@@ -1,4 +1,4 @@
-import {findIndex} from 'lodash';
+import findIndex from 'lodash/findIndex';
 import React from 'react';
 
 import {Project} from 'app/types';
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/draggableChart.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/draggableChart.tsx
index d861003948..9e1e93b00b 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/draggableChart.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/draggableChart.tsx
@@ -1,5 +1,6 @@
 import {ECharts, EChartOption} from 'echarts';
-import {debounce, maxBy} from 'lodash';
+import debounce from 'lodash/debounce';
+import maxBy from 'lodash/maxBy';
 import React from 'react';
 import styled from 'react-emotion';
 
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx
index 46a13dee83..090e278389 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx
@@ -1,4 +1,4 @@
-import {maxBy} from 'lodash';
+import maxBy from 'lodash/maxBy';
 import React from 'react';
 import moment from 'moment-timezone';
 import styled from 'react-emotion';
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/form.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/form.tsx
index 94b18ac38b..bc64bede88 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/form.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/form.tsx
@@ -1,6 +1,6 @@
 import FormModel from 'app/views/settings/components/forms/model';
 
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import PropTypes from 'prop-types';
 import React from 'react';
 
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.tsx
index fe11fa64fe..474bdf5a08 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.tsx
@@ -1,7 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {find, flatMap, get} from 'lodash';
+import find from 'lodash/find';
+import flatMap from 'lodash/flatMap';
+import get from 'lodash/get';
 
 import {t} from 'app/locale';
 import {SENTRY_APP_PERMISSIONS} from 'app/constants';
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.tsx
index 9ae883aff3..74f80238c2 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.tsx
@@ -1,7 +1,8 @@
 import React from 'react';
 import {browserHistory} from 'react-router';
 import {Observer} from 'mobx-react';
-import _ from 'lodash';
+import omit from 'lodash/omit';
+import get from 'lodash/get';
 import scrollToElement from 'scroll-to-element';
 
 import {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';
@@ -48,7 +49,7 @@ const getResourceFromScope = (scope: Scope): Resource | undefined => {
     const allChoices = Object.values(permObj.choices);
 
     const allScopes = allChoices.reduce(
-      (_allScopes: string[], choice) => _allScopes.concat(_.get(choice, 'scopes', [])),
+      (_allScopes: string[], choice) => _allScopes.concat(get(choice, 'scopes', [])),
       []
     );
 
@@ -91,7 +92,7 @@ class SentryAppFormModel extends FormModel {
     if (!responseJSON) {
       return responseJSON;
     }
-    const formErrors = _.omit(responseJSON, ['scopes']);
+    const formErrors = omit(responseJSON, ['scopes']);
     if (responseJSON.scopes) {
       responseJSON.scopes.forEach((message: string) => {
         //find the scope from the error message of a specific format
@@ -172,11 +173,11 @@ export default class SentryApplicationDetails extends AsyncView<Props, State> {
   };
 
   handleSubmitError = err => {
-    let errorMessage = 'Unknown Error';
+    let errorMessage = t('Unknown Error');
     if (err.status >= 400 && err.status < 500) {
-      errorMessage = _.get(err, 'responseJSON.detail', errorMessage);
+      errorMessage = get(err, 'responseJSON.detail', errorMessage);
     }
-    addErrorMessage(t(errorMessage));
+    addErrorMessage(errorMessage);
 
     if (this.form.formErrors) {
       const firstErrorFieldId = Object.keys(this.form.formErrors)[0];
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.tsx
index 43bb39ca64..1307e2a1f9 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.tsx
@@ -1,7 +1,8 @@
 import React from 'react';
 import {Box, Flex} from 'grid-emotion';
 import {Link} from 'react-router';
-import {capitalize, omit} from 'lodash';
+import capitalize from 'lodash/capitalize';
+import omit from 'lodash/omit';
 import styled from 'react-emotion';
 import PropTypes from 'prop-types';
 
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
index 9bd7a95180..9a8c9f60f4 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
index ea8e3b7e37..1ad486fa28 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
@@ -1,5 +1,5 @@
 import {browserHistory} from 'react-router';
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
index 7738c23de0..a7d91ecb49 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import {get, uniq} from 'lodash';
+import get from 'lodash/get';
+import uniq from 'lodash/uniq';
 
 import {t} from 'app/locale';
 import AsyncComponent from 'app/components/asyncComponent';
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx
index 439e97b0e5..14333a2d4a 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx
@@ -1,4 +1,4 @@
-import {debounce} from 'lodash';
+import debounce from 'lodash/debounce';
 import {Flex} from 'grid-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
diff --git a/src/sentry/static/sentry/app/views/userFeedback/container.jsx b/src/sentry/static/sentry/app/views/userFeedback/container.jsx
index 6d80ae67a2..63d9f6aceb 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/container.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/container.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {Link} from 'react-router';
 import PropTypes from 'prop-types';
-import {omit} from 'lodash';
+import omit from 'lodash/omit';
 import {t} from 'app/locale';
 import Pagination from 'app/components/pagination';
 import {Panel, PanelBody} from 'app/components/panels';
diff --git a/src/sentry/static/sentry/app/views/userFeedback/utils.jsx b/src/sentry/static/sentry/app/views/userFeedback/utils.jsx
index 22e023cff0..c6cb32dbc6 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/utils.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/utils.jsx
@@ -1,4 +1,4 @@
-import {pick} from 'lodash';
+import pick from 'lodash/pick';
 import qs from 'query-string';
 
 import {URL_PARAM} from 'app/constants/globalSelectionHeader';
diff --git a/tests/js/spec/views/inviteMember/inviteMember.spec.jsx b/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
index 25f6bfdd26..160b541ff9 100644
--- a/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
+++ b/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import {shallow, mountWithTheme} from 'sentry-test/enzyme';
-import _ from 'lodash';
+import cloneDeep from 'lodash/cloneDeep';
 import {InviteMember} from 'app/views/settings/organizationMembers/inviteMember';
 import ConfigStore from 'app/stores/configStore';
 
@@ -76,7 +76,7 @@ describe('InviteMember', function() {
       },
     });
 
-    const context = _.cloneDeep(baseContext);
+    const context = cloneDeep(baseContext);
 
     const team = organization.teams.slice(0, 1);
     organization.teams = team;
diff --git a/tests/js/spec/views/issueList/overview.spec.jsx b/tests/js/spec/views/issueList/overview.spec.jsx
index 53a36db2d4..c6b48fbb35 100644
--- a/tests/js/spec/views/issueList/overview.spec.jsx
+++ b/tests/js/spec/views/issueList/overview.spec.jsx
@@ -1,5 +1,5 @@
 import {browserHistory} from 'react-router';
-import {clonedeep} from 'lodash';
+import cloneDeep from 'lodash/cloneDeep';
 import React from 'react';
 
 import {initializeOrg} from 'sentry-test/initializeOrg';
@@ -1220,10 +1220,10 @@ describe('IssueList,', function() {
 
     it('fetches data on location change', function() {
       const queryAttrs = ['query', 'sort', 'statsPeriod', 'cursor', 'groupStatsPeriod'];
-      let location = clonedeep(props.location);
+      let location = cloneDeep(props.location);
       queryAttrs.forEach(async (attr, i) => {
         // reclone each iteration so that only one property changes.
-        location = clonedeep(location);
+        location = cloneDeep(location);
         location.query[attr] = 'newValue';
         wrapper.setProps({location});
         await tick();
diff --git a/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx b/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx
index a7fba7b424..b3b46b1ee3 100644
--- a/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx
+++ b/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import _ from 'lodash';
+import pick from 'lodash/pick';
 
 import {mountWithTheme} from 'sentry-test/enzyme';
 
@@ -30,8 +30,8 @@ describe('SentryAppExternalInstallation', () => {
       name: 'Organization 2',
     });
 
-    org1Lite = _.pick(org1, ['slug', 'name', 'id']);
-    org2Lite = _.pick(org2, ['slug', 'name', 'id']);
+    org1Lite = pick(org1, ['slug', 'name', 'id']);
+    org2Lite = pick(org2, ['slug', 'name', 'id']);
 
     sentryApp = TestStubs.SentryApp({
       status: 'published',
diff --git a/webpack.config.js b/webpack.config.js
index 2ac73f15b8..eadfb8f487 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -11,7 +11,6 @@ const IntegrationDocsFetchPlugin = require('./build-utils/integration-docs-fetch
 const ExtractTextPlugin = require('mini-css-extract-plugin');
 const CompressionPlugin = require('compression-webpack-plugin');
 const OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');
-const LodashModuleReplacementPlugin = require('lodash-webpack-plugin');
 const FixStyleOnlyEntriesPlugin = require('webpack-fix-style-only-entries');
 const CopyPlugin = require('copy-webpack-plugin');
 
@@ -281,17 +280,6 @@ let appConfig = {
   },
   plugins: [
     new CleanWebpackPlugin(),
-    /**
-     * Used to make our lodash modules even smaller
-     */
-    new LodashModuleReplacementPlugin({
-      collections: true,
-      currying: true, // these are enabled to support lodash/fp/ features
-      flattening: true, // used by a dependency of react-mentions
-      shorthands: true,
-      paths: true,
-      exotics: true,
-    }),
 
     /**
      * jQuery must be provided in the global scope specifically and only for
diff --git a/yarn.lock b/yarn.lock
index a2d21f4f7c..604bb1fae4 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -325,7 +325,7 @@
   dependencies:
     "@babel/types" "^7.7.0"
 
-"@babel/helper-module-imports@^7.0.0", "@babel/helper-module-imports@^7.0.0-beta.49":
+"@babel/helper-module-imports@^7.0.0":
   version "7.0.0"
   resolved "https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.0.0.tgz#96081b7111e486da4d2cd971ad1a4fe216cc2e3d"
   integrity sha512-aP/hlLq01DWNEiDg4Jn23i+CXxW/owM4WpDLFUbpjxe4NS3BhLVZQ5i7E0ZrxuQ/vwekIeciyamgB1UIYxxM6A==
@@ -1637,7 +1637,7 @@
     lodash "^4.17.13"
     to-fast-properties "^2.0.0"
 
-"@babel/types@^7.0.0-beta.49", "@babel/types@^7.1.6", "@babel/types@^7.2.0":
+"@babel/types@^7.1.6", "@babel/types@^7.2.0":
   version "7.2.2"
   resolved "https://registry.yarnpkg.com/@babel/types/-/types-7.2.2.tgz#44e10fc24e33af524488b716cdaee5360ea8ed1e"
   integrity sha512-fKCuD6UFUMkR541eDWL+2ih/xFZBXPOg/7EQFeTluMDebfqR4jrpaCjLhkWlQS4hT6nRa2PMEgXKbRB5/H2fpg==
@@ -3534,17 +3534,6 @@ babel-plugin-jest-hoist@^24.1.0:
   resolved "https://registry.yarnpkg.com/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-24.1.0.tgz#dfecc491fb15e2668abbd690a697a8fd1411a7f8"
   integrity sha512-gljYrZz8w1b6fJzKcsfKsipSru2DU2DmQ39aB6nV3xQ0DDv3zpIzKGortA5gknrhNnPN8DweaEgrnZdmbGmhnw==
 
-babel-plugin-lodash@^3.3.4:
-  version "3.3.4"
-  resolved "https://registry.yarnpkg.com/babel-plugin-lodash/-/babel-plugin-lodash-3.3.4.tgz#4f6844358a1340baed182adbeffa8df9967bc196"
-  integrity sha512-yDZLjK7TCkWl1gpBeBGmuaDIFhZKmkoL+Cu2MUUjv5VxUZx/z7tBGBCBcQs5RI1Bkz5LLmNdjx7paOyQtMovyg==
-  dependencies:
-    "@babel/helper-module-imports" "^7.0.0-beta.49"
-    "@babel/types" "^7.0.0-beta.49"
-    glob "^7.1.1"
-    lodash "^4.17.10"
-    require-package-name "^2.0.1"
-
 babel-plugin-macros@2.4.2:
   version "2.4.2"
   resolved "https://registry.yarnpkg.com/babel-plugin-macros/-/babel-plugin-macros-2.4.2.tgz#21b1a2e82e2130403c5ff785cba6548e9b644b28"
@@ -6117,10 +6106,10 @@ eslint-config-prettier@6.3.0:
   dependencies:
     get-stdin "^6.0.0"
 
-eslint-config-sentry-app@1.26.0:
-  version "1.26.0"
-  resolved "https://registry.yarnpkg.com/eslint-config-sentry-app/-/eslint-config-sentry-app-1.26.0.tgz#dd85fab1c41db9436c0d34c67f1821b1f626ee36"
-  integrity sha512-BG/km++U9M3OFzmOOG1RCY0B3pazaCosD89XeIwDWtfW+YxXQmmFNmsBrM/GewNXMrnjiQRCx5oh2L028rKa7A==
+eslint-config-sentry-app@1.27.0:
+  version "1.27.0"
+  resolved "https://registry.yarnpkg.com/eslint-config-sentry-app/-/eslint-config-sentry-app-1.27.0.tgz#405cbffa105e8e914df39e6f3e7dc732222f1d5d"
+  integrity sha512-eB1cWOL+3R+XlS8MtB7dGI9rxcAZS8KpgYBFI3QtN1yBifo6IP3/GIs81kFui5/jOWyLb3QcO5LgZhcoRf8N4A==
   dependencies:
     eslint-config-prettier "6.3.0"
     eslint-config-sentry "^1.26.0"
@@ -9362,13 +9351,6 @@ locate-path@^3.0.0:
     p-locate "^3.0.0"
     path-exists "^3.0.0"
 
-lodash-webpack-plugin@^0.11.5:
-  version "0.11.5"
-  resolved "https://registry.yarnpkg.com/lodash-webpack-plugin/-/lodash-webpack-plugin-0.11.5.tgz#c4bd064b4f561c3f823fa5982bdeb12c475390b9"
-  integrity sha512-QWfEIYxpixOdbd6KBe5g6MDWcyTgP3trDXwKHFqTlXrWiLcs/67fGQ0IWeRyhWlTITQIgMpJAYd2oeIztuV5VA==
-  dependencies:
-    lodash "^4.17.4"
-
 lodash._getnative@^3.0.0:
   version "3.9.1"
   resolved "https://registry.yarnpkg.com/lodash._getnative/-/lodash._getnative-3.9.1.tgz#570bc7dede46d61cdcde687d65d3eecbaa3aaff5"
@@ -12991,11 +12973,6 @@ require-main-filename@^1.0.1:
   resolved "https://registry.yarnpkg.com/require-main-filename/-/require-main-filename-1.0.1.tgz#97f717b69d48784f5f526a6c5aa8ffdda055a4d1"
   integrity sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE=
 
-require-package-name@^2.0.1:
-  version "2.0.1"
-  resolved "https://registry.yarnpkg.com/require-package-name/-/require-package-name-2.0.1.tgz#c11e97276b65b8e2923f75dabf5fb2ef0c3841b9"
-  integrity sha1-wR6XJ2tluOKSP3Xav1+y7ww4Qbk=
-
 require-uncached@^1.0.3:
   version "1.0.3"
   resolved "https://registry.yarnpkg.com/require-uncached/-/require-uncached-1.0.3.tgz#4e0d56d6c9662fd31e43011c4b95aa49955421d3"
