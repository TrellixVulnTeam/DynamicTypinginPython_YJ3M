commit 06044b4c3c83743fe8606073a646c0d9d9187091
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Mon Feb 24 11:30:56 2020 +0100

    fix(ingest): Make sure all metrics have some basic tags (#17159)

diff --git a/src/sentry/runner/commands/run.py b/src/sentry/runner/commands/run.py
index d5101aec2c..2f4be280a9 100644
--- a/src/sentry/runner/commands/run.py
+++ b/src/sentry/runner/commands/run.py
@@ -441,6 +441,7 @@ def ingest_consumer(consumer_type, **options):
     process event celery tasks for them
     """
     from sentry.ingest.ingest_consumer import ConsumerType, get_ingest_consumer
+    from sentry.utils import metrics
 
     if consumer_type == "events":
         consumer_type = ConsumerType.Events
@@ -449,7 +450,8 @@ def ingest_consumer(consumer_type, **options):
     elif consumer_type == "attachments":
         consumer_type = ConsumerType.Attachments
 
-    get_ingest_consumer(consumer_type=consumer_type, **options).run()
+    with metrics.global_tags(ingest_consumer_type=consumer_type, _all_threads=True):
+        get_ingest_consumer(consumer_type=consumer_type, **options).run()
 
 
 @run.command("outcomes-consumer")
diff --git a/src/sentry/utils/metrics.py b/src/sentry/utils/metrics.py
index 788100b10c..314bf37699 100644
--- a/src/sentry/utils/metrics.py
+++ b/src/sentry/utils/metrics.py
@@ -16,15 +16,19 @@ from six.moves.queue import Queue
 metrics_skip_all_internal = getattr(settings, "SENTRY_METRICS_SKIP_ALL_INTERNAL", False)
 metrics_skip_internal_prefixes = tuple(settings.SENTRY_METRICS_SKIP_INTERNAL_PREFIXES)
 
-_GLOBAL_TAGS = local()
+_THREAD_LOCAL_TAGS = local()
+_GLOBAL_TAGS = []
 
 
 @contextmanager
-def global_tags(**tags):
-    if not hasattr(_GLOBAL_TAGS, "stack"):
-        stack = _GLOBAL_TAGS.stack = []
+def global_tags(_all_threads=False, **tags):
+    if _all_threads:
+        stack = _GLOBAL_TAGS
     else:
-        stack = _GLOBAL_TAGS.stack
+        if not hasattr(_GLOBAL_TAGS, "stack"):
+            stack = _THREAD_LOCAL_TAGS.stack = []
+        else:
+            stack = _THREAD_LOCAL_TAGS.stack
 
     stack.append(tags)
     try:
@@ -35,7 +39,11 @@ def global_tags(**tags):
 
 def _get_current_global_tags():
     rv = {}
-    for tags in getattr(_GLOBAL_TAGS, "stack", None) or ():
+
+    for tags in _GLOBAL_TAGS:
+        rv.update(tags)
+
+    for tags in getattr(_THREAD_LOCAL_TAGS, "stack", None) or ():
         rv.update(tags)
 
     return rv
