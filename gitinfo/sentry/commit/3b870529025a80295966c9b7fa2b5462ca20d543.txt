commit 3b870529025a80295966c9b7fa2b5462ca20d543
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Jan 25 11:50:09 2018 -0800

    test(projects): Add jest tests for project teams page

diff --git a/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
new file mode 100644
index 0000000000..077811f93a
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
@@ -0,0 +1,62 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ProjectTeamsSettings render() renders 1`] = `
+<SideEffect(DocumentTitle)
+  title="Sentry"
+>
+  <div>
+    <SettingsPageHeading
+      title="Teams"
+    />
+    <Styled(div)>
+      <PanelHeader
+        key="header"
+      >
+        <Flex
+          align="center"
+        >
+          <Box
+            flex="1"
+            px={2}
+          >
+            Team
+          </Box>
+        </Flex>
+      </PanelHeader>
+      <PanelBody
+        direction="column"
+        disablePadding={true}
+        flex={false}
+        key="body"
+      >
+        <TeamRow
+          access={
+            Set {
+              "org:read",
+              "org:write",
+              "org:admin",
+              "project:read",
+              "project:write",
+              "project:admin",
+              "team:read",
+              "team:write",
+              "team:admin",
+            }
+          }
+          key="1"
+          onRemove={[Function]}
+          orgId="org-slug"
+          projectId="project-slug"
+          team={
+            Object {
+              "id": "1",
+              "name": "Team Name",
+              "slug": "team-slug",
+            }
+          }
+        />
+      </PanelBody>
+    </Styled(div)>
+  </div>
+</SideEffect(DocumentTitle)>
+`;
diff --git a/tests/js/spec/views/projectTeamSettings.spec.jsx b/tests/js/spec/views/projectTeamSettings.spec.jsx
new file mode 100644
index 0000000000..cadf6eb6ec
--- /dev/null
+++ b/tests/js/spec/views/projectTeamSettings.spec.jsx
@@ -0,0 +1,83 @@
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+
+import {Client} from 'app/api';
+import ProjectTeams from 'app/views/settings/project/projectTeams';
+
+describe('ProjectTeamsSettings', function() {
+  let org;
+  let project;
+  let team;
+
+  beforeEach(function() {
+    org = TestStubs.Organization();
+    project = TestStubs.Project();
+    team = TestStubs.Team();
+
+    Client.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/`,
+      method: 'GET',
+      body: project,
+    });
+    Client.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/teams/`,
+      method: 'GET',
+      body: [team],
+    });
+  });
+
+  describe('render()', function() {
+    it('renders', function() {
+      let wrapper = shallow(
+        <ProjectTeams
+          params={{orgId: org.slug, projectId: project.slug}}
+          organization={org}
+        />,
+        {
+          context: {
+            router: TestStubs.router(),
+          },
+        }
+      );
+      expect(wrapper).toMatchSnapshot();
+    });
+  });
+
+  describe('handleRemove()', function() {
+    it('can remove a team', function() {
+      let endpoint = `/projects/${org.slug}/${project.slug}/teams/${team.slug}/`;
+      let mock = Client.addMockResponse({
+        url: endpoint,
+        method: 'DELETE',
+        statusCode: 200,
+      });
+
+      let wrapper = mount(
+        <ProjectTeams
+          params={{orgId: org.slug, projectId: project.slug}}
+          organization={org}
+        />,
+        {
+          context: {
+            router: TestStubs.router(),
+          },
+        }
+      );
+
+      expect(mock).not.toHaveBeenCalled();
+
+      // open modal
+      wrapper.find('Button').simulate('click');
+
+      // click confrim
+      wrapper.find('button.button-primary').simulate('click');
+
+      expect(mock).toHaveBeenCalledWith(
+        endpoint,
+        expect.objectContaining({
+          method: 'DELETE',
+        })
+      );
+    });
+  });
+});
