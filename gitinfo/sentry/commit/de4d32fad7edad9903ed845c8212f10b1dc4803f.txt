commit de4d32fad7edad9903ed845c8212f10b1dc4803f
Author: Eric Feng <erichfeng@gmail.com>
Date:   Wed Feb 17 17:47:49 2016 -0800

    fixing project chooser, plus other comments from PR

diff --git a/src/sentry/models/organizationonboardingtask.py b/src/sentry/models/organizationonboardingtask.py
index 033310636b..f02d7b7d4a 100644
--- a/src/sentry/models/organizationonboardingtask.py
+++ b/src/sentry/models/organizationonboardingtask.py
@@ -2,7 +2,7 @@
 sentry.models.organizationonboardingtask
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
+:copyright: (c) 2010-2016 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
 from django.conf import settings
diff --git a/src/sentry/static/sentry/app/components/header/index.jsx b/src/sentry/static/sentry/app/components/header/index.jsx
index 90bac9fec3..dfce49d35a 100644
--- a/src/sentry/static/sentry/app/components/header/index.jsx
+++ b/src/sentry/static/sentry/app/components/header/index.jsx
@@ -24,11 +24,17 @@ const Header = React.createClass({
   },
 
   componentDidMount() {
-    $(window).on('hashchange', () => {
-      if (location.hash == '#welcome') {
-        this.setState({showTodos: true});
-      }
-    });
+    $(window).on('hashchange', this.hashChangeHandler);
+  },
+
+  componentDidUnmount() {
+    $(window).off('hashchange', this.hashChangeHandler);
+  },
+
+  hashChangeHandler() {
+    if (location.hash == '#welcome') {
+      this.setState({showTodos: true});
+    }
   },
 
   toggleTodos(e) {
@@ -66,10 +72,14 @@ const Header = React.createClass({
           <OrganizationSelector organization={this.getOrganization()} className="pull-right" />
 
           <StatusPage className="pull-right" />
-          <div className="onboarding-progress-bar" onClick={this.toggleTodos}>
-            <div className="slider" style={style} ></div>
-            { this.state.showTodos ? <div className="dropdown-menu"><TodoList onClose={() => {this.setState({showTodos:false});}} /></div> : null }
-          </div>
+          { percentage < 100 ?
+            <div className="onboarding-progress-bar" onClick={this.toggleTodos}>
+              <div className="slider" style={style} ></div>
+              { this.state.showTodos ? <div className="dropdown-menu"><TodoList onClose={() => {this.setState({showTodos:false});}} /></div> : null }
+            </div>
+            :
+            null
+          }
         </div>
       </header>
     );
diff --git a/src/sentry/static/sentry/app/components/todos.jsx b/src/sentry/static/sentry/app/components/todos.jsx
index 941a160de0..d777c5a5a6 100644
--- a/src/sentry/static/sentry/app/components/todos.jsx
+++ b/src/sentry/static/sentry/app/components/todos.jsx
@@ -136,7 +136,7 @@ const TodoList = React.createClass({
         'skippable': false,
         'prereq': [1],
         'feature_location': 'project',
-        'location': 'settings/install/',
+        'location': 'install',
       },
       {
         'task': 3,
@@ -172,7 +172,7 @@ const TodoList = React.createClass({
         'skippable': false,
         'prereq': [1, 2],
         'feature_location': 'project',
-        'location': 'settings/release-tracking/',
+        'location': 'release-tracking',
       },
       {
         'task': 7,
@@ -199,7 +199,7 @@ const TodoList = React.createClass({
         'skippable': true,
         'prereq': [1, 2],
         'feature_location': 'project',
-        'location': 'settings/issue-tracking/',
+        'location': 'issue-tracking',
       },
       {
         'task': 10,
@@ -208,7 +208,7 @@ const TodoList = React.createClass({
         'skippable': true,
         'prereq': [1, 2],
         'feature_location': 'project',
-        'location': 'settings/notifications/',
+        'location': 'notification',
       },
     ]
   },
diff --git a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
index 88ebb9f648..13ba00581b 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
@@ -13,11 +13,11 @@ const ProjectInstallOverview = React.createClass({
 
   getIntegrationLink(root, platform, display) {
     let {orgId, projectId} = this.props.params;
-    let onboarding = this.props.location.query.onboarding ? 'onboarding=1' : '';
+    let onboarding = this.props.location.query.onboarding ? '?onboarding=1' : '';
     return (
       <li className={`${root} ${platform}`} key={platform}>
         <span className={`platformicon platformicon-${platform}`}/>
-        <Link to={`/${orgId}/${projectId}/settings/install/${platform}/?${onboarding}`}>
+        <Link to={`/${orgId}/${projectId}/settings/install/${platform}/${onboarding}`}>
           {display}
         </Link>
       </li>
diff --git a/src/sentry/web/frontend/choose_project.py b/src/sentry/web/frontend/choose_project.py
index edfc8ca89c..55698e6daa 100644
--- a/src/sentry/web/frontend/choose_project.py
+++ b/src/sentry/web/frontend/choose_project.py
@@ -1,8 +1,10 @@
 from __future__ import absolute_import
 
+from django.core.urlresolvers import reverse
 from django.shortcuts import redirect
+from rest_framework.response import Response
 
-from sentry.models import Team
+from sentry.models import Project, Team
 from sentry.web.frontend.base import OrganizationView
 
 
@@ -16,19 +18,26 @@ class OrganizationProjectChooser(OrganizationView):
             with_projects=True,
         )
 
-        # next_url should have a trailing slash only: settings/install/
-        next_url = request.GET.get('next')
-        if next_url[0] == '/':
-            next_url = next_url[1:]
-        if next_url[-1] != '/':
-            next_url += '/'
+        next_param = request.GET.get('next')
+        next_options = {
+            'install': 'settings/install/',
+            'release-tracking': 'settings/release-tracking/',
+            'issue-tracking': 'settings/issue-tracking/',
+            'notifications': 'settings/notifications/'
+        }
+
+        if next_param in next_options:
+            next_url = next_options[next_param]
+        else:
+            return Response({'detail': 'No next page found for next parameter: ' + next_param}, status=404)
+
+        if len(teams) == 1 and len(teams[0][1]) == 1:
+            project = teams[0][1][0]
+            return redirect(reverse('sentry-stream', args=[organization.slug, project.slug]) + next_url)
 
         context = {
             'organization': organization,
             'teams': teams,
             'next': next_url,
         }
-        if len(teams) == 1 and len(teams[0][1]) == 1:
-            return redirect('/' + organization.slug + '/' + teams[0][1][0].slug + '/' + next_url)
-
         return self.respond('sentry/choose-project.html', context)
diff --git a/src/sentry/web/frontend/react_page.py b/src/sentry/web/frontend/react_page.py
index 9aeb14293f..ab6063ee1f 100644
--- a/src/sentry/web/frontend/react_page.py
+++ b/src/sentry/web/frontend/react_page.py
@@ -30,9 +30,9 @@ class ReactMixin(object):
 # TODO(dcramer): once we implement basic auth hooks in React we can make this
 # generic
 class ReactPageView(OrganizationView, ReactMixin):
-    def handle(self, request, **kwargs):
+    def handle(self, request, organization, **kwargs):
         if 'project_id' in kwargs and request.GET.get('onboarding'):
-            project = Project.objects.filter(slug=kwargs['project_id']).first()
+            project = Project.objects.filter(organization=organization, slug=kwargs['project_id']).first()
             first_event_pending.send(project=project, user=request.user, sender=self)
         return self.handle_react(request)
 
