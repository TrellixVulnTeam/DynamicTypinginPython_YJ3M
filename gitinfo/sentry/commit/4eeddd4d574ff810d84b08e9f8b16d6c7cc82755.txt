commit 4eeddd4d574ff810d84b08e9f8b16d6c7cc82755
Author: Ted Kaemming <ted@kaemming.com>
Date:   Thu Mar 31 14:00:05 2016 -0700

    Add `PreviewBackend` for mail testing.
    
    To use, in your settings file:
    
        EMAIL_BACKEND = 'sentry.utils.email.PreviewBackend'
    
    ...or better yet, in your `config.yml`:
    
        mail.backend: sentry.utils.email.PreviewBackend

diff --git a/src/sentry/utils/email.py b/src/sentry/utils/email.py
index a1cf658b45..855b6f75c1 100644
--- a/src/sentry/utils/email.py
+++ b/src/sentry/utils/email.py
@@ -9,6 +9,8 @@ from __future__ import absolute_import
 
 import logging
 import os
+import subprocess
+import tempfile
 import time
 from email.utils import parseaddr
 from operator import attrgetter
@@ -18,6 +20,7 @@ from django.conf import settings
 from django.core.mail import get_connection as _get_connection
 from django.core.mail import send_mail as _send_mail
 from django.core.mail import EmailMultiAlternatives
+from django.core.mail.backends.base import BaseEmailBackend
 from django.core.signing import BadSignature, Signer
 from django.utils.crypto import constant_time_compare
 from django.utils.encoding import force_bytes, force_str, force_text
@@ -389,3 +392,29 @@ def send_mail(subject, message, from_email, recipient_list, fail_silently=False)
         subject, message, from_email, recipient_list,
         connection=get_connection(fail_silently=fail_silently),
     )
+
+
+class PreviewBackend(BaseEmailBackend):
+    """
+    Email backend that can be used in local development to open messages in the
+    local mail client as they are sent.
+
+    Probably only works on OS X.
+    """
+    def send_messages(self, email_messages):
+        for message in email_messages:
+            content = str(message.message())
+            preview = tempfile.NamedTemporaryFile(
+                delete=False,
+                prefix='preview-',
+                suffix='.eml',
+            )
+            preview.write(content)
+            preview.flush()
+            preview.close()
+            try:
+                subprocess.check_call(('open', preview.name))
+            finally:
+                os.unlink(preview.name)
+
+        return len(email_messages)
