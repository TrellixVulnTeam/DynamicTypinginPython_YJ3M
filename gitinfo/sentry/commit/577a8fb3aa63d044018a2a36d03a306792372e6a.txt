commit 577a8fb3aa63d044018a2a36d03a306792372e6a
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed Aug 26 16:31:09 2015 -0700

    Enable more .eslint rules

diff --git a/.eslintrc b/.eslintrc
index 307bd3c620..0f3b8ce590 100644
--- a/.eslintrc
+++ b/.eslintrc
@@ -66,5 +66,48 @@
     "no-unreachable": 2,             // http://eslint.org/docs/rules/no-unreachable
     "use-isnan": 2,                  // http://eslint.org/docs/rules/use-isnan
     "block-scoped-var": 2,           // http://eslint.org/docs/rules/block-scoped-var
+
+    /**
+     * Best practices
+     */
+    "consistent-return": 2,          // http://eslint.org/docs/rules/consistent-return
+    "curly": 0,                      // http://eslint.org/docs/rules/curly [REVISIT ME]
+    "default-case": 2,               // http://eslint.org/docs/rules/default-case
+    "dot-notation": [2, {            // http://eslint.org/docs/rules/dot-notation
+      "allowKeywords": true
+    }],
+    "eqeqeq": 0,                     // http://eslint.org/docs/rules/eqeqeq [REVISIT ME]
+    "guard-for-in": 0,               // http://eslint.org/docs/rules/guard-for-in [REVISIT ME]
+    "no-caller": 2,                  // http://eslint.org/docs/rules/no-caller
+    "no-else-return": 0,             // http://eslint.org/docs/rules/no-else-return [REVISIT ME]
+    "no-eq-null": 2,                 // http://eslint.org/docs/rules/no-eq-null
+    "no-eval": 2,                    // http://eslint.org/docs/rules/no-eval
+    "no-extend-native": 2,           // http://eslint.org/docs/rules/no-extend-native
+    "no-extra-bind": 2,              // http://eslint.org/docs/rules/no-extra-bind
+    "no-fallthrough": 2,             // http://eslint.org/docs/rules/no-fallthrough
+    "no-floating-decimal": 2,        // http://eslint.org/docs/rules/no-floating-decimal
+    "no-implied-eval": 2,            // http://eslint.org/docs/rules/no-implied-eval
+    "no-lone-blocks": 2,             // http://eslint.org/docs/rules/no-lone-blocks
+    "no-loop-func": 2,               // http://eslint.org/docs/rules/no-loop-func
+    "no-multi-str": 2,               // http://eslint.org/docs/rules/no-multi-str
+    "no-native-reassign": 2,         // http://eslint.org/docs/rules/no-native-reassign
+    "no-new": 2,                     // http://eslint.org/docs/rules/no-new
+    "no-new-func": 2,                // http://eslint.org/docs/rules/no-new-func
+    "no-new-wrappers": 2,            // http://eslint.org/docs/rules/no-new-wrappers
+    "no-octal": 2,                   // http://eslint.org/docs/rules/no-octal
+    "no-octal-escape": 2,            // http://eslint.org/docs/rules/no-octal-escape
+    "no-param-reassign": 0,          // http://eslint.org/docs/rules/no-param-reassign [REVISIT ME]
+    "no-proto": 2,                   // http://eslint.org/docs/rules/no-proto
+    "no-redeclare": 2,               // http://eslint.org/docs/rules/no-redeclare
+    "no-return-assign": 2,           // http://eslint.org/docs/rules/no-return-assign
+    "no-script-url": 2,              // http://eslint.org/docs/rules/no-script-url
+    "no-self-compare": 2,            // http://eslint.org/docs/rules/no-self-compare
+    "no-sequences": 2,               // http://eslint.org/docs/rules/no-sequences
+    "no-throw-literal": 2,           // http://eslint.org/docs/rules/no-throw-literal
+    "no-with": 2,                    // http://eslint.org/docs/rules/no-with
+    "radix": 2,                      // http://eslint.org/docs/rules/radix
+    "vars-on-top": 0,                // http://eslint.org/docs/rules/vars-on-top
+    "wrap-iife": [2, "any"],         // http://eslint.org/docs/rules/wrap-iife
+    "yoda": 2,                       // http://eslint.org/docs/rules/yoda
   }
 }
diff --git a/src/sentry/static/sentry/app/components/eventEntries.jsx b/src/sentry/static/sentry/app/components/eventEntries.jsx
index cd5dd2c58c..fce3933403 100644
--- a/src/sentry/static/sentry/app/components/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/eventEntries.jsx
@@ -191,7 +191,7 @@ var EventEntries = React.createClass({
         if (!Component) {
           /*eslint no-console:0*/
           console.error('Unregistered interface: ' + entry.type);
-          return;
+          return null;
         }
         return <Component
                   key={"entry-" + entryIdx}
diff --git a/src/sentry/static/sentry/app/utils/collection.jsx b/src/sentry/static/sentry/app/utils/collection.jsx
index ce8f636d9f..43cdfadbda 100644
--- a/src/sentry/static/sentry/app/utils/collection.jsx
+++ b/src/sentry/static/sentry/app/utils/collection.jsx
@@ -75,7 +75,7 @@ Collection.prototype.unshift = function unshift(items) {
 Collection.prototype.get = function get(key) {
   var idx = this.indexOf(key);
   if (idx === -1) {
-    return;
+    return null;
   }
   return this[idx];
 };
@@ -83,7 +83,7 @@ Collection.prototype.get = function get(key) {
 Collection.prototype.pop = function pop(item) {
   var idx = this.indexOf(this.options.key(item));
   if (idx === -1) {
-    return;
+    return null;
   }
   let result = this[idx];
   this.splice(idx, idx + 1);
diff --git a/src/sentry/static/sentry/app/views/groupActivity.jsx b/src/sentry/static/sentry/app/views/groupActivity.jsx
index e333cb870a..b68b0a5fc8 100644
--- a/src/sentry/static/sentry/app/views/groupActivity.jsx
+++ b/src/sentry/static/sentry/app/views/groupActivity.jsx
@@ -42,6 +42,8 @@ var formatActivity = function(item) {
       return `assigned this event to ${assignee}`;
     case "unassigned":
       return "unassigned this event";
+    default:
+      return ""; // should never hit (?)
   }
 };
 
diff --git a/src/sentry/static/sentry/app/views/organizationStats.jsx b/src/sentry/static/sentry/app/views/organizationStats.jsx
index 855e28e51d..f3a638b560 100644
--- a/src/sentry/static/sentry/app/views/organizationStats.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats.jsx
@@ -18,7 +18,7 @@ var getPercent = (item, total) => {
   if (item === 0) {
     return '0%';
   }
-  return parseInt(item / total * 100) + '%';
+  return parseInt(item / total * 100, 10) + '%';
 };
 
 var ProjectTable = React.createClass({
