commit de56a53ea83682f7a38ea378602acdf11681307e
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 23 14:19:18 2015 -0800

    Add FileSize component

diff --git a/src/sentry/static/sentry/app/components/count.jsx b/src/sentry/static/sentry/app/components/count.jsx
index a442047522..c19bb8db80 100644
--- a/src/sentry/static/sentry/app/components/count.jsx
+++ b/src/sentry/static/sentry/app/components/count.jsx
@@ -2,6 +2,10 @@
 var React = require("react");
 
 var Count = React.createClass({
+  propTypes: {
+    value: React.PropTypes.number.isRequired
+  },
+
   numberFormats: [
       [1000000000, 'b'],
       [1000000, 'm'],
diff --git a/src/sentry/static/sentry/app/components/fileSize.jsx b/src/sentry/static/sentry/app/components/fileSize.jsx
new file mode 100644
index 0000000000..d182dc7faa
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/fileSize.jsx
@@ -0,0 +1,32 @@
+/*** @jsx React.DOM */
+var React = require("react");
+
+var FileSize = React.createClass({
+  units: ['KB','MB','GB','TB','PB','EB','ZB','YB'],
+
+  propTypes: {
+    bytes: React.PropTypes.number.isRequired
+  },
+
+  formatBytes: function(bytes) {
+      var thresh = 1024;
+      if (bytes < thresh) {
+        return bytes + ' B';
+      }
+
+      var u = -1;
+      do {
+        bytes /= thresh;
+        ++u;
+      } while (bytes >= thresh);
+      return bytes.toFixed(1) + ' ' + this.units[u];
+  },
+
+  render: function() {
+    return (
+      <span>{this.formatBytes(this.props.bytes)}</span>
+    );
+  }
+});
+
+module.exports = FileSize;
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index b3b76816a3..b2aee98af0 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -68,6 +68,7 @@ var escape = function(str) {
     return str.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
 };
 
+
 module.exports = {
   escape: escape,
   getQueryParams: getQueryParams,
diff --git a/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx b/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx
index 57eb866f5e..6b344157f1 100644
--- a/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx
+++ b/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx
@@ -1,6 +1,7 @@
 /*** @jsx React.DOM */
 var React = require("react");
 
+var FileSize = require("../../components/fileSize");
 var PropTypes = require("../../proptypes");
 
 var AggregateEventHeader = React.createClass({
@@ -26,7 +27,7 @@ var AggregateEventHeader = React.createClass({
         </a>
         <h4>
           <span>Datetime</span>
-          <span>[{event.size}]</span>
+          <span>[<FileSize bytes={event.size} />]</span>
           <div>
             <small>ID: {event.eventID}</small>
           </div>
