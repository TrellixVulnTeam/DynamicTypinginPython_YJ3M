commit 93ac40a2ba1a6a3c21bd2a4bc30db1468c0393bc
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 29 17:33:35 2012 -0800

    Update behavior of search view

diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index c4d0d12372..9cfc8b5ba9 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -138,6 +138,11 @@ def search(request, project):
     if not query:
         return HttpResponseRedirect(reverse('sentry', args=[project.pk]))
 
+    sort = request.GET.get('sort')
+    if sort not in SEARCH_SORT_OPTIONS:
+        sort = SEARCH_DEFAULT_SORT_OPTION
+    sort_label = _get_sort_label(sort)
+
     result = event_re.match(query)
     if result:
         # Forward to message if it exists
@@ -162,24 +167,20 @@ def search(request, project):
         else:
             return HttpResponseRedirect(message.get_absolute_url())
     elif not settings.USE_SEARCH:
-        return render_to_response('sentry/invalid_message_id.html', {
-                'project': project,
-            }, request)
-
-    sort = request.GET.get('sort')
-    if sort not in SEARCH_SORT_OPTIONS:
-        sort = SEARCH_DEFAULT_SORT_OPTION
-    sort_label = _get_sort_label(sort)
-
-    documents = list(SearchDocument.objects.search(project, query, sort_by=sort))
-    groups = Group.objects.in_bulk([d.group_id for d in documents])
-
-    event_list = []
-    for doc in documents:
-        try:
-            event_list.append(groups[doc.group_id])
-        except KeyError:
-            continue
+        event_list = Group.objects.none()
+        # return render_to_response('sentry/invalid_message_id.html', {
+        #         'project': project,
+        #     }, request)
+    else:
+        documents = list(SearchDocument.objects.search(project, query, sort_by=sort))
+        groups = Group.objects.in_bulk([d.group_id for d in documents])
+
+        event_list = []
+        for doc in documents:
+            try:
+                event_list.append(groups[doc.group_id])
+            except KeyError:
+                continue
 
     return render_to_response('sentry/search.html', {
         'project': project,
diff --git a/tests/web/tests.py b/tests/web/tests.py
index dd7aa92f40..e5a87c76f9 100644
--- a/tests/web/tests.py
+++ b/tests/web/tests.py
@@ -311,7 +311,7 @@ class SentrySearchTest(TestCase):
             message='hi',
         )
 
-        with self.Settings(SENTRY_PUBLIC=True):
+        with self.Settings(SENTRY_PUBLIC=True, SENTRY_USE_SEARCH=False):
             response = self.client.get(reverse('sentry-search', kwargs={'project_id': 1}), {'q': '%s$%s' % (checksum, checksum)})
             self.assertEquals(response.status_code, 200)
             self.assertTemplateUsed(response, 'sentry/search.html')
