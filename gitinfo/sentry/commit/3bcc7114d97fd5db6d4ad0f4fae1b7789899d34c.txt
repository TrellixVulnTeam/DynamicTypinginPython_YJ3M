commit 3bcc7114d97fd5db6d4ad0f4fae1b7789899d34c
Author: adhiraj <693121+adhiraj@users.noreply.github.com>
Date:   Fri Aug 17 16:11:26 2018 -0700

    feat(features): Record features from feature adoption signals (#9377)

diff --git a/src/sentry/adoption/manager.py b/src/sentry/adoption/manager.py
index 1131b48f6f..847e7915eb 100644
--- a/src/sentry/adoption/manager.py
+++ b/src/sentry/adoption/manager.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from collections import defaultdict, namedtuple
 
-FEATURE_LOCATION = {'language', 'integration', 'code', 'web', 'admin'}
+FEATURE_LOCATION = {'language', 'integration', 'code', 'web', 'admin', 'api'}
 
 Feature = namedtuple('Feature', ['id', 'slug', 'name', 'location', 'prerequisite'])
 
diff --git a/src/sentry/models/featureadoption.py b/src/sentry/models/featureadoption.py
index f6e89e9367..bbd4cfa4fd 100644
--- a/src/sentry/models/featureadoption.py
+++ b/src/sentry/models/featureadoption.py
@@ -53,12 +53,9 @@ manager.add(44, "custom_tags", "Custom Tags", "code", prerequisite=["first_event
 manager.add(45, "source_maps", "Source Maps", "code",
             prerequisite=["first_event", ("javascript", "node")])
 manager.add(46, "user_feedback", "User Feedback", "code", prerequisite=["user_tracking"])
-# manager.add(47, "api", "API", "code", prerequisite=["first_event"])  #
-# Challenging to determine what organization (i.e. api/0/organizations/)
 manager.add(48, "breadcrumbs", "Breadcrumbs", "code", prerequisite=[
             "first_event", ("python", "javascript", "node", "php")])
-# TODO(ehfeng) manager.add("resolve_in_commit", "Resolve in Commit",
-# "code", prerequisite=["first_event", "releases"])
+manager.add(49, "resolved_with_commit", "Resolve with Commit", "code")
 
 # Web UI
 manager.add(60, "first_project", "First Project", "web")
@@ -76,14 +73,18 @@ manager.add(69, "notification_integration", "Notification Integration", "web",
             prerequisite=["first_project"])
 manager.add(70, "delete_and_discard", "Delete and Discard Future Events", "web",
             prerequisite=["first_event"])
-# TODO(ehfeng) manager.add("snooze", "Snooze Issue", "web", prerequisite=["first_event"])
-# TODO(ehfeng) manager.add("merge", "Merge Issues", "web", prerequisite=["first_event"])
-# TODO(ehfeng) manager.add("releases", "Releases", "web", prerequisite=["first_project"])
+manager.add(71, "repo_linked", "Link a Repository", "web")
+manager.add(72, "ownership_rule_created", "Ownership Rules", "web")
+manager.add(73, "issue_ignored", "Ignore Issue", "web")
 
 # Admin UI
 manager.add(80, "sso", "SSO", "admin", prerequisite=["invite_team"])
 manager.add(81, "data_scrubbers", "Data Scrubbers", "admin", prerequisite=["first_event"])
 
+# API
+manager.add(90, "release_created", "Create Release Using API", "api")
+manager.add(91, "deploy_created", "Create Deploy Using API", "api")
+
 
 class FeatureAdoptionManager(BaseManager):
     def in_cache(self, organization_id, feature_id):
diff --git a/src/sentry/receivers/features.py b/src/sentry/receivers/features.py
index 8f4defba87..0d31f2adad 100644
--- a/src/sentry/receivers/features.py
+++ b/src/sentry/receivers/features.py
@@ -22,6 +22,12 @@ from sentry.signals import (
     inbound_filter_toggled,
     sso_enabled,
     data_scrubber_enabled,
+    repo_linked,
+    release_created,
+    deploy_created,
+    resolved_with_commit,
+    ownership_rule_created,
+    issue_ignored,
 )
 from sentry.utils.javascript import has_sourcemap
 
@@ -192,6 +198,48 @@ def deleted_and_discarded_issue(instance, created, **kwargs):
         )
 
 
+@repo_linked.connect(weak=False)
+def record_repo_linked(repo, **kwargs):
+    FeatureAdoption.objects.record(
+        organization_id=repo.organization_id, feature_slug="repo_linked", complete=True
+    )
+
+
+@release_created.connect(weak=False)
+def record_release_created(release, **kwargs):
+    FeatureAdoption.objects.record(
+        organization_id=release.organization_id, feature_slug="release_created", complete=True
+    )
+
+
+@deploy_created.connect(weak=False)
+def record_deploy_created(deploy, **kwargs):
+    FeatureAdoption.objects.record(
+        organization_id=deploy.organization_id, feature_slug="deploy_created", complete=True
+    )
+
+
+@resolved_with_commit.connect(weak=False)
+def record_resolved_with_commit(organization_id, **kwargs):
+    FeatureAdoption.objects.record(
+        organization_id=organization_id, feature_slug="resolved_with_commit", complete=True
+    )
+
+
+@ownership_rule_created.connect(weak=False)
+def record_ownership_rule_created(project, **kwargs):
+    FeatureAdoption.objects.record(
+        organization_id=project.organization_id, feature_slug="ownership_rule_created", complete=True
+    )
+
+
+@issue_ignored.connect(weak=False)
+def record_issue_ignored(project, **kwargs):
+    FeatureAdoption.objects.record(
+        organization_id=project.organization_id, feature_slug="issue_ignored", complete=True
+    )
+
+
 post_save.connect(
     deleted_and_discarded_issue,
     sender=GroupTombstone,
