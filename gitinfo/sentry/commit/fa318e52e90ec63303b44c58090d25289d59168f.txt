commit fa318e52e90ec63303b44c58090d25289d59168f
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Mar 15 00:04:07 2016 +0100

    Fixed iter_callsign_choices to fail on bad input.  This fixes SB-Y8

diff --git a/src/sentry/utils/strings.py b/src/sentry/utils/strings.py
index 66bd466b61..9857a36533 100644
--- a/src/sentry/utils/strings.py
+++ b/src/sentry/utils/strings.py
@@ -117,20 +117,21 @@ def iter_callsign_choices(project_name, team_name=None):
         bits.append(words[0][:1] + words[1][:1])
     elif len(words) == 3:
         bits.append(words[0][:1] + words[1][:1] + words[2][:1])
-    bit = words[0][:2]
-    if len(bit) == 2:
-        bits.append(bit)
-    bit = words[0][:3]
-    if len(bit) == 3:
-        bits.append(bit)
-
-    for bit in bits:
-        yield bit
+    elif words:
+        bit = words[0][:2]
+        if len(bit) == 2:
+            bits.append(bit)
+        bit = words[0][:3]
+        if len(bit) == 3:
+            bits.append(bit)
 
     # Fallback if nothing else works, use PR for project
     if not bits:
         bits.append('PR')
 
+    for bit in bits:
+        yield bit
+
     if team_name is not None:
         try:
             team_bit = _letters_re.findall(team_name.upper())[0][:1]
diff --git a/tests/sentry/utils/test_strings.py b/tests/sentry/utils/test_strings.py
index 6f10b12c56..b4cdd141d0 100644
--- a/tests/sentry/utils/test_strings.py
+++ b/tests/sentry/utils/test_strings.py
@@ -3,6 +3,7 @@ from sentry.utils.strings import (
     soft_break,
     soft_hyphenate,
     tokens_from_name,
+    iter_callsign_choices,
 )
 
 
@@ -31,3 +32,28 @@ def test_tokens_from_name():
     assert list(tokens_from_name('MyHTTPProject Awesome 42 Stuff',
                                  remove_digits=True)) == [
         'my', 'http', 'project', 'awesome', 'stuff']
+
+
+def test_iter_callsign_choices():
+    choices = iter_callsign_choices('FooBar')
+    assert next(choices) == 'FB'
+    assert next(choices) == 'FB2'
+    assert next(choices) == 'FB3'
+    assert next(choices) == 'FB4'
+
+    choices = iter_callsign_choices('FooBarBaz')
+    assert next(choices) == 'FBB'
+    assert next(choices) == 'FBB2'
+    assert next(choices) == 'FBB3'
+    assert next(choices) == 'FBB4'
+
+    choices = iter_callsign_choices('Grml')
+    assert next(choices) == 'GR'
+    assert next(choices) == 'GRM'
+    assert next(choices) == 'GR2'
+    assert next(choices) == 'GRM2'
+
+    choices = iter_callsign_choices('42')
+    assert next(choices) == 'PR'
+    assert next(choices) == 'PR2'
+    assert next(choices) == 'PR3'
