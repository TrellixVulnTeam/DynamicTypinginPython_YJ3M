commit d060939e939e2a53674cd7e529d6573e75e7d965
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Wed Feb 22 11:55:56 2017 +0100

    Move itunesconnect task into plugin

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 3925c79e87..5a43457e4c 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -450,7 +450,7 @@ CELERY_IMPORTS = (
     'sentry.tasks.process_buffer',
     'sentry.tasks.reports',
     'sentry.tasks.store',
-    'sentry.tasks.itunesconnect',
+    'sentry_plugins.itunesconnect.tasks.itunesconnect',
 )
 CELERY_QUEUES = [
     Queue('alerts', routing_key='alerts'),
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 1172237127..502cb83ae2 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -49,7 +49,7 @@ def init_plugin(plugin):
         for cls in plugin.get_custom_contexts() or ():
             contexttype(cls)
 
-    if hasattr(plugin, 'get_task'):
+    if (hasattr(plugin, 'get_task') and plugin.is_enabled()):
         settings.CELERYBEAT_SCHEDULE.update(plugin.get_task())
 
 
diff --git a/src/sentry/tasks/itunesconnect.py b/src/sentry/tasks/itunesconnect.py
deleted file mode 100644
index c6f47d3144..0000000000
--- a/src/sentry/tasks/itunesconnect.py
+++ /dev/null
@@ -1,79 +0,0 @@
-from __future__ import absolute_import, print_function
-
-import tempfile
-
-from sentry import http
-from sentry.tasks.base import instrumented_task
-from sentry.models import (
-    Project, ProjectOption, create_files_from_macho_zip
-)
-
-
-def get_project_from_id(project_id):
-    try:
-        return Project.objects.get(id=project_id)
-    except Project.DoesNotExist:
-        return
-
-
-def get_itunes_connect_plugin():
-    from sentry.plugins import plugins
-    for plugin in plugins:
-        if (hasattr(plugin, 'get_task') and plugin.slug == 'itunesconnect'):
-            return plugin
-    return None
-
-
-@instrumented_task(name='sentry.tasks.sync_dsyms_from_itunes_connect',
-                   time_limit=90,
-                   soft_time_limit=60)
-def sync_dsyms_from_itunes_connect(**kwargs):
-    options = ProjectOption.objects.filter(
-        key__in=[
-            'itunesconnect:enabled',
-            'itunesconnect:email',
-            'itunesconnect:password',
-        ],
-    )
-    plugin = get_itunes_connect_plugin()
-    for opt in options:
-        p = get_project_from_id(opt.project_id)
-        # dsym_urls = defaultdict(dict)
-        itc = plugin.get_client(p)
-        for app in itc.iter_apps():
-            for build in itc.iter_app_builds(app['id']):
-                fetch_dsym_url.delay(project_id=opt.project_id, app=app, build=build)
-                break
-            break
-    return
-
-
-@instrumented_task(
-    name='sentry.tasks.fetch_dsym_url',
-    queue='itunesconnect')
-def fetch_dsym_url(project_id, app, build, **kwargs):
-    p = get_project_from_id(project_id)
-    plugin = get_itunes_connect_plugin()
-    itc = plugin.get_client(p)
-    url = itc.get_dsym_url(app['id'], build['platform'], build['version'], build['build_id'])
-    import pprint
-    pprint.pprint(url)
-    download_dsym.delay(project_id=project_id, url=url)
-
-
-@instrumented_task(
-    name='sentry.tasks.download_dsym',
-    queue='itunesconnect')
-def download_dsym(project_id, url, **kwargs):
-    p = get_project_from_id(project_id)
-    import pprint
-    pprint.pprint(p)
-    result = http.stream_download_binary(url)
-
-    temp = tempfile.TemporaryFile()
-    try:
-        temp.write(result.body)
-        temp.seek(0)
-        create_files_from_macho_zip(temp, project=p)
-    finally:
-        temp.close()
