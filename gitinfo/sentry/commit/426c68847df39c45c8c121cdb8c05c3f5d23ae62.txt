commit 426c68847df39c45c8c121cdb8c05c3f5d23ae62
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jan 15 15:59:41 2015 -0800

    Add assignee selector

diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
new file mode 100644
index 0000000000..a527ef713d
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -0,0 +1,56 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+
+var AssigneeSelector = React.createClass({
+  propTypes: {
+    aggregate: React.PropTypes.shape({
+      id: React.PropTypes.string.isRequired
+    }).isRequired,
+    memberList: React.PropTypes.instanceOf(Array).isRequired,
+    onAssignTo: React.PropTypes.func.isRequired
+  },
+  render: function() {
+    var agg = this.props.aggregate;
+
+    var className = "user-selector";
+    if (!agg.assignedTo) {
+      className += " unassigned";
+    }
+
+    var memberNodes = [];
+    this.props.memberList.forEach(function(item){
+      memberNodes.push(
+        <li>
+          <a onClick={this.onAssignTo.bind(this, item)}>
+            <img src={item.avatarUrl} className="avatar" />
+            {item.name || item.email}
+          </a>
+        </li>
+      );
+    });
+
+    return (
+      <div className={className}>
+        <div className="dropdown">
+          <a href="#" className="btn btn-sm btn-default" dropdown-toggle>
+            {agg.assignedTo ?
+              <img src={agg.assignedTo.avatarUrl} className="avatar" />
+            :
+              <span className="icon-user" />
+            }
+            <span aria-hidden="true" className="icon-arrow-down"></span>
+          </a>
+          <div className="dropdown-menu" role="menu">
+            <input type="text" className="form-control input-sm" placeholder="Filter people" />
+            <ul>
+              {memberNodes}
+            </ul>
+          </div>
+        </div>
+      </div>
+    );
+  }
+});
+
+module.exports = AssigneeSelector;
diff --git a/src/sentry/static/sentry/app/components/stream.jsx b/src/sentry/static/sentry/app/components/stream.jsx
index 74d8efea2d..c02fb3b98a 100644
--- a/src/sentry/static/sentry/app/components/stream.jsx
+++ b/src/sentry/static/sentry/app/components/stream.jsx
@@ -3,6 +3,7 @@ var React = require("react");
 var $ = require("jquery");
 
 var alertActions = require("../actions/alertActions");
+var AssigneeSelector = require("./assigneeSelector");
 var BarChart = require("./barChart");
 var Count = require("./count");
 var StreamActions = require('./streamActions');
@@ -16,6 +17,9 @@ var Aggregate = React.createClass({
     data: React.PropTypes.shape({
       id: React.PropTypes.string.isRequired
     }).isRequired,
+    memberList: React.PropTypes.instanceOf(Array),
+    onSelect: React.PropTypes.func.isRequired,
+    onAssignTo: React.PropTypes.func.isRequired,
     statsPeriod: React.PropTypes.string.isRequired,
     isSelected: React.PropTypes.bool
   },
@@ -64,7 +68,10 @@ var Aggregate = React.createClass({
           </div>
         </div>
         <div className="event-assignee event-cell hidden-xs hidden-sm">
-
+          <AssigneeSelector
+            aggregate={data}
+            memberList={this.props.memberList}
+            onAssignTo={this.props.onAssignTo} />
         </div>
         <div className="hidden-sm hidden-xs event-graph align-right event-cell">
           <BarChart points={chartData} className="sparkline" />
@@ -134,6 +141,7 @@ var Stream = React.createClass({
     project: React.PropTypes.shape({
       id: React.PropTypes.string.isRequired
     }).isRequired,
+    memberList: React.PropTypes.instanceOf(Array),
     initialQuery: React.PropTypes.string,
     pageLinks: React.PropTypes.string
   },
@@ -278,6 +286,24 @@ var Stream = React.createClass({
       multiSelected: false
     });
   },
+  handleAssignTo: function(agg, member) {
+    $.ajax({
+      url: '/api/0/groups/' + $scope.group.id + '/',
+      method: 'PUT',
+      data: JSON.stringify({
+        assignedTo: user.email
+      }),
+      contentType: 'application/json',
+      success: function(data){
+        $timeout(function(){
+          $scope.group.assignedTo = user;
+        });
+      },
+      error: function(){
+        flash('error', 'Unable to change assignee. Please try again.');
+      }
+    });
+  },
   handleResolve: function(aggList, event){
     return this.actionAggregates(aggList, {
       data: {status: 'resolved'}
@@ -334,8 +360,10 @@ var Stream = React.createClass({
       return (
         <Aggregate data={node} key={node.id}
                    isSelected={node.isSelected}
-                   statsPeriod={this.state.statsPeriod}
-                   onSelect={this.handleSelect.bind(this, node.id)} />
+                   memberList={this.props.memberList}
+                   onSelect={this.handleSelect.bind(this, node.id)}
+                   onAssignTo={this.handleAssignTo.bind(this, node.id)}
+                   statsPeriod={this.state.statsPeriod} />
       );
     }.bind(this));
 
diff --git a/src/sentry/templates/sentry/groups/group_list.html b/src/sentry/templates/sentry/groups/group_list.html
index f7a3e27644..af377d1fdf 100644
--- a/src/sentry/templates/sentry/groups/group_list.html
+++ b/src/sentry/templates/sentry/groups/group_list.html
@@ -10,6 +10,7 @@
       React.render(React.createFactory(Stream)({
         aggList: {% serialize event_list %},
         project: {% serialize project %},
+        memberList: [],
         initialQuery: {% convert_to_json query %},
         pageLinks: {% convert_to_json page_links %}
       }), document.getElementById('blk_stream'));
