commit a78bec2a6add01cdd96692227a3fb0f1408dab54
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Mon Feb 17 09:27:11 2020 +0100

    ref(ui): Added tooltip - Datascrubbers v2 - Part 3 (#16974)

diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index 6ff8cb4a72..536ae8c763 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-
 import get from 'lodash/get';
+
 import {objectIsEmpty, toTitleCase, defined} from 'app/utils';
 import EventDataSection from 'app/components/events/eventDataSection';
 import plugins from 'app/plugins';
@@ -10,7 +10,7 @@ const CONTEXT_TYPES = {
   default: require('app/components/events/contexts/default').default,
   app: require('app/components/events/contexts/app').default,
   device: require('app/components/events/contexts/device').default,
-  os: require('app/components/events/contexts/os').default,
+  os: require('app/components/events/contexts/operatingSystem/operatingSystem').default,
   runtime: require('app/components/events/contexts/runtime').default,
   user: require('app/components/events/contexts/user').default,
   gpu: require('app/components/events/contexts/gpu').default,
diff --git a/src/sentry/static/sentry/app/components/events/contexts/contextBlockV2.tsx b/src/sentry/static/sentry/app/components/events/contexts/contextBlockV2.tsx
new file mode 100644
index 0000000000..dc56ee8574
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/contextBlockV2.tsx
@@ -0,0 +1,23 @@
+import React from 'react';
+
+import ErrorBoundary from 'app/components/errorBoundary';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueListV2';
+import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
+
+type Props = {
+  knownData: Array<KeyValueListData>;
+};
+
+const ContextBlock = ({knownData}: Props) => {
+  if (knownData.length === 0) {
+    return null;
+  }
+
+  return (
+    <ErrorBoundary mini>
+      <KeyValueList data={knownData} isContextData />
+    </ErrorBoundary>
+  );
+};
+
+export default ContextBlock;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx
new file mode 100644
index 0000000000..93413aad72
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx
@@ -0,0 +1,32 @@
+import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
+import {getMeta} from 'app/components/events/meta/metaProxy';
+
+import getOperatingSystemKnownDataDetails from './getOperatingSystemKnownDataDetails';
+import {OperatingSystemKnownData, OperatingSystemKnownDataType} from './types';
+
+function getOperatingSystemKnownData(
+  data: OperatingSystemKnownData
+): Array<KeyValueListData> {
+  const knownData: Array<KeyValueListData> = [];
+
+  const dataKeys = Object.keys(data);
+  for (const key of dataKeys) {
+    const knownDataDetails = getOperatingSystemKnownDataDetails(
+      data,
+      key as OperatingSystemKnownDataType
+    );
+
+    if (key === null || !knownDataDetails) {
+      continue;
+    }
+
+    knownData.push({
+      key,
+      ...knownDataDetails,
+      meta: getMeta(data, key),
+    });
+  }
+  return knownData;
+}
+
+export default getOperatingSystemKnownData;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownDataDetails.tsx b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownDataDetails.tsx
new file mode 100644
index 0000000000..9f53dab690
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownDataDetails.tsx
@@ -0,0 +1,41 @@
+import {t} from 'app/locale';
+import {defined} from 'app/utils';
+
+import {OperatingSystemKnownData, OperatingSystemKnownDataType} from './types';
+
+type Output = {
+  subject: string;
+  value: string | null;
+};
+
+function getOperatingSystemKnownDataDetails(
+  data: OperatingSystemKnownData,
+  type: OperatingSystemKnownDataType
+): Output | undefined {
+  switch (type) {
+    case OperatingSystemKnownDataType.NAME:
+      return {
+        subject: t('Name'),
+        value: data.name,
+      };
+    case OperatingSystemKnownDataType.VERSION:
+      return {
+        subject: t('Version'),
+        value: `${data.version}${data.build ? `(${data.build})` : ''}`,
+      };
+    case OperatingSystemKnownDataType.KERNEL_VERSION:
+      return {
+        subject: t('Kernel Version'),
+        value: data.kernel_version,
+      };
+    case OperatingSystemKnownDataType.ROOTED:
+      return {
+        subject: t('Rooted'),
+        value: defined(data.rooted) ? (data.rooted ? 'yes' : 'no') : null,
+      };
+    default:
+      return undefined;
+  }
+}
+
+export default getOperatingSystemKnownDataDetails;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx
new file mode 100644
index 0000000000..9a6cfd5c60
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx
@@ -0,0 +1,23 @@
+import React from 'react';
+
+import {defined} from 'app/utils';
+import ContextBlock from 'app/components/events/contexts/contextBlockV2';
+
+import getOperatingSystemKnownData from './getOperatingSystemKnownData';
+import {OperatingSystemKnownData} from './types';
+
+type Props = {
+  data?: OperatingSystemKnownData;
+};
+
+const OperatingSystem = ({data}: Props) => {
+  if (!defined(data)) {
+    return null;
+  }
+
+  return <ContextBlock knownData={getOperatingSystemKnownData(data)} />;
+};
+
+OperatingSystem.getTitle = () => 'Operating System';
+
+export default OperatingSystem;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/types.tsx b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/types.tsx
new file mode 100644
index 0000000000..fd8a3beb16
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/types.tsx
@@ -0,0 +1,15 @@
+export enum OperatingSystemKnownDataType {
+  NAME = 'name',
+  VERSION = 'version',
+  KERNEL_VERSION = 'kernel_version',
+  ROOTED = 'rooted',
+}
+
+export type OperatingSystemKnownData = {
+  name: string;
+  type: string;
+  build: string;
+  kernel_version: string;
+  version?: string;
+  rooted?: boolean;
+};
diff --git a/src/sentry/static/sentry/app/components/events/contexts/os.jsx b/src/sentry/static/sentry/app/components/events/contexts/os.jsx
deleted file mode 100644
index 5c059c4030..0000000000
--- a/src/sentry/static/sentry/app/components/events/contexts/os.jsx
+++ /dev/null
@@ -1,32 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import ContextBlock from 'app/components/events/contexts/contextBlock';
-import {defined} from 'app/utils';
-
-class OsContextType extends React.Component {
-  static propTypes = {
-    alias: PropTypes.string.isRequired,
-    data: PropTypes.object.isRequired,
-  };
-
-  render() {
-    const {name, version, build, kernel_version, rooted, ...data} = this.props.data;
-    return (
-      <ContextBlock
-        data={data}
-        knownData={[
-          ['?Name', name],
-          ['?Version', version + (build ? ` (${build})` : '')],
-          ['?Kernel Version', kernel_version],
-          ['?Rooted', defined(rooted) ? (rooted ? 'yes' : 'no') : null],
-        ]}
-        alias={this.props.alias}
-      />
-    );
-  }
-}
-
-OsContextType.getTitle = () => 'Operating System';
-
-export default OsContextType;
diff --git a/src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraData.tsx b/src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraData.tsx
index 198c9d7a6f..1e41e00075 100644
--- a/src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraData.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraData.tsx
@@ -4,9 +4,8 @@ import {Event} from 'app/types';
 import {t} from 'app/locale';
 import ErrorBoundary from 'app/components/errorBoundary';
 import EventDataSection from 'app/components/events/eventDataSection';
-import KeyValueList, {
-  KeyValueListData,
-} from 'app/components/events/interfaces/keyValueList/keyValueListV2';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueListV2';
+import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
 import SentryTypes from 'app/sentryTypes';
 import {getMeta} from 'app/components/events/meta/metaProxy';
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueListV2.tsx b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueListV2.tsx
index 81e0fca67e..9058553bdc 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueListV2.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueListV2.tsx
@@ -1,11 +1,14 @@
 import React from 'react';
 import sortBy from 'lodash/sortBy';
 
+import {defined} from 'app/utils';
 import styled from '@emotion/styled';
 import ContextData from 'app/components/contextData';
 import AnnotatedText from 'app/components/events/meta/annotatedText';
 import theme from 'app/utils/theme';
 
+import {KeyValueListData} from './types';
+
 type Props = {
   data?: Array<KeyValueListData>;
   onClick?: () => void;
@@ -15,27 +18,6 @@ type Props = {
   isSorted?: boolean;
 };
 
-export type KeyValueListData = {
-  key: string;
-  subject: React.ReactNode;
-  value: string | null;
-  meta: Meta;
-};
-
-type Meta = {
-  chunks: Array<Chunks>;
-  len: number;
-  rem: Array<Array<string | number>>;
-  err: Array<any>;
-};
-
-type Chunks = {
-  text: string;
-  type: string;
-  remark?: string;
-  rule_id?: string;
-};
-
 const KeyValueList = ({
   data,
   isContextData = false,
@@ -44,7 +26,7 @@ const KeyValueList = ({
   longKeys = false,
   onClick,
 }: Props) => {
-  if (data === undefined || data === null || data.length === 0) {
+  if (!defined(data) || data.length === 0) {
     return null;
   }
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/types.ts b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/types.ts
new file mode 100644
index 0000000000..f2ee78b0e2
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/types.ts
@@ -0,0 +1,8 @@
+import {Meta} from 'app/types';
+
+export type KeyValueListData = {
+  key: string;
+  subject: React.ReactNode;
+  value: string | null;
+  meta: Meta;
+};
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 3c32971c63..e45c28a2ff 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -835,3 +835,17 @@ export type Tag = {
 };
 
 export type Level = 'error' | 'fatal' | 'info' | 'warning' | 'sample';
+
+export type Meta = {
+  chunks: Array<Chunks>;
+  len: number;
+  rem: Array<Array<string | number>>;
+  err: Array<any>;
+};
+
+export type Chunks = {
+  text: string;
+  type: string;
+  remark?: string;
+  rule_id?: string;
+};
diff --git a/yarn.lock b/yarn.lock
index 3a4123c788..e7d6613fd6 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -55,17 +55,17 @@
     semver "^5.4.1"
     source-map "^0.5.0"
 
-"@babel/core@7.8.4":
-  version "7.8.4"
-  resolved "https://registry.yarnpkg.com/@babel/core/-/core-7.8.4.tgz#d496799e5c12195b3602d0fddd77294e3e38e80e"
-  integrity sha512-0LiLrB2PwrVI+a2/IEskBopDYSd8BCb3rOvH7D5tzoWd696TBEduBvuLVm4Nx6rltrLZqvI3MCalB2K2aVzQjA==
+"@babel/core@>=7.2.2", "@babel/core@^7.0.0", "@babel/core@^7.1.0", "@babel/core@^7.1.6", "@babel/core@^7.4.5", "@babel/core@^7.7.5":
+  version "7.8.3"
+  resolved "https://registry.yarnpkg.com/@babel/core/-/core-7.8.3.tgz#30b0ebb4dd1585de6923a0b4d179e0b9f5d82941"
+  integrity sha512-4XFkf8AwyrEG7Ziu3L2L0Cv+WyY47Tcsp70JFmpftbAA1K7YL/sgE9jh9HyNj08Y/U50ItUchpN0w6HxAoX1rA==
   dependencies:
     "@babel/code-frame" "^7.8.3"
-    "@babel/generator" "^7.8.4"
-    "@babel/helpers" "^7.8.4"
-    "@babel/parser" "^7.8.4"
+    "@babel/generator" "^7.8.3"
+    "@babel/helpers" "^7.8.3"
+    "@babel/parser" "^7.8.3"
     "@babel/template" "^7.8.3"
-    "@babel/traverse" "^7.8.4"
+    "@babel/traverse" "^7.8.3"
     "@babel/types" "^7.8.3"
     convert-source-map "^1.7.0"
     debug "^4.1.0"
@@ -76,17 +76,17 @@
     semver "^5.4.1"
     source-map "^0.5.0"
 
-"@babel/core@>=7.2.2", "@babel/core@^7.0.0", "@babel/core@^7.1.0", "@babel/core@^7.1.6", "@babel/core@^7.4.5", "@babel/core@^7.7.5":
-  version "7.8.3"
-  resolved "https://registry.yarnpkg.com/@babel/core/-/core-7.8.3.tgz#30b0ebb4dd1585de6923a0b4d179e0b9f5d82941"
-  integrity sha512-4XFkf8AwyrEG7Ziu3L2L0Cv+WyY47Tcsp70JFmpftbAA1K7YL/sgE9jh9HyNj08Y/U50ItUchpN0w6HxAoX1rA==
+"@babel/core@~7.8.4":
+  version "7.8.4"
+  resolved "https://registry.yarnpkg.com/@babel/core/-/core-7.8.4.tgz#d496799e5c12195b3602d0fddd77294e3e38e80e"
+  integrity sha512-0LiLrB2PwrVI+a2/IEskBopDYSd8BCb3rOvH7D5tzoWd696TBEduBvuLVm4Nx6rltrLZqvI3MCalB2K2aVzQjA==
   dependencies:
     "@babel/code-frame" "^7.8.3"
-    "@babel/generator" "^7.8.3"
-    "@babel/helpers" "^7.8.3"
-    "@babel/parser" "^7.8.3"
+    "@babel/generator" "^7.8.4"
+    "@babel/helpers" "^7.8.4"
+    "@babel/parser" "^7.8.4"
     "@babel/template" "^7.8.3"
-    "@babel/traverse" "^7.8.3"
+    "@babel/traverse" "^7.8.4"
     "@babel/types" "^7.8.3"
     convert-source-map "^1.7.0"
     debug "^4.1.0"
@@ -373,7 +373,7 @@
     "@babel/helper-remap-async-to-generator" "^7.8.3"
     "@babel/plugin-syntax-async-generators" "^7.8.0"
 
-"@babel/plugin-proposal-class-properties@7.8.3", "@babel/plugin-proposal-class-properties@^7.1.0", "@babel/plugin-proposal-class-properties@^7.7.0":
+"@babel/plugin-proposal-class-properties@^7.1.0", "@babel/plugin-proposal-class-properties@^7.7.0", "@babel/plugin-proposal-class-properties@~7.8.3":
   version "7.8.3"
   resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.8.3.tgz#5e06654af5cd04b608915aada9b2a6788004464e"
   integrity sha512-EqFhbo7IosdgPgZggHaNObkmO1kNUe3slaKu54d5OWvy+p9QIKOzK1GAEpAIsZtWVtPXUHSMcT4smvDrCfY4AA==
@@ -381,7 +381,7 @@
     "@babel/helper-create-class-features-plugin" "^7.8.3"
     "@babel/helper-plugin-utils" "^7.8.3"
 
-"@babel/plugin-proposal-decorators@7.8.3":
+"@babel/plugin-proposal-decorators@~7.8.3":
   version "7.8.3"
   resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.8.3.tgz#2156860ab65c5abf068c3f67042184041066543e"
   integrity sha512-e3RvdvS4qPJVTe288DlXjwKflpfy1hr0j5dz5WpIYYeP7vQZg2WfAEIp8k5/Lwis/m5REXEteIz6rrcDtXXG7w==
@@ -422,7 +422,7 @@
     "@babel/helper-plugin-utils" "^7.8.0"
     "@babel/plugin-syntax-object-rest-spread" "^7.8.0"
 
-"@babel/plugin-proposal-object-rest-spread@7.8.3", "@babel/plugin-proposal-object-rest-spread@^7.0.0", "@babel/plugin-proposal-object-rest-spread@^7.6.2", "@babel/plugin-proposal-object-rest-spread@^7.8.3":
+"@babel/plugin-proposal-object-rest-spread@^7.0.0", "@babel/plugin-proposal-object-rest-spread@^7.6.2", "@babel/plugin-proposal-object-rest-spread@^7.8.3", "@babel/plugin-proposal-object-rest-spread@~7.8.3":
   version "7.8.3"
   resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.8.3.tgz#eb5ae366118ddca67bed583b53d7554cad9951bb"
   integrity sha512-8qvuPwU/xxUCt78HocNlv0mXXo0wdh9VT1R04WU8HGOfaOob26pF+9P5/lYjN/q7DHOX1bvX60hnhOvuQUJdbA==
@@ -816,7 +816,7 @@
   dependencies:
     "@babel/helper-plugin-utils" "^7.8.3"
 
-"@babel/plugin-transform-runtime@7.8.3":
+"@babel/plugin-transform-runtime@~7.8.3":
   version "7.8.3"
   resolved "https://registry.yarnpkg.com/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.8.3.tgz#c0153bc0a5375ebc1f1591cb7eea223adea9f169"
   integrity sha512-/vqUt5Yh+cgPZXXjmaG9NT8aVfThKk7G4OqkVhrXqwsC5soMn/qTCxs36rZ2QFhpfTJcjw4SNDIZ4RUb8OL4jQ==
@@ -887,13 +887,13 @@
     "@babel/helper-create-regexp-features-plugin" "^7.8.3"
     "@babel/helper-plugin-utils" "^7.8.3"
 
-"@babel/preset-env@7.8.4":
-  version "7.8.4"
-  resolved "https://registry.yarnpkg.com/@babel/preset-env/-/preset-env-7.8.4.tgz#9dac6df5f423015d3d49b6e9e5fa3413e4a72c4e"
-  integrity sha512-HihCgpr45AnSOHRbS5cWNTINs0TwaR8BS8xIIH+QwiW8cKL0llV91njQMpeMReEPVs+1Ao0x3RLEBLtt1hOq4w==
+"@babel/preset-env@^7.1.6", "@babel/preset-env@^7.4.5":
+  version "7.8.3"
+  resolved "https://registry.yarnpkg.com/@babel/preset-env/-/preset-env-7.8.3.tgz#dc0fb2938f52bbddd79b3c861a4b3427dd3a6c54"
+  integrity sha512-Rs4RPL2KjSLSE2mWAx5/iCH+GC1ikKdxPrhnRS6PfFVaiZeom22VFKN4X8ZthyN61kAaR05tfXTbCvatl9WIQg==
   dependencies:
-    "@babel/compat-data" "^7.8.4"
-    "@babel/helper-compilation-targets" "^7.8.4"
+    "@babel/compat-data" "^7.8.0"
+    "@babel/helper-compilation-targets" "^7.8.3"
     "@babel/helper-module-imports" "^7.8.3"
     "@babel/helper-plugin-utils" "^7.8.3"
     "@babel/plugin-proposal-async-generator-functions" "^7.8.3"
@@ -922,7 +922,7 @@
     "@babel/plugin-transform-dotall-regex" "^7.8.3"
     "@babel/plugin-transform-duplicate-keys" "^7.8.3"
     "@babel/plugin-transform-exponentiation-operator" "^7.8.3"
-    "@babel/plugin-transform-for-of" "^7.8.4"
+    "@babel/plugin-transform-for-of" "^7.8.3"
     "@babel/plugin-transform-function-name" "^7.8.3"
     "@babel/plugin-transform-literals" "^7.8.3"
     "@babel/plugin-transform-member-expression-literals" "^7.8.3"
@@ -933,7 +933,7 @@
     "@babel/plugin-transform-named-capturing-groups-regex" "^7.8.3"
     "@babel/plugin-transform-new-target" "^7.8.3"
     "@babel/plugin-transform-object-super" "^7.8.3"
-    "@babel/plugin-transform-parameters" "^7.8.4"
+    "@babel/plugin-transform-parameters" "^7.8.3"
     "@babel/plugin-transform-property-literals" "^7.8.3"
     "@babel/plugin-transform-regenerator" "^7.8.3"
     "@babel/plugin-transform-reserved-words" "^7.8.3"
@@ -941,22 +941,22 @@
     "@babel/plugin-transform-spread" "^7.8.3"
     "@babel/plugin-transform-sticky-regex" "^7.8.3"
     "@babel/plugin-transform-template-literals" "^7.8.3"
-    "@babel/plugin-transform-typeof-symbol" "^7.8.4"
+    "@babel/plugin-transform-typeof-symbol" "^7.8.3"
     "@babel/plugin-transform-unicode-regex" "^7.8.3"
     "@babel/types" "^7.8.3"
-    browserslist "^4.8.5"
+    browserslist "^4.8.2"
     core-js-compat "^3.6.2"
     invariant "^2.2.2"
-    levenary "^1.1.1"
+    levenary "^1.1.0"
     semver "^5.5.0"
 
-"@babel/preset-env@^7.1.6", "@babel/preset-env@^7.4.5":
-  version "7.8.3"
-  resolved "https://registry.yarnpkg.com/@babel/preset-env/-/preset-env-7.8.3.tgz#dc0fb2938f52bbddd79b3c861a4b3427dd3a6c54"
-  integrity sha512-Rs4RPL2KjSLSE2mWAx5/iCH+GC1ikKdxPrhnRS6PfFVaiZeom22VFKN4X8ZthyN61kAaR05tfXTbCvatl9WIQg==
+"@babel/preset-env@~7.8.4":
+  version "7.8.4"
+  resolved "https://registry.yarnpkg.com/@babel/preset-env/-/preset-env-7.8.4.tgz#9dac6df5f423015d3d49b6e9e5fa3413e4a72c4e"
+  integrity sha512-HihCgpr45AnSOHRbS5cWNTINs0TwaR8BS8xIIH+QwiW8cKL0llV91njQMpeMReEPVs+1Ao0x3RLEBLtt1hOq4w==
   dependencies:
-    "@babel/compat-data" "^7.8.0"
-    "@babel/helper-compilation-targets" "^7.8.3"
+    "@babel/compat-data" "^7.8.4"
+    "@babel/helper-compilation-targets" "^7.8.4"
     "@babel/helper-module-imports" "^7.8.3"
     "@babel/helper-plugin-utils" "^7.8.3"
     "@babel/plugin-proposal-async-generator-functions" "^7.8.3"
@@ -985,7 +985,7 @@
     "@babel/plugin-transform-dotall-regex" "^7.8.3"
     "@babel/plugin-transform-duplicate-keys" "^7.8.3"
     "@babel/plugin-transform-exponentiation-operator" "^7.8.3"
-    "@babel/plugin-transform-for-of" "^7.8.3"
+    "@babel/plugin-transform-for-of" "^7.8.4"
     "@babel/plugin-transform-function-name" "^7.8.3"
     "@babel/plugin-transform-literals" "^7.8.3"
     "@babel/plugin-transform-member-expression-literals" "^7.8.3"
@@ -996,7 +996,7 @@
     "@babel/plugin-transform-named-capturing-groups-regex" "^7.8.3"
     "@babel/plugin-transform-new-target" "^7.8.3"
     "@babel/plugin-transform-object-super" "^7.8.3"
-    "@babel/plugin-transform-parameters" "^7.8.3"
+    "@babel/plugin-transform-parameters" "^7.8.4"
     "@babel/plugin-transform-property-literals" "^7.8.3"
     "@babel/plugin-transform-regenerator" "^7.8.3"
     "@babel/plugin-transform-reserved-words" "^7.8.3"
@@ -1004,13 +1004,13 @@
     "@babel/plugin-transform-spread" "^7.8.3"
     "@babel/plugin-transform-sticky-regex" "^7.8.3"
     "@babel/plugin-transform-template-literals" "^7.8.3"
-    "@babel/plugin-transform-typeof-symbol" "^7.8.3"
+    "@babel/plugin-transform-typeof-symbol" "^7.8.4"
     "@babel/plugin-transform-unicode-regex" "^7.8.3"
     "@babel/types" "^7.8.3"
-    browserslist "^4.8.2"
+    browserslist "^4.8.5"
     core-js-compat "^3.6.2"
     invariant "^2.2.2"
-    levenary "^1.1.0"
+    levenary "^1.1.1"
     semver "^5.5.0"
 
 "@babel/preset-flow@^7.0.0":
@@ -1059,13 +1059,6 @@
     core-js "^2.6.5"
     regenerator-runtime "^0.13.2"
 
-"@babel/runtime@7.8.4":
-  version "7.8.4"
-  resolved "https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.8.4.tgz#d79f5a2040f7caa24d53e563aad49cbc05581308"
-  integrity sha512-neAp3zt80trRVBI1x0azq6c57aNBqYZH8KhMm3TaB7wEI5Q4A2SHfBHE8w9gOhI/lrqxtEbXZgQIrHP+wvSGwQ==
-  dependencies:
-    regenerator-runtime "^0.13.2"
-
 "@babel/runtime@^7.0.0", "@babel/runtime@^7.1.2", "@babel/runtime@^7.3.1", "@babel/runtime@^7.3.4", "@babel/runtime@^7.4.4", "@babel/runtime@^7.5.0", "@babel/runtime@^7.5.5", "@babel/runtime@^7.6.3", "@babel/runtime@^7.7.2", "@babel/runtime@^7.7.4", "@babel/runtime@^7.7.6":
   version "7.8.3"
   resolved "https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.8.3.tgz#0811944f73a6c926bb2ad35e918dcc1bfab279f1"
@@ -1073,6 +1066,13 @@
   dependencies:
     regenerator-runtime "^0.13.2"
 
+"@babel/runtime@~7.8.4":
+  version "7.8.4"
+  resolved "https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.8.4.tgz#d79f5a2040f7caa24d53e563aad49cbc05581308"
+  integrity sha512-neAp3zt80trRVBI1x0azq6c57aNBqYZH8KhMm3TaB7wEI5Q4A2SHfBHE8w9gOhI/lrqxtEbXZgQIrHP+wvSGwQ==
+  dependencies:
+    regenerator-runtime "^0.13.2"
+
 "@babel/standalone@^7.4.5":
   version "7.8.3"
   resolved "https://registry.yarnpkg.com/@babel/standalone/-/standalone-7.8.3.tgz#0674730a8c5fbb9352de5342bf0c0c040d658380"
