commit 88ebd3e2e7f817174eab65e1d93ac13d89dd1fca
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Sep 11 12:15:56 2018 -0700

    ref(discover): Use variable for types (#9708)

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx
index 2fc7f9b0c6..c098245f69 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx
@@ -1,72 +1,78 @@
+const TYPES = {
+  STRING: 'string',
+  NUMBER: 'number',
+  BOOLEAN: 'boolean',
+};
+
 export const PROMOTED_TAGS = [
-  {name: 'tags[level]', type: 'string'},
-  {name: 'tags[logger]', type: 'string'},
-  {name: 'tags[server_name]', type: 'string'},
-  {name: 'tags[transaction]', type: 'string'},
-  {name: 'tags[environment]', type: 'string'},
-  {name: 'tags[site]', type: 'string'},
-  {name: 'tags[url]', type: 'string'},
-  {name: 'tags[app_device]', type: 'string'},
-  {name: 'tags[device]', type: 'string'},
-  {name: 'tags[device_family]', type: 'string'},
-  {name: 'tags[runtime]', type: 'string'},
-  {name: 'tags[runtime_name]', type: 'string'},
-  {name: 'tags[browser]', type: 'string'},
-  {name: 'tags[browser_name]', type: 'string'},
-  {name: 'tags[os]', type: 'string'},
-  {name: 'tags[os_name]', type: 'string'},
-  {name: 'tags[os_rooted]', type: 'boolean'},
-  {name: 'tags[sentry:release]', type: 'string'},
+  {name: 'tags[level]', type: TYPES.STRING},
+  {name: 'tags[logger]', type: TYPES.STRING},
+  {name: 'tags[server_name]', type: TYPES.STRING},
+  {name: 'tags[transaction]', type: TYPES.STRING},
+  {name: 'tags[environment]', type: TYPES.STRING},
+  {name: 'tags[site]', type: TYPES.STRING},
+  {name: 'tags[url]', type: TYPES.STRING},
+  {name: 'tags[app_device]', type: TYPES.STRING},
+  {name: 'tags[device]', type: TYPES.STRING},
+  {name: 'tags[device_family]', type: TYPES.STRING},
+  {name: 'tags[runtime]', type: TYPES.STRING},
+  {name: 'tags[runtime_name]', type: TYPES.STRING},
+  {name: 'tags[browser]', type: TYPES.STRING},
+  {name: 'tags[browser_name]', type: TYPES.STRING},
+  {name: 'tags[os]', type: TYPES.STRING},
+  {name: 'tags[os_name]', type: TYPES.STRING},
+  {name: 'tags[os_rooted]', type: TYPES.BOOLEAN},
+  {name: 'tags[sentry:release]', type: TYPES.STRING},
 ];
 
 export const COLUMNS = [
-  {name: 'event_id', type: 'string'},
-  {name: 'project_id', type: 'string'},
-  {name: 'platform', type: 'string'},
-  {name: 'message', type: 'string'},
-  {name: 'primary_hash', type: 'string'},
-  {name: 'timestamp', type: 'string'}, // TODO: handling datetime as string for now
-  {name: 'received', type: 'string'}, // TODO: handling datetime as string for now
+  {name: 'event_id', type: TYPES.STRING},
+  {name: 'project_id', type: TYPES.STRING},
+  {name: 'platform', type: TYPES.STRING},
+  {name: 'message', type: TYPES.STRING},
+  {name: 'primary_hash', type: TYPES.STRING},
+  {name: 'timestamp', type: TYPES.STRING}, // TODO: handling datetime as string for now
+  {name: 'received', type: TYPES.STRING}, // TODO: handling datetime as string for now
 
-  {name: 'user_id', type: 'string'},
-  {name: 'username', type: 'string'},
-  {name: 'email', type: 'string'},
-  {name: 'ip_address', type: 'string'},
+  {name: 'user_id', type: TYPES.STRING},
+  {name: 'username', type: TYPES.STRING},
+  {name: 'email', type: TYPES.STRING},
+  {name: 'ip_address', type: TYPES.STRING},
 
-  {name: 'sdk_name', type: 'string'},
-  {name: 'sdk_version', type: 'string'},
-  {name: 'tags_key', type: 'string'},
-  {name: 'tags_value', type: 'string'},
-  {name: 'contexts.key', type: 'string'},
-  {name: 'contexts.value', type: 'string'},
-  {name: 'http_method', type: 'string'},
-  {name: 'http_referer', type: 'string'},
-  {name: 'os_build', type: 'string'},
-  {name: 'os_kernel_version', type: 'string'},
-  {name: 'device_name', type: 'string'},
-  {name: 'device_brand', type: 'string'},
-  {name: 'device_locale', type: 'string'},
-  {name: 'device_uuid', type: 'string'},
-  {name: 'device_model_id', type: 'string'},
-  {name: 'device_arch', type: 'string'},
-  {name: 'device_battery_level', type: 'number'},
-  {name: 'device_orientation', type: 'string'},
-  {name: 'device_simulator', type: 'string'},
-  {name: 'device_online', type: 'string'},
-  {name: 'device_charging', type: 'string'},
-  {name: 'exception_stacks.type', type: 'string'},
-  {name: 'exception_stacks.value', type: 'string'},
-  {name: 'exception_stacks.mechanism_type', type: 'string'},
-  {name: 'exception_stacks.mechanism_handled', type: 'string'},
-  {name: 'exception_frames.abs_path', type: 'string'},
-  {name: 'exception_frames.filename', type: 'string'},
-  {name: 'exception_frames.package', type: 'string'},
-  {name: 'exception_frames.module', type: 'string'},
-  {name: 'exception_frames.function', type: 'string'},
-  {name: 'exception_frames.in_app', type: 'boolean'},
-  {name: 'exception_frames.colno', type: 'string'},
-  {name: 'exception_frames.lineno', type: 'string'},
-  {name: 'exception_frames.stack_level', type: 'string'},
+  {name: 'sdk_name', type: TYPES.STRING},
+  {name: 'sdk_version', type: TYPES.STRING},
+  {name: 'tags_key', type: TYPES.STRING},
+  {name: 'tags_value', type: TYPES.STRING},
+  {name: 'contexts.key', type: TYPES.STRING},
+  {name: 'contexts.value', type: TYPES.STRING},
+  {name: 'http_method', type: TYPES.STRING},
+  {name: 'http_referer', type: TYPES.STRING},
+  {name: 'os_build', type: TYPES.STRING},
+  {name: 'os_kernel_version', type: TYPES.STRING},
+  {name: 'device_name', type: TYPES.STRING},
+  {name: 'device_brand', type: TYPES.STRING},
+  {name: 'device_locale', type: TYPES.STRING},
+  {name: 'device_uuid', type: TYPES.STRING},
+  {name: 'device_model_id', type: TYPES.STRING},
+  {name: 'device_arch', type: TYPES.STRING},
+  {name: 'device_battery_level', type: TYPES.NUMBER},
+  {name: 'device_orientation', type: TYPES.STRING},
+  {name: 'device_simulator', type: TYPES.STRING},
+  {name: 'device_online', type: TYPES.STRING},
+  {name: 'device_charging', type: TYPES.STRING},
+  {name: 'exception_stacks.type', type: TYPES.STRING},
+  {name: 'exception_stacks.value', type: TYPES.STRING},
+  {name: 'exception_stacks.mechanism_type', type: TYPES.STRING},
+  {name: 'exception_stacks.mechanism_handled', type: TYPES.STRING},
+  {name: 'exception_frames.abs_path', type: TYPES.STRING},
+  {name: 'exception_frames.filename', type: TYPES.STRING},
+  {name: 'exception_frames.package', type: TYPES.STRING},
+  {name: 'exception_frames.module', type: TYPES.STRING},
+  {name: 'exception_frames.function', type: TYPES.STRING},
+  {name: 'exception_frames.in_app', type: TYPES.BOOLEAN},
+  {name: 'exception_frames.colno', type: TYPES.STRING},
+  {name: 'exception_frames.lineno', type: TYPES.STRING},
+  {name: 'exception_frames.stack_level', type: TYPES.STRING},
 ];
 
 export const CONDITION_OPERATORS = [
