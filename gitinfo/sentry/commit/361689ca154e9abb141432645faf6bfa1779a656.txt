commit 361689ca154e9abb141432645faf6bfa1779a656
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Aug 22 16:26:44 2017 -0700

    Add a test for not reporting useless no-location frames

diff --git a/tests/sentry/lang/javascript/test_plugin.py b/tests/sentry/lang/javascript/test_plugin.py
index c721a4f4ba..3902af35bc 100644
--- a/tests/sentry/lang/javascript/test_plugin.py
+++ b/tests/sentry/lang/javascript/test_plugin.py
@@ -967,6 +967,50 @@ class JavascriptIntegrationTest(TestCase):
         event = Event.objects.get()
         assert event.data['errors'] == [{'url': u'<data url>', 'type': 'js_no_source'}]
 
+    @responses.activate
+    def test_failed_sourcemap_expansion_missing_location_entirely(self):
+        responses.add(
+            responses.GET,
+            'http://example.com/indexed.min.js',
+            body='//# sourceMappingURL=indexed.sourcemap.js',
+        )
+        responses.add(
+            responses.GET,
+            'http://example.com/indexed.sourcemap.js',
+            body='{}'
+        )
+        data = {
+            'message': 'hello',
+            'platform': 'javascript',
+            'sentry.interfaces.Exception': {
+                'values': [
+                    {
+                        'type': 'Error',
+                        'stacktrace': {
+                            'frames': [
+                                {
+                                    'abs_path': 'http://example.com/indexed.min.js',
+                                    'filename': 'indexed.min.js',
+                                    'lineno': 1,
+                                    'colno': 1,
+                                },
+                                {
+                                    'abs_path': 'http://example.com/indexed.min.js',
+                                    'filename': 'indexed.min.js',
+                                },
+                            ],
+                        },
+                    }
+                ],
+            }
+        }
+
+        resp = self._postWithHeader(data)
+        assert resp.status_code == 200
+
+        event = Event.objects.get()
+        assert event.data['errors'] == []
+
     @responses.activate
     def test_html_response_for_js(self):
         responses.add(
