commit a9991129f8aa87eeeac302eaea9fb65cdc049c9e
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Apr 24 13:44:59 2019 -0700

    feat(incidents): Add container component for incidents (#12917)
    
    Add container for the incidents list and detail views behind the
    organization:incidents feature flag.

diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index f1e35e5f41..35e81bcd0f 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -65,6 +65,7 @@ default_manager.add('organizations:incidents', OrganizationFeature)  # NOQA
 default_manager.add('organizations:integrations-issue-basic', OrganizationFeature)  # NOQA
 default_manager.add('organizations:integrations-issue-sync', OrganizationFeature)  # NOQA
 default_manager.add('organizations:internal-catchall', OrganizationFeature)  # NOQA
+default_manager.add('organizations:incidents', OrganizationFeature)  # NOQA
 default_manager.add('organizations:sentry-apps', OrganizationFeature)  # NOQA
 default_manager.add('organizations:invite-members', OrganizationFeature)  # NOQA
 default_manager.add('organizations:large-debug-files', OrganizationFeature)  # NOQA
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 8afd0350ff..bcb8f1f2bd 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -908,6 +908,21 @@ function routes() {
               component={errorHandler(LazyLoad)}
             />
           </Route>
+          <Route
+            path="/organizations/:orgId/incidents/"
+            componentPromise={() =>
+              import(/* webpackChunkName: "OrganizationIncidentsContainer" */ './views/organizationIncidents')
+            }
+            component={errorHandler(LazyLoad)}
+          >
+            <IndexRoute
+              componentPromise={() =>
+                import(/* webpackChunkName: "OrganizationIncidents" */ './views/organizationIncidents/list')
+              }
+              component={errorHandler(LazyLoad)}
+            />
+          </Route>
+
           <Route
             path="/organizations/:orgId/projects/:projectId/getting-started/"
             component={errorHandler(ProjectGettingStarted)}
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/index.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/index.jsx
new file mode 100644
index 0000000000..9a75a88c68
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationIncidents/index.jsx
@@ -0,0 +1,43 @@
+import React from 'react';
+
+import SentryTypes from 'app/sentryTypes';
+import Feature from 'app/components/acl/feature';
+import Alert from 'app/components/alert';
+import withOrganization from 'app/utils/withOrganization';
+import {t} from 'app/locale';
+import {PageContent, PageHeader} from 'app/styles/organization';
+import PageHeading from 'app/components/pageHeading';
+import BetaTag from 'app/components/betaTag';
+
+class OrganizationIncidentsContainer extends React.Component {
+  static propTypes = {
+    organization: SentryTypes.Organization.isRequired,
+  };
+
+  renderNoAccess() {
+    return <Alert type="warning">{t("You don't have access to this feature")}</Alert>;
+  }
+
+  render() {
+    const {organization, children} = this.props;
+
+    return (
+      <PageContent>
+        <Feature
+          features={['organizations:incidents']}
+          organization={organization}
+          renderDisabled={this.renderNoAccess}
+        >
+          <PageHeader>
+            <PageHeading withMargins>
+              {t('Incidents')} <BetaTag />
+            </PageHeading>
+          </PageHeader>
+          {children}
+        </Feature>
+      </PageContent>
+    );
+  }
+}
+
+export default withOrganization(OrganizationIncidentsContainer);
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx
new file mode 100644
index 0000000000..aa6a422e26
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx
@@ -0,0 +1,7 @@
+import React from 'react';
+
+export default class OrganizationIncidents extends React.Component {
+  render() {
+    return <div />;
+  }
+}
diff --git a/tests/js/spec/views/organizationIncidents/index.spec.jsx b/tests/js/spec/views/organizationIncidents/index.spec.jsx
new file mode 100644
index 0000000000..5dc59adb14
--- /dev/null
+++ b/tests/js/spec/views/organizationIncidents/index.spec.jsx
@@ -0,0 +1,17 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import OrganizationIncidentsContainer from 'app/views/organizationIncidents/index';
+
+describe('OrganizationIncidentsContainer', function() {
+  describe('no access without feature flag', function() {
+    it('display no access message', async function() {
+      const organization = TestStubs.Organization({projects: [TestStubs.Project()]});
+      const wrapper = mount(
+        <OrganizationIncidentsContainer />,
+        TestStubs.routerContext([{organization}])
+      );
+      expect(wrapper.text()).toBe("You don't have access to this feature");
+    });
+  });
+});
