commit c49c3df3da9ca81321cd0946326f7c8e4950f698
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Oct 18 13:19:23 2010 -0700

    Don't show site if it's not set

diff --git a/sentry/models.py b/sentry/models.py
index 7d34aee90f..95dc61c87e 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -170,7 +170,9 @@ class GroupedMessage(MessageBase):
 
         obj_request = message.request
 
-        subject = '[%s] Error (%s IP): %s' % (message.site, (obj_request.META.get('REMOTE_ADDR') in settings.INTERNAL_IPS and 'internal' or 'EXTERNAL'), obj_request.path)
+        subject = 'Error (%s IP): %s' % ((obj_request.META.get('REMOTE_ADDR') in settings.INTERNAL_IPS and 'internal' or 'EXTERNAL'), obj_request.path)
+        if message.site:
+            subject  = '[%s] %s' % (message.site, subject)
         try:
             request_repr = repr(obj_request)
         except:
diff --git a/sentry/tests/tests.py b/sentry/tests/tests.py
index 9ec37c7fe5..e23cc44b6d 100644
--- a/sentry/tests/tests.py
+++ b/sentry/tests/tests.py
@@ -758,7 +758,7 @@ class SentryMailTest(TestCase):
 
         self.assertTrue('Traceback (most recent call last):' in out.body)
         self.assertTrue("COOKIES:{'commenter_name': 'admin'," in out.body, out.body)
-        self.assertEquals(out.subject, '[Django] Error (EXTERNAL IP): /group/1')
+        self.assertEquals(out.subject, 'Error (EXTERNAL IP): /group/1')
 
     def test_mail_on_creation(self):
         conf.MAIL = True
@@ -773,7 +773,7 @@ class SentryMailTest(TestCase):
 
         self.assertTrue('Traceback (most recent call last):' in out.body)
         self.assertTrue("<Request" in out.body)
-        self.assertEquals(out.subject, '[Django] Error (EXTERNAL IP): /trigger-500')
+        self.assertEquals(out.subject, '[example.com] Error (EXTERNAL IP): /trigger-500')
 
     def test_mail_on_duplication(self):
         conf.MAIL = True
@@ -797,7 +797,7 @@ class SentryMailTest(TestCase):
 
         self.assertTrue('Traceback (most recent call last):' in out.body)
         self.assertTrue("<Request" in out.body)
-        self.assertEquals(out.subject, '[Django] Error (EXTERNAL IP): /trigger-500')
+        self.assertEquals(out.subject, '[example.com] Error (EXTERNAL IP): /trigger-500')
 
     def test_url_prefix(self):
         conf.URL_PREFIX = 'http://example.com'
