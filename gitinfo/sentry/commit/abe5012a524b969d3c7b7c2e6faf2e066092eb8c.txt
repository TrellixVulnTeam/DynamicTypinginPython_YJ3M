commit abe5012a524b969d3c7b7c2e6faf2e066092eb8c
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 29 23:12:31 2014 -0800

    Some initial working stream components

diff --git a/package.json b/package.json
index 6ac570a473..3cc6ace057 100644
--- a/package.json
+++ b/package.json
@@ -30,6 +30,7 @@
     "karma-sinon": "^1.0.3",
     "less": "1.7.0",
     "mocha": "1.9.x",
+    "moment": "^2.8.4",
     "react": "^0.12.2",
     "react-router": "^0.11.6",
     "sinon": "^1.10.3",
diff --git a/src/sentry/static/sentry/app-react/components/count.jsx b/src/sentry/static/sentry/app-react/components/count.jsx
new file mode 100644
index 0000000000..c573afb1ea
--- /dev/null
+++ b/src/sentry/static/sentry/app-react/components/count.jsx
@@ -0,0 +1,44 @@
+/*** @jsx React.DOM */
+'use strict';
+
+var React = require("react");
+
+var Count = React.createClass({
+  numberFormats: [
+      [1000000000, 'b'],
+      [1000000, 'm'],
+      [1000, 'k']
+  ],
+
+  floatFormat: function(number, places) {
+      var multi = Math.pow(10, places);
+      return parseInt(number * multi, 10) / multi;
+  },
+
+  formatNumber: function(number){
+      var b, x, y, o, p;
+
+      number = parseInt(number, 10);
+
+      for (var i=0; (b=this.numberFormats[i]); i++){
+          x = b[0];
+          y = b[1];
+          o = Math.floor(number / x);
+          p = number % x;
+          if (o > 0) {
+              if (o / 10 > 1 || !p)
+                  return '' + o + y;
+              return '' + this.floatFormat(number / x, 1) + y;
+          }
+      }
+      return '' + number;
+  },
+
+  render: function() {
+    return (
+      <span>{this.formatNumber(this.props.value)}</span>
+    );
+  }
+});
+
+module.exports = Count;
diff --git a/src/sentry/static/sentry/app-react/components/stream.jsx b/src/sentry/static/sentry/app-react/components/stream.jsx
index 54d358f092..7b52004e5b 100644
--- a/src/sentry/static/sentry/app-react/components/stream.jsx
+++ b/src/sentry/static/sentry/app-react/components/stream.jsx
@@ -1,17 +1,190 @@
 /*** @jsx React.DOM */
 var React = require("react");
 
-var StreamActions = require("./streamActions")
+var Count = require("./count");
+var TimeSince = require("./timeSince");
+
+var Actions = React.createClass({
+  render: function() {
+    return (
+      <div className="stream-actions">
+        <div className="stream-actions-left stream-actions-cell">
+          <div className="checkbox">
+            <input type="checkbox" className="chk-select-all"/>
+          </div>
+          <div className="btn-group">
+            <a href="javascript:void(0)" className="btn btn-default btn-sm action action-resolve">
+                <i aria-hidden="true" className="icon-checkmark"></i>
+            </a>
+            <a href="javascript:void(0)" className="btn btn-default btn-sm action action-bookmark">
+                <span className="icon icon-bookmark"></span>
+            </a>
+            <a className="btn btn-default btn-sm hidden-xs action action-more dropdown-toggle" data-toggle="dropdown">
+              <span className="icon-ellipsis"></span>
+            </a>
+
+            <ul className="dropdown-menu more-menu">
+              <li><a href="javascript:void(0)" className="action action-merge">Merge Events</a></li>
+              <li><a href="javascript:void(0)" className="action action-remove-bookmark">Remove from Bookmarks</a></li>
+              <li className="divider"></li>
+              <li><a href="javascript:void(0)" className="action action-delete">Delete Events</a></li>
+            </ul>
+          </div>
+
+          <div className="btn-group">
+            <a href="javascript:void(0)" className="btn btn-default btn-sm hidden-xs realtime-control">
+              <span className="icon icon-pause"></span>
+            </a>
+          </div>
+          <div className="btn-group">
+            <a href="#" className="btn dropdown-toggle btn-sm" data-toggle="dropdown">
+              <span className="hidden-sm hidden-xs">Sort by:</span> sortLabel
+              <span aria-hidden="true" className="icon-arrow-down"></span>
+            </a>
+            <ul className="dropdown-menu">
+              <li className="active"><a href="?sort=priority">Priority</a></li>
+              <li><a href="?sort=date">Last Seen</a></li>
+              <li><a href="?sort=new">First Seen</a></li>
+              <li><a href="?sort=freq">Frequency</a></li>
+            </ul>
+          </div>
+          <div className="btn-group">
+            <a href="#" className="btn dropdown-toggle btn-sm" onclick="" data-toggle="dropdown">
+              All time
+            <span aria-hidden="true" className="icon-arrow-down"></span></a>
+            <div className="datepicker-box dropdown-menu" id="daterange">
+              <form method="GET" action=".">
+                <div className="input">
+                  <div className="inline-inputs">
+                    <input data-toggle="datepicker" data-date-format="yyyy-mm-dd"name="df" className="form-control date" type="text" placeholder="Date" />
+                    <input className="time form-control" type="text" name="tf" placeholder="Time" />
+                    to
+                    <input data-toggle="datepicker" data-date-format="yyyy-mm-dd" name="dt" className="date form-control" type="text" placeholder="Date"/>
+                    <input className="time form-control" type="text" name="tt" placeholder="Time" />
+                  </div>
+                  <div className="help-block">All events are represented in UTC time.</div>
+                </div>
+                <div className="submit">
+                  <div className="pull-right">
+                    <button className="btn btn-default btn-sm">Clear</button>
+                    <button className="btn btn-primary btn-sm">Apply</button>
+                  </div>
+                  <div className="radio-inputs">
+                    <label className="radio">
+                      <input type="radio" name="date_type" value="last_seen" /> Last Seen
+                    </label>
+                    <label className="radio">
+                      <input type="radio" name="date_type" value="first_seen" /> First Seen
+                    </label>
+                  </div>
+                </div>
+              </form>
+            </div>
+          </div>
+        </div>
+        <div className="hidden-sm hidden-xs stream-actions-assignee stream-actions-cell">
+        </div>
+        <div className="hidden-sm hidden-xs stream-actions-graph stream-actions-cell">
+          <ul className="toggle-graph">
+            <li><a>24h</a></li>
+            <li><a>30d</a></li>
+          </ul>
+        </div>
+        <div className="stream-actions-occurrences stream-actions-cell align-center hidden-xs"> events</div>
+        <div className="stream-actions-users stream-actions-cell align-center hidden-xs"> users</div>
+      </div>
+    );
+  }
+});
+
+var Aggregate = React.createClass({
+  render: function() {
+    var data = this.props.data,
+        userCount = 0;
+
+    if (data.tags['sentry:user'] !== undefined) {
+      userCount = data.tags['sentry:user'].count;
+    }
+
+    return (
+      <li className="group">
+        <div className="event-details event-cell">
+          <div className="checkbox">
+              <input type="checkbox" className="chk-select" value="{data.id}" />
+          </div>
+          <h3><a href="">
+            <span className="icon icon-bookmark"></span>
+            {data.title}
+          </a></h3>
+          <div className="event-message">
+            <span className="message">{data.culprit}</span>
+          </div>
+          <div className="event-meta">
+            <span className="last-seen"><TimeSince date={data.lastSeen} /></span>
+            &nbsp;&mdash;&nbsp;
+            <span className="first-seen">from <TimeSince date={data.firstSeen} /></span>
+          </div>
+        </div>
+        <div className="event-assignee event-cell hidden-xs hidden-sm">
+
+        </div>
+        <div className="hidden-sm hidden-xs event-graph align-right event-cell">
+
+        </div>
+        <div className="hidden-xs event-occurrences align-center event-cell">
+          <Count value={data.count} />
+        </div>
+        <div className="hidden-xs event-users align-center event-cell">
+          <Count value={userCount} />
+        </div>
+      </li>
+    );
+  }
+});
+
+var AggregateList = React.createClass({
+  render: function() {
+    var nodes = this.props.data.map(function(aggregate) {
+      return (
+        <Aggregate data={aggregate} />
+      );
+    });
+
+    return (
+      <ul className="group-list">
+        {nodes}
+      </ul>
+    );
+  }
+});
 
 var Stream = React.createClass({
+  getInitialState: function() {
+    return {data: this.props.data || []};
+  },
+  componentDidMount: function() {
+    $.ajax({
+      url: this.props.url,
+      dataType: 'json',
+      success: function(data) {
+        this.setState({data: data});
+      }.bind(this),
+      error: function(xhr, status, err) {
+        console.error(this.props.url, status, err.toString());
+      }.bind(this)
+    });
+  },
   render: function() {
     return (
-      <div class="group-header-container" data-spy="affix" data-offset-top="134">
-        <div class="container">
-          <div class="group-header">
-            <StreamActions/>
+      <div>
+        <div className="group-header-container" data-spy="affix" data-offset-top="134">
+          <div className="container">
+            <div className="group-header">
+              <Actions/>
+            </div>
           </div>
         </div>
+        <AggregateList data={this.state.data} />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app-react/components/streamActions.jsx b/src/sentry/static/sentry/app-react/components/streamActions.jsx
deleted file mode 100644
index 06f1a0ed5e..0000000000
--- a/src/sentry/static/sentry/app-react/components/streamActions.jsx
+++ /dev/null
@@ -1,97 +0,0 @@
-/*** @jsx React.DOM */
-var React = require("react");
-
-var StreamActions = React.createClass({
-  render: function() {
-    return (
-      <div className="stream-actions">
-        <div className="stream-actions-left stream-actions-cell">
-          <div className="checkbox">
-            <input type="checkbox" className="chk-select-all"/>
-          </div>
-          <div className="btn-group">
-            <a href="javascript:void(0)" className="btn btn-default btn-sm action action-resolve">
-                <i aria-hidden="true" className="icon-checkmark"></i>
-            </a>
-            <a href="javascript:void(0)" className="btn btn-default btn-sm action action-bookmark">
-                <span className="icon icon-bookmark"></span>
-            </a>
-            <a className="btn btn-default btn-sm hidden-xs action action-more dropdown-toggle" data-toggle="dropdown">
-              <span className="icon-ellipsis"></span>
-            </a>
-
-            <ul className="dropdown-menu more-menu">
-              <li><a href="javascript:void(0)" className="action action-merge">Merge Events</a></li>
-              <li><a href="javascript:void(0)" className="action action-remove-bookmark">Remove from Bookmarks</a></li>
-              <li className="divider"></li>
-              <li><a href="javascript:void(0)" className="action action-delete">Delete Events</a></li>
-            </ul>
-          </div>
-
-          <div className="btn-group">
-            <a href="javascript:void(0)" className="btn btn-default btn-sm hidden-xs realtime-control">
-              <span className="icon icon-pause"></span>
-            </a>
-          </div>
-          <div className="btn-group">
-            <a href="#" className="btn dropdown-toggle btn-sm" data-toggle="dropdown">
-              <span className="hidden-sm hidden-xs">Sort by:</span> sortLabel
-              <span aria-hidden="true" className="icon-arrow-down"></span>
-            </a>
-            <ul className="dropdown-menu">
-              <li className="active"><a href="?sort=priority">Priority</a></li>
-              <li><a href="?sort=date">Last Seen</a></li>
-              <li><a href="?sort=new">First Seen</a></li>
-              <li><a href="?sort=freq">Frequency</a></li>
-            </ul>
-          </div>
-          <div className="btn-group">
-            <a href="#" className="btn dropdown-toggle btn-sm" onclick="" data-toggle="dropdown">
-              All time
-            <span aria-hidden="true" className="icon-arrow-down"></span></a>
-            <div className="datepicker-box dropdown-menu" id="daterange">
-              <form method="GET" action=".">
-                <div className="input">
-                  <div className="inline-inputs">
-                    <input data-toggle="datepicker" data-date-format="yyyy-mm-dd"name="df" className="form-control date" type="text" placeholder="Date" />
-                    <input className="time form-control" type="text" name="tf" placeholder="Time" />
-                    to
-                    <input data-toggle="datepicker" data-date-format="yyyy-mm-dd" name="dt" className="date form-control" type="text" placeholder="Date"/>
-                    <input className="time form-control" type="text" name="tt" placeholder="Time" />
-                  </div>
-                  <div className="help-block">All events are represented in UTC time.</div>
-                </div>
-                <div className="submit">
-                  <div className="pull-right">
-                    <button className="btn btn-default btn-sm">Clear</button>
-                    <button className="btn btn-primary btn-sm">Apply</button>
-                  </div>
-                  <div className="radio-inputs">
-                    <label className="radio">
-                      <input type="radio" name="date_type" value="last_seen" /> Last Seen
-                    </label>
-                    <label className="radio">
-                      <input type="radio" name="date_type" value="first_seen" /> First Seen
-                    </label>
-                  </div>
-                </div>
-              </form>
-            </div>
-          </div>
-        </div>
-        <div className="hidden-sm hidden-xs stream-actions-assignee stream-actions-cell">
-        </div>
-        <div className="hidden-sm hidden-xs stream-actions-graph stream-actions-cell">
-          <ul className="toggle-graph">
-            <li><a>24h</a></li>
-            <li><a>30d</a></li>
-          </ul>
-        </div>
-        <div className="stream-actions-occurrences stream-actions-cell align-center hidden-xs"> events</div>
-        <div className="stream-actions-users stream-actions-cell align-center hidden-xs"> users</div>
-      </div>
-    );
-  }
-});
-
-module.exports = StreamActions
diff --git a/src/sentry/static/sentry/app-react/components/timeSince.jsx b/src/sentry/static/sentry/app-react/components/timeSince.jsx
new file mode 100644
index 0000000000..44a47018ce
--- /dev/null
+++ b/src/sentry/static/sentry/app-react/components/timeSince.jsx
@@ -0,0 +1,39 @@
+/*** @jsx React.DOM */
+'use strict';
+
+var React = require("react");
+var moment = require("moment");
+
+var TimeSince = React.createClass({
+  componentDidMount: function() {
+    var delay = 2600;
+
+    this.ticker = setInterval(this.ensureValidity, delay);
+  },
+
+  componentWillUnmount: function() {
+    if (this.ticker) {
+      clearInterval(this.ticker);
+      this.ticker = null;
+    }
+  },
+
+  ensureValidity: function() {
+    // TODO(dcramer): this should ensure we actually *need* to update the value
+    this.forceUpdate();
+  },
+
+  render: function() {
+    var date = this.props.date;
+
+    if (typeof date === "string" || typeof date === "number") {
+      date = new Date(date);
+    }
+
+    return (
+      <time>{moment.utc(date).fromNow()}</time>
+    );
+  }
+});
+
+module.exports = TimeSince;
diff --git a/src/sentry/templates/sentry/groups/group_list.html b/src/sentry/templates/sentry/groups/group_list.html
index b08c4d6612..7ee160c417 100644
--- a/src/sentry/templates/sentry/groups/group_list.html
+++ b/src/sentry/templates/sentry/groups/group_list.html
@@ -13,7 +13,9 @@
     <div id="blk_stream"></div>
     <script>
     $(function(){
-      React.renderComponent(Stream(), document.getElementById('blk_stream'));
+      React.render(React.createFactory(Stream)({
+      	data: {% serialize event_list %}
+      }), document.getElementById('blk_stream'));
     });
     </script>
 {% endblock %}
diff --git a/webpack.config.js b/webpack.config.js
index 0303993df9..f9a651f0b5 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -15,7 +15,7 @@ function vendorFile(name) {
 module.exports = {
   entry: {
     "app-react": file("app-react/main.jsx"),
-    "vendor": ["react", "react-router", "jquery"]
+    "vendor": ["react", "react-router", "jquery", "moment"]
   },
   module: {
     loaders: [
