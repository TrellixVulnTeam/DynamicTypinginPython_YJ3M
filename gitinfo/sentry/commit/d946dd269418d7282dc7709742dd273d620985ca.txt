commit d946dd269418d7282dc7709742dd273d620985ca
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Mar 18 02:18:47 2014 -0700

    Revoke sudo cookie when logging out to clean up after outselves

diff --git a/src/sentry/middleware/sudo.py b/src/sentry/middleware/sudo.py
index 5fad69729e..54736df798 100644
--- a/src/sentry/middleware/sudo.py
+++ b/src/sentry/middleware/sudo.py
@@ -10,10 +10,20 @@ from sentry.utils.sudo import has_sudo_privileges, SUDO_COOKIE_NAME
 
 class SudoMiddleware(object):
     def process_request(self, request):
+        request._sentry_sudo = None
         request.is_sudo = lambda: has_sudo_privileges(request)
 
     def process_response(self, request, response):
-        if hasattr(request, '_sentry_sudo_token'):
+        if request._sentry_sudo is None:
+            return response
+
+        # We have explicitly had sudo revoked, so clean up cookie
+        if request._sentry_sudo is False and SUDO_COOKIE_NAME in request.COOKIES:
+            response.delete_cookie(SUDO_COOKIE_NAME)
+            return response
+
+        # Sudo mode has been granted, and we have a token to send back to the user agent
+        if request._sentry_sudo is True and hasattr(request, '_sentry_sudo_token'):
             token = request._sentry_sudo_token
             max_age = request._sentry_sudo_max_age
             response.set_cookie(
@@ -22,4 +32,5 @@ class SudoMiddleware(object):
                 secure=request.is_secure(),
                 httponly=True,  # Not accessible by JavaScript
             )
+
         return response
diff --git a/src/sentry/utils/sudo.py b/src/sentry/utils/sudo.py
index 0c2ba76821..7aead3ff3f 100644
--- a/src/sentry/utils/sudo.py
+++ b/src/sentry/utils/sudo.py
@@ -31,11 +31,15 @@ def grant_sudo_privileges(request, max_age=SUDO_COOKIE_MAX_AGE):
     return token
 
 
+def revoke_sudo_privileges(request):
+    request._sentry_sudo = False
+
+
 def has_sudo_privileges(request):
     """
     Check if a request is allowed to perform sudo actions
     """
-    if not hasattr(request, '_sentry_sudo'):
+    if request._sentry_sudo is None:
         try:
             is_sudo = (
                 request.user.is_authenticated() and
diff --git a/src/sentry/web/frontend/accounts.py b/src/sentry/web/frontend/accounts.py
index 6e63dd2083..8d4eaae235 100644
--- a/src/sentry/web/frontend/accounts.py
+++ b/src/sentry/web/frontend/accounts.py
@@ -28,7 +28,8 @@ from sentry.web.forms.accounts import (
 from sentry.web.helpers import render_to_response
 from sentry.utils.auth import get_auth_providers, login as login_user
 from sentry.utils.safe import safe_execute
-from sentry.utils.sudo import grant_sudo_privileges, sudo_required
+from sentry.utils.sudo import (
+    grant_sudo_privileges, revoke_sudo_privileges, sudo_required)
 
 
 @csrf_protect
@@ -125,6 +126,7 @@ def logout(request):
     from django.contrib.auth import logout
 
     logout(request)
+    revoke_sudo_privileges(request)
 
     return HttpResponseRedirect(reverse('sentry'))
 
