commit f1705c118bfb3c3a0ff145005b5e377fdeab71e6
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 16 22:57:15 2012 -0700

    Add tests for remove team

diff --git a/sentry/web/forms/__init__.py b/sentry/web/forms/__init__.py
index e33b8e238c..7a4ee74e08 100644
--- a/sentry/web/forms/__init__.py
+++ b/sentry/web/forms/__init__.py
@@ -10,7 +10,7 @@ from django.contrib.auth.models import User
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.conf import settings
-from sentry.models import Project, Team
+from sentry.models import Project
 from sentry.interfaces import Http
 from sentry.permissions import can_set_public_projects
 from sentry.web.forms.fields import RadioFieldRenderer, UserField
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index dbfc93dca5..8c1a1d581d 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -92,13 +92,11 @@ class NewTeamTest(BaseTeamTest):
 
 
 class ManageTeamTest(BaseTeamTest):
-    @mock.patch('sentry.web.frontend.teams.can_create_teams', mock.Mock(return_value=True))
     def test_loads(self):
         resp = self.client.get(reverse('sentry-manage-team', args=[self.team.slug]))
         self.assertEquals(resp.status_code, 200)
         self.assertTemplateUsed(resp, 'sentry/teams/manage.html')
 
-    @mock.patch('sentry.web.frontend.teams.can_create_teams', mock.Mock(return_value=True))
     def test_valid_params(self):
         path = reverse('sentry-manage-team', args=[self.team.slug])
         resp = self.client.post(path, {
@@ -108,3 +106,25 @@ class ManageTeamTest(BaseTeamTest):
         self.assertEquals(resp['Location'], 'http://testserver' + path + '?success=1')
         team = Team.objects.get(pk=self.team.pk)
         self.assertEquals(team.name, 'bar')
+
+
+class RemoveTeamTest(BaseTeamTest):
+    @mock.patch('sentry.web.frontend.teams.can_remove_team', mock.Mock(return_value=False))
+    def test_missing_permission(self):
+        resp = self.client.post(reverse('sentry-remove-team', args=[self.team.slug]))
+        self.assertEquals(resp.status_code, 302)
+        self.assertEquals(resp['Location'], 'http://testserver' + reverse('sentry'))
+
+    @mock.patch('sentry.web.frontend.teams.can_remove_team', mock.Mock(return_value=True))
+    def test_loads(self):
+        resp = self.client.get(reverse('sentry-remove-team', args=[self.team.slug]))
+        self.assertEquals(resp.status_code, 200)
+        self.assertTemplateUsed(resp, 'sentry/teams/remove.html')
+
+    @mock.patch('sentry.web.frontend.teams.can_remove_team', mock.Mock(return_value=True))
+    def test_valid_params(self):
+        path = reverse('sentry-remove-team', args=[self.team.slug])
+        resp = self.client.post(path, {'a': 'b'})  # HACK: pass a param since we're faking CSRF to get the form to load
+        self.assertNotEquals(resp.status_code, 200)
+        self.assertEquals(resp['Location'], 'http://testserver' + reverse('sentry-team-list'))
+        self.assertFalse(Team.objects.filter(pk=self.team.pk).exists())
