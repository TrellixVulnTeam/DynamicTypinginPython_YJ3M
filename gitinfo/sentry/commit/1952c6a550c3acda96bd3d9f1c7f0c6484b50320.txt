commit 1952c6a550c3acda96bd3d9f1c7f0c6484b50320
Author: Mark Story <mark@mark-story.com>
Date:   Mon Oct 29 19:46:36 2018 +0000

    fix(integrations) Move integration sucess dialog to django template (#10303)
    
    This improves the aesthetics of this modal window should someone see it.
    I've also fixed form errors not displaying when GitHub:enterprise
    connection form has validation errors.
    
    Fixes APP-670
    Fixes APP-643

diff --git a/src/sentry/integrations/github_enterprise/integration.py b/src/sentry/integrations/github_enterprise/integration.py
index 9359e2f2bd..26046e50d6 100644
--- a/src/sentry/integrations/github_enterprise/integration.py
+++ b/src/sentry/integrations/github_enterprise/integration.py
@@ -212,29 +212,30 @@ class InstallationForm(forms.Form):
 
 class InstallationConfigView(PipelineView):
     def dispatch(self, request, pipeline):
-        form = InstallationForm(request.POST)
-        if form.is_valid():
-            form_data = form.cleaned_data
-            form_data['url'] = urlparse(form_data['url']).netloc
-
-            pipeline.bind_state('installation_data', form_data)
-
-            pipeline.bind_state('oauth_config_information', {
-                "access_token_url": u"https://{}/login/oauth/access_token".format(form_data.get('url')),
-                "authorize_url": u"https://{}/login/oauth/authorize".format(form_data.get('url')),
-                "client_id": form_data.get('client_id'),
-                "client_secret": form_data.get('client_secret'),
-                "verify_ssl": form_data.get('verify_ssl'),
-            })
-
-            return pipeline.next_step()
-
-        project_form = InstallationForm()
+        if request.method == 'POST':
+            form = InstallationForm(request.POST)
+            if form.is_valid():
+                form_data = form.cleaned_data
+                form_data['url'] = urlparse(form_data['url']).netloc
+
+                pipeline.bind_state('installation_data', form_data)
+
+                pipeline.bind_state('oauth_config_information', {
+                    "access_token_url": u"https://{}/login/oauth/access_token".format(form_data.get('url')),
+                    "authorize_url": u"https://{}/login/oauth/authorize".format(form_data.get('url')),
+                    "client_id": form_data.get('client_id'),
+                    "client_secret": form_data.get('client_secret'),
+                    "verify_ssl": form_data.get('verify_ssl'),
+                })
+
+                return pipeline.next_step()
+        else:
+            form = InstallationForm()
 
         return render_to_response(
             template='sentry/integrations/github-enterprise-config.html',
             context={
-                'form': project_form,
+                'form': form,
             },
             request=request,
         )
diff --git a/src/sentry/integrations/pipeline.py b/src/sentry/integrations/pipeline.py
index 4d6701d105..68b1859323 100644
--- a/src/sentry/integrations/pipeline.py
+++ b/src/sentry/integrations/pipeline.py
@@ -3,35 +3,17 @@ from __future__ import absolute_import, print_function
 __all__ = ['IntegrationPipeline']
 
 from django.db import IntegrityError
-from django.http import HttpResponse
 from django.utils import timezone
 from django.utils.translation import ugettext as _
 
 from sentry.api.serializers import serialize
 from sentry.constants import ObjectStatus
+from sentry.integrations.exceptions import IntegrationError
 from sentry.models import Identity, IdentityProvider, IdentityStatus, Integration
 from sentry.pipeline import Pipeline
-from sentry.utils import json
-from sentry.integrations.exceptions import IntegrationError
+from sentry.web.helpers import render_to_response
 from . import default_manager
 
-DIALOG_RESPONSE = """
-<!doctype html>
-<html lang="en">
-<head>
-  <meta charset="utf-8" />
-  <title>Sentry - Integration Setup Complete</title>
-</head>
-<body>
-  <script>
-  window.opener.postMessage({json}, document.origin);
-  window.close();
-  </script>
-  <p>You can safely close this window now.</p>
-</body>
-</html>
-"""
-
 
 def ensure_integration(key, data):
     defaults = {
@@ -165,12 +147,13 @@ class IntegrationPipeline(Pipeline):
         return self._dialog_response(serialize(org_integration, self.request.user), True)
 
     def _dialog_response(self, data, success):
-        return HttpResponse(
-            DIALOG_RESPONSE.format(
-                json=json.dumps({
-                    'success': success,
-                    'data': data,
-                })
-            ),
-            content_type='text/html',
-        )
+        context = {
+            'payload': {
+                'success': success,
+                'data': data
+            }
+        }
+        return render_to_response(
+            'sentry/integrations/dialog-complete.html',
+            context,
+            self.request)
diff --git a/src/sentry/templates/sentry/integrations/dialog-complete.html b/src/sentry/templates/sentry/integrations/dialog-complete.html
new file mode 100644
index 0000000000..1f21b9e65f
--- /dev/null
+++ b/src/sentry/templates/sentry/integrations/dialog-complete.html
@@ -0,0 +1,17 @@
+{% extends "sentry/bases/modal.html" %}
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block wrapperclass %} narrow auth {% endblock %}
+{% block modal_header_signout %} {% endblock %}
+
+{% block title %} {% trans "Integration Setup Complete" %} | {{ block.super }} {% endblock %}
+
+{% block main %}
+<script>
+  window.opener.postMessage({{ payload|to_json }}, document.origin);
+  window.close();
+</script>
+
+<p>{% trans "You can safely close this window now." %}</p>
+{% endblock %}
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 3b80fb435d..27ebc39258 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -139,6 +139,8 @@ class BaseTestCase(Fixtures, Exam):
         request.META['REMOTE_ADDR'] = '127.0.0.1'
         request.META['SERVER_NAME'] = 'testserver'
         request.META['SERVER_PORT'] = 80
+        request.REQUEST = {}
+
         # order matters here, session -> user -> other things
         request.session = self.session
         request.auth = auth
