commit 33537d35c0ee21489d8776c1c8a6b54c75e3590b
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Tue Feb 12 17:49:49 2019 -0800

    feat(metrics): Add login attempts to metrics

diff --git a/src/sentry/web/frontend/auth_login.py b/src/sentry/web/frontend/auth_login.py
index bdf155ec3c..c72641ebe0 100644
--- a/src/sentry/web/frontend/auth_login.py
+++ b/src/sentry/web/frontend/auth_login.py
@@ -15,7 +15,7 @@ from sentry.http import get_server_hostname
 from sentry.models import AuthProvider, Organization, OrganizationStatus
 from sentry.web.forms.accounts import AuthenticationForm, RegistrationForm
 from sentry.web.frontend.base import BaseView
-from sentry.utils import auth
+from sentry.utils import auth, metrics
 from sentry.utils.sdk import capture_exception
 
 ERR_NO_SSO = _(
@@ -151,6 +151,7 @@ class AuthLoginView(BaseView):
                 login_form.errors['__all__'] = [
                     u'You have made too many login attempts. Please try again later.'
                 ]
+                metrics.incr('login.attempt', instance='rate_limited', skip_internal=True)
             elif login_form.is_valid():
                 user = login_form.get_user()
 
@@ -159,11 +160,14 @@ class AuthLoginView(BaseView):
                     user,
                     organization_id=organization.id if organization else None,
                 )
+                metrics.incr('login.attempt', instance='success', skip_internal=True)
 
                 if not user.is_active:
                     return self.redirect(reverse('sentry-reactivate-account'))
 
                 return self.redirect(auth.get_login_redirect(request))
+            else:
+                metrics.incr('login.attempt', instance='failure', skip_internal=True)
 
         context = {
             'op': op or 'login',
