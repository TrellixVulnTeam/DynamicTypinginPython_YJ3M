commit e87400e2d4219e5bc55306b24631cfa6c96f2e85
Author: Dena Mwangi <dena@getsentry.com>
Date:   Wed Mar 28 12:55:38 2018 -0700

    feat(assistant): Add click tracking events for assistant (#7764)
    
    * Add click tracking events for assistant

diff --git a/src/sentry/static/sentry/app/components/assistant/helper.jsx b/src/sentry/static/sentry/app/components/assistant/helper.jsx
index c2a4b3983a..0b0e384966 100644
--- a/src/sentry/static/sentry/app/components/assistant/helper.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/helper.jsx
@@ -10,6 +10,7 @@ import GuideStore from '../../stores/guideStore';
 import CueIcon from './cueIcon';
 import AssistantContainer from './assistantContainer';
 import CloseIcon from './closeIcon';
+import HookStore from '../../stores/hookStore';
 
 // AssistantHelper is responsible for rendering the cue message, guide drawer and support drawer.
 const AssistantHelper = createReactClass({
@@ -46,10 +47,17 @@ const AssistantHelper = createReactClass({
   },
 
   handleDrawerOpen() {
+    let {currentGuide} = this.state;
     this.setState({
       isDrawerOpen: true,
     });
     nextStep();
+    HookStore.get('analytics:event').forEach(cb =>
+      cb('assistant.guide_opened', {
+        guide: currentGuide.id,
+        cue: currentGuide.cue,
+      })
+    );
   },
 
   handleSupportDrawerClose() {
@@ -61,6 +69,13 @@ const AssistantHelper = createReactClass({
   handleDismiss(e) {
     dismiss(this.state.currentGuide.id);
     closeGuide();
+    HookStore.get('analytics:event').forEach(cb =>
+      cb('assistant.guide_dismissed', {
+        guide: this.state.currentGuide.id,
+        cue: this.state.currentGuide.cue,
+        step: this.state.currentStep,
+      })
+    );
   },
 
   render() {
@@ -73,6 +88,15 @@ const AssistantHelper = createReactClass({
     let {currentGuide, currentStep, isDrawerOpen} = this.state;
     let isGuideCued = currentGuide !== null;
 
+    if (isGuideCued) {
+      HookStore.get('analytics:event').forEach(cb =>
+        cb('assistant.guide_cued', {
+          guide: currentGuide.id,
+          cue: currentGuide.cue,
+        })
+      );
+    }
+
     const cueText = isGuideCued ? currentGuide.cue : t('Need Help?');
     if (isDrawerOpen && (!isGuideCued || currentStep > 0)) {
       showDrawer = true;
diff --git a/src/sentry/static/sentry/app/stores/guideStore.jsx b/src/sentry/static/sentry/app/stores/guideStore.jsx
index dfe935a322..0ce7f18007 100644
--- a/src/sentry/static/sentry/app/stores/guideStore.jsx
+++ b/src/sentry/static/sentry/app/stores/guideStore.jsx
@@ -1,5 +1,6 @@
 import Reflux from 'reflux';
 import GuideActions from '../actions/guideActions';
+import HookStore from './hookStore';
 
 const GuideStore = Reflux.createStore({
   init() {
@@ -30,13 +31,27 @@ const GuideStore = Reflux.createStore({
   },
 
   onCloseGuide() {
-    this.state.guidesSeen.add(this.state.currentGuide.id);
+    let {currentGuide, guidesSeen} = this.state;
+    guidesSeen.add(currentGuide.id);
     this.updateCurrentGuide();
+    HookStore.get('analytics:event').forEach(cb =>
+      cb('assistant.guide_closed', {
+        guide: currentGuide.id,
+        cue: currentGuide.cue,
+      })
+    );
   },
 
   onNextStep() {
     this.state.currentStep += 1;
     this.trigger(this.state);
+    HookStore.get('analytics:event').forEach(cb =>
+      cb('assistant.guide_next', {
+        guide: this.state.currentGuide.id,
+        cue: this.state.currentGuide.cue,
+        step: this.state.currentStep,
+      })
+    );
   },
 
   onRegisterAnchor(anchor) {
