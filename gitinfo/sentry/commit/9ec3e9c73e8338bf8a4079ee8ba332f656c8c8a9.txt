commit 9ec3e9c73e8338bf8a4079ee8ba332f656c8c8a9
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Oct 4 10:16:16 2019 -0700

    fix(alerts): Rules that check if tags is (not) set do not requâ€¦ (#14946)
    
    This fixes a bug introduced with #14544 where making a rule with "is set" or "is not set" requires a value (even though logically it does not need one). The UI now hides the field, and the API no longer requires it in these cases.
    
    Closes SEN-1055

diff --git a/src/sentry/rules/conditions/tagged_event.py b/src/sentry/rules/conditions/tagged_event.py
index c1ae49afb6..5944917887 100644
--- a/src/sentry/rules/conditions/tagged_event.py
+++ b/src/sentry/rules/conditions/tagged_event.py
@@ -35,7 +35,16 @@ MATCH_CHOICES = OrderedDict(
 class TaggedEventForm(forms.Form):
     key = forms.CharField(widget=forms.TextInput())
     match = forms.ChoiceField(MATCH_CHOICES.items(), widget=forms.Select())
-    value = forms.CharField(widget=forms.TextInput())
+    value = forms.CharField(widget=forms.TextInput(), required=False)
+
+    def clean(self):
+        super(TaggedEventForm, self).clean()
+
+        match = self.cleaned_data.get("match")
+        value = self.cleaned_data.get("value")
+
+        if match not in (MatchType.IS_SET, MatchType.NOT_SET) and not value:
+            raise forms.ValidationError("This field is required.")
 
 
 class TaggedEventCondition(EventCondition):
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx
index b6affa02b0..592e9cf698 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx
@@ -88,6 +88,16 @@ class RuleNode extends React.Component {
       }
 
       const key = part.slice(1, -1);
+
+      // If matcher is "is set" or "is not set", then we do not want to show the value input
+      // because it is not required
+      if (
+        key === 'value' &&
+        (this.props.data.match === 'is' || this.props.data.match === 'ns')
+      ) {
+        return null;
+      }
+
       return formFields[key] ? this.getField(key, formFields[key]) : part;
     });
   }
diff --git a/tests/sentry/api/endpoints/test_project_rules.py b/tests/sentry/api/endpoints/test_project_rules.py
index a2bc249590..def6ff1fe5 100644
--- a/tests/sentry/api/endpoints/test_project_rules.py
+++ b/tests/sentry/api/endpoints/test_project_rules.py
@@ -180,3 +180,59 @@ class CreateProjectRuleTest(APITestCase):
         )
 
         assert response.status_code == 400, response.content
+
+    def test_match_values(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project()
+
+        conditions = [
+            {
+                "id": "sentry.rules.conditions.tagged_event.TaggedEventCondition",
+                "key": "foo",
+                "match": "is",
+            }
+        ]
+
+        actions = [{"id": "sentry.rules.actions.notify_event.NotifyEventAction"}]
+
+        url = reverse(
+            "sentry-api-0-project-rules",
+            kwargs={"organization_slug": project.organization.slug, "project_slug": project.slug},
+        )
+        response = self.client.post(
+            url,
+            data={
+                "name": "hello world",
+                "actionMatch": "any",
+                "actions": actions,
+                "conditions": conditions,
+                "frequency": 30,
+            },
+            format="json",
+        )
+
+        assert response.status_code == 200, response.content
+
+        # should fail if using another match type
+        conditions = [
+            {
+                "id": "sentry.rules.conditions.tagged_event.TaggedEventCondition",
+                "key": "foo",
+                "match": "eq",
+            }
+        ]
+
+        response = self.client.post(
+            url,
+            data={
+                "name": "hello world",
+                "actionMatch": "any",
+                "actions": actions,
+                "conditions": conditions,
+                "frequency": 30,
+            },
+            format="json",
+        )
+
+        assert response.status_code == 400, response.content
