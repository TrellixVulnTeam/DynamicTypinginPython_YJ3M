commit 01020e4ce93e501d18ddbc4fdbd4adf0350a549c
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Feb 18 22:04:18 2016 -0800

    Added handling for SYSTEM_KEY in more places.

diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index 79f19e4fc8..f177cd6ec5 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -5,6 +5,7 @@ from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
 from sentry.models import Organization, OrganizationStatus
+from sentry.models.apikey import SYSTEM_KEY
 
 
 class OrganizationPermission(ScopedPermission):
@@ -19,6 +20,8 @@ class OrganizationPermission(ScopedPermission):
         if request.auth:
             if self.is_project_key(request):
                 return False
+            if request.auth is SYSTEM_KEY:
+                return True
             return request.auth.organization_id == organization.id
 
         request.access = access.from_request(request, organization)
diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index c4516a9da1..2c39bf483d 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -5,6 +5,7 @@ from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
 from sentry.models import Project, ProjectStatus
+from sentry.models.apikey import SYSTEM_KEY
 
 
 class ProjectPermission(ScopedPermission):
@@ -19,6 +20,8 @@ class ProjectPermission(ScopedPermission):
         if request.auth:
             if self.is_project_key(request):
                 return request.auth.project_id == project.id
+            if request.auth is SYSTEM_KEY:
+                return True
             return request.auth.organization_id == project.organization_id
 
         request.access = access.from_request(request, project.organization)
diff --git a/src/sentry/api/bases/team.py b/src/sentry/api/bases/team.py
index 1c3dc918ed..e5a9f34cdd 100644
--- a/src/sentry/api/bases/team.py
+++ b/src/sentry/api/bases/team.py
@@ -5,6 +5,7 @@ from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
 from sentry.models import Team, TeamStatus
+from sentry.models.apikey import SYSTEM_KEY
 
 
 class TeamPermission(ScopedPermission):
@@ -19,6 +20,8 @@ class TeamPermission(ScopedPermission):
         if request.auth:
             if self.is_project_key(request):
                 return False
+            if request.auth is SYSTEM_KEY:
+                return True
             return request.auth.organization_id == team.organization_id
 
         request.access = access.from_request(request, team.organization)
diff --git a/src/sentry/api/bases/user.py b/src/sentry/api/bases/user.py
index 6f9e11c355..3341435a7c 100644
--- a/src/sentry/api/bases/user.py
+++ b/src/sentry/api/bases/user.py
@@ -4,10 +4,13 @@ from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
 from sentry.models import User
+from sentry.models.apikey import SYSTEM_KEY
 
 
 class UserPermission(ScopedPermission):
     def has_object_permission(self, request, view, user):
+        if request.auth is SYSTEM_KEY:
+            return True
         if request.auth:
             return False
         if request.is_superuser():
diff --git a/src/sentry/api/endpoints/organization_index.py b/src/sentry/api/endpoints/organization_index.py
index 8df629bcbc..40527380b5 100644
--- a/src/sentry/api/endpoints/organization_index.py
+++ b/src/sentry/api/endpoints/organization_index.py
@@ -59,7 +59,7 @@ class OrganizationIndexEndpoint(Endpoint):
                 queryset = queryset.filter(
                     id=request.auth.project.organization_id
                 )
-            else:
+            elif request.auth.organization is not None:
                 queryset = queryset.filter(
                     id=request.auth.organization.id
                 )
diff --git a/src/sentry/api/endpoints/organization_projects.py b/src/sentry/api/endpoints/organization_projects.py
index af9b168230..68885740e0 100644
--- a/src/sentry/api/endpoints/organization_projects.py
+++ b/src/sentry/api/endpoints/organization_projects.py
@@ -37,7 +37,7 @@ class OrganizationProjectsEndpoint(OrganizationEndpoint):
             if hasattr(request.auth, 'project'):
                 team_list = [request.auth.project.team]
                 project_list = [request.auth.project]
-            else:
+            elif request.auth.organization is not None:
                 org = request.auth.organization
                 team_list = list(Team.objects.filter(
                     organization=org,
@@ -45,6 +45,9 @@ class OrganizationProjectsEndpoint(OrganizationEndpoint):
                 project_list = list(Project.objects.filter(
                     team__in=team_list,
                 ).order_by('name'))
+            else:
+                return Response({'detail': 'Current access does not point to '
+                                 'organization.'}, status=400)
         else:
             team_list = list(request.access.teams)
             project_list = list(Project.objects.filter(
diff --git a/src/sentry/models/apikey.py b/src/sentry/models/apikey.py
index 8b3bdd7e58..fd693c94a6 100644
--- a/src/sentry/models/apikey.py
+++ b/src/sentry/models/apikey.py
@@ -100,6 +100,7 @@ class ApiKey(Model):
 
 class SystemKey(object):
     is_active = True
+    organization = None
 
     def get_allowed_origins(self):
         return []
