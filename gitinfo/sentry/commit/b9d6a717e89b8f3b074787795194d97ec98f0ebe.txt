commit b9d6a717e89b8f3b074787795194d97ec98f0ebe
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Jan 17 13:43:30 2018 -0800

    api: Enforce org slug restrictions on details endpoint

diff --git a/src/sentry/api/endpoints/organization_details.py b/src/sentry/api/endpoints/organization_details.py
index 5386d4b21a..d34422f743 100644
--- a/src/sentry/api/endpoints/organization_details.py
+++ b/src/sentry/api/endpoints/organization_details.py
@@ -14,6 +14,7 @@ from sentry.api.fields import AvatarField
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.organization import (DetailedOrganizationSerializer)
 from sentry.api.serializers.rest_framework import ListField
+from sentry.constants import RESERVED_ORGANIZATION_SLUGS
 from sentry.models import (
     AuditLogEntryEvent, Authenticator, Organization, OrganizationAvatar, OrganizationOption, OrganizationStatus
 )
@@ -35,7 +36,8 @@ ORG_OPTIONS = (
 
 delete_logger = logging.getLogger('sentry.deletions.api')
 
-DELETION_STATUSES = frozenset([OrganizationStatus.PENDING_DELETION, OrganizationStatus.DELETION_IN_PROGRESS])
+DELETION_STATUSES = frozenset([OrganizationStatus.PENDING_DELETION,
+                               OrganizationStatus.DELETION_IN_PROGRESS])
 
 
 @scenario('RetrieveOrganization')
@@ -81,6 +83,18 @@ class OrganizationSerializer(serializers.Serializer):
 
     def validate_slug(self, attrs, source):
         value = attrs[source]
+        # Historically, the only check just made sure there was more than 1
+        # character for the slug, but since then, there are many slugs that
+        # fit within this new imposed limit. We're not fixing existing, but
+        # just preventing new bad values.
+        if len(value) < 3:
+            raise serializers.ValidationError(
+                'This slug "%s" is too short. Minimum of 3 characters.' %
+                (value, ))
+        if value in RESERVED_ORGANIZATION_SLUGS:
+            raise serializers.ValidationError(
+                'This slug "%s" is reserved and not allowed.' %
+                (value, ))
         qs = Organization.objects.filter(
             slug=value,
         ).exclude(id=self.context['organization'].id)
diff --git a/tests/sentry/api/endpoints/test_organization_details.py b/tests/sentry/api/endpoints/test_organization_details.py
index 61c6b29d14..60127c4e77 100644
--- a/tests/sentry/api/endpoints/test_organization_details.py
+++ b/tests/sentry/api/endpoints/test_organization_details.py
@@ -8,6 +8,7 @@ from django.core import mail
 from mock import patch
 from exam import fixture
 
+from sentry.constants import RESERVED_ORGANIZATION_SLUGS
 from sentry.models import (
     Authenticator,
     DeletedOrganization,
@@ -83,6 +84,36 @@ class OrganizationUpdateTest(APITestCase):
         )
         assert response.status_code == 400, response.content
 
+    def test_short_slug(self):
+        org = self.create_organization(owner=self.user)
+        self.login_as(user=self.user)
+        url = reverse(
+            'sentry-api-0-organization-details', kwargs={
+                'organization_slug': org.slug,
+            }
+        )
+        response = self.client.put(
+            url, data={
+                'slug': 'a',
+            }
+        )
+        assert response.status_code == 400, response.content
+
+    def test_reserved_slug(self):
+        org = self.create_organization(owner=self.user)
+        self.login_as(user=self.user)
+        url = reverse(
+            'sentry-api-0-organization-details', kwargs={
+                'organization_slug': org.slug,
+            }
+        )
+        response = self.client.put(
+            url, data={
+                'slug': list(RESERVED_ORGANIZATION_SLUGS)[0],
+            }
+        )
+        assert response.status_code == 400, response.content
+
     def test_setting_rate_limit(self):
         org = self.create_organization(owner=self.user)
         self.login_as(user=self.user)
