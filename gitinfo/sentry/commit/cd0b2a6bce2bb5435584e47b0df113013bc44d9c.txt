commit cd0b2a6bce2bb5435584e47b0df113013bc44d9c
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Thu Aug 30 09:41:29 2018 -0700

    ref(integrations): Change VSTS display name. (#9429)
    
    * changed model and added an empty method to get display name.
    
    * Changed so that project name will be added to metadata
    :
    
    * trying to change the ui but struggling
    
    * Fixed errors to display name.
    
    * removed debugger statement.
    
    * fixed tests
    
    * corrected snapshot.
    
    * removed spaces.
    
    * Added comment todo
    
    * Changed return value from None to empty string.
    
    * removed changes to the type in the js external issue id and key

diff --git a/src/sentry/api/endpoints/group_integration_details.py b/src/sentry/api/endpoints/group_integration_details.py
index 2575ad1157..fbd51ccbf3 100644
--- a/src/sentry/api/endpoints/group_integration_details.py
+++ b/src/sentry/api/endpoints/group_integration_details.py
@@ -75,6 +75,7 @@ class GroupIntegrationDetailsEndpoint(GroupEndpoint):
         defaults = {
             'title': data.get('title'),
             'description': data.get('description'),
+            'metadata': data.get('metadata'),
         }
 
         external_issue_key = installation.make_external_key(data)
@@ -117,6 +118,7 @@ class GroupIntegrationDetailsEndpoint(GroupEndpoint):
             'key': external_issue.key,
             'url': url,
             'integrationId': external_issue.integration_id,
+            'displayName': installation.get_issue_display_name(external_issue),
         }
         return Response(context, status=201)
 
@@ -151,6 +153,7 @@ class GroupIntegrationDetailsEndpoint(GroupEndpoint):
             defaults={
                 'title': data.get('title'),
                 'description': data.get('description'),
+                'metadata': data.get('metadata'),
             }
         )
 
@@ -181,7 +184,7 @@ class GroupIntegrationDetailsEndpoint(GroupEndpoint):
             'key': external_issue.key,
             'url': url,
             'integrationId': external_issue.integration_id,
-
+            'displayName': installation.get_issue_display_name(external_issue),
         }
         return Response(context, status=201)
 
diff --git a/src/sentry/api/serializers/models/integration.py b/src/sentry/api/serializers/models/integration.py
index 6132cba739..6036b28191 100644
--- a/src/sentry/api/serializers/models/integration.py
+++ b/src/sentry/api/serializers/models/integration.py
@@ -152,12 +152,15 @@ class IntegrationIssueSerializer(IntegrationSerializer):
         ints_by_id = {i.id: i for i in item_list}
         for ei in external_issues:
             # TODO(jess): move into an external issue serializer?
+            installation = ints_by_id[ei.integration_id].get_installation(
+                self.group.organization.id)
             issues_by_integration[ei.integration_id].append({
                 'id': six.text_type(ei.id),
                 'key': ei.key,
-                'url': ints_by_id[ei.integration_id].get_installation(self.group.organization.id).get_issue_url(ei.key),
+                'url': installation.get_issue_url(ei.key),
                 'title': ei.title,
                 'description': ei.description,
+                'displayName': installation.get_issue_display_name(ei),
             })
 
         return {
diff --git a/src/sentry/integrations/example/integration.py b/src/sentry/integrations/example/integration.py
index 984a18381f..32183a95c8 100644
--- a/src/sentry/integrations/example/integration.py
+++ b/src/sentry/integrations/example/integration.py
@@ -84,6 +84,9 @@ class ExampleIntegration(Integration, IssueSyncMixin):
     def should_resolve(self, data):
         return data['status']['category'] == 'done'
 
+    def get_issue_display_name(self, external_issue):
+        return 'display name: %s' % external_issue.key
+
 
 class ExampleIntegrationProvider(IntegrationProvider):
     """
diff --git a/src/sentry/integrations/issues.py b/src/sentry/integrations/issues.py
index 212a175c62..11045a66ca 100644
--- a/src/sentry/integrations/issues.py
+++ b/src/sentry/integrations/issues.py
@@ -146,6 +146,15 @@ class IssueBasicMixin(object):
         """
         return data['key']
 
+    def get_issue_display_name(self, external_issue_key):
+        """
+        Returns the display name of the issue.
+
+        This is not required but helpful for integrations whose external issue key
+        does not match the disired display name.
+        """
+        return ''
+
 
 class IssueSyncMixin(IssueBasicMixin):
     comment_key = None
diff --git a/src/sentry/integrations/vsts/issues.py b/src/sentry/integrations/vsts/issues.py
index 261d864edc..cac54ef07a 100644
--- a/src/sentry/integrations/vsts/issues.py
+++ b/src/sentry/integrations/vsts/issues.py
@@ -31,14 +31,15 @@ class VstsIssueSync(IssueSyncMixin):
         project_choices = []
         initial_project = ('', '')
         for project in projects:
-            project_choices.append((project['id'], project['name']))
-            if project['id'] == self.default_project:
+            project_id_and_name = '%s#%s' % (project['id'], project['name'])
+            project_choices.append((project_id_and_name, project['name']))
+            # TODO(lb): Properly handle default project after it has been implemented.
+            if project_id_and_name == self.default_project:
                 initial_project = project['name']
         return [
             {
                 'name': 'project',
                 'required': True,
-                'name': 'project',
                 'type': 'choice',
                 'choices': project_choices,
                 'defaultValue': initial_project,
@@ -69,49 +70,49 @@ class VstsIssueSync(IssueSyncMixin):
         project = data.get('project') or self.default_project
         if project is None:
             raise ValueError('VSTS expects project')
+        project_id, project_name = project.split('#')
         client = self.get_client()
 
         title = data['title']
         description = data['description']
-        # TODO(LB): Why was group removed from method?
-        # link = absolute_uri(group.get_absolute_url())
+
         try:
             created_item = client.create_work_item(
                 instance=self.instance,
-                project=project,
+                project=project_id,
                 title=title,
                 # Decriptions cannot easily be seen. So, a comment will be added as well.
                 description=markdown(description),
                 comment=markdown(description)
-                # link=link,
             )
         except Exception as e:
             self.raise_error(e)
 
         return {
-            'key': created_item['id'],
-            # 'url': created_item['_links']['html']['href'],
+            'key': six.text_type(created_item['id']),
             'title': title,
             'description': description,
+            'metadata': {
+                'display_name': '%s#%s' % (project_name, created_item['id']),
+            }
         }
 
     def get_issue(self, issue_id, **kwargs):
         client = self.get_client()
         work_item = client.get_work_item(self.instance, issue_id)
         return {
-            'key': work_item['id'],
+            'key': six.text_type(work_item['id']),
             'title': work_item['fields']['System.Title'],
-            'description': work_item['fields'].get('System.Description')
+            'description': work_item['fields'].get('System.Description'),
+            'metadata': {
+                'display_name': '%s#%s' % (work_item['fields']['System.AreaPath'], work_item['id']),
+            }
         }
 
     def sync_assignee_outbound(self, external_issue, user, assign=True, **kwargs):
         client = self.get_client()
         assignee = None
 
-        # TODO(LB): What's the scope here? is this correct?
-        # Get a list of all users in a given scope. How do we define scope?
-        # https://docs.microsoft.com/en-us/rest/api/vsts/graph/users/list?view=vsts-rest-4.1
-
         if assign is True:
             vsts_users = client.get_users(self.model.name)
             sentry_emails = [email.email.lower() for email in user.get_verified_emails()]
@@ -215,3 +216,6 @@ class VstsIssueSync(IssueSyncMixin):
             state['name'] for state in all_states if state['category'] in self.done_categories
         ]
         return done_states
+
+    def get_issue_display_name(self, external_issue):
+        return external_issue.metadata['display_name']
diff --git a/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx b/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
index e9a2b79b10..deecda6c62 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
@@ -252,7 +252,6 @@ class ExternalIssueActions extends AsyncComponent {
 
   renderBody() {
     let {action, selectedIntegration, issue} = this.state;
-
     return (
       <React.Fragment>
         <IssueSyncListElement
@@ -260,6 +259,7 @@ class ExternalIssueActions extends AsyncComponent {
           externalIssueLink={issue ? issue.url : null}
           externalIssueId={issue ? issue.id : null}
           externalIssueKey={issue ? issue.key : null}
+          externalIssueDisplayName={issue ? issue.displayName : null}
           onClose={this.deleteIssue.bind(this)}
           integrationType={selectedIntegration.provider.key}
           integrationName={selectedIntegration.name}
diff --git a/src/sentry/static/sentry/app/components/issueSyncListElement.jsx b/src/sentry/static/sentry/app/components/issueSyncListElement.jsx
index dbb7c5c6aa..6a05c22c42 100644
--- a/src/sentry/static/sentry/app/components/issueSyncListElement.jsx
+++ b/src/sentry/static/sentry/app/components/issueSyncListElement.jsx
@@ -21,6 +21,7 @@ class IssueSyncElement extends React.Component {
     externalIssueLink: PropTypes.string,
     externalIssueId: PropTypes.number,
     externalIssueKey: PropTypes.string,
+    externalIssueDisplayName: PropTypes.string,
     onOpen: PropTypes.func,
     onClose: PropTypes.func,
     integrationType: PropTypes.string,
@@ -81,10 +82,10 @@ class IssueSyncElement extends React.Component {
     if (this.props.children) {
       return this.props.children;
     }
+    if (this.props.externalIssueDisplayName) {
+      return this.props.externalIssueDisplayName;
+    }
     if (this.props.externalIssueKey) {
-      if (this.props.integrationType === 'vsts' && this.props.integrationName) {
-        return `${this.props.integrationName}#${this.props.externalIssueKey}`;
-      }
       return this.props.externalIssueKey;
     }
 
diff --git a/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap
index dadc38f874..6512dfb6d1 100644
--- a/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap
@@ -215,6 +215,7 @@ exports[`ExternalIssueActions with no external issues linked renders 1`] = `
   }
 >
   <IssueSyncElement
+    externalIssueDisplayName={null}
     externalIssueId={null}
     externalIssueKey={null}
     externalIssueLink={null}
diff --git a/tests/sentry/api/endpoints/test_group_integrations.py b/tests/sentry/api/endpoints/test_group_integrations.py
index 497f8fb3cf..4781496a88 100644
--- a/tests/sentry/api/endpoints/test_group_integrations.py
+++ b/tests/sentry/api/endpoints/test_group_integrations.py
@@ -56,6 +56,7 @@ class GroupIntegrationsTest(APITestCase):
                 'id': six.text_type(external_issue.id),
                 'url': 'https://example/issues/APP-123',
                 'key': 'APP-123',
-                'title': 'this is an example title'
+                'title': 'this is an example title',
+                'displayName': 'display name: APP-123',
             }],
         }
diff --git a/tests/sentry/integrations/vsts/test_issues.py b/tests/sentry/integrations/vsts/test_issues.py
index 2cb1ce9f85..8aea12c8fc 100644
--- a/tests/sentry/integrations/vsts/test_issues.py
+++ b/tests/sentry/integrations/vsts/test_issues.py
@@ -54,7 +54,7 @@ class VstsIssueSycnTest(TestCase):
             'sync_reverse_assignment': True,
         }
         self.integration = VstsIntegration(model, self.organization.id)
-        self.issue_id = 309
+        self.issue_id = '309'
 
     @responses.activate
     def test_create_issue(self):
@@ -70,11 +70,15 @@ class VstsIssueSycnTest(TestCase):
         form_data = {
             'title': 'Hello',
             'description': 'Fix this.',
+            'project': '0987654321#Fabrikam-Fiber-Git',
         }
         assert self.integration.create_issue(form_data) == {
             'key': self.issue_id,
             'description': 'Fix this.',
             'title': 'Hello',
+            'metadata': {
+                'display_name': u'Fabrikam-Fiber-Git#309'
+            }
         }
         request = responses.calls[-1].request
         assert request.headers['Content-Type'] == 'application/json-patch+json'
@@ -111,7 +115,7 @@ class VstsIssueSycnTest(TestCase):
     def test_get_issue(self):
         responses.add(
             responses.GET,
-            'https://fabrikam-fiber-inc.visualstudio.com/DefaultCollection/_apis/wit/workitems/%d' % self.issue_id,
+            'https://fabrikam-fiber-inc.visualstudio.com/DefaultCollection/_apis/wit/workitems/%s' % self.issue_id,
             body=WORK_ITEM_RESPONSE,
             content_type='application/json',
         )
@@ -119,6 +123,9 @@ class VstsIssueSycnTest(TestCase):
             'key': self.issue_id,
             'description': 'Fix this.',
             'title': 'Hello',
+            'metadata': {
+                'display_name': u'Fabrikam-Fiber-Git#309'
+            },
         }
         request = responses.calls[-1].request
         assert request.headers['Content-Type'] == 'application/json'
