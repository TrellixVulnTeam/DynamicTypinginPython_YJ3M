commit 4aba1ef091972368fedcea71ab729b30521b0cfb
Author: Matej Minar <matej.minar@sentry.io>
Date:   Fri Feb 7 08:05:53 2020 +0100

    feat(ui): Add projects to the releases list (#16817)
    
    * feat(ui): Add projects to the releases list
    
    * test, changed order of columns
    
    * column sizing
    
    * 'and more' links to release detail, if not too many projects it also shows hovercard
    
    * removed autocomplete export now that we are not using it
    
    * hovercard styles

diff --git a/src/sentry/static/sentry/app/components/hovercard.jsx b/src/sentry/static/sentry/app/components/hovercard.jsx
index e1a496ee3f..ed3054d216 100644
--- a/src/sentry/static/sentry/app/components/hovercard.jsx
+++ b/src/sentry/static/sentry/app/components/hovercard.jsx
@@ -279,4 +279,5 @@ const HovercardArrow = styled('span')`
   }
 `;
 
+export {Hovercard, Body};
 export default Hovercard;
diff --git a/src/sentry/static/sentry/app/views/releases/list/layout.jsx b/src/sentry/static/sentry/app/views/releases/list/layout.jsx
index 405804e851..5fe9b1ec6d 100644
--- a/src/sentry/static/sentry/app/views/releases/list/layout.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/layout.jsx
@@ -4,15 +4,15 @@ import space from 'app/styles/space';
 
 const Layout = styled('div')`
   display: grid;
-  grid-template-columns: 2fr 1fr 1fr 1fr;
+  grid-template-columns: 1.25fr 1fr minmax(0, 1fr) 1fr 1fr;
   grid-column-gap: ${space(1.5)};
   width: 100%;
   align-items: center;
-  grid-template-areas: 'release-name stats new-count last-event';
+  grid-template-areas: 'release-name stats projects new-count last-event';
 
   @media (max-width: ${p => p.theme.breakpoints[0]}) {
-    grid-template-columns: 3fr 1fr 1fr;
-    grid-template-areas: 'release-name new-count last-event';
+    grid-template-columns: 2fr minmax(0, 2fr) 1fr;
+    grid-template-areas: 'release-name projects new-count';
   }
 `;
 
@@ -20,6 +20,10 @@ const VersionColumn = styled('div')`
   grid-area: release-name;
   overflow: hidden;
 `;
+const ProjectsColumn = styled('div')`
+  grid-area: projects;
+  font-size: ${p => p.theme.fontSizeMedium};
+`;
 const StatsColumn = styled('div')`
   grid-area: stats;
 
@@ -32,5 +36,9 @@ const CountColumn = styled('div')`
 `;
 const LastEventColumn = styled('div')`
   grid-area: last-event;
+
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: none;
+  }
 `;
-export {Layout, VersionColumn, StatsColumn, CountColumn, LastEventColumn};
+export {Layout, VersionColumn, ProjectsColumn, StatsColumn, CountColumn, LastEventColumn};
diff --git a/src/sentry/static/sentry/app/views/releases/list/projectList.tsx b/src/sentry/static/sentry/app/views/releases/list/projectList.tsx
new file mode 100644
index 0000000000..89992eef75
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releases/list/projectList.tsx
@@ -0,0 +1,92 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {tct, t} from 'app/locale';
+import ProjectBadge from 'app/components/idBadge/projectBadge';
+import {Project} from 'app/types';
+import space from 'app/styles/space';
+import GlobalSelectionLink from 'app/components/globalSelectionLink';
+import Hovercard, {Body as HoverCardBody} from 'app/components/hovercard';
+
+const MAX_PROJECTS_IN_HOVERCARD = 5;
+
+type Props = {
+  projects: Project[];
+  orgId: string;
+  version: string;
+  maxLines?: number;
+};
+
+const ProjectList = ({projects, orgId, version, maxLines = 2}: Props) => {
+  let visibleProjects: Project[], hiddenProjects: Project[];
+
+  if (projects.length <= maxLines) {
+    visibleProjects = projects;
+    hiddenProjects = [];
+  } else {
+    // because we need one line for `and X more`
+    visibleProjects = projects.slice(0, maxLines - 1);
+    hiddenProjects = projects.slice(maxLines - 1, projects.length);
+  }
+
+  const hoverCardHead = t('Release Projects');
+  const hovercardBody = (
+    <HovercardContentWrapper>
+      <ProjectList
+        projects={hiddenProjects}
+        orgId={orgId}
+        version={version}
+        maxLines={MAX_PROJECTS_IN_HOVERCARD}
+      />
+    </HovercardContentWrapper>
+  );
+
+  return (
+    <React.Fragment>
+      {visibleProjects.map(project => (
+        <StyledProjectBadge project={project} avatarSize={14} key={project.slug} />
+      ))}
+      {hiddenProjects.length > 0 && (
+        <StyledHovercard
+          header={hoverCardHead}
+          body={hovercardBody}
+          show={hiddenProjects.length <= MAX_PROJECTS_IN_HOVERCARD ? undefined : false}
+        >
+          <GlobalSelectionLink
+            to={`/organizations/${orgId}/releases/${encodeURIComponent(version)}/`}
+          >
+            {tct('and [count] more', {
+              count: hiddenProjects.length,
+            })}
+          </GlobalSelectionLink>
+        </StyledHovercard>
+      )}
+    </React.Fragment>
+  );
+};
+
+const StyledProjectBadge = styled(ProjectBadge)`
+  &:not(:last-child) {
+    margin-bottom: ${space(0.5)};
+  }
+`;
+
+const StyledHovercard = styled(Hovercard)`
+  width: auto;
+  max-width: 295px;
+  ${HoverCardBody} {
+    padding-bottom: 0;
+  }
+`;
+const HovercardContentWrapper = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: flex-start;
+  flex-wrap: wrap;
+  font-size: ${p => p.theme.fontSizeMedium};
+  ${StyledProjectBadge} {
+    margin-right: ${space(3)};
+    margin-bottom: ${space(2)};
+  }
+`;
+export default ProjectList;
diff --git a/src/sentry/static/sentry/app/views/releases/list/releaseList.jsx b/src/sentry/static/sentry/app/views/releases/list/releaseList.jsx
index 0e5d51b348..a4985ec2d1 100644
--- a/src/sentry/static/sentry/app/views/releases/list/releaseList.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/releaseList.jsx
@@ -1,6 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
+import uniq from 'lodash/uniq';
+import flatten from 'lodash/flatten';
 
 import {PanelItem} from 'app/components/panels';
 import Count from 'app/components/count';
@@ -9,46 +11,72 @@ import TimeSince from 'app/components/timeSince';
 import Version from 'app/components/version';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import space from 'app/styles/space';
+import Projects from 'app/utils/projects';
 
-import {LastEventColumn, Layout, CountColumn, VersionColumn, StatsColumn} from './layout';
+import {
+  LastEventColumn,
+  Layout,
+  CountColumn,
+  VersionColumn,
+  ProjectsColumn,
+  StatsColumn,
+} from './layout';
 import LatestDeployOrReleaseTime from './latestDeployOrReleaseTime';
+import ProjectList from './projectList';
 
 const ReleaseList = props => {
-  const {orgId} = props;
+  const {orgId, releaseList} = props;
+
+  const projectSlugs = uniq(
+    flatten(releaseList.map(release => release.projects.map(p => p.slug)))
+  );
 
   return (
     <div>
-      {props.releaseList.map(release => {
-        return (
-          <ReleasePanelItem key={release.version}>
-            <Layout>
-              <VersionColumn>
-                <VersionWrapper>
-                  <Version
-                    orgId={orgId}
-                    version={release.version}
-                    preserveGlobalSelection
-                  />
-                </VersionWrapper>
-                <LatestDeployOrReleaseTime orgId={orgId} release={release} />
-              </VersionColumn>
-              <StatsColumn>
-                <ReleaseStats release={release} />
-              </StatsColumn>
-              <CountColumn>
-                <Count className="release-count" value={release.newGroups || 0} />
-              </CountColumn>
-              <LastEventColumn>
-                {release.lastEvent ? (
-                  <TimeSince date={release.lastEvent} />
-                ) : (
-                  <span>—</span>
-                )}
-              </LastEventColumn>
-            </Layout>
-          </ReleasePanelItem>
-        );
-      })}
+      <Projects orgId={orgId} slugs={projectSlugs}>
+        {({projects}) =>
+          releaseList.map(release => {
+            return (
+              <ReleasePanelItem key={release.version}>
+                <Layout>
+                  <VersionColumn>
+                    <VersionWrapper>
+                      <Version
+                        orgId={orgId}
+                        version={release.version}
+                        preserveGlobalSelection
+                      />
+                    </VersionWrapper>
+                    <LatestDeployOrReleaseTime orgId={orgId} release={release} />
+                  </VersionColumn>
+                  <StatsColumn>
+                    <ReleaseStats release={release} />
+                  </StatsColumn>
+                  <ProjectsColumn>
+                    <ProjectList
+                      projects={projects.filter(project =>
+                        release.projects.map(p => p.slug).includes(project.slug)
+                      )}
+                      orgId={orgId}
+                      version={release.version}
+                    />
+                  </ProjectsColumn>
+                  <CountColumn>
+                    <Count className="release-count" value={release.newGroups || 0} />
+                  </CountColumn>
+                  <LastEventColumn>
+                    {release.lastEvent ? (
+                      <TimeSince date={release.lastEvent} />
+                    ) : (
+                      <span>—</span>
+                    )}
+                  </LastEventColumn>
+                </Layout>
+              </ReleasePanelItem>
+            );
+          })
+        }
+      </Projects>
     </div>
   );
 };
diff --git a/src/sentry/static/sentry/app/views/releases/list/releaseListHeader.jsx b/src/sentry/static/sentry/app/views/releases/list/releaseListHeader.jsx
index c69dbae224..1525c0df5a 100644
--- a/src/sentry/static/sentry/app/views/releases/list/releaseListHeader.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/releaseListHeader.jsx
@@ -3,13 +3,21 @@ import React from 'react';
 import {PanelHeader} from 'app/components/panels';
 import {t} from 'app/locale';
 
-import {LastEventColumn, Layout, CountColumn, VersionColumn, StatsColumn} from './layout';
+import {
+  LastEventColumn,
+  Layout,
+  CountColumn,
+  VersionColumn,
+  ProjectsColumn,
+  StatsColumn,
+} from './layout';
 
 const ReleaseListHeader = () => {
   return (
     <PanelHeader>
       <Layout>
         <VersionColumn>{t('Version')}</VersionColumn>
+        <ProjectsColumn>{t('Project')}</ProjectsColumn>
         <StatsColumn />
         <CountColumn>{t('New Issues')}</CountColumn>
         <LastEventColumn>{t('Last Event')}</LastEventColumn>
diff --git a/tests/js/spec/views/releases/list/projectList.spec.jsx b/tests/js/spec/views/releases/list/projectList.spec.jsx
new file mode 100644
index 0000000000..26723b46d8
--- /dev/null
+++ b/tests/js/spec/views/releases/list/projectList.spec.jsx
@@ -0,0 +1,22 @@
+import React from 'react';
+import {mountWithTheme} from 'sentry-test/enzyme';
+import ProjectList from 'app/views/releases/list/projectList.tsx';
+
+const projects = [
+  {slug: 'test1'},
+  {slug: 'test2'},
+  {slug: 'test3'},
+  {slug: 'test4'},
+  {slug: 'test5'},
+];
+
+describe('ProjectList', () => {
+  it('shows the correct amount of projects and hides the rest', () => {
+    const wrapper = mountWithTheme(
+      <ProjectList maxLines={3} projects={projects} />,
+      TestStubs.routerContext()
+    );
+    expect(wrapper.find('StyledProjectBadge').length).toBe(2);
+    expect(wrapper.find('StyledHovercard').text()).toBe('and 3 more');
+  });
+});
