commit f119333dca85a62222c3658ee8b02d5913ac9463
Author: Stephen Cefali <scefali@sentry.io>
Date:   Thu Feb 27 12:49:31 2020 -0800

    Revert "feat(integration-directory): update project select modal (#17328)" (#17355)
    
    This reverts commit db2afb99230ac58447c02bcd045f1c34016f3763.

diff --git a/src/sentry/static/sentry/app/components/contextPickerModal.tsx b/src/sentry/static/sentry/app/components/contextPickerModal.tsx
index 9a2c0ea6ca..5992a51833 100644
--- a/src/sentry/static/sentry/app/components/contextPickerModal.tsx
+++ b/src/sentry/static/sentry/app/components/contextPickerModal.tsx
@@ -14,7 +14,6 @@ import Projects from 'app/utils/projects';
 import SelectControl from 'app/components/forms/selectControl';
 import replaceRouterParams from 'app/utils/replaceRouterParams';
 import space from 'app/styles/space';
-import theme from 'app/utils/theme';
 
 type Props = {
   /**
@@ -204,21 +203,6 @@ class ContextPickerModal extends React.Component<Props> {
     this.navigateIfFinish([{slug: organization}], [{slug: value}]);
   };
 
-  get headerText() {
-    const {needOrg, needProject} = this.props;
-    if (needOrg && needProject) {
-      return t('Select an organization and a project to continue');
-    }
-    if (needOrg) {
-      return t('Select an organization to continue');
-    }
-    if (needProject) {
-      return t('Select an a project to continue');
-    }
-    //if neither project nor org needs to be selected, nothing will render anyways
-    return '';
-  }
-
   render() {
     const {
       needOrg,
@@ -244,24 +228,15 @@ class ContextPickerModal extends React.Component<Props> {
       .filter(({status}) => status.id !== 'pending_deletion')
       .map(({slug}) => ({label: slug, value: slug}));
 
-    const customStyles = {
-      option: provided => ({
-        ...provided,
-        borderTop: `1px solid ${theme.gray1}`,
-      }),
-      menuList: provided => ({
-        ...provided,
-        paddingTop: '0px',
-      }),
-    };
-
     return (
       <React.Fragment>
-        <Header closeButton>{this.headerText}</Header>
+        <Header closeButton>{t('Select...')}</Header>
         <Body>
           {loading && <StyledLoadingIndicator overlay />}
+          <div>{t('Select an organization/project to continue')}</div>
           {needOrg && (
             <StyledSelectControl
+              deprecatedSelectControl
               ref={ref => {
                 this.orgSelect = ref;
                 if (shouldShowProjectSelector) {
@@ -280,6 +255,7 @@ class ContextPickerModal extends React.Component<Props> {
 
           {organization && needProject && projects && (
             <StyledSelectControl
+              deprecatedSelectControl
               ref={ref => {
                 this.projectSelect = ref;
                 this.focusProjectSelector();
@@ -290,7 +266,6 @@ class ContextPickerModal extends React.Component<Props> {
               name="project"
               value=""
               openOnFocus
-              styles={customStyles}
               options={projects.map(({slug}) => ({label: slug, value: slug}))}
               onChange={this.handleSelectProject}
             />
diff --git a/tests/js/spec/components/contextPickerModal.spec.jsx b/tests/js/spec/components/contextPickerModal.spec.jsx
index 0a4112d166..ebd00d5295 100644
--- a/tests/js/spec/components/contextPickerModal.spec.jsx
+++ b/tests/js/spec/components/contextPickerModal.spec.jsx
@@ -5,7 +5,6 @@ import ContextPickerModal from 'app/components/contextPickerModal';
 import OrganizationStore from 'app/stores/organizationStore';
 import OrganizationsStore from 'app/stores/organizationsStore';
 import ProjectsStore from 'app/stores/projectsStore';
-import {selectByValue} from 'sentry-test/select-new';
 
 jest.mock('jquery');
 
@@ -108,7 +107,14 @@ describe('ContextPickerModal', function() {
       body: [],
     });
 
-    selectByValue(wrapper, 'org-slug', {control: true});
+    wrapper.find('StyledSelectControl[name="organization"] input').simulate('focus');
+
+    expect(wrapper.find('Select[name="organization"] .Select-menu')).toHaveLength(1);
+
+    wrapper
+      .find('Select[name="organization"] Option')
+      .first()
+      .simulate('mouseDown');
 
     await tick();
     wrapper.update();
@@ -188,7 +194,14 @@ describe('ContextPickerModal', function() {
     );
 
     // Select org2
-    selectByValue(wrapper, org2.slug, {control: true});
+    wrapper
+      .find('StyledSelectControl[name="organization"]')
+      .simulate('change', {value: org2.slug, label: org2.slug});
+    wrapper.find('StyledSelectControl[name="organization"] input').simulate('focus');
+    wrapper
+      .find('Select[name="organization"] Option')
+      .at(1)
+      .simulate('mouseDown');
 
     await tick();
     wrapper.update();
@@ -202,7 +215,11 @@ describe('ContextPickerModal', function() {
     ]);
 
     // Select project3
-    selectByValue(wrapper, 'project3', {control: true, name: 'project'});
+    wrapper.find('StyledSelectControl[name="project"] input').simulate('focus');
+    wrapper
+      .find('Select[name="project"] Option')
+      .at(1)
+      .simulate('mouseDown');
 
     expect(onFinish).toHaveBeenCalledWith('/test/org2/path/project3/');
 
