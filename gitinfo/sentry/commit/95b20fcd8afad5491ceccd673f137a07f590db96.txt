commit 95b20fcd8afad5491ceccd673f137a07f590db96
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jan 23 17:21:39 2013 -0800

    Coerce abs_path to filename if filename is not present

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index 604286e1b0..b89d3c7281 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -287,8 +287,13 @@ class Stacktrace(Interface):
     def __init__(self, frames):
         self.frames = frames
         for frame in frames:
+            # if for some reason the user provided abs_path but not filename
+            # let it through and fix it for them
+            if 'abs_path' in frame and 'filename' not in frame:
+                frame['filename'] = frame.pop('abs_path', None)
+
             # ensure we've got the correct required values
-            assert 'filename' in frame
+            assert frame.get('filename')
 
             # lineno should be an int
             if 'lineno' in frame:
diff --git a/tests/sentry/interfaces/stacktrace/tests.py b/tests/sentry/interfaces/stacktrace/tests.py
index cc2195f2ed..a6b9c6f9bd 100644
--- a/tests/sentry/interfaces/stacktrace/tests.py
+++ b/tests/sentry/interfaces/stacktrace/tests.py
@@ -23,6 +23,15 @@ class StacktraceTest(TestCase):
             'filename': 'foo.py',
         }])
 
+    def test_allows_abs_path_without_filename(self):
+        interface = Stacktrace(frames=[{
+            'lineno': 1,
+            'abs_path': 'foo/bar/baz.py',
+        }])
+        frame = interface.frames[0]
+        assert frame['filename'] == 'foo/bar/baz.py'
+        assert frame.get('abs_path') is None
+
     def test_coerces_url_filenames(self):
         interface = Stacktrace(frames=[{
             'lineno': 1,
@@ -49,6 +58,7 @@ class StacktraceTest(TestCase):
         }])
         frame = interface.frames[0]
         assert frame['filename'] == 'http://foo.com'
+        assert frame.get('abs_path') is None
 
     def test_serialize_returns_frames(self):
         interface = Stacktrace(frames=[{
