commit f8505015d7cd91c18b36d9fdcfe99ca1f69f78ca
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Jun 2 15:07:12 2016 -0700

    Re-bind Group/Project to Event in post_process_group (#3377)
    
    It's possible to have a race condition if the Group/Project changes
    while the job is in the queue because we are serializing these fields
    onto the Event. Then when a plugin checks event.group, it may be stale.

diff --git a/src/sentry/rules/conditions/level.py b/src/sentry/rules/conditions/level.py
index 7b09497ee1..143cb7918e 100644
--- a/src/sentry/rules/conditions/level.py
+++ b/src/sentry/rules/conditions/level.py
@@ -58,7 +58,7 @@ class LevelCondition(EventCondition):
             return False
 
         desired_level = int(desired_level)
-        level = int(event.level)
+        level = int(event.group.level)
 
         if desired_match == LevelMatchType.EQUAL:
             return level == desired_level
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index b091725114..f7cdc02089 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -45,15 +45,24 @@ def post_process_group(event, is_new, is_regression, is_sample, **kwargs):
     """
     Fires post processing hooks for a group.
     """
-    from sentry.models import Project
+    # NOTE: we must pass through the full Event object, and not an
+    # event_id since the Event object may not actually have been stored
+    # in the database due to sampling.
+    from sentry.models import Project, Group
     from sentry.rules.processor import RuleProcessor
 
+    # Re-bind Group since we're pickling the whole Event object
+    # which may contain a stale Group.
+    event.group = Group.objects.get_from_cache(id=event.group_id)
+
     project_id = event.group.project_id
     Raven.tags_context({
         'project': project_id,
     })
 
-    project = Project.objects.get_from_cache(id=project_id)
+    # Re-bind Project since we're pickling the whole Event object
+    # which may contain a stale Project.
+    event.project = Project.objects.get_from_cache(id=project_id)
 
     _capture_stats(event, is_new)
 
@@ -63,7 +72,7 @@ def post_process_group(event, is_new, is_regression, is_sample, **kwargs):
     for callback, futures in rp.apply():
         safe_execute(callback, event, futures)
 
-    for plugin in plugins.for_project(project):
+    for plugin in plugins.for_project(event.project):
         plugin_post_process_group(
             plugin_slug=plugin.slug,
             event=event,
@@ -74,7 +83,7 @@ def post_process_group(event, is_new, is_regression, is_sample, **kwargs):
 
     event_processed.send_robust(
         sender=post_process_group,
-        project=project,
+        project=event.project,
         group=event.group,
         event=event,
     )
