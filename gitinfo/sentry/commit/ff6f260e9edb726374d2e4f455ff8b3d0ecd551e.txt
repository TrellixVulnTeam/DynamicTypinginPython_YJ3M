commit ff6f260e9edb726374d2e4f455ff8b3d0ecd551e
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Fri Mar 2 15:22:41 2018 -0800

    feat(environments): Added ReleaseProjectEnvironment to team and project transfer_to, project delete, and release merge. (#7405)
    
    * Added obvious changes to transfer to.
    
    * Searched for and added the releaseprojectenviornment to similar areas as releaseproject.
    
    * Added a test that asserts that ReleaseProjectEnvironment is deleted during team transfer.
    
    * Added test to ensure ReleaseProject and ReleaseProjectEnvironment are deleted on project transfer.
    
    * Added ReleaseProjectEnvironment to release merge test
    
    * Added environment objects to test
    -release to avoid mysql problems.

diff --git a/src/sentry/deletions/defaults/project.py b/src/sentry/deletions/defaults/project.py
index 253b2b0647..e3d14c3578 100644
--- a/src/sentry/deletions/defaults/project.py
+++ b/src/sentry/deletions/defaults/project.py
@@ -43,7 +43,7 @@ class ProjectDeletionTask(ModelDeletionTask):
         # in bulk
         # Release needs to handle deletes after Group is cleaned up as the foreign
         # key is protected
-        model_list = (models.Group, models.ReleaseProject, models.ProjectDSymFile,
+        model_list = (models.Group, models.ReleaseProject, models.ReleaseProjectEnvironment, models.ProjectDSymFile,
                       models.ProjectSymCacheFile)
         relations.extend(
             [ModelRelation(m, {'project_id': instance.id}, ModelDeletionTask) for m in model_list]
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index d93de34886..baea183b5b 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -293,6 +293,7 @@ class Project(Model):
             EnvironmentProject,
             ProjectTeam,
             ReleaseProject,
+            ReleaseProjectEnvironment,
             Rule,
         )
 
@@ -327,7 +328,7 @@ class Project(Model):
         # to this however, such as rules, which should maintain their
         # configuration when moved across organizations.
         if org_changed:
-            for model in ReleaseProject, EnvironmentProject:
+            for model in ReleaseProject, ReleaseProjectEnvironment, EnvironmentProject:
                 model.objects.filter(
                     project_id=self.id,
                 ).delete()
diff --git a/src/sentry/models/release.py b/src/sentry/models/release.py
index 3d1669137b..666c387f33 100644
--- a/src/sentry/models/release.py
+++ b/src/sentry/models/release.py
@@ -186,12 +186,12 @@ class Release(Model):
         # ReleaseFile.release
 
         from sentry.models import (
-            ReleaseCommit, ReleaseEnvironment, ReleaseFile, ReleaseProject, Group, GroupRelease,
+            ReleaseCommit, ReleaseEnvironment, ReleaseFile, ReleaseProject, ReleaseProjectEnvironment, Group, GroupRelease,
             GroupResolution
         )
 
         model_list = (
-            ReleaseCommit, ReleaseEnvironment, ReleaseFile, ReleaseProject, GroupRelease,
+            ReleaseCommit, ReleaseEnvironment, ReleaseFile, ReleaseProject, ReleaseProjectEnvironment, GroupRelease,
             GroupResolution
         )
         for release in from_releases:
diff --git a/src/sentry/models/team.py b/src/sentry/models/team.py
index 3a4ae9631f..a15233cb5e 100644
--- a/src/sentry/models/team.py
+++ b/src/sentry/models/team.py
@@ -185,7 +185,7 @@ class Team(Model):
         """
         from sentry.models import (
             OrganizationAccessRequest, OrganizationMember, OrganizationMemberTeam, Project,
-            ProjectTeam, ReleaseProject
+            ProjectTeam, ReleaseProject, ReleaseProjectEnvironment
         )
 
         try:
@@ -213,6 +213,9 @@ class Team(Model):
         ReleaseProject.objects.filter(
             project_id__in=project_ids,
         ).delete()
+        ReleaseProjectEnvironment.objects.filter(
+            project_id__in=project_ids,
+        ).delete()
 
         Project.objects.filter(
             id__in=project_ids,
diff --git a/tests/sentry/models/test_project.py b/tests/sentry/models/test_project.py
index 6bb18b2b1c..f43d3633fc 100644
--- a/tests/sentry/models/test_project.py
+++ b/tests/sentry/models/test_project.py
@@ -2,7 +2,7 @@
 
 from __future__ import absolute_import
 
-from sentry.models import Environment, OrganizationMember, OrganizationMemberTeam, Project, Rule
+from sentry.models import Environment, OrganizationMember, OrganizationMemberTeam, Project, Release, ReleaseProject, ReleaseProjectEnvironment, Rule
 from sentry.testutils import TestCase
 
 
@@ -84,3 +84,48 @@ class ProjectTest(TestCase):
         assert project.slug != 'matt'
         assert Project.objects.filter(organization=to_org).count() == 2
         assert Project.objects.filter(organization=from_org).count() == 0
+
+    def test_transfer_to_releases(self):
+        from_org = self.create_organization()
+        from_team = self.create_team(organization=from_org)
+        to_org = self.create_organization()
+        to_team = self.create_team(organization=to_org)
+
+        project = self.create_project(teams=[from_team])
+
+        environment = Environment.get_or_create(project, 'production')
+        release = Release.get_or_create(project=project, version='1.0')
+
+        ReleaseProjectEnvironment.objects.create(
+            project=project,
+            release=release,
+            environment=environment,
+        )
+
+        assert ReleaseProjectEnvironment.objects.filter(
+            project=project,
+            release=release,
+            environment=environment,
+        ).exists()
+        assert ReleaseProject.objects.filter(
+            project=project,
+            release=release,
+        ).exists()
+
+        project.transfer_to(to_team)
+
+        project = Project.objects.get(id=project.id)
+
+        assert project.teams.count() == 1
+        assert project.teams.first() == to_team
+        assert project.organization_id == to_org.id
+
+        assert not ReleaseProjectEnvironment.objects.filter(
+            project=project,
+            release=release,
+            environment=environment,
+        ).exists()
+        assert not ReleaseProject.objects.filter(
+            project=project,
+            release=release,
+        ).exists()
diff --git a/tests/sentry/models/test_release.py b/tests/sentry/models/test_release.py
index d1f90009a9..5d7b711c80 100644
--- a/tests/sentry/models/test_release.py
+++ b/tests/sentry/models/test_release.py
@@ -4,8 +4,8 @@ import datetime
 import six
 
 from sentry.models import (
-    Commit, CommitAuthor, Group, GroupRelease, GroupResolution, GroupLink, GroupStatus,
-    Release, ReleaseCommit, ReleaseEnvironment, ReleaseProject, Repository
+    Commit, CommitAuthor, Environment, Group, GroupRelease, GroupResolution, GroupLink, GroupStatus,
+    Release, ReleaseCommit, ReleaseEnvironment, ReleaseProject, ReleaseProjectEnvironment, Repository
 )
 
 from sentry.testutils import TestCase
@@ -19,13 +19,17 @@ class MergeReleasesTest(TestCase):
 
         # merge to
         project = self.create_project(organization=org, name='foo')
+        environment = Environment.get_or_create(project=project, name='env1')
         release = Release.objects.create(version='abcdabc', organization=org)
         release.add_project(project)
         release_commit = ReleaseCommit.objects.create(
             organization_id=org.id, release=release, commit=commit, order=1
         )
         release_environment = ReleaseEnvironment.objects.create(
-            organization_id=org.id, project_id=project.id, release_id=release.id, environment_id=2
+            organization_id=org.id, project_id=project.id, release_id=release.id, environment_id=environment.id
+        )
+        release_project_environment = ReleaseProjectEnvironment.objects.create(
+            release_id=release.id, project_id=project.id, environment_id=environment.id
         )
         group_release = GroupRelease.objects.create(
             project_id=project.id, release_id=release.id, group_id=1
@@ -35,6 +39,7 @@ class MergeReleasesTest(TestCase):
 
         # merge from #1
         project2 = self.create_project(organization=org, name='bar')
+        environment2 = Environment.get_or_create(project=project2, name='env2')
         release2 = Release.objects.create(version='bbbbbbb', organization=org)
         release2.add_project(project2)
         release_commit2 = ReleaseCommit.objects.create(
@@ -44,7 +49,10 @@ class MergeReleasesTest(TestCase):
             organization_id=org.id,
             project_id=project2.id,
             release_id=release2.id,
-            environment_id=3,
+            environment_id=environment2.id,
+        )
+        release_project_environment2 = ReleaseProjectEnvironment.objects.create(
+            release_id=release2.id, project_id=project2.id, environment_id=environment2.id
         )
         group_release2 = GroupRelease.objects.create(
             project_id=project2.id, release_id=release2.id, group_id=2
@@ -54,6 +62,7 @@ class MergeReleasesTest(TestCase):
 
         # merge from #2
         project3 = self.create_project(organization=org, name='baz')
+        environment3 = Environment.get_or_create(project=project3, name='env3')
         release3 = Release.objects.create(version='cccccc', organization=org)
         release3.add_project(project3)
         release_commit3 = ReleaseCommit.objects.create(
@@ -63,7 +72,10 @@ class MergeReleasesTest(TestCase):
             organization_id=org.id,
             project_id=project3.id,
             release_id=release3.id,
-            environment_id=4,
+            environment_id=environment3.id,
+        )
+        release_project_environment3 = ReleaseProjectEnvironment.objects.create(
+            release_id=release3.id, project_id=project3.id, environment_id=environment3.id
         )
         group_release3 = GroupRelease.objects.create(
             project_id=project3.id, release_id=release3.id, group_id=3
@@ -90,6 +102,14 @@ class MergeReleasesTest(TestCase):
         assert ReleaseProject.objects.filter(release=release, project=project2).exists()
         assert ReleaseProject.objects.filter(release=release, project=project3).exists()
 
+        # ReleaseProjectEnvironment.release
+        assert ReleaseProjectEnvironment.objects.get(
+            id=release_project_environment.id).release_id == release.id
+        assert ReleaseProjectEnvironment.objects.get(
+            id=release_project_environment2.id).release_id == release.id
+        assert ReleaseProjectEnvironment.objects.get(
+            id=release_project_environment3.id).release_id == release.id
+
         # GroupRelease.release_id
         assert GroupRelease.objects.get(id=group_release.id).release_id == release.id
         assert GroupRelease.objects.get(id=group_release2.id).release_id == release.id
diff --git a/tests/sentry/models/test_team.py b/tests/sentry/models/test_team.py
index 66b80fab65..0b54d16080 100644
--- a/tests/sentry/models/test_team.py
+++ b/tests/sentry/models/test_team.py
@@ -4,7 +4,7 @@ from __future__ import absolute_import
 
 from sentry.models import (
     OrganizationMember, OrganizationMemberTeam, Project, ProjectTeam,
-    Release, ReleaseProject, Team
+    Release, ReleaseProject, ReleaseProjectEnvironment, Team
 )
 from sentry.testutils import TestCase
 
@@ -160,3 +160,42 @@ class TransferTest(TestCase):
             release=release,
             project=project,
         ).exists()
+
+    def test_release_project_envs(self):
+        user = self.create_user()
+        org = self.create_organization(name='foo', owner=user)
+        org2 = self.create_organization(name='bar', owner=None)
+        team = self.create_team(organization=org)
+        project = self.create_project(teams=[team])
+
+        release = Release.objects.create(
+            version='a' * 7,
+            organization=org,
+        )
+
+        release.add_project(project)
+        env = self.create_environment(
+            name='prod',
+            project=project,
+        )
+        ReleaseProjectEnvironment.objects.create(
+            release=release,
+            project=project,
+            environment=env,
+        )
+
+        assert ReleaseProjectEnvironment.objects.filter(
+            release=release,
+            project=project,
+            environment=env,
+        ).exists()
+
+        team.transfer_to(org2)
+
+        assert Release.objects.filter(id=release.id).exists()
+
+        assert not ReleaseProjectEnvironment.objects.filter(
+            release=release,
+            project=project,
+            environment=env,
+        ).exists()
