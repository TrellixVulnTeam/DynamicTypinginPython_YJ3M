commit edf151f4251e4b9e4169d784d1d4a4e4d6191591
Author: Mark Story <mark@sentry.io>
Date:   Wed Apr 24 16:32:09 2019 -0400

    clean(features) Merge recent-searches into org-saved-searches (#12916)
    
    Combine these feature switches as we're planning on shipping them
    together.
    
    Refs SEN-470

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 64dca0dfa8..0aab3d32be 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -831,8 +831,6 @@ SENTRY_FEATURES = {
     'organizations:invite-members': True,
     # Enable org-wide saved searches and user pinned search
     'organizations:org-saved-searches': False,
-    # Enable user recent searches
-    'organizations:recent-searches': False,
     # Enable organizations to create and utilize Sentry Apps.
     'organizations:sentry-apps': False,
 
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index e6773c5fb6..f1e35e5f41 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -75,7 +75,6 @@ default_manager.add('organizations:onboarding', OrganizationFeature)  # NOQA
 default_manager.add('organizations:org-saved-searches', OrganizationFeature)  # NOQA
 default_manager.add('organizations:relay', OrganizationFeature)  # NOQA
 default_manager.add('organizations:release-commits', OrganizationFeature)  # NOQA
-default_manager.add('organizations:recent-searches', OrganizationFeature)  # NOQA
 default_manager.add('organizations:repos', OrganizationFeature)  # NOQA
 default_manager.add('organizations:require-2fa', OrganizationFeature)  # NOQA
 default_manager.add('organizations:sentry10', OrganizationFeature)  # NOQA
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 735bbc990e..9cdb05a048 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -63,18 +63,13 @@ class SearchBar extends React.Component {
     this.fetchData();
   }
 
-  hasRecentSearches = () => {
-    const {organization} = this.props;
-    return organization && organization.features.includes('recent-searches');
-  };
-
   hasOrgSavedSearches = () => {
     const {organization} = this.props;
     return organization && organization.features.includes('org-saved-searches');
   };
 
   fetchData = async () => {
-    if (!this.hasRecentSearches()) {
+    if (!this.hasOrgSavedSearches()) {
       this.setState({
         defaultSearchItems: [SEARCH_ITEMS, []],
       });
@@ -123,7 +118,7 @@ class SearchBar extends React.Component {
 
   handleSavedRecentSearch = () => {
     // No need to refetch if recent searches feature is not enabled
-    if (!this.hasRecentSearches()) {
+    if (!this.hasOrgSavedSearches()) {
       return;
     }
 
@@ -148,7 +143,7 @@ class SearchBar extends React.Component {
           maxSearchItems={5}
           hasPinnedSearch={hasPinnedSearch}
           savedSearchType={SEARCH_TYPES.ISSUE}
-          displayRecentSearches={this.hasRecentSearches()}
+          displayRecentSearches={this.hasOrgSavedSearches()}
           onSavedRecentSearch={this.handleSavedRecentSearch}
           onSidebarToggle={onSidebarToggle}
           pinnedSearch={savedSearch && savedSearch.isPinned ? savedSearch : null}
diff --git a/tests/js/spec/components/smartSearchBar.spec.jsx b/tests/js/spec/components/smartSearchBar.spec.jsx
index 9f905fdaad..5baa75e451 100644
--- a/tests/js/spec/components/smartSearchBar.spec.jsx
+++ b/tests/js/spec/components/smartSearchBar.spec.jsx
@@ -443,6 +443,11 @@ describe('SmartSearchBar', function() {
         method: 'DELETE',
         body: [],
       });
+      MockApiClient.addMockResponse({
+        url: '/organizations/org-slug/recent-searches/',
+        method: 'POST',
+        body: {},
+      });
     });
 
     it('adds pins', async function() {
diff --git a/tests/js/spec/views/organizationStream/overview.spec.jsx b/tests/js/spec/views/organizationStream/overview.spec.jsx
index 850736b5fa..252ad1dbe5 100644
--- a/tests/js/spec/views/organizationStream/overview.spec.jsx
+++ b/tests/js/spec/views/organizationStream/overview.spec.jsx
@@ -68,6 +68,10 @@ describe('OrganizationStream', function() {
       url: '/organizations/org-slug/searches/',
       body: [savedSearch],
     });
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/recent-searches/',
+      body: [],
+    });
     MockApiClient.addMockResponse({
       url: '/organizations/org-slug/processingissues/',
       method: 'GET',
diff --git a/tests/js/spec/views/stream/searchBar.spec.jsx b/tests/js/spec/views/stream/searchBar.spec.jsx
index 3240c16871..8df2af7196 100644
--- a/tests/js/spec/views/stream/searchBar.spec.jsx
+++ b/tests/js/spec/views/stream/searchBar.spec.jsx
@@ -23,7 +23,8 @@ describe('SearchBar', function() {
     tagValuePromise = Promise.resolve([]);
 
     recentSearchMock = MockApiClient.addMockResponse({
-      url: '/organizations/123/recent-searches/',
+      url: '/organizations/org-slug/recent-searches/',
+      method: 'GET',
       body: [],
     });
   });
@@ -48,7 +49,7 @@ describe('SearchBar', function() {
         return tagValuePromise;
       };
       const props = {
-        orgId: '123',
+        orgId: 'org-slug',
         query: 'url:"fu"',
         tagValueLoader: loader,
         supportedTags,
@@ -69,7 +70,7 @@ describe('SearchBar', function() {
       };
 
       const props = {
-        orgId: '123',
+        orgId: 'org-slug',
         projectId: '456',
         query: 'url:"http://example.com"',
         tagValueLoader: loader,
@@ -92,7 +93,7 @@ describe('SearchBar', function() {
       const loader = jest.fn(x => x);
 
       const props = {
-        orgId: '123',
+        orgId: 'org-slug',
         projectId: '456',
         query: 'timesSeen:',
         tagValueLoader: loader,
@@ -110,7 +111,7 @@ describe('SearchBar', function() {
     it('saves search query as a recent search', async function() {
       jest.useFakeTimers();
       const saveRecentSearch = MockApiClient.addMockResponse({
-        url: '/organizations/123/recent-searches/',
+        url: '/organizations/org-slug/recent-searches/',
         method: 'POST',
         body: {},
       });
@@ -121,7 +122,7 @@ describe('SearchBar', function() {
       };
       const onSearch = jest.fn();
       const props = {
-        orgId: '123',
+        orgId: 'org-slug',
         query: 'url:"fu"',
         onSearch,
         tagValueLoader: loader,
@@ -151,7 +152,7 @@ describe('SearchBar', function() {
     });
     it('does not query for recent searches if `displayRecentSearches` is `false`', async function() {
       const props = {
-        orgId: '123',
+        orgId: 'org-slug',
         query: 'timesSeen:',
         tagValueLoader: () => {},
         recentSearchType: 0,
@@ -171,7 +172,7 @@ describe('SearchBar', function() {
 
     it('queries for recent searches if `displayRecentSearches` is `true`', async function() {
       const props = {
-        orgId: '123',
+        orgId: 'org-slug',
         query: 'timesSeen:',
         tagValueLoader: () => {},
         recentSearchType: 0,
@@ -199,7 +200,7 @@ describe('SearchBar', function() {
 
     it('cycles through keyboard navigation for selection', async function() {
       const props = {
-        orgId: '123',
+        orgId: 'org-slug',
         query: 'timesSeen:',
         tagValueLoader: () => {},
         recentSearchType: 0,
@@ -252,6 +253,11 @@ describe('SearchBar', function() {
         method: 'DELETE',
         body: {},
       });
+      MockApiClient.addMockResponse({
+        url: '/organizations/org-slug/recent-searches/',
+        method: 'GET',
+        body: [],
+      });
     });
 
     it('does not have pin icon without org-saved-searches featureflag', function() {
diff --git a/tests/js/spec/views/stream/stream.spec.jsx b/tests/js/spec/views/stream/stream.spec.jsx
index 937962a8c1..f0c9ce2f99 100644
--- a/tests/js/spec/views/stream/stream.spec.jsx
+++ b/tests/js/spec/views/stream/stream.spec.jsx
@@ -57,6 +57,10 @@ describe('Stream', function() {
       url: '/projects/org-slug/project-slug/searches/',
       body: [savedSearch],
     });
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/recent-searches/',
+      body: [],
+    });
     MockApiClient.addMockResponse({
       url: '/organizations/org-slug/processingissues/',
       method: 'GET',
