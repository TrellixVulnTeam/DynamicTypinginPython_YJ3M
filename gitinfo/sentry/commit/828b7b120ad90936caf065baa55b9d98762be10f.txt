commit 828b7b120ad90936caf065baa55b9d98762be10f
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Jul 5 20:08:13 2016 +0300

    Switched address processing over to changes to the format

diff --git a/src/sentry/interfaces/debug_meta.py b/src/sentry/interfaces/debug_meta.py
index 1842fa1e55..537dedce89 100644
--- a/src/sentry/interfaces/debug_meta.py
+++ b/src/sentry/interfaces/debug_meta.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 __all__ = ('DebugMeta',)
 
 from sentry.interfaces.base import Interface, InterfaceValidationError
+from sentry.utils.native import parse_addr
 
 
 image_types = {}
@@ -18,12 +19,7 @@ def imagetype(name):
 @imagetype('apple')
 def process_apple_image(image):
     def _addr(x):
-        if isinstance(x, (int, long)):
-            return '0x%x' % x
-        if isinstance(x, basestring):
-            if x[:2] != '0x':
-                return '0x%x' % int(x)
-        return x
+        return '0x%x' % parse_addr(x)
     try:
         return {
             'cpu_type': image['cpu_type'],
diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 8d69b6e57b..5eeb7849c9 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -9,10 +9,11 @@ import posixpath
 from sentry.models import Project, EventError
 from sentry.plugins import Plugin2
 from sentry.lang.native.symbolizer import Symbolizer, have_symsynd
-from sentry.lang.native.utils import parse_addr, find_all_stacktraces, \
+from sentry.lang.native.utils import find_all_stacktraces, \
     find_apple_crash_report_referenced_images, \
     find_stacktrace_referenced_images, get_sdk_from_apple_system_info, \
     APPLE_SDK_MAPPING
+from sentry.utils.native import parse_addr
 
 
 logger = logging.getLogger(__name__)
@@ -395,9 +396,9 @@ def resolve_frame_symbols(data):
                 try:
                     sfrm = sym.symbolize_frame({
                         'object_name': frame.get('package'),
-                        'object_addr': parse_addr(frame['image_addr']),
-                        'instruction_addr': parse_addr(frame['instruction_addr']),
-                        'symbol_addr': parse_addr(frame['symbol_addr']),
+                        'object_addr': frame['image_addr'],
+                        'instruction_addr': frame['instruction_addr'],
+                        'symbol_addr': frame['symbol_addr'],
                     }, sdk_info, report_error=report_error)
                     if not sfrm:
                         continue
@@ -416,8 +417,9 @@ def resolve_frame_symbols(data):
                     if sfrm.get('column') is not None:
                         frame['colno'] = sfrm['column']
                     frame['package'] = sfrm['object_name'] or frame.get('package')
-                    frame['symbol_addr'] = '0x%x' % sfrm['symbol_addr']
-                    frame['instruction_addr'] = '0x%x' % sfrm['instruction_addr']
+                    frame['symbol_addr'] = '0x%x' % parse_addr(sfrm['symbol_addr'])
+                    frame['instruction_addr'] = '0x%x' % parse_addr(
+                        sfrm['instruction_addr'])
                     frame['in_app'] = is_in_app(frame)
                     longest_addr = max(longest_addr, len(frame['symbol_addr']),
                                        len(frame['instruction_addr']))
diff --git a/src/sentry/lang/native/utils.py b/src/sentry/lang/native/utils.py
index 3faae0b791..e78203ed10 100644
--- a/src/sentry/lang/native/utils.py
+++ b/src/sentry/lang/native/utils.py
@@ -87,15 +87,3 @@ def get_sdk_from_apple_system_info(info):
         'version_minor': system_version[1],
         'version_patchlevel': system_version[2],
     }
-
-
-def parse_addr(x):
-    if x is None:
-        return 0
-    if isinstance(x, (int, long)):
-        return x
-    if isinstance(x, basestring):
-        if x[:2] == '0x':
-            return int(x[2:], 16)
-        return int(x)
-    raise ValueError('Unsupported address format %r' % (x,))
diff --git a/src/sentry/models/dsymfile.py b/src/sentry/models/dsymfile.py
index e706c80925..cc217e3fd2 100644
--- a/src/sentry/models/dsymfile.py
+++ b/src/sentry/models/dsymfile.py
@@ -26,6 +26,7 @@ from sentry.db.models import FlexibleForeignKey, Model, BoundedBigIntegerField,
 from sentry.models.file import File
 from sentry.utils.zip import safe_extract_zip
 from sentry.utils.db import is_sqlite
+from sentry.utils.native import parse_addr
 from sentry.constants import KNOWN_DSYM_TYPES
 
 
@@ -174,8 +175,12 @@ class DSymSymbolManager(BaseManager):
         if sdk_info is not None and sdk_info['dsym_type'] == 'none':
             return
 
+        instruction_addr = parse_addr(instruction_addr)
+        image_addr = parse_addr(image_addr)
+
         addr_abs = None
         if image_vmaddr is not None:
+            image_vmaddr = parse_addr(image_vmaddr)
             addr_abs = image_vmaddr + instruction_addr - image_addr
         addr_rel = instruction_addr - image_addr
 
