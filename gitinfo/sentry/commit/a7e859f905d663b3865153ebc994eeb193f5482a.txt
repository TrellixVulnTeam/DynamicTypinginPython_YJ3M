commit a7e859f905d663b3865153ebc994eeb193f5482a
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Mon Dec 2 18:17:18 2019 -0500

    ref(apm): Disallow collapsing the root span (#15898)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
index 69e32e8ee1..3fae573ede 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
@@ -310,7 +310,7 @@ class SpanBar extends React.Component<SpanBarProps, SpanBarState> {
   };
 
   renderSpanTreeToggler = ({left}: {left: number}) => {
-    const {numOfSpanChildren} = this.props;
+    const {numOfSpanChildren, isRoot} = this.props;
 
     const chevronSrc = this.props.showSpanTree ? 'icon-chevron-up' : 'icon-chevron-down';
     const chevron = <Chevron src={chevronSrc} />;
@@ -323,23 +323,38 @@ class SpanBar extends React.Component<SpanBarProps, SpanBarState> {
       );
     }
 
+    const chevronElement = !isRoot ? (
+      <div
+        style={{
+          marginRight: '2px',
+          width: '5px',
+          textAlign: 'right',
+        }}
+      >
+        {chevron}
+      </div>
+    ) : null;
+
     return (
       <SpanTreeTogglerContainer style={{left: `${left}px`}} hasToggler>
         {this.renderSpanTreeConnector({hasToggler: true})}
         <SpanTreeToggler
+          disabled={!!isRoot}
           isExpanded={this.props.showSpanTree}
           onClick={event => {
             event.stopPropagation();
 
+            if (isRoot) {
+              return;
+            }
+
             this.props.toggleSpanTree();
           }}
         >
           <span style={{marginRight: '2px', textAlign: 'center'}}>
             <Count value={numOfSpanChildren} />
           </span>
-          <div style={{marginRight: '2px', width: '5px', textAlign: 'right'}}>
-            {chevron}
-          </div>
+          {chevronElement}
         </SpanTreeToggler>
       </SpanTreeTogglerContainer>
     );
@@ -896,10 +911,28 @@ const ConnectorBar = styled('div')`
   position: absolute;
 `;
 
-const getTogglerTheme = ({isExpanded, theme}) => {
+const getTogglerTheme = ({
+  isExpanded,
+  theme,
+  disabled,
+}: {
+  isExpanded: boolean;
+  theme: any;
+  disabled: boolean;
+}) => {
   const buttonTheme = isExpanded ? theme.button.default : theme.button.primary;
   const activeButtonTheme = isExpanded ? theme.button.primary : theme.button.default;
 
+  if (disabled) {
+    return `
+    background: ${buttonTheme.background};
+    border: 1px solid ${buttonTheme.border};
+    color: ${buttonTheme.color};
+
+    cursor: default;
+  `;
+  }
+
   return `
     background: ${buttonTheme.background};
     border: 1px solid ${buttonTheme.border};
@@ -915,6 +948,7 @@ const getTogglerTheme = ({isExpanded, theme}) => {
 
 type SpanTreeTogglerAndDivProps = OmitHtmlDivProps<{
   isExpanded: boolean;
+  disabled: boolean;
 }>;
 
 const SpanTreeToggler = styled('div')<SpanTreeTogglerAndDivProps>`
