commit 700088c7834acd983c319a6bcc56ef6f55d34c7e
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Oct 31 13:37:54 2018 -0700

    feat(search): Add support for passing api params to event search utils

diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index 50fd7937bf..448a653620 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -54,7 +54,19 @@ FIELD_LOOKUP = {
     'timestamp': {
         'snuba_name': 'timestamp',
         'type': 'timestamp',
-    }
+    },
+    'start': {
+        'snuba_name': 'start',
+        'type': 'timestamp',
+    },
+    'end': {
+        'snuba_name': 'end',
+        'type': 'timestamp',
+    },
+    'project_id': {
+        'snuba_name': 'project_id',
+        'type': 'list',
+    },
 }
 
 
@@ -147,21 +159,49 @@ def parse_search_query(query):
     return SearchVisitor().visit(tree)
 
 
-def get_snuba_query_args(query):
-    parsed_filters = parse_search_query(query)
-    conditions = []
+def convert_endpoint_params(params):
+    return [
+        SearchFilter(
+            SearchKey(key),
+            '=',
+            SearchValue(params[key], FIELD_LOOKUP[key]['type']),
+        ) for key in params
+    ]
+
+
+def get_snuba_query_args(query=None, params=None):
+    # NOTE: this function assumes project permisions check already happened
+    parsed_filters = []
+    if query is not None:
+        parsed_filters = parse_search_query(query)
+
+    # Keys included as url params take precedent if same key is included in search
+    if params is not None:
+        parsed_filters.extend(convert_endpoint_params(params))
+
+    kwargs = {
+        'conditions': [],
+        'filter_keys': {},
+    }
     for _filter in parsed_filters:
-        if _filter.key.snuba_name == 'message':
+        if _filter.key.snuba_name in ('start', 'end'):
+            kwargs[_filter.key.snuba_name] = _filter.value.raw_value
+
+        elif _filter.key.snuba_name == 'project_id':
+            kwargs['filter_keys'][_filter.key.snuba_name] = _filter.value.raw_value
+
+        elif _filter.key.snuba_name == 'message':
             # make message search case insensitive
-            conditions.append(
+            kwargs['conditions'].append(
                 [['positionCaseInsensitive', ['message', "'%s'" %
                                               (_filter.value.raw_value,)]], '!=', 0]
             )
+
         else:
-            conditions.append([
+            kwargs['conditions'].append([
                 _filter.key.snuba_name,
                 _filter.operator,
                 _filter.value.raw_value,
             ])
 
-    return {'conditions': conditions}
+    return kwargs
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index c5eb1de595..0742a6ee1f 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -5,7 +5,8 @@ import datetime
 from django.utils import timezone
 
 from sentry.api.event_search import (
-    get_snuba_query_args, parse_search_query, InvalidSearchQuery, SearchFilter, SearchKey, SearchValue
+    convert_endpoint_params, get_snuba_query_args, parse_search_query,
+    InvalidSearchQuery, SearchFilter, SearchKey, SearchValue
 )
 from sentry.testutils import TestCase
 
@@ -101,10 +102,70 @@ class EventSearchTest(TestCase):
             parse_search_query('fruit:apple release:1.2.1')
 
     def test_get_snuba_query_args(self):
-        assert get_snuba_query_args('user.email:foo@example.com release:1.2.1 hello') == {
+        assert get_snuba_query_args('user.email:foo@example.com release:1.2.1 hello', {
+            'project_id': [1, 2, 3],
+            'start': datetime.datetime(2015, 5, 18, 10, 15, 1, tzinfo=timezone.utc),
+            'end': datetime.datetime(2015, 5, 19, 10, 15, 1, tzinfo=timezone.utc),
+        }) == {
             'conditions': [
                 ['email', '=', 'foo@example.com'],
                 ['sentry:release', '=', '1.2.1'],
                 [['positionCaseInsensitive', ['message', "'hello'"]], '!=', 0],
-            ]
+            ],
+            'filter_keys': {'project_id': [1, 2, 3]},
+            'start': datetime.datetime(2015, 5, 18, 10, 15, 1, tzinfo=timezone.utc),
+            'end': datetime.datetime(2015, 5, 19, 10, 15, 1, tzinfo=timezone.utc),
         }
+
+    def test_get_snuba_query_args_no_search(self):
+        assert get_snuba_query_args(params={
+            'project_id': [1, 2, 3],
+            'start': datetime.datetime(2015, 5, 18, 10, 15, 1, tzinfo=timezone.utc),
+            'end': datetime.datetime(2015, 5, 19, 10, 15, 1, tzinfo=timezone.utc),
+        }) == {
+            'conditions': [],
+            'filter_keys': {'project_id': [1, 2, 3]},
+            'start': datetime.datetime(2015, 5, 18, 10, 15, 1, tzinfo=timezone.utc),
+            'end': datetime.datetime(2015, 5, 19, 10, 15, 1, tzinfo=timezone.utc),
+        }
+
+    def test_convert_endpoint_params(self):
+        assert convert_endpoint_params({
+            'project_id': [1, 2, 3],
+            'start': datetime.datetime(2015, 5, 18, 10, 15, 1, tzinfo=timezone.utc),
+            'end': datetime.datetime(2015, 5, 19, 10, 15, 1, tzinfo=timezone.utc),
+        }) == [
+            SearchFilter(
+                key=SearchKey(name='start'),
+                operator='=',
+                value=SearchValue(
+                    raw_value=datetime.datetime(
+                        2015,
+                        5,
+                        18,
+                        10,
+                        15,
+                        1,
+                        tzinfo=timezone.utc),
+                    type='timestamp')
+            ),
+            SearchFilter(
+                key=SearchKey(name='project_id'),
+                operator='=',
+                value=SearchValue(raw_value=[1, 2, 3], type='list')
+            ),
+            SearchFilter(
+                key=SearchKey(name='end'),
+                operator='=',
+                value=SearchValue(
+                    raw_value=datetime.datetime(
+                        2015,
+                        5,
+                        19,
+                        10,
+                        15,
+                        1,
+                        tzinfo=timezone.utc),
+                    type='timestamp')
+            ),
+        ]
