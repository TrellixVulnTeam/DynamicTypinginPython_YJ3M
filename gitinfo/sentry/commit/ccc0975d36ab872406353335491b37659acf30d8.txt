commit ccc0975d36ab872406353335491b37659acf30d8
Author: Ben Vinegar <benvinegar@users.noreply.github.com>
Date:   Mon Oct 3 11:28:00 2016 -0700

    Can pass redirect url for after login (#4250)
    
    * Can pass redirect url for after login
    
    /cc @getsentry/team @dcramer
    
    * Remove unrelated comment
    
    * Fix test
    
    * Fix urlquote import

diff --git a/src/sentry/web/frontend/auth_login.py b/src/sentry/web/frontend/auth_login.py
index 54130aaf04..e15ac38d3a 100644
--- a/src/sentry/web/frontend/auth_login.py
+++ b/src/sentry/web/frontend/auth_login.py
@@ -125,6 +125,11 @@ class AuthLoginView(BaseView):
     @never_cache
     @transaction.atomic
     def handle(self, request):
+        redirect_next = request.GET.get('next', None)
+        if redirect_next:
+            # TODO: enforce max redirect_next limit? (potential for abuse?)
+            request.session['_next'] = redirect_next
+
         if request.user.is_authenticated():
             return self.redirect_to_org(request)
 
diff --git a/tests/sentry/web/frontend/test_auth_login.py b/tests/sentry/web/frontend/test_auth_login.py
index 828a02770a..a0608e9ff6 100644
--- a/tests/sentry/web/frontend/test_auth_login.py
+++ b/tests/sentry/web/frontend/test_auth_login.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+from django.utils.http import urlquote
+
 from django.core.urlresolvers import reverse
 from exam import fixture
 
@@ -97,3 +99,28 @@ class AuthLoginTest(TestCase):
         assert resp.context['op'] == 'register'
         assert resp.context['register_form'].initial['username'] == 'foo@example.com'
         self.assertTemplateUsed('sentry/login.html')
+
+    def test_redirects_to_relative_next_url(self):
+        next = '/welcome'
+        self.client.get(self.path + '?next=' + next)
+
+        resp = self.client.post(self.path, {
+            'username': self.user.username,
+            'password': 'admin',
+            'op': 'login',
+        })
+        assert resp.status_code == 302
+        assert resp.get('Location', '').endswith(next)
+
+    def test_doesnt_redirect_to_external_next_url(self):
+        next = "http://example.com"
+        self.client.get(self.path + '?next=' + urlquote(next))
+
+        resp = self.client.post(self.path, {
+            'username': self.user.username,
+            'password': 'admin',
+            'op': 'login',
+        })
+        assert resp.status_code == 302
+        assert next not in resp['Location']
+        assert resp['Location'] == 'http://testserver/auth/login/'
