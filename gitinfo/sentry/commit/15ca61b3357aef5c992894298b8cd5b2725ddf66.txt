commit 15ca61b3357aef5c992894298b8cd5b2725ddf66
Author: Alex Hofsteede <alex@hofsteede.com>
Date:   Tue Apr 10 11:20:58 2018 -0700

    perf(tests) Make test_retries faster (#7990)
    
    Reduce all times by a factor 0f 100, should cut a few seconds off the
    test time

diff --git a/tests/sentry/utils/test_retries.py b/tests/sentry/utils/test_retries.py
index 44334ea61f..3ab1bca98d 100644
--- a/tests/sentry/utils/test_retries.py
+++ b/tests/sentry/utils/test_retries.py
@@ -11,10 +11,10 @@ class TimedRetryPolicyTestCase(TestCase):
         bomb = Exception('Boom!')
         callable = mock.MagicMock(side_effect=[bomb, mock.sentinel.OK])
 
-        retry = TimedRetryPolicy(30, delay=lambda i: 10)
+        retry = TimedRetryPolicy(0.3, delay=lambda i: 0.1)
         retry.clock = mock.Mock()
         retry.clock.sleep = mock.MagicMock()
-        retry.clock.time = mock.MagicMock(side_effect=[0, 15])
+        retry.clock.time = mock.MagicMock(side_effect=[0, 0.15])
 
         assert retry(callable) is mock.sentinel.OK
         assert callable.call_count == 2
@@ -23,10 +23,10 @@ class TimedRetryPolicyTestCase(TestCase):
         bomb = Exception('Boom!')
         callable = mock.MagicMock(side_effect=bomb)
 
-        retry = TimedRetryPolicy(30, delay=lambda i: 10)
+        retry = TimedRetryPolicy(0.3, delay=lambda i: 0.1)
         retry.clock = mock.Mock()
         retry.clock.sleep = mock.MagicMock()
-        retry.clock.time = mock.MagicMock(side_effect=[0, 15, 25])
+        retry.clock.time = mock.MagicMock(side_effect=[0, 0.15, 0.25])
 
         try:
             retry(callable)
@@ -41,13 +41,13 @@ class TimedRetryPolicyTestCase(TestCase):
         bomb = Exception('Boom!')
         callable = mock.MagicMock(side_effect=[bomb, mock.sentinel.OK])
 
-        @TimedRetryPolicy.wrap(30, delay=lambda i: 10)
+        @TimedRetryPolicy.wrap(0.3, delay=lambda i: 0.1)
         def retrying_func():
             return callable()
 
         retrying_func.clock = mock.Mock()
         retrying_func.clock.sleep = mock.MagicMock()
-        retrying_func.clock.time = mock.MagicMock(side_effect=[0, 15, 25])
+        retrying_func.clock.time = mock.MagicMock(side_effect=[0, 0.15, 0.25])
 
         assert retrying_func() is mock.sentinel.OK
         assert callable.call_count == 2
