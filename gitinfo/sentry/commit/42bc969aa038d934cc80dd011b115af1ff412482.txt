commit 42bc969aa038d934cc80dd011b115af1ff412482
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Feb 15 11:15:49 2018 -0800

    test(teams): Add tests for team members page

diff --git a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
new file mode 100644
index 0000000000..7274198f7a
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
@@ -0,0 +1,191 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`TeamMembers render() renders 1`] = `
+<div>
+  <div
+    className="clearfix"
+    style={
+      Object {
+        "marginBottom": 20,
+      }
+    }
+  >
+    <Button
+      className="pull-right"
+      disabled={false}
+      priority="primary"
+      size="small"
+      to="/settings/organization/org-slug/members/new/"
+    >
+      <span
+        className="icon-plus"
+      />
+       
+      Invite Member
+    </Button>
+  </div>
+  <table
+    className="table member-list"
+  >
+    <colgroup>
+      <col />
+      <col
+        width="150"
+      />
+    </colgroup>
+    <thead>
+      <tr>
+        <th>
+          Member
+        </th>
+      </tr>
+    </thead>
+    <tbody>
+      <tr
+        key="0"
+      >
+        <td
+          className="table-user-info"
+        >
+          <Avatar
+            className="avatar"
+            gravatar={true}
+            size={80}
+            user={
+              Object {
+                "email": "",
+                "flags": Object {
+                  "sso:linked": false,
+                },
+                "id": "1",
+                "name": "",
+                "pending": false,
+                "roleName": "",
+                "user": Object {
+                  "email": "sentry1@test.com",
+                  "has2fa": false,
+                  "id": "1",
+                  "name": "Sentry 1 Name",
+                  "username": "Sentry 1 Username",
+                },
+              }
+            }
+          />
+          <h5>
+            <Link
+              onlyActiveOnIndex={false}
+              style={Object {}}
+              to="/settings/organization/org-slug/members/1"
+            />
+          </h5>
+        </td>
+        <td>
+          <Button
+            disabled={false}
+            onClick={[Function]}
+            size="small"
+          >
+            Remove
+          </Button>
+        </td>
+      </tr>
+      <tr
+        key="1"
+      >
+        <td
+          className="table-user-info"
+        >
+          <Avatar
+            className="avatar"
+            gravatar={true}
+            size={80}
+            user={
+              Object {
+                "email": "",
+                "flags": Object {
+                  "sso:linked": false,
+                },
+                "id": "2",
+                "name": "",
+                "pending": false,
+                "roleName": "",
+                "user": Object {
+                  "email": "sentry2@test.com",
+                  "has2fa": true,
+                  "id": "2",
+                  "name": "Sentry 2 Name",
+                  "username": "Sentry 2 Username",
+                },
+              }
+            }
+          />
+          <h5>
+            <Link
+              onlyActiveOnIndex={false}
+              style={Object {}}
+              to="/settings/organization/org-slug/members/2"
+            />
+          </h5>
+        </td>
+        <td>
+          <Button
+            disabled={false}
+            onClick={[Function]}
+            size="small"
+          >
+            Remove
+          </Button>
+        </td>
+      </tr>
+      <tr
+        key="2"
+      >
+        <td
+          className="table-user-info"
+        >
+          <Avatar
+            className="avatar"
+            gravatar={true}
+            size={80}
+            user={
+              Object {
+                "email": "",
+                "flags": Object {
+                  "sso:linked": true,
+                },
+                "id": "3",
+                "name": "",
+                "pending": false,
+                "roleName": "",
+                "user": Object {
+                  "email": "sentry3@test.com",
+                  "has2fa": true,
+                  "id": "3",
+                  "name": "Sentry 3 Name",
+                  "username": "Sentry 3 Username",
+                },
+              }
+            }
+          />
+          <h5>
+            <Link
+              onlyActiveOnIndex={false}
+              style={Object {}}
+              to="/settings/organization/org-slug/members/3"
+            />
+          </h5>
+        </td>
+        <td>
+          <Button
+            disabled={false}
+            onClick={[Function]}
+            size="small"
+          >
+            Remove
+          </Button>
+        </td>
+      </tr>
+    </tbody>
+  </table>
+</div>
+`;
diff --git a/tests/js/spec/views/teamMembers.spec.jsx b/tests/js/spec/views/teamMembers.spec.jsx
new file mode 100644
index 0000000000..cdc515d83e
--- /dev/null
+++ b/tests/js/spec/views/teamMembers.spec.jsx
@@ -0,0 +1,72 @@
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+
+import {Client} from 'app/api';
+import TeamMembers from 'app/views/settings/team/teamMembers';
+
+describe('TeamMembers', function() {
+  let org;
+  let team;
+  let members;
+
+  beforeEach(function() {
+    org = TestStubs.Organization();
+    team = TestStubs.Team();
+    members = TestStubs.Members();
+
+    Client.addMockResponse({
+      url: `/teams/${org.slug}/${team.slug}/members/`,
+      method: 'GET',
+      body: members,
+    });
+  });
+
+  describe('render()', function() {
+    it('renders', function() {
+      let wrapper = shallow(
+        <TeamMembers params={{orgId: org.slug, teamId: team.slug}} organization={org} />,
+        {
+          context: {
+            organization: org,
+          },
+        }
+      );
+      expect(wrapper).toMatchSnapshot();
+    });
+  });
+
+  describe('TeamMembers.removeMember()', function() {
+    it('can remove a team', function() {
+      let endpoint = `/organizations/${org.slug}/members/${members[0]
+        .id}/teams/${team.slug}/`;
+      let mock = Client.addMockResponse({
+        url: endpoint,
+        method: 'DELETE',
+        statusCode: 200,
+      });
+
+      let wrapper = mount(
+        <TeamMembers params={{orgId: org.slug, teamId: team.slug}} organization={org} />,
+        {
+          context: {
+            organization: org,
+          },
+        }
+      );
+
+      expect(mock).not.toHaveBeenCalled();
+
+      wrapper
+        .find('.button-default')
+        .first()
+        .simulate('click');
+
+      expect(mock).toHaveBeenCalledWith(
+        endpoint,
+        expect.objectContaining({
+          method: 'DELETE',
+        })
+      );
+    });
+  });
+});
