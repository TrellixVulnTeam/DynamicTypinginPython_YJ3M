commit 5f5d14ec3880530b2d0e1cf7c4468f82ad831067
Author: ted kaemming <t.kaemming+github@gmail.com>
Date:   Thu Aug 11 19:10:45 2016 -0700

    More report updates. (#3926)

diff --git a/src/sentry/tasks/reports.py b/src/sentry/tasks/reports.py
index 34e825ab12..766ec8fc18 100644
--- a/src/sentry/tasks/reports.py
+++ b/src/sentry/tasks/reports.py
@@ -8,6 +8,7 @@ from collections import namedtuple
 from datetime import timedelta
 from six.moves import reduce
 
+from django.db.models import Q
 from django.utils import dateformat, timezone
 
 from sentry import features
@@ -185,11 +186,20 @@ def trim_issue_list(value):
         value,
         key=lambda (id, statistics): statistics,
         reverse=True,
-    )[:5]
+    )[:10]
 
 
-def prepare_project_issue_list((start, stop), queryset, rollup=60 * 60 * 24):
-    issue_ids = list(queryset.values_list('id', flat=True))
+def prepare_project_issue_list(interval, project):
+    start, stop = interval
+
+    issue_ids = list(
+        project.group_set.exclude(status=GroupStatus.MUTED).filter(
+            Q(first_seen__gte=start, first_seen__lt=stop) |
+            Q(status=GroupStatus.UNRESOLVED, resolved_at__gte=start, resolved_at__lt=stop)
+        ).values_list('id', flat=True)
+    )
+
+    rollup = 60 * 60 * 24
 
     events = tsdb.get_sums(
         tsdb.models.group,
@@ -213,35 +223,6 @@ def prepare_project_issue_list((start, stop), queryset, rollup=60 * 60 * 24):
     )
 
 
-def prepare_project_issue_lists(interval, project):
-    start, stop = interval
-    queryset = project.group_set.exclude(status=GroupStatus.MUTED)
-    return (
-        prepare_project_issue_list(
-            interval,
-            queryset.filter(
-                first_seen__gte=start,
-                first_seen__lt=stop,
-            ),
-        ),
-        prepare_project_issue_list(
-            interval,
-            queryset.filter(
-                status=GroupStatus.UNRESOLVED,
-                resolved_at__gte=start,
-                resolved_at__lt=stop,
-            ),
-        ),
-        prepare_project_issue_list(
-            interval,
-            queryset.filter(
-                last_seen__gte=start,
-                last_seen__lt=stop,
-            ),
-        ),
-    )
-
-
 def merge_issue_lists(target, other):
     return (
         target[0] + other[0],
@@ -253,7 +234,7 @@ def prepare_project_report(interval, project):
     return (
         prepare_project_series(interval, project),
         prepare_project_aggregates(interval, project),
-        prepare_project_issue_lists(interval, project),
+        prepare_project_issue_list(interval, project),
     )
 
 
@@ -280,10 +261,9 @@ def merge_reports(target, other):
             other[1],
             safe_add,
         ),
-        merge_sequences(
+        merge_issue_lists(
             target[2],
             other[2],
-            merge_issue_lists,
         ),
     )
 
@@ -460,7 +440,7 @@ Point = namedtuple('Point', 'resolved unresolved')
 
 
 def to_context(report, fetch_groups=None):
-    series, aggregates, issue_lists = report
+    series, aggregates, issue_list = report
     series = [(timestamp, Point(*values)) for timestamp, values in series]
 
     return {
@@ -477,9 +457,8 @@ def to_context(report, fetch_groups=None):
                 mean(aggregates) if all(v is not None for v in aggregates) else None,
             )),
         ],
-        'issues': (
-            ('New Issues', rewrite_issue_list(issue_lists[0], fetch_groups)),
-            ('Reintroduced Issues', rewrite_issue_list(issue_lists[1], fetch_groups)),
-            ('Most Frequently Seen Issues', rewrite_issue_list(issue_lists[2], fetch_groups)),
+        'issue_list': rewrite_issue_list(
+            issue_list,
+            fetch_groups,
         ),
     }
diff --git a/src/sentry/templates/sentry/emails/reports/body.html b/src/sentry/templates/sentry/emails/reports/body.html
index bd451b2929..38141198a4 100644
--- a/src/sentry/templates/sentry/emails/reports/body.html
+++ b/src/sentry/templates/sentry/emails/reports/body.html
@@ -83,41 +83,39 @@
     </tr>
   </table>
 
-  {% for label, issues in report.issues %}
-    <table class="issue-table">
-      <thead>
+  <table class="issue-table">
+    <thead>
+      <tr>
+        <th>
+          <h4>New and Reopened Issues {{ duration.noun|title }}</h4>
+        </th>
+        <th class="narrow-column">Events</th>
+        <th class="narrow-column">Users</th>
+      </tr>
+    </thead>
+    <tbody>
+      {% for group, statistics in report.issue_list.issues %}
         <tr>
-          <th>
-            <h4>{{ label }} ({{ issues.count }})</h4>
-          </th>
-          <th class="narrow-column">Events</th>
-          <th class="narrow-column">Users</th>
+          <td class="issue">
+            {% include "sentry/emails/_group.html" %}
+            <small>
+              Last seen at {{ group.last_seen }}
+              in <a href="{% absolute_uri project_link %}" class="issue-project">{{ group.project.name }}</a>
+            </small>
+          </td>
+          <td class="narrow-column">{{ statistics.events|small_count }}</td>
+          <td class="narrow-column">{{ statistics.users|small_count }}</td>
         </tr>
-      </thead>
-      <tbody>
-        {% for group, statistics in issues.issues %}
-          <tr>
-            <td class="issue">
-              {% include "sentry/emails/_group.html" %}
-              <small>
-                Last seen at {{ group.last_seen }}
-                in <a href="{% absolute_uri project_link %}" class="issue-project">{{ group.project.name }}</a>
-              </small>
-            </td>
-            <td class="narrow-column">{{ statistics.events|small_count }}</td>
-            <td class="narrow-column">{{ statistics.users|small_count }}</td>
-          </tr>
-        {% empty %}
-          <tr>
-            <td class="empty" colspan="3">
-              {# TODO: This is probably not the best way to articulate this. #}
-              There were no issues this period.
-            </td>
-          </tr>
-        {% endfor %}
-      </tbody>
-    </table>
-  {% endfor %}
+      {% empty %}
+        <tr>
+          <td class="empty" colspan="3">
+            {# TODO: This is probably not the best way to articulate this. #}
+            There were no issues this period.
+          </td>
+        </tr>
+      {% endfor %}
+    </tbody>
+  </table>
 
   {% if personal.resolved or personal.users %}
     <h4>Your impact</h4>
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index 9a06cebbdd..90cc9584a5 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -449,9 +449,7 @@ def report(request):
             random.randint(0, daily_maximum * 7) if random.random() < 0.9 else None for _ in xrange(0, 4)
         ]
 
-        issue_lists = [build_issue_list() for _ in range(0, 3)]
-
-        return series, aggregates, issue_lists
+        return series, aggregates, build_issue_list()
 
     report = reduce(
         reports.merge_reports,
