commit f068f1827f34484831129208d292949a6ea0b393
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Nov 7 16:41:17 2019 -0800

    chore(emotion): Convert badge to styled components (#15492)

diff --git a/src/sentry/static/sentry/app/components/badge.tsx b/src/sentry/static/sentry/app/components/badge.tsx
index c20478efa6..8b5d2cf292 100644
--- a/src/sentry/static/sentry/app/components/badge.tsx
+++ b/src/sentry/static/sentry/app/components/badge.tsx
@@ -1,16 +1,41 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {cx} from 'react-emotion';
+import styled from 'react-emotion';
+import space from 'app/styles/space';
+import theme from 'app/utils/theme';
 
-type Props = {
+const priorityColors = {
+  new: theme.red,
+  strong: theme.blue,
+  highlight: theme.green,
+} as const;
+
+type Props = React.HTMLProps<HTMLSpanElement> & {
   text?: string;
-  priority?: 'strong' | 'new' | 'highlight';
+  priority?: keyof typeof priorityColors;
   className?: string;
 };
 
-const Badge = ({priority, className, text}: Props) => (
-  <span className={cx('badge', priority, className)}>{text}</span>
-);
+const Badge = styled(({priority, text, ...props}: Props) => (
+  <span {...props}>{text}</span>
+))<Props>`
+  display: inline-block;
+  height: 20px;
+  min-width: 20px;
+  line-height: 20px;
+  border-radius: 20px;
+  padding: 0 5px;
+  margin-left: ${space(0.5)};
+  font-size: 75%;
+  font-weight: 600;
+  text-align: center;
+  color: #fff;
+  background: ${p => (p.priority ? priorityColors[p.priority] : theme.gray1)};
+  transition: background 100ms linear;
+
+  position: relative;
+  top: -1px;
+`;
 
 Badge.propTypes = {
   text: PropTypes.string,
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
index 951b6bc64f..38108210f7 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
@@ -19,6 +19,7 @@ import SeenByList from 'app/components/seenByList';
 import SentryTypes from 'app/sentryTypes';
 import ShortId from 'app/components/shortId';
 import Tooltip from 'app/components/tooltip';
+import Badge from 'app/components/badge';
 import space from 'app/styles/space';
 import withApi from 'app/utils/withApi';
 
@@ -206,14 +207,13 @@ class GroupHeader extends React.Component {
             to={`${baseUrl}${groupId}/activity/${location.search}`}
             isActive={() => location.pathname.includes('/activity/')}
           >
-            {t('Comments')} <span className="badge animated">{group.numComments}</span>
+            {t('Comments')} <Badge text={group.numComments} />
           </ListLink>
           <ListLink
             to={`${baseUrl}${groupId}/feedback/${location.search}`}
             isActive={() => location.pathname.includes('/feedback/')}
           >
-            {t('User Feedback')}
-            <span className="badge animated">{group.userReportCount}</span>
+            {t('User Feedback')} <Badge text={group.userReportCount} />
           </ListLink>
           <ListLink
             to={`${baseUrl}${groupId}/tags/${location.search}`}
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 58c46ae94a..be873c19fb 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -1547,50 +1547,6 @@ header + .alert {
   }
 }
 
-/**
-* Badge
-* ============================================================================
-*/
-
-.badge {
-  background: @40;
-  color: #fff;
-  font-size: 75%;
-  font-weight: 600;
-  .square(20px);
-  padding: 0 5px;
-  min-width: 20px;
-  width: auto;
-  border-radius: 20px;
-  line-height: 20px;
-  text-align: center;
-  display: inline-block;
-  position: relative;
-  top: -1px;
-  margin-left: 4px;
-  .transition(0.1s background linear);
-
-  &.new {
-    background: @red;
-  }
-
-  &.badge-soft {
-    color: @gray;
-    top: 0;
-    line-height: 18px;
-    border: 1px solid @gray-lighter;
-    background: inherit;
-  }
-
-  &.strong {
-    background: @blue;
-  }
-
-  &.highlight {
-    background: @green;
-  }
-}
-
 /**
 * Label
 * ============================================================================
diff --git a/tests/js/spec/views/settings/organizationMembers/organizationMembersWrapper.spec.jsx b/tests/js/spec/views/settings/organizationMembers/organizationMembersWrapper.spec.jsx
index 2650a90c9e..6c6f62232b 100644
--- a/tests/js/spec/views/settings/organizationMembers/organizationMembersWrapper.spec.jsx
+++ b/tests/js/spec/views/settings/organizationMembers/organizationMembersWrapper.spec.jsx
@@ -110,7 +110,7 @@ describe('OrganizationMembersWrapper', function() {
     );
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge[text="2"]').exists()).toBe(true);
+    expect(wrapper.find('StyledBadge[text="2"]').exists()).toBe(true);
     expect(wrapper.find('ListLink[data-test-id="members-tab"]').exists()).toBe(true);
     expect(wrapper.find('ListLink[data-test-id="requests-tab"]').exists()).toBe(true);
 
@@ -143,7 +143,7 @@ describe('OrganizationMembersWrapper', function() {
     );
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge').exists()).toBe(false);
+    expect(wrapper.find('StyledBadge').exists()).toBe(false);
     expect(wrapper.find('ListLink[data-test-id="members-tab"]').exists()).toBe(true);
     expect(wrapper.find('ListLink[data-test-id="requests-tab"]').exists()).toBe(true);
   });
@@ -191,7 +191,7 @@ describe('OrganizationMembersWrapper', function() {
     );
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge[text="1"]').exists()).toBe(true);
+    expect(wrapper.find('StyledBadge[text="1"]').exists()).toBe(true);
     expect(wrapper.find('ListLink[data-test-id="members-tab"]').exists()).toBe(true);
     expect(wrapper.find('ListLink[data-test-id="requests-tab"]').exists()).toBe(true);
 
diff --git a/tests/js/spec/views/settings/organizationMembers/organizationRequestsView.spec.jsx b/tests/js/spec/views/settings/organizationMembers/organizationRequestsView.spec.jsx
index 263eb24780..5f99689494 100644
--- a/tests/js/spec/views/settings/organizationMembers/organizationRequestsView.spec.jsx
+++ b/tests/js/spec/views/settings/organizationMembers/organizationRequestsView.spec.jsx
@@ -121,7 +121,7 @@ describe('OrganizationRequestsView', function() {
     );
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge[text="1"]').exists()).toBe(true);
+    expect(wrapper.find('StyledBadge[text="1"]').exists()).toBe(true);
     expect(wrapper.find('OrganizationAccessRequests').exists()).toBe(true);
     expect(
       wrapper
@@ -155,7 +155,7 @@ describe('OrganizationRequestsView', function() {
     );
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge[text="1"]').exists()).toBe(true);
+    expect(wrapper.find('StyledBadge[text="1"]').exists()).toBe(true);
     expect(wrapper.find('OrganizationAccessRequests').exists()).toBe(true);
     expect(
       wrapper
@@ -197,7 +197,7 @@ describe('OrganizationRequestsView', function() {
     );
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge[text="1"]').exists()).toBe(true);
+    expect(wrapper.find('StyledBadge[text="1"]').exists()).toBe(true);
     expect(wrapper.find('InviteRequestRow').exists()).toBe(false);
 
     expect(trackAnalyticsEvent).not.toHaveBeenCalled();
@@ -231,7 +231,7 @@ describe('OrganizationRequestsView', function() {
     );
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge[text="1"]').exists()).toBe(true);
+    expect(wrapper.find('StyledBadge[text="1"]').exists()).toBe(true);
     expect(wrapper.find('InviteRequestRow').exists()).toBe(false);
 
     expect(trackAnalyticsEvent).not.toHaveBeenCalled();
@@ -263,7 +263,7 @@ describe('OrganizationRequestsView', function() {
     );
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge[text="1"]').exists()).toBe(true);
+    expect(wrapper.find('StyledBadge[text="1"]').exists()).toBe(true);
     expect(wrapper.find('InviteRequestRow').exists()).toBe(true);
 
     expect(
@@ -280,7 +280,7 @@ describe('OrganizationRequestsView', function() {
     wrapper.update();
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge').exists()).toBe(false);
+    expect(wrapper.find('StyledBadge').exists()).toBe(false);
     expect(wrapper.find('InviteRequestRow').exists()).toBe(false);
 
     expect(trackAnalyticsEvent).toHaveBeenCalledWith({
@@ -324,7 +324,7 @@ describe('OrganizationRequestsView', function() {
     );
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge[text="1"]').exists()).toBe(true);
+    expect(wrapper.find('StyledBadge[text="1"]').exists()).toBe(true);
     expect(wrapper.find('InviteRequestRow').exists()).toBe(true);
 
     expect(
@@ -340,7 +340,7 @@ describe('OrganizationRequestsView', function() {
     wrapper.update();
 
     expect(wrapper.find('NavTabs').exists()).toBe(true);
-    expect(wrapper.find('Badge').exists()).toBe(false);
+    expect(wrapper.find('StyledBadge').exists()).toBe(false);
     expect(wrapper.find('InviteRequestRow').exists()).toBe(false);
 
     expect(trackAnalyticsEvent).toHaveBeenCalledWith({
