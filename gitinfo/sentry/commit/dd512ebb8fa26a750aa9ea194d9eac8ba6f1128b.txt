commit dd512ebb8fa26a750aa9ea194d9eac8ba6f1128b
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Apr 26 11:21:17 2018 -0700

    fix(api): Add list of reserved project slug names
    
    Bad names may conflict with routing urls in the frontend within settings
    pages, etc.

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 4057bb1b05..3bca15852e 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -19,6 +19,7 @@ from sentry.api.decorators import sudo_required
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.project import DetailedProjectSerializer
 from sentry.api.serializers.rest_framework import ListField, OriginField
+from sentry.constants import RESERVED_PROJECT_SLUGS
 from sentry.models import (
     AuditLogEntryEvent, Group, GroupStatus, Project, ProjectBookmark, ProjectRedirect,
     ProjectStatus, ProjectTeam, UserOption, Team,
@@ -130,6 +131,10 @@ class ProjectAdminSerializer(ProjectMemberSerializer):
 
     def validate_slug(self, attrs, source):
         slug = attrs[source]
+        if slug in RESERVED_PROJECT_SLUGS:
+            raise serializers.ValidationError(
+                'The slug "%s" is reserved and not allowed.' %
+                (slug, ))
         project = self.context['project']
         other = Project.objects.filter(
             slug=slug,
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 7d70473756..86c1588102 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -91,6 +91,11 @@ RESERVED_ORGANIZATION_SLUGS = frozenset(
     )
 )
 
+RESERVED_PROJECT_SLUGS = frozenset((
+    'api-keys', 'audit-log', 'auth', 'members', 'projects',
+    'rate-limits', 'repos', 'settings', 'teams',
+))
+
 LOG_LEVELS = {
     logging.NOTSET: 'sample',
     logging.DEBUG: 'debug',
diff --git a/src/sentry/models/organization.py b/src/sentry/models/organization.py
index bc66e7cfcd..e0b9fba347 100644
--- a/src/sentry/models/organization.py
+++ b/src/sentry/models/organization.py
@@ -21,7 +21,7 @@ from django.utils.functional import cached_property
 
 from sentry import roles
 from sentry.app import locks
-from sentry.constants import RESERVED_ORGANIZATION_SLUGS
+from sentry.constants import RESERVED_ORGANIZATION_SLUGS, RESERVED_PROJECT_SLUGS
 from sentry.db.models import (BaseManager, BoundedPositiveIntegerField, Model, sane_repr)
 from sentry.db.models.utils import slugify_instance
 from sentry.utils.http import absolute_uri
@@ -283,7 +283,11 @@ class Organization(Model):
                 with transaction.atomic():
                     project.update(organization=to_org)
             except IntegrityError:
-                slugify_instance(project, project.name, organization=to_org)
+                slugify_instance(
+                    project,
+                    project.name,
+                    organization=to_org,
+                    reserved=RESERVED_PROJECT_SLUGS)
                 project.update(
                     organization=to_org,
                     slug=project.slug,
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 871504a827..28b8f60a75 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -20,7 +20,7 @@ from django.utils.translation import ugettext_lazy as _
 from uuid import uuid1
 
 from sentry.app import locks
-from sentry.constants import ObjectStatus
+from sentry.constants import ObjectStatus, RESERVED_PROJECT_SLUGS
 from sentry.db.models import (
     BaseManager, BoundedPositiveIntegerField, FlexibleForeignKey, Model, sane_repr
 )
@@ -134,7 +134,11 @@ class Project(Model):
         if not self.slug:
             lock = locks.get('slug:project', duration=5)
             with TimedRetryPolicy(10)(lock.acquire):
-                slugify_instance(self, self.name, organization=self.organization)
+                slugify_instance(
+                    self,
+                    self.name,
+                    organization=self.organization,
+                    reserved=RESERVED_PROJECT_SLUGS)
             super(Project, self).save(*args, **kwargs)
         else:
             super(Project, self).save(*args, **kwargs)
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index 51bbf0e381..be8c4dfffd 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -5,6 +5,7 @@ import six
 
 from django.core.urlresolvers import reverse
 
+from sentry.constants import RESERVED_PROJECT_SLUGS
 from sentry.models import Project, ProjectBookmark, ProjectStatus, UserOption, DeletedProject, ProjectRedirect, AuditLogEntry, AuditLogEntryEvent
 from sentry.testutils import APITestCase
 
@@ -216,6 +217,12 @@ class ProjectUpdateTest(APITestCase):
         project = Project.objects.get(id=self.project.id)
         assert project.slug != new_project.slug
 
+    def test_reserved_slug(self):
+        resp = self.client.put(self.path, data={
+            'slug': list(RESERVED_PROJECT_SLUGS)[0],
+        })
+        assert resp.status_code == 400, resp.content
+
     def test_platform(self):
         resp = self.client.put(self.path, data={
             'platform': 'cocoa',
