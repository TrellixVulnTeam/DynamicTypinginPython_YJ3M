commit 252ca705fab286f2ec68d180cf7c38e1b0c01653
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu May 23 09:57:42 2019 -0700

    feat(ui): Connect Incident details Subscribe button to API [SEN-588] (#13341)
    
    Small fixes to endpoint to get this connected to API
    
    Fixes SEN-588

diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx
index 96a7e5cba8..3fde3661df 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx
@@ -61,7 +61,7 @@ class OrganizationIncidentDetails extends React.Component {
       incident: {...state.incident, isSubscribed: newIsSubscribed},
     }));
 
-    updateSubscription(api, orgId, incidentId, isSubscribed).catch(() => {
+    updateSubscription(api, orgId, incidentId, newIsSubscribed).catch(() => {
       this.setState(state => ({
         incident: {...state.incident, isSubscribed},
       }));
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx
index e82a5716b7..8f5d2b6325 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx
@@ -16,12 +16,13 @@ export function fetchIncident(api, orgId, incidentId) {
 }
 
 export function updateSubscription(api, orgId, incidentId, isSubscribed) {
-  return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/`, {
-    method: 'PUT',
-    data: {
-      isSubscribed,
-    },
-  });
+  const method = isSubscribed ? 'POST' : 'DELETE';
+  return api.requestPromise(
+    `/organizations/${orgId}/incidents/${incidentId}/subscriptions/`,
+    {
+      method,
+    }
+  );
 }
 
 export function updateStatus(api, orgId, incidentId, status) {
diff --git a/tests/js/spec/views/organizationIncidents/details/index.spec.jsx b/tests/js/spec/views/organizationIncidents/details/index.spec.jsx
index 9bcfb03bdc..d7d990da00 100644
--- a/tests/js/spec/views/organizationIncidents/details/index.spec.jsx
+++ b/tests/js/spec/views/organizationIncidents/details/index.spec.jsx
@@ -95,4 +95,33 @@ describe('IncidentDetails', function() {
 
     expect(wrapper.find('Status').text()).toBe('Closed');
   });
+
+  it('toggles subscribe status with Subscribe button', async function() {
+    const wrapper = createWrapper();
+
+    await tick();
+    wrapper.update();
+
+    const subscribe = MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/incidents/123/subscriptions/',
+      method: 'POST',
+    });
+    const unsubscribe = MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/incidents/123/subscriptions/',
+      method: 'DELETE',
+    });
+
+    // Should be subscribed, so button should show "Unsubscribe"
+    expect(wrapper.find('SubscribeButton Content').text()).toBe('Unsubscribe');
+
+    // Click to unsubscribe
+    wrapper.find('SubscribeButton').simulate('click');
+    expect(unsubscribe).toHaveBeenCalled();
+    expect(subscribe).not.toHaveBeenCalled();
+    expect(wrapper.find('SubscribeButton Content').text()).toBe('Subscribe');
+
+    // Click again to re-subscribe
+    wrapper.find('SubscribeButton').simulate('click');
+    expect(subscribe).toHaveBeenCalled();
+  });
 });
