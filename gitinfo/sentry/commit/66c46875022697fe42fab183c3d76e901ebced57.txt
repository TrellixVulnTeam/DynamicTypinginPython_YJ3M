commit 66c46875022697fe42fab183c3d76e901ebced57
Author: ted kaemming <ted@kaemming.com>
Date:   Wed Feb 6 11:44:55 2019 -0800

    Revert "ref(store): Remove unused signals (#11921)" (#11934)
    
    This reverts commit c8916fee9e1c9a4ec853a27490c478e60b65fb41.
    
    `event_accepted` is used by Orbital (getsentry/sentry-orbital) which is
    apparently required as part of the getsentry/getsentry build.

diff --git a/src/sentry/signals.py b/src/sentry/signals.py
index 697670d670..c9ffe6ee34 100644
--- a/src/sentry/signals.py
+++ b/src/sentry/signals.py
@@ -54,9 +54,11 @@ class BetterSignal(Signal):
 
 
 buffer_incr_complete = BetterSignal(providing_args=["model", "columns", "extra", "result"])
+event_accepted = BetterSignal(providing_args=["ip", "data", "project"])
 event_discarded = BetterSignal(providing_args=["project"])
 event_dropped = BetterSignal(providing_args=["ip", "data", "project", "reason_code"])
 event_filtered = BetterSignal(providing_args=["ip", "data", "project"])
+event_received = BetterSignal(providing_args=["ip", "project"])
 pending_delete = BetterSignal(providing_args=['instance', 'actor'])
 event_processed = BetterSignal(providing_args=['project', 'group', 'event'])
 event_saved = BetterSignal(providing_args=["project"])
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 2f481a1296..11293bad3c 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -40,7 +40,8 @@ from sentry.interfaces.base import get_interface
 from sentry.lang.native.unreal import process_unreal_crash, merge_apple_crash_report, unreal_attachment_type, merge_unreal_context_event, merge_unreal_logs_event
 from sentry.lang.native.minidump import merge_process_state_event, process_minidump, MINIDUMP_ATTACHMENT_TYPE
 from sentry.models import Project, OrganizationOption, Organization
-from sentry.signals import event_dropped, event_filtered
+from sentry.signals import (
+    event_accepted, event_dropped, event_filtered, event_received)
 from sentry.quotas.base import RateLimit
 from sentry.utils import json, metrics
 from sentry.utils.data_filters import FILTER_STAT_KEYS_TO_VALUES
@@ -92,6 +93,8 @@ def api(func):
 
 
 def process_event(event_manager, project, key, remote_addr, helper, attachments):
+    event_received.send_robust(ip=remote_addr, project=project, sender=process_event)
+
     start_time = time()
     tsdb_start_time = to_datetime(start_time)
     should_filter, filter_reason = event_manager.should_filter()
@@ -234,6 +237,13 @@ def process_event(event_manager, project, key, remote_addr, helper, attachments)
 
     api_logger.debug('New event received (%s)', event_id)
 
+    event_accepted.send_robust(
+        ip=remote_addr,
+        data=data,
+        project=project,
+        sender=process_event,
+    )
+
     return event_id
 
 
diff --git a/tests/sentry/web/api/tests.py b/tests/sentry/web/api/tests.py
index c0db137ed0..0a7fef6294 100644
--- a/tests/sentry/web/api/tests.py
+++ b/tests/sentry/web/api/tests.py
@@ -10,7 +10,7 @@ from mock import Mock
 
 from sentry.coreapi import APIRateLimited
 from sentry.models import ProjectKey
-from sentry.signals import event_dropped, event_filtered
+from sentry.signals import event_accepted, event_dropped, event_filtered
 from sentry.testutils import (assert_mock_called_once_with_partial, TestCase)
 from sentry.utils import json
 from sentry.utils.data_filters import FilterTypes
@@ -669,6 +669,23 @@ class StoreViewTest(TestCase):
             'version': '0.0.0',
         }
 
+    @mock.patch('sentry.coreapi.ClientApiHelper.insert_data_to_database', Mock())
+    def test_accepted_signal(self):
+        mock_event_accepted = Mock()
+
+        event_accepted.connect(mock_event_accepted)
+
+        resp = self._postWithHeader({'logentry': {'message': u'hello'}})
+
+        assert resp.status_code == 200, resp.content
+
+        assert_mock_called_once_with_partial(
+            mock_event_accepted,
+            ip='127.0.0.1',
+            project=self.project,
+            signal=event_accepted,
+        )
+
     @mock.patch('sentry.coreapi.ClientApiHelper.insert_data_to_database', Mock())
     @mock.patch('sentry.app.quotas.is_rate_limited')
     def test_dropped_signal(self, mock_is_rate_limited):
