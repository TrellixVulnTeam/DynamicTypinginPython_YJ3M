commit af9913859815d57e67c2159315c97d7013b5f4a6
Author: Stephen Cefali <scefali@sentry.io>
Date:   Wed Nov 20 09:21:20 2019 -0800

    migrations(plugins): fixing version on github path issues related to plugins (#15685)

diff --git a/src/new_sentry_plugins/__init__.py b/src/new_sentry_plugins/__init__.py
index 662f0d20f1..55901fa110 100644
--- a/src/new_sentry_plugins/__init__.py
+++ b/src/new_sentry_plugins/__init__.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-try:
-    VERSION = __import__("pkg_resources").get_distribution("sentry-plugins").version
-except Exception:
-    VERSION = "unknown"
+
+import sentry
+
+VERSION = sentry.VERSION
diff --git a/src/new_sentry_plugins/base.py b/src/new_sentry_plugins/base.py
index bb0f8e9d64..5432bdbd36 100644
--- a/src/new_sentry_plugins/base.py
+++ b/src/new_sentry_plugins/base.py
@@ -22,11 +22,11 @@ from new_sentry_plugins.exceptions import (
 
 class CorePluginMixin(object):
     author = "Sentry Team"
-    author_url = "https://github.com/getsentry/sentry-plugins"
+    author_url = "https://github.com/getsentry/sentry"
     version = new_sentry_plugins.VERSION
     resource_links = [
-        ("Bug Tracker", "https://github.com/getsentry/sentry-plugins/issues"),
-        ("Source", "https://github.com/getsentry/sentry-plugins"),
+        ("Bug Tracker", "https://github.com/getsentry/sentry/issues"),
+        ("Source", "https://github.com/getsentry/sentry"),
     ]
 
     # HACK(dcramer): work around MRO issue with plugin metaclass
diff --git a/src/test_only_plugins/base.py b/src/test_only_plugins/base.py
deleted file mode 100644
index bb0f8e9d64..0000000000
--- a/src/test_only_plugins/base.py
+++ /dev/null
@@ -1,81 +0,0 @@
-from __future__ import absolute_import
-
-import pkg_resources
-import new_sentry_plugins
-import six
-import sys
-
-from sentry.exceptions import InvalidIdentity, PluginError
-
-from new_sentry_plugins.constants import (
-    ERR_INTERNAL,
-    ERR_UNAUTHORIZED,
-    ERR_UNSUPPORTED_RESPONSE_TYPE,
-)
-from new_sentry_plugins.exceptions import (
-    ApiError,
-    ApiHostError,
-    ApiUnauthorized,
-    UnsupportedResponseType,
-)
-
-
-class CorePluginMixin(object):
-    author = "Sentry Team"
-    author_url = "https://github.com/getsentry/sentry-plugins"
-    version = new_sentry_plugins.VERSION
-    resource_links = [
-        ("Bug Tracker", "https://github.com/getsentry/sentry-plugins/issues"),
-        ("Source", "https://github.com/getsentry/sentry-plugins"),
-    ]
-
-    # HACK(dcramer): work around MRO issue with plugin metaclass
-    logger = None
-
-    # TODO(dcramer): The following is a possible "better implementation" of the
-    # core issue implementation, though it would need a compat layer to push
-    # it upstream
-    def error_message_from_json(self, data):
-        return data.get("message", "unknown error")
-
-    def message_from_error(self, exc):
-        if isinstance(exc, ApiUnauthorized):
-            return ERR_UNAUTHORIZED
-        elif isinstance(exc, ApiHostError):
-            return exc.text
-        elif isinstance(exc, UnsupportedResponseType):
-            return ERR_UNSUPPORTED_RESPONSE_TYPE.format(content_type=exc.content_type)
-        elif isinstance(exc, ApiError):
-            if exc.json:
-                msg = self.error_message_from_json(exc.json) or "unknown error"
-            else:
-                msg = "unknown error"
-            return "Error Communicating with %s (HTTP %s): %s" % (self.title, exc.code, msg)
-        else:
-            return ERR_INTERNAL
-
-    def raise_error(self, exc, identity=None):
-        if isinstance(exc, ApiUnauthorized):
-            six.reraise(
-                InvalidIdentity,
-                InvalidIdentity(self.message_from_error(exc), identity=identity),
-                sys.exc_info()[2],
-            )
-        elif isinstance(exc, ApiError):
-            six.reraise(PluginError, PluginError(self.message_from_error(exc)), sys.exc_info()[2])
-        elif isinstance(exc, PluginError):
-            raise
-        else:
-            self.logger.exception(six.text_type(exc))
-            six.reraise(PluginError, PluginError(self.message_from_error(exc)), sys.exc_info()[2])
-
-
-def assert_package_not_installed(name):
-    try:
-        pkg_resources.get_distribution(name)
-    except pkg_resources.DistributionNotFound:
-        return
-    else:
-        raise RuntimeError(
-            "Found %r. This has been superseded by 'sentry-plugins', so please uninstall." % name
-        )
diff --git a/tests/js/sentry-test/fixtures/asana.js b/tests/js/sentry-test/fixtures/asana.js
index 5138c8cccf..e0bd428c94 100644
--- a/tests/js/sentry-test/fixtures/asana.js
+++ b/tests/js/sentry-test/fixtures/asana.js
@@ -12,15 +12,15 @@ function AsanaPlugin(params) {
     contexts: [],
     doc: '',
     resourceLinks: [
-      {url: 'https://github.com/getsentry/sentry-plugins/issues', title: 'Bug Tracker'},
-      {url: 'https://github.com/getsentry/sentry-plugins', title: 'Source'},
+      {url: 'https://github.com/getsentry/sentry/issues', title: 'Bug Tracker'},
+      {url: 'https://github.com/getsentry/sentry', title: 'Source'},
     ],
     allowed_actions: ['create', 'link', 'unlink'],
     enabled: true,
     id: 'asana',
     version: '9.1.0.dev0',
     canDisable: true,
-    author: {url: 'https://github.com/getsentry/sentry-plugins', name: 'Sentry Team'},
+    author: {url: 'https://github.com/getsentry/sentry', name: 'Sentry Team'},
     type: 'issue-tracking',
     metadata: {},
   };
diff --git a/tests/js/sentry-test/fixtures/phabricator.js b/tests/js/sentry-test/fixtures/phabricator.js
index 3295d0bff7..0a1277880b 100644
--- a/tests/js/sentry-test/fixtures/phabricator.js
+++ b/tests/js/sentry-test/fixtures/phabricator.js
@@ -10,18 +10,18 @@ function PhabricatorPlugin(params) {
     assets: [],
     name: 'Phabricator',
     author: {
-      url: 'https://github.com/getsentry/sentry-plugins',
+      url: 'https://github.com/getsentry/sentry',
       name: 'Sentry Team',
     },
     contexts: [],
     doc: '',
     resourceLinks: [
       {
-        url: 'https://github.com/getsentry/sentry-plugins/issues',
+        url: 'https://github.com/getsentry/sentry/issues',
         title: 'Bug Tracker',
       },
       {
-        url: 'https://github.com/getsentry/sentry-plugins',
+        url: 'https://github.com/getsentry/sentry',
         title: 'Source',
       },
     ],
diff --git a/tests/js/sentry-test/fixtures/vsts-old.js b/tests/js/sentry-test/fixtures/vsts-old.js
index e1b7de7bc7..93ea1647d5 100644
--- a/tests/js/sentry-test/fixtures/vsts-old.js
+++ b/tests/js/sentry-test/fixtures/vsts-old.js
@@ -12,15 +12,15 @@ function VstsPlugin(params) {
     contexts: [],
     doc: '',
     resourceLinks: [
-      {url: 'https://github.com/getsentry/sentry-plugins/issues', title: 'Bug Tracker'},
-      {url: 'https://github.com/getsentry/sentry-plugins', title: 'Source'},
+      {url: 'https://github.com/getsentry/sentry/issues', title: 'Bug Tracker'},
+      {url: 'https://github.com/getsentry/sentry', title: 'Source'},
     ],
     allowed_actions: ['create', 'link', 'unlink'],
     enabled: true,
     id: 'vsts',
     version: '9.1.0.dev0',
     canDisable: true,
-    author: {url: 'https://github.com/getsentry/sentry-plugins', name: 'Sentry Team'},
+    author: {url: 'https://github.com/getsentry/sentry', name: 'Sentry Team'},
     type: 'issue-tracking',
     metadata: {},
   };
