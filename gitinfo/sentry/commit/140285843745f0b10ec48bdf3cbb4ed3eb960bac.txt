commit 140285843745f0b10ec48bdf3cbb4ed3eb960bac
Author: Jan Michael Auer <account@jauer.org>
Date:   Fri Nov 9 14:16:12 2018 +0100

    ref(interfaces): Remove the Repos interface (#10474)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 290cdcf291..b1db2b5d48 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -916,7 +916,6 @@ SENTRY_INTERFACES = {
     'exception': 'sentry.interfaces.exception.Exception',
     'logentry': 'sentry.interfaces.message.Message',
     'query': 'sentry.interfaces.query.Query',
-    'repos': 'sentry.interfaces.repos.Repos',
     'request': 'sentry.interfaces.http.Http',
     'sdk': 'sentry.interfaces.sdk.Sdk',
     'stacktrace': 'sentry.interfaces.stacktrace.Stacktrace',
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 604376a063..b2c47c42bb 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -167,6 +167,7 @@ CLIENT_RESERVED_ATTRS = (
     'project', 'errors', 'event_id', 'message', 'checksum', 'culprit', 'fingerprint', 'level',
     'time_spent', 'logger', 'server_name', 'site', 'received', 'timestamp', 'extra', 'modules',
     'tags', 'platform', 'release', 'dist', 'environment', 'transaction', 'key_id', '_meta',
+    'repos',
 )
 
 # XXX: Must be all lowercase
diff --git a/src/sentry/interfaces/repos.py b/src/sentry/interfaces/repos.py
deleted file mode 100644
index cbca724e5b..0000000000
--- a/src/sentry/interfaces/repos.py
+++ /dev/null
@@ -1,60 +0,0 @@
-from __future__ import absolute_import
-
-__all__ = ('Repos', )
-
-import six
-
-from sentry.interfaces.base import Interface, InterfaceValidationError
-
-
-class Repos(Interface):
-    """
-    Details about repositories connected to an event.
-
-    This is primarily used to aid with mapping the application code's filepath
-    to the equivilent path inside of a repository.
-
-    >>> {
-    >>>     "/abs/path/to/sentry": {
-    >>>         "name": "getsentry/sentry",
-    >>>         "prefix": "src",
-    >>>         "revision": "..." // optional
-    >>>     }
-    >>> }
-    """
-
-    @classmethod
-    def to_python(cls, data):
-        result = {}
-        for path, config in six.iteritems(data):
-            if len(path) > 200:
-                raise InterfaceValidationError("Invalid repository `path` (> 200 characters)")
-
-            name = config.get('name')
-            if not name:
-                raise InterfaceValidationError("A repository must provide a value `name`")
-            # 200 chars is enforced by db, and while we dont validate if the
-            # repo actually exists, we know it could *never* exist if its beyond
-            # the schema constraints.
-            if len(name) > 200:
-                raise InterfaceValidationError("Invalid repository `name`")
-
-            prefix = config.get('prefix')
-            if prefix and len(prefix) > 200:
-                raise InterfaceValidationError("Invalid repository `prefix` (> 200 characters)")
-
-            revision = config.get('revision')
-            if revision and len(revision) > 40:
-                raise InterfaceValidationError("Invalid repository `revision` (> 40 characters)")
-
-            result[path] = {
-                'name': name,
-            }
-            if prefix:
-                result[path]['prefix'] = prefix
-            if revision:
-                result[path]['revision'] = revision
-        return cls(**result)
-
-    def get_path(self):
-        return 'repos'
diff --git a/tests/sentry/interfaces/test_repos.py b/tests/sentry/interfaces/test_repos.py
deleted file mode 100644
index 382145e7c9..0000000000
--- a/tests/sentry/interfaces/test_repos.py
+++ /dev/null
@@ -1,82 +0,0 @@
-# -*- coding: utf-8 -*-
-
-from __future__ import absolute_import
-
-import pytest
-
-from sentry.interfaces.base import InterfaceValidationError
-from sentry.interfaces.repos import Repos
-from sentry.testutils import TestCase
-
-
-class ReposTest(TestCase):
-    def test_minimal_valid(self):
-        assert Repos.to_python({
-            '/path/to/sentry': {
-                'name': 'sentry-unity',
-            },
-        }).to_json() == {
-            '/path/to/sentry': {
-                'name': 'sentry-unity',
-            },
-        }
-
-    def test_full_valid(self):
-        assert Repos.to_python(
-            {
-                '/path/to/sentry': {
-                    'name': 'sentry-unity',
-                    'prefix': 'src',
-                    'revision': 'a' * 40,
-                },
-            }
-        ).to_json() == {
-            '/path/to/sentry': {
-                'name': 'sentry-unity',
-                'prefix': 'src',
-                'revision': 'a' * 40,
-            },
-        }
-
-    def test_missing_name(self):
-        with pytest.raises(InterfaceValidationError):
-            assert Repos.to_python({
-                '/path/to/sentry': {},
-            })
-
-    def test_long_name(self):
-        with pytest.raises(InterfaceValidationError):
-            assert Repos.to_python({
-                '/path/to/sentry': {
-                    'name': 'a' * 300,
-                },
-            })
-
-    def test_long_prefix(self):
-        with pytest.raises(InterfaceValidationError):
-            assert Repos.to_python({
-                '/path/to/sentry': {
-                    'name': 'a',
-                    'prefix': 'a' * 300,
-                },
-            })
-
-    def test_long_revision(self):
-        with pytest.raises(InterfaceValidationError):
-            assert Repos.to_python({
-                '/path/to/sentry': {
-                    'name': 'a',
-                    'revision': 'a' * 300,
-                },
-            })
-
-    def test_long_path(self):
-        with pytest.raises(InterfaceValidationError):
-            assert Repos.to_python({
-                '/' * 300: {
-                    'name': 'a',
-                },
-            })
-
-    def test_path(self):
-        assert Repos().get_path() == 'repos'
