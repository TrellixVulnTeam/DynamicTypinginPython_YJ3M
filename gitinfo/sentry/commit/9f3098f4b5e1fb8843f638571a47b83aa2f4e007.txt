commit 9f3098f4b5e1fb8843f638571a47b83aa2f4e007
Author: Matej Minar <matej.minar@sentry.io>
Date:   Tue Apr 21 16:56:34 2020 +0200

    fix(ui): Add project id to release link, center icons (#18376)

diff --git a/src/sentry/static/sentry/app/components/resolutionBox.tsx b/src/sentry/static/sentry/app/components/resolutionBox.tsx
index dcf3b69ea3..740cfb80d1 100644
--- a/src/sentry/static/sentry/app/components/resolutionBox.tsx
+++ b/src/sentry/static/sentry/app/components/resolutionBox.tsx
@@ -15,9 +15,10 @@ import theme from 'app/utils/theme';
 
 type Props = {
   statusDetails: ResolutionStatusDetails;
+  projectId: string;
 };
 
-function renderReason(statusDetails: ResolutionStatusDetails) {
+function renderReason(statusDetails: ResolutionStatusDetails, projectId: string) {
   const actor = statusDetails.actor ? (
     <strong>
       <UserAvatar user={statusDetails.actor} size={20} className="avatar" />
@@ -34,11 +35,23 @@ function renderReason(statusDetails: ResolutionStatusDetails) {
   } else if (statusDetails.inRelease && statusDetails.actor) {
     return tct('[actor] marked this issue as resolved in version [version].', {
       actor,
-      version: <Version version={statusDetails.inRelease} tooltipRawVersion />,
+      version: (
+        <Version
+          version={statusDetails.inRelease}
+          projectId={projectId}
+          tooltipRawVersion
+        />
+      ),
     });
   } else if (statusDetails.inRelease) {
     return tct('This issue has been marked as resolved in version [version].', {
-      version: <Version version={statusDetails.inRelease} tooltipRawVersion />,
+      version: (
+        <Version
+          version={statusDetails.inRelease}
+          projectId={projectId}
+          tooltipRawVersion
+        />
+      ),
     });
   } else if (!!statusDetails.inCommit) {
     return tct('This issue has been marked as resolved by [commit]', {
@@ -56,12 +69,12 @@ function renderReason(statusDetails: ResolutionStatusDetails) {
   return t('This issue has been marked as resolved.');
 }
 
-function ResolutionBox({statusDetails}: Props) {
+function ResolutionBox({statusDetails, projectId}: Props) {
   return (
     <BannerContainer priority="default">
       <BannerSummary>
         <IconCheckmark color={theme.green} />
-        <span>{renderReason(statusDetails)}</span>
+        <span>{renderReason(statusDetails, projectId)}</span>
       </BannerSummary>
     </BannerContainer>
   );
@@ -69,6 +82,7 @@ function ResolutionBox({statusDetails}: Props) {
 
 ResolutionBox.propTypes = {
   statusDetails: PropTypes.object.isRequired,
+  projectId: PropTypes.string.isRequired,
 };
 
 const StyledTimeSince = styled(TimeSince)`
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
index c2655357a0..ebcc1b0f4f 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
@@ -111,7 +111,7 @@ class GroupActivity extends React.Component {
   };
 
   render() {
-    const {organization, group} = this.props;
+    const {group} = this.props;
     const me = ConfigStore.get('user');
     const projectSlugs = group && group.project ? [group.project.slug] : [];
     const noteProps = {
@@ -169,11 +169,10 @@ class GroupActivity extends React.Component {
                       date={item.dateCreated}
                       header={
                         <GroupActivityItem
-                          organization={organization}
                           author={<ActivityAuthor>{authorName}</ActivityAuthor>}
                           item={item}
-                          orgId={this.props.params.orgId}
-                          projectId={group.project.slug}
+                          orgSlug={this.props.params.orgId}
+                          projectId={group.project.id}
                         />
                       }
                     />
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
index 25a925e86e..56ba85bc42 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
@@ -13,14 +13,15 @@ class GroupActivityItem extends React.Component {
   static propTypes = {
     author: PropTypes.node,
     item: PropTypes.object,
-    orgId: PropTypes.string,
+    orgSlug: PropTypes.string,
+    projectId: PropTypes.string,
   };
 
   render() {
-    const {author, item, orgId} = this.props;
+    const {author, item, orgSlug, projectId} = this.props;
     const {data} = item;
 
-    const issuesLink = `/organizations/${orgId}/issues/`;
+    const issuesLink = `/organizations/${orgSlug}/issues/`;
 
     switch (item.type) {
       case 'note':
@@ -35,7 +36,9 @@ class GroupActivityItem extends React.Component {
         return data.version
           ? t('%(author)s marked this issue as resolved in %(version)s', {
               author,
-              version: <Version version={data.version} tooltipRawVersion />,
+              version: (
+                <Version version={data.version} projectId={projectId} tooltipRawVersion />
+              ),
             })
           : t('%s marked this issue as resolved in the upcoming release', author);
       case 'set_resolved_in_commit':
@@ -106,7 +109,9 @@ class GroupActivityItem extends React.Component {
         return data.version
           ? t('%(author)s marked this issue as a regression in %(version)s', {
               author,
-              version: <Version version={data.version} tooltipRawVersion />,
+              version: (
+                <Version version={data.version} projectId={projectId} tooltipRawVersion />
+              ),
             })
           : t('%s marked this issue as a regression', author);
       case 'create_issue':
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx
index 6e82a96e29..3befa6354e 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx
@@ -195,7 +195,7 @@ class GroupEventDetails extends React.Component<Props, State> {
               <MutedBox statusDetails={group.statusDetails} />
             )}
             {group.status === 'resolved' && (
-              <ResolutionBox statusDetails={group.statusDetails} />
+              <ResolutionBox statusDetails={group.statusDetails} projectId={project.id} />
             )}
             {this.state.loading ? (
               <LoadingIndicator />
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
index 9e0f2a98ad..6ebcc75520 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
@@ -94,7 +94,7 @@ const ReleaseHeader = ({location, orgId, release, deploys, project}: Props) => {
 
         <IconWrapper>
           <Clipboard value={version}>
-            <Tooltip title={version}>
+            <Tooltip title={version} containerDisplayMode="flex">
               <IconCopy size="xs" />
             </Tooltip>
           </Clipboard>
@@ -172,6 +172,8 @@ const ReleaseName = styled('div')`
   font-size: ${p => p.theme.headerFontSize};
   color: ${p => p.theme.gray4};
   margin-bottom: ${space(2)};
+  display: flex;
+  align-items: center;
 `;
 
 const IconWrapper = styled('span')`
@@ -181,6 +183,7 @@ const IconWrapper = styled('span')`
   &,
   a {
     color: ${p => p.theme.gray2};
+    display: flex;
     &:hover {
       cursor: pointer;
       color: ${p => p.theme.gray4};
diff --git a/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap b/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
index 13bc06c115..0b208e880b 100644
--- a/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
@@ -137,6 +137,7 @@ exports[`ResolutionBox render() handles inRelease 1`] = `
         </span>
         <WithOrganizationMockWrapper
           key="1"
+          projectId="1"
           tooltipRawVersion={true}
           version="1.0"
         />
@@ -195,6 +196,7 @@ exports[`ResolutionBox render() handles inRelease with actor 1`] = `
         </span>
         <WithOrganizationMockWrapper
           key="2"
+          projectId="1"
           tooltipRawVersion={true}
           version="1.0"
         />
diff --git a/tests/js/spec/components/resolutionBox.spec.jsx b/tests/js/spec/components/resolutionBox.spec.jsx
index ec3edaaf20..77f98f7b2c 100644
--- a/tests/js/spec/components/resolutionBox.spec.jsx
+++ b/tests/js/spec/components/resolutionBox.spec.jsx
@@ -7,11 +7,7 @@ describe('ResolutionBox', function() {
   describe('render()', function() {
     it('handles inNextRelease', function() {
       const wrapper = shallow(
-        <ResolutionBox
-          statusDetails={{inNextRelease: true}}
-          orgId="org"
-          projectId="project"
-        />
+        <ResolutionBox statusDetails={{inNextRelease: true}} projectId="1" />
       );
       expect(wrapper).toMatchSnapshot();
     });
@@ -22,8 +18,7 @@ describe('ResolutionBox', function() {
             inNextRelease: true,
             actor: {id: '111', name: 'David Cramer', email: 'david@sentry.io'},
           }}
-          orgId="org"
-          projectId="project"
+          projectId="1"
         />
       );
       expect(wrapper).toMatchSnapshot();
@@ -34,8 +29,7 @@ describe('ResolutionBox', function() {
           statusDetails={{
             inRelease: '1.0',
           }}
-          orgId="org"
-          projectId="project"
+          projectId="1"
         />
       );
       expect(wrapper).toMatchSnapshot();
@@ -47,16 +41,13 @@ describe('ResolutionBox', function() {
             inRelease: '1.0',
             actor: {id: '111', name: 'David Cramer', email: 'david@sentry.io'},
           }}
-          orgId="org"
-          projectId="project"
+          projectId="1"
         />
       );
       expect(wrapper).toMatchSnapshot();
     });
     it('handles default', function() {
-      const wrapper = shallow(
-        <ResolutionBox statusDetails={{}} orgId="org" projectId="project" />
-      );
+      const wrapper = shallow(<ResolutionBox statusDetails={{}} projectId="1" />);
       expect(wrapper).toMatchSnapshot();
     });
     it('handles inCommit', function() {
@@ -65,8 +56,7 @@ describe('ResolutionBox', function() {
           statusDetails={{
             inCommit: TestStubs.Commit(),
           }}
-          orgId="org"
-          projectId="project"
+          projectId="1"
         />
       );
       expect(wrapper).toMatchSnapshot();
