commit 0d942d8af88a7680e9e998042c3dc41d0cd208cb
Author: Ben Vinegar <ben@benv.ca>
Date:   Tue Oct 6 17:49:35 2015 -0700

    Load new tags when switching projects on stream (fixes #2103)

diff --git a/src/sentry/static/sentry/app/stores/streamTagStore.jsx b/src/sentry/static/sentry/app/stores/streamTagStore.jsx
index 55bf5815bf..80c9e5d5e2 100644
--- a/src/sentry/static/sentry/app/stores/streamTagStore.jsx
+++ b/src/sentry/static/sentry/app/stores/streamTagStore.jsx
@@ -30,6 +30,7 @@ var StreamTagStore = Reflux.createStore({
         predefined: true
       }
     };
+    this.trigger(this.tags);
   },
 
   getTag(tagName) {
@@ -64,15 +65,13 @@ var StreamTagStore = Reflux.createStore({
       return obj;
     }, {}));
 
-    this.trigger(_.map(this.tags, (tag) => {
-      return tag;
-    }));
+    this.trigger(this.tags);
   },
 
   onMemberListStoreChange(members) {
     let assignedTag = this.tags.assigned;
     assignedTag.values = MemberListStore.getAll().map(user => user.email);
-    this.trigger([assignedTag]);
+    this.trigger(this.tags);
   }
 });
 
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index 84143939b1..0ad4b1f725 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -4,6 +4,7 @@ import $ from "jquery";
 import Cookies from "js-cookie";
 import Sticky from 'react-sticky';
 import classNames from "classnames";
+import _ from "underscore";
 
 import api from "../api";
 
@@ -62,13 +63,20 @@ var Stream = React.createClass({
       sort: this.props.defaultSort,
       filter: {},
       tags: StreamTagStore.getAllTags(),
+      tagsLoading: true,
       isSidebarVisible: false,
       isStickyHeader: false
     }, this.getQueryStringState());
   },
 
   shouldComponentUpdate(nextProps, nextState) {
-    return !utils.valueIsEqual(this.state, nextState, true);
+    return !_.isEqual(this.state, nextState, true);
+  },
+
+  componentWillReceiveProps(nextProps) {
+    if (nextProps.params.projectId !== this.props.params.projectId) {
+      this.fetchTags();
+    }
   },
 
   componentWillMount() {
@@ -102,14 +110,21 @@ var Stream = React.createClass({
   },
 
   fetchTags() {
+    StreamTagStore.reset();
     StreamTagActions.loadTags();
 
+    this.setState({
+      tagsLoading: true
+    });
+
     var params = this.context.router.getCurrentParams();
     api.request(`/projects/${params.orgId}/${params.projectId}/tags/`, {
       success: (tags) => {
+        this.setState({tagsLoading: false});
         StreamTagActions.loadTagsSuccess(tags);
       },
       error: (error) => {
+        this.setState({tagsLoading: false});
         StreamTagActions.loadTagsError();
       }
     });
@@ -280,10 +295,7 @@ var Stream = React.createClass({
   onStreamTagChange(tags) {
     // new object to trigger state change
     this.setState({
-      tags: Object.assign({}, tags.reduce((obj, tag) => {
-        obj[tag.key] = tag;
-        return obj;
-      }, this.state.tags))
+      tags: Object.assign({}, tags)
     });
   },
 
@@ -429,7 +441,11 @@ var Stream = React.createClass({
           {this.renderStreamBody()}
           <Pagination pageLinks={this.state.pageLinks} onPage={this.onPage} />
         </div>
-        <StreamSidebar tags={this.state.tags} query={this.state.query} onQueryChange={this.onSearch}/>
+        <StreamSidebar
+          loading={this.state.tagsLoading}
+          tags={this.state.tags}
+          query={this.state.query}
+          onQueryChange={this.onSearch}/>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/stream/sidebar.jsx b/src/sentry/static/sentry/app/views/stream/sidebar.jsx
index a83af7d4ef..20d1f9a1f4 100644
--- a/src/sentry/static/sentry/app/views/stream/sidebar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/sidebar.jsx
@@ -1,6 +1,7 @@
 import React from "react";
 import _ from "underscore";
 import StreamTagFilter from "./tagFilter";
+import LoadingIndicator from "../../components/loadingIndicator";
 import {queryToObj, objToQuery} from "../../utils/stream";
 
 
@@ -96,34 +97,40 @@ var StreamSidebar = React.createClass({
   render() {
     return (
       <div className="stream-sidebar">
-        <div className="stream-tag-filter">
-          <h6 className="nav-header">Text</h6>
-          <form onSubmit={this.onTextFilterSubmit}>
-            <input
-              className="form-control"
-              placeholder="Search title and culprit text body"
-              onChange={this.onTextChange}
-              value={this.state.textFilter}
-            />
-            {this.state.textFilter &&
-              <a className="search-clear-form" onClick={this.onClearSearch}>
-                <span className="icon-circle-cross" />
-              </a>
-            }
-          </form>
-          <hr/>
-        </div>
-
-        {_.map(this.props.tags, (tag) => {
-          return (
-            <StreamTagFilter
-              value={this.state.queryObj[tag.key]}
-              key={tag.key}
-              tag={tag}
-              onSelect={this.onSelectTag}
-            />
-          );
-        })}
+        {this.props.loading ?
+          <LoadingIndicator/>
+        :
+          <div>
+            <div className="stream-tag-filter">
+              <h6 className="nav-header">Text</h6>
+              <form onSubmit={this.onTextFilterSubmit}>
+                <input
+                  className="form-control"
+                  placeholder="Search title and culprit text body"
+                  onChange={this.onTextChange}
+                  value={this.state.textFilter}
+                />
+                {this.state.textFilter &&
+                  <a className="search-clear-form" onClick={this.onClearSearch}>
+                    <span className="icon-circle-cross" />
+                  </a>
+                }
+              </form>
+              <hr/>
+            </div>
+
+            {_.map(this.props.tags, (tag) => {
+              return (
+                <StreamTagFilter
+                  value={this.state.queryObj[tag.key]}
+                  key={tag.key}
+                  tag={tag}
+                  onSelect={this.onSelectTag}
+                />
+              );
+            })}
+          </div>
+        }
       </div>
     );
   }
