commit 8b72ca0032b0a71eb1625933c9540f7cc5e82bba
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Aug 18 22:32:28 2013 -0700

    Move table_exists helper into sentry.utils.db

diff --git a/src/sentry/utils/db.py b/src/sentry/utils/db.py
index dc1c32e0e8..bf253fe9a9 100644
--- a/src/sentry/utils/db.py
+++ b/src/sentry/utils/db.py
@@ -10,10 +10,32 @@ import django
 import operator
 
 from django.conf import settings
+from django.db import connections, DEFAULT_DB_ALIAS
 from django.db.models.expressions import ExpressionNode, F
 from django.db.models.fields.related import SingleRelatedObjectDescriptor
 
 
+EXPRESSION_NODE_CALLBACKS = {
+    ExpressionNode.ADD: operator.add,
+    ExpressionNode.SUB: operator.sub,
+    ExpressionNode.MUL: operator.mul,
+    ExpressionNode.DIV: operator.div,
+    ExpressionNode.MOD: operator.mod,
+}
+try:
+    EXPRESSION_NODE_CALLBACKS[ExpressionNode.AND] = operator.and_
+except AttributeError:
+    EXPRESSION_NODE_CALLBACKS[ExpressionNode.BITAND] = operator.and_
+try:
+    EXPRESSION_NODE_CALLBACKS[ExpressionNode.OR] = operator.or_
+except AttributeError:
+    EXPRESSION_NODE_CALLBACKS[ExpressionNode.BITOR] = operator.or_
+
+
+class CannotResolve(Exception):
+    pass
+
+
 def get_db_engine(alias='default'):
     has_multidb = django.VERSION >= (1, 2)
     if has_multidb:
@@ -36,26 +58,6 @@ def has_charts(db):
         return False
     return True
 
-EXPRESSION_NODE_CALLBACKS = {
-    ExpressionNode.ADD: operator.add,
-    ExpressionNode.SUB: operator.sub,
-    ExpressionNode.MUL: operator.mul,
-    ExpressionNode.DIV: operator.div,
-    ExpressionNode.MOD: operator.mod,
-}
-try:
-    EXPRESSION_NODE_CALLBACKS[ExpressionNode.AND] = operator.and_
-except AttributeError:
-    EXPRESSION_NODE_CALLBACKS[ExpressionNode.BITAND] = operator.and_
-try:
-    EXPRESSION_NODE_CALLBACKS[ExpressionNode.OR] = operator.or_
-except AttributeError:
-    EXPRESSION_NODE_CALLBACKS[ExpressionNode.BITOR] = operator.or_
-
-
-class CannotResolve(Exception):
-    pass
-
 
 def resolve_expression_node(instance, node):
     def _resolve(instance, node):
@@ -132,3 +134,7 @@ def attach_foreignkey(objects, field, related=[], database=None):
 
     for o in objects:
         setattr(o, accessor, queryset.get(getattr(o, column)))
+
+
+def table_exists(name, using=DEFAULT_DB_ALIAS):
+    return name in connections[using].introspection.table_names()
diff --git a/src/sentry/utils/runner.py b/src/sentry/utils/runner.py
index 73d8d48eae..60a2723cb2 100644
--- a/src/sentry/utils/runner.py
+++ b/src/sentry/utils/runner.py
@@ -246,14 +246,10 @@ def apply_legacy_settings(config):
             settings.ALLOWED_HOSTS = (urlbits.hostname,)
 
 
-def table_exists(name):
-    from django.db import connections
-    return name in connections['default'].introspection.table_names()
-
-
 def skip_migration_if_applied(settings, app_name, table_name,
                               name='0001_initial'):
     from south.migration import Migrations
+    from sentry.utils.db import table_exists
     import types
 
     migration = Migrations(app_name)[name]
