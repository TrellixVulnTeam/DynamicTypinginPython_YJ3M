commit 3dea2011174940c3f63ac89b9d93d8ca4c05ac50
Author: Matte Noble <me@mattenoble.com>
Date:   Thu Apr 18 12:28:20 2019 -0700

    feat(app-platform): Isolate Component Prop Failure (#12815)
    
    When a single component fails to be prepared (usually because the
    request to the service fails), don't fail the entire request causing all
    other components to not render.

diff --git a/src/sentry/api/endpoints/sentry_app_components.py b/src/sentry/api/endpoints/sentry_app_components.py
index b3b71930f6..c21a26a6c2 100644
--- a/src/sentry/api/endpoints/sentry_app_components.py
+++ b/src/sentry/api/endpoints/sentry_app_components.py
@@ -5,6 +5,7 @@ from rest_framework.response import Response
 from sentry.api.bases import OrganizationEndpoint, SentryAppBaseEndpoint
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
+from sentry.coreapi import APIError
 from sentry.features.helpers import requires_feature
 from sentry.mediators import sentry_app_components
 from sentry.models import Project, SentryAppComponent
@@ -43,13 +44,15 @@ class OrganizationSentryAppComponentsEndpoint(OrganizationEndpoint):
                 _components = _components.filter(type=request.GET['filter'])
 
             for component in _components:
-                sentry_app_components.Preparer.run(
-                    component=component,
-                    install=install,
-                    project=project,
-                )
-
-            components.extend(_components)
+                try:
+                    sentry_app_components.Preparer.run(
+                        component=component,
+                        install=install,
+                        project=project,
+                    )
+                    components.append(component)
+                except APIError:
+                    continue
 
         return self.paginate(
             request=request,
diff --git a/tests/sentry/api/endpoints/test_sentry_app_components.py b/tests/sentry/api/endpoints/test_sentry_app_components.py
index 5796b66f1b..04a277303e 100644
--- a/tests/sentry/api/endpoints/test_sentry_app_components.py
+++ b/tests/sentry/api/endpoints/test_sentry_app_components.py
@@ -5,6 +5,7 @@ import six
 from django.core.urlresolvers import reverse
 from mock import patch, call
 
+from sentry.coreapi import APIError
 from sentry.testutils import APITestCase
 from sentry.testutils.helpers import with_feature
 
@@ -198,3 +199,25 @@ class OrganizationSentryAppComponentsTest(APITestCase):
         ]
 
         run.assert_has_calls(calls, any_order=True)
+
+    @with_feature('organizations:sentry-apps')
+    @patch('sentry.mediators.sentry_app_components.Preparer.run')
+    def test_component_prep_errors_are_isolated(self, run):
+        run.side_effect = [APIError(), self.component2]
+
+        response = self.client.get(self.url, format='json')
+
+        # Does not include self.component1 data, because it raised an exception
+        # during preparation.
+        assert response.data == [
+            {
+                'uuid': six.binary_type(self.component2.uuid),
+                'type': self.component2.type,
+                'schema': self.component2.schema,
+                'sentryApp': {
+                    'uuid': self.sentry_app2.uuid,
+                    'slug': self.sentry_app2.slug,
+                    'name': self.sentry_app2.name,
+                },
+            }
+        ]
