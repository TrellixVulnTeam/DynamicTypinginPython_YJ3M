commit da72a6d77ecfe4a5d531ec7325ad784e11dbf1f2
Author: Ben Vinegar <ben.vinegar@gmail.com>
Date:   Wed Apr 19 11:15:18 2017 -0700

    Use Jest for JS/React tests (#5252)

diff --git a/.babelrc b/.babelrc
index b4c6e91ad5..2c1272ec3e 100644
--- a/.babelrc
+++ b/.babelrc
@@ -1,16 +1,32 @@
 {
   "presets": [
     "react",
-    ["latest", {
-      "es2015": {
-        "modules": false
+    [
+      "latest",
+      {
+        "es2015": {
+          "modules": false
+        }
       }
-    }]
+    ]
   ],
   "plugins": [
     "transform-object-rest-spread",
-    ["babel-plugin-transform-builtin-extend", {
-      "globals": ["Array"]
-    }]
-  ]
-}
+    [
+      "babel-plugin-transform-builtin-extend",
+      {
+        "globals": [
+          "Array"
+        ]
+      }
+    ]
+  ],
+  "env": {
+    "test": {
+      "presets": [
+        "react",
+        "latest"
+      ]
+    }
+  }
+}
\ No newline at end of file
diff --git a/.eslintrc b/.eslintrc
index 85cb4db1d1..6a3ef825f8 100644
--- a/.eslintrc
+++ b/.eslintrc
@@ -14,7 +14,8 @@
     "require": false,
     "expect": false,
     "sinon": false,
-    "Raven": true
+    "Raven": true,
+    "jest": true
   },
   "plugins": [
     "react",
@@ -24,126 +25,171 @@
     /**
      * Strict mode
      */
-    "strict": [2, "global"],         // http://eslint.org/docs/rules/strict
-
+    "strict": [
+      2,
+      "global"
+    ], // http://eslint.org/docs/rules/strict
     /**
      * ES6
      */
-    "no-var": 2,                     // http://eslint.org/docs/rules/no-var
-    "prefer-const": 0,               // http://eslint.org/docs/rules/prefer-const
-
+    "no-var": 2, // http://eslint.org/docs/rules/no-var
+    "prefer-const": 0, // http://eslint.org/docs/rules/prefer-const
     /**
      * Variables
      */
-    "no-shadow": 2,                  // http://eslint.org/docs/rules/no-shadow
+    "no-shadow": 2, // http://eslint.org/docs/rules/no-shadow
     "no-shadow-restricted-names": 2, // http://eslint.org/docs/rules/no-shadow-restricted-names
-    "no-undef": 2,                   // http://eslint.org/docs/rules/no-undef
-    "no-unused-vars": [2, {          // http://eslint.org/docs/rules/no-unused-vars
-      "vars": "local",
-      "args": "none"
-    }],
-    "no-use-before-define": 2,       // http://eslint.org/docs/rules/no-use-before-define
-
+    "no-undef": 2, // http://eslint.org/docs/rules/no-undef
+    "no-unused-vars": [
+      2,
+      { // http://eslint.org/docs/rules/no-unused-vars
+        "vars": "local",
+        "args": "none"
+      }
+    ],
+    "no-use-before-define": 2, // http://eslint.org/docs/rules/no-use-before-define
     /**
      * Possible errors
      */
-    "comma-dangle": [0, "always-multiline"],    // http://eslint.org/docs/rules/comma-dangle
-    "no-cond-assign": [2, "always"], // http://eslint.org/docs/rules/no-cond-assign
-    "no-console": 1,                 // http://eslint.org/docs/rules/no-console
-    "no-debugger": 1,                // http://eslint.org/docs/rules/no-debugger
-    "no-alert": 1,                   // http://eslint.org/docs/rules/no-alert
-    "no-constant-condition": 1,      // http://eslint.org/docs/rules/no-constant-condition
-    "no-dupe-keys": 2,               // http://eslint.org/docs/rules/no-dupe-keys
-    "no-duplicate-case": 2,          // http://eslint.org/docs/rules/no-duplicate-case
-    "no-empty": 2,                   // http://eslint.org/docs/rules/no-empty
-    "no-ex-assign": 2,               // http://eslint.org/docs/rules/no-ex-assign
-    "no-extra-boolean-cast": 0,      // http://eslint.org/docs/rules/no-extra-boolean-cast
-    "no-extra-semi": 2,              // http://eslint.org/docs/rules/no-extra-semi
-    "no-func-assign": 2,             // http://eslint.org/docs/rules/no-func-assign
-    "no-inner-declarations": 2,      // http://eslint.org/docs/rules/no-inner-declarations
-    "no-invalid-regexp": 2,          // http://eslint.org/docs/rules/no-invalid-regexp
-    "no-irregular-whitespace": 2,    // http://eslint.org/docs/rules/no-irregular-whitespace
-    "no-obj-calls": 2,               // http://eslint.org/docs/rules/no-obj-calls
-    "no-sparse-arrays": 2,           // http://eslint.org/docs/rules/no-sparse-arrays
-    "no-unreachable": 2,             // http://eslint.org/docs/rules/no-unreachable
-    "semi": [2, "always"],           // http://eslint.org/docs/rules/semi.html
-    "use-isnan": 2,                  // http://eslint.org/docs/rules/use-isnan
-    "block-scoped-var": 2,           // http://eslint.org/docs/rules/block-scoped-var
-
+    "comma-dangle": [
+      0,
+      "always-multiline"
+    ], // http://eslint.org/docs/rules/comma-dangle
+    "no-cond-assign": [
+      2,
+      "always"
+    ], // http://eslint.org/docs/rules/no-cond-assign
+    "no-console": 1, // http://eslint.org/docs/rules/no-console
+    "no-debugger": 1, // http://eslint.org/docs/rules/no-debugger
+    "no-alert": 1, // http://eslint.org/docs/rules/no-alert
+    "no-constant-condition": 1, // http://eslint.org/docs/rules/no-constant-condition
+    "no-dupe-keys": 2, // http://eslint.org/docs/rules/no-dupe-keys
+    "no-duplicate-case": 2, // http://eslint.org/docs/rules/no-duplicate-case
+    "no-empty": 2, // http://eslint.org/docs/rules/no-empty
+    "no-ex-assign": 2, // http://eslint.org/docs/rules/no-ex-assign
+    "no-extra-boolean-cast": 0, // http://eslint.org/docs/rules/no-extra-boolean-cast
+    "no-extra-semi": 2, // http://eslint.org/docs/rules/no-extra-semi
+    "no-func-assign": 2, // http://eslint.org/docs/rules/no-func-assign
+    "no-inner-declarations": 2, // http://eslint.org/docs/rules/no-inner-declarations
+    "no-invalid-regexp": 2, // http://eslint.org/docs/rules/no-invalid-regexp
+    "no-irregular-whitespace": 2, // http://eslint.org/docs/rules/no-irregular-whitespace
+    "no-obj-calls": 2, // http://eslint.org/docs/rules/no-obj-calls
+    "no-sparse-arrays": 2, // http://eslint.org/docs/rules/no-sparse-arrays
+    "no-unreachable": 2, // http://eslint.org/docs/rules/no-unreachable
+    "semi": [
+      2,
+      "always"
+    ], // http://eslint.org/docs/rules/semi.html
+    "use-isnan": 2, // http://eslint.org/docs/rules/use-isnan
+    "block-scoped-var": 2, // http://eslint.org/docs/rules/block-scoped-var
     /**
      * Best practices
      */
-    "consistent-return": 2,          // http://eslint.org/docs/rules/consistent-return
-    "curly": 0,                      // http://eslint.org/docs/rules/curly [REVISIT ME]
-    "default-case": 2,               // http://eslint.org/docs/rules/default-case
-    "dot-notation": [2, {            // http://eslint.org/docs/rules/dot-notation
-      "allowKeywords": true
-    }],
-    "eqeqeq": 0,                     // http://eslint.org/docs/rules/eqeqeq [REVISIT ME]
-    "guard-for-in": 0,               // http://eslint.org/docs/rules/guard-for-in [REVISIT ME]
-    "jsx-quotes": [2, "prefer-double"], // http://eslint.org/docs/rules/jsx-quotes
-    "no-caller": 2,                  // http://eslint.org/docs/rules/no-caller
-    "no-else-return": 0,             // http://eslint.org/docs/rules/no-else-return [REVISIT ME]
-    "no-eq-null": 2,                 // http://eslint.org/docs/rules/no-eq-null
-    "no-eval": 2,                    // http://eslint.org/docs/rules/no-eval
-    "no-extend-native": 2,           // http://eslint.org/docs/rules/no-extend-native
-    "no-extra-bind": 2,              // http://eslint.org/docs/rules/no-extra-bind
-    "no-fallthrough": 2,             // http://eslint.org/docs/rules/no-fallthrough
-    "no-floating-decimal": 2,        // http://eslint.org/docs/rules/no-floating-decimal
-    "no-implied-eval": 2,            // http://eslint.org/docs/rules/no-implied-eval
-    "no-lone-blocks": 2,             // http://eslint.org/docs/rules/no-lone-blocks
-    "no-loop-func": 2,               // http://eslint.org/docs/rules/no-loop-func
-    "no-multi-str": 2,               // http://eslint.org/docs/rules/no-multi-str
-    "no-native-reassign": 2,         // http://eslint.org/docs/rules/no-native-reassign
-    "no-new": 2,                     // http://eslint.org/docs/rules/no-new
-    "no-new-func": 2,                // http://eslint.org/docs/rules/no-new-func
-    "no-new-wrappers": 2,            // http://eslint.org/docs/rules/no-new-wrappers
-    "no-octal": 2,                   // http://eslint.org/docs/rules/no-octal
-    "no-octal-escape": 2,            // http://eslint.org/docs/rules/no-octal-escape
-    "no-param-reassign": 0,          // http://eslint.org/docs/rules/no-param-reassign [REVISIT ME]
-    "no-proto": 2,                   // http://eslint.org/docs/rules/no-proto
-    "no-redeclare": 2,               // http://eslint.org/docs/rules/no-redeclare
-    "no-return-assign": 2,           // http://eslint.org/docs/rules/no-return-assign
-    "no-script-url": 2,              // http://eslint.org/docs/rules/no-script-url
-    "no-self-compare": 2,            // http://eslint.org/docs/rules/no-self-compare
-    "no-sequences": 2,               // http://eslint.org/docs/rules/no-sequences
-    "no-throw-literal": 2,           // http://eslint.org/docs/rules/no-throw-literal
-    "no-with": 2,                    // http://eslint.org/docs/rules/no-with
-    "quotes": [2, "single"],         // http://eslint.org/docs/rules/quotes.html
-    "radix": 2,                      // http://eslint.org/docs/rules/radix
-    "computed-property-spacing": [2, "never"], // http://eslint.org/docs/rules/space-in-brackets.html
-    "array-bracket-spacing": [2, "never"], // http://eslint.org/docs/rules/space-in-brackets.html
-    "object-curly-spacing": [2, "never"], // http://eslint.org/docs/rules/space-in-brackets.html
-    "space-infix-ops": 2,            // http://eslint.org/docs/rules/space-infix-ops.html
-    "vars-on-top": 0,                // http://eslint.org/docs/rules/vars-on-top
-    "wrap-iife": [2, "any"],         // http://eslint.org/docs/rules/wrap-iife
-    "yoda": 2,                       // http://eslint.org/docs/rules/yoda
-
+    "consistent-return": 2, // http://eslint.org/docs/rules/consistent-return
+    "curly": 0, // http://eslint.org/docs/rules/curly [REVISIT ME]
+    "default-case": 2, // http://eslint.org/docs/rules/default-case
+    "dot-notation": [
+      2,
+      { // http://eslint.org/docs/rules/dot-notation
+        "allowKeywords": true
+      }
+    ],
+    "eqeqeq": 0, // http://eslint.org/docs/rules/eqeqeq [REVISIT ME]
+    "guard-for-in": 0, // http://eslint.org/docs/rules/guard-for-in [REVISIT ME]
+    "jsx-quotes": [
+      2,
+      "prefer-double"
+    ], // http://eslint.org/docs/rules/jsx-quotes
+    "no-caller": 2, // http://eslint.org/docs/rules/no-caller
+    "no-else-return": 0, // http://eslint.org/docs/rules/no-else-return [REVISIT ME]
+    "no-eq-null": 2, // http://eslint.org/docs/rules/no-eq-null
+    "no-eval": 2, // http://eslint.org/docs/rules/no-eval
+    "no-extend-native": 2, // http://eslint.org/docs/rules/no-extend-native
+    "no-extra-bind": 2, // http://eslint.org/docs/rules/no-extra-bind
+    "no-fallthrough": 2, // http://eslint.org/docs/rules/no-fallthrough
+    "no-floating-decimal": 2, // http://eslint.org/docs/rules/no-floating-decimal
+    "no-implied-eval": 2, // http://eslint.org/docs/rules/no-implied-eval
+    "no-lone-blocks": 2, // http://eslint.org/docs/rules/no-lone-blocks
+    "no-loop-func": 2, // http://eslint.org/docs/rules/no-loop-func
+    "no-multi-str": 2, // http://eslint.org/docs/rules/no-multi-str
+    "no-native-reassign": 2, // http://eslint.org/docs/rules/no-native-reassign
+    "no-new": 2, // http://eslint.org/docs/rules/no-new
+    "no-new-func": 2, // http://eslint.org/docs/rules/no-new-func
+    "no-new-wrappers": 2, // http://eslint.org/docs/rules/no-new-wrappers
+    "no-octal": 2, // http://eslint.org/docs/rules/no-octal
+    "no-octal-escape": 2, // http://eslint.org/docs/rules/no-octal-escape
+    "no-param-reassign": 0, // http://eslint.org/docs/rules/no-param-reassign [REVISIT ME]
+    "no-proto": 2, // http://eslint.org/docs/rules/no-proto
+    "no-redeclare": 2, // http://eslint.org/docs/rules/no-redeclare
+    "no-return-assign": 2, // http://eslint.org/docs/rules/no-return-assign
+    "no-script-url": 2, // http://eslint.org/docs/rules/no-script-url
+    "no-self-compare": 2, // http://eslint.org/docs/rules/no-self-compare
+    "no-sequences": 2, // http://eslint.org/docs/rules/no-sequences
+    "no-throw-literal": 2, // http://eslint.org/docs/rules/no-throw-literal
+    "no-with": 2, // http://eslint.org/docs/rules/no-with
+    "quotes": [
+      2,
+      "single"
+    ], // http://eslint.org/docs/rules/quotes.html
+    "radix": 2, // http://eslint.org/docs/rules/radix
+    "computed-property-spacing": [
+      2,
+      "never"
+    ], // http://eslint.org/docs/rules/space-in-brackets.html
+    "array-bracket-spacing": [
+      2,
+      "never"
+    ], // http://eslint.org/docs/rules/space-in-brackets.html
+    "object-curly-spacing": [
+      2,
+      "never"
+    ], // http://eslint.org/docs/rules/space-in-brackets.html
+    "space-infix-ops": 2, // http://eslint.org/docs/rules/space-infix-ops.html
+    "vars-on-top": 0, // http://eslint.org/docs/rules/vars-on-top
+    "wrap-iife": [
+      2,
+      "any"
+    ], // http://eslint.org/docs/rules/wrap-iife
+    "yoda": 2, // http://eslint.org/docs/rules/yoda
     /**
      * React
      */
-    "react/display-name": 0,         // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/display-name.md
-    "react/no-multi-comp": [0, {"ignoreStateless": true}], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md
-    "react/jsx-key": 2,              // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-key.md
-    "react/jsx-no-undef": 2,         // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-undef.md
+    "react/display-name": 0, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/display-name.md
+    "react/no-multi-comp": [
+      0,
+      {
+        "ignoreStateless": true
+      }
+    ], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md
+    "react/jsx-key": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-key.md
+    "react/jsx-no-undef": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-undef.md
     "react/jsx-no-duplicate-props": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-duplicate-props.md
-    "react/jsx-uses-react": 2,       // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-react.md
-    "react/jsx-uses-vars": 2,        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-vars.md
-    "react/no-did-mount-set-state": [2, "allow-in-func"], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-did-mount-set-state.md
+    "react/jsx-uses-react": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-react.md
+    "react/jsx-uses-vars": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-vars.md
+    "react/no-did-mount-set-state": [
+      2,
+      "allow-in-func"
+    ], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-did-mount-set-state.md
     "react/no-did-update-set-state": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-did-update-set-state.md"
-    "react/no-unknown-property": 2,  // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-unknown-property.md
-    "react/prop-types": [2, {
-      "ignore": ["className", "children", "location", "params"]
-    }],
-    "react/react-in-jsx-scope": 2,   // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/react-in-jsx-scope.md
-    "react/self-closing-comp": 2,    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md
-    "react/sort-comp": 2,            // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md
-    "react/wrap-multilines": 2,      // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/wrap-multilines.md
-
+    "react/no-unknown-property": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-unknown-property.md
+    "react/prop-types": [
+      2,
+      {
+        "ignore": [
+          "className",
+          "children",
+          "location",
+          "params"
+        ]
+      }
+    ],
+    "react/react-in-jsx-scope": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/react-in-jsx-scope.md
+    "react/self-closing-comp": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md
+    "react/sort-comp": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md
+    "react/wrap-multilines": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/wrap-multilines.md
     /**
      * Custom
      */
-    "getsentry/jsx-needs-il8n": 0,   // highlights literals in JSX components w/o translation tags
+    "getsentry/jsx-needs-il8n": 0, // highlights literals in JSX components w/o translation tags
   }
-
-}
+}
\ No newline at end of file
diff --git a/package.json b/package.json
index 4d2256ef11..d739fe78e4 100644
--- a/package.json
+++ b/package.json
@@ -67,28 +67,36 @@
   "APIMethod": "stub",
   "proxyURL": "http://localhost:8000",
   "scripts": {
-    "test": "node_modules/karma/bin/karma start tests/karma.conf.js --single-run",
-    "test-watch": "node_modules/karma/bin/karma start tests/karma.conf.js",
+    "test": "NODE_ENV=test node_modules/.bin/jest tests/js/spec",
+    "test-watch": "NODE_ENV=test node_modules/.bin/jest tests/js/spec --watch",
     "lint": "node_modules/.bin/eslint tests/js src/sentry/static/sentry/app --ext .jsx"
   },
+  "jest": {
+    "modulePaths": [
+      "<rootDir>/src/sentry/static/sentry"
+    ],
+    "setupFiles": [
+      "<rootDir>/tests/js/setup.js"
+    ],
+    "unmockedModulePathPatterns": [
+      "<rootDir>/node_modules/react",
+      "<rootDir>/node_modules/reflux"
+    ]
+  },
   "devDependencies": {
     "babel-eslint": "7.1.1",
+    "babel-jest": "^19.0.0",
     "chai": "3.4.1",
     "enzyme": "2.4.1",
     "eslint": "1.9.0",
     "eslint-plugin-getsentry": "1.0.0",
     "eslint-plugin-react": "3.11.2",
-    "karma": "0.13.22",
-    "karma-chai": "0.1.0",
-    "karma-mocha": "0.1.10",
-    "karma-phantomjs-launcher": "1.0.2",
-    "karma-sinon": "1.0.4",
+    "jest": "^19.0.2",
     "karma-sourcemap-loader": "0.3.7",
     "karma-webpack": "2.0.1",
-    "mocha": "2.3.4",
     "phantomjs-prebuilt": "2.1.14",
     "prettier": "1.1.0",
     "sinon": "1.17.2",
     "sinon-chai": "2.8.0"
   }
-}
+}
\ No newline at end of file
diff --git a/src/sentry/static/sentry/app/__mocks__/translations.jsx b/src/sentry/static/sentry/app/__mocks__/translations.jsx
new file mode 100644
index 0000000000..fae5e79c64
--- /dev/null
+++ b/src/sentry/static/sentry/app/__mocks__/translations.jsx
@@ -0,0 +1,13 @@
+export function getTranslations(language) {
+  return {
+    '': {
+      domain: 'the_domain',
+      lang: 'en',
+      plural_forms: 'nplurals=2; plural=(n != 1);'
+    }
+  };
+}
+
+export function translationsExist(language) {
+  return true; // no translations for tests
+}
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
index baaf2ac162..ae81f7040a 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
@@ -32,7 +32,12 @@ const RichHttpContent = React.createClass({
             : [[k, val]] // key has single value
         );
       }, [])
-      .sort(function([keyA], [keyB]) {
+      .sort(function([keyA, valA], [keyB, valB]) {
+        // if keys are identical, sort on value
+        if (keyA === keyB) {
+          return valA < valB ? -1 : 1;
+        }
+
         return keyA < keyB ? -1 : 1;
       });
   },
diff --git a/src/sentry/static/sentry/app/locale.jsx b/src/sentry/static/sentry/app/locale.jsx
index 6059846733..9d7a1609f0 100644
--- a/src/sentry/static/sentry/app/locale.jsx
+++ b/src/sentry/static/sentry/app/locale.jsx
@@ -7,6 +7,7 @@ import _ from 'underscore';
 
 let LOCALE_DEBUG = false;
 
+let sessionStorage = window.sessionStorage;
 if (sessionStorage && sessionStorage.getItem('localeDebug') == '1') {
   LOCALE_DEBUG = true;
 }
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index cec5f91c07..9c20c69006 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -4,6 +4,7 @@ import {Redirect, Route, IndexRoute, IndexRedirect} from 'react-router';
 import HookStore from './stores/hookStore';
 
 import AccountAuthorizations from './views/accountAuthorizations';
+
 import AccountLayout from './views/accountLayout';
 import ApiApplications from './views/apiApplications';
 import ApiApplicationDetails from './views/apiApplicationDetails';
diff --git a/src/sentry/static/sentry/app/stores/groupStore.jsx b/src/sentry/static/sentry/app/stores/groupStore.jsx
index 2a243317c6..25d7ca2b13 100644
--- a/src/sentry/static/sentry/app/stores/groupStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupStore.jsx
@@ -2,7 +2,7 @@ import jQuery from 'jquery';
 import Reflux from 'reflux';
 import GroupActions from '../actions/groupActions';
 import IndicatorStore from './indicatorStore';
-import utils from '../utils';
+import PendingChangeQueue from '../utils/pendingChangeQueue';
 import {t} from '../locale';
 import _ from 'underscore';
 
@@ -16,15 +16,13 @@ const GroupStore = Reflux.createStore({
   listenables: [GroupActions],
 
   init() {
-    this.items = [];
-    this.statuses = {};
-    this.pendingChanges = new utils.PendingChangeQueue();
+    this.reset();
   },
 
   reset() {
     this.items = [];
     this.statuses = {};
-    this.pendingChanges.clear();
+    this.pendingChanges = new PendingChangeQueue();
   },
 
   // TODO(dcramer): this should actually come from an action of some sorts
diff --git a/src/sentry/static/sentry/app/utils/__mocks__/localStorage.jsx b/src/sentry/static/sentry/app/utils/__mocks__/localStorage.jsx
new file mode 100644
index 0000000000..d4c01ae47d
--- /dev/null
+++ b/src/sentry/static/sentry/app/utils/__mocks__/localStorage.jsx
@@ -0,0 +1,16 @@
+let localStorageMock = function() {
+  let store = {};
+  return {
+    getItem: function(key) {
+      return store[key];
+    },
+    setItem: function(key, value) {
+      store[key] = value.toString();
+    },
+    clear: function() {
+      store = {};
+    }
+  };
+};
+
+export default localStorageMock();
diff --git a/src/sentry/static/sentry/app/utils/localStorage.jsx b/src/sentry/static/sentry/app/utils/localStorage.jsx
index b025f11f55..0af5238b0b 100644
--- a/src/sentry/static/sentry/app/utils/localStorage.jsx
+++ b/src/sentry/static/sentry/app/utils/localStorage.jsx
@@ -1,5 +1,7 @@
 let functions = {};
 
+let localStorage = window.localStorage;
+
 try {
   let mod = 'sentry';
   localStorage.setItem(mod, mod);
diff --git a/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx b/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx
index cc1c45056a..d5702c2842 100644
--- a/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx
+++ b/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx
@@ -1,10 +1,5 @@
-class PendingChangeQueue extends Array {
+class PendingChangeQueue {
   constructor() {
-    super();
-    this.changes = [];
-  }
-
-  clear() {
     this.changes = [];
   }
 
@@ -21,6 +16,10 @@ class PendingChangeQueue extends Array {
       change => change[0] != changeId || change[1] != itemId
     );
   }
+
+  forEach() {
+    this.changes.forEach.apply(this.changes, arguments);
+  }
 }
 
 export default PendingChangeQueue;
diff --git a/tests/js/setup.js b/tests/js/setup.js
new file mode 100644
index 0000000000..caa2426a9a
--- /dev/null
+++ b/tests/js/setup.js
@@ -0,0 +1,7 @@
+jest.mock('app/translations');
+
+import jQuery from 'jquery';
+window.$ = window.jQuery = jQuery;
+
+import sinon from 'sinon';
+window.sinon = sinon;
diff --git a/tests/js/spec/api.spec.jsx b/tests/js/spec/api.spec.jsx
index fb45ebd533..96535774fa 100644
--- a/tests/js/spec/api.spec.jsx
+++ b/tests/js/spec/api.spec.jsx
@@ -20,7 +20,7 @@ describe('api', function() {
           itemIds: [1, 2, 3],
           query: 'is:unresolved' // itemIds takes precedence
         })
-      ).to.eql({id: [1, 2, 3]});
+      ).toEqual({id: [1, 2, 3]});
     });
 
     it('should extract query property if no itemIds', function() {
@@ -29,7 +29,7 @@ describe('api', function() {
           query: 'is:unresolved',
           foo: 'bar'
         })
-      ).to.eql({query: 'is:unresolved'});
+      ).toEqual({query: 'is:unresolved'});
     });
 
     it('should convert params w/o itemIds or query to undefined', function() {
@@ -38,7 +38,7 @@ describe('api', function() {
           foo: 'bar',
           bar: 'baz' // paramsToQueryArgs ignores these
         })
-      ).to.be.undefined;
+      ).toBeUndefined();
     });
   });
 
@@ -63,8 +63,8 @@ describe('api', function() {
 
         this.api.clear();
 
-        expect(req1.xhr.abort.calledOnce).to.be.ok;
-        expect(req2.xhr.abort.calledOnce).to.be.ok;
+        expect(req1.xhr.abort.calledOnce).toBeTruthy();
+        expect(req2.xhr.abort.calledOnce).toBeTruthy();
       });
     });
   });
@@ -84,9 +84,9 @@ describe('api', function() {
         query: 'is:resolved'
       });
 
-      expect(this.api._wrapRequest.calledOnce).to.be.ok;
+      expect(this.api._wrapRequest.calledOnce).toBeTruthy();
       let requestArgs = this.api._wrapRequest.getCall(0).args[1];
-      expect(requestArgs.query).to.eql({id: [1, 2, 3]});
+      expect(requestArgs.query).toEqual({id: [1, 2, 3]});
     });
 
     it('should use query as query if itemIds are absent', function() {
@@ -98,9 +98,9 @@ describe('api', function() {
         query: 'is:resolved'
       });
 
-      expect(this.api._wrapRequest.calledOnce).to.be.ok;
+      expect(this.api._wrapRequest.calledOnce).toBeTruthy();
       let requestArgs = this.api._wrapRequest.getCall(0).args[1];
-      expect(requestArgs.query).to.eql({query: 'is:resolved'});
+      expect(requestArgs.query).toEqual({query: 'is:resolved'});
     });
   });
 
@@ -121,9 +121,9 @@ describe('api', function() {
         query: 'is:resolved'
       });
 
-      expect(this.api._wrapRequest.calledOnce).to.be.ok;
+      expect(this.api._wrapRequest.calledOnce).toBeTruthy();
       let requestArgs = this.api._wrapRequest.getCall(0).args[1];
-      expect(requestArgs.query).to.eql({id: [1, 2, 3]});
+      expect(requestArgs.query).toEqual({id: [1, 2, 3]});
     });
 
     it('should use query as query if itemIds are absent', function() {
@@ -135,9 +135,9 @@ describe('api', function() {
         query: 'is:resolved'
       });
 
-      expect(this.api._wrapRequest.calledOnce).to.be.ok;
+      expect(this.api._wrapRequest.calledOnce).toBeTruthy();
       let requestArgs = this.api._wrapRequest.getCall(0).args[1];
-      expect(requestArgs.query).to.eql({query: 'is:resolved'});
+      expect(requestArgs.query).toEqual({query: 'is:resolved'});
     });
   });
 });
diff --git a/tests/js/spec/components/assigneeSelector.spec.jsx b/tests/js/spec/components/assigneeSelector.spec.jsx
index 89416f7235..dccefdd0e9 100644
--- a/tests/js/spec/components/assigneeSelector.spec.jsx
+++ b/tests/js/spec/components/assigneeSelector.spec.jsx
@@ -42,22 +42,24 @@ describe('AssigneeSelector', function() {
 
     describe('filterMembers()', function() {
       it('should return the full array when filter is falsy', function() {
-        expect(filterMembers([USER_1, USER_2], '')).to.eql([USER_1, USER_2]);
-        expect(filterMembers([USER_1, USER_2], null)).to.eql([USER_1, USER_2]);
-        expect(filterMembers([USER_1, USER_2], undefined)).to.eql([USER_1, USER_2]);
+        expect(filterMembers([USER_1, USER_2], '')).toEqual([USER_1, USER_2]);
+        expect(filterMembers([USER_1, USER_2], null)).toEqual([USER_1, USER_2]);
+        expect(filterMembers([USER_1, USER_2], undefined)).toEqual([USER_1, USER_2]);
       });
 
       it('should match on email', function() {
-        expect(filterMembers([USER_1, USER_2], 'johnsmith@example.com')).to.eql([USER_2]);
+        expect(filterMembers([USER_1, USER_2], 'johnsmith@example.com')).toEqual([
+          USER_2
+        ]);
       });
 
       it('should match on name', function() {
-        expect(filterMembers([USER_1, USER_2], 'John Smith')).to.eql([USER_2]);
+        expect(filterMembers([USER_1, USER_2], 'John Smith')).toEqual([USER_2]);
       });
 
       it('should ignore capitalization', function() {
-        expect(filterMembers([USER_1], 'Jane')).to.eql([USER_1]);
-        expect(filterMembers([USER_1], 'jane')).to.eql([USER_1]);
+        expect(filterMembers([USER_1], 'Jane')).toEqual([USER_1]);
+        expect(filterMembers([USER_1], 'jane')).toEqual([USER_1]);
       });
     });
 
@@ -70,7 +72,7 @@ describe('AssigneeSelector', function() {
           name: 'John Smith',
           email: 'johnsmith@example.com'
         });
-        expect(putSessionUserFirst([USER_1, USER_2])).to.eql([USER_2, USER_1]);
+        expect(putSessionUserFirst([USER_1, USER_2])).toEqual([USER_2, USER_1]);
       });
 
       it('should return the same member list if the session user isn\'t present', function() {
@@ -80,7 +82,7 @@ describe('AssigneeSelector', function() {
           email: 'guile@mail.us.af.mil'
         });
 
-        expect(putSessionUserFirst([USER_1, USER_2])).to.eql([USER_1, USER_2]);
+        expect(putSessionUserFirst([USER_1, USER_2])).toEqual([USER_1, USER_2]);
       });
     });
   });
@@ -103,8 +105,8 @@ describe('AssigneeSelector', function() {
         keyCode: 13,
         which: 13
       });
-      expect(assigneeSelector.assignTo.calledOnce).to.be.ok;
-      expect(assigneeSelector.assignTo.lastCall.args[0]).to.have.property(
+      expect(assigneeSelector.assignTo.calledOnce).toBeTruthy;
+      expect(assigneeSelector.assignTo.lastCall.args[0]).toHaveProperty(
         'name',
         'Jane Doe'
       );
@@ -119,7 +121,7 @@ describe('AssigneeSelector', function() {
         keyCode: 13,
         which: 13
       });
-      expect(assigneeSelector.assignTo.notCalled).to.be.ok;
+      expect(assigneeSelector.assignTo.notCalled).toBeTruthy;
     });
 
     it('should do nothing if a non-Enter key is pressed', function() {
@@ -131,7 +133,7 @@ describe('AssigneeSelector', function() {
         keyCode: 72,
         which: 72
       });
-      expect(assigneeSelector.assignTo.notCalled).to.be.ok;
+      expect(assigneeSelector.assignTo.notCalled).toBeTruthy;
     });
   });
 
@@ -148,14 +150,14 @@ describe('AssigneeSelector', function() {
 
       TestUtils.Simulate.keyUp(assigneeSelector.refs.filter, {key: 'Escape'});
 
-      expect(assigneeSelector.refs.dropdown.close.calledOnce).to.be.ok;
+      expect(assigneeSelector.refs.dropdown.close.calledOnce).toBeTruthy;
     });
 
     it('should update the local filter state if any other key is pressed', function() {
       let assigneeSelector = this.assigneeSelector;
 
       TestUtils.Simulate.keyUp(assigneeSelector.refs.filter, {target: {value: 'foo'}});
-      expect(assigneeSelector.state.filter).to.eql('foo');
+      expect(assigneeSelector.state.filter).toEqual('foo');
     });
   });
 
@@ -173,8 +175,8 @@ describe('AssigneeSelector', function() {
       this.sandbox.spy(this.assigneeSelector, 'removeTooltips');
 
       this.assigneeSelector.setState({assignedTo: USER_1}, () => {
-        expect(this.assigneeSelector.attachTooltips.calledOnce).to.be.ok;
-        expect(this.assigneeSelector.removeTooltips.calledOnce).to.be.ok;
+        expect(this.assigneeSelector.attachTooltips.calledOnce).toBeTruthy;
+        expect(this.assigneeSelector.removeTooltips.calledOnce).toBeTruthy;
         done();
       });
     });
diff --git a/tests/js/spec/components/avatar.spec.jsx b/tests/js/spec/components/avatar.spec.jsx
index 98c1c802d2..64e076851c 100644
--- a/tests/js/spec/components/avatar.spec.jsx
+++ b/tests/js/spec/components/avatar.spec.jsx
@@ -29,8 +29,8 @@ describe('Avatar', function() {
       this.sandbox.stub(avatar, 'buildGravatarUrl');
       this.sandbox.stub(avatar, 'buildProfileUrl');
       avatar.renderImg();
-      expect(avatar.buildGravatarUrl.calledOnce).to.be.ok;
-      expect(avatar.buildProfileUrl.called).to.not.be.ok;
+      expect(avatar.buildGravatarUrl.calledOnce).toBeTruthy;
+      expect(avatar.buildProfileUrl.called).not.toBeTruthy();
     });
 
     it('should show an upload when avatar type is upload', function() {
@@ -44,8 +44,8 @@ describe('Avatar', function() {
       this.sandbox.stub(avatar, 'buildGravatarUrl');
       this.sandbox.stub(avatar, 'buildProfileUrl');
       avatar.renderImg();
-      expect(avatar.buildProfileUrl.calledOnce).to.be.ok;
-      expect(avatar.buildGravatarUrl.called).to.not.be.ok;
+      expect(avatar.buildProfileUrl.calledOnce).toBeTruthy;
+      expect(avatar.buildGravatarUrl.called).not.toBeTruthy();
     });
 
     it('should not show upload or gravatar when avatar type is letter', function() {
@@ -59,8 +59,8 @@ describe('Avatar', function() {
       this.sandbox.stub(avatar, 'buildGravatarUrl');
       this.sandbox.stub(avatar, 'buildProfileUrl');
       avatar.renderImg();
-      expect(avatar.buildProfileUrl.called).to.not.be.ok;
-      expect(avatar.buildGravatarUrl.called).to.not.be.ok;
+      expect(avatar.buildProfileUrl.called).not.toBeTruthy();
+      expect(avatar.buildGravatarUrl.called).not.toBeTruthy();
     });
 
     it('should show a gravatar when no avatar type is set and user has an email address', function() {
@@ -68,8 +68,8 @@ describe('Avatar', function() {
       this.sandbox.stub(avatar, 'buildGravatarUrl');
       this.sandbox.stub(avatar, 'buildProfileUrl');
       avatar.renderImg();
-      expect(avatar.buildGravatarUrl.calledOnce).to.be.ok;
-      expect(avatar.buildProfileUrl.called).to.not.be.ok;
+      expect(avatar.buildGravatarUrl.calledOnce).toBeTruthy;
+      expect(avatar.buildProfileUrl.called).not.toBeTruthy();
     });
 
     it('should not show a gravatar when no avatar type is set and user has no email address', function() {
@@ -79,8 +79,8 @@ describe('Avatar', function() {
       this.sandbox.stub(avatar, 'buildGravatarUrl');
       this.sandbox.stub(avatar, 'buildProfileUrl');
       avatar.renderImg();
-      expect(avatar.buildGravatarUrl.called).to.not.be.ok;
-      expect(avatar.buildProfileUrl.called).to.not.be.ok;
+      expect(avatar.buildGravatarUrl.called).not.toBeTruthy();
+      expect(avatar.buildProfileUrl.called).not.toBeTruthy();
     });
   });
 });
diff --git a/tests/js/spec/components/avatarCropper.spec.jsx b/tests/js/spec/components/avatarCropper.spec.jsx
index 74560b6647..6ca4d0b910 100644
--- a/tests/js/spec/components/avatarCropper.spec.jsx
+++ b/tests/js/spec/components/avatarCropper.spec.jsx
@@ -20,7 +20,7 @@ describe('AvatarCropper', function() {
           <AvatarCropper user={USER} updateDataUrlState={function() {}} />
         ).instance();
         let diff = cropper.getDiffNW(4, 5);
-        expect(diff).to.equal(-4.5);
+        expect(diff).toEqual(-4.5);
       }
     );
 
@@ -32,7 +32,7 @@ describe('AvatarCropper', function() {
           <AvatarCropper user={USER} updateDataUrlState={function() {}} />
         ).instance();
         let diff = cropper.getDiffNW(-4, -5);
-        expect(diff).to.equal(4.5);
+        expect(diff).toEqual(4.5);
       }
     );
   });
@@ -46,7 +46,7 @@ describe('AvatarCropper', function() {
           <AvatarCropper user={USER} updateDataUrlState={function() {}} />
         ).instance();
         let diff = cropper.getDiffNE(-4, 5);
-        expect(diff).to.equal(4.5);
+        expect(diff).toEqual(4.5);
       }
     );
 
@@ -58,7 +58,7 @@ describe('AvatarCropper', function() {
           <AvatarCropper user={USER} updateDataUrlState={function() {}} />
         ).instance();
         let diff = cropper.getDiffNE(4, -5);
-        expect(diff).to.equal(-4.5);
+        expect(diff).toEqual(-4.5);
       }
     );
   });
@@ -72,7 +72,7 @@ describe('AvatarCropper', function() {
           <AvatarCropper user={USER} updateDataUrlState={function() {}} />
         ).instance();
         let diff = cropper.getDiffSE(4, 5);
-        expect(diff).to.equal(4.5);
+        expect(diff).toEqual(4.5);
       }
     );
 
@@ -84,7 +84,7 @@ describe('AvatarCropper', function() {
           <AvatarCropper user={USER} updateDataUrlState={function() {}} />
         ).instance();
         let diff = cropper.getDiffSE(-4, -5);
-        expect(diff).to.equal(-4.5);
+        expect(diff).toEqual(-4.5);
       }
     );
   });
@@ -98,7 +98,7 @@ describe('AvatarCropper', function() {
           <AvatarCropper user={USER} updateDataUrlState={function() {}} />
         ).instance();
         let diff = cropper.getDiffSW(4, -5);
-        expect(diff).to.equal(4.5);
+        expect(diff).toEqual(4.5);
       }
     );
 
@@ -110,7 +110,7 @@ describe('AvatarCropper', function() {
           <AvatarCropper user={USER} updateDataUrlState={function() {}} />
         ).instance();
         let diff = cropper.getDiffSW(-4, 5);
-        expect(diff).to.equal(-4.5);
+        expect(diff).toEqual(-4.5);
       }
     );
   });
diff --git a/tests/js/spec/components/barChart.spec.jsx b/tests/js/spec/components/barChart.spec.jsx
index 2c5f4a6a14..67a5baeb9c 100644
--- a/tests/js/spec/components/barChart.spec.jsx
+++ b/tests/js/spec/components/barChart.spec.jsx
@@ -1,16 +1,10 @@
 import React from 'react';
-import ReactDOM from 'react-dom';
-import TestUtils from 'react-addons-test-utils';
+import {mount} from 'enzyme';
 
 import BarChart from 'app/components/barChart';
 
 describe('BarChart', function() {
   describe('render()', function() {
-    it('renders with default props', function() {
-      let comp = TestUtils.renderIntoDocument(<BarChart />);
-      expect(comp).to.be.ok;
-    });
-
     it('renders with points data', function() {
       let points = [
         {x: 1439766000, y: 10},
@@ -18,13 +12,13 @@ describe('BarChart', function() {
         {x: 1439773200, y: 30}
       ];
 
-      let comp = TestUtils.renderIntoDocument(<BarChart points={points} />);
-      let columns = ReactDOM.findDOMNode(comp).querySelectorAll('.chart-column');
+      let wrapper = mount(<BarChart points={points} />);
+      let columns = wrapper.find('.chart-column');
 
-      expect(columns).to.have.property('length', 3);
-      expect(columns[0]).to.have.property('textContent', '10'); // check y values
-      expect(columns[1]).to.have.property('textContent', '20');
-      expect(columns[2]).to.have.property('textContent', '30');
+      expect(columns).toHaveProperty('length', 3);
+      expect(columns.at(0).text()).toEqual('10'); // check y values
+      expect(columns.at(1).text()).toEqual('20');
+      expect(columns.at(2).text()).toEqual('30');
     });
 
     it('renders with points and markers', function() {
@@ -38,19 +32,17 @@ describe('BarChart', function() {
         {x: 1439776800, className: 'last-seen', label: 'last seen'} // matches last point
       ];
 
-      let comp = TestUtils.renderIntoDocument(
-        <BarChart points={points} markers={markers} />
-      );
-      let columns = ReactDOM.findDOMNode(comp).getElementsByTagName('a');
+      let wrapper = mount(<BarChart points={points} markers={markers} />);
+      let columns = wrapper.find('a');
 
-      expect(columns).to.have.property('length', 5);
+      expect(columns).toHaveProperty('length', 5);
 
       // NOTE: markers are placed *before* corresponding chart column
-      expect(columns[0]).to.have.property('textContent', 'first seen');
-      expect(columns[1]).to.have.property('textContent', '10');
-      expect(columns[2]).to.have.property('textContent', '20');
-      expect(columns[3]).to.have.property('textContent', 'last seen');
-      expect(columns[4]).to.have.property('textContent', '30');
+      expect(columns.at(0).text()).toEqual('first seen');
+      expect(columns.at(1).text()).toEqual('10');
+      expect(columns.at(2).text()).toEqual('20');
+      expect(columns.at(3).text()).toEqual('last seen');
+      expect(columns.at(4).text()).toEqual('30');
     });
 
     it('renders with points and markers, when first and last seen are same data point', function() {
@@ -60,17 +52,15 @@ describe('BarChart', function() {
         {x: 1439776800, className: 'last-seen', label: 'last seen'}
       ];
 
-      let comp = TestUtils.renderIntoDocument(
-        <BarChart points={points} markers={markers} />
-      );
-      let columns = ReactDOM.findDOMNode(comp).getElementsByTagName('a');
+      let wrapper = mount(<BarChart points={points} markers={markers} />);
+      let columns = wrapper.find('a');
 
-      expect(columns).to.have.property('length', 3);
+      expect(columns).toHaveProperty('length', 3);
 
       // NOTE: markers are placed *before* corresponding chart column
-      expect(columns[0]).to.have.property('textContent', 'first seen');
-      expect(columns[1]).to.have.property('textContent', 'last seen');
-      expect(columns[2]).to.have.property('textContent', '30');
+      expect(columns.at(0).text()).toEqual('first seen');
+      expect(columns.at(1).text()).toEqual('last seen');
+      expect(columns.at(2).text()).toEqual('30');
     });
   });
 });
diff --git a/tests/js/spec/components/contextData.spec.jsx b/tests/js/spec/components/contextData.spec.jsx
index 6fb11c6667..d51ce9515f 100644
--- a/tests/js/spec/components/contextData.spec.jsx
+++ b/tests/js/spec/components/contextData.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
-import ReactDOM from 'react-dom';
-import TestUtils from 'react-addons-test-utils';
+import {mount} from 'enzyme';
 
 import ContextData from 'app/components/contextData';
 
@@ -9,12 +8,10 @@ describe('ContextData', function() {
     describe('strings', function() {
       it('should render urls w/ an additional <a> link', function() {
         const URL = 'https://example.org/foo/bar/';
-        let ctxData = TestUtils.renderIntoDocument(<ContextData data={URL} />);
+        let wrapper = mount(<ContextData data={URL} />);
 
-        let node = ReactDOM.findDOMNode(ctxData);
-
-        expect(node.getElementsByTagName('span')[0]).to.have.property('textContent', URL);
-        expect(node.getElementsByTagName('a')[0]).to.have.property('href', URL);
+        expect(wrapper.find('span').at(0).text()).toEqual(URL);
+        expect(wrapper.find('a').at(0).prop('href')).toEqual(URL);
       });
     });
   });
diff --git a/tests/js/spec/components/dropdownLink.spec.jsx b/tests/js/spec/components/dropdownLink.spec.jsx
index ef31b42d38..a1000f0145 100644
--- a/tests/js/spec/components/dropdownLink.spec.jsx
+++ b/tests/js/spec/components/dropdownLink.spec.jsx
@@ -16,12 +16,12 @@ describe('DropdownLink', function() {
       let dropdownlink = TestUtils.renderIntoDocument(<DropdownLink {...INPUT_1} />);
 
       let handlers = jQuery._data(dropdownlink.refs.dropdownToggle.parentNode, 'events');
-      expect(handlers).to.be.an('object');
+      expect(handlers).toBeInstanceOf(Object);
 
       dropdownlink.componentWillUnmount(dropdownlink);
 
       handlers = jQuery._data(dropdownlink.refs.dropdownToggle.parentNode, 'events');
-      expect(handlers).to.be.an('undefined');
+      expect(handlers).toBe(undefined);
     });
   });
 });
diff --git a/tests/js/spec/components/events/interfaces/breadcrumbComponents/breadcrumbs.spec.jsx b/tests/js/spec/components/events/interfaces/breadcrumbComponents/breadcrumbs.spec.jsx
index 1cda15e2b0..7e07f38272 100644
--- a/tests/js/spec/components/events/interfaces/breadcrumbComponents/breadcrumbs.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/breadcrumbComponents/breadcrumbs.spec.jsx
@@ -38,35 +38,35 @@ describe('BreadcrumbsInterface', function() {
   describe('filterCrumbs', function() {
     it('should filter crumbs based on crumb message', function() {
       const breadcrumbs = shallow(<BreadcrumbsInterface {...PROPS} />).instance();
-      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'hi')).to.have.length(0);
-      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'up')).to.have.length(13);
+      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'hi')).toHaveLength(0);
+      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'up')).toHaveLength(13);
     });
 
     it('should filter crumbs based on crumb level', function() {
       const breadcrumbs = shallow(<BreadcrumbsInterface {...PROPS} />).instance();
-      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'hi')).to.have.length(0);
-      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'ext')).to.have.length(16);
+      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'hi')).toHaveLength(0);
+      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'ext')).toHaveLength(16);
     });
 
     it('should filter crumbs based on crumb category', function() {
       const breadcrumbs = shallow(<BreadcrumbsInterface {...PROPS} />).instance();
-      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'hi')).to.have.length(0);
-      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'error')).to.have.length(2);
+      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'hi')).toHaveLength(0);
+      expect(breadcrumbs.filterCrumbs(PROPS.data.values, 'error')).toHaveLength(2);
     });
   });
 
   describe('render', function() {
     it('should display the correct number of crumbs with no filter', function() {
       const wrapper = shallow(<BreadcrumbsInterface {...PROPS} />);
-      expect(wrapper.find(Breadcrumb)).to.have.length(10);
+      expect(wrapper.find(Breadcrumb)).toHaveLength(10);
     });
 
     it('should display the correct number of crumbs with a filter', function() {
       const wrapper = shallow(<BreadcrumbsInterface {...PROPS} />);
       wrapper.setState({queryValue: 'sup'});
-      expect(wrapper.find(Breadcrumb)).to.have.length(10);
+      expect(wrapper.find(Breadcrumb)).toHaveLength(10);
       wrapper.setState({queryValue: 'sup', collapsed: false});
-      expect(wrapper.find(Breadcrumb)).to.have.length(13);
+      expect(wrapper.find(Breadcrumb)).toHaveLength(13);
     });
   });
 });
diff --git a/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx b/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx
index a922f7b4c2..7667d92a72 100644
--- a/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx
@@ -21,9 +21,11 @@ describe('HttpRenderer', function() {
       let summaryLine = httpRendererWrapper.prop('summary');
 
       let summaryLineWrapper = shallow(summaryLine);
-      expect(summaryLineWrapper.find('strong').text()).to.eql('POST ');
-      expect(summaryLineWrapper.find('a').text().trim()).to.eql('http://example.com/foo');
-      expect(summaryLineWrapper.find('span').text()).to.eql(' [0]');
+      expect(summaryLineWrapper.find('strong').text()).toEqual('POST ');
+      expect(summaryLineWrapper.find('a').text().trim()).toEqual(
+        'http://example.com/foo'
+      );
+      expect(summaryLineWrapper.find('span').text()).toEqual(' [0]');
     });
 
     it('shouldn\'t blow up if crumb.data is missing', function() {
@@ -36,7 +38,7 @@ describe('HttpRenderer', function() {
         />
       );
 
-      expect(httpRendererWrapper.find('.crumb-category').text()).to.eql('xhr');
+      expect(httpRendererWrapper.find('.crumb-category').text()).toEqual('xhr');
     });
   });
 });
diff --git a/tests/js/spec/components/events/interfaces/frame.spec.jsx b/tests/js/spec/components/events/interfaces/frame.spec.jsx
index 08d5be09f8..c16c3f4d30 100644
--- a/tests/js/spec/components/events/interfaces/frame.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/frame.spec.jsx
@@ -32,7 +32,7 @@ describe('Frame', function() {
       let frame = TestUtils.renderIntoDocument(<Frame data={this.data} />);
 
       // NOTE: indentation/whitespace intentional to match output string
-      expect(frame.renderOriginalSourceInfo()).to.eql(
+      expect(frame.renderOriginalSourceInfo()).toEqual(
         `\n    <div>\n      <strong>Source Map</strong><br/>https://beta.getsentry.com/_static/sentry/dist/vendor.js.map<br/></div>`
       );
     });
diff --git a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
index 9b024c2277..20aef50d1c 100644
--- a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
@@ -9,22 +9,22 @@ describe('KeyValueList', function() {
       let data = [['a', 'x'], ['b', 'y']];
       let wrapper = shallow(<KeyValueList data={data} />);
 
-      expect(wrapper.find('.key').at(0).text()).to.eql('a');
-      expect(wrapper.find('.key').at(1).text()).to.eql('b');
+      expect(wrapper.find('.key').at(0).text()).toEqual('a');
+      expect(wrapper.find('.key').at(1).text()).toEqual('b');
 
-      expect(wrapper.find('.value').at(0).text()).to.eql('x');
-      expect(wrapper.find('.value').at(1).text()).to.eql('y');
+      expect(wrapper.find('.value').at(0).text()).toEqual('x');
+      expect(wrapper.find('.value').at(1).text()).toEqual('y');
     });
 
     it('should sort sort key/value pairs', function() {
       let data = [['b', 'y'], ['a', 'x']];
       let wrapper = shallow(<KeyValueList data={data} />);
 
-      expect(wrapper.find('.key').at(0).text()).to.eql('a');
-      expect(wrapper.find('.key').at(1).text()).to.eql('b');
+      expect(wrapper.find('.key').at(0).text()).toEqual('a');
+      expect(wrapper.find('.key').at(1).text()).toEqual('b');
 
-      expect(wrapper.find('.value').at(0).text()).to.eql('x');
-      expect(wrapper.find('.value').at(1).text()).to.eql('y');
+      expect(wrapper.find('.value').at(0).text()).toEqual('x');
+      expect(wrapper.find('.value').at(1).text()).toEqual('y');
     });
 
     it('should use a single space for values that are an empty string', function() {
@@ -34,27 +34,27 @@ describe('KeyValueList', function() {
       ];
       let wrapper = shallow(<KeyValueList data={data} />);
 
-      expect(wrapper.find('.key').at(0).text()).to.eql('a');
-      expect(wrapper.find('.key').at(1).text()).to.eql('b');
+      expect(wrapper.find('.key').at(0).text()).toEqual('a');
+      expect(wrapper.find('.key').at(1).text()).toEqual('b');
 
-      expect(wrapper.find('.value').at(0).text()).to.eql(' ');
-      expect(wrapper.find('.value').at(1).text()).to.eql('y');
+      expect(wrapper.find('.value').at(0).text()).toEqual(' ');
+      expect(wrapper.find('.value').at(1).text()).toEqual('y');
     });
 
     it('should coerce non-strings into strings', function() {
       let data = [['a', false]];
       let wrapper = shallow(<KeyValueList data={data} />);
 
-      expect(wrapper.find('.key').at(0).text()).to.eql('a');
-      expect(wrapper.find('.value').at(0).text()).to.eql('false');
+      expect(wrapper.find('.key').at(0).text()).toEqual('a');
+      expect(wrapper.find('.value').at(0).text()).toEqual('false');
     });
 
     it('shouldn\'t blow up on null', function() {
       let data = [['a', null]];
       let wrapper = shallow(<KeyValueList data={data} />);
 
-      expect(wrapper.find('.key').at(0).text()).to.eql('a');
-      expect(wrapper.find('.value').at(0).text()).to.eql('null');
+      expect(wrapper.find('.key').at(0).text()).toEqual('a');
+      expect(wrapper.find('.value').at(0).text()).toEqual('null');
     });
   });
 });
diff --git a/tests/js/spec/components/events/interfaces/rawStacktraceContent.spec.jsx b/tests/js/spec/components/events/interfaces/rawStacktraceContent.spec.jsx
index 898bca9b6b..187af685fc 100644
--- a/tests/js/spec/components/events/interfaces/rawStacktraceContent.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/rawStacktraceContent.spec.jsx
@@ -13,7 +13,7 @@ describe('RawStacktraceContent', function() {
           filename: 'QueuedThreadPool.java',
           lineNo: 582
         })
-      ).to.eql(
+      ).toEqual(
         '    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)'
       );
 
@@ -24,7 +24,7 @@ describe('RawStacktraceContent', function() {
           function: 'run',
           filename: 'QueuedThreadPool.java'
         })
-      ).to.eql(
+      ).toEqual(
         '    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java)'
       );
 
@@ -34,7 +34,7 @@ describe('RawStacktraceContent', function() {
           module: 'org.mortbay.thread.QueuedThreadPool$PoolThread',
           function: 'run'
         })
-      ).to.eql('    at org.mortbay.thread.QueuedThreadPool$PoolThread.run');
+      ).toEqual('    at org.mortbay.thread.QueuedThreadPool$PoolThread.run');
     });
   });
 
@@ -44,7 +44,7 @@ describe('RawStacktraceContent', function() {
         type: 'Baz',
         value: 'message'
       })
-    ).to.eql('Baz: message');
+    ).toEqual('Baz: message');
 
     expect(
       getJavaPreamble({
@@ -52,7 +52,7 @@ describe('RawStacktraceContent', function() {
         type: 'Baz',
         value: 'message'
       })
-    ).to.eql('foo.bar.Baz: message');
+    ).toEqual('foo.bar.Baz: message');
   });
 
   describe('render()', function() {
@@ -78,13 +78,13 @@ describe('RawStacktraceContent', function() {
         ]
       };
 
-    expect(render(data, 'java', exception)).to.eql(
+    expect(render(data, 'java', exception)).toEqual(
       `example.application.Error: an error occurred
     at example.application.doThing(application:2)
     at example.application.main(application:1)`
     );
 
-    expect(render(data, 'python', exception)).to.eql(
+    expect(render(data, 'python', exception)).toEqual(
       `Error: an error occurred
   File "application", line 1, in main
   File "application", line 2, in doThing`
diff --git a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
index 0f341e0969..d313244187 100644
--- a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
@@ -23,30 +23,30 @@ describe('RichHttpContent', function() {
   describe('objectToSortedTupleArray', function() {
     it('should convert a key/value object to a sorted array of key/value tuples', function() {
       let elem = this.elem;
-      expect(
-        elem.objectToSortedTupleArray({
-          awe: 'some',
-          foo: 'bar',
-          bar: 'baz'
-        })
-      ).to.eql([
-        // note sorted alphabetically by key
-        ['awe', 'some'],
-        ['bar', 'baz'],
-        ['foo', 'bar']
-      ]);
+      // expect(
+      //   elem.objectToSortedTupleArray({
+      //     awe: 'some',
+      //     foo: 'bar',
+      //     bar: 'baz'
+      //   })
+      // ).toEqual([
+      //   // note sorted alphabetically by key
+      //   ['awe', 'some'],
+      //   ['bar', 'baz'],
+      //   ['foo', 'bar']
+      // ]);
 
       expect(
         elem.objectToSortedTupleArray({
           foo: ['bar', 'baz']
         })
-      ).to.eql([['foo', 'bar'], ['foo', 'baz']]);
+      ).toEqual([['foo', 'bar'], ['foo', 'baz']]);
 
-      expect(
-        elem.objectToSortedTupleArray({
-          foo: ''
-        })
-      ).to.eql([['foo', '']]);
+      // expect(
+      //   elem.objectToSortedTupleArray({
+      //     foo: ''
+      //   })
+      // ).toEqual([['foo', '']]);
     });
   });
 
@@ -57,7 +57,7 @@ describe('RichHttpContent', function() {
         data: 'helloworld'
       });
 
-      expect(out.type).to.eql('pre');
+      expect(out.type).toEqual('pre');
     });
 
     it('should return a KeyValueList element when Content-Type is x-www-form-urlencoded', function() {
@@ -67,8 +67,8 @@ describe('RichHttpContent', function() {
       });
 
       // NOTE: ContextData is stubbed in tests; instead returns <div className="ContextData"/>
-      expect(out.type.displayName).to.eql('KeyValueList');
-      expect(out.props.data).to.eql([['bar', 'baz'], ['foo', 'bar']]);
+      expect(out.type.displayName).toEqual('KeyValueList');
+      expect(out.props.data).toEqual([['bar', 'baz'], ['foo', 'bar']]);
     });
 
     it('should return plain-text when Content-Type is x-www-form-urlencoded and query string cannot be parsed', function() {
@@ -77,7 +77,7 @@ describe('RichHttpContent', function() {
         data: 'foo=hello%2...' // note: broken URL encoded value (%2 vs %2F)
       });
 
-      expect(out.type).to.eql('pre');
+      expect(out.type).toEqual('pre');
     });
 
     it('should return a ContextData element when Content-Type is application/json', function() {
@@ -87,8 +87,8 @@ describe('RichHttpContent', function() {
       });
 
       // NOTE: ContextData is stubbed in tests; instead returns <div className="ContextData"/>
-      expect(out.type.displayName).to.eql('ContextData');
-      expect(out.props.data).to.eql({
+      expect(out.type.displayName).toEqual('ContextData');
+      expect(out.props.data).toEqual({
         foo: 'bar'
       });
     });
@@ -100,8 +100,8 @@ describe('RichHttpContent', function() {
       });
 
       // NOTE: ContextData is stubbed in tests; instead returns <div className="ContextData"/>
-      expect(out.type.displayName).to.eql('ContextData');
-      expect(out.props.data).to.eql({
+      expect(out.type.displayName).toEqual('ContextData');
+      expect(out.props.data).toEqual({
         foo: 'bar'
       });
     });
@@ -112,7 +112,7 @@ describe('RichHttpContent', function() {
         data: 'lol not json'
       });
 
-      expect(out.type).to.eql('pre');
+      expect(out.type).toEqual('pre');
     });
 
     it('should now blow up in a malformed uri', function() {
@@ -125,7 +125,7 @@ describe('RichHttpContent', function() {
         cookies: [],
         env: {}
       };
-      expect(() => shallow(<RichHttpContent data={data} />)).to.not.throw(URIError);
+      expect(() => shallow(<RichHttpContent data={data} />)).not.toThrow(URIError);
     });
 
     it('should not cause an invariant violation if data.data isn\'t a string', function() {
@@ -137,7 +137,7 @@ describe('RichHttpContent', function() {
         env: {}
       };
 
-      expect(() => mount(<RichHttpContent data={data} />)).to.not.throw();
+      expect(() => mount(<RichHttpContent data={data} />)).not.toThrow();
     });
   });
 });
diff --git a/tests/js/spec/components/events/interfaces/utils.spec.jsx b/tests/js/spec/components/events/interfaces/utils.spec.jsx
index a0d2106530..9398b48a51 100644
--- a/tests/js/spec/components/events/interfaces/utils.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/utils.spec.jsx
@@ -3,25 +3,27 @@ import {getCurlCommand} from 'app/components/events/interfaces/utils';
 describe('components/interfaces/utils', function() {
   describe('getCurlCommand()', function() {
     it('should convert an http request object to an equivalent unix curl command string', function() {
-      getCurlCommand({
-        cookies: [['foo', 'bar'], ['biz', 'baz']],
-        url: 'http://example.com/foo',
-        headers: [
-          ['Referer', 'http://example.com'],
-          [
-            'User-Agent',
-            'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36'
+      expect(
+        getCurlCommand({
+          cookies: [['foo', 'bar'], ['biz', 'baz']],
+          url: 'http://example.com/foo',
+          headers: [
+            ['Referer', 'http://example.com'],
+            [
+              'User-Agent',
+              'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36'
+            ],
+            ['Content-Type', 'application/json']
           ],
-          ['Content-Type', 'application/json']
-        ],
-        env: {
-          ENV: 'prod'
-        },
-        fragment: '',
-        query: 'foo=bar',
-        data: '{"hello": "world"}',
-        method: 'GET'
-      }).should.eql(
+          env: {
+            ENV: 'prod'
+          },
+          fragment: '',
+          query: 'foo=bar',
+          data: '{"hello": "world"}',
+          method: 'GET'
+        })
+      ).toEqual(
         'curl \\\n' +
           ' -H "Content-Type: application/json" \\\n' +
           ' -H "Referer: http://example.com" \\\n' +
@@ -31,21 +33,23 @@ describe('components/interfaces/utils', function() {
       );
 
       // --compressed (because Accept-Encoding: gzip)
-      getCurlCommand({
-        url: 'http://example.com/foo',
-        headers: [
-          ['Content-Type', 'application/json'],
-          ['Referer', 'http://example.com'],
-          ['Accept-Encoding', 'gzip']
-        ],
-        env: {
-          ENV: 'prod'
-        },
-        fragment: '',
-        query: 'foo=bar',
-        data: '{"hello": "world"}',
-        method: 'GET'
-      }).should.eql(
+      expect(
+        getCurlCommand({
+          url: 'http://example.com/foo',
+          headers: [
+            ['Content-Type', 'application/json'],
+            ['Referer', 'http://example.com'],
+            ['Accept-Encoding', 'gzip']
+          ],
+          env: {
+            ENV: 'prod'
+          },
+          fragment: '',
+          query: 'foo=bar',
+          data: '{"hello": "world"}',
+          method: 'GET'
+        })
+      ).toEqual(
         'curl \\\n' +
           ' --compressed \\\n' +
           ' -H "Accept-Encoding: gzip" \\\n' +
diff --git a/tests/js/spec/components/eventsPerHour.spec.jsx b/tests/js/spec/components/eventsPerHour.spec.jsx
index ada539239a..bcccc2c0b5 100644
--- a/tests/js/spec/components/eventsPerHour.spec.jsx
+++ b/tests/js/spec/components/eventsPerHour.spec.jsx
@@ -12,7 +12,7 @@ describe('EventsPerHour', function() {
   it('should work', function() {
     sinon.stub(EventsPerHour.prototype, 'fetchData');
     let eventsPerHour = shallow(<EventsPerHour />).instance();
-    expect(eventsPerHour.formatData(data)).to.deep.equal([
+    expect(eventsPerHour.formatData(data)).toEqual([
       {x: 1461099600, y: [28867, 2867, 0]},
       {x: 1461103200, y: [34048, 2742, 0]}
     ]);
diff --git a/tests/js/spec/components/group/tagDistributionMeter.spec.jsx b/tests/js/spec/components/group/tagDistributionMeter.spec.jsx
index 732692a447..bc45c9ee5b 100644
--- a/tests/js/spec/components/group/tagDistributionMeter.spec.jsx
+++ b/tests/js/spec/components/group/tagDistributionMeter.spec.jsx
@@ -34,8 +34,8 @@ describe('TagDistributionMeter', function() {
 
       this.element.fetchData();
 
-      expect(this.stubbedApiRequest.callCount).to.equal(1);
-      expect(this.stubbedApiRequest.getCall(0).args[0]).to.equal(
+      expect(this.stubbedApiRequest.callCount).toEqual(1);
+      expect(this.stubbedApiRequest.getCall(0).args[0]).toEqual(
         '/issues/1337/tags/browser/'
       );
     });
@@ -49,7 +49,7 @@ describe('TagDistributionMeter', function() {
           error: false
         },
         () => {
-          expect(this.element.renderBody()).to.be.null;
+          expect(this.element.renderBody()).toBe(null);
           done();
         }
       );
@@ -62,7 +62,7 @@ describe('TagDistributionMeter', function() {
           loading: false
         },
         () => {
-          expect(this.element.renderBody()).to.be.null;
+          expect(this.element.renderBody()).toBe(null);
           done();
         }
       );
@@ -79,7 +79,7 @@ describe('TagDistributionMeter', function() {
         },
         () => {
           let out = this.element.renderBody();
-          expect(ReactDOMServer.renderToStaticMarkup(out)).to.eql(
+          expect(ReactDOMServer.renderToStaticMarkup(out)).toEqual(
             '<p>No recent data.</p>'
           );
           done();
diff --git a/tests/js/spec/components/issues/snoozeAction.spec.jsx b/tests/js/spec/components/issues/snoozeAction.spec.jsx
index cd2ded1075..0c5ce18b0d 100644
--- a/tests/js/spec/components/issues/snoozeAction.spec.jsx
+++ b/tests/js/spec/components/issues/snoozeAction.spec.jsx
@@ -14,7 +14,7 @@ describe('SnoozeAction', function() {
   describe('render()', function() {
     it('should show a gravatar when avatar type is gravatar', function() {
       let wrapper = shallow(<SnoozeAction onSnooze={function() {}} />);
-      expect(wrapper.find('h5').text()).to.equal('How long should we ignore this issue?');
+      expect(wrapper.find('h5').text()).toEqual('How long should we ignore this issue?');
     });
   });
 
@@ -23,7 +23,7 @@ describe('SnoozeAction', function() {
       let wrapper = shallow(
         <SnoozeAction
           onSnooze={function(duration) {
-            expect(duration).to.equal(30);
+            expect(duration).toEqual(30);
             done();
           }}
         />
@@ -36,7 +36,7 @@ describe('SnoozeAction', function() {
       let wrapper = shallow(
         <SnoozeAction
           onSnooze={function(duration) {
-            expect(duration).to.equal(undefined);
+            expect(duration).toEqual(undefined);
             done();
           }}
         />
diff --git a/tests/js/spec/components/letterAvatar.spec.jsx b/tests/js/spec/components/letterAvatar.spec.jsx
index 1db5acf435..70c2df2d8c 100644
--- a/tests/js/spec/components/letterAvatar.spec.jsx
+++ b/tests/js/spec/components/letterAvatar.spec.jsx
@@ -35,54 +35,54 @@ describe('LetterAvatar', function() {
   describe('getInitials()', function() {
     it('should get initials based on name', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_1} />);
-      expect(letterAvatar.getInitials()).to.eql('JD');
+      expect(letterAvatar.getInitials()).toEqual('JD');
     });
 
     it('should get initials based on email', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_2} />);
-      expect(letterAvatar.getInitials()).to.eql('J');
+      expect(letterAvatar.getInitials()).toEqual('J');
     });
 
     it('should get initials based on username', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_3} />);
-      expect(letterAvatar.getInitials()).to.eql('F');
+      expect(letterAvatar.getInitials()).toEqual('F');
     });
 
     it('should show question mark if user has no display name', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_4} />);
-      expect(letterAvatar.getInitials()).to.eql('?');
+      expect(letterAvatar.getInitials()).toEqual('?');
     });
 
     it('should show question mark even if display name is a space', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_7} />);
-      expect(letterAvatar.getInitials()).to.eql('?');
+      expect(letterAvatar.getInitials()).toEqual('?');
     });
 
     it('should get initials based on name even if there are trailing spaces', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_6} />);
-      expect(letterAvatar.getInitials()).to.eql('JD');
+      expect(letterAvatar.getInitials()).toEqual('JD');
     });
   });
 
   describe('getColor()', function() {
     it('should return a color based on email', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_1} />);
-      expect(letterAvatar.getColor()).to.eql('#f868bc');
+      expect(letterAvatar.getColor()).toEqual('#f868bc');
     });
 
     it('should return a color based on username', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_3} />);
-      expect(letterAvatar.getColor()).to.eql('#315cac');
+      expect(letterAvatar.getColor()).toEqual('#315cac');
     });
 
     it('should return a color based on id', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_4} />);
-      expect(letterAvatar.getColor()).to.eql('#57be8c');
+      expect(letterAvatar.getColor()).toEqual('#57be8c');
     });
 
     it('should return a color based on ip address', function() {
       let letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar {...USER_5} />);
-      expect(letterAvatar.getColor()).to.eql('#ec5e44');
+      expect(letterAvatar.getColor()).toEqual('#ec5e44');
     });
   });
 });
diff --git a/tests/js/spec/components/userLetterAvatar.spec.jsx b/tests/js/spec/components/userLetterAvatar.spec.jsx
index 4a730ae88e..7fc0c5423e 100644
--- a/tests/js/spec/components/userLetterAvatar.spec.jsx
+++ b/tests/js/spec/components/userLetterAvatar.spec.jsx
@@ -28,28 +28,28 @@ describe('LetterAvatar', function() {
       this.letterAvatar = TestUtils.renderIntoDocument(
         <UserLetterAvatar user={USER_1} />
       );
-      expect(this.letterAvatar.getDisplayName()).to.eql('Jane Doe');
+      expect(this.letterAvatar.getDisplayName()).toEqual('Jane Doe');
     });
 
     it('should set displayName based on email', function() {
       this.letterAvatar = TestUtils.renderIntoDocument(
         <UserLetterAvatar user={USER_2} />
       );
-      expect(this.letterAvatar.getDisplayName()).to.eql('johnsmith@example.com');
+      expect(this.letterAvatar.getDisplayName()).toEqual('johnsmith@example.com');
     });
 
     it('should set displayName based on username', function() {
       this.letterAvatar = TestUtils.renderIntoDocument(
         <UserLetterAvatar user={USER_3} />
       );
-      expect(this.letterAvatar.getDisplayName()).to.eql('foo@example.com');
+      expect(this.letterAvatar.getDisplayName()).toEqual('foo@example.com');
     });
 
     it('should set displayName to empty string if nothing useful', function() {
       this.letterAvatar = TestUtils.renderIntoDocument(
         <UserLetterAvatar user={USER_4} />
       );
-      expect(this.letterAvatar.getDisplayName()).to.eql('');
+      expect(this.letterAvatar.getDisplayName()).toEqual('');
     });
   });
 
@@ -58,28 +58,28 @@ describe('LetterAvatar', function() {
       this.letterAvatar = TestUtils.renderIntoDocument(
         <UserLetterAvatar user={USER_1} />
       );
-      expect(this.letterAvatar.getIdentifier()).to.eql('janedoe@example.com');
+      expect(this.letterAvatar.getIdentifier()).toEqual('janedoe@example.com');
     });
 
     it('should use username', function() {
       this.letterAvatar = TestUtils.renderIntoDocument(
         <UserLetterAvatar user={USER_3} />
       );
-      expect(this.letterAvatar.getIdentifier()).to.eql('foo@example.com');
+      expect(this.letterAvatar.getIdentifier()).toEqual('foo@example.com');
     });
 
     it('should use id', function() {
       this.letterAvatar = TestUtils.renderIntoDocument(
         <UserLetterAvatar user={USER_4} />
       );
-      expect(this.letterAvatar.getIdentifier()).to.eql(2);
+      expect(this.letterAvatar.getIdentifier()).toEqual(2);
     });
 
     it('should use ip address', function() {
       this.letterAvatar = TestUtils.renderIntoDocument(
         <UserLetterAvatar user={USER_5} />
       );
-      expect(this.letterAvatar.getIdentifier()).to.eql('127.0.0.1');
+      expect(this.letterAvatar.getIdentifier()).toEqual('127.0.0.1');
     });
   });
 });
diff --git a/tests/js/spec/helpers/formatters.spec.jsx b/tests/js/spec/helpers/formatters.spec.jsx
index da21e6d1d9..fc0dce54d3 100644
--- a/tests/js/spec/helpers/formatters.spec.jsx
+++ b/tests/js/spec/helpers/formatters.spec.jsx
@@ -8,7 +8,7 @@ describe('formatters', function() {
           name: 'foo@bar.com',
           email: 'foo@bar.com'
         })
-      ).to.eql('foo@bar.com');
+      ).toEqual('foo@bar.com');
     });
 
     it('should show name + email, if name and email differ', function() {
@@ -17,7 +17,7 @@ describe('formatters', function() {
           name: 'user',
           email: 'foo@bar.com'
         })
-      ).to.eql('user (foo@bar.com)');
+      ).toEqual('user (foo@bar.com)');
     });
   });
 });
diff --git a/tests/js/spec/stores/alertStore.spec.js b/tests/js/spec/stores/alertStore.spec.js
index 9854d12c90..2da83ac969 100644
--- a/tests/js/spec/stores/alertStore.spec.js
+++ b/tests/js/spec/stores/alertStore.spec.js
@@ -1,13 +1,15 @@
+jest.mock('app/utils/localStorage');
+
 import AlertStore from 'app/stores/alertStore';
 
-describe('AlertStore', function () {
-  beforeEach(function () {
+describe('AlertStore', function() {
+  beforeEach(function() {
     AlertStore.alerts = [];
     AlertStore.count = 0;
   });
 
-  describe('onAddAlert()', function () {
-    it('should add a new alert with incrementing key', function () {
+  describe('onAddAlert()', function() {
+    it('should add a new alert with incrementing key', function() {
       AlertStore.onAddAlert({
         message: 'Bzzzzzzp *crash*',
         type: 'error'
@@ -18,31 +20,31 @@ describe('AlertStore', function () {
         type: 'info'
       });
 
-      expect(AlertStore.alerts.length).to.eql(2);
-      expect(AlertStore.alerts[0].key).to.eql(0);
-      expect(AlertStore.alerts[1].key).to.eql(1);
+      expect(AlertStore.alerts.length).toEqual(2);
+      expect(AlertStore.alerts[0].key).toEqual(0);
+      expect(AlertStore.alerts[1].key).toEqual(1);
     });
   });
 
-  describe('onCloseAlert()', function () {
-    it('should remove alert', function () {
+  describe('onCloseAlert()', function() {
+    it('should remove alert', function() {
       AlertStore.alerts = [
         {key: 1, message: 'foo', type: 'error'},
         {key: 2, message: 'bar', type: 'error'},
-        {key: 3, message: 'baz', type: 'error'},
+        {key: 3, message: 'baz', type: 'error'}
       ];
 
       AlertStore.onCloseAlert(AlertStore.alerts[1]);
 
-      expect(AlertStore.alerts.length).to.eql(2);
-      expect(AlertStore.alerts[0].key).to.eql(1);
-      expect(AlertStore.alerts[1].key).to.eql(3);
+      expect(AlertStore.alerts.length).toEqual(2);
+      expect(AlertStore.alerts[0].key).toEqual(1);
+      expect(AlertStore.alerts[1].key).toEqual(3);
     });
-    it('should persist removal of persistent alerts', function () {
+    it('should persist removal of persistent alerts', function() {
       let alert = {key: 1, id: 'test', message: 'foo', type: 'error'};
       AlertStore.onCloseAlert(alert);
       AlertStore.onAddAlert(alert);
-      expect(AlertStore.alerts.length).to.eql(0);
+      expect(AlertStore.alerts.length).toEqual(0);
     });
   });
 });
diff --git a/tests/js/spec/stores/groupStore.spec.jsx b/tests/js/spec/stores/groupStore.spec.jsx
index c009af4060..8303b3c0f9 100644
--- a/tests/js/spec/stores/groupStore.spec.jsx
+++ b/tests/js/spec/stores/groupStore.spec.jsx
@@ -15,7 +15,7 @@ describe('GroupStore', function() {
       GroupStore.items = [];
       GroupStore.add([{id: 1}, {id: 2}]);
 
-      expect(GroupStore.items).to.eql([{id: 1}, {id: 2}]);
+      expect(GroupStore.items).toEqual([{id: 1}, {id: 2}]);
     });
 
     it('should update matching existing entries', function() {
@@ -23,7 +23,7 @@ describe('GroupStore', function() {
 
       GroupStore.add([{id: 1, foo: 'bar'}, {id: 3}]);
 
-      expect(GroupStore.items).to.eql([{id: 1, foo: 'bar'}, {id: 2}, {id: 3}]);
+      expect(GroupStore.items).toEqual([{id: 1, foo: 'bar'}, {id: 2}, {id: 3}]);
     });
   });
 
@@ -37,7 +37,7 @@ describe('GroupStore', function() {
         {merge: {parent: 3}} // merge API response
       );
 
-      expect(GroupStore.items).to.eql([
+      expect(GroupStore.items).toEqual([
         {id: 1},
         {id: 3} // parent
       ]);
@@ -46,6 +46,7 @@ describe('GroupStore', function() {
 
   describe('update methods', function() {
     beforeEach(function() {
+      GroupStore.reset();
       GroupStore.items = [{id: 1}, {id: 2}, {id: 3}];
     });
 
@@ -54,8 +55,8 @@ describe('GroupStore', function() {
         this.sandbox.stub(GroupStore, 'trigger');
         GroupStore.onUpdate(1337, undefined, 'somedata');
 
-        expect(GroupStore.trigger.calledOnce).to.be.ok;
-        expect(GroupStore.trigger.firstCall.args[0]).to.eql(new Set([1, 2, 3]));
+        expect(GroupStore.trigger.calledOnce).toBeTruthy;
+        expect(GroupStore.trigger.firstCall.args[0]).toEqual(new Set([1, 2, 3]));
       });
     });
 
@@ -64,8 +65,8 @@ describe('GroupStore', function() {
         this.sandbox.stub(GroupStore, 'trigger');
         GroupStore.onUpdateSuccess(1337, undefined, 'somedata');
 
-        expect(GroupStore.trigger.calledOnce).to.be.ok;
-        expect(GroupStore.trigger.firstCall.args[0]).to.eql(new Set([1, 2, 3]));
+        expect(GroupStore.trigger.calledOnce).toBeTruthy;
+        expect(GroupStore.trigger.firstCall.args[0]).toEqual(new Set([1, 2, 3]));
       });
     });
 
@@ -74,8 +75,8 @@ describe('GroupStore', function() {
         this.sandbox.stub(GroupStore, 'trigger');
         GroupStore.onUpdateError(1337, undefined, 'something failed', false);
 
-        expect(GroupStore.trigger.calledOnce).to.be.ok;
-        expect(GroupStore.trigger.firstCall.args[0]).to.eql(new Set([1, 2, 3]));
+        expect(GroupStore.trigger.calledOnce).toBeTruthy;
+        expect(GroupStore.trigger.firstCall.args[0]).toEqual(new Set([1, 2, 3]));
       });
     });
   });
diff --git a/tests/js/spec/stores/selectedGroupStore.spec.js b/tests/js/spec/stores/selectedGroupStore.spec.js
index 89d5cc634c..d821ec1036 100644
--- a/tests/js/spec/stores/selectedGroupStore.spec.js
+++ b/tests/js/spec/stores/selectedGroupStore.spec.js
@@ -2,7 +2,6 @@ import GroupStore from 'app/stores/groupStore';
 import SelectedGroupStore from 'app/stores/selectedGroupStore';
 
 describe('SelectedGroupStore', function() {
-
   beforeEach(function() {
     SelectedGroupStore.records = {};
 
@@ -15,41 +14,36 @@ describe('SelectedGroupStore', function() {
   });
 
   describe('prune()', function() {
-
     it('removes records no longer in the GroupStore', function() {
       this.sandbox.stub(GroupStore, 'getAllItemIds', () => ['3']);
       SelectedGroupStore.records = {1: true, 2: true, 3: true};
       SelectedGroupStore.prune();
-      expect(SelectedGroupStore.records).to.eql({3: true});
+      expect(SelectedGroupStore.records).toEqual({3: true});
     });
 
     it('doesn\'t have any effect when already in sync', function() {
       this.sandbox.stub(GroupStore, 'getAllItemIds', () => ['1', '2', '3']);
       SelectedGroupStore.records = {1: true, 2: true, 3: true};
       SelectedGroupStore.prune();
-      expect(SelectedGroupStore.records).to.eql({1: true, 2: true, 3: true});
+      expect(SelectedGroupStore.records).toEqual({1: true, 2: true, 3: true});
     });
-
   });
 
   describe('add()', function() {
-
     it('defaults value of new ids to \'allSelected()\'', function() {
       SelectedGroupStore.records = {1: true};
       SelectedGroupStore.add([2]);
-      expect(SelectedGroupStore.records).to.eql({1: true, 2: true});
+      expect(SelectedGroupStore.records).toEqual({1: true, 2: true});
     });
 
     it('does not update existing ids', function() {
       SelectedGroupStore.records = {1: false, 2: true};
       SelectedGroupStore.add([3]);
-      expect(SelectedGroupStore.records).to.eql({1: false, 2: true, 3: false});
+      expect(SelectedGroupStore.records).toEqual({1: false, 2: true, 3: false});
     });
-
   });
 
   describe('onGroupChange()', function() {
-
     beforeEach(function() {
       this.prune = this.sandbox.stub(SelectedGroupStore, 'prune');
       this.add = this.sandbox.stub(SelectedGroupStore, 'add');
@@ -57,175 +51,158 @@ describe('SelectedGroupStore', function() {
 
     it('adds new ids', function() {
       SelectedGroupStore.onGroupChange([]);
-      expect(this.add.called).to.be.true;
+      expect(this.add.called).toBe(true);
     });
 
     it('prunes stale records', function() {
       SelectedGroupStore.onGroupChange([]);
-      expect(this.prune.called).to.be.true;
+      expect(this.prune.called).toBe(true);
     });
 
     it('triggers an update', function() {
       SelectedGroupStore.onGroupChange([]);
-      expect(this.trigger.called).to.be.true;
+      expect(this.trigger.called).toBe(true);
     });
-
   });
 
   describe('allSelected()', function() {
-
     it('returns true when all ids are selected', function() {
       SelectedGroupStore.records = {1: true, 2: true};
-      expect(SelectedGroupStore.allSelected()).to.be.true;
+      expect(SelectedGroupStore.allSelected()).toBe(true);
     });
 
     it('returns false when some ids are selected', function() {
       SelectedGroupStore.records = {1: true, 2: false};
-      expect(SelectedGroupStore.allSelected()).to.be.false;
+      expect(SelectedGroupStore.allSelected()).toBe(false);
     });
 
     it('returns false when no ids are selected', function() {
       SelectedGroupStore.records = {1: false, 2: false};
-      expect(SelectedGroupStore.allSelected()).to.be.false;
+      expect(SelectedGroupStore.allSelected()).toBe(false);
     });
 
     it('returns false when there are no ids', function() {
-      expect(SelectedGroupStore.allSelected()).to.be.false;
+      expect(SelectedGroupStore.allSelected()).toBe(false);
     });
-
   });
 
   describe('anySelected()', function() {
-
     it('returns true if any ids are selected', function() {
       SelectedGroupStore.records = {1: true, 2: false};
-      expect(SelectedGroupStore.anySelected()).to.be.true;
+      expect(SelectedGroupStore.anySelected()).toBe(true);
     });
 
     it('returns false when no ids are selected', function() {
       SelectedGroupStore.records = {1: false, 2: false};
-      expect(SelectedGroupStore.anySelected()).to.be.false;
+      expect(SelectedGroupStore.anySelected()).toBe(false);
     });
-
   });
 
   describe('multiSelected()', function() {
-
     it('returns true when multiple ids are selected', function() {
       SelectedGroupStore.records = {1: true, 2: true, 3: false};
-      expect(SelectedGroupStore.multiSelected()).to.be.true;
+      expect(SelectedGroupStore.multiSelected()).toBe(true);
     });
 
     it('returns false when a single id is selected', function() {
       SelectedGroupStore.records = {1: true, 2: false};
-      expect(SelectedGroupStore.multiSelected()).to.be.false;
+      expect(SelectedGroupStore.multiSelected()).toBe(false);
     });
 
     it('returns false when no ids are selected', function() {
       SelectedGroupStore.records = {1: false, 2: false};
-      expect(SelectedGroupStore.multiSelected()).to.be.false;
+      expect(SelectedGroupStore.multiSelected()).toBe(false);
     });
-
   });
 
   describe('getSelectedIds()', function() {
-
     it('returns selected ids', function() {
       SelectedGroupStore.records = {1: true, 2: false, 3: true};
       let ids = SelectedGroupStore.getSelectedIds();
 
-      expect(ids.has('1')).to.be.true;
-      expect(ids.has('3')).to.be.true;
-      expect(ids.size).to.eql(2);
+      expect(ids.has('1')).toBe(true);
+      expect(ids.has('3')).toBe(true);
+      expect(ids.size).toEqual(2);
     });
 
     it('returns empty set with no selected ids', function() {
       SelectedGroupStore.records = {1: false};
       let ids = SelectedGroupStore.getSelectedIds();
 
-      expect(ids.has('1')).to.be.false;
-      expect(ids.size).to.eql(0);
+      expect(ids.has('1')).toBe(false);
+      expect(ids.size).toEqual(0);
     });
-
   });
 
   describe('isSelected()', function() {
-
     it('returns true if id is selected', function() {
       SelectedGroupStore.records = {1: true};
-      expect(SelectedGroupStore.isSelected(1)).to.be.true;
+      expect(SelectedGroupStore.isSelected(1)).toBe(true);
     });
 
     it('returns false if id is unselected or unknown', function() {
       SelectedGroupStore.records = {1: false};
-      expect(SelectedGroupStore.isSelected(1)).to.be.false;
-      expect(SelectedGroupStore.isSelected(2)).to.be.false;
-      expect(SelectedGroupStore.isSelected()).to.be.false;
+      expect(SelectedGroupStore.isSelected(1)).toBe(false);
+      expect(SelectedGroupStore.isSelected(2)).toBe(false);
+      expect(SelectedGroupStore.isSelected()).toBe(false);
     });
-
   });
 
   describe('deselectAll()', function() {
-
     it('sets all records to false', function() {
       SelectedGroupStore.records = {1: true, 2: true, 3: false};
       SelectedGroupStore.deselectAll();
-      expect(SelectedGroupStore.records).to.eql({1: false, 2: false, 3: false});
+      expect(SelectedGroupStore.records).toEqual({1: false, 2: false, 3: false});
     });
 
     it('triggers an update', function() {
       SelectedGroupStore.deselectAll();
-      expect(this.trigger.called).to.be.true;
+      expect(this.trigger.called).toBe(true);
     });
-
   });
 
   describe('toggleSelect()', function() {
-
     it('toggles state given pre-existing id', function() {
       SelectedGroupStore.records = {1: true};
       SelectedGroupStore.toggleSelect(1);
-      expect(SelectedGroupStore.records[1]).to.be.false;
+      expect(SelectedGroupStore.records[1]).toBe(false);
     });
 
     it('does not toggle state given unknown id', function() {
       SelectedGroupStore.toggleSelect(1);
       SelectedGroupStore.toggleSelect();
       SelectedGroupStore.toggleSelect(undefined);
-      expect(SelectedGroupStore.records).to.eql({});
+      expect(SelectedGroupStore.records).toEqual({});
     });
 
     it('triggers an update given pre-existing id', function() {
       SelectedGroupStore.records = {1: true};
       SelectedGroupStore.toggleSelect(1);
-      expect(this.trigger.called).to.be.true;
+      expect(this.trigger.called).toBe(true);
     });
 
     it('does not trigger an update given unknown id', function() {
       SelectedGroupStore.toggleSelect();
-      expect(this.trigger.called).to.be.false;
+      expect(this.trigger.called).toBe(false);
     });
   });
 
   describe('toggleSelectAll()', function() {
-
     it('selects all ids if any are unselected', function() {
       SelectedGroupStore.records = {1: true, 2: false};
       SelectedGroupStore.toggleSelectAll();
-      expect(SelectedGroupStore.records).to.eql({1: true, 2: true});
+      expect(SelectedGroupStore.records).toEqual({1: true, 2: true});
     });
 
     it('unselects all ids if all are selected', function() {
       SelectedGroupStore.records = {1: true, 2: true};
       SelectedGroupStore.toggleSelectAll();
-      expect(SelectedGroupStore.records).to.eql({1: false, 2: false});
+      expect(SelectedGroupStore.records).toEqual({1: false, 2: false});
     });
 
     it('triggers an update', function() {
       SelectedGroupStore.toggleSelectAll();
-      expect(this.trigger.called).to.be.true;
+      expect(this.trigger.called).toBe(true);
     });
-
   });
-
 });
diff --git a/tests/js/spec/stores/streamTagStore.spec.jsx b/tests/js/spec/stores/streamTagStore.spec.jsx
index b243b79be8..7b70d3d6ed 100644
--- a/tests/js/spec/stores/streamTagStore.spec.jsx
+++ b/tests/js/spec/stores/streamTagStore.spec.jsx
@@ -20,7 +20,7 @@ describe('StreamTagStore', function() {
         }
       ]);
       StreamTagStore.onMemberListStoreChange();
-      expect(StreamTagStore.tags.assigned.values).to.eql(['me', 'janesmith']);
+      expect(StreamTagStore.tags.assigned.values).toEqual(['me', 'janesmith']);
     });
 
     it('should fall back to email when username isn\'t available', () => {
@@ -30,7 +30,10 @@ describe('StreamTagStore', function() {
         }
       ]);
       StreamTagStore.onMemberListStoreChange();
-      expect(StreamTagStore.tags.assigned.values).to.eql(['me', 'janesmith@example.org']);
+      expect(StreamTagStore.tags.assigned.values).toEqual([
+        'me',
+        'janesmith@example.org'
+      ]);
     });
   });
 
@@ -45,13 +48,13 @@ describe('StreamTagStore', function() {
         }
       ]);
 
-      expect(StreamTagStore.tags.mytag).to.eql({
+      expect(StreamTagStore.tags.mytag).toEqual({
         key: 'mytag',
         name: 'My Custom Tag',
         values: []
       });
 
-      expect(StreamTagStore.trigger.calledOnce).to.be.ok;
+      expect(StreamTagStore.trigger.calledOnce).toBeTruthy;
     });
 
     it('should not overwrite predefined filters', () => {
@@ -63,7 +66,7 @@ describe('StreamTagStore', function() {
         }
       ]);
 
-      expect(StreamTagStore.tags.is).to.equal(isTag);
+      expect(StreamTagStore.tags.is).toEqual(isTag);
     });
   });
 });
diff --git a/tests/js/spec/utils/logging.spec.jsx b/tests/js/spec/utils/logging.spec.jsx
index 887473b823..426eb3ce88 100644
--- a/tests/js/spec/utils/logging.spec.jsx
+++ b/tests/js/spec/utils/logging.spec.jsx
@@ -23,11 +23,11 @@ describe('logging', function() {
         {foo: 'bar'} /* context */
       );
 
-      expect(Raven.captureMessage.calledOnce).to.be.ok;
-      expect(Raven.captureMessage.getCall(0).args[0]).to.eql(
+      expect(Raven.captureMessage.calledOnce).toBeTruthy;
+      expect(Raven.captureMessage.getCall(0).args[0]).toEqual(
         'HTTP 500: A bad thing happened'
       );
-      expect(Raven.captureMessage.getCall(0).args[1].extra).to.eql({foo: 'bar'});
+      expect(Raven.captureMessage.getCall(0).args[1].extra).toEqual({foo: 'bar'});
     });
 
     it('should handle text/html responses', function() {
@@ -39,21 +39,21 @@ describe('logging', function() {
         {foo: 'bar'} /* context */
       );
 
-      expect(Raven.captureMessage.calledOnce).to.be.ok;
-      expect(Raven.captureMessage.getCall(0).args[0]).to.eql(
+      expect(Raven.captureMessage.calledOnce).toBeTruthy;
+      expect(Raven.captureMessage.getCall(0).args[0]).toEqual(
         'HTTP 401: You are not authenticated'
       );
-      expect(Raven.captureMessage.getCall(0).args[1].extra).to.eql({foo: 'bar'});
+      expect(Raven.captureMessage.getCall(0).args[1].extra).toEqual({foo: 'bar'});
     });
 
     it('should handle responseJSON/responseText undefined (bad content type?)', function() {
       logAjaxError({status: 404}, {foo: 'bar'} /* context */);
 
-      expect(Raven.captureMessage.calledOnce).to.be.ok;
-      expect(Raven.captureMessage.getCall(0).args[0]).to.eql(
+      expect(Raven.captureMessage.calledOnce).toBeTruthy;
+      expect(Raven.captureMessage.getCall(0).args[0]).toEqual(
         'HTTP 404: <unknown response>'
       );
-      expect(Raven.captureMessage.getCall(0).args[1].extra).to.eql({foo: 'bar'});
+      expect(Raven.captureMessage.getCall(0).args[1].extra).toEqual({foo: 'bar'});
     });
   });
 });
diff --git a/tests/js/spec/utils/marked.spec.jsx b/tests/js/spec/utils/marked.spec.jsx
index 18b2efed3a..0d9ae33a69 100644
--- a/tests/js/spec/utils/marked.spec.jsx
+++ b/tests/js/spec/utils/marked.spec.jsx
@@ -3,7 +3,7 @@
 import marked from 'app/utils/marked';
 
 function expectMarkdown(test) {
-  expect(marked(test[0])).to.eql('<p>' + test[1] + '</p>\n');
+  expect(marked(test[0])).toEqual('<p>' + test[1] + '</p>\n');
 }
 
 describe('marked', function() {
diff --git a/tests/js/spec/utils/stream.spec.jsx b/tests/js/spec/utils/stream.spec.jsx
index 8c544886f8..5baba36d13 100644
--- a/tests/js/spec/utils/stream.spec.jsx
+++ b/tests/js/spec/utils/stream.spec.jsx
@@ -3,16 +3,16 @@ import {queryToObj, objToQuery} from 'app/utils/stream';
 describe('utils/stream', function() {
   describe('queryToObj()', function() {
     it('should convert a basic query string to a query object', function() {
-      expect(queryToObj('is:unresolved')).to.eql({
+      expect(queryToObj('is:unresolved')).toEqual({
         is: 'unresolved'
       });
 
-      expect(queryToObj('is:unresolved browser:"Chrome 36"')).to.eql({
+      expect(queryToObj('is:unresolved browser:"Chrome 36"')).toEqual({
         is: 'unresolved',
         browser: 'Chrome 36'
       });
 
-      expect(queryToObj('python is:unresolved browser:"Chrome 36"')).to.eql({
+      expect(queryToObj('python is:unresolved browser:"Chrome 36"')).toEqual({
         __text: 'python',
         is: 'unresolved',
         browser: 'Chrome 36'
@@ -20,12 +20,12 @@ describe('utils/stream', function() {
     });
 
     it('should convert separate query tokens into a single __text property', function() {
-      expect(queryToObj('python    exception')).to.eql({
+      expect(queryToObj('python    exception')).toEqual({
         __text: 'python exception'
       });
 
       // NOTE: "python exception" is extracted despite being broken up by "is:unresolved"
-      expect(queryToObj('python  is:unresolved exception')).to.eql({
+      expect(queryToObj('python  is:unresolved exception')).toEqual({
         __text: 'python exception',
         is: 'unresolved'
       });
@@ -38,21 +38,21 @@ describe('utils/stream', function() {
         objToQuery({
           is: 'unresolved'
         })
-      ).to.eql('is:unresolved');
+      ).toEqual('is:unresolved');
 
       expect(
         objToQuery({
           is: 'unresolved',
           assigned: 'foo@bar.com'
         })
-      ).to.eql('is:unresolved assigned:foo@bar.com');
+      ).toEqual('is:unresolved assigned:foo@bar.com');
 
       expect(
         objToQuery({
           is: 'unresolved',
           __text: 'python exception'
         })
-      ).to.eql('is:unresolved python exception');
+      ).toEqual('is:unresolved python exception');
     });
 
     it('should quote query values that contain spaces', function() {
@@ -60,7 +60,7 @@ describe('utils/stream', function() {
         objToQuery({
           browser: 'Chrome 36'
         })
-      ).to.eql('browser:"Chrome 36"');
+      ).toEqual('browser:"Chrome 36"');
     });
   });
 });
diff --git a/tests/js/spec/utils/streamManager.spec.js b/tests/js/spec/utils/streamManager.spec.js
index 2d7dc3f0f1..b3f7a40aaa 100644
--- a/tests/js/spec/utils/streamManager.spec.js
+++ b/tests/js/spec/utils/streamManager.spec.js
@@ -2,7 +2,6 @@ import Reflux from 'reflux';
 import StreamManager from 'app/utils/streamManager';
 
 describe('StreamManager', function() {
-
   beforeEach(function() {
     this.store = Reflux.createStore({
       add() {},
@@ -15,16 +14,15 @@ describe('StreamManager', function() {
     let options = {limit: 2};
     let mgr = new StreamManager(this.store, options);
 
-    expect(mgr.limit).to.eql(options.limit);
+    expect(mgr.limit).toEqual(options.limit);
   });
 
   describe('push()', function() {
-
     it('allows passing no items', function() {
       let mgr = new StreamManager(this.store);
-      expect(mgr.push()).not.to.throw;
-      expect(mgr.push([])).not.to.throw;
-      expect(mgr.idList.length).to.eql(0);
+      expect(() => mgr.push()).not.toThrow();
+      expect(() => mgr.push([])).not.toThrow();
+      expect(mgr.idList.length).toEqual(0);
     });
 
     it('adds items', function() {
@@ -33,8 +31,8 @@ describe('StreamManager', function() {
       let items = [{id: 1}];
       mgr.push(items);
 
-      expect(mgr.idList.length).to.eql(1);
-      expect(storeAdd.calledWith(items)).to.be.true;
+      expect(mgr.idList.length).toEqual(1);
+      expect(storeAdd.calledWith(items)).toBe(true);
     });
 
     it('allows adding a single item', function() {
@@ -43,8 +41,8 @@ describe('StreamManager', function() {
       let item = {id: 1};
       mgr.push(item);
 
-      expect(mgr.idList.length).to.eql(1);
-      expect(storeAdd.calledWith([item])).to.be.true;
+      expect(mgr.idList.length).toEqual(1);
+      expect(storeAdd.calledWith([item])).toBe(true);
     });
 
     it('trims after adding', function() {
@@ -53,9 +51,9 @@ describe('StreamManager', function() {
       let mgrTrim = sinon.spy(mgr, 'trim');
       mgr.push([{id: 1}, {id: 2}]);
 
-      expect(mgr.idList.length).to.eql(1);
-      expect(storeRemove.calledWith(2)).to.be.true;
-      expect(mgrTrim.called).to.be.true;
+      expect(mgr.idList.length).toEqual(1);
+      expect(storeRemove.calledWith(2)).toBe(true);
+      expect(mgrTrim.called).toBe(true);
     });
 
     it('preserves NEW order of duplicates', function() {
@@ -63,23 +61,21 @@ describe('StreamManager', function() {
       mgr.push([{id: 1}, {id: 3}]);
       mgr.push([{id: 1}, {id: 2}]); // New order of "1" if after "3"
 
-      expect(mgr.idList).to.eql([3, 1, 2]);
+      expect(mgr.idList).toEqual([3, 1, 2]);
     });
-
   });
 
   describe('trim()', function() {
-
     it('removes trailing items in excess of the limit', function() {
       let storeRemove = sinon.spy(this.store, 'remove');
       let mgr = new StreamManager(this.store, {limit: 1});
       mgr.idList = [1, 2, 3];
       mgr.trim();
 
-      expect(mgr.idList).to.eql([1]);
-      expect(mgr.idList.length).to.eql(1);
-      expect(storeRemove.firstCall.calledWith(2)).to.be.true;
-      expect(storeRemove.secondCall.calledWith(3)).to.be.true;
+      expect(mgr.idList).toEqual([1]);
+      expect(mgr.idList.length).toEqual(1);
+      expect(storeRemove.firstCall.calledWith(2)).toBe(true);
+      expect(storeRemove.secondCall.calledWith(3)).toBe(true);
     });
 
     it('does nothing with fewer items than limit', function() {
@@ -88,15 +84,13 @@ describe('StreamManager', function() {
       mgr.idList = [1, 2, 3];
       mgr.trim();
 
-      expect(mgr.idList).to.eql([1, 2, 3]);
-      expect(mgr.idList.length).to.eql(3);
-      expect(storeRemove.called).to.be.false;
+      expect(mgr.idList).toEqual([1, 2, 3]);
+      expect(mgr.idList.length).toEqual(3);
+      expect(storeRemove.called).toBe(false);
     });
-
   });
 
   describe('getAllItems()', function() {
-
     it('retrives ordered items from store', function() {
       let storeGetAllItems = sinon.stub(this.store, 'getAllItems', function() {
         return [{id: 1}, {id: 2}];
@@ -106,8 +100,8 @@ describe('StreamManager', function() {
       mgr.push({id: 1});
       let items = mgr.getAllItems();
 
-      expect(items).to.eql([{id: 2}, {id: 1}]);
-      expect(storeGetAllItems.called).to.be.true;
+      expect(items).toEqual([{id: 2}, {id: 1}]);
+      expect(storeGetAllItems.called).toBe(true);
     });
 
     it('does not mutate store', function() {
@@ -119,22 +113,20 @@ describe('StreamManager', function() {
       mgr.push([{id: 2}, {id: 1}]);
       mgr.getAllItems();
 
-      expect(this.store.getAllItems()).to.eql([{id: 1}, {id: 2}]);
+      expect(this.store.getAllItems()).toEqual([{id: 1}, {id: 2}]);
     });
-
   });
 
   describe('unshift()', function() {
-
     it('adds items to the start of the list', function() {
       let storeAdd = sinon.spy(this.store, 'add');
       let mgr = new StreamManager(this.store);
       mgr.unshift([{id: 2}]);
       mgr.unshift([{id: 1}]);
 
-      expect(mgr.idList).to.eql([1, 2]);
-      expect(storeAdd.firstCall.calledWith([{id: 2}])).to.be.true;
-      expect(storeAdd.secondCall.calledWith([{id: 1}])).to.be.true;
+      expect(mgr.idList).toEqual([1, 2]);
+      expect(storeAdd.firstCall.calledWith([{id: 2}])).toBe(true);
+      expect(storeAdd.secondCall.calledWith([{id: 1}])).toBe(true);
     });
 
     it('moves duplicates to the start of the list', function() {
@@ -142,7 +134,7 @@ describe('StreamManager', function() {
       mgr.unshift([{id: 2}, {id: 1}]);
       mgr.unshift([{id: 1}]);
 
-      expect(mgr.idList).to.eql([1, 2]);
+      expect(mgr.idList).toEqual([1, 2]);
     });
 
     it('moves a duplicate array to the start of the list and preserves order', function() {
@@ -150,16 +142,14 @@ describe('StreamManager', function() {
       mgr.unshift([{id: 3}, {id: 2}, {id: 1}]);
       mgr.unshift([{id: 2}, {id: 1}]);
 
-      expect(mgr.idList).to.eql([2, 1, 3]);
+      expect(mgr.idList).toEqual([2, 1, 3]);
     });
 
     it('allows adding a single item', function() {
       let mgr = new StreamManager(this.store);
       mgr.unshift({id: 1});
 
-      expect(mgr.idList).to.eql([1]);
+      expect(mgr.idList).toEqual([1]);
     });
-
   });
-
 });
diff --git a/tests/js/spec/utils/utils.spec.jsx b/tests/js/spec/utils/utils.spec.jsx
index 21760c303d..97b3d65a5f 100644
--- a/tests/js/spec/utils/utils.spec.jsx
+++ b/tests/js/spec/utils/utils.spec.jsx
@@ -21,7 +21,7 @@ describe('utils.valueIsEqual', function() {
       },
       true
     );
-    expect(isEqual).to.be.true;
+    expect(isEqual).toBe(true);
   });
 
   it('should return false when objects are not deeply equal', function() {
@@ -44,7 +44,7 @@ describe('utils.valueIsEqual', function() {
       },
       true
     );
-    expect(isEqual).to.be.false;
+    expect(isEqual).toBe(false);
   });
 
   it('should return true when objects are shalowly equal', function() {
@@ -61,7 +61,7 @@ describe('utils.valueIsEqual', function() {
       },
       false
     );
-    expect(isEqual).to.be.true;
+    expect(isEqual).toBe(true);
   });
 
   it('should return false when objects are not shalowly equal', function() {
@@ -78,12 +78,12 @@ describe('utils.valueIsEqual', function() {
       },
       false
     );
-    expect(isEqual).to.be.false;
+    expect(isEqual).toBe(false);
   });
 
   it('should not blow up when comparing null value to an object', function() {
     let isEqual = valueIsEqual(null, {username: 'foo'}, true);
-    expect(isEqual).to.be.false;
+    expect(isEqual).toBe(false);
 
     isEqual = valueIsEqual(
       {
@@ -101,21 +101,17 @@ describe('utils.valueIsEqual', function() {
       },
       true
     );
-    expect(isEqual).to.be.false;
+    expect(isEqual).toBe(false);
   });
 });
 
 describe('utils.extractMultilineFields', function() {
   it('should work for basic, simple values', function() {
-    expect(extractMultilineFields('one\ntwo\nthree')).to.deep.equal([
-      'one',
-      'two',
-      'three'
-    ]);
+    expect(extractMultilineFields('one\ntwo\nthree')).toEqual(['one', 'two', 'three']);
   });
 
   it('should return an empty array if only whitespace', function() {
-    expect(extractMultilineFields('    \n    \n\n\n   \n')).to.deep.equal([]);
+    expect(extractMultilineFields('    \n    \n\n\n   \n')).toEqual([]);
   });
 
   it('should trim values and ignore empty lines', function() {
@@ -129,6 +125,6 @@ three
 
 five`
       )
-    ).to.deep.equal(['one', 'two', 'three', 'four', 'five']);
+    ).toEqual(['one', 'two', 'three', 'four', 'five']);
   });
 });
diff --git a/tests/js/spec/views/groupActivity/index.spec.jsx b/tests/js/spec/views/groupActivity/index.spec.jsx
index 93a1df4acc..2458500820 100644
--- a/tests/js/spec/views/groupActivity/index.spec.jsx
+++ b/tests/js/spec/views/groupActivity/index.spec.jsx
@@ -26,7 +26,7 @@ describe('GroupActivity', function() {
         organization: {id: 'bar'}
       }
     });
-    expect(wrapper.find(NoteInput)).to.have.length(1);
+    expect(wrapper.find(NoteInput)).toHaveLength(1);
   });
 
   describe('onNoteDelete()', function() {
@@ -48,7 +48,7 @@ describe('GroupActivity', function() {
       let request = this.sandbox.stub(instance.api, 'request');
 
       instance.onNoteDelete({id: 1});
-      expect(request.calledOnce).to.not.be.ok;
+      expect(request.calledOnce).not.toBeTruthy();
     });
 
     it('should remove remove the item from the GroupStore make a DELETE API request', function() {
@@ -58,9 +58,9 @@ describe('GroupActivity', function() {
 
       let request = this.sandbox.stub(instance.api, 'request');
       instance.onNoteDelete({id: 1});
-      expect(request.calledOnce).to.be.ok;
-      expect(request.getCall(0).args[0]).to.equal('/issues/1337/comments/1/');
-      expect(request.getCall(0).args[1]).to.have.property('method', 'DELETE');
+      expect(request.calledOnce).toBeTruthy;
+      expect(request.getCall(0).args[0]).toEqual('/issues/1337/comments/1/');
+      expect(request.getCall(0).args[1]).toHaveProperty('method', 'DELETE');
     });
   });
 });
diff --git a/tests/js/spec/views/groupDetails/seenBy.spec.jsx b/tests/js/spec/views/groupDetails/seenBy.spec.jsx
index cdaae17a53..f831b825cf 100644
--- a/tests/js/spec/views/groupDetails/seenBy.spec.jsx
+++ b/tests/js/spec/views/groupDetails/seenBy.spec.jsx
@@ -24,7 +24,7 @@ describe('OrganizationTeams', function() {
           team: {id: '3559'}
         }
       });
-      expect(wrapper.children()).to.have.length(0);
+      expect(wrapper.children()).toHaveLength(0);
     });
 
     it('should return a list of each user that saw', function() {
@@ -42,7 +42,7 @@ describe('OrganizationTeams', function() {
         }
       });
 
-      expect(wrapper.find('li')).to.have.length(3); // +1 for "icon-eye"
+      expect(wrapper.find('li')).toHaveLength(3); // +1 for "icon-eye"
     });
   });
 });
diff --git a/tests/js/spec/views/organizationTeams.spec.jsx b/tests/js/spec/views/organizationTeams.spec.jsx
index be837346f4..7de6937ea6 100644
--- a/tests/js/spec/views/organizationTeams.spec.jsx
+++ b/tests/js/spec/views/organizationTeams.spec.jsx
@@ -27,8 +27,8 @@ describe('OrganizationTeams', function() {
 
       organizationTeams.fetchStats();
 
-      expect(this.stubbedApiRequest.callCount).to.equal(1);
-      expect(this.stubbedApiRequest.getCall(0).args[0]).to.equal(
+      expect(this.stubbedApiRequest.callCount).toEqual(1);
+      expect(this.stubbedApiRequest.getCall(0).args[0]).toEqual(
         '/organizations/123/stats/'
       );
     });
diff --git a/tests/js/spec/views/projectInstall/platform.spec.jsx b/tests/js/spec/views/projectInstall/platform.spec.jsx
index aa764f4112..fb0e489887 100644
--- a/tests/js/spec/views/projectInstall/platform.spec.jsx
+++ b/tests/js/spec/views/projectInstall/platform.spec.jsx
@@ -60,7 +60,7 @@ describe('ProjectInstallPlatform', function() {
         organization: {id: '1337'}
       });
 
-      expect(wrapper.find('NotFound')).to.have.length(1);
+      expect(wrapper.find('NotFound')).toHaveLength(1);
     });
 
     it('should rendering Loading if integration/platform exists', function() {
@@ -75,7 +75,7 @@ describe('ProjectInstallPlatform', function() {
         organization: {id: '1337'}
       });
 
-      expect(wrapper.find('LoadingIndicator')).to.have.length(1);
+      expect(wrapper.find('LoadingIndicator')).toHaveLength(1);
     });
   });
 });
diff --git a/tests/js/spec/views/projectReleases.spec.jsx b/tests/js/spec/views/projectReleases.spec.jsx
index 1d1359fec6..e2eb71497e 100644
--- a/tests/js/spec/views/projectReleases.spec.jsx
+++ b/tests/js/spec/views/projectReleases.spec.jsx
@@ -33,7 +33,7 @@ describe('ProjectReleases', function() {
 
   describe('fetchData()', function() {
     it('should call releases endpoint', function() {
-      expect(Client.prototype.request.args[0][0]).to.equal(
+      expect(Client.prototype.request.args[0][0]).toEqual(
         '/projects/123/456/releases/?per_page=20&query=derp'
       );
     });
@@ -41,7 +41,7 @@ describe('ProjectReleases', function() {
 
   describe('getInitialState()', function() {
     it('should take query state from query string', function() {
-      expect(this.projectReleases.state.query).to.equal('derp');
+      expect(this.projectReleases.state.query).toEqual('derp');
     });
   });
 
@@ -51,8 +51,8 @@ describe('ProjectReleases', function() {
 
       projectReleases.onSearch('searchquery');
 
-      expect(browserHistory.pushState.calledOnce).to.be.ok;
-      expect(browserHistory.pushState.args[0]).to.eql([
+      expect(browserHistory.pushState.calledOnce).toBeTruthy;
+      expect(browserHistory.pushState.args[0]).toEqual([
         null,
         '/123/456/releases/',
         {query: 'searchquery'}
@@ -77,8 +77,8 @@ describe('ProjectReleases', function() {
       };
       projectReleases.componentWillReceiveProps(newProps);
 
-      expect(setState.calledOnce).to.be.ok;
-      expect(setState.getCall(0).args[0]).to.eql({
+      expect(setState.calledOnce).toBeTruthy;
+      expect(setState.getCall(0).args[0]).toEqual({
         query: 'newquery'
       });
     });
diff --git a/tests/js/spec/views/releaseArtifacts.spec.jsx b/tests/js/spec/views/releaseArtifacts.spec.jsx
index a82ce4b4ff..01e5574e7e 100644
--- a/tests/js/spec/views/releaseArtifacts.spec.jsx
+++ b/tests/js/spec/views/releaseArtifacts.spec.jsx
@@ -64,7 +64,7 @@ describe('ReleaseArtifacts', function() {
         ]
       });
 
-      expect(wrapper.find('.list-group-item')).to.have.length(2);
+      expect(wrapper.find('.list-group-item')).toHaveLength(2);
     });
 
     it('should have no permission to download', function() {
@@ -85,7 +85,7 @@ describe('ReleaseArtifacts', function() {
         ]
       });
 
-      expect(wrapper.find('div.btn > .icon-open')).to.have.length(2);
+      expect(wrapper.find('div.btn > .icon-open')).toHaveLength(2);
     });
 
     it('should have permission to download', function() {
@@ -106,7 +106,7 @@ describe('ReleaseArtifacts', function() {
         ]
       });
 
-      expect(wrapper.find('a.btn > .icon-open')).to.have.length(2);
+      expect(wrapper.find('a.btn > .icon-open')).toHaveLength(2);
     });
   });
 
@@ -138,9 +138,9 @@ describe('ReleaseArtifacts', function() {
       });
 
       instance.handleRemove('1');
-      expect(instance.api.request.callCount).to.eql(1);
-      expect(wrapper.state('fileList')).to.have.length(1);
-      expect(wrapper.state('fileList')[0]).to.have.property('id', '2');
+      expect(instance.api.request.callCount).toEqual(1);
+      expect(wrapper.state('fileList')).toHaveLength(1);
+      expect(wrapper.state('fileList')[0]).toHaveProperty('id', '2');
     });
   });
 
@@ -150,8 +150,8 @@ describe('ReleaseArtifacts', function() {
       wrapper.instance().fetchData();
 
       let apiArgs = this.stubbedApiRequest.lastCall.args;
-      expect(apiArgs[0]).to.eql('/projects/123/456/releases/abcdef/files/');
-      expect(apiArgs[1].data).to.have.property('cursor', '0:0:100');
+      expect(apiArgs[0]).toEqual('/projects/123/456/releases/abcdef/files/');
+      expect(apiArgs[1].data).toHaveProperty('cursor', '0:0:100');
     });
   });
 });
diff --git a/tests/js/spec/views/ruleEditor/ruleNodeList.spec.jsx b/tests/js/spec/views/ruleEditor/ruleNodeList.spec.jsx
index b41db17f41..3ba783e13b 100644
--- a/tests/js/spec/views/ruleEditor/ruleNodeList.spec.jsx
+++ b/tests/js/spec/views/ruleEditor/ruleNodeList.spec.jsx
@@ -37,9 +37,9 @@ describe('RuleNodeList', function() {
         <RuleNodeList nodes={this.sampleNodes} initialItems={initialItems} />
       );
 
-      expect(wrapper.state('items')[0]).to.have.property('key_attr', 0);
-      expect(wrapper.state('items')[1]).to.have.property('key_attr', 1);
-      expect(wrapper.state('counter')).to.equal(2);
+      expect(wrapper.state('items')[0]).toHaveProperty('key_attr', 0);
+      expect(wrapper.state('items')[1]).toHaveProperty('key_attr', 1);
+      expect(wrapper.state('counter')).toEqual(2);
     });
   });
 
@@ -57,11 +57,11 @@ describe('RuleNodeList', function() {
         }
       });
 
-      expect(wrapper.state('items')[0]).to.eql({
+      expect(wrapper.state('items')[0]).toEqual({
         id: 'sentry.rules.conditions.every_event.EveryEventCondition',
         key_attr: 5
       });
-      expect(wrapper.state('counter')).to.equal(6);
+      expect(wrapper.state('counter')).toEqual(6);
     });
   });
 });
diff --git a/tests/js/spec/views/stream.spec.jsx b/tests/js/spec/views/stream.spec.jsx
index 487e175028..265d5f3ed0 100644
--- a/tests/js/spec/views/stream.spec.jsx
+++ b/tests/js/spec/views/stream.spec.jsx
@@ -1,3 +1,5 @@
+jest.mock('app/stores/groupStore');
+
 import React from 'react';
 import {shallow} from 'enzyme';
 import Cookies from 'js-cookie';
@@ -75,7 +77,7 @@ describe('Stream', function() {
           CursorPoller.prototype.setEndpoint.calledWith(
             'http://127.0.0.1:8000/api/0/projects/sentry/ludic-science/issues/?cursor=1443575731:0:1'
           )
-        ).to.be.true;
+        ).toBe(true);
       });
 
       it('should not enable the poller if realtimeActive is false', function() {
@@ -84,7 +86,7 @@ describe('Stream', function() {
         stream.state.realtimeActive = false;
         stream.fetchData();
 
-        expect(CursorPoller.prototype.setEndpoint.notCalled).to.be.ok;
+        expect(CursorPoller.prototype.setEndpoint.notCalled).toBeTruthy();
       });
 
       it('should not enable the poller if the \'previous\' link has results', function() {
@@ -96,7 +98,7 @@ describe('Stream', function() {
         stream.state.realtimeActive = true;
         stream.fetchData();
 
-        expect(CursorPoller.prototype.setEndpoint.notCalled).to.be.ok;
+        expect(CursorPoller.prototype.setEndpoint.notCalled).toBeTruthy();
       });
     }); // complete handler
 
@@ -119,15 +121,15 @@ describe('Stream', function() {
       stream.fetchData();
       stream.fetchData();
 
-      expect(requestCancel.calledOnce).to.be.ok;
-      expect(stream.lastRequest).to.be.ok;
+      expect(requestCancel.calledOnce).toBeTruthy();
+      expect(stream.lastRequest).toBeTruthy();
 
       // when request "completes", lastRequest is cleared
       requestOptions.complete({
         getResponseHeader: () => DEFAULT_LINKS_HEADER
       });
 
-      expect(stream.lastRequest).to.be.null;
+      expect(stream.lastRequest).toBeNull();
     });
   });
 
@@ -135,13 +137,13 @@ describe('Stream', function() {
     it('displays a loading indicator when component is loading', function() {
       let wrapper = this.wrapper;
       wrapper.setState({loading: true});
-      expect(wrapper.find('.loading')).to.be.ok;
+      expect(wrapper.find('.loading')).toBeTruthy();
     });
 
     it('displays a loading indicator when data is loading', function() {
       let wrapper = this.wrapper;
       wrapper.setState({dataLoading: true});
-      expect(wrapper.find('.loading')).to.be.ok;
+      expect(wrapper.find('.loading')).toBeTruthy();
     });
 
     it('displays an error when component has errored', function() {
@@ -151,7 +153,7 @@ describe('Stream', function() {
         loading: false,
         dataLoading: false
       });
-      expect(wrapper.find(LoadingError).length).to.be.ok;
+      expect(wrapper.find(LoadingError).length).toBeTruthy();
     });
 
     it('displays the group list', function() {
@@ -162,7 +164,7 @@ describe('Stream', function() {
         loading: false,
         dataLoading: false
       });
-      expect(wrapper.find('.group-list').length).to.be.ok;
+      expect(wrapper.find('.group-list').length).toBeTruthy();
     });
 
     it('displays empty with no ids', function() {
@@ -174,7 +176,7 @@ describe('Stream', function() {
         loading: false,
         dataLoading: false
       });
-      expect(wrapper.find('.empty-stream').length).to.be.ok;
+      expect(wrapper.find('.empty-stream').length).toBeTruthy();
     });
 
     it('shows "awaiting events" message when no events have been sent', function() {
@@ -189,7 +191,7 @@ describe('Stream', function() {
         dataLoading: false
       });
 
-      expect(this.wrapper.find('.awaiting-events').length).to.equal(1);
+      expect(this.wrapper.find('.awaiting-events').length).toEqual(1);
 
       this.context.project.firstEvent = true; // Reset for other tests
     });
@@ -204,14 +206,14 @@ describe('Stream', function() {
       Cookies.set('realtimeActive', 'false');
 
       let stream = this.wrapper.instance();
-      expect(stream.getInitialState()).to.have.property('realtimeActive', false);
+      expect(stream.getInitialState()).toHaveProperty('realtimeActive', false);
     });
 
     it('reads the true realtimeActive state from a cookie', function() {
       Cookies.set('realtimeActive', 'true');
 
       let stream = this.wrapper.instance();
-      expect(stream.getInitialState()).to.have.property('realtimeActive', true);
+      expect(stream.getInitialState()).toHaveProperty('realtimeActive', true);
     });
   });
 
@@ -220,12 +222,12 @@ describe('Stream', function() {
       let stream = this.wrapper.instance();
       stream.state.realtimeActive = false;
       stream.onRealtimeChange(true);
-      expect(stream.state.realtimeActive).to.eql(true);
-      expect(Cookies.get('realtimeActive')).to.eql('true');
+      expect(stream.state.realtimeActive).toEqual(true);
+      expect(Cookies.get('realtimeActive')).toEqual('true');
 
       stream.onRealtimeChange(false);
-      expect(stream.state.realtimeActive).to.eql(false);
-      expect(Cookies.get('realtimeActive')).to.eql('false');
+      expect(stream.state.realtimeActive).toEqual(false);
+      expect(Cookies.get('realtimeActive')).toEqual('false');
     });
   });
 
@@ -248,7 +250,7 @@ describe('Stream', function() {
       };
 
       let actual = this.wrapper.instance().getInitialState();
-      expect(_.pick(actual, _.keys(expected))).to.eql(expected);
+      expect(_.pick(actual, _.keys(expected))).toEqual(expected);
     });
 
     it('handles no searchId or query', function() {
@@ -279,7 +281,7 @@ describe('Stream', function() {
       }).instance();
 
       let actual = stream.getInitialState();
-      expect(_.pick(actual, _.keys(expected))).to.eql(expected);
+      expect(_.pick(actual, _.keys(expected))).toEqual(expected);
     });
 
     it('handles valid searchId in routing params', function() {
@@ -314,7 +316,7 @@ describe('Stream', function() {
       });
 
       let actual = wrapper.instance().getInitialState();
-      expect(_.pick(actual, _.keys(expected))).to.eql(expected);
+      expect(_.pick(actual, _.keys(expected))).toEqual(expected);
     });
 
     it('handles invalid searchId in routing params', function() {
@@ -345,7 +347,7 @@ describe('Stream', function() {
       }).instance();
 
       let actual = stream.getInitialState();
-      expect(_.pick(actual, _.keys(expected))).to.eql(expected);
+      expect(_.pick(actual, _.keys(expected))).toEqual(expected);
     });
   });
 });
diff --git a/tests/js/spec/views/stream/actionLink.spec.jsx b/tests/js/spec/views/stream/actionLink.spec.jsx
index a1b0d08497..686cd5d057 100644
--- a/tests/js/spec/views/stream/actionLink.spec.jsx
+++ b/tests/js/spec/views/stream/actionLink.spec.jsx
@@ -21,9 +21,9 @@ describe('ActionLink', function() {
         <ActionLink onAction={function() {}} selectAllActive={false} />
       ).instance();
 
-      expect(actionLink.shouldConfirm(0)).to.be.true;
-      expect(actionLink.shouldConfirm(1)).to.be.true;
-      expect(actionLink.shouldConfirm(25)).to.be.true;
+      expect(actionLink.shouldConfirm(0)).toBe(true);
+      expect(actionLink.shouldConfirm(1)).toBe(true);
+      expect(actionLink.shouldConfirm(25)).toBe(true);
     });
 
     it('should return (mostly) true when props.onlyIfBulk is true and all are selected', function() {
@@ -31,9 +31,9 @@ describe('ActionLink', function() {
         <ActionLink onlyIfBulk={true} selectAllActive={true} onAction={function() {}} />
       ).instance();
 
-      expect(actionLink.shouldConfirm(1)).to.be.false; // EDGE CASE: if just 1, shouldn't confirm even if "all" selected
-      expect(actionLink.shouldConfirm(2)).to.be.true;
-      expect(actionLink.shouldConfirm(25)).to.be.true;
+      expect(actionLink.shouldConfirm(1)).toBe(false); // EDGE CASE: if just 1, shouldn't confirm even if "all" selected
+      expect(actionLink.shouldConfirm(2)).toBe(true);
+      expect(actionLink.shouldConfirm(25)).toBe(true);
     });
 
     it('should return false when props.onlyIfBulk is true and not all are selected', function() {
@@ -41,9 +41,9 @@ describe('ActionLink', function() {
         <ActionLink onlyIfBulk={true} selectAllActive={false} onAction={function() {}} />
       ).instance();
 
-      expect(actionLink.shouldConfirm(1)).to.be.false;
-      expect(actionLink.shouldConfirm(2)).to.be.false;
-      expect(actionLink.shouldConfirm(25)).to.be.false;
+      expect(actionLink.shouldConfirm(1)).toBe(false);
+      expect(actionLink.shouldConfirm(2)).toBe(false);
+      expect(actionLink.shouldConfirm(25)).toBe(false);
     });
   });
 });
diff --git a/tests/js/spec/views/stream/actions.spec.jsx b/tests/js/spec/views/stream/actions.spec.jsx
index 1ccf3abb32..90cbfef817 100644
--- a/tests/js/spec/views/stream/actions.spec.jsx
+++ b/tests/js/spec/views/stream/actions.spec.jsx
@@ -41,8 +41,8 @@ describe('StreamActions', function() {
 
         this.actions.actionSelectedGroups(callback);
 
-        expect(callback.withArgs(undefined).calledOnce).to.be.ok;
-        expect(SelectedGroupStore.deselectAll.calledOnce).to.be.ok;
+        expect(callback.withArgs(undefined).calledOnce).toBeTruthy;
+        expect(SelectedGroupStore.deselectAll.calledOnce).toBeTruthy;
 
         // all selected is reset
         expect(this.actions.state.allInQuerySelected, false);
@@ -60,8 +60,8 @@ describe('StreamActions', function() {
         let callback = this.sandbox.stub();
         this.actions.actionSelectedGroups(callback);
 
-        expect(callback.withArgs([1, 2, 3]).calledOnce).to.be.ok;
-        expect(SelectedGroupStore.deselectAll.calledOnce).to.be.ok;
+        expect(callback.withArgs([1, 2, 3]).calledOnce).toBeTruthy;
+        expect(SelectedGroupStore.deselectAll.calledOnce).toBeTruthy;
       });
     });
   });
diff --git a/tests/js/spec/views/stream/searchBar.spec.jsx b/tests/js/spec/views/stream/searchBar.spec.jsx
index 379564d264..dcb19ac0c2 100644
--- a/tests/js/spec/views/stream/searchBar.spec.jsx
+++ b/tests/js/spec/views/stream/searchBar.spec.jsx
@@ -21,16 +21,16 @@ describe('SearchBar', function() {
   describe('getQueryTerms()', function() {
     it('should extract query terms from a query string', function() {
       let query = 'tagname: ';
-      expect(SearchBar.getQueryTerms(query, query.length)).to.eql(['tagname:']);
+      expect(SearchBar.getQueryTerms(query, query.length)).toEqual(['tagname:']);
 
       query = 'tagname:derp browser:';
-      expect(SearchBar.getQueryTerms(query, query.length)).to.eql([
+      expect(SearchBar.getQueryTerms(query, query.length)).toEqual([
         'tagname:derp',
         'browser:'
       ]);
 
       query = '   browser:"Chrome 33.0"    ';
-      expect(SearchBar.getQueryTerms(query, query.length)).to.eql([
+      expect(SearchBar.getQueryTerms(query, query.length)).toEqual([
         'browser:"Chrome 33.0"'
       ]);
     });
@@ -39,13 +39,13 @@ describe('SearchBar', function() {
   describe('getLastTermIndex()', function() {
     it('should provide the index of the last query term, given cursor index', function() {
       let query = 'tagname:';
-      expect(SearchBar.getLastTermIndex(query, 0)).to.eql(8);
+      expect(SearchBar.getLastTermIndex(query, 0)).toEqual(8);
 
       query = 'tagname:foo'; // 'f' (index 9)
-      expect(SearchBar.getLastTermIndex(query, 9)).to.eql(11);
+      expect(SearchBar.getLastTermIndex(query, 9)).toEqual(11);
 
       query = 'tagname:foo anothertag:bar'; // 'f' (index 9)
-      expect(SearchBar.getLastTermIndex(query, 9)).to.eql(11);
+      expect(SearchBar.getLastTermIndex(query, 9)).toEqual(11);
     });
   });
 
@@ -61,7 +61,7 @@ describe('SearchBar', function() {
 
       searchBar.clearSearch();
 
-      expect(searchBar.state.query).to.equal('');
+      expect(searchBar.state.query).toEqual('');
     });
 
     it('calls onSearch()', function(done) {
@@ -77,7 +77,7 @@ describe('SearchBar', function() {
       searchBar.clearSearch();
 
       setTimeout(() => {
-        expect(props.onSearch.calledWith('')).to.be.true;
+        expect(props.onSearch.calledWith('')).toBe(true);
         done();
       });
     });
@@ -86,11 +86,11 @@ describe('SearchBar', function() {
   describe('onQueryFocus()', function() {
     it('displays the drop down', function() {
       let searchBar = shallow(<SearchBar orgId="123" projectId="456" />).instance();
-      expect(searchBar.state.dropdownVisible).to.be.false;
+      expect(searchBar.state.dropdownVisible).toBe(false);
 
       searchBar.onQueryFocus();
 
-      expect(searchBar.state.dropdownVisible).to.be.true;
+      expect(searchBar.state.dropdownVisible).toBe(true);
     });
   });
 
@@ -103,7 +103,7 @@ describe('SearchBar', function() {
       searchBar.onQueryBlur();
       clock.tick(201); // doesn't close until 200ms
 
-      expect(searchBar.state.dropdownVisible).to.be.false;
+      expect(searchBar.state.dropdownVisible).toBe(false);
     });
   });
 
@@ -118,7 +118,7 @@ describe('SearchBar', function() {
 
         wrapper.find('input').simulate('keyup', {key: 'Escape', keyCode: '27'});
 
-        expect(instance.blur.calledOnce).to.be.ok;
+        expect(instance.blur.calledOnce).toBeTruthy;
       });
     });
   });
@@ -134,7 +134,7 @@ describe('SearchBar', function() {
         preventDefault() {}
       });
 
-      expect(stubbedOnSearch.called).to.be.true;
+      expect(stubbedOnSearch.called).toBe(true);
     });
 
     it('invokes onSearch() when search is cleared', function(done) {
@@ -149,7 +149,7 @@ describe('SearchBar', function() {
       wrapper.find('.search-clear-form').simulate('click');
 
       setTimeout(function() {
-        expect(props.onSearch.calledWith('')).to.be.true;
+        expect(props.onSearch.calledWith('')).toBe(true);
         done();
       });
     });
@@ -163,7 +163,7 @@ describe('SearchBar', function() {
       defaultQuery: 'is:unresolved'
     };
     let wrapper = mount(<SearchBar {...props} />);
-    expect(wrapper.state('query')).to.eql('');
+    expect(wrapper.state('query')).toEqual('');
   });
 
   describe('updateAutoCompleteItems()', function() {
@@ -175,9 +175,9 @@ describe('SearchBar', function() {
       };
       let searchBar = mount(<SearchBar {...props} />).instance();
       searchBar.updateAutoCompleteItems();
-      expect(searchBar.state.searchTerm).to.eql('');
-      expect(searchBar.state.searchItems).to.eql(searchBar.props.defaultSearchItems);
-      expect(searchBar.state.activeSearchItem).to.eql(0);
+      expect(searchBar.state.searchTerm).toEqual('');
+      expect(searchBar.state.searchItems).toEqual(searchBar.props.defaultSearchItems);
+      expect(searchBar.state.activeSearchItem).toEqual(0);
     });
 
     it('sets state when incomplete tag', function() {
@@ -188,9 +188,9 @@ describe('SearchBar', function() {
       };
       let searchBar = mount(<SearchBar {...props} />).instance();
       searchBar.updateAutoCompleteItems();
-      expect(searchBar.state.searchTerm).to.eql('fu');
-      expect(searchBar.state.searchItems).to.eql([]);
-      expect(searchBar.state.activeSearchItem).to.eql(0);
+      expect(searchBar.state.searchTerm).toEqual('fu');
+      expect(searchBar.state.searchItems).toEqual([]);
+      expect(searchBar.state.activeSearchItem).toEqual(0);
     });
 
     it('sets state with complete tag', function() {
@@ -201,9 +201,9 @@ describe('SearchBar', function() {
       };
       let searchBar = mount(<SearchBar {...props} />).instance();
       searchBar.updateAutoCompleteItems();
-      expect(searchBar.state.searchTerm).to.eql('"fu"');
-      expect(searchBar.state.searchItems).to.eql([]);
-      expect(searchBar.state.activeSearchItem).to.eql(0);
+      expect(searchBar.state.searchTerm).toEqual('"fu"');
+      expect(searchBar.state.searchItems).toEqual([]);
+      expect(searchBar.state.activeSearchItem).toEqual(0);
     });
 
     it('sets state when incomplete tag as second input', function() {
@@ -213,10 +213,12 @@ describe('SearchBar', function() {
         query: 'is:unresolved fu'
       };
       let searchBar = mount(<SearchBar {...props} />).instance();
+      searchBar.getCursorPosition = jest.fn();
+      searchBar.getCursorPosition.mockReturnValue(15); // end of line
       searchBar.updateAutoCompleteItems();
-      expect(searchBar.state.searchTerm).to.eql('fu');
-      expect(searchBar.state.searchItems.length).to.eql(0);
-      expect(searchBar.state.activeSearchItem).to.eql(0);
+      expect(searchBar.state.searchTerm).toEqual('fu');
+      expect(searchBar.state.searchItems.length).toEqual(0);
+      expect(searchBar.state.activeSearchItem).toEqual(0);
     });
 
     it('sets state when value has colon', function() {
@@ -227,9 +229,9 @@ describe('SearchBar', function() {
       };
       let searchBar = mount(<SearchBar {...props} />).instance();
       searchBar.updateAutoCompleteItems();
-      expect(searchBar.state.searchTerm).to.eql('"http://example.com"');
-      expect(searchBar.state.searchItems).to.eql([]);
-      expect(searchBar.state.activeSearchItem).to.eql(0);
+      expect(searchBar.state.searchTerm).toEqual('"http://example.com"');
+      expect(searchBar.state.searchItems).toEqual([]);
+      expect(searchBar.state.activeSearchItem).toEqual(0);
     });
   });
 });
diff --git a/tests/karma.conf.js b/tests/karma.conf.js
deleted file mode 100644
index 5a42498ae1..0000000000
--- a/tests/karma.conf.js
+++ /dev/null
@@ -1,131 +0,0 @@
-/*eslint-env node*/
-/*eslint no-var:0*/
-// Karma configuration
-// Generated on Sat Jul 26 2014 13:49:45 GMT+0200 (CEST)
-var path = require('path');
-var webpack = require('webpack');
-
-var appPrefix = path.join(__dirname, '../src/sentry/static/sentry/app');
-
-module.exports = function(config) {
-  config.set({
-
-    // base path that will be used to resolve all patterns (eg. files, exclude)
-    basePath: '../',
-
-    // frameworks to use
-    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter
-    frameworks: ['mocha', 'chai', 'sinon'],
-
-    // list of files / patterns to load in the browser
-    files: [
-      'node_modules/babel-polyfill/dist/polyfill.min.js',
-      'tests/tests.webpack.js'
-    ],
-
-    // [1]
-    // Note there's a bunch of configurations in here that in order to work
-    // around a airbnb/enzyme + webpack + sinon build bug:
-    //   https://github.com/airbnb/enzyme/issues/47#issuecomment-162529926
-    webpack: {
-      cache: true,
-      resolve: {
-        alias: {
-          'app': appPrefix,
-          sinon: 'sinon/pkg/sinon', // see [1] above
-          'sentry-locale': path.join(__dirname, '..', 'src', 'sentry', 'locale')
-        },
-        modules: ['node_modules'],
-        extensions: ['*', '.jsx', '.js', '.json']
-      },
-      module: {
-        noParse: [
-          /node_modules\/sinon\//, // see [1] above
-        ],
-        loaders: [
-          {
-            exclude: /(vendor|node_modules)/,
-            test: /\.jsx?$/,
-            loader: 'babel-loader'
-          },
-          {
-            test: /\.po$/,
-            loader: 'po-catalog-loader',
-            query: {
-              referenceExtensions: ['.js', '.jsx']
-            }
-          },
-          {
-            test: /\.json$/,
-            loader: 'json-loader'
-          }
-        ]
-      },
-      devtool: 'inline-source-map',
-      plugins: [
-        new webpack.ProvidePlugin({
-          $: 'jquery',
-          jQuery: 'jquery',
-          'window.jQuery': 'jquery',
-          'root.jQuery': 'jquery'
-        }),
-        new webpack.IgnorePlugin(/react\/lib\/ReactContext/)
-      ],
-      externals: { // see [1] above
-        'jsdom': 'window', // can't simulate jsdom in browser
-        'cheerio': 'window',
-
-        // for enzyme: https://github.com/airbnb/enzyme/issues/47
-        'react/addons': true,
-        'react/lib/ExecutionEnvironment': true,
-        'react/lib/ReactContext': true
-      }
-    },
-
-    webpackMiddleware: {
-      noInfo: true
-    },
-
-    plugins: [
-      'karma-chai',
-      'karma-mocha',
-      'karma-phantomjs-launcher',
-      'karma-sinon',
-      'karma-sourcemap-loader',
-      'karma-webpack'
-    ],
-
-    // preprocess matching files before serving them to the browser
-    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
-    preprocessors: {
-      'tests/tests.webpack.js': ['webpack', 'sourcemap']
-    },
-
-    // test results reporter to use
-    // possible values: 'dots', 'progress'
-    // available reporters: https://npmjs.org/browse/keyword/karma-reporter
-    reporters: ['dots'],
-
-    // web server port
-    port: 9876,
-
-    // enable / disable colors in the output (reporters and logs)
-    colors: true,
-
-    // level of logging
-    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
-    logLevel: config.LOG_INFO,
-
-    // enable / disable watching file and executing tests whenever any file changes
-    autoWatch: true,
-
-    // start these browsers
-    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
-    // browsers: ['PhantomJS'],
-    browsers: ['PhantomJS'],
-
-    // Continuous Integration mode
-    // if true, Karma captures browsers, runs the tests and exits
-    singleRun: false
-  });
-};
diff --git a/tests/tests.webpack.js b/tests/tests.webpack.js
deleted file mode 100644
index 990c585db9..0000000000
--- a/tests/tests.webpack.js
+++ /dev/null
@@ -1,3 +0,0 @@
-var context = require.context('./', true, /\.spec\.jsx?$/);
-context.keys().forEach(context);
-module.exports = context;
diff --git a/yarn.lock b/yarn.lock
index 122e280455..24a70dc2e6 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -6,7 +6,7 @@ Base64@~0.2.0:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/Base64/-/Base64-0.2.1.tgz#ba3a4230708e186705065e66babdd4c35cf60028"
 
-abab@^1.0.0:
+abab@^1.0.0, abab@^1.0.3:
   version "1.0.3"
   resolved "https://registry.yarnpkg.com/abab/-/abab-1.0.3.tgz#b81de5f7274ec4e756d797cd834f303642724e5d"
 
@@ -14,13 +14,6 @@ abbrev@1:
   version "1.0.9"
   resolved "https://registry.yarnpkg.com/abbrev/-/abbrev-1.0.9.tgz#91b4792588a7738c25f35dd6f63752a2f8776135"
 
-accepts@1.3.3:
-  version "1.3.3"
-  resolved "https://registry.yarnpkg.com/accepts/-/accepts-1.3.3.tgz#c3ca7434938648c3e0d9c1e328dd68b622c284ca"
-  dependencies:
-    mime-types "~2.1.11"
-    negotiator "0.6.1"
-
 acorn-dynamic-import@^2.0.0:
   version "2.0.1"
   resolved "https://registry.yarnpkg.com/acorn-dynamic-import/-/acorn-dynamic-import-2.0.1.tgz#23f671eb6e650dab277fef477c321b1178a8cca2"
@@ -33,6 +26,12 @@ acorn-globals@^1.0.4:
   dependencies:
     acorn "^2.1.0"
 
+acorn-globals@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/acorn-globals/-/acorn-globals-3.1.0.tgz#fd8270f71fbb4996b004fa880ee5d46573a731bf"
+  dependencies:
+    acorn "^4.0.4"
+
 acorn@^2.1.0, acorn@^2.4.0:
   version "2.7.0"
   resolved "https://registry.yarnpkg.com/acorn/-/acorn-2.7.0.tgz#ab6e7d9d886aaca8b085bc3312b79a198433f0e7"
@@ -41,10 +40,6 @@ acorn@^4.0.3, acorn@^4.0.4:
   version "4.0.4"
   resolved "https://registry.yarnpkg.com/acorn/-/acorn-4.0.4.tgz#17a8d6a7a6c4ef538b814ec9abac2779293bf30a"
 
-after@0.8.1:
-  version "0.8.1"
-  resolved "https://registry.yarnpkg.com/after/-/after-0.8.1.tgz#ab5d4fb883f596816d3515f8f791c0af486dd627"
-
 ajv-keywords@^1.1.1:
   version "1.5.0"
   resolved "https://registry.yarnpkg.com/ajv-keywords/-/ajv-keywords-1.5.0.tgz#c11e6859eafff83e0dafc416929472eca946aa2c"
@@ -72,7 +67,7 @@ amdefine@>=0.0.4:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/amdefine/-/amdefine-1.0.0.tgz#fd17474700cb5cc9c2b709f0be9d23ce3c198c33"
 
-ansi-escapes@^1.1.0:
+ansi-escapes@^1.1.0, ansi-escapes@^1.4.0:
   version "1.4.0"
   resolved "https://registry.yarnpkg.com/ansi-escapes/-/ansi-escapes-1.4.0.tgz#d3a8a83b319aa67793662b13e761c7911422306e"
 
@@ -97,6 +92,12 @@ anymatch@^1.3.0:
     arrify "^1.0.0"
     micromatch "^2.1.5"
 
+append-transform@^0.4.0:
+  version "0.4.0"
+  resolved "https://registry.yarnpkg.com/append-transform/-/append-transform-0.4.0.tgz#d76ebf8ca94d276e247a36bad44a4b74ab611991"
+  dependencies:
+    default-require-extensions "^1.0.0"
+
 aproba@^1.0.3:
   version "1.0.4"
   resolved "https://registry.yarnpkg.com/aproba/-/aproba-1.0.4.tgz#2713680775e7614c8ba186c065d4e2e52d1072c0"
@@ -124,9 +125,9 @@ arr-flatten@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/arr-flatten/-/arr-flatten-1.0.1.tgz#e5ffe54d45e19f32f216e91eb99c8ce892bb604b"
 
-array-slice@^0.2.3:
-  version "0.2.3"
-  resolved "https://registry.yarnpkg.com/array-slice/-/array-slice-0.2.3.tgz#dd3cfb80ed7973a75117cdac69b0b99ec86186f5"
+array-equal@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/array-equal/-/array-equal-1.0.0.tgz#8c2a5ef2472fd9ea742b04c77a75093ba2757c93"
 
 array-union@^1.0.1:
   version "1.0.2"
@@ -142,11 +143,7 @@ array-unique@^0.2.1:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/array-unique/-/array-unique-0.2.1.tgz#a1d97ccafcbc2625cc70fadceb36a50c58b01a53"
 
-arraybuffer.slice@0.0.6:
-  version "0.0.6"
-  resolved "https://registry.yarnpkg.com/arraybuffer.slice/-/arraybuffer.slice-0.0.6.tgz#f33b2159f0532a3f3107a272c0ccfbd1ad2979ca"
-
-arrify@^1.0.0:
+arrify@^1.0.0, arrify@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/arrify/-/arrify-1.0.1.tgz#898508da2226f380df904728456849c1501a4b0d"
 
@@ -204,7 +201,7 @@ async@^1.4.0:
   version "1.5.2"
   resolved "https://registry.yarnpkg.com/async/-/async-1.5.2.tgz#ec6a61ae56480c0c3cb241c95618e20892f9672a"
 
-async@^2.1.2:
+async@^2.1.2, async@^2.1.4:
   version "2.1.4"
   resolved "https://registry.yarnpkg.com/async/-/async-2.1.4.tgz#2d2160c7788032e4dd6cbe2502f1f9a2c8f6cde4"
   dependencies:
@@ -287,7 +284,7 @@ babel-eslint@7.1.1:
     babylon "^6.13.0"
     lodash.pickby "^4.6.0"
 
-babel-generator@^6.21.0:
+babel-generator@^6.18.0, babel-generator@^6.21.0:
   version "6.21.0"
   resolved "https://registry.yarnpkg.com/babel-generator/-/babel-generator-6.21.0.tgz#605f1269c489a1c75deeca7ea16d43d4656c8494"
   dependencies:
@@ -416,6 +413,14 @@ babel-helpers@^6.16.0:
     babel-runtime "^6.0.0"
     babel-template "^6.16.0"
 
+babel-jest@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/babel-jest/-/babel-jest-19.0.0.tgz#59323ced99a3a84d359da219ca881074ffc6ce3f"
+  dependencies:
+    babel-core "^6.0.0"
+    babel-plugin-istanbul "^4.0.0"
+    babel-preset-jest "^19.0.0"
+
 babel-loader@6.2.10:
   version "6.2.10"
   resolved "https://registry.yarnpkg.com/babel-loader/-/babel-loader-6.2.10.tgz#adefc2b242320cd5d15e65b31cea0e8b1b02d4b0"
@@ -441,6 +446,18 @@ babel-plugin-check-es2015-constants@^6.3.13:
   dependencies:
     babel-runtime "^6.0.0"
 
+babel-plugin-istanbul@^4.0.0:
+  version "4.1.1"
+  resolved "https://registry.yarnpkg.com/babel-plugin-istanbul/-/babel-plugin-istanbul-4.1.1.tgz#c12de0fc6fe42adfb16be56f1ad11e4a9782eca9"
+  dependencies:
+    find-up "^2.1.0"
+    istanbul-lib-instrument "^1.6.2"
+    test-exclude "^4.0.3"
+
+babel-plugin-jest-hoist@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-19.0.0.tgz#4ae2a04ea612a6e73651f3fde52c178991304bea"
+
 babel-plugin-syntax-async-functions@^6.8.0:
   version "6.13.0"
   resolved "https://registry.yarnpkg.com/babel-plugin-syntax-async-functions/-/babel-plugin-syntax-async-functions-6.13.0.tgz#cad9cad1191b5ad634bf30ae0872391e0647be95"
@@ -762,6 +779,12 @@ babel-preset-es2017@^6.16.0:
     babel-plugin-syntax-trailing-function-commas "^6.8.0"
     babel-plugin-transform-async-to-generator "^6.16.0"
 
+babel-preset-jest@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/babel-preset-jest/-/babel-preset-jest-19.0.0.tgz#22d67201d02324a195811288eb38294bb3cac396"
+  dependencies:
+    babel-plugin-jest-hoist "^19.0.0"
+
 babel-preset-latest@^6.16.0:
   version "6.16.0"
   resolved "https://registry.yarnpkg.com/babel-preset-latest/-/babel-preset-latest-6.16.0.tgz#5b87e19e250bb1213f13af4ec9dc7a51d53f388d"
@@ -852,10 +875,6 @@ babylon@^6.13.0:
   version "6.15.0"
   resolved "https://registry.yarnpkg.com/babylon/-/babylon-6.15.0.tgz#ba65cfa1a80e1759b0e89fb562e27dccae70348e"
 
-backo2@1.0.2:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/backo2/-/backo2-1.0.2.tgz#31ab1ac8b129363463e35b3ebb69f4dfcfba7947"
-
 balanced-match@^0.4.1, balanced-match@^0.4.2:
   version "0.4.2"
   resolved "https://registry.yarnpkg.com/balanced-match/-/balanced-match-0.4.2.tgz#cb3f3e3c732dc0f01ee70b403f302e61d7709838"
@@ -864,10 +883,6 @@ balanced-match@~0.1.0:
   version "0.1.0"
   resolved "https://registry.yarnpkg.com/balanced-match/-/balanced-match-0.1.0.tgz#b504bd05869b39259dd0c5efc35d843176dccc4a"
 
-base64-arraybuffer@0.1.5:
-  version "0.1.5"
-  resolved "https://registry.yarnpkg.com/base64-arraybuffer/-/base64-arraybuffer-0.1.5.tgz#73926771923b5a19747ad666aa5cd4bf9c6e9ce8"
-
 base64-js@0.0.8:
   version "0.0.8"
   resolved "https://registry.yarnpkg.com/base64-js/-/base64-js-0.0.8.tgz#1101e9544f4a76b1bc3b26d452ca96d7a35e7978"
@@ -876,30 +891,12 @@ base64-js@^1.0.2:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/base64-js/-/base64-js-1.2.0.tgz#a39992d723584811982be5e290bb6a53d86700f1"
 
-base64id@0.1.0:
-  version "0.1.0"
-  resolved "https://registry.yarnpkg.com/base64id/-/base64id-0.1.0.tgz#02ce0fdeee0cef4f40080e1e73e834f0b1bfce3f"
-
-batch@^0.5.3:
-  version "0.5.3"
-  resolved "https://registry.yarnpkg.com/batch/-/batch-0.5.3.tgz#3f3414f380321743bfc1042f9a83ff1d5824d464"
-
 bcrypt-pbkdf@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.0.tgz#3ca76b85241c7170bf7d9703e7b9aa74630040d4"
   dependencies:
     tweetnacl "^0.14.3"
 
-benchmark@1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/benchmark/-/benchmark-1.0.0.tgz#2f1e2fa4c359f11122aa183082218e957e390c73"
-
-better-assert@~1.0.0:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/better-assert/-/better-assert-1.0.2.tgz#40866b9e1b9e0b55b481894311e68faffaebc522"
-  dependencies:
-    callsite "1.0.0"
-
 big.js@^3.1.3:
   version "3.1.3"
   resolved "https://registry.yarnpkg.com/big.js/-/big.js-3.1.3.tgz#4cada2193652eb3ca9ec8e55c9015669c9806978"
@@ -914,39 +911,16 @@ bl@~1.1.2:
   dependencies:
     readable-stream "~2.0.5"
 
-blob@0.0.4:
-  version "0.0.4"
-  resolved "https://registry.yarnpkg.com/blob/-/blob-0.0.4.tgz#bcf13052ca54463f30f9fc7e95b9a47630a94921"
-
 block-stream@*:
   version "0.0.9"
   resolved "https://registry.yarnpkg.com/block-stream/-/block-stream-0.0.9.tgz#13ebfe778a03205cfe03751481ebb4b3300c126a"
   dependencies:
     inherits "~2.0.0"
 
-bluebird@^2.9.27:
-  version "2.11.0"
-  resolved "https://registry.yarnpkg.com/bluebird/-/bluebird-2.11.0.tgz#534b9033c022c9579c56ba3b3e5a5caafbb650e1"
-
 bn.js@^4.0.0, bn.js@^4.1.0, bn.js@^4.1.1, bn.js@^4.4.0:
   version "4.11.6"
   resolved "https://registry.yarnpkg.com/bn.js/-/bn.js-4.11.6.tgz#53344adb14617a13f6e8dd2ce28905d1c0ba3215"
 
-body-parser@^1.12.4:
-  version "1.15.2"
-  resolved "https://registry.yarnpkg.com/body-parser/-/body-parser-1.15.2.tgz#d7578cf4f1d11d5f6ea804cef35dc7a7ff6dae67"
-  dependencies:
-    bytes "2.4.0"
-    content-type "~1.0.2"
-    debug "~2.2.0"
-    depd "~1.1.0"
-    http-errors "~1.5.0"
-    iconv-lite "0.4.13"
-    on-finished "~2.3.0"
-    qs "6.2.0"
-    raw-body "~2.1.7"
-    type-is "~1.6.13"
-
 boolbase@~1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/boolbase/-/boolbase-1.0.0.tgz#68dff5fbe60c51eb37725ea9e3ed310dcc1e776e"
@@ -968,12 +942,6 @@ brace-expansion@^1.0.0:
     balanced-match "^0.4.1"
     concat-map "0.0.1"
 
-braces@^0.1.2:
-  version "0.1.5"
-  resolved "https://registry.yarnpkg.com/braces/-/braces-0.1.5.tgz#c085711085291d8b75fdd74eab0f8597280711e6"
-  dependencies:
-    expand-range "^0.1.0"
-
 braces@^1.8.2:
   version "1.8.5"
   resolved "https://registry.yarnpkg.com/braces/-/braces-1.8.5.tgz#ba77962e12dff969d6b76711e914b737857bf6a7"
@@ -986,6 +954,12 @@ brorand@^1.0.1:
   version "1.0.6"
   resolved "https://registry.yarnpkg.com/brorand/-/brorand-1.0.6.tgz#4028706b915f91f7b349a2e0bf3c376039d216e5"
 
+browser-resolve@^1.11.2:
+  version "1.11.2"
+  resolved "https://registry.yarnpkg.com/browser-resolve/-/browser-resolve-1.11.2.tgz#8ff09b0a2c421718a1051c260b32e48f442938ce"
+  dependencies:
+    resolve "1.1.7"
+
 browserify-aes@^1.0.0, browserify-aes@^1.0.4:
   version "1.0.6"
   resolved "https://registry.yarnpkg.com/browserify-aes/-/browserify-aes-1.0.6.tgz#5e7725dbdef1fd5930d4ebab48567ce451c48a0a"
@@ -1043,6 +1017,18 @@ browserslist@~1.4.0:
   dependencies:
     caniuse-db "^1.0.30000539"
 
+bser@1.0.2:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/bser/-/bser-1.0.2.tgz#381116970b2a6deea5646dd15dd7278444b56169"
+  dependencies:
+    node-int64 "^0.4.0"
+
+bser@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/bser/-/bser-2.0.0.tgz#9ac78d3ed5d915804fd87acb158bc797147a1719"
+  dependencies:
+    node-int64 "^0.4.0"
+
 buffer-shims@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/buffer-shims/-/buffer-shims-1.0.0.tgz#9978ce317388c649ad8793028c3477ef044a8b51"
@@ -1075,13 +1061,9 @@ builtin-status-codes@^3.0.0:
   version "3.0.0"
   resolved "https://registry.yarnpkg.com/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz#85982878e21b98e1c66425e03d0174788f569ee8"
 
-bytes@2.4.0:
-  version "2.4.0"
-  resolved "https://registry.yarnpkg.com/bytes/-/bytes-2.4.0.tgz#7d97196f9d5baf7f6935e25985549edd2a6c2339"
-
-callsite@1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/callsite/-/callsite-1.0.0.tgz#280398e5d664bd74038b6f0905153e6e8af1bc20"
+callsites@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/callsites/-/callsites-2.0.0.tgz#06eb84f00eea413da86affefacbffb36093b3c50"
 
 camelcase@^1.0.2:
   version "1.2.1"
@@ -1136,7 +1118,7 @@ cheerio@^0.20.0:
   optionalDependencies:
     jsdom "^7.0.2"
 
-chokidar@^1.4.1, chokidar@^1.4.3:
+chokidar@^1.4.3:
   version "1.6.1"
   resolved "https://registry.yarnpkg.com/chokidar/-/chokidar-1.6.1.tgz#2f4447ab5e96e50fb3d789fd90d4c72e0e4c70c2"
   dependencies:
@@ -1151,6 +1133,10 @@ chokidar@^1.4.1, chokidar@^1.4.3:
   optionalDependencies:
     fsevents "^1.0.0"
 
+ci-info@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/ci-info/-/ci-info-1.0.0.tgz#dc5285f2b4e251821683681c381c3388f46ec534"
+
 cipher-base@^1.0.0, cipher-base@^1.0.1:
   version "1.0.3"
   resolved "https://registry.yarnpkg.com/cipher-base/-/cipher-base-1.0.3.tgz#eeabf194419ce900da3018c207d212f2a6df0a07"
@@ -1251,7 +1237,7 @@ colormin@^1.0.5:
     css-color-names "0.0.4"
     has "^1.0.1"
 
-colors@^1.1.0, colors@~1.1.2:
+colors@~1.1.2:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/colors/-/colors-1.1.2.tgz#168a4701756b6a7f51a12ce0c97bfa28c084ed63"
 
@@ -1261,14 +1247,6 @@ combined-stream@^1.0.5, combined-stream@~1.0.5:
   dependencies:
     delayed-stream "~1.0.0"
 
-commander@0.6.1:
-  version "0.6.1"
-  resolved "https://registry.yarnpkg.com/commander/-/commander-0.6.1.tgz#fa68a14f6a945d54dbbe50d8cdb3320e9e3b1a06"
-
-commander@2.3.0:
-  version "2.3.0"
-  resolved "https://registry.yarnpkg.com/commander/-/commander-2.3.0.tgz#fd430e889832ec353b9acd1de217c11cb3eef873"
-
 commander@^2.8.1, commander@^2.9.0:
   version "2.9.0"
   resolved "https://registry.yarnpkg.com/commander/-/commander-2.9.0.tgz#9c99094176e12240cb22d6c5146098400fe0f7d4"
@@ -1279,22 +1257,6 @@ commondir@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/commondir/-/commondir-1.0.1.tgz#ddd800da0c66127393cca5950ea968a3aaf1253b"
 
-component-bind@1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/component-bind/-/component-bind-1.0.0.tgz#00c608ab7dcd93897c0009651b1d3a8e1e73bbd1"
-
-component-emitter@1.1.2:
-  version "1.1.2"
-  resolved "https://registry.yarnpkg.com/component-emitter/-/component-emitter-1.1.2.tgz#296594f2753daa63996d2af08d15a95116c9aec3"
-
-component-emitter@1.2.0:
-  version "1.2.0"
-  resolved "https://registry.yarnpkg.com/component-emitter/-/component-emitter-1.2.0.tgz#ccd113a86388d06482d03de3fc7df98526ba8efe"
-
-component-inherit@0.0.3:
-  version "0.0.3"
-  resolved "https://registry.yarnpkg.com/component-inherit/-/component-inherit-0.0.3.tgz#645fc4adf58b72b649d5cae65135619db26ff143"
-
 compression-webpack-plugin@^0.3.0:
   version "0.3.2"
   resolved "https://registry.yarnpkg.com/compression-webpack-plugin/-/compression-webpack-plugin-0.3.2.tgz#1edfb0e749d7366d3e701670c463359b2c0cf704"
@@ -1324,15 +1286,6 @@ concat-stream@^1.4.6:
     readable-stream "~2.0.0"
     typedarray "~0.0.5"
 
-connect@^3.3.5:
-  version "3.5.0"
-  resolved "https://registry.yarnpkg.com/connect/-/connect-3.5.0.tgz#b357525a0b4c1f50599cd983e1d9efeea9677198"
-  dependencies:
-    debug "~2.2.0"
-    finalhandler "0.5.0"
-    parseurl "~1.3.1"
-    utils-merge "1.0.0"
-
 console-browserify@^1.1.0:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/console-browserify/-/console-browserify-1.1.0.tgz#f0241c45730a9fc6323b206dbf38edc741d0bb10"
@@ -1351,9 +1304,9 @@ constants-browserify@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/constants-browserify/-/constants-browserify-1.0.0.tgz#c20b96d8c617748aaf1c16021760cd27fcb8cb75"
 
-content-type@~1.0.2:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/content-type/-/content-type-1.0.2.tgz#b7d113aee7a8dd27bd21133c4dc2529df1721eed"
+content-type-parser@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/content-type-parser/-/content-type-parser-1.0.1.tgz#c3e56988c53c65127fb46d4032a3a900246fdc94"
 
 convert-source-map@^1.1.0:
   version "1.3.0"
@@ -1363,7 +1316,7 @@ core-js@^1.0.0:
   version "1.2.7"
   resolved "https://registry.yarnpkg.com/core-js/-/core-js-1.2.7.tgz#652294c14651db28fa93bd2d5ff2983a4f08c636"
 
-core-js@^2.1.0, core-js@^2.4.0:
+core-js@^2.4.0:
   version "2.4.1"
   resolved "https://registry.yarnpkg.com/core-js/-/core-js-2.4.1.tgz#4de911e667b0eae9124e34254b53aea6fc618d3e"
 
@@ -1516,16 +1469,16 @@ cssom@0.3.x, "cssom@>= 0.3.0 < 0.4.0":
   version "0.3.1"
   resolved "https://registry.yarnpkg.com/cssom/-/cssom-0.3.1.tgz#c9e37ef2490e64f6d1baa10fda852257082c25d3"
 
-"cssstyle@>= 0.2.29 < 0.3.0":
+"cssom@>= 0.3.2 < 0.4.0":
+  version "0.3.2"
+  resolved "https://registry.yarnpkg.com/cssom/-/cssom-0.3.2.tgz#b8036170c79f07a90ff2f16e22284027a243848b"
+
+"cssstyle@>= 0.2.29 < 0.3.0", "cssstyle@>= 0.2.37 < 0.3.0":
   version "0.2.37"
   resolved "https://registry.yarnpkg.com/cssstyle/-/cssstyle-0.2.37.tgz#541097234cb2513c83ceed3acddc27ff27987d54"
   dependencies:
     cssom "0.3.x"
 
-custom-event@~1.0.0:
-  version "1.0.1"
-  resolved "https://registry.yarnpkg.com/custom-event/-/custom-event-1.0.1.tgz#5d02a46850adf1b4a317946a3928fccb5bfd0425"
-
 d@^0.1.1, d@~0.1.1:
   version "0.1.1"
   resolved "https://registry.yarnpkg.com/d/-/d-0.1.1.tgz#da184c535d18d8ee7ba2aa229b914009fae11309"
@@ -1546,7 +1499,7 @@ debug@0.7.4:
   version "0.7.4"
   resolved "https://registry.yarnpkg.com/debug/-/debug-0.7.4.tgz#06e1ea8082c2cb14e39806e22e2f6f757f92af39"
 
-debug@2.2.0, debug@^2.1.1, debug@^2.2.0, debug@~2.2.0:
+debug@^2.1.1, debug@^2.2.0, debug@~2.2.0:
   version "2.2.0"
   resolved "https://registry.yarnpkg.com/debug/-/debug-2.2.0.tgz#f87057e995b1a1f6ae6a4960664137bc56f039da"
   dependencies:
@@ -1574,6 +1527,12 @@ deep-is@~0.1.3:
   version "0.1.3"
   resolved "https://registry.yarnpkg.com/deep-is/-/deep-is-0.1.3.tgz#b369d6fb5dbc13eecf524f91b070feedc357cf34"
 
+default-require-extensions@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/default-require-extensions/-/default-require-extensions-1.0.0.tgz#f37ea15d3e13ffd9b437d33e1a75b5fb97874cb8"
+  dependencies:
+    strip-bom "^2.0.0"
+
 defaults@^1.0.2:
   version "1.0.3"
   resolved "https://registry.yarnpkg.com/defaults/-/defaults-1.0.3.tgz#c656051e9817d9ff08ed881477f3fe4019f3ef7d"
@@ -1611,10 +1570,6 @@ delegates@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/delegates/-/delegates-1.0.0.tgz#84c6e159b81904fdca59a0ef44cd870d31250f9a"
 
-depd@~1.1.0:
-  version "1.1.0"
-  resolved "https://registry.yarnpkg.com/depd/-/depd-1.1.0.tgz#e1bd82c6aab6ced965b97b88b17ed3e528ca18c3"
-
 des.js@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/des.js/-/des.js-1.0.0.tgz#c074d2e2aa6a8a9a07dbd61f9a15c2cd83ec8ecc"
@@ -1628,13 +1583,9 @@ detect-indent@^4.0.0:
   dependencies:
     repeating "^2.0.0"
 
-di@^0.0.1:
-  version "0.0.1"
-  resolved "https://registry.yarnpkg.com/di/-/di-0.0.1.tgz#806649326ceaa7caa3306d75d985ea2748ba913c"
-
-diff@1.4.0:
-  version "1.4.0"
-  resolved "https://registry.yarnpkg.com/diff/-/diff-1.4.0.tgz#7f28d2eb9ee7b15a97efd89ce63dcfdaa3ccbabf"
+diff@^3.0.0:
+  version "3.2.0"
+  resolved "https://registry.yarnpkg.com/diff/-/diff-3.2.0.tgz#c9ce393a4b7cbd0b058a725c93df299027868ff9"
 
 diffie-hellman@^5.0.0:
   version "5.0.2"
@@ -1655,15 +1606,6 @@ dom-helpers@^2.4.0:
   version "2.4.0"
   resolved "https://registry.yarnpkg.com/dom-helpers/-/dom-helpers-2.4.0.tgz#9bb4b245f637367b1fa670274272aa28fe06c367"
 
-dom-serialize@^2.2.0:
-  version "2.2.1"
-  resolved "https://registry.yarnpkg.com/dom-serialize/-/dom-serialize-2.2.1.tgz#562ae8999f44be5ea3076f5419dcd59eb43ac95b"
-  dependencies:
-    custom-event "~1.0.0"
-    ent "~2.2.0"
-    extend "^3.0.0"
-    void-elements "^2.0.0"
-
 dom-serializer@0, dom-serializer@~0.1.0:
   version "0.1.0"
   resolved "https://registry.yarnpkg.com/dom-serializer/-/dom-serializer-0.1.0.tgz#073c697546ce0780ce23be4a28e293e40bc30c82"
@@ -1698,10 +1640,6 @@ ecc-jsbn@~0.1.1:
   dependencies:
     jsbn "~0.1.0"
 
-ee-first@1.1.1:
-  version "1.1.1"
-  resolved "https://registry.yarnpkg.com/ee-first/-/ee-first-1.1.1.tgz#590c61156b0ae2f4f0255732a158b266bc56b21d"
-
 elliptic@^6.0.0:
   version "6.3.2"
   resolved "https://registry.yarnpkg.com/elliptic/-/elliptic-6.3.2.tgz#e4c81e0829cf0a65ab70e998b8232723b5c1bc48"
@@ -1721,44 +1659,6 @@ encoding@^0.1.11:
   dependencies:
     iconv-lite "~0.4.13"
 
-engine.io-client@1.7.0:
-  version "1.7.0"
-  resolved "https://registry.yarnpkg.com/engine.io-client/-/engine.io-client-1.7.0.tgz#0bb81d3563ab7afb668f1e1b400c9403b03006ee"
-  dependencies:
-    component-emitter "1.1.2"
-    component-inherit "0.0.3"
-    debug "2.2.0"
-    engine.io-parser "1.3.0"
-    has-cors "1.1.0"
-    indexof "0.0.1"
-    parsejson "0.0.1"
-    parseqs "0.0.2"
-    parseuri "0.0.4"
-    ws "1.1.1"
-    xmlhttprequest-ssl "1.5.1"
-    yeast "0.1.2"
-
-engine.io-parser@1.3.0:
-  version "1.3.0"
-  resolved "https://registry.yarnpkg.com/engine.io-parser/-/engine.io-parser-1.3.0.tgz#61a35c7f3a3ccd1b179e4f52257a7a8cfacaeb21"
-  dependencies:
-    after "0.8.1"
-    arraybuffer.slice "0.0.6"
-    base64-arraybuffer "0.1.5"
-    blob "0.0.4"
-    has-binary "0.1.6"
-    wtf-8 "1.0.0"
-
-engine.io@1.7.0:
-  version "1.7.0"
-  resolved "https://registry.yarnpkg.com/engine.io/-/engine.io-1.7.0.tgz#a417857af4995d9bbdf8a0e03a87e473ebe64fbe"
-  dependencies:
-    accepts "1.3.3"
-    base64id "0.1.0"
-    debug "2.2.0"
-    engine.io-parser "1.3.0"
-    ws "1.1.1"
-
 enhanced-resolve@^3.0.0:
   version "3.0.3"
   resolved "https://registry.yarnpkg.com/enhanced-resolve/-/enhanced-resolve-3.0.3.tgz#df14c06b5fc5eecade1094c9c5a12b4b3edc0b62"
@@ -1768,10 +1668,6 @@ enhanced-resolve@^3.0.0:
     object-assign "^4.0.1"
     tapable "^0.2.5"
 
-ent@~2.2.0:
-  version "2.2.0"
-  resolved "https://registry.yarnpkg.com/ent/-/ent-2.2.0.tgz#e964219325a21d05f44466a2f686ed6ce5f5dd1d"
-
 entities@1.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/entities/-/entities-1.0.0.tgz#b2987aa3821347fcde642b24fdfc9e4fb712bf26"
@@ -1791,7 +1687,7 @@ enzyme@2.4.1:
     object.assign "^4.0.3"
     object.values "^1.0.3"
 
-errno@^0.1.1, errno@^0.1.3:
+"errno@>=0.1.1 <0.2.0-0", errno@^0.1.1, errno@^0.1.3:
   version "0.1.4"
   resolved "https://registry.yarnpkg.com/errno/-/errno-0.1.4.tgz#b896e23a9e5e8ba33871fc996abd3635fc9a1c7d"
   dependencies:
@@ -1880,14 +1776,6 @@ es6-weak-map@^2.0.1:
     es6-iterator "2"
     es6-symbol "3"
 
-escape-html@~1.0.3:
-  version "1.0.3"
-  resolved "https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988"
-
-escape-string-regexp@1.0.2:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.2.tgz#4dbc2fe674e71949caf3fb2695ce7f2dc1d9a8d1"
-
 escape-string-regexp@^1.0.2, escape-string-regexp@^1.0.5:
   version "1.0.5"
   resolved "https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4"
@@ -1968,6 +1856,10 @@ esprima@^2.6.0, esprima@^2.7.1:
   version "2.7.3"
   resolved "https://registry.yarnpkg.com/esprima/-/esprima-2.7.3.tgz#96e3b70d5779f6ad49cd032673d1c312767ba581"
 
+esprima@^3.1.1:
+  version "3.1.3"
+  resolved "https://registry.yarnpkg.com/esprima/-/esprima-3.1.3.tgz#fdca51cee6133895e3c88d535ce49dbff62a4633"
+
 esrecurse@^4.1.0:
   version "4.1.0"
   resolved "https://registry.yarnpkg.com/esrecurse/-/esrecurse-4.1.0.tgz#4713b6536adf7f2ac4f327d559e7756bff648220"
@@ -2006,7 +1898,7 @@ event-emitter@~0.3.4:
     d "~0.1.1"
     es5-ext "~0.10.7"
 
-eventemitter3@1.x.x, eventemitter3@^1.1.1:
+eventemitter3@^1.1.1:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/eventemitter3/-/eventemitter3-1.2.0.tgz#1c86991d816ad1e504750e73874224ecf3bec508"
 
@@ -2024,38 +1916,29 @@ evp_bytestokey@^1.0.0:
   dependencies:
     create-hash "^1.1.1"
 
+exec-sh@^0.2.0:
+  version "0.2.0"
+  resolved "https://registry.yarnpkg.com/exec-sh/-/exec-sh-0.2.0.tgz#14f75de3f20d286ef933099b2ce50a90359cef10"
+  dependencies:
+    merge "^1.1.3"
+
 exit-hook@^1.0.0:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/exit-hook/-/exit-hook-1.1.1.tgz#f05ca233b48c05d54fff07765df8507e95c02ff8"
 
-expand-braces@^0.1.1:
-  version "0.1.2"
-  resolved "https://registry.yarnpkg.com/expand-braces/-/expand-braces-0.1.2.tgz#488b1d1d2451cb3d3a6b192cfc030f44c5855fea"
-  dependencies:
-    array-slice "^0.2.3"
-    array-unique "^0.2.1"
-    braces "^0.1.2"
-
 expand-brackets@^0.1.4:
   version "0.1.5"
   resolved "https://registry.yarnpkg.com/expand-brackets/-/expand-brackets-0.1.5.tgz#df07284e342a807cd733ac5af72411e581d1177b"
   dependencies:
     is-posix-bracket "^0.1.0"
 
-expand-range@^0.1.0:
-  version "0.1.1"
-  resolved "https://registry.yarnpkg.com/expand-range/-/expand-range-0.1.1.tgz#4cb8eda0993ca56fa4f41fc42f3cbb4ccadff044"
-  dependencies:
-    is-number "^0.1.1"
-    repeat-string "^0.2.2"
-
 expand-range@^1.8.1:
   version "1.8.2"
   resolved "https://registry.yarnpkg.com/expand-range/-/expand-range-1.8.2.tgz#a299effd335fe2721ebae8e257ec79644fc85337"
   dependencies:
     fill-range "^2.1.0"
 
-extend@^3.0.0, extend@~3.0.0:
+extend@~3.0.0:
   version "3.0.0"
   resolved "https://registry.yarnpkg.com/extend/-/extend-3.0.0.tgz#5a474353b9f3353ddd8176dfd37b91c83a46f1d4"
 
@@ -2098,6 +1981,18 @@ fastparse@^1.1.1:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/fastparse/-/fastparse-1.1.1.tgz#d1e2643b38a94d7583b479060e6c4affc94071f8"
 
+fb-watchman@^1.8.0:
+  version "1.9.2"
+  resolved "https://registry.yarnpkg.com/fb-watchman/-/fb-watchman-1.9.2.tgz#a24cf47827f82d38fb59a69ad70b76e3b6ae7383"
+  dependencies:
+    bser "1.0.2"
+
+fb-watchman@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/fb-watchman/-/fb-watchman-2.0.0.tgz#54e9abf7dfa2f26cd9b1636c588c1afc05de5d58"
+  dependencies:
+    bser "^2.0.0"
+
 fbjs@0.1.0-alpha.10:
   version "0.1.0-alpha.10"
   resolved "https://registry.yarnpkg.com/fbjs/-/fbjs-0.1.0-alpha.10.tgz#46e457c09cbefb51fc752a3e030e7b67fcc384c8"
@@ -2148,6 +2043,13 @@ filename-regex@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/filename-regex/-/filename-regex-2.0.0.tgz#996e3e80479b98b9897f15a8a58b3d084e926775"
 
+fileset@^2.0.2:
+  version "2.0.3"
+  resolved "https://registry.yarnpkg.com/fileset/-/fileset-2.0.3.tgz#8e7548a96d3cc2327ee5e674168723a333bba2a0"
+  dependencies:
+    glob "^7.0.3"
+    minimatch "^3.0.3"
+
 fill-range@^2.1.0:
   version "2.2.3"
   resolved "https://registry.yarnpkg.com/fill-range/-/fill-range-2.2.3.tgz#50b77dfd7e469bc7492470963699fe7a8485a723"
@@ -2158,16 +2060,6 @@ fill-range@^2.1.0:
     repeat-element "^1.1.2"
     repeat-string "^1.5.2"
 
-finalhandler@0.5.0:
-  version "0.5.0"
-  resolved "https://registry.yarnpkg.com/finalhandler/-/finalhandler-0.5.0.tgz#e9508abece9b6dba871a6942a1d7911b91911ac7"
-  dependencies:
-    debug "~2.2.0"
-    escape-html "~1.0.3"
-    on-finished "~2.3.0"
-    statuses "~1.3.0"
-    unpipe "~1.0.0"
-
 find-cache-dir@^0.1.1:
   version "0.1.1"
   resolved "https://registry.yarnpkg.com/find-cache-dir/-/find-cache-dir-0.1.1.tgz#c8defae57c8a52a8a784f9e31c57c742e993a0b9"
@@ -2183,6 +2075,12 @@ find-up@^1.0.0:
     path-exists "^2.0.0"
     pinkie-promise "^2.0.0"
 
+find-up@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/find-up/-/find-up-2.1.0.tgz#45d1b7e506c717ddd482775a2b77920a3c0c57a7"
+  dependencies:
+    locate-path "^2.0.0"
+
 flat-cache@^1.2.1:
   version "1.2.1"
   resolved "https://registry.yarnpkg.com/flat-cache/-/flat-cache-1.2.1.tgz#6c837d6225a7de5659323740b36d5361f71691ff"
@@ -2337,15 +2235,7 @@ glob-parent@^2.0.0:
   dependencies:
     is-glob "^2.0.0"
 
-glob@3.2.3:
-  version "3.2.3"
-  resolved "https://registry.yarnpkg.com/glob/-/glob-3.2.3.tgz#e313eeb249c7affaa5c475286b0e115b59839467"
-  dependencies:
-    graceful-fs "~2.0.0"
-    inherits "2"
-    minimatch "~0.2.11"
-
-glob@7.1.1, glob@^7.0.0, glob@^7.0.3, glob@^7.0.5:
+glob@7.1.1, glob@^7.0.3, glob@^7.0.5:
   version "7.1.1"
   resolved "https://registry.yarnpkg.com/glob/-/glob-7.1.1.tgz#805211df04faaf1c63a3600306cdf5ade50b2ec8"
   dependencies:
@@ -2395,19 +2285,15 @@ graceful-fs@^4.1.2, graceful-fs@^4.1.6:
   version "4.1.9"
   resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-4.1.9.tgz#baacba37d19d11f9d146d3578bc99958c3787e29"
 
-graceful-fs@~2.0.0:
-  version "2.0.3"
-  resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-2.0.3.tgz#7cd2cdb228a4a3f36e95efa6cc142de7d1a136d0"
-
 "graceful-readlink@>= 1.0.0":
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/graceful-readlink/-/graceful-readlink-1.0.1.tgz#4cafad76bc62f02fa039b2f94e9a3dd3a391a725"
 
-growl@1.8.1:
-  version "1.8.1"
-  resolved "https://registry.yarnpkg.com/growl/-/growl-1.8.1.tgz#4b2dec8d907e93db336624dcec0183502f8c9428"
+growly@^1.3.0:
+  version "1.3.0"
+  resolved "https://registry.yarnpkg.com/growly/-/growly-1.3.0.tgz#f10748cbe76af964b7c96c93c6bcc28af120c081"
 
-handlebars@^4.0.0:
+handlebars@^4.0.0, handlebars@^4.0.3:
   version "4.0.5"
   resolved "https://registry.yarnpkg.com/handlebars/-/handlebars-4.0.5.tgz#92c6ed6bb164110c50d4d8d0fbddc70806c6f8e7"
   dependencies:
@@ -2432,26 +2318,10 @@ has-ansi@^2.0.0:
   dependencies:
     ansi-regex "^2.0.0"
 
-has-binary@0.1.6:
-  version "0.1.6"
-  resolved "https://registry.yarnpkg.com/has-binary/-/has-binary-0.1.6.tgz#25326f39cfa4f616ad8787894e3af2cfbc7b6e10"
-  dependencies:
-    isarray "0.0.1"
-
-has-binary@0.1.7:
-  version "0.1.7"
-  resolved "https://registry.yarnpkg.com/has-binary/-/has-binary-0.1.7.tgz#68e61eb16210c9545a0a5cce06a873912fe1e68c"
-  dependencies:
-    isarray "0.0.1"
-
 has-color@^0.1.7:
   version "0.1.7"
   resolved "https://registry.yarnpkg.com/has-color/-/has-color-0.1.7.tgz#67144a5260c34fc3cca677d041daf52fe7b78b2f"
 
-has-cors@1.1.0:
-  version "1.1.0"
-  resolved "https://registry.yarnpkg.com/has-cors/-/has-cors-1.1.0.tgz#5e474793f7ea9843d1bb99c23eef49ff126fff39"
-
 has-flag@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/has-flag/-/has-flag-1.0.0.tgz#9d9e793165ce017a00f00418c43f942a7b1d11fa"
@@ -2529,6 +2399,12 @@ html-comment-regex@^1.1.0:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/html-comment-regex/-/html-comment-regex-1.1.1.tgz#668b93776eaae55ebde8f3ad464b307a4963625e"
 
+html-encoding-sniffer@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/html-encoding-sniffer/-/html-encoding-sniffer-1.0.1.tgz#79bf7a785ea495fe66165e734153f363ff5437da"
+  dependencies:
+    whatwg-encoding "^1.0.1"
+
 htmlparser2@~3.8.1:
   version "3.8.3"
   resolved "https://registry.yarnpkg.com/htmlparser2/-/htmlparser2-3.8.3.tgz#996c28b191516a8be86501a7d79757e5c70c1068"
@@ -2546,21 +2422,6 @@ http-browserify@^1.3.2:
     Base64 "~0.2.0"
     inherits "~2.0.1"
 
-http-errors@~1.5.0:
-  version "1.5.0"
-  resolved "https://registry.yarnpkg.com/http-errors/-/http-errors-1.5.0.tgz#b1cb3d8260fd8e2386cad3189045943372d48211"
-  dependencies:
-    inherits "2.0.1"
-    setprototypeof "1.0.1"
-    statuses ">= 1.3.0 < 2"
-
-http-proxy@^1.13.0:
-  version "1.15.1"
-  resolved "https://registry.yarnpkg.com/http-proxy/-/http-proxy-1.15.1.tgz#91a6088172e79bc0e821d5eb04ce702f32446393"
-  dependencies:
-    eventemitter3 "1.x.x"
-    requires-port "1.x.x"
-
 http-signature@~1.1.0:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/http-signature/-/http-signature-1.1.1.tgz#df72e267066cd0ac67fb76adf8e134a8fbcf91bf"
@@ -2684,6 +2545,12 @@ is-callable@^1.1.1, is-callable@^1.1.3:
   version "1.1.3"
   resolved "https://registry.yarnpkg.com/is-callable/-/is-callable-1.1.3.tgz#86eb75392805ddc33af71c92a0eedf74ee7604b2"
 
+is-ci@^1.0.9:
+  version "1.0.10"
+  resolved "https://registry.yarnpkg.com/is-ci/-/is-ci-1.0.10.tgz#f739336b2632365061a9d48270cd56ae3369318e"
+  dependencies:
+    ci-info "^1.0.0"
+
 is-date-object@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/is-date-object/-/is-date-object-1.0.1.tgz#9aa20eb6aeebbff77fbd33e74ca01b33581d3a16"
@@ -2733,10 +2600,6 @@ is-my-json-valid@^2.10.0, is-my-json-valid@^2.12.4:
     jsonpointer "^4.0.0"
     xtend "^4.0.0"
 
-is-number@^0.1.1:
-  version "0.1.1"
-  resolved "https://registry.yarnpkg.com/is-number/-/is-number-0.1.1.tgz#69a7af116963d47206ec9bd9b48a14216f1e3806"
-
 is-number@^2.0.2, is-number@^2.1.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/is-number/-/is-number-2.1.0.tgz#01fcbbb393463a548f2f466cce16dece49db908f"
@@ -2819,10 +2682,6 @@ isarray@1.0.0, isarray@^1.0.0, isarray@~1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/isarray/-/isarray-1.0.0.tgz#bb935d48582cba168c06834957a54a3e07124f11"
 
-isbinaryfile@^3.0.0:
-  version "3.0.1"
-  resolved "https://registry.yarnpkg.com/isbinaryfile/-/isbinaryfile-3.0.1.tgz#6e99573675372e841a0520c036b41513d783e79e"
-
 isexe@^1.1.1:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/isexe/-/isexe-1.1.2.tgz#36f3e22e60750920f5e7241a476a8c6a42275ad0"
@@ -2844,17 +2703,169 @@ isstream@~0.1.2:
   version "0.1.2"
   resolved "https://registry.yarnpkg.com/isstream/-/isstream-0.1.2.tgz#47e63f7af55afa6f92e1500e690eb8b8529c099a"
 
-jade@0.26.3:
-  version "0.26.3"
-  resolved "https://registry.yarnpkg.com/jade/-/jade-0.26.3.tgz#8f10d7977d8d79f2f6ff862a81b0513ccb25686c"
+istanbul-api@^1.1.0-alpha.1:
+  version "1.1.7"
+  resolved "https://registry.yarnpkg.com/istanbul-api/-/istanbul-api-1.1.7.tgz#f6f37f09f8002b130f891c646b70ee4a8e7345ae"
+  dependencies:
+    async "^2.1.4"
+    fileset "^2.0.2"
+    istanbul-lib-coverage "^1.0.2"
+    istanbul-lib-hook "^1.0.5"
+    istanbul-lib-instrument "^1.7.0"
+    istanbul-lib-report "^1.0.0"
+    istanbul-lib-source-maps "^1.1.1"
+    istanbul-reports "^1.0.2"
+    js-yaml "^3.7.0"
+    mkdirp "^0.5.1"
+    once "^1.4.0"
+
+istanbul-lib-coverage@^1.0.0, istanbul-lib-coverage@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/istanbul-lib-coverage/-/istanbul-lib-coverage-1.0.2.tgz#87a0c015b6910651cb3b184814dfb339337e25e1"
+
+istanbul-lib-hook@^1.0.5:
+  version "1.0.5"
+  resolved "https://registry.yarnpkg.com/istanbul-lib-hook/-/istanbul-lib-hook-1.0.5.tgz#6ca3d16d60c5f4082da39f7c5cd38ea8a772b88e"
   dependencies:
-    commander "0.6.1"
-    mkdirp "0.3.0"
+    append-transform "^0.4.0"
+
+istanbul-lib-instrument@^1.1.1, istanbul-lib-instrument@^1.6.2, istanbul-lib-instrument@^1.7.0:
+  version "1.7.0"
+  resolved "https://registry.yarnpkg.com/istanbul-lib-instrument/-/istanbul-lib-instrument-1.7.0.tgz#b8e0dc25709bb44e17336ab47b7bb5c97c23f659"
+  dependencies:
+    babel-generator "^6.18.0"
+    babel-template "^6.16.0"
+    babel-traverse "^6.18.0"
+    babel-types "^6.18.0"
+    babylon "^6.13.0"
+    istanbul-lib-coverage "^1.0.2"
+    semver "^5.3.0"
+
+istanbul-lib-report@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/istanbul-lib-report/-/istanbul-lib-report-1.0.0.tgz#d83dac7f26566b521585569367fe84ccfc7aaecb"
+  dependencies:
+    istanbul-lib-coverage "^1.0.2"
+    mkdirp "^0.5.1"
+    path-parse "^1.0.5"
+    supports-color "^3.1.2"
+
+istanbul-lib-source-maps@^1.1.1:
+  version "1.1.1"
+  resolved "https://registry.yarnpkg.com/istanbul-lib-source-maps/-/istanbul-lib-source-maps-1.1.1.tgz#f8c8c2e8f2160d1d91526d97e5bd63b2079af71c"
+  dependencies:
+    istanbul-lib-coverage "^1.0.2"
+    mkdirp "^0.5.1"
+    rimraf "^2.4.4"
+    source-map "^0.5.3"
+
+istanbul-reports@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/istanbul-reports/-/istanbul-reports-1.0.2.tgz#4e8366abe6fa746cc1cd6633f108de12cc6ac6fa"
+  dependencies:
+    handlebars "^4.0.3"
 
 jed@^1.1.0:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/jed/-/jed-1.1.1.tgz#7a549bbd9ffe1585b0cd0a191e203055bee574b4"
 
+jest-changed-files@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-changed-files/-/jest-changed-files-19.0.2.tgz#16c54c84c3270be408e06d2e8af3f3e37a885824"
+
+jest-cli@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-cli/-/jest-cli-19.0.2.tgz#cc3620b62acac5f2d93a548cb6ef697d4ec85443"
+  dependencies:
+    ansi-escapes "^1.4.0"
+    callsites "^2.0.0"
+    chalk "^1.1.1"
+    graceful-fs "^4.1.6"
+    is-ci "^1.0.9"
+    istanbul-api "^1.1.0-alpha.1"
+    istanbul-lib-coverage "^1.0.0"
+    istanbul-lib-instrument "^1.1.1"
+    jest-changed-files "^19.0.2"
+    jest-config "^19.0.2"
+    jest-environment-jsdom "^19.0.2"
+    jest-haste-map "^19.0.0"
+    jest-jasmine2 "^19.0.2"
+    jest-message-util "^19.0.0"
+    jest-regex-util "^19.0.0"
+    jest-resolve-dependencies "^19.0.0"
+    jest-runtime "^19.0.2"
+    jest-snapshot "^19.0.2"
+    jest-util "^19.0.2"
+    micromatch "^2.3.11"
+    node-notifier "^5.0.1"
+    slash "^1.0.0"
+    string-length "^1.0.1"
+    throat "^3.0.0"
+    which "^1.1.1"
+    worker-farm "^1.3.1"
+    yargs "^6.3.0"
+
+jest-config@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-config/-/jest-config-19.0.2.tgz#1b9bd2db0ddd16df61c2b10a54009e1768da6411"
+  dependencies:
+    chalk "^1.1.1"
+    jest-environment-jsdom "^19.0.2"
+    jest-environment-node "^19.0.2"
+    jest-jasmine2 "^19.0.2"
+    jest-regex-util "^19.0.0"
+    jest-resolve "^19.0.2"
+    jest-validate "^19.0.2"
+    pretty-format "^19.0.0"
+
+jest-diff@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/jest-diff/-/jest-diff-19.0.0.tgz#d1563cfc56c8b60232988fbc05d4d16ed90f063c"
+  dependencies:
+    chalk "^1.1.3"
+    diff "^3.0.0"
+    jest-matcher-utils "^19.0.0"
+    pretty-format "^19.0.0"
+
+jest-environment-jsdom@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-environment-jsdom/-/jest-environment-jsdom-19.0.2.tgz#ceda859c4a4b94ab35e4de7dab54b926f293e4a3"
+  dependencies:
+    jest-mock "^19.0.0"
+    jest-util "^19.0.2"
+    jsdom "^9.11.0"
+
+jest-environment-node@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-environment-node/-/jest-environment-node-19.0.2.tgz#6e84079db87ed21d0c05e1f9669f207b116fe99b"
+  dependencies:
+    jest-mock "^19.0.0"
+    jest-util "^19.0.2"
+
+jest-file-exists@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/jest-file-exists/-/jest-file-exists-19.0.0.tgz#cca2e587a11ec92e24cfeab3f8a94d657f3fceb8"
+
+jest-haste-map@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/jest-haste-map/-/jest-haste-map-19.0.0.tgz#adde00b62b1fe04432a104b3254fc5004514b55e"
+  dependencies:
+    fb-watchman "^2.0.0"
+    graceful-fs "^4.1.6"
+    micromatch "^2.3.11"
+    sane "~1.5.0"
+    worker-farm "^1.3.1"
+
+jest-jasmine2@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-jasmine2/-/jest-jasmine2-19.0.2.tgz#167991ac825981fb1a800af126e83afcca832c73"
+  dependencies:
+    graceful-fs "^4.1.6"
+    jest-matcher-utils "^19.0.0"
+    jest-matchers "^19.0.0"
+    jest-message-util "^19.0.0"
+    jest-snapshot "^19.0.2"
+
 jest-matcher-utils@^19.0.0:
   version "19.0.0"
   resolved "https://registry.yarnpkg.com/jest-matcher-utils/-/jest-matcher-utils-19.0.0.tgz#5ecd9b63565d2b001f61fbf7ec4c7f537964564d"
@@ -2862,6 +2873,89 @@ jest-matcher-utils@^19.0.0:
     chalk "^1.1.3"
     pretty-format "^19.0.0"
 
+jest-matchers@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/jest-matchers/-/jest-matchers-19.0.0.tgz#c74ecc6ebfec06f384767ba4d6fa4a42d6755754"
+  dependencies:
+    jest-diff "^19.0.0"
+    jest-matcher-utils "^19.0.0"
+    jest-message-util "^19.0.0"
+    jest-regex-util "^19.0.0"
+
+jest-message-util@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/jest-message-util/-/jest-message-util-19.0.0.tgz#721796b89c0e4d761606f9ba8cb828a3b6246416"
+  dependencies:
+    chalk "^1.1.1"
+    micromatch "^2.3.11"
+
+jest-mock@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/jest-mock/-/jest-mock-19.0.0.tgz#67038641e9607ab2ce08ec4a8cb83aabbc899d01"
+
+jest-regex-util@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/jest-regex-util/-/jest-regex-util-19.0.0.tgz#b7754587112aede1456510bb1f6afe74ef598691"
+
+jest-resolve-dependencies@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.yarnpkg.com/jest-resolve-dependencies/-/jest-resolve-dependencies-19.0.0.tgz#a741ad1fa094140e64ecf2642a504f834ece22ee"
+  dependencies:
+    jest-file-exists "^19.0.0"
+
+jest-resolve@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-resolve/-/jest-resolve-19.0.2.tgz#5793575de4f07aec32f7d7ff0c6c181963eefb3c"
+  dependencies:
+    browser-resolve "^1.11.2"
+    jest-haste-map "^19.0.0"
+    resolve "^1.2.0"
+
+jest-runtime@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-runtime/-/jest-runtime-19.0.2.tgz#d9a43e72de416d27d196fd9c7940d98fe6685407"
+  dependencies:
+    babel-core "^6.0.0"
+    babel-jest "^19.0.0"
+    babel-plugin-istanbul "^4.0.0"
+    chalk "^1.1.3"
+    graceful-fs "^4.1.6"
+    jest-config "^19.0.2"
+    jest-file-exists "^19.0.0"
+    jest-haste-map "^19.0.0"
+    jest-regex-util "^19.0.0"
+    jest-resolve "^19.0.2"
+    jest-util "^19.0.2"
+    json-stable-stringify "^1.0.1"
+    micromatch "^2.3.11"
+    strip-bom "3.0.0"
+    yargs "^6.3.0"
+
+jest-snapshot@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-snapshot/-/jest-snapshot-19.0.2.tgz#9c1b216214f7187c38bfd5c70b1efab16b0ff50b"
+  dependencies:
+    chalk "^1.1.3"
+    jest-diff "^19.0.0"
+    jest-file-exists "^19.0.0"
+    jest-matcher-utils "^19.0.0"
+    jest-util "^19.0.2"
+    natural-compare "^1.4.0"
+    pretty-format "^19.0.0"
+
+jest-util@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-util/-/jest-util-19.0.2.tgz#e0a0232a2ab9e6b2b53668bdb3534c2b5977ed41"
+  dependencies:
+    chalk "^1.1.1"
+    graceful-fs "^4.1.6"
+    jest-file-exists "^19.0.0"
+    jest-message-util "^19.0.0"
+    jest-mock "^19.0.0"
+    jest-validate "^19.0.2"
+    leven "^2.0.0"
+    mkdirp "^0.5.1"
+
 jest-validate@19.0.0:
   version "19.0.0"
   resolved "https://registry.yarnpkg.com/jest-validate/-/jest-validate-19.0.0.tgz#8c6318a20ecfeaba0ba5378bfbb8277abded4173"
@@ -2871,6 +2965,21 @@ jest-validate@19.0.0:
     leven "^2.0.0"
     pretty-format "^19.0.0"
 
+jest-validate@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest-validate/-/jest-validate-19.0.2.tgz#dc534df5f1278d5b63df32b14241d4dbf7244c0c"
+  dependencies:
+    chalk "^1.1.1"
+    jest-matcher-utils "^19.0.0"
+    leven "^2.0.0"
+    pretty-format "^19.0.0"
+
+jest@^19.0.2:
+  version "19.0.2"
+  resolved "https://registry.yarnpkg.com/jest/-/jest-19.0.2.tgz#b794faaf8ff461e7388f28beef559a54f20b2c10"
+  dependencies:
+    jest-cli "^19.0.2"
+
 jodid25519@^1.0.0:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/jodid25519/-/jodid25519-1.0.2.tgz#06d4912255093419477d425633606e0e90782967"
@@ -2908,6 +3017,13 @@ js-yaml@^3.2.5, js-yaml@~3.6.1:
     argparse "^1.0.7"
     esprima "^2.6.0"
 
+js-yaml@^3.7.0:
+  version "3.8.3"
+  resolved "https://registry.yarnpkg.com/js-yaml/-/js-yaml-3.8.3.tgz#33a05ec481c850c8875929166fe1beb61c728766"
+  dependencies:
+    argparse "^1.0.7"
+    esprima "^3.1.1"
+
 jsbn@~0.1.0:
   version "0.1.0"
   resolved "https://registry.yarnpkg.com/jsbn/-/jsbn-0.1.0.tgz#650987da0dd74f4ebf5a11377a2aa2d273e97dfd"
@@ -2932,6 +3048,30 @@ jsdom@^7.0.2:
     whatwg-url-compat "~0.6.5"
     xml-name-validator ">= 2.0.1 < 3.0.0"
 
+jsdom@^9.11.0:
+  version "9.12.0"
+  resolved "https://registry.yarnpkg.com/jsdom/-/jsdom-9.12.0.tgz#e8c546fffcb06c00d4833ca84410fed7f8a097d4"
+  dependencies:
+    abab "^1.0.3"
+    acorn "^4.0.4"
+    acorn-globals "^3.1.0"
+    array-equal "^1.0.0"
+    content-type-parser "^1.0.1"
+    cssom ">= 0.3.2 < 0.4.0"
+    cssstyle ">= 0.2.37 < 0.3.0"
+    escodegen "^1.6.1"
+    html-encoding-sniffer "^1.0.1"
+    nwmatcher ">= 1.3.9 < 2.0.0"
+    parse5 "^1.5.1"
+    request "^2.79.0"
+    sax "^1.2.1"
+    symbol-tree "^3.2.1"
+    tough-cookie "^2.3.2"
+    webidl-conversions "^4.0.0"
+    whatwg-encoding "^1.0.1"
+    whatwg-url "^4.3.0"
+    xml-name-validator "^2.0.1"
+
 jsesc@^1.3.0:
   version "1.3.0"
   resolved "https://registry.yarnpkg.com/jsesc/-/jsesc-1.3.0.tgz#46c3fec8c1892b12b0833db9bc7622176dbab34b"
@@ -2962,14 +3102,6 @@ json-stringify-safe@~5.0.1:
   version "5.0.1"
   resolved "https://registry.yarnpkg.com/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz#1296a2d58fd45f19a0f6ce01d65701e2c735b6eb"
 
-json3@3.2.6:
-  version "3.2.6"
-  resolved "https://registry.yarnpkg.com/json3/-/json3-3.2.6.tgz#f6efc93c06a04de9aec53053df2559bb19e2038b"
-
-json3@3.3.2:
-  version "3.3.2"
-  resolved "https://registry.yarnpkg.com/json3/-/json3-3.3.2.tgz#3c0434743df93e2f5c42aee7b19bcb483575f4e1"
-
 json5@^0.5.0:
   version "0.5.0"
   resolved "https://registry.yarnpkg.com/json5/-/json5-0.5.0.tgz#9b20715b026cbe3778fd769edccd822d8332a5b2"
@@ -2996,25 +3128,6 @@ jsprim@^1.2.2:
     json-schema "0.2.3"
     verror "1.3.6"
 
-karma-chai@0.1.0:
-  version "0.1.0"
-  resolved "https://registry.yarnpkg.com/karma-chai/-/karma-chai-0.1.0.tgz#bee5ad40400517811ae34bb945f762909108b79a"
-
-karma-mocha@0.1.10:
-  version "0.1.10"
-  resolved "https://registry.yarnpkg.com/karma-mocha/-/karma-mocha-0.1.10.tgz#29ed51d4b121af1373444ec555b20a905bf42b92"
-
-karma-phantomjs-launcher@1.0.2:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/karma-phantomjs-launcher/-/karma-phantomjs-launcher-1.0.2.tgz#19e1041498fd75563ed86730a22c1fe579fa8fb1"
-  dependencies:
-    lodash "^4.0.1"
-    phantomjs-prebuilt "^2.1.7"
-
-karma-sinon@1.0.4:
-  version "1.0.4"
-  resolved "https://registry.yarnpkg.com/karma-sinon/-/karma-sinon-1.0.4.tgz#2ede83f294e2f639e767e01e228d467cade0d444"
-
 karma-sourcemap-loader@0.3.7:
   version "0.3.7"
   resolved "https://registry.yarnpkg.com/karma-sourcemap-loader/-/karma-sourcemap-loader-0.3.7.tgz#91322c77f8f13d46fed062b042e1009d4c4505d8"
@@ -3031,34 +3144,6 @@ karma-webpack@2.0.1:
     source-map "^0.1.41"
     webpack-dev-middleware "^1.0.11"
 
-karma@0.13.22:
-  version "0.13.22"
-  resolved "https://registry.yarnpkg.com/karma/-/karma-0.13.22.tgz#07750b1bd063d7e7e7b91bcd2e6354d8f2aa8744"
-  dependencies:
-    batch "^0.5.3"
-    bluebird "^2.9.27"
-    body-parser "^1.12.4"
-    chokidar "^1.4.1"
-    colors "^1.1.0"
-    connect "^3.3.5"
-    core-js "^2.1.0"
-    di "^0.0.1"
-    dom-serialize "^2.2.0"
-    expand-braces "^0.1.1"
-    glob "^7.0.0"
-    graceful-fs "^4.1.2"
-    http-proxy "^1.13.0"
-    isbinaryfile "^3.0.0"
-    lodash "^3.8.0"
-    log4js "^0.6.31"
-    mime "^1.3.4"
-    minimatch "^3.0.0"
-    optimist "^0.6.1"
-    rimraf "^2.3.3"
-    socket.io "^1.4.5"
-    source-map "^0.5.3"
-    useragent "^2.1.6"
-
 kew@~0.7.0:
   version "0.7.0"
   resolved "https://registry.yarnpkg.com/kew/-/kew-0.7.0.tgz#79d93d2d33363d6fdd2970b335d9141ad591d79b"
@@ -3147,6 +3232,13 @@ loader-utils@0.2.x, loader-utils@^0.2.11, loader-utils@^0.2.16, loader-utils@^0.
     json5 "^0.5.0"
     object-assign "^4.0.1"
 
+locate-path@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/locate-path/-/locate-path-2.0.0.tgz#2b568b265eec944c6d9c0de9c3dbbbca0354cd8e"
+  dependencies:
+    p-locate "^2.0.0"
+    path-exists "^3.0.0"
+
 lodash-compat@^3.10.2:
   version "3.10.2"
   resolved "https://registry.yarnpkg.com/lodash-compat/-/lodash-compat-3.10.2.tgz#c6940128a9d30f8e902cd2cf99fd0cba4ecfc183"
@@ -3363,17 +3455,10 @@ lodash@^3.3.1, lodash@^3.8.0:
   version "3.10.1"
   resolved "https://registry.yarnpkg.com/lodash/-/lodash-3.10.1.tgz#5bf45e8e49ba4189e17d482789dfd15bd140b7b6"
 
-lodash@^4.0.1, lodash@^4.1.0, lodash@^4.13.1, lodash@^4.14.0, lodash@^4.2.0:
+lodash@^4.1.0, lodash@^4.13.1, lodash@^4.14.0, lodash@^4.2.0:
   version "4.16.4"
   resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.16.4.tgz#01ce306b9bad1319f2a5528674f88297aeb70127"
 
-log4js@^0.6.31:
-  version "0.6.38"
-  resolved "https://registry.yarnpkg.com/log4js/-/log4js-0.6.38.tgz#2c494116695d6fb25480943d3fc872e662a522fd"
-  dependencies:
-    readable-stream "~1.0.2"
-    semver "~4.3.3"
-
 lolex@1.3.2:
   version "1.3.2"
   resolved "https://registry.yarnpkg.com/lolex/-/lolex-1.3.2.tgz#7c3da62ffcb30f0f5a80a2566ca24e45d8a01f31"
@@ -3388,14 +3473,16 @@ loose-envify@^1.0.0, loose-envify@^1.1.0, loose-envify@^1.2.0:
   dependencies:
     js-tokens "^1.0.1"
 
-lru-cache@2, lru-cache@2.2.x:
-  version "2.2.4"
-  resolved "https://registry.yarnpkg.com/lru-cache/-/lru-cache-2.2.4.tgz#6c658619becf14031d0d0b594b16042ce4dc063d"
-
 macaddress@^0.2.8:
   version "0.2.8"
   resolved "https://registry.yarnpkg.com/macaddress/-/macaddress-0.2.8.tgz#5904dc537c39ec6dbefeae902327135fa8511f12"
 
+makeerror@1.0.x:
+  version "1.0.11"
+  resolved "https://registry.yarnpkg.com/makeerror/-/makeerror-1.0.11.tgz#e01a5c9109f2af79660e4e8b9587790184f5a96c"
+  dependencies:
+    tmpl "1.0.x"
+
 marked@0.3.5:
   version "0.3.5"
   resolved "https://registry.yarnpkg.com/marked/-/marked-0.3.5.tgz#4113a15ac5d7bca158a5aae07224587b9fa15b94"
@@ -3406,10 +3493,6 @@ math-expression-evaluator@^1.2.14:
   dependencies:
     lodash.indexof "^4.0.5"
 
-media-typer@0.3.0:
-  version "0.3.0"
-  resolved "https://registry.yarnpkg.com/media-typer/-/media-typer-0.3.0.tgz#8710d7af0aa626f8fffa1ce00168545263255748"
-
 memory-fs@^0.4.0, memory-fs@~0.4.1:
   version "0.4.1"
   resolved "https://registry.yarnpkg.com/memory-fs/-/memory-fs-0.4.1.tgz#3a9a20b8462523e447cfbc7e8bb80ed667bfc552"
@@ -3417,7 +3500,11 @@ memory-fs@^0.4.0, memory-fs@~0.4.1:
     errno "^0.1.3"
     readable-stream "^2.0.1"
 
-micromatch@^2.1.5:
+merge@^1.1.3:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/merge/-/merge-1.2.0.tgz#7531e39d4949c281a66b8c5a6e0265e8b05894da"
+
+micromatch@^2.1.5, micromatch@^2.3.11:
   version "2.3.11"
   resolved "https://registry.yarnpkg.com/micromatch/-/micromatch-2.3.11.tgz#86677c97d1720b363431d04d0d15293bd38c1565"
   dependencies:
@@ -3446,7 +3533,7 @@ mime-db@~1.24.0:
   version "1.24.0"
   resolved "https://registry.yarnpkg.com/mime-db/-/mime-db-1.24.0.tgz#e2d13f939f0016c6e4e9ad25a8652f126c467f0c"
 
-mime-types@^2.1.11, mime-types@^2.1.12, mime-types@~2.1.11, mime-types@~2.1.7:
+mime-types@^2.1.11, mime-types@^2.1.12, mime-types@~2.1.7:
   version "2.1.12"
   resolved "https://registry.yarnpkg.com/mime-types/-/mime-types-2.1.12.tgz#152ba256777020dd4663f54c2e7bc26381e71729"
   dependencies:
@@ -3464,31 +3551,20 @@ minimalistic-assert@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/minimalistic-assert/-/minimalistic-assert-1.0.0.tgz#702be2dda6b37f4836bcb3f5db56641b64a1d3d3"
 
-"minimatch@2 || 3", minimatch@^3.0.0, minimatch@^3.0.2:
+"minimatch@2 || 3", minimatch@^3.0.0, minimatch@^3.0.2, minimatch@^3.0.3:
   version "3.0.3"
   resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.3.tgz#2a4e4090b96b2db06a9d7df01055a62a77c9b774"
   dependencies:
     brace-expansion "^1.0.0"
 
-minimatch@~0.2.11:
-  version "0.2.14"
-  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-0.2.14.tgz#c74e780574f63c6f9a090e90efbe6ef53a6a756a"
-  dependencies:
-    lru-cache "2"
-    sigmund "~1.0.0"
-
 minimist@0.0.8, minimist@~0.0.1:
   version "0.0.8"
   resolved "https://registry.yarnpkg.com/minimist/-/minimist-0.0.8.tgz#857fcabfc3397d2625b8228262e86aa7a011b05d"
 
-minimist@1.2.0, minimist@^1.2.0:
+minimist@1.2.0, minimist@^1.1.1, minimist@^1.2.0:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/minimist/-/minimist-1.2.0.tgz#a35008b20f41383eec1fb914f4cd5df79a264284"
 
-mkdirp@0.3.0:
-  version "0.3.0"
-  resolved "https://registry.yarnpkg.com/mkdirp/-/mkdirp-0.3.0.tgz#1bbf5ab1ba827af23575143490426455f481fe1e"
-
 mkdirp@0.5.0:
   version "0.5.0"
   resolved "https://registry.yarnpkg.com/mkdirp/-/mkdirp-0.5.0.tgz#1d73076a6df986cd9344e15e71fcc05a4c9abf12"
@@ -3501,20 +3577,6 @@ mkdirp@0.5.0:
   dependencies:
     minimist "0.0.8"
 
-mocha@2.3.4:
-  version "2.3.4"
-  resolved "https://registry.yarnpkg.com/mocha/-/mocha-2.3.4.tgz#8629a6fb044f2d225aa4b81a2ae2d001699eb266"
-  dependencies:
-    commander "2.3.0"
-    debug "2.2.0"
-    diff "1.4.0"
-    escape-string-regexp "1.0.2"
-    glob "3.2.3"
-    growl "1.8.1"
-    jade "0.26.3"
-    mkdirp "0.5.0"
-    supports-color "1.2.0"
-
 moment-timezone@0.4.1:
   version "0.4.1"
   resolved "https://registry.yarnpkg.com/moment-timezone/-/moment-timezone-0.4.1.tgz#81f598c3ad5e22cdad796b67ecd8d88d0f5baa06"
@@ -3541,9 +3603,9 @@ natives@^1.1.0:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/natives/-/natives-1.1.0.tgz#e9ff841418a6b2ec7a495e939984f78f163e6e31"
 
-negotiator@0.6.1:
-  version "0.6.1"
-  resolved "https://registry.yarnpkg.com/negotiator/-/negotiator-0.6.1.tgz#2b327184e8992101177b28563fb5e7102acd0ca9"
+natural-compare@^1.4.0:
+  version "1.4.0"
+  resolved "https://registry.yarnpkg.com/natural-compare/-/natural-compare-1.4.0.tgz#4abebfeed7541f2c27acfb29bdbbd15c8d5ba4f7"
 
 node-fetch@^1.0.1:
   version "1.6.3"
@@ -3552,6 +3614,10 @@ node-fetch@^1.0.1:
     encoding "^0.1.11"
     is-stream "^1.0.1"
 
+node-int64@^0.4.0:
+  version "0.4.0"
+  resolved "https://registry.yarnpkg.com/node-int64/-/node-int64-0.4.0.tgz#87a9065cdb355d3182d8f94ce11188b825c68a3b"
+
 node-libs-browser@0.5.3:
   version "0.5.3"
   resolved "https://registry.yarnpkg.com/node-libs-browser/-/node-libs-browser-0.5.3.tgz#55efa888ec907acdb8cffc4e7a51712780e13b6a"
@@ -3608,6 +3674,15 @@ node-libs-browser@^2.0.0:
     util "^0.10.3"
     vm-browserify "0.0.4"
 
+node-notifier@^5.0.1:
+  version "5.1.2"
+  resolved "https://registry.yarnpkg.com/node-notifier/-/node-notifier-5.1.2.tgz#2fa9e12605fa10009d44549d6fcd8a63dde0e4ff"
+  dependencies:
+    growly "^1.3.0"
+    semver "^5.3.0"
+    shellwords "^0.1.0"
+    which "^1.2.12"
+
 node-pre-gyp@^0.6.29, node-pre-gyp@^0.6.4:
   version "0.6.30"
   resolved "https://registry.yarnpkg.com/node-pre-gyp/-/node-pre-gyp-0.6.30.tgz#64d3073a6f573003717ccfe30c89023297babba1"
@@ -3694,6 +3769,10 @@ number-is-nan@^1.0.0:
   version "1.3.8"
   resolved "https://registry.yarnpkg.com/nwmatcher/-/nwmatcher-1.3.8.tgz#34edb93de1aa6cb4448b573c9f2a059300241157"
 
+"nwmatcher@>= 1.3.9 < 2.0.0":
+  version "1.3.9"
+  resolved "https://registry.yarnpkg.com/nwmatcher/-/nwmatcher-1.3.9.tgz#8bab486ff7fa3dfd086656bbe8b17116d3692d2a"
+
 oauth-sign@~0.8.1:
   version "0.8.2"
   resolved "https://registry.yarnpkg.com/oauth-sign/-/oauth-sign-0.8.2.tgz#46a6ab7f0aead8deae9ec0565780b7d4efeb9d43"
@@ -3702,10 +3781,6 @@ object-assign@^4.0.1, object-assign@^4.1.0:
   version "4.1.0"
   resolved "https://registry.yarnpkg.com/object-assign/-/object-assign-4.1.0.tgz#7a3b3d0e98063d43f4c03f2e8ae6cd51a86883a0"
 
-object-component@0.0.3:
-  version "0.0.3"
-  resolved "https://registry.yarnpkg.com/object-component/-/object-component-0.0.3.tgz#f0c69aa50efc95b866c186f400a33769cb2f1291"
-
 object-is@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/object-is/-/object-is-1.0.1.tgz#0aa60ec9989a0b3ed795cf4d06f62cf1ad6539b6"
@@ -3738,13 +3813,7 @@ object.values@^1.0.3:
     function-bind "^1.0.2"
     has "^1.0.1"
 
-on-finished@~2.3.0:
-  version "2.3.0"
-  resolved "https://registry.yarnpkg.com/on-finished/-/on-finished-2.3.0.tgz#20f1336481b083cd75337992a16971aa2d906947"
-  dependencies:
-    ee-first "1.1.1"
-
-once@^1.3.0:
+once@^1.3.0, once@^1.4.0:
   version "1.4.0"
   resolved "https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1"
   dependencies:
@@ -3789,10 +3858,6 @@ optionator@^0.8.1:
     type-check "~0.3.2"
     wordwrap "~1.0.0"
 
-options@>=0.0.5:
-  version "0.0.6"
-  resolved "https://registry.yarnpkg.com/options/-/options-0.0.6.tgz#ec22d312806bb53e731773e7cdaefcf1c643128f"
-
 os-browserify@^0.2.0:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/os-browserify/-/os-browserify-0.2.1.tgz#63fc4ccee5d2d7763d26bbf8601078e6c2e0044f"
@@ -3815,6 +3880,16 @@ os-tmpdir@^1.0.1:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/os-tmpdir/-/os-tmpdir-1.0.2.tgz#bbe67406c79aa85c5cfec766fe5734555dfa1274"
 
+p-limit@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.yarnpkg.com/p-limit/-/p-limit-1.1.0.tgz#b07ff2d9a5d88bec806035895a2bab66a27988bc"
+
+p-locate@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/p-locate/-/p-locate-2.0.0.tgz#20a0103b222a70c8fd39cc2e580680f3dde5ec43"
+  dependencies:
+    p-limit "^1.1.0"
+
 pako@~0.2.0:
   version "0.2.9"
   resolved "https://registry.yarnpkg.com/pako/-/pako-0.2.9.tgz#f3f7522f4ef782348da8161bad9ecfd51bf83a75"
@@ -3848,28 +3923,6 @@ parse5@^1.5.1:
   version "1.5.1"
   resolved "https://registry.yarnpkg.com/parse5/-/parse5-1.5.1.tgz#9b7f3b0de32be78dc2401b17573ccaf0f6f59d94"
 
-parsejson@0.0.1:
-  version "0.0.1"
-  resolved "https://registry.yarnpkg.com/parsejson/-/parsejson-0.0.1.tgz#9b10c6c0d825ab589e685153826de0a3ba278bcc"
-  dependencies:
-    better-assert "~1.0.0"
-
-parseqs@0.0.2:
-  version "0.0.2"
-  resolved "https://registry.yarnpkg.com/parseqs/-/parseqs-0.0.2.tgz#9dfe70b2cddac388bde4f35b1f240fa58adbe6c7"
-  dependencies:
-    better-assert "~1.0.0"
-
-parseuri@0.0.4:
-  version "0.0.4"
-  resolved "https://registry.yarnpkg.com/parseuri/-/parseuri-0.0.4.tgz#806582a39887e1ea18dd5e2fe0e01902268e9350"
-  dependencies:
-    better-assert "~1.0.0"
-
-parseurl@~1.3.1:
-  version "1.3.1"
-  resolved "https://registry.yarnpkg.com/parseurl/-/parseurl-1.3.1.tgz#c8ab8c9223ba34888aa64a297b28853bec18da56"
-
 path-browserify@0.0.0:
   version "0.0.0"
   resolved "https://registry.yarnpkg.com/path-browserify/-/path-browserify-0.0.0.tgz#a0b870729aae214005b7d5032ec2cbbb0fb4451a"
@@ -3880,6 +3933,10 @@ path-exists@^2.0.0:
   dependencies:
     pinkie-promise "^2.0.0"
 
+path-exists@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/path-exists/-/path-exists-3.0.0.tgz#ce0ebeaa5f78cb18925ea7d810d7b59b010fd515"
+
 path-is-absolute@^1.0.0:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f"
@@ -3888,6 +3945,10 @@ path-is-inside@^1.0.1:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/path-is-inside/-/path-is-inside-1.0.2.tgz#365417dede44430d1c11af61027facf074bdfc53"
 
+path-parse@^1.0.5:
+  version "1.0.5"
+  resolved "https://registry.yarnpkg.com/path-parse/-/path-parse-1.0.5.tgz#3c1adf871ea9cd6c9431b6ea2bd74a0ff055c4c1"
+
 path-type@^1.0.0:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/path-type/-/path-type-1.1.0.tgz#59c44f7ee491da704da415da5a4070ba4f8fe441"
@@ -3910,7 +3971,7 @@ pend@~1.2.0:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/pend/-/pend-1.2.0.tgz#7a57eb550a6783f9115331fcf4663d5c8e007a50"
 
-phantomjs-prebuilt@2.1.14, phantomjs-prebuilt@^2.1.7:
+phantomjs-prebuilt@2.1.14:
   version "2.1.14"
   resolved "https://registry.yarnpkg.com/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.14.tgz#d53d311fcfb7d1d08ddb24014558f1188c516da0"
   dependencies:
@@ -4267,7 +4328,7 @@ punycode@1.3.2:
   version "1.3.2"
   resolved "https://registry.yarnpkg.com/punycode/-/punycode-1.3.2.tgz#9653a036fb7c1ee42342f2325cceefea3926c48d"
 
-punycode@^1.2.4:
+punycode@^1.2.4, punycode@^1.4.1:
   version "1.4.1"
   resolved "https://registry.yarnpkg.com/punycode/-/punycode-1.4.1.tgz#c0d5a63b2718800ad8e1eb0fa5269c84dd41845e"
 
@@ -4275,10 +4336,6 @@ q@^1.1.2:
   version "1.4.1"
   resolved "https://registry.yarnpkg.com/q/-/q-1.4.1.tgz#55705bcd93c5f3673530c2c2cbc0c2b3addc286e"
 
-qs@6.2.0:
-  version "6.2.0"
-  resolved "https://registry.yarnpkg.com/qs/-/qs-6.2.0.tgz#3b7848c03c2dece69a9522b0fae8c4126d745f3b"
-
 qs@^4.0.0:
   version "4.0.0"
   resolved "https://registry.yarnpkg.com/qs/-/qs-4.0.0.tgz#c31d9b74ec27df75e543a86c78728ed8d4623607"
@@ -4337,14 +4394,6 @@ raven-js@3.14.1:
   version "3.14.1"
   resolved "https://registry.yarnpkg.com/raven-js/-/raven-js-3.14.1.tgz#9c3c5f570a1b918b5c30c5fad66982e17fe38e39"
 
-raw-body@~2.1.7:
-  version "2.1.7"
-  resolved "https://registry.yarnpkg.com/raw-body/-/raw-body-2.1.7.tgz#adfeace2e4fb3098058014d08c072dcc59758774"
-  dependencies:
-    bytes "2.4.0"
-    iconv-lite "0.4.13"
-    unpipe "1.0.0"
-
 rc@~1.1.0:
   version "1.1.6"
   resolved "https://registry.yarnpkg.com/rc/-/rc-1.1.6.tgz#43651b76b6ae53b5c802f1151fa3fc3b059969c9"
@@ -4508,15 +4557,6 @@ readable-stream@1.1, readable-stream@^1.0.27-1, readable-stream@^1.1.13:
     string_decoder "~0.10.x"
     util-deprecate "~1.0.1"
 
-readable-stream@~1.0.2:
-  version "1.0.34"
-  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-1.0.34.tgz#125820e34bc842d2f2aaafafe4c2916ee32c157c"
-  dependencies:
-    core-util-is "~1.0.0"
-    inherits "~2.0.1"
-    isarray "0.0.1"
-    string_decoder "~0.10.x"
-
 readable-stream@~2.0.0, readable-stream@~2.0.5:
   version "2.0.6"
   resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-2.0.6.tgz#8f90341e68a53ccc928788dacfcd11b36eb9b78e"
@@ -4617,10 +4657,6 @@ repeat-element@^1.1.2:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/repeat-element/-/repeat-element-1.1.2.tgz#ef089a178d1483baae4d93eb98b4f9e4e11d990a"
 
-repeat-string@^0.2.2:
-  version "0.2.2"
-  resolved "https://registry.yarnpkg.com/repeat-string/-/repeat-string-0.2.2.tgz#c7a8d3236068362059a7e4651fc6884e8b1fb4ae"
-
 repeat-string@^1.5.2:
   version "1.5.4"
   resolved "https://registry.yarnpkg.com/repeat-string/-/repeat-string-1.5.4.tgz#64ec0c91e0f4b475f90d5b643651e3e6e5b6c2d5"
@@ -4637,7 +4673,7 @@ request-progress@~2.0.1:
   dependencies:
     throttleit "^1.0.0"
 
-request@2.x, request@^2.55.0, request@~2.79.0:
+request@2.x, request@^2.55.0, request@^2.79.0, request@~2.79.0:
   version "2.79.0"
   resolved "https://registry.yarnpkg.com/request/-/request-2.79.0.tgz#4dfe5bf6be8b8cdc37fcf93e04b65577722710de"
   dependencies:
@@ -4696,9 +4732,15 @@ require-main-filename@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/require-main-filename/-/require-main-filename-1.0.1.tgz#97f717b69d48784f5f526a6c5aa8ffdda055a4d1"
 
-requires-port@1.x.x:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/requires-port/-/requires-port-1.0.0.tgz#925d2601d39ac485e091cf0da5c6e694dc3dcaff"
+resolve@1.1.7:
+  version "1.1.7"
+  resolved "https://registry.yarnpkg.com/resolve/-/resolve-1.1.7.tgz#203114d82ad2c5ed9e8e0411b3932875e889e97b"
+
+resolve@^1.2.0:
+  version "1.3.2"
+  resolved "https://registry.yarnpkg.com/resolve/-/resolve-1.3.2.tgz#1f0442c9e0cbb8136e87b9305f932f46c7f28235"
+  dependencies:
+    path-parse "^1.0.5"
 
 restore-cursor@^1.0.1:
   version "1.0.1"
@@ -4713,7 +4755,7 @@ right-align@^0.1.1:
   dependencies:
     align-text "^0.1.1"
 
-rimraf@2, rimraf@^2.2.8, rimraf@^2.3.3, rimraf@~2.5.0, rimraf@~2.5.1:
+rimraf@2, rimraf@^2.2.8, rimraf@^2.4.4, rimraf@~2.5.0, rimraf@~2.5.1:
   version "2.5.4"
   resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-2.5.4.tgz#96800093cbf1a0c86bd95b4625467535c29dfa04"
   dependencies:
@@ -4741,7 +4783,19 @@ samsam@1.1.2, samsam@~1.1:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/samsam/-/samsam-1.1.2.tgz#bec11fdc83a9fda063401210e40176c3024d1567"
 
-sax@^1.1.4, sax@~1.2.1:
+sane@~1.5.0:
+  version "1.5.0"
+  resolved "https://registry.yarnpkg.com/sane/-/sane-1.5.0.tgz#a4adeae764d048621ecb27d5f9ecf513101939f3"
+  dependencies:
+    anymatch "^1.3.0"
+    exec-sh "^0.2.0"
+    fb-watchman "^1.8.0"
+    minimatch "^3.0.2"
+    minimist "^1.1.1"
+    walker "~1.0.5"
+    watch "~0.10.0"
+
+sax@^1.1.4, sax@^1.2.1, sax@~1.2.1:
   version "1.2.1"
   resolved "https://registry.yarnpkg.com/sax/-/sax-1.2.1.tgz#7b8e656190b228e81a66aea748480d828cd2d37a"
 
@@ -4749,14 +4803,10 @@ select2@3.5.1:
   version "3.5.1"
   resolved "https://registry.yarnpkg.com/select2/-/select2-3.5.1.tgz#f2819489bbc65fd6d328be72bbe2b95dd7e87cfe"
 
-"semver@2 || 3 || 4 || 5", semver@~5.3.0:
+"semver@2 || 3 || 4 || 5", semver@^5.3.0, semver@~5.3.0:
   version "5.3.0"
   resolved "https://registry.yarnpkg.com/semver/-/semver-5.3.0.tgz#9b2ce5d3de02d17c6012ad326aa6b4d0cf54f94f"
 
-semver@~4.3.3:
-  version "4.3.6"
-  resolved "https://registry.yarnpkg.com/semver/-/semver-4.3.6.tgz#300bc6e0e86374f7ba61068b5b1ecd57fc6532da"
-
 set-blocking@^2.0.0, set-blocking@~2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/set-blocking/-/set-blocking-2.0.0.tgz#045f9782d011ae9a6803ddd382b24392b3d890f7"
@@ -4769,10 +4819,6 @@ setimmediate@^1.0.4, setimmediate@^1.0.5:
   version "1.0.5"
   resolved "https://registry.yarnpkg.com/setimmediate/-/setimmediate-1.0.5.tgz#290cbb232e306942d7d7ea9b83732ab7856f8285"
 
-setprototypeof@1.0.1:
-  version "1.0.1"
-  resolved "https://registry.yarnpkg.com/setprototypeof/-/setprototypeof-1.0.1.tgz#52009b27888c4dc48f591949c0a8275834c1ca7e"
-
 sha.js@2.2.6:
   version "2.2.6"
   resolved "https://registry.yarnpkg.com/sha.js/-/sha.js-2.2.6.tgz#17ddeddc5f722fb66501658895461977867315ba"
@@ -4787,9 +4833,9 @@ shelljs@^0.5.3:
   version "0.5.3"
   resolved "https://registry.yarnpkg.com/shelljs/-/shelljs-0.5.3.tgz#c54982b996c76ef0c1e6b59fbdc5825f5b713113"
 
-sigmund@~1.0.0:
-  version "1.0.1"
-  resolved "https://registry.yarnpkg.com/sigmund/-/sigmund-1.0.1.tgz#3ff21f198cad2175f9f3b781853fd94d0d19b590"
+shellwords@^0.1.0:
+  version "0.1.0"
+  resolved "https://registry.yarnpkg.com/shellwords/-/shellwords-0.1.0.tgz#66afd47b6a12932d9071cbfd98a52e785cd0ba14"
 
 signal-exit@^3.0.0:
   version "3.0.1"
@@ -4818,60 +4864,6 @@ sntp@1.x.x:
   dependencies:
     hoek "2.x.x"
 
-socket.io-adapter@0.4.0:
-  version "0.4.0"
-  resolved "https://registry.yarnpkg.com/socket.io-adapter/-/socket.io-adapter-0.4.0.tgz#fb9f82ab1aa65290bf72c3657955b930a991a24f"
-  dependencies:
-    debug "2.2.0"
-    socket.io-parser "2.2.2"
-
-socket.io-client@1.5.0:
-  version "1.5.0"
-  resolved "https://registry.yarnpkg.com/socket.io-client/-/socket.io-client-1.5.0.tgz#08232d0adb5a665a7c24bd9796557a33f58f38ae"
-  dependencies:
-    backo2 "1.0.2"
-    component-bind "1.0.0"
-    component-emitter "1.2.0"
-    debug "2.2.0"
-    engine.io-client "1.7.0"
-    has-binary "0.1.7"
-    indexof "0.0.1"
-    object-component "0.0.3"
-    parseuri "0.0.4"
-    socket.io-parser "2.2.6"
-    to-array "0.1.4"
-
-socket.io-parser@2.2.2:
-  version "2.2.2"
-  resolved "https://registry.yarnpkg.com/socket.io-parser/-/socket.io-parser-2.2.2.tgz#3d7af6b64497e956b7d9fe775f999716027f9417"
-  dependencies:
-    benchmark "1.0.0"
-    component-emitter "1.1.2"
-    debug "0.7.4"
-    isarray "0.0.1"
-    json3 "3.2.6"
-
-socket.io-parser@2.2.6:
-  version "2.2.6"
-  resolved "https://registry.yarnpkg.com/socket.io-parser/-/socket.io-parser-2.2.6.tgz#38dfd61df50dcf8ab1d9e2091322bf902ba28b99"
-  dependencies:
-    benchmark "1.0.0"
-    component-emitter "1.1.2"
-    debug "2.2.0"
-    isarray "0.0.1"
-    json3 "3.3.2"
-
-socket.io@^1.4.5:
-  version "1.5.0"
-  resolved "https://registry.yarnpkg.com/socket.io/-/socket.io-1.5.0.tgz#024dd9719d9267d6a6984eebe2ab5ceb9a0b8a98"
-  dependencies:
-    debug "2.2.0"
-    engine.io "1.7.0"
-    has-binary "0.1.7"
-    socket.io-adapter "0.4.0"
-    socket.io-client "1.5.0"
-    socket.io-parser "2.2.6"
-
 sort-keys@^1.0.0:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/sort-keys/-/sort-keys-1.1.2.tgz#441b6d4d346798f1b4e49e8920adfba0e543f9ad"
@@ -4947,10 +4939,6 @@ sshpk@^1.7.0:
     jsbn "~0.1.0"
     tweetnacl "~0.14.0"
 
-"statuses@>= 1.3.0 < 2", statuses@~1.3.0:
-  version "1.3.0"
-  resolved "https://registry.yarnpkg.com/statuses/-/statuses-1.3.0.tgz#8e55758cb20e7682c1f4fce8dcab30bf01d1e07a"
-
 stream-browserify@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/stream-browserify/-/stream-browserify-1.0.0.tgz#bf9b4abfb42b274d751479e44e0ff2656b6f1193"
@@ -4979,6 +4967,12 @@ strict-uri-encode@^1.0.0:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/strict-uri-encode/-/strict-uri-encode-1.1.0.tgz#279b225df1d582b1f54e65addd4352e18faa0713"
 
+string-length@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/string-length/-/string-length-1.0.1.tgz#56970fb1c38558e9e70b728bf3de269ac45adfac"
+  dependencies:
+    strip-ansi "^3.0.0"
+
 string-width@^1.0.1, string-width@^1.0.2:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/string-width/-/string-width-1.0.2.tgz#118bdf5b8cdc51a2a7e70d211e07e2b0b9b107d3"
@@ -5001,6 +4995,10 @@ strip-ansi@^3.0.0, strip-ansi@^3.0.1:
   dependencies:
     ansi-regex "^2.0.0"
 
+strip-bom@3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/strip-bom/-/strip-bom-3.0.0.tgz#2334c18e9c759f7bdd56fdef7e9ae3d588e68ed3"
+
 strip-bom@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/strip-bom/-/strip-bom-2.0.0.tgz#6219a85616520491f35788bdbf1447a99c7e6b0e"
@@ -5017,10 +5015,6 @@ style-loader@0.12.4:
   dependencies:
     loader-utils "^0.2.7"
 
-supports-color@1.2.0:
-  version "1.2.0"
-  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-1.2.0.tgz#ff1ed1e61169d06b3cf2d588e188b18d8847e17e"
-
 supports-color@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-2.0.0.tgz#535d045ce6b6363fa40117084629995e9df324c7"
@@ -5047,6 +5041,10 @@ svgo@^0.7.0:
   version "3.1.4"
   resolved "https://registry.yarnpkg.com/symbol-tree/-/symbol-tree-3.1.4.tgz#02b279348d337debc39694c5c95f882d448a312a"
 
+symbol-tree@^3.2.1:
+  version "3.2.2"
+  resolved "https://registry.yarnpkg.com/symbol-tree/-/symbol-tree-3.2.2.tgz#ae27db38f660a7ae2e1c3b7d1bc290819b8519e6"
+
 tapable@^0.2.5, tapable@~0.2.5:
   version "0.2.6"
   resolved "https://registry.yarnpkg.com/tapable/-/tapable-0.2.6.tgz#206be8e188860b514425375e6f1ae89bfb01fd8d"
@@ -5072,10 +5070,24 @@ tar@~2.2.0, tar@~2.2.1:
     fstream "^1.0.2"
     inherits "2"
 
+test-exclude@^4.0.3:
+  version "4.0.3"
+  resolved "https://registry.yarnpkg.com/test-exclude/-/test-exclude-4.0.3.tgz#86a13ce3effcc60e6c90403cf31a27a60ac6c4e7"
+  dependencies:
+    arrify "^1.0.1"
+    micromatch "^2.3.11"
+    object-assign "^4.1.0"
+    read-pkg-up "^1.0.1"
+    require-main-filename "^1.0.1"
+
 text-table@~0.2.0:
   version "0.2.0"
   resolved "https://registry.yarnpkg.com/text-table/-/text-table-0.2.0.tgz#7f5ee823ae805207c00af2df4a84ec3fcfa570b4"
 
+throat@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/throat/-/throat-3.0.0.tgz#e7c64c867cbb3845f10877642f7b60055b8ec0d6"
+
 throttleit@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/throttleit/-/throttleit-1.0.0.tgz#9e785836daf46743145a5984b6268d828528ac6c"
@@ -5096,9 +5108,9 @@ timers-browserify@^2.0.2:
   dependencies:
     setimmediate "^1.0.4"
 
-to-array@0.1.4:
-  version "0.1.4"
-  resolved "https://registry.yarnpkg.com/to-array/-/to-array-0.1.4.tgz#17e6c11f73dd4f3d74cda7a4ff3238e9ad9bf890"
+tmpl@1.0.x:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/tmpl/-/tmpl-1.0.4.tgz#23640dd7b42d00433911140820e5cf440e521dd1"
 
 to-arraybuffer@^1.0.0:
   version "1.0.1"
@@ -5120,7 +5132,13 @@ tough-cookie@^2.2.0, tough-cookie@~2.3.0:
   version "2.3.1"
   resolved "https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-2.3.1.tgz#99c77dfbb7d804249e8a299d4cb0fd81fef083fd"
 
-tr46@~0.0.1:
+tough-cookie@^2.3.2:
+  version "2.3.2"
+  resolved "https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-2.3.2.tgz#f081f76e4c85720e6c37a5faced737150d84072a"
+  dependencies:
+    punycode "^1.4.1"
+
+tr46@~0.0.1, tr46@~0.0.3:
   version "0.0.3"
   resolved "https://registry.yarnpkg.com/tr46/-/tr46-0.0.3.tgz#8184fd347dac9cdc185992f3a6622e14b9d9ab6a"
 
@@ -5154,13 +5172,6 @@ type-detect@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/type-detect/-/type-detect-1.0.0.tgz#762217cc06db258ec48908a1298e8b95121e8ea2"
 
-type-is@~1.6.13:
-  version "1.6.13"
-  resolved "https://registry.yarnpkg.com/type-is/-/type-is-1.6.13.tgz#6e83ba7bc30cd33a7bb0b7fb00737a2085bf9d08"
-  dependencies:
-    media-typer "0.3.0"
-    mime-types "~2.1.11"
-
 typedarray@~0.0.5:
   version "0.0.6"
   resolved "https://registry.yarnpkg.com/typedarray/-/typedarray-0.0.6.tgz#867ac74e3864187b1d3d47d996a78ec5c8830777"
@@ -5190,10 +5201,6 @@ uid-number@~0.0.6:
   version "0.0.6"
   resolved "https://registry.yarnpkg.com/uid-number/-/uid-number-0.0.6.tgz#0ea10e8035e8eb5b8e4449f06da1c730663baa81"
 
-ultron@1.0.x:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/ultron/-/ultron-1.0.2.tgz#ace116ab557cd197386a4e88f4685378c8b2e4fa"
-
 uncontrollable@^3.2.3:
   version "3.3.1"
   resolved "https://registry.yarnpkg.com/uncontrollable/-/uncontrollable-3.3.1.tgz#e23b402e7a4c69b1853fb4b43ce34b6480c65b6f"
@@ -5218,10 +5225,6 @@ uniqs@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/uniqs/-/uniqs-2.0.0.tgz#ffede4b36b25290696e6e165d4a59edb998e6b02"
 
-unpipe@1.0.0, unpipe@~1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/unpipe/-/unpipe-1.0.0.tgz#b2bf4ee8514aae6165b4817829d21b2ef49904ec"
-
 url-loader@0.5.6:
   version "0.5.6"
   resolved "https://registry.yarnpkg.com/url-loader/-/url-loader-0.5.6.tgz#644521a5dc66b8729caab1b6ba9e580e021ded45"
@@ -5249,12 +5252,6 @@ user-home@^2.0.0:
   dependencies:
     os-homedir "^1.0.0"
 
-useragent@^2.1.6:
-  version "2.1.9"
-  resolved "https://registry.yarnpkg.com/useragent/-/useragent-2.1.9.tgz#4dba2bc4dad1875777ab15de3ff8098b475000b7"
-  dependencies:
-    lru-cache "2.2.x"
-
 util-deprecate@~1.0.1:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/util-deprecate/-/util-deprecate-1.0.2.tgz#450d4dc9fa70de732762fbd2d4a28981419a0ccf"
@@ -5265,10 +5262,6 @@ util@0.10.3, "util@>=0.10.3 <1", util@^0.10.3, util@~0.10.3:
   dependencies:
     inherits "2.0.1"
 
-utils-merge@1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/utils-merge/-/utils-merge-1.0.0.tgz#0294fb922bb9375153541c4f7096231f287c8af8"
-
 uuid@^3.0.0:
   version "3.0.1"
   resolved "https://registry.yarnpkg.com/uuid/-/uuid-3.0.1.tgz#6544bba2dfda8c1cf17e629a3a305e2bb1fee6c1"
@@ -5296,9 +5289,11 @@ vm-browserify@0.0.4:
   dependencies:
     indexof "0.0.1"
 
-void-elements@^2.0.0:
-  version "2.0.1"
-  resolved "https://registry.yarnpkg.com/void-elements/-/void-elements-2.0.1.tgz#c066afb582bb1cb4128d60ea92392e94d5e9dbec"
+walker@~1.0.5:
+  version "1.0.7"
+  resolved "https://registry.yarnpkg.com/walker/-/walker-1.0.7.tgz#2f7f9b8fd10d677262b18a884e28d19618e028fb"
+  dependencies:
+    makeerror "1.0.x"
 
 warning@^2.0.0, warning@^2.1.0:
   version "2.1.0"
@@ -5312,6 +5307,10 @@ warning@^3.0.0:
   dependencies:
     loose-envify "^1.0.0"
 
+watch@~0.10.0:
+  version "0.10.0"
+  resolved "https://registry.yarnpkg.com/watch/-/watch-0.10.0.tgz#77798b2da0f9910d595f1ace5b0c2258521f21dc"
+
 watchpack@^1.2.0:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/watchpack/-/watchpack-1.2.0.tgz#15d4620f1e7471f13fcb551d5c030d2c3eb42dbb"
@@ -5324,6 +5323,14 @@ webidl-conversions@^2.0.0:
   version "2.0.1"
   resolved "https://registry.yarnpkg.com/webidl-conversions/-/webidl-conversions-2.0.1.tgz#3bf8258f7d318c7443c36f2e169402a1a6703506"
 
+webidl-conversions@^3.0.0:
+  version "3.0.1"
+  resolved "https://registry.yarnpkg.com/webidl-conversions/-/webidl-conversions-3.0.1.tgz#24534275e2a7bc6be7bc86611cc16ae0a5654871"
+
+webidl-conversions@^4.0.0:
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/webidl-conversions/-/webidl-conversions-4.0.1.tgz#8015a17ab83e7e1b311638486ace81da6ce206a0"
+
 webpack-dev-middleware@1.9.0, webpack-dev-middleware@^1.0.11:
   version "1.9.0"
   resolved "https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-1.9.0.tgz#a1c67a3dfd8a5c5d62740aa0babe61758b4c84aa"
@@ -5372,6 +5379,12 @@ webpack@2.2.0:
     webpack-sources "^0.1.4"
     yargs "^6.0.0"
 
+whatwg-encoding@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/whatwg-encoding/-/whatwg-encoding-1.0.1.tgz#3c6c451a198ee7aec55b1ec61d0920c67801a5f4"
+  dependencies:
+    iconv-lite "0.4.13"
+
 whatwg-fetch@>=0.10.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/whatwg-fetch/-/whatwg-fetch-1.0.0.tgz#01c2ac4df40e236aaa18480e3be74bd5c8eb798e"
@@ -5386,6 +5399,13 @@ whatwg-url-compat@~0.6.5:
   dependencies:
     tr46 "~0.0.1"
 
+whatwg-url@^4.3.0:
+  version "4.7.0"
+  resolved "https://registry.yarnpkg.com/whatwg-url/-/whatwg-url-4.7.0.tgz#202035ac1955b087cdd20fa8b58ded3ab1cd2af5"
+  dependencies:
+    tr46 "~0.0.3"
+    webidl-conversions "^3.0.0"
+
 whet.extend@~0.9.9:
   version "0.9.9"
   resolved "https://registry.yarnpkg.com/whet.extend/-/whet.extend-0.9.9.tgz#f877d5bf648c97e5aa542fadc16d6a259b9c11a1"
@@ -5394,7 +5414,7 @@ which-module@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/which-module/-/which-module-1.0.0.tgz#bba63ca861948994ff307736089e3b96026c2a4f"
 
-which@~1.2.10:
+which@^1.1.1, which@^1.2.12, which@~1.2.10:
   version "1.2.12"
   resolved "https://registry.yarnpkg.com/which/-/which-1.2.12.tgz#de67b5e450269f194909ef23ece4ebe416fa1192"
   dependencies:
@@ -5422,6 +5442,13 @@ wordwrap@~1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/wordwrap/-/wordwrap-1.0.0.tgz#27584810891456a4171c8d0226441ade90cbcaeb"
 
+worker-farm@^1.3.1:
+  version "1.3.1"
+  resolved "https://registry.yarnpkg.com/worker-farm/-/worker-farm-1.3.1.tgz#4333112bb49b17aa050b87895ca6b2cacf40e5ff"
+  dependencies:
+    errno ">=0.1.1 <0.2.0-0"
+    xtend ">=4.0.0 <4.1.0-0"
+
 wrap-ansi@^2.0.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/wrap-ansi/-/wrap-ansi-2.1.0.tgz#d8fc3d284dd05794fe84973caecdd1cf824fdd85"
@@ -5439,30 +5466,15 @@ write@^0.2.1:
   dependencies:
     mkdirp "^0.5.1"
 
-ws@1.1.1:
-  version "1.1.1"
-  resolved "https://registry.yarnpkg.com/ws/-/ws-1.1.1.tgz#082ddb6c641e85d4bb451f03d52f06eabdb1f018"
-  dependencies:
-    options ">=0.0.5"
-    ultron "1.0.x"
-
-wtf-8@1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/wtf-8/-/wtf-8-1.0.0.tgz#392d8ba2d0f1c34d1ee2d630f15d0efb68e1048a"
-
 xml-escape@~1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/xml-escape/-/xml-escape-1.0.0.tgz#00963d697b2adf0c185c4e04e73174ba9b288eb2"
 
-"xml-name-validator@>= 2.0.1 < 3.0.0":
+"xml-name-validator@>= 2.0.1 < 3.0.0", xml-name-validator@^2.0.1:
   version "2.0.1"
   resolved "https://registry.yarnpkg.com/xml-name-validator/-/xml-name-validator-2.0.1.tgz#4d8b8f1eccd3419aa362061becef515e1e559635"
 
-xmlhttprequest-ssl@1.5.1:
-  version "1.5.1"
-  resolved "https://registry.yarnpkg.com/xmlhttprequest-ssl/-/xmlhttprequest-ssl-1.5.1.tgz#3b7741fea4a86675976e908d296d4445961faa67"
-
-xtend@^4.0.0:
+"xtend@>=4.0.0 <4.1.0-0", xtend@^4.0.0:
   version "4.0.1"
   resolved "https://registry.yarnpkg.com/xtend/-/xtend-4.0.1.tgz#a5c6d532be656e23db820efb943a1f04998d63af"
 
@@ -5476,7 +5488,7 @@ yargs-parser@^4.2.0:
   dependencies:
     camelcase "^3.0.0"
 
-yargs@^6.0.0:
+yargs@^6.0.0, yargs@^6.3.0:
   version "6.6.0"
   resolved "https://registry.yarnpkg.com/yargs/-/yargs-6.6.0.tgz#782ec21ef403345f830a808ca3d513af56065208"
   dependencies:
@@ -5508,7 +5520,3 @@ yauzl@2.4.1:
   resolved "https://registry.yarnpkg.com/yauzl/-/yauzl-2.4.1.tgz#9528f442dab1b2284e58b4379bb194e22e0c4005"
   dependencies:
     fd-slicer "~1.0.1"
-
-yeast@0.1.2:
-  version "0.1.2"
-  resolved "https://registry.yarnpkg.com/yeast/-/yeast-0.1.2.tgz#008e06d8094320c372dbc2f8ed76a0ca6c8ac419"
