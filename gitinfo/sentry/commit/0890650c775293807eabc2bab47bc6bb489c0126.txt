commit 0890650c775293807eabc2bab47bc6bb489c0126
Author: Yaniv Aknin <yaniv@aknin.name>
Date:   Sat May 5 10:15:29 2012 +0300

    Reorganize JSON views of events

diff --git a/sentry/templates/sentry/groups/details.html b/sentry/templates/sentry/groups/details.html
index 326a216b63..8857f28603 100644
--- a/sentry/templates/sentry/groups/details.html
+++ b/sentry/templates/sentry/groups/details.html
@@ -98,8 +98,11 @@
                 <a class="dropdown-toggle" href="#" data-toggle="dropdown">{% trans "Actions" %} <span class="caret"></span></a>
                 <ul class="dropdown-menu">
                     <li><a href="{% url sentry-api-remove-group project_id=project.slug group_id=group.pk %}">{% trans "Remove Event" %}</a></li>
-                    <li><a href="{% url sentry-group-json project_id=project.slug group_id=group.pk %}">{% trans "Raw JSON Data" %}</a></li>
-                    <li><a href="{% url sentry-group-json-multi project_id=project.slug group_id=group.pk how_many=10 %}">{% trans "Mutli-event JSON Data" %}</a></li>
+                    <li><a {% ifequal page 'event_list' %}{% if event %}
+                    href="{% url sentry-group-event-json project_id=project.slug group_id=group.pk event_id_or_latest=event.pk %}"{% else %}
+                    href="{% url sentry-group-event-json project_id=project.slug group_id=group.pk event_id_or_latest="latest" %}"{% endif %}{% else %}
+                    href="{% url sentry-group-events-json project_id=project.slug group_id=group.pk %}"{% endifequal %}
+                    >{% trans "Raw JSON Data" %}</a></li>
                     {% for label, link, is_active in group|get_actions:request %}
                         {% if forloop.first %}
                             <li class="divider"></li>
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index 9deb9c206b..d1cf4431d7 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -14,7 +14,6 @@ from django.core.urlresolvers import reverse
 from django.http import HttpResponse, \
   HttpResponseRedirect, Http404
 from django.shortcuts import get_object_or_404
-from django.utils.datastructures import SortedDict
 from django.utils.safestring import mark_safe
 
 from sentry.conf import settings
@@ -240,36 +239,6 @@ def group_list(request, project, view_id=None):
     }, request)
 
 
-@login_required
-@has_access
-def group_json(request, project, group_id):
-    group = get_object_or_404(Group, pk=group_id)
-
-    if group.project and group.project != project:
-        return HttpResponse(status=404)
-
-    # It's possible that a message would not be created under certain
-    # circumstances (such as a post_save signal failing)
-    event = group.get_latest_event() or Event()
-
-    return HttpResponse(json.dumps(event.as_dict()), mimetype='application/json')
-
-@login_required
-@has_access
-def group_json_multi(request, project, group_id, how_many):
-    group = get_object_or_404(Group, pk=group_id)
-
-    if group.project and group.project != project:
-        return HttpResponse(status=404)
-    how_many = int(how_many)
-    if how_many > settings.MAX_JSON_RESULTS:
-        return HttpResponse("too many objects requested", mimetype='text/plain', status=400)
-
-    events = group.event_set.order_by('-id')[:how_many]
-
-    return HttpResponse(json.dumps(list(event.as_dict() for event in events)), mimetype='application/json')
-
-
 @login_required
 @has_access
 def group(request, project, group_id):
@@ -311,6 +280,27 @@ def group_event_list(request, project, group_id):
     }, request)
 
 
+@login_required
+@has_access
+def group_event_list_json(request, project, group_id):
+    group = get_object_or_404(Group, pk=group_id)
+
+    if group.project and group.project != project:
+        return HttpResponse(status=404)
+
+    limit = request.GET.get('limit', settings.MAX_JSON_RESULTS)
+    try:
+        limit = int(limit)
+    except ValueError:
+        return HttpResponse('non numeric limit', status=400, mimetype='text/plain')
+    if limit > settings.MAX_JSON_RESULTS:
+        return HttpResponse("too many objects requested", mimetype='text/plain', status=400)
+
+    events = group.event_set.order_by('-id')[:limit]
+
+    return HttpResponse(json.dumps(list(event.as_dict() for event in events)), mimetype='application/json')
+
+
 @login_required
 @has_access
 def group_event_details(request, project, group_id, event_id):
@@ -332,6 +322,24 @@ def group_event_details(request, project, group_id, event_id):
     }, request)
 
 
+@login_required
+@has_access
+def group_event_details_json(request, project, group_id, event_id_or_latest):
+    group = get_object_or_404(Group, pk=group_id)
+
+    if group.project and group.project != project:
+        return HttpResponse(status=404)
+
+    if event_id_or_latest == 'latest':
+        # It's possible that a message would not be created under certain
+        # circumstances (such as a post_save signal failing)
+        event = group.get_latest_event() or Event()
+    else:
+        event = get_object_or_404(group.event_set, pk=event_id_or_latest)
+
+    return HttpResponse(json.dumps(event.as_dict()), mimetype='application/json')
+
+
 @login_required
 @has_access
 def group_plugin_action(request, project, group_id, slug):
diff --git a/sentry/web/urls.py b/sentry/web/urls.py
index 86b799c3e5..fe3ee9ecb7 100644
--- a/sentry/web/urls.py
+++ b/sentry/web/urls.py
@@ -124,10 +124,10 @@ urlpatterns = patterns('',
     # Project specific
 
     url(r'^(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/$', groups.group, name='sentry-group'),
-    url(r'^(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/json/$', groups.group_json, name='sentry-group-json'),
-    url(r'^(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/json/(?P<how_many>\d+)/$', groups.group_json_multi, name='sentry-group-json-multi'),
     url(r'^(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/events/$', groups.group_event_list, name='sentry-group-events'),
+    url(r'^(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/events/json/$', groups.group_event_list_json, name='sentry-group-events-json'),
     url(r'^(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/events/(?P<event_id>\d+)/$', groups.group_event_details, name='sentry-group-event'),
+    url(r'^(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/events/(?P<event_id_or_latest>(\d+|latest))/json/$', groups.group_event_details_json, name='sentry-group-event-json'),
     url(r'^(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/actions/(?P<slug>[\w_-]+)/', groups.group_plugin_action, name='sentry-group-plugin-action'),
 
     url(r'^(?P<project_id>[\w_-]+)/events/$', events.event_list, name='sentry-events'),
diff --git a/tests/sentry/web/frontend/tests.py b/tests/sentry/web/frontend/tests.py
index 3688ad1347..609613f940 100644
--- a/tests/sentry/web/frontend/tests.py
+++ b/tests/sentry/web/frontend/tests.py
@@ -96,21 +96,23 @@ class SentryViewsTest(TestCase):
         group = Group.objects.get(pk=2)
         self.assertEquals(resp.context['group'], group)
 
-    def test_group_json(self):
+    def test_group_json_multi(self):
         self.client.login(username='admin', password='admin')
-        resp = self.client.get(reverse('sentry-group-json', kwargs={'project_id': 1, 'group_id': 2}))
+        resp = self.client.get(reverse('sentry-group-events-json', kwargs={'project_id': 1, 'group_id': 2}))
         self.assertEquals(resp.status_code, 200)
         self.assertEquals(resp['Content-Type'], 'application/json')
-        self.assertEquals(json.loads(resp.content)['level'], 'error')
+        self.assertEquals(json.loads(resp.content)[0]['level'], 'error')
+        resp = self.client.get(reverse('sentry-group-events-json', kwargs={'project_id': 1, 'group_id': 2}), {'limit': 1})
+        self.assertEquals(resp.status_code, 200)
+        resp = self.client.get(reverse('sentry-group-events-json', kwargs={'project_id': 1, 'group_id': 2}), {'limit': settings.MAX_JSON_RESULTS+1})
+        self.assertEquals(resp.status_code, 400)
 
-    def test_group_json_multi(self):
+    def test_group_events_details_json(self):
         self.client.login(username='admin', password='admin')
-        resp = self.client.get(reverse('sentry-group-json-multi', kwargs={'project_id': 1, 'group_id': 2, 'how_many': 1}))
+        resp = self.client.get(reverse('sentry-group-event-json', kwargs={'project_id': 1, 'group_id': 2, 'event_id_or_latest': 'latest'}))
         self.assertEquals(resp.status_code, 200)
         self.assertEquals(resp['Content-Type'], 'application/json')
-        self.assertEquals(json.loads(resp.content)[0]['level'], 'error')
-        resp = self.client.get(reverse('sentry-group-json-multi', kwargs={'project_id': 1, 'group_id': 2, 'how_many': settings.MAX_JSON_RESULTS+1}))
-        self.assertEquals(resp.status_code, 400)
+        self.assertEquals(json.loads(resp.content)['level'], 'error')
 
     def test_status_env(self):
         self.client.login(username='admin', password='admin')
