commit f1b416b8c500a897a79e669b6f40c2857f99221d
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Apr 1 14:40:59 2020 -0700

    ref(integrationListDirectory): Use withExperiment (#18005)

diff --git a/src/sentry/static/sentry/app/utils/integrationUtil.tsx b/src/sentry/static/sentry/app/utils/integrationUtil.tsx
index ae7f09dbe5..8a6fc372dd 100644
--- a/src/sentry/static/sentry/app/utils/integrationUtil.tsx
+++ b/src/sentry/static/sentry/app/utils/integrationUtil.tsx
@@ -15,6 +15,7 @@ import {
 } from 'app/types';
 import {Hooks} from 'app/types/hooks';
 import HookStore from 'app/stores/hookStore';
+import {ExperimentAssignment} from 'app/types/experiments';
 
 const INTEGRATIONS_ANALYTICS_SESSION_KEY = 'INTEGRATION_ANALYTICS_SESSION' as const;
 const SORT_INTEGRATIONS_BY_WEIGHT = 'SORT_INTEGRATIONS_BY_WEIGHT' as const;
@@ -33,15 +34,16 @@ export const clearAnalyticsSession = () => {
 export const getAnalyticsSessionId = () =>
   window.sessionStorage.getItem(INTEGRATIONS_ANALYTICS_SESSION_KEY);
 
-export const getSortIntegrationsByWeightActive = (organization?: Organization) => {
-  const variant = organization?.experiments?.IntegrationDirectorySortWeightExperiment;
+export const getSortIntegrationsByWeightActive = (
+  experimentAssignment: ExperimentAssignment['IntegrationDirectorySortWeightExperiment']
+) => {
   switch (localStorage.getItem(SORT_INTEGRATIONS_BY_WEIGHT)) {
     case '1':
       return true;
     case '0':
       return false;
     default:
-      return variant && variant === '1';
+      return experimentAssignment === '1';
   }
 };
 
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
index 2e6fb34257..4f21a4c75a 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
@@ -29,14 +29,14 @@ import {t, tct} from 'app/locale';
 import AsyncComponent from 'app/components/asyncComponent';
 import PermissionAlert from 'app/views/settings/organization/permissionAlert';
 import SentryDocumentTitle from 'app/components/sentryDocumentTitle';
-import SentryTypes from 'app/sentryTypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import withOrganization from 'app/utils/withOrganization';
 import SearchInput from 'app/components/forms/searchInput';
 import {createFuzzySearch} from 'app/utils/createFuzzySearch';
 import space from 'app/styles/space';
-import {logExperiment} from 'app/utils/analytics';
 import SelectControl from 'app/components/forms/selectControl';
+import withExperiment from 'app/utils/withExperiment';
+import {ExperimentAssignment} from 'app/types/experiments';
 
 import {POPULARITY_WEIGHT} from './constants';
 import IntegrationRow from './integrationRow';
@@ -44,6 +44,7 @@ import IntegrationRow from './integrationRow';
 type Props = RouteComponentProps<{orgId: string}, {}> & {
   organization: Organization;
   hideHeader: boolean;
+  experimentAssignment: ExperimentAssignment['IntegrationDirectorySortWeightExperiment'];
 };
 
 type State = {
@@ -73,17 +74,6 @@ export class IntegrationListDirectory extends AsyncComponent<
   reloadOnVisible = true;
   shouldReloadOnVisible = true;
 
-  static propTypes = {
-    organization: SentryTypes.Organization,
-  };
-
-  componentDidMount() {
-    logExperiment({
-      organization: this.props.organization,
-      key: 'IntegrationDirectorySortWeightExperiment',
-    });
-  }
-
   getDefaultState() {
     return {
       ...super.getDefaultState(),
@@ -230,7 +220,7 @@ export class IntegrationListDirectory extends AsyncComponent<
     this.getInstallValue(b) - this.getInstallValue(a);
 
   sortIntegrations(integrations: AppOrProviderOrPlugin[]) {
-    if (getSortIntegrationsByWeightActive(this.props.organization)) {
+    if (getSortIntegrationsByWeightActive(this.props.experimentAssignment)) {
       return integrations
         .sort(this.sortByName)
         .sort(this.sortByPopularity)
@@ -239,7 +229,7 @@ export class IntegrationListDirectory extends AsyncComponent<
     return integrations.sort(this.sortByName).sort(this.sortByInstalled);
   }
 
-  async componentDidUpdate(_, prevState: State) {
+  async componentDidUpdate(_: Props, prevState: State) {
     if (this.state.list.length !== prevState.list.length) {
       await this.createSearch();
     }
@@ -456,4 +446,8 @@ const EmptyResultsBody = styled('div')`
   padding-bottom: ${space(2)};
 `;
 
-export default withOrganization(IntegrationListDirectory);
+export default withOrganization(
+  withExperiment(IntegrationListDirectory, {
+    experiment: 'IntegrationDirectorySortWeightExperiment',
+  })
+);
