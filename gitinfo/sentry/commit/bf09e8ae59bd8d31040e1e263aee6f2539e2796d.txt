commit bf09e8ae59bd8d31040e1e263aee6f2539e2796d
Author: Danny Lee <dlee@sentry.io>
Date:   Wed Oct 9 13:26:56 2019 -0700

    test(ui): Add Percy snapshots for GlobalSelectionHeader (#14999)

diff --git a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
index 8a0a3cd82f..df4a836657 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
@@ -243,6 +243,7 @@ class MultipleEnvironmentSelector extends React.PureComponent {
       >
         {({isOpen, getActorProps, actions}) => (
           <StyledHeaderItem
+            data-test-id="global-header-environment-selector"
             icon={<StyledInlineSvg src="icon-window" />}
             isOpen={isOpen}
             hasSelected={value && !!value.length}
diff --git a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
index cfbf5cec1a..dd6a492a04 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
@@ -152,6 +152,7 @@ export default class MultipleProjectSelector extends React.PureComponent {
 
     return shouldForceProject ? (
       <StyledHeaderItem
+        data-test-id="global-header-project-selector"
         icon={<StyledInlineSvg src="icon-project" />}
         locked
         lockedMessage={
@@ -196,6 +197,7 @@ export default class MultipleProjectSelector extends React.PureComponent {
             : t('All Projects');
           return (
             <StyledHeaderItem
+              data-test-id="global-header-project-selector"
               active={hasSelected || isOpen}
               icon={<StyledInlineSvg src="icon-project" />}
               hasSelected={hasSelected}
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
index 046cc3d64c..59361573e6 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
@@ -320,6 +320,7 @@ class TimeRangeSelector extends React.PureComponent {
         {({isOpen, getRootProps, getActorProps, getMenuProps}) => (
           <TimeRangeRoot {...getRootProps()}>
             <StyledHeaderItem
+              data-test-id="global-header-timerange-selector"
               icon={<StyledInlineSvg src="icon-calendar" />}
               isOpen={isOpen}
               hasSelected={
diff --git a/tests/acceptance/test_organization_global_selection_header.py b/tests/acceptance/test_organization_global_selection_header.py
new file mode 100644
index 0000000000..c28c0a98e3
--- /dev/null
+++ b/tests/acceptance/test_organization_global_selection_header.py
@@ -0,0 +1,45 @@
+from __future__ import absolute_import
+
+import six
+
+from django.utils import timezone
+
+from sentry.testutils import AcceptanceTestCase, SnubaTestCase
+
+from tests.acceptance.page_objects.issue_list import IssueListPage
+
+
+class OrganizationGlobalHeaderTest(AcceptanceTestCase, SnubaTestCase):
+    def setUp(self):
+        super(OrganizationGlobalHeaderTest, self).setUp()
+        self.user = self.create_user("foo@example.com")
+        self.org = self.create_organization(owner=self.user, name="Rowdy Tiger")
+        self.team = self.create_team(
+            organization=self.org, name="Mariachi Band", members=[self.user]
+        )
+
+        self.project_1 = self.create_project(organization=self.org, teams=[self.team], name="Bengal")
+        self.project_2 = self.create_project(organization=self.org, teams=[self.team], name="Sumatra")
+        self.project_3 = self.create_project(organization=self.org, teams=[self.team], name="Siberian")
+
+        self.create_environment(name="development", project=self.project_1)
+        self.create_environment(name="production", project=self.project_1)
+        self.create_environment(name="visible", project=self.project_1, is_hidden=False)
+        self.create_environment(name="not visible", project=self.project_1, is_hidden=True)
+
+        self.login_as(self.user)
+        self.page = IssueListPage(self.browser, self.client)
+
+    def test_global_selection_header_dropdown(self):
+        self.project.update(first_event=timezone.now())
+        self.page.visit_issue_list(self.org.slug, query="?query=assigned%3Ame&project=" + six.text_type(self.project_1.id))
+        self.browser.wait_until_test_id("awaiting-events")
+
+        self.browser.click('[data-test-id="global-header-project-selector"]')
+        self.browser.snapshot("globalSelectionHeader - project selector")
+
+        self.browser.click('[data-test-id="global-header-environment-selector"]')
+        self.browser.snapshot("globalSelectionHeader - environment selector")
+
+        self.browser.click('[data-test-id="global-header-timerange-selector"]')
+        self.browser.snapshot("globalSelectionHeader - timerange selector")
