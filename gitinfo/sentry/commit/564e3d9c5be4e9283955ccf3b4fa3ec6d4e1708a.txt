commit 564e3d9c5be4e9283955ccf3b4fa3ec6d4e1708a
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed Nov 16 13:06:17 2016 -0800

    New "getting started" install flow drops settings chrome

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 4024c3cdd6..9a57bf4ba9 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -40,7 +40,8 @@ import ProjectDashboard from './views/projectDashboard';
 import ProjectDetails from './views/projectDetails';
 import ProjectEvents from './views/projectEvents';
 import ProjectFilters from './views/projectFilters';
-import ProjectInstall from './views/projectInstall';
+import ProjectGettingStarted from './views/projectInstall/gettingStarted';
+import ProjectDocsContext from './views/projectInstall/docsContext';
 import ProjectInstallOverview from './views/projectInstall/overview';
 import ProjectInstallPlatform from './views/projectInstall/platform';
 import ProjectReleases from './views/projectReleases';
@@ -132,7 +133,7 @@ function routes() {
 
         {hooksOrgRoutes}
 
-        <Route path=":projectId/settings/install/" component={errorHandler(ProjectInstall)}>
+        <Route path=":projectId/getting-started/" component={errorHandler(ProjectGettingStarted)}>
           <IndexRoute component={errorHandler(ProjectInstallOverview)}/>
           <Route path=":platform/" component={errorHandler(ProjectInstallPlatform)}/>
         </Route>
@@ -157,6 +158,10 @@ function routes() {
             <Route path="debug-symbols/" component={errorHandler(ProjectDebugSymbols)} />
             <Route path="user-feedback/" component={errorHandler(ProjectUserReportSettings)} />
             <Route path="csp/" component={errorHandler(ProjectCspSettings)} />
+            <Route path="install/" component={errorHandler(ProjectDocsContext)}>
+              <IndexRoute component={errorHandler(ProjectInstallOverview)}/>
+              <Route path=":platform/" component={errorHandler(ProjectInstallPlatform)}/>
+            </Route>
           </Route>
           <Redirect from="group/:groupId/" to="issues/:groupId/" />
           <Route path="issues/:groupId/" component={errorHandler(GroupDetails)}
diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
index 8837f1af94..97a4c39322 100644
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectDetails.jsx
@@ -1,7 +1,57 @@
 import React from 'react';
 
 import ProjectContext from './projects/projectContext';
-import ProjectDetailsLayout from './projectDetailsLayout';
+import ProjectHeader from '../components/projectHeader';
+import ProjectState from '../mixins/projectState';
+
+const ProjectDetailsLayout = React.createClass({
+  mixins: [
+    ProjectState
+  ],
+
+  getInitialState() {
+    return {
+      projectNavSection: null
+    };
+  },
+
+  /**
+   * This callback can be invoked by the child component
+   * to update the active nav section (which is then passed
+   * to the ProjectHeader
+   */
+  setProjectNavSection(section) {
+    this.setState({
+      projectNavSection: section
+    });
+  },
+
+  getTitle() {
+    return 'TODO FIX THIS TITLE';
+  },
+
+  render() {
+    if (!this.context.project)
+      return null;
+
+    return (
+     <div>
+        <ProjectHeader
+          activeSection={this.state.projectNavSection}
+          project={this.context.project}
+          organization={this.getOrganization()} />
+        <div className="container">
+          <div className="content">
+            {React.cloneElement(this.props.children, {
+              setProjectNavSection: this.setProjectNavSection,
+              memberList: this.state.memberList
+            })}
+          </div>
+        </div>
+      </div>
+    );
+  }
+});
 
 const ProjectDetails = React.createClass({
   render() {
diff --git a/src/sentry/static/sentry/app/views/projectInstall/projectInstallLayout.jsx b/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
similarity index 61%
rename from src/sentry/static/sentry/app/views/projectInstall/projectInstallLayout.jsx
rename to src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
index 78417b2956..c81a47d18b 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/projectInstallLayout.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
@@ -1,13 +1,12 @@
 import React from 'react';
 
 import ApiMixin from '../../mixins/apiMixin';
-import ProjectSelector from '../../components/projectHeader/projectSelector';
 import ProjectState from '../../mixins/projectState';
 
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 
-const ProjectInstallLayout = React.createClass({
+const ProjectDocsContext = React.createClass({
   mixins: [
     ApiMixin,
     ProjectState
@@ -45,7 +44,7 @@ const ProjectInstallLayout = React.createClass({
     });
   },
 
-  renderBody() {
+  render() {
     if (this.state.loading)
       return <LoadingIndicator />;
     else if (this.state.error)
@@ -55,29 +54,7 @@ const ProjectInstallLayout = React.createClass({
     return React.cloneElement(this.props.children, {
       platformData: data // {...this.props}
     });
-  },
-
-  render() {
-    let org = this.context.organization;
-    let project = this.context.project;
-    if (!project) return null;
-    return (
-      <div>
-        <div className="sub-header flex flex-container flex-vertically-centered">
-          <div className="p-t-1">
-            <ProjectSelector
-              organization={org}
-              projectId={project.slug}/>
-          </div>
-        </div>
-        <div className="container">
-          <div className="content">
-            {this.renderBody()}
-          </div>
-        </div>
-      </div>
-    );
   }
 });
 
-export default ProjectInstallLayout;
\ No newline at end of file
+export default ProjectDocsContext;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx b/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx
new file mode 100644
index 0000000000..9f669254e9
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx
@@ -0,0 +1,49 @@
+import React from 'react';
+
+import ProjectContext from '../projects/projectContext';
+import ProjectDocsContext from './docsContext';
+import ProjectSelector from '../../components/projectHeader/projectSelector';
+
+const GettingStartedBody = React.createClass({
+  contextTypes: {
+    project: React.PropTypes.object,
+    organization: React.PropTypes.object
+  },
+
+  render() {
+    let {project, organization} = this.context;
+    return (
+      <div>
+        <div className="sub-header flex flex-container flex-vertically-centered">
+          <div className="p-t-1">
+            <ProjectSelector
+              organization={organization}
+              projectId={project.slug}/>
+          </div>
+        </div>
+        <div className="container">
+          <div className="content">
+            <ProjectDocsContext>
+              {this.props.children}
+            </ProjectDocsContext>
+          </div>
+        </div>
+      </div>
+    );
+  }
+});
+
+const GettingStarted = React.createClass({
+  render() {
+    let {projectId, orgId} = this.props.params;
+    return (
+      <ProjectContext orgId={orgId} projectId={projectId}>
+        <GettingStartedBody>
+          {this.props.children}
+        </GettingStartedBody>
+      </ProjectContext>
+    );
+  }
+});
+
+export default GettingStarted;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/index.jsx b/src/sentry/static/sentry/app/views/projectInstall/index.jsx
deleted file mode 100644
index ef0b18a47b..0000000000
--- a/src/sentry/static/sentry/app/views/projectInstall/index.jsx
+++ /dev/null
@@ -1,19 +0,0 @@
-import React from 'react';
-
-import ProjectContext from '../projects/projectContext';
-import ProjectInstallLayout from './projectInstallLayout';
-
-const ProjectInstall = React.createClass({
-  render() {
-    let {projectId, orgId} = this.props.params;
-    return (
-      <ProjectContext orgId={orgId} projectId={projectId}>
-        <ProjectInstallLayout>
-          {this.props.children}
-        </ProjectInstallLayout>
-      </ProjectContext>
-    );
-  }
-});
-
-export default ProjectInstall;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
index 6d60c0ac24..e6a2f10c25 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
@@ -15,13 +15,20 @@ const ProjectInstallOverview = React.createClass({
     };
   },
 
+  isGettingStarted() {
+    return location.href.indexOf('getting-started') > 0;
+  },
+
   getIntegrationLink(root, platform, display) {
     let {orgId, projectId} = this.props.params;
-    let signup = this.props.location.query.hasOwnProperty('signup') ? '?signup' : '';
+    let rootUrl = `/${orgId}/${projectId}/settings/install`;
+    if (this.isGettingStarted()) {
+      rootUrl = `/${orgId}/${projectId}/getting-started`;
+    }
     return (
       <li className={`${root} ${platform}`} key={platform}>
         <span className={`platformicon platformicon-${platform}`}/>
-        <Link to={`/${orgId}/${projectId}/settings/install/${platform}/${signup}`}>
+        <Link to={`${rootUrl}/${platform}/`}>
           {display}
         </Link>
       </li>
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index 7919a1bb3c..9186887356 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -23,6 +23,7 @@ const ProjectInstallPlatform = React.createClass({
     let key = params.platform;
     let integration;
     let platform;
+
     props.platformData.platforms.forEach((p_item) => {
       if (integration) {
         return;
@@ -56,6 +57,10 @@ const ProjectInstallPlatform = React.createClass({
     }
   },
 
+  isGettingStarted() {
+    return location.href.indexOf('getting-started') > 0;
+  },
+
   fetchData() {
     let {orgId, projectId, platform} = this.props.params;
     this.api.request(`/projects/${orgId}/${projectId}/docs/${platform}/`, {
@@ -106,7 +111,6 @@ const ProjectInstallPlatform = React.createClass({
 
   renderBody() {
     let {integration, platform} = this.state;
-    let queryParams = this.props.location.query;
     let {orgId, projectId} = this.props.params;
 
     if (!integration || !platform) {
@@ -142,7 +146,7 @@ const ProjectInstallPlatform = React.createClass({
             <div dangerouslySetInnerHTML={{__html: this.state.html}}/>
           )}
 
-          {queryParams.hasOwnProperty('signup') ?
+          {this.isGettingStarted() &&
             // Using <a /> instead of <Link /> as hashchange events are not
             // triggered when switching views within React Router
             <p>
@@ -151,10 +155,7 @@ const ProjectInstallPlatform = React.createClass({
                 className="btn btn-primary btn-lg">
                   {t('Got it! Take me to the Issue Stream.')}
               </a>
-            </p>
-          :
-            null
-          }
+            </p>}
         </div>
       </div>
     );
diff --git a/src/sentry/web/frontend/create_project.py b/src/sentry/web/frontend/create_project.py
index 430ddbfa60..378b8e3bb9 100644
--- a/src/sentry/web/frontend/create_project.py
+++ b/src/sentry/web/frontend/create_project.py
@@ -89,7 +89,7 @@ class CreateProjectView(OrganizationView):
                 'name': form.cleaned_data['name'],
             }, request=request)
 
-            install_uri = absolute_uri('/{}/{}/settings/install/'.format(
+            install_uri = absolute_uri('/{}/{}/getting-started/'.format(
                 organization.slug,
                 response.data['slug'],
             ))
