commit 6dd036ad8221229994293ea2c7f823eee55d28a0
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Oct 16 15:25:37 2015 +0200

    Moved assign/deassign code into a manger for reuse.

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index ddeb8eed83..b7778e3c53 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -306,55 +306,10 @@ class GroupDetailsEndpoint(GroupEndpoint):
             now = timezone.now()
 
             if result['assignedTo']:
-                assignee, created = GroupAssignee.objects.get_or_create(
-                    group=group,
-                    defaults={
-                        'project': group.project,
-                        'user': result['assignedTo'],
-                        'date_added': now,
-                    }
-                )
-
-                if not created:
-                    affected = GroupAssignee.objects.filter(
-                        group=group,
-                    ).exclude(
-                        user=result['assignedTo'],
-                    ).update(
-                        user=result['assignedTo'],
-                        date_added=now
-                    )
-                else:
-                    affected = True
-
-                if affected:
-                    activity = Activity.objects.create(
-                        project=group.project,
-                        group=group,
-                        type=Activity.ASSIGNED,
-                        user=acting_user,
-                        data={
-                            'assignee': result['assignedTo'].id,
-                        }
-                    )
-                    activity.send_notification()
-
+                GroupAssignee.objects.assign(group, result['assignedTo'],
+                                             acting_user)
             else:
-                affected = GroupAssignee.objects.filter(
-                    group=group,
-                )[:1].count()
-                GroupAssignee.objects.filter(
-                    group=group,
-                ).delete()
-
-                if affected > 0:
-                    activity = Activity.objects.create(
-                        project=group.project,
-                        group=group,
-                        type=Activity.UNASSIGNED,
-                        user=acting_user,
-                    )
-                    activity.send_notification()
+                GroupAssignee.objects.deassign(group, acting_user)
 
         return Response(serialize(group, request.user))
 
diff --git a/src/sentry/models/groupassignee.py b/src/sentry/models/groupassignee.py
index ebac150627..a56adb00d3 100644
--- a/src/sentry/models/groupassignee.py
+++ b/src/sentry/models/groupassignee.py
@@ -11,7 +11,64 @@ from django.conf import settings
 from django.db import models
 from django.utils import timezone
 
-from sentry.db.models import FlexibleForeignKey, Model, sane_repr
+from sentry.db.models import FlexibleForeignKey, Model, sane_repr, \
+    BaseManager
+from sentry.models.activity import Activity
+
+
+class GroupAssigneeManager(BaseManager):
+
+    def assign(self, group, assigned_to, acting_user):
+        now = timezone.now()
+        assignee, created = GroupAssignee.objects.get_or_create(
+            group=group,
+            defaults={
+                'project': group.project,
+                'user': assigned_to,
+                'date_added': now,
+            }
+        )
+
+        if not created:
+            affected = GroupAssignee.objects.filter(
+                group=group,
+            ).exclude(
+                user=assigned_to,
+            ).update(
+                user=assigned_to,
+                date_added=now
+            )
+        else:
+            affected = True
+
+        if affected:
+            activity = Activity.objects.create(
+                project=group.project,
+                group=group,
+                type=Activity.ASSIGNED,
+                user=acting_user,
+                data={
+                    'assignee': assigned_to.id,
+                }
+            )
+            activity.send_notification()
+
+    def deassign(self, group, acting_user):
+        affected = GroupAssignee.objects.filter(
+            group=group,
+        )[:1].count()
+        GroupAssignee.objects.filter(
+            group=group,
+        ).delete()
+
+        if affected > 0:
+            activity = Activity.objects.create(
+                project=group.project,
+                group=group,
+                type=Activity.UNASSIGNED,
+                user=acting_user,
+            )
+            activity.send_notification()
 
 
 class GroupAssignee(Model):
@@ -21,6 +78,8 @@ class GroupAssignee(Model):
     """
     __core__ = False
 
+    objects = GroupAssigneeManager()
+
     project = FlexibleForeignKey('sentry.Project', related_name="assignee_set")
     group = FlexibleForeignKey('sentry.Group', related_name="assignee_set", unique=True)
     user = FlexibleForeignKey(settings.AUTH_USER_MODEL, related_name="sentry_assignee_set")
