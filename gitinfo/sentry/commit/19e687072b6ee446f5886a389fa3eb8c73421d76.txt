commit 19e687072b6ee446f5886a389fa3eb8c73421d76
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Sep 14 12:12:44 2018 -0700

    feat(discover): Support relative as well as absolute time (#9767)
    
    Add ability to choose from various commonly used timeframes as well as
    input custom dates.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index a94b6797e7..51dae442f0 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -76,6 +76,14 @@ export default class OrganizationDiscover extends React.Component {
     });
   };
 
+  handleUpdateTime = ({relative, start, end}) => {
+    this.updateFields({
+      range: relative,
+      start,
+      end,
+    });
+  };
+
   runQuery = () => {
     const {queryBuilder, organization} = this.props;
 
@@ -319,9 +327,12 @@ export default class OrganizationDiscover extends React.Component {
               />
               <HeaderSeparator />
               <TimeRangeSelector
+                showAbsolute={true}
+                showRelative={true}
                 start={currentQuery.start}
                 end={currentQuery.end}
-                onChange={(name, val) => this.updateField(name, val)}
+                relative={currentQuery.range}
+                onChange={this.handleUpdateTime}
                 onUpdate={this.runQuery}
               />
             </ProjectAndTimeSelector>
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
index 0ee8d94c29..fd09d8abd4 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
@@ -7,17 +7,12 @@ import {t} from 'app/locale';
 import {COLUMNS, PROMOTED_TAGS, SPECIAL_TAGS} from './data';
 import {isValidAggregation} from './aggregations/utils';
 
-const DATE_TIME_FORMAT = 'YYYY-MM-DDTHH:mm:ss';
-
 const DEFAULTS = {
   projects: [],
   fields: [],
   conditions: [],
   aggregations: [],
-  start: moment()
-    .subtract(14, 'days')
-    .format(DATE_TIME_FORMAT),
-  end: moment().format(DATE_TIME_FORMAT),
+  range: '14d',
   orderby: '-timestamp',
   limit: 1000,
 };
@@ -66,10 +61,7 @@ export default function createQueryBuilder(initial = {}, organization) {
       fields: ['tags_key'],
       aggregations: [['count()', null, 'count']],
       orderby: '-count',
-      start: moment()
-        .subtract(90, 'days')
-        .format(DATE_TIME_FORMAT),
-      end: moment().format(DATE_TIME_FORMAT),
+      range: '90d',
     })
       .then(res => {
         tags = res.data.map(tag => {
diff --git a/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx b/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
index 82d9bbc766..307be7ae26 100644
--- a/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
@@ -46,8 +46,7 @@ describe('Query Builder', function() {
             aggregations: [['count()', null, 'count']],
             orderby: '-count',
             projects: [2],
-            start: '2017-07-19T02:41:20',
-            end: '2017-10-17T02:41:20',
+            range: '90d',
           }),
         })
       );
