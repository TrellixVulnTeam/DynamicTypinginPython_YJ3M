commit 33b00907ef3f96d4d102c2b6e9104a720395c5ce
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 11 19:22:39 2014 -0700

    Move team settings into Angular

diff --git a/src/sentry/static/sentry/app/base.js b/src/sentry/static/sentry/app/base.js
index c882fe4ae4..4057843ea3 100644
--- a/src/sentry/static/sentry/app/base.js
+++ b/src/sentry/static/sentry/app/base.js
@@ -536,14 +536,6 @@ define([
             }
         }),
 
-        TeamDetailsPage: BasePage.extend({
-            initialize: function(){
-                BasePage.prototype.initialize.apply(this, arguments);
-
-                appUtils.makeSearchableUsersInput('form input[name=owner]');
-            }
-        }),
-
         ProjectDetailsPage: BasePage.extend({
             initialize: function(){
                 BasePage.prototype.initialize.apply(this, arguments);
diff --git a/src/sentry/static/sentry/app/controllers/manageTeamOwnership.js b/src/sentry/static/sentry/app/controllers/manageTeamOwnership.js
index cfc887f835..c617dd2405 100644
--- a/src/sentry/static/sentry/app/controllers/manageTeamOwnership.js
+++ b/src/sentry/static/sentry/app/controllers/manageTeamOwnership.js
@@ -10,7 +10,6 @@ define([
 
     init: function() {
       this.$scope.newOwner = null;
-
     },
 
     isUnchanged: function(value) {
diff --git a/src/sentry/static/sentry/app/controllers/manageTeamSettings.js b/src/sentry/static/sentry/app/controllers/manageTeamSettings.js
new file mode 100644
index 0000000000..9c44912b57
--- /dev/null
+++ b/src/sentry/static/sentry/app/controllers/manageTeamSettings.js
@@ -0,0 +1,35 @@
+define([
+  'angular',
+  'app'
+], function(angular, app) {
+  'use strict';
+
+  app.classy.controller({
+    name: 'ManageTeamSettingsCtrl',
+
+    inject: ['$scope', '$http', 'selectedTeam'],
+
+    init: function() {
+      this.$scope.teamData = {
+        name: this.selectedTeam.name,
+        slug: this.selectedTeam.slug
+      };
+    },
+
+    isUnchanged: function() {
+      for (var name in this.$scope.teamData) {
+        if (this.selectedTeam[name] != this.$scope.teamData[name]) {
+          return false;
+        }
+      }
+      return true;
+    },
+
+    saveForm: function() {
+      this.$http.put('/api/0/teams/' + this.selectedTeam.id + '/', this.$scope.teamData)
+        .success(function(data){
+          window.location.href = '/account/teams/' + data.slug + '/settings';
+        });
+    }
+  });
+});
diff --git a/src/sentry/static/sentry/app/directives/searchUsersInput.js b/src/sentry/static/sentry/app/directives/searchUsersInput.js
new file mode 100644
index 0000000000..a76fba6799
--- /dev/null
+++ b/src/sentry/static/sentry/app/directives/searchUsersInput.js
@@ -0,0 +1,32 @@
+define(['app', 'appUtils'], function(app, appUtils) {
+  'use strict';
+
+  app.directive('searchUsers', ['$timeout', function($timeout) {
+    return function searchUsers(scope, element, attrs) {
+      var timeout_id;
+
+      function update(value){
+        if (!value || value === undefined) {
+          return '';
+        }
+
+        element.text(moment.utc(value).fromNow());
+      }
+
+      function tick(){
+        update(scope.$eval(attrs.timeSince));
+        timeout_id = $timeout(tick, 1000);
+      }
+
+      scope.$watch(attrs.timeSince, update);
+
+      element.bind('$destroy', function() {
+        if (timeout_id) {
+          $timeout.cancel(timeout_id);
+        }
+      });
+
+      tick();
+    };
+  }]);
+});
diff --git a/src/sentry/static/sentry/main.js b/src/sentry/static/sentry/main.js
index bad6dac8e4..e92ef3a200 100644
--- a/src/sentry/static/sentry/main.js
+++ b/src/sentry/static/sentry/main.js
@@ -6,6 +6,7 @@ define([
   'app/controllers/default',
   'app/controllers/deleteTeam',
   'app/controllers/manageTeamOwnership',
+  'app/controllers/manageTeamSettings',
   'app/controllers/projectStream',
   'app/controllers/teamDashboard',
 
diff --git a/src/sentry/templates/sentry/teams/manage-ownership.html b/src/sentry/templates/sentry/teams/manage-ownership.html
index d67071abaf..c1ac3eb319 100644
--- a/src/sentry/templates/sentry/teams/manage-ownership.html
+++ b/src/sentry/templates/sentry/teams/manage-ownership.html
@@ -12,7 +12,8 @@
 
     <div class="box-content with-padding">
       <form role="form" name="form">
-          <p>Transferring ownership will retain your membership as an admin and takes affect immediately.</p>
+        <p>Transferring ownership will retain your membership as an admin and takes affect immediately.</p>
+
         <div class="form-group" ng-class="form.newOwner.$invalid ? 'error' : ''">
           <label for="newOwner">User:</label>
           <input id="newOwner"
@@ -27,7 +28,9 @@
             <span ng-show="form.newOwner.$error.required">Enter a valid user.</span>
           </div>
         </div>
+
         <p><label><input ng-model="confirm" type="checkbox" value="1" required> I understand and want to transfer this team.</label></p>
+
         <button class="btn btn-primary"
                 ng-click="saveForm()"
                 ng-disabled="form.$invalid || isUnchanged(newOwner)">Save</button>
diff --git a/src/sentry/templates/sentry/teams/manage.html b/src/sentry/templates/sentry/teams/manage.html
index 3f2b6e852e..d37f935d22 100644
--- a/src/sentry/templates/sentry/teams/manage.html
+++ b/src/sentry/templates/sentry/teams/manage.html
@@ -9,6 +9,8 @@
 
 {% block bodyclass %}{% endblock %}
 
+{% block controller %}ManageTeamSettingsCtrl{% endblock %}
+
 {% block main %}
   {% block inner %}
   <div class="box">
@@ -16,32 +18,44 @@
           <h3>{% trans "Team Details" %}</h3>
       </div>
       <div class="box-content with-padding">
-          <form class="form-stacked" action="." method="post">
-              {% csrf_token %}
-
-              {% if form.errors %}
-                  <div class="alert alert-error">{% trans "Please correct the errors below." %}</div>
-              {% endif %}
-
-              {{ form|as_crispy_errors }}
+          <form method="post"name="form">
+              <div class="form-group" ng-class="form.name.$invalid ? 'error' : ''">
+                <label for="id_name">Name:</label>
+                <input id="id_name"
+                       name="name"
+                       ng-model="teamData.name"
+                       class="form-control"
+                       type="text"
+                       placeholder="team name"
+                       style="width: 240px"
+                       required>
+                <div ng-show="form.name.$dirty && form.name.$invalid">Invalid:
+                  <span ng-show="form.name.$error.required">Enter a valid team name.</span>
+                </div>
+              </div>
 
-              <fieldset>
-                  {% for field in form %}
-                        {{ field|as_crispy_field }}
-                  {% endfor %}
-              </fieldset>
+              <div class="form-group" ng-class="form.slug.$invalid ? 'error' : ''">
+                <label for="id_slug">Slug:</label>
+                <input id="id_slug"
+                       name="slug"
+                       ng-model="teamData.slug"
+                       class="form-control"
+                       type="text"
+                       placeholder="team slug"
+                       style="width: 240px"
+                       required>
+                <div ng-show="form.slug.$dirty && form.slug.$invalid">Invalid:
+                  <span ng-show="form.slug.$error.required">Enter a valid team slug.</span>
+                </div>
+              </div>
 
               <div class="form-actions">
-                  <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
+                  <button class="btn btn-primary"
+                          ng-click="saveForm()"
+                          ng-disabled="form.$invalid || isUnchanged()">{% trans "Save Changes" %}</button>
               </div>
           </form>
       </div>
   </div>
-
-  <script type="text/javascript">
-      require(['config', 'app/init'], function(_, app){
-          new app.TeamDetailsPage();
-      });
-  </script>
   {% endblock %}
 {% endblock %}
diff --git a/src/sentry/web/forms/teams.py b/src/sentry/web/forms/teams.py
index 2b9bbef7cc..dfc7f0bc22 100644
--- a/src/sentry/web/forms/teams.py
+++ b/src/sentry/web/forms/teams.py
@@ -8,15 +8,11 @@ sentry.web.forms.teams
 from django import forms
 from django.utils.translation import ugettext_lazy as _
 
-from sentry.constants import MEMBER_TYPES, RESERVED_TEAM_SLUGS
+from sentry.constants import MEMBER_TYPES
 from sentry.models import Team, TeamMember, PendingTeamMember, AccessGroup, Project
 from sentry.web.forms.fields import UserField, get_team_choices
 
 
-class RemoveTeamForm(forms.Form):
-    pass
-
-
 class NewTeamForm(forms.ModelForm):
     name = forms.CharField(label=_('Team Name'), max_length=200,
         widget=forms.TextInput(attrs={'placeholder': _('example.com')}))
@@ -34,24 +30,6 @@ class NewTeamAdminForm(NewTeamForm):
         model = Team
 
 
-class EditTeamForm(forms.ModelForm):
-    class Meta:
-        fields = ('name',)
-        model = Team
-
-
-class EditTeamAdminForm(EditTeamForm):
-    class Meta:
-        fields = ('name', 'slug',)
-        model = Team
-
-    def clean_slug(self):
-        value = self.cleaned_data['slug']
-        if value in RESERVED_TEAM_SLUGS:
-            raise forms.ValidationError('You may not use "%s" as a slug' % (value,))
-        return value
-
-
 class SelectTeamForm(forms.Form):
     team = forms.TypedChoiceField(choices=(), coerce=int)
 
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index 3e2a72d798..923d92d1ee 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -25,8 +25,8 @@ from sentry.utils.samples import create_sample_event
 from sentry.web.decorators import login_required, has_access
 from sentry.web.forms.teams import (
     NewTeamForm, NewTeamAdminForm,
-    EditTeamForm, EditTeamMemberForm, NewTeamMemberForm,
-    InviteTeamMemberForm, RemoveTeamForm, AcceptInviteForm, NewAccessGroupForm,
+    EditTeamMemberForm, NewTeamMemberForm,
+    InviteTeamMemberForm, AcceptInviteForm, NewAccessGroupForm,
     EditAccessGroupForm, NewAccessGroupMemberForm, NewAccessGroupProjectForm,
     RemoveAccessGroupForm)
 from sentry.web.helpers import render_to_response
@@ -81,18 +81,9 @@ def manage_team(request, team):
     if result is False and not request.user.is_superuser:
         return HttpResponseRedirect(reverse('sentry'))
 
-    form = EditTeamForm(request.POST or None, instance=team)
-    if form.is_valid():
-        team = form.save()
-        messages.add_message(request, messages.SUCCESS,
-            _('Changes to your team were saved.'))
-
-        return HttpResponseRedirect(reverse('sentry-manage-team', args=[team.slug]))
-
     context = csrf(request)
     context.update({
         'page': 'details',
-        'form': form,
         'SUBSECTION': 'settings',
     })
 
@@ -120,22 +111,9 @@ def remove_team(request, team):
     if not can_remove_team(request.user, team):
         return HttpResponseRedirect(reverse('sentry'))
 
-    if request.method == 'POST':
-        form = RemoveTeamForm(request.POST)
-    else:
-        form = RemoveTeamForm()
-
-    if form.is_valid():
-        team.delete()
-        messages.add_message(
-            request, messages.SUCCESS,
-            _(u'The team %r was permanently deleted.') % (team.name.encode('utf-8'),))
-        return HttpResponseRedirect(reverse('sentry'))
-
     context = csrf(request)
     context.update({
         'page': 'settings',
-        'form': form,
         'SUBSECTION': 'delete',
     })
 
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index aa76958f17..0a412c9d05 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -105,41 +105,6 @@ class ManageTeamTest(BaseTeamTest):
         self.assertTemplateUsed(resp, 'sentry/teams/manage.html')
         assert resp.context['team'] == self.team
 
-    def test_valid_params(self):
-        resp = self.client.post(self.path, {
-            'name': 'bar',
-            'slug': self.team.slug,
-        })
-        assert resp.status_code == 302
-        self.assertEquals(resp['Location'], 'http://testserver' + self.path)
-        team = Team.objects.get(pk=self.team.pk)
-        self.assertEquals(team.name, 'bar')
-
-
-class RemoveTeamTest(BaseTeamTest):
-    @fixture
-    def path(self):
-        return reverse('sentry-remove-team', args=[self.team.slug])
-
-    @mock.patch('sentry.web.frontend.teams.can_remove_team', mock.Mock(return_value=False))
-    def test_missing_permission(self):
-        resp = self.client.post(self.path)
-        self.assertEquals(resp.status_code, 302)
-        self.assertEquals(resp['Location'], 'http://testserver' + reverse('sentry'))
-
-    @mock.patch('sentry.web.frontend.teams.can_remove_team', mock.Mock(return_value=True))
-    def test_loads(self):
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/teams/remove.html')
-
-    @mock.patch('sentry.web.frontend.teams.can_remove_team', mock.Mock(return_value=True))
-    def test_valid_params(self):
-        resp = self.client.post(self.path)
-        assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver' + reverse('sentry')
-        assert not Team.objects.filter(pk=self.team.pk).exists()
-
 
 class NewTeamMemberTest(BaseTeamTest):
     @fixture
