commit edbfef8744bd619a1795422371adbeef08156c31
Author: Leander Rodrigues <leandergrodrigues@gmail.com>
Date:   Mon Feb 24 09:53:53 2020 -0800

    feat(async-csv): Setup email notifications for data exports (#17102)
    
    Allow for email notifications after successful data exports

diff --git a/src/sentry/models/exporteddata.py b/src/sentry/models/exporteddata.py
index 23722e87f5..7845fd2572 100644
--- a/src/sentry/models/exporteddata.py
+++ b/src/sentry/models/exporteddata.py
@@ -4,6 +4,7 @@ import six
 from enum import Enum
 from datetime import timedelta
 from django.conf import settings
+from django.core.urlresolvers import reverse
 from django.db import models
 from django.utils import timezone
 
@@ -15,6 +16,7 @@ from sentry.db.models import (
     Model,
     sane_repr,
 )
+from sentry.utils.http import absolute_uri
 
 # Arbitrary, subject to change
 DEFAULT_EXPIRATION = timedelta(weeks=4)
@@ -54,6 +56,12 @@ class ExportedData(Model):
         else:
             return ExportStatus.Valid
 
+    @property
+    def date_expired_string(self):
+        if self.date_expired is None:
+            return None
+        return self.date_expired.strftime("%-I:%M %p on %B %d, %Y (%Z)")
+
     def delete_file(self):
         if self.file:
             self.file.delete()
@@ -67,7 +75,27 @@ class ExportedData(Model):
         current_time = timezone.now()
         expire_time = current_time + expiration
         self.update(file=file, date_finished=current_time, date_expired=expire_time)
-        # TODO(Leander): Implement email notification
+        self.email_success()
+
+    def email_success(self):
+        from sentry.utils.email import MessageBuilder
+
+        # The following condition should never be true, but it's a safeguard in case someone manually calls this method
+        if self.date_finished is None or self.date_expired is None or self.file is None:
+            # TODO(Leander): Implement logging here
+            return
+        msg = MessageBuilder(
+            subject="Your Download is Ready!",
+            context={
+                "url": absolute_uri(
+                    reverse("sentry-data-export-details", args=[self.organization.slug, self.id])
+                ),
+                "expiration": self.date_expired_string,
+            },
+            template="sentry/emails/data-export-success.txt",
+            html_template="sentry/emails/data-export-success.html",
+        )
+        msg.send_async([self.user.email])
 
     class Meta:
         app_label = "sentry"
diff --git a/src/sentry/tasks/data_export.py b/src/sentry/tasks/data_export.py
index 847d8bb5d2..a868a27245 100644
--- a/src/sentry/tasks/data_export.py
+++ b/src/sentry/tasks/data_export.py
@@ -29,7 +29,9 @@ def assemble_download(data_export):
         # Create a new File object and attach it to the ExportedData
         tf.seek(0)
         with transaction.atomic():
-            file = File.objects.create(name=file_name, type="export.csv")
+            file = File.objects.create(
+                name=file_name, type="export.csv", headers={"Content-Type": "text/csv"}
+            )
             file.putfile(tf)
             data_export.finalize_upload(file=file)
 
diff --git a/src/sentry/templates/sentry/emails/data-export-success.html b/src/sentry/templates/sentry/emails/data-export-success.html
new file mode 100644
index 0000000000..99cf0ab585
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/data-export-success.html
@@ -0,0 +1,10 @@
+{% extends "sentry/emails/base.html" %}
+
+{% load i18n %}
+
+{% block main %}
+    <h3>Your Data is Ready!</h3>
+    <p>We've finished assembling your download, check it out by clicking the button below.</p>
+    <p>This download file will expire at {{expiration}}.</p>
+    <a href="{{ url|safe }}" class="btn">Go to Download</a>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/data-export-success.txt b/src/sentry/templates/sentry/emails/data-export-success.txt
new file mode 100644
index 0000000000..6e3fb7b841
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/data-export-success.txt
@@ -0,0 +1,5 @@
+We've finished assembling your download, check it out by clicking the link below:
+
+{{url|safe}}
+
+The download file will expire at {{expiration}}
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 692ebc8559..9eb6e991a8 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -489,6 +489,11 @@ urlpatterns += [
                     react_page_view,
                     name="sentry-organization-event-detail",
                 ),
+                url(
+                    r"^(?P<organization_slug>[\w_-]+)/data-export/(?P<data_export_id>\d+)/$",
+                    react_page_view,
+                    name="sentry-data-export-details",
+                ),
                 url(
                     r"^(?P<organization_slug>[\w_-]+)/issues/(?P<group_id>\d+)/events/(?P<event_id_or_latest>[\w-]+)/json/$",
                     GroupEventJsonView.as_view(),
diff --git a/tests/sentry/models/test_exporteddata.py b/tests/sentry/models/test_exporteddata.py
index 31164a2b00..ba1b470302 100644
--- a/tests/sentry/models/test_exporteddata.py
+++ b/tests/sentry/models/test_exporteddata.py
@@ -2,15 +2,20 @@ from __future__ import absolute_import
 
 import tempfile
 from datetime import timedelta
+from django.core import mail
+from django.core.urlresolvers import reverse
+from django.utils import timezone
 
 from sentry.models import ExportedData, File
-from sentry.models.exporteddata import DEFAULT_EXPIRATION
+from sentry.models.exporteddata import DEFAULT_EXPIRATION, ExportStatus
 from sentry.testutils import TestCase
+from sentry.utils.http import absolute_uri
+from sentry.utils.compat.mock import patch
 
 
-class DeleteExportedDataTest(TestCase):
+class ExportedDataTest(TestCase):
     def setUp(self):
-        super(DeleteExportedDataTest, self).setUp()
+        super(ExportedDataTest, self).setUp()
         self.user = self.create_user()
         self.organization = self.create_organization()
         self.data_export = ExportedData.objects.create(
@@ -23,6 +28,24 @@ class DeleteExportedDataTest(TestCase):
             name="tempfile-data-export", type="export.csv", headers={"Content-Type": "text/csv"}
         )
 
+    def test_status_property(self):
+        assert self.data_export.status == ExportStatus.Early
+        self.data_export.update(
+            date_expired=timezone.now() + timedelta(weeks=2),
+            date_finished=timezone.now() - timedelta(weeks=2),
+        )
+        assert self.data_export.status == ExportStatus.Valid
+        self.data_export.update(date_expired=timezone.now() - timedelta(weeks=1))
+        assert self.data_export.status == ExportStatus.Expired
+
+    def test_date_expired_string_property(self):
+        assert self.data_export.date_expired_string is None
+        current_time = timezone.now()
+        self.data_export.update(date_expired=current_time)
+        assert self.data_export.date_expired_string == current_time.strftime(
+            "%-I:%M %p on %B %d, %Y (%Z)"
+        )
+
     def test_delete_file(self):
         # Empty call should have no effect
         assert self.data_export.file is None
@@ -68,3 +91,32 @@ class DeleteExportedDataTest(TestCase):
         # Ensure the first file is deleted
         assert not File.objects.filter(id=self.file1.id).exists()
         assert self.data_export.date_expired == self.data_export.date_finished + timedelta(weeks=2)
+
+    def test_email_success(self):
+        # Shouldn't send if ExportedData is incomplete
+        with self.tasks():
+            self.data_export.email_success()
+        assert len(mail.outbox) == 0
+        # Should send one email if complete
+        self.data_export.finalize_upload(file=self.file1)
+        with self.tasks():
+            self.data_export.email_success()
+        assert len(mail.outbox) == 1
+
+    @patch("sentry.utils.email.MessageBuilder")
+    def test_email_success_content(self, builder):
+        self.data_export.finalize_upload(file=self.file1)
+        with self.tasks():
+            self.data_export.email_success()
+        expected_url = absolute_uri(
+            reverse(
+                "sentry-data-export-details", args=[self.organization.slug, self.data_export.id]
+            )
+        )
+        expected_email_args = {
+            "subject": "Your Download is Ready!",
+            "context": {"url": expected_url, "expiration": self.data_export.date_expired_string},
+            "template": "sentry/emails/data-export-success.txt",
+            "html_template": "sentry/emails/data-export-success.html",
+        }
+        assert builder.call_args[1] == expected_email_args
