commit 31418af2fbb74e3169b235a469e41a3f78d8a778
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Aug 1 10:09:13 2016 -0700

    Don't error when creating a duplicate project/org slug (#3792)

diff --git a/src/sentry/api/endpoints/organization_index.py b/src/sentry/api/endpoints/organization_index.py
index fed27b2113..b10854f721 100644
--- a/src/sentry/api/endpoints/organization_index.py
+++ b/src/sentry/api/endpoints/organization_index.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from django.db import IntegrityError, transaction
 from django.db.models import Q
 from rest_framework import serializers, status
 from rest_framework.response import Response
@@ -108,10 +109,17 @@ class OrganizationIndexEndpoint(Endpoint):
         if serializer.is_valid():
             result = serializer.object
 
-            org = Organization.objects.create(
-                name=result['name'],
-                slug=result.get('slug'),
-            )
+            try:
+                with transaction.atomic():
+                    org = Organization.objects.create(
+                        name=result['name'],
+                        slug=result.get('slug'),
+                    )
+            except IntegrityError:
+                return Response(
+                    {'detail': 'An organization with this slug already exists.'},
+                    status=409,
+                )
 
             OrganizationMember.objects.create(
                 user=request.user,
diff --git a/src/sentry/api/endpoints/team_project_index.py b/src/sentry/api/endpoints/team_project_index.py
index 16c12b153c..bdde38fbe0 100644
--- a/src/sentry/api/endpoints/team_project_index.py
+++ b/src/sentry/api/endpoints/team_project_index.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from django.db import IntegrityError, transaction
 from rest_framework import serializers, status
 from rest_framework.response import Response
 
@@ -86,12 +87,19 @@ class TeamProjectIndexEndpoint(TeamEndpoint):
         if serializer.is_valid():
             result = serializer.object
 
-            project = Project.objects.create(
-                name=result['name'],
-                slug=result.get('slug'),
-                organization=team.organization,
-                team=team
-            )
+            try:
+                with transaction.atomic():
+                    project = Project.objects.create(
+                        name=result['name'],
+                        slug=result.get('slug'),
+                        organization=team.organization,
+                        team=team
+                    )
+            except IntegrityError:
+                return Response(
+                    {'detail': 'A project with this slug already exists.'},
+                    status=409,
+                )
 
             # XXX: create sample event?
 
diff --git a/tests/sentry/api/endpoints/test_organization_index.py b/tests/sentry/api/endpoints/test_organization_index.py
index 3db968d010..4c6d1799b0 100644
--- a/tests/sentry/api/endpoints/test_organization_index.py
+++ b/tests/sentry/api/endpoints/test_organization_index.py
@@ -43,6 +43,12 @@ class OrganizationsCreateTest(APITestCase):
         assert org.name == 'hello world'
         assert org.slug == 'foobar'
 
+        resp = self.client.post(self.path, data={
+            'name': 'hello world',
+            'slug': 'foobar',
+        })
+        assert resp.status_code == 409, resp.content
+
     def test_without_slug(self):
         self.login_as(user=self.user)
 
diff --git a/tests/sentry/api/endpoints/test_team_project_index.py b/tests/sentry/api/endpoints/test_team_project_index.py
index 412f20b881..87ade6c5cd 100644
--- a/tests/sentry/api/endpoints/test_team_project_index.py
+++ b/tests/sentry/api/endpoints/test_team_project_index.py
@@ -43,3 +43,9 @@ class TeamProjectCreateTest(APITestCase):
         assert project.name == 'hello world'
         assert project.slug == 'foobar'
         assert project.team == team
+
+        resp = self.client.post(url, data={
+            'name': 'hello world',
+            'slug': 'foobar',
+        })
+        assert resp.status_code == 409, resp.content
