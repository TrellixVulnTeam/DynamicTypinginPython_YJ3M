commit 814e27f7eaa18d053f1595c91e89e39cb5bb9827
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Feb 24 12:44:42 2016 -0800

    Only loosly validate request interface method
    
    Fixes GH-2727

diff --git a/src/sentry/interfaces/http.py b/src/sentry/interfaces/http.py
index 8c067cfc72..83a66bad12 100644
--- a/src/sentry/interfaces/http.py
+++ b/src/sentry/interfaces/http.py
@@ -10,17 +10,21 @@ from __future__ import absolute_import
 
 __all__ = ('Http',)
 
+import re
 from django.conf import settings
 from django.utils.translation import ugettext as _
 from urllib import urlencode
 from urlparse import parse_qsl, urlsplit, urlunsplit
 
-from sentry.constants import HTTP_METHODS
 from sentry.interfaces.base import Interface, InterfaceValidationError
 from sentry.utils import json
 from sentry.utils.safe import trim, trim_dict, trim_pairs
 from sentry.web.helpers import render_to_string
 
+# Instead of relying on a list of hardcoded methods, just loosly match
+# against a pattern.
+http_method_re = re.compile(r'^[A-Z\-_]{3,32}$')
+
 
 def to_bytes(value):
     if isinstance(value, unicode):
@@ -126,7 +130,9 @@ class Http(Interface):
 
         if data.get('method'):
             method = data['method'].upper()
-            if method not in HTTP_METHODS:
+            # Optimize for the common path here, where it's a GET/POST, falling
+            # back to a regular expresion test
+            if method not in ('GET', 'POST') and not http_method_re.match(method):
                 raise InterfaceValidationError("Invalid value for 'method'")
             kwargs['method'] = method
         else:
diff --git a/tests/sentry/interfaces/test_http.py b/tests/sentry/interfaces/test_http.py
index 0083664213..42e80ace77 100644
--- a/tests/sentry/interfaces/test_http.py
+++ b/tests/sentry/interfaces/test_http.py
@@ -4,6 +4,7 @@ from __future__ import absolute_import
 
 from exam import fixture
 
+from sentry.interfaces.base import InterfaceValidationError
 from sentry.interfaces.http import Http
 from sentry.testutils import TestCase
 
@@ -136,3 +137,40 @@ class HttpTest(TestCase):
             headers={'Foo': 1}
         ))
         assert result.headers == [('Foo', '1')]
+
+    def test_method(self):
+        with self.assertRaises(InterfaceValidationError):
+            Http.to_python(dict(
+                url='http://example.com',
+                method='1234',
+            ))
+
+        with self.assertRaises(InterfaceValidationError):
+            Http.to_python(dict(
+                url='http://example.com',
+                method='A' * 33,
+            ))
+
+        with self.assertRaises(InterfaceValidationError):
+            Http.to_python(dict(
+                url='http://example.com',
+                method='A',
+            ))
+
+        result = Http.to_python(dict(
+            url='http://example.com',
+            method='TEST',
+        ))
+        assert result.method == 'TEST'
+
+        result = Http.to_python(dict(
+            url='http://example.com',
+            method='FOO-BAR',
+        ))
+        assert result.method == 'FOO-BAR'
+
+        result = Http.to_python(dict(
+            url='http://example.com',
+            method='FOO_BAR',
+        ))
+        assert result.method == 'FOO_BAR'
