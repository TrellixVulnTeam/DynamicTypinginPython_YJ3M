commit cf32e64cc73c7afac93e62971a92aad86b9ce30a
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 12 13:59:07 2015 -0600

    Add project details endpoints to docs

diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index 58df30f12e..4e13b2d7d4 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -28,7 +28,7 @@ class DocSection(Enum):
     EVENTS = 'Events'
     RELEASES = 'Releases'
     # ORGANIZATIONS = 'Organizations'
-    # PROJECTS = 'Projects'
+    PROJECTS = 'Projects'
     # TEAMS = 'Teams'
 
 
diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index a324a98bed..fcdd4999a2 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from rest_framework import serializers, status
 from rest_framework.response import Response
 
-from sentry.api.base import Endpoint
+from sentry.api.base import DocSection, Endpoint
 from sentry.api.decorators import sudo_required
 from sentry.api.permissions import assert_perm
 from sentry.api.serializers import serialize
@@ -21,9 +21,11 @@ class ProjectSerializer(serializers.ModelSerializer):
 
 
 class ProjectDetailsEndpoint(Endpoint):
+    doc_section = DocSection.PROJECTS
+
     def get(self, request, project_id):
         """
-        Retrieve a project.
+        Retrieve a project
 
         Return details on an individual project.
 
@@ -44,6 +46,20 @@ class ProjectDetailsEndpoint(Endpoint):
 
     @sudo_required
     def put(self, request, project_id):
+        """
+        Update a project
+
+        Update various attributes and configurable settings for the given project.
+
+            {method} {path}
+            {{
+              "name": "My Project Name",
+              "options": {{
+                "sentry:origins": "*"
+              }}
+            }}
+
+        """
         project = Project.objects.get(id=project_id)
 
         assert_perm(project, request.user, request.auth, access=MEMBER_ADMIN)
@@ -79,6 +95,17 @@ class ProjectDetailsEndpoint(Endpoint):
 
     @sudo_required
     def delete(self, request, project_id):
+        """
+        Delete a project
+
+        Schedules a project for deletion.
+
+            {method} {path}
+
+        Note: Deletion happens asyncrhonously and therefor is not immediate.
+        However once deletion has begun the state of a project changes and will
+        be hidden from most public views.
+        """
         project = Project.objects.get(id=project_id)
 
         if project.is_internal_project():
