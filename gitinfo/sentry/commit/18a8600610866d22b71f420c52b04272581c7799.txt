commit 18a8600610866d22b71f420c52b04272581c7799
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Oct 18 15:59:09 2017 -0700

    ref(auth): Clean up auth provider feature flags
    
     - Allow providers to specify what feature they require
     - Verify a provider is enabled during setup
     - Adds sso-rippling as it's own feature

diff --git a/docs/sso.rst b/docs/sso.rst
index ca35178f4b..911399058f 100644
--- a/docs/sso.rst
+++ b/docs/sso.rst
@@ -20,6 +20,13 @@ with a feature switch in your ``sentry.conf.py``::
     # turn SSO on our off
     SENTRY_FEATURES['organizations:sso'] = False
 
+Additionally you may enable advanced SSO features::
+
+    from sentry.conf.server import *
+
+    SENTRY_FEATURES['organizations:sso-saml2'] = True
+    SENTRY_FEATURES['organizations:sso-rippling'] = True
+
 You should see an **Auth** subheading under your organization's dashboard when SSO is enabled.
 
 Installing a Provider
diff --git a/src/sentry/auth/provider.py b/src/sentry/auth/provider.py
index 98e8a443d3..ead2402fd8 100644
--- a/src/sentry/auth/provider.py
+++ b/src/sentry/auth/provider.py
@@ -11,6 +11,7 @@ class Provider(object):
     including its configuration and basic identity management.
     """
     name = None
+    required_feature = None
 
     def __init__(self, key, **config):
         self.key = key
diff --git a/src/sentry/auth/providers/saml2.py b/src/sentry/auth/providers/saml2.py
index c7bb1285be..ba9ea97834 100644
--- a/src/sentry/auth/providers/saml2.py
+++ b/src/sentry/auth/providers/saml2.py
@@ -226,6 +226,7 @@ class SAML2Provider(Provider):
       state during setup. The attribute mapping should map the `Attributes`
       constants to the Identity Provider attribute keys.
     """
+    required_feature = 'organizations:sso-saml2'
 
     def get_auth_pipeline(self):
         return [SAML2LoginView(), SAML2ACSView()]
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index a97c4f7c69..46d719e8f1 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -721,7 +721,8 @@ SENTRY_FEATURES = {
     'organizations:api-keys': False,
     'organizations:create': True,
     'organizations:sso': True,
-    'organizations:saml2': False,
+    'organizations:sso-saml2': False,
+    'organizations:sso-rippling': False,
     'organizations:group-unmerge': False,
     'organizations:integrations-v3': False,
     'projects:global-events': False,
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 55ecf38bf6..b25b89a3aa 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -9,7 +9,8 @@ default_manager.add('auth:register')
 default_manager.add('organizations:api-keys', OrganizationFeature)  # NOQA
 default_manager.add('organizations:create')
 default_manager.add('organizations:sso', OrganizationFeature)  # NOQA
-default_manager.add('organizations:saml2', OrganizationFeature)  # NOQA
+default_manager.add('organizations:sso-saml2', OrganizationFeature)  # NOQA
+default_manager.add('organizations:sso-rippling', OrganizationFeature)  # NOQA
 default_manager.add('organizations:onboarding', OrganizationFeature)  # NOQA
 default_manager.add('organizations:repos', OrganizationFeature)  # NOQA
 default_manager.add('organizations:release-commits', OrganizationFeature)  # NOQA
diff --git a/src/sentry/web/frontend/organization_auth_settings.py b/src/sentry/web/frontend/organization_auth_settings.py
index 58e391a84a..0b117f5a5b 100644
--- a/src/sentry/web/frontend/organization_auth_settings.py
+++ b/src/sentry/web/frontend/organization_auth_settings.py
@@ -185,6 +185,10 @@ class OrganizationAuthSettingsView(OrganizationView):
                 flow=AuthHelper.FLOW_SETUP_PROVIDER,
             )
 
+            feature = helper.provider.required_feature
+            if feature and not features.has(feature, organization, actor=request.user):
+                return HttpResponse('Provider is not enabled', status=401)
+
             if request.POST.get('init'):
                 helper.init_pipeline()
 
@@ -197,11 +201,13 @@ class OrganizationAuthSettingsView(OrganizationView):
         provider_list = []
 
         for k, v in manager:
-            if issubclass(v, SAML2Provider):
-                if not HAS_SAML2:
-                    continue
-                if not features.has('organizations:saml2', organization, actor=request.user):
-                    continue
+            if issubclass(v, SAML2Provider) and not HAS_SAML2:
+                continue
+
+            feature = v.required_feature
+            if feature and not features.has(feature, organization, actor=request.user):
+                continue
+
             provider_list.append((k, v.name))
 
         context = {
