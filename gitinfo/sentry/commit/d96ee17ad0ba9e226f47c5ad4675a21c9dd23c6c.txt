commit d96ee17ad0ba9e226f47c5ad4675a21c9dd23c6c
Author: Ted Kaemming <ted@kaemming.com>
Date:   Fri Oct 2 16:18:37 2015 -0700

    Summarize host list.

diff --git a/src/sentry/utils/versioning.py b/src/sentry/utils/versioning.py
index 7bfc5ca71b..3185b09141 100644
--- a/src/sentry/utils/versioning.py
+++ b/src/sentry/utils/versioning.py
@@ -10,9 +10,19 @@ class Version(tuple):
         return '.'.join(map(str, self))
 
 
+def summarize(sequence, max=3):
+    items = sequence[:max]
+    remainder = len(sequence) - max
+    if remainder == 1:
+        items.append('and one other')
+    elif remainder > 1:
+        items.append('and %s others' % (remainder,))
+    return items
+
+
 def make_upgrade_message(service, modality, version, hosts):
     return '{service} {modality} be upgraded to {version} on {hosts}.'.format(
-        hosts=', '.join('{0} (currently {1})'.format(*i) for i in hosts),
+        hosts=','.join(map(str, summarize(hosts.keys(), 2))),
         modality=modality,
         service=service,
         version=version,
@@ -30,12 +40,12 @@ def check_versions(service, versions, required, recommended=None):
     :param recommended: recommended version. If any host does not fulfill this
         requirement, a ``PendingDeprecationWarning`` is raised.
     """
-    must_upgrade = filter(lambda (host, version): required > version, versions.items())
+    must_upgrade = dict(filter(lambda (host, version): required > version, versions.items()))
     if must_upgrade:
         raise InvalidConfiguration(make_upgrade_message(service, 'must', required, must_upgrade))
 
     if recommended:
-        should_upgrade = filter(lambda (host, version): recommended > version, versions.items())
+        should_upgrade = dict(filter(lambda (host, version): recommended > version, versions.items()))
         if should_upgrade:
             warnings.warn(
                 make_upgrade_message(service, 'should', recommended, should_upgrade),
