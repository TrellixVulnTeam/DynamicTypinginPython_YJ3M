commit dd0fa6bacd92f3986c7a16b5ead0ae998a17bd9a
Author: Ben Vinegar <ben@benv.ca>
Date:   Thu Sep 24 13:29:47 2015 -0700

    Sidebar loads initial values (from default query or URL query)

diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index 3288c0e9da..b63d1a1d19 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -3,6 +3,7 @@ import Reflux from "reflux";
 import $ from "jquery";
 import Cookies from "js-cookie";
 import Sticky from 'react-sticky';
+import _ from "underscore";
 
 import api from "../api";
 
@@ -375,6 +376,15 @@ var Stream = React.createClass({
     var router = this.context.router;
     var params = router.getCurrentParams();
 
+    let queryItems = this.state.query.match(/\S+:"[^"]*"?|\S+/g);
+    let queryObj = _.inject(queryItems, (obj, item) => {
+      let index = item.indexOf(':');
+      let tagKey = item.slice(0, index);
+      let value = item.slice(index + 1);
+      obj[tagKey] = value;
+      return obj;
+    }, {});
+
     return (
       <div>
         <StreamFilters
@@ -404,7 +414,7 @@ var Stream = React.createClass({
             <Pagination pageLinks={this.state.pageLinks} onPage={this.onPage} />
           </div>
           <div className="col-md-2">
-            <StreamSidebar tags={this.state.tags} onQueryChange={this.onSearch}/>
+            <StreamSidebar tags={this.state.tags} initialQuery={queryObj} onQueryChange={this.onSearch}/>
           </div>
         </div>
       </div>
diff --git a/src/sentry/static/sentry/app/views/stream/sidebar.jsx b/src/sentry/static/sentry/app/views/stream/sidebar.jsx
index d6cf7bb178..0d5bc6d4cb 100644
--- a/src/sentry/static/sentry/app/views/stream/sidebar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/sidebar.jsx
@@ -9,34 +9,35 @@ var StreamSidebar = React.createClass({
 
   propTypes: {
     tags: React.PropTypes.object.isRequired,
-    onQueryChange: React.PropTypes.func.isRequired
+    onQueryChange: React.PropTypes.func.isRequired,
+    defaultQuery: React.PropTypes.string
   },
 
   getDefaultProps() {
     return {
       tags: {},
-      onQueryChange: function () {}
+      onQueryChange: function () {},
+      initialQuery: {}
     };
   },
 
   getInitialState() {
     return {
-      activeTagValues: {},
+      currentQuery: this.props.initialQuery
     };
   },
 
-  buildQuery() {
-    return _.map(this.state.activeTagValues, (value, tagKey) => {
+  getQueryStr() {
+    return _.map(this.state.currentQuery, (value, tagKey) => {
       return `${tagKey}:${value}`;
     }).join(' ');
   },
 
   onSelectTag(tag, value) {
     this.setState({
-      activeTagValues: {...this.state.activeTagValues, [tag.key]:value}
+      currentQuery: {...this.state.currentQuery, [tag.key]:value}
     }, () => {
-      let query = this.buildQuery();
-      console.log(query);
+      let query = this.getQueryStr();
       this.props.onQueryChange && this.props.onQueryChange(query);
     });
   },
@@ -47,6 +48,7 @@ var StreamSidebar = React.createClass({
         {_.map(this.props.tags, (tag) => {
           return (
             <StreamTagFilter
+              initialValue={this.state.currentQuery[tag.key]}
               key={tag.key}
               tag={tag}
               onSelect={this.onSelectTag}
diff --git a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
index 3c2e5982d5..26912b7490 100644
--- a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
+++ b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
@@ -26,6 +26,7 @@ var StreamTagFilter = React.createClass({
   getDefaultProps() {
     return {
       tag: {},
+      initialValue: null
     };
   },
 
@@ -34,7 +35,7 @@ var StreamTagFilter = React.createClass({
       tagValues: this.props.tag.values || [],
       query: '',
       loading: false,
-      selectedValue: 'Search for a ' + this.props.tag.name
+      selectedValue: this.props.initialValue
     };
   },
 
@@ -97,7 +98,7 @@ var StreamTagFilter = React.createClass({
         <h6>{tag.name}</h6>
         <DropdownLink
           className="btn btn-default btn-sm"
-          title={this.state.selectedValue}>
+          title={this.state.selectedValue || 'Search for a ' + this.props.tag.name}>
           <MenuItem noAnchor={true} key="filter">
             <input type="text"
               className="form-control input-sm"
