commit 22183b854eab6eaf8d8ca0a3bab90f187b577167
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jul 11 10:43:26 2016 -0700

    Disable password recovery on managed accounts
    
    @getsentry/infrastructure
    
    Refs GH-3683

diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index f3c57472fb..18d28ed921 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -172,6 +172,11 @@ class RecoverPasswordForm(CaptchaForm):
         users = find_users(value, with_valid_password=False)
         if not users:
             raise forms.ValidationError(_("We were unable to find a matching user."))
+
+        users = [u for u in users if not u.is_managed]
+        if not users:
+            raise forms.ValidationError(_("The account you are trying to recover is managed and does not support password recovery."))
+
         if len(users) > 1:
             raise forms.ValidationError(_("Multiple accounts were found matching this email address."))
         return users[0]
diff --git a/tests/sentry/web/frontend/accounts/tests.py b/tests/sentry/web/frontend/accounts/tests.py
index 1d03c414e1..37b001f2d6 100644
--- a/tests/sentry/web/frontend/accounts/tests.py
+++ b/tests/sentry/web/frontend/accounts/tests.py
@@ -272,6 +272,17 @@ class RecoverPasswordTest(TestCase):
         assert 'form' in resp.context
         assert 'user' in resp.context['form'].errors
 
+    def test_managed_account_is_invalid(self):
+        user = self.create_user('foo@example.com', is_managed=True)
+
+        resp = self.client.post(self.path, {
+            'user': user.email,
+        })
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/account/recover/index.html')
+        assert 'form' in resp.context
+        assert 'user' in resp.context['form'].errors
+
     @mock.patch('sentry.models.LostPasswordHash.send_recover_mail')
     def test_valid_username(self, send_recover_mail):
         resp = self.client.post(self.path, {
