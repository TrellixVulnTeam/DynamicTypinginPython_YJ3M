commit 6edef87ecdd0450279116bba0c28357c8ecdb20b
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Sep 23 15:11:12 2015 -0700

    Fix various behavior in rule editor

diff --git a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
index 4eb11f268d..ebcdcc74d8 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
@@ -21,8 +21,10 @@ var RuleEditor = React.createClass({
 
   serializeNode(node) {
     var result = {};
-    $(node).find('input, select').each(function() {
-      result[this.name] = $(this).val();
+    $(node).find('input, select').each((_, el) => {
+      if (el.name) {
+        result[el.name] = $(el).val();
+      }
     });
     return result;
   },
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
index 85740320f1..f7fb8bed61 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
@@ -4,11 +4,28 @@ import $ from "jquery";
 var RuleNode = React.createClass({
   componentDidMount() {
     let $html = $(this.refs.html.getDOMNode());
-    $html.find('select').selectize();
+
     $html.find('select, input, textarea').each((_, el) => {
       let $el = $(el);
+      $el.attr('id', '');
       $el.val(this.props[el.name]);
     });
+
+    $html.find('select').select2();
+
+    $html.find('input.typeahead').each((_, el) => {
+      let $el = $(el);
+      $el.select2({
+        initSelection: function(option, callback) {
+          let $option = $(option);
+          callback({id: $option.val(), text: $option.val()});
+        },
+        data: $el.data('choices'),
+        createSearchChoice: function(term) {
+          return {id: $.trim(term), text: $.trim(term)};
+        }
+      });
+    });
   },
 
   render() {
