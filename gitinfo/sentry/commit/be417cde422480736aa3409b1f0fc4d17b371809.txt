commit be417cde422480736aa3409b1f0fc4d17b371809
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Thu Oct 26 10:52:35 2017 -0500

    fix: Remove tag management page form, drop unused caching, fix None check (#6431)
    
    Fixes GH-6428

diff --git a/src/sentry/api/endpoints/project_tags.py b/src/sentry/api/endpoints/project_tags.py
index fe5d4c7bdb..e7eee366eb 100644
--- a/src/sentry/api/endpoints/project_tags.py
+++ b/src/sentry/api/endpoints/project_tags.py
@@ -10,7 +10,7 @@ from sentry.api.bases.project import ProjectEndpoint
 
 class ProjectTagsEndpoint(ProjectEndpoint):
     def get(self, request, project):
-        tag_keys = tagstore.get_tag_keys(project.id)
+        tag_keys = sorted(tagstore.get_tag_keys(project.id), key=lambda x: x.key)
 
         data = []
         for tag_key in tag_keys:
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 0310c33299..c72824c737 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -190,17 +190,6 @@ class Project(Model):
                 return True
         return False
 
-    def get_tags(self):
-        from sentry import tagstore
-
-        if not hasattr(self, '_tag_cache'):
-            tags = self.get_option('tags', None)
-            if tags is None:
-                tags = [t for t in (tk.key for tk in tagstore.get_tag_keys(self.id))]
-            self._tag_cache = tags
-
-        return self._tag_cache
-
     # TODO: Make these a mixin
     def update_option(self, *args, **kwargs):
         from sentry.models import ProjectOption
diff --git a/src/sentry/tagstore/legacy/backend.py b/src/sentry/tagstore/legacy/backend.py
index 9bdfdc9ff7..62d93f404b 100644
--- a/src/sentry/tagstore/legacy/backend.py
+++ b/src/sentry/tagstore/legacy/backend.py
@@ -10,7 +10,7 @@ from __future__ import absolute_import
 
 import six
 
-from collections import defaultdict, Iterable
+from collections import defaultdict
 from datetime import timedelta
 from django.db import connections, router, IntegrityError, transaction
 from django.db.models import Q, Sum
@@ -22,7 +22,6 @@ from sentry import buffer
 from sentry.tagstore import TagKeyStatus
 from sentry.tagstore.base import TagStorage
 from sentry.utils import db
-from sentry.utils.cache import cache
 
 from .models import EventTag, GroupTagKey, GroupTagValue, TagKey, TagValue
 
@@ -123,7 +122,7 @@ class LegacyTagStorage(TagStorage):
             key=key,
         )
 
-        if status:
+        if status is not None:
             qs = qs.filter(status=status)
 
         try:
@@ -131,34 +130,19 @@ class LegacyTagStorage(TagStorage):
         except TagKey.DoesNotExist:
             raise TagKeyNotFound
 
-    def _get_tag_keys_cache_key(self, project_ids, status):
-        if isinstance(project_ids, Iterable):
-            project_ids = "-".join(sorted(project_ids))
-        return 'filterkey:all:%s:%s' % (project_ids, status)
-
     def get_tag_keys(self, project_ids, keys=None, status=TagKeyStatus.VISIBLE):
-        def _get_base_qs():
-            if isinstance(project_ids, six.integer_types):
-                qs = TagKey.objects.filter(project_id=project_ids)
-            else:
-                qs = TagKey.objects.filter(project_id__in=project_ids)
-
-            if status:
-                qs = qs.filter(status=status)
+        if isinstance(project_ids, six.integer_types):
+            qs = TagKey.objects.filter(project_id=project_ids)
+        else:
+            qs = TagKey.objects.filter(project_id__in=project_ids)
 
-            return qs
+        if status is not None:
+            qs = qs.filter(status=status)
 
-        if not keys:
-            # TODO: cache invalidation via post_save/post_delete signals much like BaseManager
-            key = self._get_tag_keys_cache_key(project_ids, status)
-            result = cache.get(key)
-            if result is None:
-                qs = _get_base_qs()
-                result = list(qs.order_by('-values_seen')[:20])
-                cache.set(key, result, 60)
-            return result
+        if keys is not None:
+            qs = qs.filter(key__in=keys)
 
-        return list(_get_base_qs())
+        return list(qs)
 
     def get_tag_value(self, project_id, key, value):
         from sentry.tagstore.exceptions import TagValueNotFound
diff --git a/src/sentry/templates/sentry/projects/manage_tags.html b/src/sentry/templates/sentry/projects/manage_tags.html
index aaafdf6a96..df65866cbe 100644
--- a/src/sentry/templates/sentry/projects/manage_tags.html
+++ b/src/sentry/templates/sentry/projects/manage_tags.html
@@ -12,41 +12,35 @@
   {% if tag_list %}
     <p>{% blocktrans with link='https://docs.sentry.io/hosted/learn/context/' %}Each event in Sentry may be annotated with various tags (key and value pairs). Learn how to <a href="{{ link }}">add custom tags</a>.{% endblocktrans %}</p>
 
-    <form action="" method="post">
-      {% csrf_token %}
-      {{ form|as_crispy_errors }}
-
-      <div class="panel panel-default">
-        <table class="table">
-          <thead>
-            <tr>
-              <th>Tags</th>
-              <th style="width:20px">&nbsp;</th>
+    <div class="panel panel-default">
+      <table class="table">
+        <thead>
+          <tr>
+            <th>Tags</th>
+            <th style="width:20px">&nbsp;</th>
+          </tr>
+        </thead>
+        <tbody>
+          {% for tag in tag_list %}
+            <tr data-tagkey="{{ tag.key }}">
+              <td>
+                <h5 style="margin-bottom: 10px;">{{ tag.get_label }} <small>({{ tag.key }})</small></h5>
+              </td>
+              <td>
+              {% comment %}
+                Make sure this onclick is wrapped in single quotes
+                and not double quotes becuase the value is being
+                JSON encoded and can't put double quotes within
+                double quotes.
+              {% endcomment %}
+                <a class="btn btn-sm btn-default" href="javascript:void(0)"
+                    onclick='removeTagKey({{ tag.key|to_json }})'><span class="icon icon-trash"></span></a>
+              </td>
             </tr>
-          </thead>
-          <tbody>
-            {% for tag in tag_list %}
-              <tr data-tagkey="{{ tag.key }}">
-                <td>
-                  <h5 style="margin-bottom: 10px;">{{ tag.get_label }} <small>({{ tag.key }})</small></h5>
-                </td>
-                <td>
-                {% comment %}
-                  Make sure this onclick is wrapped in single quotes
-                  and not double quotes becuase the value is being
-                  JSON encoded and can't put double quotes within
-                  double quotes.
-                {% endcomment %}
-                  <a class="btn btn-sm btn-default" href="javascript:void(0)"
-                     onclick='removeTagKey({{ tag.key|to_json }})'><span class="icon icon-trash"></span></a>
-                </td>
-              </tr>
-            {% endfor %}
-          </tbody>
-        </table>
-      </div>
-      <button type="submit" name="op" value="save" class="btn btn-primary">{% trans "Save Changes" %}</button>
-    </form>
+          {% endfor %}
+        </tbody>
+      </table>
+    </div>
   {% else %}
     <p>{% trans "We have not yet recorded any tags for this project." %}</p>
   {% endif %}
diff --git a/src/sentry/web/frontend/project_tags.py b/src/sentry/web/frontend/project_tags.py
index 7178e97cbc..f8284b219f 100644
--- a/src/sentry/web/frontend/project_tags.py
+++ b/src/sentry/web/frontend/project_tags.py
@@ -6,7 +6,7 @@ from sentry.web.frontend.base import ProjectView
 
 class ProjectTagsView(ProjectView):
     def get(self, request, organization, team, project):
-        tag_list = tagstore.get_tag_keys(project.id)
+        tag_list = sorted(tagstore.get_tag_keys(project.id), key=lambda x: x.key)
 
         context = {
             'tag_list': tag_list,
diff --git a/tests/sentry/api/endpoints/test_project_tagkey_details.py b/tests/sentry/api/endpoints/test_project_tagkey_details.py
index e9f1551177..3b9862be6f 100644
--- a/tests/sentry/api/endpoints/test_project_tagkey_details.py
+++ b/tests/sentry/api/endpoints/test_project_tagkey_details.py
@@ -60,4 +60,8 @@ class ProjectTagKeyDeleteTest(APITestCase):
 
         mock_delete_tag_key.delay.assert_called_once_with(object_id=tagkey.id)
 
-        assert tagstore.get_tag_key(project.id, tagkey.key).status == TagKeyStatus.PENDING_DELETION
+        assert tagstore.get_tag_key(
+            project.id,
+            tagkey.key,
+            status=TagKeyStatus.PENDING_DELETION
+        ).status == TagKeyStatus.PENDING_DELETION
