commit 4cb35c791e52481ce1f9f0df5c71755e5337b1e0
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 3 12:44:17 2015 +0100

    Merge project list with team list

diff --git a/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx b/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx
index c98fb92a67..346f9f668e 100644
--- a/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx
+++ b/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx
@@ -31,8 +31,7 @@ var OrganizationHomeSidebar = React.createClass({
       <div>
         <h6 className="nav-header">General</h6>
         <ul className="nav nav-stacked">
-          <ListLink to="organizationProjects" params={orgParams}>Projects</ListLink>
-          <ListLink to="organizationTeams" params={orgParams}>Teams</ListLink>
+          <ListLink to="organizationTeams" params={orgParams}>Projects</ListLink>
           {access.has('org:read') &&
             <ListLink to="organizationStats" params={orgParams}>Stats</ListLink>
           }
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 407d6419f8..c582105b4b 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -16,7 +16,6 @@ var GroupEventDetails = require("./views/groupEventDetails");
 var OrganizationDetails = require("./views/organizationDetails");
 var OrganizationStats = require("./views/organizationStats");
 var OrganizationTeams = require("./views/organizationTeams");
-var OrganizationProjects = require("./views/organizationProjects");
 var ProjectDashboard = require("./views/projectDashboard");
 var ProjectDetails = require("./views/projectDetails");
 var ProjectReleases = require("./views/projectReleases");
@@ -49,7 +48,6 @@ var routes = (
     </Route>
     <Route path="/organizations/:orgId/" handler={OrganizationDetails}>
       <Route name="organizationStats" path="stats/" handler={OrganizationStats} />
-      <Route name="organizationProjects" path="projects/" handler={OrganizationProjects} />
     </Route>
   </Route>
 );
diff --git a/src/sentry/static/sentry/app/views/organizationProjects.jsx b/src/sentry/static/sentry/app/views/organizationProjects.jsx
deleted file mode 100644
index 6ac855ce1d..0000000000
--- a/src/sentry/static/sentry/app/views/organizationProjects.jsx
+++ /dev/null
@@ -1,122 +0,0 @@
-/*** @jsx React.DOM */
-
-var React = require("react");
-var Reflux = require("reflux");
-var Router = require("react-router");
-
-var api = require("../api");
-var AppState = require("../mixins/appState");
-var BarChart = require("../components/barChart");
-var TeamStore = require("../stores/teamStore");
-var OrganizationHomeContainer = require("../components/organizationHomeContainer");
-var OrganizationState = require("../mixins/organizationState");
-
-var OrganizationProjects = React.createClass({
-  mixins: [
-    AppState,
-    OrganizationState,
-    Reflux.listenTo(TeamStore, "onTeamListChange")
-  ],
-
-  contextTypes: {
-    router: React.PropTypes.func
-  },
-
-  getInitialState() {
-    return {
-      projectList: this.getProjectList()
-    };
-  },
-
-  onTeamListChange() {
-    this.setState({
-      projectList: this.getProjectList()
-    });
-  },
-
-  getProjectList() {
-    var activeTeams = TeamStore.getActive();
-    var projectList = [];
-    activeTeams.forEach((team) => {
-      team.projects.forEach((project) => {
-        projectList.push([team, project]);
-      });
-    });
-    return projectList;
-  },
-
-  getOrganizationStatsEndpoint() {
-    var router = this.context.router;
-    var params = router.getCurrentParams();
-    return '/organizations/' + params.orgId + '/stats/';
-  },
-
-  // TODO(dcramer): handle updating project stats when items change
-  fetchStats() {
-    api.request(this.getOrganizationStatsEndpoint(), {
-      query: {
-        since: new Date().getTime() / 1000 - 3600 * 24,
-        stat: 'received',
-        group: 'project'
-      },
-      success: (data) => {
-        this.setState({
-          projectStats: data
-        });
-      }
-    });
-  },
-
-  componentWillMount() {
-    this.fetchStats();
-  },
-
-  render() {
-    var org = this.getOrganization();
-    var projectStats = this.state.projectStats;
-
-    return (
-      <OrganizationHomeContainer>
-        <div>
-          <h3>My Projects</h3>
-          <table className="table my-projects">
-            <tbody>
-              {this.state.projectList.map((item) => {
-                var team = item[0];
-                var project = item[1];
-                var projectRouteParams = {
-                  orgId: org.slug,
-                  projectId: project.slug
-                };
-                var chartData = null;
-                if (projectStats) {
-                  chartData = projectStats[project.id].map((point) => {
-                    return {x: point[0], y: point[1]};
-                  });
-                }
-                return (
-                  <tr key={project.id}>
-                    <td>
-                      <Router.Link
-                          to="projectDetails"
-                          params={projectRouteParams}>
-                        {team.name} / {project.name}
-                      </Router.Link>
-                    </td>
-                    <td className="align-right">
-                      {chartData &&
-                        <BarChart points={chartData} className="sparkline" />
-                      }
-                    </td>
-                  </tr>
-                );
-              })}
-            </tbody>
-          </table>
-        </div>
-      </OrganizationHomeContainer>
-    );
-  }
-});
-
-module.exports = OrganizationProjects;
diff --git a/src/sentry/static/sentry/app/views/organizationTeams.jsx b/src/sentry/static/sentry/app/views/organizationTeams.jsx
index 15f53b70c0..16d3ab4acf 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams.jsx
@@ -4,6 +4,7 @@ var React = require("react");
 var Reflux = require("reflux");
 
 var api = require("../api");
+var BarChart = require("../components/barChart");
 var ConfigStore = require("../stores/configStore");
 var OrganizationHomeContainer = require("../components/organizationHomeContainer");
 var OrganizationState = require("../mixins/organizationState");
@@ -14,7 +15,12 @@ var TeamStore = require("../stores/teamStore");
 var ExpandedTeamList = React.createClass({
   propTypes: {
     organization: PropTypes.Organization.isRequired,
-    teamList: React.PropTypes.arrayOf(PropTypes.Team).isRequired
+    teamList: React.PropTypes.arrayOf(PropTypes.Team).isRequired,
+    projectStats: React.PropTypes.object
+  },
+
+  contextTypes: {
+    router: React.PropTypes.func
   },
 
   leaveTeam(team) {
@@ -29,6 +35,7 @@ var ExpandedTeamList = React.createClass({
     var org = this.props.organization;
     var urlPrefix = ConfigStore.get('urlPrefix') + '/organizations/' + org.slug;
 
+    var projectStats = this.props.projectStats;
     var teamNodes = this.props.teamList.map((team, teamIdx) => {
       var teamRouteParams = {
         orgId: org.slug,
@@ -55,26 +62,39 @@ var ExpandedTeamList = React.createClass({
                 params={teamRouteParams}>{team.name}</Router.Link>
             </h3>
           </div>
-          <div className="box-content with-padding">
-            <ul className="projects">
-              {team.projects.map((project) => {
-                // <p>There are no projects in this team. Would you like to <a href="#">create a project</a>?</p>
-                var projectRouteParams = {
-                  orgId: org.slug,
-                  projectId: project.slug
-                };
-
-                return (
-                  <li key={project.slug}>
-                    <Router.Link
-                        to="projectDetails"
-                        params={projectRouteParams}>
-                      {project.name}
-                    </Router.Link>
-                  </li>
-                );
-              })}
-            </ul>
+          <div className="box-content">
+            <table className="table project-list">
+              <tbody>
+                {team.projects.map((project) => {
+                  var projectRouteParams = {
+                    orgId: org.slug,
+                    projectId: project.slug
+                  };
+                  var chartData = null;
+                  if (projectStats[project.id]) {
+                    chartData = projectStats[project.id].map((point) => {
+                      return {x: point[0], y: point[1]};
+                    });
+                  }
+                  return (
+                    <tr key={project.id}>
+                      <td>
+                        <Router.Link
+                            to="projectDetails"
+                            params={projectRouteParams}>
+                          {project.name}
+                        </Router.Link>
+                      </td>
+                      <td className="align-right">
+                        {chartData &&
+                          <BarChart points={chartData} className="sparkline" />
+                        }
+                      </td>
+                    </tr>
+                  );
+                })}
+              </tbody>
+            </table>
           </div>
         </div>
       );
@@ -166,19 +186,51 @@ var OrganizationTeams = React.createClass({
     Reflux.listenTo(TeamStore, "onTeamListChange")
   ],
 
+  contextTypes: {
+    router: React.PropTypes.func
+  },
+
   getInitialState() {
     return {
       activeNav: 'your-teams',
-      teamList: TeamStore.getAll()
+      teamList: TeamStore.getAll(),
+      projectStats: {}
     };
   },
 
+  componentWillMount() {
+    this.fetchStats();
+  },
+
+  // TODO(dcramer): handle updating project stats when items change
+  fetchStats() {
+    api.request(this.getOrganizationStatsEndpoint(), {
+      query: {
+        since: new Date().getTime() / 1000 - 3600 * 24,
+        stat: 'received',
+        group: 'project'
+      },
+      success: (data) => {
+        this.setState({
+          projectStats: data
+        });
+      }
+    });
+  },
+
+  getOrganizationStatsEndpoint() {
+    var router = this.context.router;
+    var params = router.getCurrentParams();
+    return '/organizations/' + params.orgId + '/stats/';
+  },
+
   onTeamListChange() {
     var newTeamList = TeamStore.getAll();
 
     this.setState({
       teamList: newTeamList
     });
+    this.fetchStats();
   },
 
   toggleTeams(nav) {
@@ -215,7 +267,8 @@ var OrganizationTeams = React.createClass({
           </ul>
           {activeNav == 'your-teams' ?
             <ExpandedTeamList
-                organization={org} teamList={activeTeams} />
+                organization={org} teamList={activeTeams}
+                projectStats={this.state.projectStats} />
           :
             <SlimTeamList
               organization={org} teamList={allTeams}
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index 79cdf0a48b..585ba77b9a 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -204,16 +204,22 @@
 }
 
 // Project list
-
-.my-projects {
-  .divider {
-    color: @gray-light;
-    padding: 0 4px;
-  }
+table.project-list {
+  border: 0;
+  margin-bottom: 0;
 
   tbody tr td {
-    padding: 25px 20px 23px !important;
-    height: 70px;
+    border: 0;
+    padding: 15px 20px !important;
+    height: 50px;
+
+    &:last-child {
+      width: 250px;
+    }
+
+    .sparkline a {
+      height: 20px;
+    }
   }
 
   a {
