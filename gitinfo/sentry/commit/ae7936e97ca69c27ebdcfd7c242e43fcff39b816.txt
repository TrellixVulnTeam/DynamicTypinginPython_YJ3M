commit ae7936e97ca69c27ebdcfd7c242e43fcff39b816
Author: Henry Chen <tahafut@gmail.com>
Date:   Sun Mar 19 14:11:04 2017 -0700

    No permalink when loggedout (#5105)
    
    * share JSON contains permalink conditional on user authentication and organization membership
    
    * add test for permalink and logged in/out
    
    * use query filter instead of materialized list
    
    * add comment

diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index bc8c858917..f9a5760a0a 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -188,8 +188,13 @@ class GroupSerializer(Serializer):
         else:
             status_label = 'unresolved'
 
-        permalink = absolute_uri(reverse('sentry-group', args=[
-            obj.organization.slug, obj.project.slug, obj.id]))
+        # If user is not logged in and member of the organization,
+        # do not return the permalink which contains private information i.e. org name.
+        if user.is_authenticated() and user.get_orgs().filter(id=obj.organization.id).exists():
+            permalink = absolute_uri(reverse('sentry-group', args=[
+                obj.organization.slug, obj.project.slug, obj.id]))
+        else:
+            permalink = None
 
         is_subscribed, subscription = attrs['subscription']
 
diff --git a/tests/sentry/api/endpoints/test_shared_group_details.py b/tests/sentry/api/endpoints/test_shared_group_details.py
index 7fbcdac9e7..42b9e9db0d 100644
--- a/tests/sentry/api/endpoints/test_shared_group_details.py
+++ b/tests/sentry/api/endpoints/test_shared_group_details.py
@@ -33,3 +33,18 @@ class SharedGroupDetailsTest(APITestCase):
         response = self.client.get(url, format='json')
 
         assert response.status_code == 404
+
+    def test_permalink(self):
+        group = self.create_group()
+
+        url = '/api/0/shared/issues/{}/'.format(group.get_share_id())
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert not response.data['permalink']  # not show permalink when not logged in
+
+        self.login_as(user=self.user)
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert response.data['permalink']  # show permalink when logged in
