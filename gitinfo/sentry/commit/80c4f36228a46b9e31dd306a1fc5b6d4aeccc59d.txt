commit 80c4f36228a46b9e31dd306a1fc5b6d4aeccc59d
Author: Stephen Cefali <scefali@sentry.io>
Date:   Thu Sep 19 13:00:15 2019 -0700

    chore(ts): Convert component/forms/ to TS part 1 (#14741)

diff --git a/src/sentry/static/sentry/app/components/forms/apiForm.jsx b/src/sentry/static/sentry/app/components/forms/apiForm.tsx
similarity index 80%
rename from src/sentry/static/sentry/app/components/forms/apiForm.jsx
rename to src/sentry/static/sentry/app/components/forms/apiForm.tsx
index aba945a92c..daecf0eeda 100644
--- a/src/sentry/static/sentry/app/components/forms/apiForm.jsx
+++ b/src/sentry/static/sentry/app/components/forms/apiForm.tsx
@@ -1,12 +1,22 @@
 import PropTypes from 'prop-types';
 
-import {Client} from 'app/api';
+import {Client, APIRequestMethod} from 'app/api';
 import IndicatorStore from 'app/stores/indicatorStore';
 import Form from 'app/components/forms/form';
 import FormState from 'app/components/forms/state';
 import {t} from 'app/locale';
 
-export default class ApiForm extends Form {
+type Props = Form['props'] & {
+  onSubmit?: (data: object) => void;
+  apiEndpoint: string;
+  apiMethod: APIRequestMethod;
+  submitLoadingMessage?: string;
+  submitErrorMessage?: string;
+};
+
+export default class ApiForm extends Form<Props> {
+  api = new Client();
+
   static propTypes = {
     ...Form.propTypes,
     onSubmit: PropTypes.func,
@@ -22,16 +32,11 @@ export default class ApiForm extends Form {
     submitLoadingMessage: t('Saving changes..'),
   };
 
-  constructor(props, context) {
-    super(props, context);
-    this.api = new Client();
-  }
-
   componentWillUnmount() {
     this.api.clear();
   }
 
-  onSubmit = e => {
+  onSubmit = (e: React.FormEvent<HTMLFormElement>) => {
     e.preventDefault();
 
     if (this.state.state === FormState.SAVING) {
diff --git a/src/sentry/static/sentry/app/components/forms/booleanField.jsx b/src/sentry/static/sentry/app/components/forms/booleanField.tsx
similarity index 80%
rename from src/sentry/static/sentry/app/components/forms/booleanField.jsx
rename to src/sentry/static/sentry/app/components/forms/booleanField.tsx
index 18fef5d84c..4ac3159436 100644
--- a/src/sentry/static/sentry/app/components/forms/booleanField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/booleanField.tsx
@@ -5,13 +5,19 @@ import {defined} from 'app/utils';
 import InputField from 'app/components/forms/inputField';
 import Tooltip from 'app/components/tooltip';
 
-export default class BooleanField extends InputField {
-  coerceValue(props) {
-    const value = super.coerceValue(props);
+type Props = InputField['props'];
+
+type State = InputField['state'] & {
+  value: boolean;
+};
+
+export default class BooleanField extends InputField<Props, State> {
+  coerceValue(initialValue: string | number) {
+    const value = super.coerceValue(initialValue);
     return value ? true : false;
   }
 
-  onChange = e => {
+  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {
     const value = e.target.checked;
     this.setValue(value);
   };
diff --git a/src/sentry/static/sentry/app/components/forms/dateTimeField.jsx b/src/sentry/static/sentry/app/components/forms/dateTimeField.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/forms/dateTimeField.jsx
rename to src/sentry/static/sentry/app/components/forms/dateTimeField.tsx
diff --git a/src/sentry/static/sentry/app/components/forms/emailField.jsx b/src/sentry/static/sentry/app/components/forms/emailField.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/forms/emailField.jsx
rename to src/sentry/static/sentry/app/components/forms/emailField.tsx
diff --git a/src/sentry/static/sentry/app/components/forms/form.jsx b/src/sentry/static/sentry/app/components/forms/form.tsx
similarity index 75%
rename from src/sentry/static/sentry/app/components/forms/form.jsx
rename to src/sentry/static/sentry/app/components/forms/form.tsx
index ba91315a52..ba5e285687 100644
--- a/src/sentry/static/sentry/app/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/components/forms/form.tsx
@@ -6,11 +6,51 @@ import styled from 'react-emotion';
 import FormState from 'app/components/forms/state';
 import {t} from 'app/locale';
 
-class Form extends React.Component {
+type FormProps = {
+  cancelLabel?: string;
+  onCancel?: () => void;
+  onSubmit?: (
+    data: object,
+    onSubmitSuccess?: (data: object) => void,
+    onSubmitError?: (error: object) => void
+  ) => void;
+  initialData?: object;
+  onSubmitSuccess?: (data: object) => void;
+  onSubmitError?: (error: object) => void;
+  resetOnError?: boolean;
+  requireChanges?: boolean;
+  errorMessage?: React.ReactNode;
+  hideErrors?: boolean;
+  className?: string;
+  footerClass?: string;
+  submitDisabled?: boolean;
+  submitLabel?: string;
+  extraButton?: React.ReactNode;
+};
+
+type FormState = {
+  data: any;
+  errors: {non_field_errors?: object[]} & object;
+  initialData: object;
+  state: typeof FormState[keyof typeof FormState];
+};
+
+export type Context = {
+  form: {
+    errors: object;
+    data: object;
+    onFieldChange: (name: string, value: string | number) => void;
+  };
+};
+
+class Form<
+  Props extends FormProps = FormProps,
+  State extends FormState = FormState
+> extends React.Component<Props, State> {
   static propTypes = {
     cancelLabel: PropTypes.string,
     onCancel: PropTypes.func,
-    onSubmit: PropTypes.func.isRequired,
+    onSubmit: PropTypes.func, //actually required but we cannot make it required because it's optional in apiForm
     onSubmitSuccess: PropTypes.func,
     onSubmitError: PropTypes.func,
     submitDisabled: PropTypes.bool,
@@ -42,14 +82,14 @@ class Form extends React.Component {
     form: PropTypes.object.isRequired,
   };
 
-  constructor(props, context) {
+  constructor(props: Props, context: Context) {
     super(props, context);
     this.state = {
       data: {...this.props.initialData},
       errors: {},
       initialData: {...this.props.initialData},
       state: FormState.READY,
-    };
+    } as State;
   }
 
   getChildContext() {
@@ -63,12 +103,15 @@ class Form extends React.Component {
     };
   }
 
-  onSubmit = e => {
+  onSubmit = (e: React.FormEvent<HTMLFormElement>) => {
     e.preventDefault();
+    if (!this.props.onSubmit) {
+      throw new Error('onSubmit is a required prop');
+    }
     this.props.onSubmit(this.state.data, this.onSubmitSuccess, this.onSubmitError);
   };
 
-  onSubmitSuccess = data => {
+  onSubmitSuccess = (data: object) => {
     const curData = this.state.data;
     let newData = {};
     if (data) {
@@ -106,7 +149,7 @@ class Form extends React.Component {
     this.props.onSubmitError && this.props.onSubmitError(error);
   };
 
-  onFieldChange = (name, value) => {
+  onFieldChange = (name: string, value: string | number) => {
     this.setState(state => ({
       data: {
         ...state.data,
@@ -176,7 +219,6 @@ class Form extends React.Component {
 
 // Note: this is so we can use this as a selector for SelectField
 // We need to keep `Form` as a React Component because ApiForm extends it :/
-const StyledForm = styled('form')``;
+export const StyledForm = styled('form')``;
 
 export default Form;
-export {StyledForm};
diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.tsx
similarity index 78%
rename from src/sentry/static/sentry/app/components/forms/formField.jsx
rename to src/sentry/static/sentry/app/components/forms/formField.tsx
index f964fb4cd8..b5d115901e 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.tsx
@@ -6,13 +6,41 @@ import styled from 'react-emotion';
 import {defined} from 'app/utils';
 import InlineSvg from 'app/components/inlineSvg';
 import Tooltip from 'app/components/tooltip';
+import {Context} from 'app/components/forms/form';
+
+type Value = string | number | boolean;
+
+type FormFieldProps = {
+  name: string;
+  style?: object;
+  label?: React.ReactNode;
+  defaultValue?: any;
+  disabled?: boolean;
+  disabledReason?: string;
+  help?: string | React.ReactNode;
+  required?: boolean;
+  hideErrorMessage?: boolean;
+  className?: string;
+  onChange?: (value: Value) => void;
+  error?: string;
+  value?: Value;
+  meta: any;
+};
+
+type FormFieldState = {
+  error: string | null;
+  value: Value;
+};
 
 const StyledInlineSvg = styled(InlineSvg)`
   display: block;
   color: ${p => p.theme.gray3};
 `;
 
-export default class FormField extends React.PureComponent {
+export default class FormField<
+  Props extends FormFieldProps = FormFieldProps,
+  State extends FormFieldState = FormFieldState
+> extends React.PureComponent<Props, State> {
   static propTypes = {
     name: PropTypes.string.isRequired,
     /** Inline style */
@@ -29,6 +57,7 @@ export default class FormField extends React.PureComponent {
     help: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),
     required: PropTypes.bool,
     hideErrorMessage: PropTypes.bool,
+    className: PropTypes.string,
 
     // the following should only be used without form context
     onChange: PropTypes.func,
@@ -47,17 +76,17 @@ export default class FormField extends React.PureComponent {
     form: PropTypes.object,
   };
 
-  constructor(props, context) {
+  constructor(props: Props, context: Context) {
     super(props, context);
     this.state = {
       error: null,
       value: this.getValue(props, context),
-    };
+    } as State;
   }
 
   componentDidMount() {}
 
-  componentWillReceiveProps(nextProps, nextContext) {
+  componentWillReceiveProps(nextProps: Props, nextContext: Context) {
     const newError = this.getError(nextProps, nextContext);
     if (newError !== this.state.error) {
       this.setState({error: newError});
@@ -72,7 +101,7 @@ export default class FormField extends React.PureComponent {
 
   componentWillUnmount() {}
 
-  getValue(props, context) {
+  getValue(props: Props, context: Context) {
     const form = (context || this.context || {}).form;
     props = props || this.props;
     if (defined(props.value)) {
@@ -84,7 +113,7 @@ export default class FormField extends React.PureComponent {
     return defined(props.defaultValue) ? props.defaultValue : '';
   }
 
-  getError(props, context) {
+  getError(props: Props, context: Context) {
     const form = (context || this.context || {}).form;
     props = props || this.props;
     if (defined(props.error)) {
@@ -97,16 +126,16 @@ export default class FormField extends React.PureComponent {
     return `id-${this.props.name}`;
   }
 
-  coerceValue(value) {
+  coerceValue(value: any) {
     return value;
   }
 
-  onChange = e => {
+  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {
     const value = e.target.value;
     this.setValue(value);
   };
 
-  setValue = value => {
+  setValue = (value: Value) => {
     const form = (this.context || {}).form;
     this.setState(
       {
@@ -124,6 +153,10 @@ export default class FormField extends React.PureComponent {
     throw new Error('Must be implemented by child.');
   }
 
+  getClassName(): string {
+    throw new Error('Must be implemented by child.');
+  }
+
   getFinalClassNames() {
     const {className, required} = this.props;
     const {error} = this.state;
diff --git a/src/sentry/static/sentry/app/components/forms/index.jsx b/src/sentry/static/sentry/app/components/forms/index.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/forms/index.jsx
rename to src/sentry/static/sentry/app/components/forms/index.tsx
diff --git a/src/sentry/static/sentry/app/components/forms/inputField.jsx b/src/sentry/static/sentry/app/components/forms/inputField.tsx
similarity index 67%
rename from src/sentry/static/sentry/app/components/forms/inputField.jsx
rename to src/sentry/static/sentry/app/components/forms/inputField.tsx
index 7826d7926a..a4bd932df9 100644
--- a/src/sentry/static/sentry/app/components/forms/inputField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/inputField.tsx
@@ -3,7 +3,15 @@ import React from 'react';
 
 import FormField from 'app/components/forms/formField';
 
-export default class InputField extends FormField {
+type InputFieldProps = FormField['props'] & {
+  placeholder: string;
+  inputStyle?: object;
+};
+
+export default class InputField<
+  Props extends InputFieldProps = InputFieldProps,
+  State extends FormField['state'] = FormField['state']
+> extends FormField<Props, State> {
   static propTypes = {
     ...FormField.propTypes,
     placeholder: PropTypes.string,
@@ -24,7 +32,7 @@ export default class InputField extends FormField {
         disabled={this.props.disabled}
         name={this.props.name}
         required={this.props.required}
-        value={this.state.value}
+        value={this.state.value as string | number} //can't pass in boolean here
         style={this.props.inputStyle}
         {...this.getAttributes()}
       />
@@ -35,7 +43,7 @@ export default class InputField extends FormField {
     return 'control-group';
   }
 
-  getType() {
+  getType(): string {
     throw new Error('Must be implemented by child.');
   }
 }
diff --git a/src/sentry/static/sentry/app/components/forms/passwordField.jsx b/src/sentry/static/sentry/app/components/forms/passwordField.tsx
similarity index 73%
rename from src/sentry/static/sentry/app/components/forms/passwordField.jsx
rename to src/sentry/static/sentry/app/components/forms/passwordField.tsx
index c6d037be7f..e90eaae3c8 100644
--- a/src/sentry/static/sentry/app/components/forms/passwordField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/passwordField.tsx
@@ -2,14 +2,25 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import InputField from 'app/components/forms/inputField';
 import FormState from 'app/components/forms/state';
+import {Context} from 'app/components/forms/form';
+
+type Props = InputField['props'] & {
+  hasSavedValue?: boolean;
+  prefix: string;
+  formState: typeof FormState[keyof typeof FormState];
+};
+
+type State = InputField['state'] & {
+  editing: boolean;
+};
 
 // TODO(dcramer): im not entirely sure this is working correctly with
 // value propagation in all scenarios
-export default class PasswordField extends InputField {
+export default class PasswordField extends InputField<Props, State> {
   static propTypes = {
     ...InputField.propTypes,
     hasSavedValue: PropTypes.bool,
-    prefix: PropTypes.string,
+    prefix: PropTypes.string.isRequired,
   };
 
   static defaultProps = {
@@ -18,13 +29,13 @@ export default class PasswordField extends InputField {
     prefix: '',
   };
 
-  constructor(props, context) {
+  constructor(props: Props, context: Context) {
     super(props, context);
 
-    this.state.editing = false;
+    this.setState({editing: false});
   }
 
-  componentWillReceiveProps(nextProps) {
+  componentWillReceiveProps(nextProps: Props) {
     // close edit mode after successful save
     // TODO(dcramer): this needs to work with this.context.form
     if (
@@ -42,7 +53,7 @@ export default class PasswordField extends InputField {
     return 'password';
   }
 
-  cancelEdit = e => {
+  cancelEdit = (e: React.MouseEvent<HTMLAnchorElement>) => {
     e.preventDefault();
     this.setState(
       {
@@ -54,7 +65,7 @@ export default class PasswordField extends InputField {
     );
   };
 
-  startEdit = e => {
+  startEdit = (e: React.MouseEvent<HTMLAnchorElement>) => {
     e.preventDefault();
     this.setState({
       editing: true,
diff --git a/src/sentry/static/sentry/app/components/forms/simplePasswordField.jsx b/src/sentry/static/sentry/app/components/forms/simplePasswordField.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/forms/simplePasswordField.jsx
rename to src/sentry/static/sentry/app/components/forms/simplePasswordField.tsx
diff --git a/src/sentry/static/sentry/app/components/forms/state.jsx b/src/sentry/static/sentry/app/components/forms/state.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/forms/state.jsx
rename to src/sentry/static/sentry/app/components/forms/state.tsx
diff --git a/src/sentry/static/sentry/app/components/forms/textareaField.jsx b/src/sentry/static/sentry/app/components/forms/textareaField.tsx
similarity index 75%
rename from src/sentry/static/sentry/app/components/forms/textareaField.jsx
rename to src/sentry/static/sentry/app/components/forms/textareaField.tsx
index 898f294c31..2071550bd8 100644
--- a/src/sentry/static/sentry/app/components/forms/textareaField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/textareaField.tsx
@@ -1,7 +1,11 @@
 import React from 'react';
 import InputField from 'app/components/forms/inputField';
 
-export default class TextareaField extends InputField {
+type State = InputField['state'] & {
+  value?: string;
+};
+
+export default class TextareaField extends InputField<InputField['props'], State> {
   getField() {
     return (
       <textarea
diff --git a/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
index 8cd22a0889..bacae2a0e6 100644
--- a/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
@@ -119,7 +119,7 @@ exports[`SelectField renders without form context 1`] = `
         value="a"
       >
         <SelectControl
-          className="css-j6zs66-StyledSelectControl e1qrhqd00"
+          className="css-gr8jfe-StyledSelectControl e1qrhqd00"
           clearable={true}
           disabled={false}
           height={36}
@@ -145,7 +145,7 @@ exports[`SelectField renders without form context 1`] = `
           <StyledSelect
             arrowRenderer={[Function]}
             backspaceRemoves={true}
-            className="css-j6zs66-StyledSelectControl e1qrhqd00"
+            className="css-gr8jfe-StyledSelectControl e1qrhqd00"
             clearable={true}
             deleteRemoves={true}
             disabled={false}
@@ -172,7 +172,7 @@ exports[`SelectField renders without form context 1`] = `
             <ForwardRef(SelectPicker)
               arrowRenderer={[Function]}
               backspaceRemoves={true}
-              className="e1qrhqd00 css-1qmjoi6-StyledSelect-StyledSelectControl eho28m20"
+              className="e1qrhqd00 css-1ua5cd-StyledSelect-StyledSelectControl eho28m20"
               clearable={true}
               deleteRemoves={true}
               disabled={false}
@@ -199,7 +199,7 @@ exports[`SelectField renders without form context 1`] = `
               <SelectPicker
                 arrowRenderer={[Function]}
                 backspaceRemoves={true}
-                className="e1qrhqd00 css-1qmjoi6-StyledSelect-StyledSelectControl eho28m20"
+                className="e1qrhqd00 css-1ua5cd-StyledSelect-StyledSelectControl eho28m20"
                 clearable={true}
                 deleteRemoves={true}
                 disabled={false}
@@ -229,7 +229,7 @@ exports[`SelectField renders without form context 1`] = `
                   autosize={true}
                   backspaceRemoves={true}
                   backspaceToRemoveMessage="Press backspace to remove {label}"
-                  className="e1qrhqd00 css-1qmjoi6-StyledSelect-StyledSelectControl eho28m20"
+                  className="e1qrhqd00 css-1ua5cd-StyledSelect-StyledSelectControl eho28m20"
                   clearAllText="Clear all"
                   clearRenderer={[Function]}
                   clearValueText="Clear value"
@@ -289,7 +289,7 @@ exports[`SelectField renders without form context 1`] = `
                   valueKey="value"
                 >
                   <div
-                    className="Select e1qrhqd00 css-1qmjoi6-StyledSelect-StyledSelectControl eho28m20 has-value is-clearable is-searchable Select--single"
+                    className="Select e1qrhqd00 css-1ua5cd-StyledSelect-StyledSelectControl eho28m20 has-value is-clearable is-searchable Select--single"
                   >
                     <input
                       disabled={false}
diff --git a/tests/js/spec/views/__snapshots__/installWizard.spec.jsx.snap b/tests/js/spec/views/__snapshots__/installWizard.spec.jsx.snap
index b559c57613..9aa5d846f7 100644
--- a/tests/js/spec/views/__snapshots__/installWizard.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/installWizard.spec.jsx.snap
@@ -49,7 +49,7 @@ exports[`InstallWizard renders 1`] = `
               onSubmit={[Function]}
             >
               <form
-                className="form-stacked css-10f3krf-StyledForm ejqwck10"
+                className="form-stacked css-10f3krf-StyledForm e18zovyk0"
                 onSubmit={[Function]}
               >
                 <p>
diff --git a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
index 467b55a136..759927779d 100644
--- a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
@@ -189,7 +189,7 @@ exports[`Project Ownership Input renders 1`] = `
                   value="path"
                 >
                   <SelectControl
-                    className="css-j6zs66-StyledSelectControl e1qrhqd00"
+                    className="css-gr8jfe-StyledSelectControl e1qrhqd00"
                     clearable={false}
                     disabled={false}
                     height={36}
@@ -215,7 +215,7 @@ exports[`Project Ownership Input renders 1`] = `
                     <StyledSelect
                       arrowRenderer={[Function]}
                       backspaceRemoves={false}
-                      className="css-j6zs66-StyledSelectControl e1qrhqd00"
+                      className="css-gr8jfe-StyledSelectControl e1qrhqd00"
                       clearable={false}
                       deleteRemoves={false}
                       disabled={false}
@@ -242,7 +242,7 @@ exports[`Project Ownership Input renders 1`] = `
                       <ForwardRef(SelectPicker)
                         arrowRenderer={[Function]}
                         backspaceRemoves={false}
-                        className="e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20"
+                        className="e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20"
                         clearable={false}
                         deleteRemoves={false}
                         disabled={false}
@@ -269,7 +269,7 @@ exports[`Project Ownership Input renders 1`] = `
                         <SelectPicker
                           arrowRenderer={[Function]}
                           backspaceRemoves={false}
-                          className="e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20"
+                          className="e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20"
                           clearable={false}
                           deleteRemoves={false}
                           disabled={false}
@@ -299,7 +299,7 @@ exports[`Project Ownership Input renders 1`] = `
                             autosize={true}
                             backspaceRemoves={false}
                             backspaceToRemoveMessage="Press backspace to remove {label}"
-                            className="e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20"
+                            className="e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20"
                             clearAllText="Clear all"
                             clearRenderer={[Function]}
                             clearValueText="Clear value"
@@ -359,7 +359,7 @@ exports[`Project Ownership Input renders 1`] = `
                             valueKey="value"
                           >
                             <div
-                              className="Select e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
+                              className="Select e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                             >
                               <input
                                 disabled={false}
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index a0a7c6cd44..63bf251bf2 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -162,7 +162,7 @@ exports[`RuleBuilder renders 1`] = `
                 value="path"
               >
                 <SelectControl
-                  className="css-j6zs66-StyledSelectControl e1qrhqd00"
+                  className="css-gr8jfe-StyledSelectControl e1qrhqd00"
                   clearable={false}
                   disabled={false}
                   height={36}
@@ -188,7 +188,7 @@ exports[`RuleBuilder renders 1`] = `
                   <StyledSelect
                     arrowRenderer={[Function]}
                     backspaceRemoves={false}
-                    className="css-j6zs66-StyledSelectControl e1qrhqd00"
+                    className="css-gr8jfe-StyledSelectControl e1qrhqd00"
                     clearable={false}
                     deleteRemoves={false}
                     disabled={false}
@@ -215,7 +215,7 @@ exports[`RuleBuilder renders 1`] = `
                     <ForwardRef(SelectPicker)
                       arrowRenderer={[Function]}
                       backspaceRemoves={false}
-                      className="e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20"
+                      className="e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20"
                       clearable={false}
                       deleteRemoves={false}
                       disabled={false}
@@ -242,7 +242,7 @@ exports[`RuleBuilder renders 1`] = `
                       <SelectPicker
                         arrowRenderer={[Function]}
                         backspaceRemoves={false}
-                        className="e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20"
+                        className="e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20"
                         clearable={false}
                         deleteRemoves={false}
                         disabled={false}
@@ -272,7 +272,7 @@ exports[`RuleBuilder renders 1`] = `
                           autosize={true}
                           backspaceRemoves={false}
                           backspaceToRemoveMessage="Press backspace to remove {label}"
-                          className="e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20"
+                          className="e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20"
                           clearAllText="Clear all"
                           clearRenderer={[Function]}
                           clearValueText="Clear value"
@@ -332,7 +332,7 @@ exports[`RuleBuilder renders 1`] = `
                           valueKey="value"
                         >
                           <div
-                            className="Select e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
+                            className="Select e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                           >
                             <input
                               disabled={false}
@@ -1417,7 +1417,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                 value="path"
               >
                 <SelectControl
-                  className="css-j6zs66-StyledSelectControl e1qrhqd00"
+                  className="css-gr8jfe-StyledSelectControl e1qrhqd00"
                   clearable={false}
                   disabled={false}
                   height={36}
@@ -1443,7 +1443,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                   <StyledSelect
                     arrowRenderer={[Function]}
                     backspaceRemoves={false}
-                    className="css-j6zs66-StyledSelectControl e1qrhqd00"
+                    className="css-gr8jfe-StyledSelectControl e1qrhqd00"
                     clearable={false}
                     deleteRemoves={false}
                     disabled={false}
@@ -1470,7 +1470,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                     <ForwardRef(SelectPicker)
                       arrowRenderer={[Function]}
                       backspaceRemoves={false}
-                      className="e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20"
+                      className="e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20"
                       clearable={false}
                       deleteRemoves={false}
                       disabled={false}
@@ -1497,7 +1497,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                       <SelectPicker
                         arrowRenderer={[Function]}
                         backspaceRemoves={false}
-                        className="e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20"
+                        className="e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20"
                         clearable={false}
                         deleteRemoves={false}
                         disabled={false}
@@ -1527,7 +1527,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           autosize={true}
                           backspaceRemoves={false}
                           backspaceToRemoveMessage="Press backspace to remove {label}"
-                          className="e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20"
+                          className="e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20"
                           clearAllText="Clear all"
                           clearRenderer={[Function]}
                           clearValueText="Clear value"
@@ -1587,7 +1587,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           valueKey="value"
                         >
                           <div
-                            className="Select e1qrhqd00 css-95hpmx-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
+                            className="Select e1qrhqd00 css-1nab9yw-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                           >
                             <input
                               disabled={false}
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
index e185874452..dbf03f454b 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
@@ -61,7 +61,7 @@ exports[`OrganizationApiKeyDetails renders 1`] = `
             onSubmit={[Function]}
           >
             <form
-              className="form-stacked css-10f3krf-StyledForm ejqwck10"
+              className="form-stacked css-10f3krf-StyledForm e18zovyk0"
               onSubmit={[Function]}
             >
               <SplitLayout
