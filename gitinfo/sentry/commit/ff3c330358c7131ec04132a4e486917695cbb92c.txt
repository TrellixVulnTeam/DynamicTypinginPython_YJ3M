commit ff3c330358c7131ec04132a4e486917695cbb92c
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jun 25 11:42:56 2019 -0700

    ref: Remove optional chaining (#13800)
    
    This is required for https://github.com/getsentry/sentry/pull/13786

diff --git a/babel.config.js b/babel.config.js
index 99f00dad0d..c9eb8dcbe4 100644
--- a/babel.config.js
+++ b/babel.config.js
@@ -7,7 +7,6 @@ module.exports = {
     'react-hot-loader/babel',
     '@babel/plugin-syntax-dynamic-import',
     '@babel/plugin-proposal-object-rest-spread',
-    '@babel/plugin-proposal-optional-chaining',
     '@babel/plugin-transform-runtime',
     // NOTE: The order of the decorator and class-property plugins is important
     // here. Decorators must be processed first before class properties, see:
diff --git a/package.json b/package.json
index 6d8e83c46a..2074abcee8 100644
--- a/package.json
+++ b/package.json
@@ -11,7 +11,6 @@
     "@babel/plugin-proposal-class-properties": "^7.0.0",
     "@babel/plugin-proposal-decorators": "^7.0.0",
     "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
-    "@babel/plugin-proposal-optional-chaining": "^7.0.0",
     "@babel/plugin-syntax-dynamic-import": "^7.0.0",
     "@babel/plugin-transform-runtime": "^7.0.0",
     "@babel/polyfill": "^7.0.0",
diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 1ed102e0df..dd4ae16c62 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -1,4 +1,4 @@
-import {isUndefined, isNil} from 'lodash';
+import {isUndefined, isNil, get} from 'lodash';
 import $ from 'jquery';
 import * as Sentry from '@sentry/browser';
 
@@ -72,7 +72,7 @@ export class Client {
    * If so, redirect user to new project slug
    */
   hasProjectBeenRenamed(response) {
-    const code = response?.responseJSON?.detail?.code;
+    const code = get(response, 'responseJSON.detail.code');
 
     // XXX(billy): This actually will never happen because we can't intercept the 302
     // jQuery ajax will follow the redirect by default...
@@ -80,7 +80,7 @@ export class Client {
       return false;
     }
 
-    const slug = response?.responseJSON?.detail?.extra?.slug;
+    const slug = get(response, 'responseJSON.detail.extra.slug');
 
     redirectToProject(slug);
     return true;
@@ -120,7 +120,7 @@ export class Client {
   }
 
   handleRequestError({id, path, requestOptions}, response, ...responseArgs) {
-    const code = response?.responseJSON?.detail?.code;
+    const code = get(response, 'responseJSON.detail.code');
     const isSudoRequired = code === SUDO_REQUIRED || code === SUPERUSER_REQUIRED;
 
     if (isSudoRequired) {
diff --git a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
index af7a12ac3d..ab2550431d 100644
--- a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
@@ -1,5 +1,6 @@
 import 'echarts/lib/component/tooltip';
 
+import {get} from 'lodash';
 import {getFormattedDate} from 'app/utils/dates';
 import {truncationFormatter} from '../utils';
 
@@ -54,7 +55,9 @@ function getFormatter({filter, isGroupedByDate, truncate, formatAxisLabel, utc})
     const seriesParams = isAxisItem ? seriesParamsOrParam : [seriesParamsOrParam];
 
     // If axis, timestamp comes from axis, otherwise for a single item it is defined in its data
-    const timestamp = isAxisItem ? seriesParams[0].axisValue : seriesParams[0]?.data[0];
+    const timestamp = isAxisItem
+      ? seriesParams[0].axisValue
+      : get(seriesParams, '[0].data[0]');
 
     const label =
       seriesParams.length && axisFormatterOrDefault(timestamp, isGroupedByDate, utc);
diff --git a/src/sentry/static/sentry/app/components/commitRow.jsx b/src/sentry/static/sentry/app/components/commitRow.jsx
index aaed157a44..d5576570e7 100644
--- a/src/sentry/static/sentry/app/components/commitRow.jsx
+++ b/src/sentry/static/sentry/app/components/commitRow.jsx
@@ -37,7 +37,7 @@ export default class CommitRow extends React.Component {
           <Message>{this.renderMessage(message)}</Message>
           <Meta>
             {tct('[author] committed [timeago]', {
-              author: <strong>{author?.name || t('Unknown author')}</strong>,
+              author: <strong>{(author && author.name) || t('Unknown author')}</strong>,
               timeago: <TimeSince date={dateCreated} />,
             })}
           </Meta>
diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index 7e52c9e5e1..f778747b49 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -89,7 +89,7 @@ export default class FormField extends React.PureComponent {
     if (defined(props.error)) {
       return props.error;
     }
-    return form?.errors[props.name] || null;
+    return (form && form.errors[props.name]) || null;
   }
 
   getId() {
diff --git a/src/sentry/static/sentry/app/components/platformPicker.jsx b/src/sentry/static/sentry/app/components/platformPicker.jsx
index 729a9248a0..9a60a11418 100644
--- a/src/sentry/static/sentry/app/components/platformPicker.jsx
+++ b/src/sentry/static/sentry/app/components/platformPicker.jsx
@@ -35,7 +35,7 @@ class PlatformPicker extends React.Component {
 
   state = {
     category: PLATFORM_CATEGORIES[0].id,
-    filter: this.props.noAutoFilter ? '' : this.props.platform?.split('-')[0],
+    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],
   };
 
   get platformList() {
diff --git a/src/sentry/static/sentry/app/utils/handleXhrErrorResponse.jsx b/src/sentry/static/sentry/app/utils/handleXhrErrorResponse.jsx
index 0bb4a4ff8a..d7b61364dc 100644
--- a/src/sentry/static/sentry/app/utils/handleXhrErrorResponse.jsx
+++ b/src/sentry/static/sentry/app/utils/handleXhrErrorResponse.jsx
@@ -22,11 +22,11 @@ export default function handleXhrErrorResponse(message) {
     }
 
     // Ignore sudo-required errors
-    if (responseJSON?.detail?.code === 'sudo-required') {
+    if (responseJSON.detail && responseJSON.detail.code === 'sudo-required') {
       return;
     }
 
-    if (typeof responseJSON?.detail?.message === 'string') {
+    if (responseJSON.detail && typeof responseJSON.detail.message === 'string') {
       Sentry.withScope(scope => {
         scope.setExtra('status', resp.status);
         scope.setExtra('detail', responseJSON.detail);
diff --git a/src/sentry/static/sentry/app/views/app.jsx b/src/sentry/static/sentry/app/views/app.jsx
index 21aab66fd6..7e9dfcd166 100644
--- a/src/sentry/static/sentry/app/views/app.jsx
+++ b/src/sentry/static/sentry/app/views/app.jsx
@@ -7,7 +7,7 @@ import Cookies from 'js-cookie';
 import PropTypes from 'prop-types';
 import React from 'react';
 import keydown from 'react-keydown';
-import {isEqual} from 'lodash';
+import {get, isEqual} from 'lodash';
 
 import {openCommandPalette} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
@@ -117,8 +117,8 @@ class App extends React.Component {
         return;
       }
 
-      const code = jqXHR?.responseJSON?.detail?.code;
-      const extra = jqXHR?.responseJSON?.detail?.extra;
+      const code = get(jqXHR, 'responseJSON.detail.code');
+      const extra = get(jqXHR, 'responseJSON.detail.extra');
 
       // 401s can also mean sudo is required or it's a request that is allowed to fail
       // Ignore if these are the cases
diff --git a/src/sentry/static/sentry/app/views/onboarding/platform.jsx b/src/sentry/static/sentry/app/views/onboarding/platform.jsx
index b307c6dabb..7d4ce63b5d 100644
--- a/src/sentry/static/sentry/app/views/onboarding/platform.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/platform.jsx
@@ -114,7 +114,7 @@ class OnboardingPlatform extends React.Component {
   render() {
     const {active, project, platform, scrollTargetId} = this.props;
 
-    const selectedPlatform = platform || project?.platform;
+    const selectedPlatform = platform || (project && project.platform);
 
     const continueDisabled =
       !selectedPlatform || this.state.progressing || (this.hasFirstProject && !active);
diff --git a/src/sentry/static/sentry/app/views/onboarding/projectSetup/projectDocs.jsx b/src/sentry/static/sentry/app/views/onboarding/projectSetup/projectDocs.jsx
index 2f7651517c..6749b7aa1f 100644
--- a/src/sentry/static/sentry/app/views/onboarding/projectSetup/projectDocs.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/projectSetup/projectDocs.jsx
@@ -96,7 +96,8 @@ class ProjectDocs extends React.Component {
    */
   get missingExampleWarning() {
     const {loadedPlatform, platformDocs} = this.state;
-    const missingExample = platformDocs?.html?.includes(INCOMPLETE_DOC_FLAG);
+    const missingExample =
+      platformDocs && platformDocs.html.includes(INCOMPLETE_DOC_FLAG);
 
     if (!missingExample) {
       return null;
@@ -110,7 +111,7 @@ class ProjectDocs extends React.Component {
            yet! If you have trouble sending your first event be sure to consult
            the [docsLink:full documentation] for [platform].`,
           {
-            docsLink: <ExternalLink href={platformDocs?.link} />,
+            docsLink: <ExternalLink href={platformDocs && platformDocs.link} />,
             platform: platforms.find(p => p.id === loadedPlatform).name,
           }
         )}
@@ -145,7 +146,7 @@ class ProjectDocs extends React.Component {
               <Button
                 external
                 onClick={this.handleFullDocsClick}
-                href={platformDocs?.link}
+                href={platformDocs && platformDocs.link}
                 size="small"
               >
                 {t('Full Documentation')}
diff --git a/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx b/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx
index 600c7fa913..5ecfc61606 100644
--- a/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx
@@ -95,7 +95,7 @@ class OnboardingWizard extends React.Component {
   }
 
   get projectPlatform() {
-    return this.state.platform || this.firstProject?.platform;
+    return this.state.platform || (this.firstProject && this.firstProject.platform);
   }
 
   handleUpdate = data => {
@@ -228,6 +228,7 @@ const Header = styled('header')`
   z-index: 100;
   box-shadow: 0 10px 30px rgba(0, 0, 0, 0.02);
 
+  /* stylelint-disable-next-line no-duplicate-selectors */
   ${Container} {
     display: grid;
     grid-template-columns: repeat(3, 1fr);
diff --git a/src/sentry/static/sentry/app/views/projectDebugFiles.jsx b/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
index 8fc858f6f2..fdf793986f 100644
--- a/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
+++ b/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
@@ -74,7 +74,7 @@ class ProjectDebugSymbols extends AsyncComponent {
       [
         'debugFiles',
         `/projects/${orgId}/${projectId}/files/dsyms/`,
-        {query: {query: this.props?.location?.query?.query}},
+        {query: {query: this.props.location.query.query}},
       ],
     ];
 
diff --git a/src/sentry/static/sentry/app/views/projects/redirectDeprecatedProjectRoute.jsx b/src/sentry/static/sentry/app/views/projects/redirectDeprecatedProjectRoute.jsx
index 2af8e685c6..346cc33207 100644
--- a/src/sentry/static/sentry/app/views/projects/redirectDeprecatedProjectRoute.jsx
+++ b/src/sentry/static/sentry/app/views/projects/redirectDeprecatedProjectRoute.jsx
@@ -56,7 +56,10 @@ class ProjectDetailsInner extends React.Component {
   };
 
   getProjectId = () => {
-    return this.state.project?.id;
+    if (this.state.project) {
+      return this.state.project.id;
+    }
+    return null;
   };
 
   hasProjectId = () => {
@@ -65,7 +68,10 @@ class ProjectDetailsInner extends React.Component {
   };
 
   getOrganizationId = () => {
-    return this.state.project?.organization?.id;
+    if (this.state.project) {
+      return this.state.project.organization.id;
+    }
+    return null;
   };
 
   render() {
@@ -124,7 +130,7 @@ const redirectDeprecatedProjectRoute = generateRedirectRoute => {
             }
 
             if (!hasProjectId) {
-              if (error?.status === 404) {
+              if (error && error.status === 404) {
                 return (
                   <Alert type="error">
                     {t('The project you were looking for was not found.')}
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
index 4e878dba94..e3bf2e303d 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
@@ -31,8 +31,8 @@ class OrganizationMembersView extends AsyncView {
 
   componentWillReceiveProps(nextProps, nextContext) {
     super.componentWillReceiveProps(nextProps, nextContext);
-    const searchQuery = nextProps?.location?.query?.query;
-    if (searchQuery !== this.props?.location?.query?.query) {
+    const searchQuery = nextProps.location.query.query;
+    if (searchQuery !== this.props.location.query.query) {
       this.setState({searchQuery});
     }
   }
@@ -46,7 +46,7 @@ class OrganizationMembersView extends AsyncView {
       members: [],
       invited: new Map(),
       accessRequestBusy: new Map(),
-      searchQuery: this.props?.location?.query?.query || '',
+      searchQuery: this.props.location.query.query || '',
     };
   }
 
@@ -57,7 +57,7 @@ class OrganizationMembersView extends AsyncView {
         `/organizations/${this.props.params.orgId}/members/`,
         {
           query: {
-            query: this.props?.location?.query?.query,
+            query: this.props.location.query.query,
           },
         },
         {paginate: true},
diff --git a/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
index a67efc07ab..f81ac1afbb 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
@@ -27,8 +27,8 @@ class OrganizationProjects extends AsyncView {
 
   componentWillReceiveProps(nextProps, nextContext) {
     super.componentWillReceiveProps(nextProps, nextContext);
-    const searchQuery = nextProps?.location?.query?.query;
-    if (searchQuery !== this.props?.location?.query?.query) {
+    const searchQuery = nextProps.location.query.query;
+    if (searchQuery !== this.props.location.query.query) {
       this.setState({searchQuery});
     }
   }
@@ -41,7 +41,7 @@ class OrganizationProjects extends AsyncView {
         `/organizations/${orgId}/projects/`,
         {
           query: {
-            query: this.props?.location?.query?.query,
+            query: this.props.location.query.query,
           },
         },
       ],
@@ -62,7 +62,7 @@ class OrganizationProjects extends AsyncView {
   getDefaultState() {
     return {
       ...super.getDefaultState(),
-      searchQuery: this.props?.location?.query?.query || '',
+      searchQuery: this.props.location.query.query || '',
     };
   }
 
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
index 93063214aa..7738c23de0 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import {uniq} from 'lodash';
+import {get, uniq} from 'lodash';
 
 import {t} from 'app/locale';
 import AsyncComponent from 'app/components/asyncComponent';
@@ -46,9 +46,11 @@ class ProjectOwnershipModal extends AsyncComponent {
 
     // pull frame data out of exception or the stacktrace
     let frames =
-      eventData.entries.find(({type}) => type === 'exception')?.data?.values[0]
-        ?.stacktrace?.frames ||
-      eventData.entries.find(({type}) => type === 'stacktrace')?.data?.frames ||
+      get(
+        eventData.entries.find(({type}) => type === 'exception'),
+        'data.values[0].stacktrace.frames'
+      ) ||
+      get(eventData.entries.find(({type}) => type === 'stacktrace'), 'data.frames') ||
       [];
 
     //filter frames by inApp unless there would be 0
diff --git a/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
index 470f76c6ab..2b809be106 100644
--- a/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
@@ -2,6 +2,11 @@
 
 exports[`ProjectDebugFiles renders 1`] = `
 <ProjectDebugSymbols
+  location={
+    Object {
+      "query": Object {},
+    }
+  }
   params={
     Object {
       "orgId": "org",
diff --git a/tests/js/spec/views/projectDebugFiles.spec.jsx b/tests/js/spec/views/projectDebugFiles.spec.jsx
index 6748175ed0..34c1aaf231 100644
--- a/tests/js/spec/views/projectDebugFiles.spec.jsx
+++ b/tests/js/spec/views/projectDebugFiles.spec.jsx
@@ -21,7 +21,10 @@ describe('ProjectDebugFiles', function() {
       body: [],
     });
     const wrapper = shallow(
-      <ProjectDebugFiles params={{orgId: 'org', projectId: 'project'}} />,
+      <ProjectDebugFiles
+        params={{orgId: 'org', projectId: 'project'}}
+        location={{query: {}}}
+      />,
       TestStubs.routerContext()
     );
 
@@ -39,7 +42,10 @@ describe('ProjectDebugFiles', function() {
     });
 
     const wrapper = mount(
-      <ProjectDebugFiles params={{orgId: 'org', projectId: 'project'}} />,
+      <ProjectDebugFiles
+        params={{orgId: 'org', projectId: 'project'}}
+        location={{query: {}}}
+      />,
       TestStubs.routerContext()
     );
 
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
index 9097ea337a..d75ac2a3bb 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
@@ -2,6 +2,11 @@
 
 exports[`OrganizationProjects Should render the projects in the store 1`] = `
 <WithOrganizationMockWrapper
+  location={
+    Object {
+      "query": Object {},
+    }
+  }
   params={
     Object {
       "orgId": "org-slug",
@@ -9,6 +14,11 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
   }
 >
   <OrganizationProjects
+    location={
+      Object {
+        "query": Object {},
+      }
+    }
     organization={
       Object {
         "access": Array [
diff --git a/tests/js/spec/views/settings/organizationMembers/index.spec.jsx b/tests/js/spec/views/settings/organizationMembers/index.spec.jsx
index 4cd970d522..f981f3ecda 100644
--- a/tests/js/spec/views/settings/organizationMembers/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationMembers/index.spec.jsx
@@ -27,6 +27,7 @@ describe('OrganizationMembers', function() {
     onSendInvite: () => {},
     onRemove: () => {},
     onLeave: () => {},
+    location: {query: {}},
   };
   const organization = TestStubs.Organization({
     access: ['member:admin', 'org:admin'],
@@ -371,7 +372,6 @@ describe('OrganizationMembers', function() {
     const wrapper = mount(
       <OrganizationMembers
         {...defaultProps}
-        location={{}}
         params={{
           orgId: 'org-id',
         }}
diff --git a/tests/js/spec/views/settings/organizationProjects.spec.jsx b/tests/js/spec/views/settings/organizationProjects.spec.jsx
index 72b6f3cca5..9a8a35ca7c 100644
--- a/tests/js/spec/views/settings/organizationProjects.spec.jsx
+++ b/tests/js/spec/views/settings/organizationProjects.spec.jsx
@@ -38,7 +38,7 @@ describe('OrganizationProjects', function() {
 
   it('Should render the projects in the store', function() {
     const wrapper = mount(
-      <OrganizationProjectsContainer params={{orgId: org.slug}} />,
+      <OrganizationProjectsContainer params={{orgId: org.slug}} location={{query: {}}} />,
       routerContext
     );
     expect(wrapper).toMatchSnapshot();
@@ -62,7 +62,7 @@ describe('OrganizationProjects', function() {
       body: [],
     });
     const wrapper = mount(
-      <OrganizationProjectsContainer location={{}} params={{orgId: org.slug}} />,
+      <OrganizationProjectsContainer location={{query: {}}} params={{orgId: org.slug}} />,
       routerContext
     );
 
diff --git a/yarn.lock b/yarn.lock
index 4ca356fc76..3b147f1f5b 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -360,14 +360,6 @@
     "@babel/helper-plugin-utils" "^7.0.0"
     "@babel/plugin-syntax-optional-catch-binding" "^7.2.0"
 
-"@babel/plugin-proposal-optional-chaining@^7.0.0":
-  version "7.2.0"
-  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.2.0.tgz#ae454f4c21c6c2ce8cb2397dc332ae8b420c5441"
-  integrity sha512-ea3Q6edZC/55wEBVZAEz42v528VulyO0eir+7uky/sT4XRcdkWJcFi1aPtitTlwUzGnECWJNExWww1SStt+yWw==
-  dependencies:
-    "@babel/helper-plugin-utils" "^7.0.0"
-    "@babel/plugin-syntax-optional-chaining" "^7.2.0"
-
 "@babel/plugin-proposal-unicode-property-regex@^7.0.0", "@babel/plugin-proposal-unicode-property-regex@^7.2.0":
   version "7.2.0"
   resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.2.0.tgz#abe7281fe46c95ddc143a65e5358647792039520"
@@ -447,13 +439,6 @@
   dependencies:
     "@babel/helper-plugin-utils" "^7.0.0"
 
-"@babel/plugin-syntax-optional-chaining@^7.2.0":
-  version "7.2.0"
-  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.2.0.tgz#a59d6ae8c167e7608eaa443fda9fa8fa6bf21dff"
-  integrity sha512-HtGCtvp5Uq/jH/WNUPkK6b7rufnCPLLlDAFN7cmACoIjaOOiXxUt3SswU5loHqrhtqTsa/WoLQ1OQ1AGuZqaWA==
-  dependencies:
-    "@babel/helper-plugin-utils" "^7.0.0"
-
 "@babel/plugin-syntax-typescript@^7.2.0":
   version "7.2.0"
   resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.2.0.tgz#55d240536bd314dcbbec70fd949c5cabaed1de29"
