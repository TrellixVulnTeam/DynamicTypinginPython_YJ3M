commit 066c6bc20ca94031514620403089acd68f63a85a
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 28 10:14:00 2017 -0800

    Correct various behavior with organization settings
    
    - Don't send lists with empty values
    - Reject lists with empty values

diff --git a/src/sentry/api/endpoints/organization_details.py b/src/sentry/api/endpoints/organization_details.py
index 78fe17a526..a7722b71b4 100644
--- a/src/sentry/api/endpoints/organization_details.py
+++ b/src/sentry/api/endpoints/organization_details.py
@@ -92,6 +92,18 @@ class OrganizationSerializer(serializers.Serializer):
             raise serializers.ValidationError('The slug "%s" is already in use.' % (value,))
         return attrs
 
+    def validate_sensitiveFields(self, attrs, source):
+        value = attrs[source]
+        if value and not all(value):
+            raise serializers.ValidationError('Empty values are not allowed.')
+        return attrs
+
+    def validate_safeFields(self, attrs, source):
+        value = attrs[source]
+        if value and not all(value):
+            raise serializers.ValidationError('Empty values are not allowed.')
+        return attrs
+
     def validate(self, attrs):
         attrs = super(OrganizationSerializer, self).validate(attrs)
         if attrs.get('avatarType') == 'upload':
diff --git a/src/sentry/static/sentry/app/views/organizationSettings.jsx b/src/sentry/static/sentry/app/views/organizationSettings.jsx
index 756cab7311..fc514ef507 100644
--- a/src/sentry/static/sentry/app/views/organizationSettings.jsx
+++ b/src/sentry/static/sentry/app/views/organizationSettings.jsx
@@ -13,6 +13,7 @@ import LoadingIndicator from '../components/loadingIndicator';
 import OrganizationHomeContainer from '../components/organizations/homeContainer';
 import OrganizationStore from '../stores/organizationStore';
 import {t} from '../locale';
+import {trim} from '../utils';
 
 
 const OrganizationSettingsForm = React.createClass({
@@ -82,8 +83,12 @@ const OrganizationSettingsForm = React.createClass({
         method: 'PUT',
         data: {
           ...formData,
-          safeFields: formData.safeFields.split('\n'),
-          sensitiveFields: formData.sensitiveFields.split('\n'),
+          safeFields: (
+            trim(formData.safeFields).split('\n').filter(f => f !== '')
+          ),
+          sensitiveFields: (
+            trim(formData.sensitiveFields).split('\n').filter(f => f !== '')
+          ),
         },
         success: (data) => {
           this.props.onSave(data);
diff --git a/tests/sentry/api/endpoints/test_organization_details.py b/tests/sentry/api/endpoints/test_organization_details.py
index a3043131bf..38520fe5c6 100644
--- a/tests/sentry/api/endpoints/test_organization_details.py
+++ b/tests/sentry/api/endpoints/test_organization_details.py
@@ -175,6 +175,48 @@ class OrganizationUpdateTest(APITestCase):
 
         assert org.default_role == 'member'
 
+    def test_empty_safe_fields(self):
+        org = self.create_organization(owner=self.user)
+        self.login_as(user=self.user)
+        url = reverse('sentry-api-0-organization-details', kwargs={
+            'organization_slug': org.slug,
+        })
+        response = self.client.put(url, data={
+            'safeFields': [''],
+        })
+        assert response.status_code == 400, (response.status_code, response.content)
+        org = Organization.objects.get(id=org.id)
+
+        options = {
+            o.key: o.value
+            for o in OrganizationOption.objects.filter(
+                organization=org,
+            )
+        }
+
+        assert not options.get('sentry:safe_fields')
+
+    def test_empty_sensitive_fields(self):
+        org = self.create_organization(owner=self.user)
+        self.login_as(user=self.user)
+        url = reverse('sentry-api-0-organization-details', kwargs={
+            'organization_slug': org.slug,
+        })
+        response = self.client.put(url, data={
+            'sensitiveFields': [''],
+        })
+        assert response.status_code == 400, (response.status_code, response.content)
+        org = Organization.objects.get(id=org.id)
+
+        options = {
+            o.key: o.value
+            for o in OrganizationOption.objects.filter(
+                organization=org,
+            )
+        }
+
+        assert not options.get('sentry:sensitive_fields')
+
 
 class OrganizationDeleteTest(APITestCase):
     @patch('sentry.api.endpoints.organization_details.uuid4')
