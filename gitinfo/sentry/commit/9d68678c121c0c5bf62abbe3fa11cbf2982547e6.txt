commit 9d68678c121c0c5bf62abbe3fa11cbf2982547e6
Author: adhiraj <adhiraj@sentry.io>
Date:   Mon Mar 12 23:06:05 2018 -0700

    Add Releases guide to assistant (#7478)
    
    * Add Releases guide to assistant
    * Update issue page guide
    * Fix assistant backend test and logic

diff --git a/src/sentry/api/endpoints/assistant.py b/src/sentry/api/endpoints/assistant.py
index 47d6fb3cbd..393c8f02dd 100644
--- a/src/sentry/api/endpoints/assistant.py
+++ b/src/sentry/api/endpoints/assistant.py
@@ -35,7 +35,7 @@ class AssistantEndpoint(Endpoint):
         """Return all the guides the user has not viewed or dismissed."""
         exclude_ids = set(AssistantActivity.objects.filter(
             user=request.user,
-        ).values_list('id', flat=True))
+        ).values_list('guide_id', flat=True))
         result = {k: v for k, v in GUIDES.items() if v['id'] not in exclude_ids}
 
         return Response(result)
diff --git a/src/sentry/assistant/guides.py b/src/sentry/assistant/guides.py
index c9e8347c41..367b337010 100644
--- a/src/sentry/assistant/guides.py
+++ b/src/sentry/assistant/guides.py
@@ -6,33 +6,88 @@ from django.utils.translation import ugettext_lazy as _
 GUIDES = {
     'issue': {
         'id': 1,
-        'page': 'issue',
-        'cue': _('Click here for a tour of the issue page'),
+        'cue': _('Get a tour of the issue page'),
         'required_targets': ['exception'],
         'steps': [
             {
-                'title': _('1. Stacktrace'),
+                'title': _('Stacktrace'),
                 'message': _(
-                    'See which line in your code caused the error and the entire call '
-                    'stack at that point.'),
+                    'See the sequence of function calls that led to the error, and global/local '
+                    'variables for each stack frame.'),
                 'target': 'exception',
             },
             {
-                'title': _('2. Breadcrumbs'),
+                'title': _('Breadcrumbs'),
                 'message': _(
-                    'See the events that happened leading up to the error, which often provides '
-                    'insight into what caused the error. This includes things like HTTP requests, '
-                    'database calls, and any other custom data you record. Breadcrumbs integrate '
-                    'seamlessly with many popular web frameworks and record .'),
+                    'Breadcrumbs are a trail of events that happened prior to the error. They\'re '
+                    'similar to traditional logs but can record more rich structured data. '
+                    'When Sentry is used with web frameworks, breadcrumbs are automatically '
+                    'captured for events like database calls and network requests.'),
                 'target': 'breadcrumbs',
             },
             {
-                'title': _('3. Additional Data'),
+                'title': _('Tags'),
                 'message': _(
-                    'Send custom data with every error, and attach tags to them that you can '
-                    'later search and filter by.'),
-                'target': 'extra',
+                    'Tags are arbitrary key-value pairs sent with every event. You can filter '
+                    'events by tags - for example, searching for all events from a specific '
+                    'machine, browser, release etc. The sidebar on the right shows you the '
+                    'distribution of tags for all events in this event group.'),
+                'target': 'tags',
+            },
+            {
+                'title': _('Resolution'),
+                'message': _(
+                    'Resolving an issue removes it from the default dashboard view of unresolved '
+                    'issues. You can ask Sentry to <a href="/settings/account/notifications/"> '
+                    'alert you</a> when a resolved issue re-occurs.'),
+                'target': 'resolve',
+            },
+            {
+                'title': _('Issue number'),
+                'message': _(
+                    'This is a unique identifier for the issue, and can be included in a commit '
+                    'message to tell Sentry to resolve the issue when the commit gets deployed. '
+                    'See <a href="https://docs.sentry.io/learn/releases/">Releases</a> '
+                    'to learn more.'),
+                'target': 'issue_number',
+            },
+            {
+                'title': _('Issue Tracking'),
+                'message': _(
+                    'Create issues within your project management tool. Sentry integrates with '
+                    '<a href="https://docs.sentry.io/integrations/">many popular tools</a>.'),
+                'target': 'issue_tracking',
+            },
+            {
+                'title': _('Delete & Discard'),
+                'message': _(
+                    'Deleting & Discarding an issue deletes most of the data associated with the '
+                    'issue and discards future events matching the issue before it reaches your '
+                    'stream. This is useful to permanently ignore errors you don\'t care about.'),
+                'target': 'delete_discard',
             },
         ],
     },
+    'releases': {
+        'id': 2,
+        'cue': _('What are releases?'),
+        'required_targets': ['releases'],
+        'steps': [
+            {
+                'title': _('Releases'),
+                'message': _('A release is a specific version of your code deployed to an '
+                             'environment. When you tell Sentry about your releases, it can '
+                             'predict which commits caused an error and who might be a likely '
+                             'owner.'),
+                'target': 'releases',
+            },
+            {
+                'title': _('Releases'),
+                'message': _('Sentry does this by tying together commits in the release, files '
+                             'touched by those commits, files observed in the stacktrace, and '
+                             'authors of those files. Learn more about releases '
+                             '<a href="https://docs.sentry.io/learn/releases/">here</a>.'),
+            },
+        ]
+    },
 }
diff --git a/src/sentry/static/sentry/app/components/actions/resolve.jsx b/src/sentry/static/sentry/app/components/actions/resolve.jsx
index 6a256ff6d7..3f790521c9 100644
--- a/src/sentry/static/sentry/app/components/actions/resolve.jsx
+++ b/src/sentry/static/sentry/app/components/actions/resolve.jsx
@@ -8,6 +8,7 @@ import MenuItem from '../menuItem';
 import DropdownLink from '../dropdownLink';
 import ActionLink from './actionLink';
 import Tooltip from '../tooltip';
+import GuideAnchor from '../assistant/guideAnchor';
 
 export default class ResolveActions extends React.Component {
   static propTypes = {
@@ -131,6 +132,7 @@ export default class ResolveActions extends React.Component {
             onAction={() => onUpdate({status: 'resolved'})}
           >
             <span className="icon-checkmark" style={{marginRight: 5}} />
+            <GuideAnchor target="resolve" type="text" />
             {t('Resolve')}
           </ActionLink>
 
diff --git a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
index 8760f10581..997fd88aad 100644
--- a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
@@ -7,13 +7,17 @@ import Reflux from 'reflux';
 import {registerAnchor, unregisterAnchor} from '../../actionCreators/guides';
 import GuideStore from '../../stores/guideStore';
 
-// A guide anchor provides a ripple-effect on an element on the page to draw attention
-// to it. Guide anchors register with the guide store, which uses this information to
-// determine which guides can be shown on the page.
+// A guide anchor provides a ripple-effect on an element to draw attention to it.
+// Guide anchors register with the guide store, which uses this information to
+// determine which guides can be shown on the page. Multiple guide anchors on
+// a page can have the same `target` property, which will make all of them glow
+// when a step in the guide matches that target (although only one of them will
+// be scrolled to).
 const GuideAnchor = createReactClass({
   propTypes: {
     target: PropTypes.string.isRequired,
-    type: PropTypes.oneOf(['text', 'button']),
+    // The `invisible` anchor type can be used for guides not attached to specific elements.
+    type: PropTypes.oneOf(['text', 'button', 'invisible']),
   },
 
   mixins: [Reflux.listenTo(GuideStore, 'onGuideStateChange')],
@@ -29,7 +33,8 @@ const GuideAnchor = createReactClass({
   },
 
   componentDidUpdate(prevProps, prevState) {
-    if (!prevState.active && this.state.active) {
+    // Invisible pings should not be scrolled to since they are not attached to a specific element.
+    if (!prevState.active && this.state.active && this.props.type !== 'invisible') {
       $('html, body').animate(
         {
           scrollTop: $(this.anchorElement).offset().top,
@@ -47,7 +52,10 @@ const GuideAnchor = createReactClass({
     if (
       data.currentGuide &&
       data.currentStep > 0 &&
-      data.currentGuide.steps[data.currentStep - 1].target == this.props.target
+      data.currentGuide.steps[data.currentStep - 1].target == this.props.target &&
+      // TODO(adhiraj): It would be more correct to let invisible anchors become active,
+      // and use CSS to make them invisible.
+      this.props.type !== 'invisible'
     ) {
       this.setState({active: true});
     } else {
@@ -61,7 +69,7 @@ const GuideAnchor = createReactClass({
     return (
       <div
         ref={el => (this.anchorElement = el)}
-        className={classNames('guide-anchor', type)}
+        className={classNames('guide-anchor', `anchor-type-${type}`)}
       >
         {this.props.children}
         <span
diff --git a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx b/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
index df961b6acc..78a9df6086 100644
--- a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
@@ -28,9 +28,12 @@ export default class GuideDrawer extends React.Component {
         <div className="assistant-drawer-title">
           {this.props.guide.steps[this.props.step - 1].title}
         </div>
-        <div className="assistant-drawer-message">
-          {this.props.guide.steps[this.props.step - 1].message}
-        </div>
+        <div
+          className="assistant-drawer-message"
+          dangerouslySetInnerHTML={{
+            __html: this.props.guide.steps[this.props.step - 1].message,
+          }}
+        />
         <div>
           {this.props.step < this.props.guide.steps.length ? (
             <div>
diff --git a/src/sentry/static/sentry/app/components/events/eventDataSection.jsx b/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
index 8fa5170e61..c217796d7e 100644
--- a/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
@@ -41,6 +41,9 @@ class GroupEventDataSection extends React.Component {
   }
 
   render() {
+    const guideAnchor =
+      this.props.type === 'tags' ? <GuideAnchor target="tags" type="text" /> : null;
+
     return (
       <div className={(this.props.className || '') + ' box'}>
         {this.props.title && (
@@ -49,13 +52,16 @@ class GroupEventDataSection extends React.Component {
               <em className="icon-anchor" />
             </a>
             {this.props.wrapTitle ? (
-              <h3>{this.props.title}</h3>
+              <h3>
+                {guideAnchor}
+                {this.props.title}
+              </h3>
             ) : (
-              <div>{this.props.title}</div>
+              <div>
+                {guideAnchor}
+                {this.props.title}
+              </div>
             )}
-            {this.props.type === 'extra' ? (
-              <GuideAnchor target="extra" type="text" />
-            ) : null}
             {this.props.type === 'extra' && (
               <div className="btn-group pull-right">
                 <a
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
index 39dcd5573c..b98c25fe27 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
@@ -56,6 +56,7 @@ class StacktraceInterface extends React.Component {
         title={t('Stacktrace')}
         group={group}
         platform={evt.platform}
+        hasGuideAnchor={true}
         stacktrace={data}
         stackView={stackView}
         newestFirst={newestFirst}
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 59b7b1db74..afc5cc2e89 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -12,6 +12,7 @@ import GroupState from '../../mixins/groupState';
 import HookStore from '../../stores/hookStore';
 import IndicatorStore from '../../stores/indicatorStore';
 import IssuePluginActions from '../../components/group/issuePluginActions';
+import GuideAnchor from '../../components/assistant/guideAnchor';
 import LinkWithConfirmation from '../../components/linkWithConfirmation';
 import MenuItem from '../../components/menuItem';
 import ShareIssue from '../../components/shareIssue';
@@ -53,6 +54,7 @@ class DeleteActions extends React.Component {
             )}
             onConfirm={this.props.onDiscard}
           >
+            <GuideAnchor type="text" target="delete_discard" />
             <span>{t('Delete and discard future events')}</span>
           </LinkWithConfirmation>
         </li>
@@ -62,7 +64,9 @@ class DeleteActions extends React.Component {
 
   render() {
     let features = new Set(this.props.project.features);
-    return (
+    let hasDiscard = features.has('discard-groups');
+
+    let btnGroup = (
       <div className="btn-group">
         <LinkWithConfirmation
           className="group-remove btn btn-default btn-sm"
@@ -74,11 +78,19 @@ class DeleteActions extends React.Component {
         >
           <span className="icon-trash" />
         </LinkWithConfirmation>
-        {features.has('discard-groups')
-          ? this.renderDiscard()
-          : this.renderDisabledDiscard()}
+        {hasDiscard ? this.renderDiscard() : this.renderDisabledDiscard()}
       </div>
     );
+
+    if (hasDiscard) {
+      btnGroup = (
+        <GuideAnchor type="text" target="delete_discard">
+          {btnGroup}
+        </GuideAnchor>
+      );
+    }
+
+    return btnGroup;
   }
 }
 
@@ -296,13 +308,15 @@ const GroupDetailsActions = createReactClass({
             return <IssuePluginActions key={plugin.slug} plugin={plugin} />;
           })}
         {!hasIssueTracking && (
-          <a
-            href={`/${this.getOrganization().slug}/${this.getProject()
-              .slug}/settings/issue-tracking/`}
-            className={'btn btn-default btn-sm btn-config-issue-tracking'}
-          >
-            {t('Link Issue Tracker')}
-          </a>
+          <GuideAnchor type="text" target="issue_tracking">
+            <a
+              href={`/${this.getOrganization().slug}/${this.getProject()
+                .slug}/settings/issue-tracking/`}
+              className={'btn btn-default btn-sm btn-config-issue-tracking'}
+            >
+              {t('Link Issue Tracker')}
+            </a>
+          </GuideAnchor>
         )}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index 6d5744ccb4..fbc11f6de7 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -11,6 +11,7 @@ import IndicatorStore from '../../stores/indicatorStore';
 import ListLink from '../../components/listLink';
 import ShortId from '../../components/shortId';
 import EventOrGroupTitle from '../../components/eventOrGroupTitle';
+import GuideAnchor from '../../components/assistant/guideAnchor';
 import ProjectState from '../../mixins/projectState';
 import TooltipMixin from '../../mixins/tooltip';
 import {t} from '../../locale';
@@ -137,6 +138,7 @@ const GroupHeader = createReactClass({
               {group.shortId && (
                 <div className="short-id-box count align-right">
                   <h6 className="nav-header">
+                    <GuideAnchor target="issue_number" type="text" />
                     <a
                       className="help-link tip"
                       title={t(
diff --git a/src/sentry/static/sentry/app/views/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
index e84f2d68da..f5bebcb253 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
@@ -8,6 +8,7 @@ import ApiMixin from '../../mixins/apiMixin';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 import Pagination from '../../components/pagination';
+import GuideAnchor from '../../components/assistant/guideAnchor';
 import SearchBar from '../../components/searchBar';
 import {t, tct} from '../../locale';
 
@@ -176,6 +177,7 @@ const ProjectReleases = createReactClass({
   render() {
     return (
       <div>
+        <GuideAnchor target="releases" type="invisible" />
         <div className="row release-list-header">
           <div className="col-sm-7">
             <h3>{t('Releases')}</h3>
diff --git a/src/sentry/static/sentry/less/assistant.less b/src/sentry/static/sentry/less/assistant.less
index a8cd130357..e1f877dfc0 100644
--- a/src/sentry/static/sentry/less/assistant.less
+++ b/src/sentry/static/sentry/less/assistant.less
@@ -86,18 +86,11 @@
   visibility: visible;
 }
 
-.guide-anchor.text {
+.guide-anchor.anchor-type-text {
   display: inline-block;
   position: relative;
 }
 
-.guide-anchor.button {
-  & > *:not(.guide-anchor-ping) {
-    position: relative;
-    z-index: 1000;
-  }
-}
-
 .assistant-container {
   display: flex;
   justify-content: space-around;
diff --git a/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap b/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
index 315203eca2..df647f6dc7 100644
--- a/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
@@ -19,10 +19,6 @@ exports[`EventDataSection renders formatted 1`] = `
     <h3>
       Additional Data
     </h3>
-    <GuideAnchor
-      target="extra"
-      type="text"
-    />
     <div
       className="btn-group pull-right"
     >
@@ -65,10 +61,6 @@ exports[`EventDataSection renders raw 1`] = `
     <h3>
       Additional Data
     </h3>
-    <GuideAnchor
-      target="extra"
-      type="text"
-    />
     <div
       className="btn-group pull-right"
     >
diff --git a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
index b9c71cef45..7af161fb2b 100644
--- a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
+++ b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
@@ -112,6 +112,18 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                 }
               }
             />
+            <GuideAnchor
+              target="resolve"
+              type="text"
+            >
+              <div
+                className="guide-anchor anchor-type-text"
+              >
+                <span
+                  className="resolve guide-anchor-ping"
+                />
+              </div>
+            </GuideAnchor>
             Resolve
           </a>
           <Modal
@@ -405,7 +417,7 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                         disabled={false}
                         onClick={[Function]}
                       >
-                        Another version\u2026
+                        Another version…
                       </a>
                     </ActionLink>
                   </Tooltip>
@@ -521,6 +533,18 @@ exports[`ResolveActions without confirmation renders 1`] = `
               }
             }
           />
+          <GuideAnchor
+            target="resolve"
+            type="text"
+          >
+            <div
+              className="guide-anchor anchor-type-text"
+            >
+              <span
+                className="resolve guide-anchor-ping"
+              />
+            </div>
+          </GuideAnchor>
           Resolve
         </a>
       </ActionLink>
@@ -636,7 +660,7 @@ exports[`ResolveActions without confirmation renders 1`] = `
                         disabled={false}
                         onClick={[Function]}
                       >
-                        Another version\u2026
+                        Another version…
                       </a>
                     </ActionLink>
                   </Tooltip>
diff --git a/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap b/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap
index 7098bbd80e..a4bed7b5ae 100644
--- a/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap
+++ b/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap
@@ -2,7 +2,7 @@
 
 exports[`GuideAnchor renders 1`] = `
 <div
-  className="guide-anchor text"
+  className="guide-anchor anchor-type-text"
 >
   <span
     className="target 1 guide-anchor-ping"
@@ -12,7 +12,7 @@ exports[`GuideAnchor renders 1`] = `
 
 exports[`GuideAnchor turns active when guide state changes 1`] = `
 <div
-  className="guide-anchor text"
+  className="guide-anchor anchor-type-text"
 >
   <span
     className="target 1 guide-anchor-ping active"
diff --git a/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap b/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap
index 3a8c6a224c..bd1a73e9fd 100644
--- a/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap
+++ b/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap
@@ -9,9 +9,12 @@ exports[`GuideDrawer gets dismissed 1`] = `
   </div>
   <div
     className="assistant-drawer-message"
-  >
-    Message 1
-  </div>
+    dangerouslySetInnerHTML={
+      Object {
+        "__html": "Message 1",
+      }
+    }
+  />
   <div>
     <div>
       <Button
@@ -41,9 +44,12 @@ exports[`GuideDrawer renders next step 1`] = `
   </div>
   <div
     className="assistant-drawer-message"
-  >
-    Message 2
-  </div>
+    dangerouslySetInnerHTML={
+      Object {
+        "__html": "Message 2",
+      }
+    }
+  />
   <div>
     <div>
       <p>
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
index 1642c3abac..f69b59dfea 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
@@ -48,11 +48,16 @@ exports[`GroupActions render() renders correctly 1`] = `
       }
     }
   />
-  <a
-    className="btn btn-default btn-sm btn-config-issue-tracking"
-    href="/org/project/settings/issue-tracking/"
+  <GuideAnchor
+    target="issue_tracking"
+    type="text"
   >
-    Link Issue Tracker
-  </a>
+    <a
+      className="btn btn-default btn-sm btn-config-issue-tracking"
+      href="/org/project/settings/issue-tracking/"
+    >
+      Link Issue Tracker
+    </a>
+  </GuideAnchor>
 </div>
 `;
diff --git a/tests/sentry/api/endpoints/test_assistant.py b/tests/sentry/api/endpoints/test_assistant.py
index 79dfe35c21..7fe80da1d5 100644
--- a/tests/sentry/api/endpoints/test_assistant.py
+++ b/tests/sentry/api/endpoints/test_assistant.py
@@ -33,10 +33,10 @@ class AssistantActivity(APITestCase):
 
         # Dismiss the guide and make sure it is not returned again.
         resp = self.client.put(self.path, {
-            'guide_id': 1,
+            'guide_id': 2,
             'status': 'dismissed',
         })
         assert resp.status_code == 201
         resp = self.client.get(self.path)
         assert resp.status_code == 200
-        assert resp.data == {}
+        assert resp.data == {k: v for k, v in GUIDES.items() if v['id'] != 2}
