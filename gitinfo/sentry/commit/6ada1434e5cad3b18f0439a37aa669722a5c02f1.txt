commit 6ada1434e5cad3b18f0439a37aa669722a5c02f1
Author: David Cramer <dcramer@gmail.com>
Date:   Thu May 20 13:21:15 2010 -0700

    Remove some old code. Improve error pages. ?raw actually works now

diff --git a/djangodblog/__init__.py b/djangodblog/__init__.py
index e96fe5c24d..71c9908e23 100644
--- a/djangodblog/__init__.py
+++ b/djangodblog/__init__.py
@@ -1 +1 @@
-__version__ = (1, 7, 6, 1)
\ No newline at end of file
+__version__ = (1, 7, 7)
\ No newline at end of file
diff --git a/djangodblog/admin.py b/djangodblog/admin.py
index 6373df08dd..fc5f333d4a 100644
--- a/djangodblog/admin.py
+++ b/djangodblog/admin.py
@@ -11,6 +11,7 @@ from djangodblog.models import ErrorBatch, Error
 from djangodblog.helpers import ImprovedExceptionReporter
 from djangodblog.utils import JSONDictFormField
 
+import cgi
 import base64
 import re
 import logging
@@ -32,8 +33,19 @@ class PreformattedText(forms.Textarea):
             value = force_unicode(value)
         return mark_safe(u'<pre style="clear:left;display:block;padding-top:5px;white-space: pre-wrap;white-space: -moz-pre-wrap;white-space: -pre-wrap;white-space: -o-pre-wrap;word-wrap: break-word;">%s</pre>' % (value,))
 
+class Link(forms.TextInput):
+    input_type = 'a'
+
+    def render(self, name, value, attrs=None):
+        if value is None: value = ''
+        if value != '':
+            # Only add the 'value' attribute if a value is non-empty.
+            value = force_unicode(value)
+        return mark_safe(u'<a href="%s">%s</a>' % (value, cgi.escape(value)))
+
 class ErrorBatchAdminForm(forms.ModelForm):
     traceback = forms.CharField(widget=PreformattedText())
+    url = forms.CharField(widget=Link())
     
     class Meta:
         fields = ('url', 'logger', 'server_name', 'class_name', 'level', 'message', 'times_seen', 'first_seen', 'last_seen', 'traceback')
@@ -41,6 +53,7 @@ class ErrorBatchAdminForm(forms.ModelForm):
 
 class ErrorAdminForm(forms.ModelForm):
     traceback = forms.CharField(widget=PreformattedText())
+    url = forms.CharField(widget=Link())
     
     class Meta:
         fields = ('url', 'logger', 'server_name', 'class_name', 'level', 'message', 'datetime', 'traceback')
@@ -92,7 +105,7 @@ class ErrorBatchAdmin(EfficientModelAdmin):
     ordering        = ('-last_seen',)
     actions         = ('resolve_errorbatch',)
     search_fields   = ('url', 'class_name', 'message', 'traceback', 'server_name')
-    readonly_fields = ('url', 'logger', 'server_name', 'class_name', 'level', 'message', 'times_seen', 'first_seen', 'last_seen')
+    readonly_fields = ('logger', 'server_name', 'class_name', 'level', 'message', 'times_seen', 'first_seen', 'last_seen')
     fieldsets       = (
         (None, {
             'fields': ('url', 'logger', 'server_name', 'class_name', 'level', 'message', 'times_seen', 'first_seen', 'last_seen', 'traceback')
@@ -117,7 +130,7 @@ class ErrorAdmin(EfficientModelAdmin):
     list_filter     = ('logger', 'class_name', 'datetime', 'server_name')
     ordering        = ('-id',)
     search_fields   = ('url', 'class_name', 'message', 'traceback', 'server_name')
-    readonly_fields = ('url', 'logger', 'server_name', 'class_name', 'level', 'message', 'datetime')
+    readonly_fields = ('logger', 'server_name', 'class_name', 'level', 'message', 'datetime')
     fieldsets       = (
         (None, {
             'fields': ('url', 'logger', 'server_name', 'class_name', 'level', 'message', 'datetime', 'traceback')
@@ -129,8 +142,7 @@ class ErrorAdmin(EfficientModelAdmin):
     
     def change_view(self, request, object_id, extra_context={}):
         obj = self.get_object(request, unquote(object_id))
-        has_traceback = bool('exc' in obj.data) and not request.GET.get('raw')
-        frame = request.GET.get('frame')
+        has_traceback = bool('exc' in obj.data) and 'raw' not in request.GET
         if has_traceback:
             try:
                 extra_context.update(self.get_traceback_context(request, obj))
@@ -139,8 +151,8 @@ class ErrorAdmin(EfficientModelAdmin):
                 logger.exception(exc_info[1])
                 has_traceback = False
         extra_context.update({
-            'frame': frame,
             'has_traceback': has_traceback,
+            'instance': obj,
         })
         return super(ErrorAdmin, self).change_view(request, object_id, extra_context)
         
diff --git a/djangodblog/middleware.py b/djangodblog/middleware.py
index e42bdfa6ab..873cf23367 100644
--- a/djangodblog/middleware.py
+++ b/djangodblog/middleware.py
@@ -2,6 +2,7 @@ from django.conf import settings
 from django.http import Http404
 
 from djangodblog.models import Error
+# from django.db import IntegrityError
 
 import sys
 
@@ -14,6 +15,9 @@ class DBLogMiddleware(object):
 
         if getattr(exception, 'skip_dblog', False):
             return
+            
+        # if isinstance(exception, IntegrityError):
+        #     transaction.rollback_unless_managed()
 
         Error.objects.create_from_exception(url=request.build_absolute_uri(), data=dict(
             META=request.META,
diff --git a/djangodblog/templates/admin/djangodblog/error/change_form.html b/djangodblog/templates/admin/djangodblog/error/change_form.html
index 593cda9b6c..7754943ed1 100644
--- a/djangodblog/templates/admin/djangodblog/error/change_form.html
+++ b/djangodblog/templates/admin/djangodblog/error/change_form.html
@@ -16,6 +16,11 @@
 		#content { margin: 0; }
 		</style>
 	{% endif %}
+	<style type="text/css">
+	#meta { border-top: 0; }
+	#meta th, #meta td { border: 0; padding: 8px; }
+	#meta th { text-align: left; }
+	</style>
 {% endblock %}
 
 {% block content_title %}{% endblock %}
@@ -24,6 +29,27 @@
 	{% if not has_traceback %}
 		{{ block.super }}
 	{% else %}
+		<table id="meta">
+			<colgroup>
+				<col style="width:15%"/>
+				<col style="width:35%"/>
+				<col style="width:15%"/>
+				<col style="width:35%"/>
+			</colgroup>
+
+			<tr>
+				<th>URL:</th>
+				<td><a href="{{ instance.url }}">{{ instance.url }}</a></td>
+				<th>Level:</th>
+				<td>{{ instance.get_level_display }}</td>
+			</tr>
+			<tr>
+				<th>Server:</th>
+				<td>{{ instance.server_name }}</td>
+				<th>Date:</th>
+				<td>{{ instance.datetime }}</td>
+			</tr>
+		</table>
 		<div id="reporter_body">
 			{{ error_body }}
 		</div>
