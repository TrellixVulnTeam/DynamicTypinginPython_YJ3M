commit ea0421fde01dbeda76c82d4480cd48225157e67a
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Oct 21 09:20:28 2015 -0700

    Don't ignore uris that are only schemes

diff --git a/src/sentry/interfaces/csp.py b/src/sentry/interfaces/csp.py
index e4940f8cb2..b0ff361b3d 100644
--- a/src/sentry/interfaces/csp.py
+++ b/src/sentry/interfaces/csp.py
@@ -104,7 +104,7 @@ class Csp(Interface):
         # Some reports from Chrome report blocked-uri as just 'about'.
         # In this case, this is not actionable and is just noisy.
         # Observed in Chrome 45 and 46.
-        if kwargs['blocked_uri'] in ('about', 'data'):
+        if kwargs['blocked_uri'] == 'about':
             raise InterfaceValidationError("Invalid value for 'blocked-uri'")
 
         # Here, we want to block reports that are coming from browser extensions
@@ -220,9 +220,16 @@ def _normalize_uri(value):
     if value in ('self', "'self'"):
         return SELF
 
-    scheme, hostname = urlsplit(value)[:2]
-    if scheme in ('http', 'https'):
-        return hostname
+    # A lot of these values get reported as literally
+    # just the scheme. So a value like 'data' or 'blob', which
+    # are valid schemes, just not a uri. So we want to
+    # normalize it into a uri.
+    if ':' not in value:
+        scheme, hostname = value, ''
+    else:
+        scheme, hostname = urlsplit(value)[:2]
+        if scheme in ('http', 'https'):
+            return hostname
     return _unsplit(scheme, hostname)
 
 
diff --git a/tests/sentry/interfaces/test_csp.py b/tests/sentry/interfaces/test_csp.py
index 41cfe7eeb8..eae4ba796c 100644
--- a/tests/sentry/interfaces/test_csp.py
+++ b/tests/sentry/interfaces/test_csp.py
@@ -187,3 +187,10 @@ class CspTest(TestCase):
             blocked_uri='data:text/plain;base64,SGVsbG8sIFdvcmxkIQ%3D%3D',
         ))
         assert result.get_message() == "Blocked 'script' from 'data:'"
+
+        result = Csp.to_python(dict(
+            document_uri='http://example.com/foo',
+            effective_directive='script-src',
+            blocked_uri='data',
+        ))
+        assert result.get_message() == "Blocked 'script' from 'data:'"
