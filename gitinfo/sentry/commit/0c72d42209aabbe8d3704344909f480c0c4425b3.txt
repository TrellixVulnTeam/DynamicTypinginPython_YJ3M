commit 0c72d42209aabbe8d3704344909f480c0c4425b3
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Dec 10 14:20:23 2018 -0800

    fix(events-stream): Change Charts UI/UX (#10980)
    
    * fix(events-stream): Change Charts UI/UX
    
    Decreases time interval for chart to 30m + 5m (down from 1d/1h).
    Less dots
    Re-render chart when time interval changes (e.g. when changing from 7 days to 24 hrs)
    Change axis/tooltip formatting
    Removes zoom icons
    
    * update snapshots

diff --git a/src/sentry/static/sentry/app/components/charts/components/grid.jsx b/src/sentry/static/sentry/app/components/charts/components/grid.jsx
index cd4906c303..4694de6d32 100644
--- a/src/sentry/static/sentry/app/components/charts/components/grid.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/grid.jsx
@@ -5,7 +5,7 @@
  */
 export default function Grid(props = {}) {
   return {
-    top: 40,
+    top: 20,
     bottom: 20,
     // This should allow for sufficient space for Y-axis labels
     left: '0%',
diff --git a/src/sentry/static/sentry/app/components/charts/components/toolBox.jsx b/src/sentry/static/sentry/app/components/charts/components/toolBox.jsx
index 1f5a006a9f..df28adaaf2 100644
--- a/src/sentry/static/sentry/app/components/charts/components/toolBox.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/toolBox.jsx
@@ -23,7 +23,7 @@ export default function ToolBox(options, features = {}) {
   return {
     right: 0,
     top: 0,
-    itemSize: 20,
+    itemSize: 16,
 
     feature: getFeatures(features),
     ...options,
diff --git a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
index be100e3e7c..d580c2b9e6 100644
--- a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
@@ -3,7 +3,7 @@ import 'echarts/lib/component/tooltip';
 import {getFormattedDate} from 'app/utils/dates';
 import {truncationFormatter} from '../utils';
 
-function formatAxisLabel(value, isTimestamp, utc) {
+function defaultFormatAxisLabel(value, isTimestamp, utc) {
   if (!isTimestamp) {
     return value;
   }
@@ -15,7 +15,7 @@ function valueFormatter(value) {
   return value.toLocaleString();
 }
 
-function getFormatter({filter, isGroupedByDate, truncate, utc}) {
+function getFormatter({filter, isGroupedByDate, truncate, formatAxisLabel, utc}) {
   const getFilter = seriesParam => {
     const value = seriesParam.data[1];
     if (typeof filter === 'function') {
@@ -28,7 +28,11 @@ function getFormatter({filter, isGroupedByDate, truncate, utc}) {
   return seriesParams => {
     const label =
       seriesParams.length &&
-      formatAxisLabel(seriesParams[0].axisValueLabel, isGroupedByDate, utc);
+      (formatAxisLabel || defaultFormatAxisLabel)(
+        seriesParams[0].axisValueLabel,
+        isGroupedByDate,
+        utc
+      );
     return [
       `<div>${truncationFormatter(label, truncate)}</div>`,
       seriesParams
@@ -46,9 +50,10 @@ function getFormatter({filter, isGroupedByDate, truncate, utc}) {
 }
 
 export default function Tooltip(
-  {filter, isGroupedByDate, formatter, truncate, utc, ...props} = {}
+  {filter, isGroupedByDate, formatter, truncate, utc, formatAxisLabel, ...props} = {}
 ) {
-  formatter = formatter || getFormatter({filter, isGroupedByDate, truncate, utc});
+  formatter =
+    formatter || getFormatter({filter, isGroupedByDate, truncate, utc, formatAxisLabel});
 
   return {
     show: true,
diff --git a/src/sentry/static/sentry/app/utils/theme.jsx b/src/sentry/static/sentry/app/utils/theme.jsx
index 203c9273e8..4922027e14 100644
--- a/src/sentry/static/sentry/app/utils/theme.jsx
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -234,7 +234,7 @@ theme.charts = {
     CHART_PALETTE[Math.min(CHART_PALETTE.length - 1, length + 1)],
 
   previousPeriod: theme.gray1,
-  symbolSize: 10,
+  symbolSize: 6,
 };
 
 theme.diff = {
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
index f742affa36..50932421f7 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
@@ -70,6 +70,13 @@ class EventsChart extends React.Component {
       return true;
     }
 
+    if (
+      nextProps.zoom &&
+      this.useHourlyInterval(nextProps) !== this.useHourlyInterval(this.props)
+    ) {
+      return true;
+    }
+
     // do not update if we are zooming or if period via props does not change
     if (nextProps.zoom || isEqualWithDates(currentPeriod, nextPeriod)) {
       return false;
@@ -84,8 +91,8 @@ class EventsChart extends React.Component {
     this.saveCurrentPeriod(this.props);
   }
 
-  useHourlyInterval = () => {
-    const {period, start, end} = this.props;
+  useHourlyInterval = (props = this.props) => {
+    const {period, start, end} = props;
 
     if (typeof period === 'string') {
       return period.endsWith('h') || period === '1d';
@@ -193,14 +200,10 @@ class EventsChart extends React.Component {
 
       this.setPeriod(previousPeriod);
     } else {
-      // TODO: handle hourly intervals
       const start = moment.utc(firstSeries.data[axis.rangeStart][0]);
 
       // Add a day so we go until the end of the day (e.g. next day at midnight)
-      const end = moment
-        .utc(firstSeries.data[axis.rangeEnd][0])
-        .add(1, this.useHourlyInterval() ? 'hour' : 'day')
-        .subtract(1, 'second');
+      const end = moment.utc(firstSeries.data[axis.rangeEnd][0]);
 
       this.setPeriod({period: null, start, end}, true);
     }
@@ -223,13 +226,21 @@ class EventsChart extends React.Component {
   render() {
     const {period, utc, query} = this.props;
 
-    let interval = '1d';
-    let xAxisOptions = {};
+    const useHourly = this.useHourlyInterval();
+
+    let interval = '30m';
+    let xAxisOptions = {
+      axisLabel: {
+        formatter: (value, index, ...rest) => {
+          const firstItem = index === 0;
+          const format = useHourly && !firstItem ? 'LT' : 'lll';
+          return getFormattedDate(value, format, {local: !utc});
+        },
+      },
+    };
+
     if (this.useHourlyInterval()) {
-      interval = '1h';
-      xAxisOptions.axisLabel = {
-        formatter: value => getFormattedDate(value, 'LT', {local: !utc}),
-      };
+      interval = '5m';
     }
 
     // TODO(billy): For now only include previous period when we use relative time
@@ -253,15 +264,23 @@ class EventsChart extends React.Component {
                 interval={interval === '1h' ? 'hour' : 'day'}
                 series={timeseriesData}
                 seriesOptions={{
-                  showSymbol: true,
+                  showSymbol: false,
                 }}
                 previousPeriod={previousTimeseriesData}
                 grid={{
-                  left: '18px',
+                  left: '30px',
                   right: '18px',
                 }}
                 xAxis={xAxisOptions}
                 dataZoom={DataZoom()}
+                tooltip={{
+                  formatAxisLabel: (value, isTimestamp, isUtc) => {
+                    if (!isTimestamp) {
+                      return value;
+                    }
+                    return getFormattedDate(value, 'lll', {local: !isUtc});
+                  },
+                }}
                 toolBox={ToolBox(
                   {},
                   {
@@ -270,9 +289,11 @@ class EventsChart extends React.Component {
                         zoom: '',
                         back: '',
                       },
-                    },
-                    restore: {
-                      title: ' ',
+                      iconStyle: {
+                        borderWidth: 0,
+                        color: 'transparent',
+                        opacity: 0,
+                      },
                     },
                   }
                 )}
diff --git a/tests/js/spec/views/organizationEvents/events.spec.jsx b/tests/js/spec/views/organizationEvents/events.spec.jsx
index 94c90a1298..c5b9984f46 100644
--- a/tests/js/spec/views/organizationEvents/events.spec.jsx
+++ b/tests/js/spec/views/organizationEvents/events.spec.jsx
@@ -201,7 +201,7 @@ describe('OrganizationEventsErrors', function() {
       newParams = {
         zoom: '1',
         start: '2018-11-29T00:00:00',
-        end: '2018-12-02T23:59:59',
+        end: '2018-12-02T00:00:00',
       };
 
       expect(router.push).toHaveBeenLastCalledWith(
@@ -222,13 +222,13 @@ describe('OrganizationEventsErrors', function() {
 
       wrapper.update();
       expect(wrapper.state('start')).toEqual(getLocalDateObject('2018-11-29T00:00:00'));
-      expect(wrapper.state('end')).toEqual(getLocalDateObject('2018-12-02T23:59:59'));
+      expect(wrapper.state('end')).toEqual(getLocalDateObject('2018-12-02T00:00:00'));
 
       expect(wrapper.find('TimeRangeSelector').prop('start')).toEqual(
         getLocalDateObject('2018-11-29T00:00:00')
       );
       expect(wrapper.find('TimeRangeSelector').prop('end')).toEqual(
-        getLocalDateObject('2018-12-02T23:59:59')
+        getLocalDateObject('2018-12-02T00:00:00')
       );
     });
   });
diff --git a/tests/js/spec/views/organizationEvents/eventsChart.spec.jsx b/tests/js/spec/views/organizationEvents/eventsChart.spec.jsx
index 3771405429..a356fd0619 100644
--- a/tests/js/spec/views/organizationEvents/eventsChart.spec.jsx
+++ b/tests/js/spec/views/organizationEvents/eventsChart.spec.jsx
@@ -59,7 +59,7 @@ describe('EventsChart', function() {
     let newParams = {
       statsPeriod: null,
       start: '2018-11-29T00:00:00',
-      end: '2018-12-02T23:59:59',
+      end: '2018-12-02T00:00:00',
       zoom: '1',
     };
     expect(updateParams).toHaveBeenCalledWith(newParams);
@@ -87,14 +87,14 @@ describe('EventsChart', function() {
     ]);
     expect(wrapper.instance().currentPeriod.period).toEqual(null);
     expect(wrapper.instance().currentPeriod.start).toEqual('2018-11-29T00:00:00');
-    expect(wrapper.instance().currentPeriod.end).toEqual('2018-12-02T23:59:59');
+    expect(wrapper.instance().currentPeriod.end).toEqual('2018-12-02T00:00:00');
 
     // Zoom again
     mockZoomRange(3, 5);
     doZoom(wrapper, chart);
     expect(wrapper.instance().currentPeriod.period).toEqual(null);
     expect(wrapper.instance().currentPeriod.start).toEqual('2018-11-30T00:00:00');
-    expect(wrapper.instance().currentPeriod.end).toEqual('2018-12-02T23:59:59');
+    expect(wrapper.instance().currentPeriod.end).toEqual('2018-12-02T00:00:00');
 
     expect(wrapper.instance().history[0]).toEqual({
       period: '14d',
@@ -102,18 +102,18 @@ describe('EventsChart', function() {
       end: null,
     });
     expect(wrapper.instance().history[1].start).toEqual('2018-11-29T00:00:00');
-    expect(wrapper.instance().history[1].end).toEqual('2018-12-02T23:59:59');
+    expect(wrapper.instance().history[1].end).toEqual('2018-12-02T00:00:00');
 
     // go back in history
     mockZoomRange(null, null);
     doZoom(wrapper, chart);
     expect(wrapper.instance().currentPeriod.period).toEqual(null);
     expect(wrapper.instance().currentPeriod.start).toEqual('2018-11-29T00:00:00');
-    expect(wrapper.instance().currentPeriod.end).toEqual('2018-12-02T23:59:59');
+    expect(wrapper.instance().currentPeriod.end).toEqual('2018-12-02T00:00:00');
     newParams = {
       statsPeriod: null,
       start: '2018-11-29T00:00:00',
-      end: '2018-12-02T23:59:59',
+      end: '2018-12-02T00:00:00',
       zoom: '1',
     };
     expect(updateParams).toHaveBeenCalledWith(newParams);
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
index 4a9c20dd56..e41316d00d 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
@@ -527,7 +527,7 @@ exports[`Organization Developer Settings when Apps exist displays all Apps owned
                                                         ],
                                                         "getColorPalette": [Function],
                                                         "previousPeriod": "#BDB4C7",
-                                                        "symbolSize": 10,
+                                                        "symbolSize": 6,
                                                       },
                                                       "diff": Object {
                                                         "added": "#d8f0e4",
@@ -776,7 +776,7 @@ exports[`Organization Developer Settings when Apps exist displays all Apps owned
                                                                 ],
                                                                 "getColorPalette": [Function],
                                                                 "previousPeriod": "#BDB4C7",
-                                                                "symbolSize": 10,
+                                                                "symbolSize": 6,
                                                               },
                                                               "diff": Object {
                                                                 "added": "#d8f0e4",
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
index 532cc8e331..3bb90cd5bf 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
@@ -650,7 +650,7 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                   ],
                                                   "getColorPalette": [Function],
                                                   "previousPeriod": "#BDB4C7",
-                                                  "symbolSize": 10,
+                                                  "symbolSize": 6,
                                                 },
                                                 "diff": Object {
                                                   "added": "#d8f0e4",
@@ -916,7 +916,7 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                           ],
                                                           "getColorPalette": [Function],
                                                           "previousPeriod": "#BDB4C7",
-                                                          "symbolSize": 10,
+                                                          "symbolSize": 6,
                                                         },
                                                         "diff": Object {
                                                           "added": "#d8f0e4",
@@ -2063,7 +2063,7 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                   ],
                                                   "getColorPalette": [Function],
                                                   "previousPeriod": "#BDB4C7",
-                                                  "symbolSize": 10,
+                                                  "symbolSize": 6,
                                                 },
                                                 "diff": Object {
                                                   "added": "#d8f0e4",
@@ -2329,7 +2329,7 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                           ],
                                                           "getColorPalette": [Function],
                                                           "previousPeriod": "#BDB4C7",
-                                                          "symbolSize": 10,
+                                                          "symbolSize": 6,
                                                         },
                                                         "diff": Object {
                                                           "added": "#d8f0e4",
@@ -3767,7 +3767,7 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
                                                   ],
                                                   "getColorPalette": [Function],
                                                   "previousPeriod": "#BDB4C7",
-                                                  "symbolSize": 10,
+                                                  "symbolSize": 6,
                                                 },
                                                 "diff": Object {
                                                   "added": "#d8f0e4",
@@ -4033,7 +4033,7 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
                                                           ],
                                                           "getColorPalette": [Function],
                                                           "previousPeriod": "#BDB4C7",
-                                                          "symbolSize": 10,
+                                                          "symbolSize": 6,
                                                         },
                                                         "diff": Object {
                                                           "added": "#d8f0e4",
@@ -4526,7 +4526,7 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
                                                   ],
                                                   "getColorPalette": [Function],
                                                   "previousPeriod": "#BDB4C7",
-                                                  "symbolSize": 10,
+                                                  "symbolSize": 6,
                                                 },
                                                 "diff": Object {
                                                   "added": "#d8f0e4",
@@ -4792,7 +4792,7 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
                                                           ],
                                                           "getColorPalette": [Function],
                                                           "previousPeriod": "#BDB4C7",
-                                                          "symbolSize": 10,
+                                                          "symbolSize": 6,
                                                         },
                                                         "diff": Object {
                                                           "added": "#d8f0e4",
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
index c598edc2ef..87baff744d 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
@@ -320,7 +320,7 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
                                             ],
                                             "getColorPalette": [Function],
                                             "previousPeriod": "#BDB4C7",
-                                            "symbolSize": 10,
+                                            "symbolSize": 6,
                                           },
                                           "diff": Object {
                                             "added": "#d8f0e4",
@@ -586,7 +586,7 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
                                                     ],
                                                     "getColorPalette": [Function],
                                                     "previousPeriod": "#BDB4C7",
-                                                    "symbolSize": 10,
+                                                    "symbolSize": 6,
                                                   },
                                                   "diff": Object {
                                                     "added": "#d8f0e4",
