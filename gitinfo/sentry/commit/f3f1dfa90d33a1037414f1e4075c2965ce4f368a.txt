commit f3f1dfa90d33a1037414f1e4075c2965ce4f368a
Author: Ben Vinegar <ben@benv.ca>
Date:   Fri Mar 4 14:20:17 2016 -0800

    Project stats flow through project/team stores

diff --git a/package.json b/package.json
index 3ef813a7d2..52a670e33f 100644
--- a/package.json
+++ b/package.json
@@ -35,6 +35,7 @@
     "react-dom": "0.14.7",
     "react-lazy-load": "2.0.1",
     "react-router": "1.0.0",
+    "react-sparklines": "^1.4.2",
     "react-sticky": "3.0.0",
     "reflux": "0.3.0",
     "select2": "3.5.1",
diff --git a/src/sentry/static/sentry/app/actionCreators/projects.jsx b/src/sentry/static/sentry/app/actionCreators/projects.jsx
index 92e874f615..9e4f288d78 100644
--- a/src/sentry/static/sentry/app/actionCreators/projects.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/projects.jsx
@@ -3,15 +3,30 @@ import ProjectActions from '../actions/projectActions';
 export function update(api, params) {
   ProjectActions.update(params.projectId, params.data);
 
-  let endpoint = '/projects/' + params.orgId + '/' + params.projectId + '/';
+  let endpoint = `/projects/${params.orgId}/${params.projectId}/`;
   api.request(endpoint, {
     method: 'PUT',
     data: params.data,
-    success: function (changeId) {
-      ProjectActions.updateSuccess(changeId);
+    success: (data) => {
+      ProjectActions.updateSuccess(data);
     },
-    error: function (changeId) {
-      ProjectActions.updateError(changeId);
+    error: (data) => {
+      ProjectActions.updateError(data);
+    }
+  });
+}
+
+export function loadStats(api, params) {
+  ProjectActions.loadStats(params.orgId, params.data);
+
+  let endpoint = `/organizations/${params.orgId}/stats/`;
+  api.request(endpoint, {
+    query: params.query,
+    success: (data) => {
+      ProjectActions.loadStatsSuccess(data);
+    },
+    error: (data) => {
+      ProjectActions.loadStatsError(data);
     }
   });
 }
diff --git a/src/sentry/static/sentry/app/actions/projectActions.jsx b/src/sentry/static/sentry/app/actions/projectActions.jsx
index 40655acc05..d9287e7f06 100644
--- a/src/sentry/static/sentry/app/actions/projectActions.jsx
+++ b/src/sentry/static/sentry/app/actions/projectActions.jsx
@@ -3,5 +3,8 @@ import Reflux from 'reflux';
 export default Reflux.createActions([
   'update',
   'updateError',
-  'updateSuccess'
+  'updateSuccess',
+  'loadStats',
+  'loadStatsError',
+  'loadStatsSuccess'
 ]);
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index 6317351659..20296be945 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -158,7 +158,10 @@ const ProjectSelector = React.createClass({
     let projectId = project.slug;
 
     return (
-      <Link to={`/${orgId}/${projectId}/`}>{label}</Link>
+      <Link to={`/${orgId}/${projectId}/`}>
+        <span className="icon-bookmark bookmark"></span>
+        {label}
+      </Link>
     );
   },
 
diff --git a/src/sentry/static/sentry/app/stores/projectStore.jsx b/src/sentry/static/sentry/app/stores/projectStore.jsx
index c934c5c4ea..f0bc685bee 100644
--- a/src/sentry/static/sentry/app/stores/projectStore.jsx
+++ b/src/sentry/static/sentry/app/stores/projectStore.jsx
@@ -1,20 +1,28 @@
 import Reflux from 'reflux';
+import _ from 'underscore';
+
 import ProjectActions from '../actions/projectActions';
 
 const ProjectStore = Reflux.createStore({
   init() {
-    this.items = [];
+    this.reset();
 
     this.listenTo(ProjectActions.updateSuccess, this.onUpdateSuccess);
+    this.listenTo(ProjectActions.loadStatsSuccess, this.onStatsLoadSuccess);
   },
 
   reset() {
     this.items = [];
+    this.itemsById = {};
   },
 
   loadInitialData(items) {
     this.items = items;
-    this.trigger(new Set(items.map(item => item.id)));
+    this.itemsById = this.items.reduce((map, project) => {
+      map[project.id] = project;
+      return map;
+    }, {});
+    this.trigger(new Set(Object.keys(this.itemsById)));
   },
 
   onUpdateSuccess(data) {
@@ -23,6 +31,17 @@ const ProjectStore = Reflux.createStore({
     this.trigger(new Set(data.id));
   },
 
+  onStatsLoadSuccess(data) {
+    let touchedIds = [];
+    _.each(data || [], (stats, projectId) => {
+      if (projectId in this.itemsById) {
+        this.itemsById[projectId].stats = stats;
+        touchedIds.push(projectId);
+      }
+    });
+    this.trigger(new Set(touchedIds));
+  },
+
   getAll() {
     return this.items;
   },
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
index fdc4805f00..c20763dd4b 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
@@ -1,5 +1,6 @@
 import React from 'react';
 import {Link} from 'react-router';
+import {Sparklines, SparklinesLine} from 'react-sparklines';
 
 import ActivityFeed from '../components/activity/feed';
 import GroupStore from '../stores/groupStore';
@@ -104,9 +105,17 @@ const ProjectList = React.createClass({
           {projectList.slice(0, maxProjects).map((project) => {
             return (
               <li key={project.id}>
+                <div className="pull-right">
+                  <Sparklines data={[5, 10, 5, 20]}>
+                    <SparklinesLine style={{stroke: '#24A6F7', fill: 'none', strokeWidth: 3}}/>
+                  </Sparklines>
+                </div>
                 <Link to={`/${org.slug}/${project.slug}/`}>
-                  {project.isBookmarked &&  <span className="icon-bookmark"></span>}
-                  {project.teamName} / {project.name}
+                  <h4>
+                    {project.isBookmarked &&  <span className="bookmark icon-bookmark"></span>}
+                    {project.name}
+                  </h4>
+                  <h5>{project.teamName}</h5>
                 </Link>
               </li>
             );
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
index 94752bf07d..ee780c3682 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
@@ -17,6 +17,7 @@ const ExpandedTeamList = React.createClass({
     organization: PropTypes.Organization.isRequired,
     teamList: React.PropTypes.arrayOf(PropTypes.Team).isRequired,
     projectStats: React.PropTypes.object,
+    showAllTeams: React.PropTypes.func.isRequired,
     hasTeams: React.PropTypes.bool
   },
 
@@ -109,20 +110,16 @@ const ExpandedTeamList = React.createClass({
 
   renderProject(project) {
     let org = this.props.organization;
-    let projectStats = this.props.projectStats;
-    let chartData = null;
-    if (projectStats[project.id]) {
-      chartData = projectStats[project.id].map((point) => {
-        return {x: point[0], y: point[1]};
-      });
-    }
+    let chartData = project.stats && project.stats.map(point => {
+      return {x: point[0], y: point[1]};
+    });
 
     return (
       <tr key={project.id} className={project.isBookmarked ? 'isBookmarked' : null}>
         <td>
           <h5>
             <a onClick={this.toggleBookmark.bind(this, project)}>
-              <span className="icon-bookmark" />
+              <span className="icon-bookmark bookmark"/>
             </a>
             <Link to={`/${org.slug}/${project.slug}/`}>
               <ProjectLabel project={project} organization={this.props.organization}/>
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
index ea1a7793be..0ba5dd4707 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
@@ -8,10 +8,11 @@ import OrganizationHomeContainer from '../../components/organizations/homeContai
 import OrganizationState from '../../mixins/organizationState';
 import TeamStore from '../../stores/teamStore';
 import TooltipMixin from '../../mixins/tooltip';
-import {sortArray} from '../../utils';
+import {sortArray, arrayIsEqual} from '../../utils';
 
 import ExpandedTeamList from './expandedTeamList';
 import OrganizationStatOverview from './organizationStatOverview';
+import {loadStats} from '../../actionCreators/projects';
 
 const OrganizationTeams = React.createClass({
   mixins: [
@@ -36,27 +37,22 @@ const OrganizationTeams = React.createClass({
     this.fetchStats();
   },
 
-  // TODO(dcramer): handle updating project stats when items change
+  componentWillUpdate(nextProps, nextState) {
+    if (!arrayIsEqual(nextState.teamList, this.state.teamList))
+      this.fetchStats();
+  },
+
   fetchStats() {
-    this.api.request(this.getOrganizationStatsEndpoint(), {
+    loadStats(this.api, {
+      orgId: this.props.params.orgId,
       query: {
         since: new Date().getTime() / 1000 - 3600 * 24,
         stat: 'generated',
         group: 'project'
-      },
-      success: (data) => {
-        this.setState({
-          projectStats: data
-        });
       }
     });
   },
 
-  getOrganizationStatsEndpoint() {
-    let params = this.props.params;
-    return '/organizations/' + params.orgId + '/stats/';
-  },
-
   onTeamListChange() {
     let newTeamList = TeamStore.getAll();
 
@@ -65,8 +61,10 @@ const OrganizationTeams = React.createClass({
         return o.name;
       })
     });
+  },
 
-    this.fetchStats();
+  toggleTeams(nav) {
+    this.setState({activeNav: nav});
   },
 
   render() {
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index 42197cdd11..96c70328e3 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -55,14 +55,14 @@
 * Dashboard
 * ============================================================================
 */
-
 .organization-dashboard-projects {
-  .icon-bookmark {
-    color: @purple;
+  h4 {
+    font-size: 16px;
+    margin-bottom: 5px;
+  }
+  h5 {
     font-size: 14px;
-    position: relative;
-    padding-right: 5px;
-    top: 2px;
+    color: @gray-light;
   }
 }
 
@@ -136,15 +136,11 @@
     display: none;
   }
 
-  .icon-bookmark {
+  .bookmark {
     color: @gray-light;
-    display: inline-block;
-    padding-right: 10px;
-    top: 2px;
-    position: relative;
   }
 
-  .isBookmarked .icon-bookmark {
+  .isBookmarked .bookmark {
     color: @purple;
   }
 }
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 41ba5f719f..3f3b488f49 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -126,6 +126,14 @@ dl.flat dd {
   text-shadow: none;
 }
 
+/* Icons */
+.icon-bookmark.bookmark {
+  position: relative;
+  top: 2px;
+  padding-right: 0.5em;
+  color: @purple;
+}
+
 /* Button icons */
 
 .btn {
diff --git a/webpack.config.js b/webpack.config.js
index 71949b5574..05ebc655d5 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -54,6 +54,7 @@ var entry = {
     'react-document-title',
     'react-router',
     'react-bootstrap/lib/Modal',
+    'react-sparklines',
     'reflux',
     'select2',
     'flot/jquery.flot',
