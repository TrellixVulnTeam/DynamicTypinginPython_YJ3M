commit bbda43e1c6693416ce4911c20e337714d2d26d8c
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 15 08:45:37 2014 -0800

    Dont send multiple delete signals

diff --git a/src/sentry/web/frontend/remove_organization.py b/src/sentry/web/frontend/remove_organization.py
index 720d69a345..a37f37475f 100644
--- a/src/sentry/web/frontend/remove_organization.py
+++ b/src/sentry/web/frontend/remove_organization.py
@@ -29,11 +29,12 @@ class RemoveOrganizationView(OrganizationView):
     def handle(self, request, organization):
         form = self.get_form(request, organization)
         if form.is_valid():
-            organization.update(status=OrganizationStatus.PENDING_DELETION)
+            if organization.status != OrganizationStatus.PENDING_DELETION:
+                organization.update(status=OrganizationStatus.PENDING_DELETION)
 
-            delete_organization.apply_async(kwargs={
-                'object_id': organization.id,
-            }, countdown=60 * 5)
+                delete_organization.apply_async(kwargs={
+                    'object_id': organization.id,
+                }, countdown=60 * 5)
 
             messages.add_message(request, messages.SUCCESS,
                 MSG_REMOVE_SUCCESS % (organization.name,))
diff --git a/src/sentry/web/frontend/remove_project.py b/src/sentry/web/frontend/remove_project.py
index da3954886f..f5abfad1fb 100644
--- a/src/sentry/web/frontend/remove_project.py
+++ b/src/sentry/web/frontend/remove_project.py
@@ -62,7 +62,7 @@ class RemoveProjectView(ProjectView):
 
             messages.add_message(
                 request, messages.SUCCESS,
-                _('Deletion has been queued and will happen automatically.'))
+                _(u'The project %r was scheduled for deletion.') % (project.name.encode('utf-8'),))
 
             return HttpResponseRedirect(reverse('sentry-organization-home', args=[team.organization.id]))
 
diff --git a/src/sentry/web/frontend/remove_team.py b/src/sentry/web/frontend/remove_team.py
index 9b3db3cb53..e52d32895f 100644
--- a/src/sentry/web/frontend/remove_team.py
+++ b/src/sentry/web/frontend/remove_team.py
@@ -34,20 +34,18 @@ class RemoveTeamView(TeamView):
         form = self.get_form(request)
 
         if form.is_valid():
-            team.update(status=TeamStatus.PENDING_DELETION)
-
-            # we delay the task for 5 minutes so we can implement an undo
-            kwargs = {'object_id': team.id}
-            delete_team.apply_async(kwargs=kwargs, countdown=60 * 5)
-
-            AuditLogEntry.objects.create(
-                organization=organization,
-                actor=request.user,
-                ip_address=request.META['REMOTE_ADDR'],
-                target_object=team.id,
-                event=AuditLogEntryEvent.TEAM_REMOVE,
-                data=team.get_audit_log_data(),
-            )
+            if team.status != TeamStatus.PENDING_DELETION:
+                team.update(status=TeamStatus.PENDING_DELETION)
+                delete_team.delay(object_id=team.id, countdown=60 * 5)
+
+                AuditLogEntry.objects.create(
+                    organization=organization,
+                    actor=request.user,
+                    ip_address=request.META['REMOTE_ADDR'],
+                    target_object=team.id,
+                    event=AuditLogEntryEvent.TEAM_REMOVE,
+                    data=team.get_audit_log_data(),
+                )
 
             messages.add_message(
                 request, messages.SUCCESS,
