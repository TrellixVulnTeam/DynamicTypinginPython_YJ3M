commit c002469159b1e79ac56bb8a8264b3e7286612636
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Jan 3 08:51:51 2018 -0800

    fix(ui): Fix api error handler (#6861)
    
    + adds test cases
    
    Fixes JAVASCRIPT-2TM

diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 05ef60599b..3a20b8853c 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -88,10 +88,13 @@ export class Client {
             });
         },
       });
-    } else {
-      // Call normal error callback
-      this.wrapCallback(id, requestOptions.error)(response, ...responseArgs);
+      return;
     }
+
+    // Call normal error callback
+    let errorCb = this.wrapCallback(id, requestOptions.error);
+    if (typeof errorCb !== 'function') return;
+    errorCb(response, ...responseArgs);
   }
 
   request(path, options = {}) {
diff --git a/tests/js/spec/api.spec.jsx b/tests/js/spec/api.spec.jsx
index ca856bcf57..e675d3c05d 100644
--- a/tests/js/spec/api.spec.jsx
+++ b/tests/js/spec/api.spec.jsx
@@ -74,6 +74,37 @@ describe('api', function() {
     });
   });
 
+  it('handles error callback', function() {
+    sandbox.stub(api, 'wrapCallback', (id, func) => func);
+    let errorCb = jest.fn();
+    let args = ['test', true, 1];
+    api.handleRequestError(
+      {
+        id: 'test',
+        path: 'test',
+        requestOptions: {error: errorCb},
+      },
+      ...args
+    );
+
+    expect(errorCb).toHaveBeenCalledWith(...args);
+    api.wrapCallback.restore();
+  });
+
+  it('handles undefined error callback', function() {
+    expect(() =>
+      api.handleRequestError(
+        {
+          id: 'test',
+          path: 'test',
+          requestOptions: {},
+        },
+        {},
+        {}
+      )
+    ).not.toThrow();
+  });
+
   describe('bulkUpdate()', function() {
     beforeEach(function() {
       sandbox.stub(api, '_wrapRequest');
