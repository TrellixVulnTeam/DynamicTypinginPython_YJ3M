commit f8a5903eb1abd73870c0b05bc649ef3d32c29a00
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Jul 6 10:22:22 2018 -0700

    ref(js): Codesplit "react-sparklines" (#8934)
    
    This is only used on Releases Overview.

diff --git a/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx b/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
index 5964a63e8b..17d07f2bf4 100644
--- a/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
+++ b/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
@@ -2,7 +2,6 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import {Link} from 'react-router';
-import {Sparklines, SparklinesLine} from 'react-sparklines';
 
 import LoadingIndicator from 'app/components/loadingIndicator';
 import LoadingError from 'app/components/loadingError';
@@ -32,10 +31,32 @@ const ReleaseProjectStatSparkline = createReactClass({
   },
 
   componentDidMount() {
+    Promise.all([
+      this.getStatReceived(),
+      this.getNewIssuesCount(),
+      import(/*webpackChunkName "ReactSparkLines" */ 'react-sparklines'),
+    ]).then(
+      ([stats, newIssues, reactSparkLines]) => {
+        this.setState({
+          loading: false,
+          stats,
+          newIssueCount: newIssues && newIssues.newGroups,
+          Sparklines: reactSparkLines.Sparklines,
+          SparklinesLine: reactSparkLines.SparklinesLine,
+          error: false,
+        });
+      },
+      () => {
+        this.setState({error: true});
+      }
+    );
+  },
+
+  getStatReceived() {
     let {orgId} = this.props;
     let projectId = this.props.project.slug;
     let path = `/projects/${orgId}/${projectId}/stats/`;
-    this.api.request(path, {
+    return this.api.requestPromise(path, {
       method: 'GET',
       data: 'stat=received',
       success: (data, _, jqXHR) => {
@@ -58,7 +79,7 @@ const ReleaseProjectStatSparkline = createReactClass({
     let issuesPath = `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(
       version
     )}/`;
-    this.api.request(issuesPath, {
+    return this.api.requestPromise(issuesPath, {
       method: 'GET',
       success: (data, _, jqXHR) => {
         this.setState({
@@ -76,11 +97,13 @@ const ReleaseProjectStatSparkline = createReactClass({
 
   render() {
     let {orgId, project, version} = this.props;
-    let newIssueCount = this.state.newIssueCount;
-    let values = this.state.stats.map(tuple => tuple[1]);
-    if (this.state.loading) return <LoadingIndicator />;
 
+    if (this.state.loading) return <LoadingIndicator />;
     if (this.state.error) return <LoadingError />;
+
+    let {Sparklines, SparklinesLine, newIssueCount, stats} = this.state;
+    let values = stats.map(tuple => tuple[1]);
+
     return (
       <li>
         <div className="sparkline pull-right" style={{width: 96}}>
diff --git a/webpack.config.js b/webpack.config.js
index ea961a2fa3..e013bfa682 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -66,7 +66,6 @@ var appEntry = {
     'react-document-title',
     'react-router',
     'react-bootstrap/lib/Modal',
-    'react-sparklines',
     'reflux',
     'select2',
     'vendor/simple-slider/simple-slider',
