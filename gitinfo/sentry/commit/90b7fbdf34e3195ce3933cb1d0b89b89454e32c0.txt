commit 90b7fbdf34e3195ce3933cb1d0b89b89454e32c0
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue Sep 11 15:27:55 2018 -0700

    fix(form): Correctly remove validation errors (#9720)

diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/model.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/model.jsx
index 6452d4ba36..296672a802 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/model.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/model.jsx
@@ -281,11 +281,10 @@ class FormModel {
       errors.push([id, fieldIsRequiredMessage]);
     }
 
-    errors
-      .filter(([, errorMessage]) => !!errorMessage)
-      .forEach(([field, errorMessage]) => {
-        this.setError(field, errorMessage);
-      });
+    // If we have no errors, ensure we clear the field
+    errors = errors.length === 0 ? [[id, null]] : errors;
+
+    errors.forEach(([field, errorMessage]) => this.setError(field, errorMessage));
   }
 
   @action
diff --git a/tests/js/spec/views/passwordForm.spec.jsx b/tests/js/spec/views/passwordForm.spec.jsx
index 1d73af6d44..6e42089fe7 100644
--- a/tests/js/spec/views/passwordForm.spec.jsx
+++ b/tests/js/spec/views/passwordForm.spec.jsx
@@ -90,4 +90,27 @@ describe('PasswordForm', function() {
       done();
     }, 1);
   });
+
+  it('validates mismatched passwords and remvoes validation on match', function() {
+    wrapper.find('input[name="password"]').simulate('change', {target: {value: 'test'}});
+    wrapper
+      .find('input[name="passwordNew"]')
+      .simulate('change', {target: {value: 'nottest'}});
+    wrapper
+      .find('input[name="passwordVerify"]')
+      .simulate('change', {target: {value: 'nottest-mismatch'}});
+
+    const error = wrapper.find('Field[id="passwordVerify"] FormFieldErrorReason');
+
+    expect(error.exists()).toBe(true);
+    expect(error.text()).toBe('Passwords do not match');
+
+    wrapper
+      .find('input[name="passwordVerify"]')
+      .simulate('change', {target: {value: 'nottest'}});
+
+    expect(wrapper.find('Field[id="passwordVerify"] FormFieldErrorReason').exists()).toBe(
+      false
+    );
+  });
 });
