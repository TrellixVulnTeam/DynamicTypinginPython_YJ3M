commit 88ba136bbda533fdb8f4e2bfe181fdd7b2ac724c
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Jan 25 12:42:31 2016 -0800

    Add some basic tests for uwsgi service

diff --git a/src/sentry/services/http.py b/src/sentry/services/http.py
index e81d663f15..501006740a 100644
--- a/src/sentry/services/http.py
+++ b/src/sentry/services/http.py
@@ -12,19 +12,22 @@ import sys
 from sentry.services.base import Service
 
 
-def add_option_to_env(k, v):
-    key = 'UWSGI_' + k.upper().replace('-', '_')
-    if isinstance(v, basestring):
-        value = v
-    elif v is True:
-        value = 'true'
-    elif v is False:
-        value = 'false'
-    elif isinstance(v, (int, long)):
-        value = str(v)
-    else:
-        raise TypeError('Unknown option type: %r (%s)' % (k, type(v)))
-    os.environ[key] = value
+def convert_options_to_env(options):
+    for k, v in options.iteritems():
+        if v is None:
+            continue
+        key = 'UWSGI_' + k.upper().replace('-', '_')
+        if isinstance(v, basestring):
+            value = v
+        elif v is True:
+            value = 'true'
+        elif v is False:
+            value = 'false'
+        elif isinstance(v, (int, long)):
+            value = str(v)
+        else:
+            raise TypeError('Unknown option type: %r (%s)' % (k, type(v)))
+        yield key, value
 
 
 class SentryHTTPServer(Service):
@@ -87,7 +90,7 @@ class SentryHTTPServer(Service):
 
         # Old options from gunicorn
         if 'bind' in options:
-            options['http-socket'] = options.pop('bind')
+            options['%s-socket' % options['protocol']] = options.pop('bind')
         if 'accesslog' in options:
             if options['accesslog'] != '-':
                 options['logto'] = options['accesslog']
@@ -114,9 +117,9 @@ class SentryHTTPServer(Service):
         validate_settings(django_settings)
 
     def run(self):
-        for k, v in self.options.iteritems():
-            if v is not None:
-                add_option_to_env(k, v)
+        # Move all of the options into UWSGI_ env vars
+        for k, v in convert_options_to_env(self.options):
+            os.environ[k] = v
 
         # This has already been validated inside __init__
         os.environ['SENTRY_SKIP_BACKEND_VALIDATION'] = '1'
diff --git a/tests/sentry/services/__init__.py b/tests/sentry/services/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/services/test_http.py b/tests/sentry/services/test_http.py
new file mode 100644
index 0000000000..897f06a5b3
--- /dev/null
+++ b/tests/sentry/services/test_http.py
@@ -0,0 +1,70 @@
+from __future__ import absolute_import
+
+from django.test.utils import override_settings
+from sentry.testutils import TestCase
+from sentry.services.http import SentryHTTPServer, convert_options_to_env
+
+
+class HTTPServiceTest(TestCase):
+    def test_convert(self):
+        options = {
+            'true': True,
+            'false': False,
+            'string': 'foo',
+            'int': 1,
+            'long': 1L,
+            'none': None,
+            'hy-phen': 'foo',
+        }
+        expected = [
+            ('UWSGI_TRUE', 'true'),
+            ('UWSGI_FALSE', 'false'),
+            ('UWSGI_STRING', 'foo'),
+            ('UWSGI_INT', '1'),
+            ('UWSGI_LONG', '1'),
+            ('UWSGI_HY_PHEN', 'foo'),
+        ]
+        assert set(convert_options_to_env(options)) == set(expected)
+
+    def test_options(self):
+        cls = SentryHTTPServer
+
+        server = cls(host='1.1.1.1', port=80)
+        assert server.options['http-socket'] == '1.1.1.1:80'
+
+        with override_settings(SENTRY_WEB_HOST='1.1.1.1', SENTRY_WEB_PORT=80):
+            assert server.options['http-socket'] == '1.1.1.1:80'
+
+        server = cls(workers=10)
+        assert server.options['workers'] == 10
+
+        # Make sure that changing `protocol` to uwsgi sets the right socket
+        options = {'protocol': 'uwsgi'}
+        with override_settings(SENTRY_WEB_OPTIONS=options):
+            server = cls()
+            assert 'http-socket' not in server.options
+            assert 'uwsgi-socket' in server.options
+
+        options = {
+            'bind': '1.1.1.1:80',
+            'accesslog': '/tmp/access.log',
+            'errorlog': '/tmp/error.log',
+            'timeout': 69,
+            'proc_name': 'LOL',
+            'secure_scheme_headers': {},
+            'loglevel': 'info',
+        }
+        with override_settings(SENTRY_WEB_OPTIONS=options):
+            server = cls()
+            assert server.options['http-socket'] == '1.1.1.1:80'
+            assert 'bind' not in server.options
+            assert server.options['logto'] == '/tmp/access.log'
+            assert 'accesslog' not in server.options
+            assert server.options['logto2'] == '/tmp/error.log'
+            assert 'errorlog' not in server.options
+            assert server.options['http-timeout'] == 69
+            assert 'timeout' not in server.options
+            assert server.options['procname-prefix-spaced'] == 'LOL'
+            assert 'proc_name' not in server.options
+            assert 'secure_scheme_headers' not in server.options
+            assert 'loglevel' not in server.options
