commit 2af6eb6fff80004e439e9f11612898161c952b44
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 6 14:23:28 2018 -0700

    Correct BitField query behavior

diff --git a/src/bitfield/query.py b/src/bitfield/query.py
index 35747214df..1a0ae6540a 100644
--- a/src/bitfield/query.py
+++ b/src/bitfield/query.py
@@ -1,7 +1,5 @@
 from __future__ import absolute_import
 
-from bitfield.types import Bit, BitHandler
-
 
 class BitQueryLookupWrapper(object):
     def __init__(self, alias, column, bit):
@@ -23,24 +21,20 @@ class BitQueryLookupWrapper(object):
 
 try:
     # Django 1.7+
-    from django.db.models.lookups import Exact
-
-    class BitQueryLookupWrapper(Exact):  # NOQA
-        def process_lhs(self, qn, connection, lhs=None):
-            lhs_sql, params = super(BitQueryLookupWrapper, self).process_lhs(qn, connection, lhs)
-            if self.rhs:
-                lhs_sql = lhs_sql + ' & %s'
-            else:
-                lhs_sql = lhs_sql + ' | %s'
-            params.append(self.get_db_prep_lookup(self.rhs, connection)[1])
-            return lhs_sql, params
-
-        def get_db_prep_lookup(self, value, connection, prepared=False):
-            v = value.mask if isinstance(value, (BitHandler, Bit)) else value
-            return super(BitQueryLookupWrapper, self).get_db_prep_lookup(v, connection)
-
-        def get_prep_lookup(self):
-            return self.rhs
+    from django.db.models.lookups import BuiltinLookup
+
+    class BitQueryLookupWrapper(BuiltinLookup):  # NOQA
+        def as_sql(self, compiler, connection):
+            """
+            Create the proper SQL fragment. This inserts something like
+            "(T0.flags & value) != 0".
+
+            This will be called by Where.as_sql()
+            """
+            qn = connection.ops.quote_name
+            if self.bit:
+                return ("(%s.%s | %d)" % (qn(self.table_alias), qn(self.column), self.bit.mask), [])
+            return ("(%s.%s & %d)" % (qn(self.table_alias), qn(self.column), self.bit.mask), [])
 
 except ImportError:
     pass
