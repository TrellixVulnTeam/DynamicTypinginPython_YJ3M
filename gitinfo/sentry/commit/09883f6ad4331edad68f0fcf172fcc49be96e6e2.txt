commit 09883f6ad4331edad68f0fcf172fcc49be96e6e2
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Sep 7 10:23:23 2017 -0700

    feat(cloudflare): Expand integration to support webhooks
    
    Move cloudflare into its own application and URL namespace, and add initial logging and support of webhooks.

diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 47d4d31636..219c8b259b 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -9,7 +9,6 @@ from .endpoints.api_tokens import ApiTokensEndpoint
 from .endpoints.auth_index import AuthIndexEndpoint
 from .endpoints.broadcast_index import BroadcastIndexEndpoint
 from .endpoints.catchall import CatchallEndpoint
-from .endpoints.cloudflare_metadata import CloudflareMetadataEndpoint
 from .endpoints.event_details import EventDetailsEndpoint
 from .endpoints.event_apple_crash_report import EventAppleCrashReportEndpoint
 from .endpoints.group_details import GroupDetailsEndpoint
@@ -152,9 +151,6 @@ urlpatterns = patterns(
     # Broadcasts
     url(r'^broadcasts/$', BroadcastIndexEndpoint.as_view(), name='sentry-api-0-broadcast-index'),
 
-    # Cloudflare Integration
-    url(r'^cloudflare/metadata/$', CloudflareMetadataEndpoint.as_view()),
-
     # Users
     url(r'^users/$', UserIndexEndpoint.as_view(), name='sentry-api-0-user-index'),
     url(
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index a2a3e8f4f3..82beda64a5 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -81,7 +81,7 @@ RESERVED_ORGANIZATION_SLUGS = frozenset(
         'remote', 'get-cli', 'blog', 'welcome', 'features', 'customers', 'integrations', 'signup',
         'pricing', 'subscribe', 'enterprise', 'about', 'jobs', 'thanks', 'guide', 'privacy',
         'security', 'terms', 'from', 'sponsorship', 'for', 'at', 'platforms', 'branding', 'vs',
-        'answers', '_admin', 'support', 'contact', 'onboarding',
+        'answers', '_admin', 'support', 'contact', 'onboarding', 'ext', 'extension', 'extensions', 'plugins',
     )
 )
 
diff --git a/src/sentry/integrations/__init__.py b/src/sentry/integrations/__init__.py
new file mode 100644
index 0000000000..c3961685ab
--- /dev/null
+++ b/src/sentry/integrations/__init__.py
@@ -0,0 +1 @@
+from __future__ import absolute_import
diff --git a/src/sentry/integrations/cloudflare/__init__.py b/src/sentry/integrations/cloudflare/__init__.py
new file mode 100644
index 0000000000..c3961685ab
--- /dev/null
+++ b/src/sentry/integrations/cloudflare/__init__.py
@@ -0,0 +1 @@
+from __future__ import absolute_import
diff --git a/src/sentry/api/endpoints/cloudflare_metadata.py b/src/sentry/integrations/cloudflare/metadata.py
similarity index 76%
rename from src/sentry/api/endpoints/cloudflare_metadata.py
rename to src/sentry/integrations/cloudflare/metadata.py
index 1ca1bb8ab3..268c25367f 100644
--- a/src/sentry/api/endpoints/cloudflare_metadata.py
+++ b/src/sentry/integrations/cloudflare/metadata.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+import logging
 import six
 
 from rest_framework.response import Response
@@ -7,11 +8,16 @@ from rest_framework.response import Response
 from sentry.api.base import Endpoint
 from sentry.api.bases.user import UserPermission
 
+logger = logging.getLogger('sentry.integrations.cloudflare')
+
 
 class CloudflareMetadataEndpoint(Endpoint):
     permission_classes = (UserPermission, )
 
     def get(self, request):
+        logger.info('cloudflare.metadata', extra={
+            'user_id': request.user.id,
+        })
         return Response(
             {
                 'metadata': {
diff --git a/src/sentry/integrations/cloudflare/urls.py b/src/sentry/integrations/cloudflare/urls.py
new file mode 100644
index 0000000000..e9dc6e5009
--- /dev/null
+++ b/src/sentry/integrations/cloudflare/urls.py
@@ -0,0 +1,13 @@
+from __future__ import absolute_import, print_function
+
+from django.conf.urls import patterns, url
+
+from .metadata import CloudflareMetadataEndpoint
+from .webhook import CloudflareWebhookEndpoint
+
+
+urlpatterns = patterns(
+    '',
+    url(r'^metadata/$', CloudflareMetadataEndpoint.as_view()),
+    url(r'^webhook/$', CloudflareWebhookEndpoint.as_view()),
+)
diff --git a/src/sentry/integrations/cloudflare/webhook.py b/src/sentry/integrations/cloudflare/webhook.py
new file mode 100644
index 0000000000..8335cbecca
--- /dev/null
+++ b/src/sentry/integrations/cloudflare/webhook.py
@@ -0,0 +1,21 @@
+from __future__ import absolute_import
+
+import logging
+
+from rest_framework.response import Response
+
+from sentry.api.base import Endpoint
+
+logger = logging.getLogger('sentry.integrations.cloudflare')
+
+
+class CloudflareWebhookEndpoint(Endpoint):
+    permission_classes = ()
+
+    def post(self, request):
+        event = request.DATA.get('event')
+        logger.info('cloudflare.webhook.{}'.format(event), extra={
+            'user_id': request.user.id if request.user.is_authenticated() else None,
+        })
+        # TODO(dcramer): We still need to implement various hooks for CF
+        return Response({})
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 5fa92021ee..f29d69ce49 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -443,6 +443,10 @@ urlpatterns += patterns(
     url(r'^crossdomain\.xml$', api.crossdomain_xml_index, name='sentry-api-crossdomain-xml-index'),
 
     # plugins
+    # XXX(dcramer): preferably we'd be able to use 'integrations' as the URL
+    # prefix here, but unfortunately sentry.io has that mapped to marketing
+    # assets for the time being
+    url(r'^extensions/cloudflare/', include('sentry.integrations.cloudflare.urls')),
     url(r'^plugins/', include('sentry.plugins.base.urls')),
 
     # Generic API
diff --git a/tests/sentry/integrations/__init__.py b/tests/sentry/integrations/__init__.py
new file mode 100644
index 0000000000..c3961685ab
--- /dev/null
+++ b/tests/sentry/integrations/__init__.py
@@ -0,0 +1 @@
+from __future__ import absolute_import
diff --git a/tests/sentry/integrations/cloudflare/__init__.py b/tests/sentry/integrations/cloudflare/__init__.py
new file mode 100644
index 0000000000..c3961685ab
--- /dev/null
+++ b/tests/sentry/integrations/cloudflare/__init__.py
@@ -0,0 +1 @@
+from __future__ import absolute_import
diff --git a/tests/sentry/api/endpoints/test_cloudflare_metdata.py b/tests/sentry/integrations/cloudflare/test_metadata.py
similarity index 85%
rename from tests/sentry/api/endpoints/test_cloudflare_metdata.py
rename to tests/sentry/integrations/cloudflare/test_metadata.py
index 1cd7ccbb4b..970274521a 100644
--- a/tests/sentry/api/endpoints/test_cloudflare_metdata.py
+++ b/tests/sentry/integrations/cloudflare/test_metadata.py
@@ -11,7 +11,7 @@ class CloudflareMetadataTest(APITestCase):
 
         self.login_as(user=user)
 
-        resp = self.client.get('/api/0/cloudflare/metadata/', format='json')
+        resp = self.client.get('/extensions/cloudflare/metadata/', format='json')
 
         assert resp.status_code == 200, resp.content
         assert resp.data['metadata'] == {
diff --git a/tests/sentry/integrations/cloudflare/test_webhook.py b/tests/sentry/integrations/cloudflare/test_webhook.py
new file mode 100644
index 0000000000..842e9da072
--- /dev/null
+++ b/tests/sentry/integrations/cloudflare/test_webhook.py
@@ -0,0 +1,13 @@
+from __future__ import absolute_import
+
+from sentry.testutils import APITestCase
+
+
+class CloudflareWebhookTest(APITestCase):
+    def test_simple(self):
+        resp = self.client.post('/extensions/cloudflare/webhook/', data={
+            'event': 'preview',
+        })
+
+        assert resp.status_code == 200, resp.content
+        assert resp.data == {}
