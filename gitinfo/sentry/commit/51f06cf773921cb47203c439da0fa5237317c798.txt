commit 51f06cf773921cb47203c439da0fa5237317c798
Author: William Mak <william@wmak.io>
Date:   Mon Feb 3 19:06:35 2020 -0500

    feat(discover) - Adding an error state to the minigraphs
    
    - When a minigraph errors for any reason, show an error icon instead of
      forever loading.

diff --git a/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx b/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx
index 1d9f87b39a..2f8083dfb3 100644
--- a/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx
+++ b/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx
@@ -18,6 +18,7 @@ import LoadingPanel from '../loadingPanel';
 type RenderProps = {
   loading: boolean;
   reloading: boolean;
+  errored: boolean;
 
   // timeseries data
   timeseriesData?: Series[];
@@ -61,6 +62,7 @@ type EventsRequestProps = DefaultProps & TimeAggregationProps & EventsRequestPar
 
 type EventsRequestState = {
   reloading: boolean;
+  errored: boolean;
   timeseriesData: null | EventsStats;
 };
 
@@ -149,6 +151,11 @@ class EventsRequest extends React.PureComponent<EventsRequestProps, EventsReques
      */
     loading: PropTypes.bool,
 
+    /**
+     * Whether there was an error retrieving data
+     */
+    errored: PropTypes.bool,
+
     /**
      * Should loading be shown.
      */
@@ -177,6 +184,7 @@ class EventsRequest extends React.PureComponent<EventsRequestProps, EventsReques
 
   state = {
     reloading: !!this.props.loading,
+    errored: false,
     timeseriesData: null,
   };
 
@@ -213,6 +221,9 @@ class EventsRequest extends React.PureComponent<EventsRequestProps, EventsReques
       } else {
         addErrorMessage(t('Error loading chart data'));
       }
+      this.setState({
+        errored: true,
+      });
     }
 
     if (this.unmounting) {
@@ -343,7 +354,7 @@ class EventsRequest extends React.PureComponent<EventsRequestProps, EventsReques
 
   render() {
     const {children, showLoading, ...props} = this.props;
-    const {timeseriesData, reloading} = this.state;
+    const {timeseriesData, reloading, errored} = this.state;
     // Is "loading" if data is null
     const loading = this.props.loading || timeseriesData === null;
 
@@ -364,6 +375,7 @@ class EventsRequest extends React.PureComponent<EventsRequestProps, EventsReques
     return children({
       loading,
       reloading,
+      errored,
       // timeseries data
       timeseriesData: transformedTimeseriesData,
       allTimeseriesData,
diff --git a/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx b/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx
index e537cac264..e656ab67bb 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx
@@ -12,6 +12,8 @@ import {getInterval} from 'app/components/charts/utils';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import LoadingContainer from 'app/components/loading/loadingContainer';
+import {IconWarning} from 'app/icons';
+import theme from 'app/utils/theme';
 
 import EventView from './eventView';
 
@@ -82,12 +84,19 @@ class MiniGraph extends React.Component<Props> {
         environment={environment as string[]}
         includePrevious={false}
       >
-        {({loading, timeseriesData}) => {
+        {({loading, timeseriesData, errored}) => {
+          if (errored) {
+            return (
+              <StyledGraphContainer>
+                <IconWarning color={theme.gray2} size="md" />
+              </StyledGraphContainer>
+            );
+          }
           if (loading) {
             return (
-              <StyledLoadingContainer>
+              <StyledGraphContainer>
                 <LoadingIndicator mini />
-              </StyledLoadingContainer>
+              </StyledGraphContainer>
             );
           }
 
@@ -142,7 +151,7 @@ class MiniGraph extends React.Component<Props> {
   }
 }
 
-const StyledLoadingContainer = styled(props => {
+const StyledGraphContainer = styled(props => {
   return <LoadingContainer {...props} maskBackgroundColor="transparent" />;
 })`
   height: 100px;
