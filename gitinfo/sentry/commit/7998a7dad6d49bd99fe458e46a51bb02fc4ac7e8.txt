commit 7998a7dad6d49bd99fe458e46a51bb02fc4ac7e8
Author: Ted Kaemming <ted@kaemming.com>
Date:   Thu Dec 10 13:02:42 2015 -0800

    Factor out digest option key generation for consistency.
    
    This makes the UI controls actually control the backend behaviorâ€¦ oops.

diff --git a/src/sentry/digests/__init__.py b/src/sentry/digests/__init__.py
index 8b5cbad2e2..e3ded00f5d 100644
--- a/src/sentry/digests/__init__.py
+++ b/src/sentry/digests/__init__.py
@@ -12,3 +12,15 @@ class Record(namedtuple('Record', 'key value timestamp')):
 
 
 ScheduleEntry = namedtuple('ScheduleEntry', 'key timestamp')
+
+
+OPTIONS = frozenset((
+    'increment_delay',
+    'maximum_delay',
+    'minimum_delay',
+))
+
+
+def get_option_key(plugin, option):
+    assert option in OPTIONS
+    return 'digests:{}:{}'.format(plugin, option)
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 92b14cb6f5..6bb3126fcd 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -15,6 +15,7 @@ from sentry.app import (
     digests,
     ratelimiter,
 )
+from sentry.digests import get_option_key as get_digest_option_key
 from sentry.digests.notifications import (
     event_to_record,
     unsplit_key,
@@ -69,7 +70,7 @@ class NotificationPlugin(Plugin):
         if hasattr(self, 'notify_digest') and digests.enabled(project):
             get_digest_option = lambda key: ProjectOption.objects.get_value(
                 project,
-                '{0}:digests:{1}'.format(self.get_conf_key(), key),
+                get_digest_option_key(self.get_conf_key(), key),
             )
             digest_key = unsplit_key(self, event.group.project)
             immediate_delivery = digests.add(
diff --git a/src/sentry/tasks/digests.py b/src/sentry/tasks/digests.py
index 256a09ebff..6dac94b055 100644
--- a/src/sentry/tasks/digests.py
+++ b/src/sentry/tasks/digests.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 import logging
 import time
 
+from sentry.digests import get_option_key
 from sentry.digests.notifications import (
     build_digest,
     split_key,
@@ -55,7 +56,7 @@ def deliver_digest(key, schedule_timestamp=None):
 
     minimum_delay = ProjectOption.objects.get_value(
         project,
-        '{0}:digests:{1}'.format(plugin.get_conf_key(), 'minimum_delay'),
+        get_option_key(plugin.get_conf_key(), 'minimum_delay')
     )
     with digests.digest(key, minimum_delay=minimum_delay) as records:
         digest = build_digest(project, records)
diff --git a/src/sentry/web/frontend/project_notifications.py b/src/sentry/web/frontend/project_notifications.py
index d464ef8cb1..f9445e4da4 100644
--- a/src/sentry/web/frontend/project_notifications.py
+++ b/src/sentry/web/frontend/project_notifications.py
@@ -8,6 +8,7 @@ from django.utils.translation import ugettext_lazy as _
 
 from sentry import constants
 from sentry.app import digests
+from sentry.digests import get_option_key as get_digest_option_key
 from sentry.plugins import plugins, NotificationPlugin
 from sentry.web.forms.projects import (
     DigestSettingsForm,
@@ -59,11 +60,11 @@ class ProjectNotificationsView(ProjectView):
                     prefix='digests',
                     initial={
                         'minimum_delay': project.get_option(
-                            'digests:mail:minimum_delay',
+                            get_digest_option_key('mail', 'minimum_delay'),
                             digests.minimum_delay / 60,
                         ),
                         'maximum_delay': project.get_option(
-                            'digests:mail:maximum_delay',
+                            get_digest_option_key('mail', 'maximum_delay'),
                             digests.maximum_delay / 60,
                         ),
                     },
@@ -82,8 +83,14 @@ class ProjectNotificationsView(ProjectView):
             if general_form.is_valid() and (digests_form.is_valid() if digests_form is not None else True):
                 project.update_option('mail:subject_prefix', general_form.cleaned_data['subject_prefix'])
                 if digests_form is not None:
-                    project.update_option('digests:mail:minimum_delay', digests_form.cleaned_data['minimum_delay'] * 60)
-                    project.update_option('digests:mail:maximum_delay', digests_form.cleaned_data['maximum_delay'] * 60)
+                    project.update_option(
+                        get_digest_option_key('mail', 'minimum_delay'),
+                        digests_form.cleaned_data['minimum_delay'] * 60,
+                    )
+                    project.update_option(
+                        get_digest_option_key('mail', 'maximum_delay'),
+                        digests_form.cleaned_data['maximum_delay'] * 60,
+                    )
                 messages.add_message(
                     request, messages.SUCCESS,
                     OK_SETTINGS_SAVED)
@@ -94,11 +101,11 @@ class ProjectNotificationsView(ProjectView):
                     prefix='digests',
                     initial={
                         'minimum_delay': project.get_option(
-                            'digests:mail:minimum_delay',
+                            get_digest_option_key('mail', 'minimum_delay'),
                             digests.minimum_delay,
                         ) / 60,
                         'maximum_delay': project.get_option(
-                            'digests:mail:maximum_delay',
+                            get_digest_option_key('mail', 'maximum_delay'),
                             digests.maximum_delay,
                         ) / 60,
                     },
