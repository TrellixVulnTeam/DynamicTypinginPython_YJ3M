commit 7eafcf19c403fe6750351771e265883ad962bd69
Author: adhiraj <adhirajsomani@gmail.com>
Date:   Wed Mar 7 15:38:30 2018 -0800

    feat(issues): Add invite member option to assignee dropdown (#7447)
    
    * feat(issues): Add invite member option to assignee dropdown

diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index 6540ecd27e..94ca6c9f31 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -243,6 +243,8 @@ const AssigneeSelector = createReactClass({
     let teamNodes = [];
     let org = this.context.organization;
     let features = new Set(org.features);
+    let access = new Set(org.access);
+
     if (features.has('internal-catchall')) {
       teamNodes = AssigneeSelector.filterMembers(
         this.assignableTeams(),
@@ -312,12 +314,25 @@ const AssigneeSelector = createReactClass({
                     <span className="icon-circle-cross" /> {t('Clear Assignee')}
                   </MenuItem>
                 )}
+
               {!memberListLoading && (
                 <li>
                   <ul>{[...teamNodes, ...memberNodes]}</ul>
                 </li>
               )}
 
+              {ConfigStore.get('invitesEnabled') &&
+                access.has('org:write') && (
+                  <MenuItem
+                    className="invite-member"
+                    disabled={!loading}
+                    to={`/settings/organization/${this.context.organization
+                      .slug}/members/new/`}
+                  >
+                    <span className="icon-plus" /> {t('Invite Member')}
+                  </MenuItem>
+                )}
+
               {memberListLoading && (
                 <li>
                   <FlowLayout center className="list-loading-container">
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 7550cb11be..870d7deb11 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -1918,6 +1918,16 @@ ul.faces {
     }
   }
 
+  .invite-member a {
+    .icon-plus {
+      font-size: 16px;
+      position: absolute;
+      left: 10px;
+      top: 4px;
+      opacity: 0.3;
+    }
+  }
+
   .clear-assignee a {
     background: rgba(52, 60, 69, 0.03);
     border-bottom: 1px solid rgba(52, 60, 69, 0.06);
diff --git a/tests/js/spec/components/assigneeSelector.spec.jsx b/tests/js/spec/components/assigneeSelector.spec.jsx
index 5a684f72b5..a753cf2e24 100644
--- a/tests/js/spec/components/assigneeSelector.spec.jsx
+++ b/tests/js/spec/components/assigneeSelector.spec.jsx
@@ -266,6 +266,30 @@ describe('AssigneeSelector', function() {
         })[1].mock.calls[1][1].data.assignedTo
       ).toBe('');
     });
+
+    it('shows invite member button', function() {
+      openMenu();
+      assigneeSelector.update();
+      expect(assigneeSelector.find('MenuItem.invite-member').exists()).toBe(false);
+
+      sandbox
+        .stub(ConfigStore, 'get')
+        .withArgs('invitesEnabled')
+        .returns(true);
+      // Create a new selector because assigneeSelector.update() won't re-render
+      // if the state doesn't change.
+      let sel = mount(<AssigneeSelector id="1337" />, TestStubs.routerContext());
+      sel.find('a').simulate('click');
+      expect(sel.find('MenuItem.invite-member').length).toBe(1);
+
+      // Remove org:write access permission and make sure invite member button is not shown.
+      sel = mount(<AssigneeSelector id="1337" />, TestStubs.routerContext());
+      sel.setContext({
+        organization: {id: '1', features: new Set(['internal-catchall'])},
+      });
+      sel.find('a').simulate('click');
+      expect(sel.find('MenuItem.invite-member').exists()).toBe(false);
+    });
   });
 
   describe('onFilterKeyDown()', function() {
