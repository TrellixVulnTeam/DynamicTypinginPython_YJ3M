commit e9657ca463d2264e83ff02b8106acbe9f0453c4d
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Mon Mar 5 20:58:54 2018 -0800

    feat(ui): Add searchable dropdown to project teams page

diff --git a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
index 1a2b047f5f..a8fad778da 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
@@ -8,11 +8,11 @@ import ApiMixin from '../../../mixins/apiMixin';
 import AsyncView from '../../asyncView';
 import Button from '../../../components/buttons/button';
 import Confirm from '../../../components/confirm';
-import DropdownLink from '../../../components/dropdownLink';
+import DropdownAutoComplete from '../../../components/dropdownAutoComplete';
+import DropdownButton from '../../../components/dropdownButton';
 import EmptyMessage from '../components/emptyMessage';
 import IndicatorStore from '../../../stores/indicatorStore';
 import Link from '../../../components/link';
-import MenuItem from '../../../components/menuItem';
 import Panel from '../components/panel';
 import PanelBody from '../components/panelBody';
 import PanelHeader from '../components/panelHeader';
@@ -121,9 +121,11 @@ class ProjectTeams extends AsyncView {
     });
   }
 
-  handleAdd(team) {
+  handleAdd = selection => {
     if (this.state.loading) return;
 
+    let team = this.state.allTeams.find(tm => tm.id === selection.value);
+
     let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
     let {orgId, projectId} = this.props.params;
     this.api.request(`/projects/${orgId}/${projectId}/teams/${team.slug}/`, {
@@ -140,7 +142,7 @@ class ProjectTeams extends AsyncView {
         IndicatorStore.remove(loadingIndicator);
       },
     });
-  }
+  };
 
   renderEmpty() {
     return (
@@ -179,35 +181,21 @@ class ProjectTeams extends AsyncView {
     else body = this.renderEmpty();
 
     let projectTeams = new Set(this.state.projectTeams.map(team => team.slug));
-    let teamsToAdd = this.state.allTeams.filter(team => {
-      return team.hasAccess && !projectTeams.has(team.slug);
-    });
+    let teamsToAdd = this.state.allTeams
+      .filter(team => {
+        return team.hasAccess && !projectTeams.has(team.slug);
+      })
+      .map(team => ({value: team.id, label: team.slug}));
 
     return (
       <div>
         <SettingsPageHeader
           title={t('Teams')}
           action={
-            <DropdownLink
-              anchorRight
-              className="btn btn-primary btn-sm"
-              title={t('Add Team')}
-            >
-              {teamsToAdd.length ? (
-                teamsToAdd.map(team => {
-                  return (
-                    <MenuItem noAnchor={true} key={team.slug}>
-                      <a onClick={this.handleAdd.bind(this, team)}>{team.name}</a>
-                    </MenuItem>
-                  );
-                })
-              ) : (
-                <MenuItem noAnchor={true} key={'empty'}>
-                  <a>{t('No available teams')}</a>
-                </MenuItem>
-              )}
-              <MenuItem divider={true} />
-              <div style={{textAlign: 'center', padding: '5px 0px'}}>
+            <DropdownAutoComplete
+              items={teamsToAdd}
+              onSelect={this.handleAdd}
+              action={
                 <Button
                   to={`/organizations/${orgId}/teams/new/`}
                   priority="primary"
@@ -215,8 +203,14 @@ class ProjectTeams extends AsyncView {
                 >
                   {t('Create a new team')}
                 </Button>
-              </div>
-            </DropdownLink>
+              }
+            >
+              {({isOpen, selectedItem}) => (
+                <DropdownButton isOpen={isOpen}>
+                  <span className="icon-plus" /> {t('Add Team')}
+                </DropdownButton>
+              )}
+            </DropdownAutoComplete>
           }
         />
         <Panel>{body}</Panel>
diff --git a/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
index fb0f2b2a2a..4135c73263 100644
--- a/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
@@ -7,34 +7,8 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
   <div>
     <SettingsPageHeading
       action={
-        <DropdownLink
-          alwaysRenderMenu={true}
-          anchorRight={true}
-          caret={true}
-          className="btn btn-primary btn-sm"
-          disabled={false}
-          title="Add Team"
-        >
-          <MenuItem
-            noAnchor={true}
-          >
-            <a
-              onClick={[Function]}
-            >
-              Team Name 2
-            </a>
-          </MenuItem>
-          <MenuItem
-            divider={true}
-          />
-          <div
-            style={
-              Object {
-                "padding": "5px 0px",
-                "textAlign": "center",
-              }
-            }
-          >
+        <DropdownAutoComplete
+          action={
             <Button
               disabled={false}
               priority="primary"
@@ -43,8 +17,20 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
             >
               Create a new team
             </Button>
-          </div>
-        </DropdownLink>
+          }
+          isOpen={false}
+          items={
+            Array [
+              Object {
+                "label": "team-slug-2",
+                "value": "2",
+              },
+            ]
+          }
+          onSelect={[Function]}
+        >
+          [Function]
+        </DropdownAutoComplete>
       }
       title="Teams"
     />
diff --git a/tests/js/spec/views/projectTeamSettings.spec.jsx b/tests/js/spec/views/projectTeamSettings.spec.jsx
index 3a23b3421f..54e7955393 100644
--- a/tests/js/spec/views/projectTeamSettings.spec.jsx
+++ b/tests/js/spec/views/projectTeamSettings.spec.jsx
@@ -78,7 +78,10 @@ describe('ProjectTeamsSettings', function() {
       expect(mock).not.toHaveBeenCalled();
 
       // open modal
-      wrapper.find('.button-default').simulate('click');
+      wrapper
+        .find('Button')
+        .at(1)
+        .simulate('click');
 
       // click confirm
       wrapper
@@ -119,13 +122,14 @@ describe('ProjectTeamsSettings', function() {
       expect(mock).not.toHaveBeenCalled();
 
       // open dropdown
-      wrapper.find('DropdownLink').simulate('click');
+      wrapper.find('DropdownButton').simulate('click');
 
       // click a team
-      wrapper
-        .find('MenuItem')
-        .find('a')
-        .simulate('click');
+      let el = wrapper
+        .find('.ref-autocomplete-items')
+        .childAt(0)
+        .childAt(0);
+      el.simulate('click');
 
       expect(mock).toHaveBeenCalledWith(
         endpoint,
