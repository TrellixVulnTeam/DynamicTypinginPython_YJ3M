commit d9a16c8092c276c01d6184a4c2d42be6dfd53c2b
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Sep 1 20:51:16 2015 +0200

    Removed the API views

diff --git a/src/sentry/api/help_urls.py b/src/sentry/api/help_urls.py
deleted file mode 100644
index 78652227c0..0000000000
--- a/src/sentry/api/help_urls.py
+++ /dev/null
@@ -1,16 +0,0 @@
-from __future__ import absolute_import
-
-from django.conf.urls import patterns, url
-
-from .views.help_index import ApiHelpIndexView
-from .views.help_section import ApiHelpSectionView
-
-
-urlpatterns = patterns(
-    '',
-
-    url(r'^$', ApiHelpIndexView.as_view(),
-        name='sentry-api-0-help'),
-    url(r'^(?P<section_id>[^/]+)/$', ApiHelpSectionView.as_view(),
-        name='sentry-api-0-help-section'),
-)
diff --git a/src/sentry/api/views/help_base.py b/src/sentry/api/views/help_base.py
deleted file mode 100644
index 3c90a31e3b..0000000000
--- a/src/sentry/api/views/help_base.py
+++ /dev/null
@@ -1,145 +0,0 @@
-from __future__ import absolute_import
-
-import re
-import textwrap
-
-from django.utils.importlib import import_module
-from django.utils.text import slugify
-
-from sentry.api.base import Endpoint
-from sentry.constants import HTTP_METHODS
-from sentry.web.frontend.base import BaseView
-
-optional_group_matcher = re.compile(r'\(\?\:(.+)\)')
-named_group_matcher = re.compile(r'\(\?P<(\w+)>[^\)]+\)')
-non_named_group_matcher = re.compile(r'\(.*?\)')
-
-
-def simplify_regex(pattern):
-    """
-    Clean up urlpattern regexes into something somewhat readable by Mere Humans:
-    turns something like "^(?P<sport_slug>\w+)/athletes/(?P<athlete_slug>\w+)/$"
-    into "{sport_slug}/athletes/{athlete_slug}/"
-    """
-    pattern = optional_group_matcher.sub(lambda m: '[%s]' % m.group(1), pattern)
-
-    # handle named groups first
-    pattern = named_group_matcher.sub(lambda m: '{%s}' % m.group(1), pattern)
-
-    # handle non-named groups
-    pattern = non_named_group_matcher.sub("{var}", pattern)
-
-    # clean up any outstanding regex-y characters.
-    pattern = pattern.replace('^', '').replace('$', '').replace('?', '').replace('//', '/').replace('\\', '')
-    if not pattern.startswith('/'):
-        pattern = '/' + pattern
-    return pattern
-
-
-class ApiHelpBase(BaseView):
-    auth_required = False
-
-    def get_resources(self, section, prefix='/api/0/'):
-        urls = import_module('sentry.api.urls')
-
-        resources = []
-        for pattern in urls.urlpatterns:
-            callback = self.__get_resource_callback(pattern, prefix)
-            if callback is None:
-                continue
-            if getattr(callback, 'doc_section', None) != section:
-                continue
-            data = self.__get_resource_data(pattern, prefix, callback)
-            resources.append(data)
-        return sorted(resources, key=lambda x: x['path'])
-
-    def get_sections(self, prefix=''):
-        resource_list = sorted(
-            (r for r in self.get_resources(prefix) if r['section']),
-            key=lambda x: x['section'].value,
-        )
-
-        section_list = []
-        last_section = None
-        for resource in resource_list:
-            if resource['section'] != last_section:
-                section_list.append({
-                    'id': resource['section'].name,
-                    'name': resource['section'].value,
-                    'resources': [],
-                })
-            section_list[-1]['resources'].append(resource)
-            last_section = resource['section']
-
-        return section_list
-
-    def __split_doc(self, doc, path):
-        if doc:
-            try:
-                title, doc = textwrap.dedent(doc).strip().split('\n', 1)
-            except ValueError:
-                title, doc = doc, ''
-        else:
-            title = ''
-
-        return title.strip(), doc.strip()
-
-    def __format_doc(self, doc, params):
-        return doc.format(**params)
-
-    def __title_to_anchor(self, title):
-        return slugify(title.decode('utf-8'))
-
-    def __get_resource_callback(self, pattern, prefix):
-        if not hasattr(pattern, 'callback'):
-            return
-
-        if hasattr(pattern.callback, 'cls'):
-            callback = pattern.callback.cls
-
-            if not issubclass(callback, Endpoint):
-                return
-        elif hasattr(pattern.callback, 'cls_instance'):
-            callback = pattern.callback.cls_instance
-
-            if not isinstance(callback, Endpoint):
-                return
-        else:
-            return
-
-        return callback
-
-    def __get_resource_data(self, pattern, prefix, callback):
-        path = simplify_regex(pattern.regex.pattern)
-
-        full_path = prefix.rstrip('/') + path
-
-        methods = []
-        for method_name in HTTP_METHODS:
-            if method_name == 'OPTIONS':
-                continue
-            method = getattr(callback, method_name.lower(), None)
-            if method is None:
-                continue
-
-            title, docstring = self.__split_doc(method.__doc__ or '', path=path)
-
-            if not title:
-                title = '{} {}'.format(method_name, path)
-
-            methods.append({
-                'verb': method_name,
-                'path': full_path,
-                'title': title,
-                'anchor': self.__title_to_anchor(title),
-                'doc': self.__format_doc(docstring, {
-                    'path': full_path,
-                    'method': method_name,
-                }),
-            })
-
-        return {
-            'path': full_path,
-            'methods': methods,
-            'section': getattr(callback, 'doc_section', None),
-        }
diff --git a/src/sentry/api/views/help_index.py b/src/sentry/api/views/help_index.py
deleted file mode 100644
index ac9550eecd..0000000000
--- a/src/sentry/api/views/help_index.py
+++ /dev/null
@@ -1,20 +0,0 @@
-from __future__ import absolute_import
-
-from django.conf import settings
-
-from sentry.api.views.help_base import ApiHelpBase
-from sentry.web.helpers import render_to_response
-
-
-class ApiHelpIndexView(ApiHelpBase):
-    auth_required = False
-
-    def get(self, request):
-        prefix = '/api/0/'
-
-        context = {
-            'section_list': self.get_sections(prefix),
-            'SENTRY_URL_PREFIX': settings.SENTRY_URL_PREFIX,
-        }
-
-        return render_to_response('sentry/help/api_index.html', context, request)
diff --git a/src/sentry/api/views/help_section.py b/src/sentry/api/views/help_section.py
deleted file mode 100644
index 17066fe463..0000000000
--- a/src/sentry/api/views/help_section.py
+++ /dev/null
@@ -1,27 +0,0 @@
-from __future__ import absolute_import
-
-from django.http import Http404
-
-from sentry.api.base import DocSection
-from sentry.api.views.help_base import ApiHelpBase
-from sentry.web.helpers import render_to_response
-
-
-class ApiHelpSectionView(ApiHelpBase):
-    auth_required = False
-
-    def get(self, request, section_id):
-        try:
-            section = DocSection[section_id.upper()]
-        except KeyError:
-            raise Http404
-
-        context = {
-            'section': {
-                'id': section.name.lower(),
-                'name': section.value,
-            },
-            'resource_list': self.get_resources(section)
-        }
-
-        return render_to_response('sentry/help/api_section.html', context, request)
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index c2fa9a4322..f2a04525ff 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -171,7 +171,7 @@
           <a href="{% url 'sentry-admin-status' %}">{% trans "Admin" %}</a>
           {% endif %}
           {% block support_link %}{% endblock %}
-          <a href="{% url 'sentry-api-0-help' %}">{% trans "API" %}</a>
+          <a href="https://docs.getsentry.com/hosted/api/">{% trans "API" %}</a>
           <a href="https://docs.getsentry.com">{% trans "Docs" %}</a>
           <a href="https://github.com/getsentry/sentry">{% trans "Contribute" %}</a>
         </div>
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 791a6b2879..a0df076b75 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -117,7 +117,6 @@ urlpatterns += patterns(
         name='sentry-release-hook'),
     url(r'^api/embed/error-page/$', ErrorPageEmbedView.as_view(),
         name='sentry-error-page-embed'),
-    url(r'^api/', include('sentry.api.help_urls')),
 
     # Auth
     url(r'^auth/link/(?P<organization_slug>[^/]+)/$', AuthLinkIdentityView.as_view(),
diff --git a/tests/sentry/api/views/test_help_index.py b/tests/sentry/api/views/test_help_index.py
deleted file mode 100644
index 53a5859254..0000000000
--- a/tests/sentry/api/views/test_help_index.py
+++ /dev/null
@@ -1,14 +0,0 @@
-from __future__ import absolute_import
-
-from django.core.urlresolvers import reverse
-
-from sentry.testutils import TestCase
-
-
-class ApiHelpIndexTest(TestCase):
-    def test_simple(self):
-        path = reverse('sentry-api-0-help')
-
-        resp = self.client.get(path)
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/help/api_index.html')
diff --git a/tests/sentry/api/views/test_help_section.py b/tests/sentry/api/views/test_help_section.py
deleted file mode 100644
index bad08109fd..0000000000
--- a/tests/sentry/api/views/test_help_section.py
+++ /dev/null
@@ -1,14 +0,0 @@
-from __future__ import absolute_import
-
-from django.core.urlresolvers import reverse
-
-from sentry.testutils import TestCase
-
-
-class ApiHelpIndexTest(TestCase):
-    def test_simple(self):
-        path = reverse('sentry-api-0-help-section', args=['events'])
-
-        resp = self.client.get(path)
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/help/api_section.html')
