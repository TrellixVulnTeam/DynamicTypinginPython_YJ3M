commit 2a558a4c555afc6f23e10fd57aef6cab09f45869
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Mar 29 14:28:00 2015 -0700

    Ensure system frames correctly represents ints everywhere

diff --git a/src/sentry/interfaces/exception.py b/src/sentry/interfaces/exception.py
index f0f3ee2a25..64a3a77caa 100644
--- a/src/sentry/interfaces/exception.py
+++ b/src/sentry/interfaces/exception.py
@@ -276,7 +276,7 @@ class Exception(Interface):
 
         return {
             'newest_first': newest_first,
-            'system_frames': system_frames,
+            'system_frames': system_frames if has_system_frames else 0,
             'exceptions': exceptions,
             'stacktrace': self.get_stacktrace(event, newest_first=newest_first),
             'first_exc_omitted': first_exc_omitted,
diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index b2f9973efb..6c77299c03 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -506,14 +506,15 @@ class Stacktrace(Interface):
             if not frame.in_app:
                 system_frames += 1
 
-        if len(frames) == system_frames:
-            system_frames = 0
-
         if has_system_frames is None:
+            if len(frames) == system_frames:
+                system_frames = 0
             has_system_frames = bool(system_frames)
+        elif not has_system_frames:
+            system_frames = 0
 
         # if there are no system frames, pretend they're all part of the app
-        if has_system_frames:
+        if not has_system_frames:
             for frame in frames:
                 frame['in_app'] = True
 
@@ -530,7 +531,7 @@ class Stacktrace(Interface):
         context = {
             'is_public': is_public,
             'newest_first': newest_first,
-            'system_frames': has_system_frames,
+            'system_frames': system_frames,
             'event': event,
             'frames': frames,
             'stack_id': 'stacktrace_1',
diff --git a/tests/sentry/interfaces/test_exception.py b/tests/sentry/interfaces/test_exception.py
index 247a370add..aa2178b4f0 100644
--- a/tests/sentry/interfaces/test_exception.py
+++ b/tests/sentry/interfaces/test_exception.py
@@ -107,9 +107,9 @@ ValueError: hello world
             'sentry.interfaces.Exception': inst.to_json(),
         })
         context = inst.get_context(event)
-        assert context['system_frames']
-        assert context['exceptions'][0]['stacktrace']['system_frames']
-        assert context['exceptions'][1]['stacktrace']['system_frames']
+        assert context['system_frames'] == 1
+        assert context['exceptions'][0]['stacktrace']['system_frames'] == 0
+        assert context['exceptions'][1]['stacktrace']['system_frames'] == 1
 
     def test_context_with_only_system_frames(self):
         inst = Exception.to_python(dict(values=[{
@@ -136,9 +136,9 @@ ValueError: hello world
             'sentry.interfaces.Exception': inst.to_json(),
         })
         context = inst.get_context(event)
-        assert not context['system_frames']
-        assert not context['exceptions'][0]['stacktrace']['system_frames']
-        assert not context['exceptions'][1]['stacktrace']['system_frames']
+        assert context['system_frames'] == 0
+        assert context['exceptions'][0]['stacktrace']['system_frames'] == 0
+        assert context['exceptions'][1]['stacktrace']['system_frames'] == 0
 
     def test_context_with_only_app_frames(self):
         inst = Exception.to_python(dict(values=[{
@@ -165,9 +165,9 @@ ValueError: hello world
             'sentry.interfaces.Exception': inst.to_json(),
         })
         context = inst.get_context(event)
-        assert not context['system_frames']
-        assert not context['exceptions'][0]['stacktrace']['system_frames']
-        assert not context['exceptions'][1]['stacktrace']['system_frames']
+        assert context['system_frames'] == 0
+        assert context['exceptions'][0]['stacktrace']['system_frames'] == 0
+        assert context['exceptions'][1]['stacktrace']['system_frames'] == 0
 
 
 class SingleExceptionTest(TestCase):
