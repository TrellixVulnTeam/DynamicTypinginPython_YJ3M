commit 051dec2eced06ac97b9d157238454d1c1d263db6
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Sat May 17 13:00:57 2014 -0700

    Improve testing around django-sudo to avoid dealing with cookies

diff --git a/conftest.py b/conftest.py
index 38f9336605..a524102bda 100644
--- a/conftest.py
+++ b/conftest.py
@@ -68,6 +68,13 @@ def pytest_configure(config):
         'django.contrib.auth.hashers.MD5PasswordHasher',
     ]
 
+    # Replace real sudo middleware with our mock sudo middleware
+    # to assert that the user is always in sudo mode
+    middleware = list(settings.MIDDLEWARE_CLASSES)
+    sudo = middleware.index('sentry.middleware.sudo.SudoMiddleware')
+    middleware[sudo] = 'tests.middleware.SudoMiddleware'
+    settings.MIDDLEWARE_CLASSES = tuple(middleware)
+
     # enable draft features
     settings.SENTRY_ENABLE_EXPLORE_CODE = True
     settings.SENTRY_ENABLE_EXPLORE_USERS = True
diff --git a/src/sentry/api/decorators.py b/src/sentry/api/decorators.py
index c1b09a33f6..a8384169e4 100644
--- a/src/sentry/api/decorators.py
+++ b/src/sentry/api/decorators.py
@@ -1,14 +1,13 @@
 import json
 
 from django.http import HttpResponse
-from sudo.utils import has_sudo_privileges
 from functools import wraps
 
 
 def sudo_required(func):
     @wraps(func)
     def wrapped(self, request, *args, **kwargs):
-        if not has_sudo_privileges(request):
+        if not request.is_sudo():
             # TODO(dcramer): support some kind of auth flow to allow this
             # externally
             data = {
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 437f3c99d8..6ef82c196a 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -27,8 +27,6 @@ from django.utils.importlib import import_module
 from exam import Exam
 from nydus.db import create_cluster
 from rest_framework.test import APITestCase as BaseAPITestCase
-from sudo.settings import COOKIE_NAME as SUDO_COOKIE_NAME
-from sudo.utils import grant_sudo_privileges
 
 from sentry.constants import MODULE_ROOT
 from sentry.models import ProjectOption
@@ -74,7 +72,6 @@ class BaseTestCase(Fixtures, Exam):
 
         login(request, user)
         request.user = user
-        sudo_token = grant_sudo_privileges(request)
 
         # Save the session values.
         request.session.save()
@@ -90,7 +87,6 @@ class BaseTestCase(Fixtures, Exam):
             'expires': None,
         }
         self.client.cookies[session_cookie].update(cookie_data)
-        self.client.cookies[SUDO_COOKIE_NAME] = sudo_token
 
     def login(self):
         self.login_as(self.user)
diff --git a/tests/middleware.py b/tests/middleware.py
index 629a837f99..91c2678f5c 100644
--- a/tests/middleware.py
+++ b/tests/middleware.py
@@ -1,3 +1,8 @@
+from __future__ import absolute_import
+
+from sentry.middleware.sudo import SudoMiddleware as BaseSudoMiddleware
+
+
 class BrokenRequestMiddleware(object):
     def process_request(self, request):
         raise ImportError('request')
@@ -11,3 +16,8 @@ class BrokenResponseMiddleware(object):
 class BrokenViewMiddleware(object):
     def process_view(self, request, func, args, kwargs):
         raise ImportError('view')
+
+
+class SudoMiddleware(BaseSudoMiddleware):
+    def has_sudo_privileges(self, request):
+        return True
