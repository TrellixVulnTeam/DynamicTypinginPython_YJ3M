commit 697e71222e1ac31081867ebeec7cd24677677d02
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 20 18:36:18 2015 -0700

    Add audit log + remove to api keys

diff --git a/src/sentry/models/apikey.py b/src/sentry/models/apikey.py
index 10b552c04d..aa3accd747 100644
--- a/src/sentry/models/apikey.py
+++ b/src/sentry/models/apikey.py
@@ -85,6 +85,6 @@ class ApiKey(Model):
         return {
             'label': self.label,
             'key': self.key,
-            'roles': int(self.roles),
+            'scopes': int(self.scopes),
             'status': self.status,
         }
diff --git a/src/sentry/models/auditlogentry.py b/src/sentry/models/auditlogentry.py
index a35546772f..7a87aa556b 100644
--- a/src/sentry/models/auditlogentry.py
+++ b/src/sentry/models/auditlogentry.py
@@ -47,9 +47,12 @@ class AuditLogEntryEvent(object):
     SSO_ENABLE = 60
     SSO_DISABLE = 61
     SSO_EDIT = 62
-
     SSO_IDENTITY_LINK = 63
 
+    APIKEY_ADD = 70
+    APIKEY_EDIT = 71
+    APIKEY_REMOVE = 72
+
 
 class AuditLogEntry(Model):
     organization = FlexibleForeignKey('sentry.Organization')
@@ -89,8 +92,11 @@ class AuditLogEntry(Model):
         (AuditLogEntryEvent.SSO_ENABLE, 'sso.enable'),
         (AuditLogEntryEvent.SSO_DISABLE, 'sso.disable'),
         (AuditLogEntryEvent.SSO_EDIT, 'sso.edit'),
-
         (AuditLogEntryEvent.SSO_IDENTITY_LINK, 'sso-identity.link'),
+
+        (AuditLogEntryEvent.APIKEY_ADD, 'api-key.create'),
+        (AuditLogEntryEvent.APIKEY_EDIT, 'api-key.edit'),
+        (AuditLogEntryEvent.APIKEY_REMOVE, 'api-key.remove'),
     ))
     ip_address = models.GenericIPAddressField(null=True, unpack_ipv4=True)
     data = GzippedDictField()
@@ -157,8 +163,14 @@ class AuditLogEntry(Model):
             return 'disabled sso (%s)' % (self.data['provider'],)
         elif self.event == AuditLogEntryEvent.SSO_EDIT:
             return 'edited sso settings'
-
         elif self.event == AuditLogEntryEvent.SSO_IDENTITY_LINK:
             return 'linked their account to a new identity'
 
+        elif self.event == AuditLogEntryEvent.APIKEY_ADD:
+            return 'added api key %s (%s)' % (self.data['label'], self.data['key'])
+        elif self.event == AuditLogEntryEvent.APIKEY_EDIT:
+            return 'edited api key %s (%s)' % (self.data['label'], self.data['key'])
+        elif self.event == AuditLogEntryEvent.APIKEY_REMOVE:
+            return 'removed api key %s (%s)' % (self.data['label'], self.data['key'])
+
         return ''
diff --git a/src/sentry/templates/sentry/organization-api-keys.html b/src/sentry/templates/sentry/organization-api-keys.html
index 9529b8b5dc..ec5229d29a 100644
--- a/src/sentry/templates/sentry/organization-api-keys.html
+++ b/src/sentry/templates/sentry/organization-api-keys.html
@@ -36,7 +36,14 @@
               <a href="{% url 'sentry-organization-api-key-settings' organization.slug key.id %}">{{ key.label }}</a><br />
               <code class="clippy">{{ key.key }}</code>
             </td>
-            <td></td>
+            <td>
+              <form class="pull-right" method="POST" action="." onsubmit="return confirm('Are you sure you want to remove this API key?');">
+                {% csrf_token %}
+                <input type="hidden" name="op" value="removekey" />
+                <input type="hidden" name="kid" value="{{ key.id }}" />
+                <button class="btn btn-default btn-small">Remove</button>
+              </form>
+            </td>
           </tr>
         {% endfor %}
       {% else %}
diff --git a/src/sentry/web/frontend/organization_api_key_settings.py b/src/sentry/web/frontend/organization_api_key_settings.py
index c1f3e3f3a7..585a45d25e 100644
--- a/src/sentry/web/frontend/organization_api_key_settings.py
+++ b/src/sentry/web/frontend/organization_api_key_settings.py
@@ -5,7 +5,9 @@ from django.contrib import messages
 from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _
 
-from sentry.models import ApiKey, OrganizationMemberType
+from sentry.models import (
+    ApiKey, AuditLogEntry, AuditLogEntryEvent, OrganizationMemberType
+)
 from sentry.web.forms.fields import OriginsField
 from sentry.web.frontend.base import OrganizationView
 
@@ -34,6 +36,16 @@ class OrganizationApiKeySettingsView(OrganizationView):
         if form.is_valid():
             key.allowed_origins = '\n'.join(form.cleaned_data['allowed_origins'])
             key.save()
+
+            AuditLogEntry.objects.create(
+                organization=organization,
+                actor=request.user,
+                ip_address=request.META['REMOTE_ADDR'],
+                target_object=key.id,
+                event=AuditLogEntryEvent.APIKEY_EDIT,
+                data=key.get_audit_log_data(),
+            )
+
             messages.add_message(
                 request, messages.SUCCESS,
                 'Your settings were saved.',
diff --git a/src/sentry/web/frontend/organization_api_keys.py b/src/sentry/web/frontend/organization_api_keys.py
index 728da30322..773b2fdd62 100644
--- a/src/sentry/web/frontend/organization_api_keys.py
+++ b/src/sentry/web/frontend/organization_api_keys.py
@@ -4,7 +4,9 @@ from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
 from operator import or_
 
-from sentry.models import ApiKey, OrganizationMemberType
+from sentry.models import (
+    ApiKey, AuditLogEntry, AuditLogEntryEvent, OrganizationMemberType
+)
 from sentry.web.frontend.base import OrganizationView
 
 DEFAULT_SCOPES = [
@@ -24,11 +26,42 @@ class OrganizationApiKeysView(OrganizationView):
                 organization=organization,
                 scopes=reduce(or_, [getattr(ApiKey.scopes, s) for s in DEFAULT_SCOPES])
             )
+
+            AuditLogEntry.objects.create(
+                organization=organization,
+                actor=request.user,
+                ip_address=request.META['REMOTE_ADDR'],
+                target_object=key.id,
+                event=AuditLogEntryEvent.APIKEY_ADD,
+                data=key.get_audit_log_data(),
+            )
+
             redirect_uri = reverse('sentry-organization-api-key-settings', args=[
                 organization.slug, key.id,
             ])
             return HttpResponseRedirect(redirect_uri)
 
+        elif request.POST.get('op') == 'removekey':
+            key = ApiKey.objects.get(
+                id=request.POST.get('kid'),
+                organization=organization,
+            )
+
+            audit_data = key.get_audit_log_data()
+
+            key.delete()
+
+            AuditLogEntry.objects.create(
+                organization=organization,
+                actor=request.user,
+                ip_address=request.META['REMOTE_ADDR'],
+                target_object=key.id,
+                event=AuditLogEntryEvent.APIKEY_REMOVE,
+                data=audit_data,
+            )
+
+            return HttpResponseRedirect(request.path)
+
         key_list = sorted(ApiKey.objects.filter(
             organization=organization,
         ), key=lambda x: x.label)
