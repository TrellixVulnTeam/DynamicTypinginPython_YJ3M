commit bdf8a72da7fe3a113b6b4bdd0c8ece6b11610430
Author: ckj <chriskjennings@gmail.com>
Date:   Mon Nov 9 12:18:54 2015 -0800

    definitionList -> keyValueList

diff --git a/src/sentry/static/sentry/app/components/events/extraData.jsx b/src/sentry/static/sentry/app/components/events/extraData.jsx
index 226a3ebbb9..5daf67c0f4 100644
--- a/src/sentry/static/sentry/app/components/events/extraData.jsx
+++ b/src/sentry/static/sentry/app/components/events/extraData.jsx
@@ -3,7 +3,7 @@ import React from 'react';
 import PropTypes from '../../proptypes';
 import {objectToArray} from '../../utils';
 import EventDataSection from './eventDataSection';
-import DefinitionList from './interfaces/definitionList';
+import KeyValueList from './interfaces/keyValueList';
 
 const EventExtraData = React.createClass({
   propTypes: {
@@ -24,7 +24,7 @@ const EventExtraData = React.createClass({
           event={this.props.event}
           type="extra"
           title="Additional Data">
-          <DefinitionList
+          <KeyValueList
               data={extraDataArray}
               isContextData={true}/>
       </EventDataSection>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx
index 129d566f54..6a3f935abd 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {objectToArray} from '../../../utils';
-import DefinitionList from './definitionList';
+import KeyValueList from './keyValueList';
 
 const CSPContent = React.createClass({
   propTypes: {
@@ -15,7 +15,7 @@ const CSPContent = React.createClass({
         <h4>
           <span>{data.effective_directive}</span>
         </h4>
-        <DefinitionList data={objectToArray(data)} isContextData={true}/>
+        <KeyValueList data={objectToArray(data)} isContextData={true}/>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/definitionList.jsx b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
similarity index 92%
rename from src/sentry/static/sentry/app/components/events/interfaces/definitionList.jsx
rename to src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
index c6921058a3..8c36f76632 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/definitionList.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
@@ -3,7 +3,7 @@ import _ from 'underscore';
 
 import ContextData from '../../contextData';
 
-const DefinitionList = React.createClass({
+const KeyValueList = React.createClass({
   propTypes: {
     data: React.PropTypes.array.isRequired,
     isContextData: React.PropTypes.bool
@@ -41,4 +41,4 @@ const DefinitionList = React.createClass({
   }
 });
 
-export default DefinitionList;
+export default KeyValueList;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
index c00152eba2..b849393412 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import ClippedBox from '../../clippedBox';
-import DefinitionList from './definitionList';
+import KeyValueList from './keyValueList';
 import ContextData from '../../contextData';
 
 import {objectIsEmpty} from '../../../utils';
@@ -54,7 +54,7 @@ const RichHttpContent = React.createClass({
     try {
       // Sentry API abbreviates long query string values, sometimes resulting in
       // an un-parsable querystring ... stay safe kids
-      return <DefinitionList data={this.objectToSortedTupleArray(queryString.parse(data))}/>;
+      return <keyValueList data={this.objectToSortedTupleArray(queryString.parse(data))}/>;
     } catch (e) {
       return <pre>{data}</pre>;
     }
@@ -83,17 +83,17 @@ const RichHttpContent = React.createClass({
 
         {data.cookies && !objectIsEmpty(data.cookies) &&
           <ClippedBox title="Cookies" defaultCollapsed>
-            <DefinitionList data={data.cookies} />
+            <KeyValueList data={data.cookies} />
           </ClippedBox>
         }
         {!objectIsEmpty(data.headers) &&
           <ClippedBox title="Headers">
-            <DefinitionList data={data.headers} />
+            <KeyValueList data={data.headers} />
           </ClippedBox>
         }
         {!objectIsEmpty(data.env) &&
           <ClippedBox title="Environment" defaultCollapsed>
-            <DefinitionList data={this.objectToSortedTupleArray(data.env)}/>
+            <KeyValueList data={this.objectToSortedTupleArray(data.env)}/>
           </ClippedBox>
         }
       </div>
diff --git a/src/sentry/static/sentry/app/components/events/user.jsx b/src/sentry/static/sentry/app/components/events/user.jsx
index c2b5b8bcc9..7bf98eddc0 100644
--- a/src/sentry/static/sentry/app/components/events/user.jsx
+++ b/src/sentry/static/sentry/app/components/events/user.jsx
@@ -1,7 +1,7 @@
 import _ from 'underscore';
 import React from 'react';
 import Gravatar from '../../components/gravatar';
-import DefinitionList from './interfaces/definitionList';
+import KeyValueList from './interfaces/keyValueList';
 import EventDataSection from './eventDataSection';
 
 
@@ -30,9 +30,9 @@ const EventUser = React.createClass({
           title="User">
         <div className="user-widget">
           <div className="pull-left"><Gravatar email={user.email} size={96} /></div>
-          <DefinitionList data={builtins} isContextData={false} />
+          <KeyValueList data={builtins} isContextData={false} />
           {children &&
-            <DefinitionList data={children} isContextData={true} />
+            <KeyValueList data={children} isContextData={true} />
           }
         </div>
       </EventDataSection>
diff --git a/tests/js/spec/components/events/interfaces/definitionList.spec.jsx b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
similarity index 83%
rename from tests/js/spec/components/events/interfaces/definitionList.spec.jsx
rename to tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
index 94fbd1b267..516faa935b 100644
--- a/tests/js/spec/components/events/interfaces/definitionList.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
@@ -2,15 +2,15 @@ import React from 'react';
 import ReactDOM from 'react-dom';
 import TestUtils from 'react-addons-test-utils';
 
-import DefinitionList from 'app/components/events/interfaces/definitionList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList';
 
-describe('DefinitionList', function () {
+describe('KeyValueList', function () {
   describe('render', function () {
     it('should render a definition list of key/value pairs', function () {
       let data = [
         ['a', 'x'], ['b', 'y']
       ];
-      let elem = TestUtils.renderIntoDocument(<DefinitionList data={data} />);
+      let elem = TestUtils.renderIntoDocument(<KeyValueList data={data} />);
 
       let dts = TestUtils.scryRenderedDOMComponentsWithTag(elem, 'dt');
       expect(ReactDOM.findDOMNode(dts[0]).textContent).to.eql('a');
@@ -25,7 +25,7 @@ describe('DefinitionList', function () {
       let data = [
         ['b', 'y'], ['a', 'x']
       ];
-      let elem = TestUtils.renderIntoDocument(<DefinitionList data={data} />);
+      let elem = TestUtils.renderIntoDocument(<KeyValueList data={data} />);
 
       let dts = TestUtils.scryRenderedDOMComponentsWithTag(elem, 'dt');
       expect(ReactDOM.findDOMNode(dts[0]).textContent).to.eql('a');
@@ -40,7 +40,7 @@ describe('DefinitionList', function () {
       let data = [
         ['b', 'y'], ['a', ''] // empty string
       ];
-      let elem = TestUtils.renderIntoDocument(<DefinitionList data={data} />);
+      let elem = TestUtils.renderIntoDocument(<KeyValueList data={data} />);
 
       let dts = TestUtils.scryRenderedDOMComponentsWithTag(elem, 'dt');
       expect(ReactDOM.findDOMNode(dts[0]).textContent).to.eql('a');
@@ -55,7 +55,7 @@ describe('DefinitionList', function () {
       let data = [
         ['a', false]
       ];
-      let elem = TestUtils.renderIntoDocument(<DefinitionList data={data} />);
+      let elem = TestUtils.renderIntoDocument(<KeyValueList data={data} />);
 
       let dts = TestUtils.scryRenderedDOMComponentsWithTag(elem, 'dt');
       expect(ReactDOM.findDOMNode(dts[0]).textContent).to.eql('a');
@@ -68,7 +68,7 @@ describe('DefinitionList', function () {
       let data = [
         ['a', null]
       ];
-      let elem = TestUtils.renderIntoDocument(<DefinitionList data={data} />);
+      let elem = TestUtils.renderIntoDocument(<KeyValueList data={data} />);
 
       let dts = TestUtils.scryRenderedDOMComponentsWithTag(elem, 'dt');
       expect(ReactDOM.findDOMNode(dts[0]).textContent).to.eql('a');
@@ -78,4 +78,3 @@ describe('DefinitionList', function () {
     });
   });
 });
-
diff --git a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
index 2a8900f7bf..506dadf74d 100644
--- a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
@@ -3,7 +3,7 @@ import TestUtils from 'react-addons-test-utils';
 import stubReactComponents from '../../../../helpers/stubReactComponent';
 
 import RichHttpContent from 'app/components/events/interfaces/richHttpContent';
-import DefinitionList from 'app/components/events/interfaces/definitionList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList';
 import ClippedBox from 'app/components/clippedBox';
 import ContextData from 'app/components/contextData';
 
@@ -18,7 +18,7 @@ describe('RichHttpContent', function () {
     };
     this.elem = TestUtils.renderIntoDocument(<RichHttpContent data={this.data} />);
     this.sandbox = sinon.sandbox.create();
-    stubReactComponents(this.sandbox, [ClippedBox, DefinitionList, ContextData]);
+    stubReactComponents(this.sandbox, [ClippedBox, KeyValueList, ContextData]);
   });
 
   afterEach(function () {
@@ -63,7 +63,7 @@ describe('RichHttpContent', function () {
       expect(out.type).to.eql('pre');
     });
 
-    it('should return a DefinitionList element when Content-Type is x-www-form-urlencoded', function () {
+    it('should return a KeyValueList element when Content-Type is x-www-form-urlencoded', function () {
       let out = this.elem.getBodySection({
         headers: [
           ['lol' , 'no'],
@@ -73,7 +73,7 @@ describe('RichHttpContent', function () {
       });
 
       // NOTE: ContextData is stubbed in tests; instead returns <div className="ContextData"/>
-      expect(out.props.className).to.eql('DefinitionList');
+      expect(out.props.className).to.eql('KeyValueList');
       expect(out.props.data).to.eql([
         ['bar', 'baz'],
         ['foo', 'bar']
@@ -148,4 +148,3 @@ describe('RichHttpContent', function () {
     });
   });
 });
-
