commit 90ef9d9a8c5b02d32868da1236ea063f6abd7cd0
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Nov 15 12:37:13 2017 -0800

    feat(api): Expand AuditLogEntry serializer to return back all of the data
    
    Fixes GH-6521

diff --git a/src/sentry/api/serializers/models/auditlogentry.py b/src/sentry/api/serializers/models/auditlogentry.py
index 9e61325a1c..c5993f704a 100644
--- a/src/sentry/api/serializers/models/auditlogentry.py
+++ b/src/sentry/api/serializers/models/auditlogentry.py
@@ -6,19 +6,41 @@ from sentry.api.serializers import Serializer, register, serialize
 from sentry.models import AuditLogEntry
 
 
+def fix(data):
+    # There was a point in time where full Team objects
+    # got serialized into our AuditLogEntry.data, so these
+    # values need to be stripped and reduced down to integers
+    if 'teams' not in data:
+        return data
+
+    if not data['teams']:
+        return data
+
+    if not hasattr(data['teams'][0], 'id'):
+        return data
+
+    data['teams'] = [t.id for t in data['teams']]
+    return data
+
+
 @register(AuditLogEntry)
 class AuditLogEntrySerializer(Serializer):
     def get_attrs(self, item_list, user):
         # TODO(dcramer); assert on relations
-        actors = {
-            d['id']: d for d in serialize(set(i.actor for i in item_list if i.actor_id), user)
+        users = {
+            d['id']: d for d in serialize(
+                set(i.actor for i in item_list if i.actor_id) |
+                set(i.target_user for i in item_list if i.target_user_id),
+                user,
+            )
         }
 
         return {
             item: {
-                'actor': actors[six.text_type(item.actor_id)] if item.actor_id else {
+                'actor': users[six.text_type(item.actor_id)] if item.actor_id else {
                     'name': item.get_actor_name(),
                 },
+                'targetUser': users.get(six.text_type(item.target_user_id)) or item.target_user_id
             } for item in item_list
         }
 
@@ -29,5 +51,8 @@ class AuditLogEntrySerializer(Serializer):
             'event': obj.get_event_display(),
             'ipAddress': obj.ip_address,
             'note': obj.get_note(),
+            'targetObject': obj.target_object,
+            'targetUser': attrs['targetUser'],
+            'data': fix(obj.data),
             'dateCreated': obj.datetime,
         }
