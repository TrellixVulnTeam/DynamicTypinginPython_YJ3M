commit 21f07367d16f3d9aa42a269c2c74b99337da95a3
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Nov 23 14:25:17 2015 -0800

    Expand/correct behavior for unsnooze

diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 92e8131600..3349629d20 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -81,7 +81,8 @@ class GroupSerializer(Serializer):
     def serialize(self, obj, attrs, user):
         status = obj.status
         if attrs['snooze']:
-            status = GroupStatus.MUTED
+            if attrs['snooze'] < timezone.now() and status == GroupStatus.MUTED:
+                status = GroupStatus.UNRESOLVED
         elif status == GroupStatus.UNRESOLVED and obj.is_over_resolve_age():
             status = GroupStatus.RESOLVED
 
diff --git a/tests/sentry/api/serializers/test_group.py b/tests/sentry/api/serializers/test_group.py
new file mode 100644
index 0000000000..3f17eeabbd
--- /dev/null
+++ b/tests/sentry/api/serializers/test_group.py
@@ -0,0 +1,25 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from datetime import timedelta
+from django.utils import timezone
+
+from sentry.api.serializers import serialize
+from sentry.models import GroupSnooze, GroupStatus
+from sentry.testutils import TestCase
+
+
+class GroupSerializerTest(TestCase):
+    def test_is_muted_with_expired_snooze(self):
+        user = self.create_user()
+        group = self.create_group(
+            status=GroupStatus.MUTED,
+        )
+        GroupSnooze.objects.create(
+            group=group,
+            until=timezone.now() - timedelta(minutes=1),
+        )
+
+        result = serialize(group, user)
+        assert result['status'] == 'unresolved'
diff --git a/tests/sentry/models/test_group.py b/tests/sentry/models/test_group.py
index 40da9d5811..ce9afeb3c0 100644
--- a/tests/sentry/models/test_group.py
+++ b/tests/sentry/models/test_group.py
@@ -88,3 +88,13 @@ class GroupTest(TestCase):
             until=timezone.now() - timedelta(minutes=1),
         )
         assert not group.is_muted()
+
+    def test_status_with_expired_snooze(self):
+        group = self.create_group(
+            status=GroupStatus.MUTED,
+        )
+        GroupSnooze.objects.create(
+            group=group,
+            until=timezone.now() - timedelta(minutes=1),
+        )
+        assert group.get_status() is GroupStatus.UNRESOLVED
