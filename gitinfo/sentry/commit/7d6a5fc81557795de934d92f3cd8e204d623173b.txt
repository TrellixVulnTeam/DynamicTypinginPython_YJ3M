commit 7d6a5fc81557795de934d92f3cd8e204d623173b
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Apr 24 14:35:53 2018 -0700

    build(eslint): Pretty output to stdout and checkstyle to file (#8160)

diff --git a/Makefile b/Makefile
index 653c61183b..65732f9bb4 100644
--- a/Makefile
+++ b/Makefile
@@ -168,7 +168,7 @@ lint-python:
 
 lint-js:
 	@echo "--> Linting javascript"
-	bash -eo pipefail -c "bin/lint --js --parseable | tee eslint.checkstyle.xml"
+	bin/lint --js --parseable
 	@echo ""
 
 scan-python:
diff --git a/bin/eslint-travis-wrapper b/bin/eslint-travis-wrapper
new file mode 100755
index 0000000000..7d9beea3be
--- /dev/null
+++ b/bin/eslint-travis-wrapper
@@ -0,0 +1,33 @@
+#!/usr/bin/env node
+/* eslint no-console:0 import/no-nodejs-modules:0 */
+/* global process */
+const fs = require('fs');
+const CLIEngine = require('eslint').CLIEngine;
+
+const argv = process.argv.slice(2);
+
+const cli = new CLIEngine({
+  fix: false,
+  extensions: argv[1].split(','),
+  useEslintrc: true,
+});
+
+// Lint all files
+const report = cli.executeOnFiles(argv.slice(3));
+
+// get the default formatter
+const consoleFormatter = cli.getFormatter();
+
+const otherFormatterType = argv.indexOf('--format=checkstyle') > -1 ? 'checkstyle' : null;
+
+// output to console
+console.log(consoleFormatter(report.results));
+
+// Output to checkstyle format for zeus
+if (otherFormatterType) {
+  const otherFormatter = cli.getFormatter(otherFormatterType);
+
+  fs.writeFile('eslint.checkstyle.xml', otherFormatter(report.results), 'utf8', () => {
+    process.exit(0);
+  });
+}
diff --git a/src/sentry/lint/engine.py b/src/sentry/lint/engine.py
index 7c74b1785a..692f12a020 100644
--- a/src/sentry/lint/engine.py
+++ b/src/sentry/lint/engine.py
@@ -39,6 +39,10 @@ def get_project_root():
     return os.path.join(os.path.dirname(__file__), os.pardir, os.pardir, os.pardir)
 
 
+def get_sentry_bin(name):
+    return os.path.join(get_project_root(), 'bin', name)
+
+
 def get_node_modules_bin(name):
     return os.path.join(
         get_project_root(), 'node_modules', '.bin', name)
@@ -121,7 +125,9 @@ def py_lint(file_list, parseable=False):
 
 def js_lint(file_list=None, parseable=False, format=False):
 
+    # We require eslint in path but we actually call an eslint wrapper
     eslint_path = get_node_modules_bin('eslint')
+    eslint_wrapper_path = get_sentry_bin('eslint-travis-wrapper')
 
     if not os.path.exists(eslint_path):
         from click import echo
@@ -132,7 +138,11 @@ def js_lint(file_list=None, parseable=False, format=False):
 
     has_errors = False
     if js_file_list:
-        cmd = [eslint_path, '--ext', '.js,.jsx']
+        if os.environ.get('CI'):
+            cmd = [eslint_wrapper_path, '--ext', '.js,.jsx']
+        else:
+            cmd = [eslint_path, '--ext', '.js,.jsx']
+
         if format:
             cmd.append('--fix')
         if parseable:
