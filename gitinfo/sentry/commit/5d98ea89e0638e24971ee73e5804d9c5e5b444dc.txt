commit 5d98ea89e0638e24971ee73e5804d9c5e5b444dc
Author: Ben Vinegar <ben@benv.ca>
Date:   Fri Mar 4 18:14:44 2016 -0800

    Project stats loaded from both dashboard or team list

diff --git a/src/sentry/static/sentry/app/stores/organizationStore.jsx b/src/sentry/static/sentry/app/stores/organizationStore.jsx
index cff5acb6cc..7831791b3e 100644
--- a/src/sentry/static/sentry/app/stores/organizationStore.jsx
+++ b/src/sentry/static/sentry/app/stores/organizationStore.jsx
@@ -6,11 +6,7 @@ const OrganizationStore = Reflux.createStore({
   },
 
   get(slug) {
-    for (let i = 0; i < this.items.length; i++) {
-      if (this.items[i].slug === slug) {
-        return this.items[i];
-      }
-    }
+    return this.items.find(item => item.slug === slug);
   },
 
   getAll() {
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
index a82e5b5d9c..b589546fb9 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
@@ -1,12 +1,19 @@
 import React from 'react';
+import Reflux from 'reflux';
 import {Link} from 'react-router';
 import {Sparklines, SparklinesLine} from 'react-sparklines';
 
-import ActivityFeed from '../components/activity/feed';
+import ApiMixin from '../mixins/apiMixin';
+import {loadStats} from '../actionCreators/projects';
+
 import GroupStore from '../stores/groupStore';
+import TeamStore from '../stores/teamStore';
+
+import ActivityFeed from '../components/activity/feed';
 import IssueList from '../components/issueList';
 import OrganizationHomeContainer from '../components/organizations/homeContainer';
 import OrganizationState from '../mixins/organizationState';
+
 import {t} from '../locale';
 import {sortArray} from '../utils';
 
@@ -182,17 +189,46 @@ const Activity = React.createClass({
 });
 
 const OrganizationDashboard = React.createClass({
+  mixins: [
+    ApiMixin,
+    Reflux.listenTo(TeamStore, 'onTeamListChange'),
+  ],
+
   getDefaultProps() {
     return {
       statsPeriod: '24h',
-      pageSize: 5,
+      pageSize: 5
     };
   },
 
+  getInitialState() {
+    return {
+      teams: TeamStore.getAll()
+    };
+  },
+
+  componentWillMount() {
+    loadStats(this.api, {
+      orgId: this.props.params.orgId,
+      query: {
+        since: new Date().getTime() / 1000 - 3600 * 24,
+        stat: 'received',
+        group: 'project'
+      }
+    });
+  },
+
   componentWillUnmount() {
     GroupStore.reset();
   },
 
+
+  onTeamListChange() {
+    this.setState({
+      teams: TeamStore.getAll()
+    });
+  },
+
   render() {
     return (
       <OrganizationHomeContainer>
@@ -203,7 +239,7 @@ const OrganizationDashboard = React.createClass({
             <NewIssues {...this.props} />
           </div>
           <div className="col-md-4">
-            <ProjectList {...this.props} />
+            <ProjectList {...this.props} teams={this.state.teams} />
             <Activity {...this.props} />
           </div>
         </div>
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
index 82431a2b38..d33dcaf863 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
@@ -33,9 +33,9 @@ const OrganizationTeams = React.createClass({
     };
   },
 
+
   componentWillUpdate(nextProps, nextState) {
-    // TOOD: only id comparison}
-    if (!arrayIsEqual(nextState.teamList, this.state.teamList))
+    if (!arrayIsEqual(nextState.teamList.map(team => team.id), this.state.teamList.map(team => team.id)))
       this.fetchStats();
   },
 
