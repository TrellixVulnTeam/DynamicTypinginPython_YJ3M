commit 4f9a83fc41be3e09857c551571f0fe6ced58b7ce
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Mar 11 15:15:46 2019 -0700

    fix(tags): Remove timestamp tag support from issue stream (#12353)
    
    This is a duplicate of `event.timestamp` in the issue stream

diff --git a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
index 9f7c7b00e8..49e5291b37 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
@@ -396,8 +396,9 @@ const OrganizationStream = createReactClass({
 
   onTagsChange(tags) {
     // Exclude the environment tag as it lives in global search.
+    // Exclude the timestamp tag since we use event.timestamp instead here
     this.setState({
-      tags: omit(tags, 'environment'),
+      tags: omit(tags, ['environment', 'timestamp']),
       tagsLoading: false,
     });
   },
@@ -670,6 +671,7 @@ const OrganizationStream = createReactClass({
             isSearchDisabled={this.state.isSidebarVisible}
             savedSearchList={this.state.savedSearchList}
             tagValueLoader={this.tagValueLoader}
+            tags={this.state.tags}
           />
 
           <Panel>
diff --git a/src/sentry/static/sentry/app/views/stream/filters.jsx b/src/sentry/static/sentry/app/views/stream/filters.jsx
index f2054e18d7..a39bb8ba12 100644
--- a/src/sentry/static/sentry/app/views/stream/filters.jsx
+++ b/src/sentry/static/sentry/app/views/stream/filters.jsx
@@ -4,7 +4,6 @@ import React from 'react';
 import SavedSearchSelector from 'app/views/stream/savedSearchSelector';
 import SearchBar from 'app/views/stream/searchBar';
 import SortOptions from 'app/views/stream/sortOptions';
-import TagStore from 'app/stores/tagStore';
 
 class StreamFilters extends React.Component {
   static propTypes = {
@@ -27,6 +26,7 @@ class StreamFilters extends React.Component {
     onSavedSearchCreate: PropTypes.func.isRequired,
     onSavedSearchSelect: PropTypes.func.isRequired,
     tagValueLoader: PropTypes.func.isRequired,
+    tags: PropTypes.object.isRequired,
   };
 
   static contextTypes = {
@@ -61,6 +61,7 @@ class StreamFilters extends React.Component {
       onSavedSearchSelect,
       onSortChange,
       tagValueLoader,
+      tags,
     } = this.props;
 
     return (
@@ -92,7 +93,7 @@ class StreamFilters extends React.Component {
                 onSearch={onSearch}
                 disabled={isSearchDisabled}
                 excludeEnvironment={true}
-                supportedTags={TagStore.getAllTags()}
+                supportedTags={tags}
                 tagValueLoader={tagValueLoader}
               />
               <a
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 0ce9030ed7..8512487ae0 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -3,7 +3,6 @@ import React from 'react';
 
 import {t} from 'app/locale';
 import SmartSearchBar from 'app/components/smartSearchBar';
-import TagStore from 'app/stores/tagStore';
 import withApi from 'app/utils/withApi';
 
 const SEARCH_ITEMS = [
@@ -54,6 +53,7 @@ class SearchBar extends React.Component {
     api: PropTypes.object,
     orgId: PropTypes.string.isRequired,
     tagValueLoader: PropTypes.func.isRequired,
+    supportedTags: PropTypes.object.isRequired,
   };
 
   /**
@@ -74,11 +74,10 @@ class SearchBar extends React.Component {
   render() {
     return (
       <SmartSearchBar
-        {...this.props}
         onGetTagValues={this.getTagValues}
-        supportedTags={TagStore.getAllTags()}
         defaultSearchItems={SEARCH_ITEMS}
         maxSearchItems={5}
+        {...this.props}
       />
     );
   }
diff --git a/src/sentry/static/sentry/app/views/stream/stream.jsx b/src/sentry/static/sentry/app/views/stream/stream.jsx
index 3e110dbea7..81b096ccee 100644
--- a/src/sentry/static/sentry/app/views/stream/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream/stream.jsx
@@ -704,6 +704,7 @@ const Stream = createReactClass({
             isSearchDisabled={this.state.isSidebarVisible}
             savedSearchList={this.state.savedSearchList}
             tagValueLoader={this.tagValueLoader}
+            tags={this.props.tags}
           />
           <Panel>
             <StreamActions
diff --git a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
index 5ec149442e..91aec291ab 100644
--- a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
+++ b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
@@ -45,6 +45,78 @@ exports[`Stream render() displays the group list 1`] = `
       searchId={null}
       sort="date"
       tagValueLoader={[Function]}
+      tags={
+        Object {
+          "assigned": Object {
+            "key": "assigned",
+            "name": "Assigned To",
+            "predefined": true,
+            "values": Array [],
+          },
+          "bookmarks": Object {
+            "key": "bookmarks",
+            "name": "Bookmarked By",
+            "predefined": true,
+            "values": Array [],
+          },
+          "event.timestamp": Object {
+            "key": "event.timestamp",
+            "name": "Event Timestamp",
+            "predefined": true,
+            "values": Array [
+              "2017-01-02",
+              ">=2017-01-02T01:00:00",
+              "<2017-01-02T02:00:00",
+            ],
+          },
+          "firstSeen": Object {
+            "key": "firstSeen",
+            "name": "First Seen",
+            "predefined": true,
+            "values": Array [
+              "-1h",
+              "+1d",
+              "-1w",
+            ],
+          },
+          "has": Object {
+            "key": "has",
+            "name": "Has Tag",
+            "predefined": true,
+            "values": Array [],
+          },
+          "is": Object {
+            "key": "is",
+            "name": "Status",
+            "predefined": true,
+            "values": Array [
+              "resolved",
+              "unresolved",
+              "ignored",
+              "muted",
+              "assigned",
+              "unassigned",
+            ],
+          },
+          "lastSeen": Object {
+            "key": "lastSeen",
+            "name": "Last Seen",
+            "predefined": true,
+            "values": Array [
+              "-1h",
+              "+1d",
+              "-1w",
+            ],
+          },
+          "timesSeen": Object {
+            "isInput": true,
+            "key": "timesSeen",
+            "name": "Times Seen",
+            "predefined": true,
+            "values": Array [],
+          },
+        }
+      }
     />
     <Panel>
       <StreamActions
@@ -272,6 +344,78 @@ exports[`Stream toggles environment select all environments 1`] = `
       searchId={null}
       sort="date"
       tagValueLoader={[Function]}
+      tags={
+        Object {
+          "assigned": Object {
+            "key": "assigned",
+            "name": "Assigned To",
+            "predefined": true,
+            "values": Array [],
+          },
+          "bookmarks": Object {
+            "key": "bookmarks",
+            "name": "Bookmarked By",
+            "predefined": true,
+            "values": Array [],
+          },
+          "event.timestamp": Object {
+            "key": "event.timestamp",
+            "name": "Event Timestamp",
+            "predefined": true,
+            "values": Array [
+              "2017-01-02",
+              ">=2017-01-02T01:00:00",
+              "<2017-01-02T02:00:00",
+            ],
+          },
+          "firstSeen": Object {
+            "key": "firstSeen",
+            "name": "First Seen",
+            "predefined": true,
+            "values": Array [
+              "-1h",
+              "+1d",
+              "-1w",
+            ],
+          },
+          "has": Object {
+            "key": "has",
+            "name": "Has Tag",
+            "predefined": true,
+            "values": Array [],
+          },
+          "is": Object {
+            "key": "is",
+            "name": "Status",
+            "predefined": true,
+            "values": Array [
+              "resolved",
+              "unresolved",
+              "ignored",
+              "muted",
+              "assigned",
+              "unassigned",
+            ],
+          },
+          "lastSeen": Object {
+            "key": "lastSeen",
+            "name": "Last Seen",
+            "predefined": true,
+            "values": Array [
+              "-1h",
+              "+1d",
+              "-1w",
+            ],
+          },
+          "timesSeen": Object {
+            "isInput": true,
+            "key": "timesSeen",
+            "name": "Times Seen",
+            "predefined": true,
+            "values": Array [],
+          },
+        }
+      }
     />
     <Panel>
       <StreamActions
