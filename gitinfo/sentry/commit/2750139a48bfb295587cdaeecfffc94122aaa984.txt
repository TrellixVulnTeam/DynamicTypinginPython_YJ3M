commit 2750139a48bfb295587cdaeecfffc94122aaa984
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Mar 12 12:33:28 2018 -0700

    feat(ui): Add default forms to account notification fine tuning (#7567)

diff --git a/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx b/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx
index 31cdcb7300..9b5786dba7 100644
--- a/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx
@@ -3,33 +3,60 @@ import {t, tct} from '../../locale';
 // Export route to make these forms searchable by label/help
 export const route = '/settings/account/notifications/';
 
+export const fields = {
+  subscribeByDefault: {
+    name: 'subscribeByDefault',
+    type: 'boolean',
+    label: t('Send Me Project Alerts'),
+    // TODO(billy): Make this a real link
+    help: tct('Alerts are defined in [locationPath]', {
+      locationPath: '[Project] » Project Settings » Alerts » Rules.',
+    }),
+  },
+  workflowNotifications: {
+    name: 'workflowNotifications',
+    type: 'radio',
+    label: t('Send Me Workflow Notifications'),
+    choices: [[0, 'Always'], [1, 'Only On Issues I Subscribe To'], [2, 'Never']],
+    help: t('E.g. changes in issue assignment, resolution status, and comments.'),
+  },
+  weeklyReports: {
+    name: 'weeklyReports',
+    type: 'boolean',
+    label: t('Send Me Weekly Reports'),
+    help: t("Reports contain a summary of what's happened within your organization."),
+    disabled: true,
+  },
+  deployNotifications: {
+    name: 'deployNotifications',
+    type: 'radio',
+    label: t('Send Me Deploy Notifications'),
+    choices: [[2, 'Always'], [3, 'Only On Deploys With My Commits'], [4, 'Never']],
+    help: t('Deploy emails include release, environment and commit overviews.'),
+  },
+  personalActivityNotifications: {
+    name: 'personalActivityNotifications',
+    type: 'boolean',
+    label: t('Notify Me About My Own Activity'),
+    help: t('Enable this to recieve notifications about your own actions on Sentry.'),
+  },
+  selfAssignOnResolve: {
+    name: 'selfAssignOnResolve',
+    type: 'boolean',
+    label: t("Claim Unassigned Issues I've Resolved"),
+    help: t("You'll recieve notifications about any changes that happen afterwards."),
+  },
+};
+
 const formGroups = [
   {
     title: t('Alerts'),
-    fields: [
-      {
-        name: 'subscribeByDefault',
-        type: 'boolean',
-        label: t('Send Me Project Alerts'),
-        // TODO(billy): Make this a real link
-        help: tct('Alerts are defined in [locationPath]', {
-          locationPath: '[Project] » Project Settings » Alerts » Rules.',
-        }),
-      },
-    ],
+    fields: [fields.subscribeByDefault],
   },
 
   {
     title: t('Workflow Notifications'),
-    fields: [
-      {
-        name: 'workflowNotifications',
-        type: 'radio',
-        label: t('Send Me Workflow Notifications'),
-        choices: [[0, 'Always'], [1, 'Only On Issues I Subscribe To'], [2, 'Never']],
-        help: t('E.g. changes in issue assignment, resolution status, and comments.'),
-      },
-    ],
+    fields: [fields.workflowNotifications],
   },
 
   {
@@ -39,46 +66,17 @@ const formGroups = [
 
   {
     title: t('Weekly Reports'),
-    fields: [
-      {
-        name: 'weeklyReports',
-        type: 'boolean',
-        label: t('Send Me Weekly Reports'),
-        help: t("Reports contain a summary of what's happened within your organization."),
-        disabled: true,
-      },
-    ],
+    fields: [fields.weeklyReports],
   },
 
   {
     title: t('Deploy Notifications'),
-    fields: [
-      {
-        name: 'deployNotifications',
-        type: 'radio',
-        label: t('Send Me Deploy Notifications'),
-        choices: [[2, 'Always'], [3, 'Only On Deploys With My Commits'], [4, 'Never']],
-        help: t('Deploy emails include release, environment and commit overviews.'),
-      },
-    ],
+    fields: [fields.deployNotifications],
   },
 
   {
     title: t('My Activity'),
-    fields: [
-      {
-        name: 'personalActivityNotifications',
-        type: 'boolean',
-        label: t('Notify Me About My Own Activity'),
-        help: t('Enable this to recieve notifications about your own actions on Sentry.'),
-      },
-      {
-        name: 'selfAssignOnResolve',
-        type: 'boolean',
-        label: t("Claim Unassigned Issues I've Resolved"),
-        help: t("You'll recieve notifications about any changes that happen afterwards."),
-      },
-    ],
+    fields: [fields.personalActivityNotifications, fields.selfAssignOnResolve],
   },
 ];
 
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
index a4007a5a6f..3fb57e4e7f 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
@@ -5,6 +5,7 @@ import styled from 'react-emotion';
 import {t} from '../../../locale';
 import AsyncView from '../../asyncView';
 import Form from '../components/forms/form';
+import JsonForm from '../components/forms/jsonForm';
 import Panel from '../components/panel';
 import PanelBody from '../components/panelBody';
 import PanelHeader from '../components/panelHeader';
@@ -12,6 +13,7 @@ import ProjectsStore from '../../../stores/projectsStore';
 import Select2Field from '../components/forms/select2Field';
 import SettingsPageHeader from '../components/settingsPageHeader';
 import TextBlock from '../components/text/textBlock';
+import {fields} from '../../../data/forms/accountNotificationSettings';
 import withOrganizations from '../../../utils/withOrganizations';
 
 const ACCOUNT_NOTIFICATION_FIELDS = {
@@ -20,6 +22,7 @@ const ACCOUNT_NOTIFICATION_FIELDS = {
     description: t('Control alerts that you receive per project.'),
     type: 'select',
     choices: [[-1, t('Default')], [1, t('On')], [0, t('Off')]],
+    defaultFieldName: 'subscribeByDefault',
   },
   workflow: {
     title: 'Workflow Notifications',
@@ -33,6 +36,7 @@ const ACCOUNT_NOTIFICATION_FIELDS = {
       [1, t('Only on issues I subscribe to')],
       [2, t('Never')],
     ],
+    defaultFieldName: 'workflowNotifications',
   },
   deploy: {
     title: t('Deploy Notifications'),
@@ -46,6 +50,7 @@ const ACCOUNT_NOTIFICATION_FIELDS = {
       [3, t('Only on deploys with my commits')],
       [4, t('Never')],
     ],
+    defaultFieldName: 'deployNotifications',
   },
   reports: {
     title: t('Weekly Reports'),
@@ -54,6 +59,7 @@ const ACCOUNT_NOTIFICATION_FIELDS = {
     ),
     type: 'select',
     choices: [[1, t('On')], [0, t('Off')]],
+    defaultFieldName: 'weeklyReports',
   },
 
   email: {
@@ -156,12 +162,12 @@ class AccountNotificationsByOrganization extends React.Component {
   }
 
   render() {
-    const fields = this.getFieldData();
+    const orgFields = this.getFieldData();
 
     return (
       <React.Fragment>
         <PanelHeader>{t('Organizations')}</PanelHeader>
-        {fields.map(field => {
+        {orgFields.map(field => {
           return (
             <PanelBodyLineItem key={field.name}>
               <Select2Field
@@ -185,7 +191,10 @@ const AccountNotificationsByOrganizationContainer = withOrganizations(
 export default class AccountNotificationFineTuning extends AsyncView {
   getEndpoints() {
     const {fineTuneType} = this.props.params;
-    const endpoints = [['notifications', `/users/me/notifications/${fineTuneType}/`]];
+    const endpoints = [
+      ['notifications', '/users/me/notifications/'],
+      ['fineTuneData', `/users/me/notifications/${fineTuneType}/`],
+    ];
 
     if (isGroupedByProject(fineTuneType)) {
       endpoints.push(['projects', '/projects/']);
@@ -232,11 +241,25 @@ export default class AccountNotificationFineTuning extends AsyncView {
         <SettingsPageHeader title={title} />
         {description && <TextBlock>{description}</TextBlock>}
 
+        {field &&
+          field.defaultFieldName && (
+            <Form
+              saveOnBlur
+              apiMethod="PUT"
+              apiEndpoint={'/users/me/notifications/'}
+              initialData={this.state.notifications}
+            >
+              <JsonForm
+                title={`Default ${title}`}
+                fields={[fields[field.defaultFieldName]]}
+              />
+            </Form>
+          )}
         <Form
           saveOnBlur
           apiMethod="PUT"
           apiEndpoint={`/users/me/notifications/${this.props.params.fineTuneType}/`}
-          initialData={this.state.notifications}
+          initialData={this.state.fineTuneData}
         >
           <Panel>
             {isProject && (
