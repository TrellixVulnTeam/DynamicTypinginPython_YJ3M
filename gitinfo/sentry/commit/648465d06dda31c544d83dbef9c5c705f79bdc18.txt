commit 648465d06dda31c544d83dbef9c5c705f79bdc18
Author: Stephen Cefali <scefali@sentry.io>
Date:   Thu Nov 14 13:59:20 2019 -0800

    chore(ts): convert sentryApplication (#15591)

diff --git a/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx b/src/sentry/static/sentry/app/data/forms/sentryApplication.tsx
similarity index 86%
rename from src/sentry/static/sentry/app/data/forms/sentryApplication.jsx
rename to src/sentry/static/sentry/app/data/forms/sentryApplication.tsx
index 9ed1caffd3..d662bb2435 100644
--- a/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx
+++ b/src/sentry/static/sentry/app/data/forms/sentryApplication.tsx
@@ -2,8 +2,9 @@ import React from 'react';
 
 import {extractMultilineFields} from 'app/utils';
 import {tct} from 'app/locale';
+import {Field} from 'app/views/settings/components/forms/type';
 
-const getPublicFormFields = () => [
+const getPublicFormFields = (): Field[] => [
   {
     name: 'name',
     type: 'string',
@@ -61,10 +62,10 @@ const getPublicFormFields = () => [
     label: 'Schema',
     autosize: true,
     help: 'Schema for your UI components',
-    getValue: val => {
+    getValue: (val: string) => {
       return val === '' ? {} : JSON.parse(val);
     },
-    setValue: val => {
+    setValue: (val: string) => {
       const schema = JSON.stringify(val, null, 2);
       if (schema === '{}') {
         return '';
@@ -98,8 +99,9 @@ const getPublicFormFields = () => [
     placeholder: 'e.g. example.com',
     label: 'Authorized JavaScript Origins',
     help: 'Separate multiple entries with a newline.',
-    getValue: val => extractMultilineFields(val),
-    setValue: val => (val && typeof val.join === 'function' && val.join('\n')) || '',
+    getValue: (val: string) => extractMultilineFields(val),
+    setValue: (val: string[] | undefined | null) =>
+      (val && typeof val.join === 'function' && val.join('\n')) || '',
   },
 ];
 
@@ -118,10 +120,13 @@ const getInternalFormFields = () => {
    ***/
 
   const internalFormFields = getPublicFormFields().filter(
-    formField => !['redirectUrl', 'verifyInstall', 'author'].includes(formField.name)
+    formField =>
+      !['redirectUrl', 'verifyInstall', 'author'].includes(formField.name || '')
   );
   const webhookField = internalFormFields.find(field => field.name === 'webhookUrl');
-  webhookField.required = false;
+  if (webhookField) {
+    webhookField.required = false;
+  }
   return internalFormFields;
 };
 
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/type.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/type.tsx
index 0ebd626ae1..3a14e05413 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/type.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/type.tsx
@@ -31,7 +31,7 @@ type BaseField = {
   placeholder?: string | (() => string);
   multiline?: boolean;
   visible?: boolean | ((props: any) => boolean);
-  disabled?: boolean | (() => boolean);
+  disabled?: boolean | ((props: any) => boolean);
   disabledReason?: string;
   defaultValue?: FieldValue;
 
@@ -55,6 +55,8 @@ type BaseField = {
 
   onChange?: (value: FieldValue) => void;
 
+  validate?: ({id: String, form: object}) => string[][];
+
   // TODO(ts): FormField prop?
   inline?: boolean;
 
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.tsx
index 74f80238c2..343c79034c 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.tsx
@@ -297,7 +297,7 @@ export default class SentryApplicationDetails extends AsyncView<Props, State> {
     const endpoint = app ? `/sentry-apps/${app.slug}/` : '/sentry-apps/';
 
     const forms = this.isInternal ? internalIntegrationForms : publicIntegrationForms;
-    let verifyInstall;
+    let verifyInstall: boolean;
     if (this.isInternal) {
       //force verifyInstall to false for all internal apps
       verifyInstall = false;
