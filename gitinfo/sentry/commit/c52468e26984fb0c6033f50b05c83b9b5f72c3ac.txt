commit c52468e26984fb0c6033f50b05c83b9b5f72c3ac
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Mon Mar 5 12:09:03 2018 -0800

    feat(ui): Add add team member dropdown to team member list page

diff --git a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
index 5c570ce203..cadfc04844 100644
--- a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
@@ -5,8 +5,10 @@ import styled from 'react-emotion';
 import ApiMixin from '../../../mixins/apiMixin';
 import UserBadge from '../../../components/userBadge';
 import Button from '../../../components/buttons/button';
+import DropdownAutoComplete from '../../../components/dropdownAutoComplete';
+import DropdownButton from '../../../components/dropdownButton';
 import IndicatorStore from '../../../stores/indicatorStore';
-import {leaveTeam} from '../../../actionCreators/teams';
+import {joinTeam, leaveTeam} from '../../../actionCreators/teams';
 import LoadingError from '../../../components/loadingError';
 import LoadingIndicator from '../../../components/loadingIndicator';
 import OrganizationState from '../../../mixins/organizationState';
@@ -24,7 +26,8 @@ const TeamMembers = createReactClass({
     return {
       loading: true,
       error: false,
-      memberList: null,
+      teamMemberList: null,
+      orgMemberList: null,
     };
   },
 
@@ -60,7 +63,7 @@ const TeamMembers = createReactClass({
       {
         success: () => {
           this.setState({
-            memberList: this.state.memberList.filter(m => {
+            teamMemberList: this.state.teamMemberList.filter(m => {
               return m.id !== member.id;
             }),
           });
@@ -85,7 +88,7 @@ const TeamMembers = createReactClass({
     this.api.request(`/teams/${params.orgId}/${params.teamId}/members/`, {
       success: data => {
         this.setState({
-          memberList: data,
+          teamMemberList: data,
           loading: false,
           error: false,
         });
@@ -97,25 +100,90 @@ const TeamMembers = createReactClass({
         });
       },
     });
+
+    this.api.request(`/organizations/${params.orgId}/members/`, {
+      success: data => {
+        this.setState({
+          orgMemberList: data,
+        });
+      },
+      error: () => {
+        IndicatorStore.add(t('Unable to load organization members.'), 'error', {
+          duration: 2000,
+        });
+      },
+    });
   },
 
-  addMemberButton(access, orgId) {
-    return access.has('org:write') ? (
-      <Button
-        priority="primary"
-        size="small"
-        className="pull-right"
-        to={`/settings/organization/${orgId}/members/new/`}
-      >
-        <span className="icon-plus" /> {t('Invite Member')}
-      </Button>
-    ) : (
-      <a
-        className="btn btn-primary btn-sm btn-disabled tip pull-right"
-        title={t('You do not have enough permission to add new members')}
-      >
-        <span className="icon-plus" /> {t('Invite Member')}
-      </a>
+  addTeamMember(selection) {
+    let params = this.props.params;
+
+    this.setState({
+      loading: true,
+    });
+
+    joinTeam(
+      this.api,
+      {
+        orgId: params.orgId,
+        teamId: params.teamId,
+        memberId: selection.value,
+      },
+      {
+        success: () => {
+          let orgMember = this.state.orgMemberList.find(member => {
+            return member.id === selection.value;
+          });
+          this.setState({
+            loading: false,
+            error: false,
+            teamMemberList: this.state.teamMemberList.concat([orgMember]),
+          });
+          IndicatorStore.add(t('Successfully added member to team.'), 'success', {
+            duration: 2000,
+          });
+        },
+        error: () => {
+          this.setState({
+            loading: false,
+          });
+          IndicatorStore.add(t('Unable to add team member.'), 'error', {duration: 2000});
+        },
+      }
+    );
+  },
+
+  renderDropdown(access) {
+    if (!access.has('org:write')) {
+      return (
+        <a
+          className="btn btn-default btn-disabled tip pull-right"
+          title={t('You do not have enough permission to add new members')}
+        >
+          <span className="icon-plus" /> {t('Add Member')}
+        </a>
+      );
+    }
+
+    let existingMembers = new Set(this.state.teamMemberList.map(member => member.id));
+
+    let items = (this.state.orgMemberList || [])
+      .filter(m => !existingMembers.has(m.id))
+      .map(m => {
+        return {
+          value: m.id,
+          label: m.name || m.email,
+        };
+      });
+
+    return (
+      <DropdownAutoComplete items={items} onSelect={this.addTeamMember}>
+        {({isOpen, selectedItem}) => (
+          <DropdownButton isOpen={isOpen}>
+            <span className="icon-plus" /> {t('Add Member')}
+          </DropdownButton>
+        )}
+      </DropdownAutoComplete>
     );
   },
 
@@ -145,11 +213,11 @@ const TeamMembers = createReactClass({
         <PanelHeader hasButtons disablePadding>
           <StyledHeaderContainer>
             <div>{t('Members')}</div>
-            {this.addMemberButton(access, params.orgId)}
+            <div style={{textTransform: 'none'}}>{this.renderDropdown(access)}</div>
           </StyledHeaderContainer>
         </PanelHeader>
-        {this.state.memberList.length ? (
-          this.state.memberList.map((member, i) => (
+        {this.state.teamMemberList.length ? (
+          this.state.teamMemberList.map((member, i) => (
             <StyledMemberContainer key={i}>
               <UserBadge user={member} orgId={params.orgId} />
               {access.has('org:write') && this.removeButton(member)}
diff --git a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
index d0fc09a032..32e5a324a6 100644
--- a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
@@ -10,19 +10,19 @@ exports[`TeamMembers render() renders 1`] = `
       <div>
         Members
       </div>
-      <Button
-        className="pull-right"
-        disabled={false}
-        priority="primary"
-        size="small"
-        to="/settings/organization/org-slug/members/new/"
+      <div
+        style={
+          Object {
+            "textTransform": "none",
+          }
+        }
       >
-        <span
-          className="icon-plus"
+        <DropdownAutoComplete
+          isOpen={false}
+          items={Array []}
+          onSelect={[Function]}
         />
-         
-        Invite Member
-      </Button>
+      </div>
     </StyledHeaderContainer>
   </PanelHeader>
   <StyledMemberContainer
diff --git a/tests/js/spec/views/teamMembers.spec.jsx b/tests/js/spec/views/teamMembers.spec.jsx
index cdc515d83e..bc21aa0090 100644
--- a/tests/js/spec/views/teamMembers.spec.jsx
+++ b/tests/js/spec/views/teamMembers.spec.jsx
@@ -58,7 +58,7 @@ describe('TeamMembers', function() {
 
       wrapper
         .find('.button-default')
-        .first()
+        .at(1)
         .simulate('click');
 
       expect(mock).toHaveBeenCalledWith(
