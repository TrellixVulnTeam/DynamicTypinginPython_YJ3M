commit 970b92351329c58209d627598973bfe1cc7cdc22
Author: Ted Kaemming <ted@kaemming.com>
Date:   Thu Oct 8 11:27:14 2015 -0700

    Clean up documentation.

diff --git a/src/sentry/tsdb/base.py b/src/sentry/tsdb/base.py
index 1b08f8a976..58ad59f135 100644
--- a/src/sentry/tsdb/base.py
+++ b/src/sentry/tsdb/base.py
@@ -192,11 +192,14 @@ class BaseTSDB(object):
         return result
 
     def record(self, model, key, values, timestamp=None):
+        """
+        Record occurences of items in a single distinct counter.
+        """
         raise NotImplementedError
 
     def record_multi(self, items, timestamp=None):
         """
-        Record an occurence of an item in a distinct counter.
+        Record occurences of items in multiple distinct counters.
         """
         for model, key, values in items:
             self.record(model, key, values, timestamp)
diff --git a/src/sentry/tsdb/redis.py b/src/sentry/tsdb/redis.py
index 2858f12269..0d8f183cd5 100644
--- a/src/sentry/tsdb/redis.py
+++ b/src/sentry/tsdb/redis.py
@@ -200,9 +200,6 @@ class RedisTSDB(BaseTSDB):
                         self.calculate_expiry(rollup, max_values, timestamp),
                     )
 
-        # TODO: Check to make sure these operations didn't fail, so we can
-        # raise an error if there were issues.
-
     def get_distinct_counts_series(self, model, keys, start, end=None, rollup=None):
         """
         Fetch counts of distinct items for each rollup interval within the range.
