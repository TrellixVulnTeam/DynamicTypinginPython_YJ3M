commit f02e6b4f8bafff0edce522fe68ce98d1c4f86871
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon May 4 09:43:45 2020 -0700

    ref(ts): Convert search dropdown (#18574)

diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.tsx
similarity index 87%
rename from src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.jsx
rename to src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.tsx
index 6d293bfcaa..430167d316 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.tsx
@@ -1,4 +1,3 @@
-import PropTypes from 'prop-types';
 import React from 'react';
 import classNames from 'classnames';
 import styled from '@emotion/styled';
@@ -8,20 +7,23 @@ import LoadingIndicator from 'app/components/loadingIndicator';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import space from 'app/styles/space';
 
-class SearchDropdown extends React.PureComponent {
-  static propTypes = {
-    items: PropTypes.array.isRequired,
-    searchSubstring: PropTypes.string,
-    onClick: PropTypes.func.isRequired,
-    loading: PropTypes.bool,
-  };
+import {SearchGroup, SearchItem} from './types';
+
+type Props = {
+  className?: string;
+  items: SearchGroup[];
+  searchSubstring: string;
+  onClick: (value: string, item: SearchItem) => void;
+  loading: boolean;
+};
 
+class SearchDropdown extends React.PureComponent<Props> {
   static defaultProps = {
     searchSubstring: '',
     onClick: function() {},
   };
 
-  renderDescription = item => {
+  renderDescription = (item: SearchItem) => {
     const searchSubstring = this.props.searchSubstring;
     if (!searchSubstring) {
       return item.desc;
@@ -48,7 +50,7 @@ class SearchDropdown extends React.PureComponent {
     );
   };
 
-  renderHeaderItem = item => (
+  renderHeaderItem = (item: SearchGroup) => (
     <SearchDropdownGroup key={item.title}>
       <SearchDropdownGroupTitle>
         <GroupTitleIcon className={classNames('icon', item.icon)} />
@@ -58,10 +60,10 @@ class SearchDropdown extends React.PureComponent {
     </SearchDropdownGroup>
   );
 
-  renderItem = item => (
-    <SearchItem
+  renderItem = (item: SearchItem) => (
+    <SearchListItem
       key={item.value || item.desc}
-      className={item.active ? 'active' : null}
+      className={item.active ? 'active' : undefined}
       data-test-id="search-autocomplete-item"
       onClick={this.props.onClick.bind(this, item.value, item)}
     >
@@ -69,7 +71,7 @@ class SearchDropdown extends React.PureComponent {
         {item.title && item.title + ' Â· '}
         <Description>{this.renderDescription(item)}</Description>
       </SearchItemTitleWrapper>
-    </SearchItem>
+    </SearchListItem>
   );
 
   render() {
@@ -137,10 +139,8 @@ const Info = styled('div')`
 `;
 
 const ListItem = styled('li')`
-  border-bottom: 1px solid ${p => p.theme.borderLight};
-
-  &:last-child {
-    border-bottom: none;
+  &:not(:last-child) {
+    border-bottom: 1px solid ${p => p.theme.borderLight};
   }
 `;
 
@@ -169,7 +169,7 @@ const SearchItemsList = styled('ul')`
   margin-bottom: 0;
 `;
 
-const SearchItem = styled(ListItem)`
+const SearchListItem = styled(ListItem)`
   font-size: ${p => p.theme.fontSizeLarge};
   padding: ${space(1)} ${space(2)};
   cursor: pointer;
diff --git a/tests/js/spec/views/events/searchBar.spec.jsx b/tests/js/spec/views/events/searchBar.spec.jsx
index 4204933aa0..cd1ff08373 100644
--- a/tests/js/spec/views/events/searchBar.spec.jsx
+++ b/tests/js/spec/views/events/searchBar.spec.jsx
@@ -8,7 +8,7 @@ const focusInput = el => el.find('input[name="query"]').simulate('focus');
 const selectFirstAutocompleteItem = async el => {
   focusInput(el);
 
-  el.find('SearchItem[data-test-id="search-autocomplete-item"]')
+  el.find('SearchListItem[data-test-id="search-autocomplete-item"]')
     .first()
     .simulate('click');
   const input = el.find('input');
@@ -175,10 +175,10 @@ describe('SearchBar', function() {
     await wrapper.update();
 
     expect(
-      wrapper.find('SearchItem[data-test-id="search-autocomplete-item"]')
+      wrapper.find('SearchListItem[data-test-id="search-autocomplete-item"]')
     ).toHaveLength(1);
     expect(
-      wrapper.find('SearchItem[data-test-id="search-autocomplete-item"]').text()
+      wrapper.find('SearchListItem[data-test-id="search-autocomplete-item"]').text()
     ).toBe('gpu:');
   });
 
diff --git a/tests/js/spec/views/issueList/searchBar.spec.jsx b/tests/js/spec/views/issueList/searchBar.spec.jsx
index a3346a034d..d083de36ca 100644
--- a/tests/js/spec/views/issueList/searchBar.spec.jsx
+++ b/tests/js/spec/views/issueList/searchBar.spec.jsx
@@ -205,7 +205,7 @@ describe('IssueListSearchBar', function() {
       wrapper.update();
       expect(
         wrapper
-          .find('SearchItem')
+          .find('SearchListItem')
           .at(0)
           .find('li')
           .prop('className')
@@ -214,7 +214,7 @@ describe('IssueListSearchBar', function() {
       wrapper.find('input').simulate('keyDown', {key: 'ArrowDown'});
       expect(
         wrapper
-          .find('SearchItem')
+          .find('SearchListItem')
           .at(0)
           .find('li')
           .prop('className')
@@ -223,7 +223,7 @@ describe('IssueListSearchBar', function() {
       wrapper.find('input').simulate('keyDown', {key: 'ArrowDown'});
       expect(
         wrapper
-          .find('SearchItem')
+          .find('SearchListItem')
           .at(1)
           .find('li')
           .prop('className')
@@ -233,7 +233,7 @@ describe('IssueListSearchBar', function() {
       wrapper.find('input').simulate('keyDown', {key: 'ArrowUp'});
       expect(
         wrapper
-          .find('SearchItem')
+          .find('SearchListItem')
           .last()
           .find('li')
           .prop('className')
