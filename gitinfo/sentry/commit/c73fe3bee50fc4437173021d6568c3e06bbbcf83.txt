commit c73fe3bee50fc4437173021d6568c3e06bbbcf83
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jan 22 15:04:07 2015 -0800

    Move stream components into submodule

diff --git a/src/sentry/static/sentry/app/components/stream.jsx b/src/sentry/static/sentry/app/components/stream.jsx
index bf0173a216..c199c56d77 100644
--- a/src/sentry/static/sentry/app/components/stream.jsx
+++ b/src/sentry/static/sentry/app/components/stream.jsx
@@ -8,95 +8,12 @@ var api = require("../api");
 var AggregateListActions = require("../actions/aggregateListActions");
 var AggregateListStore = require("../stores/aggregateListStore");
 var AlertActions = require("../actions/alertActions");
-var AssigneeSelector = require("./assigneeSelector");
-var BarChart = require("./barChart");
-var Count = require("./count");
-var StreamActions = require('./streamActions');
-var StreamFilters = require('./streamFilters');
-var StreamPagination = require('./streamPagination');
-var TimeSince = require("./timeSince");
+var StreamAggregate = require('./stream/aggregate');
+var StreamActions = require('./stream/actions');
+var StreamFilters = require('./stream/filters');
+var StreamPagination = require('./stream/pagination');
 var utils = require("../utils");
 
-var Aggregate = React.createClass({
-  mixins: [Router.State],
-
-  propTypes: {
-    data: React.PropTypes.shape({
-      id: React.PropTypes.string.isRequired
-    }).isRequired,
-    memberList: React.PropTypes.instanceOf(Array).isRequired,
-    onSelect: React.PropTypes.func.isRequired,
-    statsPeriod: React.PropTypes.string.isRequired,
-    isSelected: React.PropTypes.bool
-  },
-  render: function() {
-    var data = this.props.data,
-        userCount = 0;
-
-    var params = this.getParams();
-
-    var chartData = data.stats[this.props.statsPeriod].map(function(point){
-      return {x: point[0], y: point[1]};
-    });
-
-    if (data.tags["sentry:user"] !== undefined) {
-      userCount = data.tags["sentry:user"].count;
-    }
-
-    var className = "group";
-    if (data.isBookmarked) {
-      className += " isBookmarked";
-    }
-    if (data.hasSeen) {
-      className += " hasSeen";
-    }
-    if (data.status === "resolved") {
-      className += " isResolved";
-    }
-
-    return (
-      <li className={className}>
-        <div className="event-details event-cell">
-          <div className="checkbox">
-            <input type="checkbox" className="chk-select" value={data.id}
-                   checked={this.props.isSelected}
-                   onChange={this.props.onSelect} />
-          </div>
-          <h3>
-            <Router.Link to="aggregateDetails"
-                  params={{orgId: params.orgId, projectId: params.projectId, aggregateId: data.id}}>
-              <span className="icon icon-bookmark"></span>
-              {data.title}
-            </Router.Link>
-          </h3>
-          <div className="event-message">
-            <span className="message">{data.culprit}</span>
-          </div>
-          <div className="event-meta">
-            <span className="last-seen"><TimeSince date={data.lastSeen} /></span>
-            &nbsp;&mdash;&nbsp;
-            <span className="first-seen">from <TimeSince date={data.firstSeen} /></span>
-          </div>
-        </div>
-        <div className="event-assignee event-cell hidden-xs hidden-sm">
-          <AssigneeSelector
-            aggregate={data}
-            memberList={this.props.memberList} />
-        </div>
-        <div className="hidden-sm hidden-xs event-graph align-right event-cell">
-          <BarChart points={chartData} className="sparkline" />
-        </div>
-        <div className="hidden-xs event-occurrences align-center event-cell">
-          <Count value={data.count} />
-        </div>
-        <div className="hidden-xs event-users align-center event-cell">
-          <Count value={userCount} />
-        </div>
-      </li>
-    );
-  }
-});
-
 var StreamPoller = function(options){
   this.options = options;
   this._timeoutId = null;
@@ -370,12 +287,13 @@ var Stream = React.createClass({
   render: function() {
     var aggNodes = this.state.aggList.map(function(node) {
       return (
-        <Aggregate key={node.id}
-                   data={node}
-                   isSelected={node.isSelected}
-                   memberList={this.props.memberList}
-                   onSelect={this.handleSelect.bind(this, node.id)}
-                   statsPeriod={this.state.statsPeriod} />
+        <StreamAggregate
+            key={node.id}
+            data={node}
+            isSelected={node.isSelected}
+            memberList={this.props.memberList}
+            onSelect={this.handleSelect.bind(this, node.id)}
+            statsPeriod={this.state.statsPeriod} />
       );
     }.bind(this));
 
diff --git a/src/sentry/static/sentry/app/components/streamActions.jsx b/src/sentry/static/sentry/app/components/stream/actions.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/components/streamActions.jsx
rename to src/sentry/static/sentry/app/components/stream/actions.jsx
index 0ce77d2830..d9a8f95b4d 100644
--- a/src/sentry/static/sentry/app/components/streamActions.jsx
+++ b/src/sentry/static/sentry/app/components/stream/actions.jsx
@@ -2,12 +2,12 @@
 var React = require("react");
 var $ = require("jquery");
 
-var utils = require("../utils");
+var utils = require("../../utils");
 
 var joinClasses = require("react-bootstrap/utils/joinClasses");
-var DateTimeField = require("../modules/datepicker/DateTimeField");
-var DropdownLink = require("./dropdownLink");
-var MenuItem = require("./menuItem");
+var DateTimeField = require("../../modules/datepicker/DateTimeField");
+var DropdownLink = require("../dropdownLink");
+var MenuItem = require("../menuItem");
 var Modal = require("react-bootstrap/Modal");
 var OverlayMixin = require("react-bootstrap/OverlayMixin");
 
diff --git a/src/sentry/static/sentry/app/components/stream/aggregate.jsx b/src/sentry/static/sentry/app/components/stream/aggregate.jsx
new file mode 100644
index 0000000000..80e4fc332c
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/stream/aggregate.jsx
@@ -0,0 +1,90 @@
+/*** @jsx React.DOM */
+var React = require("react");
+var Router = require("react-router");
+
+var AssigneeSelector = require("../assigneeSelector");
+var BarChart = require("../barChart");
+var Count = require("../count");
+var TimeSince = require("../timeSince");
+
+var StreamAggregate = React.createClass({
+  mixins: [Router.State],
+
+  propTypes: {
+    data: React.PropTypes.shape({
+      id: React.PropTypes.string.isRequired
+    }).isRequired,
+    memberList: React.PropTypes.instanceOf(Array).isRequired,
+    onSelect: React.PropTypes.func.isRequired,
+    statsPeriod: React.PropTypes.string.isRequired,
+    isSelected: React.PropTypes.bool
+  },
+  render: function() {
+    var data = this.props.data,
+        userCount = 0;
+
+    var params = this.getParams();
+
+    var chartData = data.stats[this.props.statsPeriod].map(function(point){
+      return {x: point[0], y: point[1]};
+    });
+
+    if (data.tags["sentry:user"] !== undefined) {
+      userCount = data.tags["sentry:user"].count;
+    }
+
+    var className = "group";
+    if (data.isBookmarked) {
+      className += " isBookmarked";
+    }
+    if (data.hasSeen) {
+      className += " hasSeen";
+    }
+    if (data.status === "resolved") {
+      className += " isResolved";
+    }
+
+    return (
+      <li className={className}>
+        <div className="event-details event-cell">
+          <div className="checkbox">
+            <input type="checkbox" className="chk-select" value={data.id}
+                   checked={this.props.isSelected}
+                   onChange={this.props.onSelect} />
+          </div>
+          <h3>
+            <Router.Link to="aggregateDetails"
+                  params={{orgId: params.orgId, projectId: params.projectId, aggregateId: data.id}}>
+              <span className="icon icon-bookmark"></span>
+              {data.title}
+            </Router.Link>
+          </h3>
+          <div className="event-message">
+            <span className="message">{data.culprit}</span>
+          </div>
+          <div className="event-meta">
+            <span className="last-seen"><TimeSince date={data.lastSeen} /></span>
+            &nbsp;&mdash;&nbsp;
+            <span className="first-seen">from <TimeSince date={data.firstSeen} /></span>
+          </div>
+        </div>
+        <div className="event-assignee event-cell hidden-xs hidden-sm">
+          <AssigneeSelector
+            aggregate={data}
+            memberList={this.props.memberList} />
+        </div>
+        <div className="hidden-sm hidden-xs event-graph align-right event-cell">
+          <BarChart points={chartData} className="sparkline" />
+        </div>
+        <div className="hidden-xs event-occurrences align-center event-cell">
+          <Count value={data.count} />
+        </div>
+        <div className="hidden-xs event-users align-center event-cell">
+          <Count value={userCount} />
+        </div>
+      </li>
+    );
+  }
+});
+
+module.exports = StreamAggregate;
diff --git a/src/sentry/static/sentry/app/components/streamFilters.jsx b/src/sentry/static/sentry/app/components/stream/filters.jsx
similarity index 99%
rename from src/sentry/static/sentry/app/components/streamFilters.jsx
rename to src/sentry/static/sentry/app/components/stream/filters.jsx
index 8fe63184e5..f3489cc51e 100644
--- a/src/sentry/static/sentry/app/components/streamFilters.jsx
+++ b/src/sentry/static/sentry/app/components/stream/filters.jsx
@@ -2,7 +2,7 @@
 var React = require("react");
 var $ = require("jquery");
 
-var utils = require("../utils");
+var utils = require("../../utils");
 
 var SearchDropdown = React.createClass({
   componentDidMount: function(){
diff --git a/src/sentry/static/sentry/app/components/streamPagination.jsx b/src/sentry/static/sentry/app/components/stream/pagination.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/components/streamPagination.jsx
rename to src/sentry/static/sentry/app/components/stream/pagination.jsx
index 5ac3736c2d..5bf7d3debe 100644
--- a/src/sentry/static/sentry/app/components/streamPagination.jsx
+++ b/src/sentry/static/sentry/app/components/stream/pagination.jsx
@@ -2,7 +2,7 @@
 var React = require("react");
 var $ = require("jquery");
 
-var utils = require("../utils");
+var utils = require("../../utils");
 
 var StreamPagination = React.createClass({
   propTypes: {
diff --git a/src/sentry/static/sentry/app/stores/aggregateListStore.jsx b/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
index dd573742e8..5cbfa0aa05 100644
--- a/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
+++ b/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
@@ -64,7 +64,6 @@ var AggregateListStore = Reflux.createStore({
     this.trigger(this.items);
   },
 
-
   // TODO(dcramer): This is not really the best place for this
   onAssignToFailed: function(id, email) {
     AlertActions.addAlert(ERR_CHANGE_ASSIGNEE, 'error');
