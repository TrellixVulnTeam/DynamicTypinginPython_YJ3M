commit 4bdd374b0c174bac07f0fd48b9907a5177ab239d
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 24 16:30:11 2015 -0700

    Some draft code for StreamManager (realtime integration)

diff --git a/src/sentry/static/sentry/app/utils/streamManager.jsx b/src/sentry/static/sentry/app/utils/streamManager.jsx
new file mode 100644
index 0000000000..b1edf7b582
--- /dev/null
+++ b/src/sentry/static/sentry/app/utils/streamManager.jsx
@@ -0,0 +1,54 @@
+/*** @jsx React.DOM */
+
+var syncUpdates = function(sm) {
+  if (sm.limit && sm.length > sm.limit) {
+    // TODO(dcramer): this needs to remove items from GroupListStore
+    sm.splice(sm.limit, sm.length - sm.limit);
+  }
+};
+
+
+class StreamManager {
+  // TODO(dcramer): this should listen to changes on GroupListStore and remove
+  // items that are removed there
+  constructor(options) {
+    this.idList = [];
+
+    if (typeof options === "undefined") {
+      options = {};
+    }
+
+    this.limit = options.limit || 1000;
+    this.length = 0;
+
+    return this;
+  }
+
+  push(itemIds) {
+    if (!itemIds instanceof Array) {
+      itemIds = [itemIds];
+    }
+
+    itemIds.forEach((id) => {
+      // this needs to update the item in the global store, and ensure its
+      // position in our local array
+      var existing = GroupListStore.getItem(id);
+      if (existing) {
+        $.extend(true, existing, item);
+        item = existing;
+      } else {
+        GroupListStore.add(id);
+      }
+      this.idList.push(id);
+      this.length += 1;
+    });
+    syncUpdates(this);
+    return this;
+  }
+
+  unshift(items) {
+    return this.push(items.reverse());
+  }
+}
+
+module.exports = StreamManager;
