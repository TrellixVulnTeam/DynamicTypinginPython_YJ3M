commit f5d9c66db01f2688478e28f2c58de573386a95e4
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu May 14 14:17:11 2020 -0700

    ref(alerts): Swap ordering of alert type chooser cards (#18835)

diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/alertTypeChooser.tsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/alertTypeChooser.tsx
index a1af727cf6..738a10d525 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/alertTypeChooser.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/alertTypeChooser.tsx
@@ -28,59 +28,59 @@ const IssuesTooltip = ({children}: {children?: React.ReactNode}) => (
 
 const AlertTypeChooser = ({selected, onChange}: Props) => (
   <Container>
-    <TypeCard interactive onClick={() => onChange('issue')}>
+    <TypeCard interactive onClick={() => onChange('metric')}>
       <RadioLabel>
         <Radio
-          aria-label="issue"
-          checked={selected === 'issue'}
-          onChange={() => onChange('issue')}
+          aria-label="metric"
+          checked={selected === 'metric'}
+          onChange={() => onChange('metric')}
         />
-        {t('Issue Alert')}
+        {t('Metric Alert')}
+        <FeatureBadge type="beta" />
       </RadioLabel>
       <p>
-        {tct(
-          `Get notified when [note:individual Sentry Issues] match your alerting criteria.`,
-          {note: <IssuesTooltip />}
+        {t(
+          `Compute aggregates and set thresholds on any or all errors in your
+           project, regardless of the Sentry issue.`
         )}
       </p>
       {!selected && (
         <BulletList>
           <li>
-            {t('New or regressed issues')}
-            <Example>{t('There is a new issue on the checkout page')}</Example>
+            {t('Overall error volume')}
+            <Example>{t('A broken service is affecting more than X users')}</Example>
           </li>
           <li>
-            {t('Issue frequency')}
-            <Example>{t('When an issue affects more than X users')}</Example>
+            {t('Events across issues')}
+            <Example>{t('100 or more errors with "database" in the title')}</Example>
           </li>
         </BulletList>
       )}
     </TypeCard>
-    <TypeCard interactive onClick={() => onChange('metric')}>
+    <TypeCard interactive onClick={() => onChange('issue')}>
       <RadioLabel>
         <Radio
-          aria-label="metric"
-          checked={selected === 'metric'}
-          onChange={() => onChange('metric')}
+          aria-label="issue"
+          checked={selected === 'issue'}
+          onChange={() => onChange('issue')}
         />
-        {t('Metric Alert')}
-        <FeatureBadge type="beta" />
+        {t('Issue Alert')}
       </RadioLabel>
       <p>
-        {t(
-          `Compute aggregates and set thresholds on any or all errors in your
-           project, regardless of the Sentry issue.`
+        {tct(
+          `Get notified when [note:individual Sentry Issues] match your alerting criteria.`,
+          {note: <IssuesTooltip />}
         )}
       </p>
       {!selected && (
         <BulletList>
           <li>
-            {t('Overall error volume')}
-            <Example>{t('A broken service is affecting more than X users')}</Example>
+            {t('New or regressed issues')}
+            <Example>{t('There is a new issue on the checkout page')}</Example>
           </li>
           <li>
-            {t('Events across issues')}
-            <Example>{t('100 or more errors with "database" in the title')}</Example>
+            {t('Issue frequency')}
+            <Example>{t('When an issue affects more than X users')}</Example>
           </li>
         </BulletList>
       )}
