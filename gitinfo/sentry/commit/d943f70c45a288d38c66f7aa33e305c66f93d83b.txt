commit d943f70c45a288d38c66f7aa33e305c66f93d83b
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Oct 24 19:35:09 2012 -0700

    FILTER_CLAUSE -> SCORE_CLAUSE

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 034b2ca344..948b1cf63c 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -30,22 +30,22 @@ SORT_CLAUSES = {
     'tottime': 'sentry_groupedmessage.time_spent_total',
     'avgtime': '(sentry_groupedmessage.time_spent_total / sentry_groupedmessage.time_spent_count)',
 }
-FILTER_CLAUSES = SORT_CLAUSES.copy()
+SCORE_CLAUSES = SORT_CLAUSES.copy()
 
 SQLITE_SORT_CLAUSES = SORT_CLAUSES.copy()
 SQLITE_SORT_CLAUSES.update({
     'date': 'sentry_groupedmessage.last_seen',
     'new': 'sentry_groupedmessage.first_seen',
 })
-SQLITE_FILTER_CLAUSES = SQLITE_SORT_CLAUSES.copy()
+SQLITE_SCORE_CLAUSES = SQLITE_SORT_CLAUSES.copy()
 
 MYSQL_SORT_CLAUSES = SORT_CLAUSES.copy()
 MYSQL_SORT_CLAUSES.update({
     'date': 'sentry_groupedmessage.last_seen',
     'new': 'sentry_groupedmessage.first_seen',
 })
-MYSQL_FILTER_CLAUSES = FILTER_CLAUSES.copy()
-MYSQL_FILTER_CLAUSES.update({
+MYSQL_SCORE_CLAUSES = SCORE_CLAUSES.copy()
+MYSQL_SCORE_CLAUSES.update({
     'date': 'UNIX_TIMESTAMP(sentry_groupedmessage.last_seen)',
     'new': 'UNIX_TIMESTAMP(sentry_groupedmessage.first_seen)',
 })
diff --git a/src/sentry/web/frontend/groups.py b/src/sentry/web/frontend/groups.py
index f2b82ad6ed..7dca4b6416 100644
--- a/src/sentry/web/frontend/groups.py
+++ b/src/sentry/web/frontend/groups.py
@@ -19,7 +19,7 @@ from django.utils.safestring import mark_safe
 from sentry.conf import settings
 from sentry.constants import (SORT_OPTIONS, SEARCH_SORT_OPTIONS,
     SORT_CLAUSES, MYSQL_SORT_CLAUSES, SQLITE_SORT_CLAUSES, MEMBER_USER,
-    FILTER_CLAUSES, MYSQL_FILTER_CLAUSES, SQLITE_FILTER_CLAUSES)
+    SCORE_CLAUSES, MYSQL_SCORE_CLAUSES, SQLITE_SCORE_CLAUSES)
 from sentry.filters import get_filters
 from sentry.models import Group, Event, View, SearchDocument
 from sentry.permissions import can_admin_group
@@ -113,14 +113,14 @@ def _get_group_list(request, project, view=None):
 
     engine = get_db_engine('default')
     if engine.startswith('sqlite'):
-        sort_clause = SQLITE_SORT_CLAUSES.get(sort)
-        filter_clause = SQLITE_FILTER_CLAUSES.get(sort)
+        score_clause = SQLITE_SORT_CLAUSES.get(sort)
+        filter_clause = SQLITE_SCORE_CLAUSES.get(sort)
     elif engine.startswith('mysql'):
-        sort_clause = MYSQL_SORT_CLAUSES.get(sort)
-        filter_clause = MYSQL_FILTER_CLAUSES.get(sort)
+        score_clause = MYSQL_SORT_CLAUSES.get(sort)
+        filter_clause = MYSQL_SCORE_CLAUSES.get(sort)
     else:
-        sort_clause = SORT_CLAUSES.get(sort)
-        filter_clause = FILTER_CLAUSES.get(sort)
+        score_clause = SORT_CLAUSES.get(sort)
+        filter_clause = SCORE_CLAUSES.get(sort)
 
     # All filters must already be applied once we reach this point
     if sort == 'tottime':
@@ -130,9 +130,9 @@ def _get_group_list(request, project, view=None):
     elif sort.startswith('accel_'):
         event_list = Group.objects.get_accelerated(event_list, minutes=int(sort.split('_', 1)[1]))
 
-    if sort_clause:
+    if score_clause:
         event_list = event_list.extra(
-            select={'sort_value': sort_clause},
+            select={'sort_value': score_clause},
         ).order_by('-sort_value', '-last_seen')
         cursor = request.GET.get('cursor')
         if cursor:
