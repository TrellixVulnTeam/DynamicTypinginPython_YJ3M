commit 7f3972b83c1c5d48ae1a039bfaf90024a3278bc0
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Apr 9 10:32:48 2020 +0200

    feat(ui): Calculate colors of crash free progress ring (#18152)

diff --git a/src/sentry/static/sentry/app/components/progressRing.tsx b/src/sentry/static/sentry/app/components/progressRing.tsx
index b0c4f0a1d5..3b2d7a37ba 100644
--- a/src/sentry/static/sentry/app/components/progressRing.tsx
+++ b/src/sentry/static/sentry/app/components/progressRing.tsx
@@ -11,6 +11,8 @@ type TextProps = {
   theme: Theme;
 };
 
+type ProgressColorFunction = (opts: {percent: number; theme: Theme}) => string;
+
 type Props = React.HTMLAttributes<SVGSVGElement> & {
   value: number;
   maxValue?: number;
@@ -37,7 +39,7 @@ type Props = React.HTMLAttributes<SVGSVGElement> & {
    * The color of the ring bar. A function may be provided to compute the color
    * based on the percent value filled of the progress bar.
    */
-  progressColor?: string | ((opts: {percent: number}) => string);
+  progressColor?: string | ProgressColorFunction;
   /**
    * The color of the ring background
    */
@@ -107,7 +109,7 @@ const ProgressRing = ({
   );
 
   const ringColor =
-    typeof progressColor === 'function' ? progressColor({percent}) : progressColor;
+    typeof progressColor === 'function' ? progressColor({percent, theme}) : progressColor;
 
   return (
     <svg height={radius * 2 + barWidth} width={radius * 2 + barWidth} {...p}>
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
index 230aa20fa1..0fd009fd85 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
@@ -14,7 +14,11 @@ import ScoreBar, {Bar} from 'app/components/scoreBar';
 import Tooltip from 'app/components/tooltip';
 
 import HealthStatsChart from './healthStatsChart';
-import {displayCrashFreePercent, convertAdoptionToProgress} from '../utils';
+import {
+  displayCrashFreePercent,
+  convertAdoptionToProgress,
+  getCrashFreePercentColor,
+} from '../utils';
 import HealthStatsSubject, {StatsSubject} from './healthStatsSubject';
 import HealthStatsPeriod, {StatsPeriod} from './healthStatsPeriod';
 import AdoptionTooltip from './adoptionTooltip';
@@ -105,7 +109,10 @@ const ReleaseHealth = ({release, location}: Props) => {
             <CrashFreeUsersColumn>
               {defined(crashFreeUsers) ? (
                 <React.Fragment>
-                  <StyledProgressRing value={crashFreeUsers} />
+                  <StyledProgressRing
+                    progressColor={getCrashFreePercentColor}
+                    value={crashFreeUsers}
+                  />
                   <ProgressRingCaption>
                     {displayCrashFreePercent(crashFreeUsers)}
                   </ProgressRingCaption>
@@ -118,7 +125,10 @@ const ReleaseHealth = ({release, location}: Props) => {
             <CrashFreeSessionsColumn>
               {defined(crashFreeSessions) ? (
                 <React.Fragment>
-                  <StyledProgressRing value={crashFreeSessions} />
+                  <StyledProgressRing
+                    progressColor={getCrashFreePercentColor}
+                    value={crashFreeSessions}
+                  />
                   <ProgressRingCaption>
                     {displayCrashFreePercent(crashFreeSessions)}
                   </ProgressRingCaption>
diff --git a/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
index 077075d0a0..f14b8ab6cd 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
@@ -1,5 +1,10 @@
 import round from 'lodash/round';
 
+import ProgressRing from 'app/components/progressRing';
+
+const CRASH_FREE_DANGER_THRESHOLD = 98;
+const CRASH_FREE_WARNING_THRESHOLD = 99.5;
+
 export const getCrashFreePercent = (
   percent: number,
   decimalThreshold = 95,
@@ -26,3 +31,16 @@ export const convertAdoptionToProgress = (
   percent: number,
   numberOfProgressUnits = 5
 ): number => Math.ceil((percent * numberOfProgressUnits) / 100);
+
+type ProgressRingColorFn = React.ComponentProps<typeof ProgressRing>['progressColor'];
+export const getCrashFreePercentColor: ProgressRingColorFn = ({percent, theme}) => {
+  if (percent < CRASH_FREE_DANGER_THRESHOLD) {
+    return theme.red;
+  }
+
+  if (percent < CRASH_FREE_WARNING_THRESHOLD) {
+    return theme.yellow;
+  }
+
+  return theme.green;
+};
