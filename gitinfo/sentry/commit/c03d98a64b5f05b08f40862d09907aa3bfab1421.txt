commit c03d98a64b5f05b08f40862d09907aa3bfab1421
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Mar 9 00:00:25 2016 +0100

    Added dsym.llvm-symbolizer-path and dsym.cache-path

diff --git a/src/sentry/lang/native/dsymcache.py b/src/sentry/lang/native/dsymcache.py
index 7cfaa2633d..0970067b58 100644
--- a/src/sentry/lang/native/dsymcache.py
+++ b/src/sentry/lang/native/dsymcache.py
@@ -3,7 +3,7 @@ import time
 import errno
 import shutil
 
-from django.conf import settings
+from sentry import options
 from sentry.models import find_dsym_file
 
 
@@ -13,14 +13,15 @@ ONE_DAY_AND_A_HALF = int(ONE_DAY * 1.5)
 
 class DSymCache(object):
 
-    def __init__(self):
-        pass
+    @property
+    def dsym_cache_path(self):
+        return options.get('dsym.cache-path')
 
     def get_project_path(self, project):
-        return os.path.join(settings.DSYM_CACHE_PATH, str(project.id))
+        return os.path.join(self.dsym_cache_path, str(project.id))
 
     def get_global_path(self):
-        return os.path.join(settings.DSYM_CACHE_PATH, 'global')
+        return os.path.join(self.dsym_cache_path, 'global')
 
     def fetch_dsyms(self, project, uuids):
         bases = set()
@@ -76,14 +77,14 @@ class DSymCache(object):
 
     def clear_old_entries(self):
         try:
-            cache_folders = os.listdir(settings.DSYM_CACHE_PATH)
+            cache_folders = os.listdir(self.dsym_cache_path)
         except OSError:
             pass
 
         cutoff = int(time.time()) - ONE_DAY_AND_A_HALF
 
         for cache_folder in cache_folders:
-            cache_folder = os.path.join(settings.DSYM_CACHE_PATH, cache_folder)
+            cache_folder = os.path.join(self.dsym_cache_path, cache_folder)
             try:
                 items = os.listdir(cache_folder)
             except OSError:
diff --git a/src/sentry/lang/native/symbolizer.py b/src/sentry/lang/native/symbolizer.py
index 42297248e8..61b9e45897 100644
--- a/src/sentry/lang/native/symbolizer.py
+++ b/src/sentry/lang/native/symbolizer.py
@@ -5,6 +5,7 @@ try:
 except ImportError:
     have_symsynd = False
 
+from sentry import options
 from sentry.lang.native.dsymcache import dsymcache
 
 
@@ -16,7 +17,7 @@ def make_symbolizer(project, binary_images, threads=None):
     if not have_symsynd:
         raise RuntimeError('symsynd is unavailable.  Install sentry with '
                            'the dsym feature flag.')
-    driver = Driver()
+    driver = Driver(options.get('dsym.llvm-symbolizer-path') or None)
 
     if threads is None:
         to_load = [x['uuid'] for x in binary_images]
diff --git a/src/sentry/options/defaults.py b/src/sentry/options/defaults.py
index 5eabf8b7d6..982e901be3 100644
--- a/src/sentry/options/defaults.py
+++ b/src/sentry/options/defaults.py
@@ -39,3 +39,7 @@ register('redis.options', type=Dict, flags=FLAG_NOSTORE)
 # Absolute URL to the sentry root directory. Should not include a trailing slash.
 register('system.url-prefix', ttl=60, grace=3600, flags=FLAG_REQUIRED | FLAG_PRIORITIZE_DISK)
 register('system.root-api-key', type=String)
+
+# symbolizer specifics
+register('dsym.llvm-symbolizer-path', type=String)
+register('dsym.cache-path', type=String, default='/tmp/sentry-dsym-cache')
