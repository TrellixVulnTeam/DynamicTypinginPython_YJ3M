commit 2cef08cc7eb97b64e69ec83af6d84bed4c26efbf
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Sep 1 11:20:38 2017 -0700

    style(eslint): enforce "object-shorthand" (#6019)

diff --git a/.eslintrc b/.eslintrc
index db536041fc..72e2b22082 100644
--- a/.eslintrc
+++ b/.eslintrc
@@ -154,6 +154,7 @@
       2,
       "never"
     ], // http://eslint.org/docs/rules/space-in-brackets.html
+    "object-shorthand": [2, "properties"], // https://eslint.org/docs/rules/object-shorthand
     "space-infix-ops": 2, // http://eslint.org/docs/rules/space-infix-ops.html
     "vars-on-top": 0, // http://eslint.org/docs/rules/vars-on-top
     "wrap-iife": [
diff --git a/src/sentry/static/sentry/app/actionCreators/incidents.jsx b/src/sentry/static/sentry/app/actionCreators/incidents.jsx
index c6d8c8c37f..0c46b71caa 100644
--- a/src/sentry/static/sentry/app/actionCreators/incidents.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/incidents.jsx
@@ -41,8 +41,8 @@ export function load() {
         let [incidents, indicator] = getIncidentsFromIncidentResponse(data.incidents);
         IncidentActions.updateSuccess({
           status: {
-            incidents: incidents,
-            indicator: indicator,
+            incidents,
+            indicator,
             url: data.page.url
           }
         });
diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 300baf4a04..5a7668d1fa 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -94,8 +94,8 @@ export class Client {
     this.activeRequests[id] = new Request(
       $.ajax({
         url: fullUrl,
-        method: method,
-        data: data,
+        method,
+        data,
         contentType: 'application/json',
         headers: {
           Accept: 'application/json; charset=utf-8'
@@ -140,7 +140,7 @@ export class Client {
     return this._wrapRequest(
       path,
       {
-        query: query,
+        query,
         method: 'DELETE',
         success: response => {
           GroupActions.deleteSuccess(id, params.itemIds, response);
@@ -163,7 +163,7 @@ export class Client {
     return this._wrapRequest(
       path,
       {
-        query: query,
+        query,
         method: 'PUT',
         data: params.data,
         success: response => {
@@ -187,7 +187,7 @@ export class Client {
     return this._wrapRequest(
       path,
       {
-        query: query,
+        query,
         method: 'PUT',
         data: {merge: 1},
         success: response => {
diff --git a/src/sentry/static/sentry/app/components/activity/item.jsx b/src/sentry/static/sentry/app/components/activity/item.jsx
index a4482009f3..7feb7834b5 100644
--- a/src/sentry/static/sentry/app/components/activity/item.jsx
+++ b/src/sentry/static/sentry/app/components/activity/item.jsx
@@ -56,15 +56,15 @@ const ActivityItem = React.createClass({
     let issue = item.issue;
 
     let issueLink = issue
-      ? <IssueLink orgId={orgId} projectId={project.slug} issue={issue}>
+      ? (<IssueLink orgId={orgId} projectId={project.slug} issue={issue}>
           {issue.shortId}
-        </IssueLink>
+        </IssueLink>)
       : null;
 
     switch (item.type) {
       case 'note':
         return tct('[author] commented on [issue]', {
-          author: author,
+          author,
           issue: (
             <Link
               to={`/${orgId}/${project.slug}/issues/${issue.id}/activity/#event_${item.id}`}>
@@ -74,18 +74,18 @@ const ActivityItem = React.createClass({
         });
       case 'set_resolved':
         return tct('[author] marked [issue] as resolved', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'set_resolved_by_age':
         return tct('[author] marked [issue] as resolved due to age', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'set_resolved_in_release':
         if (data.version) {
           return tct('[author] marked [issue] as resolved in [version]', {
-            author: author,
+            author,
             version: (
               <Version version={data.version} orgId={orgId} projectId={project.slug} />
             ),
@@ -93,12 +93,12 @@ const ActivityItem = React.createClass({
           });
         }
         return tct('[author] marked [issue] as resolved in the upcoming release', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'set_resolved_in_commit':
         return tct('[author] marked [issue] as fixed in [version]', {
-          author: author,
+          author,
           version: (
             <CommitLink
               inline={true}
@@ -110,13 +110,13 @@ const ActivityItem = React.createClass({
         });
       case 'set_unresolved':
         return tct('[author] marked [issue] as unresolved', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'set_ignored':
         if (data.ignoreDuration) {
           return tct('[author] ignored [issue] for [duration]', {
-            author: author,
+            author,
             duration: <Duration seconds={data.ignoreDuration * 60} />,
             issue: issueLink
           });
@@ -124,7 +124,7 @@ const ActivityItem = React.createClass({
           return tct(
             '[author] ignored [issue] until it happens [count] time(s) in [duration]',
             {
-              author: author,
+              author,
               count: data.ignoreCount,
               duration: <Duration seconds={data.ignoreWindow * 3600} />,
               issue: issueLink
@@ -132,7 +132,7 @@ const ActivityItem = React.createClass({
           );
         } else if (data.ignoreCount) {
           return tct('[author] ignored [issue] until it happens [count] time(s)', {
-            author: author,
+            author,
             count: data.ignoreCount,
             issue: issueLink
           });
@@ -140,7 +140,7 @@ const ActivityItem = React.createClass({
           return tct(
             '[author] ignored [issue] until it affects [count] user(s) in [duration]',
             {
-              author: author,
+              author,
               count: data.ignoreUserCount,
               duration: <Duration seconds={data.ignoreUserWindow * 3600} />,
               issue: issueLink
@@ -148,29 +148,29 @@ const ActivityItem = React.createClass({
           );
         } else if (data.ignoreUserCount) {
           return tct('[author] ignored [issue] until it affects [count] user(s)', {
-            author: author,
+            author,
             count: data.ignoreUserCount,
             issue: issueLink
           });
         }
         return tct('[author] ignored [issue]', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'set_public':
         return tct('[author] made an [issue] public', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'set_private':
         return tct('[author] made an [issue] private', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'set_regression':
         if (data.version) {
           return tct('[author] marked [issue] as a regression in [version]', {
-            author: author,
+            author,
             version: (
               <Version version={data.version} orgId={orgId} projectId={project.slug} />
             ),
@@ -178,12 +178,12 @@ const ActivityItem = React.createClass({
           });
         }
         return tct('[author] marked [issue] as a regression', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'create_issue':
         return tct('[author] linked [issue] on [provider]', {
-          author: author,
+          author,
           provider: data.provider,
           issue: issueLink
         });
@@ -202,57 +202,57 @@ const ActivityItem = React.createClass({
         );
       case 'first_seen':
         return tct('[author] saw [link:issue]', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'assigned':
         let assignee;
         if (item.user && data.assignee === item.user.id) {
           return tct('[author] assigned [issue] to themselves', {
-            author: author,
+            author,
             issue: issueLink
           });
         }
         assignee = MemberListStore.getById(data.assignee);
         if (assignee && assignee.email) {
           return tct('[author] assigned [issue] to [assignee]', {
-            author: author,
+            author,
             assignee: <span title={assignee.email}>{assignee.name}</span>,
             issue: issueLink
           });
         } else if (data.assigneeEmail) {
           return tct('[author] assigned [issue] to [assignee]', {
-            author: author,
+            author,
             assignee: data.assigneeEmail,
             issue: issueLink
           });
         }
         return tct('[author] assigned [issue] to an [help:unknown user]', {
-          author: author,
+          author,
           help: <span title={data.assignee} />,
           issue: issueLink
         });
       case 'unassigned':
         return tct('[author] unassigned [issue]', {
-          author: author,
+          author,
           issue: issueLink
         });
       case 'merge':
         return tct('[author] merged [count] [link:issues]', {
-          author: author,
+          author,
           count: data.issues.length + 1,
           link: <Link to={`/${orgId}/${project.slug}/issues/${issue.id}/`} />
         });
       case 'release':
         return tct('[author] released version [version]', {
-          author: author,
+          author,
           version: (
             <Version version={data.version} orgId={orgId} projectId={project.slug} />
           )
         });
       case 'deploy':
         return tct('[author] deployed version [version] to [environment].', {
-          author: author,
+          author,
           version: (
             <Version version={data.version} orgId={orgId} projectId={project.slug} />
           ),
@@ -278,7 +278,7 @@ const ActivityItem = React.createClass({
 
     let author = {
       name: item.user ? item.user.name : 'Sentry',
-      avatar: avatar
+      avatar
     };
 
     if (item.type === 'note') {
diff --git a/src/sentry/static/sentry/app/components/activity/noteInput.jsx b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
index 6b13948666..a93bfc6f3e 100644
--- a/src/sentry/static/sentry/app/components/activity/noteInput.jsx
+++ b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
@@ -60,9 +60,9 @@ const NoteInput = React.createClass({
       errorJSON: null,
       expanded: false,
       preview: false,
-      updating: updating,
+      updating,
       value: defaultText,
-      mentionsList: mentionsList,
+      mentionsList,
       mentions: []
     };
   },
@@ -125,7 +125,7 @@ const NoteInput = React.createClass({
       method: 'POST',
       data: {
         text: this.state.value,
-        mentions: mentions
+        mentions
       },
       error: error => {
         this.setState({
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index 3995e0c31c..7a42727c92 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -74,7 +74,7 @@ const AssigneeSelector = React.createClass({
       let group = GroupStore.get(this.props.id);
       this.setState({
         assignedTo: group.assignedTo,
-        loading: loading
+        loading
       });
     }
   },
@@ -116,7 +116,7 @@ const AssigneeSelector = React.createClass({
   },
 
   assignTo(member) {
-    this.api.assignTo({id: this.props.id, member: member});
+    this.api.assignTo({id: this.props.id, member});
     this.setState({filter: '', loading: true});
   },
 
diff --git a/src/sentry/static/sentry/app/components/avatarCropper.jsx b/src/sentry/static/sentry/app/components/avatarCropper.jsx
index 38b9b2c432..5dd35a1a79 100644
--- a/src/sentry/static/sentry/app/components/avatarCropper.jsx
+++ b/src/sentry/static/sentry/app/components/avatarCropper.jsx
@@ -45,7 +45,7 @@ const AvatarCropper = React.createClass({
     this.revokeObjectUrl();
     this.setState(
       {
-        file: file,
+        file,
         objectURL: window.URL.createObjectURL(file)
       },
       () => {
diff --git a/src/sentry/static/sentry/app/components/avatarSettings.jsx b/src/sentry/static/sentry/app/components/avatarSettings.jsx
index dae2de3c9b..48c08a2051 100644
--- a/src/sentry/static/sentry/app/components/avatarSettings.jsx
+++ b/src/sentry/static/sentry/app/components/avatarSettings.jsx
@@ -40,7 +40,7 @@ const AvatarSettings = React.createClass({
   },
 
   updateUserState(user) {
-    this.setState({user: user});
+    this.setState({user});
   },
 
   updateDataUrlState(dataUrlState) {
@@ -55,7 +55,7 @@ const AvatarSettings = React.createClass({
   },
 
   handleSuccess(user) {
-    this.setState({user: user});
+    this.setState({user});
     AlertActions.addAlert({
       message: t('Successfully saved avatar preferences'),
       type: 'success',
diff --git a/src/sentry/static/sentry/app/components/barChart.jsx b/src/sentry/static/sentry/app/components/barChart.jsx
index 0771f63bad..1a0e70622e 100644
--- a/src/sentry/static/sentry/app/components/barChart.jsx
+++ b/src/sentry/static/sentry/app/components/barChart.jsx
@@ -34,7 +34,7 @@ const BarChart = React.createClass({
     let points = this.props.points.map(point => {
       return {x: point.x, y: [point.y]};
     });
-    let props = Object.assign({}, this.props, {points: points});
+    let props = Object.assign({}, this.props, {points});
     return <StackedBarChart {...props} />;
   }
 });
diff --git a/src/sentry/static/sentry/app/components/commitAuthorStats.jsx b/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
index 4bd76b015c..0b1ed1b68c 100644
--- a/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
+++ b/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
@@ -90,7 +90,7 @@ const CommitAuthorStats = React.createClass({
       if (!_commitAuthors.hasOwnProperty(author.email)) {
         _commitAuthors[author.email] = {
           commitCount: 1,
-          author: author
+          author
         };
       } else {
         _commitAuthors[author.email].commitCount += 1;
diff --git a/src/sentry/static/sentry/app/components/compactIssue.jsx b/src/sentry/static/sentry/app/components/compactIssue.jsx
index 57fded026d..49b4101216 100644
--- a/src/sentry/static/sentry/app/components/compactIssue.jsx
+++ b/src/sentry/static/sentry/app/components/compactIssue.jsx
@@ -125,7 +125,7 @@ const CompactIssue = React.createClass({
     let id = this.props.id;
     let issue = GroupStore.get(id);
     this.setState({
-      issue: issue
+      issue
     });
   },
 
@@ -148,7 +148,7 @@ const CompactIssue = React.createClass({
         orgId: this.props.orgId,
         projectId: issue.project.slug,
         itemIds: [issue.id],
-        data: data
+        data
       },
       {
         complete: () => {
diff --git a/src/sentry/static/sentry/app/components/events/eventsPerHour.jsx b/src/sentry/static/sentry/app/components/events/eventsPerHour.jsx
index becd6824b7..ddf6a85156 100644
--- a/src/sentry/static/sentry/app/components/events/eventsPerHour.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventsPerHour.jsx
@@ -47,7 +47,7 @@ const EventsPerHour = React.createClass({
         this.STAT_OPTS.map(stat => {
           let deferred = $.Deferred();
           this.api.request(statEndpoint, {
-            query: Object.assign({stat: stat}, query),
+            query: Object.assign({stat}, query),
             success: deferred.resolve.bind(deferred),
             error: deferred.reject.bind(deferred)
           });
@@ -61,7 +61,7 @@ const EventsPerHour = React.createClass({
             rawOrgData[this.STAT_OPTS[i]] = arguments[i][0];
           }
           this.setState({
-            rawOrgData: rawOrgData,
+            rawOrgData,
             formattedData: this.formatData(rawOrgData)
           });
         }.bind(this)
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
index 48020de77e..99e8f49524 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
@@ -98,8 +98,8 @@ const BreadcrumbsInterface = React.createClass({
         level: 'error',
         category: moduleToCategory(module || null) || 'exception',
         data: {
-          type: type,
-          value: value
+          type,
+          value
         }
       };
     } else if (evt.message) {
@@ -107,7 +107,7 @@ const BreadcrumbsInterface = React.createClass({
       let level = levelTag && levelTag.value;
       crumb = {
         type: 'message',
-        level: level,
+        level,
         category: 'message',
         message: evt.message
       };
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/summaryLine.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/summaryLine.jsx
index 9489357876..d3c39ebc42 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/summaryLine.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/summaryLine.jsx
@@ -40,7 +40,7 @@ const SummaryLine = React.createClass({
     let hasOverflow = isOverflowing(this.domElement);
     if (hasOverflow !== this.state.hasOverflow) {
       this.setState({
-        hasOverflow: hasOverflow
+        hasOverflow
       });
     }
   },
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx b/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
index a7eab83071..1998cc1186 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
@@ -35,7 +35,7 @@ const CSPInterface = React.createClass({
 
     return {
       view: 'report',
-      data: data
+      data
     };
   },
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index 14f2997953..a292de6a38 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -396,7 +396,7 @@ const Frame = React.createClass({
       'leads-to-app': this.leadsToApp(),
       [this.getPlatform()]: true
     });
-    let props = {className: className};
+    let props = {className};
 
     let context = this.renderContext();
 
diff --git a/src/sentry/static/sentry/app/components/footer.jsx b/src/sentry/static/sentry/app/components/footer.jsx
index 2f306addb2..2b7ac5550b 100644
--- a/src/sentry/static/sentry/app/components/footer.jsx
+++ b/src/sentry/static/sentry/app/components/footer.jsx
@@ -13,7 +13,7 @@ const Footer = React.createClass({
     });
 
     return {
-      hooks: hooks
+      hooks
     };
   },
 
diff --git a/src/sentry/static/sentry/app/components/forms/apiForm.jsx b/src/sentry/static/sentry/app/components/forms/apiForm.jsx
index 86298fc35c..7002255021 100644
--- a/src/sentry/static/sentry/app/components/forms/apiForm.jsx
+++ b/src/sentry/static/sentry/app/components/forms/apiForm.jsx
@@ -41,7 +41,7 @@ export default class ApiForm extends Form {
         let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
         this.api.request(this.props.apiEndpoint, {
           method: this.props.apiMethod,
-          data: data,
+          data,
           success: result => {
             IndicatorStore.remove(loadingIndicator);
             this.onSubmitSuccess(result);
diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index 32e490fe92..bf5a12e730 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -85,7 +85,7 @@ export default class FormField extends React.Component {
     let form = (this.context || {}).form;
     this.setState(
       {
-        value: value
+        value
       },
       () => {
         this.props.onChange && this.props.onChange(this.coerceValue(this.state.value));
diff --git a/src/sentry/static/sentry/app/components/forms/genericField.jsx b/src/sentry/static/sentry/app/components/forms/genericField.jsx
index b5ea36d193..3b4c13d9ef 100644
--- a/src/sentry/static/sentry/app/components/forms/genericField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/genericField.jsx
@@ -22,7 +22,7 @@ class GenericField extends React.Component {
       onChange: this.props.onChange,
       label: config.label + (required ? '*' : ''),
       placeholder: config.placeholder,
-      required: required,
+      required,
       name: config.name,
       error: (this.props.formErrors || {})[config.name],
       disabled: config.readonly,
diff --git a/src/sentry/static/sentry/app/components/group/releaseChart.jsx b/src/sentry/static/sentry/app/components/group/releaseChart.jsx
index 60244f4dee..8987cc7049 100644
--- a/src/sentry/static/sentry/app/components/group/releaseChart.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseChart.jsx
@@ -40,8 +40,8 @@ const GroupReleaseChart = React.createClass({
     }
 
     return {
-      releasePoints: releasePoints,
-      envPoints: envPoints
+      releasePoints,
+      envPoints
     };
   },
 
diff --git a/src/sentry/static/sentry/app/components/group/releaseStats.jsx b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
index 792209be99..e83465357b 100644
--- a/src/sentry/static/sentry/app/components/group/releaseStats.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
@@ -68,7 +68,7 @@ const GroupReleaseStats = React.createClass({
       loading: true,
       error: false,
       data: null,
-      envList: envList,
+      envList,
       environment: selectedEnvironment || ''
     };
   },
@@ -112,11 +112,11 @@ const GroupReleaseStats = React.createClass({
 
     this.api.request(`/issues/${group.id}/environments/${env}/`, {
       query: {
-        until: until
+        until
       },
       success: data => {
         this.setState({
-          data: data,
+          data,
           loading: false,
           error: false
         });
diff --git a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
index 9ed8b35590..ece8eac2c3 100644
--- a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
+++ b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
@@ -76,7 +76,7 @@ const SuggestedOwners = React.createClass({
 
   assignTo(member) {
     if (member.id !== undefined) {
-      this.api.assignTo({id: this.props.event.groupID, member: member});
+      this.api.assignTo({id: this.props.event.groupID, member});
     }
   },
 
diff --git a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
index 8fa7fb01fa..bedf4a32af 100644
--- a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
+++ b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
@@ -62,7 +62,7 @@ const TagDistributionMeter = React.createClass({
     this.api.request(url, {
       success: (data, _, jqXHR) => {
         this.setState({
-          data: data,
+          data,
           error: false,
           loading: false
         });
diff --git a/src/sentry/static/sentry/app/components/groupList.jsx b/src/sentry/static/sentry/app/components/groupList.jsx
index 0ef36c8c44..574d8e0256 100644
--- a/src/sentry/static/sentry/app/components/groupList.jsx
+++ b/src/sentry/static/sentry/app/components/groupList.jsx
@@ -107,7 +107,7 @@ const GroupList = React.createClass({
     let groupIds = this._streamManager.getAllItems().map(item => item.id);
     if (!utils.valueIsEqual(groupIds, this.state.groupIds)) {
       this.setState({
-        groupIds: groupIds
+        groupIds
       });
     }
   },
diff --git a/src/sentry/static/sentry/app/components/internalStatChart.jsx b/src/sentry/static/sentry/app/components/internalStatChart.jsx
index efbc5f6b5a..43f560934f 100644
--- a/src/sentry/static/sentry/app/components/internalStatChart.jsx
+++ b/src/sentry/static/sentry/app/components/internalStatChart.jsx
@@ -63,7 +63,7 @@ export default React.createClass({
       },
       success: data => {
         this.setState({
-          data: data,
+          data,
           loading: false,
           error: false
         });
diff --git a/src/sentry/static/sentry/app/components/issueList.jsx b/src/sentry/static/sentry/app/components/issueList.jsx
index 59c40a7e20..9b0a6fce04 100644
--- a/src/sentry/static/sentry/app/components/issueList.jsx
+++ b/src/sentry/static/sentry/app/components/issueList.jsx
@@ -68,7 +68,7 @@ const IssueList = React.createClass({
       },
       success: (data, _, jqXHR) => {
         this.setState({
-          data: data,
+          data,
           loading: false,
           error: false,
           issueIds: data.map(item => item.id),
diff --git a/src/sentry/static/sentry/app/components/organizationIssueList.jsx b/src/sentry/static/sentry/app/components/organizationIssueList.jsx
index 56b2de1156..823de8de00 100644
--- a/src/sentry/static/sentry/app/components/organizationIssueList.jsx
+++ b/src/sentry/static/sentry/app/components/organizationIssueList.jsx
@@ -34,7 +34,7 @@ const OrganizationIssueList = React.createClass({
       ? location.query.status
       : 'unresolved';
     return {
-      status: status
+      status
     };
   },
 
diff --git a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
index e6e2b3b2c5..5e5bd74804 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
@@ -21,7 +21,7 @@ const HomeSidebar = React.createClass({
     });
 
     return {
-      hooks: hooks
+      hooks
     };
   },
 
diff --git a/src/sentry/static/sentry/app/components/pagination.jsx b/src/sentry/static/sentry/app/components/pagination.jsx
index 2639d3598d..707e9e605f 100644
--- a/src/sentry/static/sentry/app/components/pagination.jsx
+++ b/src/sentry/static/sentry/app/components/pagination.jsx
@@ -21,7 +21,7 @@ export default React.createClass({
       onCursor: (cursor, path, query) => {
         browserHistory.pushState(null, path, {
           ...query,
-          cursor: cursor
+          cursor
         });
       }
     };
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index b29f1d952d..da26a5ef0b 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -268,9 +268,9 @@ const ProjectSelector = React.createClass({
       });
     });
     return {
-      projectList: projectList,
-      activeTeam: activeTeam,
-      activeProject: activeProject
+      projectList,
+      activeTeam,
+      activeProject
     };
   },
 
diff --git a/src/sentry/static/sentry/app/components/resolutionBox.jsx b/src/sentry/static/sentry/app/components/resolutionBox.jsx
index 1485bc6de9..0cde04430b 100644
--- a/src/sentry/static/sentry/app/components/resolutionBox.jsx
+++ b/src/sentry/static/sentry/app/components/resolutionBox.jsx
@@ -16,21 +16,21 @@ export default React.createClass({
   renderReason() {
     let {params, statusDetails} = this.props;
     let actor = statusDetails.actor
-      ? <strong>
+      ? (<strong>
           <Avatar user={statusDetails.actor} size={20} className="avatar" />
           <span style={{marginLeft: 5}}>{statusDetails.actor.name}</span>
-        </strong>
+        </strong>)
       : null;
 
     if (statusDetails.inNextRelease && statusDetails.actor) {
       return tct('[actor] marked this issue as resolved in the upcoming release.', {
-        actor: actor
+        actor
       });
     } else if (statusDetails.inNextRelease) {
       return t('This issue has been marked as resolved in the upcoming release.');
     } else if (statusDetails.inRelease && statusDetails.actor) {
       return tct('[actor] marked this issue as resolved in version [version].', {
-        actor: actor,
+        actor,
         version: (
           <Version
             version={statusDetails.inRelease}
diff --git a/src/sentry/static/sentry/app/components/resultGrid.jsx b/src/sentry/static/sentry/app/components/resultGrid.jsx
index b83e934433..6c6ee5e32d 100644
--- a/src/sentry/static/sentry/app/components/resultGrid.jsx
+++ b/src/sentry/static/sentry/app/components/resultGrid.jsx
@@ -248,7 +248,7 @@ const ResultGrid = React.createClass({
     let location = this.props.location || {};
     let {query} = this.state;
     let targetQueryParams = jQuery.extend({}, location.query || {}, {
-      query: query,
+      query,
       cursor: ''
     });
 
diff --git a/src/sentry/static/sentry/app/components/stackedBarChart.jsx b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
index 31f070c2e2..7dc897116e 100644
--- a/src/sentry/static/sentry/app/components/stackedBarChart.jsx
+++ b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
@@ -85,7 +85,7 @@ const StackedBarChart = React.createClass({
           if (!series[yIdx]) {
             series[yIdx] = {data: []};
           }
-          series[yIdx].data.push({x: p.x, y: y});
+          series[yIdx].data.push({x: p.x, y});
         });
       });
       return series;
@@ -132,7 +132,7 @@ const StackedBarChart = React.createClass({
     }
 
     return {
-      series: series,
+      series,
       pointIndex: StackedBarChart.pointIndex(series),
       interval: StackedBarChart.getInterval(series)
     };
@@ -150,7 +150,7 @@ const StackedBarChart = React.createClass({
       }
 
       this.setState({
-        series: series,
+        series,
         pointIndex: StackedBarChart.pointIndex(series),
         interval: StackedBarChart.getInterval(series)
       });
diff --git a/src/sentry/static/sentry/app/components/stream/group.jsx b/src/sentry/static/sentry/app/components/stream/group.jsx
index 4c80c3993b..599087ceb4 100644
--- a/src/sentry/static/sentry/app/components/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/stream/group.jsx
@@ -65,7 +65,7 @@ const StreamGroup = React.createClass({
     let id = this.props.id;
     let data = GroupStore.get(id);
     this.setState({
-      data: data
+      data
     });
   },
 
diff --git a/src/sentry/static/sentry/app/components/stream/groupCheckBox.jsx b/src/sentry/static/sentry/app/components/stream/groupCheckBox.jsx
index abccc05cb7..ece88adb1b 100644
--- a/src/sentry/static/sentry/app/components/stream/groupCheckBox.jsx
+++ b/src/sentry/static/sentry/app/components/stream/groupCheckBox.jsx
@@ -34,7 +34,7 @@ const GroupCheckBox = React.createClass({
     let isSelected = SelectedGroupStore.isSelected(this.props.id);
     if (isSelected !== this.state.isSelected) {
       this.setState({
-        isSelected: isSelected
+        isSelected
       });
     }
   },
diff --git a/src/sentry/static/sentry/app/components/todos.jsx b/src/sentry/static/sentry/app/components/todos.jsx
index fb62abc780..001f1eb18a 100644
--- a/src/sentry/static/sentry/app/components/todos.jsx
+++ b/src/sentry/static/sentry/app/components/todos.jsx
@@ -264,7 +264,7 @@ const TodoList = React.createClass({
       }
       return task;
     });
-    this.setState({tasks: tasks});
+    this.setState({tasks});
   },
 
   skipTask(skipped_task) {
diff --git a/src/sentry/static/sentry/app/components/u2finterface.jsx b/src/sentry/static/sentry/app/components/u2finterface.jsx
index c8a52f035f..8e588f06ba 100644
--- a/src/sentry/static/sentry/app/components/u2finterface.jsx
+++ b/src/sentry/static/sentry/app/components/u2finterface.jsx
@@ -158,7 +158,7 @@ const U2fInterface = React.createClass({
                 {
                   p1: <p />,
                   p2: <p />,
-                  support: support
+                  support
                 }
               )
             }[deviceFailure]
diff --git a/src/sentry/static/sentry/app/plugins/components/issueActions.jsx b/src/sentry/static/sentry/app/plugins/components/issueActions.jsx
index c8e8bc5838..4bd0d37e05 100644
--- a/src/sentry/static/sentry/app/plugins/components/issueActions.jsx
+++ b/src/sentry/static/sentry/app/plugins/components/issueActions.jsx
@@ -103,7 +103,7 @@ class IssueActions extends PluginComponentBase {
               createFieldList: data,
               error: null,
               loading: false,
-              createFormData: createFormData
+              createFormData
             },
             this.onLoadSuccess
           );
@@ -122,7 +122,7 @@ class IssueActions extends PluginComponentBase {
               linkFieldList: data,
               error: null,
               loading: false,
-              linkFormData: linkFormData
+              linkFormData
             },
             this.onLoadSuccess
           );
diff --git a/src/sentry/static/sentry/app/plugins/components/settings.jsx b/src/sentry/static/sentry/app/plugins/components/settings.jsx
index 4027b53284..b49398045d 100644
--- a/src/sentry/static/sentry/app/plugins/components/settings.jsx
+++ b/src/sentry/static/sentry/app/plugins/components/settings.jsx
@@ -40,13 +40,13 @@ class PluginSettings extends PluginComponentBase {
     // upon changing a field, remove errors
     let errors = this.state.errors;
     delete errors[name];
-    this.setState({formData: formData, errors: errors});
+    this.setState({formData, errors});
   }
 
   onSubmit() {
     let repo = this.state.formData.repo;
     repo = repo && parseRepo(repo);
-    let parsedFormData = {...this.state.formData, repo: repo};
+    let parsedFormData = {...this.state.formData, repo};
     this.api.request(this.getPluginEndpoint(), {
       data: parsedFormData,
       method: 'PUT',
@@ -59,8 +59,8 @@ class PluginSettings extends PluginComponentBase {
         });
         this.setState({
           fieldList: data.config,
-          formData: formData,
-          initialData: initialData,
+          formData,
+          initialData,
           errors: {}
         });
       }),
@@ -94,8 +94,8 @@ class PluginSettings extends PluginComponentBase {
         this.setState(
           {
             fieldList: data.config,
-            formData: formData,
-            initialData: initialData
+            formData,
+            initialData
             // call this here to prevent FormState.READY from being
             // set before fieldList is
           },
diff --git a/src/sentry/static/sentry/app/plugins/index.jsx b/src/sentry/static/sentry/app/plugins/index.jsx
index 91b6724ecf..dfab46cb9a 100644
--- a/src/sentry/static/sentry/app/plugins/index.jsx
+++ b/src/sentry/static/sentry/app/plugins/index.jsx
@@ -9,15 +9,15 @@ const registry = new Registry();
 export {BasePlugin, registry, DefaultIssuePlugin};
 
 export default {
-  BaseContext: BaseContext,
-  BasePlugin: BasePlugin,
-  DefaultIssuePlugin: DefaultIssuePlugin,
+  BaseContext,
+  BasePlugin,
+  DefaultIssuePlugin,
 
   add: registry.add.bind(registry),
   addContext: function(id, component) {
     contexts[id] = component;
   },
-  contexts: contexts,
+  contexts,
   get: registry.get.bind(registry),
   isLoaded: registry.isLoaded.bind(registry),
   load: registry.load.bind(registry),
diff --git a/src/sentry/static/sentry/app/stores/indicatorStore.jsx b/src/sentry/static/sentry/app/stores/indicatorStore.jsx
index e4b4d22c81..9d1484f216 100644
--- a/src/sentry/static/sentry/app/stores/indicatorStore.jsx
+++ b/src/sentry/static/sentry/app/stores/indicatorStore.jsx
@@ -11,9 +11,9 @@ const IndicatorStore = Reflux.createStore({
 
     let indicator = {
       id: this.lastId++,
-      message: message,
-      type: type,
-      options: options
+      message,
+      type,
+      options
     };
 
     if (options.duration) {
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 789277d6e9..fe6ac358e7 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -267,30 +267,30 @@ export {parseLinkHeader, deviceNameMapper, Collection, PendingChangeQueue, Curso
 // backwards compatible default export for use w/ getsentry (exported
 // as a single object w/ function refs for consumption by getsentry)
 export default {
-  getQueryParams: getQueryParams,
-  sortArray: sortArray,
-  objectIsEmpty: objectIsEmpty,
-  trim: trim,
-  defined: defined,
-  nl2br: nl2br,
-  isUrl: isUrl,
-  escape: escape,
-  percent: percent,
-  urlize: urlize,
-  toTitleCase: toTitleCase,
-  arrayIsEqual: arrayIsEqual,
-  objectMatchesSubset: objectMatchesSubset,
-  compareArrays: compareArrays,
-  intcomma: intcomma,
-  modelsEqual: modelsEqual,
-  valueIsEqual: valueIsEqual,
-  parseLinkHeader: parseLinkHeader,
+  getQueryParams,
+  sortArray,
+  objectIsEmpty,
+  trim,
+  defined,
+  nl2br,
+  isUrl,
+  escape,
+  percent,
+  urlize,
+  toTitleCase,
+  arrayIsEqual,
+  objectMatchesSubset,
+  compareArrays,
+  intcomma,
+  modelsEqual,
+  valueIsEqual,
+  parseLinkHeader,
 
   // external imports
-  deviceNameMapper: deviceNameMapper,
-  objectToArray: objectToArray,
-  Collection: Collection,
-  PendingChangeQueue: PendingChangeQueue,
-  StreamManager: StreamManager,
-  CursorPoller: CursorPoller
+  deviceNameMapper,
+  objectToArray,
+  Collection,
+  PendingChangeQueue,
+  StreamManager,
+  CursorPoller
 };
diff --git a/src/sentry/static/sentry/app/views/adminLayout.jsx b/src/sentry/static/sentry/app/views/adminLayout.jsx
index c0d7768019..119229af75 100644
--- a/src/sentry/static/sentry/app/views/adminLayout.jsx
+++ b/src/sentry/static/sentry/app/views/adminLayout.jsx
@@ -16,7 +16,7 @@ export default React.createClass({
     });
 
     return {
-      hooksManage: hooksManage
+      hooksManage
     };
   },
 
diff --git a/src/sentry/static/sentry/app/views/apiApplicationDetails.jsx b/src/sentry/static/sentry/app/views/apiApplicationDetails.jsx
index 0500a243ed..7e236d6bc0 100644
--- a/src/sentry/static/sentry/app/views/apiApplicationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/apiApplicationDetails.jsx
@@ -75,7 +75,7 @@ const ApiApplicationDetails = React.createClass({
     let formData = this.state.formData;
     formData[name] = value;
     this.setState({
-      formData: formData
+      formData
     });
   },
 
diff --git a/src/sentry/static/sentry/app/views/asyncView.jsx b/src/sentry/static/sentry/app/views/asyncView.jsx
index d95819c5f9..dd4f1bbe27 100644
--- a/src/sentry/static/sentry/app/views/asyncView.jsx
+++ b/src/sentry/static/sentry/app/views/asyncView.jsx
@@ -71,7 +71,7 @@ class AsyncView extends React.Component {
     endpoints.forEach(([stateKey, endpoint, params]) => {
       this.api.request(endpoint, {
         method: 'GET',
-        params: params,
+        params,
         success: (data, _, jqXHR) => {
           this.setState(prevState => {
             return {
diff --git a/src/sentry/static/sentry/app/views/groupActivity/index.jsx b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
index 6f8bb937f9..fbfc1b7a26 100644
--- a/src/sentry/static/sentry/app/views/groupActivity/index.jsx
+++ b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
@@ -38,12 +38,12 @@ const GroupActivity = React.createClass({
         return t('%s marked this issue as resolved', author);
       case 'set_resolved_by_age':
         return t('%(author)s marked this issue as resolved due to inactivity', {
-          author: author
+          author
         });
       case 'set_resolved_in_release':
         return data.version
           ? t('%(author)s marked this issue as resolved in %(version)s', {
-              author: author,
+              author,
               version: (
                 <Version version={data.version} orgId={orgId} projectId={projectId} />
               )
@@ -51,7 +51,7 @@ const GroupActivity = React.createClass({
           : t('%s marked this issue as resolved in the upcoming release', author);
       case 'set_resolved_in_commit':
         return t('%(author)s marked this issue as fixed in %(version)s', {
-          author: author,
+          author,
           version: (
             <CommitLink
               inline={true}
@@ -65,35 +65,35 @@ const GroupActivity = React.createClass({
       case 'set_ignored':
         if (data.ignoreDuration) {
           return t('%(author)s ignored this issue for %(duration)s', {
-            author: author,
+            author,
             duration: <Duration seconds={data.ignoreDuration * 60} />
           });
         } else if (data.ignoreCount && data.ignoreWindow) {
           return tct(
             '[author] ignored this issue until it happens [count] time(s) in [duration]',
             {
-              author: author,
+              author,
               count: data.ignoreCount,
               duration: <Duration seconds={data.ignoreWindow * 3600} />
             }
           );
         } else if (data.ignoreCount) {
           return tct('[author] ignored this issue until it happens [count] time(s)', {
-            author: author,
+            author,
             count: data.ignoreCount
           });
         } else if (data.ignoreUserCount && data.ignoreUserWindow) {
           return tct(
             '[author] ignored this issue until it affects [count] user(s) in [duration]',
             {
-              author: author,
+              author,
               count: data.ignoreUserCount,
               duration: <Duration seconds={data.ignoreUserWindow * 3600} />
             }
           );
         } else if (data.ignoreUserCount) {
           return tct('[author] ignored this issue until it affects [count] user(s)', {
-            author: author,
+            author,
             count: data.ignoreUserCount
           });
         }
@@ -105,7 +105,7 @@ const GroupActivity = React.createClass({
       case 'set_regression':
         return data.version
           ? t('%(author)s marked this issue as a regression in %(version)s', {
-              author: author,
+              author,
               version: (
                 <Version version={data.version} orgId={orgId} projectId={projectId} />
               )
@@ -113,7 +113,7 @@ const GroupActivity = React.createClass({
           : t('%s marked this issue as a regression', author);
       case 'create_issue':
         return t('%(author)s created an issue on %(provider)s titled %(title)s', {
-          author: author,
+          author,
           provider: data.provider,
           title: <a href={data.location}>{data.title}</a>
         });
@@ -152,7 +152,7 @@ const GroupActivity = React.createClass({
           assignee = MemberListStore.getById(data.assignee);
           if (assignee && assignee.email) {
             return t('%(author)s assigned this event to %(assignee)s', {
-              author: author,
+              author,
               assignee: assignee.email
             });
           } else {
@@ -210,7 +210,7 @@ const GroupActivity = React.createClass({
 
       let author = {
         name: item.user ? item.user.name : 'Sentry',
-        avatar: avatar
+        avatar
       };
 
       if (item.type === 'note') {
diff --git a/src/sentry/static/sentry/app/views/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails.jsx
index 3f4b7c58f4..2b8d602c5f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails.jsx
@@ -113,7 +113,7 @@ const GroupDetails = React.createClass({
         this.setState({
           loading: false,
           error: true,
-          errorType: errorType
+          errorType
         });
       }
     });
@@ -129,7 +129,7 @@ const GroupDetails = React.createClass({
           return;
         }
         this.setState({
-          group: group
+          group
         });
       }
     }
@@ -188,7 +188,7 @@ const GroupDetails = React.createClass({
           />
           {React.cloneElement(this.props.children, {
             memberList: this.props.memberList,
-            group: group
+            group
           })}
         </div>
       </DocumentTitle>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index f8a6a786a0..b187de051e 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -39,7 +39,7 @@ const ResolveActions = React.createClass({
     });
     this.props.onUpdate({
       status: 'resolved',
-      statusDetails: statusDetails
+      statusDetails
     });
   },
 
@@ -447,7 +447,7 @@ export default React.createClass({
         orgId: org.slug,
         projectId: project.slug,
         itemIds: [group.id],
-        data: data
+        data
       },
       {
         complete: () => {
diff --git a/src/sentry/static/sentry/app/views/installWizard.jsx b/src/sentry/static/sentry/app/views/installWizard.jsx
index 9bd66f23a7..a6a9426e4b 100644
--- a/src/sentry/static/sentry/app/views/installWizard.jsx
+++ b/src/sentry/static/sentry/app/views/installWizard.jsx
@@ -59,9 +59,9 @@ const InstallWizardSettings = React.createClass({
     }
 
     return {
-      options: options,
+      options,
       required: requiredOptions,
-      fields: fields
+      fields
     };
   },
 
@@ -69,7 +69,7 @@ const InstallWizardSettings = React.createClass({
     let options = {...this.state.options};
     options[name].value = value;
     this.setState({
-      options: options
+      options
     });
   },
 
@@ -179,7 +179,7 @@ const InstallWizard = React.createClass({
 
     this.api.request('/internal/options/', {
       method: 'PUT',
-      data: data,
+      data,
       success: () => {
         this.setState({
           submitInProgress: false
diff --git a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
index 8e50612d59..755818e84d 100644
--- a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
@@ -41,7 +41,7 @@ const CreateProject = React.createClass({
       error: false,
       platform: '',
       projectName: '',
-      team: team,
+      team,
       inFlight: false
     };
   },
@@ -64,7 +64,7 @@ const CreateProject = React.createClass({
       method: 'POST',
       data: {
         name: projectName,
-        platform: platform
+        platform
       },
       success: data => {
         ProjectActions.createSuccess(data);
@@ -100,7 +100,7 @@ const CreateProject = React.createClass({
 
     const stepProps = {
       next: this.createProject,
-      platform: platform,
+      platform,
       setPlatform: p => {
         if (!projectName || (platform && getPlatformName(platform) === projectName)) {
           this.setState({projectName: getPlatformName(p)});
diff --git a/src/sentry/static/sentry/app/views/organizationContext.jsx b/src/sentry/static/sentry/app/views/organizationContext.jsx
index ed4af2cb9a..dd76e69b62 100644
--- a/src/sentry/static/sentry/app/views/organizationContext.jsx
+++ b/src/sentry/static/sentry/app/views/organizationContext.jsx
@@ -96,7 +96,7 @@ const OrganizationContext = React.createClass({
           loading: false,
           error: false,
           errorType: null,
-          hooks: hooks,
+          hooks,
           showBroadcast: this.shouldShowBroadcast(data)
         });
 
@@ -119,7 +119,7 @@ const OrganizationContext = React.createClass({
         this.setState({
           loading: false,
           error: true,
-          errorType: errorType
+          errorType
         });
       }
     });
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations.jsx
index 30cf2faf04..ddfaaf7e74 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations.jsx
@@ -45,7 +45,7 @@ const OrganizationIntegrations = React.createClass({
     this.api.request(`/organizations/${this.props.params.orgId}/integrations/`, {
       method: 'POST',
       data: {
-        providerId: providerId,
+        providerId,
         defaultAuthId: auth.defaultAuthId,
         integrationId: auth.integrationId
       },
@@ -56,7 +56,7 @@ const OrganizationIntegrations = React.createClass({
         });
         ingtegrationList.push(data);
         this.setState({
-          ingtegrationList: ingtegrationList
+          ingtegrationList
         });
       },
       error: err => {
diff --git a/src/sentry/static/sentry/app/views/organizationRepositories.jsx b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
index 2d3cd30304..fc73a314ba 100644
--- a/src/sentry/static/sentry/app/views/organizationRepositories.jsx
+++ b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
@@ -265,7 +265,7 @@ const OrganizationRepositories = React.createClass({
           }
         });
         this.setState({
-          itemList: itemList
+          itemList
         });
       },
       error: () => {
@@ -292,7 +292,7 @@ const OrganizationRepositories = React.createClass({
           }
         });
         this.setState({
-          itemList: itemList
+          itemList
         });
       },
       error: () => {
diff --git a/src/sentry/static/sentry/app/views/organizationSettings.jsx b/src/sentry/static/sentry/app/views/organizationSettings.jsx
index 476e49550a..e94cc4bc4f 100644
--- a/src/sentry/static/sentry/app/views/organizationSettings.jsx
+++ b/src/sentry/static/sentry/app/views/organizationSettings.jsx
@@ -61,7 +61,7 @@ const OrganizationSettingsForm = React.createClass({
     };
     this.setState({
       hasChanges: true,
-      formData: formData
+      formData
     });
   },
 
@@ -331,7 +331,7 @@ const OrganizationSettings = React.createClass({
       method: 'GET',
       success: data => {
         this.setState({
-          data: data,
+          data,
           loading: false
         });
       },
@@ -346,7 +346,7 @@ const OrganizationSettings = React.createClass({
 
   onSave(data) {
     // TODO(dcramer): this should propagate
-    this.setState({data: data});
+    this.setState({data});
     OrganizationStore.add(data);
   },
 
diff --git a/src/sentry/static/sentry/app/views/organizationStats/index.jsx b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
index fc391d6a3c..9bada126fc 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
@@ -92,7 +92,7 @@ const OrganizationStats = React.createClass({
 
         this.setState({
           pageLinks: jqxhr.getResponseHeader('Link'),
-          projectMap: projectMap,
+          projectMap,
           projectsRequestsPending: this.state.projectsRequestsPending
         });
       },
@@ -235,7 +235,7 @@ const OrganizationStats = React.createClass({
       });
     });
     this.setState({
-      projectTotals: projectTotals,
+      projectTotals,
       projectsLoading: false
     });
   },
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
index f01cfe6a27..666f9a32a2 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
@@ -79,7 +79,7 @@ const OrganizationTeams = React.createClass({
                 ? React.cloneElement(this.props.children, {
                     organization: org,
                     teamList: allTeams,
-                    access: access,
+                    access,
                     openMembership: features.has('open-membership') ||
                       access.has('org:write')
                   })
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/organizationStatOverview.jsx b/src/sentry/static/sentry/app/views/organizationTeams/organizationStatOverview.jsx
index f8c8c6ee1f..bf8db91cf3 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/organizationStatOverview.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/organizationStatOverview.jsx
@@ -47,7 +47,7 @@ const OrganizationStatOverview = React.createClass({
         data.forEach(point => {
           totalRejected += point[1];
         });
-        this.setState({totalRejected: totalRejected});
+        this.setState({totalRejected});
       }
     });
     this.api.request(statsEndpoint, {
@@ -65,7 +65,7 @@ const OrganizationStatOverview = React.createClass({
           }
         });
         let epm = received[1] ? parseInt(received[0] / received[1] / 60, 10) : 0;
-        this.setState({epm: epm});
+        this.setState({epm});
       }
     });
   },
diff --git a/src/sentry/static/sentry/app/views/projectCspSettings.jsx b/src/sentry/static/sentry/app/views/projectCspSettings.jsx
index de71ca57a4..c273914511 100644
--- a/src/sentry/static/sentry/app/views/projectCspSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectCspSettings.jsx
@@ -25,7 +25,7 @@ const ProjectCspSettingsForm = React.createClass({
       }
     }
     return {
-      formData: formData,
+      formData,
       errors: {}
     };
   },
@@ -34,7 +34,7 @@ const ProjectCspSettingsForm = React.createClass({
     let formData = this.state.formData;
     formData[name] = value;
     this.setState({
-      formData: formData
+      formData
     });
   },
 
@@ -166,7 +166,7 @@ const ProjectCspSettings = React.createClass({
       success: (data, _, jqXHR) => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           loading: expected > 0,
           keyList: data
         });
@@ -174,7 +174,7 @@ const ProjectCspSettings = React.createClass({
       error: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: true,
           loading: expected > 0
         });
@@ -185,7 +185,7 @@ const ProjectCspSettings = React.createClass({
       success: (data, _, jqXHR) => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           loading: expected > 0,
           projectOptions: data.options
         });
@@ -193,7 +193,7 @@ const ProjectCspSettings = React.createClass({
       error: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: true,
           loading: expected > 0
         });
diff --git a/src/sentry/static/sentry/app/views/projectDashboard.jsx b/src/sentry/static/sentry/app/views/projectDashboard.jsx
index 89aecd4772..b89cac0a84 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard.jsx
@@ -52,7 +52,7 @@ const ProjectDashboard = React.createClass({
     }
 
     return {
-      statsPeriod: statsPeriod
+      statsPeriod
     };
   },
 
diff --git a/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx b/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx
index 3d1739c75e..8d328d2eee 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx
@@ -56,7 +56,7 @@ const EventList = React.createClass({
     this.api.request(this.props.endpoint, {
       query: {
         limit: 5,
-        minutes: minutes
+        minutes
       },
       success: data => {
         this.setState({
diff --git a/src/sentry/static/sentry/app/views/projectDataForwarding.jsx b/src/sentry/static/sentry/app/views/projectDataForwarding.jsx
index ce297943b9..b0155b21a1 100644
--- a/src/sentry/static/sentry/app/views/projectDataForwarding.jsx
+++ b/src/sentry/static/sentry/app/views/projectDataForwarding.jsx
@@ -17,8 +17,8 @@ const DataForwardingStats = React.createClass({
     let since = until - 3600 * 24 * 30;
 
     return {
-      since: since,
-      until: until,
+      since,
+      until,
       loading: true,
       error: false,
       stats: null,
@@ -46,8 +46,8 @@ const DataForwardingStats = React.createClass({
           return {x: p[0], y: [p[1]]};
         });
         this.setState({
-          stats: stats,
-          emptyStats: emptyStats,
+          stats,
+          emptyStats,
           error: false,
           loading: false
         });
diff --git a/src/sentry/static/sentry/app/views/projectFilters.jsx b/src/sentry/static/sentry/app/views/projectFilters.jsx
index e533f7a830..ea01c5c872 100644
--- a/src/sentry/static/sentry/app/views/projectFilters.jsx
+++ b/src/sentry/static/sentry/app/views/projectFilters.jsx
@@ -235,7 +235,7 @@ const ProjectFiltersSettingsForm = React.createClass({
     }
     return {
       hasChanged: false,
-      formData: formData,
+      formData,
       errors: {}
     };
   },
@@ -407,7 +407,7 @@ const ProjectFilters = React.createClass({
       complete: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           loading: expected > 0
         });
       }
@@ -429,7 +429,7 @@ const ProjectFilters = React.createClass({
       complete: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           loading: expected > 0
         });
       }
@@ -445,7 +445,7 @@ const ProjectFilters = React.createClass({
       complete: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           loading: expected > 0
         });
       }
@@ -472,7 +472,7 @@ const ProjectFilters = React.createClass({
         blank = false;
       }
       return {
-        x: x,
+        x,
         y: [y]
       };
     });
@@ -492,13 +492,13 @@ const ProjectFilters = React.createClass({
 
     let data;
     if (typeof active === 'boolean') {
-      data = {active: active};
+      data = {active};
     } else {
       data = {subfilters: active};
     }
     this.api.request(endpoint, {
       method: 'PUT',
-      data: data,
+      data,
       success: (d, textStatus, jqXHR) => {
         let stateFilter = this.state.filterList.find(f => f.id === filter.id);
         stateFilter.active = active;
@@ -553,8 +553,8 @@ const ProjectFilters = React.createClass({
             let props = {
               key: filter.id,
               data: filter,
-              orgId: orgId,
-              projectId: projectId,
+              orgId,
+              projectId,
               onToggle: this.onToggleFilter
             };
             return filter.id === 'legacy-browsers'
diff --git a/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx b/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
index 1793029939..1426ebd112 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
@@ -35,7 +35,7 @@ const ProjectDocsContext = React.createClass({
       success: data => {
         this.setState({
           loading: false,
-          data: data
+          data
         });
       }
     });
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index 62300b918b..1f5a3e6655 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -46,8 +46,8 @@ const ProjectInstallPlatform = React.createClass({
     return {
       loading: true,
       error: false,
-      integration: integration,
-      platform: platform,
+      integration,
+      platform,
       html: null
     };
   },
diff --git a/src/sentry/static/sentry/app/views/projectKeyDetails.jsx b/src/sentry/static/sentry/app/views/projectKeyDetails.jsx
index 2dc0a2aeb7..b653b456ac 100644
--- a/src/sentry/static/sentry/app/views/projectKeyDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectKeyDetails.jsx
@@ -31,8 +31,8 @@ const KeyStats = React.createClass({
     let since = until - 3600 * 24 * 30;
 
     return {
-      since: since,
-      until: until,
+      since,
+      until,
       loading: true,
       error: false,
       stats: null,
@@ -62,8 +62,8 @@ const KeyStats = React.createClass({
           };
         });
         this.setState({
-          stats: stats,
-          emptyStats: emptyStats,
+          stats,
+          emptyStats,
           error: false,
           loading: false
         });
@@ -488,7 +488,7 @@ export default React.createClass({
         this.setState({
           error: false,
           loading: false,
-          data: data
+          data
         });
       },
       error: () => {
diff --git a/src/sentry/static/sentry/app/views/projectKeys.jsx b/src/sentry/static/sentry/app/views/projectKeys.jsx
index bdc9b1c3a3..6f2142fc91 100644
--- a/src/sentry/static/sentry/app/views/projectKeys.jsx
+++ b/src/sentry/static/sentry/app/views/projectKeys.jsx
@@ -238,7 +238,7 @@ export default React.createClass({
           key.isActive = newData.isActive;
         }
       });
-      return {keyList: keyList};
+      return {keyList};
     });
   },
 
diff --git a/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx b/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx
index 382f33b4e0..7196c86f81 100644
--- a/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx
+++ b/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx
@@ -54,7 +54,7 @@ const ProjectProcessingIssues = React.createClass({
     let formData = this.state.formData;
     formData[name] = !this.state.formData['sentry:reprocessing_active'];
     this.setState({
-      formData: formData
+      formData
     });
     this.switchReporcessing();
   },
@@ -68,7 +68,7 @@ const ProjectProcessingIssues = React.createClass({
       success: (data, _, jqXHR) => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           loading: expected > 0,
           formData: data.options
         });
@@ -76,7 +76,7 @@ const ProjectProcessingIssues = React.createClass({
       error: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: true,
           loading: expected > 0
         });
@@ -87,7 +87,7 @@ const ProjectProcessingIssues = React.createClass({
       success: (data, _, jqXHR) => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: false,
           loading: expected > 0,
           processingIssues: data,
@@ -97,7 +97,7 @@ const ProjectProcessingIssues = React.createClass({
       error: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: true,
           loading: expected > 0
         });
@@ -140,7 +140,7 @@ const ProjectProcessingIssues = React.createClass({
       success: (data, _, jqXHR) => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: false,
           loading: expected > 0
         });
@@ -150,7 +150,7 @@ const ProjectProcessingIssues = React.createClass({
       error: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: true,
           loading: expected > 0
         });
@@ -168,7 +168,7 @@ const ProjectProcessingIssues = React.createClass({
       success: (data, _, jqXHR) => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: false,
           loading: expected > 0
         });
@@ -178,7 +178,7 @@ const ProjectProcessingIssues = React.createClass({
       error: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: true,
           loading: expected > 0
         });
diff --git a/src/sentry/static/sentry/app/views/projectSavedSearches.jsx b/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
index 0c4b3862bd..5044294ac1 100644
--- a/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
+++ b/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
@@ -181,7 +181,7 @@ const ProjectSavedSearches = React.createClass({
       search.isDefault = data.id === search.id;
     });
     this.setState({
-      savedSearchList: savedSearchList
+      savedSearchList
     });
   },
 
@@ -191,7 +191,7 @@ const ProjectSavedSearches = React.createClass({
       search.isUserDefault = data.id === search.id;
     });
     this.setState({
-      savedSearchList: savedSearchList
+      savedSearchList
     });
   },
 
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index cf83541a69..62738a0143 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -164,7 +164,7 @@ const ProjectSettings = React.createClass({
         <div className="col-md-10">
           {React.cloneElement(this.props.children, {
             setProjectNavSection: this.props.setProjectNavSection,
-            project: project,
+            project,
             organization: this.context.organization
           })}
         </div>
diff --git a/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx b/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
index db83edb511..fccdd1a345 100644
--- a/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
@@ -25,7 +25,7 @@ const ProjectFeedbackSettingsForm = React.createClass({
       }
     }
     return {
-      formData: formData,
+      formData,
       errors: {}
     };
   },
@@ -34,7 +34,7 @@ const ProjectFeedbackSettingsForm = React.createClass({
     let formData = this.state.formData;
     formData[name] = value;
     this.setState({
-      formData: formData
+      formData
     });
   },
 
@@ -174,7 +174,7 @@ const ProjectUserReportSettings = React.createClass({
       success: (data, _, jqXHR) => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           loading: expected > 0,
           keyList: data
         });
@@ -183,7 +183,7 @@ const ProjectUserReportSettings = React.createClass({
         let expected = this.state.expected - 1;
         this.setState({
           error: true,
-          expected: expected,
+          expected,
           loading: expected > 0
         });
       }
@@ -193,7 +193,7 @@ const ProjectUserReportSettings = React.createClass({
       success: (data, _, jqXHR) => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           loading: expected > 0,
           projectOptions: data.options
         });
@@ -201,7 +201,7 @@ const ProjectUserReportSettings = React.createClass({
       error: () => {
         let expected = this.state.expected - 1;
         this.setState({
-          expected: expected,
+          expected,
           error: true,
           loading: expected > 0
         });
diff --git a/src/sentry/static/sentry/app/views/projectUserReports.jsx b/src/sentry/static/sentry/app/views/projectUserReports.jsx
index 8c7ae0ebe1..a1ef0a2434 100644
--- a/src/sentry/static/sentry/app/views/projectUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReports.jsx
@@ -61,8 +61,8 @@ const ProjectUserReports = React.createClass({
       ? location.query.query
       : this.props.defaultQuery;
     return {
-      query: query,
-      status: status
+      query,
+      status
     };
   },
 
diff --git a/src/sentry/static/sentry/app/views/releaseArtifacts.jsx b/src/sentry/static/sentry/app/views/releaseArtifacts.jsx
index 1d348d7d93..40ed564648 100644
--- a/src/sentry/static/sentry/app/views/releaseArtifacts.jsx
+++ b/src/sentry/static/sentry/app/views/releaseArtifacts.jsx
@@ -89,7 +89,7 @@ const ReleaseArtifacts = React.createClass({
         });
 
         this.setState({
-          fileList: fileList
+          fileList
         });
 
         IndicatorStore.add(t('Artifact removed.'), 'success', {
diff --git a/src/sentry/static/sentry/app/views/releaseDetails.jsx b/src/sentry/static/sentry/app/views/releaseDetails.jsx
index d3dc102f5e..8ebff0bfdb 100644
--- a/src/sentry/static/sentry/app/views/releaseDetails.jsx
+++ b/src/sentry/static/sentry/app/views/releaseDetails.jsx
@@ -184,7 +184,7 @@ const ReleaseDetails = React.createClass({
             </ul>
           </div>
           {React.cloneElement(this.props.children, {
-            release: release
+            release
           })}
         </div>
       </DocumentTitle>
diff --git a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
index 602cc24985..6f92c17b54 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
@@ -164,7 +164,7 @@ const ReleaseOverview = React.createClass({
               )}
               ref="issueList"
               showActions={false}
-              params={{orgId: orgId}}
+              params={{orgId}}
               className="m-b-2"
             />
             <h5>{t('New Issues in this Release')}</h5>
@@ -181,7 +181,7 @@ const ReleaseOverview = React.createClass({
               )}
               ref="issueList"
               showActions={false}
-              params={{orgId: orgId}}
+              params={{orgId}}
               className="m-b-2"
             />
             {hasRepos &&
diff --git a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
index f807613d8b..07a0658874 100644
--- a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
+++ b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
@@ -30,7 +30,7 @@ function getProjectInfoForReview(org) {
         projectName: project.name,
         isMember: team.isMember,
         requiresReview: false,
-        canReview: canReview,
+        canReview,
         teamName: team.name,
         callSign: project.callSign || null
       });
@@ -38,11 +38,11 @@ function getProjectInfoForReview(org) {
   }
 
   return {
-    memberProjects: memberProjects,
-    nonMemberProjects: nonMemberProjects,
+    memberProjects,
+    nonMemberProjects,
     projects: memberProjects.concat(nonMemberProjects),
-    requiresReview: requiresReview,
-    canReviewAnything: canReviewAnything,
+    requiresReview,
+    canReviewAnything,
     hasNonMemberProjects: nonMemberProjects.length > 0
   };
 }
@@ -104,8 +104,8 @@ const SetCallsignsAction = React.createClass({
     });
 
     this.setState({
-      info: info,
-      slugs: slugs,
+      info,
+      slugs,
       isLoading: false
     });
   },
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
index 1847d859d2..54a208221c 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
@@ -58,11 +58,11 @@ const RuleEditor = React.createClass({
     let frequency = $(ReactDOM.findDOMNode(this.refs.frequency)).val();
     let name = $(ReactDOM.findDOMNode(this.refs.name)).val();
     let data = {
-      actionMatch: actionMatch,
-      actions: actions,
-      conditions: conditions,
-      frequency: frequency,
-      name: name
+      actionMatch,
+      actions,
+      conditions,
+      frequency,
+      name
     };
     let rule = this.props.rule;
     let project = this.props.project;
@@ -75,7 +75,7 @@ const RuleEditor = React.createClass({
     let loadingIndicator = IndicatorStore.add('Saving...');
     this.api.request(endpoint, {
       method: rule.id ? 'PUT' : 'POST',
-      data: data,
+      data,
       success: () => {
         window.location.href = '../';
       },
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx b/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
index fd8cc50302..bf0be37937 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
@@ -18,7 +18,7 @@ const RuleNodeList = React.createClass({
 
     return {
       items: initialItems,
-      counter: counter
+      counter
     };
   },
 
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index 7c3db2ba02..6907f0360f 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -61,7 +61,7 @@ const Stream = React.createClass({
     return {
       groupIds: [],
       isDefaultSearch: null,
-      searchId: searchId,
+      searchId,
       // if we have no query then we can go ahead and fetch data
       loading: searchId || !this.hasQuery() ? true : false,
       savedSearchLoading: true,
@@ -252,7 +252,7 @@ const Stream = React.createClass({
     savedSearchList.push(data);
     // TODO(dcramer): sort
     this.setState({
-      savedSearchList: savedSearchList
+      savedSearchList
     });
     browserHistory.pushState(null, `/${orgId}/${projectId}/searches/${data.id}/`);
   },
@@ -280,10 +280,10 @@ const Stream = React.createClass({
     }
 
     let newState = {
-      sort: sort,
-      statsPeriod: statsPeriod,
+      sort,
+      statsPeriod,
       query: hasQuery ? currentQuery.query : '',
-      searchId: searchId,
+      searchId,
       isDefaultSearch: false
     };
 
@@ -456,7 +456,7 @@ const Stream = React.createClass({
     let groupIds = this._streamManager.getAllItems().map(item => item.id);
     if (!utils.valueIsEqual(groupIds, this.state.groupIds)) {
       this.setState({
-        groupIds: groupIds
+        groupIds
       });
     }
   },
@@ -475,7 +475,7 @@ const Stream = React.createClass({
     } else {
       this.setState(
         {
-          query: query,
+          query,
           searchId: null
         },
         this.transitionTo
@@ -486,7 +486,7 @@ const Stream = React.createClass({
   onSortChange(sort) {
     this.setState(
       {
-        sort: sort
+        sort
       },
       this.transitionTo
     );
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index 49038dfcf4..c7a3bc66bc 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -66,20 +66,20 @@ const IgnoreActions = React.createClass({
     let extraDescription = null;
     if (this.state.allInQuerySelected) {
       extraDescription = this.props.query
-        ? <div>
+        ? (<div>
             <p>{t('This will apply to the current search query:')}</p>
             <pre>{this.props.query}</pre>
-          </div>
-        : <p className="error">
+          </div>)
+        : (<p className="error">
             <strong>{t('This will apply to ALL issues in this project!')}</strong>
-          </p>;
+          </p>);
     }
     let linkClassName = 'group-ignore btn btn-default btn-sm';
     let actionLinkProps = {
       onlyIfBulk: true,
       disabled: !this.props.anySelected,
       selectAllActive: this.props.pageSelected,
-      extraDescription: extraDescription,
+      extraDescription,
       buttonTitle: t('Ignore'),
       confirmationQuestion: this.state.allInQuerySelected
         ? t('Are you sure you want to ignore all issues matching this search query?')
@@ -276,7 +276,7 @@ const ResolveActions = React.createClass({
     });
     this.props.onUpdate({
       status: 'resolved',
-      statusDetails: statusDetails
+      statusDetails
     });
   },
 
@@ -285,20 +285,20 @@ const ResolveActions = React.createClass({
     let extraDescription = null;
     if (this.state.allInQuerySelected) {
       extraDescription = this.props.query
-        ? <div>
+        ? (<div>
             <p>{t('This will apply to the current search query:')}</p>
             <pre>{this.props.query}</pre>
-          </div>
-        : <p className="error">
+          </div>)
+        : (<p className="error">
             <strong>{t('This will apply to ALL issues in this project!')}</strong>
-          </p>;
+          </p>);
     }
     let linkClassName = 'group-resolve btn btn-default btn-sm';
     let actionLinkProps = {
       onlyIfBulk: true,
       disabled: !this.props.anySelected,
       selectAllActive: this.props.pageSelected,
-      extraDescription: extraDescription,
+      extraDescription,
       buttonTitle: t('Resolve'),
       confirmationQuestion: this.state.allInQuerySelected
         ? t('Are you sure you want to resolve all issues matching this search query?')
@@ -462,8 +462,8 @@ const StreamActions = React.createClass({
         {
           orgId: this.props.orgId,
           projectId: this.props.projectId,
-          itemIds: itemIds,
-          data: data,
+          itemIds,
+          data,
           query: this.props.query
         },
         {
@@ -483,7 +483,7 @@ const StreamActions = React.createClass({
         {
           orgId: this.props.orgId,
           projectId: this.props.projectId,
-          itemIds: itemIds,
+          itemIds,
           query: this.props.query
         },
         {
@@ -503,7 +503,7 @@ const StreamActions = React.createClass({
         {
           orgId: this.props.orgId,
           projectId: this.props.projectId,
-          itemIds: itemIds,
+          itemIds,
           query: this.props.query
         },
         {
@@ -538,13 +538,13 @@ const StreamActions = React.createClass({
     let extraDescription = null;
     if (this.state.allInQuerySelected) {
       extraDescription = this.props.query
-        ? <div>
+        ? (<div>
             <p>{t('This will apply to the current search query:')}</p>
             <pre>{this.props.query}</pre>
-          </div>
-        : <p className="error">
+          </div>)
+        : (<p className="error">
             <strong>{t('This will apply to ALL issues in this project!')}</strong>
-          </p>;
+          </p>);
     }
 
     return (
diff --git a/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx b/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
index 27514c4b33..45e251853c 100644
--- a/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
+++ b/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
@@ -54,7 +54,7 @@ const SaveSearchButton = React.createClass({
     let formData = this.state.formData;
     formData[name] = value;
     this.setState({
-      formData: formData
+      formData
     });
   },
 
@@ -95,7 +95,7 @@ const SaveSearchButton = React.createClass({
             errors = errors.detail || true;
             this.setState({
               state: FormState.ERROR,
-              errors: errors
+              errors
             });
           },
           complete: () => {
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 973c0f2f03..6cf532682b 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -198,7 +198,7 @@ const SearchBar = React.createClass({
     let {orgId, projectId} = this.props;
     this.api.request(`/projects/${orgId}/${projectId}/tags/${tag.key}/values/`, {
       data: {
-        query: query
+        query
       },
       method: 'GET',
       success: values => {
@@ -419,7 +419,7 @@ const SearchBar = React.createClass({
   onMemberListStoreChange(members) {
     this.setState(
       {
-        members: members
+        members
       },
       this.updateAutoCompleteItems
     );
diff --git a/src/sentry/static/sentry/app/views/stream/sidebar.jsx b/src/sentry/static/sentry/app/views/stream/sidebar.jsx
index a22e76cb88..0d7dd13c42 100644
--- a/src/sentry/static/sentry/app/views/stream/sidebar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/sidebar.jsx
@@ -31,7 +31,7 @@ const StreamSidebar = React.createClass({
   getInitialState() {
     let queryObj = queryToObj(this.props.query);
     return {
-      queryObj: queryObj,
+      queryObj,
       textFilter: queryObj.__text
     };
   },
@@ -44,7 +44,7 @@ const StreamSidebar = React.createClass({
     if (!_.isEqual(nextProps.query, query)) {
       let queryObj = queryToObj(nextProps.query);
       this.setState({
-        queryObj: queryObj,
+        queryObj,
         textFilter: queryObj.__text
       });
     }
diff --git a/src/sentry/static/sentry/app/views/teamDetails.jsx b/src/sentry/static/sentry/app/views/teamDetails.jsx
index c5e0fa0087..683e2f592a 100644
--- a/src/sentry/static/sentry/app/views/teamDetails.jsx
+++ b/src/sentry/static/sentry/app/views/teamDetails.jsx
@@ -104,7 +104,7 @@ const TeamDetails = React.createClass({
         </ul>
 
         {React.cloneElement(this.props.children, {
-          team: team,
+          team,
           onTeamChange: this.onTeamChange
         })}
       </OrganizationHomeContainer>
