commit 3a4a27be87fd6cd5bdc11062783bcf514fb6a3e3
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu May 26 10:55:56 2016 -0700

    Fix various issues with docs (#3344)

diff --git a/docs/inbound-mail.rst b/docs/inbound-mail.rst
index 4d8627fbfa..1b521a54cf 100644
--- a/docs/inbound-mail.rst
+++ b/docs/inbound-mail.rst
@@ -49,8 +49,6 @@ That's it! You'll now be able to respond to activity notifications on
 errors via your email client.
 
 
-.. _nginx-mail:
-
 Inbound Email via Nginx
 -----------------------
 
diff --git a/docs/installation.rst b/docs/installation.rst
index 7bd0523c01..290017e63a 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -436,18 +436,20 @@ go.
   stderr_logfile=syslog
 
 Configure ``systemd``
-~~~~~~~~~~~~~~~~~~~~~~~~~
+~~~~~~~~~~~~~~~~~~~~~
 
 Configuring systemd requires three files, one for each service. On Ubuntu 16.04, the files are located in ``/etc/systemd/system``. Create three files named ``sentry-web.service``, ``sentry-worker.service`` and ``sentry-cron.service`` with the contents listed below.
 
 **sentry-web.service**
+
 ::
+
   [Unit]
   Description=Sentry Main Service
   After=network.target
   Requires=sentry-worker.service
   Requires=sentry-cron.service
-  
+
   [Service]
   Type=simple
   User=sentry
@@ -457,11 +459,13 @@ Configuring systemd requires three files, one for each service. On Ubuntu 16.04,
   ExecStart=/www/sentry/bin/sentry run web
 
 **sentry-worker.service**
+
 ::
+
   [Unit]
   Description=Sentry Background Worker
   After=network.target
-  
+
   [Service]
   Type=simple
   User=sentry
@@ -471,11 +475,13 @@ Configuring systemd requires three files, one for each service. On Ubuntu 16.04,
   ExecStart=/www/sentry/bin/sentry celery worker
 
 **sentry-cron.service**
+
 ::
+
   [Unit]
   Description=Sentry Beat Service
   After=network.target
-  
+
   [Service]
   Type=simple
   User=sentry
diff --git a/docs/nodestore.rst b/docs/nodestore.rst
index 74c64110af..5684196afe 100644
--- a/docs/nodestore.rst
+++ b/docs/nodestore.rst
@@ -63,7 +63,7 @@ Riak.
 The Sentry Cassandra backend only operates over the native CQL interface,
 so requires Cassandra 1.2+.
 
-.. code-block:: python
+.. code-block:: sql
 
     CREATE KEYSPACE sentry WITH replication = {
       'class': 'SimpleStrategy',
diff --git a/docs/performance.rst b/docs/performance.rst
index 0c53ca8d56..62e87e840b 100644
--- a/docs/performance.rst
+++ b/docs/performance.rst
@@ -19,8 +19,6 @@ configurations:
 - Set ``maxmemory 1gb`` to a reasonable allowance.
 
 
-.. _performance-web-server:
-
 Web Server
 ----------
 
@@ -101,17 +99,17 @@ this will alleviate lock contention and improve overall throughput.
 
 e.g. if you had something like:
 
-```
-numprocs=1
-command=sentry celery worker -c 64
-```
+::
+
+    numprocs=1
+    command=sentry celery worker -c 64
 
 change it to:
 
-```
-numprocs=16
-command=sentry celery worker -c 4
-```
+::
+
+    numprocs=16
+    command=sentry celery worker -c 4
 
 
 Monitoring Memory
diff --git a/docs/throttling.rst b/docs/throttling.rst
index 78f13d1dcc..3cfccb86bd 100644
--- a/docs/throttling.rst
+++ b/docs/throttling.rst
@@ -35,9 +35,9 @@ different cluster, provide the ``cluster`` option, as such:
 
 You can also configure the system-wide maximum per-minute rate limit:
 
-.. code-block:: python
+.. code-block:: yaml
 
-   system.rate-limit = 500
+   system.rate-limit: 500
 
 If you have additional needs, you're freely available to extend the base
 Quota class just as the Redis implementation does.
