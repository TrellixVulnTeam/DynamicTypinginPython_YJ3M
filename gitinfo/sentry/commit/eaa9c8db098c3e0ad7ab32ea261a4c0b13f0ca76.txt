commit eaa9c8db098c3e0ad7ab32ea261a4c0b13f0ca76
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Thu Jun 20 14:02:10 2019 -0700

    fix(issue-search): return of the clear button, icon consistency, small viewport solutions (#13677)
    
    * improve icons
    
    * padding right for last item
    
    * add clear button back
    
    * early ellipsis
    
    * use filled ellipsis icon as the outline one looks weird at small sizes
    
    * working ellipsis menu
    
    * move create saved search button into ellipsis menu instead of pin
    
    * alter order
    
    * move all three in
    
    * improve menu
    
    * fix test
    
    * linter
    
    * add a default button for saved search tests
    
    * pass in button classname rather than render prop
    
    * use translations
    
    * tooltipOptions
    
    * translation
    
    * fix some bugs
    
    * svgo on icon-sliders
    
    * linter

diff --git a/src/sentry/static/sentry/app/components/button.jsx b/src/sentry/static/sentry/app/components/button.jsx
index 5f24fc1c5a..2190bbdcd7 100644
--- a/src/sentry/static/sentry/app/components/button.jsx
+++ b/src/sentry/static/sentry/app/components/button.jsx
@@ -44,6 +44,10 @@ class Button extends React.Component {
      * `children` will be used by default (only if it is a string), but this property takes priority.
      */
     label: PropTypes.string,
+    /**
+     * Passed down to built-in tooltip component
+     */
+    tooltipProps: PropTypes.object,
 
     onClick: PropTypes.func,
   };
@@ -88,6 +92,7 @@ class Button extends React.Component {
       borderless,
       priority,
       disabled,
+      tooltipProps,
 
       // destructure from `buttonProps`
       // not necessary, but just in case someone re-orders props
@@ -132,7 +137,11 @@ class Button extends React.Component {
 
     // Doing this instead of using `Tooltip`'s `disabled` prop so that we can minimize snapshot nesting
     if (title) {
-      return <Tooltip title={title}>{button}</Tooltip>;
+      return (
+        <Tooltip {...tooltipProps} title={title}>
+          {button}
+        </Tooltip>
+      );
     }
 
     return button;
diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
index 3aa2776abc..504803495c 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
@@ -6,7 +6,7 @@ import * as Sentry from '@sentry/browser';
 import _ from 'lodash';
 import classNames from 'classnames';
 import createReactClass from 'create-react-class';
-import styled from 'react-emotion';
+import styled, {css} from 'react-emotion';
 
 import {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'app/constants';
 import {analytics} from 'app/utils/analytics';
@@ -21,9 +21,11 @@ import {t} from 'app/locale';
 import Button from 'app/components/button';
 import CreateSavedSearchButton from 'app/views/organizationStream/createSavedSearchButton';
 import InlineSvg from 'app/components/inlineSvg';
+import DropdownLink from 'app/components/dropdownLink';
 import MemberListStore from 'app/stores/memberListStore';
 import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
+import theme from 'app/utils/theme';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 
@@ -45,6 +47,59 @@ export function removeSpace(query = '') {
   }
 }
 
+const getMediaQuery = (size, type) => `
+  display: ${type};
+
+  @media (min-width: ${size}) {
+    display: ${type === 'none' ? 'block' : 'none'};
+  }
+`;
+
+const getInputButtonStyles = p => css`
+  color: ${p.isActive ? theme.blueLight : theme.gray2};
+  margin-left: ${space(0.5)};
+  width: 18px;
+
+  &,
+  &:hover,
+  &:focus {
+    background: transparent;
+  }
+
+  &:hover {
+    color: ${theme.gray3};
+  }
+
+  ${p.collapseIntoEllipsisMenu &&
+    getMediaQuery(theme.breakpoints[p.collapseIntoEllipsisMenu], 'none')};
+`;
+
+const getDropdownElementStyles = p => css`
+  padding: 0 ${space(1)} ${p.last ? null : space(0.5)};
+  margin-bottom: ${p.last ? null : space(0.5)};
+  display: none;
+  color: ${theme.gray4};
+  align-items: center;
+  min-width: 190px;
+  height: 38px;
+  padding-left: ${space(1.5)};
+  padding-right: ${space(1.5)};
+
+  &,
+  &:hover,
+  &:focus {
+    border-bottom: ${p.last ? null : `1px solid ${theme.gray1}`};
+    border-radius: 0;
+  }
+
+  &:hover {
+    color: ${theme.blueDark};
+  }
+
+  ${p.showBelowMediaQuery &&
+    getMediaQuery(theme.breakpoints[p.showBelowMediaQuery], 'flex')}
+`;
+
 class SmartSearchBar extends React.Component {
   static propTypes = {
     api: PropTypes.object,
@@ -766,30 +821,99 @@ class SmartSearchBar extends React.Component {
             )}
           </StyledForm>
           <ButtonBar>
-            <CreateSavedSearchButton
-              query={this.state.query}
-              organization={organization}
-              disabled={!hasQuery}
-            />
-            <Button
+            {this.state.query !== '' && (
+              <InputButton
+                type="button"
+                title={t('Clear search')}
+                borderless
+                aria-label="Clear search"
+                size="zero"
+                tooltipProps={{
+                  containerDisplayMode: 'inline-flex',
+                }}
+                onClick={this.clearSearch}
+              >
+                <InlineSvg src="icon-close" size="11" />
+              </InputButton>
+            )}
+            <InputButton
               type="button"
               title={pinTooltip}
               borderless
               disabled={!hasQuery}
               aria-label={pinTooltip}
               size="zero"
+              tooltipProps={{
+                containerDisplayMode: 'inline-flex',
+              }}
               onClick={this.onTogglePinnedSearch}
+              collapseIntoEllipsisMenu={1}
+              isActive={!!pinnedSearch}
             >
-              <PinIcon isPinned={!!pinnedSearch} src={pinIconSrc} />
-            </Button>
-            <SidebarButton
+              <InlineSvg src={pinIconSrc} />
+            </InputButton>
+            <CreateSavedSearchButton
+              query={this.state.query}
+              organization={organization}
+              disabled={!hasQuery}
+              withTooltip={true}
+              iconOnly={true}
+              buttonClassName={getInputButtonStyles({
+                collapseIntoEllipsisMenu: 2,
+              })}
+            />
+            <SearchBuilderButton
               title={t('Toggle search builder')}
               borderless
               size="zero"
+              tooltipProps={{
+                containerDisplayMode: 'inline-flex',
+              }}
+              collapseIntoEllipsisMenu={2}
               aria-label={t('Toggle search builder')}
-              icon="icon-sliders"
               onClick={onSidebarToggle}
-            />
+            >
+              <InlineSvg src="icon-sliders" size="13" />
+            </SearchBuilderButton>
+            <StyledDropdownLink
+              anchorRight={true}
+              caret={false}
+              title={
+                <EllipsisButton
+                  size="zero"
+                  borderless
+                  tooltipProps={{
+                    containerDisplayMode: 'flex',
+                  }}
+                  type="button"
+                  aria-label={t('Show more')}
+                >
+                  <EllipsisIcon src="icon-ellipsis-filled" />
+                </EllipsisButton>
+              }
+            >
+              <DropdownElement
+                showBelowMediaQuery={1}
+                data-test-id="pin-icon"
+                onClick={this.onTogglePinnedSearch}
+              >
+                <MenuIcon src={pinIconSrc} size="13" />
+                {!!pinnedSearch ? 'Unpin Search' : 'Pin Search'}
+              </DropdownElement>
+              <CreateSavedSearchButton
+                query={this.state.query}
+                organization={organization}
+                disabled={!hasQuery}
+                buttonClassName={getDropdownElementStyles({
+                  showBelowMediaQuery: 2,
+                  last: false,
+                })}
+              />
+              <DropdownElement showBelowMediaQuery={2} last onClick={onSidebarToggle}>
+                <MenuIcon src="icon-sliders" size="12" />
+                Toggle sidebar
+              </DropdownElement>
+            </StyledDropdownLink>
           </ButtonBar>
         </Container>
       );
@@ -868,13 +992,6 @@ const SmartSearchBarContainer = withApi(
   )
 );
 
-const PinIcon = styled(InlineSvg)`
-  color: ${p => (p.isPinned ? p.theme.blueLight : p.theme.gray2)};
-  &:hover {
-    color: ${p => p.theme.gray3};
-  }
-`;
-
 const Container = styled('div')`
   border: 1px solid ${p => p.theme.borderLight};
   border-radius: ${p =>
@@ -899,19 +1016,9 @@ const Container = styled('div')`
 
 const ButtonBar = styled('div')`
   display: flex;
-  padding-top: 9px;
   justify-content: flex-end;
   margin-right: ${space(1)};
-
-  button {
-    margin-left: ${space(0.5)};
-    width: 18px;
-
-    background: transparent;
-    &:hover {
-      background: transparent;
-    }
-  }
+  align-items: center;
 `;
 
 const DropdownWrapper = styled('div')`
@@ -947,18 +1054,42 @@ const StyledInput = styled('input')`
   }
 `;
 
-const SidebarButton = styled(Button)`
-  & svg {
-    color: ${p => p.theme.gray2};
-  }
-  &:hover svg {
-    color: ${p => p.theme.gray3};
-  }
-  .show-sidebar & svg {
-    color: ${p => p.theme.blueLight};
+const InputButton = styled(Button)`
+  ${p => getInputButtonStyles(p)}
+`;
+
+const SearchBuilderButton = styled(InputButton)`
+  margin-left: ${space(0.25)};
+  margin-right: ${space(0.5)};
+`;
+
+const StyledDropdownLink = styled(DropdownLink)`
+  display: none;
+
+  @media (max-width: ${p => p.theme.breakpoints[2]}) {
+    display: flex;
   }
 `;
 
+const DropdownElement = styled('a')`
+  ${p => getDropdownElementStyles(p)}
+`;
+
+const MenuIcon = styled(InlineSvg)`
+  margin-right: ${space(1)};
+`;
+
+const EllipsisButton = styled(InputButton)`
+  /* this is necessary because DropdownLink wraps the button in an unstyled span */
+  margin: 6px 0 0 0;
+`;
+
+const EllipsisIcon = styled(InlineSvg)`
+  width: 12px;
+  height: 12px;
+  transform: rotate(90deg);
+`;
+
 function getTitleForType(type) {
   if (type === 'tag-value') {
     return t('Tag Values');
diff --git a/src/sentry/static/sentry/app/components/tooltip.jsx b/src/sentry/static/sentry/app/components/tooltip.jsx
index 535005fdc0..f7faf19f67 100644
--- a/src/sentry/static/sentry/app/components/tooltip.jsx
+++ b/src/sentry/static/sentry/app/components/tooltip.jsx
@@ -42,7 +42,12 @@ class Tooltip extends React.Component {
     /**
      * Display mode for the container element
      */
-    containerDisplayMode: PropTypes.oneOf(['block', 'inline-block', 'inline']),
+    containerDisplayMode: PropTypes.oneOf([
+      'block',
+      'inline-block',
+      'inline',
+      'inline-flex',
+    ]),
 
     /**
      * Time to wait (in milliseconds) before showing the tooltip
diff --git a/src/sentry/static/sentry/app/icons/icon-ellipsis-filled.svg b/src/sentry/static/sentry/app/icons/icon-ellipsis-filled.svg
new file mode 100644
index 0000000000..c5b6c9f418
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-ellipsis-filled.svg
@@ -0,0 +1 @@
+<svg width="24" height="24" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="4" cy="12" r="2" fill="currentColor"/><circle cx="12" cy="12" r="2" fill="currentColor"/><circle cx="20" cy="12" r="2" fill="currentColor"/></svg>
diff --git a/src/sentry/static/sentry/app/icons/icon-sliders.svg b/src/sentry/static/sentry/app/icons/icon-sliders.svg
index d94ee3a49f..07dbdeacdf 100644
--- a/src/sentry/static/sentry/app/icons/icon-sliders.svg
+++ b/src/sentry/static/sentry/app/icons/icon-sliders.svg
@@ -1 +1 @@
-<svg width="13" height="12" xmlns="http://www.w3.org/2000/svg"><g transform="translate(1 1)" stroke="currentColor" stroke-width="1.6" fill="none" fill-rule="evenodd"><path d="M0 1.667h1.833m3.668 0H11M0 8.333h5.5m3.667 0H11" stroke-opacity=".502" stroke-linecap="round"/><ellipse cx="3.929" cy="1.667" rx="1.571" ry="1.667"/><ellipse cx="7.071" cy="8.333" rx="1.571" ry="1.667"/></g></svg>
+<svg viewBox="0 0 13 12" fill="none" xmlns="http://www.w3.org/2000/svg"><g fill-rule="evenodd" clip-rule="evenodd" fill="currentColor"><path d="M10.95 10a2.511 2.511 0 0 0 0-1h1.55a.5.5 0 0 1 0 1h-1.55zm-4.9 0H.5a.5.5 0 0 1 0-1h5.55a2.512 2.512 0 0 0 0 1z"/><path d="M8.5 11a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zM6.95 3a2.512 2.512 0 0 0 0-1h5.55a.5.5 0 0 1 0 1H6.95zm-4.9 0H.5a.5.5 0 0 1 0-1h1.55a2.512 2.512 0 0 0 0 1z"/><path d="M4.5 4a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z"/></g></svg>
\ No newline at end of file
diff --git a/src/sentry/static/sentry/app/views/organizationStream/createSavedSearchButton.jsx b/src/sentry/static/sentry/app/views/organizationStream/createSavedSearchButton.jsx
index 20afa3e395..5dde7922a8 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/createSavedSearchButton.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/createSavedSearchButton.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import styled from 'react-emotion';
 import Modal from 'react-bootstrap/lib/Modal';
 
 import {t} from 'app/locale';
@@ -16,6 +15,9 @@ import withApi from 'app/utils/withApi';
 class CreateSavedSearchButton extends React.Component {
   static propTypes = {
     api: PropTypes.object.isRequired,
+    buttonClassName: PropTypes.string,
+    iconOnly: PropTypes.bool,
+    withTooltip: PropTypes.bool,
     query: PropTypes.string.isRequired,
     organization: SentryTypes.Organization.isRequired,
   };
@@ -87,20 +89,24 @@ class CreateSavedSearchButton extends React.Component {
 
   render() {
     const {isSaving, isModalOpen, error} = this.state;
-    const {organization, query} = this.props;
+    const {organization, query, buttonClassName, iconOnly, withTooltip} = this.props;
 
     return (
       <Access organization={organization} access={['org:write']}>
-        <StyledButton
-          title={t('Add to organization filter list')}
-          size="zero"
-          borderless
-          type="button"
+        <Button
+          title={withTooltip ? t('Add to organization filter list') : null}
           onClick={this.onToggle}
           data-test-id="save-current-search"
+          size="zero"
+          borderless={true}
+          containerDisplayMode="inline-flex"
+          type="button"
           aria-label={t('Add to organization filter list')}
           icon="icon-add-to-list"
-        />
+          className={buttonClassName}
+        >
+          {!iconOnly && t('Create Saved Search')}
+        </Button>
         <Modal show={isModalOpen} animation={false} onHide={this.onToggle}>
           <form onSubmit={this.onSubmit}>
             <div className="modal-header">
@@ -151,13 +157,4 @@ class CreateSavedSearchButton extends React.Component {
   }
 }
 
-const StyledButton = styled(Button)`
-  & svg {
-    color: ${p => p.theme.gray2};
-  }
-  &:hover svg {
-    color: ${p => p.theme.gray3};
-  }
-`;
-
 export default withApi(CreateSavedSearchButton);
diff --git a/tests/js/spec/views/organizationStream/searchBar.spec.jsx b/tests/js/spec/views/organizationStream/searchBar.spec.jsx
index f23a884ccc..e463d6760f 100644
--- a/tests/js/spec/views/organizationStream/searchBar.spec.jsx
+++ b/tests/js/spec/views/organizationStream/searchBar.spec.jsx
@@ -253,7 +253,7 @@ describe('SearchBar', function() {
         organization,
       };
       const searchBar = mount(<SearchBar {...props} />, routerContext);
-      expect(searchBar.find('PinIcon')).toHaveLength(1);
+      expect(searchBar.find('[data-test-id="pin-icon"]')).toHaveLength(2);
     });
 
     it('pins a search from the searchbar', function() {
