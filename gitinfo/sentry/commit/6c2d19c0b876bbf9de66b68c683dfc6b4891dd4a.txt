commit 6c2d19c0b876bbf9de66b68c683dfc6b4891dd4a
Author: Matej Minar <matej.minar@sentry.io>
Date:   Tue Mar 24 06:12:03 2020 +0100

    feat(ui): Add titles to individual tabs in release v2 detail (#17819)
    
    * feat(ui): Add titles to individual tabs in release v2 detail
    
    * ref(ui): Refactor releases v2 pages to use RouteComponentProps

diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
index a746a2c8eb..27f9f8dfca 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
@@ -1,23 +1,45 @@
 import React from 'react';
 import styled from '@emotion/styled';
-import {Params} from 'react-router/lib/Router';
-import {Location} from 'history';
+import {RouteComponentProps} from 'react-router/lib/Router';
 
 import {t} from 'app/locale';
 import Alert from 'app/components/alert';
 import space from 'app/styles/space';
 import ReleaseArtifactsV1 from 'app/views/releases/detail/releaseArtifacts';
+import AsyncView from 'app/views/asyncView';
+import routeTitleGen from 'app/utils/routeTitle';
+import {formatVersion} from 'app/utils/formatters';
+import withOrganization from 'app/utils/withOrganization';
+import {Organization} from 'app/types';
 
 import {ReleaseContext} from '..';
 
-type Props = {
-  params: Params;
-  location: Location;
+type RouteParams = {
+  orgId: string;
+  release: string;
 };
 
-const ReleaseArtifacts = ({params, location}: Props) => (
-  <ReleaseContext.Consumer>
-    {({project}) => (
+type Props = RouteComponentProps<RouteParams, {}> & {
+  organization: Organization;
+};
+
+class ReleaseArtifacts extends AsyncView<Props> {
+  static contextType = ReleaseContext;
+
+  getTitle() {
+    const {params, organization} = this.props;
+    return routeTitleGen(
+      t('Artifacts - Release %s', formatVersion(params.release)),
+      organization.slug,
+      false
+    );
+  }
+
+  renderBody() {
+    const {project} = this.context;
+    const {params, location} = this.props;
+
+    return (
       <ContentBox>
         <Alert type="warning">
           {t(
@@ -32,9 +54,9 @@ const ReleaseArtifacts = ({params, location}: Props) => (
           smallEmptyMessage
         />
       </ContentBox>
-    )}
-  </ReleaseContext.Consumer>
-);
+    );
+  }
+}
 
 const ContentBox = styled('div')`
   padding: ${space(4)};
@@ -42,4 +64,4 @@ const ContentBox = styled('div')`
   background-color: ${p => p.theme.white};
 `;
 
-export default ReleaseArtifacts;
+export default withOrganization(ReleaseArtifacts);
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
index 2bb032e037..6a124b606f 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
@@ -6,11 +6,15 @@ import AsyncComponent from 'app/components/asyncComponent';
 import CommitRow from 'app/components/commitRow';
 import {t} from 'app/locale';
 import space from 'app/styles/space';
-import {Repository, Commit} from 'app/types';
+import {Repository, Commit, Organization} from 'app/types';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import {PanelHeader, Panel, PanelBody} from 'app/components/panels';
 import DropdownControl, {DropdownItem} from 'app/components/dropdownControl';
 import overflowEllipsisLeft from 'app/styles/overflowEllipsisLeft';
+import AsyncView from 'app/views/asyncView';
+import routeTitleGen from 'app/utils/routeTitle';
+import {formatVersion} from 'app/utils/formatters';
+import withOrganization from 'app/utils/withOrganization';
 
 import {getCommitsByRepository, CommitsByRepository} from '../utils';
 import ReleaseNoCommitData from '../releaseNoCommitData';
@@ -23,7 +27,9 @@ type RouteParams = {
   release: string;
 };
 
-type Props = RouteComponentProps<RouteParams, {}>;
+type Props = RouteComponentProps<RouteParams, {}> & {
+  organization: Organization;
+};
 
 type State = {
   commits: Commit[];
@@ -31,9 +37,18 @@ type State = {
   activeRepo: string;
 } & AsyncComponent['state'];
 
-class ReleaseCommits extends AsyncComponent<Props, State> {
+class ReleaseCommits extends AsyncView<Props, State> {
   static contextType = ReleaseContext;
 
+  getTitle() {
+    const {params, organization} = this.props;
+    return routeTitleGen(
+      t('Commits - Release %s', formatVersion(params.release)),
+      organization.slug,
+      false
+    );
+  }
+
   getDefaultState() {
     return {
       ...super.getDefaultState(),
@@ -161,4 +176,4 @@ const RepoLabel = styled('div')`
   ${overflowEllipsisLeft}
 `;
 
-export default ReleaseCommits;
+export default withOrganization(ReleaseCommits);
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
index b9062e437e..59ea967ef1 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
@@ -1,28 +1,46 @@
 import React from 'react';
-import {Params} from 'react-router/lib/Router';
+import {RouteComponentProps} from 'react-router/lib/Router';
 import styled from '@emotion/styled';
 
 import AsyncComponent from 'app/components/asyncComponent';
 import RepositoryFileSummary from 'app/components/repositoryFileSummary';
 import {t} from 'app/locale';
 import space from 'app/styles/space';
-import {CommitFile, Repository} from 'app/types';
+import {CommitFile, Repository, Organization} from 'app/types';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
+import AsyncView from 'app/views/asyncView';
+import withOrganization from 'app/utils/withOrganization';
+import routeTitleGen from 'app/utils/routeTitle';
+import {formatVersion} from 'app/utils/formatters';
 import {Panel, PanelBody} from 'app/components/panels';
 
 import {getFilesByRepository} from '../utils';
 import ReleaseNoCommitData from '../releaseNoCommitData';
 
-type Props = {
-  params: Params;
-} & AsyncComponent['props'];
+type RouteParams = {
+  orgId: string;
+  release: string;
+};
+
+type Props = RouteComponentProps<RouteParams, {}> & {
+  organization: Organization;
+};
 
 type State = {
   fileList: CommitFile[];
   repos: Repository[];
 } & AsyncComponent['state'];
 
-class FilesChanged extends AsyncComponent<Props, State> {
+class FilesChanged extends AsyncView<Props, State> {
+  getTitle() {
+    const {params, organization} = this.props;
+    return routeTitleGen(
+      t('Files Changed - Release %s', formatVersion(params.release)),
+      organization.slug,
+      false
+    );
+  }
+
   getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {
     const {orgId, release} = this.props.params;
 
@@ -80,4 +98,4 @@ const ContentBox = styled('div')`
   }
 `;
 
-export default FilesChanged;
+export default withOrganization(FilesChanged);
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
index e0fd5c7879..7ae445ee47 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
@@ -1,7 +1,5 @@
 import React from 'react';
-import * as ReactRouter from 'react-router';
-import {Params} from 'react-router/lib/Router';
-import {Location} from 'history';
+import {RouteComponentProps} from 'react-router/lib/Router';
 import pick from 'lodash/pick';
 import styled from '@emotion/styled';
 
@@ -23,13 +21,15 @@ import ReleaseHeader from './releaseHeader';
 type ReleaseContext = {release: Release; project: ReleaseProject};
 const ReleaseContext = React.createContext<ReleaseContext>({} as ReleaseContext);
 
-type Props = {
+type RouteParams = {
+  orgId: string;
+  release: string;
+};
+
+type Props = RouteComponentProps<RouteParams, {}> & {
   organization: Organization;
-  location: Location;
-  router: ReactRouter.InjectedRouter;
-  params: Params;
   selection: GlobalSelection;
-} & AsyncView['props'];
+};
 
 type State = {
   release: Release;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
index 935a6f838b..8e0dea079d 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
@@ -1,14 +1,17 @@
 import React from 'react';
 import styled from '@emotion/styled';
-import {Params, InjectedRouter} from 'react-router/lib/Router';
-import {Location} from 'history';
+import {RouteComponentProps} from 'react-router/lib/Router';
 
+import {t} from 'app/locale';
+import AsyncView from 'app/views/asyncView';
 import withOrganization from 'app/utils/withOrganization';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
 import {Organization, GlobalSelection} from 'app/types';
 import space from 'app/styles/space';
 import {Client} from 'app/api';
 import withApi from 'app/utils/withApi';
+import {formatVersion} from 'app/utils/formatters';
+import routeTitleGen from 'app/utils/routeTitle';
 
 import ReleaseChartContainer from './chart';
 import Issues from './issues';
@@ -20,23 +23,37 @@ import {YAxis} from './chart/releaseChartControls';
 
 import {ReleaseContext} from '..';
 
-type Props = {
+type RouteParams = {
+  orgId: string;
+  release: string;
+};
+
+type Props = RouteComponentProps<RouteParams, {}> & {
   organization: Organization;
-  params: Params;
-  location: Location;
   selection: GlobalSelection;
-  router: InjectedRouter;
   api: Client;
 };
 
 type State = {
   yAxis: YAxis;
-};
+} & AsyncView['state'];
 
-class ReleaseOverview extends React.Component<Props, State> {
-  state: State = {
-    yAxis: 'sessions',
-  };
+class ReleaseOverview extends AsyncView<Props, State> {
+  getTitle() {
+    const {params, organization} = this.props;
+    return routeTitleGen(
+      t('Release %s', formatVersion(params.release)),
+      organization.slug,
+      false
+    );
+  }
+
+  getDefaultState() {
+    return {
+      ...super.getDefaultState(),
+      yAxis: 'sessions',
+    };
+  }
 
   handleYAxisChange = (yAxis: YAxis) => {
     this.setState({yAxis});
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
index 5be0a9f012..bdbfe4eb14 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
@@ -1,7 +1,5 @@
 import React from 'react';
-import {Location} from 'history';
-import * as ReactRouter from 'react-router';
-import {Params} from 'react-router/lib/Router';
+import {RouteComponentProps} from 'react-router/lib/Router';
 import styled from '@emotion/styled';
 import pick from 'lodash/pick';
 
@@ -28,12 +26,13 @@ import {DEFAULT_STATS_PERIOD} from 'app/constants';
 
 import ReleaseListSortOptions from './releaseListSortOptions';
 
-type Props = {
-  params: Params;
-  location: Location;
+type RouteParams = {
+  orgId: string;
+};
+
+type Props = RouteComponentProps<RouteParams, {}> & {
   organization: Organization;
-  router: ReactRouter.InjectedRouter;
-} & AsyncView['props'];
+};
 
 type State = AsyncView['state'];
 
