commit ee84492bfc0b65d0ae0102a8ea557ed186e17b87
Author: David Cramer <dcramer@gmail.com>
Date:   Tue May 17 12:07:19 2016 -0500

    Disable SqlQueryCountMonitor

diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index 24b1d6a598..0509a6067a 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -20,7 +20,6 @@ from sentry.app import raven, tsdb
 from sentry.models import ApiKey, AuditLogEntry
 from sentry.utils.cursors import Cursor
 from sentry.utils.http import absolute_uri, is_valid_origin
-from sentry.utils.performance import SqlQueryCountMonitor
 
 from .authentication import ApiKeyAuthentication, TokenAuthentication
 from .paginator import Paginator
@@ -118,8 +117,6 @@ class Endpoint(APIView):
         self.request = request
         self.headers = self.default_response_headers  # deprecate?
 
-        metric_name = '{}.{}'.format(type(self).__name__, request.method.lower())
-
         if settings.SENTRY_API_RESPONSE_DELAY:
             time.sleep(settings.SENTRY_API_RESPONSE_DELAY / 1000.0)
 
@@ -145,8 +142,7 @@ class Endpoint(APIView):
             else:
                 handler = self.http_method_not_allowed
 
-            with SqlQueryCountMonitor(metric_name):
-                response = handler(request, *args, **kwargs)
+            response = handler(request, *args, **kwargs)
 
         except Exception as exc:
             response = self.handle_exception(request, exc)
diff --git a/src/sentry/tasks/base.py b/src/sentry/tasks/base.py
index 33ee0abee5..02f1639923 100644
--- a/src/sentry/tasks/base.py
+++ b/src/sentry/tasks/base.py
@@ -16,7 +16,6 @@ from raven.contrib.django.models import client as Raven
 
 from sentry.celery import app
 from sentry.utils import metrics
-from sentry.utils.performance import SqlQueryCountMonitor
 
 
 def get_rss_usage():
@@ -50,8 +49,7 @@ def instrumented_task(name, stat_suffix=None, **kwargs):
                 'transaction_id': transaction_id,
             })
             with metrics.timer(key, instance=instance), \
-                    track_memory_usage('jobs.memory_change', instance=instance), \
-                    SqlQueryCountMonitor(name):
+                    track_memory_usage('jobs.memory_change', instance=instance):
                 try:
                     result = func(*args, **kwargs)
                 finally:
