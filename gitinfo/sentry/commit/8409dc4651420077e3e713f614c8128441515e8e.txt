commit 8409dc4651420077e3e713f614c8128441515e8e
Author: Ted Kaemming <ted@kaemming.com>
Date:   Thu Mar 31 18:10:55 2016 -0700

    Add basic mute duration to `AlertStore` (with cleanup.)

diff --git a/src/sentry/static/sentry/app/stores/alertStore.jsx b/src/sentry/static/sentry/app/stores/alertStore.jsx
index d284b7bbc9..6766bc158c 100644
--- a/src/sentry/static/sentry/app/stores/alertStore.jsx
+++ b/src/sentry/static/sentry/app/stores/alertStore.jsx
@@ -1,6 +1,7 @@
 import Reflux from 'reflux';
 import AlertActions from '../actions/alertActions';
 import {getItem, setItem} from '../utils/localStorage';
+import {defined} from '../utils';
 
 const AlertStore = Reflux.createStore({
   listenables: AlertActions,
@@ -10,17 +11,27 @@ const AlertStore = Reflux.createStore({
     this.count = 0;
   },
 
-  getMutedKey(alert) {
-    return `alerts:${alert.id}:muted`;
-  },
-
   onAddAlert(alert) {
-    if (alert.id !== void 0) {
-      if (getItem(this.getMutedKey(alert)) !== null) {
-        return;
+    if (defined(alert.id)) {
+      let expirations = getItem('alerts:muted');
+      if (defined(expirations)) {
+        expirations = JSON.parse(expirations);
+
+        // Remove any objects that have passed their mute duration.
+        let now = Math.floor(new Date() / 1000);
+        for (let key in expirations) {
+          if (expirations.hasOwnProperty(key) && expirations[key] < now) {
+            delete expirations[key];
+          }
+        }
+        setItem('alerts:muted', JSON.stringify(expirations));
+
+        if (expirations.hasOwnProperty(alert.id)) {
+          return;
+        }
       }
     } else {
-      if (alert.expireAfter === void 0) {
+      if (defined(alert.expireAfter)) {
         alert.expireAfter = 5000;
       }
     }
@@ -40,9 +51,17 @@ const AlertStore = Reflux.createStore({
     this.trigger(this.alerts);
   },
 
-  onCloseAlert(alert) {
-    if (alert.id !== void 0) {
-      setItem(this.getMutedKey(alert), +new Date());
+  onCloseAlert(alert, duration = 60 * 60 * 7 * 24) {
+    if (defined(alert.id) && defined(duration)) {
+      let expiry = Math.floor(new Date() / 1000) + duration;
+      let expirations = getItem('alerts:muted');
+      if (defined(expirations)) {
+        expirations = JSON.parse(expirations);
+      } else {
+        expirations = {};
+      }
+      expirations[alert.id] = expiry;
+      setItem('alerts:muted', JSON.stringify(expirations));
     }
 
     // TODO(dcramer): we need some animations here for closing alerts
