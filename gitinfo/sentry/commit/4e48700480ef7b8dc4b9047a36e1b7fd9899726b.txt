commit 4e48700480ef7b8dc4b9047a36e1b7fd9899726b
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Dec 22 12:16:05 2017 -0500

    fix(settings): Don't store None origins
    
    Also gracefully handle bad values.
    
    Fixes GH-6832
    Fixes SENTRY-5F4

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 19a6396a8a..2837479b02 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -105,8 +105,8 @@ class ProjectAdminSerializer(ProjectMemberSerializer):
         return attrs
 
     def validate_allowedDomains(self, attrs, source):
-        allowed_domains = attrs[source]
-        if len(allowed_domains) == 0:
+        attrs[source] = filter(bool, attrs[source])
+        if len(attrs[source]) == 0:
             raise serializers.ValidationError(
                 'Empty value will block all requests, use * to accept from all domains'
             )
diff --git a/src/sentry/utils/http.py b/src/sentry/utils/http.py
index 9477d32c6d..97e1d30d85 100644
--- a/src/sentry/utils/http.py
+++ b/src/sentry/utils/http.py
@@ -86,7 +86,7 @@ def get_origins(project=None):
 
     # lowercase and strip the trailing slash from all origin values
     # filter out empty values
-    return frozenset(filter(bool, map(lambda x: x.lower().rstrip('/'), result)))
+    return frozenset(filter(bool, map(lambda x: (x or '').lower().rstrip('/'), result)))
 
 
 def parse_uri_match(value):
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index e5e30b1d59..69066b0b11 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -376,6 +376,13 @@ class ProjectUpdateTest(APITestCase):
         assert resp.data['allowedDomains'] == [
             'Empty value will block all requests, use * to accept from all domains']
 
+        resp = self.client.put(self.path, data={
+            'allowedDomains': ['*', ''],
+        })
+        assert resp.status_code == 200, resp.content
+        assert self.project.get_option('sentry:origins') == ['*']
+        assert resp.data['allowedDomains'] == ['*']
+
     def test_safe_fields(self):
         resp = self.client.put(self.path, data={
             'safeFields': ['foobar.com', 'https://example.com'],
diff --git a/tests/sentry/utils/http/tests.py b/tests/sentry/utils/http/tests.py
index 87a1880bd3..71739fa179 100644
--- a/tests/sentry/utils/http/tests.py
+++ b/tests/sentry/utils/http/tests.py
@@ -93,6 +93,14 @@ class GetOriginsTestCase(TestCase):
             result = get_origins(None)
             self.assertEquals(result, frozenset(['http://example.com']))
 
+    def test_empty_origin_values(self):
+        project = Project.objects.get()
+        project.update_option('sentry:origins', [u'*', None, ''])
+
+        with self.settings(SENTRY_ALLOW_ORIGIN=None):
+            result = get_origins(project)
+            self.assertEquals(result, frozenset([u'*']))
+
 
 class IsValidOriginTestCase(TestCase):
     @fixture
