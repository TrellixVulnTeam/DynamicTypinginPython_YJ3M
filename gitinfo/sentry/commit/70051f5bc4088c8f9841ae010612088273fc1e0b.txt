commit 70051f5bc4088c8f9841ae010612088273fc1e0b
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Oct 13 16:44:15 2017 -0700

    fix(react): Fix NumberField (i.e. rate limit) (#6333)

diff --git a/src/sentry/static/sentry/app/components/forms/numberField.jsx b/src/sentry/static/sentry/app/components/forms/numberField.jsx
index 529fb6d352..1f9d933aeb 100644
--- a/src/sentry/static/sentry/app/components/forms/numberField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/numberField.jsx
@@ -8,8 +8,17 @@ export default class NumberField extends InputField {
     max: PropTypes.number
   };
 
-  coerceValue(value) {
-    return parseInt(value, 10);
+  coerceValue(value, prevValue) {
+    let intValue = parseInt(value, 10);
+
+    // return previous value if new value is NaN, otherwise, will get recursive error
+    let isNewCoercedNaN = isNaN(intValue);
+
+    if (!isNewCoercedNaN) {
+      return intValue;
+    }
+
+    return '';
   }
 
   getType() {
diff --git a/tests/js/spec/components/forms/numberField.spec.jsx b/tests/js/spec/components/forms/numberField.spec.jsx
index 421dfe2940..bd9f777190 100644
--- a/tests/js/spec/components/forms/numberField.spec.jsx
+++ b/tests/js/spec/components/forms/numberField.spec.jsx
@@ -1,7 +1,9 @@
 import React from 'react';
-import {shallow} from 'enzyme';
 
-import {NumberField} from 'app/components/forms';
+import {Form, NumberField} from 'app/components/forms';
+import {shallow, mount} from 'enzyme';
+
+jest.mock('jquery');
 
 describe('NumberField', function() {
   describe('render()', function() {
@@ -33,5 +35,13 @@ describe('NumberField', function() {
       });
       expect(wrapper).toMatchSnapshot();
     });
+
+    it('doesnt save `NaN` when new value is empty string', function() {
+      let wrapper = mount(
+        <Form onSubmit={() => {}}><NumberField name="fieldName" defaultValue="2" /></Form>
+      );
+      wrapper.find('input').simulate('change', {target: {value: ''}});
+      expect(wrapper.state('data').fieldName).toBe('');
+    });
   });
 });
