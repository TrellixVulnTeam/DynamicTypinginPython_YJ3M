commit 3990e90823c734ea5681e30a4184ead78cbb4e28
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu May 3 11:26:28 2018 -0700

    feat(dashboard): Sort projects within each team (#8283)

diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 6cc6d704d3..e215b1ef30 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -212,7 +212,7 @@ function projectDisplayCompare(a, b) {
   if (a.isBookmarked !== b.isBookmarked) {
     return a.isBookmarked ? -1 : 1;
   }
-  return a.id < b.id;
+  return a.slug.localeCompare(b.slug);
 }
 
 // Sort a list of projects by bookmarkedness, then by id
diff --git a/src/sentry/static/sentry/app/utils/getProjectsByTeams.jsx b/src/sentry/static/sentry/app/utils/getProjectsByTeams.jsx
index 80ee3f2e5f..18c3838501 100644
--- a/src/sentry/static/sentry/app/utils/getProjectsByTeams.jsx
+++ b/src/sentry/static/sentry/app/utils/getProjectsByTeams.jsx
@@ -18,5 +18,6 @@ export default function getProjectsByTeams(teams, projects) {
       });
     }
   });
+
   return {projectsByTeam, teamlessProjects};
 }
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
index e1d11b352a..37797f90b2 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
@@ -7,6 +7,7 @@ import styled from 'react-emotion';
 import AsyncComponent from 'app/components/asyncComponent';
 import OrganizationState from 'app/mixins/organizationState';
 import getProjectsByTeams from 'app/utils/getProjectsByTeams';
+import {sortProjects} from 'app/utils';
 import withTeams from 'app/utils/withTeams';
 import withProjects from 'app/utils/withProjects';
 import {t} from 'app/locale';
@@ -43,7 +44,11 @@ class Dashboard extends AsyncComponent {
     const getStats = id => projectsWithStats.find(p => id === p.id).stats;
 
     return (
-      <ProjectCardWrapper key={project.id} width={['100%', '50%', '33%', '25%']}>
+      <ProjectCardWrapper
+        data-test-id={project.slug}
+        key={project.id}
+        width={['100%', '50%', '33%', '25%']}
+      >
         <ProjectCard project={project} stats={getStats(project.id)} />
       </ProjectCardWrapper>
     );
@@ -51,7 +56,8 @@ class Dashboard extends AsyncComponent {
 
   renderBody() {
     const {teams, projects, params} = this.props;
-    const {projectsByTeam} = getProjectsByTeams(teams, projects);
+    const sortedProjects = sortProjects(projects);
+    const {projectsByTeam} = getProjectsByTeams(teams, sortedProjects);
     const projectKeys = Object.keys(projectsByTeam);
 
     const favorites = projects.filter(project => project.isBookmarked);
@@ -74,7 +80,7 @@ class Dashboard extends AsyncComponent {
         {projectKeys.map((slug, index) => {
           const showBorder = index !== projectKeys.length - 1;
           return (
-            <TeamSection key={slug} showBorder={showBorder}>
+            <TeamSection data-test-id="team" key={slug} showBorder={showBorder}>
               <TeamTitleBar justify="space-between" align="center">
                 <TeamName>{`#${slug}`}</TeamName>
                 <TeamMembers teamId={slug} orgId={params.orgId} />
diff --git a/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx b/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx
index 39c8f932b8..4cc7708f31 100644
--- a/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx
@@ -16,6 +16,7 @@ import {t, tct} from 'app/locale';
 import withProjects from 'app/utils/withProjects';
 import withTeams from 'app/utils/withTeams';
 import getProjectsByTeams from 'app/utils/getProjectsByTeams';
+import {sortProjects} from 'app/utils';
 
 class OrganizationTeamsProjectsView extends React.Component {
   static propTypes = {
@@ -140,11 +141,7 @@ class OrganizationTeamsProjectsView extends React.Component {
               .map(teamSlug => {
                 return this.renderTeamNode(
                   teamSlug,
-                  projectsByTeam[teamSlug].sort((a, b) => {
-                    if (a.slug > b.slug) return 1;
-                    if (a.slug < b.slug) return -1;
-                    return 0;
-                  })
+                  sortProjects(projectsByTeam[teamSlug])
                 );
               })}
             {!!teamlessProjects.length && this.renderTeamNode(null, teamlessProjects)}
diff --git a/tests/js/spec/utils/utils.spec.jsx b/tests/js/spec/utils/utils.spec.jsx
index 37afb73a09..5ea20c3367 100644
--- a/tests/js/spec/utils/utils.spec.jsx
+++ b/tests/js/spec/utils/utils.spec.jsx
@@ -1,4 +1,10 @@
-import {valueIsEqual, extractMultilineFields, parseRepo, explodeSlug} from 'app/utils';
+import {
+  valueIsEqual,
+  extractMultilineFields,
+  parseRepo,
+  explodeSlug,
+  sortProjects,
+} from 'app/utils';
 
 describe('utils.valueIsEqual', function() {
   it('should return true when objects are deeply equal', function() {
@@ -168,3 +174,63 @@ describe('utils.explodeSlug', function() {
     expect(explodeSlug('test--slug__replace-')).toEqual('test slug replace');
   });
 });
+
+describe('utils.projectDisplayCompare', function() {
+  it('sorts by bookmark and project slug', function() {
+    const projects = [
+      {
+        isBookmarked: true,
+        slug: 'm',
+      },
+      {
+        isBookmarked: false,
+        slug: 'm',
+      },
+      {
+        isBookmarked: false,
+        slug: 'a',
+      },
+      {
+        isBookmarked: true,
+        slug: 'a',
+      },
+      {
+        isBookmarked: true,
+        slug: 'z',
+      },
+      {
+        isBookmarked: false,
+        slug: 'z',
+      },
+    ];
+
+    const sortedProjects = sortProjects(projects);
+
+    expect(sortedProjects).toEqual([
+      {
+        isBookmarked: true,
+        slug: 'a',
+      },
+      {
+        isBookmarked: true,
+        slug: 'm',
+      },
+      {
+        isBookmarked: true,
+        slug: 'z',
+      },
+      {
+        isBookmarked: false,
+        slug: 'a',
+      },
+      {
+        isBookmarked: false,
+        slug: 'm',
+      },
+      {
+        isBookmarked: false,
+        slug: 'z',
+      },
+    ]);
+  });
+});
diff --git a/tests/js/spec/views/__snapshots__/projectChooser.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectChooser.spec.jsx.snap
index 9bf8d7d12d..b74a71b476 100644
--- a/tests/js/spec/views/__snapshots__/projectChooser.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectChooser.spec.jsx.snap
@@ -21,7 +21,7 @@ exports[`ProjectChooser renders 1`] = `
     >
       <PanelItem
         align="center"
-        key="test-project"
+        key="another-project"
         p={0}
       >
         <Box
@@ -30,14 +30,14 @@ exports[`ProjectChooser renders 1`] = `
         >
           <Link
             className="css-5kvhca"
-            to="/org/test-project/settings/install/"
+            to="/org/another-project/settings/install/"
           >
             <StyledProjectLabel
               project={
                 Object {
                   "isMember": true,
-                  "name": "Test Project",
-                  "slug": "test-project",
+                  "name": "Another Project",
+                  "slug": "another-project",
                   "team": Object {
                     "isMember": true,
                     "name": "Test Team",
@@ -61,7 +61,7 @@ exports[`ProjectChooser renders 1`] = `
       </PanelItem>
       <PanelItem
         align="center"
-        key="another-project"
+        key="test-project"
         p={0}
       >
         <Box
@@ -70,14 +70,14 @@ exports[`ProjectChooser renders 1`] = `
         >
           <Link
             className="css-5kvhca"
-            to="/org/another-project/settings/install/"
+            to="/org/test-project/settings/install/"
           >
             <StyledProjectLabel
               project={
                 Object {
                   "isMember": true,
-                  "name": "Another Project",
-                  "slug": "another-project",
+                  "name": "Test Project",
+                  "slug": "test-project",
                   "team": Object {
                     "isMember": true,
                     "name": "Test Team",
diff --git a/tests/js/spec/views/organizationDashboard/index.spec.jsx b/tests/js/spec/views/organizationDashboard/index.spec.jsx
index 4a02473018..d4bb5fcfa4 100644
--- a/tests/js/spec/views/organizationDashboard/index.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/index.spec.jsx
@@ -70,5 +70,72 @@ describe('OrganizationDashboard', function() {
       const projectCard = favorites.find('ProjectCardWrapper');
       expect(projectCard).toHaveLength(1);
     });
+
+    it('renders bookmarked projects first in team list', function() {
+      const teams = [TestStubs.Team()];
+      const projects = [
+        TestStubs.Project({
+          id: '1',
+          slug: 'm',
+          teams,
+          isBookmarked: false,
+          stats: [],
+        }),
+        TestStubs.Project({
+          id: '2',
+          slug: 'm-fave',
+          teams,
+          isBookmarked: true,
+          stats: [],
+        }),
+        TestStubs.Project({
+          id: '3',
+          slug: 'a-fave',
+          teams,
+          isBookmarked: true,
+          stats: [],
+        }),
+        TestStubs.Project({
+          id: '4',
+          slug: 'z-fave',
+          teams,
+          isBookmarked: true,
+          stats: [],
+        }),
+        TestStubs.Project({
+          id: '5',
+          slug: 'a',
+          teams,
+          isBookmarked: false,
+          stats: [],
+        }),
+        TestStubs.Project({
+          id: '6',
+          slug: 'z',
+          teams,
+          isBookmarked: false,
+          stats: [],
+        }),
+      ];
+
+      MockApiClient.addMockResponse({
+        url: '/organizations/org-slug/projects/?statsPeriod=24h',
+        body: projects,
+      });
+
+      const wrapper = shallow(
+        <Dashboard teams={teams} projects={projects} params={{orgId: 'org-slug'}} />,
+        TestStubs.routerContext()
+      );
+
+      const projectCards = wrapper.find(
+        'TeamSection[data-test-id="team"] ProjectCardWrapper'
+      );
+      expect(projectCards.at(1).prop('data-test-id')).toBe('m-fave');
+      expect(projectCards.at(2).prop('data-test-id')).toBe('z-fave');
+      expect(projectCards.at(3).prop('data-test-id')).toBe('a');
+      expect(projectCards.at(4).prop('data-test-id')).toBe('m');
+      expect(projectCards.at(5).prop('data-test-id')).toBe('z');
+    });
   });
 });
diff --git a/tests/js/spec/views/organizationTeamProjects.spec.jsx b/tests/js/spec/views/organizationTeamProjects.spec.jsx
index db372c58b9..1d1d9c2074 100644
--- a/tests/js/spec/views/organizationTeamProjects.spec.jsx
+++ b/tests/js/spec/views/organizationTeamProjects.spec.jsx
@@ -80,7 +80,7 @@ describe('OrganizationTeamProjects', function() {
     expect(putMock).toHaveBeenCalledTimes(1);
   });
 
-  it('Should allow adding and removing projects', function(done) {
+  it('Should allow adding and removing projects', async function() {
     let wrapper = mount(
       <OrganizationTeamProjects params={{orgId: 'org-slug', teamId: team.slug}} />,
       TestStubs.routerContext()
@@ -96,15 +96,13 @@ describe('OrganizationTeamProjects', function() {
 
     expect(postMock).toHaveBeenCalledTimes(1);
 
-    setTimeout(() => {
-      wrapper.update();
-      // find first project's remove button
-      let remove = wrapper.find('Button').at(1);
-      remove.simulate('click');
+    await tick();
+    wrapper.update();
 
-      expect(deleteMock).toHaveBeenCalledTimes(1);
+    // find second project's remove button
+    let remove = wrapper.find('PanelItem Button').at(1);
+    remove.simulate('click');
 
-      done();
-    }, 1);
+    expect(deleteMock).toHaveBeenCalledTimes(1);
   });
 });
