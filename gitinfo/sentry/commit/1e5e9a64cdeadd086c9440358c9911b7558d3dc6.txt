commit 1e5e9a64cdeadd086c9440358c9911b7558d3dc6
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 15 22:32:05 2015 -0700

    Add various data to build simple distributions of tags

diff --git a/src/sentry/api/endpoints/group_tagkey_details.py b/src/sentry/api/endpoints/group_tagkey_details.py
index b0b4b63b11..664724ece5 100644
--- a/src/sentry/api/endpoints/group_tagkey_details.py
+++ b/src/sentry/api/endpoints/group_tagkey_details.py
@@ -5,6 +5,7 @@ from rest_framework.response import Response
 from sentry.api.base import DocSection
 from sentry.api.bases.group import GroupEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.api.serializers import serialize
 from sentry.models import GroupTagValue, TagKey, TagKeyStatus
 
 
@@ -31,12 +32,15 @@ class GroupTagKeyDetailsEndpoint(GroupEndpoint):
 
         total_values = GroupTagValue.get_value_count(group.id, key)
 
+        top_values = GroupTagValue.get_top_values(group.id, key, limit=3)
+
         data = {
             'id': str(tag_key.id),
             'key': tag_key.key,
             'name': tag_key.get_label(),
             'uniqueValues': tag_key.values_seen,
             'totalValues': total_values,
+            'topValues': serialize(top_values, request.user),
         }
 
         return Response(data)
diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 52e279e587..b18d5ad009 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -65,7 +65,7 @@ class GroupSerializer(Serializer):
                 except KeyError:
                     value = 0
                 tags[key] = {
-                    'label': label,
+                    'name': label,
                     'count': value,
                 }
 
diff --git a/src/sentry/models/grouptagvalue.py b/src/sentry/models/grouptagvalue.py
index a6c80ca63a..79950f3d3f 100644
--- a/src/sentry/models/grouptagvalue.py
+++ b/src/sentry/models/grouptagvalue.py
@@ -77,5 +77,30 @@ class GroupTagValue(Model):
             last_seen__gte=cutoff,
         ).aggregate(t=Sum('times_seen'))['t']
 
+    @classmethod
+    def get_top_values(cls, group_id, key, limit=3):
+        if db.is_postgres():
+            # This doesnt guarantee percentage is accurate, but it does ensure
+            # that the query has a maximum cost
+            return list(cls.objects.raw("""
+                SELECT *
+                FROM (
+                    SELECT *
+                    FROM sentry_messagefiltervalue
+                    WHERE group_id = %%s
+                    AND key = %%s
+                    AND last_seen > NOW() - INTERVAL '7 days'
+                    LIMIT 10000
+                ) as a
+                ORDER BY times_seen DESC
+                LIMIT %d
+            """ % limit, [group_id, key]))
+
+        cutoff = timezone.now() - timedelta(days=7)
+        return list(cls.objects.filter(
+            group=group_id,
+            key=key,
+            last_seen__gte=cutoff,
+        ).order_by('-times_seen')[:limit])
 
 GroupTag = GroupTagValue
