commit f30991dcb84efa4af2835db29354f01015320539
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 26 11:31:44 2013 -0700

    Remove mock-django requirement

diff --git a/setup.py b/setup.py
index 5a3d3b2a18..a048cea942 100755
--- a/setup.py
+++ b/setup.py
@@ -55,7 +55,6 @@ tests_require = [
     'python-coveralls',
     'nydus',
     'mock>=0.8.0',
-    'mock-django>=0.6.4',
     'redis',
     'unittest2',
 ]
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index 65f4e540b7..3922b80302 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -4,7 +4,6 @@ from __future__ import absolute_import
 
 import mock
 import logging
-from mock_django.managers import ManagerMock
 
 from django.core.urlresolvers import reverse
 
@@ -89,17 +88,10 @@ class DashboardTest(TestCase):
 
         can_create_projects.return_value = True
 
-        manager = ManagerMock(Project.objects)
-
-        with mock.patch('sentry.models.Project.objects', manager):
-            resp = self.client.get(self.path)
+        resp = self.client.get(self.path)
 
         can_create_projects.assert_called_once_with(self.user, team=self.team)
 
-        manager.assert_chain_calls(
-            mock.call.filter(team=self.team),
-        )
-
         assert resp.status_code == 302
         assert resp['Location'] == 'http://testserver' + reverse('sentry-new-project', args=[self.team.slug])
 
@@ -109,17 +101,10 @@ class DashboardTest(TestCase):
 
         can_create_projects.return_value = False
 
-        manager = ManagerMock(Project.objects)
-
-        with mock.patch('sentry.models.Project.objects', manager):
-            resp = self.client.get(self.path)
+        resp = self.client.get(self.path)
 
         can_create_projects.assert_called_once_with(self.user, team=self.team)
 
-        manager.assert_chain_calls(
-            mock.call.filter(team=self.team),
-        )
-
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/dashboard.html')
 
@@ -127,17 +112,13 @@ class DashboardTest(TestCase):
     def test_does_not_redirect_if_has_projects(self, can_create_projects):
         self.login_as(self.user)
 
-        manager = ManagerMock(Project.objects, self.project)
+        # HACK: force creation
+        self.project
 
-        with mock.patch('sentry.models.Project.objects', manager):
-            resp = self.client.get(self.path)
+        resp = self.client.get(self.path)
 
         assert not can_create_projects.called
 
-        manager.assert_chain_calls(
-            mock.call.filter(team=self.team),
-        )
-
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/dashboard.html')
         assert resp.context['team'] == self.team
