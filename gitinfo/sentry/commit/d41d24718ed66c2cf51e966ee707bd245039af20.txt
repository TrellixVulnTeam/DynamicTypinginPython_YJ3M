commit d41d24718ed66c2cf51e966ee707bd245039af20
Author: Ben Vinegar <ben@benv.ca>
Date:   Fri Oct 9 15:52:40 2015 -0700

    Fix react warnings caused by ActionLink

diff --git a/src/sentry/static/sentry/app/views/stream/actionLink.jsx b/src/sentry/static/sentry/app/views/stream/actionLink.jsx
index 871f65704b..f3b39fd777 100644
--- a/src/sentry/static/sentry/app/views/stream/actionLink.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actionLink.jsx
@@ -16,7 +16,6 @@ var ActionLink = React.createClass({
 
   propTypes: {
     actionLabel: React.PropTypes.string,
-    groupIds: React.PropTypes.instanceOf(Array).isRequired,
     canActionAll: React.PropTypes.bool.isRequired,
     confirmLabel: React.PropTypes.string,
     disabled: React.PropTypes.bool,
@@ -30,6 +29,7 @@ var ActionLink = React.createClass({
     return {
       actionTypes: {},
       buttonTitle: null, // title="..." (optional)
+      canActionAll: false,
       confirmLabel: 'Edit',
       onlyIfBulk: false,
       neverConfirm: false,
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index 33c8a40ba2..c77dc061b9 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -150,8 +150,7 @@ var StreamActions = React.createClass({
                tooltip="Set Status to Resolved"
                canActionAll={true}
                onlyIfBulk={true}
-               selectAllActive={this.state.selectAllActive}
-               groupIds={this.props.groupIds}>
+               selectAllActive={this.state.selectAllActive}>
               <i aria-hidden="true" className="icon-checkmark"></i>
             </ActionLink>
             <ActionLink
@@ -165,8 +164,7 @@ var StreamActions = React.createClass({
                tooltip="Add to Bookmarks"
                canActionAll={false}
                onlyIfBulk={true}
-               selectAllActive={this.state.selectAllActive}
-               groupIds={this.props.groupIds}>
+               selectAllActive={this.state.selectAllActive}>
               <i aria-hidden="true" className="icon-bookmark"></i>
             </ActionLink>
 
@@ -185,8 +183,7 @@ var StreamActions = React.createClass({
                    onAction={this.onMerge}
                    confirmLabel="Merge"
                    canActionAll={false}
-                   selectAllActive={this.state.selectAllActive}
-                   groupIds={this.props.groupIds}>
+                   selectAllActive={this.state.selectAllActive}>
                   Merge Events
                 </ActionLink>
               </MenuItem>
@@ -200,8 +197,7 @@ var StreamActions = React.createClass({
                    actionLabel="remove these {count} events from your bookmarks"
                    onlyIfBulk={true}
                    canActionAll={false}
-                   selectAllActive={this.state.selectAllActive}
-                   groupIds={this.props.groupIds}>
+                   selectAllActive={this.state.selectAllActive}>
                   Remove from Bookmarks
                 </ActionLink>
               </MenuItem>
@@ -231,8 +227,7 @@ var StreamActions = React.createClass({
                    confirmLabel="Mute"
                    onlyIfBulk={false}
                    canActionAll={false}
-                   selectAllActive={this.state.selectAllActive}
-                   groupIds={this.props.groupIds}>
+                   selectAllActive={this.state.selectAllActive}>
                   Set status to: Muted
                 </ActionLink>
               </MenuItem>
@@ -245,8 +240,7 @@ var StreamActions = React.createClass({
                    onAction={this.onDelete}
                    confirmLabel="Delete"
                    canActionAll={false}
-                   selectAllActive={this.state.selectAllActive}
-                   groupIds={this.props.groupIds}>
+                   selectAllActive={this.state.selectAllActive}>
                   Delete Events
                 </ActionLink>
               </MenuItem>
diff --git a/tests/js/helpers/stubReactComponent.jsx b/tests/js/helpers/stubReactComponent.jsx
index ab7a62d0ba..730cc6bf1d 100644
--- a/tests/js/helpers/stubReactComponent.jsx
+++ b/tests/js/helpers/stubReactComponent.jsx
@@ -11,7 +11,7 @@ export default function(stubber, stubbedComponents) {
       return originalCreateElement.apply(React, arguments);
     } else {
       var componentFactory = React.createFactory(component);
-      var displayName = componentFactory().type.displayName;
+      var displayName = componentFactory(props).type.displayName;
 
       if (displayName) {
         if (props.className) {
diff --git a/tests/js/spec/views/stream/actionLink.spec.jsx b/tests/js/spec/views/stream/actionLink.spec.jsx
index 3393c671a3..7815f64477 100644
--- a/tests/js/spec/views/stream/actionLink.spec.jsx
+++ b/tests/js/spec/views/stream/actionLink.spec.jsx
@@ -21,7 +21,9 @@ describe("ActionLink", function() {
 
   describe("shouldConfirm()", function() {
     it('should always return true by default', function () {
-      var actionLink = TestUtils.renderIntoDocument(<ActionLink/>);
+      var actionLink = TestUtils.renderIntoDocument(
+        <ActionLink onAction={function(){}} selectAllActive={false}/>
+      );
 
       expect(actionLink.shouldConfirm(0)).to.be.true;
       expect(actionLink.shouldConfirm(1)).to.be.true;
@@ -29,7 +31,9 @@ describe("ActionLink", function() {
     });
 
     it('should return false when props.neverConfirm is true', function () {
-      var actionLink = TestUtils.renderIntoDocument(<ActionLink neverConfirm={true}/>);
+      var actionLink = TestUtils.renderIntoDocument(
+        <ActionLink neverConfirm={true} onAction={function(){}} selectAllActive={false}/>
+      );
 
       expect(actionLink.shouldConfirm(0)).to.be.false;
       expect(actionLink.shouldConfirm(1)).to.be.false;
@@ -38,7 +42,9 @@ describe("ActionLink", function() {
 
 
     it('should return (mostly) true when props.onlyIfBulk is true and all are selected', function () {
-      var actionLink = TestUtils.renderIntoDocument(<ActionLink onlyIfBulk={true} selectAllActive={true}/>);
+      var actionLink = TestUtils.renderIntoDocument(
+        <ActionLink onlyIfBulk={true} selectAllActive={true} onAction={function(){}}/>
+      );
 
       expect(actionLink.shouldConfirm(1)).to.be.false; // EDGE CASE: if just 1, shouldn't confirm even if "all" selected
       expect(actionLink.shouldConfirm(2)).to.be.true;
@@ -46,7 +52,9 @@ describe("ActionLink", function() {
     });
 
     it('should return false when props.onlyIfBulk is true and not all are selected', function () {
-      var actionLink = TestUtils.renderIntoDocument(<ActionLink onlyIfBulk={true} selectAllActive={false}/>);
+      var actionLink = TestUtils.renderIntoDocument(
+        <ActionLink onlyIfBulk={true} selectAllActive={false} onAction={function(){}}/>
+      );
 
       expect(actionLink.shouldConfirm(1)).to.be.false;
       expect(actionLink.shouldConfirm(2)).to.be.false;
