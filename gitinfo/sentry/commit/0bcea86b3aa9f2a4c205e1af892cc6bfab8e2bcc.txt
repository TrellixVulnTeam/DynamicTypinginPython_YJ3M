commit 0bcea86b3aa9f2a4c205e1af892cc6bfab8e2bcc
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Apr 10 08:48:46 2020 -0700

    fix(ui): Fix search by event id on `<Events>` (#18204)
    
    This fixes a regression introduced in https://github.com/getsentry/sentry/pull/18138 - when searching by event id and there is a direct hit, the component used `organization.projects` (which no longer has a list of all projects on org) to lookup project slug by project id (id is returned by search results).
    
    * Refactor to use `handleRequestSuccess` so that we redirect before updating state when a direct hit is found. Adds an API request for project slug lookup.
    * Moves `<ProjectEventRedirect>` to lightweight routes
    * Design touchups for `<ProjectEventRedirect>`

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 60146d8a03..78890463f6 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -1453,6 +1453,11 @@ function routes() {
           component={errorHandler(LazyLoad)}
         />
 
+        <Route
+          path="/organizations/:orgId/projects/:projectId/events/:eventId/"
+          component={errorHandler(ProjectEventRedirect)}
+        />
+
         {/* Admin/manage routes */}
         <Route
           path="/manage/"
@@ -1721,10 +1726,6 @@ function routes() {
               component={errorHandler(LazyLoad)}
             />
           </Route>
-          <Route
-            path="/organizations/:orgId/projects/:projectId/events/:eventId/"
-            component={errorHandler(ProjectEventRedirect)}
-          />
           <Route
             path="/organizations/:orgId/releases/"
             componentPromise={() =>
diff --git a/src/sentry/static/sentry/app/views/events/events.jsx b/src/sentry/static/sentry/app/views/events/events.jsx
index 70a127d805..602d5a5810 100644
--- a/src/sentry/static/sentry/app/views/events/events.jsx
+++ b/src/sentry/static/sentry/app/views/events/events.jsx
@@ -121,22 +121,31 @@ class Events extends AsyncView {
     return `Events - ${this.props.organization.slug}`;
   }
 
-  onRequestSuccess({data, jqXHR}) {
-    const {organization} = this.props;
-
-    // TODO: This is actually not optimal because `AsyncComponent.handleRequestSuccess`
-    // still gets called and updates state when the response may not be what the component
-    // expects.
-    //
-    // Ideally when a direct hit is found, we should not update state in `handleRequestSuccess`
+  async handleRequestSuccess({stateKey, data, jqXHR}, ...args) {
+    // When a direct hit is found, do not update state in `handleRequestSuccess`
     if (jqXHR.getResponseHeader('X-Sentry-Direct-Hit') === '1') {
+      const {organization} = this.props;
       const event = data[0];
-      const project = organization.projects.find(p => p.id === event.projectID);
 
-      browserHistory.replace(
-        `/organizations/${organization.slug}/projects/${project.slug}/events/${event.eventID}/`
+      const resp = await this.api.requestPromise(
+        `/organizations/${organization.slug}/projects/`,
+        {
+          query: {
+            query: `id:${event.projectID}`,
+          },
+        }
       );
+
+      if (resp && resp.length > 0) {
+        const project = resp[0];
+        browserHistory.replace(
+          `/organizations/${organization.slug}/projects/${project.slug}/events/${event.eventID}/`
+        );
+        return;
+      }
     }
+
+    super.handleRequestSuccess({stateKey, data, jqXHR}, ...args);
   }
 
   onRequestError(resp) {
diff --git a/src/sentry/static/sentry/app/views/projectEventRedirect.jsx b/src/sentry/static/sentry/app/views/projectEventRedirect.jsx
index b9d5280f99..9211284a46 100644
--- a/src/sentry/static/sentry/app/views/projectEventRedirect.jsx
+++ b/src/sentry/static/sentry/app/views/projectEventRedirect.jsx
@@ -1,8 +1,9 @@
-import React from 'react';
 import PropTypes from 'prop-types';
+import React from 'react';
 
-import DetailedError from 'app/components/errors/detailedError';
+import {PageContent} from 'app/styles/organization';
 import {t} from 'app/locale';
+import DetailedError from 'app/components/errors/detailedError';
 
 /**
  * This component performs a client-side redirect to Event Details given only
@@ -70,7 +71,7 @@ class ProjectEventRedirect extends React.Component {
         />
       );
     }
-    return null;
+    return <PageContent />;
   }
 }
 
diff --git a/tests/js/spec/views/events/events.spec.jsx b/tests/js/spec/views/events/events.spec.jsx
index 88507e905f..f08499375a 100644
--- a/tests/js/spec/views/events/events.spec.jsx
+++ b/tests/js/spec/views/events/events.spec.jsx
@@ -450,6 +450,8 @@ describe('EventsContainer', function() {
       routerContext
     );
 
+    await tick();
+
     expect(eventsMock).toHaveBeenCalled();
     expect(browserHistory.replace).toHaveBeenCalledWith(
       `/organizations/org-slug/projects/project-slug/events/${eventId}/`
