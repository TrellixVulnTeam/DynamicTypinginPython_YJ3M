commit 0906242916bbc7a904fb1ab92a1660157c71d6ca
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Apr 23 20:36:52 2020 -0700

    fix(alerts): Allow members to change alert status' (#18453)

diff --git a/src/sentry/static/sentry/app/views/alerts/details/header.tsx b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
index d1dea51360..4e4802b497 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/header.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
@@ -7,7 +7,6 @@ import isPropValid from '@emotion/is-prop-valid';
 
 import {PageHeader} from 'app/styles/organization';
 import {t} from 'app/locale';
-import Access from 'app/components/acl/access';
 import Count from 'app/components/count';
 import DropdownControl from 'app/components/dropdownControl';
 import Duration from 'app/components/duration';
@@ -43,27 +42,21 @@ export default class DetailsHeader extends React.Component<Props> {
     const isIncidentOpen = incident && isOpen(incident);
     const statusLabel = incident ? <Status incident={incident} /> : null;
 
-    return (
-      <Access access={['org:write']}>
-        {({hasAccess}) =>
-          hasAccess && isIncidentOpen ? (
-            <DropdownControl
-              data-test-id="status-dropdown"
-              label={statusLabel}
-              menuWidth="200px"
-              alignRight
-              buttonProps={{size: 'small', disabled: !incident}}
-            >
-              <StatusMenuItem onSelect={onStatusChange}>
-                <IconCheckmark circle color={theme.greenLight} />
-                {t('Resolve this incident')}
-              </StatusMenuItem>
-            </DropdownControl>
-          ) : (
-            statusLabel
-          )
-        }
-      </Access>
+    return isIncidentOpen ? (
+      <DropdownControl
+        data-test-id="status-dropdown"
+        label={statusLabel}
+        menuWidth="200px"
+        alignRight
+        buttonProps={{size: 'small', disabled: !incident}}
+      >
+        <StatusMenuItem onSelect={onStatusChange}>
+          <IconCheckmark circle color={theme.greenLight} />
+          {t('Resolve this incident')}
+        </StatusMenuItem>
+      </DropdownControl>
+    ) : (
+      statusLabel
     );
   }
 
diff --git a/tests/js/spec/views/alerts/details/index.spec.jsx b/tests/js/spec/views/alerts/details/index.spec.jsx
index 13e1944635..a6aa35fc89 100644
--- a/tests/js/spec/views/alerts/details/index.spec.jsx
+++ b/tests/js/spec/views/alerts/details/index.spec.jsx
@@ -15,8 +15,11 @@ describe('IncidentDetails', function() {
   const mockIncident = TestStubs.Incident({projects: [project.slug]});
   let activitiesList;
 
-  const createWrapper = props =>
-    mountWithTheme(<IncidentDetails params={params} {...props} />, routerContext);
+  const createWrapper = (props, routerCtx) =>
+    mountWithTheme(
+      <IncidentDetails params={params} {...props} />,
+      routerCtx ?? routerContext
+    );
 
   beforeAll(function() {
     ProjectsStore.loadInitialData([project]);
@@ -147,6 +150,23 @@ describe('IncidentDetails', function() {
     expect(wrapper.find('Status').text()).toBe('Resolved');
   });
 
+  it('allows members to change issuet status', async function() {
+    const noAccessOrg = {...organization, access: ['project:read']};
+
+    const wrapper = createWrapper(
+      {},
+      {...routerContext, context: {...routerContext.context, organization: noAccessOrg}}
+    );
+
+    await tick();
+    wrapper.update();
+
+    expect(wrapper.find('Status').text()).not.toBe('Resolved');
+    expect(wrapper.find('[data-test-id="status-dropdown"] DropdownButton').exists()).toBe(
+      true
+    );
+  });
+
   it('toggles subscribe status with Subscribe button', async function() {
     const wrapper = createWrapper();
 
