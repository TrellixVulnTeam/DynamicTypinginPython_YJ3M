commit 130aedcdff4e905297997f26149ac708d424699b
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jul 3 13:20:20 2018 -0700

    chore: Remove usage of new-teams feature flag (#8891)
    
    This is default for all users now so lets remove the feature switches

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 51314777a5..57a770d67d 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -22,7 +22,7 @@ from sentry.api.serializers.rest_framework import ListField, OriginField
 from sentry.constants import RESERVED_PROJECT_SLUGS
 from sentry.models import (
     AuditLogEntryEvent, Group, GroupStatus, Project, ProjectBookmark, ProjectRedirect,
-    ProjectStatus, ProjectTeam, UserOption, Team,
+    ProjectStatus, ProjectTeam, UserOption,
 )
 from sentry.tasks.deletion import delete_project
 from sentry.utils.apidocs import scenario, attach_scenarios
@@ -275,37 +275,12 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
         old_team_id = None
         new_team = None
         if result.get('team'):
-            if features.has('organizations:new-teams',
-                            project.organization, actor=request.user):
-                return Response(
-                    {
-                        'detail': ['Editing a team via this endpoint has been deprecated.']
-                    },
-                    status=400
-                )
-
-            team_list = [
-                t for t in Team.objects.get_for_user(
-                    organization=project.organization,
-                    user=request.user,
-                )
-                if request.access.has_team_scope(t, 'project:write')
-                if t.slug == result['team']
-            ]
-            if not team_list:
-                return Response(
-                    {
-                        'detail': ['The new team is not found.']
-                    }, status=400
-                )
-            # TODO(jess): update / deprecate this functionality
-            try:
-                old_team_id = project.teams.values_list('id', flat=True)[0]
-            except IndexError:
-                pass
-
-            new_team = team_list[0]
-            changed = True
+            return Response(
+                {
+                    'detail': ['Editing a team via this endpoint has been deprecated.']
+                },
+                status=400
+            )
 
         if result.get('platform'):
             project.platform = result['platform']
diff --git a/src/sentry/api/endpoints/project_transfer.py b/src/sentry/api/endpoints/project_transfer.py
index 8a82b0e3ce..8826f49b35 100644
--- a/src/sentry/api/endpoints/project_transfer.py
+++ b/src/sentry/api/endpoints/project_transfer.py
@@ -8,7 +8,7 @@ from django.utils import timezone
 from rest_framework import status
 from rest_framework.response import Response
 
-from sentry import features, roles, options
+from sentry import roles, options
 from sentry.api.bases.project import ProjectEndpoint, ProjectPermission
 from sentry.api.decorators import sudo_required
 from sentry.models import (
@@ -76,15 +76,10 @@ class ProjectTransferEndpoint(ProjectEndpoint):
             user_id=owner.user_id,
             transaction_id=transaction_id)
 
-        has_new_teams = features.has(
-            'organizations:new-teams',
-            project.organization,
-            actor=request.user,
-        )
         context = {
             'email': email,
             'from_org': project.organization.name,
-            'project_name': project.slug if has_new_teams else project.name,
+            'project_name': project.slug,
             'request_time': timezone.now(),
             'url':
             absolute_uri('/accept-transfer/') + '?' + urlencode({'data': url_data}),
diff --git a/src/sentry/integrations/slack/utils.py b/src/sentry/integrations/slack/utils.py
index 86bb38afe6..bd98187c92 100644
--- a/src/sentry/integrations/slack/utils.py
+++ b/src/sentry/integrations/slack/utils.py
@@ -4,7 +4,7 @@ import logging
 
 from six.moves.urllib.parse import parse_qs, urlencode, urlparse, urlunparse
 
-from sentry import features, tagstore
+from sentry import tagstore
 from sentry.api.fields.actor import Actor
 from sentry.utils import json
 from sentry.utils.assets import get_asset_url
@@ -226,11 +226,6 @@ def build_attachment(group, event=None, tags=None, identity=None, actions=None,
         },
     ]
 
-    # TODO(epurkhiser): Remove when teams are no longer early adopter
-    if not features.has('organizations:new-teams', group.organization):
-        payload_actions[2]['options'] = members
-        del payload_actions[2]['option_groups']
-
     fields = []
 
     if tags:
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index e195aff7ed..00934acb2a 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -293,11 +293,6 @@ class Project(Model):
         return is_enabled
 
     def transfer_to(self, team=None, organization=None):
-
-        # TODO(jess): remove this when new-teams is live for everyone
-        # only support passing team or org not both
-        assert not (team and organization)
-
         # NOTE: this will only work properly if the new team is in a different
         # org than the existing one, which is currently the only use case in
         # production
diff --git a/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py b/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py
index b402668479..10ffce37c3 100644
--- a/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py
+++ b/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py
@@ -1,6 +1,5 @@
 from __future__ import absolute_import
 
-from sentry import features
 from sentry.models import GroupSubscriptionReason, EventError
 from sentry.utils.http import absolute_uri
 
@@ -55,12 +54,8 @@ class NewProcessingIssuesActivityEmail(ActivityEmail):
         }
 
     def get_subject(self):
-        has_new_teams = features.has(
-            'organizations:new-teams',
-            self.organization,
-        )
         return u'Processing Issues on {}'.format(
-            self.project.slug if has_new_teams else self.project.name,
+            self.project.slug
         )
 
     def get_template(self):
diff --git a/src/sentry/static/sentry/app/components/activity/noteInput.jsx b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
index 0fb2ef643f..955fee254b 100644
--- a/src/sentry/static/sentry/app/components/activity/noteInput.jsx
+++ b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
@@ -296,10 +296,9 @@ const NoteInput = createReactClass({
       mentionableTeams,
     } = this.state;
 
-    let hasTeamMentions = new Set(this.getOrganization().features).has('new-teams');
-    let placeHolderText = hasTeamMentions
-      ? t('Add details or updates to this event. \nTag users with @, or teams with #')
-      : t('Add details or updates to this event. \nTag users with @');
+    let placeHolderText = t(
+      'Add details or updates to this event. \nTag users with @, or teams with #'
+    );
 
     let btnText = updating ? t('Save Comment') : t('Post Comment');
 
@@ -351,15 +350,13 @@ const NoteInput = createReactClass({
                 onAdd={this.onAddMember}
                 appendSpaceOnAdd={true}
               />
-              {hasTeamMentions ? (
-                <Mention
-                  type="team"
-                  trigger="#"
-                  data={mentionableTeams}
-                  onAdd={this.onAddTeam}
-                  appendSpaceOnAdd={true}
-                />
-              ) : null}
+              <Mention
+                type="team"
+                trigger="#"
+                data={mentionableTeams}
+                onAdd={this.onAddTeam}
+                appendSpaceOnAdd={true}
+              />
             </MentionsInput>
           )}
           <div className="activity-actions">
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index d218c920ff..da7ba693d2 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -248,31 +248,23 @@ const AssigneeSelector = createReactClass({
   renderTeamNodes() {
     let {filter} = this.state;
     let {size} = this.props;
-    let teamNodes = [];
-    let org = this.context.organization;
-    let features = new Set(org.features);
 
-    if (features.has('new-teams')) {
-      teamNodes = this.assignableTeams().map(({id, display, team}) => {
-        return (
-          <MenuItem key={id} onSelect={this.assignToTeam.bind(this, team)}>
-            <MenuItemWrapper>
-              <IconContainer>
-                <Avatar team={team} size={size} />
-              </IconContainer>
-              <Label>{this.highlight(display, filter)}</Label>
-            </MenuItemWrapper>
-          </MenuItem>
-        );
-      });
-    }
-    return teamNodes;
+    return this.assignableTeams().map(({id, display, team}) => {
+      return (
+        <MenuItem key={id} onSelect={this.assignToTeam.bind(this, team)}>
+          <MenuItemWrapper>
+            <IconContainer>
+              <Avatar team={team} size={size} />
+            </IconContainer>
+            <Label>{this.highlight(display, filter)}</Label>
+          </MenuItemWrapper>
+        </MenuItem>
+      );
+    });
   },
 
   renderDropdownItems() {
     let {loading, assignedTo} = this.state;
-    let org = this.context.organization;
-    let features = new Set(org.features);
     let teams = this.renderTeamNodes();
     let members = this.renderMemberNodes();
     let hasTeamsAndMembers = teams.length && members.length;
@@ -284,11 +276,7 @@ const AssigneeSelector = createReactClass({
           <input
             type="text"
             className="form-control input-sm"
-            placeholder={
-              features.has('new-teams')
-                ? t('Filter teams and people')
-                : t('Filter members')
-            }
+            placeholder={t('Filter teams and people')}
             ref={ref => this.onFilterMount(ref)}
             onClick={this.onFilterClick}
             onKeyDown={this.onFilterKeyDown}
diff --git a/src/sentry/static/sentry/app/components/createTeam/createTeamForm.jsx b/src/sentry/static/sentry/app/components/createTeam/createTeamForm.jsx
index 1fe4cb09f8..d3798eab8a 100644
--- a/src/sentry/static/sentry/app/components/createTeam/createTeamForm.jsx
+++ b/src/sentry/static/sentry/app/components/createTeam/createTeamForm.jsx
@@ -21,7 +21,6 @@ export default class CreateTeamForm extends React.Component {
 
   render() {
     let {organization} = this.props;
-    let features = new Set(organization.features);
 
     return (
       <React.Fragment>
@@ -39,28 +38,16 @@ export default class CreateTeamForm extends React.Component {
           onSubmitSuccess={this.handleCreateTeamSuccess}
           requireChanges
         >
-          {features.has('new-teams') ? (
-            <TextField
-              name="slug"
-              label={t('Team Slug')}
-              placeholder={t('e.g. operations, web-frontend, desktop')}
-              help={t('May contain lowercase letters, numbers, dashes and underscores.')}
-              required
-              flexibleControlStateSize
-              inline={false}
-              p={0}
-            />
-          ) : (
-            <TextField
-              name="name"
-              label={t('Team Name')}
-              placeholder={t('e.g. Operations, Web, Desktop')}
-              required
-              flexibleControlStateSize
-              inline={false}
-              p={0}
-            />
-          )}
+          <TextField
+            name="slug"
+            label={t('Team Slug')}
+            placeholder={t('e.g. operations, web-frontend, desktop')}
+            help={t('May contain lowercase letters, numbers, dashes and underscores.')}
+            required
+            flexibleControlStateSize
+            inline={false}
+            p={0}
+          />
         </Form>
       </React.Fragment>
     );
diff --git a/src/sentry/static/sentry/app/components/missingProjectMembership.jsx b/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
index dd3fa9a01f..cc460972a3 100644
--- a/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
+++ b/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
@@ -85,33 +85,13 @@ const MissingProjectMembership = createReactClass({
   },
 
   renderExplanation(features) {
-    if (features.has('new-teams')) {
-      if (features.has('open-membership')) {
-        return t('To view this data you must one of the following teams.');
-      } else {
-        return t(
-          'To view this data you must first request access to one of the following teams:'
-        );
-      }
-    }
-
-    let {project} = this.state;
-    let {team} = project;
-
-    if (team) {
-      if (features.has('open-membership')) {
-        return t('To view this data you must first join the %s team.', team.name);
-      }
-
+    if (features.has('open-membership')) {
+      return t('To view this data you must one of the following teams.');
+    } else {
       return t(
-        'To view this data you must first request access to the %s team.',
-        team.name
+        'To view this data you must first request access to one of the following teams:'
       );
     }
-
-    return t(
-      'This project is not associated with any teams. To view this data, an administrator must grant access to a team you are on.'
-    );
   },
 
   renderJoinTeams(features) {
@@ -137,7 +117,6 @@ const MissingProjectMembership = createReactClass({
 
   render() {
     let {organization} = this.props;
-    let {team} = this.state.project;
     let features = new Set(organization.features);
 
     return (
@@ -146,11 +125,7 @@ const MissingProjectMembership = createReactClass({
           <span className="icon icon-exclamation" />
           <p>{t("You're not a member of this project.")}</p>
           <p>{this.renderExplanation(features)}</p>
-          {features.has('new-teams') ? (
-            this.renderJoinTeams(features)
-          ) : (
-            <p>{this.renderJoinTeam(team, features)}</p>
-          )}
+          {this.renderJoinTeams(features)}
         </div>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index 03a3f033bd..66d9f3fe63 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -12,7 +12,6 @@ import DropdownLink from 'app/components/dropdownLink';
 import IdBadge from 'app/components/idBadge';
 import Link from 'app/components/link';
 import MenuItem from 'app/components/menuItem';
-import ProjectLabel from 'app/components/projectLabel';
 
 const ProjectSelector = createReactClass({
   displayName: 'ProjectSelector',
@@ -75,7 +74,6 @@ const ProjectSelector = createReactClass({
   getProjectState(state) {
     state = state || this.state;
     let org = this.props.organization;
-    let features = new Set(org.features);
     let filter = state.filter.toLowerCase();
     let projectList = [];
 
@@ -94,11 +92,7 @@ const ProjectSelector = createReactClass({
       }
 
       let fullName;
-      if (features.has('new-teams')) {
-        fullName = [project.name, project.slug];
-      } else {
-        fullName = [team.name, project.name, team.slug, project.slug];
-      }
+      fullName = [project.name, project.slug];
       fullName = fullName.join(' ').toLowerCase();
 
       if (filter && fullName.indexOf(filter) === -1) {
@@ -228,24 +222,8 @@ const ProjectSelector = createReactClass({
   },
 
   getProjectLabel(team, project, hasSingleTeam, highlightText) {
-    let label, text;
-    let features = new Set(this.props.organization.features);
-
-    if (features.has('new-teams')) {
-      label = <span>{project.slug}</span>;
-      text = project.slug;
-    } else if (!hasSingleTeam && project.name.indexOf(team.name) === -1) {
-      label = (
-        <span>
-          {team.name} /{' '}
-          <ProjectLabel project={project} organization={this.props.organization} />
-        </span>
-      );
-      text = team.name + ' / ' + project.name;
-    } else {
-      label = <span>{project.name}</span>;
-      text = project.name;
-    }
+    let label = <span>{project.slug}</span>;
+    let text = project.slug;
 
     if (!highlightText) {
       return label;
@@ -324,20 +302,12 @@ const ProjectSelector = createReactClass({
 
   render() {
     let org = this.props.organization;
-    let features = new Set(org.features);
     let access = new Set(org.access);
     let hasSingleTeam = org.teams.length === 1;
 
-    let projectList;
-    if (features.has('new-teams')) {
-      projectList = sortArray(this.state.projectList, ([team, project]) => {
-        return [!project.isBookmarked, project.name];
-      });
-    } else {
-      projectList = sortArray(this.state.projectList, ([team, project]) => {
-        return [!project.isBookmarked, team.name, project.name];
-      });
-    }
+    let projectList = sortArray(this.state.projectList, ([team, project]) => {
+      return [!project.isBookmarked, project.name];
+    });
 
     let children = projectList.map(([team, project], index) => {
       return this.getProjectNode(
diff --git a/src/sentry/static/sentry/app/components/projectLabel.jsx b/src/sentry/static/sentry/app/components/projectLabel.jsx
index d8e3446141..9eeb098451 100644
--- a/src/sentry/static/sentry/app/components/projectLabel.jsx
+++ b/src/sentry/static/sentry/app/components/projectLabel.jsx
@@ -4,18 +4,14 @@ import React from 'react';
 export default class ProjectLabel extends React.PureComponent {
   static propTypes = {
     project: PropTypes.object,
-    organization: PropTypes.object,
   };
 
   render() {
-    let {project, organization} = this.props;
-    let features = organization && new Set(organization.features);
+    let {project} = this.props;
 
     return (
       <span className="project-label" {...this.props}>
-        <span className="project-name">
-          {!features || features.has('new-teams') ? project.slug : project.name}
-        </span>
+        <span className="project-name">{project.slug}</span>
       </span>
     );
   }
diff --git a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
index 78955447ab..265059e9be 100644
--- a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
@@ -68,8 +68,7 @@ export const fields = {
     type: 'array',
     label: t('Team'),
     visible: ({organization}) => {
-      let features = new Set(organization.features);
-      return !features.has('new-teams') && organization.teams.length > 1;
+      return organization.teams.length > 1;
     },
     choices: ({organization}) =>
       organization.teams.filter(o => o.isMember).map(o => [o.slug, o.slug]),
diff --git a/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx b/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx
index d48ad7fd0f..0a09a32a3d 100644
--- a/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx
+++ b/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx
@@ -18,40 +18,16 @@ class AcceptProjectTransfer extends AsyncView {
     return t('Accept Project Transfer');
   }
 
-  hasTeamsFeature() {
-    let {transferDetails} = this.state;
-    return transferDetails.organizations.every(org => {
-      let features = new Set(org.features);
-      return features.has('new-teams');
-    });
-  }
-
   handleSubmit = formData => {
-    let hasTeamsFeature = this.hasTeamsFeature();
-    let kwargs = hasTeamsFeature
-      ? {organization: formData.organization}
-      : {team: formData.team};
     this.api.request('/accept-transfer/', {
       method: 'POST',
       data: {
         data: this.props.location.query.data,
-        ...kwargs,
+        organization: formData.organization,
       },
       success: () => {
-        let orgSlug;
-        if (hasTeamsFeature) {
-          orgSlug = formData.organization;
-        } else {
-          this.state.transferDetails.organizations.forEach(o => {
-            if (!orgSlug) {
-              o.teams.forEach(team => {
-                if (team.id === formData.team) {
-                  orgSlug = o.slug;
-                }
-              });
-            }
-          });
-        }
+        let orgSlug = formData.organization;
+
         this.props.router.push(`/${orgSlug}`);
         addSuccessMessage(t('Project successfully transferred'));
       },
@@ -64,68 +40,39 @@ class AcceptProjectTransfer extends AsyncView {
   renderBody() {
     let {transferDetails} = this.state;
     let choices = [];
-    let hasTeamsFeature = this.hasTeamsFeature();
 
     transferDetails.organizations.forEach(org => {
-      if (hasTeamsFeature) {
-        choices.push([org.slug, org.slug]);
-      } else {
-        org.teams.forEach(team => {
-          choices.push([team.id, `#${team.slug} - ${org.slug}`]);
-        });
-      }
+      choices.push([org.slug, org.slug]);
     });
     return (
       <NarrowLayout>
         <SettingsPageHeader title={t('Approve Transfer Project Request')} />
         <p>
-          {hasTeamsFeature
-            ? tct(
-                'Projects must be transferred to a specific [organization]. ' +
-                  'You can grant specific teams access to the project later under the [projectSettings].',
-                {
-                  organization: <strong>{t('Organization')}</strong>,
-                  projectSettings: <strong>{t('Project Settings')}</strong>,
-                }
-              )
-            : tct(
-                'Projects must be transferred to a specific [team] in order to be moved over to another [organization]. ' +
-                  'You can always change the team later under the [projectSettings].',
-                {
-                  team: <strong>{t('Team')}</strong>,
-                  organization: <strong>{t('Organization')}</strong>,
-                  projectSettings: <strong>{t('Project Settings')}</strong>,
-                }
-              )}
+          {tct(
+            'Projects must be transferred to a specific [organization]. ' +
+              'You can grant specific teams access to the project later under the [projectSettings].',
+            {
+              organization: <strong>{t('Organization')}</strong>,
+              projectSettings: <strong>{t('Project Settings')}</strong>,
+            }
+          )}
         </p>
         <p>
-          {hasTeamsFeature
-            ? tct(
-                'Please select which [organization] you want for the project [project].',
-                {
-                  organization: <strong>{t('Organization')}</strong>,
-                  project: transferDetails.project.slug,
-                }
-              )
-            : tct('Please select which [team] you want for the project [project].', {
-                team: <strong>{t('Team')}</strong>,
-                project: transferDetails.project.slug,
-              })}
+          {tct('Please select which [organization] you want for the project [project].', {
+            organization: <strong>{t('Organization')}</strong>,
+            project: transferDetails.project.slug,
+          })}
         </p>
         <Form
           onSubmit={this.handleSubmit}
           submitLabel={t('Transfer Project')}
           submitPriority="danger"
-          initialData={
-            hasTeamsFeature
-              ? {organization: choices[0] && choices[0][0]}
-              : {team: choices[0] && choices[0][0]}
-          }
+          initialData={{organization: choices[0] && choices[0][0]}}
         >
           <SelectField
             choices={choices}
-            label={hasTeamsFeature ? t('Organization') : t('Team')}
-            name={hasTeamsFeature ? 'organization' : 'team'}
+            label={t('Organization')}
+            name={'organization'}
             style={{borderBottom: 'none'}}
           />
         </Form>
diff --git a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
index 5bb1579872..1796f82006 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
@@ -21,8 +21,6 @@ const ProjectTable = ({projectMap, projectTotals, orgTotal, organization}) => {
     return parseInt(item / total * 100, 10) + '%';
   };
 
-  let features = new Set(organization.features);
-
   if (!projectTotals) {
     return <div />;
   }
@@ -35,11 +33,7 @@ const ProjectTable = ({projectMap, projectTotals, orgTotal, organization}) => {
     return (
       <StyledProjectTableLayout key={index}>
         <StyledProjectTitle>
-          <Link to={`/${organization.slug}/${project.slug}/`}>
-            {features.has('new-teams')
-              ? project.slug
-              : `${project.team.name} / ${project.name}`}
-          </Link>
+          <Link to={`/${organization.slug}/${project.slug}/`}>{project.slug}</Link>
         </StyledProjectTitle>
         <ProjectTableDataElement>
           <Count value={item.accepted} />
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
index 1c6fb764b8..5a85ee0233 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
@@ -74,7 +74,7 @@ const ProjectItem = createReactClass({
           </InlineButton>
         </Tooltip>
         <Link to={`/settings/${organization.slug}/${project.slug}/`}>
-          <ProjectLabel project={project} organization={organization} />
+          <ProjectLabel project={project} />
         </Link>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
index 83bd3b5f4e..c49b06c569 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
@@ -114,9 +114,8 @@ const AllTeamsRow = createReactClass({
   },
 
   render() {
-    let {access, team, urlPrefix, openMembership, organization} = this.props;
-    let features = new Set(organization.features);
-    let display = features.has('new-teams') ? <IdBadge team={team} /> : team.name;
+    let {access, team, urlPrefix, openMembership} = this.props;
+    let display = <IdBadge team={team} />;
 
     return (
       <PanelItem p={0} align="center">
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
index 298c9d9665..95f4cc2bfa 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
@@ -99,11 +99,7 @@ const TeamDetails = createReactClass({
     return (
       <div>
         <h3>
-          {features.has('new-teams') ? (
-            <IdBadge hideAvatar team={team} avatarSize={36} />
-          ) : (
-            team.name
-          )}
+          <IdBadge hideAvatar team={team} avatarSize={36} />
         </h3>
 
         {!features.has('new-settings') &&
diff --git a/src/sentry/static/sentry/app/views/teamCreate.jsx b/src/sentry/static/sentry/app/views/teamCreate.jsx
index 12b7cfff6a..428d1e71aa 100644
--- a/src/sentry/static/sentry/app/views/teamCreate.jsx
+++ b/src/sentry/static/sentry/app/views/teamCreate.jsx
@@ -21,16 +21,8 @@ class TeamCreate extends AsyncView {
   }
 
   handleSubmitSuccess = data => {
-    let features = new Set(this.context.organization.features);
-
     let {orgId} = this.props.params;
-
-    // Legacy behavior: redirect to project creation
-    let redirectUrl = `/organizations/${orgId}/projects/new/?team=${data.slug}`;
-    if (features.has('new-teams')) {
-      // New behavior: redirect to team settings page
-      redirectUrl = `/settings/${orgId}/teams/${data.slug}/`;
-    }
+    let redirectUrl = `/settings/${orgId}/teams/${data.slug}/`;
     this.props.router.push(redirectUrl);
   };
 
diff --git a/src/sentry/web/frontend/remove_project.py b/src/sentry/web/frontend/remove_project.py
index 89d929a300..66c01b444c 100644
--- a/src/sentry/web/frontend/remove_project.py
+++ b/src/sentry/web/frontend/remove_project.py
@@ -6,7 +6,6 @@ from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _
 
-from sentry import features
 from sentry.api import client
 from sentry.web.frontend.base import ProjectView
 
@@ -34,12 +33,7 @@ class RemoveProjectView(ProjectView):
                 is_sudo=True
             )
 
-            has_new_teams = features.has(
-                'organizations:new-teams',
-                organization,
-                actor=request.user,
-            )
-            project_name = (project.slug if has_new_teams else project.name).encode('utf-8')
+            project_name = project.slug.encode('utf-8')
             messages.add_message(
                 request, messages.SUCCESS,
                 _(u'The project %r was scheduled for deletion.') % (project_name, )
diff --git a/src/sentry/web/frontend/transfer_project.py b/src/sentry/web/frontend/transfer_project.py
index 1e7d5cad27..a434b4398d 100644
--- a/src/sentry/web/frontend/transfer_project.py
+++ b/src/sentry/web/frontend/transfer_project.py
@@ -11,7 +11,7 @@ from django.http import HttpResponseRedirect
 from django.utils import timezone
 from django.utils.translation import ugettext_lazy as _
 
-from sentry import features, roles, options
+from sentry import roles, options
 from sentry.web.frontend.base import ProjectView
 from sentry.utils.email import MessageBuilder
 from sentry.utils.http import absolute_uri
@@ -61,15 +61,10 @@ class TransferProjectView(ProjectView):
                 user_id=owner.user_id,
                 transaction_id=transaction_id)
 
-            has_new_teams = features.has(
-                'organizations:new-teams',
-                organization,
-                actor=request.user,
-            )
             context = {
                 'email': email,
                 'from_org': organization.name,
-                'project_name': project.slug if has_new_teams else project.name,
+                'project_name': project.slug,
                 'request_time': timezone.now(),
                 'url':
                 absolute_uri('/accept-transfer/') + '?' + urlencode({'data': url_data}),
@@ -96,7 +91,7 @@ class TransferProjectView(ProjectView):
             messages.add_message(
                 request, messages.SUCCESS,
                 _(u'A request was sent to move project %r to a different organization') %
-                ((project.slug if has_new_teams else project.name).encode('utf-8'), )
+                (project.slug.encode('utf-8'), )
             )
 
             return HttpResponseRedirect(
diff --git a/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap b/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap
index e0787f9700..2dc18d4e30 100644
--- a/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap
@@ -50,7 +50,7 @@ exports[`NoteInput renders 1`] = `
       onChange={[Function]}
       onKeyDown={[Function]}
       placeholder="Add details or updates to this event. 
-Tag users with @"
+Tag users with @, or teams with #"
       required={true}
       style={
         Object {
@@ -121,6 +121,16 @@ Tag users with @"
         trigger="@"
         type="member"
       />
+      <withDefaultStyle()
+        appendSpaceOnAdd={true}
+        data={Array []}
+        isLoading={false}
+        onAdd={[Function]}
+        onRemove={[Function]}
+        renderSuggestion={null}
+        trigger="#"
+        type="team"
+      />
     </withDefaultStyle(MentionsInput)>
     <div
       className="activity-actions"
diff --git a/tests/js/spec/components/assigneeSelector.spec.jsx b/tests/js/spec/components/assigneeSelector.spec.jsx
index d57f094ce9..4cca853a1c 100644
--- a/tests/js/spec/components/assigneeSelector.spec.jsx
+++ b/tests/js/spec/components/assigneeSelector.spec.jsx
@@ -157,9 +157,6 @@ describe('AssigneeSelector', function() {
         <AssigneeSelector id={GROUP_1.id} />,
         TestStubs.routerContext()
       );
-      assigneeSelector.setContext({
-        organization: {id: '1', features: new Set(['new-teams'])},
-      });
 
       openMenu = () => assigneeSelector.find('a').simulate('click');
     });
@@ -288,7 +285,7 @@ describe('AssigneeSelector', function() {
       // Remove org:write access permission and make sure invite member button is not shown.
       sel = mount(<AssigneeSelector id={GROUP_1.id} />, TestStubs.routerContext());
       sel.setContext({
-        organization: {id: '1', features: new Set(['new-teams'])},
+        organization: {id: '1'},
       });
       sel.find('a').simulate('click');
       expect(sel.find('MenuItem.invite-member').exists()).toBe(false);
diff --git a/tests/js/spec/components/modals/createTeamModal.spec.jsx b/tests/js/spec/components/modals/createTeamModal.spec.jsx
index 704c1db6df..918f576af0 100644
--- a/tests/js/spec/components/modals/createTeamModal.spec.jsx
+++ b/tests/js/spec/components/modals/createTeamModal.spec.jsx
@@ -10,7 +10,7 @@ jest.mock('app/actionCreators/teams', () => ({
 }));
 
 describe('CreateTeamModal', function() {
-  let org = TestStubs.Organization({features: ['new-teams']});
+  let org = TestStubs.Organization();
   let closeModal = jest.fn();
   let onClose = jest.fn();
 
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index 094b886ba7..014ae7ab2e 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -321,32 +321,6 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                             style={Object {}}
                           >
                             <ProjectLabel
-                              organization={
-                                Object {
-                                  "access": Array [
-                                    "org:read",
-                                    "org:write",
-                                    "org:admin",
-                                    "project:read",
-                                    "project:write",
-                                    "project:admin",
-                                    "team:read",
-                                    "team:write",
-                                    "team:admin",
-                                  ],
-                                  "features": Array [],
-                                  "id": "3",
-                                  "name": "Organization Name",
-                                  "onboardingTasks": Array [],
-                                  "projects": Array [],
-                                  "slug": "org-slug",
-                                  "status": Object {
-                                    "id": "active",
-                                    "name": "active",
-                                  },
-                                  "teams": Array [],
-                                }
-                              }
                               project={
                                 Object {
                                   "hasAccess": true,
@@ -368,32 +342,6 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                             >
                               <span
                                 className="project-label"
-                                organization={
-                                  Object {
-                                    "access": Array [
-                                      "org:read",
-                                      "org:write",
-                                      "org:admin",
-                                      "project:read",
-                                      "project:write",
-                                      "project:admin",
-                                      "team:read",
-                                      "team:write",
-                                      "team:admin",
-                                    ],
-                                    "features": Array [],
-                                    "id": "3",
-                                    "name": "Organization Name",
-                                    "onboardingTasks": Array [],
-                                    "projects": Array [],
-                                    "slug": "org-slug",
-                                    "status": Object {
-                                      "id": "active",
-                                      "name": "active",
-                                    },
-                                    "teams": Array [],
-                                  }
-                                }
                                 project={
                                   Object {
                                     "hasAccess": true,
@@ -416,7 +364,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                 <span
                                   className="project-name"
                                 >
-                                  Project Name
+                                  project-slug
                                 </span>
                               </span>
                             </ProjectLabel>
diff --git a/tests/js/spec/views/organizationTeamProjects.spec.jsx b/tests/js/spec/views/organizationTeamProjects.spec.jsx
index f1ea85dc2b..5d229ea807 100644
--- a/tests/js/spec/views/organizationTeamProjects.spec.jsx
+++ b/tests/js/spec/views/organizationTeamProjects.spec.jsx
@@ -59,7 +59,7 @@ describe('OrganizationTeamProjects', function() {
     );
 
     expect(wrapper).toMatchSnapshot();
-    expect(wrapper.find('.project-name').text()).toBe('Project Name');
+    expect(wrapper.find('.project-name').text()).toBe('project-slug');
   });
 
   it('Should allow bookmarking', function() {
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
index 49ebabfc1d..601d3cc7c2 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
@@ -375,32 +375,6 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                         style={Object {}}
                                       >
                                         <ProjectLabel
-                                          organization={
-                                            Object {
-                                              "access": Array [
-                                                "org:read",
-                                                "org:write",
-                                                "org:admin",
-                                                "project:read",
-                                                "project:write",
-                                                "project:admin",
-                                                "team:read",
-                                                "team:write",
-                                                "team:admin",
-                                              ],
-                                              "features": Array [],
-                                              "id": "3",
-                                              "name": "Organization Name",
-                                              "onboardingTasks": Array [],
-                                              "projects": Array [],
-                                              "slug": "org-slug",
-                                              "status": Object {
-                                                "id": "active",
-                                                "name": "active",
-                                              },
-                                              "teams": Array [],
-                                            }
-                                          }
                                           project={
                                             Object {
                                               "hasAccess": true,
@@ -415,32 +389,6 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                         >
                                           <span
                                             className="project-label"
-                                            organization={
-                                              Object {
-                                                "access": Array [
-                                                  "org:read",
-                                                  "org:write",
-                                                  "org:admin",
-                                                  "project:read",
-                                                  "project:write",
-                                                  "project:admin",
-                                                  "team:read",
-                                                  "team:write",
-                                                  "team:admin",
-                                                ],
-                                                "features": Array [],
-                                                "id": "3",
-                                                "name": "Organization Name",
-                                                "onboardingTasks": Array [],
-                                                "projects": Array [],
-                                                "slug": "org-slug",
-                                                "status": Object {
-                                                  "id": "active",
-                                                  "name": "active",
-                                                },
-                                                "teams": Array [],
-                                              }
-                                            }
                                             project={
                                               Object {
                                                 "hasAccess": true,
@@ -456,7 +404,7 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                             <span
                                               className="project-name"
                                             >
-                                              Project Name
+                                              project-slug
                                             </span>
                                           </span>
                                         </ProjectLabel>
diff --git a/tests/js/spec/views/settings/organizationProjects.spec.jsx b/tests/js/spec/views/settings/organizationProjects.spec.jsx
index c27a8a6ce7..0524e491df 100644
--- a/tests/js/spec/views/settings/organizationProjects.spec.jsx
+++ b/tests/js/spec/views/settings/organizationProjects.spec.jsx
@@ -43,7 +43,7 @@ describe('OrganizationProjects', function() {
     );
     expect(wrapper).toMatchSnapshot();
 
-    expect(wrapper.find('.project-name').text()).toBe('Project Name');
+    expect(wrapper.find('.project-name').text()).toBe('project-slug');
 
     expect(projectsGetMock).toHaveBeenCalledTimes(1);
 
diff --git a/tests/js/spec/views/teamCreate.spec.jsx b/tests/js/spec/views/teamCreate.spec.jsx
index d2980f0348..c634492cd0 100644
--- a/tests/js/spec/views/teamCreate.spec.jsx
+++ b/tests/js/spec/views/teamCreate.spec.jsx
@@ -46,20 +46,10 @@ describe('TeamCreate', function() {
       );
     });
 
-    it('redirects to legacy team settings', function() {
-      wrapper.instance().handleSubmitSuccess({
-        slug: 'new-team',
-      });
-      expect(redirectMock).toBeCalledWith(
-        '/organizations/org/projects/new/?team=new-team'
-      );
-    });
-
-    it('redirects to new team settings', function() {
+    it('redirects to team settings', function() {
       wrapper.setContext({
         organization: {
           id: '1337',
-          features: ['new-teams'],
         },
       });
       wrapper.instance().handleSubmitSuccess({
