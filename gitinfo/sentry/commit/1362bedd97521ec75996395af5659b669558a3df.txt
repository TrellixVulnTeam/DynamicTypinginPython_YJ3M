commit 1362bedd97521ec75996395af5659b669558a3df
Author: Matte Noble <me@mattenoble.com>
Date:   Mon Apr 15 12:03:08 2019 -0700

    feat(app-platform): Sort Integrations (#12697)
    
    "Sentry Apps" and Integrations are now sorted among one another. First
    by Installed vs Uninstalled status, then alphabetically within each of
    those groupos.

diff --git a/src/sentry/static/sentry/app/components/avatar/sentryAppAvatar.jsx b/src/sentry/static/sentry/app/components/avatar/sentryAppAvatar.jsx
deleted file mode 100644
index 6dc54fb78f..0000000000
--- a/src/sentry/static/sentry/app/components/avatar/sentryAppAvatar.jsx
+++ /dev/null
@@ -1,31 +0,0 @@
-import React from 'react';
-
-import BaseAvatar from 'app/components/avatar/baseAvatar';
-import SentryTypes from 'app/sentryTypes';
-
-class SentryAppAvatar extends React.Component {
-  static propTypes = {
-    sentryApp: SentryTypes.SentryApplication.isRequired,
-    ...BaseAvatar.propTypes,
-  };
-
-  render() {
-    const {sentryApp, ...props} = this.props;
-    if (!sentryApp) {
-      return null;
-    }
-
-    return (
-      <BaseAvatar
-        {...props}
-        type="letter_avatar"
-        uploadPath="avatar"
-        uploadId=""
-        letterId={sentryApp.uuid}
-        tooltip={sentryApp.name}
-        title={sentryApp.name}
-      />
-    );
-  }
-}
-export default SentryAppAvatar;
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
index 9f6964d2f5..575d8a513e 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
@@ -132,11 +132,9 @@ class OrganizationIntegrations extends AsyncComponent {
 
   // Rendering
 
-  renderBody() {
-    const {reloading, applications, appInstalls} = this.state;
-    const providers = this.providers
-      .sort((a, b) => b.isInstalled - a.isInstalled)
-      .map(provider => (
+  renderProvider(provider) {
+    return (
+      <IntegrationRow key={`row-${provider.key}`}>
         <ProviderRow
           key={provider.key}
           provider={provider}
@@ -148,7 +146,55 @@ class OrganizationIntegrations extends AsyncComponent {
           onReinstall={this.onInstall}
           enabledPlugins={this.enabledPlugins}
         />
-      ));
+      </IntegrationRow>
+    );
+  }
+
+  renderSentryApps(apps, key) {
+    const {appInstalls} = this.state;
+
+    return (
+      <IntegrationRow key={`row-${key}`}>
+        <SentryAppInstallations
+          key={key}
+          orgId={this.props.params.orgId}
+          installs={appInstalls}
+          applications={apps}
+        />
+      </IntegrationRow>
+    );
+  }
+
+  renderBody() {
+    const {reloading, applications, appInstalls} = this.state;
+
+    const installedProviders = this.providers
+      .filter(p => p.isInstalled)
+      .map(p => [p.name, this.renderProvider(p)]);
+
+    const uninstalledProviders = this.providers
+      .filter(p => !p.isInstalled)
+      .map(p => [p.name, this.renderProvider(p)]);
+
+    const installedSentryApps = (applications || [])
+      .filter(a => appInstalls.find(i => i.app.slug === a.slug))
+      .map(a => [a.name, this.renderSentryApps([a], a.slug)]);
+
+    const uninstalledSentryApps = (applications || [])
+      .filter(a => !appInstalls.find(i => i.app.slug === a.slug))
+      .map(a => [a.name, this.renderSentryApps([a], a.slug)]);
+
+    // Combine the list of Providers and Sentry Apps that have installations.
+    const installed = installedProviders
+      .concat(installedSentryApps)
+      .sort((a, b) => a[0].localeCompare(b[0]))
+      .map(i => i[1]);
+
+    // Combine the list of Providers and Sentry Apps that have no installations.
+    const uninstalled = uninstalledProviders
+      .concat(uninstalledSentryApps)
+      .sort((a, b) => a[0].localeCompare(b[0]))
+      .map(i => i[1]);
 
     return (
       <React.Fragment>
@@ -169,14 +215,8 @@ class OrganizationIntegrations extends AsyncComponent {
             {reloading && <StyledLoadingIndicator mini />}
           </PanelHeader>
           <PanelBody>
-            {providers}
-            {applications && (
-              <SentryAppInstallations
-                orgId={this.props.params.orgId}
-                installs={appInstalls}
-                applications={applications}
-              />
-            )}
+            {installed}
+            {uninstalled}
           </PanelBody>
         </Panel>
       </React.Fragment>
@@ -184,6 +224,8 @@ class OrganizationIntegrations extends AsyncComponent {
   }
 }
 
+const IntegrationRow = styled.div``;
+
 const StyledLoadingIndicator = styled(LoadingIndicator)`
   position: absolute;
   right: 7px;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
index 7ddd695e32..ec34064d88 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
@@ -5,7 +5,6 @@ import Access from 'app/components/acl/access';
 import Button from 'app/components/button';
 import Confirm from 'app/components/confirm';
 import ConfirmDelete from 'app/components/confirmDelete';
-import SentryAppAvatar from 'app/components/avatar/sentryAppAvatar';
 import PropTypes from 'prop-types';
 import SentryTypes from 'app/sentryTypes';
 import Tooltip from 'app/components/tooltip';
@@ -15,6 +14,7 @@ import styled from 'react-emotion';
 import space from 'app/styles/space';
 import {withTheme} from 'emotion-theming';
 import CircleIndicator from 'app/components/circleIndicator';
+import PluginIcon from 'app/plugins/components/pluginIcon';
 
 export default class SentryApplicationRow extends React.PureComponent {
   static propTypes = {
@@ -72,7 +72,7 @@ export default class SentryApplicationRow extends React.PureComponent {
     return (
       <SentryAppItem>
         <StyledFlex>
-          <SentryAppAvatar size={36} sentryApp={app} />
+          <PluginIcon size={36} pluginId={app.slug} />
           <SentryAppBox>
             <SentryAppName>
               {showPublishStatus ? (
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
index 3f8b05bc03..281797cfd0 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
@@ -535,105 +535,20 @@ exports[`Organization Developer Settings with published apps trash button is dis
                                 className="css-14n192s-StyledFlex eac2pqx1"
                                 is={null}
                               >
-                                <SentryAppAvatar
-                                  sentryApp={
-                                    Object {
-                                      "author": "Sentry",
-                                      "clientId": "client-id",
-                                      "clientSecret": "client-secret",
-                                      "events": Array [],
-                                      "isAlertable": false,
-                                      "name": "Sample App",
-                                      "overview": "This is an app.",
-                                      "redirectUrl": "https://example/com/setup",
-                                      "schema": Object {},
-                                      "scopes": Array [
-                                        "project:read",
-                                      ],
-                                      "slug": "sample-app",
-                                      "status": "published",
-                                      "uuid": "123456123456123456123456",
-                                      "webhookUrl": "https://example.com/webhook",
-                                    }
-                                  }
+                                <PluginIcon
+                                  pluginId="sample-app"
                                   size={36}
                                 >
-                                  <BaseAvatar
-                                    hasTooltip={false}
-                                    letterId="123456123456123456123456"
+                                  <IntegrationIcon
+                                    image={Object {}}
                                     size={36}
-                                    style={Object {}}
-                                    title="Sample App"
-                                    tooltip="Sample App"
-                                    type="letter_avatar"
-                                    uploadId=""
-                                    uploadPath="avatar"
                                   >
-                                    <Tooltip
-                                      disabled={true}
-                                      title="Sample App"
-                                    >
-                                      <StyledBaseAvatar
-                                        className="avatar"
-                                        loaded={true}
-                                        style={
-                                          Object {
-                                            "height": "36px",
-                                            "width": "36px",
-                                          }
-                                        }
-                                      >
-                                        <span
-                                          className="avatar css-1i62700-StyledBaseAvatar e1z0ohzl0"
-                                          style={
-                                            Object {
-                                              "height": "36px",
-                                              "width": "36px",
-                                            }
-                                          }
-                                        >
-                                          <LetterAvatar
-                                            displayName="Sample App"
-                                            identifier="123456123456123456123456"
-                                          >
-                                            <Svg
-                                              viewBox="0 0 120 120"
-                                            >
-                                              <svg
-                                                className="css-123ijso-Svg e1knxa8x0"
-                                                viewBox="0 0 120 120"
-                                              >
-                                                <rect
-                                                  fill="#4674ca"
-                                                  height="120"
-                                                  rx="15"
-                                                  ry="15"
-                                                  width="120"
-                                                  x="0"
-                                                  y="0"
-                                                />
-                                                <text
-                                                  fill="#FFFFFF"
-                                                  fontSize="65"
-                                                  style={
-                                                    Object {
-                                                      "dominantBaseline": "central",
-                                                    }
-                                                  }
-                                                  textAnchor="middle"
-                                                  x="50%"
-                                                  y="50%"
-                                                >
-                                                  SA
-                                                </text>
-                                              </svg>
-                                            </Svg>
-                                          </LetterAvatar>
-                                        </span>
-                                      </StyledBaseAvatar>
-                                    </Tooltip>
-                                  </BaseAvatar>
-                                </SentryAppAvatar>
+                                    <div
+                                      className="css-5iptpn-IntegrationIcon e1bhjds90"
+                                      size={36}
+                                    />
+                                  </IntegrationIcon>
+                                </PluginIcon>
                                 <SentryAppBox>
                                   <Base
                                     className="css-161g25b-SentryAppBox eac2pqx2"
@@ -1118,105 +1033,20 @@ exports[`Organization Developer Settings with unpublished apps displays all Apps
                                 className="css-14n192s-StyledFlex eac2pqx1"
                                 is={null}
                               >
-                                <SentryAppAvatar
-                                  sentryApp={
-                                    Object {
-                                      "author": "Sentry",
-                                      "clientId": "client-id",
-                                      "clientSecret": "client-secret",
-                                      "events": Array [],
-                                      "isAlertable": false,
-                                      "name": "Sample App",
-                                      "overview": "This is an app.",
-                                      "redirectUrl": "https://example/com/setup",
-                                      "schema": Object {},
-                                      "scopes": Array [
-                                        "project:read",
-                                      ],
-                                      "slug": "sample-app",
-                                      "status": "unpublished",
-                                      "uuid": "123456123456123456123456",
-                                      "webhookUrl": "https://example.com/webhook",
-                                    }
-                                  }
+                                <PluginIcon
+                                  pluginId="sample-app"
                                   size={36}
                                 >
-                                  <BaseAvatar
-                                    hasTooltip={false}
-                                    letterId="123456123456123456123456"
+                                  <IntegrationIcon
+                                    image={Object {}}
                                     size={36}
-                                    style={Object {}}
-                                    title="Sample App"
-                                    tooltip="Sample App"
-                                    type="letter_avatar"
-                                    uploadId=""
-                                    uploadPath="avatar"
                                   >
-                                    <Tooltip
-                                      disabled={true}
-                                      title="Sample App"
-                                    >
-                                      <StyledBaseAvatar
-                                        className="avatar"
-                                        loaded={true}
-                                        style={
-                                          Object {
-                                            "height": "36px",
-                                            "width": "36px",
-                                          }
-                                        }
-                                      >
-                                        <span
-                                          className="avatar css-1i62700-StyledBaseAvatar e1z0ohzl0"
-                                          style={
-                                            Object {
-                                              "height": "36px",
-                                              "width": "36px",
-                                            }
-                                          }
-                                        >
-                                          <LetterAvatar
-                                            displayName="Sample App"
-                                            identifier="123456123456123456123456"
-                                          >
-                                            <Svg
-                                              viewBox="0 0 120 120"
-                                            >
-                                              <svg
-                                                className="css-123ijso-Svg e1knxa8x0"
-                                                viewBox="0 0 120 120"
-                                              >
-                                                <rect
-                                                  fill="#4674ca"
-                                                  height="120"
-                                                  rx="15"
-                                                  ry="15"
-                                                  width="120"
-                                                  x="0"
-                                                  y="0"
-                                                />
-                                                <text
-                                                  fill="#FFFFFF"
-                                                  fontSize="65"
-                                                  style={
-                                                    Object {
-                                                      "dominantBaseline": "central",
-                                                    }
-                                                  }
-                                                  textAnchor="middle"
-                                                  x="50%"
-                                                  y="50%"
-                                                >
-                                                  SA
-                                                </text>
-                                              </svg>
-                                            </Svg>
-                                          </LetterAvatar>
-                                        </span>
-                                      </StyledBaseAvatar>
-                                    </Tooltip>
-                                  </BaseAvatar>
-                                </SentryAppAvatar>
+                                    <div
+                                      className="css-5iptpn-IntegrationIcon e1bhjds90"
+                                      size={36}
+                                    />
+                                  </IntegrationIcon>
+                                </PluginIcon>
                                 <SentryAppBox>
                                   <Base
                                     className="css-161g25b-SentryAppBox eac2pqx2"
@@ -1901,105 +1731,20 @@ exports[`Organization Developer Settings without Owner permissions trash button
                                 className="css-14n192s-StyledFlex eac2pqx1"
                                 is={null}
                               >
-                                <SentryAppAvatar
-                                  sentryApp={
-                                    Object {
-                                      "author": "Sentry",
-                                      "clientId": "client-id",
-                                      "clientSecret": "client-secret",
-                                      "events": Array [],
-                                      "isAlertable": false,
-                                      "name": "Sample App",
-                                      "overview": "This is an app.",
-                                      "redirectUrl": "https://example/com/setup",
-                                      "schema": Object {},
-                                      "scopes": Array [
-                                        "project:read",
-                                      ],
-                                      "slug": "sample-app",
-                                      "status": "unpublished",
-                                      "uuid": "123456123456123456123456",
-                                      "webhookUrl": "https://example.com/webhook",
-                                    }
-                                  }
+                                <PluginIcon
+                                  pluginId="sample-app"
                                   size={36}
                                 >
-                                  <BaseAvatar
-                                    hasTooltip={false}
-                                    letterId="123456123456123456123456"
+                                  <IntegrationIcon
+                                    image={Object {}}
                                     size={36}
-                                    style={Object {}}
-                                    title="Sample App"
-                                    tooltip="Sample App"
-                                    type="letter_avatar"
-                                    uploadId=""
-                                    uploadPath="avatar"
                                   >
-                                    <Tooltip
-                                      disabled={true}
-                                      title="Sample App"
-                                    >
-                                      <StyledBaseAvatar
-                                        className="avatar"
-                                        loaded={true}
-                                        style={
-                                          Object {
-                                            "height": "36px",
-                                            "width": "36px",
-                                          }
-                                        }
-                                      >
-                                        <span
-                                          className="avatar css-1i62700-StyledBaseAvatar e1z0ohzl0"
-                                          style={
-                                            Object {
-                                              "height": "36px",
-                                              "width": "36px",
-                                            }
-                                          }
-                                        >
-                                          <LetterAvatar
-                                            displayName="Sample App"
-                                            identifier="123456123456123456123456"
-                                          >
-                                            <Svg
-                                              viewBox="0 0 120 120"
-                                            >
-                                              <svg
-                                                className="css-123ijso-Svg e1knxa8x0"
-                                                viewBox="0 0 120 120"
-                                              >
-                                                <rect
-                                                  fill="#4674ca"
-                                                  height="120"
-                                                  rx="15"
-                                                  ry="15"
-                                                  width="120"
-                                                  x="0"
-                                                  y="0"
-                                                />
-                                                <text
-                                                  fill="#FFFFFF"
-                                                  fontSize="65"
-                                                  style={
-                                                    Object {
-                                                      "dominantBaseline": "central",
-                                                    }
-                                                  }
-                                                  textAnchor="middle"
-                                                  x="50%"
-                                                  y="50%"
-                                                >
-                                                  SA
-                                                </text>
-                                              </svg>
-                                            </Svg>
-                                          </LetterAvatar>
-                                        </span>
-                                      </StyledBaseAvatar>
-                                    </Tooltip>
-                                  </BaseAvatar>
-                                </SentryAppAvatar>
+                                    <div
+                                      className="css-5iptpn-IntegrationIcon e1bhjds90"
+                                      size={36}
+                                    />
+                                  </IntegrationIcon>
+                                </PluginIcon>
                                 <SentryAppBox>
                                   <Base
                                     className="css-161g25b-SentryAppBox eac2pqx2"
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
index 054af83808..416eaf2218 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
@@ -71,105 +71,20 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
                 className="css-14n192s-StyledFlex eac2pqx1"
                 is={null}
               >
-                <SentryAppAvatar
-                  sentryApp={
-                    Object {
-                      "author": "Sentry",
-                      "clientId": "client-id",
-                      "clientSecret": "client-secret",
-                      "events": Array [],
-                      "isAlertable": false,
-                      "name": "Sample App",
-                      "overview": "This is an app.",
-                      "redirectUrl": "https://example/com/setup",
-                      "schema": Object {},
-                      "scopes": Array [
-                        "project:read",
-                      ],
-                      "slug": "sample-app",
-                      "status": "unpublished",
-                      "uuid": "123456123456123456123456",
-                      "webhookUrl": "https://example.com/webhook",
-                    }
-                  }
+                <PluginIcon
+                  pluginId="sample-app"
                   size={36}
                 >
-                  <BaseAvatar
-                    hasTooltip={false}
-                    letterId="123456123456123456123456"
+                  <IntegrationIcon
+                    image={Object {}}
                     size={36}
-                    style={Object {}}
-                    title="Sample App"
-                    tooltip="Sample App"
-                    type="letter_avatar"
-                    uploadId=""
-                    uploadPath="avatar"
                   >
-                    <Tooltip
-                      disabled={true}
-                      title="Sample App"
-                    >
-                      <StyledBaseAvatar
-                        className="avatar"
-                        loaded={true}
-                        style={
-                          Object {
-                            "height": "36px",
-                            "width": "36px",
-                          }
-                        }
-                      >
-                        <span
-                          className="avatar css-1i62700-StyledBaseAvatar e1z0ohzl0"
-                          style={
-                            Object {
-                              "height": "36px",
-                              "width": "36px",
-                            }
-                          }
-                        >
-                          <LetterAvatar
-                            displayName="Sample App"
-                            identifier="123456123456123456123456"
-                          >
-                            <Svg
-                              viewBox="0 0 120 120"
-                            >
-                              <svg
-                                className="css-123ijso-Svg e1knxa8x0"
-                                viewBox="0 0 120 120"
-                              >
-                                <rect
-                                  fill="#4674ca"
-                                  height="120"
-                                  rx="15"
-                                  ry="15"
-                                  width="120"
-                                  x="0"
-                                  y="0"
-                                />
-                                <text
-                                  fill="#FFFFFF"
-                                  fontSize="65"
-                                  style={
-                                    Object {
-                                      "dominantBaseline": "central",
-                                    }
-                                  }
-                                  textAnchor="middle"
-                                  x="50%"
-                                  y="50%"
-                                >
-                                  SA
-                                </text>
-                              </svg>
-                            </Svg>
-                          </LetterAvatar>
-                        </span>
-                      </StyledBaseAvatar>
-                    </Tooltip>
-                  </BaseAvatar>
-                </SentryAppAvatar>
+                    <div
+                      className="css-5iptpn-IntegrationIcon e1bhjds90"
+                      size={36}
+                    />
+                  </IntegrationIcon>
+                </PluginIcon>
                 <SentryAppBox>
                   <Base
                     className="css-161g25b-SentryAppBox eac2pqx2"
diff --git a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
index c6397581e9..ed32a531fe 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
@@ -1,8 +1,8 @@
 /*global global*/
 import React from 'react';
+import {mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
 import {openIntegrationDetails} from 'app/actionCreators/modal';
 import {OrganizationIntegrations} from 'app/views/organizationIntegrations';
 
@@ -10,100 +10,197 @@ jest.mock('app/actionCreators/modal', () => ({
   openIntegrationDetails: jest.fn(),
 }));
 
-describe('OrganizationIntegrations', function() {
-  beforeEach(function() {
+describe('OrganizationIntegrations', () => {
+  let wrapper;
+
+  let org;
+  let sentryApp;
+
+  let githubProvider;
+  let jiraProvider;
+  let vstsProvider;
+
+  let githubIntegration;
+  let jiraIntegration;
+
+  let params;
+  let routerContext;
+
+  let sentryAppsRequest;
+  let sentryInstallsRequest;
+
+  let focus;
+  let open;
+
+  beforeEach(() => {
     Client.clearMockResponses();
-  });
 
-  describe('render()', function() {
-    const org = TestStubs.Organization();
+    org = TestStubs.Organization();
+    sentryApp = TestStubs.SentryApp();
 
-    const githubProvider = TestStubs.GitHubIntegrationProvider({
+    githubProvider = TestStubs.GitHubIntegrationProvider({
       integrations: [],
       isInstalled: false,
     });
-    const jiraProvider = TestStubs.JiraIntegrationProvider();
-    const vstsProvider = TestStubs.VstsIntegrationProvider();
 
-    const githubIntegration = TestStubs.GitHubIntegration();
-    const jiraIntegration = TestStubs.JiraIntegration();
+    jiraProvider = TestStubs.JiraIntegrationProvider();
+    vstsProvider = TestStubs.VstsIntegrationProvider();
 
-    const params = {
-      orgId: org.slug,
-    };
+    githubIntegration = TestStubs.GitHubIntegration();
+    jiraIntegration = TestStubs.JiraIntegration();
 
-    const routerContext = TestStubs.routerContext();
+    params = {orgId: org.slug};
 
-    const focus = jest.fn();
-    const open = jest.fn().mockReturnValue({focus});
+    routerContext = TestStubs.routerContext();
+
+    focus = jest.fn();
+    open = jest.fn().mockReturnValue({focus});
     global.open = open;
 
-    describe('without integrations', function() {
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/integrations/`,
-        body: [],
+    Client.addMockResponse({
+      url: `/organizations/${org.slug}/integrations/`,
+      body: [],
+    });
+
+    Client.addMockResponse({
+      url: `/organizations/${org.slug}/config/integrations/`,
+      body: {providers: [githubProvider, jiraProvider]},
+    });
+
+    Client.addMockResponse({
+      url: `/organizations/${org.slug}/plugins/`,
+      body: [],
+    });
+
+    Client.addMockResponse({
+      url: `/organizations/${org.slug}/repos/?status=unmigratable`,
+      body: [],
+    });
+
+    sentryAppsRequest = Client.addMockResponse({
+      url: `/organizations/${org.slug}/sentry-apps/`,
+      body: [],
+    });
+
+    sentryInstallsRequest = Client.addMockResponse({
+      url: `/organizations/${org.slug}/sentry-app-installations/`,
+      body: [],
+    });
+
+    wrapper = mount(
+      <OrganizationIntegrations organization={org} params={params} />,
+      routerContext
+    );
+  });
+
+  describe('sorting', () => {
+    let installedSentryApp;
+    let sentryAppInstall;
+
+    beforeEach(() => {
+      org = {...org, features: ['sentry-apps']};
+
+      installedSentryApp = TestStubs.SentryApp({
+        name: 'An Integration',
+        slug: 'an-integration',
       });
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/config/integrations/`,
-        body: {providers: [githubProvider, jiraProvider]},
+
+      sentryAppInstall = TestStubs.SentryAppInstallation({
+        organization: {
+          slug: org.slug,
+        },
+        app: {
+          slug: installedSentryApp.slug,
+          uuid: installedSentryApp.uuid,
+        },
       });
+
       Client.addMockResponse({
-        url: `/organizations/${org.slug}/plugins/`,
-        body: [],
+        url: `/organizations/${org.slug}/integrations/`,
+        body: [jiraIntegration],
       });
+
       Client.addMockResponse({
-        url: `/organizations/${org.slug}/repos/?status=unmigratable`,
-        body: [],
-      });
-      const sentryAppsRequest = Client.addMockResponse({
         url: `/organizations/${org.slug}/sentry-apps/`,
-        body: [],
+        body: [sentryApp, installedSentryApp],
       });
-      const sentryInstallsRequest = Client.addMockResponse({
+
+      Client.addMockResponse({
         url: `/organizations/${org.slug}/sentry-app-installations/`,
-        body: [],
+        body: [sentryAppInstall],
       });
 
-      const wrapper = mount(
+      wrapper = mount(
         <OrganizationIntegrations organization={org} params={params} />,
         routerContext
       );
+    });
 
-      it('renders with sentry-apps', function() {
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/integrations/`,
-          body: [],
-        });
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/config/integrations/`,
-          body: {providers: [githubProvider, jiraProvider]},
-        });
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/plugins/`,
-          body: [],
-        });
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/repos/?status=unmigratable`,
-          body: [],
-        });
-        const appsRequest = Client.addMockResponse({
+    it('places installed Integrations above uninstalled ones', () => {
+      // Installed apps are shown at the top of the list
+      const installed = wrapper.find('SentryAppInstallations').at(0);
+      expect(installed.find('Status').prop('enabled')).toBe(true);
+
+      // Uninstalled are shown lower.
+      const uninstalled = wrapper.find('SentryAppInstallations').at(1);
+      expect(uninstalled.find('Status').prop('enabled')).toBeFalsy();
+    });
+
+    it('sorts Sentry App Integrations among Integrations, alphabetically', () => {
+      const rows = wrapper.find('IntegrationRow');
+
+      expect(rows.length).toBe(4);
+
+      // Installed
+      expect(
+        rows
+          .at(0)
+          .find('SentryAppName')
+          .text()
+      ).toMatch(installedSentryApp.name);
+
+      // Uninstalled, alphabetically
+      expect(
+        rows
+          .at(1)
+          .find('ProviderName')
+          .text()
+      ).toMatch('Jira');
+      expect(
+        rows
+          .at(2)
+          .find('ProviderName')
+          .text()
+      ).toMatch('GitHub');
+      expect(
+        rows
+          .at(3)
+          .find('SentryAppName')
+          .text()
+      ).toMatch('Sample App');
+    });
+  });
+
+  describe('render()', () => {
+    describe('without integrations', () => {
+      it('renders with sentry-apps', () => {
+        sentryAppsRequest = Client.addMockResponse({
           url: `/organizations/${org.slug}/sentry-apps/`,
-          body: [],
+          body: [sentryApp],
         });
-        const installsRequest = Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-app-installations/`,
-          body: [],
-        });
-        const organization = {...org, features: ['sentry-apps']};
+
+        org = {...org, features: ['sentry-apps']};
+
         mount(
-          <OrganizationIntegrations organization={organization} params={params} />,
-          TestStubs.routerContext([{organization}])
+          <OrganizationIntegrations organization={org} params={params} />,
+          routerContext
         );
-        expect(appsRequest).toHaveBeenCalled();
-        expect(installsRequest).toHaveBeenCalled();
+
+        expect(sentryAppsRequest).toHaveBeenCalled();
+        expect(sentryInstallsRequest).toHaveBeenCalled();
       });
 
-      it('Does`t hit sentry apps endpoints when sentry-apps isn`t present', function() {
+      it('Does`t hit sentry apps endpoints when sentry-apps isn`t present', () => {
         expect(sentryAppsRequest).not.toHaveBeenCalled();
         expect(sentryInstallsRequest).not.toHaveBeenCalled();
       });
@@ -124,33 +221,25 @@ describe('OrganizationIntegrations', function() {
       });
     });
 
-    describe('with installed integrations', function() {
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/integrations/`,
-        body: [githubIntegration, jiraIntegration],
-      });
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/config/integrations/`,
-        body: {providers: [githubProvider, jiraProvider]},
-      });
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/plugins/`,
-        body: [],
-      });
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/repos/?status=unmigratable`,
-        body: [],
-      });
+    describe('with installed integrations', () => {
+      let updatedIntegration;
 
-      const wrapper = mount(
-        <OrganizationIntegrations organization={org} params={params} />,
-        routerContext
-      );
+      beforeEach(() => {
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/integrations/`,
+          body: [githubIntegration, jiraIntegration],
+        });
 
-      const updatedIntegration = Object.assign({}, githubIntegration, {
-        domain_name: 'updated-integration.github.com',
-        icon: 'http://example.com/updated-integration-icon.png',
-        name: 'Updated Integration',
+        wrapper = mount(
+          <OrganizationIntegrations organization={org} params={params} />,
+          routerContext
+        );
+
+        updatedIntegration = Object.assign({}, githubIntegration, {
+          domain_name: 'updated-integration.github.com',
+          icon: 'http://example.com/updated-integration-icon.png',
+          name: 'Updated Integration',
+        });
       });
 
       it('Displays InstalledIntegration', function() {
@@ -161,14 +250,14 @@ describe('OrganizationIntegrations', function() {
         );
       });
 
-      it('Merges installed integrations', function() {
+      it('Merges installed integrations', () => {
         wrapper.instance().onInstall(updatedIntegration);
 
         expect(wrapper.instance().state.integrations).toHaveLength(2);
         expect(wrapper.instance().state.integrations[1]).toBe(updatedIntegration);
       });
 
-      it('Deletes an integration', function() {
+      it('Deletes an integration', () => {
         Client.addMockResponse({
           url: `/organizations/${org.slug}/integrations/${jiraIntegration.id}/`,
           method: 'DELETE',
@@ -178,55 +267,60 @@ describe('OrganizationIntegrations', function() {
         wrapper.instance().onRemove(jiraIntegration);
 
         expect(wrapper.instance().state.integrations).toHaveLength(1);
-        expect(wrapper.instance().state.integrations[0]).toBe(updatedIntegration);
+        expect(wrapper.instance().state.integrations[0]).toBe(githubIntegration);
       });
     });
 
-    describe('with matching plugins installed', function() {
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/integrations/`,
-        body: [githubIntegration],
-      });
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/config/integrations/`,
-        body: {providers: [githubProvider, jiraProvider, vstsProvider]},
-      });
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/plugins/`,
-        body: [
-          {
-            slug: 'github',
-            enabled: true,
-          },
-          {
-            slug: 'vsts',
-            enabled: true,
-          },
-          {
-            slug: 'jira',
-            enabled: true,
-          },
-        ],
-      });
-      Client.addMockResponse({
-        url: `/organizations/${org.slug}/repos/?status=unmigratable`,
-        body: [
-          {
-            provider: {
-              id: 'github',
-              name: 'GitHub',
+    describe('with matching plugins installed', () => {
+      beforeEach(() => {
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/integrations/`,
+          body: [githubIntegration],
+        });
+
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/config/integrations/`,
+          body: {providers: [githubProvider, jiraProvider, vstsProvider]},
+        });
+
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/plugins/`,
+          body: [
+            {
+              slug: 'github',
+              enabled: true,
             },
-            name: 'Test-Org/foo',
-          },
-        ],
-      });
+            {
+              slug: 'vsts',
+              enabled: true,
+            },
+            {
+              slug: 'jira',
+              enabled: true,
+            },
+          ],
+        });
 
-      const wrapper = mount(
-        <OrganizationIntegrations organization={org} params={params} />,
-        routerContext
-      );
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/repos/?status=unmigratable`,
+          body: [
+            {
+              provider: {
+                id: 'github',
+                name: 'GitHub',
+              },
+              name: 'Test-Org/foo',
+            },
+          ],
+        });
+
+        wrapper = mount(
+          <OrganizationIntegrations organization={org} params={params} />,
+          routerContext
+        );
+      });
 
-      it('displays an Update when the Plugin is enabled but a new Integration is not', function() {
+      it('displays an Update when the Plugin is enabled but a new Integration is not', () => {
         expect(
           wrapper
             .find('ProviderRow')
