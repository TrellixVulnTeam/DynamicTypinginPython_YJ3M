commit 4ff7fdce709cdc34c2e5535b58b09a6af4c0f474
Author: NisanthanNanthakumar <nisanthan.nanthakumar@sentry.io>
Date:   Tue Mar 3 11:17:35 2020 -0800

    feat(IntegrationDirectory): Add logExperiment call to IntegrationDirectoryExperiment (#17438)
    
    Objective
    Add a call for logExperiment for the integration directory experiment in order to add an organization segment field. It is called in the IntegrationViewController component on componentDidMount.

diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationViewController.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationViewController.tsx
index 91faa17df3..6294af434a 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationViewController.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationViewController.tsx
@@ -4,6 +4,7 @@ import {RouteComponentProps} from 'react-router/lib/Router';
 import {isIntegrationDirectoryActive} from 'app/utils/integrationUtil.tsx';
 import withOrganization from 'app/utils/withOrganization';
 import {Organization} from 'app/types';
+import {logExperiment} from 'app/utils/analytics';
 
 import Control from './index';
 import Test from './integrationListDirectory';
@@ -13,11 +14,23 @@ type Props = RouteComponentProps<{orgId: string}, {}> & {
   hideHeader: boolean;
 };
 
-function IntegrationViewController(props: Props) {
-  if (isIntegrationDirectoryActive(props.organization)) {
-    return <Test {...props} />;
+class IntegrationViewController extends React.Component<Props> {
+  componentDidMount() {
+    logExperiment({
+      organization: this.props.organization,
+      key: 'IntegrationsDirectoryExperiment',
+      unitName: 'org_id',
+      unitId: parseInt(this.props.organization.id, 10),
+      param: 'variant',
+    });
+  }
+
+  render() {
+    if (isIntegrationDirectoryActive(this.props.organization)) {
+      return <Test {...this.props} />;
+    }
+    return <Control {...this.props} />;
   }
-  return <Control {...props} />;
 }
 
 export default withOrganization(IntegrationViewController);
