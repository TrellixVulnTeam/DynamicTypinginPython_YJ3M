commit 661569996d45d8905057814ac2af3fe23421809b
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Fri Jul 12 12:32:49 2019 -0700

    feat(serverless): Make frontend app aware of deploy previews. (#13983)
    
    - build(webpack): Expose DEPLOY_PREVIEW_CONFIG / EXPERIMENTAL_SPA
    - feat(serverless): Enable app auth routes
    - feat(serverless): Display an alert on deploy previews

diff --git a/src/sentry/static/sentry/app/actionCreators/deployPreview.jsx b/src/sentry/static/sentry/app/actionCreators/deployPreview.jsx
new file mode 100644
index 0000000000..37a4a62417
--- /dev/null
+++ b/src/sentry/static/sentry/app/actionCreators/deployPreview.jsx
@@ -0,0 +1,36 @@
+import React from 'react';
+
+import {DEPLOY_PREVIEW_CONFIG} from 'app/constants';
+import {t, tct} from 'app/locale';
+import AlertActions from 'app/actions/alertActions';
+import ExternalLink from 'app/components/links/externalLink';
+
+export function displayDeployPreviewAlert() {
+  if (!DEPLOY_PREVIEW_CONFIG) {
+    return;
+  }
+
+  const {commitRef, reviewId, repoUrl} = DEPLOY_PREVIEW_CONFIG;
+  const repoName = repoUrl.match(/\w+\/\w+\/?$/)[0];
+
+  const pullLink = (
+    <ExternalLink href={`${repoUrl}/pull/${reviewId}`}>
+      {t('%s#%s', repoName, reviewId)}
+    </ExternalLink>
+  );
+
+  const sha = (
+    <ExternalLink href={`${repoUrl}/commit/${commitRef}`}>
+      @{commitRef.slice(0, 6)}
+    </ExternalLink>
+  );
+
+  AlertActions.addAlert({
+    message: tct('You are viewing a frontend deploy preview of [pullLink] ([sha])', {
+      pullLink,
+      sha,
+    }),
+    type: 'info',
+    neverExpire: true,
+  });
+}
diff --git a/src/sentry/static/sentry/app/constants/index.jsx b/src/sentry/static/sentry/app/constants/index.jsx
index 79390dab96..cb29398996 100644
--- a/src/sentry/static/sentry/app/constants/index.jsx
+++ b/src/sentry/static/sentry/app/constants/index.jsx
@@ -157,3 +157,11 @@ export const SEARCH_TYPES = {
 export const MAX_RECENT_SEARCHES = 3;
 
 export const DEFAULT_PER_PAGE = 50;
+
+// Webpack configures DEPLOY_PREVIEW_CONFIG for deploy preview builds.
+// eslint-disable-next-line no-undef
+export const DEPLOY_PREVIEW_CONFIG = process.env.DEPLOY_PREVIEW_CONFIG;
+
+// Webpack configures EXPERIMENTAL_SPA.
+// eslint-disable-next-line no-undef
+export const EXPERIMENTAL_SPA = process.env.EXPERIMENTAL_SPA;
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 94c3076715..f409896c40 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -1,9 +1,14 @@
 import {Redirect, Route, IndexRoute, IndexRedirect} from 'react-router';
 import React from 'react';
 
+import {EXPERIMENTAL_SPA} from 'app/constants';
 import App from 'app/views/app';
+import AuthLayout from 'app/views/auth/layout';
+import AuthLogin from 'app/views/auth/login';
 import HookOrDefault from 'app/components/hookOrDefault';
 import HookStore from 'app/stores/hookStore';
+import IssueListContainer from 'app/views/issueList/container';
+import IssueListOverview from 'app/views/issueList/overview';
 import LazyLoad from 'app/components/lazyLoad';
 import OnboardingConfigure from 'app/views/onboarding/configure';
 import OnboardingNewProject from 'app/views/onboarding/newProject';
@@ -12,16 +17,14 @@ import OrganizationContext from 'app/views/organizationContext';
 import OrganizationCreate from 'app/views/organizationCreate';
 import OrganizationDetails from 'app/views/organizationDetails';
 import OrganizationRoot from 'app/views/organizationRoot';
-import IssueListContainer from 'app/views/issueList/container';
-import IssueListOverview from 'app/views/issueList/overview';
 import ProjectEventRedirect from 'app/views/projectEventRedirect';
 import ProjectPluginDetails from 'app/views/projectPluginDetails';
 import ProjectPlugins from 'app/views/projectPlugins';
-import redirectDeprecatedProjectRoute from 'app/views/projects/redirectDeprecatedProjectRoute';
 import RouteNotFound from 'app/views/routeNotFound';
 import SettingsProjectProvider from 'app/views/settings/components/settingsProjectProvider';
 import SettingsWrapper from 'app/views/settings/components/settingsWrapper';
 import errorHandler from 'app/utils/errorHandler';
+import redirectDeprecatedProjectRoute from 'app/views/projects/redirectDeprecatedProjectRoute';
 
 function appendTrailingSlash(nextState, replace) {
   const lastChar = nextState.location.pathname.slice(-1);
@@ -657,6 +660,12 @@ function routes() {
         }
       />
 
+      {EXPERIMENTAL_SPA && (
+        <Route path="/auth/login/" component={errorHandler(AuthLayout)}>
+          <IndexRoute component={errorHandler(AuthLogin)} />
+        </Route>
+      )}
+
       <Redirect from="/account/" to="/settings/account/details/" />
 
       <Route
diff --git a/src/sentry/static/sentry/app/views/app.jsx b/src/sentry/static/sentry/app/views/app.jsx
index 22abfa415b..3280cf94dd 100644
--- a/src/sentry/static/sentry/app/views/app.jsx
+++ b/src/sentry/static/sentry/app/views/app.jsx
@@ -1,16 +1,19 @@
 import $ from 'jquery';
 import {ThemeProvider} from 'emotion-theming';
 import {Tracing} from '@sentry/integrations';
+import {browserHistory} from 'react-router';
+import {get, isEqual} from 'lodash';
 import {getCurrentHub} from '@sentry/browser';
 import {injectGlobal} from 'emotion';
 import Cookies from 'js-cookie';
 import PropTypes from 'prop-types';
 import React from 'react';
 import keydown from 'react-keydown';
-import {get, isEqual} from 'lodash';
 
-import {openCommandPalette} from 'app/actionCreators/modal';
+import {DEPLOY_PREVIEW_CONFIG, EXPERIMENTAL_SPA} from 'app/constants';
+import {displayDeployPreviewAlert} from 'app/actionCreators/deployPreview';
 import {fetchGuides} from 'app/actionCreators/guides';
+import {openCommandPalette} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
 import AlertActions from 'app/actions/alertActions';
 import Alerts from 'app/components/alerts';
@@ -28,6 +31,9 @@ import theme from 'app/utils/theme';
 import withApi from 'app/utils/withApi';
 import withConfig from 'app/utils/withConfig';
 
+// TODO: Need better way of identifying anonymous pages that don't trigger redirect
+const ALLOWED_ANON_PAGES = [/^\/share\//, /^\/auth\/login\//];
+
 function getAlertTypeForProblem(problem) {
   switch (problem.severity) {
     case 'critical':
@@ -107,10 +113,14 @@ class App extends React.Component {
       });
     });
 
-    $(document).ajaxError(function(evt, jqXHR) {
-      // TODO: Need better way of identifying anonymous pages
-      //       that don't trigger redirect
-      const pageAllowsAnon = /^\/share\//.test(window.location.pathname);
+    if (DEPLOY_PREVIEW_CONFIG) {
+      displayDeployPreviewAlert();
+    }
+
+    $(document).ajaxError(function(_evt, jqXHR) {
+      const pageAllowsAnon = ALLOWED_ANON_PAGES.find(regex =>
+        regex.test(window.location.pathname)
+      );
 
       // Ignore error unless it is a 401
       if (!jqXHR || jqXHR.status !== 401 || pageAllowsAnon) {
@@ -132,10 +142,14 @@ class App extends React.Component {
         return;
       }
 
-      // Otherwise, user has become unauthenticated; reload URL, and let Django
-      // redirect to login page
+      // Otherwise, the user has become unauthenticated. Send them to auth
       Cookies.set('session_expired', 1);
-      window.location.reload();
+
+      if (EXPERIMENTAL_SPA) {
+        browserHistory.replace('/auth/login/');
+      } else {
+        window.location.reload();
+      }
     });
 
     const user = ConfigStore.get('user');
@@ -212,6 +226,7 @@ class App extends React.Component {
 
   renderBody() {
     const {needsUpgrade, newsletterConsentPrompt} = this.state;
+
     if (needsUpgrade) {
       return <InstallWizard onConfigured={this.onConfigured} />;
     }
diff --git a/webpack.config.js b/webpack.config.js
index 5a31b4126e..f5043bf789 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -26,6 +26,23 @@ const SENTRY_WEBPACK_PROXY_PORT = env.SENTRY_WEBPACK_PROXY_PORT;
 const USE_HOT_MODULE_RELOAD =
   !IS_PRODUCTION && SENTRY_BACKEND_PORT && SENTRY_WEBPACK_PROXY_PORT;
 
+// Deploy previews are built using netlify. We can check if we're in netlifys
+// build process by checking the existance of the PULL_REQUEST env var.
+//
+// See: https://www.netlify.com/docs/continuous-deployment/#environment-variables
+const DEPLOY_PREVIEW_CONFIG = env.PULL_REQUEST && {
+  commitRef: env.COMMIT_REF,
+  reviewId: env.REVIEW_ID,
+  repoUrl: env.REPOSITORY_URL,
+};
+
+// When deploy previews are enabled always enable experimental SPA mode --
+// deploy previews are served standalone. Otherwise fallback to the environment
+// configuration.
+const SENTRY_EXPERIMENTAL_SPA = !DEPLOY_PREVIEW_CONFIG
+  ? env.SENTRY_EXPERIMENTAL_SPA
+  : true;
+
 // this is set by setup.py sdist
 const staticPrefix = path.join(__dirname, 'src/sentry/static/sentry');
 const distPath = env.SENTRY_STATIC_DIST_PATH || path.join(staticPrefix, 'dist');
@@ -252,6 +269,8 @@ const appConfig = {
       'process.env': {
         NODE_ENV: JSON.stringify(env.NODE_ENV),
         IS_PERCY: JSON.stringify(env.CI && !!env.PERCY_TOKEN && !!env.TRAVIS),
+        DEPLOY_PREVIEW_CONFIG: JSON.stringify(DEPLOY_PREVIEW_CONFIG),
+        EXPERIMENTAL_SPA: JSON.stringify(SENTRY_EXPERIMENTAL_SPA),
       },
     }),
     /**
@@ -367,7 +386,7 @@ if (USE_HOT_MODULE_RELOAD) {
     publicPath: '/_webpack',
     proxy: {'!/_webpack': backendAddress},
     before: app =>
-      app.use((req, res, next) => {
+      app.use((req, _res, next) => {
         req.url = req.url.replace(/^\/_static\/[^\/]+\/sentry\/dist/, '/_webpack');
         next();
       }),
@@ -381,7 +400,7 @@ if (USE_HOT_MODULE_RELOAD) {
   //
   // THIS IS EXPERIMENTAL. Various sentry pages still rely on django to serve
   // html views.
-  appConfig.devServer = !env.SENTRY_EXPERIMENTAL_SPA
+  appConfig.devServer = !SENTRY_EXPERIMENTAL_SPA
     ? appConfig.devServer
     : {
         ...appConfig.devServer,
