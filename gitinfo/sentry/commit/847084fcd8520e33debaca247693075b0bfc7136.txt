commit 847084fcd8520e33debaca247693075b0bfc7136
Author: Mark Story <mark@sentry.io>
Date:   Thu Jan 9 10:28:34 2020 -0500

    fix: Use django's is_safe_url function (#16337)
    
    The implementation of this function from django 1.9.13 covers more invalid URLs
    than the one from django-sudo does. We should not redirect to
    `http:123347` style URLs.

diff --git a/src/sentry/utils/auth.py b/src/sentry/utils/auth.py
index bbbc757461..31c82a7912 100644
--- a/src/sentry/utils/auth.py
+++ b/src/sentry/utils/auth.py
@@ -7,7 +7,7 @@ from django.conf import settings
 from django.contrib.auth import login as _login
 from django.contrib.auth.backends import ModelBackend
 from django.core.urlresolvers import reverse, resolve
-from sudo.utils import is_safe_url
+from django.utils.http import is_safe_url
 from time import time
 
 from sentry.models import User, Authenticator
diff --git a/src/sentry/web/frontend/auth_logout.py b/src/sentry/web/frontend/auth_logout.py
index fc37f0f373..2be532a692 100644
--- a/src/sentry/web/frontend/auth_logout.py
+++ b/src/sentry/web/frontend/auth_logout.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from django.contrib.auth import logout, REDIRECT_FIELD_NAME
 from django.contrib.auth.models import AnonymousUser
-from sudo.utils import is_safe_url
+from django.utils.http import is_safe_url
 
 from sentry.web.frontend.base import BaseView
 from sentry.utils import auth
diff --git a/src/sentry/web/frontend/group_plugin_action.py b/src/sentry/web/frontend/group_plugin_action.py
index 520ef580ce..28c2ffdd4e 100644
--- a/src/sentry/web/frontend/group_plugin_action.py
+++ b/src/sentry/web/frontend/group_plugin_action.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import, division
 
 from django.http import Http404, HttpResponseRedirect
 from django.shortcuts import get_object_or_404
-from sudo.utils import is_safe_url
+from django.utils.http import is_safe_url
 
 from sentry.models import Group, GroupMeta
 from sentry.plugins.base import plugins
diff --git a/src/social_auth/views.py b/src/social_auth/views.py
index 49e513d145..9e122f51ec 100644
--- a/src/social_auth/views.py
+++ b/src/social_auth/views.py
@@ -9,13 +9,13 @@ from __future__ import absolute_import
 
 import six
 
-from sudo.utils import is_safe_url
 from django.conf import settings
 from django.http import HttpResponseRedirect, HttpResponse
 from django.contrib.auth import REDIRECT_FIELD_NAME
 from django.contrib.auth.decorators import login_required
 from django.contrib import messages
 from django.views.decorators.csrf import csrf_exempt
+from django.utils.http import is_safe_url
 
 from social_auth.exceptions import AuthException
 from social_auth.utils import setting, backend_setting, clean_partial_pipeline
diff --git a/tests/sentry/web/frontend/test_auth_logout.py b/tests/sentry/web/frontend/test_auth_logout.py
index 61dd159665..c86a3f0e4f 100644
--- a/tests/sentry/web/frontend/test_auth_logout.py
+++ b/tests/sentry/web/frontend/test_auth_logout.py
@@ -41,7 +41,14 @@ class AuthLogoutTest(TestCase):
 
     def test_doesnt_redirect_to_external_next_url(self):
         next = "http://example.com"
-        self.client.post(self.path + "?next=" + quote(next))
+        resp = self.client.post(self.path + "?next=" + quote(next))
+        self.assertRedirects(resp, "/auth/login/")
 
-        resp = self.client.post(self.path)
+        resp = self.client.post(self.path + "?next=" + quote("http:1234556"))
+        self.assertRedirects(resp, "/auth/login/")
+
+        resp = self.client.post(self.path + "?next=" + quote("///example.com"))
+        self.assertRedirects(resp, "/auth/login/")
+
+        resp = self.client.post(self.path + "?next=" + quote("http:///example.com"))
         self.assertRedirects(resp, "/auth/login/")
