commit baed2686b0f3da7875a054367c5f8c5c45f5b19d
Author: David Cramer <dcramer@gmail.com>
Date:   Thu May 22 22:57:22 2014 -0700

    Add delete rule link

diff --git a/src/sentry/templates/sentry/projects/rules/list.html b/src/sentry/templates/sentry/projects/rules/list.html
index 0da0218797..859729f4cc 100644
--- a/src/sentry/templates/sentry/projects/rules/list.html
+++ b/src/sentry/templates/sentry/projects/rules/list.html
@@ -12,6 +12,7 @@
             <thead>
                 <tr>
                     <th>Rule</th>
+                    <th style="width:100px;">
                 </tr>
             </thead>
             <tbody>
@@ -20,6 +21,10 @@
                         <td>
                             <a href="{% url 'sentry-edit-project-rule' project.team.slug project.slug rule.id %}">{{ rule.label }}</a>
                         </td>
+                        <td>
+                            <a href="{% url 'sentry-remove-project-rule' project.team.slug project.slug rule.id %}"
+                               onclick="confirm('Are you sure you want to remove this rule?')">Delete</a>
+                        </td>
                     </tr>
                 {% endfor %}
             </tbody>
diff --git a/src/sentry/web/frontend/projects/rules.py b/src/sentry/web/frontend/projects/rules.py
index 715b1ca5e1..454d3b10b9 100644
--- a/src/sentry/web/frontend/projects/rules.py
+++ b/src/sentry/web/frontend/projects/rules.py
@@ -103,7 +103,11 @@ def list_rules(request, team, project):
 @csrf_protect
 def create_or_edit_rule(request, team, project, rule_id=None):
     if rule_id:
-        rule = Rule.objects.get(project=project, id=rule_id)
+        try:
+            rule = Rule.objects.get(project=project, id=rule_id)
+        except Rule.DoesNotExist:
+            path = reverse('sentry-project-rules', args=[team.slug, project.slug])
+            return HttpResponseRedirect(path)
     else:
         rule = Rule(project=project)
 
@@ -171,3 +175,21 @@ def create_or_edit_rule(request, team, project, rule_id=None):
     })
 
     return render_to_response('sentry/projects/rules/new.html', context, request)
+
+
+@has_access(MEMBER_OWNER)
+@csrf_protect
+def remove_rule(request, team, project, rule_id):
+    path = reverse('sentry-project-rules', args=[team.slug, project.slug])
+
+    try:
+        rule = Rule.objects.get(project=project, id=rule_id)
+    except Rule.DoesNotExist:
+        return HttpResponseRedirect(path)
+
+    rule.delete()
+
+    messages.add_message(request, messages.SUCCESS,
+        _('The rule was removed.'))
+
+    return HttpResponseRedirect(path)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index d32f4ea077..ac3322c399 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -204,6 +204,9 @@ urlpatterns += patterns('',
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/rules/(?P<rule_id>\d+)/edit/$',
         sentry.web.frontend.projects.rules.create_or_edit_rule,
         name='sentry-edit-project-rule'),
+    url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/rules/(?P<rule_id>\d+)/remove/$',
+        sentry.web.frontend.projects.rules.remove_rule,
+        name='sentry-remove-project-rule'),
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/rules/new/$',
         sentry.web.frontend.projects.rules.create_or_edit_rule,
         name='sentry-new-project-rule'),
