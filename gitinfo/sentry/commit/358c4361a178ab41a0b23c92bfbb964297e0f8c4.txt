commit 358c4361a178ab41a0b23c92bfbb964297e0f8c4
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Dec 18 11:30:40 2018 -0800

    feat(org-releases): Add filtering to org releases UI (#11073)
    
    Add back search bar and search functionality, add empty state

diff --git a/src/sentry/static/sentry/app/views/releases/organizationReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/organizationReleases/index.jsx
index 110de60a37..e3891ef569 100644
--- a/src/sentry/static/sentry/app/views/releases/organizationReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/organizationReleases/index.jsx
@@ -1,15 +1,17 @@
 import React from 'react';
 import styled from 'react-emotion';
 import PropTypes from 'prop-types';
+import {browserHistory} from 'react-router';
 
 import SentryTypes from 'app/sentryTypes';
 import {t} from 'app/locale';
 
-// import SearchBar from 'app/components/searchBar';
+import SearchBar from 'app/components/searchBar';
 import {Panel, PanelBody} from 'app/components/panels';
 import Pagination from 'app/components/pagination';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import Alert from 'app/components/alert';
+import EmptyStateWarning from 'app/components/emptyStateWarning';
 
 import withOrganization from 'app/utils/withOrganization';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
@@ -30,12 +32,22 @@ class OrganizationReleases extends React.Component {
     this.state = {releaseList: [], loading: true, error: null};
   }
 
-  componentWillMount() {
-    this.fetchData(this.props.organization, this.props.selection);
+  componentDidMount() {
+    this.fetchData({query: this.props.location.query.query, ...this.props.selection});
   }
 
-  fetchData(organization, query) {
-    fetchOrganizationReleases(organization, query)
+  componentDidUpdate(prevProps) {
+    const queryHasChanged =
+      prevProps.location.query.query !== this.props.location.query.query;
+
+    if (queryHasChanged) {
+      this.fetchData({query: this.props.location.query.query, ...this.props.selection});
+    }
+  }
+
+  fetchData(query) {
+    this.setState({loading: true});
+    fetchOrganizationReleases(this.props.organization, query)
       .then(releaseList => {
         this.setState({releaseList, loading: false, error: null});
       })
@@ -44,11 +56,26 @@ class OrganizationReleases extends React.Component {
       });
   }
 
+  onSearch = query => {
+    let targetQueryParams = {};
+    if (query !== '') targetQueryParams.query = query;
+
+    let {orgId} = this.props.params;
+    browserHistory.push({
+      pathname: `/organizations/${orgId}/releases/`,
+      query: targetQueryParams,
+    });
+  };
+
   renderStreamBody() {
     if (this.state.loading) {
       return <LoadingIndicator />;
     }
 
+    if (this.state.releaseList.length === 0) {
+      return this.renderNoQueryResults();
+    }
+
     return (
       <ReleaseList
         releaseList={this.state.releaseList}
@@ -57,6 +84,14 @@ class OrganizationReleases extends React.Component {
     );
   }
 
+  renderNoQueryResults() {
+    return (
+      <EmptyStateWarning>
+        <p>{t('Sorry, no releases match your filters.')}</p>
+      </EmptyStateWarning>
+    );
+  }
+
   renderNoAccess() {
     return <Alert type="warning">{t("You don't have access to this feature")}</Alert>;
   }
@@ -68,14 +103,14 @@ class OrganizationReleases extends React.Component {
           <div>
             <HeaderTitle>{t('Releases')}</HeaderTitle>
           </div>
-          {/*<div>
+          <div>
             <SearchBar
               defaultQuery=""
               placeholder={t('Search for a release')}
-              query={this.state.query}
+              query={this.props.location.query.query}
               onSearch={this.onSearch}
             />
-          </div>*/}
+          </div>
         </Header>
         <Body>
           <Panel>
diff --git a/src/sentry/static/sentry/app/views/releases/shared/utils.jsx b/src/sentry/static/sentry/app/views/releases/shared/utils.jsx
index 500674cce1..532dd39d85 100644
--- a/src/sentry/static/sentry/app/views/releases/shared/utils.jsx
+++ b/src/sentry/static/sentry/app/views/releases/shared/utils.jsx
@@ -9,5 +9,8 @@ import {Client} from 'app/api';
  */
 export function fetchOrganizationReleases(organization, query) {
   const api = new Client();
-  return api.requestPromise(`/organizations/${organization.slug}/releases/`, {query: {}});
+
+  const options = {query: {query: query.query}};
+
+  return api.requestPromise(`/organizations/${organization.slug}/releases/`, options);
 }
