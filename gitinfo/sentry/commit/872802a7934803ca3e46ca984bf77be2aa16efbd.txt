commit 872802a7934803ca3e46ca984bf77be2aa16efbd
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Tue Oct 16 11:17:35 2018 +0200

    feat: DIF UI Update + Delete (#10038)

diff --git a/src/sentry/api/endpoints/debug_files.py b/src/sentry/api/endpoints/debug_files.py
index ff3322d256..8cf0b8b719 100644
--- a/src/sentry/api/endpoints/debug_files.py
+++ b/src/sentry/api/endpoints/debug_files.py
@@ -5,6 +5,8 @@ import jsonschema
 import logging
 import posixpath
 
+from django.db import transaction
+from django.db.models import Q
 from rest_framework.response import Response
 from rest_framework import serializers
 
@@ -13,12 +15,14 @@ from sentry import ratelimits
 from sentry.api.base import DocSection
 from sentry.api.bases.project import ProjectEndpoint, ProjectReleasePermission
 from sentry.api.content_negotiation import ConditionalContentNegotiation
+from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.api.serializers.rest_framework import ListField
 from sentry.models import ChunkFileState, FileBlobOwner, ProjectDebugFile, \
     VersionDSymFile, DSymApp, DIF_PLATFORMS, create_files_from_dif_zip, \
     get_assemble_status, set_assemble_status
 from sentry.utils import json
+from sentry.constants import KNOWN_DIF_TYPES
 
 try:
     from django.http import (
@@ -103,34 +107,63 @@ class DebugFilesEndpoint(ProjectEndpoint):
         Retrieve a list of debug information files for a given project.
 
         :pparam string organization_slug: the slug of the organization the
-                                          release belongs to.
+                                          file belongs to.
         :pparam string project_slug: the slug of the project to list the
                                      DIFs of.
         :auth: required
         """
+        query = request.GET.get('query')
 
-        apps = DSymApp.objects.filter(project=project)
-        debug_files = VersionDSymFile.objects.filter(
-            dsym_app=apps
-        ).select_related('dsym_file').order_by('-build', 'version')
-
-        file_list = ProjectDebugFile.objects.filter(
+        queryset = ProjectDebugFile.objects.filter(
             project=project,
-            versiondsymfile__isnull=True,
-        ).select_related('file')[:100]
+        ).select_related('file')
+
+        if query:
+            KNOWN_DIF_TYPES_REVERSE = dict((v, k) for (k, v) in six.iteritems(KNOWN_DIF_TYPES))
+            queryset = queryset.filter(
+                Q(object_name__icontains=query) | Q(debug_id__icontains=query) | Q(
+                    cpu_name__icontains=query) | Q(file__headers__icontains=query) | Q(
+                        file__headers__icontains=KNOWN_DIF_TYPES_REVERSE.get(query))
+            )
 
-        download_requested = request.GET.get('download_id') is not None
+        download_requested = request.GET.get('id') is not None
         if download_requested and (request.access.has_scope('project:write')):
-            return self.download(request.GET.get('download_id'), project)
-
-        return Response(
-            {
-                'apps': serialize(list(apps)),
-                'debugSymbols': serialize(list(debug_files)),
-                'unreferencedDebugSymbols': serialize(list(file_list)),
-            }
+            return self.download(request.GET.get('id'), project)
+
+        return self.paginate(
+            request=request,
+            queryset=queryset,
+            order_by='-id',
+            paginator_cls=OffsetPaginator,
+            on_results=lambda x: serialize(x, request.user),
         )
 
+    def delete(self, request, project):
+        """
+        Delete a specific Project's Debug Information File
+        ```````````````````````````````````````````````````
+
+        Delete a debug information file for a given project.
+
+        :pparam string organization_slug: the slug of the organization the
+                                          file belongs to.
+        :pparam string project_slug: the slug of the project to delete the
+                                     DIF.
+        :auth: required
+        """
+
+        if request.GET.get('id') and (request.access.has_scope('project:write')):
+            with transaction.atomic():
+                debug_file = ProjectDebugFile.objects.filter(
+                    id=request.GET.get('id'),
+                    project=project,
+                ).select_related('file').first()
+                if debug_file is not None:
+                    debug_file.delete()
+                    return Response(status=204)
+
+        return Response(status=404)
+
     def post(self, request, project):
         """
         Upload a New File
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index d51857cb43..a14476a490 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -35,7 +35,7 @@ import ProjectTags from 'app/views/projectTags';
 import ProjectChooser from 'app/views/projectChooser';
 import ProjectDashboard from 'app/views/projectDashboard';
 import ProjectDataForwarding from 'app/views/projectDataForwarding';
-import ProjectDebugSymbols from 'app/views/projectDebugSymbols';
+import ProjectDebugFiles from 'app/views/projectDebugFiles';
 import ProjectDetails from 'app/views/projectDetails';
 import ProjectDocsContext from 'app/views/projectInstall/docsContext';
 import ProjectEvents from 'app/views/projectEvents';
@@ -311,7 +311,7 @@ function routes() {
       <Route
         path="debug-symbols/"
         name="Debug Information Files"
-        component={errorHandler(ProjectDebugSymbols)}
+        component={errorHandler(ProjectDebugFiles)}
       />
       <Route
         path="processing-issues/"
diff --git a/src/sentry/static/sentry/app/views/projectDebugFiles.jsx b/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
new file mode 100644
index 0000000000..359f6aa90f
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
@@ -0,0 +1,254 @@
+import {Box, Flex} from 'grid-emotion';
+import React from 'react';
+import createReactClass from 'create-react-class';
+import {browserHistory} from 'react-router';
+import {omit, isEqual} from 'lodash';
+import qs from 'query-string';
+
+import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
+import {t} from 'app/locale';
+import ApiMixin from 'app/mixins/apiMixin';
+import ActionLink from 'app/components/actions/actionLink';
+import EmptyStateWarning from 'app/components/emptyStateWarning';
+import FileSize from 'app/components/fileSize';
+import InlineSvg from 'app/components/inlineSvg';
+import LoadingError from 'app/components/loadingError';
+import LoadingIndicator from 'app/components/loadingIndicator';
+import OrganizationState from 'app/mixins/organizationState';
+import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import TextBlock from 'app/views/settings/components/text/textBlock';
+import TimeSince from 'app/components/timeSince';
+import Pagination from 'app/components/pagination';
+import SearchBar from 'app/components/searchBar';
+import LinkWithConfirmation from 'app/components/linkWithConfirmation';
+import space from 'app/styles/space';
+
+const ProjectDebugSymbols = createReactClass({
+  displayName: 'ProjectDebugSymbols',
+  mixins: [ApiMixin, OrganizationState],
+
+  getInitialState() {
+    return {
+      loading: true,
+      error: false,
+      debugFiles: [],
+      query: '',
+      pageLinks: '',
+    };
+  },
+
+  componentDidMount() {
+    this.fetchData();
+  },
+
+  componentWillReceiveProps(nextProps) {
+    const searchHasChanged = !isEqual(
+      omit(qs.parse(nextProps.location.search)),
+      omit(qs.parse(this.props.location.search))
+    );
+
+    if (searchHasChanged) {
+      const queryParams = nextProps.location.query;
+      this.setState(
+        {
+          query: queryParams.query,
+        },
+        this.fetchData
+      );
+    }
+  },
+
+  fetchData() {
+    const {orgId, projectId} = this.props.params;
+
+    const query = {
+      per_page: 20,
+      query: this.state.query,
+    };
+
+    this.setState({
+      loading: true,
+    });
+
+    this.api.request(`/projects/${orgId}/${projectId}/files/dsyms/`, {
+      query,
+      success: (data, _, jqXHR) => {
+        this.setState({
+          error: false,
+          loading: false,
+          debugFiles: data,
+          pageLinks: jqXHR.getResponseHeader('Link'),
+        });
+      },
+      error: () => {
+        this.setState({
+          error: true,
+          loading: false,
+        });
+      },
+    });
+  },
+
+  onDelete(id) {
+    const {orgId, projectId} = this.props.params;
+    this.setState({
+      loading: true,
+    });
+    this.api.request(`/projects/${orgId}/${projectId}/files/dsyms/?id=${id}`, {
+      method: 'DELETE',
+      complete: () => this.fetchData(),
+    });
+  },
+
+  onSearch(query) {
+    let targetQueryParams = {};
+    if (query !== '') targetQueryParams.query = query;
+
+    let {orgId, projectId} = this.props.params;
+    browserHistory.push({
+      pathname: `/settings/${orgId}/${projectId}/debug-symbols/`,
+      query: targetQueryParams,
+    });
+  },
+
+  renderLoading() {
+    return <LoadingIndicator />;
+  },
+
+  renderNoQueryResults() {
+    return (
+      <EmptyStateWarning>
+        <p>{t('Sorry, no releases match your filters.')}</p>
+      </EmptyStateWarning>
+    );
+  },
+
+  renderEmpty() {
+    return (
+      <EmptyStateWarning>
+        <p>{t('There are no debug symbols for this project.')}</p>
+      </EmptyStateWarning>
+    );
+  },
+
+  renderDsyms() {
+    let {orgId, projectId} = this.props.params;
+    let access = this.getAccess();
+
+    const rows = this.state.debugFiles.map((dsym, key) => {
+      const url = `${this.api
+        .baseUrl}/projects/${orgId}/${projectId}/files/dsyms/?id=${dsym.id}`;
+      return (
+        <PanelItem key={key} align="center" px={2} py={1}>
+          <Box w={4.5 / 12}>
+            <code className="small">{dsym.debugId || dsym.uuid}</code>
+            <Flex mt="4px">
+              <Box w={4 / 12} pl="2px">
+                <p className="m-b-0 text-light small">
+                  <FileSize bytes={dsym.size} />
+                </p>
+              </Box>
+              <Box w={8 / 12} pl={1}>
+                <p className="m-b-0 text-light small">
+                  <span className="icon icon-clock" />{' '}
+                  <TimeSince date={dsym.dateCreated} />
+                </p>
+              </Box>
+            </Flex>
+          </Box>
+          <Box flex="1">
+            {dsym.symbolType === 'proguard' && dsym.objectName === 'proguard-mapping'
+              ? '-'
+              : dsym.objectName}
+            <p className="m-b-0 text-light small">
+              {dsym.symbolType === 'proguard' && dsym.cpuName === 'any'
+                ? 'proguard'
+                : `${dsym.cpuName} (${dsym.symbolType})`}
+            </p>
+          </Box>
+
+          <Box flex="1">
+            <div className="pull-right">
+              <ActionLink
+                onAction={() => (window.location = url)}
+                className="btn btn-default btn-sm"
+                disabled={!access.has('project:write')}
+                css={{
+                  marginRight: space(0.5),
+                }}
+              >
+                <InlineSvg src="icon-download" /> {t('Download')}
+              </ActionLink>
+              <LinkWithConfirmation
+                className="btn btn-danger btn-sm"
+                disabled={!access.has('project:write')}
+                title={t('Delete')}
+                message={t(
+                  'Are you sure you wish to delete this debug infromation file?'
+                )}
+                onConfirm={() => this.onDelete(dsym.id)}
+              >
+                <InlineSvg src="icon-trash" />
+              </LinkWithConfirmation>
+            </div>
+          </Box>
+        </PanelItem>
+      );
+    });
+
+    return rows;
+  },
+
+  renderStreamBody() {
+    let body;
+
+    if (this.state.loading) body = this.renderLoading();
+    else if (this.state.error) body = <LoadingError onRetry={this.fetchData} />;
+    else if (this.state.debugFiles.length > 0) body = this.renderDsyms();
+    else if (this.state.query && this.state.query !== '')
+      body = this.renderNoQueryResults();
+    else body = this.renderEmpty();
+
+    return body;
+  },
+
+  render() {
+    return (
+      <React.Fragment>
+        <SettingsPageHeader title={t('Debug Information Files')} />
+        <TextBlock>
+          {t(
+            `
+          Here you can find all your uploaded debug information files (dSYMs, ProGuard, Breakpad ...).
+          This is used to convert addresses and minified function names from crash dumps
+          into function names and locations.
+        `
+          )}
+        </TextBlock>
+
+        <div className="row m-b-1">
+          <div className="col-sm-7" />
+          <div className="col-sm-5">
+            <SearchBar
+              defaultQuery=""
+              placeholder={t('Search for a DIF')}
+              query={this.state.query}
+              onSearch={this.onSearch}
+            />
+          </div>
+        </div>
+        <Panel>
+          <PanelHeader>
+            <Box w={4.5 / 12}>{t('Debug ID')}</Box>
+            <Box flex="1">{t('Name')}</Box>
+            <Box flex="1" />
+          </PanelHeader>
+          <PanelBody>{this.renderStreamBody()}</PanelBody>
+        </Panel>
+        <Pagination pageLinks={this.state.pageLinks} />
+      </React.Fragment>
+    );
+  },
+});
+
+export default ProjectDebugSymbols;
diff --git a/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx b/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
deleted file mode 100644
index 081fc141dc..0000000000
--- a/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
+++ /dev/null
@@ -1,426 +0,0 @@
-import {Box, Flex} from 'grid-emotion';
-import Modal from 'react-bootstrap/lib/Modal';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import styled from 'react-emotion';
-
-import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
-import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
-import DateTime from 'app/components/dateTime';
-import EmptyStateWarning from 'app/components/emptyStateWarning';
-import FileSize from 'app/components/fileSize';
-import LoadingError from 'app/components/loadingError';
-import LoadingIndicator from 'app/components/loadingIndicator';
-import OrganizationState from 'app/mixins/organizationState';
-import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TextBlock from 'app/views/settings/components/text/textBlock';
-import TimeSince from 'app/components/timeSince';
-
-const marginBottomStyle = {marginBottom: 40};
-
-const LastSeen = styled(Flex)`
-  font-size: 12px;
-  color: ${p => p.theme.purple2};
-`;
-
-const TimeIcon = styled.span`
-  margin-right: 4px;
-`;
-
-const HoverablePanelItem = styled(PanelItem)`
-  cursor: pointer;
-  transition: all 0s ease-in-out;
-  &:hover {
-    background-color: ${p => p.theme.whiteDark};
-  }
-`;
-
-const ProjectDebugSymbols = createReactClass({
-  displayName: 'ProjectDebugSymbols',
-  mixins: [ApiMixin, OrganizationState],
-
-  getInitialState() {
-    return {
-      loading: true,
-      error: false,
-      showModal: false,
-      debugSymbols: [],
-      unreferencedDebugSymbols: [],
-      apps: [],
-      activeAppID: null,
-      activeVersion: null,
-      activeBuilds: null,
-      activeBuild: null,
-      activeDsyms: null,
-    };
-  },
-
-  componentDidMount() {
-    this.fetchData();
-  },
-
-  fetchData() {
-    let {orgId, projectId} = this.props.params;
-    this.api.request(`/projects/${orgId}/${projectId}/files/dsyms/`, {
-      success: (data, _, jqXHR) => {
-        this.setState({
-          error: false,
-          loading: false,
-          debugSymbols: data.debugSymbols,
-          unreferencedDebugSymbols: data.unreferencedDebugSymbols,
-          apps: data.apps,
-          pageLinks: jqXHR.getResponseHeader('Link'),
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-          loading: false,
-        });
-      },
-    });
-  },
-
-  setActive(appID, version, builds) {
-    this.setState({
-      activeAppID: appID,
-      activeVersion: version,
-      activeBuilds: builds,
-    });
-  },
-
-  openModal(build, dsyms) {
-    this.setState({
-      showModal: true,
-      activeBuild: build,
-      activeDsyms: dsyms,
-    });
-  },
-
-  closeModal() {
-    this.setState({
-      showModal: false,
-    });
-  },
-
-  renderDebugTable() {
-    let body;
-
-    if (this.state.loading) {
-      body = this.renderLoading();
-    } else if (this.state.error) {
-      body = <LoadingError onRetry={this.fetchData} />;
-    } else if (this.state.debugSymbols.length > 0) {
-      body = this.renderResults();
-    } else {
-      body = this.renderEmpty();
-    }
-
-    return body;
-  },
-
-  renderLoading() {
-    return (
-      <Panel>
-        <LoadingIndicator />
-      </Panel>
-    );
-  },
-
-  renderEmpty() {
-    return (
-      <Panel>
-        <EmptyStateWarning>
-          <p>{t('There are no debug symbols for this project.')}</p>
-        </EmptyStateWarning>
-      </Panel>
-    );
-  },
-
-  mapObject(object, callback) {
-    if (object === undefined) {
-      return [];
-    }
-    return Object.keys(object).map(function(key) {
-      return callback(object[key], key);
-    });
-  },
-
-  renderResults() {
-    let groupedDsyms = [];
-    this.state.debugSymbols.map((dsym, idx) => {
-      if (groupedDsyms[dsym.dsymAppId] === undefined) {
-        groupedDsyms[dsym.dsymAppId] = [];
-      }
-      if (groupedDsyms[dsym.dsymAppId][dsym.version] === undefined) {
-        groupedDsyms[dsym.dsymAppId][dsym.version] = [];
-      }
-      if (groupedDsyms[dsym.dsymAppId][dsym.version][dsym.build] === undefined) {
-        groupedDsyms[dsym.dsymAppId][dsym.version][dsym.build] = [];
-      }
-      groupedDsyms[dsym.dsymAppId][dsym.version][dsym.build].push(dsym);
-    });
-
-    let indexedApps = [];
-    if (this.state.apps) {
-      this.state.apps.map((app, idx) => {
-        indexedApps[app.id] = app;
-      });
-    }
-
-    return indexedApps.map(app => {
-      return (
-        <Panel style={marginBottomStyle} key={app.id}>
-          <PanelHeader>
-            <div>
-              <div
-                className="app-icon"
-                style={app.iconUrl && {backgroundImage: `url(${app.iconUrl})`}}
-              />
-              {app.name}
-            </div>
-            <small>({app.appId})</small>
-          </PanelHeader>
-
-          <PanelBody>
-            {this.mapObject(groupedDsyms[app.id], (builds, version) => {
-              let symbolsInVersion = 0;
-              let lastSeen = null;
-              this.mapObject(groupedDsyms[app.id][version], (dsyms, build) => {
-                symbolsInVersion += Object.keys(dsyms).length;
-                if (
-                  lastSeen === null ||
-                  (lastSeen &&
-                    new Date(dsyms[0].dateAdded).getTime() > new Date(lastSeen).getTime())
-                ) {
-                  lastSeen = dsyms[0].dateAdded;
-                }
-              });
-              let row = (
-                <HoverablePanelItem
-                  className="hoverable"
-                  onClick={() => this.setActive(app.id, version, builds)}
-                >
-                  <Flex flex="1" direction="column">
-                    <h3 className="truncate">{version}</h3>
-                    <BuildLabel>
-                      {t('Builds')}: {Object.keys(builds).length}
-                    </BuildLabel>
-                    <LastSeen align="center">
-                      <TimeIcon className="icon icon-clock" />
-                      <TimeSince date={lastSeen} />
-                    </LastSeen>
-                  </Flex>
-                  <Box>
-                    {t('Debug Information Files')}: {symbolsInVersion}
-                  </Box>
-                </HoverablePanelItem>
-              );
-
-              let buildPanelItems = '';
-              if (
-                this.state.activeVersion &&
-                this.state.activeBuilds &&
-                this.state.activeVersion == version &&
-                this.state.activeAppID == app.id
-              ) {
-                buildPanelItems = this.renderBuilds(version, this.state.activeBuilds);
-              }
-              return (
-                <PanelItem direction="column" key={version}>
-                  {row}
-                  {buildPanelItems}
-                </PanelItem>
-              );
-            })}
-          </PanelBody>
-        </Panel>
-      );
-    });
-  },
-
-  renderBuilds(version, builds) {
-    let buildPanelItems = [];
-    let dateAdded = null;
-    this.mapObject(builds, (dsyms, build) => {
-      if (
-        dateAdded === null ||
-        (dateAdded &&
-          new Date(dsyms[0].dateAdded).getTime() > new Date(dateAdded).getTime())
-      ) {
-        dateAdded = dsyms[0].dateAdded;
-      }
-    });
-    this.mapObject(builds, (dsyms, build) => {
-      buildPanelItems.push(
-        <HoverablePanelItem key={build} onClick={() => this.openModal(build, dsyms)}>
-          <Flex flex="1" direction="column">
-            <BuildLabel>{build}</BuildLabel>
-            <LastSeen align="center">
-              <TimeIcon className="icon icon-clock" />
-              <TimeSince date={dateAdded} />
-            </LastSeen>
-          </Flex>
-          <Box>
-            {t('Debug Information Files')}: {dsyms.length}
-          </Box>
-        </HoverablePanelItem>
-      );
-    });
-    return buildPanelItems;
-  },
-
-  renderDsyms(dsyms, raw) {
-    if (dsyms === null) {
-      return null;
-    }
-
-    let moreSymbolsHidden = null;
-    if (raw && dsyms.length >= 100) {
-      moreSymbolsHidden = (
-        <tr className="text-center" key="empty-row">
-          <td colSpan="6">{t('There are more symbols than are shown here.')}</td>
-        </tr>
-      );
-    }
-
-    let {orgId, projectId} = this.props.params;
-    let access = this.getAccess();
-
-    const rows = dsyms.map((dsymFile, key) => {
-      let dsym = raw ? dsymFile : dsymFile.dsym;
-      if (dsym === undefined || dsym === null) {
-        return null;
-      }
-      const url = `${this.api
-        .baseUrl}/projects/${orgId}/${projectId}/files/dsyms/?download_id=${dsym.id}`;
-      return (
-        <tr key={key}>
-          <td>
-            <code className="small">{dsym.debugId || dsym.uuid}</code>
-          </td>
-          <td>
-            {dsym.symbolType === 'proguard' && dsym.objectName === 'proguard-mapping'
-              ? '-'
-              : dsym.objectName}
-          </td>
-          <td>
-            {dsym.symbolType === 'proguard' && dsym.cpuName === 'any'
-              ? 'proguard'
-              : `${dsym.cpuName} (${dsym.symbolType})`}
-          </td>
-          <td>
-            <DateTime date={dsym.dateCreated} />
-          </td>
-          <td>
-            <FileSize bytes={dsym.size} />
-          </td>
-          <td>
-            {access.has('project:write') ? (
-              <a href={url} className="btn btn-sm btn-default">
-                <span className="icon icon-open" />
-              </a>
-            ) : null}
-          </td>
-        </tr>
-      );
-    });
-
-    rows.push(moreSymbolsHidden);
-    return rows;
-  },
-
-  renderUnreferencedDebugSymbols() {
-    if (this.state.loading) {
-      return null;
-    }
-    return (
-      <div>
-        <SettingsPageHeader title={t('Unreferenced Debug Information Files')} />
-        <TextBlock>
-          {t(
-            `
-          This list represents all Debug Information Files which are not assigned to an
-          app version. We will still find these debug symbols for symbolication
-          but we can't tell you which versions they belong to.  This happens
-          if you upload them with an old verison of sentry-cli or if sentry-cli
-          can't locate the Info.plist file at the time of upload.
-        `
-          )}
-        </TextBlock>
-        <table className="table">
-          <thead>
-            <tr>
-              <th>{t('Debug ID')}</th>
-              <th>{t('Object')}</th>
-              <th>{t('Type')}</th>
-              <th>{t('Uploaded')}</th>
-              <th>{t('Size')}</th>
-              <th />
-            </tr>
-          </thead>
-          <tbody>{this.renderDsyms(this.state.unreferencedDebugSymbols, true)}</tbody>
-        </table>
-      </div>
-    );
-  },
-
-  render() {
-    return (
-      <div>
-        <SettingsPageHeader title={t('Debug Information Files')} />
-        <TextBlock>
-          {t(
-            `
-          Here you can find uploaded debug information (for instance debug
-          symbol files or proguard mappings).  This is used to convert
-          addresses and minified function names from crash dumps
-          into function names and locations.  For JavaScript debug support
-          look at releases instead.
-        `
-          )}
-        </TextBlock>
-
-        {this.renderDebugTable()}
-
-        {this.renderUnreferencedDebugSymbols()}
-
-        <Modal
-          show={this.state.showModal}
-          onHide={this.closeModal}
-          animation={false}
-          backdrop="static"
-          enforceFocus={false}
-          bsSize="lg"
-        >
-          <Modal.Header closeButton>
-            <Modal.Title>
-              {this.state.activeVersion} ({this.state.activeBuild})
-            </Modal.Title>
-          </Modal.Header>
-          <Modal.Body>
-            <table className="table">
-              <thead>
-                <tr>
-                  <th>{t('Debug ID')}</th>
-                  <th>{t('Object')}</th>
-                  <th>{t('Type')}</th>
-                  <th>{t('Uploaded')}</th>
-                  <th>{t('Size')}</th>
-                </tr>
-              </thead>
-              <tbody>{this.renderDsyms(this.state.activeDsyms)}</tbody>
-            </table>
-          </Modal.Body>
-        </Modal>
-      </div>
-    );
-  },
-});
-
-export default ProjectDebugSymbols;
-
-const BuildLabel = styled('div')`
-  margin-bottom: 4px;
-`;
diff --git a/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
new file mode 100644
index 0000000000..2a36df2eb0
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
@@ -0,0 +1,275 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ProjectDebugFiles renders 1`] = `
+<ProjectDebugSymbols
+  params={
+    Object {
+      "orgId": "org",
+      "projectId": "project",
+    }
+  }
+>
+  <SettingsPageHeading
+    title="Debug Information Files"
+  >
+    <Wrapper>
+      <div
+        className="css-1pnrn3o-Wrapper e1kblvez1"
+      >
+        <Flex
+          align="center"
+        >
+          <Base
+            align="center"
+            className="css-5ipae5"
+          >
+            <div
+              className="css-5ipae5"
+              is={null}
+            >
+              <Title>
+                <Base
+                  className="css-1mqcea-Title e1kblvez0"
+                >
+                  <div
+                    className="css-1mqcea-Title e1kblvez0"
+                    is={null}
+                  >
+                    Debug Information Files
+                  </div>
+                </Base>
+              </Title>
+            </div>
+          </Base>
+        </Flex>
+      </div>
+    </Wrapper>
+  </SettingsPageHeading>
+  <TextBlock>
+    <Component
+      className="css-1geyb25-TextBlock ec8ep340"
+    >
+      <div
+        className="css-1geyb25-TextBlock ec8ep340"
+      >
+        
+          Here you can find all your uploaded debug information files (dSYMs, ProGuard, Breakpad ...).
+          This is used to convert addresses and minified function names from crash dumps
+          into function names and locations.
+        
+      </div>
+    </Component>
+  </TextBlock>
+  <div
+    className="row m-b-1"
+  >
+    <div
+      className="col-sm-7"
+    />
+    <div
+      className="col-sm-5"
+    >
+      <SearchBar
+        defaultQuery=""
+        onSearch={[Function]}
+        placeholder="Search for a DIF"
+        query=""
+      >
+        <div
+          className="search"
+        >
+          <form
+            className="form-horizontal"
+            onSubmit={[Function]}
+          >
+            <div>
+              <input
+                autoComplete="off"
+                className="search-input form-control"
+                name="query"
+                onBlur={[Function]}
+                onChange={[Function]}
+                placeholder="Search for a DIF"
+                type="text"
+                value=""
+              />
+              <span
+                className="icon-search"
+              />
+            </div>
+          </form>
+        </div>
+      </SearchBar>
+    </div>
+  </div>
+  <Panel>
+    <Component
+      className="css-10qfvek-Panel e1laxa7d0"
+    >
+      <div
+        className="css-10qfvek-Panel e1laxa7d0"
+      >
+        <PanelHeader>
+          <Component
+            className="css-gxu3mm-PanelHeader-getPadding e1p8v8nv0"
+          >
+            <Flex
+              align="center"
+              className="css-gxu3mm-PanelHeader-getPadding e1p8v8nv0"
+              justify="space-between"
+            >
+              <Base
+                align="center"
+                className="e1p8v8nv0 css-18dn1ya-PanelHeader-getPadding"
+                justify="space-between"
+              >
+                <div
+                  className="e1p8v8nv0 css-18dn1ya-PanelHeader-getPadding"
+                  is={null}
+                >
+                  <Box
+                    w={0.375}
+                  >
+                    <Base
+                      className="css-cxbzjr"
+                      w={0.375}
+                    >
+                      <div
+                        className="css-cxbzjr"
+                        is={null}
+                      >
+                        Debug ID
+                      </div>
+                    </Base>
+                  </Box>
+                  <Box
+                    flex="1"
+                  >
+                    <Base
+                      className="css-vti0ei"
+                      flex="1"
+                    >
+                      <div
+                        className="css-vti0ei"
+                        is={null}
+                      >
+                        Name
+                      </div>
+                    </Base>
+                  </Box>
+                  <Box
+                    flex="1"
+                  >
+                    <Base
+                      className="css-vti0ei"
+                      flex="1"
+                    >
+                      <div
+                        className="css-vti0ei"
+                        is={null}
+                      />
+                    </Base>
+                  </Box>
+                </div>
+              </Base>
+            </Flex>
+          </Component>
+        </PanelHeader>
+        <PanelBody
+          direction="column"
+          disablePadding={true}
+          flex={false}
+        >
+          <div
+            className="css-9vq8an-textStyles"
+          >
+            <EmptyStateWarning>
+              <EmptyStreamWrapper
+                className="ref-empty-state"
+              >
+                <div
+                  className="ref-empty-state css-n38n5f-EmptyStreamWrapper ernlsnc0"
+                >
+                  <Icon
+                    className="icon icon-exclamation"
+                  >
+                    <div
+                      className="icon icon-exclamation css-tjp7mx-Icon ernlsnc1"
+                    />
+                  </Icon>
+                  <p>
+                    There are no debug symbols for this project.
+                  </p>
+                </div>
+              </EmptyStreamWrapper>
+            </EmptyStateWarning>
+          </div>
+        </PanelBody>
+      </div>
+    </Component>
+  </Panel>
+  <Pagination
+    onCursor={[Function]}
+  />
+</ProjectDebugSymbols>
+`;
+
+exports[`ProjectDebugFiles renders empty 1`] = `
+<Fragment>
+  <SettingsPageHeading
+    title="Debug Information Files"
+  />
+  <TextBlock>
+    
+          Here you can find all your uploaded debug information files (dSYMs, ProGuard, Breakpad ...).
+          This is used to convert addresses and minified function names from crash dumps
+          into function names and locations.
+        
+  </TextBlock>
+  <div
+    className="row m-b-1"
+  >
+    <div
+      className="col-sm-7"
+    />
+    <div
+      className="col-sm-5"
+    >
+      <SearchBar
+        defaultQuery=""
+        onSearch={[Function]}
+        placeholder="Search for a DIF"
+        query=""
+      />
+    </div>
+  </div>
+  <Panel>
+    <PanelHeader>
+      <Box
+        w={0.375}
+      >
+        Debug ID
+      </Box>
+      <Box
+        flex="1"
+      >
+        Name
+      </Box>
+      <Box
+        flex="1"
+      />
+    </PanelHeader>
+    <PanelBody
+      direction="column"
+      disablePadding={true}
+      flex={false}
+    >
+      <LoadingIndicator />
+    </PanelBody>
+  </Panel>
+  <Pagination
+    onCursor={[Function]}
+    pageLinks=""
+  />
+</Fragment>
+`;
diff --git a/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
deleted file mode 100644
index edd291692c..0000000000
--- a/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
+++ /dev/null
@@ -1,471 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`ProjectDebugSymbols renders 1`] = `
-<ProjectDebugSymbols
-  params={
-    Object {
-      "orgId": "org",
-      "projectId": "project",
-    }
-  }
->
-  <div>
-    <SettingsPageHeading
-      title="Debug Information Files"
-    >
-      <Wrapper>
-        <div
-          className="css-1pnrn3o-Wrapper e1kblvez1"
-        >
-          <Flex
-            align="center"
-          >
-            <Base
-              align="center"
-              className="css-5ipae5"
-            >
-              <div
-                className="css-5ipae5"
-                is={null}
-              >
-                <Title>
-                  <Base
-                    className="css-1mqcea-Title e1kblvez0"
-                  >
-                    <div
-                      className="css-1mqcea-Title e1kblvez0"
-                      is={null}
-                    >
-                      Debug Information Files
-                    </div>
-                  </Base>
-                </Title>
-              </div>
-            </Base>
-          </Flex>
-        </div>
-      </Wrapper>
-    </SettingsPageHeading>
-    <TextBlock>
-      <Component
-        className="css-1geyb25-TextBlock ec8ep340"
-      >
-        <div
-          className="css-1geyb25-TextBlock ec8ep340"
-        >
-          
-          Here you can find uploaded debug information (for instance debug
-          symbol files or proguard mappings).  This is used to convert
-          addresses and minified function names from crash dumps
-          into function names and locations.  For JavaScript debug support
-          look at releases instead.
-        
-        </div>
-      </Component>
-    </TextBlock>
-    <Panel
-      key="1"
-      style={
-        Object {
-          "marginBottom": 40,
-        }
-      }
-    >
-      <Component
-        className="css-10qfvek-Panel e1laxa7d0"
-        style={
-          Object {
-            "marginBottom": 40,
-          }
-        }
-      >
-        <div
-          className="css-10qfvek-Panel e1laxa7d0"
-          style={
-            Object {
-              "marginBottom": 40,
-            }
-          }
-        >
-          <PanelHeader>
-            <Component
-              className="css-gxu3mm-PanelHeader-getPadding e1p8v8nv0"
-            >
-              <Flex
-                align="center"
-                className="css-gxu3mm-PanelHeader-getPadding e1p8v8nv0"
-                justify="space-between"
-              >
-                <Base
-                  align="center"
-                  className="e1p8v8nv0 css-18dn1ya-PanelHeader-getPadding"
-                  justify="space-between"
-                >
-                  <div
-                    className="e1p8v8nv0 css-18dn1ya-PanelHeader-getPadding"
-                    is={null}
-                  >
-                    <div>
-                      <div
-                        className="app-icon"
-                        style={null}
-                      />
-                      MyApp
-                    </div>
-                    <small>
-                      (
-                      com.example.myapp
-                      )
-                    </small>
-                  </div>
-                </Base>
-              </Flex>
-            </Component>
-          </PanelHeader>
-          <PanelBody
-            direction="column"
-            disablePadding={true}
-            flex={false}
-          >
-            <div
-              className="css-9vq8an-textStyles"
-            >
-              <PanelItem
-                direction="column"
-                key="1.0"
-                p={2}
-              >
-                <Base
-                  className="css-1cf8lr1-PanelItem eo8n7lk0"
-                  direction="column"
-                  p={2}
-                >
-                  <div
-                    className="css-1cf8lr1-PanelItem eo8n7lk0"
-                    is={null}
-                  >
-                    <HoverablePanelItem
-                      className="hoverable"
-                      onClick={[Function]}
-                    >
-                      <Base
-                        className="hoverable css-oncsnl-PanelItem-HoverablePanelItem emphg7t2"
-                        onClick={[Function]}
-                      >
-                        <div
-                          className="hoverable css-oncsnl-PanelItem-HoverablePanelItem emphg7t2"
-                          is={null}
-                          onClick={[Function]}
-                        >
-                          <Flex
-                            direction="column"
-                            flex="1"
-                          >
-                            <Base
-                              className="css-oui462"
-                              direction="column"
-                              flex="1"
-                            >
-                              <div
-                                className="css-oui462"
-                                is={null}
-                              >
-                                <h3
-                                  className="truncate"
-                                >
-                                  1.0
-                                </h3>
-                                <BuildLabel>
-                                  <div
-                                    className="css-m8ese3-BuildLabel emphg7t3"
-                                  >
-                                    Builds
-                                    : 
-                                    1
-                                  </div>
-                                </BuildLabel>
-                                <LastSeen
-                                  align="center"
-                                >
-                                  <Base
-                                    align="center"
-                                    className="css-1eq7ivg-LastSeen emphg7t0"
-                                  >
-                                    <div
-                                      className="css-1eq7ivg-LastSeen emphg7t0"
-                                      is={null}
-                                    >
-                                      <TimeIcon
-                                        className="icon icon-clock"
-                                      >
-                                        <span
-                                          className="icon icon-clock css-3im64z-TimeIcon emphg7t1"
-                                        />
-                                      </TimeIcon>
-                                      <TimeSince
-                                        date="2018-01-31T07:16:26.072Z"
-                                        suffix="ago"
-                                      >
-                                        <time
-                                          dateTime="2018-01-31T07:16:26.072Z"
-                                          title="January 31, 2018 7:16 AM UTC"
-                                        >
-                                          in 3 months
-                                        </time>
-                                      </TimeSince>
-                                    </div>
-                                  </Base>
-                                </LastSeen>
-                              </div>
-                            </Base>
-                          </Flex>
-                          <Box>
-                            <Base
-                              className="css-roynbj"
-                            >
-                              <div
-                                className="css-roynbj"
-                                is={null}
-                              >
-                                Debug Information Files
-                                : 
-                                1
-                              </div>
-                            </Base>
-                          </Box>
-                        </div>
-                      </Base>
-                    </HoverablePanelItem>
-                  </div>
-                </Base>
-              </PanelItem>
-            </div>
-          </PanelBody>
-        </div>
-      </Component>
-    </Panel>
-    <div>
-      <SettingsPageHeading
-        title="Unreferenced Debug Information Files"
-      >
-        <Wrapper>
-          <div
-            className="css-1pnrn3o-Wrapper e1kblvez1"
-          >
-            <Flex
-              align="center"
-            >
-              <Base
-                align="center"
-                className="css-5ipae5"
-              >
-                <div
-                  className="css-5ipae5"
-                  is={null}
-                >
-                  <Title>
-                    <Base
-                      className="css-1mqcea-Title e1kblvez0"
-                    >
-                      <div
-                        className="css-1mqcea-Title e1kblvez0"
-                        is={null}
-                      >
-                        Unreferenced Debug Information Files
-                      </div>
-                    </Base>
-                  </Title>
-                </div>
-              </Base>
-            </Flex>
-          </div>
-        </Wrapper>
-      </SettingsPageHeading>
-      <TextBlock>
-        <Component
-          className="css-1geyb25-TextBlock ec8ep340"
-        >
-          <div
-            className="css-1geyb25-TextBlock ec8ep340"
-          >
-            
-          This list represents all Debug Information Files which are not assigned to an
-          app version. We will still find these debug symbols for symbolication
-          but we can't tell you which versions they belong to.  This happens
-          if you upload them with an old verison of sentry-cli or if sentry-cli
-          can't locate the Info.plist file at the time of upload.
-        
-          </div>
-        </Component>
-      </TextBlock>
-      <table
-        className="table"
-      >
-        <thead>
-          <tr>
-            <th>
-              Debug ID
-            </th>
-            <th>
-              Object
-            </th>
-            <th>
-              Type
-            </th>
-            <th>
-              Uploaded
-            </th>
-            <th>
-              Size
-            </th>
-            <th />
-          </tr>
-        </thead>
-        <tbody />
-      </table>
-    </div>
-    <Modal
-      animation={false}
-      autoFocus={true}
-      backdrop="static"
-      bsClass="modal"
-      bsSize="lg"
-      dialogComponentClass={[Function]}
-      enforceFocus={false}
-      keyboard={true}
-      manager={
-        ModalManager {
-          "add": [Function],
-          "containers": Array [],
-          "data": Array [],
-          "handleContainerOverflow": true,
-          "hideSiblingNodes": true,
-          "isTopModal": [Function],
-          "modals": Array [],
-          "remove": [Function],
-        }
-      }
-      onHide={[Function]}
-      renderBackdrop={[Function]}
-      restoreFocus={true}
-      show={false}
-    >
-      <Modal
-        autoFocus={true}
-        backdrop="static"
-        backdropClassName="modal-backdrop"
-        containerClassName="modal-open"
-        enforceFocus={false}
-        keyboard={true}
-        manager={
-          ModalManager {
-            "add": [Function],
-            "containers": Array [],
-            "data": Array [],
-            "handleContainerOverflow": true,
-            "hideSiblingNodes": true,
-            "isTopModal": [Function],
-            "modals": Array [],
-            "remove": [Function],
-          }
-        }
-        onEntering={[Function]}
-        onExited={[Function]}
-        onHide={[Function]}
-        renderBackdrop={[Function]}
-        restoreFocus={true}
-        show={false}
-      />
-    </Modal>
-  </div>
-</ProjectDebugSymbols>
-`;
-
-exports[`ProjectDebugSymbols renders empty 1`] = `
-<div>
-  <SettingsPageHeading
-    title="Debug Information Files"
-  />
-  <TextBlock>
-    
-          Here you can find uploaded debug information (for instance debug
-          symbol files or proguard mappings).  This is used to convert
-          addresses and minified function names from crash dumps
-          into function names and locations.  For JavaScript debug support
-          look at releases instead.
-        
-  </TextBlock>
-  <Panel>
-    <LoadingIndicator />
-  </Panel>
-  <Modal
-    animation={false}
-    autoFocus={true}
-    backdrop="static"
-    bsClass="modal"
-    bsSize="lg"
-    dialogComponentClass={[Function]}
-    enforceFocus={false}
-    keyboard={true}
-    manager={
-      ModalManager {
-        "add": [Function],
-        "containers": Array [],
-        "data": Array [],
-        "handleContainerOverflow": true,
-        "hideSiblingNodes": true,
-        "isTopModal": [Function],
-        "modals": Array [],
-        "remove": [Function],
-      }
-    }
-    onHide={[Function]}
-    renderBackdrop={[Function]}
-    restoreFocus={true}
-    show={false}
-  >
-    <ModalHeader
-      bsClass="modal-header"
-      closeButton={true}
-      closeLabel="Close"
-    >
-      <ModalTitle
-        bsClass="modal-title"
-        componentClass="h4"
-      >
-         (
-        )
-      </ModalTitle>
-    </ModalHeader>
-    <ModalBody
-      bsClass="modal-body"
-      componentClass="div"
-    >
-      <table
-        className="table"
-      >
-        <thead>
-          <tr>
-            <th>
-              Debug ID
-            </th>
-            <th>
-              Object
-            </th>
-            <th>
-              Type
-            </th>
-            <th>
-              Uploaded
-            </th>
-            <th>
-              Size
-            </th>
-          </tr>
-        </thead>
-        <tbody />
-      </table>
-    </ModalBody>
-  </Modal>
-</div>
-`;
diff --git a/tests/js/spec/views/projectDebugSymbols.spec.jsx b/tests/js/spec/views/projectDebugFiles.spec.jsx
similarity index 74%
rename from tests/js/spec/views/projectDebugSymbols.spec.jsx
rename to tests/js/spec/views/projectDebugFiles.spec.jsx
index 5a03175e7c..8f961f9e55 100644
--- a/tests/js/spec/views/projectDebugSymbols.spec.jsx
+++ b/tests/js/spec/views/projectDebugFiles.spec.jsx
@@ -2,11 +2,11 @@ import React from 'react';
 import {shallow, mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import ProjectDebugSymbols from 'app/views/projectDebugSymbols';
+import ProjectDebugFiles from 'app/views/projectDebugFiles';
 
 const ENDPOINT = '/projects/org/project/files/dsyms/';
 
-describe('ProjectDebugSymbols', function() {
+describe('ProjectDebugFiles', function() {
   beforeEach(function() {
     Client.clearMockResponses();
   });
@@ -17,7 +17,7 @@ describe('ProjectDebugSymbols', function() {
       body: [],
     });
     let wrapper = shallow(
-      <ProjectDebugSymbols params={{orgId: 'org', projectId: 'project'}} />,
+      <ProjectDebugFiles params={{orgId: 'org', projectId: 'project'}} />,
       TestStubs.routerContext()
     );
 
@@ -35,7 +35,7 @@ describe('ProjectDebugSymbols', function() {
     });
 
     let wrapper = mount(
-      <ProjectDebugSymbols params={{orgId: 'org', projectId: 'project'}} />,
+      <ProjectDebugFiles params={{orgId: 'org', projectId: 'project'}} />,
       TestStubs.routerContext()
     );
 
diff --git a/tests/sentry/api/endpoints/test_debug_files.py b/tests/sentry/api/endpoints/test_debug_files.py
index 74bb871774..f37803cb9c 100644
--- a/tests/sentry/api/endpoints/test_debug_files.py
+++ b/tests/sentry/api/endpoints/test_debug_files.py
@@ -7,7 +7,7 @@ from django.core.files.uploadedfile import SimpleUploadedFile
 from django.core.urlresolvers import reverse
 
 from sentry.testutils import APITestCase
-from sentry.models import VersionDSymFile
+from sentry.models import ProjectDebugFile, VersionDSymFile
 
 # This is obviously a freely generated UUID and not the checksum UUID.
 # This is permissible if users want to send different UUIDs
@@ -259,27 +259,17 @@ class DebugFilesUploadTest(APITestCase):
 
         assert response.status_code == 200, response.content
 
-        app, = response.data['apps']
-        assert app['appId'] == 'com.example.myapp'
-        assert app['iconUrl'] is None
-        assert app['name'] == 'MyApp'
-        assert app['platform'] == 'android'
-
-        dsym, = response.data['debugSymbols']
-        assert dsym['build'] == '1'
-        assert dsym['version'] == '1.0'
-        assert dsym['dsym']['cpuName'] == 'any'
-        assert dsym['dsym']['headers'] == {
+        dsym, = response.data
+        assert dsym['cpuName'] == 'any'
+        assert dsym['headers'] == {
             'Content-Type': 'text/x-proguard+plain'}
-        assert dsym['dsym']['objectName'] == 'proguard-mapping'
-        assert dsym['dsym']['sha1'] == 'e6d3c5185dac63eddfdc1a5edfffa32d46103b44'
-        assert dsym['dsym']['symbolType'] == 'proguard'
-        assert dsym['dsym']['uuid'] == '6dc7fdb0-d2fb-4c8e-9d6b-bb1aa98929b1'
-
-        assert response.data['unreferencedDebugSymbols'] == []
+        assert dsym['objectName'] == 'proguard-mapping'
+        assert dsym['sha1'] == 'e6d3c5185dac63eddfdc1a5edfffa32d46103b44'
+        assert dsym['symbolType'] == 'proguard'
+        assert dsym['uuid'] == '6dc7fdb0-d2fb-4c8e-9d6b-bb1aa98929b1'
 
         # Test download
-        response = self.client.get(url + "?download_id=" + download_id)
+        response = self.client.get(url + "?id=" + download_id)
 
         assert response.status_code == 200, response.content
         assert response.get(
@@ -293,5 +283,22 @@ class DebugFilesUploadTest(APITestCase):
         # Login user with no permissions
         user_no_permission = self.create_user('baz@localhost', username='baz')
         self.login_as(user=user_no_permission)
-        response = self.client.get(url + "?download_id=" + download_id)
+        response = self.client.get(url + "?id=" + download_id)
+        assert response.status_code == 403, response.content
+
+        # Try to delete with no permissions
+        response = self.client.delete(url + "?id=" + download_id)
         assert response.status_code == 403, response.content
+
+        # Login again with permissions
+        self.login_as(user=self.user)
+
+        response = self.client.delete(url + "?id=888")
+        assert response.status_code == 404, response.content
+
+        assert ProjectDebugFile.objects.count() == 1
+
+        response = self.client.delete(url + "?id=" + download_id)
+        assert response.status_code == 204, response.content
+
+        assert ProjectDebugFile.objects.count() == 0
