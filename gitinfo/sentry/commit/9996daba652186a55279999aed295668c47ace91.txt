commit 9996daba652186a55279999aed295668c47ace91
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jan 3 02:44:02 2012 -0800

    Initial UX for views

diff --git a/bootstrap/lib/sentry.less b/bootstrap/lib/sentry.less
index b7f19b5bc0..61cba70db3 100644
--- a/bootstrap/lib/sentry.less
+++ b/bootstrap/lib/sentry.less
@@ -81,21 +81,34 @@
   border-bottom: 1px solid #ddd;
   .box-shadow(0 1px 0 rgba(255,255,255,.5));
   position: relative;
+
   h1 {
     margin-bottom: (@baseline / 2) - 1px;
   }
-}
 
-// Sparkline (page header)
+  // Tabbed nav in main header
+   .pills {
+    z-index: 1000;
+    position: absolute;
+    right: 20px;
+    top: 10px;
+  }
 
-.main-header .sparkline {
-  left: 0;
-  position: absolute;
-  width: 100%;
-  .opacity(60);
-}
-.main-header .btn {
-  margin-top: 5px;
+  // Sparkline (page header)
+  .sparkline {
+    z-index: 999;
+    left: 0;
+    position: absolute;
+    width: 100%;
+    .opacity(60);
+    * {
+      z-index: 999;
+    }
+  }
+
+  .btn {
+    margin-top: 5px;
+  }
 }
 
 // Code styles
diff --git a/sentry/commands/upgrade.py b/sentry/commands/upgrade.py
index bf81ac68f5..1fbdf85bde 100644
--- a/sentry/commands/upgrade.py
+++ b/sentry/commands/upgrade.py
@@ -18,3 +18,35 @@ def upgrade(interactive=True):
 
     if 'south' in settings.INSTALLED_APPS:
         call_command('migrate', database='default', interactive=interactive)
+
+    register_views()
+
+
+def register_views():
+    from sentry.views import View as ViewHandler
+    from sentry.models import View
+
+    for viewhandler in ViewHandler.handlers.all():
+        path = '%s.%s' % (viewhandler.__module__, viewhandler.__class__.__name__)
+
+        defaults = dict(
+            verbose_name=viewhandler.verbose_name,
+            verbose_name_plural=viewhandler.verbose_name_plural,
+        )
+
+        # TODO: this should handle race conditions
+        view, created = View.objects.get_or_create(
+            path=path,
+            defaults=defaults,
+        )
+        if created:
+            continue
+
+        save = False
+        for k, v in defaults.iteritems():
+            if getattr(view, k) != getattr(viewhandler, k):
+                save = True
+                setattr(view, k, v)
+
+        if save:
+            view.save()
diff --git a/sentry/conf/defaults.py b/sentry/conf/defaults.py
index 490c24598e..d93ebb03fc 100644
--- a/sentry/conf/defaults.py
+++ b/sentry/conf/defaults.py
@@ -98,7 +98,7 @@ PROCESSORS = (
 
 # List of event aggregation views
 VIEWS = (
-    # 'sentry.views.Exception',
-    # 'sentry.views.Message',
-    # 'sentry.views.Query',
+    'sentry.views.Exception',
+    'sentry.views.Message',
+    'sentry.views.Query',
 )
diff --git a/sentry/static/scripts/global.js b/sentry/static/scripts/global.js
index 15900875af..4eec113357 100644
--- a/sentry/static/scripts/global.js
+++ b/sentry/static/scripts/global.js
@@ -34,7 +34,7 @@ if (Sentry === undefined) {
 
     Sentry.config = function(data){
         $.each(data, function(k, v){
-            self.options[k] = v;
+            Sentry.options[k] = v;
         });
     };
 
@@ -81,6 +81,17 @@ if (Sentry === undefined) {
     };
 
     Sentry.realtime = {};
+    Sentry.realtime.options = {
+        viewId: null,
+        projectId: null
+    };
+
+    Sentry.realtime.config = function(data){
+        $.each(data, function(k, v){
+            Sentry.realtime.options[k] = v;
+        });
+    };
+
     Sentry.realtime.status = false;
 
     Sentry.realtime.enable = function(){
@@ -99,6 +110,7 @@ if (Sentry === undefined) {
 
     Sentry.realtime.refresh = function(){
         data = getQueryParams();
+        data.view_id = Sentry.realtime.options.viewId;
         data.op = 'poll';
         if (!Sentry.realtime.status) {
             return;
diff --git a/sentry/static/styles/bootstrap.css b/sentry/static/styles/bootstrap.css
index a468b1c774..be1f044b05 100644
--- a/sentry/static/styles/bootstrap.css
+++ b/sentry/static/styles/bootstrap.css
@@ -6,7 +6,7 @@
  * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Designed and built with all the love in the world @twitter by @mdo and @fat.
- * Date: Mon Dec 26 17:12:27 PST 2011
+ * Date: Tue Jan  3 02:43:55 PST 2012
  */
 /* Reset.less
  * Props to Eric Meyer (meyerweb.com) for his CSS reset file. We're using an adapted version here	that cuts out some of the reset HTML elements we will never need here (i.e., dfn, samp, etc).
@@ -2612,7 +2612,14 @@ button.btn::-moz-focus-inner, input[type=submit].btn::-moz-focus-inner {
 .main-header h1 {
   margin-bottom: 8px;
 }
+.main-header .pills {
+  z-index: 1000;
+  position: absolute;
+  right: 20px;
+  top: 10px;
+}
 .main-header .sparkline {
+  z-index: 999;
   left: 0;
   position: absolute;
   width: 100%;
@@ -2621,6 +2628,9 @@ button.btn::-moz-focus-inner, input[type=submit].btn::-moz-focus-inner {
   -moz-opacity: 0.6;
   opacity: 0.6;
 }
+.main-header .sparkline * {
+  z-index: 999;
+}
 .main-header .btn {
   margin-top: 5px;
 }
diff --git a/sentry/static/styles/bootstrap.min.css b/sentry/static/styles/bootstrap.min.css
index 088a685369..5d070fbf26 100644
--- a/sentry/static/styles/bootstrap.min.css
+++ b/sentry/static/styles/bootstrap.min.css
@@ -374,7 +374,8 @@ button.btn::-moz-focus-inner,input[type=submit].btn::-moz-focus-inner{padding:0;
 .topbar input:hover{background-color:#444;background-color:rgba(255, 255, 255, 0.3);color:#404040;}
 .topbar input:focus,.topbar input.focused{background-color:#444;background-color:rgba(255, 255, 255, 0.3);font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:normal;font-weight:13px;line-height:1;padding:4px 9px;color:#ffffff;color:rgba(255, 255, 255, 0.75);border:1px solid #111;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.25);-moz-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.25);box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.25);-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none;color:#bfbfbf;text-shadow:none;}
 .main-header{background-color:#f5f5f5;padding:10px 20px 0px;margin:-20px -20px 20px;border-bottom:1px solid #ddd;-webkit-box-shadow:0 1px 0 rgba(255, 255, 255, 0.5);-moz-box-shadow:0 1px 0 rgba(255, 255, 255, 0.5);box-shadow:0 1px 0 rgba(255, 255, 255, 0.5);position:relative;}.main-header h1{margin-bottom:8px;}
-.main-header .sparkline{left:0;position:absolute;width:100%;filter:alpha(opacity=60);-khtml-opacity:0.6;-moz-opacity:0.6;opacity:0.6;}
+.main-header .pills{z-index:1000;position:absolute;right:20px;top:10px;}
+.main-header .sparkline{z-index:999;left:0;position:absolute;width:100%;filter:alpha(opacity=60);-khtml-opacity:0.6;-moz-opacity:0.6;opacity:0.6;}.main-header .sparkline *{z-index:999;}
 .main-header .btn{margin-top:5px;}
 ol.context{margin:0;list-style-position:inside;border:1px solid #ccc;border:1px solid rgba(0, 0, 0, 0.15);-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;}ol.context>li{padding-left:20px;font-family:monospace;white-space:pre;color:rgba(0, 0, 0, 0.75);background-color:#f5f5f5;}ol.context>li>pre{background-color:inherit;color:rgba(0, 0, 0, 0.5);margin:0;padding:0;border:0;display:block;line-height:18px;font-size:12px;white-space:pre;white-space:pre-wrap;word-wrap:break-word;}
 ol.context>li.active{background-color:#ddd;}ol.context>li.active pre{color:#000000;}
diff --git a/sentry/templates/sentry/groups/group_list.html b/sentry/templates/sentry/groups/group_list.html
index 95c13074bd..bd3996dd80 100644
--- a/sentry/templates/sentry/groups/group_list.html
+++ b/sentry/templates/sentry/groups/group_list.html
@@ -7,9 +7,13 @@
     {{ block.super }}
     <script>
     Sentry.config({
-        apiUrl: '{% url sentry-ajax project.id %}'
+        apiUrl: '{% url sentry-ajax project.id %}',
     });
     {% if has_realtime %}
+        Sentry.realtime.config({
+            projectId: {{ project.pk }},
+            viewId: {% if view %}{{ view.pk }}{% else %}null{% endif %}
+        })
         Sentry.realtime.enable();
     {% endif %}
     </script>
@@ -17,6 +21,14 @@
 
 {% block page_header %}
     <div class="sparkline" id="sparkline"></div>
+    {% if VIEWS %}
+        <ul class="pills">
+            <li{% if not view %} class="active"{% endif %}><a href="{% url sentry project.pk %}">All</a></li>
+            {% for v in VIEWS %}
+                <li{% if view == v %} class="active"{% endif %}><a href="{% url sentry project.pk v.pk %}">{{ v.verbose_name_plural }}</a></li>
+            {% endfor %}
+        </ul>
+    {% endif %}
     {{ block.super }}
 {% endblock %}
 
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index 414897f23c..5f8df63db8 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -52,6 +52,15 @@ def ajax_handler(request, project):
 
         event_list = Group.objects.filter(project=project)
 
+        view_id = request.GET.get('view_id')
+        if view_id:
+            try:
+                view = View.objects.get(pk=view_id)
+            except View.DoesNotExist:
+                return HttpResponseRedirect(reverse('sentry', args=[project.pk]))
+
+            event_list = event_list.filter(views=view)
+
         for filter_ in filters:
             if not filter_.is_set():
                 continue
@@ -221,13 +230,7 @@ def search(request, project):
 
 @login_required
 @has_access
-def group_list(request, project, view=None):
-    if view:
-        try:
-            view = View.objects.get(pk=view)
-        except View.DoesNotExist:
-            return HttpResponseRedirect(reverse('sentry', args=[project.pk]))
-
+def group_list(request, project, view_id=None):
     filters = []
     for cls in Filter.handlers.filter(Group):
         filters.append(cls(request))
@@ -239,8 +242,15 @@ def group_list(request, project, view=None):
 
     event_list = Group.objects.filter(project=project)
 
-    if view:
+    if view_id:
+        try:
+            view = View.objects.get(pk=view_id)
+        except View.DoesNotExist:
+            return HttpResponseRedirect(reverse('sentry', args=[project.pk]))
+
         event_list = event_list.filter(views=view)
+    else:
+        view = None
 
     # Filters only apply if we're not searching
     any_filter = False
@@ -291,6 +301,7 @@ def group_list(request, project, view=None):
         'sort_label': sort_label,
         'any_filter': any_filter,
         'filters': filters,
+        'view': view,
     }, request)
 
 
diff --git a/sentry/web/urls.py b/sentry/web/urls.py
index 49a327ba42..f1751104ba 100644
--- a/sentry/web/urls.py
+++ b/sentry/web/urls.py
@@ -89,5 +89,6 @@ urlpatterns = patterns('',
 
     url(r'^(?P<project_id>\d+)/search$', groups.search, name='sentry-search'),
 
+    url(r'^(?P<project_id>\d+)/view/(?P<view_id>\d+)$', groups.group_list, name='sentry'),
     url(r'^(?P<project_id>\d+)$', groups.group_list, name='sentry'),
 )
