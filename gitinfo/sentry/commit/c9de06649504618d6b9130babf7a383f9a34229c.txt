commit c9de06649504618d6b9130babf7a383f9a34229c
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Sep 30 15:45:32 2010 -0700

    Some more code for Redmine integration

diff --git a/sentry/plugins/redmine/conf.py b/sentry/plugins/redmine/conf.py
new file mode 100644
index 0000000000..4571f50850
--- /dev/null
+++ b/sentry/plugins/redmine/conf.py
@@ -0,0 +1,5 @@
+from django.conf import settings
+
+REDMINE_API_KEY = getattr(settings, 'SENTRY_REDMINE_API_KEY', None)
+REDMINE_URL = getattr(settings, 'SENTRY_REDMINE_URL', 'http://localhost:3000')
+REDMINE_PROJECT_ID = getattr(settings, 'SENTRY_REDMINE_PROJECT_ID', 1)
\ No newline at end of file
diff --git a/sentry/plugins/redmine/models.py b/sentry/plugins/redmine/models.py
index 3277ca1d85..1b9f6862b7 100644
--- a/sentry/plugins/redmine/models.py
+++ b/sentry/plugins/redmine/models.py
@@ -1,20 +1,52 @@
+from django import forms
+from django.core.context_processors import csrf
 from django.db import models
 from django.shortcuts import render_to_response
+from django.utils import simplejson
 
+from sentry.helpers import urlread
 from sentry.models import GroupedMessage
 from sentry.plugins import GroupActionProvider
 
+import conf
+
 class RedmineIssue(models.Model):
     group = models.ForeignKey(GroupedMessage)
     issue_id = models.PositiveIntegerField()
 
+class RedmineIssueForm(forms.Form):
+    subject = forms.CharField(max_length=200)
+    description = forms.CharField(widget=forms.Textarea())
+
 class CreateRedmineIssue(GroupActionProvider):
     title = 'Create Redmine Issue'
     
     def perform(self, request, group):
         if request.POST:
-            response = '...'
+            form = RedmineIssueForm(request.POST)
+            if form.is_valid():
+                data = {
+                    'key': conf.REDMINE_API_KEY,
+                    'project_id': conf.REDMINE_PROJECT_ID,
+                    'subject': form.cleaned_data['subject'],
+                    'description': form.cleaned_data['description']
+                }
+                response = urlread(conf.REDMINE_URL + '/issues.json', POST=data)
+                print response
+                #RedmineIssue.objects.create(group=group, issue_id=response['issue_id'])
+                
+        else:
+            description = 'Sentry Message: %s' % request.build_absolute_uri(group.get_absolute_url())
+            description += '\n\n' + (group.traceback or group.message)
+
+            form = RedmineIssueForm(initial={
+                'subject': group.error(),
+                'description': description,
+            })
+
+        BASE_TEMPLATE = "sentry/group/details.html"
 
-            RedmineIssue.objects.create(group=group, issue_id=response['issue_id'])
+        context = locals()
+        context.update(csrf(request))
 
-        return render_to_response('sentry/plugins/redmine/create_issue.html', locals())
\ No newline at end of file
+        return render_to_response('sentry/plugins/redmine/create_issue.html', context)
\ No newline at end of file
diff --git a/sentry/templates/sentry/plugins/redmine/create_issue.html b/sentry/templates/sentry/plugins/redmine/create_issue.html
index 47756d94de..81801f9794 100644
--- a/sentry/templates/sentry/plugins/redmine/create_issue.html
+++ b/sentry/templates/sentry/plugins/redmine/create_issue.html
@@ -1,8 +1,46 @@
-{% extends "sentry/group/details.html" %}
+{% extends BASE_TEMPLATE %}
 
 {% load paging_extras %}
 
 {% block inner %}
+	<style type="text/css">
+	.redmine-issue-form { max-width: 800px; }
+	.redmine-issue-form textarea { width: 100%; min-height: 300px; }
+	.redmine-issue-form input[type=text] { width: 100%; }
+	.redmine-issue-form table { border: 0; }
+	.redmine-issue-form td { padding: 5px; }
+	</style>
+
 	<h2>Create Redmine Issue</h2>
-	<p>WOOOO</p>
+	{% if form.errors %}
+		<ul class="errorlist">
+			{% for error in form.errors %}
+				<li>{{ error }}</li>
+			{% endfor %}
+		</ul>
+	{% endif %}
+	
+	
+	<form method="post" action="" class="redmine-issue-form">
+		<input type="hidden" name="next" value="{{ next }}" />
+	
+		{% csrf_token %}
+		<table>
+			<colgroup>
+				<col width="100px"/>
+				<col/>
+			</colgroup>
+			<tr>
+			    <td>{{ form.subject.label_tag }}</td>
+			    <td>{{ form.subject }}</td>
+			</tr>
+			<tr>
+			    <td>{{ form.description.label_tag }}</td>
+			    <td>{{ form.description }}</td>
+			</tr>
+		</table>
+		<div class="login-submit">
+			<input type="submit" value="Post Issue" />
+		</div>
+	</form>
 {% endblock %}
\ No newline at end of file
