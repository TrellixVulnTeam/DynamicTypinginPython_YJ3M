commit bfcced64e22d98193e73ad4bed58b30b18196f5f
Author: Jess MacQueen <jess@getsentry.com>
Date:   Wed Sep 20 14:44:20 2017 -0700

    fix(plugins): Handle case where groups don't have events
    
    fixes SENTRY-3XH

diff --git a/src/sentry/plugins/bases/issue2.py b/src/sentry/plugins/bases/issue2.py
index 52a4a4a5d1..4571dedbb9 100644
--- a/src/sentry/plugins/bases/issue2.py
+++ b/src/sentry/plugins/bases/issue2.py
@@ -197,6 +197,11 @@ class IssueTrackingPlugin2(Plugin):
             return Response(auth_errors, status=400)
 
         event = group.get_latest_event()
+        if event is None:
+            return Response({
+                'message': 'Unable to create issues: there are '
+                           'no events associated with this group',
+            }, status=400)
         Event.objects.bind_nodes([event], 'data')
         try:
             fields = self.get_new_issue_fields(request, group, event, **kwargs)
diff --git a/tests/sentry/plugins/bases/issue/tests.py b/tests/sentry/plugins/bases/issue/tests.py
index 8b64c48796..f825f6ee90 100644
--- a/tests/sentry/plugins/bases/issue/tests.py
+++ b/tests/sentry/plugins/bases/issue/tests.py
@@ -134,3 +134,15 @@ class IssuePlugin2GroupAction(TestCase):
         assert response.status_code == 200
         GroupMeta.objects.populate_cache([self.group])
         assert GroupMeta.objects.get_value(self.group, id_, None) is None
+
+    @mock.patch('sentry.plugins.IssueTrackingPlugin2.is_configured', return_value=True)
+    def test_no_group_events(self, *args):
+        self.login_as(user=self.user)
+        group = self.create_group(project=self.project)
+        url = '/api/0/issues/%s/plugins/issuetrackingplugin2/create/' % group.id
+        response = self.client.get(url, format='json')
+        assert response.status_code == 400
+        assert response.data == {
+            'message': 'Unable to create issues: there are '
+                       'no events associated with this group',
+        }
