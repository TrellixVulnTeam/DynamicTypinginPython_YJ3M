commit 22a31dfee17183478074278209e0c92ca1a44fae
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Oct 27 12:34:32 2017 -0700

    feat(react): `<DateTime>` can display dates only (#6444)

diff --git a/docs-ui/components/formatters.stories.js b/docs-ui/components/formatters.stories.js
index ff68159be5..dad483b131 100644
--- a/docs-ui/components/formatters.stories.js
+++ b/docs-ui/components/formatters.stories.js
@@ -19,6 +19,9 @@ storiesOf('Formatters', module)
         <div>
           <DateTime seconds={false} date={1500000000000} />
         </div>
+        <div>
+          <DateTime dateOnly date={1500000000000} />
+        </div>
       </div>
     ))
   )
diff --git a/src/sentry/static/sentry/app/components/dateTime.jsx b/src/sentry/static/sentry/app/components/dateTime.jsx
index 23e6681177..c7b67117cf 100644
--- a/src/sentry/static/sentry/app/components/dateTime.jsx
+++ b/src/sentry/static/sentry/app/components/dateTime.jsx
@@ -8,6 +8,7 @@ import ConfigStore from '../stores/configStore';
 const DateTime = React.createClass({
   propTypes: {
     date: PropTypes.any.isRequired,
+    dateOnly: PropTypes.bool,
     seconds: PropTypes.bool
   },
 
@@ -17,23 +18,42 @@ const DateTime = React.createClass({
     };
   },
 
-  getDefaultFormat() {
-    return this.props.seconds ? 'll LTS z' : 'lll';
+  getFormat({clock24Hours}) {
+    let {dateOnly, seconds} = this.props;
+
+    // October 26, 2017
+    if (dateOnly) {
+      return 'LL';
+    }
+
+    if (clock24Hours) {
+      return 'MMMM D YYYY HH:mm:ss z';
+    }
+
+    // Oct 26, 2017 11:30:30 AM
+    if (seconds) {
+      return 'll LTS z';
+    }
+
+    // Default is Oct 26, 2017 11:30 AM
+    return 'lll';
   },
 
   render() {
-    let date = this.props.date;
+    let {
+      date,
+      // eslint-disable-next-line no-unused-vars
+      seconds,
+      ...carriedProps
+    } = this.props;
     let user = ConfigStore.get('user');
     let options = user ? user.options : {};
-    let format = options.clock24Hours
-      ? 'MMMM D YYYY HH:mm:ss z'
-      : this.getDefaultFormat();
+    let format = this.getFormat(options);
 
     if (_.isString(date) || _.isNumber(date)) {
       date = new Date(date);
     }
 
-    let carriedProps = _.omit(this.props, 'date', 'seconds');
     return <time {...carriedProps}>{moment(date).format(format)}</time>;
   }
 });
