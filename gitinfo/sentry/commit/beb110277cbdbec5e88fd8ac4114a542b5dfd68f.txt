commit beb110277cbdbec5e88fd8ac4114a542b5dfd68f
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Fri Jul 27 18:18:45 2018 -0400

    Integration feature tags (#9130)
    
    * beta label and additions to tag.jsx
    
    * add it to all of them for now
    
    * reset some stuff from rebase
    
    * remove default margin-left value and replace it with parent styling
    
    * use Box for situations where it works
    
    * just use a frontend constant to determine beta integrations. rename it to 'early adopters' per sara
    
    * add to storybook
    
    * don't let prettier chew up tag css and use includes for shorter code when searching for early adopter feature
    
    * resolve prop error with styled tag
    
    * make small tag more similar looking to badge
    
    * snapshot test for Tag

diff --git a/docs-ui/components/tag.stories.js b/docs-ui/components/tag.stories.js
index 6f70ceae3e..1c9a075b17 100644
--- a/docs-ui/components/tag.stories.js
+++ b/docs-ui/components/tag.stories.js
@@ -22,4 +22,20 @@ storiesOf('Tags', module)
     withInfo('A happy tag-like thing. Use this to signal something good')(() => (
       <Tag priority="success">Development</Tag>
     ))
+  )
+  .add(
+    'small',
+    withInfo('A small tag-like thing. Use this when space is at a premium')(() => (
+      <Tag size="small" border>
+        new
+      </Tag>
+    ))
+  )
+  .add(
+    'with border',
+    withInfo('A bordered tag-like thing. Use this when you want a border')(() => (
+      <Tag border priority="attention">
+        Development
+      </Tag>
+    ))
   );
diff --git a/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx b/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
index 59e88694fa..e07567a137 100644
--- a/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
@@ -10,8 +10,11 @@ import Alert from 'app/components/alert';
 import Button from 'app/components/buttons/button';
 import ExternalLink from 'app/components/externalLink';
 import PluginIcon from 'app/plugins/components/pluginIcon';
+import Tag from 'app/views/settings/components/tag.jsx';
 import space from 'app/styles/space';
 
+const EARLY_ADOPTER_INTEGRATIONS = ['github', 'jira', 'github_enterprise'];
+
 class IntegrationDetailsModal extends React.Component {
   static propTypes = {
     closeModal: PropTypes.func.isRequired,
@@ -24,6 +27,18 @@ class IntegrationDetailsModal extends React.Component {
     this.props.onAddIntegration(integration);
   };
 
+  features(features) {
+    return features.map(feature => (
+      <StyledTag key={feature}>{feature.replace(/_/g, ' ')}</StyledTag>
+    ));
+  }
+
+  earlyAdopterLabel(provider) {
+    return EARLY_ADOPTER_INTEGRATIONS.includes(provider.key) ? (
+      <StyledTag priority="attention">Early Adopter</StyledTag>
+    ) : null;
+  }
+
   render() {
     const {provider, closeModal} = this.props;
     const {metadata} = provider;
@@ -32,8 +47,14 @@ class IntegrationDetailsModal extends React.Component {
     return (
       <React.Fragment>
         <Flex align="center" mb={2}>
-          <PluginIcon pluginId={provider.key} size={32} />
-          <ProviderName>{t('%s Integration', provider.name)}</ProviderName>
+          <PluginIcon pluginId={provider.key} size={50} />
+          <Flex pl={1} align="flex-start" direction="column" justify="center">
+            <ProviderName>{t('%s Integration', provider.name)}</ProviderName>
+            <Flex>
+              {this.earlyAdopterLabel(provider)}
+              {provider.features.length && this.features(provider.features)}
+            </Flex>
+          </Flex>
         </Flex>
         <Description dangerouslySetInnerHTML={{__html: description}} />
         <Metadata>
@@ -91,9 +112,10 @@ class IntegrationDetailsModal extends React.Component {
   }
 }
 
-const ProviderName = styled(p => <Box pl={1} {...p} />)`
+const ProviderName = styled(p => <Box {...p} />)`
   font-weight: bold;
-  font-size: 1.2em;
+  font-size: 1.4em;
+  margin-bottom: ${space(1)};
 `;
 
 const Description = styled.div`
@@ -119,4 +141,10 @@ const AuthorName = styled(Box)`
   color: ${p => p.theme.gray2};
 `;
 
+const StyledTag = styled(Tag)`
+  &:not(:first-child) {
+    margin-left: ${space(0.5)};
+  }
+`;
+
 export default IntegrationDetailsModal;
diff --git a/src/sentry/static/sentry/app/utils/theme.jsx b/src/sentry/static/sentry/app/utils/theme.jsx
index ad8898cb5f..76cf9b2e5b 100644
--- a/src/sentry/static/sentry/app/utils/theme.jsx
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -74,6 +74,11 @@ const theme = {
       backgroundLight: '#F5FAFE',
       border: '#B5D6ED',
     },
+    attention: {
+      backgroundLight: '#ECBFA6',
+      background: '#F09E71',
+      border: '#D0816D',
+    },
     warning: {
       backgroundLight: '#FFFDF7',
       background: '#f9a66d',
diff --git a/src/sentry/static/sentry/app/views/projectEnvironments.jsx b/src/sentry/static/sentry/app/views/projectEnvironments.jsx
index 565fec3b52..cb963cf930 100644
--- a/src/sentry/static/sentry/app/views/projectEnvironments.jsx
+++ b/src/sentry/static/sentry/app/views/projectEnvironments.jsx
@@ -30,6 +30,7 @@ import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader
 import Tag from 'app/views/settings/components/tag';
 import Tooltip from 'app/components/tooltip';
 import recreateRoute from 'app/utils/recreateRoute';
+import space from 'app/styles/space';
 
 const ProjectEnvironments = createReactClass({
   propTypes: {
@@ -385,7 +386,11 @@ class EnvironmentRow extends React.Component {
       <PanelItem align="center" justify="space-between">
         <Flex align="center">
           {isSystemRow ? environment.displayName : environment.name}
-          {isDefault && <Tag priority="success">{t('Default')}</Tag>}
+          {isDefault && (
+            <Tag priority="success" ml={1}>
+              {t('Default')}
+            </Tag>
+          )}
         </Flex>
         <div>
           {shouldShowSetDefault && (
@@ -411,7 +416,7 @@ class EnvironmentRow extends React.Component {
   }
 }
 const EnvironmentButton = styled(Button)`
-  margin-left: 4px;
+  margin-left: ${space(0.5)};
 `;
 
 const InvalidDefaultEnvironmentIcon = styled(props => (
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountEmails.jsx b/src/sentry/static/sentry/app/views/settings/account/accountEmails.jsx
index 044128c29c..bed4d1ad16 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountEmails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountEmails.jsx
@@ -48,8 +48,16 @@ class EmailRow extends React.Component {
       <PanelItem justify="space-between">
         <Flex align="center">
           {email}
-          {!isVerified && <Tag priority="warning">{t('Unverified')}</Tag>}
-          {isPrimary && <Tag priority="success">{t('Primary')}</Tag>}
+          {!isVerified && (
+            <Tag ml={1} priority="warning">
+              {t('Unverified')}
+            </Tag>
+          )}
+          {isPrimary && (
+            <Tag ml={1} priority="success">
+              {t('Primary')}
+            </Tag>
+          )}
         </Flex>
         <Flex>
           {!isPrimary &&
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.jsx
index 840f6a0c29..9dedde83ac 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.jsx
@@ -4,7 +4,41 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import Badge from 'app/components/badge';
-import space from '../../../styles/space';
+import Tag from 'app/views/settings/components/tag';
+
+class SettingsNavItem extends React.Component {
+  static propTypes = {
+    label: PropTypes.node.isRequired,
+    badge: PropTypes.node,
+    index: PropTypes.bool,
+  };
+
+  render() {
+    let {badge, label, index, ...props} = this.props;
+
+    let renderedBadge = '';
+
+    if (badge === 'new') {
+      renderedBadge = (
+        <StyledTag priority="attention" size="small" border={true}>
+          {badge}
+        </StyledTag>
+      );
+    } else {
+      renderedBadge = <Badge text={badge} />;
+    }
+
+    return (
+      <StyledNavItem onlyActiveOnIndex={index} activeClassName="active" {...props}>
+        {label} {badge ? renderedBadge : null}
+      </StyledNavItem>
+    );
+  }
+}
+
+const StyledTag = styled(Tag)`
+  margin-left: 0.25em;
+`;
 
 const StyledNavItem = styled(Link)`
   display: block;
@@ -40,38 +74,4 @@ const StyledNavItem = styled(Link)`
   }
 `;
 
-const NewBadge = styled(Badge)`
-  background: ${p => p.theme.yellowOrange};
-  border-radius: 2px;
-  border: 1px solid ${p => p.theme.yellowOrangeDark};
-  height: auto;
-  padding: ${space(0.25)} ${space(0.5)};
-  line-height: 1;
-`;
-
-class SettingsNavItem extends React.Component {
-  static propTypes = {
-    label: PropTypes.node.isRequired,
-    badge: PropTypes.node,
-    index: PropTypes.bool,
-  };
-
-  render() {
-    let {badge, label, index, ...props} = this.props;
-
-    let renderedBadge = '';
-
-    if (badge === 'new') {
-      renderedBadge = <NewBadge text={badge} />;
-    } else {
-      renderedBadge = <Badge text={badge} />;
-    }
-
-    return (
-      <StyledNavItem onlyActiveOnIndex={index} activeClassName="active" {...props}>
-        {label} {badge ? renderedBadge : null}
-      </StyledNavItem>
-    );
-  }
-}
 export default SettingsNavItem;
diff --git a/src/sentry/static/sentry/app/views/settings/components/tag.jsx b/src/sentry/static/sentry/app/views/settings/components/tag.jsx
index 27ea825643..25c6bf5b0b 100644
--- a/src/sentry/static/sentry/app/views/settings/components/tag.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/tag.jsx
@@ -1,30 +1,48 @@
 import React from 'react';
 import styled from 'react-emotion';
 import PropTypes from 'prop-types';
+import {Box} from 'grid-emotion';
 
-const TagTextStyled = styled('span')`
+const getMarginLeft = p => {
+  if (!p.inline) return '';
+  return `margin-left: ${p.size == 'small' ? '0.25em' : '0.5em'};`;
+};
+
+const getBorder = p =>
+  p.border
+    ? `border: 1px solid ${p.priority
+        ? p.theme.alert[p.priority].border
+        : p.theme.gray1};`
+    : '';
+
+const TagTextStyled = styled(({priority, size, border, ...props}) => <Box {...props} />)`
   display: inline;
-  padding: 0.4em 0.6em;
+  padding: ${p => (p.size == 'small' ? '0.1em 0.4em 0.2em' : '0.35em 0.8em 0.4em')};
   font-size: 75%;
-  font-weight: bold;
   line-height: 1;
-  color: #fff;
+  color: ${p => (p.priority ? '#fff' : p.gray5)};
   text-align: center;
   white-space: nowrap;
-  vertical-align: baseline;
-  border-radius: 0.25em;
-  margin-left: 0.5em;
+  vertical-align: middle;
+  border-radius: ${p => (p.size == 'small' ? '0.25em' : '2em')};
   text-transform: lowercase;
+  font-weight: ${p => (p.size == 'small' ? 'bold' : 'normal')};
   background-color: ${p =>
-    p.priority ? p.theme.alert[p.priority].background : p.theme.gray1};
+    p.priority ? p.theme.alert[p.priority].background : p.theme.offWhite2};
+  ${p => getBorder(p)};
+  ${p => getMarginLeft(p)};
 `;
 
-const Tag = ({children, priority, ...props}) => (
-  <TagTextStyled priority={priority}>{children}</TagTextStyled>
+const Tag = ({children, priority, size, border, ...props}) => (
+  <TagTextStyled priority={priority} size={size} border={border} {...props}>
+    {children}
+  </TagTextStyled>
 );
 
 Tag.propTypes = {
   priority: PropTypes.string,
+  size: PropTypes.string,
+  border: PropTypes.bool,
 };
 
 export default Tag;
diff --git a/tests/js/spec/components/__snapshots__/tag.spec.jsx.snap b/tests/js/spec/components/__snapshots__/tag.spec.jsx.snap
new file mode 100644
index 0000000000..ac3a614148
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/tag.spec.jsx.snap
@@ -0,0 +1,11 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Tag renders 1`] = `
+<TagTextStyled
+  border={true}
+  priority="info"
+  size="small"
+>
+  Text to Copy
+</TagTextStyled>
+`;
diff --git a/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
index 22f3845f86..a6e95fb88c 100644
--- a/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
+++ b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
@@ -8,11 +8,26 @@ exports[`IntegrationDetailsModal renders simple integration 1`] = `
   >
     <PluginIcon
       pluginId="github"
-      size={32}
+      size={50}
     />
-    <ProviderName>
-      GitHub Integration
-    </ProviderName>
+    <Flex
+      align="flex-start"
+      direction="column"
+      justify="center"
+      pl={1}
+    >
+      <ProviderName>
+        GitHub Integration
+      </ProviderName>
+      <Flex>
+        <StyledTag
+          priority="attention"
+        >
+          Early Adopter
+        </StyledTag>
+        0
+      </Flex>
+    </Flex>
   </Flex>
   <Description
     dangerouslySetInnerHTML={
diff --git a/tests/js/spec/components/tag.spec.jsx b/tests/js/spec/components/tag.spec.jsx
new file mode 100644
index 0000000000..23b1b74d55
--- /dev/null
+++ b/tests/js/spec/components/tag.spec.jsx
@@ -0,0 +1,14 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import Tag from 'app/views/settings/components/tag';
+
+describe('Tag', function() {
+  it('renders', function() {
+    let wrapper = shallow(
+      <Tag priority="info" border={true} size="small">
+        Text to Copy
+      </Tag>
+    );
+    expect(wrapper).toMatchSnapshot();
+  });
+});
diff --git a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
index 8af8780fc5..97e0d34daf 100644
--- a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
@@ -781,16 +781,35 @@ exports[`ProjectEnvironments render active renders environment list and sets sta
                           >
                             staging
                             <Tag
+                              ml={1}
                               priority="success"
                             >
                               <TagTextStyled
+                                ml={1}
                                 priority="success"
                               >
-                                <span
-                                  className="css-giy4xh-TagTextStyled e6q9yfr0"
+                                <Component
+                                  className="css-ftrjq0-TagTextStyled e6q9yfr0"
+                                  ml={1}
+                                  priority="success"
                                 >
-                                  Default
-                                </span>
+                                  <Box
+                                    className="css-ftrjq0-TagTextStyled e6q9yfr0"
+                                    ml={1}
+                                  >
+                                    <Base
+                                      className="e6q9yfr0 css-hqgxmh-TagTextStyled"
+                                      ml={1}
+                                    >
+                                      <div
+                                        className="e6q9yfr0 css-hqgxmh-TagTextStyled"
+                                        is={null}
+                                      >
+                                        Default
+                                      </div>
+                                    </Base>
+                                  </Box>
+                                </Component>
                               </TagTextStyled>
                             </Tag>
                           </div>
