commit 97da5286f3d623febbf27e9f42ac61135031ef48
Author: David Cramer <dcramer@gmail.com>
Date:   Sun May 31 16:32:23 2015 +0200

    Basic project selector

diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
index a291c5a1e3..1a9a3d4628 100644
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectDetails.jsx
@@ -6,13 +6,44 @@ var Router = require("react-router");
 
 var api = require("../api");
 var BreadcrumbMixin = require("../mixins/breadcrumbMixin");
+var DropdownLink = require("../components/dropdownLink");
 var MemberListStore = require("../stores/memberListStore");
+var MenuItem = require("../components/menuItem");
 var LoadingIndicator = require("../components/loadingIndicator");
 var ProjectHeader = require("../components/projectHeader");
 var OrganizationState = require("../mixins/organizationState");
 var RouteMixin = require("../mixins/routeMixin");
 var PropTypes = require("../proptypes");
 
+var ProjectSelector = React.createClass({
+  render() {
+    var projectId = this.props.projectId;
+    var org = this.props.organization;
+    var projectList = [];
+    org.teams.forEach((team) => {
+      team.projects.forEach((project) => {
+        if (project.slug == this.props.projectId) {
+          activeTeam = team;
+          activeProject = project;
+        }
+        projectList.push([team, project]);
+      });
+    });
+
+    var title = <span>{activeTeam.name} / {activeProject.name}</span>;
+
+    return (
+      <DropdownLink title={title}>
+        {projectList.map((item) => {
+          return (
+            <MenuItem key={item[1].slug}>{item[0].name} / {item[1].name}</MenuItem>
+          );
+        })}
+      </DropdownLink>
+    );
+  }
+});
+
 var ProjectDetails = React.createClass({
   mixins: [
     BreadcrumbMixin,
@@ -21,7 +52,7 @@ var ProjectDetails = React.createClass({
     RouteMixin
   ],
 
-  crumbReservations: 2,
+  crumbReservations: 1,
 
   childContextTypes: {
     project: PropTypes.Project,
@@ -71,24 +102,22 @@ var ProjectDetails = React.createClass({
     var params = router.getCurrentParams();
     var projectSlug = params.projectId;
     var activeProject;
-    var activeTeam;
     org.teams.forEach((team) => {
       team.projects.forEach((project) => {
         if (project.slug == projectSlug) {
           activeProject = project;
-          activeTeam = team;
         }
       });
     });
 
     this.setState({
-      team: activeTeam,
       project: activeProject,
       loading: false,
       error: typeof activeProject !== "undefined"
     });
 
     if (typeof activeProject !== "undefined") {
+      // TODO(dcramer): move member list to organization level
       api.request(this.getMemberListEndpoint(), {
         success: (data) => {
           MemberListStore.loadInitialData(data);
@@ -96,11 +125,10 @@ var ProjectDetails = React.createClass({
       });
 
       this.setBreadcrumbs([
-        {name: activeTeam.name, to: "teamDetails", params: {
-          orgId: org.slug,
-          teamId: activeTeam.slug
-        }},
-        {name: activeProject.name, to: "projectDetails"}
+        {
+          name: <ProjectSelector organization={org} projectId={projectSlug} />,
+          to: "projectDetails"
+        }
       ]);
     }
   },
diff --git a/src/sentry/static/sentry/less/layout.less b/src/sentry/static/sentry/less/layout.less
index ebd86587e8..8c4060ebac 100644
--- a/src/sentry/static/sentry/less/layout.less
+++ b/src/sentry/static/sentry/less/layout.less
@@ -108,7 +108,7 @@ header {
     float: left;
     position: relative;
 
-    li {
+    > li {
       position: relative;
       font-weight: 500;
 
