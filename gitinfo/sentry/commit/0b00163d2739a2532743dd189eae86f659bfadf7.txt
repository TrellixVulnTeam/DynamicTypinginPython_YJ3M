commit 0b00163d2739a2532743dd189eae86f659bfadf7
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Thu Mar 2 17:57:09 2017 -0800

    Make queries more efficient and update CHANGES

diff --git a/CHANGES b/CHANGES
index e5e411ed57..9db5be49d5 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,4 +1,14 @@
-Version 8.14 (Unreleased)
+Version 8.15 (Unreleased)
+-------------------------
+
+API Changes
+~~~~~~~~~~~
+
+- Added CommitFileChangeEndpoint
+- Added IssuesResolvedInReleaseEndpoint
+
+
+Version 8.14
 -------------------------
 
 - Added new internal processing interface that supports multiple processing steps per stacktrace (for instance JavaScript + native)
@@ -27,8 +37,6 @@ API Changes
 - Split out filtered stats onto Inbound Data Filters page
 - Added OrganizationReleasesEndpoint
 - Added OrganizationReleaseFileEndpoint
-- Added CommitFileChangeEndpoint
-- Added IssuesResolvedInReleaseEndpoint
 
 Schema Changes
 ~~~~~~~~~~~~~~
diff --git a/src/sentry/api/endpoints/filechange.py b/src/sentry/api/endpoints/filechange.py
index 42a906e3a4..7ca8acb276 100644
--- a/src/sentry/api/endpoints/filechange.py
+++ b/src/sentry/api/endpoints/filechange.py
@@ -36,16 +36,10 @@ class CommitFileChangeEndpoint(OrganizationReleasesBaseEndpoint):
         if not self.has_release_permission(request, organization, release):
             raise PermissionDenied
 
-        release_commits = list(ReleaseCommit.objects.filter(
-            release=release,
-        ).select_related('commit', 'commit__author'))
-
-        commit_list = [rc.commit for rc in release_commits]
-
-        # should this be a loop + lambda expression?
-
         queryset = list(CommitFileChange.objects.filter(
-            commit__in=commit_list
+            commit_id__in=ReleaseCommit.objects.filter(
+                release=release,
+            ).values_list('commit_id', flat=True)
         ))
 
         context = serialize(queryset, request.user)
diff --git a/src/sentry/api/endpoints/issues_resolved_in_release.py b/src/sentry/api/endpoints/issues_resolved_in_release.py
index 4ada79a777..d26ac7007a 100644
--- a/src/sentry/api/endpoints/issues_resolved_in_release.py
+++ b/src/sentry/api/endpoints/issues_resolved_in_release.py
@@ -35,15 +35,13 @@ class IssuesResolvedInReleaseEndpoint(ProjectEndpoint):
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
-        commits = ReleaseCommit.objects.filter(
-            release=release,
-        ).select_related('commit')
-
-        commitresolutions = GroupCommitResolution.objects.filter(
-            commit_id__in=[rc.commit.id for rc in commits]
-        )
-        groups = Group.objects.filter(project=project,
-            id__in=[cr.group_id for cr in commitresolutions]
+        groups = Group.objects.filter(
+            project=project,
+            id__in=GroupCommitResolution.objects.filter(
+                commit_id__in=ReleaseCommit.objects.filter(
+                    release=release,
+                ).values_list('commit_id', flat=True),
+            ).values_list('group_id', flat=True),
         )
 
         context = serialize(
diff --git a/src/sentry/api/serializers/models/filechange.py b/src/sentry/api/serializers/models/filechange.py
index 223161b137..689f60d866 100644
--- a/src/sentry/api/serializers/models/filechange.py
+++ b/src/sentry/api/serializers/models/filechange.py
@@ -3,19 +3,23 @@ from __future__ import absolute_import
 import six
 
 from sentry.api.serializers import Serializer, register
-from sentry.models import CommitFileChange
+from sentry.models import Commit, CommitFileChange
 from sentry.api.serializers.models.release import get_users_for_commits
 
 
 @register(CommitFileChange)
 class CommitFileChangeSerializer(Serializer):
     def get_attrs(self, item_list, user):
-        commits = [f.commit for f in item_list]
+        commits = Commit.objects.filter(id__in=[f.commit_id for f in item_list]).select_related('author')
         author_objs = get_users_for_commits(commits)
+        commitDetails = {}
+        for commit in commits:
+            commitDetails[commit.id] = commit
         result = {}
         for item in item_list:
             result[item] = {
-                'user': author_objs.get(item.commit.author_id, {})
+                'user': author_objs.get(commitDetails[item.commit_id].author_id, {}),
+                'message': commitDetails[item.commit_id].message
             }
 
         return result
@@ -25,7 +29,7 @@ class CommitFileChangeSerializer(Serializer):
             'id': six.text_type(obj.id),
             'org_id': obj.organization_id,
             'author': attrs.get('user', {}),
-            'commit_message': obj.commit.message,
+            'commit_message': attrs.get('message', ''),
             'filename': obj.filename,
             'type': obj.type
         }
