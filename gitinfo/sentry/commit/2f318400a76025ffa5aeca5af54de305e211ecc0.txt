commit 2f318400a76025ffa5aeca5af54de305e211ecc0
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Mar 13 17:49:20 2020 +0100

    feat(sessions): Added more periods to session health pages (#17647)

diff --git a/src/sentry/api/endpoints/organization_release_details.py b/src/sentry/api/endpoints/organization_release_details.py
index 1bb8378638..240d64f909 100644
--- a/src/sentry/api/endpoints/organization_release_details.py
+++ b/src/sentry/api/endpoints/organization_release_details.py
@@ -16,11 +16,8 @@ from sentry.api.serializers.rest_framework import (
 )
 from sentry.models import Activity, Group, Release, ReleaseFile, Project
 from sentry.utils.apidocs import scenario, attach_scenarios
-from sentry.api.endpoints.organization_releases import (
-    SUMMARY_STATS_PERIOD,
-    HEALTH_STATS_PERIOD,
-    get_stats_period_detail,
-)
+from sentry.snuba.sessions import STATS_PERIODS
+from sentry.api.endpoints.organization_releases import get_stats_period_detail
 
 ERR_RELEASE_REFERENCED = "This release is referenced by active issues and cannot be removed."
 
@@ -71,16 +68,12 @@ class OrganizationReleaseDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         """
         project_id = request.GET.get("project")
         with_health = request.GET.get("health") == "1"
-        summary_stats_period = request.GET.get("summaryStatsPeriod") or "48h"
+        summary_stats_period = request.GET.get("summaryStatsPeriod") or "14d"
         health_stats_period = request.GET.get("healthStatsPeriod") or ("24h" if with_health else "")
-        if summary_stats_period not in SUMMARY_STATS_PERIOD:
-            raise ParseError(
-                detail=get_stats_period_detail("summaryStatsPeriod", SUMMARY_STATS_PERIOD)
-            )
-        if health_stats_period not in HEALTH_STATS_PERIOD:
-            raise ParseError(
-                detail=get_stats_period_detail("healthStatsPeriod", HEALTH_STATS_PERIOD)
-            )
+        if summary_stats_period not in STATS_PERIODS:
+            raise ParseError(detail=get_stats_period_detail("summaryStatsPeriod", STATS_PERIODS))
+        if health_stats_period and health_stats_period not in STATS_PERIODS:
+            raise ParseError(detail=get_stats_period_detail("healthStatsPeriod", STATS_PERIODS))
 
         try:
             release = Release.objects.get(organization_id=organization.id, version=version)
diff --git a/src/sentry/api/endpoints/organization_releases.py b/src/sentry/api/endpoints/organization_releases.py
index 2ecae92fb6..021406477d 100644
--- a/src/sentry/api/endpoints/organization_releases.py
+++ b/src/sentry/api/endpoints/organization_releases.py
@@ -22,14 +22,13 @@ from sentry.signals import release_created
 from sentry.snuba.sessions import (
     get_changed_project_release_model_adoptions,
     get_project_releases_by_stability,
+    STATS_PERIODS,
 )
 from sentry.utils.apidocs import scenario, attach_scenarios
 from sentry.utils.cache import cache
 from sentry.utils.compat import zip as izip
 
 
-SUMMARY_STATS_PERIOD = ("24h", "48h", "7d", "14d")
-HEALTH_STATS_PERIOD = ("", "24h", "14d")
 ERR_INVALID_STATS_PERIOD = "Invalid %s. Valid choices are %s"
 
 
@@ -149,16 +148,12 @@ class OrganizationReleasesEndpoint(OrganizationReleasesBaseEndpoint, Environment
         with_health = request.GET.get("health") == "1"
         flatten = request.GET.get("flatten") == "1"
         sort = request.GET.get("sort") or "date"
-        summary_stats_period = request.GET.get("summaryStatsPeriod") or "48h"
+        summary_stats_period = request.GET.get("summaryStatsPeriod") or "14d"
         health_stats_period = request.GET.get("healthStatsPeriod") or ("24h" if with_health else "")
-        if summary_stats_period not in SUMMARY_STATS_PERIOD:
-            raise ParseError(
-                detail=get_stats_period_detail("summaryStatsPeriod", SUMMARY_STATS_PERIOD)
-            )
-        if health_stats_period not in HEALTH_STATS_PERIOD:
-            raise ParseError(
-                detail=get_stats_period_detail("healthStatsPeriod", HEALTH_STATS_PERIOD)
-            )
+        if summary_stats_period not in STATS_PERIODS:
+            raise ParseError(detail=get_stats_period_detail("summaryStatsPeriod", STATS_PERIODS))
+        if health_stats_period and health_stats_period not in STATS_PERIODS:
+            raise ParseError(detail=get_stats_period_detail("healthStatsPeriod", STATS_PERIODS))
 
         paginator_cls = OffsetPaginator
         paginator_kwargs = {}
diff --git a/src/sentry/api/endpoints/project_release_details.py b/src/sentry/api/endpoints/project_release_details.py
index c3efdc39e5..bb131554c4 100644
--- a/src/sentry/api/endpoints/project_release_details.py
+++ b/src/sentry/api/endpoints/project_release_details.py
@@ -11,11 +11,8 @@ from sentry.api.serializers.rest_framework import ReleaseSerializer
 from sentry.models import Activity, Group, Release, ReleaseFile
 from sentry.plugins.interfaces.releasehook import ReleaseHook
 
-from sentry.api.endpoints.organization_releases import (
-    SUMMARY_STATS_PERIOD,
-    HEALTH_STATS_PERIOD,
-    get_stats_period_detail,
-)
+from sentry.snuba.sessions import STATS_PERIODS
+from sentry.api.endpoints.organization_releases import get_stats_period_detail
 
 
 ERR_RELEASE_REFERENCED = "This release is referenced by active issues and cannot be removed."
@@ -39,16 +36,12 @@ class ProjectReleaseDetailsEndpoint(ProjectEndpoint):
         :auth: required
         """
         with_health = request.GET.get("health") == "1"
-        summary_stats_period = request.GET.get("summaryStatsPeriod") or "48h"
+        summary_stats_period = request.GET.get("summaryStatsPeriod") or "14d"
         health_stats_period = request.GET.get("healthStatsPeriod") or ("24h" if with_health else "")
-        if summary_stats_period not in SUMMARY_STATS_PERIOD:
-            raise ParseError(
-                detail=get_stats_period_detail("summaryStatsPeriod", SUMMARY_STATS_PERIOD)
-            )
-        if health_stats_period not in HEALTH_STATS_PERIOD:
-            raise ParseError(
-                detail=get_stats_period_detail("healthStatsPeriod", HEALTH_STATS_PERIOD)
-            )
+        if summary_stats_period not in STATS_PERIODS:
+            raise ParseError(detail=get_stats_period_detail("summaryStatsPeriod", STATS_PERIODS))
+        if health_stats_period and health_stats_period not in STATS_PERIODS:
+            raise ParseError(detail=get_stats_period_detail("healthStatsPeriod", STATS_PERIODS))
 
         try:
             release = Release.objects.get(
diff --git a/src/sentry/snuba/sessions.py b/src/sentry/snuba/sessions.py
index 1f0e007a65..d93acc0a28 100644
--- a/src/sentry/snuba/sessions.py
+++ b/src/sentry/snuba/sessions.py
@@ -100,12 +100,15 @@ def _make_stats(start, rollup, buckets):
 
 
 STATS_PERIODS = {
+    "1h": (3600, 1),
     "24h": (3600, 24),
     "1d": (3600, 24),
     "48h": (3600, 48),
     "2d": (3600, 48),
     "7d": (86400, 7),
     "14d": (86400, 14),
+    "30d": (86400, 30),
+    "90d": (259200, 30),
 }
 
 
@@ -192,7 +195,12 @@ def get_release_health_data_overview(
 
     # Add releases without data points
     if missing_releases:
-        has_health_data = check_has_health_data(missing_releases)
+        # If we're already looking at a 90 day horizont we don't need to
+        # fire another query, we can already assume there is no data.
+        if summary_stats_period != "90d":
+            has_health_data = check_has_health_data(missing_releases)
+        else:
+            has_health_data = ()
         for key in missing_releases:
             rv[key] = {
                 "duration_p50": None,
diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
index 008ba5e9f6..75c78846bc 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
@@ -125,6 +125,11 @@ class GlobalSelectionHeader extends React.Component {
      */
     allowClearTimeRange: PropTypes.bool,
 
+    /**
+     * Small info icon with tooltip hint text
+     */
+    timeRangeHint: PropTypes.string,
+
     // Callbacks //
     onChangeProjects: PropTypes.func,
     onUpdateProjects: PropTypes.func,
@@ -563,6 +568,7 @@ class GlobalSelectionHeader extends React.Component {
       showDateSelector,
       showEnvironmentSelector,
       allowClearTimeRange,
+      timeRangeHint,
     } = this.props;
     const {period, start, end, utc} = this.props.selection.datetime || {};
 
@@ -650,6 +656,7 @@ class GlobalSelectionHeader extends React.Component {
                 onUpdate={this.handleUpdateTime}
                 organization={organization}
                 allowClearTimeRange={allowClearTimeRange}
+                hint={timeRangeHint}
               />
             </HeaderItemPosition>
           </React.Fragment>
diff --git a/src/sentry/static/sentry/app/components/organizations/headerItem.tsx b/src/sentry/static/sentry/app/components/organizations/headerItem.tsx
index c12f0c45d9..9fd763aa23 100644
--- a/src/sentry/static/sentry/app/components/organizations/headerItem.tsx
+++ b/src/sentry/static/sentry/app/components/organizations/headerItem.tsx
@@ -8,6 +8,7 @@ import InlineSvg from 'app/components/inlineSvg';
 import Tooltip from 'app/components/tooltip';
 import space from 'app/styles/space';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
+import {IconInfo} from 'app/icons';
 
 type DefaultProps = {
   allowClear: boolean;
@@ -17,6 +18,7 @@ type Props = {
   icon: React.ReactElement;
   lockedMessage: string;
   settingsLink: string;
+  hint?: string;
   hasChanges: boolean;
   hasSelected: boolean;
   isOpen: boolean;
@@ -37,6 +39,7 @@ class HeaderItem extends React.Component<Props> {
     locked: PropTypes.bool,
     lockedMessage: PropTypes.string,
     settingsLink: PropTypes.string,
+    hint: PropTypes.string,
   };
 
   static defaultProps: DefaultProps = {
@@ -58,6 +61,7 @@ class HeaderItem extends React.Component<Props> {
       locked,
       lockedMessage,
       settingsLink,
+      hint,
       onClear, // eslint-disable-line no-unused-vars
       loading,
       forwardRef,
@@ -74,6 +78,13 @@ class HeaderItem extends React.Component<Props> {
       <StyledHeaderItem ref={forwardRef} loading={loading} {...props} {...textColorProps}>
         <IconContainer {...textColorProps}>{icon}</IconContainer>
         <Content>{children}</Content>
+        {hint && (
+          <Hint>
+            <Tooltip title={hint} position="bottom">
+              <IconInfo size="sm" />
+            </Tooltip>
+          </Hint>
+        )}
         {hasSelected && !locked && allowClear && (
           <StyledClose {...textColorProps} src="icon-close" onClick={this.handleClear} />
         )}
@@ -138,6 +149,12 @@ const IconContainer = styled('span', {shouldForwardProp: isPropValid})<ColorProp
   margin-right: ${space(1.5)};
 `;
 
+const Hint = styled('div')`
+  position: relative;
+  top: ${space(0.25)};
+  margin-right: ${space(1)};
+`;
+
 const StyledClose = styled(InlineSvg, {shouldForwardProp: isPropValid})<ColorProps>`
   color: ${getColor};
   height: ${space(1.5)};
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
index e0ceeca9d4..f6c16025fc 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
@@ -116,6 +116,11 @@ class TimeRangeSelector extends React.PureComponent {
      * Allow user to clear the time range selection
      */
     allowClearTimeRange: PropTypes.bool,
+
+    /**
+     * Small info icon with tooltip hint text
+     */
+    hint: PropTypes.string,
   };
 
   static defaultProps = {
@@ -300,7 +305,13 @@ class TimeRangeSelector extends React.PureComponent {
   };
 
   render() {
-    const {showAbsolute, showRelative, organization, allowClearTimeRange} = this.props;
+    const {
+      showAbsolute,
+      showRelative,
+      organization,
+      allowClearTimeRange,
+      hint,
+    } = this.props;
     const {start, end, relative} = this.state;
 
     const shouldShowAbsolute = showAbsolute;
@@ -338,6 +349,7 @@ class TimeRangeSelector extends React.PureComponent {
               hasChanges={this.state.hasChanges}
               onClear={this.handleClear}
               allowClear={allowClear}
+              hint={hint}
               {...getActorProps()}
             >
               {getDynamicText({value: summary, fixed: 'start to end'})}
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
index 092fdd3c7c..e7fe4266d8 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
@@ -25,7 +25,6 @@ import GlobalSelectionHeader from 'app/components/organizations/globalSelectionH
 import Projects from 'app/utils/projects';
 
 import ReleaseListSortOptions from './releaseListSortOptions';
-import ReleaseListPeriod from './releaseListPeriod';
 
 type Props = {
   params: Params;
@@ -57,9 +56,9 @@ class ReleasesList extends AsyncView<Props, State> {
         'cursor',
         'query',
         'sort',
-        'summaryStatsPeriod',
         'healthStatsPeriod',
       ]),
+      summaryStatsPeriod: location.query.statsPeriod,
       per_page: 50,
       health: 1,
       flatten: 1,
@@ -80,12 +79,6 @@ class ReleasesList extends AsyncView<Props, State> {
     return typeof sort === 'string' ? sort : 'date';
   }
 
-  getPeriod() {
-    const {summaryStatsPeriod} = this.props.location.query;
-
-    return typeof summaryStatsPeriod === 'string' ? summaryStatsPeriod : '48h';
-  }
-
   handleSearch = (query: string) => {
     const {location, router} = this.props;
 
@@ -104,15 +97,6 @@ class ReleasesList extends AsyncView<Props, State> {
     });
   };
 
-  handlePeriod = (summaryStatsPeriod: string) => {
-    const {location, router} = this.props;
-
-    router.push({
-      ...location,
-      query: {...location.query, cursor: undefined, summaryStatsPeriod},
-    });
-  };
-
   renderLoading() {
     return this.renderBody();
   }
@@ -182,7 +166,13 @@ class ReleasesList extends AsyncView<Props, State> {
 
     return (
       <React.Fragment>
-        <GlobalSelectionHeader organization={organization} showDateSelector={false} />
+        <GlobalSelectionHeader
+          organization={organization}
+          showAbsolute={false}
+          timeRangeHint={t(
+            'Changing this date range will recalculate the release metrics.'
+          )}
+        />
 
         <NoProjectMessage organization={organization}>
           <PageContent>
@@ -191,10 +181,6 @@ class ReleasesList extends AsyncView<Props, State> {
                 {t('Releases v2')} <BetaTag />
               </PageHeading>
               <SortAndFilterWrapper>
-                <ReleaseListPeriod
-                  selected={this.getPeriod()}
-                  onSelect={this.handlePeriod}
-                />
                 <ReleaseListSortOptions
                   selected={this.getSort()}
                   onSelect={this.handleSort}
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
index ed53278332..17771256b0 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
@@ -5,7 +5,7 @@ import {Location} from 'history';
 import Link from 'app/components/links/link';
 import {ProjectRelease} from 'app/types';
 import {PanelHeader, PanelBody, PanelItem} from 'app/components/panels';
-import {t} from 'app/locale';
+import {t, tn} from 'app/locale';
 import space from 'app/styles/space';
 import ProgressRing from 'app/components/progressRing';
 import Count from 'app/components/count';
@@ -30,7 +30,7 @@ const ReleaseHealth = ({release, location}: Props) => {
     crashFreeUsers,
     crashFreeSessions,
     sessionsCrashed,
-    // sessionsErrored,
+    totalUsers,
   } = release.healthData!;
 
   const healthStatsPeriods = [
@@ -87,22 +87,26 @@ const ReleaseHealth = ({release, location}: Props) => {
             </DailyUsersColumn>
 
             <AdoptionColumn>
-              {defined(adoption) ? (
-                <ScoreBar
-                  score={convertAdoptionToProgress(adoption)}
-                  size={14}
-                  thickness={14}
-                  palette={[
-                    theme.red,
-                    theme.yellowOrange,
-                    theme.yellowOrange,
-                    theme.green,
-                    theme.green,
-                  ]}
-                />
-              ) : (
-                '-'
-              )}
+              <AdoptionWrapper>
+                {defined(adoption) && (
+                  <StyledScoreBar
+                    score={convertAdoptionToProgress(adoption)}
+                    size={14}
+                    thickness={14}
+                    palette={[
+                      theme.red,
+                      theme.yellowOrange,
+                      theme.yellowOrange,
+                      theme.green,
+                      theme.green,
+                    ]}
+                  />
+                )}
+                <div>
+                  <Count value={totalUsers} /> &nbsp;
+                  {tn('user', 'users', totalUsers)}
+                </div>
+              </AdoptionWrapper>
             </AdoptionColumn>
 
             <CrashFreeUsersColumn>
@@ -232,6 +236,17 @@ const StyledPanelItem = styled(PanelItem)`
   padding-top: 0;
 `;
 
+const AdoptionWrapper = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: flex-start;
+  flex-wrap: wrap-reverse;
+`;
+
+const StyledScoreBar = styled(ScoreBar)`
+  margin-right: ${space(1)};
+`;
+
 const StyledProgressRing = styled(ProgressRing)`
   position: relative;
   top: ${space(0.5)};
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseListPeriod.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseListPeriod.tsx
deleted file mode 100644
index ab823cbcb0..0000000000
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releaseListPeriod.tsx
+++ /dev/null
@@ -1,42 +0,0 @@
-import React from 'react';
-
-import {t} from 'app/locale';
-
-import ReleaseListDropdown from './releaseListDropdown';
-
-type Props = {
-  selected: string;
-  onSelect: (key: string) => void;
-};
-
-const ReleaseListPeriod = ({selected, onSelect}: Props) => {
-  const options = [
-    {
-      key: '24h',
-      label: t('Last 24 hours'),
-    },
-    {
-      key: '48h',
-      label: t('Last 48 hours'),
-    },
-    {
-      key: '7d',
-      label: t('Last 7 days'),
-    },
-    {
-      key: '14d',
-      label: t('Last 14 days'),
-    },
-  ];
-
-  return (
-    <ReleaseListDropdown
-      label={t('Period')}
-      options={options}
-      selected={selected}
-      onSelect={onSelect}
-    />
-  );
-};
-
-export default ReleaseListPeriod;
