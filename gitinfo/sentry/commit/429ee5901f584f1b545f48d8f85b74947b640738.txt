commit 429ee5901f584f1b545f48d8f85b74947b640738
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Jan 23 11:28:16 2020 +0100

    ref(ts): Convert <SeenByList> to typescript (#16575)
    
    * ref(ts): Convert <SeenByList> to typescript
    
    * hex changed to theme color

diff --git a/src/sentry/static/sentry/app/components/seenByList.jsx b/src/sentry/static/sentry/app/components/seenByList.jsx
deleted file mode 100644
index 868e61ef0a..0000000000
--- a/src/sentry/static/sentry/app/components/seenByList.jsx
+++ /dev/null
@@ -1,104 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import classNames from 'classnames';
-import moment from 'moment';
-import styled from '@emotion/styled';
-
-import {t} from 'app/locale';
-import {userDisplayName} from 'app/utils/formatters';
-import AvatarList from 'app/components/avatar/avatarList';
-import ConfigStore from 'app/stores/configStore';
-import SentryTypes from 'app/sentryTypes';
-import Tooltip from 'app/components/tooltip';
-
-export default class SeenByList extends React.Component {
-  static propTypes = {
-    // Avatar size
-    avatarSize: PropTypes.number,
-
-    // List of *all* users that have seen something
-    seenBy: PropTypes.arrayOf(SentryTypes.User).isRequired,
-
-    // Tooltip message for the "Seen By" icon
-    iconTooltip: PropTypes.string,
-
-    iconPosition: PropTypes.oneOf(['left', 'right']),
-
-    // Max avatars to display
-    maxVisibleAvatars: PropTypes.number,
-  };
-
-  static defaultProps = {
-    avatarSize: 28,
-    iconTooltip: t('People who have viewed this'),
-    iconPosition: 'left',
-    maxVisibleAvatars: 10,
-    seenBy: [],
-  };
-
-  render() {
-    const activeUser = ConfigStore.get('user');
-    const {
-      className,
-      avatarSize,
-      maxVisibleAvatars,
-      seenBy,
-      iconPosition,
-      iconTooltip,
-    } = this.props;
-
-    const displayUsers = seenBy.filter(user => activeUser.id !== user.id);
-    if (displayUsers.length === 0) {
-      return null;
-    }
-
-    // Note className="seen-by" is required for responsive design
-    return (
-      <SeenByWrapper
-        iconPosition={iconPosition}
-        className={classNames('seen-by', className)}
-      >
-        <AvatarList
-          users={displayUsers}
-          avatarSize={avatarSize}
-          maxVisibleAvatars={maxVisibleAvatars}
-          renderTooltip={user => (
-            <React.Fragment>
-              {userDisplayName(user)}
-              <br />
-              {moment(user.lastSeen).format('LL')}
-            </React.Fragment>
-          )}
-        />
-        <IconWrapper iconPosition={iconPosition}>
-          <Tooltip title={iconTooltip}>
-            <EyeIcon className="icon-eye" />
-          </Tooltip>
-        </IconWrapper>
-      </SeenByWrapper>
-    );
-  }
-}
-
-const SeenByWrapper = styled('div')`
-  display: flex;
-  margin-top: 15px;
-  float: right;
-  ${p => (p.iconPosition === 'left' ? 'flex-direction: row-reverse' : '')};
-`;
-
-const IconWrapper = styled('div')`
-  background-color: transparent;
-  color: #493e54;
-  height: 28px;
-  width: 28px;
-  line-height: 26px;
-  text-align: center;
-  ${p => (p.iconPosition === 'left' ? 'margin-right: 10px' : '')};
-`;
-
-const EyeIcon = styled('span')`
-  opacity: 0.4;
-  position: relative;
-  top: 2px;
-`;
diff --git a/src/sentry/static/sentry/app/components/seenByList.tsx b/src/sentry/static/sentry/app/components/seenByList.tsx
new file mode 100644
index 0000000000..e04f7e1f45
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/seenByList.tsx
@@ -0,0 +1,95 @@
+import React from 'react';
+import classNames from 'classnames';
+import moment from 'moment';
+import styled from '@emotion/styled';
+
+import {t} from 'app/locale';
+import {User} from 'app/types';
+import {userDisplayName} from 'app/utils/formatters';
+import AvatarList from 'app/components/avatar/avatarList';
+import ConfigStore from 'app/stores/configStore';
+import Tooltip from 'app/components/tooltip';
+
+type Props = {
+  // Avatar size
+  avatarSize?: number;
+
+  // List of *all* users that have seen something
+  seenBy?: User[];
+
+  // Tooltip message for the "Seen By" icon
+  iconTooltip?: string;
+
+  // Max avatars to display
+  maxVisibleAvatars?: number;
+
+  iconPosition?: 'left' | 'right';
+  className?: string;
+};
+
+const SeenByList = ({
+  avatarSize = 28,
+  seenBy = [],
+  iconTooltip = t('People who have viewed this'),
+  maxVisibleAvatars = 10,
+  iconPosition = 'left',
+  className,
+}: Props) => {
+  const activeUser = ConfigStore.get('user');
+  const displayUsers = seenBy.filter(user => activeUser.id !== user.id);
+
+  if (displayUsers.length === 0) {
+    return null;
+  }
+
+  // Note className="seen-by" is required for responsive design
+  return (
+    <SeenByWrapper
+      iconPosition={iconPosition}
+      className={classNames('seen-by', className)}
+    >
+      <AvatarList
+        users={displayUsers}
+        avatarSize={avatarSize}
+        maxVisibleAvatars={maxVisibleAvatars}
+        renderTooltip={user => (
+          <React.Fragment>
+            {userDisplayName(user)}
+            <br />
+            {moment(user.lastSeen).format('LL')}
+          </React.Fragment>
+        )}
+      />
+      <IconWrapper iconPosition={iconPosition}>
+        <Tooltip title={iconTooltip}>
+          <EyeIcon className="icon-eye" />
+        </Tooltip>
+      </IconWrapper>
+    </SeenByWrapper>
+  );
+};
+
+const SeenByWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`
+  display: flex;
+  margin-top: 15px;
+  float: right;
+  ${p => (p.iconPosition === 'left' ? 'flex-direction: row-reverse' : '')};
+`;
+
+const IconWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`
+  background-color: transparent;
+  color: ${p => p.theme.foreground};
+  height: 28px;
+  width: 28px;
+  line-height: 26px;
+  text-align: center;
+  ${p => (p.iconPosition === 'left' ? 'margin-right: 10px' : '')};
+`;
+
+const EyeIcon = styled('span')`
+  opacity: 0.4;
+  position: relative;
+  top: 2px;
+`;
+
+export default SeenByList;
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index a5f6daf456..0c09cd1cc4 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -236,6 +236,7 @@ export type AvatarUser = {
   options?: {
     avatarType: string;
   };
+  lastSeen?: string;
 };
 
 export type User = AvatarUser & {
