commit 3c68a3cc10fb3306b1e749272e0834d3f186dbe0
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed May 23 11:06:34 2018 -0700

    feat(dashboard): Deploys UI (#8391)

diff --git a/src/sentry/static/sentry/app/proptypes.jsx b/src/sentry/static/sentry/app/proptypes.jsx
index 4cf47b05d0..4aae2821a6 100644
--- a/src/sentry/static/sentry/app/proptypes.jsx
+++ b/src/sentry/static/sentry/app/proptypes.jsx
@@ -65,6 +65,12 @@ export const Config = PropTypes.shape({
   }),
 });
 
+export const Deploy = PropTypes.shape({
+  environment: PropTypes.string,
+  dateFinished: PropTypes.string,
+  version: PropTypes.string,
+});
+
 /**
  * A Member is someone that was invited to Sentry but may
  * not have registered for an account yet
@@ -295,12 +301,13 @@ let SentryTypes = {
   }),
   Actor,
   Config,
-  Group,
+  Deploy,
   Environment,
   Event,
   Organization: PropTypes.shape({
     id: PropTypes.string.isRequired,
   }),
+  Group,
   Tag,
   PageLinks,
   Project,
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/deploys.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/deploys.jsx
new file mode 100644
index 0000000000..94500e8558
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/deploys.jsx
@@ -0,0 +1,141 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import styled from 'react-emotion';
+import {Flex, Box} from 'grid-emotion';
+import moment from 'moment-timezone';
+
+import SentryTypes from 'app/proptypes';
+import Button from 'app/components/buttons/button';
+import Link from 'app/components/link';
+import {t} from 'app/locale';
+import TextOverflow from 'app/components/textOverflow';
+
+const DEPLOY_COUNT = 2;
+
+export default class Deploys extends React.Component {
+  static propTypes = {
+    project: SentryTypes.Project,
+    orgId: PropTypes.string,
+  };
+
+  render() {
+    const {project, orgId} = this.props;
+
+    const projectId = project.slug;
+
+    const flattenedDeploys = Object.entries(
+      project.latestDeploys || {}
+    ).map(([environment, value]) => {
+      return {environment, ...value};
+    });
+
+    const deploys = (flattenedDeploys || [])
+      .sort((a, b) => new Date(b.dateFinished) - new Date(a.dateFinished))
+      .slice(0, DEPLOY_COUNT);
+
+    if (deploys.length) {
+      return (
+        <DeployBox p={2} pb={0}>
+          <Heading>{t('Latest deploys')}</Heading>
+          <div>
+            {deploys.map(deploy => (
+              <Deploy
+                key={deploy.version}
+                deploy={deploy}
+                projectId={projectId}
+                orgId={orgId}
+              />
+            ))}
+          </div>
+        </DeployBox>
+      );
+    } else {
+      return <NoDeploys />;
+    }
+  }
+}
+
+const Heading = styled.div`
+  color: ${p => p.theme.gray2};
+  text-transform: uppercase;
+  font-size: 14px;
+`;
+
+class Deploy extends React.Component {
+  static propTypes = {
+    deploy: SentryTypes.Deploy.isRequired,
+    projectId: PropTypes.string.isRequired,
+    orgId: PropTypes.string.isRequired,
+  };
+
+  render() {
+    const {deploy, orgId, projectId} = this.props;
+    return (
+      <DeployRow justify="space-between">
+        <Environment>{deploy.environment}</Environment>
+        <Version>
+          <StyledLink to={`/${orgId}/${projectId}/releases/${deploy.version}/`}>
+            {deploy.version}
+          </StyledLink>
+        </Version>
+        <Box w={80}>{moment(deploy.dateFinished).fromNow()}</Box>
+      </DeployRow>
+    );
+  }
+}
+
+const DeployRow = styled(Flex)`
+  color: ${p => p.theme.gray2};
+  font-size: 13px;
+  margin-top: 8px;
+`;
+
+const Environment = styled(TextOverflow)`
+  font-size: 11px;
+  text-transform: uppercase;
+  width: 80px;
+  border: 1px solid ${p => p.theme.offWhite2};
+  margin-right: 8px;
+  background-color: ${p => p.theme.offWhite};
+  text-align: center;
+  border-radius: ${p => p.theme.borderRadius};
+`;
+
+const Version = styled(TextOverflow)`
+  display: flex;
+  flex: 1;
+  margin-right: 8px;
+`;
+
+const StyledLink = styled(Link)`
+  text-overflow: ellipsis;
+  overflow: hidden;
+  white-space: nowrap;
+`;
+
+class NoDeploys extends React.Component {
+  render() {
+    return (
+      <DeployBox p={2} pb={0}>
+        <Background align="center" justify="center">
+          <Button
+            size="xsmall"
+            href="https://blog.sentry.io/2017/05/09/release-deploys"
+            external={true}
+          >
+            {t('Track deploys')}
+          </Button>
+        </Background>
+      </DeployBox>
+    );
+  }
+}
+
+const DeployBox = styled(Box)`
+  height: 108px;
+`;
+
+const Background = styled(Flex)`
+  height: 100%;
+  background-color: ${p => p.theme.offWhite};
+`;
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
index 3b9f17b8d2..69901d95dc 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
@@ -20,6 +20,7 @@ import overflowEllipsis from 'app/styles/overflowEllipsis';
 import PlatformList from './platformList';
 import Chart from './chart';
 import NoEvents from './noEvents';
+import Deploys from './deploys';
 
 class ProjectCard extends React.Component {
   static propTypes = {
@@ -54,35 +55,33 @@ class ProjectCard extends React.Component {
 
   render() {
     const {project, params} = this.props;
-    const {stats} = project;
+    const {firstEvent, isBookmarked, stats, slug} = project;
 
-    const bookmarkText = project.isBookmarked
+    const bookmarkText = isBookmarked
       ? t('Remove from bookmarks')
       : t('Add to bookmarks');
 
     return (
-      <ProjectCardWrapper
-        data-test-id={project.slug}
-        width={['100%', '50%', '33%', '25%']}
-      >
+      <ProjectCardWrapper data-test-id={slug} width={['100%', '50%', '33%', '25%']}>
         {stats ? (
           <StyledProjectCard>
             <Flex justify="space-between" align="center">
-              <StyledLink to={`/${params.orgId}/${project.slug}/`}>
-                <strong>{project.slug}</strong>
+              <StyledLink to={`/${params.orgId}/${slug}/`}>
+                <strong>{slug}</strong>
               </StyledLink>
               <Tooltip title={bookmarkText}>
                 <Star
-                  active={project.isBookmarked}
+                  active={isBookmarked}
                   className="project-select-bookmark icon icon-star-solid"
                   onClick={this.toggleProjectBookmark}
                 />
               </Tooltip>
             </Flex>
             <ChartContainer>
-              <Chart stats={stats} noEvents={!project.firstEvent} />
-              {!project.firstEvent && <NoEvents />}
+              <Chart stats={stats} noEvents={!firstEvent} />
+              {!firstEvent && <NoEvents />}
             </ChartContainer>
+            <Deploys project={project} orgId={params.orgId} />
             <PlatformList project={project} orgId={params.orgId} />
           </StyledProjectCard>
         ) : (
@@ -165,7 +164,7 @@ const Star = styled.a`
 const LoadingCard = styled('div')`
   border: 1px solid transparent;
   background-color: ${p => p.theme.offWhite};
-  height: 180px;
+  height: 290px;
 `;
 
 export {ProjectCard};
diff --git a/tests/acceptance/test_dashboard.py b/tests/acceptance/test_dashboard.py
index 6b60f40668..eca1b09ea4 100644
--- a/tests/acceptance/test_dashboard.py
+++ b/tests/acceptance/test_dashboard.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from django.utils import timezone
 
 from sentry.testutils import AcceptanceTestCase
-from sentry.models import GroupAssignee
+from sentry.models import GroupAssignee, Release, Environment, Deploy, ReleaseProjectEnvironment
 from sentry.utils.samples import create_sample_event
 from datetime import datetime
 
@@ -28,6 +28,31 @@ class DashboardTest(AcceptanceTestCase):
             role='owner',
             teams=[self.team],
         )
+
+        release = Release.objects.create(
+            organization_id=self.org.id,
+            version='1',
+        )
+
+        environment = Environment.objects.create(
+            organization_id=self.org.id,
+            name='production',
+        )
+
+        deploy = Deploy.objects.create(
+            environment_id=environment.id,
+            organization_id=self.org.id,
+            release=release,
+            date_finished='2018-05-23'
+        )
+
+        ReleaseProjectEnvironment.objects.create(
+            project_id=self.project.id,
+            release_id=release.id,
+            environment_id=environment.id,
+            last_deploy_id=deploy.id
+        )
+
         self.login_as(self.user)
         self.path = '/{}/'.format(self.org.slug)
 
diff --git a/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap b/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
index 5692008531..5324df3988 100644
--- a/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
+++ b/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
@@ -333,6 +333,148 @@ exports[`ProjectCard renders 1`] = `
                 </NoEvents>
               </div>
             </ChartContainer>
+            <Deploys
+              orgId="org-slug"
+              project={
+                Object {
+                  "hasAccess": true,
+                  "id": "2",
+                  "isBookmarked": false,
+                  "isMember": true,
+                  "name": "Project Name",
+                  "platforms": Array [
+                    "javascript",
+                  ],
+                  "slug": "project-slug",
+                  "stats": Array [
+                    Array [
+                      1525042800,
+                      1,
+                    ],
+                    Array [
+                      1525046400,
+                      2,
+                    ],
+                  ],
+                  "teams": Array [],
+                }
+              }
+            >
+              <NoDeploys>
+                <DeployBox
+                  p={2}
+                  pb={0}
+                >
+                  <Base
+                    className="css-tt0qjv-DeployBox eltxe6c5"
+                    p={2}
+                    pb={0}
+                  >
+                    <div
+                      className="css-tt0qjv-DeployBox eltxe6c5"
+                      is={null}
+                    >
+                      <Background
+                        align="center"
+                        justify="center"
+                      >
+                        <Base
+                          align="center"
+                          className="css-itelel-Background eltxe6c6"
+                          justify="center"
+                        >
+                          <div
+                            className="css-itelel-Background eltxe6c6"
+                            is={null}
+                          >
+                            <Button
+                              disabled={false}
+                              external={true}
+                              href="https://blog.sentry.io/2017/05/09/release-deploys"
+                              size="xsmall"
+                            >
+                              <StyledButton
+                                aria-label="Track deploys"
+                                disabled={false}
+                                external={true}
+                                href="https://blog.sentry.io/2017/05/09/release-deploys"
+                                onClick={[Function]}
+                                role="button"
+                                size="xsmall"
+                              >
+                                <Component
+                                  aria-label="Track deploys"
+                                  className="css-dkprmi-StyledButton-getColors e17811v30"
+                                  disabled={false}
+                                  external={true}
+                                  href="https://blog.sentry.io/2017/05/09/release-deploys"
+                                  onClick={[Function]}
+                                  role="button"
+                                  size="xsmall"
+                                >
+                                  <ExternalLink
+                                    aria-label="Track deploys"
+                                    className="css-dkprmi-StyledButton-getColors e17811v30"
+                                    disabled={false}
+                                    href="https://blog.sentry.io/2017/05/09/release-deploys"
+                                    onClick={[Function]}
+                                    rel="noreferrer noopener"
+                                    role="button"
+                                    size="xsmall"
+                                    target="_blank"
+                                  >
+                                    <a
+                                      aria-label="Track deploys"
+                                      className="css-dkprmi-StyledButton-getColors e17811v30"
+                                      disabled={false}
+                                      href="https://blog.sentry.io/2017/05/09/release-deploys"
+                                      onClick={[Function]}
+                                      rel="noreferrer noopener"
+                                      role="button"
+                                      size="xsmall"
+                                      target="_blank"
+                                    >
+                                      <ButtonLabel
+                                        size="xsmall"
+                                      >
+                                        <Component
+                                          className="css-9vplug-ButtonLabel e17811v31"
+                                          size="xsmall"
+                                        >
+                                          <Flex
+                                            align="center"
+                                            className="css-9vplug-ButtonLabel e17811v31"
+                                            size="xsmall"
+                                          >
+                                            <Base
+                                              align="center"
+                                              className="e17811v31 css-esdzbq-ButtonLabel"
+                                              size="xsmall"
+                                            >
+                                              <div
+                                                className="e17811v31 css-esdzbq-ButtonLabel"
+                                                is={null}
+                                                size="xsmall"
+                                              >
+                                                Track deploys
+                                              </div>
+                                            </Base>
+                                          </Flex>
+                                        </Component>
+                                      </ButtonLabel>
+                                    </a>
+                                  </ExternalLink>
+                                </Component>
+                              </StyledButton>
+                            </Button>
+                          </div>
+                        </Base>
+                      </Background>
+                    </div>
+                  </Base>
+                </DeployBox>
+              </NoDeploys>
+            </Deploys>
             <withRouter(PlatformList)
               orgId="org-slug"
               project={
diff --git a/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx b/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx
index 92efb43c06..1d4d97fdfe 100644
--- a/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx
@@ -51,6 +51,48 @@ describe('ProjectCard', function() {
     );
   });
 
+  it('renders latest 2 deploys', function() {
+    const latestDeploys = [
+      {
+        environment: 'beta',
+        dateFinished: '2018-05-10T20:56:40.092Z',
+        version: '123456',
+      },
+      {
+        environment: 'staging',
+        dateFinished: '2018-05-08T20:56:40.092Z',
+        version: '789789',
+      },
+      {
+        environment: 'production',
+        dateFinished: '2018-05-09T20:56:40.092Z',
+        version: '123123',
+      },
+    ];
+
+    wrapper = mount(
+      <ProjectCard
+        project={TestStubs.Project({
+          stats: [[1525042800, 1], [1525046400, 2]],
+          platforms: ['javascript'],
+          latestDeploys,
+        })}
+        params={{orgId: 'org-slug'}}
+      />,
+      TestStubs.routerContext()
+    );
+
+    expect(wrapper.find('Deploy')).toHaveLength(2);
+    expect(wrapper.find('NoDeploys')).toHaveLength(0);
+    expect(wrapper.find('Environment[children="beta"]')).toHaveLength(1);
+    expect(wrapper.find('Environment[children="production"]')).toHaveLength(1);
+    expect(wrapper.find('Environment[children="staging"]')).toHaveLength(0);
+  });
+
+  it('renders empty state if no deploys', function() {
+    expect(wrapper.find('NoDeploys')).toHaveLength(1);
+  });
+
   it('renders with one platform', function() {
     const platformList = wrapper.find('PlatformList');
     expect(platformList.find('StyledPlatformicon[platform="javascript"]')).toHaveLength(
@@ -67,7 +109,7 @@ describe('ProjectCard', function() {
     expect(wrapper.find('LoadingCard')).toHaveLength(1);
   });
 
-  it('renders empty state if no event has ever been sent', function() {
+  it('renders empty platform state if no event has ever been sent', function() {
     wrapper = mount(
       <ProjectCard
         project={TestStubs.Project({
@@ -82,7 +124,7 @@ describe('ProjectCard', function() {
     );
 
     expect(wrapper.find('NoEvents')).toHaveLength(1);
-    const button = wrapper.find('Button');
+    const button = wrapper.find('Button[children="Install an SDK"]');
     expect(button.prop('to')).toBe('/org-slug/project-slug/getting-started/csharp/');
   });
 });
