commit a652dda4d53f11573c0a30888ded38179f29ab2a
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Apr 15 14:18:10 2019 -0700

    ref(js): Remove ApiMixin (#12384)
    
    Relates to SEN-212

diff --git a/src/sentry/static/sentry/app/components/activity/noteInput.jsx b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
index 8bd626f15f..943f7560fc 100644
--- a/src/sentry/static/sentry/app/components/activity/noteInput.jsx
+++ b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
@@ -7,7 +7,7 @@ import classNames from 'classnames';
 import {MentionsInput, Mention} from 'react-mentions';
 import _ from 'lodash';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import OrganizationState from 'app/mixins/organizationState';
 
 import GroupStore from 'app/stores/groupStore';
@@ -32,6 +32,7 @@ const NoteInput = createReactClass({
   displayName: 'NoteInput',
 
   propTypes: {
+    api: PropTypes.object,
     item: PropTypes.object,
     group: PropTypes.object.isRequired,
     onFinish: PropTypes.func,
@@ -39,7 +40,7 @@ const NoteInput = createReactClass({
     sessionUser: PropTypes.object.isRequired,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     const {item, group} = this.props;
@@ -143,7 +144,7 @@ const NoteInput = createReactClass({
 
     const loadingIndicator = IndicatorStore.add(t('Posting comment..'));
 
-    this.api.request('/issues/' + group.id + '/comments/', {
+    this.props.api.request('/issues/' + group.id + '/comments/', {
       method: 'POST',
       data: {
         text: this.cleanMarkdown(this.state.value),
@@ -179,7 +180,7 @@ const NoteInput = createReactClass({
 
     const loadingIndicator = IndicatorStore.add(t('Updating comment..'));
 
-    this.api.request('/issues/' + group.id + '/comments/' + item.id + '/', {
+    this.props.api.request('/issues/' + group.id + '/comments/' + item.id + '/', {
       method: 'PUT',
       data: {
         text: this.state.value,
@@ -391,4 +392,6 @@ const NoteInput = createReactClass({
   },
 });
 
-export default NoteInput;
+export {NoteInput};
+
+export default withApi(NoteInput);
diff --git a/src/sentry/static/sentry/app/components/compactIssue.jsx b/src/sentry/static/sentry/app/components/compactIssue.jsx
index 9a859cd131..16cb6a1251 100644
--- a/src/sentry/static/sentry/app/components/compactIssue.jsx
+++ b/src/sentry/static/sentry/app/components/compactIssue.jsx
@@ -4,7 +4,7 @@ import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
 import {Flex, Box} from 'grid-emotion';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import IndicatorStore from 'app/stores/indicatorStore';
 import DropdownLink from 'app/components/dropdownLink';
 import SnoozeAction from 'app/components/issues/snoozeAction';
@@ -127,6 +127,7 @@ const CompactIssue = createReactClass({
   displayName: 'CompactIssue',
 
   propTypes: {
+    api: PropTypes.object,
     data: PropTypes.object,
     id: PropTypes.string,
     eventId: PropTypes.string,
@@ -135,7 +136,7 @@ const CompactIssue = createReactClass({
     organization: SentryTypes.Organization.isRequired,
   },
 
-  mixins: [ApiMixin, Reflux.listenTo(GroupStore, 'onGroupChange')],
+  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange')],
 
   getInitialState() {
     return {
@@ -178,7 +179,7 @@ const CompactIssue = createReactClass({
     const issue = this.state.issue;
     const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
 
-    this.api.bulkUpdate(
+    this.props.api.bulkUpdate(
       {
         orgId: this.props.organization.slug,
         projectId: issue.project.slug,
@@ -282,4 +283,4 @@ const CompactIssue = createReactClass({
 });
 
 export {CompactIssue};
-export default withOrganization(CompactIssue);
+export default withApi(withOrganization(CompactIssue));
diff --git a/src/sentry/static/sentry/app/components/errorRobot.jsx b/src/sentry/static/sentry/app/components/errorRobot.jsx
index 137af058ae..66b5049732 100644
--- a/src/sentry/static/sentry/app/components/errorRobot.jsx
+++ b/src/sentry/static/sentry/app/components/errorRobot.jsx
@@ -9,24 +9,25 @@ import {analytics} from 'app/utils/analytics';
 import {sendSampleEvent} from 'app/actionCreators/projects';
 import Button from 'app/components/button';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 
 const ErrorRobot = createReactClass({
   displayName: 'ErrorRobot',
 
   propTypes: {
+    api: PropTypes.object,
     org: PropTypes.object.isRequired,
     project: PropTypes.object,
+
     // sampleIssueId can have 3 values:
     // - empty string to indicate it doesn't exist (render "create sample event")
     // - non-empty string to indicate it exists (render "see sample event")
     // - null/undefined to indicate the project API should be consulted to find out
     sampleIssueId: PropTypes.string,
+
     gradient: PropTypes.bool,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       error: false,
@@ -52,7 +53,7 @@ const ErrorRobot = createReactClass({
       const requestParams = {limit: 1};
 
       this.setState({loading: true});
-      this.api.request(url, {
+      this.props.api.request(url, {
         method: 'GET',
         data: requestParams,
         success: (data, ignore, jqXHR) => {
@@ -82,7 +83,7 @@ const ErrorRobot = createReactClass({
       source: 'robot',
     });
 
-    sendSampleEvent(this.api, org.slug, project.slug)
+    sendSampleEvent(this.props.api, org.slug, project.slug)
       .then(data => {
         browserHistory.push(`/${org.slug}/${project.slug}/issues/${data.groupID}/`);
       })
@@ -157,7 +158,9 @@ const ErrorRobot = createReactClass({
   },
 });
 
-export default ErrorRobot;
+export {ErrorRobot};
+
+export default withApi(ErrorRobot);
 
 const ErrorRobotWrapper = styled('div')`
   box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);
diff --git a/src/sentry/static/sentry/app/components/group/pluginActions.jsx b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
index ed23cb059d..f8826434f9 100644
--- a/src/sentry/static/sentry/app/components/group/pluginActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
@@ -2,7 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import Modal from 'react-bootstrap/lib/Modal';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';
 import OrganizationState from 'app/mixins/organizationState';
 import NavTabs from 'app/components/navTabs';
@@ -15,12 +15,13 @@ const PluginActions = createReactClass({
   displayName: 'PluginActions',
 
   propTypes: {
+    api: PropTypes.object,
     group: SentryTypes.Group.isRequired,
     project: SentryTypes.Project.isRequired,
     plugin: PropTypes.object.isRequired,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {
@@ -49,7 +50,7 @@ const PluginActions = createReactClass({
     // override plugin.issue so that 'create/link' Modal
     // doesn't think the plugin still has an issue linked
     const endpoint = `/issues/${this.props.group.id}/plugins/${plugin.slug}/unlink/`;
-    this.api.request(endpoint, {
+    this.props.api.request(endpoint, {
       success: data => {
         this.loadPlugin(plugin);
         addSuccessMessage(t('Successfully unlinked issue.'));
@@ -146,4 +147,6 @@ const PluginActions = createReactClass({
   },
 });
 
-export default PluginActions;
+export {PluginActions};
+
+export default withApi(PluginActions);
diff --git a/src/sentry/static/sentry/app/components/group/releaseStats.jsx b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
index a991644206..c60ed8a8c0 100644
--- a/src/sentry/static/sentry/app/components/group/releaseStats.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
@@ -3,7 +3,6 @@ import React from 'react';
 import Reflux from 'reflux';
 import createReactClass from 'create-react-class';
 import SentryTypes from 'app/sentryTypes';
-import ApiMixin from 'app/mixins/apiMixin';
 import OrganizationEnvironmentsStore from 'app/stores/organizationEnvironmentsStore';
 import LatestContextStore from 'app/stores/latestContextStore';
 import GlobalSelectionStore from 'app/stores/globalSelectionStore';
@@ -27,7 +26,6 @@ const GroupReleaseStats = createReactClass({
   },
 
   mixins: [
-    ApiMixin,
     OrganizationState,
     Reflux.listenTo(LatestContextStore, 'onLatestContextChange'),
     Reflux.listenTo(GlobalSelectionStore, 'onGlobalSelectionChange'),
diff --git a/src/sentry/static/sentry/app/components/group/sidebar.jsx b/src/sentry/static/sentry/app/components/group/sidebar.jsx
index 2a33f1aa5c..18839382a9 100644
--- a/src/sentry/static/sentry/app/components/group/sidebar.jsx
+++ b/src/sentry/static/sentry/app/components/group/sidebar.jsx
@@ -5,7 +5,7 @@ import createReactClass from 'create-react-class';
 import classNames from 'classnames';
 
 import SentryTypes from 'app/sentryTypes';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import SuggestedOwners from 'app/components/group/suggestedOwners';
 import GroupParticipants from 'app/components/group/participants';
 import GroupReleaseStats from 'app/components/group/releaseStats';
@@ -21,6 +21,7 @@ const GroupSidebar = createReactClass({
   displayName: 'GroupSidebar',
 
   propTypes: {
+    api: PropTypes.object,
     project: SentryTypes.Project,
     group: SentryTypes.Group,
     event: SentryTypes.Event,
@@ -32,7 +33,7 @@ const GroupSidebar = createReactClass({
     location: PropTypes.object,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {participants: [], environments: this.props.environments};
@@ -40,7 +41,7 @@ const GroupSidebar = createReactClass({
 
   componentWillMount() {
     const {group} = this.props;
-    this.api.request(`/issues/${group.id}/participants/`, {
+    this.props.api.request(`/issues/${group.id}/participants/`, {
       success: data => {
         this.setState({
           participants: data,
@@ -55,7 +56,7 @@ const GroupSidebar = createReactClass({
     });
     // Fetch group data for all environments since the one passed in props is filtered for the selected environment
     // The charts rely on having all environment data as well as the data for the selected env
-    this.api.request(`/issues/${group.id}/`, {
+    this.props.api.request(`/issues/${group.id}/`, {
       success: data => {
         this.setState({
           allEnvironmentsGroupData: data,
@@ -81,7 +82,7 @@ const GroupSidebar = createReactClass({
     const {group} = this.props;
 
     // Fetch the top values for the current group's top tags.
-    this.api.request(`/issues/${group.id}/tags/`, {
+    this.props.api.request(`/issues/${group.id}/tags/`, {
       query: pickBy({
         key: group.tags.map(data => data.key),
         environment: this.state.environments.map(env => env.name),
@@ -117,7 +118,7 @@ const GroupSidebar = createReactClass({
     const org = this.getOrganization();
     const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
 
-    this.api.bulkUpdate(
+    this.props.api.bulkUpdate(
       {
         orgId: org.slug,
         projectId: project.slug,
@@ -128,7 +129,7 @@ const GroupSidebar = createReactClass({
       },
       {
         complete: () => {
-          this.api.request(`/issues/${group.id}/participants/`, {
+          this.props.api.request(`/issues/${group.id}/participants/`, {
             success: data => {
               this.setState({
                 participants: data,
@@ -305,4 +306,6 @@ const GroupSidebar = createReactClass({
   },
 });
 
-export default GroupSidebar;
+export {GroupSidebar};
+
+export default withApi(GroupSidebar);
diff --git a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
index 5a1c3c4717..f739e696cb 100644
--- a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
+++ b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
@@ -1,3 +1,4 @@
+import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 
@@ -6,7 +7,7 @@ import {openCreateOwnershipRule} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
 import Access from 'app/components/acl/access';
 import ActorAvatar from 'app/components/actorAvatar';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import OrganizationState from 'app/mixins/organizationState';
 import GuideAnchor from 'app/components/assistant/guideAnchor';
@@ -17,12 +18,13 @@ const SuggestedOwners = createReactClass({
   displayName: 'SuggestedOwners',
 
   propTypes: {
+    api: PropTypes.object,
     project: SentryTypes.Project,
     group: SentryTypes.Group,
     event: SentryTypes.Event,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {
@@ -55,7 +57,7 @@ const SuggestedOwners = createReactClass({
     const org = this.getOrganization();
     const project = this.props.project;
 
-    this.api.request(
+    this.props.api.request(
       `/projects/${org.slug}/${project.slug}/events/${event.id}/committers/`,
       {
         success: (data, _, jqXHR) => {
@@ -70,19 +72,22 @@ const SuggestedOwners = createReactClass({
         },
       }
     );
-    this.api.request(`/projects/${org.slug}/${project.slug}/events/${event.id}/owners/`, {
-      success: (data, _, jqXHR) => {
-        this.setState({
-          owners: data.owners,
-          rules: data.rules,
-        });
-      },
-      error: error => {
-        this.setState({
-          owners: [],
-        });
-      },
-    });
+    this.props.api.request(
+      `/projects/${org.slug}/${project.slug}/events/${event.id}/owners/`,
+      {
+        success: (data, _, jqXHR) => {
+          this.setState({
+            owners: data.owners,
+            rules: data.rules,
+          });
+        },
+        error: error => {
+          this.setState({
+            owners: [],
+          });
+        },
+      }
+    );
   },
 
   assign(actor) {
@@ -204,7 +209,8 @@ const SuggestedOwners = createReactClass({
     );
   },
 });
-export default SuggestedOwners;
+export {SuggestedOwners};
+export default withApi(SuggestedOwners);
 
 /**
  * Given a list of rule objects returned from the API, locate the matching
diff --git a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
index 3a5126bb77..8113abaf9b 100644
--- a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
+++ b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
@@ -7,7 +7,6 @@ import isPropValid from '@emotion/is-prop-valid';
 
 import {escape, percent} from 'app/utils';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
 import DeviceName, {
   deviceNameMapper,
   loadDeviceListModule,
@@ -30,8 +29,6 @@ const TagDistributionMeter = createReactClass({
     topValues: PropTypes.array,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       loading: true,
diff --git a/src/sentry/static/sentry/app/components/groupList.jsx b/src/sentry/static/sentry/app/components/groupList.jsx
index ffb860312f..988848be9c 100644
--- a/src/sentry/static/sentry/app/components/groupList.jsx
+++ b/src/sentry/static/sentry/app/components/groupList.jsx
@@ -26,8 +26,10 @@ const GroupList = createReactClass({
     query: PropTypes.string.isRequired,
     canSelectGroups: PropTypes.bool,
     orgId: PropTypes.string.isRequired,
+
     // Provided in the project version, not in org version
     projectId: PropTypes.string,
+
     environment: SentryTypes.Environment,
   },
 
@@ -189,4 +191,6 @@ const GroupList = createReactClass({
   },
 });
 
+export {GroupList};
+
 export default withApi(GroupList);
diff --git a/src/sentry/static/sentry/app/components/issueDiff.jsx b/src/sentry/static/sentry/app/components/issueDiff.jsx
index 36578ff82f..1ac74f3359 100644
--- a/src/sentry/static/sentry/app/components/issueDiff.jsx
+++ b/src/sentry/static/sentry/app/components/issueDiff.jsx
@@ -1,11 +1,10 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import createReactClass from 'create-react-class';
 import styled, {css} from 'react-emotion';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import rawStacktraceContent from 'app/components/events/interfaces/rawStacktraceContent';
 
@@ -129,15 +128,7 @@ class IssueDiff extends React.Component {
   }
 }
 
-const IssueDiffContainer = createReactClass({
-  displayName: 'IssueDiffContainer',
-  mixins: [ApiMixin],
-  render() {
-    return <IssueDiff {...this.props} api={this.api} />;
-  },
-});
-
-export default IssueDiffContainer;
+export default withApi(IssueDiff);
 export {IssueDiff};
 
 const getLoadingStyle = p =>
diff --git a/src/sentry/static/sentry/app/components/issueList.jsx b/src/sentry/static/sentry/app/components/issueList.jsx
index 7c089bdf1a..6dafe5585c 100644
--- a/src/sentry/static/sentry/app/components/issueList.jsx
+++ b/src/sentry/static/sentry/app/components/issueList.jsx
@@ -4,7 +4,7 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 
 import {Panel, PanelBody} from 'app/components/panels';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import CompactIssue from 'app/components/compactIssue';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import LoadingError from 'app/components/loadingError';
@@ -17,6 +17,7 @@ const IssueList = createReactClass({
   displayName: 'IssueList',
 
   propTypes: {
+    api: PropTypes.object,
     endpoint: PropTypes.string.isRequired,
     emptyText: PropTypes.string,
     query: PropTypes.object,
@@ -28,8 +29,6 @@ const IssueList = createReactClass({
     noMargin: PropTypes.bool,
   },
 
-  mixins: [ApiMixin],
-
   getDefaultProps() {
     return {
       pagination: true,
@@ -73,8 +72,8 @@ const IssueList = createReactClass({
 
   fetchData() {
     const location = this.props.location;
-    this.api.clear();
-    this.api.request(this.props.endpoint, {
+    this.props.api.clear();
+    this.props.api.request(this.props.endpoint, {
       method: 'GET',
       query: {
         cursor: (location && location.query && location.query.cursor) || '',
@@ -181,4 +180,6 @@ const IssueList = createReactClass({
   },
 });
 
-export default IssueList;
+export {IssueList};
+
+export default withApi(IssueList);
diff --git a/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx b/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx
index 5edcd9e0ef..991db4e895 100644
--- a/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx
+++ b/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx
@@ -1,7 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
-import ApiMixin from 'app/mixins/apiMixin';
 import Tooltip from 'app/components/tooltip';
 import TimeSince from 'app/components/timeSince';
 import {t} from 'app/locale';
@@ -13,8 +12,6 @@ const LatestDeployOrReleaseTime = createReactClass({
     release: PropTypes.object.isRequired,
   },
 
-  mixins: [ApiMixin],
-
   render() {
     const {release} = this.props;
     const earlierDeploysNum = release.totalDeploys - 1;
diff --git a/src/sentry/static/sentry/app/components/missingProjectMembership.jsx b/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
index 46ca341c53..5661124551 100644
--- a/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
+++ b/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
@@ -6,19 +6,18 @@ import createReactClass from 'create-react-class';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import IndicatorStore from 'app/stores/indicatorStore';
 import {joinTeam} from 'app/actionCreators/teams';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import {t} from 'app/locale';
 
 const MissingProjectMembership = createReactClass({
   displayName: 'MissingProjectMembership',
 
   propTypes: {
+    api: PropTypes.object,
     organization: PropTypes.object.isRequired,
     projectId: PropTypes.string.isRequired,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     const {organization, projectId} = this.props;
     const project = organization.projects.find(p => p.slug === projectId);
@@ -36,7 +35,7 @@ const MissingProjectMembership = createReactClass({
     });
 
     joinTeam(
-      this.api,
+      this.props.api,
       {
         orgId: this.props.organization.slug,
         teamId: team.slug,
@@ -132,4 +131,6 @@ const MissingProjectMembership = createReactClass({
   },
 });
 
-export default MissingProjectMembership;
+export {MissingProjectMembership};
+
+export default withApi(MissingProjectMembership);
diff --git a/src/sentry/static/sentry/app/components/modals/sudoModal.jsx b/src/sentry/static/sentry/app/components/modals/sudoModal.jsx
index 5d62ae815b..3c4cc84f85 100644
--- a/src/sentry/static/sentry/app/components/modals/sudoModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/sudoModal.jsx
@@ -5,7 +5,7 @@ import createReactClass from 'create-react-class';
 
 import {t} from 'app/locale';
 import Alert from 'app/components/alert';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import ConfigStore from 'app/stores/configStore';
 import Form from 'app/views/settings/components/forms/form';
@@ -172,13 +172,12 @@ class SudoModal extends React.Component {
 
 const SudoModalContainer = createReactClass({
   displayName: 'SudoModalContainer',
-  mixins: [ApiMixin],
 
   render() {
     const user = ConfigStore.get('user');
-    return <SudoModal {...this.props} user={user} api={this.api} />;
+    return <SudoModal {...this.props} user={user} />;
   },
 });
 
-export default withRouter(SudoModalContainer);
+export default withApi(withRouter(SudoModalContainer));
 export {SudoModal};
diff --git a/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx b/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx
index 1dc1421704..d26924a301 100644
--- a/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx
+++ b/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx
@@ -1,143 +1,146 @@
+import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import {t} from 'app/locale';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import OrganizationState from 'app/mixins/organizationState';
 import TodoItem from 'app/components/onboardingWizard/toDoItem';
 
-const TodoList = createReactClass({
-  displayName: 'TodoList',
-  mixins: [ApiMixin, OrganizationState],
-
-  statics: {
-    TASKS: [
-      {
-        task: 1,
-        title: t('Create a project'),
-        description: t('Create your first Sentry project'),
-        detailedDescription: t(
-          'Follow our quick and easy steps to set up a project and start sending errors.'
-        ),
-        skippable: false,
-        prereq: [],
-        featureLocation: 'organization',
-        location: 'projects/new/',
-        display: true,
-      },
-      {
-        task: 2,
-        title: t('Send your first event'),
-        description: t("Install Sentry's client"),
-        detailedDescription: t('Choose your platform and send an event.'),
-        skippable: false,
-        prereq: [1],
-        featureLocation: 'project',
-        location: 'settings/install/',
-        display: true,
-      },
-      {
-        task: 3,
-        title: t('Invite team member'),
-        description: t('Bring your team aboard'),
-        detailedDescription: t(
-          `Let Sentry help your team triage and assign issues. Improve your workflow
+const TASKS = [
+  {
+    task: 1,
+    title: t('Create a project'),
+    description: t('Create your first Sentry project'),
+    detailedDescription: t(
+      'Follow our quick and easy steps to set up a project and start sending errors.'
+    ),
+    skippable: false,
+    prereq: [],
+    featureLocation: 'organization',
+    location: 'projects/new/',
+    display: true,
+  },
+  {
+    task: 2,
+    title: t('Send your first event'),
+    description: t("Install Sentry's client"),
+    detailedDescription: t('Choose your platform and send an event.'),
+    skippable: false,
+    prereq: [1],
+    featureLocation: 'project',
+    location: 'settings/install/',
+    display: true,
+  },
+  {
+    task: 3,
+    title: t('Invite team member'),
+    description: t('Bring your team aboard'),
+    detailedDescription: t(
+      `Let Sentry help your team triage and assign issues. Improve your workflow
           by unlocking suggested owners, mentions, and assignment.`
-        ),
-        skippable: true,
-        prereq: [],
-        featureLocation: 'organization',
-        location: 'members/',
-        display: true,
-      },
-      {
-        task: 4,
-        title: t('Add a second platform'),
-        description: t('Add Sentry to a second platform'),
-        detailedDescription: t(
-          'Cross platform functionality to support both your frontend and backend.'
-        ),
-        skippable: true,
-        prereq: [1, 2],
-        featureLocation: 'organization',
-        location: 'projects/new/',
-        display: true,
-      },
-      {
-        task: 5,
-        title: t('Add user context'),
-        description: t('Know who is being affected by crashes'),
-        detailedDescription: t(
-          `Unlock features that let you
+    ),
+    skippable: true,
+    prereq: [],
+    featureLocation: 'organization',
+    location: 'members/',
+    display: true,
+  },
+  {
+    task: 4,
+    title: t('Add a second platform'),
+    description: t('Add Sentry to a second platform'),
+    detailedDescription: t(
+      'Cross platform functionality to support both your frontend and backend.'
+    ),
+    skippable: true,
+    prereq: [1, 2],
+    featureLocation: 'organization',
+    location: 'projects/new/',
+    display: true,
+  },
+  {
+    task: 5,
+    title: t('Add user context'),
+    description: t('Know who is being affected by crashes'),
+    detailedDescription: t(
+      `Unlock features that let you
           drill down into the number of users affected by an issue as well as get a broader sense about the quality of the application.`
-        ),
-        skippable: true,
-        prereq: [1, 2],
-        featureLocation: 'absolute',
-        location:
-          'https://docs.sentry.io/enriching-error-data/context/#capturing-the-user',
-        display: true,
-      },
-      {
-        task: 6,
-        title: t('Set up release tracking'),
-        description: t('See what releases are generating errors'),
-        detailedDescription: t(
-          `Set up commits for additional context when determining the cause of an issue
+    ),
+    skippable: true,
+    prereq: [1, 2],
+    featureLocation: 'absolute',
+    location: 'https://docs.sentry.io/enriching-error-data/context/#capturing-the-user',
+    display: true,
+  },
+  {
+    task: 6,
+    title: t('Set up release tracking'),
+    description: t('See what releases are generating errors'),
+    detailedDescription: t(
+      `Set up commits for additional context when determining the cause of an issue
           e.g. suggested owners and resolve issues via commit messages.`
-        ),
-        skippable: true,
-        prereq: [1, 2],
-        featureLocation: 'project',
-        location: 'settings/release-tracking/',
-        display: true,
-      },
-      {
-        task: 7,
-        title: t('Upload source maps'),
-        description: t('Deminify JavaScript stack traces'),
-        detailedDescription: t(
-          `View source code context obtained from stack traces in their
+    ),
+    skippable: true,
+    prereq: [1, 2],
+    featureLocation: 'project',
+    location: 'settings/release-tracking/',
+    display: true,
+  },
+  {
+    task: 7,
+    title: t('Upload source maps'),
+    description: t('Deminify JavaScript stack traces'),
+    detailedDescription: t(
+      `View source code context obtained from stack traces in their
           original untransformed form, which is particularly useful for debugging minified code.`
-        ),
-        skippable: true,
-        prereq: [1, 2], // Is one of the platforms javascript?
-        featureLocation: 'absolute',
-        location: 'https://docs.sentry.io/platforms/javascript/sourcemaps/',
-        display: true,
-      },
-      {
-        task: 8,
-        title: 'User crash reports',
-        description: t('Collect user feedback when your application crashes.'),
-        skippable: true,
-        prereq: [1, 2, 5],
-        featureLocation: 'project',
-        location: 'settings/user-reports/',
-        display: false,
-      },
-      {
-        task: 9,
-        title: t('Set up issue tracking'),
-        description: t('Link to Sentry issues within your issue tracker'),
-        skippable: true,
-        prereq: [1, 2],
-        featureLocation: 'project',
-        location: 'settings/plugins/',
-        display: false,
-      },
-      {
-        task: 10,
-        title: t('Set up an alerts service'),
-        description: t('Receive Sentry alerts in Slack or HipChat'),
-        skippable: true,
-        prereq: [1, 2],
-        featureLocation: 'project',
-        location: 'settings/alerts/',
-        display: false,
-      },
-    ],
+    ),
+    skippable: true,
+    prereq: [1, 2], // Is one of the platforms javascript?
+    featureLocation: 'absolute',
+    location: 'https://docs.sentry.io/platforms/javascript/sourcemaps/',
+    display: true,
+  },
+  {
+    task: 8,
+    title: 'User crash reports',
+    description: t('Collect user feedback when your application crashes.'),
+    skippable: true,
+    prereq: [1, 2, 5],
+    featureLocation: 'project',
+    location: 'settings/user-reports/',
+    display: false,
+  },
+  {
+    task: 9,
+    title: t('Set up issue tracking'),
+    description: t('Link to Sentry issues within your issue tracker'),
+    skippable: true,
+    prereq: [1, 2],
+    featureLocation: 'project',
+    location: 'settings/plugins/',
+    display: false,
+  },
+  {
+    task: 10,
+    title: t('Set up an alerts service'),
+    description: t('Receive Sentry alerts in Slack or HipChat'),
+    skippable: true,
+    prereq: [1, 2],
+    featureLocation: 'project',
+    location: 'settings/alerts/',
+    display: false,
   },
+];
+
+const TodoList = createReactClass({
+  displayName: 'TodoList',
+
+  propTypes: {
+    api: PropTypes.object,
+  },
+
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {
@@ -149,7 +152,7 @@ const TodoList = createReactClass({
   componentWillMount() {
     // Map server task state (who finished what) to TodoList.TASK objects
     const org = this.getOrganization();
-    const tasks = TodoList.TASKS.map(task => {
+    const tasks = TASKS.map(task => {
       for (const server_task of org.onboardingTasks) {
         if (server_task.task == task.task) {
           Object.assign(task, server_task);
@@ -163,7 +166,7 @@ const TodoList = createReactClass({
 
   skipTask(skipped_task) {
     const org = this.getOrganization();
-    this.api.request('/organizations/' + org.slug + '/onboarding-tasks/', {
+    this.props.api.request('/organizations/' + org.slug + '/onboarding-tasks/', {
       method: 'POST',
       data: {task: skipped_task, status: 'skipped'},
       success: () => {
@@ -196,4 +199,6 @@ const TodoList = createReactClass({
   },
 });
 
-export default TodoList;
+export {TodoList, TASKS};
+
+export default withApi(TodoList);
diff --git a/src/sentry/static/sentry/app/components/pluginConfig.jsx b/src/sentry/static/sentry/app/components/pluginConfig.jsx
index 4b384fe663..20f6616205 100644
--- a/src/sentry/static/sentry/app/components/pluginConfig.jsx
+++ b/src/sentry/static/sentry/app/components/pluginConfig.jsx
@@ -5,7 +5,7 @@ import _ from 'lodash';
 import createReactClass from 'create-react-class';
 
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import IndicatorStore from 'app/stores/indicatorStore';
 import LoadingIndicator from 'app/components/loadingIndicator';
@@ -17,6 +17,7 @@ const PluginConfig = createReactClass({
   displayName: 'PluginConfig',
 
   propTypes: {
+    api: PropTypes.object,
     organization: PropTypes.object.isRequired,
     project: PropTypes.object.isRequired,
     data: PropTypes.object.isRequired,
@@ -24,8 +25,6 @@ const PluginConfig = createReactClass({
     enabled: PropTypes.bool,
   },
 
-  mixins: [ApiMixin],
-
   getDefaultProps() {
     return {
       onDisablePlugin: () => {},
@@ -77,7 +76,7 @@ const PluginConfig = createReactClass({
 
   testPlugin() {
     const loadingIndicator = IndicatorStore.add(t('Sending test..'));
-    this.api.request(this.getPluginEndpoint(), {
+    this.props.api.request(this.getPluginEndpoint(), {
       method: 'POST',
       data: {
         test: true,
@@ -161,4 +160,6 @@ const PluginConfig = createReactClass({
   },
 });
 
-export default PluginConfig;
+export {PluginConfig};
+
+export default withApi(PluginConfig);
diff --git a/src/sentry/static/sentry/app/components/projects/bookmarkToggle.jsx b/src/sentry/static/sentry/app/components/projects/bookmarkToggle.jsx
index 9b2bc8c263..2e1836d760 100644
--- a/src/sentry/static/sentry/app/components/projects/bookmarkToggle.jsx
+++ b/src/sentry/static/sentry/app/components/projects/bookmarkToggle.jsx
@@ -1,20 +1,23 @@
+import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
 import classNames from 'classnames';
 import createReactClass from 'create-react-class';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import {update as projectUpdate} from 'app/actionCreators/projects';
 import LatestContextStore from 'app/stores/latestContextStore';
 
 const BookmarkToggle = createReactClass({
   displayName: 'BookmarkToggle',
-
-  mixins: [ApiMixin, Reflux.connect(LatestContextStore, 'latestContext')],
+  propTypes: {
+    api: PropTypes.object,
+  },
+  mixins: [Reflux.connect(LatestContextStore, 'latestContext')],
 
   handleBookmarkClick() {
     const {project, organization} = this.state.latestContext;
     if (project && organization) {
-      projectUpdate(this.api, {
+      projectUpdate(this.props.api, {
         orgId: organization.slug,
         projectId: project.slug,
         data: {
@@ -42,4 +45,6 @@ const BookmarkToggle = createReactClass({
   },
 });
 
-export default BookmarkToggle;
+export {BookmarkToggle};
+
+export default withApi(BookmarkToggle);
diff --git a/src/sentry/static/sentry/app/components/resultGrid.jsx b/src/sentry/static/sentry/app/components/resultGrid.jsx
index c6f6200084..7acf91be7a 100644
--- a/src/sentry/static/sentry/app/components/resultGrid.jsx
+++ b/src/sentry/static/sentry/app/components/resultGrid.jsx
@@ -4,7 +4,7 @@ import createReactClass from 'create-react-class';
 import $ from 'jquery';
 import {browserHistory} from 'react-router';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import DropdownLink from 'app/components/dropdownLink';
 import MenuItem from 'app/components/menuItem';
 import Pagination from 'app/components/pagination';
@@ -142,6 +142,7 @@ const ResultGrid = createReactClass({
   displayName: 'ResultGrid',
 
   propTypes: {
+    api: PropTypes.object,
     columns: PropTypes.array,
     columnsForRow: PropTypes.func,
     defaultSort: PropTypes.string,
@@ -158,8 +159,6 @@ const ResultGrid = createReactClass({
     sortOptions: PropTypes.array,
   },
 
-  mixins: [ApiMixin],
-
   getDefaultProps() {
     return {
       path: '',
@@ -238,7 +237,7 @@ const ResultGrid = createReactClass({
       (this.props.location || {}).query || {}
     );
 
-    this.api.request(this.props.endpoint, {
+    this.props.api.request(this.props.endpoint, {
       method: this.props.method,
       data: queryParams,
       success: (data, _, jqXHR) => {
@@ -383,4 +382,6 @@ const ResultGrid = createReactClass({
   },
 });
 
-export default ResultGrid;
+export {ResultGrid};
+
+export default withApi(ResultGrid);
diff --git a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
index 75172125ce..8f123bdaff 100644
--- a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
@@ -4,7 +4,7 @@ import React from 'react';
 import {analytics} from 'app/utils/analytics';
 import {t} from '../../locale';
 import SidebarPanel from './sidebarPanel';
-import TodoList from '../onboardingWizard/todos';
+import TodoList, {TASKS} from '../onboardingWizard/todos';
 import Tooltip from '../tooltip';
 
 class OnboardingStatus extends React.Component {
@@ -45,7 +45,7 @@ class OnboardingStatus extends React.Component {
     const doneTasks = (org.onboardingTasks || []).filter(
       task => task.status === 'complete' || task.status === 'skipped'
     );
-    const allDisplayedTasks = TodoList.TASKS.filter(task => task.display);
+    const allDisplayedTasks = TASKS.filter(task => task.display);
 
     const percentage = Math.round(
       (doneTasks.length / allDisplayedTasks.length) * 100
diff --git a/src/sentry/static/sentry/app/components/versionHoverCard.jsx b/src/sentry/static/sentry/app/components/versionHoverCard.jsx
index 56848935ab..331187986a 100644
--- a/src/sentry/static/sentry/app/components/versionHoverCard.jsx
+++ b/src/sentry/static/sentry/app/components/versionHoverCard.jsx
@@ -16,19 +16,18 @@ import Hovercard from 'app/components/hovercard';
 import {getShortVersion} from 'app/utils';
 import {t, tct} from 'app/locale';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 
 const VersionHoverCard = createReactClass({
   displayName: 'VersionHoverCard',
 
   propTypes: {
+    api: PropTypes.object,
     version: PropTypes.string.isRequired,
     orgId: PropTypes.string.isRequired,
     projectId: PropTypes.string.isRequired,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       loading: true,
@@ -54,7 +53,7 @@ const VersionHoverCard = createReactClass({
     const releasePath = `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(
       version
     )}/`;
-    this.api.request(releasePath, {
+    this.props.api.request(releasePath, {
       method: 'GET',
       success: data => {
         this.setState({
@@ -71,7 +70,7 @@ const VersionHoverCard = createReactClass({
 
     // repos
     const repoPath = `/organizations/${orgId}/repos/`;
-    this.api.request(repoPath, {
+    this.props.api.request(repoPath, {
       method: 'GET',
       success: data => {
         this.setState({
@@ -90,7 +89,7 @@ const VersionHoverCard = createReactClass({
     const deployPath = `/organizations/${orgId}/releases/${encodeURIComponent(
       version
     )}/deploys/`;
-    this.api.request(deployPath, {
+    this.props.api.request(deployPath, {
       method: 'GET',
       success: data => {
         this.setState({
@@ -248,4 +247,6 @@ const VersionHoverCard = createReactClass({
   },
 });
 
-export default VersionHoverCard;
+export {VersionHoverCard};
+
+export default withApi(VersionHoverCard);
diff --git a/src/sentry/static/sentry/app/views/admin/adminRelays.jsx b/src/sentry/static/sentry/app/views/admin/adminRelays.jsx
index 66e1382b56..5652d2d2a2 100644
--- a/src/sentry/static/sentry/app/views/admin/adminRelays.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminRelays.jsx
@@ -1,3 +1,4 @@
+import PropTypes from 'prop-types';
 /* eslint-disable getsentry/jsx-needs-il8n */
 /* eslint-disable react/jsx-key */
 import React from 'react';
@@ -5,7 +6,7 @@ import moment from 'moment';
 import createReactClass from 'create-react-class';
 
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import withEnvironment from 'app/utils/withEnvironment';
 
 import ResultGrid from 'app/components/resultGrid';
@@ -18,7 +19,9 @@ const prettyDate = function(x) {
 const AdminRelays = createReactClass({
   displayName: 'GroupEventDetails',
 
-  mixins: [ApiMixin],
+  propTypes: {
+    api: PropTypes.object,
+  },
 
   getInitialState() {
     return {
@@ -30,7 +33,7 @@ const AdminRelays = createReactClass({
     this.setState({
       loading: true,
     });
-    this.api.request(`/relays/${key}/`, {
+    this.props.api.request(`/relays/${key}/`, {
       method: 'DELETE',
       success: () => {
         this.setState({
@@ -100,4 +103,6 @@ const AdminRelays = createReactClass({
   },
 });
 
-export default withEnvironment(AdminRelays);
+export {AdminRelays};
+
+export default withApi(withEnvironment(AdminRelays));
diff --git a/src/sentry/static/sentry/app/views/groupDetails/organization/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupDetails/organization/groupEvents.jsx
index 9ba7ce1351..ebcf65bd8f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/organization/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/organization/groupEvents.jsx
@@ -1,3 +1,4 @@
+import PropTypes from 'prop-types';
 import {browserHistory} from 'react-router';
 import React from 'react';
 import createReactClass from 'create-react-class';
@@ -6,7 +7,7 @@ import {pick} from 'lodash';
 import SentryTypes from 'app/sentryTypes';
 import {Panel, PanelBody} from 'app/components/panels';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import EventsTable from 'app/components/eventsTable/eventsTable';
 import OrganizationState from 'app/mixins/organizationState';
@@ -20,10 +21,11 @@ const GroupEvents = createReactClass({
   displayName: 'GroupEvents',
 
   propTypes: {
+    api: PropTypes.object,
     group: SentryTypes.Group.isRequired,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     const queryParams = this.props.location.query;
@@ -79,7 +81,7 @@ const GroupEvents = createReactClass({
       query: this.state.query,
     };
 
-    this.api.request(`/issues/${this.props.params.groupId}/events/`, {
+    this.props.api.request(`/issues/${this.props.params.groupId}/events/`, {
       query,
       method: 'GET',
       success: (data, _, jqXHR) => {
@@ -166,4 +168,6 @@ const GroupEvents = createReactClass({
   },
 });
 
-export default GroupEvents;
+export {GroupEvents};
+
+export default withApi(GroupEvents);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/groupEvents.jsx
index fbb45e395b..37d1674094 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/project/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/project/groupEvents.jsx
@@ -1,3 +1,4 @@
+import PropTypes from 'prop-types';
 import {browserHistory} from 'react-router';
 import React from 'react';
 import createReactClass from 'create-react-class';
@@ -12,7 +13,7 @@ import {
 } from 'app/utils/queryString';
 import {setActiveEnvironmentName} from 'app/actionCreators/environments';
 import {t, tct} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import EventsTable from 'app/components/eventsTable/eventsTable';
 import LoadingError from 'app/components/loadingError';
@@ -27,12 +28,11 @@ const GroupEvents = createReactClass({
   displayName: 'GroupEvents',
 
   propTypes: {
+    api: PropTypes.object,
     group: SentryTypes.Group,
     environment: SentryTypes.Environment,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     const queryParams = this.props.location.query;
 
@@ -127,7 +127,7 @@ const GroupEvents = createReactClass({
       delete query.environment;
     }
 
-    this.api.request(`/issues/${this.props.params.groupId}/events/`, {
+    this.props.api.request(`/issues/${this.props.params.groupId}/events/`, {
       query,
       method: 'GET',
       success: (data, _, jqXHR) => {
@@ -228,4 +228,4 @@ const GroupEvents = createReactClass({
 });
 
 export {GroupEvents}; // For tests
-export default withEnvironmentInQueryString(GroupEvents);
+export default withApi(withEnvironmentInQueryString(GroupEvents));
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/actions.jsx
index a2f22345a2..32f35acc68 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/actions.jsx
@@ -6,7 +6,7 @@ import createReactClass from 'create-react-class';
 import {analytics} from 'app/utils/analytics';
 import {openModal} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import DropdownLink from 'app/components/dropdownLink';
 import Feature from 'app/components/acl/feature';
@@ -110,11 +110,12 @@ const GroupDetailsActions = createReactClass({
   displayName: 'GroupDetailsActions',
 
   propTypes: {
+    api: PropTypes.object,
     group: SentryTypes.Group.isRequired,
     project: SentryTypes.Project,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {ignoreModal: null, shareBusy: false};
@@ -138,7 +139,7 @@ const GroupDetailsActions = createReactClass({
     const org = this.getOrganization();
     const loadingIndicator = IndicatorStore.add(t('Delete event..'));
 
-    this.api.bulkDelete(
+    this.props.api.bulkDelete(
       {
         orgId: org.slug,
         projectId: project.slug,
@@ -159,7 +160,7 @@ const GroupDetailsActions = createReactClass({
     const org = this.getOrganization();
     const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
 
-    this.api.bulkUpdate(
+    this.props.api.bulkUpdate(
       {
         orgId: org.slug,
         projectId: project.slug,
@@ -180,7 +181,7 @@ const GroupDetailsActions = createReactClass({
     this.setState({shareBusy: true});
 
     // not sure why this is a bulkUpdate
-    this.api.bulkUpdate(
+    this.props.api.bulkUpdate(
       {
         orgId: org.slug,
         projectId: project.slug,
@@ -216,7 +217,7 @@ const GroupDetailsActions = createReactClass({
 
     GroupActions.discard(id, group.id);
 
-    this.api.request(`/issues/${group.id}/`, {
+    this.props.api.request(`/issues/${group.id}/`, {
       method: 'PUT',
       data: {discard: true},
       success: response => {
@@ -293,4 +294,6 @@ const GroupDetailsActions = createReactClass({
   },
 });
 
-export default GroupDetailsActions;
+export {GroupDetailsActions};
+
+export default withApi(GroupDetailsActions);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx
index bb8aa2c537..f78375b290 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx
@@ -8,7 +8,7 @@ import {
   removeIndicator,
 } from 'app/actionCreators/indicator';
 import {t, tct, tn} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Avatar from 'app/components/avatar';
 import CommitLink from 'app/components/commitLink';
 import ConfigStore from 'app/stores/configStore';
@@ -213,12 +213,11 @@ const GroupActivity = createReactClass({
 
   // TODO(dcramer): only re-render on group/activity change
   propTypes: {
+    api: PropTypes.object,
     organization: SentryTypes.Organization.isRequired,
     group: SentryTypes.Group,
   },
 
-  mixins: [ApiMixin],
-
   onNoteDelete(item) {
     const {group} = this.props;
 
@@ -231,7 +230,7 @@ const GroupActivity = createReactClass({
 
     addLoadingMessage(t('Removing comment...'));
 
-    this.api.request('/issues/' + group.id + '/comments/' + item.id + '/', {
+    this.props.api.request('/issues/' + group.id + '/comments/' + item.id + '/', {
       method: 'DELETE',
       success: () => {
         removeIndicator();
@@ -327,4 +326,4 @@ const GroupActivity = createReactClass({
 });
 
 export {GroupActivity};
-export default withOrganization(GroupActivity);
+export default withApi(withOrganization(GroupActivity));
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
index 01a11d63f0..db40a80d4c 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
@@ -9,7 +9,7 @@ import createReactClass from 'create-react-class';
 
 import {PageContent} from 'app/styles/organization';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Feature from 'app/components/acl/feature';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import GroupStore from 'app/stores/groupStore';
@@ -25,10 +25,12 @@ const GroupDetails = createReactClass({
   displayName: 'GroupDetails',
 
   propTypes: {
+    api: PropTypes.object,
+
     // Provided in the project version of group details
     project: SentryTypes.Project,
-    organization: SentryTypes.Organization,
 
+    organization: SentryTypes.Organization,
     environments: PropTypes.arrayOf(PropTypes.string),
     enableSnuba: PropTypes.bool,
     showGlobalHeader: PropTypes.bool,
@@ -39,7 +41,7 @@ const GroupDetails = createReactClass({
     location: PropTypes.object,
   },
 
-  mixins: [ApiMixin, Reflux.listenTo(GroupStore, 'onGroupChange')],
+  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange')],
 
   getDefaultProps() {
     return {
@@ -97,7 +99,7 @@ const GroupDetails = createReactClass({
       query.enable_snuba = '1';
     }
 
-    this.api.request(this.getGroupDetailsEndpoint(), {
+    this.props.api.request(this.getGroupDetailsEndpoint(), {
       query,
       success: data => {
         // TODO: Ideally, this would rebuild the route before parameter
@@ -273,4 +275,6 @@ const GroupDetails = createReactClass({
   },
 });
 
-export default GroupDetails;
+export {GroupDetails};
+
+export default withApi(GroupDetails);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/index.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/index.jsx
index b3ff961d6c..fe9f57e6e4 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/index.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/index.jsx
@@ -4,7 +4,6 @@ import createReactClass from 'create-react-class';
 import queryString from 'query-string';
 
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
 import GroupingActions from 'app/actions/groupingActions';
 import GroupingStore from 'app/stores/groupingStore';
 import LoadingError from 'app/components/loadingError';
@@ -18,7 +17,7 @@ const GroupMergedView = createReactClass({
   propTypes: {
     project: SentryTypes.Project,
   },
-  mixins: [ApiMixin, Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
+  mixins: [Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
 
   getInitialState() {
     const queryParams = this.props.location.query;
@@ -81,11 +80,11 @@ const GroupMergedView = createReactClass({
     ]);
   },
 
-  handleCollapse(...args) {
+  handleCollapse() {
     GroupingActions.collapseFingerprints();
   },
 
-  handleUnmerge(...args) {
+  handleUnmerge() {
     GroupingActions.unmerge({
       groupId: this.props.params.groupId,
       loadingMessage: `${t('Unmerging events')}...`,
@@ -131,4 +130,6 @@ const GroupMergedView = createReactClass({
   },
 });
 
+export {GroupMergedView};
+
 export default GroupMergedView;
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
index f7a093054f..e563dcb93c 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
@@ -6,7 +6,7 @@ import createReactClass from 'create-react-class';
 
 import {isUrl, percent} from 'app/utils';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Avatar from 'app/components/avatar';
 import DeviceName from 'app/components/deviceName';
 import ExternalLink from 'app/components/externalLink';
@@ -21,11 +21,11 @@ const GroupTagValues = createReactClass({
   displayName: 'GroupTagValues',
 
   propTypes: {
+    api: PropTypes.object,
     organization: SentryTypes.Organization.isRequired,
     group: SentryTypes.Group.isRequired,
     query: PropTypes.object,
   },
-  mixins: [ApiMixin],
 
   getInitialState() {
     return {
@@ -57,13 +57,16 @@ const GroupTagValues = createReactClass({
     });
 
     const promises = [
-      this.api.requestPromise(`/issues/${params.groupId}/tags/${params.tagKey}/`, {
+      this.props.api.requestPromise(`/issues/${params.groupId}/tags/${params.tagKey}/`, {
         query,
       }),
-      this.api.requestPromise(`/issues/${params.groupId}/tags/${params.tagKey}/values/`, {
-        query,
-        includeAllArgs: true,
-      }),
+      this.props.api.requestPromise(
+        `/issues/${params.groupId}/tags/${params.tagKey}/values/`,
+        {
+          query,
+          includeAllArgs: true,
+        }
+      ),
     ];
 
     try {
@@ -194,4 +197,4 @@ const GroupTagValues = createReactClass({
 });
 
 export {GroupTagValues};
-export default withOrganization(GroupTagValues);
+export default withApi(withOrganization(GroupTagValues));
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
index aa5f83c984..2d1b84c27f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
@@ -3,7 +3,7 @@ import React from 'react';
 import styled from 'react-emotion';
 import createReactClass from 'create-react-class';
 import {Link} from 'react-router';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import {fetchOrgMembers} from 'app/actionCreators/members';
 import AssigneeSelector from 'app/components/assigneeSelector';
 import Count from 'app/components/count';
@@ -26,6 +26,7 @@ const GroupHeader = createReactClass({
   displayName: 'GroupHeader',
 
   propTypes: {
+    api: PropTypes.object,
     group: SentryTypes.Group.isRequired,
     project: SentryTypes.Project,
     params: PropTypes.object,
@@ -36,7 +37,7 @@ const GroupHeader = createReactClass({
     organization: SentryTypes.Organization,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {memberList: null};
@@ -46,7 +47,7 @@ const GroupHeader = createReactClass({
     const {organization} = this.context;
     const {project} = this.props.group;
 
-    fetchOrgMembers(this.api, organization.slug, project.id).then(memberList => {
+    fetchOrgMembers(this.props.api, organization.slug, project.id).then(memberList => {
       const users = memberList.map(member => member.user);
       this.setState({memberList: users});
     });
@@ -57,7 +58,7 @@ const GroupHeader = createReactClass({
     const org = this.context.organization;
     const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
 
-    this.api.bulkUpdate(
+    this.props.api.bulkUpdate(
       {
         orgId: org.slug,
         projectId: group.project.slug,
@@ -267,4 +268,6 @@ const StyledProjectBadge = styled(ProjectBadge)`
   flex-shrink: 0;
 `;
 
-export default GroupHeader;
+export {GroupHeader};
+
+export default withApi(GroupHeader);
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
index 6b022f0070..e1c504047d 100644
--- a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
@@ -4,7 +4,6 @@ import {browserHistory} from 'react-router';
 import styled from 'react-emotion';
 
 import {analytics, amplitude} from 'app/utils/analytics';
-import ApiMixin from 'app/mixins/apiMixin';
 import CreateSampleEvent from 'app/components/createSampleEvent';
 import ProjectContext from 'app/views/projects/projectContext';
 import ProjectDocsContext from 'app/views/projectInstall/docsContext';
@@ -18,7 +17,6 @@ const Configure = createReactClass({
   contextTypes: {
     organization: SentryTypes.Organization,
   },
-  mixins: [ApiMixin],
 
   getInitialState() {
     return {
diff --git a/src/sentry/static/sentry/app/views/organizationContext.jsx b/src/sentry/static/sentry/app/views/organizationContext.jsx
index f36a97f504..266f400ae7 100644
--- a/src/sentry/static/sentry/app/views/organizationContext.jsx
+++ b/src/sentry/static/sentry/app/views/organizationContext.jsx
@@ -10,7 +10,7 @@ import {openSudo} from 'app/actionCreators/modal';
 import {setActiveOrganization} from 'app/actionCreators/organizations';
 import {t} from 'app/locale';
 import Alert from 'app/components/alert';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import ConfigStore from 'app/stores/configStore';
 import GlobalSelectionStore from 'app/stores/globalSelectionStore';
 import HookStore from 'app/stores/hookStore';
@@ -33,6 +33,7 @@ const OrganizationContext = createReactClass({
   displayName: 'OrganizationContext',
 
   propTypes: {
+    api: PropTypes.object,
     includeSidebar: PropTypes.bool,
     useLastOrganization: PropTypes.bool,
     organizationsLoading: PropTypes.bool,
@@ -43,7 +44,7 @@ const OrganizationContext = createReactClass({
     organization: SentryTypes.Organization,
   },
 
-  mixins: [ApiMixin, Reflux.listenTo(ProjectActions.createSuccess, 'onProjectCreation')],
+  mixins: [Reflux.listenTo(ProjectActions.createSuccess, 'onProjectCreation')],
 
   getInitialState() {
     return {
@@ -112,8 +113,8 @@ const OrganizationContext = createReactClass({
     }
 
     const promises = [
-      this.api.requestPromise(this.getOrganizationDetailsEndpoint()),
-      fetchOrganizationEnvironments(this.api, this.getOrganizationSlug()),
+      this.props.api.requestPromise(this.getOrganizationDetailsEndpoint()),
+      fetchOrganizationEnvironments(this.props.api, this.getOrganizationSlug()),
     ];
 
     Promise.all(promises)
@@ -229,7 +230,7 @@ const OrganizationContext = createReactClass({
   },
 });
 
-export default withOrganizations(OrganizationContext);
+export default withApi(withOrganizations(OrganizationContext));
 export {OrganizationContext};
 
 const ErrorWrapper = styled('div')`
diff --git a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectNav.jsx b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectNav.jsx
index ce184da116..12eb9fd9f8 100644
--- a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectNav.jsx
+++ b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectNav.jsx
@@ -7,7 +7,6 @@ import styled from 'react-emotion';
 import space from 'app/styles/space';
 
 import {openCreateTeamModal} from 'app/actionCreators/modal';
-import ApiMixin from 'app/mixins/apiMixin';
 import OrganizationState from 'app/mixins/organizationState';
 import DropdownLink from 'app/components/dropdownLink';
 import MenuItem from 'app/components/menuItem';
@@ -17,7 +16,7 @@ import ProjectSelector from 'app/components/projectHeader/projectSelector';
 import Tooltip from 'app/components/tooltip';
 
 const ProjectNav = createReactClass({
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   render() {
     const org = this.getOrganization();
diff --git a/src/sentry/static/sentry/app/views/organizationStats/index.jsx b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
index c7027ab6eb..47274d991f 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
@@ -4,7 +4,7 @@ import createReactClass from 'create-react-class';
 import PropTypes from 'prop-types';
 import DocumentTitle from 'react-document-title';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import OrganizationState from 'app/mixins/organizationState';
 
 import LazyLoad from 'app/components/lazyLoad';
@@ -12,9 +12,10 @@ import LazyLoad from 'app/components/lazyLoad';
 const OrganizationStatsContainer = createReactClass({
   displayName: 'OrganizationStatsContainer ',
   propTypes: {
+    api: PropTypes.object,
     routes: PropTypes.array,
   },
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     const until = Math.floor(new Date().getTime() / 1000);
@@ -82,7 +83,7 @@ const OrganizationStatsContainer = createReactClass({
   },
 
   fetchProjectData() {
-    this.api.request(this.getOrganizationProjectsEndpoint(), {
+    this.props.api.request(this.getOrganizationProjectsEndpoint(), {
       query: this.props.location.query,
       success: (data, textStatus, jqxhr) => {
         const projectMap = {};
@@ -119,7 +120,7 @@ const OrganizationStatsContainer = createReactClass({
     const statEndpoint = this.getOrganizationStatsEndpoint();
 
     $.each(this.state.rawOrgData, statName => {
-      this.api.request(statEndpoint, {
+      this.props.api.request(statEndpoint, {
         query: {
           since: this.state.querySince,
           until: this.state.queryUntil,
@@ -146,7 +147,7 @@ const OrganizationStatsContainer = createReactClass({
     });
 
     $.each(this.state.rawProjectData, statName => {
-      this.api.request(statEndpoint, {
+      this.props.api.request(statEndpoint, {
         query: {
           since: this.state.querySince,
           until: this.state.queryUntil,
@@ -267,4 +268,6 @@ const OrganizationStatsContainer = createReactClass({
   },
 });
 
-export default OrganizationStatsContainer;
+export {OrganizationStatsContainer};
+
+export default withApi(OrganizationStatsContainer);
diff --git a/src/sentry/static/sentry/app/views/projectChooser.jsx b/src/sentry/static/sentry/app/views/projectChooser.jsx
index 8c34346cfc..9a8fe61e1b 100644
--- a/src/sentry/static/sentry/app/views/projectChooser.jsx
+++ b/src/sentry/static/sentry/app/views/projectChooser.jsx
@@ -10,7 +10,7 @@ import Link from 'app/components/link';
 import OrganizationState from 'app/mixins/organizationState';
 import {sortProjects} from 'app/utils';
 import theme from 'app/utils/theme';
-import TodoList from 'app/components/onboardingWizard/todos';
+import {TASKS} from 'app/components/onboardingWizard/todos';
 import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import ProjectLabel from 'app/components/projectLabel';
@@ -36,7 +36,7 @@ const ProjectChooser = createReactClass({
   redirectNoMultipleProjects() {
     const org = this.getOrganization();
     const projects = org.projects;
-    const tasks = TodoList.TASKS.filter(
+    const tasks = TASKS.filter(
       task_inst => task_inst.task === this.props.location.query.task
     );
 
@@ -50,7 +50,7 @@ const ProjectChooser = createReactClass({
 
   render() {
     const org = this.getOrganization();
-    const task = TodoList.TASKS.filter(
+    const task = TASKS.filter(
       task_inst => task_inst.task == this.props.location.query.task
     )[0];
 
diff --git a/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx b/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
index d300393886..d1f8b6e19c 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
@@ -4,7 +4,7 @@ import styled from 'react-emotion';
 import createReactClass from 'create-react-class';
 import moment from 'moment';
 import SentryTypes from 'app/sentryTypes';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import BarChart from 'app/components/barChart';
 import DynamicWrapper from 'app/components/dynamicWrapper';
 import LoadingError from 'app/components/loadingError';
@@ -15,12 +15,13 @@ const ProjectChart = createReactClass({
   displayName: 'ProjectChart',
 
   propTypes: {
+    api: PropTypes.object,
     dateSince: PropTypes.number.isRequired,
     resolution: PropTypes.string.isRequired,
     environment: SentryTypes.Environment,
   },
 
-  mixins: [ApiMixin, ProjectState],
+  mixins: [ProjectState],
 
   getInitialState() {
     return {
@@ -78,7 +79,7 @@ const ProjectChart = createReactClass({
       statsQuery.environment = this.state.environment.name;
       releasesQuery.environment = this.state.environment.name;
     }
-    this.api.request(this.getStatsEndpoint(), {
+    this.props.api.request(this.getStatsEndpoint(), {
       query: statsQuery,
       success: data => {
         this.setState({
@@ -95,7 +96,7 @@ const ProjectChart = createReactClass({
       },
     });
 
-    this.api.request(this.getProjectReleasesEndpoint(), {
+    this.props.api.request(this.getProjectReleasesEndpoint(), {
       query: releasesQuery,
       success: (data, _, jqXHR) => {
         this.setState({
@@ -157,4 +158,6 @@ const StyledBarChart = styled(BarChart)`
   background: #fff;
 `;
 
-export default ProjectChart;
+export {ProjectChart};
+
+export default withApi(ProjectChart);
diff --git a/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx b/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx
index 1654ca0dfe..62371661e6 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx
@@ -5,7 +5,7 @@ import queryString from 'query-string';
 
 import {Panel, PanelHeader, PanelBody} from 'app/components/panels';
 import {t, tct} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import SentryTypes from 'app/sentryTypes';
@@ -16,13 +16,12 @@ const EventList = createReactClass({
   displayName: 'EventList',
 
   propTypes: {
+    api: PropTypes.object,
     type: PropTypes.oneOf(['new', 'priority']).isRequired,
     environment: SentryTypes.Environment,
     dateSince: PropTypes.number,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       groupList: [],
@@ -83,7 +82,7 @@ const EventList = createReactClass({
     const endpoint = this.getEndpoint();
     const minutes = this.getMinutes();
 
-    this.api.request(endpoint, {
+    this.props.api.request(endpoint, {
       query: {
         limit: 5,
         minutes,
@@ -152,4 +151,6 @@ const EventList = createReactClass({
   },
 });
 
-export default EventList;
+export {EventList};
+
+export default withApi(EventList);
diff --git a/src/sentry/static/sentry/app/views/projectEnvironments.jsx b/src/sentry/static/sentry/app/views/projectEnvironments.jsx
index 1fe3873595..751be21352 100644
--- a/src/sentry/static/sentry/app/views/projectEnvironments.jsx
+++ b/src/sentry/static/sentry/app/views/projectEnvironments.jsx
@@ -19,7 +19,7 @@ import {
 import {t, tct} from 'app/locale';
 import {update} from 'app/actionCreators/projects';
 import Access from 'app/components/acl/access';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import EnvironmentStore from 'app/stores/environmentStore';
@@ -37,11 +37,12 @@ import space from 'app/styles/space';
 
 const ProjectEnvironments = createReactClass({
   propTypes: {
+    api: PropTypes.object,
     routes: PropTypes.array,
     params: PropTypes.object,
   },
 
-  mixins: [ApiMixin, Reflux.listenTo(EnvironmentStore, 'onEnvironmentsChange')],
+  mixins: [Reflux.listenTo(EnvironmentStore, 'onEnvironmentsChange')],
 
   getInitialState() {
     const isHidden = this.props.location.pathname.endsWith('hidden/');
@@ -92,7 +93,7 @@ const ProjectEnvironments = createReactClass({
 
   fetchData(hidden) {
     const {orgId, projectId} = this.props.params;
-    this.api.request(`/projects/${orgId}/${projectId}/environments/`, {
+    this.props.api.request(`/projects/${orgId}/${projectId}/environments/`, {
       query: {
         visibility: hidden ? 'hidden' : 'visible',
       },
@@ -105,7 +106,7 @@ const ProjectEnvironments = createReactClass({
 
   fetchProjectDetails() {
     const {orgId, projectId} = this.props.params;
-    this.api.request(`/projects/${orgId}/${projectId}/`, {
+    this.props.api.request(`/projects/${orgId}/${projectId}/`, {
       success: project => {
         this.setState({project});
       },
@@ -126,7 +127,7 @@ const ProjectEnvironments = createReactClass({
   toggleEnv(env, shouldHide) {
     const {orgId, projectId} = this.props.params;
 
-    this.api.request(
+    this.props.api.request(
       `/projects/${orgId}/${projectId}/environments/${env.urlRoutingName}/`,
       {
         method: 'PUT',
@@ -173,7 +174,7 @@ const ProjectEnvironments = createReactClass({
     addLoadingMessage();
 
     // Update project details
-    update(this.api, {
+    update(this.props.api, {
       ...this.props.params,
       data,
     }).then(
@@ -435,4 +436,5 @@ const InvalidDefaultEnvironmentIcon = styled(props => (
 ))`
   color: ${p => p.theme.error};
 `;
-export default ProjectEnvironments;
+export {ProjectEnvironments};
+export default withApi(ProjectEnvironments);
diff --git a/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx b/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
index 547479a3a5..4700650f5d 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
@@ -1,8 +1,9 @@
+import PropTypes from 'prop-types';
 import React from 'react';
 
 import createReactClass from 'create-react-class';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import ProjectState from 'app/mixins/projectState';
 
 import LoadingError from 'app/components/loadingError';
@@ -10,7 +11,10 @@ import LoadingIndicator from 'app/components/loadingIndicator';
 
 const ProjectDocsContext = createReactClass({
   displayName: 'ProjectDocsContext',
-  mixins: [ApiMixin, ProjectState],
+  propTypes: {
+    api: PropTypes.object,
+  },
+  mixins: [ProjectState],
 
   getInitialState() {
     return {
@@ -32,7 +36,7 @@ const ProjectDocsContext = createReactClass({
     const orgId = org.slug;
     const projectId = this.context.project.slug;
 
-    this.api.request(`/projects/${orgId}/${projectId}/docs/`, {
+    this.props.api.request(`/projects/${orgId}/${projectId}/docs/`, {
       success: data => {
         this.setState({
           loading: false,
@@ -57,4 +61,6 @@ const ProjectDocsContext = createReactClass({
   },
 });
 
-export default ProjectDocsContext;
+export {ProjectDocsContext};
+
+export default withApi(ProjectDocsContext);
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index d9f6c662e2..694366f3ba 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -7,7 +7,7 @@ import styled from 'react-emotion';
 
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import {t, tct} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import Link from 'app/components/link';
 import LoadingError from 'app/components/loadingError';
@@ -21,15 +21,16 @@ const ProjectInstallPlatform = createReactClass({
   displayName: 'ProjectInstallPlatform',
 
   propTypes: {
+    api: PropTypes.object,
     organization: SentryTypes.Organization.isRequired,
     project: SentryTypes.Project.isRequired,
+
     // eslint-disable-next-line react/no-unused-prop-types
     platformData: PropTypes.object.isRequired,
+
     linkPath: PropTypes.func,
   },
 
-  mixins: [ApiMixin],
-
   getDefaultProps() {
     return {
       linkPath: (orgId, projectId, platform) =>
@@ -90,7 +91,7 @@ const ProjectInstallPlatform = createReactClass({
 
   fetchData() {
     const {orgId, projectId, platform} = this.props.params;
-    this.api.request(`/projects/${orgId}/${projectId}/docs/${platform}/`, {
+    this.props.api.request(`/projects/${orgId}/${projectId}/docs/${platform}/`, {
       success: data => {
         this.setState({
           loading: false,
@@ -208,7 +209,7 @@ const ProjectInstallPlatform = createReactClass({
 });
 
 export {ProjectInstallPlatform};
-export default withOrganization(ProjectInstallPlatform);
+export default withApi(withOrganization(ProjectInstallPlatform));
 
 const DocumentationWrapper = styled('div')`
   p {
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index c3a5e57f4d..fc1d49238d 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -3,7 +3,7 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Badge from 'app/components/badge';
 import ListLink from 'app/components/listLink';
 import LoadingError from 'app/components/loadingError';
@@ -16,6 +16,7 @@ const ProjectSettings = createReactClass({
   displayName: 'ProjectSettings',
 
   propTypes: {
+    api: PropTypes.object,
     setProjectNavSection: PropTypes.func,
   },
 
@@ -24,7 +25,7 @@ const ProjectSettings = createReactClass({
     organization: PropTypes.object,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {
@@ -60,7 +61,7 @@ const ProjectSettings = createReactClass({
   fetchData() {
     const params = this.props.params;
 
-    this.api.request(`/projects/${params.orgId}/${params.projectId}/`, {
+    this.props.api.request(`/projects/${params.orgId}/${params.projectId}/`, {
       success: data => {
         this.setState({
           project: data,
@@ -192,4 +193,6 @@ const ProjectSettings = createReactClass({
   },
 });
 
-export default ProjectSettings;
+export {ProjectSettings};
+
+export default withApi(ProjectSettings);
diff --git a/src/sentry/static/sentry/app/views/projects/projectContext.jsx b/src/sentry/static/sentry/app/views/projects/projectContext.jsx
index 9e70135ccb..fcfb2c4c6d 100644
--- a/src/sentry/static/sentry/app/views/projects/projectContext.jsx
+++ b/src/sentry/static/sentry/app/views/projects/projectContext.jsx
@@ -9,7 +9,7 @@ import {loadEnvironments} from 'app/actionCreators/environments';
 import {fetchOrgMembers} from 'app/actionCreators/members';
 import {setActiveProject} from 'app/actionCreators/projects';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import MemberListStore from 'app/stores/memberListStore';
@@ -36,10 +36,13 @@ const ProjectContext = createReactClass({
   displayName: 'ProjectContext',
 
   propTypes: {
+    api: PropTypes.object,
+
     /**
      * If true, this will not change `state.loading` during `fetchData` phase
      */
     skipReload: PropTypes.bool,
+
     projects: PropTypes.arrayOf(SentryTypes.Project),
     projectId: PropTypes.string,
     orgId: PropTypes.string,
@@ -51,7 +54,6 @@ const ProjectContext = createReactClass({
   },
 
   mixins: [
-    ApiMixin,
     Reflux.connect(MemberListStore, 'memberList'),
     Reflux.listenTo(ProjectsStore, 'onProjectChange'),
     OrganizationState,
@@ -161,9 +163,11 @@ const ProjectContext = createReactClass({
 
     if (activeProject && hasAccess) {
       setActiveProject(null);
-      const projectRequest = this.api.requestPromise(`/projects/${orgId}/${projectId}/`);
+      const projectRequest = this.props.api.requestPromise(
+        `/projects/${orgId}/${projectId}/`
+      );
 
-      const environmentRequest = this.api.requestPromise(
+      const environmentRequest = this.props.api.requestPromise(
         this.getEnvironmentListEndpoint()
       );
 
@@ -195,7 +199,7 @@ const ProjectContext = createReactClass({
         }
       );
 
-      fetchOrgMembers(this.api, orgId, activeProject.id);
+      fetchOrgMembers(this.props.api, orgId, activeProject.id);
     } else if (activeProject && !activeProject.isMember) {
       this.setState({
         loading: false,
@@ -204,7 +208,7 @@ const ProjectContext = createReactClass({
       });
     } else {
       // The request is a 404 or other error
-      this.api.request(`/projects/${orgId}/${projectId}/`, {
+      this.props.api.request(`/projects/${orgId}/${projectId}/`, {
         error: () => {
           this.setState({
             loading: false,
@@ -273,4 +277,4 @@ const ProjectContext = createReactClass({
 
 export {ProjectContext};
 
-export default withProjects(withRouter(ProjectContext));
+export default withApi(withProjects(withRouter(ProjectContext)));
diff --git a/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx b/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx
index a47e399af1..2a43b4d1f2 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx
@@ -4,7 +4,7 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 import {browserHistory} from 'react-router';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
@@ -19,6 +19,7 @@ const ProjectReleaseDetails = createReactClass({
   displayName: 'ProjectReleaseDetails',
 
   propTypes: {
+    api: PropTypes.object,
     setProjectNavSection: PropTypes.func,
     environment: SentryTypes.Environment,
   },
@@ -31,7 +32,7 @@ const ProjectReleaseDetails = createReactClass({
     release: PropTypes.object,
   },
 
-  mixins: [ApiMixin, ProjectState],
+  mixins: [ProjectState],
 
   getInitialState() {
     return {
@@ -85,7 +86,7 @@ const ProjectReleaseDetails = createReactClass({
     const {environment} = this.props;
     const query = environment ? {environment: environment.name} : {};
 
-    this.api.request(this.getReleaseDetailsEndpoint(), {
+    this.props.api.request(this.getReleaseDetailsEndpoint(), {
       query,
       success: data => {
         this.setState({
@@ -135,4 +136,6 @@ const ProjectReleaseDetails = createReactClass({
   },
 });
 
-export default withEnvironmentInQueryString(ProjectReleaseDetails);
+export {ProjectReleaseDetails};
+
+export default withApi(withEnvironmentInQueryString(ProjectReleaseDetails));
diff --git a/src/sentry/static/sentry/app/views/releases/detail/project/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/detail/project/releaseOverview.jsx
index e1949f46cf..11c3863381 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/project/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/project/releaseOverview.jsx
@@ -11,7 +11,7 @@ import CommitAuthorStats from 'app/components/commitAuthorStats';
 import ReleaseProjectStatSparkline from 'app/components/releaseProjectStatSparkline';
 import RepositoryFileSummary from 'app/components/repositoryFileSummary';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 
 import {t} from 'app/locale';
 import SentryTypes from 'app/sentryTypes';
@@ -26,6 +26,7 @@ const ReleaseOverview = createReactClass({
   displayName: 'ReleaseOverview',
 
   propTypes: {
+    api: PropTypes.object,
     environment: SentryTypes.Environment,
   },
 
@@ -33,7 +34,7 @@ const ReleaseOverview = createReactClass({
     release: PropTypes.object,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {
@@ -71,7 +72,7 @@ const ReleaseOverview = createReactClass({
     const path = `/organizations/${orgId}/releases/${encodeURIComponent(
       version
     )}/commitfiles/`;
-    this.api.request(path, {
+    this.props.api.request(path, {
       method: 'GET',
       data: query,
       success: (data, _, jqXHR) => {
@@ -97,7 +98,7 @@ const ReleaseOverview = createReactClass({
       : {};
 
     const path = `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`;
-    this.api.request(path, {
+    this.props.api.request(path, {
       query,
       method: 'GET',
       success: (data, _, jqXHR) => {
@@ -119,7 +120,7 @@ const ReleaseOverview = createReactClass({
     const path = `/organizations/${orgId}/releases/${encodeURIComponent(
       version
     )}/deploys/`;
-    this.api.request(path, {
+    this.props.api.request(path, {
       method: 'GET',
       success: (data, _, jqXHR) => {
         this.setState({
@@ -142,7 +143,7 @@ const ReleaseOverview = createReactClass({
       : {};
 
     const path = `/organizations/${orgId}/repos/`;
-    this.api.request(path, {
+    this.props.api.request(path, {
       method: 'GET',
       query,
       success: (data, _, jqXHR) => {
@@ -253,4 +254,6 @@ const ReleaseOverview = createReactClass({
   },
 });
 
-export default withEnvironmentInQueryString(ReleaseOverview);
+export {ReleaseOverview};
+
+export default withApi(withEnvironmentInQueryString(ReleaseOverview));
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseCommits.jsx b/src/sentry/static/sentry/app/views/releases/detail/shared/releaseCommits.jsx
index bdab6de4c0..583aa36043 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseCommits.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/shared/releaseCommits.jsx
@@ -1,3 +1,4 @@
+import PropTypes from 'prop-types';
 import {omit} from 'lodash';
 import React from 'react';
 import createReactClass from 'create-react-class';
@@ -5,7 +6,7 @@ import createReactClass from 'create-react-class';
 import {Panel, PanelHeader, PanelBody} from 'app/components/panels';
 import {URL_PARAM} from 'app/components/organizations/globalSelectionHeader/constants';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import CommitRow from 'app/components/commitRow';
 import DropdownLink from 'app/components/dropdownLink';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
@@ -15,7 +16,9 @@ import MenuItem from 'app/components/menuItem';
 
 const ReleaseCommits = createReactClass({
   displayName: 'ReleaseCommits',
-  mixins: [ApiMixin],
+  propTypes: {
+    api: PropTypes.object,
+  },
 
   getInitialState() {
     return {
@@ -27,7 +30,7 @@ const ReleaseCommits = createReactClass({
   },
 
   componentDidMount() {
-    this.api.request(this.getPath(), {
+    this.props.api.request(this.getPath(), {
       method: 'GET',
       // We need to omit global selection header url params because they are not supported
       data: omit(this.props.location.query, Object.values(URL_PARAM)),
@@ -169,4 +172,6 @@ const ReleaseCommits = createReactClass({
   },
 });
 
-export default ReleaseCommits;
+export {ReleaseCommits};
+
+export default withApi(ReleaseCommits);
diff --git a/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
index 4aab8e9806..617bc15af0 100644
--- a/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
@@ -8,7 +8,7 @@ import qs from 'query-string';
 
 import {analytics} from 'app/utils/analytics';
 import SentryTypes from 'app/sentryTypes';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import Pagination from 'app/components/pagination';
@@ -31,6 +31,7 @@ const ProjectReleases = createReactClass({
   displayName: 'ProjectReleases',
 
   propTypes: {
+    api: PropTypes.object,
     setProjectNavSection: PropTypes.func,
     environment: SentryTypes.Environment,
   },
@@ -40,8 +41,6 @@ const ProjectReleases = createReactClass({
     project: SentryTypes.Project,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     const queryParams = this.props.location.query;
 
@@ -135,7 +134,7 @@ const ProjectReleases = createReactClass({
       delete query.environment;
     }
 
-    this.api.request(url, {
+    this.props.api.request(url, {
       query,
       success: (data, _, jqXHR) => {
         this.setState({
@@ -250,4 +249,4 @@ const ProjectReleases = createReactClass({
 });
 
 export {ProjectReleases}; // For tests
-export default withEnvironmentInQueryString(ProjectReleases);
+export default withApi(withEnvironmentInQueryString(ProjectReleases));
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountAvatar.jsx b/src/sentry/static/sentry/app/views/settings/account/accountAvatar.jsx
index 4a18987d14..fc7116d223 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountAvatar.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountAvatar.jsx
@@ -5,7 +5,7 @@ import styled from 'react-emotion';
 
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Avatar from 'app/components/avatar';
 import AvatarCropper from 'app/components/avatarCropper';
 import LoadingError from 'app/components/loadingError';
@@ -19,13 +19,12 @@ const AccountAvatar = createReactClass({
   displayName: 'AccountAvatar',
 
   propTypes: {
+    api: PropTypes.object,
     userId: PropTypes.number,
     user: SentryTypes.User,
     onSave: PropTypes.func,
   },
 
-  mixins: [ApiMixin],
-
   getDefaultProps() {
     return {
       onSave: () => {},
@@ -77,7 +76,7 @@ const AccountAvatar = createReactClass({
     if (this.state.dataUrl) {
       avatarPhoto = this.state.dataUrl.split(',')[1];
     }
-    this.api.request(this.getEndpoint(), {
+    this.props.api.request(this.getEndpoint(), {
       method: 'PUT',
       data: {
         avatar_photo: avatarPhoto,
@@ -185,4 +184,6 @@ const AvatarUploadSection = styled('div')`
   margin-top: 1em;
 `;
 
-export default AccountAvatar;
+export {AccountAvatar};
+
+export default withApi(AccountAvatar);
diff --git a/src/sentry/static/sentry/app/views/settings/account/apiApplications.jsx b/src/sentry/static/sentry/app/views/settings/account/apiApplications.jsx
index 0ca29b08e6..f03fe917b8 100644
--- a/src/sentry/static/sentry/app/views/settings/account/apiApplications.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/apiApplications.jsx
@@ -12,7 +12,7 @@ import {
   removeIndicator,
 } from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
@@ -26,12 +26,11 @@ const ApiApplicationRow = createReactClass({
   displayName: 'ApiApplicationRow',
 
   propTypes: {
+    api: PropTypes.object,
     app: PropTypes.object.isRequired,
     onRemove: PropTypes.func.isRequired,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       loading: false,
@@ -51,7 +50,7 @@ const ApiApplicationRow = createReactClass({
       },
       () => {
         const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
-        this.api.request(`/api-applications/${app.id}/`, {
+        this.props.api.request(`/api-applications/${app.id}/`, {
           method: 'DELETE',
           success: data => {
             IndicatorStore.remove(loadingIndicator);
@@ -124,7 +123,7 @@ class ApiApplications extends AsyncView {
 
   handleCreateApplication = () => {
     const indicator = addLoadingMessage();
-    this.api.request('/api-applications/', {
+    this.props.api.request('/api-applications/', {
       method: 'POST',
       success: app => {
         addSuccessMessage(t('Created a new API Application'));
@@ -195,4 +194,6 @@ class ApiApplications extends AsyncView {
   }
 }
 
-export default ApiApplications;
+export {ApiApplications};
+
+export default withApi(ApiApplications);
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
index 304266f434..5726232609 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
@@ -2,8 +2,6 @@ import styled from 'react-emotion';
 import React from 'react';
 import createReactClass from 'create-react-class';
 
-import ApiMixin from 'app/mixins/apiMixin';
-
 import BookmarkStar from 'app/components/bookmarkStar';
 import Link from 'app/components/link';
 import ProjectLabel from 'app/components/projectLabel';
@@ -18,8 +16,6 @@ const ProjectItem = createReactClass({
     organization: SentryTypes.Organization,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       isBookmarked: this.props.project.isBookmarked,
diff --git a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
index 81db31a448..e3bfb1f7e8 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
@@ -11,7 +11,7 @@ import {
   updateOrganization,
 } from 'app/actionCreators/organizations';
 import {t, tct} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Field from 'app/views/settings/components/forms/field';
 import LinkWithConfirmation from 'app/components/linkWithConfirmation';
 import LoadingError from 'app/components/loadingError';
@@ -25,11 +25,10 @@ const OrganizationGeneralSettings = createReactClass({
   displayName: 'OrganizationGeneralSettings',
 
   propTypes: {
+    api: PropTypes.object,
     routes: PropTypes.arrayOf(PropTypes.object),
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       loading: true,
@@ -51,7 +50,7 @@ const OrganizationGeneralSettings = createReactClass({
 
   fetchData() {
     return new Promise((resolve, reject) => {
-      this.api.request(`/organizations/${this.props.params.orgId}/`, {
+      this.props.api.request(`/organizations/${this.props.params.orgId}/`, {
         method: 'GET',
         success: data => {
           resolve(data);
@@ -70,7 +69,7 @@ const OrganizationGeneralSettings = createReactClass({
     }
 
     addLoadingMessage();
-    removeAndRedirectToRemainingOrganization(this.api, {
+    removeAndRedirectToRemainingOrganization(this.props.api, {
       orgId: this.props.params.orgId,
       successMessage: `${data.name} is queued for deletion.`,
       errorMessage: `Error removing the ${data && data.name} organization`,
@@ -169,4 +168,6 @@ const OrganizationGeneralSettings = createReactClass({
   },
 });
 
-export default OrganizationGeneralSettings;
+export {OrganizationGeneralSettings};
+
+export default withApi(OrganizationGeneralSettings);
diff --git a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
index 8aebef6a04..36076c17d5 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
@@ -4,7 +4,6 @@ import createReactClass from 'create-react-class';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
 import {updateOrganization} from 'app/actionCreators/organizations';
-import ApiMixin from 'app/mixins/apiMixin';
 import AvatarChooser from 'app/components/avatarChooser';
 import Form from 'app/views/settings/components/forms/form';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
@@ -23,7 +22,7 @@ const OrganizationSettingsForm = createReactClass({
     onSave: PropTypes.func.isRequired,
   },
 
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   render() {
     const {initialData, orgId, onSave, access} = this.props;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
index 3f366eee47..73242ae365 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
@@ -7,7 +7,7 @@ import * as Sentry from '@sentry/browser';
 
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import {t, tct} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import ConfigStore from 'app/stores/configStore';
 import LoadingIndicator from 'app/components/loadingIndicator';
@@ -51,9 +51,10 @@ const STATIC_ROLE_LIST = [
 const InviteMember = createReactClass({
   displayName: 'InviteMember',
   propTypes: {
+    api: PropTypes.object,
     router: PropTypes.object,
   },
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [OrganizationState],
 
   getInitialState() {
     const {teams} = this.getOrganization();
@@ -76,7 +77,7 @@ const InviteMember = createReactClass({
     const {slug} = this.getOrganization();
     const {isSuperuser} = ConfigStore.get('user');
 
-    this.api.request(`/organizations/${slug}/members/me/`, {
+    this.props.api.request(`/organizations/${slug}/members/me/`, {
       method: 'GET',
       success: resp => {
         const {roles} = resp || {};
@@ -143,7 +144,7 @@ const InviteMember = createReactClass({
     const {selectedTeams, selectedRole} = this.state;
 
     return new Promise((resolve, reject) => {
-      this.api.request(`/organizations/${slug}/members/`, {
+      this.props.api.request(`/organizations/${slug}/members/`, {
         method: 'POST',
         data: {
           email,
@@ -273,4 +274,4 @@ const InviteMember = createReactClass({
 });
 
 export {InviteMember};
-export default withRouter(InviteMember);
+export default withApi(withRouter(InviteMember));
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
index 60dc74f47b..d97fffa015 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
@@ -7,7 +7,7 @@ import createReactClass from 'create-react-class';
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import {joinTeam, leaveTeam} from 'app/actionCreators/teams';
 import {t, tct, tn} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import {PanelItem} from 'app/components/panels';
 import IdBadge from 'app/components/idBadge';
 
@@ -17,6 +17,7 @@ const AllTeamsRow = createReactClass({
   displayName: 'AllTeamsRow',
 
   propTypes: {
+    api: PropTypes.object,
     urlPrefix: PropTypes.string.isRequired,
     access: PropTypes.object.isRequired,
     organization: PropTypes.object.isRequired,
@@ -24,8 +25,6 @@ const AllTeamsRow = createReactClass({
     openMembership: PropTypes.bool.isRequired,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       loading: false,
@@ -41,7 +40,7 @@ const AllTeamsRow = createReactClass({
     });
 
     joinTeam(
-      this.api,
+      this.props.api,
       {
         orgId: organization.slug,
         teamId: team.slug,
@@ -81,7 +80,7 @@ const AllTeamsRow = createReactClass({
     });
 
     leaveTeam(
-      this.api,
+      this.props.api,
       {
         orgId: organization.slug,
         teamId: team.slug,
@@ -156,4 +155,6 @@ const AllTeamsRow = createReactClass({
   },
 });
 
-export default AllTeamsRow;
+export {AllTeamsRow};
+
+export default withApi(AllTeamsRow);
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx
index 1eb7f5f716..065e72da2c 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx
@@ -5,7 +5,7 @@ import Reflux from 'reflux';
 
 import {loadStats} from 'app/actionCreators/projects';
 import {sortArray} from 'app/utils';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import OrganizationState from 'app/mixins/organizationState';
 import ProjectsStore from 'app/stores/projectsStore';
 import TeamStore from 'app/stores/teamStore';
@@ -15,11 +15,11 @@ const OrganizationTeamsContainer = createReactClass({
   displayName: 'OrganizationTeamsContainer',
 
   propTypes: {
+    api: PropTypes.object,
     routes: PropTypes.arrayOf(PropTypes.object),
   },
 
   mixins: [
-    ApiMixin,
     OrganizationState,
     Reflux.listenTo(TeamStore, 'onTeamListChange'),
     Reflux.listenTo(ProjectsStore, 'onProjectListChange'),
@@ -42,7 +42,7 @@ const OrganizationTeamsContainer = createReactClass({
   },
 
   fetchStats() {
-    loadStats(this.api, {
+    loadStats(this.props.api, {
       orgId: this.props.params.orgId,
       query: {
         since: new Date().getTime() / 1000 - 3600 * 24,
@@ -98,4 +98,6 @@ const OrganizationTeamsContainer = createReactClass({
   },
 });
 
-export default OrganizationTeamsContainer;
+export {OrganizationTeamsContainer};
+
+export default withApi(OrganizationTeamsContainer);
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
index c6e2eee3ef..11a5da4024 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
@@ -6,7 +6,7 @@ import Reflux from 'reflux';
 
 import {fetchTeamDetails} from 'app/actionCreators/teams';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import IdBadge from 'app/components/idBadge';
 import ListLink from 'app/components/listLink';
 import LoadingError from 'app/components/loadingError';
@@ -19,10 +19,11 @@ const TeamDetails = createReactClass({
   displayName: 'TeamDetails',
 
   propTypes: {
+    api: PropTypes.object,
     routes: PropTypes.array,
   },
 
-  mixins: [ApiMixin, Reflux.listenTo(TeamStore, 'onTeamStoreUpdate')],
+  mixins: [Reflux.listenTo(TeamStore, 'onTeamStoreUpdate')],
 
   getInitialState() {
     const team = TeamStore.getBySlug(this.props.params.teamId);
@@ -62,7 +63,7 @@ const TeamDetails = createReactClass({
   },
 
   fetchData() {
-    fetchTeamDetails(this.api, this.props.params);
+    fetchTeamDetails(this.props.api, this.props.params);
   },
 
   onTeamChange(data) {
@@ -114,4 +115,6 @@ const TeamDetails = createReactClass({
   },
 });
 
-export default TeamDetails;
+export {TeamDetails};
+
+export default withApi(TeamDetails);
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
index 0877c360a5..5257e9c284 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
@@ -1,9 +1,10 @@
+import PropTypes from 'prop-types';
 import {debounce} from 'lodash';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import styled from 'react-emotion';
 
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import IdBadge from 'app/components/idBadge';
 import Avatar from 'app/components/avatar';
 import Button from 'app/components/button';
@@ -24,7 +25,10 @@ import overflowEllipsis from 'app/styles/overflowEllipsis';
 
 const TeamMembers = createReactClass({
   displayName: 'TeamMembers',
-  mixins: [ApiMixin, OrganizationState],
+  propTypes: {
+    api: PropTypes.object,
+  },
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {
@@ -68,7 +72,7 @@ const TeamMembers = createReactClass({
   removeMember(member) {
     const {params} = this.props;
     leaveTeam(
-      this.api,
+      this.props.api,
       {
         orgId: params.orgId,
         teamId: params.teamId,
@@ -98,7 +102,7 @@ const TeamMembers = createReactClass({
 
   fetchMembersRequest(query) {
     const {orgId} = this.props.params;
-    return this.api.request(`/organizations/${orgId}/members/`, {
+    return this.props.api.request(`/organizations/${orgId}/members/`, {
       query: {
         query,
       },
@@ -122,7 +126,7 @@ const TeamMembers = createReactClass({
   fetchData() {
     const params = this.props.params;
 
-    this.api.request(`/teams/${params.orgId}/${params.teamId}/members/`, {
+    this.props.api.request(`/teams/${params.orgId}/${params.teamId}/members/`, {
       success: data => {
         this.setState({
           teamMemberList: data,
@@ -152,7 +156,7 @@ const TeamMembers = createReactClass({
     this.debouncedFetchMembersRequest('');
 
     joinTeam(
-      this.api,
+      this.props.api,
       {
         orgId: params.orgId,
         teamId: params.teamId,
@@ -340,4 +344,6 @@ const StyledCreateMemberLink = styled(Link)`
   text-transform: none;
 `;
 
-export default TeamMembers;
+export {TeamMembers};
+
+export default withApi(TeamMembers);
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx
index 848a87e4bc..37442c2ac4 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx
@@ -1,9 +1,10 @@
+import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import styled from 'react-emotion';
 
 import Tooltip from 'app/components/tooltip';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import space from 'app/styles/space';
 import Button from 'app/components/button';
@@ -22,7 +23,10 @@ import {t} from 'app/locale';
 
 const TeamProjects = createReactClass({
   displayName: 'TeamProjects',
-  mixins: [ApiMixin, OrganizationState],
+  propTypes: {
+    api: PropTypes.object,
+  },
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {
@@ -64,7 +68,7 @@ const TeamProjects = createReactClass({
 
     this.setState({loading: true});
 
-    this.api
+    this.props.api
       .requestPromise(`/organizations/${orgId}/projects/`, {
         query: {
           query: `team:${teamId}`,
@@ -90,7 +94,7 @@ const TeamProjects = createReactClass({
       params: {orgId, teamId},
     } = this.props;
 
-    this.api
+    this.props.api
       .requestPromise(`/organizations/${orgId}/projects/`, {
         query: {
           query: query ? `!team:${teamId} ${query}` : `!team:${teamId}`,
@@ -103,7 +107,7 @@ const TeamProjects = createReactClass({
 
   handleLinkProject(project, action) {
     const {orgId, teamId} = this.props.params;
-    this.api.request(`/projects/${orgId}/${project.slug}/teams/${teamId}/`, {
+    this.props.api.request(`/projects/${orgId}/${project.slug}/teams/${teamId}/`, {
       method: action === 'add' ? 'POST' : 'DELETE',
       success: () => {
         this.fetchAll();
@@ -242,4 +246,6 @@ const ProjectListElement = styled('div')`
   padding: ${space(0.25)} 0;
 `;
 
-export default TeamProjects;
+export {TeamProjects};
+
+export default withApi(TeamProjects);
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx
index 3388635a04..caa0aca3d9 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx
@@ -7,7 +7,7 @@ import moment from 'moment';
 
 import {intcomma} from 'app/utils';
 import {t, tn} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
@@ -16,10 +16,12 @@ import StackedBarChart from 'app/components/stackedBarChart';
 
 const ProjectFiltersChart = createReactClass({
   displayName: 'ProjectFiltersChart',
+  propTypes: {
+    api: PropTypes.object,
+  },
   contextTypes: {
     project: PropTypes.object,
   },
-  mixins: [ApiMixin],
 
   getInitialState() {
     const until = Math.floor(new Date().getTime() / 1000);
@@ -87,7 +89,7 @@ const ProjectFiltersChart = createReactClass({
         // parallelize requests for each statistic
         statOptions.map(stat => {
           const deferred = $.Deferred();
-          this.api.request(statEndpoint, {
+          this.props.api.request(statEndpoint, {
             query: Object.assign({stat}, query),
             success: deferred.resolve.bind(deferred),
             error: deferred.reject.bind(deferred),
@@ -207,4 +209,6 @@ const ProjectFiltersChart = createReactClass({
   },
 });
 
-export default ProjectFiltersChart;
+export {ProjectFiltersChart};
+
+export default withApi(ProjectFiltersChart);
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectProcessingIssues.jsx b/src/sentry/static/sentry/app/views/settings/project/projectProcessingIssues.jsx
index 045c4ec059..153d8e75e1 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectProcessingIssues.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectProcessingIssues.jsx
@@ -1,3 +1,4 @@
+import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 
@@ -5,7 +6,7 @@ import {Panel} from 'app/components/panels';
 import {addLoadingMessage, removeIndicator} from 'app/actionCreators/indicator';
 import {t, tn} from 'app/locale';
 import Access from 'app/components/acl/access';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import Form from 'app/views/settings/components/forms/form';
@@ -45,7 +46,10 @@ const HELP_LINKS = {
 
 const ProjectProcessingIssues = createReactClass({
   displayName: 'ProjectProcessingIssues',
-  mixins: [ApiMixin, OrganizationState],
+  propTypes: {
+    api: PropTypes.object,
+  },
+  mixins: [OrganizationState],
 
   getInitialState() {
     return {
@@ -67,7 +71,7 @@ const ProjectProcessingIssues = createReactClass({
     this.setState({
       expected: this.state.expected + 2,
     });
-    this.api.request(`/projects/${orgId}/${projectId}/`, {
+    this.props.api.request(`/projects/${orgId}/${projectId}/`, {
       success: (data, _, jqXHR) => {
         const expected = this.state.expected - 1;
         this.setState({
@@ -86,26 +90,29 @@ const ProjectProcessingIssues = createReactClass({
       },
     });
 
-    this.api.request(`/projects/${orgId}/${projectId}/processingissues/?detailed=1`, {
-      success: (data, _, jqXHR) => {
-        const expected = this.state.expected - 1;
-        this.setState({
-          expected,
-          error: false,
-          loading: expected > 0,
-          processingIssues: data,
-          pageLinks: jqXHR.getResponseHeader('Link'),
-        });
-      },
-      error: () => {
-        const expected = this.state.expected - 1;
-        this.setState({
-          expected,
-          error: true,
-          loading: expected > 0,
-        });
-      },
-    });
+    this.props.api.request(
+      `/projects/${orgId}/${projectId}/processingissues/?detailed=1`,
+      {
+        success: (data, _, jqXHR) => {
+          const expected = this.state.expected - 1;
+          this.setState({
+            expected,
+            error: false,
+            loading: expected > 0,
+            processingIssues: data,
+            pageLinks: jqXHR.getResponseHeader('Link'),
+          });
+        },
+        error: () => {
+          const expected = this.state.expected - 1;
+          this.setState({
+            expected,
+            error: true,
+            loading: expected > 0,
+          });
+        },
+      }
+    );
   },
 
   sendReprocessing() {
@@ -114,7 +121,7 @@ const ProjectProcessingIssues = createReactClass({
     });
     const loadingIndicator = addLoadingMessage(t('Started reprocessing..'));
     const {orgId, projectId} = this.props.params;
-    this.api.request(`/projects/${orgId}/${projectId}/reprocessing/`, {
+    this.props.api.request(`/projects/${orgId}/${projectId}/reprocessing/`, {
       method: 'POST',
       success: (data, _, jqXHR) => {
         this.fetchData();
@@ -138,7 +145,7 @@ const ProjectProcessingIssues = createReactClass({
     this.setState({
       expected: this.state.expected + 1,
     });
-    this.api.request(`/projects/${orgId}/${projectId}/processingissues/discard/`, {
+    this.props.api.request(`/projects/${orgId}/${projectId}/processingissues/discard/`, {
       method: 'DELETE',
       success: (data, _, jqXHR) => {
         const expected = this.state.expected - 1;
@@ -167,7 +174,7 @@ const ProjectProcessingIssues = createReactClass({
     this.setState({
       expected: this.state.expected + 1,
     });
-    this.api.request(`/projects/${orgId}/${projectId}/processingissues/`, {
+    this.props.api.request(`/projects/${orgId}/${projectId}/processingissues/`, {
       method: 'DELETE',
       success: (data, _, jqXHR) => {
         const expected = this.state.expected - 1;
@@ -443,4 +450,6 @@ const ProjectProcessingIssues = createReactClass({
   },
 });
 
-export default ProjectProcessingIssues;
+export {ProjectProcessingIssues};
+
+export default withApi(ProjectProcessingIssues);
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
index fa0cb2a500..9b4ef901e4 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
@@ -1,10 +1,10 @@
 import React from 'react';
 import styled, {css} from 'react-emotion';
 
+import {addErrorMessage} from 'app/actionCreators/indicator';
+import {addTeamToProject, removeTeamFromProject} from 'app/actionCreators/projects';
 import {getOrganizationState} from 'app/mixins/organizationState';
 import {openCreateTeamModal} from 'app/actionCreators/modal';
-import {removeTeamFromProject, addTeamToProject} from 'app/actionCreators/projects';
-import {addErrorMessage} from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
 import Link from 'app/components/link';
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
index 82165a59b3..8621f004af 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
@@ -14,7 +14,7 @@ import {
   addMessage,
 } from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import EnvironmentStore from 'app/stores/environmentStore';
 import LoadingIndicator from 'app/components/loadingIndicator';
@@ -45,14 +45,13 @@ const RuleEditor = createReactClass({
   displayName: 'RuleEditor',
 
   propTypes: {
+    api: PropTypes.object,
     actions: PropTypes.array.isRequired,
     conditions: PropTypes.array.isRequired,
     project: PropTypes.object.isRequired,
     organization: PropTypes.object.isRequired,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       rule: null,
@@ -76,7 +75,7 @@ const RuleEditor = createReactClass({
 
     if (ruleId) {
       const endpoint = `/projects/${orgId}/${projectId}/rules/${ruleId}/`;
-      this.api.request(endpoint, {
+      this.props.api.request(endpoint, {
         success: rule => {
           this.setState({
             rule,
@@ -115,7 +114,7 @@ const RuleEditor = createReactClass({
 
     addMessage(t('Saving...'));
 
-    this.api.request(endpoint, {
+    this.props.api.request(endpoint, {
       method: isNew ? 'POST' : 'PUT',
       data,
       success: resp => {
@@ -329,7 +328,9 @@ const RuleEditor = createReactClass({
   },
 });
 
-export default RuleEditor;
+export {RuleEditor};
+
+export default withApi(RuleEditor);
 
 const CancelButton = styled(Button)`
   margin-right: ${space(1)};
diff --git a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
index 101cc3f0c8..4a7edfe31d 100644
--- a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
+++ b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
@@ -1,9 +1,10 @@
+import PropTypes from 'prop-types';
 import DocumentTitle from 'react-document-title';
 import React from 'react';
 import createReactClass from 'create-react-class';
 
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import EventEntries from 'app/components/events/eventEntries';
 import Footer from 'app/components/footer';
 import LoadingError from 'app/components/loadingError';
@@ -15,12 +16,14 @@ import SharedGroupHeader from 'app/views/sharedGroupDetails/sharedGroupHeader';
 const SharedGroupDetails = createReactClass({
   displayName: 'SharedGroupDetails',
 
+  propTypes: {
+    api: PropTypes.object,
+  },
+
   childContextTypes: {
     group: SentryTypes.Group,
   },
 
-  mixins: [ApiMixin],
-
   getInitialState() {
     return {
       group: null,
@@ -57,7 +60,7 @@ const SharedGroupDetails = createReactClass({
       error: false,
     });
 
-    this.api.request(this.getGroupDetailsEndpoint(), {
+    this.props.api.request(this.getGroupDetailsEndpoint(), {
       success: data => {
         this.setState({
           loading: false,
@@ -133,4 +136,6 @@ const SharedGroupDetails = createReactClass({
   },
 });
 
-export default SharedGroupDetails;
+export {SharedGroupDetails};
+
+export default withApi(SharedGroupDetails);
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index bfef0f13fa..329585af78 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -8,7 +8,7 @@ import styled from 'react-emotion';
 
 import {t, tct, tn} from 'app/locale';
 import ActionLink from 'app/components/actions/actionLink';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import Checkbox from 'app/components/checkbox';
 import DropdownLink from 'app/components/dropdownLink';
 import ExternalLink from 'app/components/externalLink';
@@ -138,6 +138,7 @@ const StreamActions = createReactClass({
   displayName: 'StreamActions',
 
   propTypes: {
+    api: PropTypes.object,
     allResultsVisible: PropTypes.bool,
     orgId: PropTypes.string.isRequired,
     projectId: PropTypes.string,
@@ -153,7 +154,7 @@ const StreamActions = createReactClass({
     latestRelease: PropTypes.object,
   },
 
-  mixins: [ApiMixin, Reflux.listenTo(SelectedGroupStore, 'onSelectedGroupChange')],
+  mixins: [Reflux.listenTo(SelectedGroupStore, 'onSelectedGroupChange')],
 
   getDefaultProps() {
     return {
@@ -207,7 +208,7 @@ const StreamActions = createReactClass({
     const {selection} = this.props;
     this.actionSelectedGroups(itemIds => {
       const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
-      this.api.bulkUpdate(
+      this.props.api.bulkUpdate(
         {
           orgId: this.props.orgId,
           itemIds,
@@ -231,7 +232,7 @@ const StreamActions = createReactClass({
     const {selection} = this.props;
 
     this.actionSelectedGroups(itemIds => {
-      this.api.bulkDelete(
+      this.props.api.bulkDelete(
         {
           orgId: this.props.orgId,
           itemIds,
@@ -254,7 +255,7 @@ const StreamActions = createReactClass({
     const {selection} = this.props;
 
     this.actionSelectedGroups(itemIds => {
-      this.api.merge(
+      this.props.api.merge(
         {
           orgId: this.props.orgId,
           itemIds,
@@ -601,4 +602,6 @@ const GraphToggle = styled.a`
   }
 `;
 
-export default StreamActions;
+export {StreamActions};
+
+export default withApi(StreamActions);
diff --git a/src/sentry/static/sentry/app/views/stream/stream.jsx b/src/sentry/static/sentry/app/views/stream/stream.jsx
index 6ad48bde6d..06ce4dce6c 100644
--- a/src/sentry/static/sentry/app/views/stream/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream/stream.jsx
@@ -16,7 +16,7 @@ import {
   setActiveEnvironmentName,
 } from 'app/actionCreators/environments';
 import {t, tct} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import withApi from 'app/utils/withApi';
 import ConfigStore from 'app/stores/configStore';
 import EnvironmentStore from 'app/stores/environmentStore';
 import ErrorRobot from 'app/components/errorRobot';
@@ -48,12 +48,13 @@ const Stream = createReactClass({
   displayName: 'Stream',
 
   propTypes: {
+    api: PropTypes.object,
     environment: SentryTypes.Environment,
     tags: PropTypes.object,
     tagsLoading: PropTypes.bool,
   },
 
-  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange'), ApiMixin, ProjectState],
+  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange'), ProjectState],
 
   getInitialState() {
     const searchId = this.props.params.searchId || null;
@@ -179,7 +180,7 @@ const Stream = createReactClass({
     const {orgId, projectId} = this.props.params;
     const {searchId} = this.state;
 
-    fetchProjectSavedSearches(this.api, orgId, projectId).then(
+    fetchProjectSavedSearches(this.props.api, orgId, projectId).then(
       data => {
         const newState = {
           isDefaultSearch: false,
@@ -368,7 +369,7 @@ const Stream = createReactClass({
 
     this._poller.disable();
 
-    this.lastRequest = this.api.request(url, {
+    this.lastRequest = this.props.api.request(url, {
       method: 'GET',
       data: requestParams,
       success: (data, ignore, jqXHR) => {
@@ -662,7 +663,7 @@ const Stream = createReactClass({
   tagValueLoader(key, search) {
     const {orgId} = this.props.params;
     const project = this.getProject();
-    return fetchProjectTagValues(this.api, orgId, project.slug, key, search);
+    return fetchProjectTagValues(this.props.api, orgId, project.slug, key, search);
   },
 
   render() {
@@ -752,4 +753,5 @@ const Stream = createReactClass({
     );
   },
 });
-export default Stream;
+export {Stream};
+export default withApi(Stream);
diff --git a/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx b/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
index 13e2b92cae..7c2dbf0566 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
@@ -7,8 +7,7 @@ import qs from 'query-string';
 import {omit, isEqual} from 'lodash';
 
 import SentryTypes from 'app/sentryTypes';
-import ApiMixin from 'app/mixins/apiMixin';
-import ProjectState from 'app/mixins/projectState';
+import withApi from 'app/utils/withApi';
 import GroupStore from 'app/stores/groupStore';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
@@ -25,6 +24,7 @@ const ProjectUserFeedback = createReactClass({
   displayName: 'ProjectUserFeedback',
 
   propTypes: {
+    api: PropTypes.object,
     organization: SentryTypes.Organization.isRequired,
     defaultQuery: PropTypes.string,
     defaultStatus: PropTypes.string,
@@ -36,8 +36,6 @@ const ProjectUserFeedback = createReactClass({
     project: SentryTypes.Project,
   },
 
-  mixins: [ApiMixin, ProjectState],
-
   getDefaultProps() {
     return {
       defaultQuery: '',
@@ -127,25 +125,28 @@ const ProjectUserFeedback = createReactClass({
       delete query.environment;
     }
 
-    this.api.request(`/projects/${params.orgId}/${params.projectId}/user-reports/`, {
-      query,
-      success: (data, _, jqXHR) => {
-        const issues = data.map(r => r.issue);
-        GroupStore.add(issues);
-        this.setState({
-          error: false,
-          loading: false,
-          reportList: data,
-          pageLinks: jqXHR.getResponseHeader('Link'),
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-          loading: false,
-        });
-      },
-    });
+    this.props.api.request(
+      `/projects/${params.orgId}/${params.projectId}/user-reports/`,
+      {
+        query,
+        success: (data, _, jqXHR) => {
+          const issues = data.map(r => r.issue);
+          GroupStore.add(issues);
+          this.setState({
+            error: false,
+            loading: false,
+            reportList: data,
+            pageLinks: jqXHR.getResponseHeader('Link'),
+          });
+        },
+        error: () => {
+          this.setState({
+            error: true,
+            loading: false,
+          });
+        },
+      }
+    );
   },
 
   getUserFeedbackUrl() {
@@ -217,10 +218,12 @@ const ProjectUserFeedback = createReactClass({
   },
 
   render() {
-    const {location} = this.props;
     const {
-      project: {slug: projectSlug},
+      location,
       organization: {name: orgName},
+    } = this.props;
+    const {
+      project: {slug: projectSlug},
     } = this.context;
 
     return (
@@ -238,4 +241,6 @@ const ProjectUserFeedback = createReactClass({
 });
 
 export {ProjectUserFeedback};
-export default withOrganization(withEnvironmentInQueryString(ProjectUserFeedback));
+export default withApi(
+  withOrganization(withEnvironmentInQueryString(ProjectUserFeedback))
+);
diff --git a/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap b/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap
index f371ed3c96..f60b74e6d0 100644
--- a/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap
@@ -1,146 +1,313 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`NoteInput renders 1`] = `
-<form
-  className="activity-field"
-  noValidate={true}
-  onSubmit={[Function]}
+<withApi(NoteInput)
+  group={
+    Object {
+      "project": Object {},
+    }
+  }
+  memberList={Array []}
+  sessionUser={Object {}}
 >
-  <div
-    className="activity-notes"
+  <NoteInput
+    api={Client {}}
+    group={
+      Object {
+        "project": Object {},
+      }
+    }
+    memberList={Array []}
+    sessionUser={Object {}}
   >
-    <NavTabs>
-      <li
-        className="active"
-      >
-        <a
-          onClick={[Function]}
-        >
-          Write
-        </a>
-      </li>
-      <li
-        className=""
-      >
-        <a
-          onClick={[Function]}
-        >
-          Preview
-        </a>
-      </li>
-      <li
-        className="markdown"
+    <form
+      className="activity-field"
+      noValidate={true}
+      onSubmit={[Function]}
+    >
+      <div
+        className="activity-notes"
       >
-        <span
-          className="icon-markdown"
-        />
-        <span
-          className="supported"
-        >
-          Markdown supported
-        </span>
-      </li>
-    </NavTabs>
-    <withDefaultStyle(MentionsInput)
-      autoFocus={true}
-      displayTransform={[Function]}
-      markup="**[sentry.strip:__type__]__display__**"
-      onChange={[Function]}
-      onKeyDown={[Function]}
-      placeholder="Add details or updates to this event. 
+        <NavTabs>
+          <ul
+            className="nav nav-tabs"
+          >
+            <li
+              className="active"
+            >
+              <a
+                onClick={[Function]}
+              >
+                Write
+              </a>
+            </li>
+            <li
+              className=""
+            >
+              <a
+                onClick={[Function]}
+              >
+                Preview
+              </a>
+            </li>
+            <li
+              className="markdown"
+            >
+              <span
+                className="icon-markdown"
+              />
+              <span
+                className="supported"
+              >
+                Markdown supported
+              </span>
+            </li>
+          </ul>
+        </NavTabs>
+        <withDefaultStyle(MentionsInput)
+          autoFocus={true}
+          displayTransform={[Function]}
+          markup="**[sentry.strip:__type__]__display__**"
+          onChange={[Function]}
+          onKeyDown={[Function]}
+          placeholder="Add details or updates to this event. 
 Tag users with @, or teams with #"
-      required={true}
-      style={
-        Object {
-          "&multiLine": Object {
-            "control": Object {
-              "fontFamily": "Rubik, Avenir Next, Helvetica Neue, sans-serif",
-            },
-            "highlighter": Object {
-              "padding": 20,
-            },
-            "input": Object {
-              "border": 0,
-              "minHeight": 140,
-              "outline": 0,
-              "overflow": "auto",
-              "padding": "15px 20px 0",
-            },
-          },
-          "&singleLine": Object {
-            "control": Object {
-              "display": "inline-block",
-              "width": 130,
-            },
-            "highlighter": Object {
-              "border": "2px inset transparent",
-              "padding": 1,
-            },
-            "input": Object {
-              "border": "2px inset",
-              "padding": 1,
-            },
-          },
-          "control": Object {
-            "backgroundColor": "#fff",
-            "fontSize": 15,
-            "fontWeight": "normal",
-          },
-          "input": Object {
-            "margin": 0,
-          },
-          "suggestions": Object {
-            "item": Object {
-              "&focused": Object {
-                "backgroundColor": "#f8f6f9",
+          required={true}
+          style={
+            Object {
+              "&multiLine": Object {
+                "control": Object {
+                  "fontFamily": "Rubik, Avenir Next, Helvetica Neue, sans-serif",
+                },
+                "highlighter": Object {
+                  "padding": 20,
+                },
+                "input": Object {
+                  "border": 0,
+                  "minHeight": 140,
+                  "outline": 0,
+                  "overflow": "auto",
+                  "padding": "15px 20px 0",
+                },
               },
-              "borderBottom": "1px solid rgba(0,0,0,0.15)",
-              "padding": "5px 15px",
-            },
-            "list": Object {
-              "backgroundColor": "white",
-              "border": "1px solid rgba(0,0,0,0.15)",
-              "fontSize": 12,
-              "maxHeight": 150,
-              "overflow": "auto",
-            },
-          },
-        }
-      }
-      value=""
-    >
-      <withDefaultStyle()
-        appendSpaceOnAdd={true}
-        data={Array []}
-        isLoading={false}
-        onAdd={[Function]}
-        onRemove={[Function]}
-        renderSuggestion={null}
-        trigger="@"
-        type="member"
-      />
-      <withDefaultStyle()
-        appendSpaceOnAdd={true}
-        data={Array []}
-        isLoading={false}
-        onAdd={[Function]}
-        onRemove={[Function]}
-        renderSuggestion={null}
-        trigger="#"
-        type="team"
-      />
-    </withDefaultStyle(MentionsInput)>
-    <div
-      className="activity-actions"
-    >
-      <button
-        className="btn btn-default"
-        disabled={false}
-        type="submit"
-      >
-        Post Comment
-      </button>
-    </div>
-  </div>
-</form>
+              "&singleLine": Object {
+                "control": Object {
+                  "display": "inline-block",
+                  "width": 130,
+                },
+                "highlighter": Object {
+                  "border": "2px inset transparent",
+                  "padding": 1,
+                },
+                "input": Object {
+                  "border": "2px inset",
+                  "padding": 1,
+                },
+              },
+              "control": Object {
+                "backgroundColor": "#fff",
+                "fontSize": 15,
+                "fontWeight": "normal",
+              },
+              "input": Object {
+                "margin": 0,
+              },
+              "suggestions": Object {
+                "item": Object {
+                  "&focused": Object {
+                    "backgroundColor": "#f8f6f9",
+                  },
+                  "borderBottom": "1px solid rgba(0,0,0,0.15)",
+                  "padding": "5px 15px",
+                },
+                "list": Object {
+                  "backgroundColor": "white",
+                  "border": "1px solid rgba(0,0,0,0.15)",
+                  "fontSize": 12,
+                  "maxHeight": 150,
+                  "overflow": "auto",
+                },
+              },
+            }
+          }
+          value=""
+        >
+          <MentionsInput
+            autoFocus={true}
+            displayTransform={[Function]}
+            markup="**[sentry.strip:__type__]__display__**"
+            onBlur={[Function]}
+            onChange={[Function]}
+            onKeyDown={[Function]}
+            onSelect={[Function]}
+            placeholder="Add details or updates to this event. 
+Tag users with @, or teams with #"
+            required={true}
+            singleLine={false}
+            style={[Function]}
+            value=""
+          >
+            <div
+              style={
+                Object {
+                  "overflowY": "visible",
+                  "position": "relative",
+                }
+              }
+            >
+              <div
+                style={
+                  Object {
+                    "backgroundColor": "#fff",
+                    "fontFamily": "Rubik, Avenir Next, Helvetica Neue, sans-serif",
+                    "fontSize": 15,
+                    "fontWeight": "normal",
+                  }
+                }
+              >
+                <withDefaultStyle(Highlighter)
+                  displayTransform={[Function]}
+                  inputStyle={
+                    Object {
+                      "backgroundColor": "transparent",
+                      "border": 0,
+                      "bottom": 0,
+                      "boxSizing": "border-box",
+                      "display": "block",
+                      "height": "100%",
+                      "margin": 0,
+                      "minHeight": 140,
+                      "outline": 0,
+                      "overflow": "auto",
+                      "padding": "15px 20px 0",
+                      "position": "absolute",
+                      "resize": "none",
+                      "top": 0,
+                      "width": "100%",
+                    }
+                  }
+                  markup="**[sentry.strip:__type__]__display__**"
+                  onCaretPositionChange={[Function]}
+                  selection={
+                    Object {
+                      "end": null,
+                      "start": null,
+                    }
+                  }
+                  singleLine={false}
+                  style={[Function]}
+                  value=""
+                >
+                  <Highlighter
+                    displayTransform={[Function]}
+                    inputStyle={
+                      Object {
+                        "backgroundColor": "transparent",
+                        "border": 0,
+                        "bottom": 0,
+                        "boxSizing": "border-box",
+                        "display": "block",
+                        "height": "100%",
+                        "margin": 0,
+                        "minHeight": 140,
+                        "outline": 0,
+                        "overflow": "auto",
+                        "padding": "15px 20px 0",
+                        "position": "absolute",
+                        "resize": "none",
+                        "top": 0,
+                        "width": "100%",
+                      }
+                    }
+                    markup="**[sentry.strip:__type__]__display__**"
+                    onCaretPositionChange={[Function]}
+                    selection={
+                      Object {
+                        "end": null,
+                        "start": null,
+                      }
+                    }
+                    singleLine={false}
+                    style={[Function]}
+                    value=""
+                  >
+                    <div
+                      style={
+                        Object {
+                          "backgroundColor": "transparent",
+                          "border": 0,
+                          "bottom": 0,
+                          "boxSizing": "border-box",
+                          "color": "transparent",
+                          "display": "block",
+                          "height": "100%",
+                          "margin": 0,
+                          "minHeight": 140,
+                          "outline": 0,
+                          "overflow": "hidden",
+                          "padding": 20,
+                          "position": "relative",
+                          "resize": "none",
+                          "top": 0,
+                          "whiteSpace": "pre-wrap",
+                          "width": "inherit",
+                          "wordWrap": "break-word",
+                        }
+                      }
+                    >
+                       
+                    </div>
+                  </Highlighter>
+                </withDefaultStyle(Highlighter)>
+                <textarea
+                  autoFocus={true}
+                  onBlur={[Function]}
+                  onChange={[Function]}
+                  onCompositionEnd={[Function]}
+                  onCompositionStart={[Function]}
+                  onKeyDown={[Function]}
+                  onSelect={[Function]}
+                  placeholder="Add details or updates to this event. 
+Tag users with @, or teams with #"
+                  required={true}
+                  style={
+                    Object {
+                      "backgroundColor": "transparent",
+                      "border": 0,
+                      "bottom": 0,
+                      "boxSizing": "border-box",
+                      "display": "block",
+                      "height": "100%",
+                      "margin": 0,
+                      "minHeight": 140,
+                      "outline": 0,
+                      "overflow": "auto",
+                      "padding": "15px 20px 0",
+                      "position": "absolute",
+                      "resize": "none",
+                      "top": 0,
+                      "width": "100%",
+                    }
+                  }
+                  value=""
+                />
+              </div>
+            </div>
+          </MentionsInput>
+        </withDefaultStyle(MentionsInput)>
+        <div
+          className="activity-actions"
+        >
+          <button
+            className="btn btn-default"
+            disabled={false}
+            type="submit"
+          >
+            Post Comment
+          </button>
+        </div>
+      </div>
+    </form>
+  </NoteInput>
+</withApi(NoteInput)>
 `;
diff --git a/tests/js/spec/components/errorRobot.spec.jsx b/tests/js/spec/components/errorRobot.spec.jsx
index 454b371e0a..7349b521a0 100644
--- a/tests/js/spec/components/errorRobot.spec.jsx
+++ b/tests/js/spec/components/errorRobot.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {browserHistory} from 'react-router';
 import {shallow} from 'enzyme';
 import {Client} from 'app/api';
-import ErrorRobot from 'app/components/errorRobot';
+import {ErrorRobot} from 'app/components/errorRobot';
 
 describe('ErrorRobot', function() {
   let getIssues;
@@ -20,7 +20,11 @@ describe('ErrorRobot', function() {
     let wrapper;
     beforeEach(function() {
       wrapper = shallow(
-        <ErrorRobot org={TestStubs.Organization()} project={TestStubs.Project()} />
+        <ErrorRobot
+          api={new MockApiClient()}
+          org={TestStubs.Organization()}
+          project={TestStubs.Project()}
+        />
       );
     });
 
@@ -55,7 +59,9 @@ describe('ErrorRobot', function() {
     let wrapper;
 
     beforeEach(function() {
-      wrapper = shallow(<ErrorRobot org={TestStubs.Organization()} />);
+      wrapper = shallow(
+        <ErrorRobot api={new MockApiClient()} org={TestStubs.Organization()} />
+      );
     });
 
     it('Renders a disabled create event button', function() {
diff --git a/tests/js/spec/components/group/sidebar.spec.jsx b/tests/js/spec/components/group/sidebar.spec.jsx
index 43e28ccc05..46cb1c85f1 100644
--- a/tests/js/spec/components/group/sidebar.spec.jsx
+++ b/tests/js/spec/components/group/sidebar.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount, shallow} from 'enzyme';
 
-import GroupSidebar from 'app/components/group/sidebar';
+import {GroupSidebar} from 'app/components/group/sidebar';
 
 describe('GroupSidebar', function() {
   let group = TestStubs.Group({tags: TestStubs.Tags()});
@@ -46,6 +46,7 @@ describe('GroupSidebar', function() {
 
     wrapper = mount(
       <GroupSidebar
+        api={new MockApiClient()}
         group={group}
         project={project}
         event={TestStubs.Event()}
@@ -91,6 +92,7 @@ describe('GroupSidebar', function() {
 
       wrapper = shallow(
         <GroupSidebar
+          api={new MockApiClient()}
           group={group}
           project={project}
           event={TestStubs.Event()}
diff --git a/tests/js/spec/components/modals/__snapshots__/diffModal.spec.jsx.snap b/tests/js/spec/components/modals/__snapshots__/diffModal.spec.jsx.snap
index 710cd3c317..6a2132391c 100644
--- a/tests/js/spec/components/modals/__snapshots__/diffModal.spec.jsx.snap
+++ b/tests/js/spec/components/modals/__snapshots__/diffModal.spec.jsx.snap
@@ -2,7 +2,7 @@
 
 exports[`DiffModal renders 1`] = `
 <Body>
-  <IssueDiffContainer
+  <withApi(IssueDiff)
     Body={[Function]}
   />
 </Body>
diff --git a/tests/js/spec/components/noteInput.spec.jsx b/tests/js/spec/components/noteInput.spec.jsx
index 40146b13e6..c9e6e04b21 100644
--- a/tests/js/spec/components/noteInput.spec.jsx
+++ b/tests/js/spec/components/noteInput.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount} from 'enzyme';
 
 import NoteInput from 'app/components/activity/noteInput';
 import {Client} from 'app/api';
@@ -10,23 +10,18 @@ describe('NoteInput', function() {
   let spy;
 
   beforeAll(function() {
-    Client.addMockResponse({
+    spy = Client.addMockResponse({
       url: '/issues/groupId/comments/',
       method: 'POST',
     });
   });
 
   beforeEach(function() {
-    spy = jest.spyOn(Client.prototype, 'request');
-  });
-
-  afterEach(function() {
     spy.mockReset();
-    spy.mockRestore();
   });
 
   it('renders', function() {
-    const wrapper = shallow(
+    const wrapper = mount(
       <NoteInput group={{project: {}}} memberList={[]} sessionUser={{}} />,
       TestStubs.routerContext()
     );
@@ -58,7 +53,7 @@ describe('NoteInput', function() {
   });
 
   it('handles 401 error objects', async function() {
-    Client.addMockResponse({
+    spy = Client.addMockResponse({
       url: '/issues/groupId/comments/',
       method: 'POST',
       body: {detail: {message: '', code: 401, extra: ''}},
@@ -74,5 +69,6 @@ describe('NoteInput', function() {
     input.simulate('keyDown', {key: 'Enter', ctrlKey: true});
     wrapper.update();
     expect(wrapper.find('.activity-actions .error')).toHaveLength(1);
+    expect(spy).toHaveBeenCalled();
   });
 });
diff --git a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
index ad8dd9b643..a1c2404987 100644
--- a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
@@ -1359,381 +1359,385 @@ exports[`Sidebar can have onboarding feature 1`] = `
           <div
             className="css-1pl3kd6-SidebarPanelBody e1cvaskl2"
           >
-            <TodoList>
-              <div>
-                <div
-                  className="onboarding-wrapper"
-                >
-                  <ul
-                    className="list-unstyled"
+            <withApi(TodoList)>
+              <TodoList
+                api={Client {}}
+              >
+                <div>
+                  <div
+                    className="onboarding-wrapper"
                   >
-                    <TodoItem
-                      key="1"
-                      onSkip={[Function]}
-                      task={
-                        Object {
-                          "description": "Create your first Sentry project",
-                          "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
-                          "display": true,
-                          "featureLocation": "organization",
-                          "location": "projects/new/",
-                          "prereq": Array [],
-                          "skippable": false,
-                          "task": 1,
-                          "title": "Create a project",
-                        }
-                      }
+                    <ul
+                      className="list-unstyled"
                     >
-                      <li
-                        className=""
-                        onMouseOut={[Function]}
-                        onMouseOver={[Function]}
+                      <TodoItem
+                        key="1"
+                        onSkip={[Function]}
+                        task={
+                          Object {
+                            "description": "Create your first Sentry project",
+                            "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
+                            "display": true,
+                            "featureLocation": "organization",
+                            "location": "projects/new/",
+                            "prereq": Array [],
+                            "skippable": false,
+                            "task": 1,
+                            "title": "Create a project",
+                          }
+                        }
                       >
-                        <div
-                          className="todo-content"
+                        <li
+                          className=""
+                          onMouseOut={[Function]}
+                          onMouseOver={[Function]}
                         >
                           <div
-                            className="ob-checkbox"
-                          />
-                          <a
-                            href="/organizations/org-slug/projects/new/"
-                            onClick={[Function]}
+                            className="todo-content"
                           >
-                            <h4>
-                              Create a project
-                            </h4>
-                          </a>
-                          <div>
-                            <p>
-                              Create your first Sentry project
-                               
-                            </p>
+                            <div
+                              className="ob-checkbox"
+                            />
+                            <a
+                              href="/organizations/org-slug/projects/new/"
+                              onClick={[Function]}
+                            >
+                              <h4>
+                                Create a project
+                              </h4>
+                            </a>
+                            <div>
+                              <p>
+                                Create your first Sentry project
+                                 
+                              </p>
+                            </div>
                           </div>
-                        </div>
-                      </li>
-                    </TodoItem>
-                    <TodoItem
-                      key="2"
-                      onSkip={[Function]}
-                      task={
-                        Object {
-                          "description": "Install Sentry's client",
-                          "detailedDescription": "Choose your platform and send an event.",
-                          "display": true,
-                          "featureLocation": "project",
-                          "location": "settings/install/",
-                          "prereq": Array [
-                            1,
-                          ],
-                          "skippable": false,
-                          "task": 2,
-                          "title": "Send your first event",
+                        </li>
+                      </TodoItem>
+                      <TodoItem
+                        key="2"
+                        onSkip={[Function]}
+                        task={
+                          Object {
+                            "description": "Install Sentry's client",
+                            "detailedDescription": "Choose your platform and send an event.",
+                            "display": true,
+                            "featureLocation": "project",
+                            "location": "settings/install/",
+                            "prereq": Array [
+                              1,
+                            ],
+                            "skippable": false,
+                            "task": 2,
+                            "title": "Send your first event",
+                          }
                         }
-                      }
-                    >
-                      <li
-                        className=""
-                        onMouseOut={[Function]}
-                        onMouseOver={[Function]}
                       >
-                        <div
-                          className="todo-content"
+                        <li
+                          className=""
+                          onMouseOut={[Function]}
+                          onMouseOver={[Function]}
                         >
                           <div
-                            className="ob-checkbox"
-                          />
-                          <a
-                            href="/organizations/org-slug/projects/choose/?onboarding=1&task=2"
-                            onClick={[Function]}
+                            className="todo-content"
                           >
-                            <h4>
-                              Send your first event
-                            </h4>
-                          </a>
-                          <div>
-                            <p>
-                              Install Sentry's client
-                               
-                            </p>
+                            <div
+                              className="ob-checkbox"
+                            />
+                            <a
+                              href="/organizations/org-slug/projects/choose/?onboarding=1&task=2"
+                              onClick={[Function]}
+                            >
+                              <h4>
+                                Send your first event
+                              </h4>
+                            </a>
+                            <div>
+                              <p>
+                                Install Sentry's client
+                                 
+                              </p>
+                            </div>
                           </div>
-                        </div>
-                      </li>
-                    </TodoItem>
-                    <TodoItem
-                      key="3"
-                      onSkip={[Function]}
-                      task={
-                        Object {
-                          "description": "Bring your team aboard",
-                          "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
+                        </li>
+                      </TodoItem>
+                      <TodoItem
+                        key="3"
+                        onSkip={[Function]}
+                        task={
+                          Object {
+                            "description": "Bring your team aboard",
+                            "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
           by unlocking suggested owners, mentions, and assignment.",
-                          "display": true,
-                          "featureLocation": "organization",
-                          "location": "members/",
-                          "prereq": Array [],
-                          "skippable": true,
-                          "task": 3,
-                          "title": "Invite team member",
+                            "display": true,
+                            "featureLocation": "organization",
+                            "location": "members/",
+                            "prereq": Array [],
+                            "skippable": true,
+                            "task": 3,
+                            "title": "Invite team member",
+                          }
                         }
-                      }
-                    >
-                      <li
-                        className=""
-                        onMouseOut={[Function]}
-                        onMouseOver={[Function]}
                       >
-                        <div
-                          className="todo-content"
+                        <li
+                          className=""
+                          onMouseOut={[Function]}
+                          onMouseOver={[Function]}
                         >
                           <div
-                            className="ob-checkbox"
-                          />
-                          <a
-                            href="/organizations/org-slug/members/"
-                            onClick={[Function]}
+                            className="todo-content"
                           >
-                            <h4>
-                              Invite team member
-                            </h4>
-                          </a>
-                          <div>
-                            <p>
-                              Bring your team aboard
-                               
-                            </p>
+                            <div
+                              className="ob-checkbox"
+                            />
+                            <a
+                              href="/organizations/org-slug/members/"
+                              onClick={[Function]}
+                            >
+                              <h4>
+                                Invite team member
+                              </h4>
+                            </a>
+                            <div>
+                              <p>
+                                Bring your team aboard
+                                 
+                              </p>
+                            </div>
+                            <a
+                              className="skip-btn btn btn-default"
+                              onClick={[Function]}
+                            >
+                              Skip
+                            </a>
                           </div>
-                          <a
-                            className="skip-btn btn btn-default"
-                            onClick={[Function]}
-                          >
-                            Skip
-                          </a>
-                        </div>
-                      </li>
-                    </TodoItem>
-                    <TodoItem
-                      key="4"
-                      onSkip={[Function]}
-                      task={
-                        Object {
-                          "description": "Add Sentry to a second platform",
-                          "detailedDescription": "Cross platform functionality to support both your frontend and backend.",
-                          "display": true,
-                          "featureLocation": "organization",
-                          "location": "projects/new/",
-                          "prereq": Array [
-                            1,
-                            2,
-                          ],
-                          "skippable": true,
-                          "task": 4,
-                          "title": "Add a second platform",
+                        </li>
+                      </TodoItem>
+                      <TodoItem
+                        key="4"
+                        onSkip={[Function]}
+                        task={
+                          Object {
+                            "description": "Add Sentry to a second platform",
+                            "detailedDescription": "Cross platform functionality to support both your frontend and backend.",
+                            "display": true,
+                            "featureLocation": "organization",
+                            "location": "projects/new/",
+                            "prereq": Array [
+                              1,
+                              2,
+                            ],
+                            "skippable": true,
+                            "task": 4,
+                            "title": "Add a second platform",
+                          }
                         }
-                      }
-                    >
-                      <li
-                        className=""
-                        onMouseOut={[Function]}
-                        onMouseOver={[Function]}
                       >
-                        <div
-                          className="todo-content"
+                        <li
+                          className=""
+                          onMouseOut={[Function]}
+                          onMouseOver={[Function]}
                         >
                           <div
-                            className="ob-checkbox"
-                          />
-                          <a
-                            href="/organizations/org-slug/projects/new/"
-                            onClick={[Function]}
+                            className="todo-content"
                           >
-                            <h4>
-                              Add a second platform
-                            </h4>
-                          </a>
-                          <div>
-                            <p>
-                              Add Sentry to a second platform
-                               
-                            </p>
+                            <div
+                              className="ob-checkbox"
+                            />
+                            <a
+                              href="/organizations/org-slug/projects/new/"
+                              onClick={[Function]}
+                            >
+                              <h4>
+                                Add a second platform
+                              </h4>
+                            </a>
+                            <div>
+                              <p>
+                                Add Sentry to a second platform
+                                 
+                              </p>
+                            </div>
+                            <a
+                              className="skip-btn btn btn-default"
+                              onClick={[Function]}
+                            >
+                              Skip
+                            </a>
                           </div>
-                          <a
-                            className="skip-btn btn btn-default"
-                            onClick={[Function]}
-                          >
-                            Skip
-                          </a>
-                        </div>
-                      </li>
-                    </TodoItem>
-                    <TodoItem
-                      key="5"
-                      onSkip={[Function]}
-                      task={
-                        Object {
-                          "description": "Know who is being affected by crashes",
-                          "detailedDescription": "Unlock features that let you
+                        </li>
+                      </TodoItem>
+                      <TodoItem
+                        key="5"
+                        onSkip={[Function]}
+                        task={
+                          Object {
+                            "description": "Know who is being affected by crashes",
+                            "detailedDescription": "Unlock features that let you
           drill down into the number of users affected by an issue as well as get a broader sense about the quality of the application.",
-                          "display": true,
-                          "featureLocation": "absolute",
-                          "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
-                          "prereq": Array [
-                            1,
-                            2,
-                          ],
-                          "skippable": true,
-                          "task": 5,
-                          "title": "Add user context",
+                            "display": true,
+                            "featureLocation": "absolute",
+                            "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
+                            "prereq": Array [
+                              1,
+                              2,
+                            ],
+                            "skippable": true,
+                            "task": 5,
+                            "title": "Add user context",
+                          }
                         }
-                      }
-                    >
-                      <li
-                        className=""
-                        onMouseOut={[Function]}
-                        onMouseOver={[Function]}
                       >
-                        <div
-                          className="todo-content"
+                        <li
+                          className=""
+                          onMouseOut={[Function]}
+                          onMouseOver={[Function]}
                         >
                           <div
-                            className="ob-checkbox"
-                          />
-                          <a
-                            href="https://docs.sentry.io/enriching-error-data/context/#capturing-the-user"
-                            onClick={[Function]}
+                            className="todo-content"
                           >
-                            <h4>
-                              Add user context
-                            </h4>
-                          </a>
-                          <div>
-                            <p>
-                              Know who is being affected by crashes
-                               
-                            </p>
+                            <div
+                              className="ob-checkbox"
+                            />
+                            <a
+                              href="https://docs.sentry.io/enriching-error-data/context/#capturing-the-user"
+                              onClick={[Function]}
+                            >
+                              <h4>
+                                Add user context
+                              </h4>
+                            </a>
+                            <div>
+                              <p>
+                                Know who is being affected by crashes
+                                 
+                              </p>
+                            </div>
+                            <a
+                              className="skip-btn btn btn-default"
+                              onClick={[Function]}
+                            >
+                              Skip
+                            </a>
                           </div>
-                          <a
-                            className="skip-btn btn btn-default"
-                            onClick={[Function]}
-                          >
-                            Skip
-                          </a>
-                        </div>
-                      </li>
-                    </TodoItem>
-                    <TodoItem
-                      key="6"
-                      onSkip={[Function]}
-                      task={
-                        Object {
-                          "description": "See what releases are generating errors",
-                          "detailedDescription": "Set up commits for additional context when determining the cause of an issue
+                        </li>
+                      </TodoItem>
+                      <TodoItem
+                        key="6"
+                        onSkip={[Function]}
+                        task={
+                          Object {
+                            "description": "See what releases are generating errors",
+                            "detailedDescription": "Set up commits for additional context when determining the cause of an issue
           e.g. suggested owners and resolve issues via commit messages.",
-                          "display": true,
-                          "featureLocation": "project",
-                          "location": "settings/release-tracking/",
-                          "prereq": Array [
-                            1,
-                            2,
-                          ],
-                          "skippable": true,
-                          "task": 6,
-                          "title": "Set up release tracking",
+                            "display": true,
+                            "featureLocation": "project",
+                            "location": "settings/release-tracking/",
+                            "prereq": Array [
+                              1,
+                              2,
+                            ],
+                            "skippable": true,
+                            "task": 6,
+                            "title": "Set up release tracking",
+                          }
                         }
-                      }
-                    >
-                      <li
-                        className=""
-                        onMouseOut={[Function]}
-                        onMouseOver={[Function]}
                       >
-                        <div
-                          className="todo-content"
+                        <li
+                          className=""
+                          onMouseOut={[Function]}
+                          onMouseOver={[Function]}
                         >
                           <div
-                            className="ob-checkbox"
-                          />
-                          <a
-                            href="/organizations/org-slug/projects/choose/?onboarding=1&task=6"
-                            onClick={[Function]}
+                            className="todo-content"
                           >
-                            <h4>
-                              Set up release tracking
-                            </h4>
-                          </a>
-                          <div>
-                            <p>
-                              See what releases are generating errors
-                               
-                            </p>
+                            <div
+                              className="ob-checkbox"
+                            />
+                            <a
+                              href="/organizations/org-slug/projects/choose/?onboarding=1&task=6"
+                              onClick={[Function]}
+                            >
+                              <h4>
+                                Set up release tracking
+                              </h4>
+                            </a>
+                            <div>
+                              <p>
+                                See what releases are generating errors
+                                 
+                              </p>
+                            </div>
+                            <a
+                              className="skip-btn btn btn-default"
+                              onClick={[Function]}
+                            >
+                              Skip
+                            </a>
                           </div>
-                          <a
-                            className="skip-btn btn btn-default"
-                            onClick={[Function]}
-                          >
-                            Skip
-                          </a>
-                        </div>
-                      </li>
-                    </TodoItem>
-                    <TodoItem
-                      key="7"
-                      onSkip={[Function]}
-                      task={
-                        Object {
-                          "description": "Deminify JavaScript stack traces",
-                          "detailedDescription": "View source code context obtained from stack traces in their
+                        </li>
+                      </TodoItem>
+                      <TodoItem
+                        key="7"
+                        onSkip={[Function]}
+                        task={
+                          Object {
+                            "description": "Deminify JavaScript stack traces",
+                            "detailedDescription": "View source code context obtained from stack traces in their
           original untransformed form, which is particularly useful for debugging minified code.",
-                          "display": true,
-                          "featureLocation": "absolute",
-                          "location": "https://docs.sentry.io/platforms/javascript/sourcemaps/",
-                          "prereq": Array [
-                            1,
-                            2,
-                          ],
-                          "skippable": true,
-                          "task": 7,
-                          "title": "Upload source maps",
+                            "display": true,
+                            "featureLocation": "absolute",
+                            "location": "https://docs.sentry.io/platforms/javascript/sourcemaps/",
+                            "prereq": Array [
+                              1,
+                              2,
+                            ],
+                            "skippable": true,
+                            "task": 7,
+                            "title": "Upload source maps",
+                          }
                         }
-                      }
-                    >
-                      <li
-                        className=""
-                        onMouseOut={[Function]}
-                        onMouseOver={[Function]}
                       >
-                        <div
-                          className="todo-content"
+                        <li
+                          className=""
+                          onMouseOut={[Function]}
+                          onMouseOver={[Function]}
                         >
                           <div
-                            className="ob-checkbox"
-                          />
-                          <a
-                            href="https://docs.sentry.io/platforms/javascript/sourcemaps/"
-                            onClick={[Function]}
+                            className="todo-content"
                           >
-                            <h4>
-                              Upload source maps
-                            </h4>
-                          </a>
-                          <div>
-                            <p>
-                              Deminify JavaScript stack traces
-                               
-                            </p>
+                            <div
+                              className="ob-checkbox"
+                            />
+                            <a
+                              href="https://docs.sentry.io/platforms/javascript/sourcemaps/"
+                              onClick={[Function]}
+                            >
+                              <h4>
+                                Upload source maps
+                              </h4>
+                            </a>
+                            <div>
+                              <p>
+                                Deminify JavaScript stack traces
+                                 
+                              </p>
+                            </div>
+                            <a
+                              className="skip-btn btn btn-default"
+                              onClick={[Function]}
+                            >
+                              Skip
+                            </a>
                           </div>
-                          <a
-                            className="skip-btn btn btn-default"
-                            onClick={[Function]}
-                          >
-                            Skip
-                          </a>
-                        </div>
-                      </li>
-                    </TodoItem>
-                  </ul>
+                        </li>
+                      </TodoItem>
+                    </ul>
+                  </div>
                 </div>
-              </div>
-            </TodoList>
+              </TodoList>
+            </withApi(TodoList)>
           </div>
         </SidebarPanelBody>
       </div>
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index 35d3714ba7..eefc533c66 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`OrganizationTeamProjects Should render 1`] = `
-<TeamProjects
+<withApi(TeamProjects)
   location={
     Object {
       "query": Object {},
@@ -14,71 +14,60 @@ exports[`OrganizationTeamProjects Should render 1`] = `
     }
   }
 >
-  <Panel>
-    <Component
-      className="css-yahxlu-Panel e1laxa7d0"
-    >
-      <div
+  <TeamProjects
+    api={Client {}}
+    location={
+      Object {
+        "query": Object {},
+      }
+    }
+    params={
+      Object {
+        "orgId": "org-slug",
+        "teamId": "team-slug",
+      }
+    }
+  >
+    <Panel>
+      <Component
         className="css-yahxlu-Panel e1laxa7d0"
       >
-        <PanelHeader
-          hasButtons={true}
+        <div
+          className="css-yahxlu-Panel e1laxa7d0"
         >
-          <Component
-            className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
+          <PanelHeader
             hasButtons={true}
           >
-            <Flex
-              align="center"
+            <Component
               className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
-              justify="space-between"
+              hasButtons={true}
             >
-              <Base
+              <Flex
                 align="center"
-                className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
+                className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
                 justify="space-between"
               >
-                <div
+                <Base
+                  align="center"
                   className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
-                  is={null}
+                  justify="space-between"
                 >
-                  <div>
-                    Projects
-                  </div>
                   <div
-                    style={
-                      Object {
-                        "textTransform": "none",
-                      }
-                    }
+                    className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
+                    is={null}
                   >
-                    <DropdownAutoComplete
-                      alignMenu="right"
-                      emptyMessage="No projects"
-                      items={
-                        Array [
-                          Object {
-                            "label": <ProjectListElement>
-                              project-slug
-                            </ProjectListElement>,
-                            "searchKey": "project-slug",
-                            "value": "2",
-                          },
-                          Object {
-                            "label": <ProjectListElement>
-                              project-slug-2
-                            </ProjectListElement>,
-                            "searchKey": "project-slug-2",
-                            "value": "3",
-                          },
-                        ]
+                    <div>
+                      Projects
+                    </div>
+                    <div
+                      style={
+                        Object {
+                          "textTransform": "none",
+                        }
                       }
-                      onChange={[Function]}
-                      onSelect={[Function]}
                     >
-                      <DropdownAutoCompleteMenu
+                      <DropdownAutoComplete
                         alignMenu="right"
-                        blendCorner={true}
                         emptyMessage="No projects"
                         items={
                           Array [
@@ -98,51 +87,62 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                             },
                           ]
                         }
-                        maxHeight={300}
                         onChange={[Function]}
                         onSelect={[Function]}
-                        searchPlaceholder="Filter search"
                       >
-                        <AutoComplete
-                          closeOnSelect={true}
-                          disabled={false}
-                          inputIsActor={false}
-                          itemToString={[Function]}
+                        <DropdownAutoCompleteMenu
+                          alignMenu="right"
+                          blendCorner={true}
+                          emptyMessage="No projects"
+                          items={
+                            Array [
+                              Object {
+                                "label": <ProjectListElement>
+                                  project-slug
+                                </ProjectListElement>,
+                                "searchKey": "project-slug",
+                                "value": "2",
+                              },
+                              Object {
+                                "label": <ProjectListElement>
+                                  project-slug-2
+                                </ProjectListElement>,
+                                "searchKey": "project-slug-2",
+                                "value": "3",
+                              },
+                            ]
+                          }
+                          maxHeight={300}
+                          onChange={[Function]}
                           onSelect={[Function]}
-                          resetInputOnClose={true}
-                          shouldSelectWithEnter={true}
-                          shouldSelectWithTab={false}
+                          searchPlaceholder="Filter search"
                         >
-                          <DropdownMenu
-                            closeOnEscape={true}
-                            isOpen={false}
-                            keepMenuOpen={false}
-                            onClickOutside={[Function]}
+                          <AutoComplete
+                            closeOnSelect={true}
+                            disabled={false}
+                            inputIsActor={false}
+                            itemToString={[Function]}
+                            onSelect={[Function]}
+                            resetInputOnClose={true}
+                            shouldSelectWithEnter={true}
+                            shouldSelectWithTab={false}
                           >
-                            <AutoCompleteRoot>
-                              <Component
-                                className="css-6v04yn-AutoCompleteRoot ejumqxq0"
-                              >
-                                <div
+                            <DropdownMenu
+                              closeOnEscape={true}
+                              isOpen={false}
+                              keepMenuOpen={false}
+                              onClickOutside={[Function]}
+                            >
+                              <AutoCompleteRoot>
+                                <Component
                                   className="css-6v04yn-AutoCompleteRoot ejumqxq0"
                                 >
-                                  <Actor
-                                    innerRef={[Function]}
-                                    isOpen={false}
-                                    onClick={[Function]}
-                                    onKeyDown={[Function]}
-                                    onMouseEnter={[Function]}
-                                    onMouseLeave={[Function]}
-                                    role="button"
-                                    style={
-                                      Object {
-                                        "outline": "none",
-                                      }
-                                    }
-                                    tabIndex={-1}
+                                  <div
+                                    className="css-6v04yn-AutoCompleteRoot ejumqxq0"
                                   >
-                                    <div
-                                      className="css-17fe80j-Actor e53us8t0"
+                                    <Actor
+                                      innerRef={[Function]}
+                                      isOpen={false}
                                       onClick={[Function]}
                                       onKeyDown={[Function]}
                                       onMouseEnter={[Function]}
@@ -155,242 +155,203 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                       }
                                       tabIndex={-1}
                                     >
-                                      <DropdownButton
-                                        isOpen={false}
-                                        size="xsmall"
+                                      <div
+                                        className="css-17fe80j-Actor e53us8t0"
+                                        onClick={[Function]}
+                                        onKeyDown={[Function]}
+                                        onMouseEnter={[Function]}
+                                        onMouseLeave={[Function]}
+                                        role="button"
+                                        style={
+                                          Object {
+                                            "outline": "none",
+                                          }
+                                        }
+                                        tabIndex={-1}
                                       >
-                                        <StyledButton
+                                        <DropdownButton
                                           isOpen={false}
                                           size="xsmall"
                                         >
-                                          <ForwardRef
-                                            className="css-qfyoa0-StyledButton e1yghndz1"
+                                          <StyledButton
                                             isOpen={false}
                                             size="xsmall"
                                           >
-                                            <Button
+                                            <ForwardRef
                                               className="css-qfyoa0-StyledButton e1yghndz1"
-                                              disabled={false}
-                                              innerRef={null}
+                                              isOpen={false}
                                               size="xsmall"
                                             >
-                                              <StyledButton
-                                                aria-disabled={false}
+                                              <Button
                                                 className="css-qfyoa0-StyledButton e1yghndz1"
                                                 disabled={false}
                                                 innerRef={null}
-                                                onClick={[Function]}
-                                                role="button"
                                                 size="xsmall"
                                               >
-                                                <ForwardRef
+                                                <StyledButton
                                                   aria-disabled={false}
-                                                  className="e1yghndz1 css-1momm09-StyledButton-getColors-StyledButton eqrebog0"
+                                                  className="css-qfyoa0-StyledButton e1yghndz1"
                                                   disabled={false}
+                                                  innerRef={null}
                                                   onClick={[Function]}
                                                   role="button"
                                                   size="xsmall"
                                                 >
-                                                  <button
+                                                  <ForwardRef
                                                     aria-disabled={false}
                                                     className="e1yghndz1 css-1momm09-StyledButton-getColors-StyledButton eqrebog0"
+                                                    disabled={false}
                                                     onClick={[Function]}
                                                     role="button"
                                                     size="xsmall"
                                                   >
-                                                    <ButtonLabel
+                                                    <button
+                                                      aria-disabled={false}
+                                                      className="e1yghndz1 css-1momm09-StyledButton-getColors-StyledButton eqrebog0"
+                                                      onClick={[Function]}
+                                                      role="button"
                                                       size="xsmall"
                                                     >
-                                                      <Component
-                                                        className="css-uthd1f-ButtonLabel eqrebog1"
+                                                      <ButtonLabel
                                                         size="xsmall"
                                                       >
-                                                        <span
+                                                        <Component
                                                           className="css-uthd1f-ButtonLabel eqrebog1"
+                                                          size="xsmall"
                                                         >
-                                                          Add Project
-                                                          <StyledChevronDown>
-                                                            <Component
-                                                              className="css-17v3tc-StyledChevronDown e1yghndz0"
-                                                            >
-                                                              <InlineSvg
+                                                          <span
+                                                            className="css-uthd1f-ButtonLabel eqrebog1"
+                                                          >
+                                                            Add Project
+                                                            <StyledChevronDown>
+                                                              <Component
                                                                 className="css-17v3tc-StyledChevronDown e1yghndz0"
-                                                                src="icon-chevron-down"
                                                               >
-                                                                <StyledSvg
+                                                                <InlineSvg
                                                                   className="css-17v3tc-StyledChevronDown e1yghndz0"
-                                                                  height="1em"
-                                                                  viewBox={Object {}}
-                                                                  width="1em"
+                                                                  src="icon-chevron-down"
                                                                 >
-                                                                  <svg
-                                                                    className="e1yghndz0 css-1gdv3x4-StyledSvg-StyledChevronDown e2idor0"
+                                                                  <StyledSvg
+                                                                    className="css-17v3tc-StyledChevronDown e1yghndz0"
                                                                     height="1em"
                                                                     viewBox={Object {}}
                                                                     width="1em"
                                                                   >
-                                                                    <use
-                                                                      href="#test"
-                                                                      xlinkHref="#test"
-                                                                    />
-                                                                  </svg>
-                                                                </StyledSvg>
-                                                              </InlineSvg>
-                                                            </Component>
-                                                          </StyledChevronDown>
-                                                        </span>
-                                                      </Component>
-                                                    </ButtonLabel>
-                                                  </button>
-                                                </ForwardRef>
-                                              </StyledButton>
-                                            </Button>
-                                          </ForwardRef>
-                                        </StyledButton>
-                                      </DropdownButton>
-                                    </div>
-                                  </Actor>
-                                </div>
-                              </Component>
-                            </AutoCompleteRoot>
-                          </DropdownMenu>
-                        </AutoComplete>
-                      </DropdownAutoCompleteMenu>
-                    </DropdownAutoComplete>
+                                                                    <svg
+                                                                      className="e1yghndz0 css-1gdv3x4-StyledSvg-StyledChevronDown e2idor0"
+                                                                      height="1em"
+                                                                      viewBox={Object {}}
+                                                                      width="1em"
+                                                                    >
+                                                                      <use
+                                                                        href="#test"
+                                                                        xlinkHref="#test"
+                                                                      />
+                                                                    </svg>
+                                                                  </StyledSvg>
+                                                                </InlineSvg>
+                                                              </Component>
+                                                            </StyledChevronDown>
+                                                          </span>
+                                                        </Component>
+                                                      </ButtonLabel>
+                                                    </button>
+                                                  </ForwardRef>
+                                                </StyledButton>
+                                              </Button>
+                                            </ForwardRef>
+                                          </StyledButton>
+                                        </DropdownButton>
+                                      </div>
+                                    </Actor>
+                                  </div>
+                                </Component>
+                              </AutoCompleteRoot>
+                            </DropdownMenu>
+                          </AutoComplete>
+                        </DropdownAutoCompleteMenu>
+                      </DropdownAutoComplete>
+                    </div>
                   </div>
-                </div>
-              </Base>
-            </Flex>
-          </Component>
-        </PanelHeader>
-        <PanelBody
-          direction="column"
-          disablePadding={true}
-          flex={false}
-        >
-          <div
-            className="css-9vq8an-textStyles"
+                </Base>
+              </Flex>
+            </Component>
+          </PanelHeader>
+          <PanelBody
+            direction="column"
+            disablePadding={true}
+            flex={false}
           >
-            <StyledPanelItem
-              key="2"
+            <div
+              className="css-9vq8an-textStyles"
             >
-              <Base
-                className="css-15fe8h6-PanelItem-StyledPanelItem eqsa6vb1"
+              <StyledPanelItem
+                key="2"
               >
-                <div
+                <Base
                   className="css-15fe8h6-PanelItem-StyledPanelItem eqsa6vb1"
-                  is={null}
                 >
-                  <ProjectItem
-                    organization={
-                      Object {
-                        "access": Array [
-                          "org:read",
-                          "org:write",
-                          "org:admin",
-                          "org:integrations",
-                          "project:read",
-                          "project:write",
-                          "project:admin",
-                          "team:read",
-                          "team:write",
-                          "team:admin",
-                        ],
-                        "features": Array [],
-                        "id": "3",
-                        "name": "Organization Name",
-                        "onboardingTasks": Array [],
-                        "projects": Array [],
-                        "scrapeJavaScript": true,
-                        "slug": "org-slug",
-                        "status": Object {
-                          "id": "active",
-                          "name": "active",
-                        },
-                        "teams": Array [],
-                      }
-                    }
-                    project={
-                      Object {
-                        "environments": Array [],
-                        "hasAccess": true,
-                        "id": "2",
-                        "isBookmarked": false,
-                        "isMember": true,
-                        "name": "Project Name",
-                        "slug": "project-slug",
-                        "teams": Array [
-                          Object {
-                            "id": "1",
-                            "isMember": true,
-                            "memberCount": 0,
-                            "name": "Team Name",
-                            "slug": "team-slug",
+                  <div
+                    className="css-15fe8h6-PanelItem-StyledPanelItem eqsa6vb1"
+                    is={null}
+                  >
+                    <ProjectItem
+                      organization={
+                        Object {
+                          "access": Array [
+                            "org:read",
+                            "org:write",
+                            "org:admin",
+                            "org:integrations",
+                            "project:read",
+                            "project:write",
+                            "project:admin",
+                            "team:read",
+                            "team:write",
+                            "team:admin",
+                          ],
+                          "features": Array [],
+                          "id": "3",
+                          "name": "Organization Name",
+                          "onboardingTasks": Array [],
+                          "projects": Array [],
+                          "scrapeJavaScript": true,
+                          "slug": "org-slug",
+                          "status": Object {
+                            "id": "active",
+                            "name": "active",
                           },
-                        ],
+                          "teams": Array [],
+                        }
                       }
-                    }
-                  >
-                    <Container
-                      key="2"
-                    >
-                      <div
-                        className="css-9ku3o0-Container enngb6z0"
-                      >
-                        <BookmarkLink
-                          isBookmarked={false}
-                          onToggle={[Function]}
-                          organization={
-                            Object {
-                              "access": Array [
-                                "org:read",
-                                "org:write",
-                                "org:admin",
-                                "org:integrations",
-                                "project:read",
-                                "project:write",
-                                "project:admin",
-                                "team:read",
-                                "team:write",
-                                "team:admin",
-                              ],
-                              "features": Array [],
-                              "id": "3",
-                              "name": "Organization Name",
-                              "onboardingTasks": Array [],
-                              "projects": Array [],
-                              "scrapeJavaScript": true,
-                              "slug": "org-slug",
-                              "status": Object {
-                                "id": "active",
-                                "name": "active",
-                              },
-                              "teams": Array [],
-                            }
-                          }
-                          project={
+                      project={
+                        Object {
+                          "environments": Array [],
+                          "hasAccess": true,
+                          "id": "2",
+                          "isBookmarked": false,
+                          "isMember": true,
+                          "name": "Project Name",
+                          "slug": "project-slug",
+                          "teams": Array [
                             Object {
-                              "environments": Array [],
-                              "hasAccess": true,
-                              "id": "2",
-                              "isBookmarked": false,
+                              "id": "1",
                               "isMember": true,
-                              "name": "Project Name",
-                              "slug": "project-slug",
-                              "teams": Array [
-                                Object {
-                                  "id": "1",
-                                  "isMember": true,
-                                  "memberCount": 0,
-                                  "name": "Team Name",
-                                  "slug": "team-slug",
-                                },
-                              ],
-                            }
-                          }
+                              "memberCount": 0,
+                              "name": "Team Name",
+                              "slug": "team-slug",
+                            },
+                          ],
+                        }
+                      }
+                    >
+                      <Container
+                        key="2"
+                      >
+                        <div
+                          className="css-9ku3o0-Container enngb6z0"
                         >
-                          <withApi(BookmarkStar)
-                            className="css-10z01iz-BookmarkLink enngb6z1"
+                          <BookmarkLink
                             isBookmarked={false}
                             onToggle={[Function]}
                             organization={
@@ -442,8 +403,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                               }
                             }
                           >
-                            <BookmarkStar
-                              api={Client {}}
+                            <withApi(BookmarkStar)
                               className="css-10z01iz-BookmarkLink enngb6z1"
                               isBookmarked={false}
                               onToggle={[Function]}
@@ -496,57 +456,39 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                 }
                               }
                             >
-                              <Star
+                              <BookmarkStar
+                                api={Client {}}
                                 className="css-10z01iz-BookmarkLink enngb6z1"
                                 isBookmarked={false}
-                                onClick={[Function]}
-                                src="icon-star-small-filled"
-                              >
-                                <InlineSvg
-                                  className="enngb6z1 css-1j5sthu-Star-BookmarkLink e1urz3930"
-                                  isBookmarked={false}
-                                  onClick={[Function]}
-                                  src="icon-star-small-filled"
-                                >
-                                  <StyledSvg
-                                    className="enngb6z1 css-1j5sthu-Star-BookmarkLink e1urz3930"
-                                    height="1em"
-                                    isBookmarked={false}
-                                    onClick={[Function]}
-                                    viewBox={Object {}}
-                                    width="1em"
-                                  >
-                                    <svg
-                                      className="enngb6z1 e1urz3930 css-85qks9-StyledSvg-Star-BookmarkLink e2idor0"
-                                      height="1em"
-                                      onClick={[Function]}
-                                      viewBox={Object {}}
-                                      width="1em"
-                                    >
-                                      <use
-                                        href="#test"
-                                        xlinkHref="#test"
-                                      />
-                                    </svg>
-                                  </StyledSvg>
-                                </InlineSvg>
-                              </Star>
-                            </BookmarkStar>
-                          </withApi(BookmarkStar)>
-                        </BookmarkLink>
-                        <Link
-                          to="/org-slug/project-slug/"
-                        >
-                          <Link
-                            onlyActiveOnIndex={false}
-                            style={Object {}}
-                            to="/org-slug/project-slug/"
-                          >
-                            <a
-                              onClick={[Function]}
-                              style={Object {}}
-                            >
-                              <ProjectLabel
+                                onToggle={[Function]}
+                                organization={
+                                  Object {
+                                    "access": Array [
+                                      "org:read",
+                                      "org:write",
+                                      "org:admin",
+                                      "org:integrations",
+                                      "project:read",
+                                      "project:write",
+                                      "project:admin",
+                                      "team:read",
+                                      "team:write",
+                                      "team:admin",
+                                    ],
+                                    "features": Array [],
+                                    "id": "3",
+                                    "name": "Organization Name",
+                                    "onboardingTasks": Array [],
+                                    "projects": Array [],
+                                    "scrapeJavaScript": true,
+                                    "slug": "org-slug",
+                                    "status": Object {
+                                      "id": "active",
+                                      "name": "active",
+                                    },
+                                    "teams": Array [],
+                                  }
+                                }
                                 project={
                                   Object {
                                     "environments": Array [],
@@ -568,8 +510,57 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                   }
                                 }
                               >
-                                <span
-                                  className="project-label"
+                                <Star
+                                  className="css-10z01iz-BookmarkLink enngb6z1"
+                                  isBookmarked={false}
+                                  onClick={[Function]}
+                                  src="icon-star-small-filled"
+                                >
+                                  <InlineSvg
+                                    className="enngb6z1 css-1j5sthu-Star-BookmarkLink e1urz3930"
+                                    isBookmarked={false}
+                                    onClick={[Function]}
+                                    src="icon-star-small-filled"
+                                  >
+                                    <StyledSvg
+                                      className="enngb6z1 css-1j5sthu-Star-BookmarkLink e1urz3930"
+                                      height="1em"
+                                      isBookmarked={false}
+                                      onClick={[Function]}
+                                      viewBox={Object {}}
+                                      width="1em"
+                                    >
+                                      <svg
+                                        className="enngb6z1 e1urz3930 css-85qks9-StyledSvg-Star-BookmarkLink e2idor0"
+                                        height="1em"
+                                        onClick={[Function]}
+                                        viewBox={Object {}}
+                                        width="1em"
+                                      >
+                                        <use
+                                          href="#test"
+                                          xlinkHref="#test"
+                                        />
+                                      </svg>
+                                    </StyledSvg>
+                                  </InlineSvg>
+                                </Star>
+                              </BookmarkStar>
+                            </withApi(BookmarkStar)>
+                          </BookmarkLink>
+                          <Link
+                            to="/org-slug/project-slug/"
+                          >
+                            <Link
+                              onlyActiveOnIndex={false}
+                              style={Object {}}
+                              to="/org-slug/project-slug/"
+                            >
+                              <a
+                                onClick={[Function]}
+                                style={Object {}}
+                              >
+                                <ProjectLabel
                                   project={
                                     Object {
                                       "environments": Array [],
@@ -592,205 +583,183 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                   }
                                 >
                                   <span
-                                    className="project-name"
+                                    className="project-label"
+                                    project={
+                                      Object {
+                                        "environments": Array [],
+                                        "hasAccess": true,
+                                        "id": "2",
+                                        "isBookmarked": false,
+                                        "isMember": true,
+                                        "name": "Project Name",
+                                        "slug": "project-slug",
+                                        "teams": Array [
+                                          Object {
+                                            "id": "1",
+                                            "isMember": true,
+                                            "memberCount": 0,
+                                            "name": "Team Name",
+                                            "slug": "team-slug",
+                                          },
+                                        ],
+                                      }
+                                    }
                                   >
-                                    project-slug
+                                    <span
+                                      className="project-name"
+                                    >
+                                      project-slug
+                                    </span>
                                   </span>
-                                </span>
-                              </ProjectLabel>
-                            </a>
+                                </ProjectLabel>
+                              </a>
+                            </Link>
                           </Link>
-                        </Link>
-                      </div>
-                    </Container>
-                  </ProjectItem>
-                  <Tooltip
-                    disabled={true}
-                    title="You do not have enough permission to change project association."
-                  >
-                    <Button
-                      disabled={false}
-                      onClick={[Function]}
-                      size="small"
+                        </div>
+                      </Container>
+                    </ProjectItem>
+                    <Tooltip
+                      disabled={true}
+                      title="You do not have enough permission to change project association."
                     >
-                      <StyledButton
-                        aria-disabled={false}
+                      <Button
                         disabled={false}
                         onClick={[Function]}
-                        role="button"
                         size="small"
                       >
-                        <ForwardRef
+                        <StyledButton
                           aria-disabled={false}
-                          className="css-dkprmi-StyledButton-getColors eqrebog0"
                           disabled={false}
                           onClick={[Function]}
                           role="button"
                           size="small"
                         >
-                          <button
+                          <ForwardRef
                             aria-disabled={false}
                             className="css-dkprmi-StyledButton-getColors eqrebog0"
+                            disabled={false}
                             onClick={[Function]}
                             role="button"
                             size="small"
                           >
-                            <ButtonLabel
+                            <button
+                              aria-disabled={false}
+                              className="css-dkprmi-StyledButton-getColors eqrebog0"
+                              onClick={[Function]}
+                              role="button"
                               size="small"
                             >
-                              <Component
-                                className="css-7ui8bl-ButtonLabel eqrebog1"
+                              <ButtonLabel
                                 size="small"
                               >
-                                <span
+                                <Component
                                   className="css-7ui8bl-ButtonLabel eqrebog1"
+                                  size="small"
                                 >
-                                  <RemoveIcon>
-                                    <Component
-                                      className="css-1e2j5j0-RemoveIcon eqsa6vb0"
-                                    >
-                                      <InlineSvg
+                                  <span
+                                    className="css-7ui8bl-ButtonLabel eqrebog1"
+                                  >
+                                    <RemoveIcon>
+                                      <Component
                                         className="css-1e2j5j0-RemoveIcon eqsa6vb0"
-                                        src="icon-circle-subtract"
                                       >
-                                        <StyledSvg
+                                        <InlineSvg
                                           className="css-1e2j5j0-RemoveIcon eqsa6vb0"
-                                          height="1em"
-                                          viewBox={Object {}}
-                                          width="1em"
+                                          src="icon-circle-subtract"
                                         >
-                                          <svg
-                                            className="eqsa6vb0 css-10g0ex9-StyledSvg-RemoveIcon e2idor0"
+                                          <StyledSvg
+                                            className="css-1e2j5j0-RemoveIcon eqsa6vb0"
                                             height="1em"
                                             viewBox={Object {}}
                                             width="1em"
                                           >
-                                            <use
-                                              href="#test"
-                                              xlinkHref="#test"
-                                            />
-                                          </svg>
-                                        </StyledSvg>
-                                      </InlineSvg>
-                                    </Component>
-                                  </RemoveIcon>
-                                   
-                                  Remove
-                                </span>
-                              </Component>
-                            </ButtonLabel>
-                          </button>
-                        </ForwardRef>
-                      </StyledButton>
-                    </Button>
-                  </Tooltip>
-                </div>
-              </Base>
-            </StyledPanelItem>
-            <StyledPanelItem
-              key="3"
-            >
-              <Base
-                className="css-15fe8h6-PanelItem-StyledPanelItem eqsa6vb1"
+                                            <svg
+                                              className="eqsa6vb0 css-10g0ex9-StyledSvg-RemoveIcon e2idor0"
+                                              height="1em"
+                                              viewBox={Object {}}
+                                              width="1em"
+                                            >
+                                              <use
+                                                href="#test"
+                                                xlinkHref="#test"
+                                              />
+                                            </svg>
+                                          </StyledSvg>
+                                        </InlineSvg>
+                                      </Component>
+                                    </RemoveIcon>
+                                     
+                                    Remove
+                                  </span>
+                                </Component>
+                              </ButtonLabel>
+                            </button>
+                          </ForwardRef>
+                        </StyledButton>
+                      </Button>
+                    </Tooltip>
+                  </div>
+                </Base>
+              </StyledPanelItem>
+              <StyledPanelItem
+                key="3"
               >
-                <div
+                <Base
                   className="css-15fe8h6-PanelItem-StyledPanelItem eqsa6vb1"
-                  is={null}
                 >
-                  <ProjectItem
-                    organization={
-                      Object {
-                        "access": Array [
-                          "org:read",
-                          "org:write",
-                          "org:admin",
-                          "org:integrations",
-                          "project:read",
-                          "project:write",
-                          "project:admin",
-                          "team:read",
-                          "team:write",
-                          "team:admin",
-                        ],
-                        "features": Array [],
-                        "id": "3",
-                        "name": "Organization Name",
-                        "onboardingTasks": Array [],
-                        "projects": Array [],
-                        "scrapeJavaScript": true,
-                        "slug": "org-slug",
-                        "status": Object {
-                          "id": "active",
-                          "name": "active",
-                        },
-                        "teams": Array [],
+                  <div
+                    className="css-15fe8h6-PanelItem-StyledPanelItem eqsa6vb1"
+                    is={null}
+                  >
+                    <ProjectItem
+                      organization={
+                        Object {
+                          "access": Array [
+                            "org:read",
+                            "org:write",
+                            "org:admin",
+                            "org:integrations",
+                            "project:read",
+                            "project:write",
+                            "project:admin",
+                            "team:read",
+                            "team:write",
+                            "team:admin",
+                          ],
+                          "features": Array [],
+                          "id": "3",
+                          "name": "Organization Name",
+                          "onboardingTasks": Array [],
+                          "projects": Array [],
+                          "scrapeJavaScript": true,
+                          "slug": "org-slug",
+                          "status": Object {
+                            "id": "active",
+                            "name": "active",
+                          },
+                          "teams": Array [],
+                        }
                       }
-                    }
-                    project={
-                      Object {
-                        "environments": Array [],
-                        "hasAccess": true,
-                        "id": "3",
-                        "isBookmarked": false,
-                        "isMember": true,
-                        "name": "Project Name 2",
-                        "slug": "project-slug-2",
-                        "teams": Array [],
+                      project={
+                        Object {
+                          "environments": Array [],
+                          "hasAccess": true,
+                          "id": "3",
+                          "isBookmarked": false,
+                          "isMember": true,
+                          "name": "Project Name 2",
+                          "slug": "project-slug-2",
+                          "teams": Array [],
+                        }
                       }
-                    }
-                  >
-                    <Container
-                      key="3"
                     >
-                      <div
-                        className="css-9ku3o0-Container enngb6z0"
+                      <Container
+                        key="3"
                       >
-                        <BookmarkLink
-                          isBookmarked={false}
-                          onToggle={[Function]}
-                          organization={
-                            Object {
-                              "access": Array [
-                                "org:read",
-                                "org:write",
-                                "org:admin",
-                                "org:integrations",
-                                "project:read",
-                                "project:write",
-                                "project:admin",
-                                "team:read",
-                                "team:write",
-                                "team:admin",
-                              ],
-                              "features": Array [],
-                              "id": "3",
-                              "name": "Organization Name",
-                              "onboardingTasks": Array [],
-                              "projects": Array [],
-                              "scrapeJavaScript": true,
-                              "slug": "org-slug",
-                              "status": Object {
-                                "id": "active",
-                                "name": "active",
-                              },
-                              "teams": Array [],
-                            }
-                          }
-                          project={
-                            Object {
-                              "environments": Array [],
-                              "hasAccess": true,
-                              "id": "3",
-                              "isBookmarked": false,
-                              "isMember": true,
-                              "name": "Project Name 2",
-                              "slug": "project-slug-2",
-                              "teams": Array [],
-                            }
-                          }
+                        <div
+                          className="css-9ku3o0-Container enngb6z0"
                         >
-                          <withApi(BookmarkStar)
-                            className="css-10z01iz-BookmarkLink enngb6z1"
+                          <BookmarkLink
                             isBookmarked={false}
                             onToggle={[Function]}
                             organization={
@@ -834,8 +803,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                               }
                             }
                           >
-                            <BookmarkStar
-                              api={Client {}}
+                            <withApi(BookmarkStar)
                               className="css-10z01iz-BookmarkLink enngb6z1"
                               isBookmarked={false}
                               onToggle={[Function]}
@@ -880,72 +848,103 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                 }
                               }
                             >
-                              <Star
+                              <BookmarkStar
+                                api={Client {}}
                                 className="css-10z01iz-BookmarkLink enngb6z1"
                                 isBookmarked={false}
-                                onClick={[Function]}
-                                src="icon-star-small-filled"
+                                onToggle={[Function]}
+                                organization={
+                                  Object {
+                                    "access": Array [
+                                      "org:read",
+                                      "org:write",
+                                      "org:admin",
+                                      "org:integrations",
+                                      "project:read",
+                                      "project:write",
+                                      "project:admin",
+                                      "team:read",
+                                      "team:write",
+                                      "team:admin",
+                                    ],
+                                    "features": Array [],
+                                    "id": "3",
+                                    "name": "Organization Name",
+                                    "onboardingTasks": Array [],
+                                    "projects": Array [],
+                                    "scrapeJavaScript": true,
+                                    "slug": "org-slug",
+                                    "status": Object {
+                                      "id": "active",
+                                      "name": "active",
+                                    },
+                                    "teams": Array [],
+                                  }
+                                }
+                                project={
+                                  Object {
+                                    "environments": Array [],
+                                    "hasAccess": true,
+                                    "id": "3",
+                                    "isBookmarked": false,
+                                    "isMember": true,
+                                    "name": "Project Name 2",
+                                    "slug": "project-slug-2",
+                                    "teams": Array [],
+                                  }
+                                }
                               >
-                                <InlineSvg
-                                  className="enngb6z1 css-1j5sthu-Star-BookmarkLink e1urz3930"
+                                <Star
+                                  className="css-10z01iz-BookmarkLink enngb6z1"
                                   isBookmarked={false}
                                   onClick={[Function]}
                                   src="icon-star-small-filled"
                                 >
-                                  <StyledSvg
+                                  <InlineSvg
                                     className="enngb6z1 css-1j5sthu-Star-BookmarkLink e1urz3930"
-                                    height="1em"
                                     isBookmarked={false}
                                     onClick={[Function]}
-                                    viewBox={Object {}}
-                                    width="1em"
+                                    src="icon-star-small-filled"
                                   >
-                                    <svg
-                                      className="enngb6z1 e1urz3930 css-85qks9-StyledSvg-Star-BookmarkLink e2idor0"
+                                    <StyledSvg
+                                      className="enngb6z1 css-1j5sthu-Star-BookmarkLink e1urz3930"
                                       height="1em"
+                                      isBookmarked={false}
                                       onClick={[Function]}
                                       viewBox={Object {}}
                                       width="1em"
                                     >
-                                      <use
-                                        href="#test"
-                                        xlinkHref="#test"
-                                      />
-                                    </svg>
-                                  </StyledSvg>
-                                </InlineSvg>
-                              </Star>
-                            </BookmarkStar>
-                          </withApi(BookmarkStar)>
-                        </BookmarkLink>
-                        <Link
-                          to="/org-slug/project-slug-2/"
-                        >
+                                      <svg
+                                        className="enngb6z1 e1urz3930 css-85qks9-StyledSvg-Star-BookmarkLink e2idor0"
+                                        height="1em"
+                                        onClick={[Function]}
+                                        viewBox={Object {}}
+                                        width="1em"
+                                      >
+                                        <use
+                                          href="#test"
+                                          xlinkHref="#test"
+                                        />
+                                      </svg>
+                                    </StyledSvg>
+                                  </InlineSvg>
+                                </Star>
+                              </BookmarkStar>
+                            </withApi(BookmarkStar)>
+                          </BookmarkLink>
                           <Link
-                            onlyActiveOnIndex={false}
-                            style={Object {}}
                             to="/org-slug/project-slug-2/"
                           >
-                            <a
-                              onClick={[Function]}
+                            <Link
+                              onlyActiveOnIndex={false}
                               style={Object {}}
+                              to="/org-slug/project-slug-2/"
                             >
-                              <ProjectLabel
-                                project={
-                                  Object {
-                                    "environments": Array [],
-                                    "hasAccess": true,
-                                    "id": "3",
-                                    "isBookmarked": false,
-                                    "isMember": true,
-                                    "name": "Project Name 2",
-                                    "slug": "project-slug-2",
-                                    "teams": Array [],
-                                  }
-                                }
+                              <a
+                                onClick={[Function]}
+                                style={Object {}}
                               >
-                                <span
-                                  className="project-label"
+                                <ProjectLabel
                                   project={
                                     Object {
                                       "environments": Array [],
@@ -960,120 +959,137 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                   }
                                 >
                                   <span
-                                    className="project-name"
+                                    className="project-label"
+                                    project={
+                                      Object {
+                                        "environments": Array [],
+                                        "hasAccess": true,
+                                        "id": "3",
+                                        "isBookmarked": false,
+                                        "isMember": true,
+                                        "name": "Project Name 2",
+                                        "slug": "project-slug-2",
+                                        "teams": Array [],
+                                      }
+                                    }
                                   >
-                                    project-slug-2
+                                    <span
+                                      className="project-name"
+                                    >
+                                      project-slug-2
+                                    </span>
                                   </span>
-                                </span>
-                              </ProjectLabel>
-                            </a>
+                                </ProjectLabel>
+                              </a>
+                            </Link>
                           </Link>
-                        </Link>
-                      </div>
-                    </Container>
-                  </ProjectItem>
-                  <Tooltip
-                    disabled={true}
-                    title="You do not have enough permission to change project association."
-                  >
-                    <Button
-                      disabled={false}
-                      onClick={[Function]}
-                      size="small"
+                        </div>
+                      </Container>
+                    </ProjectItem>
+                    <Tooltip
+                      disabled={true}
+                      title="You do not have enough permission to change project association."
                     >
-                      <StyledButton
-                        aria-disabled={false}
+                      <Button
                         disabled={false}
                         onClick={[Function]}
-                        role="button"
                         size="small"
                       >
-                        <ForwardRef
+                        <StyledButton
                           aria-disabled={false}
-                          className="css-dkprmi-StyledButton-getColors eqrebog0"
                           disabled={false}
                           onClick={[Function]}
                           role="button"
                           size="small"
                         >
-                          <button
+                          <ForwardRef
                             aria-disabled={false}
                             className="css-dkprmi-StyledButton-getColors eqrebog0"
+                            disabled={false}
                             onClick={[Function]}
                             role="button"
                             size="small"
                           >
-                            <ButtonLabel
+                            <button
+                              aria-disabled={false}
+                              className="css-dkprmi-StyledButton-getColors eqrebog0"
+                              onClick={[Function]}
+                              role="button"
                               size="small"
                             >
-                              <Component
-                                className="css-7ui8bl-ButtonLabel eqrebog1"
+                              <ButtonLabel
                                 size="small"
                               >
-                                <span
+                                <Component
                                   className="css-7ui8bl-ButtonLabel eqrebog1"
+                                  size="small"
                                 >
-                                  <RemoveIcon>
-                                    <Component
-                                      className="css-1e2j5j0-RemoveIcon eqsa6vb0"
-                                    >
-                                      <InlineSvg
+                                  <span
+                                    className="css-7ui8bl-ButtonLabel eqrebog1"
+                                  >
+                                    <RemoveIcon>
+                                      <Component
                                         className="css-1e2j5j0-RemoveIcon eqsa6vb0"
-                                        src="icon-circle-subtract"
                                       >
-                                        <StyledSvg
+                                        <InlineSvg
                                           className="css-1e2j5j0-RemoveIcon eqsa6vb0"
-                                          height="1em"
-                                          viewBox={Object {}}
-                                          width="1em"
+                                          src="icon-circle-subtract"
                                         >
-                                          <svg
-                                            className="eqsa6vb0 css-10g0ex9-StyledSvg-RemoveIcon e2idor0"
+                                          <StyledSvg
+                                            className="css-1e2j5j0-RemoveIcon eqsa6vb0"
                                             height="1em"
                                             viewBox={Object {}}
                                             width="1em"
                                           >
-                                            <use
-                                              href="#test"
-                                              xlinkHref="#test"
-                                            />
-                                          </svg>
-                                        </StyledSvg>
-                                      </InlineSvg>
-                                    </Component>
-                                  </RemoveIcon>
-                                   
-                                  Remove
-                                </span>
-                              </Component>
-                            </ButtonLabel>
-                          </button>
-                        </ForwardRef>
-                      </StyledButton>
-                    </Button>
-                  </Tooltip>
-                </div>
-              </Base>
-            </StyledPanelItem>
-          </div>
-        </PanelBody>
-      </div>
-    </Component>
-  </Panel>
-  <Pagination
-    className="stream-pagination"
-    location={
-      Object {
-        "query": Object {},
+                                            <svg
+                                              className="eqsa6vb0 css-10g0ex9-StyledSvg-RemoveIcon e2idor0"
+                                              height="1em"
+                                              viewBox={Object {}}
+                                              width="1em"
+                                            >
+                                              <use
+                                                href="#test"
+                                                xlinkHref="#test"
+                                              />
+                                            </svg>
+                                          </StyledSvg>
+                                        </InlineSvg>
+                                      </Component>
+                                    </RemoveIcon>
+                                     
+                                    Remove
+                                  </span>
+                                </Component>
+                              </ButtonLabel>
+                            </button>
+                          </ForwardRef>
+                        </StyledButton>
+                      </Button>
+                    </Tooltip>
+                  </div>
+                </Base>
+              </StyledPanelItem>
+            </div>
+          </PanelBody>
+        </div>
+      </Component>
+    </Panel>
+    <Pagination
+      api={Client {}}
+      className="stream-pagination"
+      location={
+        Object {
+          "query": Object {},
+        }
       }
-    }
-    onCursor={[Function]}
-    params={
-      Object {
-        "orgId": "org-slug",
-        "teamId": "team-slug",
+      onCursor={[Function]}
+      params={
+        Object {
+          "orgId": "org-slug",
+          "teamId": "team-slug",
+        }
       }
-    }
-  />
-</TeamProjects>
+    />
+  </TeamProjects>
+</withApi(TeamProjects)>
 `;
diff --git a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
index 5c7e84ba23..e0b8b93672 100644
--- a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
@@ -2,6 +2,7 @@
 
 exports[`ProjectEnvironments render active renders empty message 1`] = `
 <ProjectEnvironments
+  api={Client {}}
   location={
     Object {
       "pathname": "environments/",
@@ -397,6 +398,7 @@ exports[`ProjectEnvironments render active renders empty message 1`] = `
 
 exports[`ProjectEnvironments render active renders environment list and sets staging as default env 1`] = `
 <ProjectEnvironments
+  api={Client {}}
   location={
     Object {
       "pathname": "environments/",
@@ -1525,6 +1527,7 @@ exports[`ProjectEnvironments render active renders environment list and sets sta
 
 exports[`ProjectEnvironments render hidden renders empty message 1`] = `
 <ProjectEnvironments
+  api={Client {}}
   location={
     Object {
       "pathname": "environments/hidden/",
@@ -1920,6 +1923,7 @@ exports[`ProjectEnvironments render hidden renders empty message 1`] = `
 
 exports[`ProjectEnvironments render hidden renders environment list 1`] = `
 <ProjectEnvironments
+  api={Client {}}
   location={
     Object {
       "pathname": "environments/hidden/",
diff --git a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
index d011dbf37d..35c4e273a6 100644
--- a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
@@ -328,7 +328,7 @@ exports[`ProjectPluginDetails renders 1`] = `
             <div
               className="col-md-7"
             >
-              <PluginConfig
+              <withApi(PluginConfig)
                 data={
                   Object {
                     "assets": Array [],
@@ -389,190 +389,253 @@ exports[`ProjectPluginDetails renders 1`] = `
                   }
                 }
               >
-                <Panel
-                  className="plugin-config ref-plugin-config-amazon-sqs"
+                <PluginConfig
+                  api={Client {}}
+                  data={
+                    Object {
+                      "assets": Array [],
+                      "author": Object {
+                        "name": "Sentry Team",
+                        "url": "https://github.com/getsentry/sentry",
+                      },
+                      "canDisable": true,
+                      "enabled": false,
+                      "hasConfiguration": true,
+                      "id": "amazon-sqs",
+                      "isHidden": false,
+                      "name": "Amazon SQS",
+                      "slug": "amazon-sqs",
+                      "version": "8.23.0.dev0",
+                    }
+                  }
+                  enabled={false}
+                  onDisablePlugin={[Function]}
+                  organization={
+                    Object {
+                      "access": Array [
+                        "org:read",
+                        "org:write",
+                        "org:admin",
+                        "org:integrations",
+                        "project:read",
+                        "project:write",
+                        "project:admin",
+                        "team:read",
+                        "team:write",
+                        "team:admin",
+                      ],
+                      "features": Array [],
+                      "id": "3",
+                      "name": "Organization Name",
+                      "onboardingTasks": Array [],
+                      "projects": Array [],
+                      "scrapeJavaScript": true,
+                      "slug": "org-slug",
+                      "status": Object {
+                        "id": "active",
+                        "name": "active",
+                      },
+                      "teams": Array [],
+                    }
+                  }
+                  project={
+                    Object {
+                      "environments": Array [],
+                      "hasAccess": true,
+                      "id": "2",
+                      "isBookmarked": false,
+                      "isMember": true,
+                      "name": "Project Name",
+                      "slug": "project-slug",
+                      "teams": Array [],
+                    }
+                  }
                 >
-                  <Component
-                    className="plugin-config ref-plugin-config-amazon-sqs css-yahxlu-Panel e1laxa7d0"
+                  <Panel
+                    className="plugin-config ref-plugin-config-amazon-sqs"
                   >
-                    <div
+                    <Component
                       className="plugin-config ref-plugin-config-amazon-sqs css-yahxlu-Panel e1laxa7d0"
                     >
-                      <PanelHeader
-                        hasButtons={true}
+                      <div
+                        className="plugin-config ref-plugin-config-amazon-sqs css-yahxlu-Panel e1laxa7d0"
                       >
-                        <Component
-                          className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
+                        <PanelHeader
                           hasButtons={true}
                         >
-                          <Flex
-                            align="center"
+                          <Component
                             className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
-                            justify="space-between"
+                            hasButtons={true}
                           >
-                            <Base
+                            <Flex
                               align="center"
-                              className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
+                              className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
                               justify="space-between"
                             >
-                              <div
+                              <Base
+                                align="center"
                                 className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
-                                is={null}
+                                justify="space-between"
                               >
-                                <Flex
-                                  align="center"
-                                  flex="1"
+                                <div
+                                  className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
+                                  is={null}
                                 >
-                                  <Base
+                                  <Flex
                                     align="center"
-                                    className="css-1yrw3fm"
                                     flex="1"
                                   >
-                                    <div
+                                    <Base
+                                      align="center"
                                       className="css-1yrw3fm"
-                                      is={null}
+                                      flex="1"
                                     >
-                                      <Flex
-                                        align="center"
-                                        mr={1}
+                                      <div
+                                        className="css-1yrw3fm"
+                                        is={null}
                                       >
-                                        <Base
+                                        <Flex
                                           align="center"
-                                          className="css-fbx8di"
                                           mr={1}
                                         >
-                                          <div
+                                          <Base
+                                            align="center"
                                             className="css-fbx8di"
-                                            is={null}
+                                            mr={1}
                                           >
-                                            <PluginIcon
-                                              pluginId="amazon-sqs"
-                                              size={20}
+                                            <div
+                                              className="css-fbx8di"
+                                              is={null}
                                             >
-                                              <IntegrationIcon
-                                                image={Object {}}
+                                              <PluginIcon
+                                                pluginId="amazon-sqs"
                                                 size={20}
                                               >
-                                                <div
-                                                  className="css-xzv6mr-IntegrationIcon e1bhjds90"
+                                                <IntegrationIcon
+                                                  image={Object {}}
                                                   size={20}
-                                                />
-                                              </IntegrationIcon>
-                                            </PluginIcon>
-                                          </div>
-                                        </Base>
-                                      </Flex>
-                                      <span>
-                                        Amazon SQS
-                                      </span>
-                                    </div>
-                                  </Base>
-                                </Flex>
-                              </div>
-                            </Base>
-                          </Flex>
-                        </Component>
-                      </PanelHeader>
-                      <PanelBody
-                        direction="column"
-                        disablePadding={true}
-                        flex={true}
-                        pt={2}
-                        px={2}
-                        wrap="wrap"
-                      >
-                        <Flex
-                          className="css-9vq8an-textStyles"
+                                                >
+                                                  <div
+                                                    className="css-xzv6mr-IntegrationIcon e1bhjds90"
+                                                    size={20}
+                                                  />
+                                                </IntegrationIcon>
+                                              </PluginIcon>
+                                            </div>
+                                          </Base>
+                                        </Flex>
+                                        <span>
+                                          Amazon SQS
+                                        </span>
+                                      </div>
+                                    </Base>
+                                  </Flex>
+                                </div>
+                              </Base>
+                            </Flex>
+                          </Component>
+                        </PanelHeader>
+                        <PanelBody
                           direction="column"
+                          disablePadding={true}
+                          flex={true}
                           pt={2}
                           px={2}
                           wrap="wrap"
                         >
-                          <Base
-                            className="css-eaujjw-textStyles"
+                          <Flex
+                            className="css-9vq8an-textStyles"
                             direction="column"
                             pt={2}
                             px={2}
                             wrap="wrap"
                           >
-                            <div
+                            <Base
                               className="css-eaujjw-textStyles"
-                              is={null}
+                              direction="column"
+                              pt={2}
+                              px={2}
+                              wrap="wrap"
                             >
                               <div
-                                dangerouslySetInnerHTML={
-                                  Object {
-                                    "__html": undefined,
+                                className="css-eaujjw-textStyles"
+                                is={null}
+                              >
+                                <div
+                                  dangerouslySetInnerHTML={
+                                    Object {
+                                      "__html": undefined,
+                                    }
                                   }
-                                }
-                              />
-                              <PluginSettings
-                                organization={
-                                  Object {
-                                    "access": Array [
-                                      "org:read",
-                                      "org:write",
-                                      "org:admin",
-                                      "org:integrations",
-                                      "project:read",
-                                      "project:write",
-                                      "project:admin",
-                                      "team:read",
-                                      "team:write",
-                                      "team:admin",
-                                    ],
-                                    "features": Array [],
-                                    "id": "3",
-                                    "name": "Organization Name",
-                                    "onboardingTasks": Array [],
-                                    "projects": Array [],
-                                    "scrapeJavaScript": true,
-                                    "slug": "org-slug",
-                                    "status": Object {
-                                      "id": "active",
-                                      "name": "active",
-                                    },
-                                    "teams": Array [],
+                                />
+                                <PluginSettings
+                                  organization={
+                                    Object {
+                                      "access": Array [
+                                        "org:read",
+                                        "org:write",
+                                        "org:admin",
+                                        "org:integrations",
+                                        "project:read",
+                                        "project:write",
+                                        "project:admin",
+                                        "team:read",
+                                        "team:write",
+                                        "team:admin",
+                                      ],
+                                      "features": Array [],
+                                      "id": "3",
+                                      "name": "Organization Name",
+                                      "onboardingTasks": Array [],
+                                      "projects": Array [],
+                                      "scrapeJavaScript": true,
+                                      "slug": "org-slug",
+                                      "status": Object {
+                                        "id": "active",
+                                        "name": "active",
+                                      },
+                                      "teams": Array [],
+                                    }
                                   }
-                                }
-                                plugin={
-                                  DefaultPlugin {
-                                    "assets": Array [],
-                                    "author": Object {
-                                      "name": "Sentry Team",
-                                      "url": "https://github.com/getsentry/sentry",
-                                    },
-                                    "canDisable": true,
-                                    "enabled": false,
-                                    "hasConfiguration": true,
-                                    "id": "amazon-sqs",
-                                    "isHidden": false,
-                                    "name": "Amazon SQS",
-                                    "slug": "amazon-sqs",
-                                    "version": "8.23.0.dev0",
+                                  plugin={
+                                    DefaultPlugin {
+                                      "assets": Array [],
+                                      "author": Object {
+                                        "name": "Sentry Team",
+                                        "url": "https://github.com/getsentry/sentry",
+                                      },
+                                      "canDisable": true,
+                                      "enabled": false,
+                                      "hasConfiguration": true,
+                                      "id": "amazon-sqs",
+                                      "isHidden": false,
+                                      "name": "Amazon SQS",
+                                      "slug": "amazon-sqs",
+                                      "version": "8.23.0.dev0",
+                                    }
                                   }
-                                }
-                                project={
-                                  Object {
-                                    "environments": Array [],
-                                    "hasAccess": true,
-                                    "id": "2",
-                                    "isBookmarked": false,
-                                    "isMember": true,
-                                    "name": "Project Name",
-                                    "slug": "project-slug",
-                                    "teams": Array [],
+                                  project={
+                                    Object {
+                                      "environments": Array [],
+                                      "hasAccess": true,
+                                      "id": "2",
+                                      "isBookmarked": false,
+                                      "isMember": true,
+                                      "name": "Project Name",
+                                      "slug": "project-slug",
+                                      "teams": Array [],
+                                    }
                                   }
-                                }
-                              />
-                            </div>
-                          </Base>
-                        </Flex>
-                      </PanelBody>
-                    </div>
-                  </Component>
-                </Panel>
-              </PluginConfig>
+                                />
+                              </div>
+                            </Base>
+                          </Flex>
+                        </PanelBody>
+                      </div>
+                    </Component>
+                  </Panel>
+                </PluginConfig>
+              </withApi(PluginConfig)>
             </div>
             <div
               className="col-md-4 col-md-offset-1"
diff --git a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
index eea262f2f7..45bb338899 100644
--- a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
@@ -1,230 +1,41 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`TeamMembers renders 1`] = `
-<Panel>
-  <PanelHeader
-    hasButtons={true}
-  >
-    <div>
-      Members
-    </div>
-    <div
-      style={
-        Object {
-          "textTransform": "none",
-        }
-      }
-    >
-      <DropdownAutoComplete
-        alignMenu="right"
-        busy={false}
-        emptyMessage="No members"
-        items={Array []}
-        menuHeader={
-          <StyledMembersLabel>
-            Members
-            <StyledCreateMemberLink
-              to="/settings/org-slug/members/new/"
-            >
-              Add Member
-            </StyledCreateMemberLink>
-          </StyledMembersLabel>
-        }
-        onChange={[Function]}
-        onClose={[Function]}
-        onSelect={[Function]}
-      >
-        <Component />
-      </DropdownAutoComplete>
-    </div>
-  </PanelHeader>
-  <StyledMemberContainer
-    key="1"
-  >
-    <IdBadge
-      avatarSize={36}
-      member={
-        Object {
-          "email": "sentry1@test.com",
-          "expired": false,
-          "flags": Object {
-            "sso:linked": false,
-          },
-          "id": "1",
-          "name": "Sentry 1 Name",
-          "pending": false,
-          "role": "member",
-          "roleName": "Member",
-          "user": Object {
-            "email": "foo@example.com",
-            "flags": Object {
-              "newsletter_consent_prompt": false,
-            },
-            "hasPasswordAuth": true,
-            "id": "1",
-            "isAuthenticated": true,
-            "name": "Foo Bar",
-            "options": Object {
-              "timezone": "UTC",
-            },
-            "username": "foo@example.com",
-          },
-        }
-      }
-      orgId="org-slug"
-      useLink={true}
-    />
-    <Button
-      disabled={false}
-      onClick={[Function]}
-      size="small"
-    >
-      <InlineSvg
-        size="1.25em"
-        src="icon-circle-subtract"
-        style={
-          Object {
-            "marginRight": "8px",
-          }
-        }
-      />
-      Remove
-    </Button>
-  </StyledMemberContainer>
-  <StyledMemberContainer
-    key="2"
-  >
-    <IdBadge
-      avatarSize={36}
-      member={
-        Object {
-          "email": "sentry2@test.com",
-          "flags": Object {
-            "sso:linked": false,
-          },
-          "id": "2",
-          "name": "Sentry 2 Name",
-          "pending": true,
-          "role": "member",
-          "roleName": "Member",
-          "user": Object {
-            "email": "sentry2@test.com",
-            "has2fa": false,
-            "id": "2",
-            "name": "Sentry 2 Name",
-            "username": "Sentry 2 Username",
-          },
-        }
-      }
-      orgId="org-slug"
-      useLink={true}
-    />
-    <Button
-      disabled={false}
-      onClick={[Function]}
-      size="small"
-    >
-      <InlineSvg
-        size="1.25em"
-        src="icon-circle-subtract"
-        style={
-          Object {
-            "marginRight": "8px",
-          }
-        }
-      />
-      Remove
-    </Button>
-  </StyledMemberContainer>
-  <StyledMemberContainer
-    key="3"
-  >
-    <IdBadge
-      avatarSize={36}
-      member={
-        Object {
-          "email": "sentry3@test.com",
-          "flags": Object {
-            "sso:linked": true,
-          },
-          "id": "3",
-          "name": "Sentry 3 Name",
-          "pending": false,
-          "role": "owner",
-          "roleName": "Owner",
-          "user": Object {
-            "email": "sentry3@test.com",
-            "has2fa": true,
-            "id": "3",
-            "name": "Sentry 3 Name",
-            "username": "Sentry 3 Username",
-          },
-        }
-      }
-      orgId="org-slug"
-      useLink={true}
-    />
-    <Button
-      disabled={false}
-      onClick={[Function]}
-      size="small"
-    >
-      <InlineSvg
-        size="1.25em"
-        src="icon-circle-subtract"
-        style={
-          Object {
-            "marginRight": "8px",
-          }
-        }
-      />
-      Remove
-    </Button>
-  </StyledMemberContainer>
-  <StyledMemberContainer
-    key="4"
-  >
-    <IdBadge
-      avatarSize={36}
-      member={
-        Object {
-          "email": "sentry4@test.com",
-          "flags": Object {
-            "sso:linked": true,
-          },
-          "id": "4",
-          "name": "Sentry 4 Name",
-          "pending": false,
-          "role": "owner",
-          "roleName": "Owner",
-          "user": Object {
-            "email": "sentry4@test.com",
-            "has2fa": true,
-            "id": "4",
-            "name": "Sentry 4 Name",
-            "username": "Sentry 4 Username",
-          },
-        }
-      }
-      orgId="org-slug"
-      useLink={true}
-    />
-    <Button
-      disabled={false}
-      onClick={[Function]}
-      size="small"
-    >
-      <InlineSvg
-        size="1.25em"
-        src="icon-circle-subtract"
-        style={
-          Object {
-            "marginRight": "8px",
-          }
-        }
-      />
-      Remove
-    </Button>
-  </StyledMemberContainer>
-</Panel>
+<TeamMembers
+  api={Client {}}
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "org:integrations",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
+  params={
+    Object {
+      "orgId": "org-slug",
+      "teamId": "team-slug",
+    }
+  }
+/>
 `;
diff --git a/tests/js/spec/views/groupActivity/index.spec.jsx b/tests/js/spec/views/groupActivity/index.spec.jsx
index 747ab3dec4..3127fc4b8d 100644
--- a/tests/js/spec/views/groupActivity/index.spec.jsx
+++ b/tests/js/spec/views/groupActivity/index.spec.jsx
@@ -23,6 +23,7 @@ describe('GroupActivity', function() {
   it('renders a NoteInput', function() {
     const wrapper = shallow(
       <GroupActivity
+        api={new MockApiClient()}
         group={{id: '1337', activity: []}}
         organization={TestStubs.Organization()}
       />,
@@ -44,6 +45,7 @@ describe('GroupActivity', function() {
     beforeEach(function() {
       instance = shallow(
         <GroupActivity
+          api={new MockApiClient()}
           group={{id: '1337', activity: []}}
           organization={TestStubs.Organization()}
         />,
@@ -60,7 +62,7 @@ describe('GroupActivity', function() {
 
     it('should do nothing if not present in GroupStore', function() {
       jest.spyOn(GroupStore, 'removeActivity').mockImplementation(() => -1); // not found
-      const request = jest.spyOn(instance.api, 'request');
+      const request = jest.spyOn(instance.props.api, 'request');
 
       instance.onNoteDelete({id: 1});
       expect(request.calledOnce).not.toBeTruthy();
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
index 2b1cde9662..5e8feb9f00 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
@@ -1,105 +1,114 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`GroupActions render() renders correctly 1`] = `
-<div
-  className="group-actions"
->
-  <ResolveActions
-    confirmLabel="Resolve"
-    hasRelease={false}
-    isAutoResolved={false}
-    isResolved={false}
-    onUpdate={[Function]}
-    orgId="org"
-    projectId="project"
-  />
-  <IgnoreActions
-    confirmLabel="Ignore"
-    isIgnored={false}
-    onUpdate={[Function]}
-  />
-  <div
-    className="btn-group"
-  >
-    <a
-      className="group-bookmark btn btn-default btn-sm"
-      onClick={[Function]}
-      title="Bookmark"
-    >
-      <span
-        className="icon-star-solid"
-      />
-    </a>
-  </div>
-  <DeleteActions
-    onDelete={[Function]}
-    onDiscard={[Function]}
-    organization={
-      Object {
-        "access": Array [
-          "org:read",
-          "org:write",
-          "org:admin",
-          "org:integrations",
-          "project:read",
-          "project:write",
-          "project:admin",
-          "team:read",
-          "team:write",
-          "team:admin",
+<GroupDetailsActions
+  api={Client {}}
+  group={
+    Object {
+      "activity": Array [],
+      "annotations": Array [],
+      "assignedTo": null,
+      "count": "327482",
+      "culprit": "fetchData(app/components/group/suggestedOwners)",
+      "firstRelease": null,
+      "firstSeen": "2019-04-05T19:44:05.963Z",
+      "hasSeen": false,
+      "id": "1337",
+      "isBookmarked": false,
+      "isPublic": false,
+      "isSubscribed": false,
+      "lastRelease": null,
+      "lastSeen": "2019-04-11T01:08:59Z",
+      "level": "warning",
+      "logger": null,
+      "metadata": Object {
+        "function": "fetchData",
+        "type": "RequestError",
+      },
+      "numComments": 0,
+      "participants": Array [],
+      "permalink": "https://foo.io/organizations/foo/issues/1234/",
+      "platform": "javascript",
+      "pluginActions": Array [],
+      "pluginContexts": Array [],
+      "pluginIssues": Array [],
+      "project": Object {
+        "id": "2",
+        "platform": "javascript",
+        "slug": "project-slug",
+      },
+      "seenBy": Array [],
+      "shareId": null,
+      "shortId": "JAVASCRIPT-6QS",
+      "stats": Object {
+        "24h": Array [
+          Array [
+            1517281200,
+            2,
+          ],
+          Array [
+            1517310000,
+            1,
+          ],
         ],
-        "features": Array [],
-        "id": "4660",
-        "name": "Organization Name",
-        "onboardingTasks": Array [],
-        "projects": Array [],
-        "scrapeJavaScript": true,
-        "slug": "org",
-        "status": Object {
-          "id": "active",
-          "name": "active",
-        },
-        "teams": Array [],
-      }
-    }
-    project={
-      Object {
-        "allowedDomains": Array [
-          "example.com",
-          "https://example.com",
-        ],
-        "dataScrubber": false,
-        "dataScrubberDefaults": false,
-        "digestsMaxDelay": 60,
-        "digestsMinDelay": 5,
-        "environments": Array [],
-        "features": Array [],
-        "hasAccess": true,
-        "id": "2448",
-        "isBookmarked": false,
-        "isMember": true,
-        "name": "project name",
-        "resolveAge": 48,
-        "safeFields": Array [
-          "business-email",
-          "company",
+        "30d": Array [
+          Array [
+            1514764800,
+            1,
+          ],
+          Array [
+            1515024000,
+            122,
+          ],
         ],
-        "scrapeJavaScript": true,
-        "scrubIPAddresses": false,
-        "securityToken": "security-token",
-        "securityTokenHeader": "x-security-header",
-        "sensitiveFields": Array [
-          "creditcard",
-          "ssn",
-        ],
-        "slug": "project",
-        "storeCrashReports": false,
-        "subjectPrefix": "[my-org]",
-        "subjectTemplate": "[$project] \${tag:level}: $title",
-        "teams": Array [],
-        "verifySSL": true,
-      }
+      },
+      "status": "unresolved",
+      "statusDetails": Object {},
+      "subscriptionDetails": null,
+      "tags": Array [],
+      "title": "RequestError: GET /issues/ 404",
+      "type": "error",
+      "userCount": 35097,
+      "userReportCount": 0,
+    }
+  }
+  project={
+    Object {
+      "allowedDomains": Array [
+        "example.com",
+        "https://example.com",
+      ],
+      "dataScrubber": false,
+      "dataScrubberDefaults": false,
+      "digestsMaxDelay": 60,
+      "digestsMinDelay": 5,
+      "environments": Array [],
+      "features": Array [],
+      "hasAccess": true,
+      "id": "2448",
+      "isBookmarked": false,
+      "isMember": true,
+      "name": "project name",
+      "resolveAge": 48,
+      "safeFields": Array [
+        "business-email",
+        "company",
+      ],
+      "scrapeJavaScript": true,
+      "scrubIPAddresses": false,
+      "securityToken": "security-token",
+      "securityTokenHeader": "x-security-header",
+      "sensitiveFields": Array [
+        "creditcard",
+        "ssn",
+      ],
+      "slug": "project",
+      "storeCrashReports": false,
+      "subjectPrefix": "[my-org]",
+      "subjectTemplate": "[$project] \${tag:level}: $title",
+      "teams": Array [],
+      "verifySSL": true,
     }
-  />
-</div>
+  }
+/>
 `;
diff --git a/tests/js/spec/views/groupDetails/groupMergedView.spec.jsx b/tests/js/spec/views/groupDetails/groupMergedView.spec.jsx
index dea4ec2ad9..6a0be441bc 100644
--- a/tests/js/spec/views/groupDetails/groupMergedView.spec.jsx
+++ b/tests/js/spec/views/groupDetails/groupMergedView.spec.jsx
@@ -3,7 +3,7 @@ import PropTypes from 'prop-types';
 
 import {shallow} from 'enzyme';
 
-import GroupMergedView from 'app/views/groupDetails/shared/groupMerged';
+import {GroupMergedView} from 'app/views/groupDetails/shared/groupMerged';
 import {Client} from 'app/api';
 import events from 'app-test/mocks/events';
 
diff --git a/tests/js/spec/views/groupDetails/organizationGroupEvents.spec.jsx b/tests/js/spec/views/groupDetails/organizationGroupEvents.spec.jsx
index 2b72cd1586..75c741acd8 100644
--- a/tests/js/spec/views/groupDetails/organizationGroupEvents.spec.jsx
+++ b/tests/js/spec/views/groupDetails/organizationGroupEvents.spec.jsx
@@ -3,7 +3,9 @@ import PropTypes from 'prop-types';
 import {shallow} from 'enzyme';
 import {browserHistory} from 'react-router';
 
-import OrgnanizationGroupEvents from 'app/views/groupDetails/organization/groupEvents';
+import {GroupEvents} from 'app/views/groupDetails/organization/groupEvents';
+
+const OrgnanizationGroupEvents = GroupEvents;
 
 describe('groupEvents', function() {
   let request;
@@ -19,6 +21,7 @@ describe('groupEvents', function() {
   it('renders', function() {
     const component = shallow(
       <OrgnanizationGroupEvents
+        api={new MockApiClient()}
         group={TestStubs.Group()}
         params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
         location={{query: {}}}
@@ -37,6 +40,7 @@ describe('groupEvents', function() {
   it('handles search', function() {
     const component = shallow(
       <OrgnanizationGroupEvents
+        api={new MockApiClient()}
         params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
         group={TestStubs.Group()}
         location={{query: {}}}
@@ -68,6 +72,7 @@ describe('groupEvents', function() {
   it('handles environment filtering', function() {
     shallow(
       <OrgnanizationGroupEvents
+        api={new MockApiClient()}
         params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
         group={TestStubs.Group()}
         location={{query: {environment: ['prod', 'staging']}}}
diff --git a/tests/js/spec/views/groupDetails/projectGroupEvents.spec.jsx b/tests/js/spec/views/groupDetails/projectGroupEvents.spec.jsx
index 774b7506ef..7d2ae0701f 100644
--- a/tests/js/spec/views/groupDetails/projectGroupEvents.spec.jsx
+++ b/tests/js/spec/views/groupDetails/projectGroupEvents.spec.jsx
@@ -18,6 +18,7 @@ describe('groupEvents', function() {
   it('renders', function() {
     const component = shallow(
       <GroupEvents
+        api={new MockApiClient()}
         group={TestStubs.Group()}
         params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
         location={{query: {}}}
@@ -36,6 +37,7 @@ describe('groupEvents', function() {
   it('handles search', function() {
     const component = shallow(
       <GroupEvents
+        api={new MockApiClient()}
         group={TestStubs.Group()}
         params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
         location={{query: {}}}
@@ -69,6 +71,7 @@ describe('groupEvents', function() {
     beforeEach(function() {
       component = shallow(
         <GroupEvents
+          api={new MockApiClient()}
           group={TestStubs.Group()}
           params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
           location={{query: {}}}
diff --git a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
index 6483c6c90c..dc26942003 100644
--- a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
+++ b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
@@ -15,6 +15,7 @@ exports[`InviteMember should render loading 1`] = `
 
 exports[`InviteMember should render roles when available and allowed, and handle submitting 1`] = `
 <InviteMember
+  api={Client {}}
   location={
     Object {
       "query": Object {},
diff --git a/tests/js/spec/views/inviteMember/inviteMember.spec.jsx b/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
index 17e6cd8680..0c819c351c 100644
--- a/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
+++ b/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
@@ -9,6 +9,7 @@ jest.mock('jquery');
 
 describe('InviteMember', function() {
   const baseProps = {
+    api: new MockApiClient(),
     params: {
       orgId: 'testOrg',
     },
diff --git a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
index e1fd369d19..727320f45f 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
@@ -88,6 +88,7 @@ exports[`CreateProject should block if you have access to no teams 1`] = `
 
 exports[`CreateProject should deal with incorrect platform name if its provided by url 1`] = `
 <CreateProject
+  api={Client {}}
   location={
     Object {
       "query": Object {},
@@ -1597,6 +1598,7 @@ exports[`CreateProject should deal with incorrect platform name if its provided
 
 exports[`CreateProject should fill in platform name if its provided by url 1`] = `
 <CreateProject
+  api={Client {}}
   location={
     Object {
       "query": Object {},
@@ -2562,6 +2564,7 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
 
 exports[`CreateProject should fill in project name if its empty when platform is chosen 1`] = `
 <CreateProject
+  api={Client {}}
   location={
     Object {
       "query": Object {},
diff --git a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
index f402b5de75..8248bf55b8 100644
--- a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
@@ -2,6 +2,7 @@
 
 exports[`Configure should render correctly render() should render platform docs 1`] = `
 <Configure
+  api={Client {}}
   next={[Function]}
   params={
     Object {
@@ -105,7 +106,7 @@ exports[`Configure should render correctly render() should render platform docs
           </CreateSampleEvent>
         </withApi(CreateSampleEvent)>
       </h2>
-      <withProjects(withRouter(ProjectContext))
+      <withApi(withProjects(withRouter(ProjectContext)))
         orgId="testOrg"
         projectId="project-slug"
         style={
@@ -114,40 +115,18 @@ exports[`Configure should render correctly render() should render platform docs
           }
         }
       >
-        <withRouter(ProjectContext)
+        <withProjects(withRouter(ProjectContext))
+          api={Client {}}
           orgId="testOrg"
           projectId="project-slug"
-          projects={
-            Array [
-              Object {
-                "hasAccess": true,
-                "id": "testProject",
-                "isBookmarked": false,
-                "isMember": true,
-                "name": "Test Project",
-                "slug": "project-slug",
-                "teams": Array [
-                  Object {
-                    "hasAccess": true,
-                    "id": "coolid",
-                    "slug": "coolteam",
-                  },
-                ],
-              },
-            ]
-          }
           style={
             Object {
               "marginBottom": 30,
             }
           }
         >
-          <ProjectContext
-            location={
-              Object {
-                "query": Object {},
-              }
-            }
+          <withRouter(ProjectContext)
+            api={Client {}}
             orgId="testOrg"
             projectId="project-slug"
             projects={
@@ -169,433 +148,517 @@ exports[`Configure should render correctly render() should render platform docs
                 },
               ]
             }
-            router={
-              Object {
-                "createHref": [MockFunction],
-                "go": [MockFunction],
-                "goBack": [MockFunction],
-                "goForward": [MockFunction],
-                "isActive": [MockFunction],
-                "listen": [MockFunction],
-                "location": Object {
-                  "query": Object {},
-                },
-                "push": [MockFunction],
-                "replace": [MockFunction],
-                "setRouteLeaveHook": [MockFunction],
-              }
-            }
             style={
               Object {
                 "marginBottom": 30,
               }
             }
           >
-            <SideEffect(DocumentTitle)
-              title="project-slug"
+            <ProjectContext
+              api={Client {}}
+              location={
+                Object {
+                  "query": Object {},
+                }
+              }
+              orgId="testOrg"
+              projectId="project-slug"
+              projects={
+                Array [
+                  Object {
+                    "hasAccess": true,
+                    "id": "testProject",
+                    "isBookmarked": false,
+                    "isMember": true,
+                    "name": "Test Project",
+                    "slug": "project-slug",
+                    "teams": Array [
+                      Object {
+                        "hasAccess": true,
+                        "id": "coolid",
+                        "slug": "coolteam",
+                      },
+                    ],
+                  },
+                ]
+              }
+              router={
+                Object {
+                  "createHref": [MockFunction],
+                  "go": [MockFunction],
+                  "goBack": [MockFunction],
+                  "goForward": [MockFunction],
+                  "isActive": [MockFunction],
+                  "listen": [MockFunction],
+                  "location": Object {
+                    "query": Object {},
+                  },
+                  "push": [MockFunction],
+                  "replace": [MockFunction],
+                  "setRouteLeaveHook": [MockFunction],
+                }
+              }
+              style={
+                Object {
+                  "marginBottom": 30,
+                }
+              }
             >
-              <DocumentTitle
+              <SideEffect(DocumentTitle)
                 title="project-slug"
               >
-                <ProjectDocsContext>
-                  <WithOrganizationMockWrapper
-                    linkPath={[Function]}
-                    params={
-                      Object {
-                        "orgId": "testOrg",
-                        "platform": "node",
-                        "projectId": "project-slug",
-                      }
-                    }
-                    platformData={
-                      Object {
-                        "dsn": "https://9ed7cdc60:20e868d7b@sentry.io/300733",
-                        "dsnPublic": "https://9ed7cdc6581145bcb46044b77bd82aa0@sentry.io/300733",
-                        "platforms": Array [
+                <DocumentTitle
+                  title="project-slug"
+                >
+                  <withApi(ProjectDocsContext)>
+                    <ProjectDocsContext
+                      api={Client {}}
+                    >
+                      <withApi(WithOrganizationMockWrapper)
+                        linkPath={[Function]}
+                        params={
                           Object {
-                            "id": "javascript",
-                            "integrations": Array [
+                            "orgId": "testOrg",
+                            "platform": "node",
+                            "projectId": "project-slug",
+                          }
+                        }
+                        platformData={
+                          Object {
+                            "dsn": "https://9ed7cdc60:20e868d7b@sentry.io/300733",
+                            "dsnPublic": "https://9ed7cdc6581145bcb46044b77bd82aa0@sentry.io/300733",
+                            "platforms": Array [
                               Object {
-                                "id": "node",
-                                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
-                                "name": "node",
-                                "type": "language",
+                                "id": "javascript",
+                                "integrations": Array [
+                                  Object {
+                                    "id": "node",
+                                    "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+                                    "name": "node",
+                                    "type": "language",
+                                  },
+                                ],
+                                "name": "js",
                               },
                             ],
-                            "name": "js",
-                          },
-                        ],
-                      }
-                    }
-                    project={
-                      Object {
-                        "environments": Array [],
-                        "hasAccess": true,
-                        "id": "2",
-                        "isBookmarked": false,
-                        "isMember": true,
-                        "name": "Project Name",
-                        "slug": "project-slug",
-                        "teams": Array [],
-                      }
-                    }
-                  >
-                    <ProjectInstallPlatform
-                      linkPath={[Function]}
-                      organization={
-                        Object {
-                          "id": "1337",
-                          "projects": Array [
-                            Object {
-                              "hasAccess": true,
-                              "id": "testProject",
-                              "isBookmarked": false,
-                              "isMember": true,
-                              "name": "Test Project",
-                              "slug": "project-slug",
-                              "teams": Array [
-                                Object {
-                                  "hasAccess": true,
-                                  "id": "coolteam",
-                                  "slug": "coolteam",
-                                },
-                              ],
-                            },
-                          ],
-                          "slug": "testOrg",
-                          "teams": Array [
-                            Object {
-                              "hasAccess": true,
-                              "id": "coolteam",
-                              "projects": Array [
-                                Object {
-                                  "id": "testProject",
-                                  "name": "Test Project",
-                                  "slug": "project-slug",
-                                },
-                              ],
-                              "slug": "coolteam",
-                            },
-                          ],
+                          }
                         }
-                      }
-                      params={
-                        Object {
-                          "orgId": "testOrg",
-                          "platform": "node",
-                          "projectId": "project-slug",
+                        project={
+                          Object {
+                            "environments": Array [],
+                            "hasAccess": true,
+                            "id": "2",
+                            "isBookmarked": false,
+                            "isMember": true,
+                            "name": "Project Name",
+                            "slug": "project-slug",
+                            "teams": Array [],
+                          }
                         }
-                      }
-                      platformData={
-                        Object {
-                          "dsn": "https://9ed7cdc60:20e868d7b@sentry.io/300733",
-                          "dsnPublic": "https://9ed7cdc6581145bcb46044b77bd82aa0@sentry.io/300733",
-                          "platforms": Array [
+                      >
+                        <WithOrganizationMockWrapper
+                          api={Client {}}
+                          linkPath={[Function]}
+                          params={
+                            Object {
+                              "orgId": "testOrg",
+                              "platform": "node",
+                              "projectId": "project-slug",
+                            }
+                          }
+                          platformData={
                             Object {
-                              "id": "javascript",
-                              "integrations": Array [
+                              "dsn": "https://9ed7cdc60:20e868d7b@sentry.io/300733",
+                              "dsnPublic": "https://9ed7cdc6581145bcb46044b77bd82aa0@sentry.io/300733",
+                              "platforms": Array [
                                 Object {
-                                  "id": "node",
-                                  "link": "https://docs.getsentry.com/hosted/clients/csharp/",
-                                  "name": "node",
-                                  "type": "language",
+                                  "id": "javascript",
+                                  "integrations": Array [
+                                    Object {
+                                      "id": "node",
+                                      "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+                                      "name": "node",
+                                      "type": "language",
+                                    },
+                                  ],
+                                  "name": "js",
                                 },
                               ],
-                              "name": "js",
-                            },
-                          ],
-                        }
-                      }
-                      project={
-                        Object {
-                          "environments": Array [],
-                          "hasAccess": true,
-                          "id": "2",
-                          "isBookmarked": false,
-                          "isMember": true,
-                          "name": "Project Name",
-                          "slug": "project-slug",
-                          "teams": Array [],
-                        }
-                      }
-                    >
-                      <Panel>
-                        <Component
-                          className="css-yahxlu-Panel e1laxa7d0"
+                            }
+                          }
+                          project={
+                            Object {
+                              "environments": Array [],
+                              "hasAccess": true,
+                              "id": "2",
+                              "isBookmarked": false,
+                              "isMember": true,
+                              "name": "Project Name",
+                              "slug": "project-slug",
+                              "teams": Array [],
+                            }
+                          }
                         >
-                          <div
-                            className="css-yahxlu-Panel e1laxa7d0"
+                          <ProjectInstallPlatform
+                            api={Client {}}
+                            linkPath={[Function]}
+                            organization={
+                              Object {
+                                "id": "1337",
+                                "projects": Array [
+                                  Object {
+                                    "hasAccess": true,
+                                    "id": "testProject",
+                                    "isBookmarked": false,
+                                    "isMember": true,
+                                    "name": "Test Project",
+                                    "slug": "project-slug",
+                                    "teams": Array [
+                                      Object {
+                                        "hasAccess": true,
+                                        "id": "coolteam",
+                                        "slug": "coolteam",
+                                      },
+                                    ],
+                                  },
+                                ],
+                                "slug": "testOrg",
+                                "teams": Array [
+                                  Object {
+                                    "hasAccess": true,
+                                    "id": "coolteam",
+                                    "projects": Array [
+                                      Object {
+                                        "id": "testProject",
+                                        "name": "Test Project",
+                                        "slug": "project-slug",
+                                      },
+                                    ],
+                                    "slug": "coolteam",
+                                  },
+                                ],
+                              }
+                            }
+                            params={
+                              Object {
+                                "orgId": "testOrg",
+                                "platform": "node",
+                                "projectId": "project-slug",
+                              }
+                            }
+                            platformData={
+                              Object {
+                                "dsn": "https://9ed7cdc60:20e868d7b@sentry.io/300733",
+                                "dsnPublic": "https://9ed7cdc6581145bcb46044b77bd82aa0@sentry.io/300733",
+                                "platforms": Array [
+                                  Object {
+                                    "id": "javascript",
+                                    "integrations": Array [
+                                      Object {
+                                        "id": "node",
+                                        "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+                                        "name": "node",
+                                        "type": "language",
+                                      },
+                                    ],
+                                    "name": "js",
+                                  },
+                                ],
+                              }
+                            }
+                            project={
+                              Object {
+                                "environments": Array [],
+                                "hasAccess": true,
+                                "id": "2",
+                                "isBookmarked": false,
+                                "isMember": true,
+                                "name": "Project Name",
+                                "slug": "project-slug",
+                                "teams": Array [],
+                              }
+                            }
                           >
-                            <PanelHeader
-                              hasButtons={true}
-                            >
+                            <Panel>
                               <Component
-                                className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
-                                hasButtons={true}
+                                className="css-yahxlu-Panel e1laxa7d0"
                               >
-                                <Flex
-                                  align="center"
-                                  className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
-                                  justify="space-between"
+                                <div
+                                  className="css-yahxlu-Panel e1laxa7d0"
                                 >
-                                  <Base
-                                    align="center"
-                                    className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
-                                    justify="space-between"
+                                  <PanelHeader
+                                    hasButtons={true}
                                   >
-                                    <div
-                                      className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
-                                      is={null}
+                                    <Component
+                                      className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
+                                      hasButtons={true}
                                     >
-                                      Configure node
-                                      <Flex>
+                                      <Flex
+                                        align="center"
+                                        className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
+                                        justify="space-between"
+                                      >
                                         <Base
-                                          className="css-sncxrr"
+                                          align="center"
+                                          className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
+                                          justify="space-between"
                                         >
                                           <div
-                                            className="css-sncxrr"
+                                            className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
                                             is={null}
                                           >
-                                            <Box
-                                              ml={1}
-                                            >
+                                            Configure node
+                                            <Flex>
                                               <Base
-                                                className="css-re0chm"
-                                                ml={1}
+                                                className="css-sncxrr"
                                               >
                                                 <div
-                                                  className="css-re0chm"
+                                                  className="css-sncxrr"
                                                   is={null}
                                                 >
-                                                  <Button
-                                                    disabled={false}
-                                                    href="/testOrg/project-slug/getting-started/"
-                                                    size="small"
+                                                  <Box
+                                                    ml={1}
                                                   >
-                                                    <StyledButton
-                                                      aria-disabled={false}
-                                                      aria-label="< Back"
-                                                      disabled={false}
-                                                      href="/testOrg/project-slug/getting-started/"
-                                                      onClick={[Function]}
-                                                      role="button"
-                                                      size="small"
+                                                    <Base
+                                                      className="css-re0chm"
+                                                      ml={1}
                                                     >
-                                                      <ForwardRef
-                                                        aria-disabled={false}
-                                                        aria-label="< Back"
-                                                        className="css-dkprmi-StyledButton-getColors eqrebog0"
-                                                        disabled={false}
-                                                        href="/testOrg/project-slug/getting-started/"
-                                                        onClick={[Function]}
-                                                        role="button"
-                                                        size="small"
+                                                      <div
+                                                        className="css-re0chm"
+                                                        is={null}
                                                       >
-                                                        <a
-                                                          aria-disabled={false}
-                                                          aria-label="< Back"
-                                                          className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                        <Button
+                                                          disabled={false}
                                                           href="/testOrg/project-slug/getting-started/"
-                                                          onClick={[Function]}
-                                                          role="button"
                                                           size="small"
                                                         >
-                                                          <ButtonLabel
+                                                          <StyledButton
+                                                            aria-disabled={false}
+                                                            aria-label="< Back"
+                                                            disabled={false}
+                                                            href="/testOrg/project-slug/getting-started/"
+                                                            onClick={[Function]}
+                                                            role="button"
                                                             size="small"
                                                           >
-                                                            <Component
-                                                              className="css-7ui8bl-ButtonLabel eqrebog1"
+                                                            <ForwardRef
+                                                              aria-disabled={false}
+                                                              aria-label="< Back"
+                                                              className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                              disabled={false}
+                                                              href="/testOrg/project-slug/getting-started/"
+                                                              onClick={[Function]}
+                                                              role="button"
                                                               size="small"
                                                             >
-                                                              <span
-                                                                className="css-7ui8bl-ButtonLabel eqrebog1"
+                                                              <a
+                                                                aria-disabled={false}
+                                                                aria-label="< Back"
+                                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                                href="/testOrg/project-slug/getting-started/"
+                                                                onClick={[Function]}
+                                                                role="button"
+                                                                size="small"
                                                               >
-                                                                &lt; Back
-                                                              </span>
-                                                            </Component>
-                                                          </ButtonLabel>
-                                                        </a>
-                                                      </ForwardRef>
-                                                    </StyledButton>
-                                                  </Button>
-                                                </div>
-                                              </Base>
-                                            </Box>
-                                            <Box
-                                              ml={1}
-                                            >
-                                              <Base
-                                                className="css-re0chm"
-                                                ml={1}
-                                              >
-                                                <div
-                                                  className="css-re0chm"
-                                                  is={null}
-                                                >
-                                                  <Button
-                                                    disabled={false}
-                                                    external={true}
-                                                    href="https://docs.getsentry.com/hosted/clients/csharp/"
-                                                    size="small"
+                                                                <ButtonLabel
+                                                                  size="small"
+                                                                >
+                                                                  <Component
+                                                                    className="css-7ui8bl-ButtonLabel eqrebog1"
+                                                                    size="small"
+                                                                  >
+                                                                    <span
+                                                                      className="css-7ui8bl-ButtonLabel eqrebog1"
+                                                                    >
+                                                                      &lt; Back
+                                                                    </span>
+                                                                  </Component>
+                                                                </ButtonLabel>
+                                                              </a>
+                                                            </ForwardRef>
+                                                          </StyledButton>
+                                                        </Button>
+                                                      </div>
+                                                    </Base>
+                                                  </Box>
+                                                  <Box
+                                                    ml={1}
                                                   >
-                                                    <StyledButton
-                                                      aria-disabled={false}
-                                                      aria-label="Full Documentation"
-                                                      disabled={false}
-                                                      external={true}
-                                                      href="https://docs.getsentry.com/hosted/clients/csharp/"
-                                                      onClick={[Function]}
-                                                      role="button"
-                                                      size="small"
+                                                    <Base
+                                                      className="css-re0chm"
+                                                      ml={1}
                                                     >
-                                                      <ForwardRef
-                                                        aria-disabled={false}
-                                                        aria-label="Full Documentation"
-                                                        className="css-dkprmi-StyledButton-getColors eqrebog0"
-                                                        disabled={false}
-                                                        external={true}
-                                                        href="https://docs.getsentry.com/hosted/clients/csharp/"
-                                                        onClick={[Function]}
-                                                        role="button"
-                                                        size="small"
+                                                      <div
+                                                        className="css-re0chm"
+                                                        is={null}
                                                       >
-                                                        <ExternalLink
-                                                          aria-disabled={false}
-                                                          aria-label="Full Documentation"
-                                                          className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                        <Button
+                                                          disabled={false}
+                                                          external={true}
                                                           href="https://docs.getsentry.com/hosted/clients/csharp/"
-                                                          onClick={[Function]}
-                                                          rel="noreferrer noopener"
-                                                          role="button"
                                                           size="small"
-                                                          target="_blank"
                                                         >
-                                                          <a
+                                                          <StyledButton
                                                             aria-disabled={false}
                                                             aria-label="Full Documentation"
-                                                            className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                            disabled={false}
+                                                            external={true}
                                                             href="https://docs.getsentry.com/hosted/clients/csharp/"
                                                             onClick={[Function]}
-                                                            rel="noreferrer noopener"
                                                             role="button"
                                                             size="small"
-                                                            target="_blank"
                                                           >
-                                                            <ButtonLabel
+                                                            <ForwardRef
+                                                              aria-disabled={false}
+                                                              aria-label="Full Documentation"
+                                                              className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                              disabled={false}
+                                                              external={true}
+                                                              href="https://docs.getsentry.com/hosted/clients/csharp/"
+                                                              onClick={[Function]}
+                                                              role="button"
                                                               size="small"
                                                             >
-                                                              <Component
-                                                                className="css-7ui8bl-ButtonLabel eqrebog1"
+                                                              <ExternalLink
+                                                                aria-disabled={false}
+                                                                aria-label="Full Documentation"
+                                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                                href="https://docs.getsentry.com/hosted/clients/csharp/"
+                                                                onClick={[Function]}
+                                                                rel="noreferrer noopener"
+                                                                role="button"
                                                                 size="small"
+                                                                target="_blank"
                                                               >
-                                                                <span
-                                                                  className="css-7ui8bl-ButtonLabel eqrebog1"
+                                                                <a
+                                                                  aria-disabled={false}
+                                                                  aria-label="Full Documentation"
+                                                                  className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                                  href="https://docs.getsentry.com/hosted/clients/csharp/"
+                                                                  onClick={[Function]}
+                                                                  rel="noreferrer noopener"
+                                                                  role="button"
+                                                                  size="small"
+                                                                  target="_blank"
                                                                 >
-                                                                  Full Documentation
-                                                                </span>
-                                                              </Component>
-                                                            </ButtonLabel>
-                                                          </a>
-                                                        </ExternalLink>
-                                                      </ForwardRef>
-                                                    </StyledButton>
-                                                  </Button>
+                                                                  <ButtonLabel
+                                                                    size="small"
+                                                                  >
+                                                                    <Component
+                                                                      className="css-7ui8bl-ButtonLabel eqrebog1"
+                                                                      size="small"
+                                                                    >
+                                                                      <span
+                                                                        className="css-7ui8bl-ButtonLabel eqrebog1"
+                                                                      >
+                                                                        Full Documentation
+                                                                      </span>
+                                                                    </Component>
+                                                                  </ButtonLabel>
+                                                                </a>
+                                                              </ExternalLink>
+                                                            </ForwardRef>
+                                                          </StyledButton>
+                                                        </Button>
+                                                      </div>
+                                                    </Base>
+                                                  </Box>
                                                 </div>
                                               </Base>
-                                            </Box>
+                                            </Flex>
                                           </div>
                                         </Base>
                                       </Flex>
-                                    </div>
-                                  </Base>
-                                </Flex>
-                              </Component>
-                            </PanelHeader>
-                            <PanelBody
-                              direction="column"
-                              disablePadding={false}
-                              flex={false}
-                            >
-                              <div
-                                className="css-zhfi4l-padding-textStyles"
-                              >
-                                <TextBlock>
-                                  <Component
-                                    className="css-1geyb25-TextBlock ec8ep340"
+                                    </Component>
+                                  </PanelHeader>
+                                  <PanelBody
+                                    direction="column"
+                                    disablePadding={false}
+                                    flex={false}
                                   >
                                     <div
-                                      className="css-1geyb25-TextBlock ec8ep340"
+                                      className="css-zhfi4l-padding-textStyles"
                                     >
-                                      <span
-                                        key="8"
-                                      >
-                                        <span
-                                          key="0"
+                                      <TextBlock>
+                                        <Component
+                                          className="css-1geyb25-TextBlock ec8ep340"
                                         >
-                                          
+                                          <div
+                                            className="css-1geyb25-TextBlock ec8ep340"
+                                          >
+                                            <span
+                                              key="8"
+                                            >
+                                              <span
+                                                key="0"
+                                              >
+                                                
              This is a quick getting started guide. For in-depth instructions
              on integrating Sentry with 
-                                        </span>
-                                        <span
-                                          key="2"
-                                        >
-                                          node
-                                        </span>
-                                        <span
-                                          key="3"
-                                        >
-                                          , view
+                                              </span>
+                                              <span
+                                                key="2"
+                                              >
+                                                node
+                                              </span>
+                                              <span
+                                                key="3"
+                                              >
+                                                , view
              
-                                        </span>
-                                        <a
-                                          href="https://docs.getsentry.com/hosted/clients/csharp/"
-                                          key="5"
-                                        >
-                                          <span
-                                            key="4"
-                                          >
-                                            our complete documentation
-                                          </span>
-                                        </a>
-                                        <span
-                                          key="6"
-                                        >
-                                          .
+                                              </span>
+                                              <a
+                                                href="https://docs.getsentry.com/hosted/clients/csharp/"
+                                                key="5"
+                                              >
+                                                <span
+                                                  key="4"
+                                                >
+                                                  our complete documentation
+                                                </span>
+                                              </a>
+                                              <span
+                                                key="6"
+                                              >
+                                                .
             
-                                        </span>
-                                      </span>
+                                              </span>
+                                            </span>
+                                          </div>
+                                        </Component>
+                                      </TextBlock>
+                                      <DocumentationWrapper
+                                        dangerouslySetInnerHTML={
+                                          Object {
+                                            "__html": undefined,
+                                          }
+                                        }
+                                      >
+                                        <div
+                                          className="css-1y7l4t-DocumentationWrapper e1w9lqpk0"
+                                          dangerouslySetInnerHTML={
+                                            Object {
+                                              "__html": undefined,
+                                            }
+                                          }
+                                        />
+                                      </DocumentationWrapper>
                                     </div>
-                                  </Component>
-                                </TextBlock>
-                                <DocumentationWrapper
-                                  dangerouslySetInnerHTML={
-                                    Object {
-                                      "__html": undefined,
-                                    }
-                                  }
-                                >
-                                  <div
-                                    className="css-1y7l4t-DocumentationWrapper e1w9lqpk0"
-                                    dangerouslySetInnerHTML={
-                                      Object {
-                                        "__html": undefined,
-                                      }
-                                    }
-                                  />
-                                </DocumentationWrapper>
-                              </div>
-                            </PanelBody>
-                          </div>
-                        </Component>
-                      </Panel>
-                    </ProjectInstallPlatform>
-                  </WithOrganizationMockWrapper>
-                </ProjectDocsContext>
-              </DocumentTitle>
-            </SideEffect(DocumentTitle)>
-          </ProjectContext>
-        </withRouter(ProjectContext)>
-      </withProjects(withRouter(ProjectContext))>
+                                  </PanelBody>
+                                </div>
+                              </Component>
+                            </Panel>
+                          </ProjectInstallPlatform>
+                        </WithOrganizationMockWrapper>
+                      </withApi(WithOrganizationMockWrapper)>
+                    </ProjectDocsContext>
+                  </withApi(ProjectDocsContext)>
+                </DocumentTitle>
+              </SideEffect(DocumentTitle)>
+            </ProjectContext>
+          </withRouter(ProjectContext)>
+        </withProjects(withRouter(ProjectContext))>
+      </withApi(withProjects(withRouter(ProjectContext)))>
       <DoneButton>
         <div
           className="css-5mss3k-DoneButton e1chtmge0"
diff --git a/tests/js/spec/views/onboarding/configure/index.spec.jsx b/tests/js/spec/views/onboarding/configure/index.spec.jsx
index aa0b424834..8c879bea67 100644
--- a/tests/js/spec/views/onboarding/configure/index.spec.jsx
+++ b/tests/js/spec/views/onboarding/configure/index.spec.jsx
@@ -80,6 +80,7 @@ describe('Configure should render correctly', function() {
 
   describe('render()', function() {
     const baseProps = {
+      api: new MockApiClient(),
       next: () => {},
       params: {
         projectId: 'project-slug',
diff --git a/tests/js/spec/views/onboarding/createProject.spec.jsx b/tests/js/spec/views/onboarding/createProject.spec.jsx
index d7bdfab4f2..1b52b3298d 100644
--- a/tests/js/spec/views/onboarding/createProject.spec.jsx
+++ b/tests/js/spec/views/onboarding/createProject.spec.jsx
@@ -8,6 +8,7 @@ jest.mock('app/actionCreators/modal');
 
 describe('CreateProject', function() {
   const baseProps = {
+    api: new MockApiClient(),
     location: {query: {}},
     organization: TestStubs.Organization(),
     teams: [],
diff --git a/tests/js/spec/views/organizationContext.spec.jsx b/tests/js/spec/views/organizationContext.spec.jsx
index 3b18b9cf7f..7cb76593c4 100644
--- a/tests/js/spec/views/organizationContext.spec.jsx
+++ b/tests/js/spec/views/organizationContext.spec.jsx
@@ -26,7 +26,12 @@ describe('OrganizationContext', function() {
 
   const createWrapper = props =>
     mount(
-      <OrganizationContext params={{orgId: 'org-slug'}} location={{query: {}}} {...props}>
+      <OrganizationContext
+        api={new MockApiClient()}
+        params={{orgId: 'org-slug'}}
+        location={{query: {}}}
+        {...props}
+      >
         <div />
       </OrganizationContext>
     );
diff --git a/tests/js/spec/views/organizationStream/overview.spec.jsx b/tests/js/spec/views/organizationStream/overview.spec.jsx
index 611e573640..ffdc5f6419 100644
--- a/tests/js/spec/views/organizationStream/overview.spec.jsx
+++ b/tests/js/spec/views/organizationStream/overview.spec.jsx
@@ -1,11 +1,12 @@
-import React from 'react';
 import {browserHistory} from 'react-router';
-import {shallow} from 'enzyme';
 import {clonedeep} from 'lodash';
+import React from 'react';
 
-import TagStore from 'app/stores/tagStore';
-import GroupStore from 'app/stores/groupStore';
 import {OrganizationStream} from 'app/views/organizationStream/overview';
+import {shallow} from 'enzyme';
+import ErrorRobot from 'app/components/errorRobot';
+import GroupStore from 'app/stores/groupStore';
+import TagStore from 'app/stores/tagStore';
 
 const DEFAULT_LINKS_HEADER =
   '<http://127.0.0.1:8000/api/0/organizations/org-slug/issues/?cursor=1443575731:0:1>; rel="previous"; results="false"; cursor="1443575731:0:1", ' +
@@ -498,7 +499,7 @@ describe('OrganizationStream', function() {
         }),
       });
 
-      expect(wrapper.find('ErrorRobot')).toHaveLength(1);
+      expect(wrapper.find(ErrorRobot)).toHaveLength(1);
     });
 
     it('does not display when no projects selected and any projects have a first event', function() {
@@ -527,7 +528,7 @@ describe('OrganizationStream', function() {
         }),
       });
 
-      expect(wrapper.find('ErrorRobot')).toHaveLength(0);
+      expect(wrapper.find(ErrorRobot)).toHaveLength(0);
     });
 
     it('displays when all selected projects do not have first event', function() {
@@ -561,7 +562,7 @@ describe('OrganizationStream', function() {
         }),
       });
 
-      expect(wrapper.find('ErrorRobot')).toHaveLength(1);
+      expect(wrapper.find(ErrorRobot)).toHaveLength(1);
     });
 
     it('does not display when any selected projects have first event', function() {
@@ -595,7 +596,7 @@ describe('OrganizationStream', function() {
         }),
       });
 
-      expect(wrapper.find('ErrorRobot')).toHaveLength(0);
+      expect(wrapper.find(ErrorRobot)).toHaveLength(0);
     });
   });
 
diff --git a/tests/js/spec/views/projectInstall/platform.spec.jsx b/tests/js/spec/views/projectInstall/platform.spec.jsx
index 4561c84558..8a206353a4 100644
--- a/tests/js/spec/views/projectInstall/platform.spec.jsx
+++ b/tests/js/spec/views/projectInstall/platform.spec.jsx
@@ -1,11 +1,13 @@
+import {browserHistory} from 'react-router';
 import React from 'react';
-import {shallow, mount} from 'enzyme';
 
+import {shallow, mount} from 'enzyme';
 import {ProjectInstallPlatform} from 'app/views/projectInstall/platform';
 
 describe('ProjectInstallPlatform', function() {
   describe('render()', function() {
     const baseProps = {
+      api: new MockApiClient(),
       organization: TestStubs.Organization(),
       project: TestStubs.Project(),
       location: {query: {}},
@@ -64,28 +66,14 @@ describe('ProjectInstallPlatform', function() {
         body: {},
       });
 
-      const handleRedirectStub = jest.spyOn(
-        ProjectInstallPlatform.prototype,
-        'redirectToNeutralDocs'
-      );
-
-      // XXX(maxbittker) this is a hack to defeat the method auto binding so we
-      // can fully stub the method. It would not be neccessary with es6 class
-      // components and it relies on react internals so it's fragile
-      const index =
-        ProjectInstallPlatform.prototype.__reactAutoBindPairs.indexOf(
-          'redirectToNeutralDocs'
-        ) + 1;
-      ProjectInstallPlatform.prototype.__reactAutoBindPairs[index] = handleRedirectStub;
-
       mount(<ProjectInstallPlatform {...props} />, {
         organization: {id: '1337'},
       });
 
-      expect(handleRedirectStub).toHaveBeenCalledTimes(1);
+      expect(browserHistory.push).toHaveBeenCalledTimes(1);
     });
 
-    it('should render NotFound if no matching integration/platform', function() {
+    it('should render NotFound if no matching integration/platform', async function() {
       const props = {
         ...baseProps,
         params: {
@@ -94,9 +82,13 @@ describe('ProjectInstallPlatform', function() {
       };
 
       const wrapper = shallow(<ProjectInstallPlatform {...props} />, {
+        disableLifeCycleMethods: false,
         organization: {id: '1337'},
       });
 
+      await tick();
+      wrapper.update();
+
       expect(wrapper.find('NotFound')).toHaveLength(1);
     });
 
@@ -109,6 +101,7 @@ describe('ProjectInstallPlatform', function() {
       };
 
       const wrapper = shallow(<ProjectInstallPlatform {...props} />, {
+        disableLifeCycleMethods: false,
         organization: {id: '1337'},
       });
 
diff --git a/tests/js/spec/views/projects/projectContext.spec.jsx b/tests/js/spec/views/projects/projectContext.spec.jsx
index 7302b1d738..570ce617ad 100644
--- a/tests/js/spec/views/projects/projectContext.spec.jsx
+++ b/tests/js/spec/views/projects/projectContext.spec.jsx
@@ -47,6 +47,7 @@ describe('projectContext component', function() {
 
     const projectContext = (
       <ProjectContext
+        api={new MockApiClient()}
         params={{orgId: org.slug, projectId: project.slug}}
         projects={[]}
         routes={routes}
@@ -81,6 +82,7 @@ describe('projectContext component', function() {
 
     const projectContext = (
       <ProjectContext
+        api={new MockApiClient()}
         params={{orgId: org.slug, projectId: project.slug}}
         projects={[]}
         routes={routes}
diff --git a/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap b/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
index bbfce54a8d..01aeb6918e 100644
--- a/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
+++ b/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
@@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`ReleaseCommits organization release commits 1`] = `
-<ReleaseCommits
+<withApi(ReleaseCommits)
   location={Object {}}
   params={
     Object {
@@ -10,160 +10,137 @@ exports[`ReleaseCommits organization release commits 1`] = `
     }
   }
 >
-  <div>
-    <div
-      className="heading"
-    />
-    <Panel
-      key="example/repo-name"
-    >
-      <Component
-        className="css-1jn7ahh-Panel e1laxa7d0"
+  <ReleaseCommits
+    api={Client {}}
+    location={Object {}}
+    params={
+      Object {
+        "orgId": "123",
+        "version": "10.0",
+      }
+    }
+  >
+    <div>
+      <div
+        className="heading"
+      />
+      <Panel
+        key="example/repo-name"
       >
-        <div
+        <Component
           className="css-1jn7ahh-Panel e1laxa7d0"
         >
-          <PanelHeader>
-            <Component
-              className="css-snrzp3-PanelHeader-getPadding e1p8v8nv0"
-            >
-              <Flex
-                align="center"
+          <div
+            className="css-1jn7ahh-Panel e1laxa7d0"
+          >
+            <PanelHeader>
+              <Component
                 className="css-snrzp3-PanelHeader-getPadding e1p8v8nv0"
-                justify="space-between"
               >
-                <Base
+                <Flex
                   align="center"
-                  className="e1p8v8nv0 css-1fll6iw-PanelHeader-getPadding"
+                  className="css-snrzp3-PanelHeader-getPadding e1p8v8nv0"
                   justify="space-between"
                 >
-                  <div
+                  <Base
+                    align="center"
                     className="e1p8v8nv0 css-1fll6iw-PanelHeader-getPadding"
-                    is={null}
+                    justify="space-between"
                   >
-                    example/repo-name
-                  </div>
-                </Base>
-              </Flex>
-            </Component>
-          </PanelHeader>
-          <PanelBody
-            direction="column"
-            disablePadding={true}
-            flex={false}
-          >
-            <div
-              className="css-9vq8an-textStyles"
+                    <div
+                      className="e1p8v8nv0 css-1fll6iw-PanelHeader-getPadding"
+                      is={null}
+                    >
+                      example/repo-name
+                    </div>
+                  </Base>
+                </Flex>
+              </Component>
+            </PanelHeader>
+            <PanelBody
+              direction="column"
+              disablePadding={true}
+              flex={false}
             >
-              <CommitRow
-                commit={
-                  Object {
-                    "author": Object {
-                      "avatar": Object {
-                        "avatarType": "letter_avatar",
-                        "avatarUuid": null,
-                      },
-                      "avatarUrl": "https://example.com/avatar.png",
-                      "dateJoined": "2018-02-26T23:57:43.766Z",
-                      "email": "example@sentry.io",
-                      "emails": Array [
-                        Object {
-                          "email": "example@sentry.io",
-                          "id": "231605",
-                          "is_verified": true,
+              <div
+                className="css-9vq8an-textStyles"
+              >
+                <CommitRow
+                  commit={
+                    Object {
+                      "author": Object {
+                        "avatar": Object {
+                          "avatarType": "letter_avatar",
+                          "avatarUuid": null,
                         },
-                      ],
-                      "has2fa": false,
-                      "hasPasswordAuth": true,
-                      "id": "224288",
-                      "isActive": true,
-                      "isManaged": false,
-                      "isSuperuser": true,
-                      "lastActive": "2018-11-30T21:25:15.222Z",
-                      "lastLogin": "2018-11-30T21:18:09.812Z",
-                      "name": "Foo Bar",
-                      "username": "example@sentry.io",
-                    },
-                    "dateCreated": "2018-11-30T18:46:31Z",
-                    "id": "f7f395d14b2fe29a4e253bf1d3094d61e6ad4434",
-                    "message": "(improve) Add Links to Spike-Protection Email (#2408)
+                        "avatarUrl": "https://example.com/avatar.png",
+                        "dateJoined": "2018-02-26T23:57:43.766Z",
+                        "email": "example@sentry.io",
+                        "emails": Array [
+                          Object {
+                            "email": "example@sentry.io",
+                            "id": "231605",
+                            "is_verified": true,
+                          },
+                        ],
+                        "has2fa": false,
+                        "hasPasswordAuth": true,
+                        "id": "224288",
+                        "isActive": true,
+                        "isManaged": false,
+                        "isSuperuser": true,
+                        "lastActive": "2018-11-30T21:25:15.222Z",
+                        "lastLogin": "2018-11-30T21:18:09.812Z",
+                        "name": "Foo Bar",
+                        "username": "example@sentry.io",
+                      },
+                      "dateCreated": "2018-11-30T18:46:31Z",
+                      "id": "f7f395d14b2fe29a4e253bf1d3094d61e6ad4434",
+                      "message": "(improve) Add Links to Spike-Protection Email (#2408)
 
 * (improve) Add Links to Spike-Protection Email
 
 Users now have access to useful links from the blogs and docs on Spike-protection.
 
 * fixed wording",
-                    "repository": Object {
-                      "externalSlug": "example/repo-name",
-                      "id": "4",
-                      "name": "example/repo-name",
-                      "provider": "github",
-                      "status": "active",
-                      "url": "https://github.com/example/repo-name",
-                    },
+                      "repository": Object {
+                        "externalSlug": "example/repo-name",
+                        "id": "4",
+                        "name": "example/repo-name",
+                        "provider": "github",
+                        "status": "active",
+                        "url": "https://github.com/example/repo-name",
+                      },
+                    }
                   }
-                }
-                key="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
-              >
-                <PanelItem
-                  align="center"
                   key="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
-                  p={2}
                 >
-                  <Base
+                  <PanelItem
                     align="center"
-                    className="css-xfqgz4-PanelItem eo8n7lk0"
+                    key="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
                     p={2}
                   >
-                    <div
+                    <Base
+                      align="center"
                       className="css-xfqgz4-PanelItem eo8n7lk0"
-                      is={null}
+                      p={2}
                     >
-                      <AvatarWrapper
-                        mr={2}
+                      <div
+                        className="css-xfqgz4-PanelItem eo8n7lk0"
+                        is={null}
                       >
-                        <Base
-                          className="css-nt1fnk-AvatarWrapper ez7y0rd0"
+                        <AvatarWrapper
                           mr={2}
                         >
-                          <div
+                          <Base
                             className="css-nt1fnk-AvatarWrapper ez7y0rd0"
-                            is={null}
+                            mr={2}
                           >
-                            <Avatar
-                              hasTooltip={false}
-                              size={36}
-                              user={
-                                Object {
-                                  "avatar": Object {
-                                    "avatarType": "letter_avatar",
-                                    "avatarUuid": null,
-                                  },
-                                  "avatarUrl": "https://example.com/avatar.png",
-                                  "dateJoined": "2018-02-26T23:57:43.766Z",
-                                  "email": "example@sentry.io",
-                                  "emails": Array [
-                                    Object {
-                                      "email": "example@sentry.io",
-                                      "id": "231605",
-                                      "is_verified": true,
-                                    },
-                                  ],
-                                  "has2fa": false,
-                                  "hasPasswordAuth": true,
-                                  "id": "224288",
-                                  "isActive": true,
-                                  "isManaged": false,
-                                  "isSuperuser": true,
-                                  "lastActive": "2018-11-30T21:25:15.222Z",
-                                  "lastLogin": "2018-11-30T21:18:09.812Z",
-                                  "name": "Foo Bar",
-                                  "username": "example@sentry.io",
-                                }
-                              }
+                            <div
+                              className="css-nt1fnk-AvatarWrapper ez7y0rd0"
+                              is={null}
                             >
-                              <UserAvatar
-                                gravatar={false}
+                              <Avatar
                                 hasTooltip={false}
                                 size={36}
                                 user={
@@ -195,36 +172,60 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                                   }
                                 }
                               >
-                                <BaseAvatar
-                                  gravatarId="example@sentry.io"
+                                <UserAvatar
+                                  gravatar={false}
                                   hasTooltip={false}
-                                  letterId="example@sentry.io"
-                                  round={true}
                                   size={36}
-                                  style={Object {}}
-                                  title="Foo Bar"
-                                  tooltip="Foo Bar (example@sentry.io)"
-                                  type="letter_avatar"
-                                  uploadId={null}
-                                  uploadPath="avatar"
+                                  user={
+                                    Object {
+                                      "avatar": Object {
+                                        "avatarType": "letter_avatar",
+                                        "avatarUuid": null,
+                                      },
+                                      "avatarUrl": "https://example.com/avatar.png",
+                                      "dateJoined": "2018-02-26T23:57:43.766Z",
+                                      "email": "example@sentry.io",
+                                      "emails": Array [
+                                        Object {
+                                          "email": "example@sentry.io",
+                                          "id": "231605",
+                                          "is_verified": true,
+                                        },
+                                      ],
+                                      "has2fa": false,
+                                      "hasPasswordAuth": true,
+                                      "id": "224288",
+                                      "isActive": true,
+                                      "isManaged": false,
+                                      "isSuperuser": true,
+                                      "lastActive": "2018-11-30T21:25:15.222Z",
+                                      "lastLogin": "2018-11-30T21:18:09.812Z",
+                                      "name": "Foo Bar",
+                                      "username": "example@sentry.io",
+                                    }
+                                  }
                                 >
-                                  <Tooltip
-                                    disabled={true}
-                                    title="Foo Bar (example@sentry.io)"
+                                  <BaseAvatar
+                                    gravatarId="example@sentry.io"
+                                    hasTooltip={false}
+                                    letterId="example@sentry.io"
+                                    round={true}
+                                    size={36}
+                                    style={Object {}}
+                                    title="Foo Bar"
+                                    tooltip="Foo Bar (example@sentry.io)"
+                                    type="letter_avatar"
+                                    uploadId={null}
+                                    uploadPath="avatar"
                                   >
-                                    <StyledBaseAvatar
-                                      className="avatar"
-                                      loaded={true}
-                                      round={true}
-                                      style={
-                                        Object {
-                                          "height": "36px",
-                                          "width": "36px",
-                                        }
-                                      }
+                                    <Tooltip
+                                      disabled={true}
+                                      title="Foo Bar (example@sentry.io)"
                                     >
-                                      <span
-                                        className="avatar css-3f9bmx-StyledBaseAvatar e1z0ohzl0"
+                                      <StyledBaseAvatar
+                                        className="avatar"
+                                        loaded={true}
+                                        round={true}
                                         style={
                                           Object {
                                             "height": "36px",
@@ -232,66 +233,64 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                                           }
                                         }
                                       >
-                                        <LetterAvatar
-                                          displayName="Foo Bar"
-                                          identifier="example@sentry.io"
-                                          round={true}
+                                        <span
+                                          className="avatar css-3f9bmx-StyledBaseAvatar e1z0ohzl0"
+                                          style={
+                                            Object {
+                                              "height": "36px",
+                                              "width": "36px",
+                                            }
+                                          }
                                         >
-                                          <Svg
+                                          <LetterAvatar
+                                            displayName="Foo Bar"
+                                            identifier="example@sentry.io"
                                             round={true}
-                                            viewBox="0 0 120 120"
                                           >
-                                            <svg
-                                              className="css-1r4mnb9-Svg e1knxa8x0"
+                                            <Svg
+                                              round={true}
                                               viewBox="0 0 120 120"
                                             >
-                                              <rect
-                                                fill="#847a8c"
-                                                height="120"
-                                                rx="15"
-                                                ry="15"
-                                                width="120"
-                                                x="0"
-                                                y="0"
-                                              />
-                                              <text
-                                                fill="#FFFFFF"
-                                                fontSize="65"
-                                                style={
-                                                  Object {
-                                                    "dominantBaseline": "central",
-                                                  }
-                                                }
-                                                textAnchor="middle"
-                                                x="50%"
-                                                y="50%"
+                                              <svg
+                                                className="css-1r4mnb9-Svg e1knxa8x0"
+                                                viewBox="0 0 120 120"
                                               >
-                                                FB
-                                              </text>
-                                            </svg>
-                                          </Svg>
-                                        </LetterAvatar>
-                                      </span>
-                                    </StyledBaseAvatar>
-                                  </Tooltip>
-                                </BaseAvatar>
-                              </UserAvatar>
-                            </Avatar>
-                          </div>
-                        </Base>
-                      </AvatarWrapper>
-                      <Box
-                        direction="column"
-                        flex="1"
-                        mr={2}
-                        style={
-                          Object {
-                            "minWidth": 0,
-                          }
-                        }
-                      >
-                        <Base
-                          className="css-14x8ie5"
+                                                <rect
+                                                  fill="#847a8c"
+                                                  height="120"
+                                                  rx="15"
+                                                  ry="15"
+                                                  width="120"
+                                                  x="0"
+                                                  y="0"
+                                                />
+                                                <text
+                                                  fill="#FFFFFF"
+                                                  fontSize="65"
+                                                  style={
+                                                    Object {
+                                                      "dominantBaseline": "central",
+                                                    }
+                                                  }
+                                                  textAnchor="middle"
+                                                  x="50%"
+                                                  y="50%"
+                                                >
+                                                  FB
+                                                </text>
+                                              </svg>
+                                            </Svg>
+                                          </LetterAvatar>
+                                        </span>
+                                      </StyledBaseAvatar>
+                                    </Tooltip>
+                                  </BaseAvatar>
+                                </UserAvatar>
+                              </Avatar>
+                            </div>
+                          </Base>
+                        </AvatarWrapper>
+                        <Box
                           direction="column"
                           flex="1"
                           mr={2}
@@ -301,102 +300,114 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                             }
                           }
                         >
-                          <div
+                          <Base
                             className="css-14x8ie5"
-                            is={null}
+                            direction="column"
+                            flex="1"
+                            mr={2}
                             style={
                               Object {
                                 "minWidth": 0,
                               }
                             }
                           >
-                            <Message>
-                              <div
-                                className="css-q4dmcs-TextOverflow-Message ez7y0rd1"
-                              >
-                                (improve) Add Links to Spike-Protection Email (#2408)
-                              </div>
-                            </Message>
-                            <Meta>
-                              <p
-                                className="css-10csi2f-Meta ez7y0rd2"
-                              >
-                                <span
-                                  key="4"
+                            <div
+                              className="css-14x8ie5"
+                              is={null}
+                              style={
+                                Object {
+                                  "minWidth": 0,
+                                }
+                              }
+                            >
+                              <Message>
+                                <div
+                                  className="css-q4dmcs-TextOverflow-Message ez7y0rd1"
+                                >
+                                  (improve) Add Links to Spike-Protection Email (#2408)
+                                </div>
+                              </Message>
+                              <Meta>
+                                <p
+                                  className="css-10csi2f-Meta ez7y0rd2"
                                 >
-                                  <strong
-                                    key="0"
-                                  >
-                                    Foo Bar
-                                  </strong>
                                   <span
-                                    key="1"
-                                  >
-                                     committed 
-                                  </span>
-                                  <TimeSince
-                                    date="2018-11-30T18:46:31Z"
-                                    key="2"
-                                    suffix="ago"
+                                    key="4"
                                   >
-                                    <time
-                                      dateTime="2018-11-30T18:46:31.000Z"
-                                      title="November 30, 2018 6:46 PM UTC"
+                                    <strong
+                                      key="0"
                                     >
-                                      in a year
-                                    </time>
-                                  </TimeSince>
-                                </span>
-                              </p>
-                            </Meta>
-                          </div>
-                        </Base>
-                      </Box>
-                      <Box
-                        className="hidden-xs"
-                      >
-                        <Base
-                          className="hidden-xs css-roynbj"
+                                      Foo Bar
+                                    </strong>
+                                    <span
+                                      key="1"
+                                    >
+                                       committed 
+                                    </span>
+                                    <TimeSince
+                                      date="2018-11-30T18:46:31Z"
+                                      key="2"
+                                      suffix="ago"
+                                    >
+                                      <time
+                                        dateTime="2018-11-30T18:46:31.000Z"
+                                        title="November 30, 2018 6:46 PM UTC"
+                                      >
+                                        in a year
+                                      </time>
+                                    </TimeSince>
+                                  </span>
+                                </p>
+                              </Meta>
+                            </div>
+                          </Base>
+                        </Box>
+                        <Box
+                          className="hidden-xs"
                         >
-                          <div
+                          <Base
                             className="hidden-xs css-roynbj"
-                            is={null}
                           >
-                            <CommitLink
-                              commitId="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
-                              repository={
-                                Object {
-                                  "externalSlug": "example/repo-name",
-                                  "id": "4",
-                                  "name": "example/repo-name",
-                                  "provider": "github",
-                                  "status": "active",
-                                  "url": "https://github.com/example/repo-name",
-                                }
-                              }
+                            <div
+                              className="hidden-xs css-roynbj"
+                              is={null}
                             >
-                              <span>
-                                f7f395d
-                              </span>
-                            </CommitLink>
-                          </div>
-                        </Base>
-                      </Box>
-                    </div>
-                  </Base>
-                </PanelItem>
-              </CommitRow>
-            </div>
-          </PanelBody>
-        </div>
-      </Component>
-    </Panel>
-  </div>
-</ReleaseCommits>
+                              <CommitLink
+                                commitId="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
+                                repository={
+                                  Object {
+                                    "externalSlug": "example/repo-name",
+                                    "id": "4",
+                                    "name": "example/repo-name",
+                                    "provider": "github",
+                                    "status": "active",
+                                    "url": "https://github.com/example/repo-name",
+                                  }
+                                }
+                              >
+                                <span>
+                                  f7f395d
+                                </span>
+                              </CommitLink>
+                            </div>
+                          </Base>
+                        </Box>
+                      </div>
+                    </Base>
+                  </PanelItem>
+                </CommitRow>
+              </div>
+            </PanelBody>
+          </div>
+        </Component>
+      </Panel>
+    </div>
+  </ReleaseCommits>
+</withApi(ReleaseCommits)>
 `;
 
 exports[`ReleaseCommits project release commits 1`] = `
-<ReleaseCommits
+<withApi(ReleaseCommits)
   location={Object {}}
   params={
     Object {
@@ -406,160 +417,138 @@ exports[`ReleaseCommits project release commits 1`] = `
     }
   }
 >
-  <div>
-    <div
-      className="heading"
-    />
-    <Panel
-      key="example/repo-name"
-    >
-      <Component
-        className="css-1jn7ahh-Panel e1laxa7d0"
+  <ReleaseCommits
+    api={Client {}}
+    location={Object {}}
+    params={
+      Object {
+        "orgId": "123",
+        "projectId": "456",
+        "version": "10.0",
+      }
+    }
+  >
+    <div>
+      <div
+        className="heading"
+      />
+      <Panel
+        key="example/repo-name"
       >
-        <div
+        <Component
           className="css-1jn7ahh-Panel e1laxa7d0"
         >
-          <PanelHeader>
-            <Component
-              className="css-snrzp3-PanelHeader-getPadding e1p8v8nv0"
-            >
-              <Flex
-                align="center"
+          <div
+            className="css-1jn7ahh-Panel e1laxa7d0"
+          >
+            <PanelHeader>
+              <Component
                 className="css-snrzp3-PanelHeader-getPadding e1p8v8nv0"
-                justify="space-between"
               >
-                <Base
+                <Flex
                   align="center"
-                  className="e1p8v8nv0 css-1fll6iw-PanelHeader-getPadding"
+                  className="css-snrzp3-PanelHeader-getPadding e1p8v8nv0"
                   justify="space-between"
                 >
-                  <div
+                  <Base
+                    align="center"
                     className="e1p8v8nv0 css-1fll6iw-PanelHeader-getPadding"
-                    is={null}
+                    justify="space-between"
                   >
-                    example/repo-name
-                  </div>
-                </Base>
-              </Flex>
-            </Component>
-          </PanelHeader>
-          <PanelBody
-            direction="column"
-            disablePadding={true}
-            flex={false}
-          >
-            <div
-              className="css-9vq8an-textStyles"
+                    <div
+                      className="e1p8v8nv0 css-1fll6iw-PanelHeader-getPadding"
+                      is={null}
+                    >
+                      example/repo-name
+                    </div>
+                  </Base>
+                </Flex>
+              </Component>
+            </PanelHeader>
+            <PanelBody
+              direction="column"
+              disablePadding={true}
+              flex={false}
             >
-              <CommitRow
-                commit={
-                  Object {
-                    "author": Object {
-                      "avatar": Object {
-                        "avatarType": "letter_avatar",
-                        "avatarUuid": null,
-                      },
-                      "avatarUrl": "https://example.com/avatar.png",
-                      "dateJoined": "2018-02-26T23:57:43.766Z",
-                      "email": "example@sentry.io",
-                      "emails": Array [
-                        Object {
-                          "email": "example@sentry.io",
-                          "id": "231605",
-                          "is_verified": true,
+              <div
+                className="css-9vq8an-textStyles"
+              >
+                <CommitRow
+                  commit={
+                    Object {
+                      "author": Object {
+                        "avatar": Object {
+                          "avatarType": "letter_avatar",
+                          "avatarUuid": null,
                         },
-                      ],
-                      "has2fa": false,
-                      "hasPasswordAuth": true,
-                      "id": "224288",
-                      "isActive": true,
-                      "isManaged": false,
-                      "isSuperuser": true,
-                      "lastActive": "2018-11-30T21:25:15.222Z",
-                      "lastLogin": "2018-11-30T21:18:09.812Z",
-                      "name": "Foo Bar",
-                      "username": "example@sentry.io",
-                    },
-                    "dateCreated": "2018-11-30T18:46:31Z",
-                    "id": "f7f395d14b2fe29a4e253bf1d3094d61e6ad4434",
-                    "message": "(improve) Add Links to Spike-Protection Email (#2408)
+                        "avatarUrl": "https://example.com/avatar.png",
+                        "dateJoined": "2018-02-26T23:57:43.766Z",
+                        "email": "example@sentry.io",
+                        "emails": Array [
+                          Object {
+                            "email": "example@sentry.io",
+                            "id": "231605",
+                            "is_verified": true,
+                          },
+                        ],
+                        "has2fa": false,
+                        "hasPasswordAuth": true,
+                        "id": "224288",
+                        "isActive": true,
+                        "isManaged": false,
+                        "isSuperuser": true,
+                        "lastActive": "2018-11-30T21:25:15.222Z",
+                        "lastLogin": "2018-11-30T21:18:09.812Z",
+                        "name": "Foo Bar",
+                        "username": "example@sentry.io",
+                      },
+                      "dateCreated": "2018-11-30T18:46:31Z",
+                      "id": "f7f395d14b2fe29a4e253bf1d3094d61e6ad4434",
+                      "message": "(improve) Add Links to Spike-Protection Email (#2408)
 
 * (improve) Add Links to Spike-Protection Email
 
 Users now have access to useful links from the blogs and docs on Spike-protection.
 
 * fixed wording",
-                    "repository": Object {
-                      "externalSlug": "example/repo-name",
-                      "id": "4",
-                      "name": "example/repo-name",
-                      "provider": "github",
-                      "status": "active",
-                      "url": "https://github.com/example/repo-name",
-                    },
+                      "repository": Object {
+                        "externalSlug": "example/repo-name",
+                        "id": "4",
+                        "name": "example/repo-name",
+                        "provider": "github",
+                        "status": "active",
+                        "url": "https://github.com/example/repo-name",
+                      },
+                    }
                   }
-                }
-                key="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
-              >
-                <PanelItem
-                  align="center"
                   key="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
-                  p={2}
                 >
-                  <Base
+                  <PanelItem
                     align="center"
-                    className="css-xfqgz4-PanelItem eo8n7lk0"
+                    key="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
                     p={2}
                   >
-                    <div
+                    <Base
+                      align="center"
                       className="css-xfqgz4-PanelItem eo8n7lk0"
-                      is={null}
+                      p={2}
                     >
-                      <AvatarWrapper
-                        mr={2}
+                      <div
+                        className="css-xfqgz4-PanelItem eo8n7lk0"
+                        is={null}
                       >
-                        <Base
-                          className="css-nt1fnk-AvatarWrapper ez7y0rd0"
+                        <AvatarWrapper
                           mr={2}
                         >
-                          <div
+                          <Base
                             className="css-nt1fnk-AvatarWrapper ez7y0rd0"
-                            is={null}
+                            mr={2}
                           >
-                            <Avatar
-                              hasTooltip={false}
-                              size={36}
-                              user={
-                                Object {
-                                  "avatar": Object {
-                                    "avatarType": "letter_avatar",
-                                    "avatarUuid": null,
-                                  },
-                                  "avatarUrl": "https://example.com/avatar.png",
-                                  "dateJoined": "2018-02-26T23:57:43.766Z",
-                                  "email": "example@sentry.io",
-                                  "emails": Array [
-                                    Object {
-                                      "email": "example@sentry.io",
-                                      "id": "231605",
-                                      "is_verified": true,
-                                    },
-                                  ],
-                                  "has2fa": false,
-                                  "hasPasswordAuth": true,
-                                  "id": "224288",
-                                  "isActive": true,
-                                  "isManaged": false,
-                                  "isSuperuser": true,
-                                  "lastActive": "2018-11-30T21:25:15.222Z",
-                                  "lastLogin": "2018-11-30T21:18:09.812Z",
-                                  "name": "Foo Bar",
-                                  "username": "example@sentry.io",
-                                }
-                              }
+                            <div
+                              className="css-nt1fnk-AvatarWrapper ez7y0rd0"
+                              is={null}
                             >
-                              <UserAvatar
-                                gravatar={false}
+                              <Avatar
                                 hasTooltip={false}
                                 size={36}
                                 user={
@@ -591,36 +580,60 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                                   }
                                 }
                               >
-                                <BaseAvatar
-                                  gravatarId="example@sentry.io"
+                                <UserAvatar
+                                  gravatar={false}
                                   hasTooltip={false}
-                                  letterId="example@sentry.io"
-                                  round={true}
                                   size={36}
-                                  style={Object {}}
-                                  title="Foo Bar"
-                                  tooltip="Foo Bar (example@sentry.io)"
-                                  type="letter_avatar"
-                                  uploadId={null}
-                                  uploadPath="avatar"
+                                  user={
+                                    Object {
+                                      "avatar": Object {
+                                        "avatarType": "letter_avatar",
+                                        "avatarUuid": null,
+                                      },
+                                      "avatarUrl": "https://example.com/avatar.png",
+                                      "dateJoined": "2018-02-26T23:57:43.766Z",
+                                      "email": "example@sentry.io",
+                                      "emails": Array [
+                                        Object {
+                                          "email": "example@sentry.io",
+                                          "id": "231605",
+                                          "is_verified": true,
+                                        },
+                                      ],
+                                      "has2fa": false,
+                                      "hasPasswordAuth": true,
+                                      "id": "224288",
+                                      "isActive": true,
+                                      "isManaged": false,
+                                      "isSuperuser": true,
+                                      "lastActive": "2018-11-30T21:25:15.222Z",
+                                      "lastLogin": "2018-11-30T21:18:09.812Z",
+                                      "name": "Foo Bar",
+                                      "username": "example@sentry.io",
+                                    }
+                                  }
                                 >
-                                  <Tooltip
-                                    disabled={true}
-                                    title="Foo Bar (example@sentry.io)"
+                                  <BaseAvatar
+                                    gravatarId="example@sentry.io"
+                                    hasTooltip={false}
+                                    letterId="example@sentry.io"
+                                    round={true}
+                                    size={36}
+                                    style={Object {}}
+                                    title="Foo Bar"
+                                    tooltip="Foo Bar (example@sentry.io)"
+                                    type="letter_avatar"
+                                    uploadId={null}
+                                    uploadPath="avatar"
                                   >
-                                    <StyledBaseAvatar
-                                      className="avatar"
-                                      loaded={true}
-                                      round={true}
-                                      style={
-                                        Object {
-                                          "height": "36px",
-                                          "width": "36px",
-                                        }
-                                      }
+                                    <Tooltip
+                                      disabled={true}
+                                      title="Foo Bar (example@sentry.io)"
                                     >
-                                      <span
-                                        className="avatar css-3f9bmx-StyledBaseAvatar e1z0ohzl0"
+                                      <StyledBaseAvatar
+                                        className="avatar"
+                                        loaded={true}
+                                        round={true}
                                         style={
                                           Object {
                                             "height": "36px",
@@ -628,66 +641,64 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                                           }
                                         }
                                       >
-                                        <LetterAvatar
-                                          displayName="Foo Bar"
-                                          identifier="example@sentry.io"
-                                          round={true}
+                                        <span
+                                          className="avatar css-3f9bmx-StyledBaseAvatar e1z0ohzl0"
+                                          style={
+                                            Object {
+                                              "height": "36px",
+                                              "width": "36px",
+                                            }
+                                          }
                                         >
-                                          <Svg
+                                          <LetterAvatar
+                                            displayName="Foo Bar"
+                                            identifier="example@sentry.io"
                                             round={true}
-                                            viewBox="0 0 120 120"
                                           >
-                                            <svg
-                                              className="css-1r4mnb9-Svg e1knxa8x0"
+                                            <Svg
+                                              round={true}
                                               viewBox="0 0 120 120"
                                             >
-                                              <rect
-                                                fill="#847a8c"
-                                                height="120"
-                                                rx="15"
-                                                ry="15"
-                                                width="120"
-                                                x="0"
-                                                y="0"
-                                              />
-                                              <text
-                                                fill="#FFFFFF"
-                                                fontSize="65"
-                                                style={
-                                                  Object {
-                                                    "dominantBaseline": "central",
-                                                  }
-                                                }
-                                                textAnchor="middle"
-                                                x="50%"
-                                                y="50%"
+                                              <svg
+                                                className="css-1r4mnb9-Svg e1knxa8x0"
+                                                viewBox="0 0 120 120"
                                               >
-                                                FB
-                                              </text>
-                                            </svg>
-                                          </Svg>
-                                        </LetterAvatar>
-                                      </span>
-                                    </StyledBaseAvatar>
-                                  </Tooltip>
-                                </BaseAvatar>
-                              </UserAvatar>
-                            </Avatar>
-                          </div>
-                        </Base>
-                      </AvatarWrapper>
-                      <Box
-                        direction="column"
-                        flex="1"
-                        mr={2}
-                        style={
-                          Object {
-                            "minWidth": 0,
-                          }
-                        }
-                      >
-                        <Base
-                          className="css-14x8ie5"
+                                                <rect
+                                                  fill="#847a8c"
+                                                  height="120"
+                                                  rx="15"
+                                                  ry="15"
+                                                  width="120"
+                                                  x="0"
+                                                  y="0"
+                                                />
+                                                <text
+                                                  fill="#FFFFFF"
+                                                  fontSize="65"
+                                                  style={
+                                                    Object {
+                                                      "dominantBaseline": "central",
+                                                    }
+                                                  }
+                                                  textAnchor="middle"
+                                                  x="50%"
+                                                  y="50%"
+                                                >
+                                                  FB
+                                                </text>
+                                              </svg>
+                                            </Svg>
+                                          </LetterAvatar>
+                                        </span>
+                                      </StyledBaseAvatar>
+                                    </Tooltip>
+                                  </BaseAvatar>
+                                </UserAvatar>
+                              </Avatar>
+                            </div>
+                          </Base>
+                        </AvatarWrapper>
+                        <Box
                           direction="column"
                           flex="1"
                           mr={2}
@@ -697,96 +708,108 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                             }
                           }
                         >
-                          <div
+                          <Base
                             className="css-14x8ie5"
-                            is={null}
+                            direction="column"
+                            flex="1"
+                            mr={2}
                             style={
                               Object {
                                 "minWidth": 0,
                               }
                             }
                           >
-                            <Message>
-                              <div
-                                className="css-q4dmcs-TextOverflow-Message ez7y0rd1"
-                              >
-                                (improve) Add Links to Spike-Protection Email (#2408)
-                              </div>
-                            </Message>
-                            <Meta>
-                              <p
-                                className="css-10csi2f-Meta ez7y0rd2"
-                              >
-                                <span
-                                  key="4"
+                            <div
+                              className="css-14x8ie5"
+                              is={null}
+                              style={
+                                Object {
+                                  "minWidth": 0,
+                                }
+                              }
+                            >
+                              <Message>
+                                <div
+                                  className="css-q4dmcs-TextOverflow-Message ez7y0rd1"
+                                >
+                                  (improve) Add Links to Spike-Protection Email (#2408)
+                                </div>
+                              </Message>
+                              <Meta>
+                                <p
+                                  className="css-10csi2f-Meta ez7y0rd2"
                                 >
-                                  <strong
-                                    key="0"
-                                  >
-                                    Foo Bar
-                                  </strong>
                                   <span
-                                    key="1"
-                                  >
-                                     committed 
-                                  </span>
-                                  <TimeSince
-                                    date="2018-11-30T18:46:31Z"
-                                    key="2"
-                                    suffix="ago"
+                                    key="4"
                                   >
-                                    <time
-                                      dateTime="2018-11-30T18:46:31.000Z"
-                                      title="November 30, 2018 6:46 PM UTC"
+                                    <strong
+                                      key="0"
                                     >
-                                      in a year
-                                    </time>
-                                  </TimeSince>
-                                </span>
-                              </p>
-                            </Meta>
-                          </div>
-                        </Base>
-                      </Box>
-                      <Box
-                        className="hidden-xs"
-                      >
-                        <Base
-                          className="hidden-xs css-roynbj"
+                                      Foo Bar
+                                    </strong>
+                                    <span
+                                      key="1"
+                                    >
+                                       committed 
+                                    </span>
+                                    <TimeSince
+                                      date="2018-11-30T18:46:31Z"
+                                      key="2"
+                                      suffix="ago"
+                                    >
+                                      <time
+                                        dateTime="2018-11-30T18:46:31.000Z"
+                                        title="November 30, 2018 6:46 PM UTC"
+                                      >
+                                        in a year
+                                      </time>
+                                    </TimeSince>
+                                  </span>
+                                </p>
+                              </Meta>
+                            </div>
+                          </Base>
+                        </Box>
+                        <Box
+                          className="hidden-xs"
                         >
-                          <div
+                          <Base
                             className="hidden-xs css-roynbj"
-                            is={null}
                           >
-                            <CommitLink
-                              commitId="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
-                              repository={
-                                Object {
-                                  "externalSlug": "example/repo-name",
-                                  "id": "4",
-                                  "name": "example/repo-name",
-                                  "provider": "github",
-                                  "status": "active",
-                                  "url": "https://github.com/example/repo-name",
-                                }
-                              }
+                            <div
+                              className="hidden-xs css-roynbj"
+                              is={null}
                             >
-                              <span>
-                                f7f395d
-                              </span>
-                            </CommitLink>
-                          </div>
-                        </Base>
-                      </Box>
-                    </div>
-                  </Base>
-                </PanelItem>
-              </CommitRow>
-            </div>
-          </PanelBody>
-        </div>
-      </Component>
-    </Panel>
-  </div>
-</ReleaseCommits>
+                              <CommitLink
+                                commitId="f7f395d14b2fe29a4e253bf1d3094d61e6ad4434"
+                                repository={
+                                  Object {
+                                    "externalSlug": "example/repo-name",
+                                    "id": "4",
+                                    "name": "example/repo-name",
+                                    "provider": "github",
+                                    "status": "active",
+                                    "url": "https://github.com/example/repo-name",
+                                  }
+                                }
+                              >
+                                <span>
+                                  f7f395d
+                                </span>
+                              </CommitLink>
+                            </div>
+                          </Base>
+                        </Box>
+                      </div>
+                    </Base>
+                  </PanelItem>
+                </CommitRow>
+              </div>
+            </PanelBody>
+          </div>
+        </Component>
+      </Panel>
+    </div>
+  </ReleaseCommits>
+</withApi(ReleaseCommits)>
 `;
diff --git a/tests/js/spec/views/releases/list/projectReleases.spec.jsx b/tests/js/spec/views/releases/list/projectReleases.spec.jsx
index b88ff0c1ae..56d5571ff2 100644
--- a/tests/js/spec/views/releases/list/projectReleases.spec.jsx
+++ b/tests/js/spec/views/releases/list/projectReleases.spec.jsx
@@ -24,6 +24,7 @@ describe('ProjectReleases', function() {
 
   beforeEach(function() {
     props = {
+      api: new MockApiClient(),
       setProjectNavSection: function() {},
       params: {orgId: '123', projectId: '456'},
       location: {query: {per_page: 0, query: 'derp'}},
@@ -96,6 +97,7 @@ describe('ProjectReleases', function() {
       const routerContext = TestStubs.routerContext([{organization: org, project}]);
 
       props = {
+        api: new MockApiClient(),
         setProjectNavSection: function() {},
         params: {orgId: '123', projectId: '456'},
         location: {query: {per_page: 0, query: ''}},
@@ -123,6 +125,7 @@ describe('ProjectReleases', function() {
       const routerContext = TestStubs.routerContext([{organization: org, project}]);
 
       props = {
+        api: new MockApiClient(),
         setProjectNavSection: function() {},
         params: {orgId: '123', projectId: '456'},
         location: {query: {per_page: 0, query: ''}},
diff --git a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
index 2d8d61747f..67c630e7fe 100644
--- a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
@@ -1,184 +1,81 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`SharedGroupDetails renders 1`] = `
-<SharedGroupDetails
+<withApi(SharedGroupDetails)
   params={
     Object {
       "shareId": "a",
     }
   }
 >
-  <SideEffect(DocumentTitle)
-    title="ZeroDivisionError"
+  <SharedGroupDetails
+    api={Client {}}
+    params={
+      Object {
+        "shareId": "a",
+      }
+    }
   >
-    <DocumentTitle
+    <SideEffect(DocumentTitle)
       title="ZeroDivisionError"
     >
-      <div
-        className="app"
+      <DocumentTitle
+        title="ZeroDivisionError"
       >
         <div
-          className="pattern-bg"
-        />
-        <div
-          className="container"
+          className="app"
         >
           <div
-            className="box box-modal"
+            className="pattern-bg"
+          />
+          <div
+            className="container"
           >
             <div
-              className="box-header"
-            >
-              <a
-                className="logo"
-                href="/"
-              >
-                <span
-                  className="icon-sentry-logo-full"
-                />
-              </a>
-              <a
-                className="details"
-                href="https://foo.io/organizations/foo/issues/1234/"
-              >
-                Details
-              </a>
-            </div>
-            <div
-              className="box-content"
+              className="box box-modal"
             >
               <div
-                className="content"
+                className="box-header"
               >
-                <SharedGroupHeader
-                  group={
-                    Object {
-                      "activity": Array [],
-                      "annotations": Array [],
-                      "assignedTo": null,
-                      "count": "327482",
-                      "culprit": "fetchData(app/components/group/suggestedOwners)",
-                      "firstRelease": null,
-                      "firstSeen": "2019-04-05T19:44:05.963Z",
-                      "hasSeen": false,
-                      "id": "1",
-                      "isBookmarked": false,
-                      "isPublic": false,
-                      "isSubscribed": false,
-                      "lastRelease": null,
-                      "lastSeen": "2019-04-11T01:08:59Z",
-                      "latestEvent": Object {
-                        "entries": Array [
-                          Object {
-                            "data": Object {
-                              "formatted": "Blocked script",
-                            },
-                            "id": "1",
-                            "type": "message",
-                          },
-                        ],
-                        "eventID": "12345678901234567890123456789012",
-                        "groupID": "1",
-                        "id": "1",
-                        "message": "ApiException",
-                      },
-                      "level": "warning",
-                      "logger": null,
-                      "metadata": Object {
-                        "function": "fetchData",
-                        "type": "RequestError",
-                      },
-                      "numComments": 0,
-                      "participants": Array [],
-                      "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                      "platform": "javascript",
-                      "pluginActions": Array [],
-                      "pluginContexts": Array [],
-                      "pluginIssues": Array [],
-                      "project": Object {
-                        "environments": Array [],
-                        "hasAccess": true,
-                        "id": "2",
-                        "isBookmarked": false,
-                        "isMember": true,
-                        "name": "Project Name",
-                        "organization": Object {
-                          "slug": "test-org",
-                        },
-                        "slug": "project-slug",
-                        "teams": Array [],
-                      },
-                      "seenBy": Array [],
-                      "shareId": null,
-                      "shortId": "JAVASCRIPT-6QS",
-                      "stats": Object {
-                        "24h": Array [
-                          Array [
-                            1517281200,
-                            2,
-                          ],
-                          Array [
-                            1517310000,
-                            1,
-                          ],
-                        ],
-                        "30d": Array [
-                          Array [
-                            1514764800,
-                            1,
-                          ],
-                          Array [
-                            1515024000,
-                            122,
-                          ],
-                        ],
-                      },
-                      "status": "unresolved",
-                      "statusDetails": Object {},
-                      "subscriptionDetails": null,
-                      "tags": Array [],
-                      "title": "ZeroDivisionError",
-                      "type": "error",
-                      "userCount": 35097,
-                      "userReportCount": 0,
-                    }
-                  }
+                <a
+                  className="logo"
+                  href="/"
                 >
-                  <div
-                    className="group-detail"
-                    style={
-                      Object {
-                        "paddingBottom": 20,
-                      }
-                    }
-                  >
-                    <div
-                      className="details"
-                    >
-                      <h3>
-                        ZeroDivisionError
-                      </h3>
-                      <div
-                        className="event-message"
-                      >
-                        <span
-                          className="message"
-                        >
-                          fetchData(app/components/group/suggestedOwners)
-                        </span>
-                      </div>
-                    </div>
-                  </div>
-                </SharedGroupHeader>
+                  <span
+                    className="icon-sentry-logo-full"
+                  />
+                </a>
+                <a
+                  className="details"
+                  href="https://foo.io/organizations/foo/issues/1234/"
+                >
+                  Details
+                </a>
+              </div>
+              <div
+                className="box-content"
+              >
                 <div
-                  className="group-overview event-details-container"
+                  className="content"
                 >
-                  <div
-                    className="primary"
-                  >
-                    <WithOrganizationMockWrapper
-                      event={
-                        Object {
+                  <SharedGroupHeader
+                    group={
+                      Object {
+                        "activity": Array [],
+                        "annotations": Array [],
+                        "assignedTo": null,
+                        "count": "327482",
+                        "culprit": "fetchData(app/components/group/suggestedOwners)",
+                        "firstRelease": null,
+                        "firstSeen": "2019-04-05T19:44:05.963Z",
+                        "hasSeen": false,
+                        "id": "1",
+                        "isBookmarked": false,
+                        "isPublic": false,
+                        "isSubscribed": false,
+                        "lastRelease": null,
+                        "lastSeen": "2019-04-11T01:08:59Z",
+                        "latestEvent": Object {
                           "entries": Array [
                             Object {
                               "data": Object {
@@ -192,104 +89,21 @@ exports[`SharedGroupDetails renders 1`] = `
                           "groupID": "1",
                           "id": "1",
                           "message": "ApiException",
-                        }
-                      }
-                      group={
-                        Object {
-                          "activity": Array [],
-                          "annotations": Array [],
-                          "assignedTo": null,
-                          "count": "327482",
-                          "culprit": "fetchData(app/components/group/suggestedOwners)",
-                          "firstRelease": null,
-                          "firstSeen": "2019-04-05T19:44:05.963Z",
-                          "hasSeen": false,
-                          "id": "1",
-                          "isBookmarked": false,
-                          "isPublic": false,
-                          "isSubscribed": false,
-                          "lastRelease": null,
-                          "lastSeen": "2019-04-11T01:08:59Z",
-                          "latestEvent": Object {
-                            "entries": Array [
-                              Object {
-                                "data": Object {
-                                  "formatted": "Blocked script",
-                                },
-                                "id": "1",
-                                "type": "message",
-                              },
-                            ],
-                            "eventID": "12345678901234567890123456789012",
-                            "groupID": "1",
-                            "id": "1",
-                            "message": "ApiException",
-                          },
-                          "level": "warning",
-                          "logger": null,
-                          "metadata": Object {
-                            "function": "fetchData",
-                            "type": "RequestError",
-                          },
-                          "numComments": 0,
-                          "participants": Array [],
-                          "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                          "platform": "javascript",
-                          "pluginActions": Array [],
-                          "pluginContexts": Array [],
-                          "pluginIssues": Array [],
-                          "project": Object {
-                            "environments": Array [],
-                            "hasAccess": true,
-                            "id": "2",
-                            "isBookmarked": false,
-                            "isMember": true,
-                            "name": "Project Name",
-                            "organization": Object {
-                              "slug": "test-org",
-                            },
-                            "slug": "project-slug",
-                            "teams": Array [],
-                          },
-                          "seenBy": Array [],
-                          "shareId": null,
-                          "shortId": "JAVASCRIPT-6QS",
-                          "stats": Object {
-                            "24h": Array [
-                              Array [
-                                1517281200,
-                                2,
-                              ],
-                              Array [
-                                1517310000,
-                                1,
-                              ],
-                            ],
-                            "30d": Array [
-                              Array [
-                                1514764800,
-                                1,
-                              ],
-                              Array [
-                                1515024000,
-                                122,
-                              ],
-                            ],
-                          },
-                          "status": "unresolved",
-                          "statusDetails": Object {},
-                          "subscriptionDetails": null,
-                          "tags": Array [],
-                          "title": "ZeroDivisionError",
-                          "type": "error",
-                          "userCount": 35097,
-                          "userReportCount": 0,
-                        }
-                      }
-                      isShare={true}
-                      orgId="test-org"
-                      project={
-                        Object {
+                        },
+                        "level": "warning",
+                        "logger": null,
+                        "metadata": Object {
+                          "function": "fetchData",
+                          "type": "RequestError",
+                        },
+                        "numComments": 0,
+                        "participants": Array [],
+                        "permalink": "https://foo.io/organizations/foo/issues/1234/",
+                        "platform": "javascript",
+                        "pluginActions": Array [],
+                        "pluginContexts": Array [],
+                        "pluginIssues": Array [],
+                        "project": Object {
                           "environments": Array [],
                           "hasAccess": true,
                           "id": "2",
@@ -301,10 +115,76 @@ exports[`SharedGroupDetails renders 1`] = `
                           },
                           "slug": "project-slug",
                           "teams": Array [],
+                        },
+                        "seenBy": Array [],
+                        "shareId": null,
+                        "shortId": "JAVASCRIPT-6QS",
+                        "stats": Object {
+                          "24h": Array [
+                            Array [
+                              1517281200,
+                              2,
+                            ],
+                            Array [
+                              1517310000,
+                              1,
+                            ],
+                          ],
+                          "30d": Array [
+                            Array [
+                              1514764800,
+                              1,
+                            ],
+                            Array [
+                              1515024000,
+                              122,
+                            ],
+                          ],
+                        },
+                        "status": "unresolved",
+                        "statusDetails": Object {},
+                        "subscriptionDetails": null,
+                        "tags": Array [],
+                        "title": "ZeroDivisionError",
+                        "type": "error",
+                        "userCount": 35097,
+                        "userReportCount": 0,
+                      }
+                    }
+                  >
+                    <div
+                      className="group-detail"
+                      style={
+                        Object {
+                          "paddingBottom": 20,
                         }
                       }
                     >
-                      <EventEntries
+                      <div
+                        className="details"
+                      >
+                        <h3>
+                          ZeroDivisionError
+                        </h3>
+                        <div
+                          className="event-message"
+                        >
+                          <span
+                            className="message"
+                          >
+                            fetchData(app/components/group/suggestedOwners)
+                          </span>
+                        </div>
+                      </div>
+                    </div>
+                  </SharedGroupHeader>
+                  <div
+                    className="group-overview event-details-container"
+                  >
+                    <div
+                      className="primary"
+                    >
+                      <WithOrganizationMockWrapper
                         event={
                           Object {
                             "entries": Array [
@@ -416,34 +296,6 @@ exports[`SharedGroupDetails renders 1`] = `
                         }
                         isShare={true}
                         orgId="test-org"
-                        organization={
-                          Object {
-                            "access": Array [
-                              "org:read",
-                              "org:write",
-                              "org:admin",
-                              "org:integrations",
-                              "project:read",
-                              "project:write",
-                              "project:admin",
-                              "team:read",
-                              "team:write",
-                              "team:admin",
-                            ],
-                            "features": Array [],
-                            "id": "3",
-                            "name": "Organization Name",
-                            "onboardingTasks": Array [],
-                            "projects": Array [],
-                            "scrapeJavaScript": true,
-                            "slug": "org-slug",
-                            "status": Object {
-                              "id": "active",
-                              "name": "active",
-                            },
-                            "teams": Array [],
-                          }
-                        }
                         project={
                           Object {
                             "environments": Array [],
@@ -460,13 +312,41 @@ exports[`SharedGroupDetails renders 1`] = `
                           }
                         }
                       >
-                        <div
-                          className="entries"
-                        >
-                           
-                          <EventTags
-                            event={
-                              Object {
+                        <EventEntries
+                          event={
+                            Object {
+                              "entries": Array [
+                                Object {
+                                  "data": Object {
+                                    "formatted": "Blocked script",
+                                  },
+                                  "id": "1",
+                                  "type": "message",
+                                },
+                              ],
+                              "eventID": "12345678901234567890123456789012",
+                              "groupID": "1",
+                              "id": "1",
+                              "message": "ApiException",
+                            }
+                          }
+                          group={
+                            Object {
+                              "activity": Array [],
+                              "annotations": Array [],
+                              "assignedTo": null,
+                              "count": "327482",
+                              "culprit": "fetchData(app/components/group/suggestedOwners)",
+                              "firstRelease": null,
+                              "firstSeen": "2019-04-05T19:44:05.963Z",
+                              "hasSeen": false,
+                              "id": "1",
+                              "isBookmarked": false,
+                              "isPublic": false,
+                              "isSubscribed": false,
+                              "lastRelease": null,
+                              "lastSeen": "2019-04-11T01:08:59Z",
+                              "latestEvent": Object {
                                 "entries": Array [
                                   Object {
                                     "data": Object {
@@ -480,171 +360,121 @@ exports[`SharedGroupDetails renders 1`] = `
                                 "groupID": "1",
                                 "id": "1",
                                 "message": "ApiException",
-                              }
-                            }
-                            group={
-                              Object {
-                                "activity": Array [],
-                                "annotations": Array [],
-                                "assignedTo": null,
-                                "count": "327482",
-                                "culprit": "fetchData(app/components/group/suggestedOwners)",
-                                "firstRelease": null,
-                                "firstSeen": "2019-04-05T19:44:05.963Z",
-                                "hasSeen": false,
-                                "id": "1",
+                              },
+                              "level": "warning",
+                              "logger": null,
+                              "metadata": Object {
+                                "function": "fetchData",
+                                "type": "RequestError",
+                              },
+                              "numComments": 0,
+                              "participants": Array [],
+                              "permalink": "https://foo.io/organizations/foo/issues/1234/",
+                              "platform": "javascript",
+                              "pluginActions": Array [],
+                              "pluginContexts": Array [],
+                              "pluginIssues": Array [],
+                              "project": Object {
+                                "environments": Array [],
+                                "hasAccess": true,
+                                "id": "2",
                                 "isBookmarked": false,
-                                "isPublic": false,
-                                "isSubscribed": false,
-                                "lastRelease": null,
-                                "lastSeen": "2019-04-11T01:08:59Z",
-                                "latestEvent": Object {
-                                  "entries": Array [
-                                    Object {
-                                      "data": Object {
-                                        "formatted": "Blocked script",
-                                      },
-                                      "id": "1",
-                                      "type": "message",
-                                    },
-                                  ],
-                                  "eventID": "12345678901234567890123456789012",
-                                  "groupID": "1",
-                                  "id": "1",
-                                  "message": "ApiException",
-                                },
-                                "level": "warning",
-                                "logger": null,
-                                "metadata": Object {
-                                  "function": "fetchData",
-                                  "type": "RequestError",
-                                },
-                                "numComments": 0,
-                                "participants": Array [],
-                                "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                                "platform": "javascript",
-                                "pluginActions": Array [],
-                                "pluginContexts": Array [],
-                                "pluginIssues": Array [],
-                                "project": Object {
-                                  "environments": Array [],
-                                  "hasAccess": true,
-                                  "id": "2",
-                                  "isBookmarked": false,
-                                  "isMember": true,
-                                  "name": "Project Name",
-                                  "organization": Object {
-                                    "slug": "test-org",
-                                  },
-                                  "slug": "project-slug",
-                                  "teams": Array [],
+                                "isMember": true,
+                                "name": "Project Name",
+                                "organization": Object {
+                                  "slug": "test-org",
                                 },
-                                "seenBy": Array [],
-                                "shareId": null,
-                                "shortId": "JAVASCRIPT-6QS",
-                                "stats": Object {
-                                  "24h": Array [
-                                    Array [
-                                      1517281200,
-                                      2,
-                                    ],
-                                    Array [
-                                      1517310000,
-                                      1,
-                                    ],
+                                "slug": "project-slug",
+                                "teams": Array [],
+                              },
+                              "seenBy": Array [],
+                              "shareId": null,
+                              "shortId": "JAVASCRIPT-6QS",
+                              "stats": Object {
+                                "24h": Array [
+                                  Array [
+                                    1517281200,
+                                    2,
                                   ],
-                                  "30d": Array [
-                                    Array [
-                                      1514764800,
-                                      1,
-                                    ],
-                                    Array [
-                                      1515024000,
-                                      122,
-                                    ],
+                                  Array [
+                                    1517310000,
+                                    1,
                                   ],
-                                },
-                                "status": "unresolved",
-                                "statusDetails": Object {},
-                                "subscriptionDetails": null,
-                                "tags": Array [],
-                                "title": "ZeroDivisionError",
-                                "type": "error",
-                                "userCount": 35097,
-                                "userReportCount": 0,
-                              }
-                            }
-                            orgId="test-org"
-                            organization={
-                              Object {
-                                "access": Array [
-                                  "org:read",
-                                  "org:write",
-                                  "org:admin",
-                                  "org:integrations",
-                                  "project:read",
-                                  "project:write",
-                                  "project:admin",
-                                  "team:read",
-                                  "team:write",
-                                  "team:admin",
                                 ],
-                                "features": Array [],
-                                "id": "3",
-                                "name": "Organization Name",
-                                "onboardingTasks": Array [],
-                                "projects": Array [],
-                                "scrapeJavaScript": true,
-                                "slug": "org-slug",
-                                "status": Object {
-                                  "id": "active",
-                                  "name": "active",
-                                },
-                                "teams": Array [],
-                              }
+                                "30d": Array [
+                                  Array [
+                                    1514764800,
+                                    1,
+                                  ],
+                                  Array [
+                                    1515024000,
+                                    122,
+                                  ],
+                                ],
+                              },
+                              "status": "unresolved",
+                              "statusDetails": Object {},
+                              "subscriptionDetails": null,
+                              "tags": Array [],
+                              "title": "ZeroDivisionError",
+                              "type": "error",
+                              "userCount": 35097,
+                              "userReportCount": 0,
                             }
-                            projectId="project-slug"
-                          />
-                          <MessageInterface
-                            data={
-                              Object {
-                                "formatted": "Blocked script",
-                              }
+                          }
+                          isShare={true}
+                          orgId="test-org"
+                          organization={
+                            Object {
+                              "access": Array [
+                                "org:read",
+                                "org:write",
+                                "org:admin",
+                                "org:integrations",
+                                "project:read",
+                                "project:write",
+                                "project:admin",
+                                "team:read",
+                                "team:write",
+                                "team:admin",
+                              ],
+                              "features": Array [],
+                              "id": "3",
+                              "name": "Organization Name",
+                              "onboardingTasks": Array [],
+                              "projects": Array [],
+                              "scrapeJavaScript": true,
+                              "slug": "org-slug",
+                              "status": Object {
+                                "id": "active",
+                                "name": "active",
+                              },
+                              "teams": Array [],
                             }
-                            event={
-                              Object {
-                                "entries": Array [
-                                  Object {
-                                    "data": Object {
-                                      "formatted": "Blocked script",
-                                    },
-                                    "id": "1",
-                                    "type": "message",
-                                  },
-                                ],
-                                "eventID": "12345678901234567890123456789012",
-                                "groupID": "1",
-                                "id": "1",
-                                "message": "ApiException",
-                              }
+                          }
+                          project={
+                            Object {
+                              "environments": Array [],
+                              "hasAccess": true,
+                              "id": "2",
+                              "isBookmarked": false,
+                              "isMember": true,
+                              "name": "Project Name",
+                              "organization": Object {
+                                "slug": "test-org",
+                              },
+                              "slug": "project-slug",
+                              "teams": Array [],
                             }
-                            group={
-                              Object {
-                                "activity": Array [],
-                                "annotations": Array [],
-                                "assignedTo": null,
-                                "count": "327482",
-                                "culprit": "fetchData(app/components/group/suggestedOwners)",
-                                "firstRelease": null,
-                                "firstSeen": "2019-04-05T19:44:05.963Z",
-                                "hasSeen": false,
-                                "id": "1",
-                                "isBookmarked": false,
-                                "isPublic": false,
-                                "isSubscribed": false,
-                                "lastRelease": null,
-                                "lastSeen": "2019-04-11T01:08:59Z",
-                                "latestEvent": Object {
+                          }
+                        >
+                          <div
+                            className="entries"
+                          >
+                             
+                            <EventTags
+                              event={
+                                Object {
                                   "entries": Array [
                                     Object {
                                       "data": Object {
@@ -658,73 +488,137 @@ exports[`SharedGroupDetails renders 1`] = `
                                   "groupID": "1",
                                   "id": "1",
                                   "message": "ApiException",
-                                },
-                                "level": "warning",
-                                "logger": null,
-                                "metadata": Object {
-                                  "function": "fetchData",
-                                  "type": "RequestError",
-                                },
-                                "numComments": 0,
-                                "participants": Array [],
-                                "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                                "platform": "javascript",
-                                "pluginActions": Array [],
-                                "pluginContexts": Array [],
-                                "pluginIssues": Array [],
-                                "project": Object {
-                                  "environments": Array [],
-                                  "hasAccess": true,
-                                  "id": "2",
+                                }
+                              }
+                              group={
+                                Object {
+                                  "activity": Array [],
+                                  "annotations": Array [],
+                                  "assignedTo": null,
+                                  "count": "327482",
+                                  "culprit": "fetchData(app/components/group/suggestedOwners)",
+                                  "firstRelease": null,
+                                  "firstSeen": "2019-04-05T19:44:05.963Z",
+                                  "hasSeen": false,
+                                  "id": "1",
                                   "isBookmarked": false,
-                                  "isMember": true,
-                                  "name": "Project Name",
-                                  "organization": Object {
-                                    "slug": "test-org",
-                                  },
-                                  "slug": "project-slug",
-                                  "teams": Array [],
-                                },
-                                "seenBy": Array [],
-                                "shareId": null,
-                                "shortId": "JAVASCRIPT-6QS",
-                                "stats": Object {
-                                  "24h": Array [
-                                    Array [
-                                      1517281200,
-                                      2,
-                                    ],
-                                    Array [
-                                      1517310000,
-                                      1,
+                                  "isPublic": false,
+                                  "isSubscribed": false,
+                                  "lastRelease": null,
+                                  "lastSeen": "2019-04-11T01:08:59Z",
+                                  "latestEvent": Object {
+                                    "entries": Array [
+                                      Object {
+                                        "data": Object {
+                                          "formatted": "Blocked script",
+                                        },
+                                        "id": "1",
+                                        "type": "message",
+                                      },
                                     ],
-                                  ],
-                                  "30d": Array [
-                                    Array [
-                                      1514764800,
-                                      1,
+                                    "eventID": "12345678901234567890123456789012",
+                                    "groupID": "1",
+                                    "id": "1",
+                                    "message": "ApiException",
+                                  },
+                                  "level": "warning",
+                                  "logger": null,
+                                  "metadata": Object {
+                                    "function": "fetchData",
+                                    "type": "RequestError",
+                                  },
+                                  "numComments": 0,
+                                  "participants": Array [],
+                                  "permalink": "https://foo.io/organizations/foo/issues/1234/",
+                                  "platform": "javascript",
+                                  "pluginActions": Array [],
+                                  "pluginContexts": Array [],
+                                  "pluginIssues": Array [],
+                                  "project": Object {
+                                    "environments": Array [],
+                                    "hasAccess": true,
+                                    "id": "2",
+                                    "isBookmarked": false,
+                                    "isMember": true,
+                                    "name": "Project Name",
+                                    "organization": Object {
+                                      "slug": "test-org",
+                                    },
+                                    "slug": "project-slug",
+                                    "teams": Array [],
+                                  },
+                                  "seenBy": Array [],
+                                  "shareId": null,
+                                  "shortId": "JAVASCRIPT-6QS",
+                                  "stats": Object {
+                                    "24h": Array [
+                                      Array [
+                                        1517281200,
+                                        2,
+                                      ],
+                                      Array [
+                                        1517310000,
+                                        1,
+                                      ],
                                     ],
-                                    Array [
-                                      1515024000,
-                                      122,
+                                    "30d": Array [
+                                      Array [
+                                        1514764800,
+                                        1,
+                                      ],
+                                      Array [
+                                        1515024000,
+                                        122,
+                                      ],
                                     ],
+                                  },
+                                  "status": "unresolved",
+                                  "statusDetails": Object {},
+                                  "subscriptionDetails": null,
+                                  "tags": Array [],
+                                  "title": "ZeroDivisionError",
+                                  "type": "error",
+                                  "userCount": 35097,
+                                  "userReportCount": 0,
+                                }
+                              }
+                              orgId="test-org"
+                              organization={
+                                Object {
+                                  "access": Array [
+                                    "org:read",
+                                    "org:write",
+                                    "org:admin",
+                                    "org:integrations",
+                                    "project:read",
+                                    "project:write",
+                                    "project:admin",
+                                    "team:read",
+                                    "team:write",
+                                    "team:admin",
                                   ],
-                                },
-                                "status": "unresolved",
-                                "statusDetails": Object {},
-                                "subscriptionDetails": null,
-                                "tags": Array [],
-                                "title": "ZeroDivisionError",
-                                "type": "error",
-                                "userCount": 35097,
-                                "userReportCount": 0,
+                                  "features": Array [],
+                                  "id": "3",
+                                  "name": "Organization Name",
+                                  "onboardingTasks": Array [],
+                                  "projects": Array [],
+                                  "scrapeJavaScript": true,
+                                  "slug": "org-slug",
+                                  "status": Object {
+                                    "id": "active",
+                                    "name": "active",
+                                  },
+                                  "teams": Array [],
+                                }
+                              }
+                              projectId="project-slug"
+                            />
+                            <MessageInterface
+                              data={
+                                Object {
+                                  "formatted": "Blocked script",
+                                }
                               }
-                            }
-                            isShare={true}
-                            key="entry-0"
-                            type="message"
-                          >
-                            <GroupEventDataSection
                               event={
                                 Object {
                                   "entries": Array [
@@ -834,46 +728,151 @@ exports[`SharedGroupDetails renders 1`] = `
                                   "userReportCount": 0,
                                 }
                               }
-                              raw={false}
-                              title="Message"
+                              isShare={true}
+                              key="entry-0"
                               type="message"
-                              wrapTitle={true}
                             >
-                              <div
-                                className=" box"
+                              <GroupEventDataSection
+                                event={
+                                  Object {
+                                    "entries": Array [
+                                      Object {
+                                        "data": Object {
+                                          "formatted": "Blocked script",
+                                        },
+                                        "id": "1",
+                                        "type": "message",
+                                      },
+                                    ],
+                                    "eventID": "12345678901234567890123456789012",
+                                    "groupID": "1",
+                                    "id": "1",
+                                    "message": "ApiException",
+                                  }
+                                }
+                                group={
+                                  Object {
+                                    "activity": Array [],
+                                    "annotations": Array [],
+                                    "assignedTo": null,
+                                    "count": "327482",
+                                    "culprit": "fetchData(app/components/group/suggestedOwners)",
+                                    "firstRelease": null,
+                                    "firstSeen": "2019-04-05T19:44:05.963Z",
+                                    "hasSeen": false,
+                                    "id": "1",
+                                    "isBookmarked": false,
+                                    "isPublic": false,
+                                    "isSubscribed": false,
+                                    "lastRelease": null,
+                                    "lastSeen": "2019-04-11T01:08:59Z",
+                                    "latestEvent": Object {
+                                      "entries": Array [
+                                        Object {
+                                          "data": Object {
+                                            "formatted": "Blocked script",
+                                          },
+                                          "id": "1",
+                                          "type": "message",
+                                        },
+                                      ],
+                                      "eventID": "12345678901234567890123456789012",
+                                      "groupID": "1",
+                                      "id": "1",
+                                      "message": "ApiException",
+                                    },
+                                    "level": "warning",
+                                    "logger": null,
+                                    "metadata": Object {
+                                      "function": "fetchData",
+                                      "type": "RequestError",
+                                    },
+                                    "numComments": 0,
+                                    "participants": Array [],
+                                    "permalink": "https://foo.io/organizations/foo/issues/1234/",
+                                    "platform": "javascript",
+                                    "pluginActions": Array [],
+                                    "pluginContexts": Array [],
+                                    "pluginIssues": Array [],
+                                    "project": Object {
+                                      "environments": Array [],
+                                      "hasAccess": true,
+                                      "id": "2",
+                                      "isBookmarked": false,
+                                      "isMember": true,
+                                      "name": "Project Name",
+                                      "organization": Object {
+                                        "slug": "test-org",
+                                      },
+                                      "slug": "project-slug",
+                                      "teams": Array [],
+                                    },
+                                    "seenBy": Array [],
+                                    "shareId": null,
+                                    "shortId": "JAVASCRIPT-6QS",
+                                    "stats": Object {
+                                      "24h": Array [
+                                        Array [
+                                          1517281200,
+                                          2,
+                                        ],
+                                        Array [
+                                          1517310000,
+                                          1,
+                                        ],
+                                      ],
+                                      "30d": Array [
+                                        Array [
+                                          1514764800,
+                                          1,
+                                        ],
+                                        Array [
+                                          1515024000,
+                                          122,
+                                        ],
+                                      ],
+                                    },
+                                    "status": "unresolved",
+                                    "statusDetails": Object {},
+                                    "subscriptionDetails": null,
+                                    "tags": Array [],
+                                    "title": "ZeroDivisionError",
+                                    "type": "error",
+                                    "userCount": 35097,
+                                    "userReportCount": 0,
+                                  }
+                                }
+                                raw={false}
+                                title="Message"
+                                type="message"
+                                wrapTitle={true}
                               >
                                 <div
-                                  className="box-header"
-                                  id="message"
+                                  className=" box"
                                 >
-                                  <a
-                                    className="permalink"
-                                    href="#message"
+                                  <div
+                                    className="box-header"
+                                    id="message"
                                   >
-                                    <em
-                                      className="icon-anchor"
-                                    />
-                                  </a>
-                                  <h3>
-                                    Message
-                                  </h3>
-                                </div>
-                                <div
-                                  className="box-content with-padding"
-                                >
-                                  <pre
-                                    className="plain"
+                                    <a
+                                      className="permalink"
+                                      href="#message"
+                                    >
+                                      <em
+                                        className="icon-anchor"
+                                      />
+                                    </a>
+                                    <h3>
+                                      Message
+                                    </h3>
+                                  </div>
+                                  <div
+                                    className="box-content with-padding"
                                   >
-                                    <Annotated
-                                      object={
-                                        Object {
-                                          "formatted": "Blocked script",
-                                        }
-                                      }
-                                      prop="formatted"
-                                      required={false}
+                                    <pre
+                                      className="plain"
                                     >
-                                      <MetaData
+                                      <Annotated
                                         object={
                                           Object {
                                             "formatted": "Blocked script",
@@ -882,67 +881,77 @@ exports[`SharedGroupDetails renders 1`] = `
                                         prop="formatted"
                                         required={false}
                                       >
-                                        <ErrorBoundary
-                                          mini={true}
+                                        <MetaData
+                                          object={
+                                            Object {
+                                              "formatted": "Blocked script",
+                                            }
+                                          }
+                                          prop="formatted"
+                                          required={false}
                                         >
-                                          Blocked script
-                                        </ErrorBoundary>
-                                      </MetaData>
-                                    </Annotated>
-                                  </pre>
+                                          <ErrorBoundary
+                                            mini={true}
+                                          >
+                                            Blocked script
+                                          </ErrorBoundary>
+                                        </MetaData>
+                                      </Annotated>
+                                    </pre>
+                                  </div>
                                 </div>
-                              </div>
-                            </GroupEventDataSection>
-                          </MessageInterface>
-                           
-                        </div>
-                      </EventEntries>
-                    </WithOrganizationMockWrapper>
+                              </GroupEventDataSection>
+                            </MessageInterface>
+                             
+                          </div>
+                        </EventEntries>
+                      </WithOrganizationMockWrapper>
+                    </div>
                   </div>
-                </div>
-                <Footer>
-                  <footer>
-                    <div
-                      className="container"
-                    >
+                  <Footer>
+                    <footer>
                       <div
-                        className="pull-right"
+                        className="container"
                       >
-                        <a
-                          className="hidden-xs"
-                          href="/api/"
-                        >
-                          API
-                        </a>
-                        <a
-                          href="/docs/"
+                        <div
+                          className="pull-right"
                         >
-                          Docs
-                        </a>
+                          <a
+                            className="hidden-xs"
+                            href="/api/"
+                          >
+                            API
+                          </a>
+                          <a
+                            href="/docs/"
+                          >
+                            Docs
+                          </a>
+                          <a
+                            className="hidden-xs"
+                            href="https://github.com/getsentry/sentry"
+                            rel="noreferrer"
+                          >
+                            Contribute
+                          </a>
+                        </div>
                         <a
-                          className="hidden-xs"
-                          href="https://github.com/getsentry/sentry"
-                          rel="noreferrer"
-                        >
-                          Contribute
-                        </a>
+                          className="icon-sentry-logo"
+                          href="/"
+                        />
+                        <Hook
+                          name="footer"
+                        />
                       </div>
-                      <a
-                        className="icon-sentry-logo"
-                        href="/"
-                      />
-                      <Hook
-                        name="footer"
-                      />
-                    </div>
-                  </footer>
-                </Footer>
+                    </footer>
+                  </Footer>
+                </div>
               </div>
             </div>
           </div>
         </div>
-      </div>
-    </DocumentTitle>
-  </SideEffect(DocumentTitle)>
-</SharedGroupDetails>
+      </DocumentTitle>
+    </SideEffect(DocumentTitle)>
+  </SharedGroupDetails>
+</withApi(SharedGroupDetails)>
 `;
diff --git a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
index 2e02a64f27..0f510bced6 100644
--- a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
+++ b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
@@ -136,7 +136,7 @@ exports[`Stream render() displays the group list 1`] = `
         }
       />
       <Panel>
-        <StreamActions
+        <withApi(StreamActions)
           allResultsVisible={false}
           groupIds={
             Array [
@@ -144,7 +144,6 @@ exports[`Stream render() displays the group list 1`] = `
             ]
           }
           hasReleases={false}
-          latestRelease={null}
           onRealtimeChange={[Function]}
           onSelectStatsPeriod={[Function]}
           orgId="org-slug"
@@ -453,7 +452,7 @@ exports[`Stream toggles environment select all environments 1`] = `
         }
       />
       <Panel>
-        <StreamActions
+        <withApi(StreamActions)
           allResultsVisible={false}
           groupIds={
             Array [
@@ -461,7 +460,6 @@ exports[`Stream toggles environment select all environments 1`] = `
             ]
           }
           hasReleases={false}
-          latestRelease={null}
           onRealtimeChange={[Function]}
           onSelectStatsPeriod={[Function]}
           orgId="org-slug"
diff --git a/tests/js/spec/views/stream/actions.spec.jsx b/tests/js/spec/views/stream/actions.spec.jsx
index e2b9673c90..1879943ade 100644
--- a/tests/js/spec/views/stream/actions.spec.jsx
+++ b/tests/js/spec/views/stream/actions.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount, shallow} from 'enzyme';
 
-import StreamActions from 'app/views/stream/actions';
+import {StreamActions} from 'app/views/stream/actions';
 import SelectedGroupStore from 'app/stores/selectedGroupStore';
 
 describe('StreamActions', function() {
@@ -19,6 +19,7 @@ describe('StreamActions', function() {
         SelectedGroupStore.add([1, 2, 3]);
         wrapper = mount(
           <StreamActions
+            api={new MockApiClient()}
             allResultsVisible={false}
             query=""
             queryCount={1500}
@@ -80,6 +81,7 @@ describe('StreamActions', function() {
         SelectedGroupStore.add([1, 2, 3]);
         wrapper = mount(
           <StreamActions
+            api={new MockApiClient()}
             allResultsVisible={false}
             query=""
             queryCount={600}
@@ -145,6 +147,7 @@ describe('StreamActions', function() {
       SelectedGroupStore.deselectAll.mockReset();
       actions = shallow(
         <StreamActions
+          api={new MockApiClient()}
           query=""
           orgId="1337"
           projectId="1"
@@ -204,6 +207,7 @@ describe('StreamActions', function() {
     beforeEach(function() {
       wrapper = mount(
         <StreamActions
+          api={new MockApiClient()}
           query=""
           orgId="1337"
           groupIds={[1, 2, 3]}
diff --git a/tests/js/spec/views/stream/stream.spec.jsx b/tests/js/spec/views/stream/stream.spec.jsx
index 5c4dbf927f..937962a8c1 100644
--- a/tests/js/spec/views/stream/stream.spec.jsx
+++ b/tests/js/spec/views/stream/stream.spec.jsx
@@ -7,7 +7,7 @@ import {Client} from 'app/api';
 import CursorPoller from 'app/utils/cursorPoller';
 import LoadingError from 'app/components/loadingError';
 import ErrorRobot from 'app/components/errorRobot';
-import Stream from 'app/views/stream/stream';
+import {Stream} from 'app/views/stream/stream';
 import EnvironmentStore from 'app/stores/environmentStore';
 import {setActiveEnvironment} from 'app/actionCreators/environments';
 import TagStore from 'app/stores/tagStore';
@@ -71,6 +71,7 @@ describe('Stream', function() {
     TagStore.init();
 
     props = {
+      api: new MockApiClient(),
       setProjectNavSection: function() {},
       location: {query: {query: 'is:unresolved'}, search: 'query=is:unresolved'},
       params: {orgId: organization.slug, projectId: project.slug},
@@ -224,6 +225,7 @@ describe('Stream', function() {
   describe('fetchSavedSearches()', function() {
     it('handles valid search id', async function() {
       const streamProps = {
+        api: new MockApiClient(),
         setProjectNavSection: function() {},
         params: {orgId: 'org-slug', projectId: 'project-slug', searchId: '789'},
         location: {query: {}, search: ''},
@@ -240,6 +242,7 @@ describe('Stream', function() {
 
     it('handles invalid search id', async function() {
       const streamProps = {
+        api: new MockApiClient(),
         setProjectNavSection: function() {},
         params: {orgId: 'org-slug', projectId: 'project-slug', searchId: 'invalid'},
         location: {query: {}, search: ''},
diff --git a/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap b/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
index f71a3ed137..9c9651fb68 100644
--- a/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
+++ b/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
@@ -13,7 +13,7 @@ exports[`projectUserFeedback renders 1`] = `
     pageLinks="<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:0:1>; rel=\\"previous\\"; results=\\"false\\"; cursor=\\"0:0:1\\", <https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:100:0>; rel=\\"next\\"; results=\\"true\\"; cursor=\\"0:100:0\\""
     status="unresolved"
   >
-    <WithOrganizationMockWrapper
+    <withApi(WithOrganizationMockWrapper)
       data={
         Object {
           "activity": Array [],
@@ -173,7 +173,7 @@ exports[`projectUserFeedback renders 1`] = `
           }
         }
       />
-    </WithOrganizationMockWrapper>
+    </withApi(WithOrganizationMockWrapper)>
   </UserFeedbackContainer>
 </SideEffect(DocumentTitle)>
 `;
diff --git a/tests/js/spec/views/userFeedback/projectUserFeedback.spec.jsx b/tests/js/spec/views/userFeedback/projectUserFeedback.spec.jsx
index a1f49c98fc..3a3c3590dc 100644
--- a/tests/js/spec/views/userFeedback/projectUserFeedback.spec.jsx
+++ b/tests/js/spec/views/userFeedback/projectUserFeedback.spec.jsx
@@ -22,6 +22,7 @@ describe('projectUserFeedback', function() {
 
   it('renders', function() {
     const params = {
+      api: new MockApiClient(),
       location: {query: {}},
       setProjectNavSection: jest.fn(),
       params: {
