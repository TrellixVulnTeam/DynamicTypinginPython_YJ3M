commit c345085250bdf684e654b21c6b2c3b13e9ad1532
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Apr 30 02:36:32 2014 -0300

    Keep track of the source map and sourcemap key separately

diff --git a/src/sentry/tasks/fetch_source.py b/src/sentry/tasks/fetch_source.py
index eb99cdc06e..8320e6cb32 100644
--- a/src/sentry/tasks/fetch_source.py
+++ b/src/sentry/tasks/fetch_source.py
@@ -270,14 +270,14 @@ def expand_javascript_source(data, **kwargs):
         # If we didn't have a colno, a sourcemap wont do us any good
         if filename not in sourcemap_capable:
             logger.debug('Not capable of sourcemap: %r', filename)
-            source_code[filename] = (result.body.splitlines(), None)
+            source_code[filename] = (result.body.splitlines(), None, None)
             continue
 
         sourcemap = discover_sourcemap(result)
 
         # TODO: we're currently running splitlines twice
         if not sourcemap:
-            source_code[filename] = (result.body.splitlines(), None)
+            source_code[filename] = (result.body.splitlines(), None, None)
             for f in frames:
                 if f.abs_path == filename:
                     f.module = generate_module(filename)
@@ -286,7 +286,7 @@ def expand_javascript_source(data, **kwargs):
             logger.debug('Found sourcemap %r for minified script %r', sourcemap[:256], result.url)
 
         sourcemap_key = hashlib.md5(sourcemap).hexdigest()
-        source_code[filename] = (result.body.splitlines(), sourcemap_key)
+        source_code[filename] = (result.body.splitlines(), sourcemap, sourcemap_key)
 
         if sourcemap in sourmap_idxs:
             continue
@@ -307,7 +307,7 @@ def expand_javascript_source(data, **kwargs):
             next_filename = urljoin(sourcemap, source)
             if next_filename not in done_file_list:
                 if index.content:
-                    source_code[next_filename] = (index.content[source], None)
+                    source_code[next_filename] = (index.content[source], None, None)
                     done_file_list.add(next_filename)
                 else:
                     pending_file_list.add(next_filename)
@@ -317,20 +317,20 @@ def expand_javascript_source(data, **kwargs):
     has_changes = False
     for frame in frames:
         try:
-            source, sourcemap = source_code[frame.abs_path]
+            source, sourcemap, sourcemap_key = source_code[frame.abs_path]
         except KeyError:
             # we must've failed pulling down the source
             continue
 
         # may have had a failure pulling down the sourcemap previously
-        if sourcemap in sourmap_idxs and frame.colno is not None:
-            index, relative_to = sourmap_idxs[sourcemap]
+        if sourcemap_key in sourmap_idxs and frame.colno is not None:
+            index, relative_to = sourmap_idxs[sourcemap_key]
             last_state = state
             state = find_source(index, frame.lineno, frame.colno)
             abs_path = urljoin(relative_to, state.src)
             logger.debug('Mapping compressed source %r to mapping in %r', frame.abs_path, abs_path)
             try:
-                source, _ = source_code[abs_path]
+                source, _, _ = source_code[abs_path]
             except KeyError:
                 frame.data = {
                     'sourcemap': sourcemap,
@@ -359,7 +359,7 @@ def expand_javascript_source(data, **kwargs):
                 frame.abs_path = abs_path
                 frame.filename = state.src
                 frame.module = generate_module(state.src)
-        elif sourcemap in sourmap_idxs:
+        elif sourcemap_key in sourmap_idxs:
             frame.data = {
                 'sourcemap': sourcemap,
             }
