commit 609654721cf5c7729716c42d09e958d55d777d37
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Mon Nov 5 17:27:02 2018 +0100

    fix: Dont push_scope inside Celery tasks (#10299)
    
    Since the exception gets caught outside of the pushed scope, the scope
    gets popped together with the extra data we set.
    
    We might want to change this behavior but for now just don't push
    another scope so all the extra data stays where it is

diff --git a/src/sentry/tasks/base.py b/src/sentry/tasks/base.py
index 9eb25b6961..99ea4a522b 100644
--- a/src/sentry/tasks/base.py
+++ b/src/sentry/tasks/base.py
@@ -15,7 +15,7 @@ from functools import wraps
 
 from sentry.celery import app
 from sentry.utils import metrics
-from sentry.utils.sdk import push_scope, capture_exception
+from sentry.utils.sdk import configure_scope, capture_exception
 
 
 def get_rss_usage():
@@ -45,13 +45,14 @@ def instrumented_task(name, stat_suffix=None, **kwargs):
             else:
                 instance = name
 
-            with push_scope() as scope:
+            with configure_scope() as scope:
                 scope.set_tag('task_name', name)
                 scope.set_tag('transaction_id', transaction_id)
 
-                with metrics.timer(key, instance=instance), \
-                        track_memory_usage('jobs.memory_change', instance=instance):
-                    result = func(*args, **kwargs)
+            with metrics.timer(key, instance=instance), \
+                    track_memory_usage('jobs.memory_change', instance=instance):
+                result = func(*args, **kwargs)
+
             return result
 
         return app.task(name=name, **kwargs)(_wrapped)
