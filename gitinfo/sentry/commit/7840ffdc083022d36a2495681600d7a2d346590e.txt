commit 7840ffdc083022d36a2495681600d7a2d346590e
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 3 07:57:55 2015 -0800

    Use atomic updates for deletions

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index c98297d8ef..4e4146d65b 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -115,8 +115,11 @@ class ProjectDetailsEndpoint(Endpoint):
         if not (request.user.is_superuser or project.team.owner_id == request.user.id):
             return Response('{"error": "form"}', status=status.HTTP_403_FORBIDDEN)
 
-        if project.status == ProjectStatus.VISIBLE:
-            project.update(status=ProjectStatus.PENDING_DELETION)
+        updated = Project.objects.filter(
+            id=project.id,
+            status=ProjectStatus.VISIBLE,
+        ).update(status=ProjectStatus.PENDING_DELETION)
+        if updated:
             delete_project.delay(object_id=project.id)
 
             AuditLogEntry.objects.create(
diff --git a/src/sentry/api/endpoints/project_tagkey_details.py b/src/sentry/api/endpoints/project_tagkey_details.py
index 3913de4d16..c7464a09fa 100644
--- a/src/sentry/api/endpoints/project_tagkey_details.py
+++ b/src/sentry/api/endpoints/project_tagkey_details.py
@@ -29,8 +29,11 @@ class ProjectTagKeyDetailsEndpoint(Endpoint):
 
         assert_perm(tagkey, request.user, request.auth)
 
-        if tagkey.status == TagKeyStatus.VISIBLE:
-            tagkey.update(status=TagKeyStatus.PENDING_DELETION)
+        updated = TagKey.objects.filter(
+            id=tagkey.id,
+            status=TagKeyStatus.VISIBLE,
+        ).update(status=TagKeyStatus.PENDING_DELETION)
+        if updated:
             delete_tag_key.delay(object_id=tagkey.id)
 
             AuditLogEntry.objects.create(
diff --git a/src/sentry/api/endpoints/team_details.py b/src/sentry/api/endpoints/team_details.py
index 1f870707b2..defc56f800 100644
--- a/src/sentry/api/endpoints/team_details.py
+++ b/src/sentry/api/endpoints/team_details.py
@@ -84,8 +84,11 @@ class TeamDetailsEndpoint(Endpoint):
 
         assert_perm(team, request.user, request.auth, access=OrganizationMemberType.ADMIN)
 
-        if team.status == TeamStatus.VISIBLE:
-            team.update(status=TeamStatus.PENDING_DELETION)
+        updated = Team.objects.filter(
+            id=team.id,
+            status=TeamStatus.VISIBLE,
+        ).update(status=TeamStatus.PENDING_DELETION)
+        if updated:
             delete_team.delay(object_id=team.id, countdown=60 * 5)
 
             AuditLogEntry.objects.create(
diff --git a/src/sentry/web/frontend/remove_project.py b/src/sentry/web/frontend/remove_project.py
index e303cf45ea..0a8fda9d3e 100644
--- a/src/sentry/web/frontend/remove_project.py
+++ b/src/sentry/web/frontend/remove_project.py
@@ -7,7 +7,8 @@ from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.models import (
-    AuditLogEntry, AuditLogEntryEvent, ProjectStatus, OrganizationMemberType
+    AuditLogEntry, AuditLogEntryEvent, Project, ProjectStatus,
+    OrganizationMemberType
 )
 from sentry.permissions import can_remove_project
 from sentry.tasks.deletion import delete_project
@@ -46,8 +47,11 @@ class RemoveProjectView(ProjectView):
         form = self.get_form(request)
 
         if form.is_valid():
-            if project.status == ProjectStatus.VISIBLE:
-                project.update(status=ProjectStatus.PENDING_DELETION)
+            updated = Project.objects.filter(
+                id=project.id,
+                status=ProjectStatus.VISIBLE,
+            ).update(status=ProjectStatus.PENDING_DELETION)
+            if updated:
                 delete_project.delay(object_id=project.id)
 
                 AuditLogEntry.objects.create(
diff --git a/src/sentry/web/frontend/remove_team.py b/src/sentry/web/frontend/remove_team.py
index 31ed275422..da2261a13a 100644
--- a/src/sentry/web/frontend/remove_team.py
+++ b/src/sentry/web/frontend/remove_team.py
@@ -7,7 +7,7 @@ from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.models import (
-    AuditLogEntry, AuditLogEntryEvent, OrganizationMemberType, TeamStatus
+    AuditLogEntry, AuditLogEntryEvent, OrganizationMemberType, Team, TeamStatus
 )
 from sentry.tasks.deletion import delete_team
 from sentry.web.frontend.base import TeamView
@@ -30,8 +30,11 @@ class RemoveTeamView(TeamView):
         form = self.get_form(request)
 
         if form.is_valid():
-            if team.status == TeamStatus.VISIBLE:
-                team.update(status=TeamStatus.PENDING_DELETION)
+            updated = Team.objects.filter(
+                id=team.id,
+                status=TeamStatus.VISIBLE,
+            ).update(status=TeamStatus.PENDING_DELETION)
+            if updated:
                 delete_team.delay(object_id=team.id, countdown=60 * 5)
 
                 AuditLogEntry.objects.create(
