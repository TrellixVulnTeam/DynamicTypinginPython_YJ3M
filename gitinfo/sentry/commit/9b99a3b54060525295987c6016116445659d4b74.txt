commit 9b99a3b54060525295987c6016116445659d4b74
Author: Leander Rodrigues <leandergrodrigues@gmail.com>
Date:   Wed Mar 25 22:24:57 2020 -0400

    feat(async-csv): Modify data export page design and texts (#17906)
    
    Redesign the async-csv workflow + texts

diff --git a/src/sentry/data_export/models.py b/src/sentry/data_export/models.py
index a716e9cd3d..f0a8f6513e 100644
--- a/src/sentry/data_export/models.py
+++ b/src/sentry/data_export/models.py
@@ -96,7 +96,7 @@ class ExportedData(Model):
             reverse("sentry-data-export-details", args=[self.organization.slug, self.id])
         )
         msg = MessageBuilder(
-            subject="Your Download is Ready!",
+            subject="Your data is ready.",
             context={"url": url, "expiration": self.format_date(self.date_expired)},
             type="organization.export-data",
             template="sentry/emails/data-export-success.txt",
@@ -109,7 +109,7 @@ class ExportedData(Model):
         from sentry.utils.email import MessageBuilder
 
         msg = MessageBuilder(
-            subject="Unable to Export Data",
+            subject="We couldn't export your data.",
             context={
                 "creation": self.format_date(self.date_added),
                 "error_message": message,
diff --git a/src/sentry/static/sentry/app/components/dataExport.tsx b/src/sentry/static/sentry/app/components/dataExport.tsx
index a21de63529..9c861b8148 100644
--- a/src/sentry/static/sentry/app/components/dataExport.tsx
+++ b/src/sentry/static/sentry/app/components/dataExport.tsx
@@ -9,9 +9,14 @@ import {Organization} from 'app/types';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 
+//! Coordinate with other ExportQueryType (src/sentry/data_export/base.py)
+export enum ExportQueryType {
+  IssuesByTag = 'Issues-by-Tag',
+  Discover = 'Discover',
+}
+
 type DataExportPayload = {
-  // Coordinate with ExportQueryType string (src/sentry/constants.py)
-  queryType: 'Issues-by-Tag' | 'Discover';
+  queryType: ExportQueryType;
   queryInfo: any; // TODO(ts): Formalize different possible payloads
 };
 
@@ -26,11 +31,6 @@ type State = {
   dataExportId?: number;
 };
 
-const TooltipMessages = {
-  start: "We'll get all your data in one place and email you when it's ready",
-  progress: "We'll email you when it's ready",
-} as const;
-
 class DataExport extends React.Component<Props, State> {
   state: State = {
     inProgress: false,
@@ -53,10 +53,14 @@ class DataExport extends React.Component<Props, State> {
           },
         }
       );
-      addSuccessMessage(t("We'll email you when it's ready for download"));
+      addSuccessMessage(
+        t("Sit tight. We'll shoot you an email when your data is ready for download.")
+      );
       this.setState({inProgress: true, dataExportId});
     } catch (_err) {
-      addErrorMessage(t('Unable to begin bulk data export. Please try again.'));
+      addErrorMessage(
+        t("We tried our hardest, but we couldn't export your data. Give it another go.")
+      );
     }
   };
 
@@ -65,15 +69,15 @@ class DataExport extends React.Component<Props, State> {
     return (
       <Feature features={['data-export']}>
         {inProgress && dataExportId ? (
-          <Tooltip title={TooltipMessages.progress}>
+          <Tooltip title="You can get on with your life. We'll email you when your data's ready.">
             <button className="btn btn-default btn-sm" disabled>
-              {t('Queued up!')}
+              {t("We're working on it...")}
             </button>
           </Tooltip>
         ) : (
-          <Tooltip title={TooltipMessages.start}>
+          <Tooltip title="Put your data to work. Start your export and we'll email you when it's finished.">
             <button className="btn btn-default btn-sm" onClick={this.startDataExport}>
-              {t('Export All to CSV')}
+              {t('Export Data')}
             </button>
           </Tooltip>
         )}
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index f80db8d0d7..8347d89307 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -996,6 +996,16 @@ function routes() {
         component={errorHandler(LazyLoad)}
       />
 
+      <Route
+        path="/organizations/:orgId/data-export/:dataExportId"
+        componentPromise={() =>
+          import(
+            /* webpackChunkName: "DataDownloadView" */ 'app/views/dataExport/dataDownload'
+          )
+        }
+        component={errorHandler(LazyLoad)}
+      />
+
       <Route
         path="/join-request/:orgId/"
         componentPromise={() =>
@@ -1106,15 +1116,6 @@ function routes() {
           <IndexRoute component={errorHandler(IssueListOverview)} />
           <Route path="searches/:searchId/" component={errorHandler(IssueListOverview)} />
         </Route>
-        <Route
-          path="/organizations/:orgId/data-export/:dataExportId"
-          componentPromise={() =>
-            import(
-              /* webpackChunkName: "DataDownloadView" */ 'app/views/dataExport/dataDownload'
-            )
-          }
-          component={errorHandler(LazyLoad)}
-        />
         {/* Once org issues is complete, these routes can be nested under
           /organizations/:orgId/issues */}
         <Route
diff --git a/src/sentry/static/sentry/app/views/dataExport/dataDownload.tsx b/src/sentry/static/sentry/app/views/dataExport/dataDownload.tsx
index dd4858977f..8fce72cd72 100644
--- a/src/sentry/static/sentry/app/views/dataExport/dataDownload.tsx
+++ b/src/sentry/static/sentry/app/views/dataExport/dataDownload.tsx
@@ -3,9 +3,10 @@ import styled from '@emotion/styled';
 import {RouteComponentProps} from 'react-router/lib/Router';
 
 import Button from 'app/components/button';
+import {ExportQueryType} from 'app/components/dataExport';
 import DateTime from 'app/components/dateTime';
 import AsyncView from 'app/views/asyncView';
-import {PageContent} from 'app/styles/organization';
+import Layout from 'app/views/auth/layout';
 import space from 'app/styles/space';
 import {t} from 'app/locale';
 
@@ -31,7 +32,7 @@ type Download = {
   dateFinished?: string;
   dateExpired?: string;
   query: {
-    type: number;
+    type: ExportQueryType;
     info: object;
   };
   status: DownloadStatus;
@@ -53,6 +54,18 @@ class DataDownload extends AsyncView<Props, State> {
     return [['download', `/organizations/${orgId}/data-export/${dataExportId}/`]];
   }
 
+  getActionLink(queryType): string {
+    const {orgId} = this.props.params;
+    switch (queryType) {
+      case ExportQueryType.IssuesByTag:
+        return `/organizations/${orgId}/issues/`;
+      case ExportQueryType.Discover:
+        return `/organizations/${orgId}/discover/queries/`;
+      default:
+        return '/';
+    }
+  }
+
   renderDate(date: string | undefined): React.ReactNode {
     if (!date) {
       return null;
@@ -65,28 +78,50 @@ class DataDownload extends AsyncView<Props, State> {
     );
   }
 
-  renderExpired(): React.ReactNode {
+  renderEarly(): React.ReactNode {
     return (
       <React.Fragment>
-        <h3>{t('Sorry!')}</h3>
-        <p>
-          {t('It seems this link has expired, and your download is no longer available.')}
-        </p>
-        <p>
-          {t(
-            'Feel free to start a new export to get the latest and greatest of your Sentry data.'
-          )}
-        </p>
+        <Header>
+          <h3>
+            {t('What are')}
+            <i>{t(' you ')}</i>
+            {t('doing here?')}
+          </h3>
+        </Header>
+        <Body>
+          <p>
+            {t(
+              "Not that its any of our business, but were you invited to this page? It's just that we don't exactly remember emailing you about it."
+            )}
+          </p>
+          <p>{t("Close this window and we'll email you when your download is ready.")}</p>
+        </Body>
       </React.Fragment>
     );
   }
-
-  renderEarly(): React.ReactNode {
+  renderExpired(): React.ReactNode {
+    const {query} = this.state.download;
+    const actionLink = this.getActionLink(query.type);
     return (
       <React.Fragment>
-        <h3>{t("You're Early!")}</h3>
-        <p>{t("We're still preparing your download, so check back in a bit!")}</p>
-        <p>{t("You can close this page, we'll email you when were ready")}</p>
+        <Header>
+          <h3>{t('This is awkward.')}</h3>
+        </Header>
+        <Body>
+          <p>
+            {t(
+              "That link expired, so your download doesn't live here anymore. Just picked up one day and left town."
+            )}
+          </p>
+          <p>
+            {t(
+              'Make a new one with your latest data. Your old download will never see it coming.'
+            )}
+          </p>
+          <DownloadButton href={actionLink} priority="primary">
+            {t('Start a New Download')}
+          </DownloadButton>
+        </Body>
       </React.Fragment>
     );
   }
@@ -98,23 +133,24 @@ class DataDownload extends AsyncView<Props, State> {
     const {orgId, dataExportId} = this.props.params;
     return (
       <React.Fragment>
-        <h3>{t('Finally!')}</h3>
-        <p>
-          {t(
-            'We prepared your data for download, you can access it with the link below.'
-          )}
-        </p>
-        <Button
-          priority="primary"
-          icon="icon-download"
-          size="large"
-          borderless
-          href={`/api/0/organizations/${orgId}/data-export/${dataExportId}/?download=true`}
-        >
-          {t('Download CSV')}
-        </Button>
-        <p>{t('Keep in mind, this link will no longer work after:')}</p>
-        <p>{this.renderDate(dateExpired)}</p>
+        <Header>
+          <h3>{t('All done.')}</h3>
+        </Header>
+        <Body>
+          <p>{t("See, that wasn't so bad. Your data is all ready for download.")}</p>
+          <Button
+            priority="primary"
+            icon="icon-download"
+            href={`/api/0/organizations/${orgId}/data-export/${dataExportId}/?download=true`}
+          >
+            {t('Download CSV')}
+          </Button>
+          <p>
+            {t("That link won't last forever — it expires:")}
+            <br />
+            {this.renderDate(dateExpired)}
+          </p>
+        </Body>
       </React.Fragment>
     );
   }
@@ -122,10 +158,10 @@ class DataDownload extends AsyncView<Props, State> {
   renderContent(): React.ReactNode {
     const {download} = this.state;
     switch (download.status) {
-      case DownloadStatus.Expired:
-        return this.renderExpired();
       case DownloadStatus.Early:
         return this.renderEarly();
+      case DownloadStatus.Expired:
+        return this.renderExpired();
       default:
         return this.renderValid();
     }
@@ -133,26 +169,32 @@ class DataDownload extends AsyncView<Props, State> {
 
   renderBody() {
     return (
-      <PageContent>
-        <div className="pattern-bg" />
-        <ContentContainer>{this.renderContent()}</ContentContainer>
-      </PageContent>
+      <Layout>
+        <main>{this.renderContent()}</main>
+      </Layout>
     );
   }
 }
 
-const ContentContainer = styled('div')`
-  text-align: center;
-  margin: ${space(4)} auto;
-  width: 350px;
-  padding: ${space(4)};
-  background: ${p => p.theme.whiteDark};
-  border-radius: ${p => p.theme.borderRadius};
-  border: 2px solid ${p => p.theme.borderDark};
-  box-shadow: ${p => p.theme.dropShadowHeavy};
+const Header = styled('header')`
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+  padding: ${space(3)} 40px 0;
+  h3 {
+    font-size: 24px;
+    margin: 0 0 ${space(3)} 0;
+  }
+`;
+
+const Body = styled('div')`
+  padding: ${space(2)} 40px;
+  max-width: 500px;
   p {
-    margin: ${space(1.5)};
+    margin: ${space(1.5)} 0;
   }
 `;
 
+const DownloadButton = styled(Button)`
+  margin-bottom: ${space(1.5)};
+`;
+
 export default DataDownload;
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.tsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.tsx
index fb9292f96f..c1dcf6c35a 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.tsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.tsx
@@ -13,7 +13,7 @@ import ExternalLink from 'app/components/links/externalLink';
 import GlobalSelectionLink from 'app/components/globalSelectionLink';
 import Pagination from 'app/components/pagination';
 import TimeSince from 'app/components/timeSince';
-import DataExport from 'app/components/dataExport';
+import DataExport, {ExportQueryType} from 'app/components/dataExport';
 import space from 'app/styles/space';
 import {Group, Tag, TagValue} from 'app/types';
 
@@ -118,7 +118,7 @@ class GroupTagValues extends AsyncComponent<
           </a>
           <DataExport
             payload={{
-              queryType: 'Issues-by-Tag',
+              queryType: ExportQueryType.IssuesByTag,
               queryInfo: {
                 project_id: group.project.id,
                 group_id: group.id,
diff --git a/src/sentry/templates/sentry/emails/data-export-failure.html b/src/sentry/templates/sentry/emails/data-export-failure.html
index accc916b72..c0246c993c 100644
--- a/src/sentry/templates/sentry/emails/data-export-failure.html
+++ b/src/sentry/templates/sentry/emails/data-export-failure.html
@@ -4,13 +4,13 @@
 {% load i18n %}
 
 {% block main %}
-    <h3>Unable to Export Data</h3>
-    <p>The data export you created at {{creation}} has failed.</p>
-    <p>We were unable to generate your report due to an error:</p>
+    <h3>We couldn't export your data.</h3>
+    <p>Well, this is a little awkward. The data export you created at {{creation}} didn't work. Sorry about that.</p>
+    <p>It looks like there was an error:</p>
     <code><pre>{{error_message}}</pre></code>
-    <p>We received the following payload:</p>
+    <p>This is what you sent us. Maybe it'll help you sort this out.</p>
     <code><pre>{{payload}}</pre></code>
-    <p><strong>Troubleshooting &amp; References</strong></p>
+    <p><strong>Need a little more help?</strong></p>
     <ul>
         <li><a href="https://docs.sentry.io/">Documentation</a></li>
         <li><a href="https://help.sentry.io/">FAQs</a></li>
diff --git a/src/sentry/templates/sentry/emails/data-export-failure.txt b/src/sentry/templates/sentry/emails/data-export-failure.txt
index 69a17bcfbe..498588f31f 100644
--- a/src/sentry/templates/sentry/emails/data-export-failure.txt
+++ b/src/sentry/templates/sentry/emails/data-export-failure.txt
@@ -1,15 +1,17 @@
-Unable to Export Data
----------------------
+We couldn't export your data.
+-----------------------------
 
-The data export you created at {{creation}} has failed.
-We were unable to generate your report due to an error:
+Well, this is a little awkward.
+The data export that you created at {{creation}} didn't work. Sorry about that.
+
+It looks like there was an error:
 
     {{error_message}}
 
-We received the following payload:
+This is what you sent us. Maybe it'll help you sort this out.
 
     {{payload}}
 
-Troubleshooting & References:
+Need a little more help?
  - https://docs.sentry.io/ (Documentation)
  - https://help.sentry.io/ (FAQs)
diff --git a/src/sentry/templates/sentry/emails/data-export-success.html b/src/sentry/templates/sentry/emails/data-export-success.html
index 99cf0ab585..522880e626 100644
--- a/src/sentry/templates/sentry/emails/data-export-success.html
+++ b/src/sentry/templates/sentry/emails/data-export-success.html
@@ -3,8 +3,8 @@
 {% load i18n %}
 
 {% block main %}
-    <h3>Your Data is Ready!</h3>
-    <p>We've finished assembling your download, check it out by clicking the button below.</p>
-    <p>This download file will expire at {{expiration}}.</p>
-    <a href="{{ url|safe }}" class="btn">Go to Download</a>
+    <h3>Your data is ready.</h3>
+    <p>See, that wasn't so bad. We're all done assembling your download. Now have at it.</p>
+    <p><a href="{{ url|safe }}" class="btn">Take Me There</a></p>
+    <p>This download file expires at {{expiration}}. So don't get attached.</p>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/data-export-success.txt b/src/sentry/templates/sentry/emails/data-export-success.txt
index edd0b8b163..f07f58d134 100644
--- a/src/sentry/templates/sentry/emails/data-export-success.txt
+++ b/src/sentry/templates/sentry/emails/data-export-success.txt
@@ -1,8 +1,8 @@
-Your Download is Ready!
------------------------
+Your data is ready.
+-------------------
 
-We've finished assembling your download, check it out by clicking the link below:
+See, that wasn't so bad. We're all done assembling your download. Now have at it.
 
 {{url|safe}}
 
-The download file will expire at {{expiration}}
+The download file expires at {{expiration}}. So don't get attached.
diff --git a/tests/js/spec/components/dataExport.spec.jsx b/tests/js/spec/components/dataExport.spec.jsx
index 20a1fb66a7..7447ef8620 100644
--- a/tests/js/spec/components/dataExport.spec.jsx
+++ b/tests/js/spec/components/dataExport.spec.jsx
@@ -35,7 +35,7 @@ describe('DataExport', function() {
       mockRouterContext(mockAuthorizedOrg)
     );
     expect(wrapper.isEmptyRender()).toBe(false);
-    expect(wrapper.text()).toBe('Export All to CSV');
+    expect(wrapper.text()).toBe('Export Data');
   });
 
   it('should send a request and disable itself when clicked', async function() {
@@ -64,7 +64,7 @@ describe('DataExport', function() {
     });
     await tick();
     wrapper.update();
-    expect(wrapper.text()).toBe('Queued up!');
+    expect(wrapper.text()).toBe("We're working on it...");
     expect(wrapper.find('button').is('[disabled]')).toBe(true);
     expect(wrapper.find(DataExport).state()).toEqual({
       inProgress: true,
diff --git a/tests/js/spec/views/dataExport/dataDownload.spec.jsx b/tests/js/spec/views/dataExport/dataDownload.spec.jsx
index 3b75833497..34a1b7c504 100644
--- a/tests/js/spec/views/dataExport/dataDownload.spec.jsx
+++ b/tests/js/spec/views/dataExport/dataDownload.spec.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
 
 import {mountWithTheme, shallow} from 'sentry-test/enzyme';
+import {ExportQueryType} from 'app/components/dataExport';
 import DataDownload, {DownloadStatus} from 'app/views/dataExport/dataDownload';
 
 describe('DataDownload', function() {
@@ -29,20 +30,21 @@ describe('DataDownload', function() {
     const wrapper = shallow(<DataDownload params={mockRouteParams} />);
     expect(wrapper.state('download')).toEqual({status});
     expect(wrapper.state('download').dateExpired).toBeUndefined();
-    const contentWrapper = wrapper.find('ContentContainer');
-    expect(contentWrapper.children()).toHaveLength(3);
-    expect(contentWrapper.find('h3').text()).toBe("You're Early!");
+    expect(wrapper.find('Header').text()).toBe('What are you doing here?');
   });
 
   it("should render the 'Expired' view when appropriate", function() {
     const status = DownloadStatus.Expired;
-    getDataExportDetails({status});
-    const wrapper = shallow(<DataDownload params={mockRouteParams} />);
-    expect(wrapper.state('download')).toEqual({status});
+    const response = {status, query: {type: ExportQueryType.IssuesByTag}};
+    getDataExportDetails(response);
+    const wrapper = mountWithTheme(<DataDownload params={mockRouteParams} />);
+    expect(wrapper.state('download')).toEqual(response);
     expect(wrapper.state('download').dateExpired).toBeUndefined();
-    const contentWrapper = wrapper.find('ContentContainer');
-    expect(contentWrapper.children()).toHaveLength(3);
-    expect(contentWrapper.find('h3').text()).toBe('Sorry!');
+    expect(wrapper.find('Header').text()).toBe('This is awkward.');
+    const buttonWrapper = wrapper.find('a[aria-label="Start a New Download"]');
+    expect(buttonWrapper.prop('href')).toBe(
+      `/organizations/${mockRouteParams.orgId}/issues/`
+    );
   });
 
   it("should render the 'Valid' view when appropriate", function() {
@@ -50,14 +52,12 @@ describe('DataDownload', function() {
     getDataExportDetails({dateExpired, status});
     const wrapper = mountWithTheme(<DataDownload params={mockRouteParams} />);
     expect(wrapper.state('download')).toEqual({dateExpired, status});
-    const contentWrapper = wrapper.find('ContentContainer').childAt(0);
-    expect(contentWrapper.children()).toHaveLength(5);
-    expect(contentWrapper.find('h3').text()).toBe('Finally!');
-    const buttonWrapper = contentWrapper.find('a[aria-label="Download CSV"]');
+    expect(wrapper.find('Header').text()).toBe('All done.');
+    const buttonWrapper = wrapper.find('a[aria-label="Download CSV"]');
     expect(buttonWrapper.text()).toBe('Download CSV');
     expect(buttonWrapper.prop('href')).toBe(
       `/api/0/organizations/${mockRouteParams.orgId}/data-export/${mockRouteParams.dataExportId}/?download=true`
     );
-    expect(contentWrapper.find('DateTime').prop('date')).toEqual(new Date(dateExpired));
+    expect(wrapper.find('DateTime').prop('date')).toEqual(new Date(dateExpired));
   });
 });
diff --git a/tests/sentry/models/test_exporteddata.py b/tests/sentry/models/test_exporteddata.py
index f6f2ca8618..d1e3459f61 100644
--- a/tests/sentry/models/test_exporteddata.py
+++ b/tests/sentry/models/test_exporteddata.py
@@ -125,7 +125,7 @@ class ExportedDataTest(TestCase):
             )
         )
         expected_email_args = {
-            "subject": "Your Download is Ready!",
+            "subject": "Your data is ready.",
             "context": {
                 "url": expected_url,
                 "expiration": ExportedData.format_date(date=self.data_export.date_expired),
@@ -147,7 +147,7 @@ class ExportedDataTest(TestCase):
         with self.tasks():
             self.data_export.email_failure(self.TEST_STRING)
         expected_email_args = {
-            "subject": "Unable to Export Data",
+            "subject": "We couldn't export your data.",
             "context": {
                 "creation": ExportedData.format_date(date=self.data_export.date_added),
                 "error_message": self.TEST_STRING,
