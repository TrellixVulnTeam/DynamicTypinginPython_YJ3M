commit b817af3f5108b8a59cbcd4a450b69f46f2542790
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Jul 29 11:24:16 2019 -0700

     ref: Deprecate group_id field in EventAttachment (#14167)
    
    Since we never actually return the group ID from the EventAttachment table
     or use it for lookup we shouldn't store it there.
    
     As we migrate event storage fully to Snuba, getting this field
     populated when we store the attachment will be more complicated
     since it requires a lookup to the Event table to get the group
     ID and there'll be a race condition between the event and the event
     attachment being saved.

diff --git a/bin/load-mocks b/bin/load-mocks
index 5017249235..2a580f8f40 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -597,7 +597,6 @@ def main(num_events=1, extra_events=False):
 
                 EventAttachment.objects.create(
                     project_id=project.id,
-                    group_id=event1.group_id,
                     event_id=event1.event_id,
                     name='example-logfile.txt',
                     file=File.objects.get_or_create(
diff --git a/src/sentry/deletions/defaults/group.py b/src/sentry/deletions/defaults/group.py
index 75812a8be7..e850ecad62 100644
--- a/src/sentry/deletions/defaults/group.py
+++ b/src/sentry/deletions/defaults/group.py
@@ -30,7 +30,6 @@ class GroupDeletionTask(ModelDeletionTask):
             models.GroupEmailThread,
             models.GroupSubscription,
             models.UserReport,
-            models.EventAttachment,
             IncidentGroup,
             # Event is last as its the most time consuming
             models.Event,
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 2b34093c0e..a5ac4a461f 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -39,7 +39,7 @@ from sentry.models import (
     Activity, Environment, Event, EventDict, EventError, EventMapping, EventUser, Group,
     GroupEnvironment, GroupHash, GroupLink, GroupRelease, GroupResolution, GroupStatus,
     Project, Release, ReleaseEnvironment, ReleaseProject,
-    ReleaseProjectEnvironment, UserReport, Organization, EventAttachment,
+    ReleaseProjectEnvironment, UserReport, Organization,
 )
 from sentry.plugins import plugins
 from sentry.signals import event_discarded, event_saved, first_event_received
@@ -836,14 +836,6 @@ class EventManager(object):
                 environment=environment,
             )
 
-            # Update any event attachment that arrived before the event group was defined.
-            EventAttachment.objects.filter(
-                project_id=project.id,
-                event_id=event_id,
-            ).update(
-                group_id=group.id,
-            )
-
         # save the event unless its been sampled
         if not is_sample:
             try:
diff --git a/src/sentry/models/eventattachment.py b/src/sentry/models/eventattachment.py
index d4f6fc9dd2..c8fafc281b 100644
--- a/src/sentry/models/eventattachment.py
+++ b/src/sentry/models/eventattachment.py
@@ -10,6 +10,7 @@ class EventAttachment(Model):
     __core__ = False
 
     project_id = BoundedBigIntegerField()
+    # TODO(lyn): group_id is now deprecated, drop this
     group_id = BoundedBigIntegerField(null=True, db_index=True)
     event_id = models.CharField(max_length=32, db_index=True)
     file = FlexibleForeignKey('sentry.File')
diff --git a/src/sentry/tasks/store.py b/src/sentry/tasks/store.py
index a0fb531a08..84a0bd763f 100644
--- a/src/sentry/tasks/store.py
+++ b/src/sentry/tasks/store.py
@@ -436,7 +436,6 @@ def save_attachment(event, attachment):
 
     EventAttachment.objects.create(
         event_id=event.event_id,
-        group_id=event.group_id,
         project_id=event.project_id,
         name=attachment.name,
         file=file,
diff --git a/src/sentry/testutils/factories.py b/src/sentry/testutils/factories.py
index 0178756e12..253e068d94 100644
--- a/src/sentry/testutils/factories.py
+++ b/src/sentry/testutils/factories.py
@@ -669,7 +669,6 @@ class Factories(object):
 
         return EventAttachment.objects.create(
             project_id=event.project_id,
-            group_id=event.group_id,
             event_id=event.event_id,
             file=file,
             **kwargs
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index d698ce7c9b..f182287554 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -47,7 +47,7 @@ from sentry.lang.native.minidump import (
     merge_attached_event, merge_attached_breadcrumbs, write_minidump_placeholder,
     MINIDUMP_ATTACHMENT_TYPE,
 )
-from sentry.models import Project, File, EventAttachment, Event
+from sentry.models import Project, File, EventAttachment
 from sentry.signals import (
     event_accepted, event_dropped, event_filtered, event_received,
 )
@@ -654,32 +654,13 @@ class EventAttachmentStoreView(StoreView):
             )
             file.putfile(uploaded_file)
 
-            # To avoid a race with EventManager which tries to set the group_id on attachments received before
-            # the event, first insert the attachment, then lookup for the event for its group.
-            event_attachment = EventAttachment.objects.create(
+            EventAttachment.objects.create(
                 project_id=project_id,
                 event_id=event_id,
                 name=uploaded_file.name,
                 file=file,
             )
 
-            try:
-                event = Event.objects.get(
-                    project_id=project_id,
-                    event_id=event_id,
-                )
-            except Event.DoesNotExist:
-                pass
-            else:
-                # If event was created but the group not defined, EventManager will take care of setting the
-                # group to all dangling attachments
-                if event.group_id is not None:
-                    EventAttachment.objects.filter(
-                        id=event_attachment.id,
-                    ).update(
-                        group_id=event.group_id,
-                    )
-
         return HttpResponse(status=201)
 
 
diff --git a/tests/sentry/api/endpoints/test_event_attachment_details.py b/tests/sentry/api/endpoints/test_event_attachment_details.py
index 92a825ab0b..949861115a 100644
--- a/tests/sentry/api/endpoints/test_event_attachment_details.py
+++ b/tests/sentry/api/endpoints/test_event_attachment_details.py
@@ -32,7 +32,6 @@ class CreateAttachmentMixin(object):
 
         self.attachment = EventAttachment.objects.create(
             event_id=self.event.event_id,
-            group_id=self.event.group_id,
             project_id=self.event.project_id,
             file=self.file,
             name='hello.png',
diff --git a/tests/sentry/api/endpoints/test_event_attachments.py b/tests/sentry/api/endpoints/test_event_attachments.py
index 27be4e8ebf..b651f95497 100644
--- a/tests/sentry/api/endpoints/test_event_attachments.py
+++ b/tests/sentry/api/endpoints/test_event_attachments.py
@@ -31,7 +31,6 @@ class EventAttachmentsTest(APITestCase):
 
         attachment1 = EventAttachment.objects.create(
             event_id=event1.event_id,
-            group_id=event1.group_id,
             project_id=event1.project_id,
             file=File.objects.create(
                 name='hello.png',
@@ -42,7 +41,6 @@ class EventAttachmentsTest(APITestCase):
 
         EventAttachment.objects.create(
             event_id=event2.event_id,
-            group_id=event2.group_id,
             project_id=event2.project_id,
             file=File.objects.create(
                 name='hello.png',
diff --git a/tests/sentry/deletions/test_group.py b/tests/sentry/deletions/test_group.py
index 4780d8ea6d..06b382d5d1 100644
--- a/tests/sentry/deletions/test_group.py
+++ b/tests/sentry/deletions/test_group.py
@@ -5,7 +5,7 @@ from uuid import uuid4
 from sentry import tagstore
 from sentry.tagstore.models import EventTag
 from sentry.models import (
-    Event, EventAttachment, EventMapping, File, Group, GroupAssignee, GroupHash, GroupMeta, GroupRedirect,
+    Event, EventMapping, Group, GroupAssignee, GroupHash, GroupMeta, GroupRedirect,
     ScheduledDeletion, UserReport
 )
 from sentry.tasks.deletion import run_deletion
@@ -24,16 +24,6 @@ class DeleteGroupTest(TestCase):
             event_id='a' * 32,
             group_id=group.id,
         )
-        EventAttachment.objects.create(
-            event_id=event.event_id,
-            group_id=event.group_id,
-            project_id=event.project_id,
-            file=File.objects.create(
-                name='hello.png',
-                type='image/png',
-            ),
-            name='hello.png',
-        )
         UserReport.objects.create(
             group_id=group.id,
             project_id=event.project_id,
@@ -88,10 +78,6 @@ class DeleteGroupTest(TestCase):
             run_deletion(deletion.id)
 
         assert not Event.objects.filter(id=event.id).exists()
-        assert not EventAttachment.objects.filter(
-            event_id=event.event_id,
-            group_id=group.id,
-        ).exists()
         assert not EventMapping.objects.filter(
             group_id=group.id,
         ).exists()
diff --git a/tests/sentry/event_manager/test_event_manager.py b/tests/sentry/event_manager/test_event_manager.py
index d8d2113902..d5a9e7ece3 100644
--- a/tests/sentry/event_manager/test_event_manager.py
+++ b/tests/sentry/event_manager/test_event_manager.py
@@ -20,7 +20,7 @@ from sentry.models import (
     Activity, Environment, Event, ExternalIssue, Group, GroupEnvironment,
     GroupHash, GroupLink, GroupRelease, GroupResolution, GroupStatus,
     GroupTombstone, EventMapping, Integration, Release,
-    ReleaseProjectEnvironment, OrganizationIntegration, UserReport, EventAttachment, File
+    ReleaseProjectEnvironment, OrganizationIntegration, UserReport
 )
 from sentry.signals import event_discarded, event_saved
 from sentry.testutils import assert_mock_called_once_with_partial, TestCase
@@ -1000,28 +1000,6 @@ class EventManagerTest(TestCase):
 
         assert UserReport.objects.get(event_id=event_id).environment == environment
 
-    def test_event_attachment_gets_group_id(self):
-        project = self.create_project()
-        event_id = 'a' * 32
-        uploaded_file_name = 'attachment.zip'
-        EventAttachment.objects.create(
-            project_id=project.id,
-            event_id=event_id,
-            name=uploaded_file_name,
-            file=File.objects.create(
-                name=uploaded_file_name,
-            ),
-        )
-
-        event = self.store_event(
-            data=make_event(
-                event_id=event_id
-            ),
-            project_id=project.id
-        )
-
-        assert EventAttachment.objects.get(event_id=event_id).group_id == event.group_id
-
     def test_default_event_type(self):
         manager = EventManager(make_event(message='foo bar'))
         manager.normalize()
