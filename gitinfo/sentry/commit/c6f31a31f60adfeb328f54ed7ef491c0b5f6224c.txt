commit c6f31a31f60adfeb328f54ed7ef491c0b5f6224c
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Aug 27 22:02:59 2013 -0700

    Reverse index for optimized query patterns on GroupSeen

diff --git a/src/sentry/migrations/0104_auto__add_groupseen__add_unique_groupseen_group_user.py b/src/sentry/migrations/0104_auto__add_groupseen__add_unique_groupseen_group_user.py
index 265f879cea..ef859176b6 100644
--- a/src/sentry/migrations/0104_auto__add_groupseen__add_unique_groupseen_group_user.py
+++ b/src/sentry/migrations/0104_auto__add_groupseen__add_unique_groupseen_group_user.py
@@ -12,19 +12,19 @@ class Migration(SchemaMigration):
         db.create_table(u'sentry_groupseen', (
             ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
             ('project', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Project'])),
-            ('group', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Group'], db_index=False)),
-            ('user', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
+            ('group', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Group'])),
+            ('user', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'], db_index=False)),
             ('last_seen', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
         ))
         db.send_create_signal(u'sentry', ['GroupSeen'])
 
         # Adding unique constraint on 'GroupSeen', fields ['group', 'user']
-        db.create_unique(u'sentry_groupseen', ['group_id', 'user_id'])
+        db.create_unique(u'sentry_groupseen', ['user_id', 'group_id'])
 
 
     def backwards(self, orm):
         # Removing unique constraint on 'GroupSeen', fields ['group', 'user']
-        db.delete_unique(u'sentry_groupseen', ['group_id', 'user_id'])
+        db.delete_unique(u'sentry_groupseen', ['user_id', 'group_id'])
 
         # Deleting model 'GroupSeen'
         db.delete_table(u'sentry_groupseen')
@@ -184,12 +184,12 @@ class Migration(SchemaMigration):
             'value': ('django.db.models.fields.TextField', [], {})
         },
         u'sentry.groupseen': {
-            'Meta': {'unique_together': "(('group', 'user'),)", 'object_name': 'GroupSeen'},
-            'group': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['sentry.Group']", 'db_index': 'False'}),
+            'Meta': {'unique_together': "(('user', 'group'),)", 'object_name': 'GroupSeen'},
+            'group': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['sentry.Group']"}),
             'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'last_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
             'project': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['sentry.Project']"}),
-            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']"})
+            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']", 'db_index': 'False'})
         },
         u'sentry.grouptag': {
             'Meta': {'unique_together': "(('project', 'key', 'value', 'group'),)", 'object_name': 'GroupTag', 'db_table': "'sentry_messagefiltervalue'"},
@@ -333,4 +333,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['sentry']
\ No newline at end of file
+    complete_apps = ['sentry']
diff --git a/src/sentry/models.py b/src/sentry/models.py
index 05d6c71df2..1748ea803c 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -1118,12 +1118,12 @@ class GroupSeen(Model):
     Track when a group is last seen by a user.
     """
     project = models.ForeignKey(Project)
-    group = models.ForeignKey(Group, db_index=False)
-    user = models.ForeignKey(settings.AUTH_USER_MODEL)
+    group = models.ForeignKey(Group)
+    user = models.ForeignKey(settings.AUTH_USER_MODEL, db_index=False)
     last_seen = models.DateTimeField(default=timezone.now)
 
     class Meta:
-        unique_together = (('group', 'user'),)
+        unique_together = (('user', 'group'),)
 
     __repr__ = sane_repr('project_id', 'group_id', 'user_id', 'last_seen')
 
