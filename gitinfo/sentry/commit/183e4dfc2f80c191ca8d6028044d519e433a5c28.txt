commit 183e4dfc2f80c191ca8d6028044d519e433a5c28
Author: Dora <dora.l.chan@gmail.com>
Date:   Thu Dec 19 14:07:50 2019 -0800

    feat(disv2): prefreeze panic cleanup (#16191)
    
    * table header and text span detail
    
    * duration pill color
    
    * reducing radius

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
index 5a8ffac9d9..3c0e6839c5 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
@@ -713,7 +713,10 @@ class SpanBar extends React.Component<SpanBarProps, SpanBarState> {
                 width: toPercent(bounds.width || 0),
               }}
             >
-              <DurationPill durationDisplay={durationDisplay}>
+              <DurationPill
+                durationDisplay={durationDisplay}
+                showDetail={this.state.showDetail}
+              >
                 {durationString}
                 {this.renderWarningText({warningText: bounds.warning})}
               </DurationPill>
@@ -785,7 +788,7 @@ const SpanRowCell = styled('div')<SpanRowCellProps>`
   height: 100%;
   overflow: hidden;
   background-color: ${p => getBackgroundColor(p)};
-  color: ${p => (p.showDetail ? p.theme.white : null)};
+  color: ${p => (p.showDetail ? p.theme.white : 'inherit')};
 `;
 
 const SpanRowCellContainer = styled('div')`
@@ -956,15 +959,18 @@ const getDurationPillAlignment = ({durationDisplay}) => {
   }
 };
 
-const DurationPill = styled('div')<{durationDisplay: DurationDisplay}>`
+const DurationPill = styled('div')<{
+  durationDisplay: DurationDisplay;
+  showDetail: boolean;
+}>`
   position: absolute;
-  color: ${p => p.theme.gray2};
-  font-size: ${p => p.theme.fontSizeExtraSmall};
-  white-space: nowrap;
+  top: 50%;
   display: flex;
   align-items: center;
-  top: 50%;
   transform: translateY(-50%);
+  white-space: nowrap;
+  font-size: ${p => p.theme.fontSizeExtraSmall};
+  color: ${p => (p.showDetail === true ? p.theme.gray1 : p.theme.gray2)};
 
   ${getDurationPillAlignment}
 
diff --git a/src/sentry/static/sentry/app/components/gridEditable/index.tsx b/src/sentry/static/sentry/app/components/gridEditable/index.tsx
index d54149960b..53a50b5346 100644
--- a/src/sentry/static/sentry/app/components/gridEditable/index.tsx
+++ b/src/sentry/static/sentry/app/components/gridEditable/index.tsx
@@ -200,8 +200,8 @@ class GridEditable<
 
     return (
       <HeaderButton onClick={this.toggleEdit} data-test-id="grid-edit-disable">
-        <InlineSvg src="icon-circle-close" />
-        {t('Exit Edit')}
+        <InlineSvg src="icon-circle-check" />
+        {t('Save & Close')}
       </HeaderButton>
     );
   };
diff --git a/src/sentry/static/sentry/app/components/gridEditable/styles.tsx b/src/sentry/static/sentry/app/components/gridEditable/styles.tsx
index 7d35fa32a5..876fece99e 100644
--- a/src/sentry/static/sentry/app/components/gridEditable/styles.tsx
+++ b/src/sentry/static/sentry/app/components/gridEditable/styles.tsx
@@ -132,9 +132,9 @@ export const GridHeadCellButton = styled('div')<GridEditableProps>`
   position: relative;
   min-width: 24px; /* Ensure that edit/remove buttons are never hidden */
   display: block;
-  margin: ${space(1)} ${space(1.5)};
-  padding: ${space(1)} ${space(0.5)};
-  border-radius: ${p => p.theme.borderRadius};
+  margin: ${space(0.5)};
+  padding: ${space(1.5)};
+  border-radius: 2px;
 
   color: ${p => {
     if (p.isDragging) {
