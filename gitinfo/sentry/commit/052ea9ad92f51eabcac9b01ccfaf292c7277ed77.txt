commit 052ea9ad92f51eabcac9b01ccfaf292c7277ed77
Author: William Mak <william@wmak.io>
Date:   Mon Apr 13 13:00:27 2020 -0400

    fix(perf-views): Fix deleting key transactions (#18226)
    
    - Wasn't specifying transaction owner on delete, so if a transaction was
      key for more than one user deleting would fail.
    - Fixes SENTRY-FYE

diff --git a/src/sentry/discover/endpoints/discover_key_transactions.py b/src/sentry/discover/endpoints/discover_key_transactions.py
index 3eea1de6bc..038fa0b8d4 100644
--- a/src/sentry/discover/endpoints/discover_key_transactions.py
+++ b/src/sentry/discover/endpoints/discover_key_transactions.py
@@ -105,7 +105,10 @@ class KeyTransactionEndpoint(KeyTransactionBase):
 
         try:
             model = KeyTransaction.objects.get(
-                transaction=transaction, organization=organization, project=project
+                transaction=transaction,
+                organization=organization,
+                project=project,
+                owner=request.user,
             )
         except KeyTransaction.DoesNotExist:
             return Response(status=204)
diff --git a/tests/snuba/api/endpoints/test_discover_key_transactions.py b/tests/snuba/api/endpoints/test_discover_key_transactions.py
index 535d8b001c..34ef67d6d8 100644
--- a/tests/snuba/api/endpoints/test_discover_key_transactions.py
+++ b/tests/snuba/api/endpoints/test_discover_key_transactions.py
@@ -449,6 +449,53 @@ class KeyTransactionTest(APITestCase, SnubaTestCase):
             == 0
         )
 
+    def test_delete_transaction_with_another_user(self):
+        event_data = load_data("transaction")
+
+        KeyTransaction.objects.create(
+            owner=self.user,
+            organization=self.org,
+            transaction=event_data["transaction"],
+            project=self.project,
+        )
+        user = self.create_user()
+        self.create_member(user=user, organization=self.org, role="member")
+        self.login_as(user=user, superuser=False)
+        KeyTransaction.objects.create(
+            owner=user,
+            organization=self.org,
+            transaction=event_data["transaction"],
+            project=self.project,
+        )
+        with self.feature("organizations:performance-view"):
+            url = reverse("sentry-api-0-organization-key-transactions", args=[self.org.slug])
+            response = self.client.delete(
+                url + "?project={}".format(self.project.id),
+                {"transaction": event_data["transaction"]},
+            )
+
+        assert response.status_code == 204
+        # Original user still has a key transaction
+        assert (
+            KeyTransaction.objects.filter(
+                owner=self.user,
+                organization=self.org,
+                transaction=event_data["transaction"],
+                project=self.project,
+            ).count()
+            == 1
+        )
+        # Deleting user has deleted the key transaction
+        assert (
+            KeyTransaction.objects.filter(
+                owner=user,
+                organization=self.org,
+                transaction=event_data["transaction"],
+                project=self.project,
+            ).count()
+            == 0
+        )
+
     def test_delete_key_transaction_as_member(self):
         user = self.create_user()
         self.create_member(user=user, organization=self.org, role="member")
