commit 46ecd3c05d0cad4488d1c1d23a0eab99b0837ddb
Author: Dena Mwangi <dena@getsentry.com>
Date:   Wed Aug 1 10:01:53 2018 -0700

    feat: SSO experiment turn on (#9240)

diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 1dfb1648e9..5834d2ea4f 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -30,7 +30,6 @@ default_manager.add('organizations:unreleased-changes', OrganizationFeature)  #
 default_manager.add('organizations:environments', OrganizationFeature)  # NOQA
 default_manager.add('organizations:relay', OrganizationFeature)  # NOQA
 default_manager.add('organizations:health', OrganizationFeature)  # NOQA
-default_manager.add('organizations:sso-paywall-experiment', OrganizationFeature)  # NOQA
 default_manager.add('projects:similarity-view', ProjectFeature)  # NOQA
 default_manager.add('projects:global-events', ProjectFeature)  # NOQA
 default_manager.add('projects:plugins', ProjectPluginFeature)  # NOQA
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx
index 7b98914c9f..5ce165c5f9 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx
@@ -21,24 +21,21 @@ class SettingsNavigation extends React.Component {
 
   componentDidMount() {
     let {organization} = this.props;
-    if (!organization) return;
-    let features = organization.features;
+    if (!organization || !organization.experiments) return;
 
-    //Experiment variant is already assigned - this logs the exposure i.e. when the user gets to the settings page
-    let treatment = features.includes('sso-paywall-experiment-treatment');
-    let control = features.includes('sso-paywall-experiment-control');
+    let exposed = organization.experiments.SSOPaywallExperiment;
 
-    // Only want to log the people in the experiment
-    if (!treatment && !control) return;
+    //Experiment exposure is already assigned - this logs the exposure i.e. when the user gets to the settings page
+    if (exposed === 0 || exposed === 1) {
+      let data = {
+        experiment_name: 'SSOPaywallExperiment',
+        unit_name: 'org_id',
+        unit_id: parseInt(organization.id, 10),
+        params: `{exposed: ${exposed}}`,
+      };
 
-    let data = {
-      experiment_name: 'SSOPaywallExperiment',
-      unit_name: 'org_id',
-      unit_id: parseInt(organization.id, 10),
-      params: `{exposed: ${treatment ? 1 : 0}}`,
-    };
-
-    HookStore.get('analytics:log-experiment').forEach(cb => cb(data));
+      HookStore.get('analytics:log-experiment').forEach(cb => cb(data));
+    }
   }
 
   render() {
diff --git a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
index c44c8a6a25..9ae64a6009 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
@@ -39,8 +39,10 @@ const organizationNavigation = [
       {
         path: `${pathPrefix}/auth/`,
         title: t('Auth'),
-        show: ({access, features}) =>
-          (features.has('sso') || features.has('sso-paywall-experiment-treatment')) &&
+        show: ({organization, access, features}) =>
+          (features.has('sso') ||
+            (organization.experiments &&
+              organization.experiments.SSOPaywallExperiment === 1)) &&
           access.has('org:admin'),
         description: t('Configure single sign-on'),
       },
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationSettingsNavigation.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationSettingsNavigation.spec.jsx.snap
new file mode 100644
index 0000000000..3e2e1600e5
--- /dev/null
+++ b/tests/js/spec/views/settings/__snapshots__/organizationSettingsNavigation.spec.jsx.snap
@@ -0,0 +1,117 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`OrganizationSettingsNavigation renders 1`] = `
+<SettingsNavigation
+  access={
+    Set {
+      "org:read",
+      "org:write",
+      "org:admin",
+      "project:read",
+      "project:write",
+      "project:admin",
+      "team:read",
+      "team:write",
+      "team:admin",
+    }
+  }
+  features={Set {}}
+  hookConfigs={Array []}
+  hooks={Array []}
+  navigationObjects={
+    Array [
+      Object {
+        "items": Array [
+          Object {
+            "description": "Configure general settings for an organization",
+            "index": true,
+            "path": "/settings/:orgId/",
+            "show": [Function],
+            "title": "General Settings",
+          },
+          Object {
+            "description": "View and manage an organization's projects",
+            "path": "/settings/:orgId/projects/",
+            "title": "Projects",
+          },
+          Object {
+            "description": "Manage an organization's teams",
+            "path": "/settings/:orgId/teams/",
+            "title": "Teams",
+          },
+          Object {
+            "badge": [Function],
+            "description": "Manage user membership for an organization",
+            "path": "/settings/:orgId/members/",
+            "show": [Function],
+            "title": "Members",
+          },
+          Object {
+            "description": "Configure single sign-on",
+            "path": "/settings/:orgId/auth/",
+            "show": [Function],
+            "title": "Auth",
+          },
+          Object {
+            "path": "/settings/:orgId/api-keys/",
+            "show": [Function],
+            "title": "API Keys",
+          },
+          Object {
+            "description": "View the audit log for an organization",
+            "path": "/settings/:orgId/audit-log/",
+            "show": [Function],
+            "title": "Audit Log",
+          },
+          Object {
+            "description": "Configure rate limits for all projects in the organization",
+            "path": "/settings/:orgId/rate-limits/",
+            "show": [Function],
+            "title": "Rate Limits",
+          },
+          Object {
+            "description": "Manage repositories connected to the organization",
+            "path": "/settings/:orgId/repos/",
+            "show": [Function],
+            "title": "Repositories",
+          },
+          Object {
+            "description": "Manage integrations for an organization",
+            "path": "/settings/:orgId/integrations/",
+            "show": [Function],
+            "title": "Integrations",
+          },
+        ],
+        "name": "Organization",
+      },
+    ]
+  }
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
+/>
+`;
diff --git a/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx b/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx
new file mode 100644
index 0000000000..aa57582986
--- /dev/null
+++ b/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx
@@ -0,0 +1,69 @@
+import {mount, shallow} from 'enzyme';
+import React from 'react';
+
+import OrganizationSettingsNavigation from 'app/views/settings/organization/organizationSettingsNavigation.jsx';
+
+describe('OrganizationSettingsNavigation', function() {
+  it('renders', function() {
+    let wrapper = shallow(<OrganizationSettingsNavigation />, TestStubs.routerContext());
+
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  //These next three are related to the SSOPaywallExperiment and should be taken down when that is phased out
+  it('renders without auth nav item for control', function() {
+    let wrapper = mount(
+      <OrganizationSettingsNavigation />,
+      TestStubs.routerContext([
+        {
+          organization: TestStubs.Organization({
+            access: ['org:admin'],
+            experiments: {SSOPaywallExperiment: 0},
+          }),
+        },
+      ])
+    );
+
+    expect(
+      wrapper.find('SettingsNavItem').findWhere(el => el.prop('label') === 'Auth')
+    ).toHaveLength(0);
+  });
+
+  it('renders with auth nav item for treatment', function() {
+    let wrapper = mount(
+      <OrganizationSettingsNavigation />,
+      TestStubs.routerContext([
+        {
+          organization: TestStubs.Organization({
+            // features: ['sso'],
+            access: ['org:admin'],
+            experiments: {SSOPaywallExperiment: 1},
+          }),
+        },
+      ])
+    );
+
+    expect(
+      wrapper.find('SettingsNavItem').findWhere(el => el.prop('label') === 'Auth')
+    ).toHaveLength(1);
+  });
+
+  it('renders with auth nav item for those not in experiment', function() {
+    let wrapper = mount(
+      <OrganizationSettingsNavigation />,
+      TestStubs.routerContext([
+        {
+          organization: TestStubs.Organization({
+            features: ['sso'],
+            access: ['org:admin'],
+            experiments: {SSOPaywallExperiment: null},
+          }),
+        },
+      ])
+    );
+
+    expect(
+      wrapper.find('SettingsNavItem').findWhere(el => el.prop('label') === 'Auth')
+    ).toHaveLength(1);
+  });
+});
