commit 64e97ba09364221f709d46c8fee294375d1a06f9
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Nov 25 12:24:49 2015 -0800

    Make sure that we can't register an option as NoneType

diff --git a/src/sentry/options/manager.py b/src/sentry/options/manager.py
index 40d124f39d..66277dfb7b 100644
--- a/src/sentry/options/manager.py
+++ b/src/sentry/options/manager.py
@@ -9,6 +9,7 @@ from __future__ import absolute_import, print_function
 
 import logging
 from collections import namedtuple
+from types import NoneType
 
 from django.conf import settings
 from django.utils import timezone
@@ -211,6 +212,11 @@ class OptionsManager(object):
 
     def register(self, key, default='', type=basestring, flags=FLAG_DEFAULT):
         assert key not in self.registry, 'Option already registered: %r' % key
+        # We disallow None as a value for options since this is ambiguous and doesn't
+        # really make sense as config options. There should be a sensible default
+        # value instead that matches the type expected, rather than relying on None.
+        if type is NoneType:
+            raise TypeError('Options must not be NoneType')
         if not isinstance(default, type):
             raise TypeError('got %r, expected %r' % (_type(default), type))
         self.registry[key] = Key(key, default, type, flags, self._make_cache_key(key))
diff --git a/tests/sentry/options/test_manager.py b/tests/sentry/options/test_manager.py
index 202ab0ba92..77a8f46d13 100644
--- a/tests/sentry/options/test_manager.py
+++ b/tests/sentry/options/test_manager.py
@@ -56,6 +56,9 @@ class OptionsManagerTest(TestCase):
         with self.assertRaises(TypeError):
             self.manager.register('wrong-type', default=1, type=basestring)
 
+        with self.assertRaises(TypeError):
+            self.manager.register('none-type', default=None, type=type(None))
+
     def test_legacy_key(self):
         """
         Allow sentry: prefixed keys without any registration
