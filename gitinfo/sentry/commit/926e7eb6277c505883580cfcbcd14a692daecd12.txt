commit 926e7eb6277c505883580cfcbcd14a692daecd12
Author: Ben Vinegar <ben@benv.ca>
Date:   Mon Sep 12 17:34:08 2016 -0700

    Naive implementation of sidebar views (history, bookmarks ...)

diff --git a/src/sentry/static/sentry/app/components/compactIssue.jsx b/src/sentry/static/sentry/app/components/compactIssue.jsx
index c888052e35..93a7a87723 100644
--- a/src/sentry/static/sentry/app/components/compactIssue.jsx
+++ b/src/sentry/static/sentry/app/components/compactIssue.jsx
@@ -91,7 +91,8 @@ const CompactIssue = React.createClass({
     data: React.PropTypes.object,
     id: React.PropTypes.string,
     orgId: React.PropTypes.string,
-    statsPeriod: React.PropTypes.string
+    statsPeriod: React.PropTypes.string,
+    showActions: React.PropTypes.bool
   },
 
   mixins: [
@@ -186,34 +187,36 @@ const CompactIssue = React.createClass({
             <GroupChart id={id} statsPeriod={this.props.statsPeriod} />
           </div>
         }
-        <div className="more-menu-container align-right">
-          <DropdownLink
-            topLevelClasses="more-menu"
-            className="more-menu-toggle"
-            caret={false}
-            title={title}>
-            <li>
-              <a onClick={this.onUpdate.bind(this, {status: issue.status !== 'resolved' ? 'resolved' : 'unresolved'})}>
-                <span className="icon-checkmark" />
-              </a>
-            </li>
-            <li>
-              <a onClick={this.onUpdate.bind(this, {isBookmarked: !issue.isBookmarked})}>
-                <span className="icon-star-solid" />
-              </a>
-            </li>
-            <li>
-              <SnoozeAction
-                orgId={orgId}
-                projectId={projectId}
-                groupId={id}
-                onSnooze={this.onSnooze} />
-            </li>
-            {false &&
-              <li><a href="#"><span className="icon-user" /></a></li>
-            }
-          </DropdownLink>
-        </div>
+        {this.props.showActions &&
+          <div className="more-menu-container align-right">
+            <DropdownLink
+              topLevelClasses="more-menu"
+              className="more-menu-toggle"
+              caret={false}
+              title={title}>
+              <li>
+                <a onClick={this.onUpdate.bind(this, {status: issue.status !== 'resolved' ? 'resolved' : 'unresolved'})}>
+                  <span className="icon-checkmark"/>
+                </a>
+              </li>
+              <li>
+                <a onClick={this.onUpdate.bind(this, {isBookmarked: !issue.isBookmarked})}>
+                  <span className="icon-star-solid"/>
+                </a>
+              </li>
+              <li>
+                <SnoozeAction
+                  orgId={orgId}
+                  projectId={projectId}
+                  groupId={id}
+                  onSnooze={this.onSnooze}/>
+              </li>
+              {false &&
+              <li><a href="#"><span className="icon-user"/></a></li>
+              }
+            </DropdownLink>
+          </div>
+        }
         {this.props.children}
       </li>
     );
diff --git a/src/sentry/static/sentry/app/components/issueList.jsx b/src/sentry/static/sentry/app/components/issueList.jsx
index b390116da5..0c6c1411ce 100644
--- a/src/sentry/static/sentry/app/components/issueList.jsx
+++ b/src/sentry/static/sentry/app/components/issueList.jsx
@@ -15,6 +15,7 @@ const IssueList = React.createClass({
     pagination: React.PropTypes.bool,
     renderEmpty: React.PropTypes.func,
     statsPeriod: React.PropTypes.string,
+    showActions: React.PropTypes.bool
   },
 
   mixins: [ApiMixin],
@@ -57,7 +58,7 @@ const IssueList = React.createClass({
     this.api.request(this.props.endpoint, {
       method: 'GET',
       query: {
-        cursor: location.query.cursor || '',
+        cursor: (location && location.query && location.query.cursor) || '',
         ...this.props.query,
       },
       success: (data, _, jqXHR) => {
@@ -96,7 +97,9 @@ const IssueList = React.createClass({
                 key={id}
                 id={id}
                 orgId={params.orgId}
-                statsPeriod={this.props.statsPeriod} />
+                statsPeriod={this.props.statsPeriod}
+                showActions={this.props.showActions}
+              />
             );
           })}
         </ul>
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index e1916e2d7b..cdb3025f89 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -4,15 +4,16 @@ import $ from 'jquery';
 import ApiMixin from '../../mixins/apiMixin';
 import ConfigStore from '../../stores/configStore';
 import OrganizationState from '../../mixins/organizationState';
-import {Link} from 'react-router';
+// import {Link} from 'react-router';
 
 import Broadcasts from './broadcasts';
-import StatusPage from './statuspage';
+// import StatusPage from './statuspage';
 import UserNav from './userNav';
 import requiredAdminActions from '../requiredAdminActions';
 import OrganizationSelector from './organizationSelector';
 import SidebarPanel from '../sidebarPanel';
 import TodoList from '../todos';
+import IssueList from '../issueList';
 import {t} from '../../locale';
 
 const INCIDENTS = [
@@ -193,15 +194,54 @@ const Sidebar = React.createClass({
             </ul>
             {this.state.showPanel && this.state.currentPanel == 'assigned' &&
                 <SidebarPanel title={t('Assigned to me')}
-                              hidePanel={()=>this.hidePanel()}/>
+                              hidePanel={()=>this.hidePanel()}>
+                  <IssueList
+                    endpoint={`/organizations/${this.props.orgId}/members/me/issues/assigned/`}
+                    query={{
+                      statsPeriod: '24h',
+                      per_page: 10,
+                      status: 'unresolved',
+                    }}
+                    pagination={false}
+                    renderEmpty={() => <div>{t('No issues have been assigned to you.')}</div>}
+                    ref="issueList"
+                    showActions={false}
+                    params={{orgId:this.props.orgId}} />
+                </SidebarPanel>
             }
             {this.state.showPanel && this.state.currentPanel == 'bookmarks' &&
                 <SidebarPanel title={t('My Bookmarks')}
-                              hidePanel={()=>this.hidePanel()}/>
+                              hidePanel={()=>this.hidePanel()}>
+                  <IssueList
+                    endpoint={`/organizations/${this.props.orgId}/members/me/issues/bookmarked/`}
+                    query={{
+                      statsPeriod: '24h',
+                      per_page: 10,
+                      status: 'unresolved',
+                    }}
+                    pagination={false}
+                    renderEmpty={() => <div>{t('No new issues have been seen in the last week.')}</div>}
+                    ref="issueList"
+                    showActions={false}
+                    params={{orgId:this.props.orgId}} />
+                </SidebarPanel>
             }
             {this.state.showPanel && this.state.currentPanel == 'history' &&
                 <SidebarPanel title={t('Recently Viewed')}
-                              hidePanel={()=>this.hidePanel()}/>
+                              hidePanel={()=>this.hidePanel()}>
+                  <IssueList
+                    endpoint={`/organizations/${this.props.orgId}/members/me/issues/viewed/`}
+                    query={{
+                      statsPeriod: '24h',
+                      per_page: 10,
+                      status: 'unresolved',
+                    }}
+                    pagination={false}
+                    renderEmpty={() => <div>{t('No recently viewed issues.')}</div>}
+                    ref="issueList"
+                    showActions={false}
+                    params={{orgId:this.props.orgId}} />
+                </SidebarPanel>
             }
             {this.state.showPanel && this.state.currentPanel == 'statusupdate' &&
                 <SidebarPanel title={t('Recent status updates')}
