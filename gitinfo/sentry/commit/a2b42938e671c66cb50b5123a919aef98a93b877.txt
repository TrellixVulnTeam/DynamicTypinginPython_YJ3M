commit a2b42938e671c66cb50b5123a919aef98a93b877
Author: Chris Fuller <cfuller@sentry.io>
Date:   Wed Mar 25 13:03:01 2020 -0400

    fix(workflow): Read aggregate from incident, not alert rule (#17622)
    
    * Reading aggregate from incident directly instead of alert rule

diff --git a/src/sentry/static/sentry/app/views/alerts/details/body.tsx b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
index 28d28d9967..0e810bf3b9 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/body.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
@@ -64,7 +64,7 @@ export default class DetailsBody extends React.Component<Props> {
       fields: ['issue', 'count(id)', 'count_unique(user.id)'],
       widths: ['400', '200', '-1'],
       orderby:
-        incident.alertRule?.aggregation === AlertRuleAggregations.UNIQUE_USERS
+        incident.aggregation === AlertRuleAggregations.UNIQUE_USERS
           ? '-count_unique_user_id'
           : '-count_id',
       query: (incident && incident.query) || '',
@@ -160,7 +160,7 @@ export default class DetailsBody extends React.Component<Props> {
         <ChartWrapper>
           {incident && stats ? (
             <Chart
-              aggregation={incident.alertRule?.aggregation}
+              aggregation={incident.aggregation}
               data={stats.eventStats.data}
               detected={incident.dateDetected}
               closed={incident.dateClosed}
diff --git a/src/sentry/static/sentry/app/views/alerts/types.tsx b/src/sentry/static/sentry/app/views/alerts/types.tsx
index 049746184f..f9be166fe7 100644
--- a/src/sentry/static/sentry/app/views/alerts/types.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/types.tsx
@@ -1,4 +1,7 @@
-import {IncidentRule} from 'app/views/settings/incidentRules/types';
+import {
+  AlertRuleAggregations,
+  IncidentRule,
+} from 'app/views/settings/incidentRules/types';
 import {User, Repository} from 'app/types';
 
 type Data = [number, {count: number}[]][];
@@ -20,6 +23,7 @@ export type Incident = {
   title: string;
   hasSeen: boolean;
   alertRule: IncidentRule;
+  aggregation: AlertRuleAggregations;
 };
 
 export type IncidentStats = {
