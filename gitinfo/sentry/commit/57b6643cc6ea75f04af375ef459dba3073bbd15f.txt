commit 57b6643cc6ea75f04af375ef459dba3073bbd15f
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Sep 15 13:18:40 2013 +0900

    Basic tests and working django implementation

diff --git a/src/sentry/nodestore/base.py b/src/sentry/nodestore/base.py
index 5ed647c6d2..0ba971a1c4 100644
--- a/src/sentry/nodestore/base.py
+++ b/src/sentry/nodestore/base.py
@@ -10,16 +10,16 @@ from __future__ import absolute_import
 
 
 class NodeStorage(object):
-    def get(self, src):
+    def get(self, id):
         raise NotImplementedError
 
-    def get_multi(self, src_list):
+    def get_multi(self, id_list):
         return dict(
-            (src, self.get(src))
-            for src in src_list
+            (id, self.get(id))
+            for id in id_list
         )
 
-    def set(self, src, data, timestamp=None):
+    def set(self, id, data, timestamp=None):
         raise NotImplementedError
 
     def set_multi(self, values):
diff --git a/src/sentry/nodestore/django/backend.py b/src/sentry/nodestore/django/backend.py
index 4b81859d7c..259e42ba73 100644
--- a/src/sentry/nodestore/django/backend.py
+++ b/src/sentry/nodestore/django/backend.py
@@ -17,16 +17,22 @@ from .models import Node
 
 
 class DjangoNodeStorage(NodeStorage):
-    def get(self, src):
-        return Node.objects.get(src=src)
-
-    def get_multi(self, src_list):
-        return Node.objects.get(src__in=src_list)
+    def get(self, id):
+        try:
+            return Node.objects.get(id=id).data
+        except Node.DoesNotExist:
+            return None
+
+    def get_multi(self, id_list):
+        return dict(
+            (n.id, n.data)
+            for n in Node.objects.filter(id__in=id_list)
+        )
 
-    def set(self, src, data, timestamp=None):
+    def set(self, id, data, timestamp=None):
         create_or_update(
             Node,
-            src=src,
+            id=id,
             data=data,
             timestamp=timestamp or timezone.now()
         )
diff --git a/tests/sentry/nodestore/__init__.py b/tests/sentry/nodestore/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/nodestore/django/__init__.py b/tests/sentry/nodestore/django/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/nodestore/django/backend/__init__.py b/tests/sentry/nodestore/django/backend/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/nodestore/django/backend/tests.py b/tests/sentry/nodestore/django/backend/tests.py
new file mode 100644
index 0000000000..6c16e35f6a
--- /dev/null
+++ b/tests/sentry/nodestore/django/backend/tests.py
@@ -0,0 +1,44 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from sentry.nodestore.django.models import Node
+from sentry.nodestore.django.backend import DjangoNodeStorage
+from sentry.testutils import TestCase
+
+
+class DjangoNodeStorageTest(TestCase):
+    def setUp(self):
+        self.ns = DjangoNodeStorage()
+
+    def test_get(self):
+        node = Node.objects.create(
+            id='d2502ebbd7df41ceba8d3275595cac33',
+            data={
+                'foo': 'bar',
+            }
+        )
+
+        result = self.ns.get('d2502ebbd7df41ceba8d3275595cac33')
+        assert result == node.data
+
+    def test_get_multi(self):
+        nodes = [
+            Node.objects.create(
+                id='d2502ebbd7df41ceba8d3275595cac33',
+                data={
+                    'foo': 'bar',
+                }
+            ),
+            Node.objects.create(
+                id='5394aa025b8e401ca6bc3ddee3130edc',
+                data={
+                    'foo': 'baz',
+                }
+            ),
+        ]
+
+        result = self.ns.get_multi([
+            'd2502ebbd7df41ceba8d3275595cac33', '5394aa025b8e401ca6bc3ddee3130edc'
+        ])
+        assert result == dict((n.id, n.data) for n in nodes)
