commit c1da18c27d77fcb2beb6ef176eb2d87bafdc177a
Author: David Cramer <dcramer@gmail.com>
Date:   Sun May 10 14:43:04 2015 -0700

    Add all organization teams to endpoint

diff --git a/src/sentry/api/endpoints/organization_teams.py b/src/sentry/api/endpoints/organization_teams.py
index f10401763a..ae4975a3bf 100644
--- a/src/sentry/api/endpoints/organization_teams.py
+++ b/src/sentry/api/endpoints/organization_teams.py
@@ -32,10 +32,10 @@ class OrganizationTeamsEndpoint(OrganizationEndpoint):
             if teams[0].organization != organization:
                 return Response(status=403)
         else:
-            teams = Team.objects.get_for_user(
+            teams = list(Team.objects.filter(
                 organization=organization,
-                user=request.user,
-            )
+            ).order_by('name'))
+
         return Response(serialize(teams, request.user))
 
     def post(self, request, organization):
diff --git a/tests/sentry/api/endpoints/test_organization_teams.py b/tests/sentry/api/endpoints/test_organization_teams.py
index d4f488824e..46b9a7e3d3 100644
--- a/tests/sentry/api/endpoints/test_organization_teams.py
+++ b/tests/sentry/api/endpoints/test_organization_teams.py
@@ -9,17 +9,31 @@ from sentry.testutils import APITestCase
 
 
 class OrganizationTeamsListTest(APITestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-api-0-organization-teams', args=[self.organization.slug])
-
     def test_simple(self):
-        team = self.create_team()  # force creation
-        self.login_as(user=self.user)
-        response = self.client.get(self.path)
-        assert response.status_code == 200
-        assert len(response.data) == 1
-        assert response.data[0]['id'] == str(team.id)
+        user = self.create_user()
+        org = self.create_organization(owner=self.user)
+        team1 = self.create_team(organization=org, name='foo')
+        team2 = self.create_team(organization=org, name='bar')
+
+        self.create_member(
+            organization=org,
+            user=user,
+            has_global_access=False,
+            teams=[team1],
+        )
+
+        path = reverse('sentry-api-0-organization-teams', args=[org.slug])
+
+        self.login_as(user=user)
+
+        response = self.client.get(path)
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 2
+        assert response.data[0]['id'] == str(team2.id)
+        assert not response.data[0]['isMember']
+        assert response.data[1]['id'] == str(team1.id)
+        assert response.data[1]['isMember']
 
 
 class OrganizationTeamsCreateTest(APITestCase):
