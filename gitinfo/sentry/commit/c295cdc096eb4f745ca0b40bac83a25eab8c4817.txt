commit c295cdc096eb4f745ca0b40bac83a25eab8c4817
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 12 13:05:26 2015 -0800

    Add email notifications for assignment

diff --git a/src/sentry/models/activity.py b/src/sentry/models/activity.py
index 99f1e5bb31..b2ca036753 100644
--- a/src/sentry/models/activity.py
+++ b/src/sentry/models/activity.py
@@ -79,71 +79,73 @@ class Activity(Model):
             if self.event:
                 self.event.update(num_comments=F('num_comments') + 1)
 
-    def send_notification(self):
-        from sentry.models import User, UserOption, ProjectOption
-        from sentry.utils.email import MessageBuilder, group_id_to_email
+    def get_recipients(self):
+        from sentry.models import UserOption
 
-        if self.type != Activity.NOTE or not self.group:
-            return
+        if self.type == Activity.ASSIGNED:
+            # dont email the user if they took the action
+            send_to = [self.data['assignee']]
 
-        # TODO(dcramer): some of this logic is duplicated in NotificationPlugin
-        # fetch access group members
-        user_id_list = set(
-            User.objects.filter(
-                accessgroup__projects=self.project,
-                is_active=True
-            ).exclude(
-                id=self.user_id,
-            ).values_list('id', flat=True)
-        )
+        else:
+            member_set = self.project.member_set.values_list('user', flat=True)
+
+            if not member_set:
+                return []
+
+            disabled = set(UserOption.objects.filter(
+                user__in=member_set,
+                key='subscribe_notes',
+                value=u'0',
+            ).values_list('user', flat=True))
+
+            send_to = [u for u in member_set if u not in disabled]
 
-        if self.project.team:
-            # fetch team members
-            user_id_list |= set(
-                u_id for u_id in self.project.team.member_set.exclude(
-                    user__id=self.user_id,
-                ).values_list('user', flat=True)
-            )
+        # never include the actor
+        send_to = [u for u in member_set if u != self.user_id]
 
-        if not user_id_list:
+        return send_to
+
+    def send_notification(self):
+        from sentry.utils.email import MessageBuilder, group_id_to_email
+
+        if not self.group_id:
             return
 
-        disabled = set(UserOption.objects.filter(
-            user__in=user_id_list,
-            key='subscribe_notes',
-            value=u'0',
-        ).values_list('user', flat=True))
+        if self.type not in (Activity.NOTE, Activity.ASSIGNED):
+            return
 
-        send_to = filter(lambda u_id: u_id not in disabled, user_id_list)
+        send_to = self.get_recipients()
 
         if not send_to:
             return
 
         author = self.user.first_name or self.user.username
 
-        subject_prefix = ProjectOption.objects.get_value(
-            self.project, 'subject_prefix', settings.EMAIL_SUBJECT_PREFIX)
+        subject_prefix = self.project.get_option(
+            'subject_prefix', settings.EMAIL_SUBJECT_PREFIX)
         if subject_prefix:
             subject_prefix = subject_prefix.rstrip() + ' '
 
         subject = '%s%s' % (subject_prefix, self.group.get_email_subject())
 
         context = {
-            'text': self.data['text'],
+            'data': self.data,
             'author': author,
             'group': self.group,
             'link': self.group.get_absolute_url(),
         }
 
         headers = {
-            'X-Sentry-Reply-To': group_id_to_email(self.group.pk),
+            'X-Sentry-Reply-To': group_id_to_email(self.group.id),
         }
 
+        template_name = self.get_type_display()
+
         msg = MessageBuilder(
             subject=subject,
             context=context,
-            template='sentry/emails/new_note.txt',
-            html_template='sentry/emails/new_note.html',
+            template='sentry/emails/activity/{}.txt'.format(template_name),
+            html_template='sentry/emails/activity/{}.html'.format(template_name),
             headers=headers,
             reference=self,
             reply_reference=self.group,
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index e96d100561..b9a81c7285 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -194,6 +194,16 @@ class Project(Model):
 
         return ProjectOption.objects.unset_value(self, *args, **kwargs)
 
+    @property
+    def member_set(self):
+        from sentry.models import OrganizationMember
+
+        return OrganizationMember.objects.filter(
+            Q(teams=self.team) | Q(has_global_access=True),
+            user__is_active=True,
+            organization=self.organization,
+        )
+
     def has_access(self, user, access=None):
         from sentry.models import OrganizationMember
 
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 068835ff10..dc3929aaa4 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -80,11 +80,9 @@ class NotificationPlugin(Plugin):
             members__is_active=True,
         ).exclude(members__in=disabled).values_list('members', flat=True))
 
-        if project.team:
-            # fetch team members
-            member_set |= set(project.team.member_set.exclude(
-                user__in=disabled,
-            ).values_list('user', flat=True))
+        member_set |= set(project.member_set.exclude(
+            user__in=disabled,
+        ).values_list('user', flat=True))
 
         # determine members default settings
         members_to_check = set(u for u in member_set if u not in alert_settings)
diff --git a/src/sentry/templates/sentry/emails/activity/assigned.html b/src/sentry/templates/sentry/emails/activity/assigned.html
new file mode 100644
index 0000000000..b27383c817
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/activity/assigned.html
@@ -0,0 +1,16 @@
+{% extends "sentry/emails/base.html" %}
+
+{% block header %}
+  <a href="{{ link }}" class="btn">View on Sentry</a>
+  <h1>Sentry</h1>
+{% endblock %}
+
+{% block inner %}
+  {% include "sentry/emails/group_header.html" %}
+
+  <h2>Assigned</h2>
+
+  <blockquote>
+    {{ author }} assigned this event to you.
+  </blockquote>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/activity/assigned.txt b/src/sentry/templates/sentry/emails/activity/assigned.txt
new file mode 100644
index 0000000000..65ba6fc53c
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/activity/assigned.txt
@@ -0,0 +1,14 @@
+{% spaceless %}
+{% autoescape off %}
+{{ author }} assigned this event to you.
+
+
+Details
+-------
+
+{{ group.title }}
+
+{{ link }}
+
+{% endautoescape %}
+{% endspaceless %}
diff --git a/src/sentry/templates/sentry/emails/activity/note.html b/src/sentry/templates/sentry/emails/activity/note.html
new file mode 100644
index 0000000000..77ef21c401
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/activity/note.html
@@ -0,0 +1,16 @@
+{% extends "sentry/emails/base.html" %}
+
+{% block header %}
+  <a href="{{ link }}" class="btn">View on Sentry</a>
+  <h1>Sentry</h1>
+{% endblock %}
+
+{% block inner %}
+  {% include "sentry/emails/group_header.html" %}
+
+  <h2>New Note by <span class="highlight">{{ author }}</span></h2>
+
+  <blockquote>
+	  {{ text|urlize|linebreaks }}
+  </blockquote>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/new_note.txt b/src/sentry/templates/sentry/emails/activity/note.txt
similarity index 100%
rename from src/sentry/templates/sentry/emails/new_note.txt
rename to src/sentry/templates/sentry/emails/activity/note.txt
diff --git a/src/sentry/templates/sentry/emails/group_header.html b/src/sentry/templates/sentry/emails/group_header.html
new file mode 100644
index 0000000000..0b2ab06b1d
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/group_header.html
@@ -0,0 +1,28 @@
+{% load sentry_helpers %}
+
+{% url 'sentry-group' group.organization.slug group.project.slug group.id as group_link %}
+{% url 'sentry-stream' group.organization.slug group.project.slug as project_link %}
+<div class="event level-{{ group.get_level_display }}">
+  <div class="count">
+    <span title="{{ group.times_seen }}">{{ group.times_seen|small_count }}</span>
+  </div>
+  <div class="details">
+    <h3>
+      <a href="{% absolute_uri group_link %}">
+        {{ group.title }}
+      </a>
+    </h3>
+    <p class="message">
+      {{ group.message_short }}
+    </p>
+    <div class="meta">
+      <span class="last-seen pretty-date">{{ group.last_seen }} UTC</span>
+      {% if group.avg_time_spent %}
+        <span class="time-spent">{{ group.avg_time_spent|duration }}</span>
+      {% endif %}
+      <span class="tag">
+        <a href="{% absolute_uri project_link %}">{{ group.project.name }}</a>
+      </span>
+    </div>
+  </div>
+</div>
diff --git a/src/sentry/templates/sentry/emails/new_note.html b/src/sentry/templates/sentry/emails/new_note.html
deleted file mode 100644
index bc0be53765..0000000000
--- a/src/sentry/templates/sentry/emails/new_note.html
+++ /dev/null
@@ -1,45 +0,0 @@
-{% extends "sentry/emails/base.html" %}
-
-{% load i18n %}
-{% load sentry_helpers %}
-{% load sentry_plugins %}
-
-{% block header %}
-    <a href="{{ link }}" class="btn">View on Sentry</a>
-    <h1>Sentry</h1>
-{% endblock %}
-
-{% block inner %}
-    {% url 'sentry-group' group.organization.slug group.project.slug group.id as group_link %}
-    {% url 'sentry-stream' group.organization.slug group.project.slug as project_link %}
-    <div class="event level-{{ group.get_level_display }}">
-        <div class="count">
-            <span title="{{ group.times_seen }}">{{ group.times_seen|small_count }}</span>
-        </div>
-        <div class="details">
-            <h3>
-                <a href="{% absolute_uri group_link %}">
-                    {{ group.title }}
-                </a>
-            </h3>
-            <p class="message">
-                {{ group.message_short }}
-            </p>
-            <div class="meta">
-                <span class="last-seen pretty-date">{{ group.last_seen }} UTC</span>
-                {% if group.avg_time_spent %}
-                    <span class="time-spent">{{ group.avg_time_spent|duration }}</span>
-                {% endif %}
-                <span class="tag">
-                    <a href="{% absolute_uri project_link %}">{{ group.project.name }}</a>
-                </span>
-            </div>
-        </div>
-    </div>
-
-    <h2>New Note by <span class="highlight">{{ author }}</span></h2>
-
-    <blockquote>
-        {{ text|urlize|linebreaks }}
-    </blockquote>
-{% endblock %}
