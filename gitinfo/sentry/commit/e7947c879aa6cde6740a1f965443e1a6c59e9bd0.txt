commit e7947c879aa6cde6740a1f965443e1a6c59e9bd0
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Mar 23 13:05:53 2015 -0700

    Ensure tests coverage non-instances

diff --git a/tests/sentry/buffer/base/tests.py b/tests/sentry/buffer/base/tests.py
index 058b9bb7bd..aff5378020 100644
--- a/tests/sentry/buffer/base/tests.py
+++ b/tests/sentry/buffer/base/tests.py
@@ -19,7 +19,7 @@ class BufferTest(TestCase):
     def test_incr_delays_task(self, process_incr):
         model = mock.Mock()
         columns = {'times_seen': 1}
-        filters = {'pk': 1}
+        filters = {'id': 1}
         self.buf.incr(model, columns, filters)
         kwargs = dict(model=model, columns=columns, filters=filters, extra=None)
         process_incr.apply_async.assert_called_once_with(
@@ -28,17 +28,17 @@ class BufferTest(TestCase):
     def test_process_saves_data(self):
         group = Group.objects.create(project=Project(id=1))
         columns = {'times_seen': 1}
-        filters = {'pk': group.pk}
+        filters = {'id': group.id, 'project_id': 1}
         self.buf.process(Group, columns, filters)
-        assert Group.objects.get(pk=group.pk).times_seen == group.times_seen + 1
+        assert Group.objects.get(id=group.id).times_seen == group.times_seen + 1
 
     def test_process_saves_extra(self):
         group = Group.objects.create(project=Project(id=1))
         columns = {'times_seen': 1}
-        filters = {'pk': group.pk}
+        filters = {'id': group.id, 'project_id': 1}
         # strip micrseconds because MySQL doesn't seem to handle them correctly
         the_date = (timezone.now() + timedelta(days=5)).replace(microsecond=0)
         self.buf.process(Group, columns, filters, {'last_seen': the_date})
-        group_ = Group.objects.get(pk=group.pk)
+        group_ = Group.objects.get(id=group.id)
         assert group_.times_seen == group.times_seen + 1
         assert group_.last_seen.replace(microsecond=0) == the_date
