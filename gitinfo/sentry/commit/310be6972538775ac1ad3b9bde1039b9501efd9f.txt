commit 310be6972538775ac1ad3b9bde1039b9501efd9f
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Tue Apr 7 14:40:23 2020 -0700

    ref(onboarding): Remove install prompt banner (#18068)

diff --git a/src/sentry/static/sentry/app/views/organizationDetails/index.jsx b/src/sentry/static/sentry/app/views/organizationDetails/index.jsx
index 5f7e09a209..1d4242b1b5 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails/index.jsx
@@ -14,9 +14,6 @@ import NarrowLayout from 'app/components/narrowLayout';
 import OrganizationContext from 'app/views/organizationContext';
 import SentryTypes from 'app/sentryTypes';
 
-import InstallPromptBanner from './installPromptBanner';
-import LightWeightInstallPromptBanner from './lightWeightInstallPromptBanner';
-
 class DeletionInProgress extends Component {
   static propTypes = {
     organization: SentryTypes.Organization.isRequired,
@@ -128,18 +125,10 @@ class DeletionPending extends Component {
 }
 
 class OrganizationDetailsBody extends Component {
-  static propTypes = {
-    detailed: PropTypes.bool,
-  };
-
   static contextTypes = {
     organization: SentryTypes.Organization,
   };
 
-  static defaultProps = {
-    detailed: true,
-  };
-
   render() {
     const {organization} = this.context;
 
@@ -152,12 +141,6 @@ class OrganizationDetailsBody extends Component {
     }
     return (
       <React.Fragment>
-        {organization &&
-          (this.props.detailed ? (
-            <InstallPromptBanner organization={organization} />
-          ) : (
-            <LightWeightInstallPromptBanner organization={organization} />
-          ))}
         <ErrorBoundary>{this.props.children}</ErrorBoundary>
         <Footer />
       </React.Fragment>
diff --git a/src/sentry/static/sentry/app/views/organizationDetails/installPromptBanner.jsx b/src/sentry/static/sentry/app/views/organizationDetails/installPromptBanner.jsx
deleted file mode 100644
index 1f0487f777..0000000000
--- a/src/sentry/static/sentry/app/views/organizationDetails/installPromptBanner.jsx
+++ /dev/null
@@ -1,104 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from '@emotion/styled';
-
-import {analytics} from 'app/utils/analytics';
-import {t} from 'app/locale';
-import Alert from 'app/components/alert';
-import SentryTypes from 'app/sentryTypes';
-import getPlatformName from 'app/utils/getPlatformName';
-import withConfig from 'app/utils/withConfig';
-
-class InstallPromptBanner extends React.Component {
-  static propTypes = {
-    organization: PropTypes.object,
-    config: SentryTypes.Config,
-    projects: PropTypes.arrayOf(SentryTypes.Project),
-  };
-
-  componentDidMount() {
-    const {href} = window.location;
-    const {organization} = this.props;
-    analytics('install_prompt.banner_viewed', {
-      org_id: parseInt(organization.id, 10),
-      page: href,
-    });
-  }
-
-  sentFirstEvent() {
-    const {config} = this.props;
-    // if projects were provided use them, otherwise assume they are in the detailed organization
-    const projects = this.props.projects || this.props.organization.projects;
-    return !!projects.find(p => p.firstEvent) || !!config.sentFirstEvent;
-  }
-
-  get url() {
-    const {organization} = this.props;
-
-    // if project with a valid platform then go straight to instructions
-    const projects = this.props.projects || organization.projects;
-    const projectCount = projects.length;
-    if (projectCount > 0 && getPlatformName(projects[projectCount - 1].platform)) {
-      return `/onboarding/${organization.slug}/get-started/`;
-    }
-
-    // if no projects - redirect back to onboarding flow
-    return `/onboarding/${organization.slug}/`;
-  }
-
-  recordAnalytics() {
-    const {href} = window.location;
-    const {organization} = this.props;
-    analytics('install_prompt.banner_clicked', {
-      org_id: parseInt(organization.id, 10),
-      page: href,
-    });
-  }
-
-  inSetupFlow() {
-    const path = window.location.pathname;
-
-    return (
-      path.indexOf('/getting-started/') !== -1 ||
-      path.indexOf('/onboarding/') !== -1 ||
-      path.indexOf('/projects/new/') !== -1 ||
-      path.indexOf('/try-business/') !== -1
-    );
-  }
-
-  render() {
-    const sentFirstEvent = this.sentFirstEvent();
-    const hideBanner = sentFirstEvent || this.inSetupFlow();
-
-    return (
-      <React.Fragment>
-        {!hideBanner && (
-          <StyledAlert type="warning" icon="icon-circle-exclamation" system="system">
-            <a onClick={() => this.recordAnalytics()} href={this.url}>
-              {t(
-                "You're almost there! Start capturing errors with just a few lines of code."
-              )}
-            </a>
-          </StyledAlert>
-        )}
-      </React.Fragment>
-    );
-  }
-}
-
-const StyledAlert = styled(Alert)`
-  padding: ${p => p.theme.grid}px ${p => p.theme.grid * 2}px;
-  position: relative;
-  margin: 0;
-  padding-right: ${p => p.theme.grid * 4}px;
-  a {
-    color: #2f2936;
-    border-bottom: 1px dotted black;
-  }
-  use {
-    color: black;
-  }
-`;
-
-export {InstallPromptBanner};
-export default withConfig(InstallPromptBanner);
diff --git a/src/sentry/static/sentry/app/views/organizationDetails/lightWeightInstallPromptBanner.jsx b/src/sentry/static/sentry/app/views/organizationDetails/lightWeightInstallPromptBanner.jsx
deleted file mode 100644
index 5d9c220a68..0000000000
--- a/src/sentry/static/sentry/app/views/organizationDetails/lightWeightInstallPromptBanner.jsx
+++ /dev/null
@@ -1,24 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import InstallPromptBanner from 'app/views/organizationDetails/installPromptBanner';
-import SentryTypes from 'app/sentryTypes';
-import withProjects from 'app/utils/withProjects';
-
-class LightWeightInstallPromptBanner extends React.Component {
-  static propTypes = {
-    organization: SentryTypes.Organization,
-    projects: PropTypes.arrayOf(SentryTypes.Team),
-    loadingProjects: PropTypes.bool,
-  };
-
-  render() {
-    const {projects, loadingProjects} = this.props;
-    if (loadingProjects) {
-      return null;
-    }
-    return <InstallPromptBanner {...this.props} projects={projects} />;
-  }
-}
-
-export default withProjects(LightWeightInstallPromptBanner);
diff --git a/tests/js/spec/views/organizationDetails/installPromptBanner.spec.jsx b/tests/js/spec/views/organizationDetails/installPromptBanner.spec.jsx
deleted file mode 100644
index 60bc427930..0000000000
--- a/tests/js/spec/views/organizationDetails/installPromptBanner.spec.jsx
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-
-import {shallow} from 'sentry-test/enzyme';
-import {InstallPromptBanner} from 'app/views/organizationDetails/installPromptBanner';
-
-describe('InstallPromptBanner', function() {
-  it('renders', function() {
-    const project1 = TestStubs.Project();
-    const project2 = TestStubs.Project({firstEvent: null});
-    const organization = TestStubs.Organization({projects: [project1, project2]});
-    const wrapper = shallow(
-      <InstallPromptBanner config={{}} organization={organization} />,
-      TestStubs.routerContext()
-    );
-    expect(wrapper.find('StyledAlert').exists()).toBe(true);
-    expect(wrapper.find('a').text()).toContain('Start capturing errors');
-  });
-
-  it('does not render if first event sent', function() {
-    const project1 = TestStubs.Project();
-    const project2 = TestStubs.Project({firstEvent: '2018-03-18'});
-    const organization = TestStubs.Organization({projects: [project1, project2]});
-    const wrapper = shallow(
-      <InstallPromptBanner organization={organization} />,
-      TestStubs.routerContext()
-    );
-    expect(wrapper.find('StyledAlert').exists()).toBe(false);
-  });
-
-  it('renders using projects props', function() {
-    const project1 = TestStubs.Project();
-    const project2 = TestStubs.Project({firstEvent: '2018-03-18'});
-    const organization = TestStubs.Organization();
-    const wrapper = shallow(
-      <InstallPromptBanner
-        config={{}}
-        organization={organization}
-        projects={[project1, project2]}
-      />,
-      TestStubs.routerContext()
-    );
-    expect(wrapper.find('StyledAlert').exists()).toBe(false);
-  });
-});
diff --git a/tests/js/spec/views/organizationDetails/lightWeightInstallPromptBanner.spec.jsx b/tests/js/spec/views/organizationDetails/lightWeightInstallPromptBanner.spec.jsx
deleted file mode 100644
index a65468e1cd..0000000000
--- a/tests/js/spec/views/organizationDetails/lightWeightInstallPromptBanner.spec.jsx
+++ /dev/null
@@ -1,22 +0,0 @@
-import React from 'react';
-
-import {mountWithTheme} from 'sentry-test/enzyme';
-import LightWeightInstallPromptBanner from 'app/views/organizationDetails/lightWeightInstallPromptBanner';
-import ProjectsStore from 'app/stores/projectsStore';
-
-describe('LightWeightInstallPromptBanner', function() {
-  it('renders', async function() {
-    const project1 = TestStubs.Project();
-    const project2 = TestStubs.Project({firstEvent: null});
-    const organization = TestStubs.Organization({slug: 'org-slug'});
-    ProjectsStore.loadInitialData([project1, project2]);
-    const wrapper = mountWithTheme(
-      <LightWeightInstallPromptBanner organization={organization} />,
-      TestStubs.routerContext()
-    );
-    await tick();
-    wrapper.update();
-    expect(wrapper.find('StyledAlert').exists()).toBe(true);
-    expect(wrapper.find('a').text()).toContain('Start capturing errors');
-  });
-});
diff --git a/tests/js/spec/views/organizationDetails/organizationsDetails.spec.jsx b/tests/js/spec/views/organizationDetails/organizationsDetails.spec.jsx
index 42d1368486..1fa7c9dabb 100644
--- a/tests/js/spec/views/organizationDetails/organizationsDetails.spec.jsx
+++ b/tests/js/spec/views/organizationDetails/organizationsDetails.spec.jsx
@@ -7,7 +7,7 @@ import OrganizationDetails, {
 import OrganizationStore from 'app/stores/organizationStore';
 import ProjectsStore from 'app/stores/projectsStore';
 
-let tree;
+let wrapper;
 
 describe('OrganizationDetails', function() {
   beforeEach(async function() {
@@ -28,7 +28,7 @@ describe('OrganizationDetails', function() {
 
   afterEach(function() {
     // necessary to unsubscribe successfully from org store
-    tree.unmount();
+    wrapper.unmount();
   });
 
   describe('render()', function() {
@@ -44,18 +44,18 @@ describe('OrganizationDetails', function() {
             },
           }),
         });
-        tree = mountWithTheme(
+        wrapper = mountWithTheme(
           <OrganizationDetails params={{orgId: 'org-slug'}} location={{}} routes={[]} />,
           TestStubs.routerContext()
         );
         await tick();
         await tick();
-        tree.update();
-        expect(tree.text()).toContain('Deletion Scheduled');
-        expect(tree.text()).toContain(
+        wrapper.update();
+        expect(wrapper.text()).toContain('Deletion Scheduled');
+        expect(wrapper.text()).toContain(
           'Would you like to cancel this process and restore the organization back to the original state?'
         );
-        expect(tree.find('button[aria-label="Restore Organization"]')).toHaveLength(1);
+        expect(wrapper.find('button[aria-label="Restore Organization"]')).toHaveLength(1);
       });
       it('should render a restoration prompt without action for members', async function() {
         MockApiClient.addMockResponse({
@@ -69,20 +69,20 @@ describe('OrganizationDetails', function() {
             },
           }),
         });
-        tree = mountWithTheme(
+        wrapper = mountWithTheme(
           <OrganizationDetails params={{orgId: 'org-slug'}} location={{}} routes={[]} />,
           TestStubs.routerContext()
         );
         await tick();
         await tick();
-        tree.update();
-        expect(tree.text()).toContain(
+        wrapper.update();
+        expect(wrapper.text()).toContain(
           [
             'The org-slug organization is currently scheduled for deletion.',
             'If this is a mistake, contact an organization owner and ask them to restore this organization.',
           ].join('')
         );
-        expect(tree.find('button[aria-label="Restore Organization"]')).toHaveLength(0);
+        expect(wrapper.find('button[aria-label="Restore Organization"]')).toHaveLength(0);
       });
     });
 
@@ -101,17 +101,17 @@ describe('OrganizationDetails', function() {
       });
 
       it('should render a deletion in progress prompt', async function() {
-        tree = mountWithTheme(
+        wrapper = mountWithTheme(
           <OrganizationDetails params={{orgId: 'org-slug'}} location={{}} routes={[]} />,
           TestStubs.routerContext()
         );
         await tick();
         await tick();
-        tree.update();
-        expect(tree.text()).toContain(
+        wrapper.update();
+        expect(wrapper.text()).toContain(
           'The org-slug organization is currently in the process of being deleted from Sentry'
         );
-        expect(tree.find('button[aria-label="Restore Organization"]')).toHaveLength(0);
+        expect(wrapper.find('button[aria-label="Restore Organization"]')).toHaveLength(0);
       });
     });
   });
@@ -131,7 +131,7 @@ describe('OrganizationDetails', function() {
       url: '/organizations/org-slug/projects/',
       body: [TestStubs.Project()],
     });
-    tree = mountWithTheme(
+    wrapper = mountWithTheme(
       <LightWeightOrganizationDetails
         params={{orgId: 'org-slug'}}
         location={{}}
@@ -145,9 +145,9 @@ describe('OrganizationDetails', function() {
     await tick();
     await tick();
     await tick();
-    tree.update();
+    wrapper.update();
     expect(getTeamsMock).toHaveBeenCalled();
     expect(getProjectsMock).toHaveBeenCalled();
-    expect(tree.find('LightWeightInstallPromptBanner')).toHaveLength(1);
+    expect(wrapper.find('OrganizationContext').prop('detailed')).toBe(false);
   });
 });
