commit 1d30a327399e9f9c7a3027192c259d1133195959
Author: Mark Story <mark@sentry.io>
Date:   Fri Nov 29 16:42:00 2019 -0500

    fix(discover) Enable wildcard searches on stack fields (#15867)
    
    Use the `LIKE` and `NOT LIKE` operators for doing wildcard searches on
    the error array fields. These operators are converted into `arrayExists`
    and `arrayAll` expressions in clickhouse which is much better than
    a `match()` expression.

diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index 4781b2091c..2331ec2a17 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -566,7 +566,14 @@ def convert_search_filter_to_snuba_query(search_filter):
             operator = "=" if search_filter.operator == "!=" else "!="
             # make message search case insensitive
             return [["positionCaseInsensitive", ["message", "'%s'" % (value,)]], operator, 0]
-
+    elif (
+        name.startswith("stack.") or name.startswith("error.")
+    ) and search_filter.value.is_wildcard():
+        # Escape and convert meta characters for LIKE expressions.
+        raw_value = search_filter.value.raw_value
+        like_value = raw_value.replace("%", "\\%").replace("_", "\\_").replace("*", "%")
+        operator = "LIKE" if search_filter.operator == "=" else "NOT LIKE"
+        return [name, operator, like_value]
     else:
         value = (
             int(to_timestamp(value)) * 1000
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index c4e5f790a8..d5b11a68e0 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -960,6 +960,17 @@ class GetSnubaQueryArgsTest(TestCase):
             [["match", ["release", "'(?i)^\\\\.*$'"]], "=", 1]
         ]
 
+    def test_wildcard_array_field(self):
+        filter = get_filter(
+            "error.value:Deadlock* stack.filename:*.py stack.abs_path:%APP_DIR%/th_ing*"
+        )
+        assert filter.conditions == [
+            ["error.value", "LIKE", "Deadlock%"],
+            ["stack.filename", "LIKE", "%.py"],
+            ["stack.abs_path", "LIKE", "\\%APP\\_DIR\\%/th\\_ing%"],
+        ]
+        assert filter.filter_keys == {}
+
     def test_has(self):
         assert get_filter("has:release").conditions == [[["isNull", ["release"]], "!=", 1]]
 
diff --git a/tests/snuba/api/endpoints/test_organization_events_v2.py b/tests/snuba/api/endpoints/test_organization_events_v2.py
index fd016c4a53..f8b26ac114 100644
--- a/tests/snuba/api/endpoints/test_organization_events_v2.py
+++ b/tests/snuba/api/endpoints/test_organization_events_v2.py
@@ -551,6 +551,24 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
         assert data[0]["transaction"] == "/example"
         assert data[0]["latest_event"] == "b" * 32
 
+    def test_stack_wildcard_condition(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project()
+        data = load_data("javascript")
+        data["timestamp"] = self.min_ago
+        self.store_event(data=data, project_id=project.id)
+
+        with self.feature("organizations:events-v2"):
+            response = self.client.get(
+                self.url,
+                format="json",
+                data={"field": ["stack.filename", "message"], "query": "stack.filename:*.js"},
+            )
+        assert response.status_code == 200, response.content
+        assert len(response.data["data"]) == 1
+        assert response.data["meta"]["message"] == "string"
+
     def test_transaction_event_type(self):
         self.login_as(user=self.user)
 
