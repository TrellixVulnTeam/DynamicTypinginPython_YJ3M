commit f016efde15561fc972d907b79c1e7aaf4da79d5d
Author: Xavier Ordoquy <xordoquy@linovia.com>
Date:   Fri Jan 6 01:11:09 2012 +0100

    Started the sentry_bugzilla plugin and added the site wide configuration for the plugins.

diff --git a/sentry/plugins/sentry_bugzilla/__init__.py b/sentry/plugins/sentry_bugzilla/__init__.py
new file mode 100644
index 0000000000..b2152fb492
--- /dev/null
+++ b/sentry/plugins/sentry_bugzilla/__init__.py
@@ -0,0 +1,7 @@
+"""
+sentry.plugins.sentry_bugzilla
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
diff --git a/sentry/plugins/sentry_bugzilla/models.py b/sentry/plugins/sentry_bugzilla/models.py
new file mode 100644
index 0000000000..4ae0cb9728
--- /dev/null
+++ b/sentry/plugins/sentry_bugzilla/models.py
@@ -0,0 +1,69 @@
+"""
+sentry.plugins.sentry_redmine.models
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+
+from sentry.plugins import GroupActionProvider
+
+from django import forms
+from django.db import models
+from django.template.loader import render_to_string
+from django.template import RequestContext
+
+
+class BugzillaServer(models.Model):
+    url = models.CharField(max_length=128)
+    product = models.CharField(max_length=128)
+
+
+class BugzillaConfigurationForm(forms.ModelForm):
+    class Meta:
+        model = BugzillaServer
+
+
+class BugzillaSubmitForm(forms.Form):
+    subject = forms.CharField(max_length=256)
+    description = forms.CharField()
+    version = forms.CharField(max_length=64)
+
+
+class CreateBugzillaIssue(GroupActionProvider):
+    title = 'Create Bugzilla Issue'
+    slug = 'create-bugzilla-issue'
+    site_config_title = 'Bugzilla'
+
+    @classmethod
+    def global_setting_view(cls, request):
+        """
+        Configure the plugin per project.
+
+        If the request was a POST and the data were processed here then we
+        return True to redirect.
+        Otherwise just return the view to display.
+        """
+        try:
+            instance = BugzillaServer.objects.all()[0]
+        except:
+            instance = None
+        form = BugzillaConfigurationForm(
+            request.POST or None,
+            instance=instance,
+            prefix="bugzilla"
+        )
+        if form.is_valid():
+            form.save()
+            return True
+
+        return render_to_string(
+            'sentry/plugins/bugzilla/site_configuration.html', {
+            'form': form,
+        }, context_instance=RequestContext(request))
+
+    def project_setting_view(self):
+        """
+        Configure the plugin per project.
+        """
+        return None
diff --git a/sentry/plugins/sentry_bugzilla/templates/sentry/plugins/bugzilla/site_configuration.html b/sentry/plugins/sentry_bugzilla/templates/sentry/plugins/bugzilla/site_configuration.html
new file mode 100644
index 0000000000..38b0e69b08
--- /dev/null
+++ b/sentry/plugins/sentry_bugzilla/templates/sentry/plugins/bugzilla/site_configuration.html
@@ -0,0 +1,18 @@
+    {% load i18n %}
+    <form class="form-stacked" action="" method="post">
+        {% csrf_token %}
+        <fieldset>
+            {% for field in form %}
+                <div class="clearfix{% if field.errors %} error{% endif %}">
+                    {{ field.label_tag }}
+                    <div class="input">{{ field }}</div>
+                    {% if field.help_text %}
+                        <span class="help-block">{{ field.help_text }}</span>
+                    {% endif %}
+                </div>
+            {% endfor %}
+        </fieldset>
+        <p class="actions">
+            <button type="submit" class="btn primary">{% trans "Save Changes" %}</button>
+        </p>
+    </form>
diff --git a/sentry/templates/sentry/status.html b/sentry/templates/sentry/status.html
index 3db7604c5b..0d3988efcc 100644
--- a/sentry/templates/sentry/status.html
+++ b/sentry/templates/sentry/status.html
@@ -13,6 +13,9 @@
             <li class="active"><a href="#main">Environment</a></li>
             <li><a href="#packages">Packages</a></li>
             <li><a href="#workers">Workers</a></li>
+            {% for conf in site_configs %}
+            <li><a href="#config_{{conf.slug}}">{{conf.site_config_title|default:conf.title}}</a></li>
+            {% endfor %}
         </ul>
         <div class="tab-content">
             <div id="main" class="active">
@@ -183,6 +186,16 @@
                 </table>
             </div>
             {% endif %}
+            {% for conf in site_configs %}
+            <div id="config_{{conf.slug}}">
+                <div class="page-header">
+                    <div class="page-header">
+                        <h2>{{conf.site_config_title|default:conf.title}} configuration</h2>
+                    </div>
+                    {{ conf.view|safe }}
+                </div>
+            </div>
+            {% endfor %}
         </div>
     </div>
 {% endblock %}
diff --git a/sentry/web/frontend/generic.py b/sentry/web/frontend/generic.py
index 5478f60e66..1705197498 100644
--- a/sentry/web/frontend/generic.py
+++ b/sentry/web/frontend/generic.py
@@ -9,6 +9,7 @@ import pkg_resources
 import sys
 
 from django.core.urlresolvers import reverse
+from django.shortcuts import redirect
 from django.db.models import Sum
 from django.http import HttpResponseRedirect, Http404, HttpResponseNotModified, \
   HttpResponse
@@ -37,6 +38,23 @@ def status(request):
     from sentry.views import View
     from sentry.processors import Processor
 
+    # Deal with the plugins
+    site_configs = []
+    for name, cls in GroupActionProvider.plugins.iteritems():
+        if hasattr(cls, 'global_setting_view'):
+            view = cls.global_setting_view(request)
+            if view is True:
+                return redirect(request.path)
+            item = {
+                'title': cls.title,
+                'slug': cls.slug,
+                'view': view,
+            }
+            for prop in ('site_config_title',):
+                if hasattr(cls, prop):
+                    item[prop] = getattr(cls, prop)
+            site_configs.append(item)
+
     config = []
     for k in sorted(dir(settings)):
         if k == 'KEY':
@@ -69,6 +87,7 @@ def status(request):
         'processors': [(x.__class__.__name__, x.__module__) for x in Processor.handlers.all()],
         'pending_tasks': pending_tasks,
         'worker_status': worker_status,
+        'site_configs': site_configs,
     }, request)
 
 
