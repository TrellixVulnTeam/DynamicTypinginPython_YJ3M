commit 8e1f42206b00aa466daff94e1cc28900e98e668e
Author: Matej Minar <matej.minar@sentry.io>
Date:   Tue May 5 09:53:37 2020 +0200

    fix(ui): Fix double Mac context on event detail page (#18594)
    
    This PR hides device context if the operating system is macOS and the device is called Mac without any additional info.

diff --git a/src/sentry/static/sentry/app/components/events/contextSummary/contextSummary.jsx b/src/sentry/static/sentry/app/components/events/contextSummary/contextSummary.jsx
index 27fd710e14..f247371037 100644
--- a/src/sentry/static/sentry/app/components/events/contextSummary/contextSummary.jsx
+++ b/src/sentry/static/sentry/app/components/events/contextSummary/contextSummary.jsx
@@ -9,6 +9,7 @@ import ContextSummaryGeneric from './contextSummaryGeneric';
 import ContextSummaryDevice from './contextSummaryDevice';
 import ContextSummaryGPU from './contextSummaryGPU';
 import ContextSummaryOS from './contextSummaryOS';
+import filterContexts from './filterContexts';
 
 const MIN_CONTEXTS = 3;
 const MAX_CONTEXTS = 4;
@@ -40,22 +41,24 @@ class ContextSummary extends React.Component {
 
     // Add defined contexts in the declared order, until we reach the limit
     // defined by MAX_CONTEXTS.
-    let contexts = KNOWN_CONTEXTS.map(({keys, Component, ...props}) => {
-      if (contextCount >= MAX_CONTEXTS) {
-        return null;
-      }
+    let contexts = KNOWN_CONTEXTS.filter((...args) => filterContexts(evt, ...args)).map(
+      ({keys, Component, ...props}) => {
+        if (contextCount >= MAX_CONTEXTS) {
+          return null;
+        }
 
-      const [key, data] = keys
-        .map(k => [k, evt.contexts[k] || evt[k]])
-        .find(([_k, d]) => !objectIsEmpty(d)) || [null, null];
+        const [key, data] = keys
+          .map(k => [k, evt.contexts[k] || evt[k]])
+          .find(([_k, d]) => !objectIsEmpty(d)) || [null, null];
 
-      if (!key) {
-        return null;
-      }
+        if (!key) {
+          return null;
+        }
 
-      contextCount += 1;
-      return <Component key={key} data={data} {...props} />;
-    });
+        contextCount += 1;
+        return <Component key={key} data={data} {...props} />;
+      }
+    );
 
     // Bail out if all contexts are empty or only the user context is set
     if (contextCount === 0 || (contextCount === 1 && contexts[0])) {
@@ -65,16 +68,18 @@ class ContextSummary extends React.Component {
     if (contextCount < MIN_CONTEXTS) {
       // Add contents in the declared order until we have at least MIN_CONTEXTS
       // contexts in our list.
-      contexts = KNOWN_CONTEXTS.map(({keys, Component, ...props}, index) => {
-        if (contexts[index]) {
-          return contexts[index];
+      contexts = KNOWN_CONTEXTS.filter((...args) => filterContexts(evt, ...args)).map(
+        ({keys, Component, ...props}, index) => {
+          if (contexts[index]) {
+            return contexts[index];
+          }
+          if (contextCount >= MIN_CONTEXTS) {
+            return null;
+          }
+          contextCount += 1;
+          return <Component key={keys[0]} data={{}} {...props} />;
         }
-        if (contextCount >= MIN_CONTEXTS) {
-          return null;
-        }
-        contextCount += 1;
-        return <Component key={keys[0]} data={{}} {...props} />;
-      });
+      );
     }
 
     return <div className="context-summary">{contexts}</div>;
diff --git a/src/sentry/static/sentry/app/components/events/contextSummary/filterContexts.tsx b/src/sentry/static/sentry/app/components/events/contextSummary/filterContexts.tsx
new file mode 100644
index 0000000000..29be9f769e
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contextSummary/filterContexts.tsx
@@ -0,0 +1,15 @@
+function filterContexts(event, context) {
+  // if the operating system is macOS, we want to hide devices called "Mac" which don't have any additional info
+  if (context.keys.includes('device')) {
+    const {model, arch, data_id} = event.contexts?.device || {};
+    const {name: os} = event.contexts?.os || event.contexts?.client_os || {};
+
+    if (model === 'Mac' && !arch && !data_id && os?.toLowerCase().includes('mac')) {
+      return false;
+    }
+  }
+
+  return true;
+}
+
+export default filterContexts;
