commit e5abe2e42375ec8390e2104c4dc4b9bea6a626d6
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Nov 23 22:03:19 2011 -0800

    Gettin those tests passin

diff --git a/sentry/web/frontend/generic.py b/sentry/web/frontend/generic.py
index 5c7de94911..cb7859fde8 100644
--- a/sentry/web/frontend/generic.py
+++ b/sentry/web/frontend/generic.py
@@ -9,6 +9,7 @@ from sentry.web.helpers import get_project_list, render_to_response
 @login_required
 def dashboard(request):
     project_list = get_project_list(request.user)
+    print project_list
     if len(project_list) == 1:
         return HttpResponseRedirect(reverse('sentry', kwargs={'project_id': project_list.keys()[0]}))
     return render_to_response('sentry/dashboard.html', {
diff --git a/sentry/web/helpers.py b/sentry/web/helpers.py
index b154b814f5..82a8995ab0 100644
--- a/sentry/web/helpers.py
+++ b/sentry/web/helpers.py
@@ -8,23 +8,20 @@ sentry.web.views
 
 from django.conf import settings as dj_settings
 from django.core.urlresolvers import reverse, resolve
-from django.http import HttpResponse, HttpResponseRedirect
+from django.http import HttpResponse
 from django.template import loader
 
 from sentry.conf import settings
-from sentry.models import Project, ProjectMember
+from sentry.models import Project
 
 def get_project_list(user=None, flag=None):
     """
     Returns a set of all projects a user has some level of access to.
     """
-    projects = set(Project.objects.filter(public=True))
+    projects = dict((p.pk, p) for p in Project.objects.filter(public=True))
     if user.is_authenticated():
-        pms = list(ProjectMember.objects.filter(user=user).select_related('project'))
-        if flag:
-            pms = filter(lambda x: x.has_perm(flag), pms)
-        projects.update(set(pms))
-    return dict((p.pk, p) for p in projects)
+        projects.update(dict((p.pk, p) for p in Project.objects.filter(member_set__user=user) if (not flag or p.has_perm(flag))))
+    return projects
 
 _LOGIN_URL = None
 def get_login_url(reset=False):
diff --git a/tests/tests.py b/tests/tests.py
index 2a0573f9fc..aa188b3fbe 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -16,12 +16,11 @@ from sentry.conf import settings
 from sentry.exceptions import InvalidInterface, InvalidData
 from sentry.interfaces import Interface
 from sentry.models import Event, Group, MessageCountByMinute, \
-                          FilterValue, MessageFilterValue, Project
+  MessageFilterValue, Project, ProjectMember
 from sentry.web.helpers import get_login_url
 
-from tests.models import TestModel, DuplicateKeyModel
-from tests.testcases import TestCase, TransactionTestCase
-from tests.utils import TestServerThread, conditional_on_module, Settings
+from tests.testcases import TestCase
+from tests.utils import conditional_on_module, Settings
 
 # class NullHandler(logging.Handler):
 #     def emit(self, record):
@@ -55,7 +54,7 @@ class SentryViewsTest(TestCase):
             'password': 'admin',
         }, follow=True)
         self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/dashboard.html')
+        self.assertTemplateNotUsed(resp, 'sentry/login.html')
 
     def test_get_login_url(self):
         with Settings(LOGIN_URL='/really-a-404'):
@@ -79,6 +78,13 @@ class SentryViewsTest(TestCase):
         self.client.login(username='admin', password='admin')
         resp = self.client.get(reverse('sentry'), follow=True)
         self.assertEquals(resp.status_code, 200)
+        self.assertTemplateNotUsed(resp, 'sentry/dashboard.html')
+
+        # requires two projects to show dashboard
+        p = Project.objects.create(name='foo')
+        ProjectMember.objects.create(project=p, user=self.user)
+        resp = self.client.get(reverse('sentry'), follow=True)
+        self.assertEquals(resp.status_code, 200)
         self.assertTemplateUsed(resp, 'sentry/dashboard.html')
 
     def test_index(self):
