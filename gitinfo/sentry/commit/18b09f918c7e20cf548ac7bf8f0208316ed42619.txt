commit 18b09f918c7e20cf548ac7bf8f0208316ed42619
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Apr 20 01:24:27 2017 +0200

    Restrict distribution format

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 3e7d2ffb07..394425cad4 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -15,6 +15,7 @@ import logging
 import six
 import uuid
 import zlib
+import re
 
 from collections import MutableMapping
 from datetime import datetime, timedelta
@@ -55,6 +56,9 @@ except ImportError:
     from sentry.utils import json
 
 
+_dist_re = re.compile(r'^[a-zA-Z0-9_.-]+$')
+
+
 class APIError(Exception):
     http_status = 400
     msg = 'Invalid request'
@@ -692,7 +696,7 @@ class ClientApiHelper(object):
                 del data['release']
 
         if data.get('dist'):
-            data['dist'] = six.text_type(data['dist'])
+            data['dist'] = six.text_type(data['dist']).strip()
             if not data.get('release'):
                 data['dist'] = None
             elif len(data['dist']) > 64:
@@ -702,6 +706,13 @@ class ClientApiHelper(object):
                     'value': data['dist'],
                 })
                 del data['dist']
+            elif _dist_re.match(data['dist']) is None:
+                data['errors'].append({
+                    'type': EventError.INVALID_DATA,
+                    'name': 'dist',
+                    'value': data['dist'],
+                })
+                del data['dist']
 
         if data.get('environment'):
             data['environment'] = six.text_type(data['environment'])
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index 8ca4fdad56..060f3bfd2f 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -380,6 +380,24 @@ class ValidateDataTest(BaseAPITest):
         assert data['errors'][0]['name'] == 'dist'
         assert data['errors'][0]['value'] == 'b' * 65
 
+    def test_distribution_bad_char(self):
+        data = self.helper.validate_data(self.project, {
+            'release': 'a' * 62,
+            'dist': '^%',
+        })
+        assert not data.get('dist')
+        assert len(data['errors']) == 1
+        assert data['errors'][0]['type'] == 'invalid_data'
+        assert data['errors'][0]['name'] == 'dist'
+        assert data['errors'][0]['value'] == '^%'
+
+    def test_distribution_strip(self):
+        data = self.helper.validate_data(self.project, {
+            'release': 'a' * 62,
+            'dist': ' foo ',
+        })
+        assert data.get('dist') == 'foo'
+
     def test_distribution_as_non_string(self):
         data = self.helper.validate_data(self.project, {
             'release': '42',
