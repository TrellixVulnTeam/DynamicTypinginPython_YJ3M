commit cc6e206a4f996727764dfcd947ecbfb344f6470f
Author: Jess MacQueen <jess@getsentry.com>
Date:   Mon Apr 4 17:40:06 2016 -0700

    show 404 view when no platform/integration

diff --git a/src/sentry/static/sentry/app/components/errors/notFound.jsx b/src/sentry/static/sentry/app/components/errors/notFound.jsx
new file mode 100644
index 0000000000..8d319cf48f
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/errors/notFound.jsx
@@ -0,0 +1,25 @@
+import React from 'react';
+import {t} from '../../locale';
+
+const NotFound = React.createClass({
+  render() {
+    return (
+      <div className="alert alert-block alert-error">
+        <div style={{fontSize: 24, marginBottom: 10}}>
+          <span className="icon-exclamation" style={{fontSize: 20, marginRight: 10}} />
+          <span>{t('Page Not Found')}</span>
+        </div>
+        <p>The page you are looking for was not found.</p>
+        <p>You may wish to try the following:</p>
+        <ul>
+            <li>If you entered the address manually, double check the path. Did you forget a trailing slash?</li>
+            <li>If you followed a link here, try hitting back and reloading the page. It's possible the resource was moved out from under you.</li>
+            <li>If all else fails, <a href="http://github.com/getsentry/sentry/issues">create an issue</a> with more details.</li>
+        </ul>
+        <p>Not sure what to do? <a href="/">Return to the dashboard</a></p>
+      </div>
+    );
+  }
+});
+
+export default NotFound;
\ No newline at end of file
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index 26292cf66e..07ff54c7d9 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -5,6 +5,7 @@ import ApiMixin from '../../mixins/apiMixin';
 import LanguageNav from './languageNav';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
+import NotFound from '../../components/errors/notFound';
 import {t, tct} from '../../locale';
 
 const ProjectInstallPlatform = React.createClass({
@@ -16,12 +17,13 @@ const ProjectInstallPlatform = React.createClass({
     ApiMixin
   ],
 
-  getInitialState() {
-    let params = this.props.params;
+  getInitialState(props) {
+    props = props || this.props;
+    let params = props.params;
     let key = params.platform;
     let integration;
     let platform;
-    this.props.platformData.platforms.forEach((p_item) => {
+    props.platformData.platforms.forEach((p_item) => {
       if (integration) {
         return;
       }
@@ -48,7 +50,7 @@ const ProjectInstallPlatform = React.createClass({
 
   componentWillReceiveProps(nextProps) {
     if (nextProps.params.platform !== this.props.params.platform) {
-      this.setState(this.getInitialState(), this.fetchData);
+      this.setState(this.getInitialState(nextProps), this.fetchData);
     }
   },
 
@@ -82,67 +84,84 @@ const ProjectInstallPlatform = React.createClass({
     );
   },
 
-  render() {
+  renderSidebar() {
+    let platform = this.state.platform;
+    return (
+      <div className="install-sidebar col-md-2">
+        {this.props.platformData.platforms.map((p_item) => {
+          return (
+            <LanguageNav name={p_item.name} active={platform && platform.id === p_item.id}>
+              {p_item.integrations.map((i_item) => {
+                return this.getPlatformLink(i_item.id, (i_item.id === p_item.id ? t('Generic') : i_item.name));
+              })}
+            </LanguageNav>
+          );
+        })}
+      </div>
+    );
+  },
+
+  renderBody() {
     let {integration, platform} = this.state;
     let queryParams = this.props.location.query;
     let {orgId, projectId} = this.props.params;
 
+    if (!(integration && platform)) {
+      return <NotFound />;
+    }
+
     return (
-      <div className="install row">
-        <div className="install-content col-md-10">
-          <div className="box">
-            <div className="box-header">
-              <div className="pull-right">
-                <a href={integration.link} className="btn btn-sm btn-default">{t('Full Documentation')}</a>
-              </div>
-
-              <h3>{t('Configure %(integration)s', {integration: integration.name})}</h3>
-            </div>
-            <div className="box-content with-padding">
-              <p>
-                {tct(`
-                 This is a quick getting started guide. For in-depth instructions
-                 on integrating Sentry with [integration], view
-                 [docLink:our complete documentation].
-                `, {
-                  integration: integration.name,
-                  docLink: <a href={integration.link} />
-                })}
-              </p>
-
-              {this.state.loading ?
-                <LoadingIndicator />
-              : (this.state.error ?
-                <LoadingError onRetry={this.fetchData} />
-              :
-                <div dangerouslySetInnerHTML={{__html: this.state.html}}/>
-              )}
-
-              {queryParams.onboarding ?
-                <p>
-                  <Link
-                    to={`/${orgId}/${projectId}/?onboarding=1#welcome`}
-                    className="btn btn-primary btn-lg">
-                      Got it! Take me to the Issue Stream.
-                  </Link>
-                </p>
-              :
-                null
-              }
-            </div>
+      <div className="box">
+        <div className="box-header">
+          <div className="pull-right">
+            <a href={integration.link} className="btn btn-sm btn-default">{t('Full Documentation')}</a>
           </div>
+
+          <h3>{t('Configure %(integration)s', {integration: integration.name})}</h3>
         </div>
-        <div className="install-sidebar col-md-2">
-          {this.props.platformData.platforms.map((p_item) => {
-            return (
-              <LanguageNav name={p_item.name} active={platform.id === p_item.id}>
-                {p_item.integrations.map((i_item) => {
-                  return this.getPlatformLink(i_item.id, (i_item.id === p_item.id ? t('Generic') : i_item.name));
-                })}
-              </LanguageNav>
-            );
-          })}
+        <div className="box-content with-padding">
+          <p>
+            {tct(`
+             This is a quick getting started guide. For in-depth instructions
+             on integrating Sentry with [integration], view
+             [docLink:our complete documentation].
+            `, {
+              integration: integration.name,
+              docLink: <a href={integration.link} />
+            })}
+          </p>
+
+          {this.state.loading ?
+            <LoadingIndicator />
+          : (this.state.error ?
+            <LoadingError onRetry={this.fetchData} />
+          :
+            <div dangerouslySetInnerHTML={{__html: this.state.html}}/>
+          )}
+
+          {queryParams.onboarding ?
+            <p>
+              <Link
+                to={`/${orgId}/${projectId}/?onboarding=1#welcome`}
+                className="btn btn-primary btn-lg">
+                  Got it! Take me to the Issue Stream.
+              </Link>
+            </p>
+          :
+            null
+          }
+        </div>
+      </div>
+    );
+  },
+
+  render() {
+    return (
+      <div className="install row">
+        <div className="install-content col-md-10">
+          {this.renderBody()}
         </div>
+        {this.renderSidebar()}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/routeNotFound.jsx b/src/sentry/static/sentry/app/views/routeNotFound.jsx
index 19b484e2a3..46e5ad3ba7 100644
--- a/src/sentry/static/sentry/app/views/routeNotFound.jsx
+++ b/src/sentry/static/sentry/app/views/routeNotFound.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import DocumentTitle from 'react-document-title';
 import Footer from '../components/footer';
 import Header from '../components/header';
-import {t} from '../locale';
+import NotFound from '../components/errors/notFound';
 
 const RouteNotFound = React.createClass({
   getTitle() {
@@ -18,21 +18,7 @@ const RouteNotFound = React.createClass({
           <div className="container">
             <div className="content">
               <section className="body">
-                <div className="alert alert-block alert-error">
-                  <div style={{fontSize: 24, marginBottom: 10}}>
-                    <span className="icon-exclamation" style={{fontSize: 20, marginRight: 10}} />
-                    <span>{t('Page Not Found')}</span>
-                  </div>
-
-                  <p>The page you are looking for was not found.</p>
-                  <p>You may wish to try the following:</p>
-                  <ul>
-                      <li>If you entered the address manually, double check the path. Did you forget a trailing slash?</li>
-                      <li>If you followed a link here, try hitting back and reloading the page. It's possible the resource was moved out from under you.</li>
-                      <li>If all else fails, <a href="http://github.com/getsentry/sentry/issues">create an issue</a> with more details.</li>
-                  </ul>
-                  <p>Not sure what to do? <a href="/">Return to the dashboard</a></p>
-                </div>
+                <NotFound />
               </section>
             </div>
           </div>
diff --git a/tests/js/spec/views/projectInstall/platform.spec.jsx b/tests/js/spec/views/projectInstall/platform.spec.jsx
new file mode 100644
index 0000000000..f176da5edb
--- /dev/null
+++ b/tests/js/spec/views/projectInstall/platform.spec.jsx
@@ -0,0 +1,74 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+
+import {Client} from 'app/api';
+import ProjectInstallPlatform from 'app/views/projectInstall/platform';
+
+describe('ProjectInstallPlatform', function() {
+
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+
+    this.stubbedApiRequest = this.sandbox.stub(Client.prototype, 'request');
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  describe('render()', function() {
+    const baseProps = {
+      location: {query: {}},
+      platformData: {
+        platforms: [{
+          id: 'csharp',
+          name: 'C#',
+          integrations: [{
+            id: 'csharp',
+            type: 'language'
+          }]
+        }, {
+          id: 'node',
+          name: 'Node.js',
+          integrations: [{
+            id: 'node',
+            type: 'language'
+          }, {
+            id: 'node-connect',
+            type: 'framework'
+          }]
+        }]
+      }
+    };
+
+    it('should render NotFound if no matching integration/platform', function () {
+      let props = {
+        ...baseProps,
+        params: {
+          platform: 'lua'
+        }
+      };
+
+      let wrapper = shallow(<ProjectInstallPlatform {...props}/>, {
+        organization: {id: '1337'}
+      });
+
+      expect(wrapper.find('NotFound')).to.have.length(1);
+    });
+
+    it('should rendering Loading if integration/platform exists', function () {
+      let props = {
+        ...baseProps,
+        params: {
+          platform: 'node-connect'
+        }
+      };
+
+      let wrapper = shallow(<ProjectInstallPlatform {...props}/>, {
+        organization: {id: '1337'}
+      });
+
+      expect(wrapper.find('LoadingIndicator')).to.have.length(1);
+    });
+  });
+});
