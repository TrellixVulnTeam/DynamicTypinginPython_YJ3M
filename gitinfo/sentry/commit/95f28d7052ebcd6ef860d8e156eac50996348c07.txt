commit 95f28d7052ebcd6ef860d8e156eac50996348c07
Author: Danny Lee <dlee@sentry.io>
Date:   Thu Dec 19 17:19:47 2019 -0800

    feat(discover2): Clean up before adding resizable columns (#16192)

diff --git a/src/sentry/static/sentry/app/components/gridEditable/addColumnButton.tsx b/src/sentry/static/sentry/app/components/gridEditable/addColumnButton.tsx
deleted file mode 100644
index bed82a4336..0000000000
--- a/src/sentry/static/sentry/app/components/gridEditable/addColumnButton.tsx
+++ /dev/null
@@ -1,71 +0,0 @@
-import React from 'react';
-import styled from 'react-emotion';
-
-import {t} from 'app/locale';
-import ToolTip from 'app/components/tooltip';
-import InlineSvg from 'app/components/inlineSvg';
-
-import {GRID_HEADER_HEIGHT, Z_INDEX_ADD_COLUMN, ADD_BUTTON_SIZE} from './styles';
-
-type Props = {
-  onClick: () => void;
-  align: 'left' | 'right';
-  ['data-test-id']: string;
-};
-
-const AddColumnButton = (props: Props) => {
-  const {onClick, align} = props;
-
-  let style;
-
-  if (align === 'right') {
-    style = {
-      right: `-${ADD_BUTTON_SIZE / 2}px`,
-    };
-  } else {
-    style = {
-      left: `-${ADD_BUTTON_SIZE + (12 - ADD_BUTTON_SIZE / 2)}px`,
-    };
-  }
-
-  return (
-    <Wrapper onClick={onClick} data-test-id={props['data-test-id']} style={style}>
-      <ToolTip title={t('Add Column')}>
-        <AddButtonWrap>
-          <InlineSvg
-            src="icon-circle-add"
-            data-test-id="grid-column-add"
-            style={{position: 'absolute'}}
-          />
-        </AddButtonWrap>
-      </ToolTip>
-    </Wrapper>
-  );
-};
-
-const Wrapper = styled('div')`
-  height: ${GRID_HEADER_HEIGHT}px;
-  width: ${ADD_BUTTON_SIZE}px;
-
-  cursor: pointer;
-
-  position: absolute;
-  top: 0;
-
-  z-index: ${Z_INDEX_ADD_COLUMN};
-
-  color: ${p => p.theme.gray2};
-  &:hover {
-    color: ${p => p.theme.gray3};
-  }
-`;
-
-const AddButtonWrap = styled('div')`
-  width: ${ADD_BUTTON_SIZE}px;
-  height: ${GRID_HEADER_HEIGHT}px;
-
-  display: flex;
-  align-items: center;
-`;
-
-export default AddColumnButton;
diff --git a/src/sentry/static/sentry/app/components/gridEditable/gridHeadCell.tsx b/src/sentry/static/sentry/app/components/gridEditable/gridHeadCell.tsx
index 45807afd75..04ed17fb40 100644
--- a/src/sentry/static/sentry/app/components/gridEditable/gridHeadCell.tsx
+++ b/src/sentry/static/sentry/app/components/gridEditable/gridHeadCell.tsx
@@ -2,7 +2,6 @@ import React from 'react';
 
 import InlineSvg from 'app/components/inlineSvg';
 
-import {FLAG_GRID_RESIZABLE} from './flags';
 import {
   GridHeadCell as GridHeadCellWrapper,
   GridHeadCellButton,
@@ -10,7 +9,6 @@ import {
   GridHeadCellButtonHoverBackground,
   GridHeadCellButtonHoverButton,
   GridHeadCellButtonHoverDraggable,
-  GridHeadCellResizer,
 } from './styles';
 import {GridColumnHeader} from './types';
 
@@ -121,16 +119,6 @@ class GridHeadCell<Column extends GridColumnHeader> extends React.Component<
     );
   }
 
-  renderResizeGrabbable = () => {
-    const {isEditing} = this.props;
-
-    if (!FLAG_GRID_RESIZABLE || !isEditing) {
-      return null;
-    }
-
-    return <GridHeadCellResizer isEditing={isEditing} />;
-  };
-
   render() {
     const {isEditing, children, column, gridHeadCellButtonProps} = this.props;
 
@@ -147,12 +135,6 @@ class GridHeadCell<Column extends GridColumnHeader> extends React.Component<
           {children}
           {this.renderButtonHoverDraggable(children)}
         </GridHeadCellButton>
-
-        {/*
-          Keep the Resizer component and the add column button at the bottom
-          to ensure that it is will always
-          float on top of everything else */
-        this.renderResizeGrabbable()}
       </GridHeadCellWrapper>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/gridEditable/styles.tsx b/src/sentry/static/sentry/app/components/gridEditable/styles.tsx
index 876fece99e..25ca4a71fa 100644
--- a/src/sentry/static/sentry/app/components/gridEditable/styles.tsx
+++ b/src/sentry/static/sentry/app/components/gridEditable/styles.tsx
@@ -6,16 +6,12 @@ import InlineSvg from 'app/components/inlineSvg';
 import {Panel, PanelBody} from 'app/components/panels';
 import space from 'app/styles/space';
 
-export const ADD_BUTTON_SIZE = 16; // this is an even number
-export const GRID_HEADER_HEIGHT = 45;
+export const GRID_HEAD_ROW_HEIGHT = 45;
+export const GRID_BODY_ROW_HEIGHT = 40;
 
-/**
- * Explanation of z-index:
- *  - Resizer needs to float above <th> cells to be interactive.
- *  - Editable needs to float above Resizer to hide the right-most Resizer,
- */
-const Z_INDEX_RESIZER = '1';
-export const Z_INDEX_ADD_COLUMN = '20'; // TODO(leedongwei): Remove with addColumnButton.tsx
+// Local z-index stacking context
+// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context
+export const Z_INDEX_RESIZER = 1;
 
 type GridEditableProps = {
   numColumn?: number;
@@ -111,13 +107,13 @@ export const GridHead = styled('thead')`
 export const GridHeadCell = styled('th')`
   /* By default, a grid item cannot be smaller than the size of its content.
      We override this by setting min-width to be 0. */
-  position: relative;
+  position: relative; /* Used by GridResizer */
   min-width: 0;
-  height: ${GRID_HEADER_HEIGHT}px;
+  height: ${GRID_HEAD_ROW_HEIGHT}px;
 
   background-color: ${p => p.theme.offWhite};
   border-bottom: 1px solid ${p => p.theme.borderDark};
-  border-right: 1px solid ${p => p.theme.borderDark};
+  /* border-right: 1px solid ${p => p.theme.borderDark}; */
 
   &:first-child {
     border-top-left-radius: ${p => p.theme.borderRadius};
@@ -129,7 +125,6 @@ export const GridHeadCell = styled('th')`
   }
 `;
 export const GridHeadCellButton = styled('div')<GridEditableProps>`
-  position: relative;
   min-width: 24px; /* Ensure that edit/remove buttons are never hidden */
   display: block;
   margin: ${space(0.5)};
@@ -196,28 +191,6 @@ export const GridHeadCellButton = styled('div')<GridEditableProps>`
 
   user-select: none;
 `;
-export const GridHeadCellResizer = styled('span')<GridEditableProps>`
-  position: absolute;
-  top: 0;
-  right: -2px; /* Overlap half of Resizer into the right neighbor */
-  display: block;
-  width: 4px;
-  height: 100%;
-
-  padding: ${space(1.5)} 1px; /* Padding sets the size of ::after  */
-  z-index: ${Z_INDEX_RESIZER};
-  cursor: col-resize;
-
-  &::after {
-    content: ' ';
-    display: block;
-    width: 2px;
-    height: 100%;
-
-    border-left: 1px solid ${p => p.theme.gray2};
-    border-right: 1px solid ${p => p.theme.gray2};
-  }
-`;
 
 /**
  *
