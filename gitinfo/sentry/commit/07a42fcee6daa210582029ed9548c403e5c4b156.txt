commit 07a42fcee6daa210582029ed9548c403e5c4b156
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Mar 2 13:37:16 2020 -0800

    chore(migrations): Add FlexibleForeignKey on organizationonboardingtask project (#17408)

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index a238a98342..2e165e1218 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0047_auto_20200224_2319
+sentry: 0048_auto_20200302_1825
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/migrations/0048_auto_20200302_1825.py b/src/sentry/migrations/0048_auto_20200302_1825.py
new file mode 100644
index 0000000000..8c8fcb11ae
--- /dev/null
+++ b/src/sentry/migrations/0048_auto_20200302_1825.py
@@ -0,0 +1,72 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.28 on 2020-03-02 19:55
+from __future__ import unicode_literals
+
+from django.db import migrations
+import django.db.models.deletion
+import sentry.db.models.fields.bounded
+import sentry.db.models.fields.foreignkey
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+    dependencies = [("sentry", "0047_auto_20200224_2319")]
+
+    operations = [
+        migrations.SeparateDatabaseAndState(
+            state_operations=[
+                migrations.RemoveField(model_name="organizationonboardingtask", name="project_id"),
+                migrations.AddField(
+                    model_name="organizationonboardingtask",
+                    name="project",
+                    field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
+                        db_constraint=False,
+                        null=True,
+                        on_delete=django.db.models.deletion.CASCADE,
+                        to="sentry.Project",
+                    ),
+                ),
+                migrations.AlterField(
+                    model_name="organizationonboardingtask",
+                    name="status",
+                    field=sentry.db.models.fields.bounded.BoundedPositiveIntegerField(
+                        choices=[(1, b"complete"), (2, b"pending"), (3, b"skipped")]
+                    ),
+                ),
+                migrations.AlterField(
+                    model_name="organizationonboardingtask",
+                    name="task",
+                    field=sentry.db.models.fields.bounded.BoundedPositiveIntegerField(
+                        choices=[
+                            (1, b"create_project"),
+                            (2, b"send_first_event"),
+                            (3, b"invite_member"),
+                            (4, b"setup_second_platform"),
+                            (5, b"setup_user_context"),
+                            (6, b"setup_release_tracking"),
+                            (7, b"setup_sourcemaps"),
+                            (8, b"setup_user_reports"),
+                            (9, b"setup_issue_tracker"),
+                            (10, b"setup_alert_rules"),
+                        ]
+                    ),
+                ),
+            ]
+        )
+    ]
diff --git a/src/sentry/models/organizationonboardingtask.py b/src/sentry/models/organizationonboardingtask.py
index cbd71fe010..8d4e42f51d 100644
--- a/src/sentry/models/organizationonboardingtask.py
+++ b/src/sentry/models/organizationonboardingtask.py
@@ -7,7 +7,6 @@ from django.utils import timezone
 
 from sentry.db.models import (
     BaseManager,
-    BoundedBigIntegerField,
     BoundedPositiveIntegerField,
     FlexibleForeignKey,
     JSONField,
@@ -138,7 +137,7 @@ class OrganizationOnboardingTask(Model):
     task = BoundedPositiveIntegerField(choices=TASK_CHOICES)
     status = BoundedPositiveIntegerField(choices=STATUS_CHOICES)
     date_completed = models.DateTimeField(default=timezone.now)
-    project_id = BoundedBigIntegerField(blank=True, null=True)
+    project = FlexibleForeignKey("sentry.Project", db_constraint=False, null=True)
     data = JSONField()  # INVITE_MEMBER { invited_member: user.id }
 
     objects = OrganizationOnboardingTaskManager()
