commit 2a587ce62c227d2a83801ec82cbf06818163dcff
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Aug 20 13:23:53 2018 -0700

    ref(integrations): Obliterate ProjectIntegration (#9396)
    
    Removes all references to project integrations aside from the models
    themselves.

diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index a224e94970..151aa05b38 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -96,15 +96,6 @@ class RelaxedSearchPermission(ProjectPermission):
     }
 
 
-class ProjectIntegrationsPermission(ProjectPermission):
-    scope_map = {
-        'GET': ['project:read', 'project:write', 'project:admin', 'project:integrations'],
-        'POST': ['project:write', 'project:admin', 'project:integrations'],
-        'PUT': ['project:write', 'project:admin', 'project:integrations'],
-        'DELETE': ['project:write', 'project:admin', 'project:integrations'],
-    }
-
-
 class ProjectEndpoint(Endpoint):
     permission_classes = (ProjectPermission, )
 
diff --git a/src/sentry/api/endpoints/group_integration_details.py b/src/sentry/api/endpoints/group_integration_details.py
index f2e5991d0c..06c7db0954 100644
--- a/src/sentry/api/endpoints/group_integration_details.py
+++ b/src/sentry/api/endpoints/group_integration_details.py
@@ -24,7 +24,6 @@ class GroupIntegrationDetailsEndpoint(GroupEndpoint):
 
         organization_id = group.project.organization_id
         try:
-            # TODO(jess): should this eventually check ProjectIntegration?
             integration = Integration.objects.get(
                 id=integration_id,
                 organizations=organization_id,
@@ -55,7 +54,6 @@ class GroupIntegrationDetailsEndpoint(GroupEndpoint):
 
         organization_id = group.project.organization_id
         try:
-            # TODO(jess): should this eventually check ProjectIntegration?
             integration = Integration.objects.get(
                 id=integration_id,
                 organizations=organization_id,
@@ -125,7 +123,6 @@ class GroupIntegrationDetailsEndpoint(GroupEndpoint):
     def post(self, request, group, integration_id):
         organization_id = group.project.organization_id
         try:
-            # TODO(jess): should this eventually check ProjectIntegration?
             integration = Integration.objects.get(
                 id=integration_id,
                 organizations=organization_id,
diff --git a/src/sentry/api/endpoints/project_integration_details.py b/src/sentry/api/endpoints/project_integration_details.py
deleted file mode 100644
index 947ae3386c..0000000000
--- a/src/sentry/api/endpoints/project_integration_details.py
+++ /dev/null
@@ -1,59 +0,0 @@
-from __future__ import absolute_import
-
-from django.http import Http404
-
-from sentry.api.bases.project import ProjectEndpoint, ProjectIntegrationsPermission
-from sentry.api.serializers import serialize
-from sentry.models import ProjectIntegration, Integration
-
-
-class ProjectIntegrationDetailsEndpoint(ProjectEndpoint):
-    permission_classes = (ProjectIntegrationsPermission, )
-
-    def get(self, request, project, integration_id):
-        try:
-            integration = ProjectIntegration.objects.get(
-                project=project,
-                integration_id=integration_id,
-            )
-        except ProjectIntegration.DoesNotExist:
-            raise Http404
-
-        return self.respond(serialize(integration, request.user))
-
-    def put(self, request, project, integration_id):
-        # Integrations can only be added to a project if they are already
-        # configured for the organization themselves.
-        try:
-            integration = Integration.objects.get(
-                id=integration_id,
-                organizations=project.organization_id,
-            )
-        except Integration.DoesNotExist:
-            raise Http404
-
-        created = integration.add_project(project.id)
-
-        return self.respond(status=(201 if created else 204))
-
-    def delete(self, request, project, integration_id):
-        ProjectIntegration.objects.filter(
-            integration__id=integration_id,
-            project=project,
-        ).delete()
-        return self.respond(status=204)
-
-    def post(self, request, project, integration_id):
-        try:
-            integration = ProjectIntegration.objects.get(
-                integration__id=integration_id,
-                project=project,
-            )
-        except ProjectIntegration.DoesNotExist:
-            raise Http404
-
-        config = integration.config
-        config.update(request.DATA)
-        integration.update(config=config)
-
-        return self.respond(status=200)
diff --git a/src/sentry/api/serializers/models/integration.py b/src/sentry/api/serializers/models/integration.py
index c5f9896737..6132cba739 100644
--- a/src/sentry/api/serializers/models/integration.py
+++ b/src/sentry/api/serializers/models/integration.py
@@ -5,10 +5,7 @@ from collections import defaultdict
 import six
 
 from sentry.api.serializers import Serializer, register, serialize
-from sentry.models import (
-    ExternalIssue, GroupLink, Integration, OrganizationIntegration,
-    ProjectIntegration,
-)
+from sentry.models import ExternalIssue, GroupLink, Integration, OrganizationIntegration
 
 
 @register(Integration)
@@ -26,7 +23,6 @@ class IntegrationSerializer(Serializer):
                 'key': provider.key,
                 'name': provider.name,
                 'canAdd': provider.can_add,
-                'canAddProject': provider.can_add_project,
                 'canDisable': provider.can_disable,
                 'features': [f.value for f in provider.features],
                 'aspects': provider.metadata.aspects,
@@ -35,16 +31,14 @@ class IntegrationSerializer(Serializer):
 
 
 class IntegrationConfigSerializer(IntegrationSerializer):
-    def __init__(self, organization_id=None, project_id=None):
+    def __init__(self, organization_id=None):
         self.organization_id = organization_id
-        self.project_id = project_id
 
     def serialize(self, obj, attrs, user):
         data = super(IntegrationConfigSerializer, self).serialize(obj, attrs, user)
 
         data.update({
             'configOrganization': [],
-            'configProject': [],
         })
 
         try:
@@ -58,7 +52,6 @@ class IntegrationConfigSerializer(IntegrationSerializer):
         else:
             data.update({
                 'configOrganization': install.get_organization_config(),
-                'configProject': install.get_project_config(),
             })
 
         return data
@@ -66,25 +59,6 @@ class IntegrationConfigSerializer(IntegrationSerializer):
 
 @register(OrganizationIntegration)
 class OrganizationIntegrationSerializer(Serializer):
-    def get_attrs(self, item_list, user, *args, **kwargs):
-        # Lookup related project integrations
-        project_integrations = ProjectIntegration.objects \
-            .select_related('project') \
-            .filter(
-                integration_id__in=[i.integration_id for i in item_list],
-                project__organization_id__in=[i.organization_id for i in item_list],
-            )
-
-        projects_by_integrations = defaultdict(list)
-        for pi in project_integrations:
-            projects_by_integrations[pi.integration_id].append(pi.project.slug)
-
-        return {
-            i: {
-                'projects': projects_by_integrations.get(i.integration_id, [])
-            } for i in item_list
-        }
-
     def serialize(self, obj, attrs, user):
         # XXX(epurkhiser): This is O(n) for integrations, especially since
         # we're using the IntegrationConfigSerializer which pulls in the
@@ -107,25 +81,6 @@ class OrganizationIntegrationSerializer(Serializer):
 
         integration.update({
             'configData': config_data,
-            'projects': attrs['projects'],
-        })
-
-        return integration
-
-
-@register(ProjectIntegration)
-class ProjectIntegrationSerializer(Serializer):
-    def serialize(self, obj, attrs, user):
-        integration = serialize(
-            objects=obj.integration,
-            user=user,
-            serializer=IntegrationConfigSerializer(
-                project_id=obj.project.id,
-                organization_id=obj.project.organization.id,
-            ),
-        )
-        integration.update({
-            'configData': obj.config,
         })
 
         return integration
@@ -141,7 +96,6 @@ class IntegrationProviderSerializer(Serializer):
             'name': obj.name,
             'metadata': metadata,
             'canAdd': obj.can_add,
-            'canAddProject': obj.can_add_project,
             'canDisable': obj.can_disable,
             'features': [f.value for f in obj.features],
             'setupDialog': dict(
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 9760a0a961..d7203fdc13 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -98,7 +98,6 @@ from .endpoints.project_docs import ProjectDocsEndpoint
 from .endpoints.project_docs_platform import ProjectDocsPlatformEndpoint
 from .endpoints.project_environments import ProjectEnvironmentsEndpoint
 from .endpoints.project_environment_details import ProjectEnvironmentDetailsEndpoint
-from .endpoints.project_integration_details import ProjectIntegrationDetailsEndpoint
 from .endpoints.project_platforms import ProjectPlatformsEndpoint
 from .endpoints.project_events import ProjectEventsEndpoint
 from .endpoints.project_event_details import ProjectEventDetailsEndpoint
@@ -652,11 +651,6 @@ urlpatterns = patterns(
         ProjectEnvironmentDetailsEndpoint.as_view(),
         name='sentry-api-0-project-environment-details'
     ),
-    url(
-        r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/integrations/(?P<integration_id>[^/]+)/$',
-        ProjectIntegrationDetailsEndpoint.as_view(),
-        name='sentry-api-0-project-integration-details'
-    ),
     url(
         r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/platforms/$',
         ProjectPlatformsEndpoint.as_view(),
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index cdbf7edbc7..29e1dddd42 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -1071,7 +1071,6 @@ SENTRY_SCOPES = set(
         'project:write',
         'project:admin',
         'project:releases',
-        'project:integrations',
         'event:read',
         'event:write',
         'event:admin',
@@ -1085,7 +1084,6 @@ SENTRY_SCOPE_SETS = (
         ('org:read', 'Read access to organization details.'),
     ), (
         ('org:integrations', 'Read, write, and admin access to organization integrations.'),
-        ('project:integrations', 'Read, write, and admin access to project integrations.'),
     ), (
         ('member:admin', 'Read, write, and admin access to organization members.'),
         ('member:write', 'Read and write access to organization members.'),
@@ -1144,7 +1142,6 @@ SENTRY_ROLES = (
                 'project:write',
                 'project:admin',
                 'project:releases',
-                'project:integrations',
                 'team:read',
                 'team:write',
                 'team:admin',
@@ -1168,7 +1165,6 @@ SENTRY_ROLES = (
                 'project:write',
                 'project:admin',
                 'project:releases',
-                'project:integrations',
                 'team:read',
                 'team:write',
                 'team:admin',
@@ -1198,7 +1194,6 @@ SENTRY_ROLES = (
                 'project:write',
                 'project:admin',
                 'project:releases',
-                'project:integrations',
                 'event:read',
                 'event:write',
                 'event:admin',
diff --git a/src/sentry/deletions/defaults/organizationintegration.py b/src/sentry/deletions/defaults/organizationintegration.py
index 3fc9f0e270..445e83d25b 100644
--- a/src/sentry/deletions/defaults/organizationintegration.py
+++ b/src/sentry/deletions/defaults/organizationintegration.py
@@ -5,13 +5,9 @@ from ..base import ModelDeletionTask, ModelRelation
 
 class OrganizationIntegrationDeletionTask(ModelDeletionTask):
     def get_child_relations(self, instance):
-        from sentry.models import ExternalIssue, ProjectIntegration
+        from sentry.models import ExternalIssue
 
         return [
-            ModelRelation(ProjectIntegration, {
-                'integration_id': instance.integration_id,
-                'project__organization': instance.organization_id,
-            }),
             ModelRelation(ExternalIssue, {
                 'integration_id': instance.integration_id,
                 'organization_id': instance.organization_id,
diff --git a/src/sentry/integrations/base.py b/src/sentry/integrations/base.py
index 8de646d17c..e33196e385 100644
--- a/src/sentry/integrations/base.py
+++ b/src/sentry/integrations/base.py
@@ -72,9 +72,6 @@ class IntegrationProvider(PipelineProvider):
     # whether or not the integration installation be initiated from Sentry
     can_add = True
 
-    # can the integration be enabled specifically for projects?
-    can_add_project = False
-
     # can the integration be disabled ?
     can_disable = False
 
diff --git a/src/sentry/integrations/jira/configure.py b/src/sentry/integrations/jira/configure.py
index 0ae6a7a39b..dfc205c701 100644
--- a/src/sentry/integrations/jira/configure.py
+++ b/src/sentry/integrations/jira/configure.py
@@ -6,7 +6,7 @@ from sentry import roles
 from sentry.integrations.atlassian_connect import AtlassianConnectValidationError, get_integration_from_request
 from sentry.web.frontend.base import BaseView
 from sentry.web.helpers import render_to_response
-from sentry.models import OrganizationIntegration, OrganizationMember, ProjectIntegration
+from sentry.models import OrganizationIntegration, OrganizationMember
 
 
 class JiraConfigForm(forms.Form):
@@ -62,18 +62,12 @@ class JiraConfigureView(BaseView):
         enabled_orgs = form.cleaned_data['organizations']
         disabled_orgs = list(set(o.id for o in organizations) - set(enabled_orgs))
 
-        # Remove organization and project Jira integrations not in the set of
-        # enabled organizations
+        # Remove Jira integrations not in the set of enabled organizations
         OrganizationIntegration.objects.filter(
             integration__provider='jira',
             integration=integration,
             organization__in=disabled_orgs,
         ).delete()
-        ProjectIntegration.objects.filter(
-            integration__provider='jira',
-            integration=integration,
-            integration__organizations__in=disabled_orgs,
-        ).delete()
 
         # Ensure all enabled integrations.
         for org_id in enabled_orgs:
diff --git a/src/sentry/integrations/jira/integration.py b/src/sentry/integrations/jira/integration.py
index 266bb0dcb1..f08728cac1 100644
--- a/src/sentry/integrations/jira/integration.py
+++ b/src/sentry/integrations/jira/integration.py
@@ -639,7 +639,6 @@ class JiraIntegrationProvider(IntegrationProvider):
     features = frozenset([IntegrationFeatures.ISSUE_SYNC])
 
     can_add = False
-    can_add_project = False
 
     def get_pipeline_views(self):
         return []
diff --git a/src/sentry/models/integration.py b/src/sentry/models/integration.py
index a4221ca82b..fbfe049430 100644
--- a/src/sentry/models/integration.py
+++ b/src/sentry/models/integration.py
@@ -46,6 +46,8 @@ class OrganizationIntegration(Model):
         unique_together = (('organization', 'integration'),)
 
 
+# TODO(epurkhiser): This is deprecated and will be removed soon. Do not use
+# Project Integrations.
 class ProjectIntegration(Model):
     __core__ = False
 
@@ -120,32 +122,3 @@ class Integration(Model):
                 id=self.id,
                 organization_id=organization_id,
             )
-
-    def add_project(self, project_id, config=None):
-        """
-        Add a project to this integration. Requires that a
-        OrganizationIntegration must exist before the project can be added.
-
-        Returns False iff the ProjectIntegration was not created
-        """
-        from sentry.models import Project
-        org_id_queryset = Project.objects \
-            .filter(id=project_id) \
-            .values_list('organization_id', flat=True)
-        org_integration = OrganizationIntegration.objects.filter(
-            organization_id=org_id_queryset,
-            integration=self,
-        )
-
-        if not org_integration.exists():
-            return False
-
-        try:
-            with transaction.atomic():
-                return ProjectIntegration.objects.create(
-                    project_id=project_id,
-                    integration_id=self.id,
-                    config=config or {},
-                )
-        except IntegrityError:
-            return False
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 649917b6a3..b53dd68489 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -408,13 +408,6 @@ function routes() {
           component={errorHandler(ProjectPluginDetails)}
         />
       </Route>
-      <Route
-        path="integrations/:providerKey/:integrationId/"
-        name="Integration Configuration"
-        componentPromise={() =>
-          import(/* webpackChunkName: "ProjectIntegration" */ './views/settings/project/projectIntegration')}
-        component={errorHandler(LazyLoad)}
-      />
       <Route
         path="install/"
         name="Configuration"
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx
index aa4bb5a7ec..ff25416205 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx
@@ -33,7 +33,6 @@ export default class InstalledIntegration extends React.Component {
    * met:
    *
    * - The Integration has organization-specific configuration options.
-   * - The Integration can be enabled for projects.
    * - The Integration has configurable features
    */
   hasConfiguration() {
@@ -41,7 +40,6 @@ export default class InstalledIntegration extends React.Component {
 
     return (
       integration.configOrganization.length > 0 ||
-      provider.canAddProject ||
       provider.features.filter(f => CONFIGURABLE_FEATURES.includes(f)).length > 0
     );
   }
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationProjects.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationProjects.jsx
deleted file mode 100644
index c42caa2428..0000000000
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationProjects.jsx
+++ /dev/null
@@ -1,171 +0,0 @@
-import {Box} from 'grid-emotion';
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import {
-  Panel,
-  PanelAlert,
-  PanelBody,
-  PanelHeader,
-  PanelItem,
-} from 'app/components/panels';
-import {
-  addIntegrationToProject,
-  removeIntegrationFromProject,
-} from 'app/actionCreators/integrations';
-import {t} from 'app/locale';
-import AsyncComponent from 'app/components/asyncComponent';
-import Button from 'app/components/buttons/button';
-import Confirm from 'app/components/confirm';
-import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
-import DropdownButton from 'app/components/dropdownButton';
-import EmptyMessage from 'app/views/settings/components/emptyMessage';
-import ProjectBadge from 'app/components/idBadge/projectBadge';
-import withProjects from 'app/utils/withProjects';
-
-class IntegrationProjects extends AsyncComponent {
-  static propTypes = {
-    integrationId: PropTypes.string.isRequired,
-  };
-
-  static contextTypes = {
-    organization: PropTypes.object.isRequired,
-  };
-
-  constructor(props, context) {
-    super(props, context);
-    this.state = {adding: false};
-  }
-
-  getEndpoints() {
-    const orgId = this.context.organization.slug;
-    const {integrationId} = this.props;
-
-    return [['integration', `/organizations/${orgId}/integrations/${integrationId}/`]];
-  }
-
-  removeProject = project => {
-    const orgId = this.context.organization.slug;
-    const {integration} = this.state;
-
-    removeIntegrationFromProject(orgId, project, integration).then(() => {
-      const projects = integration.projects.filter(p => p !== project);
-      this.setState({integration: {...integration, projects}});
-    });
-  };
-
-  addProject = ({value}) => {
-    const project = value;
-    const orgId = this.context.organization.slug;
-    const {integration} = this.state;
-
-    addIntegrationToProject(orgId, project, integration).then(() => {
-      const intg = {...integration, projects: [...integration.projects, project]};
-      this.setState({integration: intg});
-    });
-  };
-
-  renderDropdown() {
-    const enabled = new Set(this.context.organization.access).has('project:integrations');
-    const items = this.props.projects
-      .filter(p => !this.state.integration.projects.includes(p.slug))
-      .map(p => ({
-        searchKey: p.slug,
-        value: p.slug,
-        label: <ProjectBadge project={p} avatarSize={16} />,
-      }));
-
-    return (
-      <DropdownAutoComplete
-        items={items}
-        onSelect={this.addProject}
-        emptyMessage={t('Enabled for all projects')}
-      >
-        {({isOpen}) => (
-          <DropdownButton
-            size="xsmall"
-            isOpen={isOpen}
-            disabled={!enabled}
-            busy={this.state.adding}
-          >
-            {t('Enable for Project')}
-          </DropdownButton>
-        )}
-      </DropdownAutoComplete>
-    );
-  }
-
-  renderBody() {
-    const {integration} = this.state;
-    const orgId = this.context.organization.slug;
-    const projects = this.state.integration.projects.map(p => {
-      return this.props.projects.find(pp => pp.slug === p);
-    });
-
-    return (
-      <Panel>
-        <PanelHeader disablePadding hasButtons>
-          <Box pl={2}>{t('Projects')}</Box>
-          <Box pr={1} style={{textTransform: 'none'}}>
-            {this.renderDropdown()}
-          </Box>
-        </PanelHeader>
-        <PanelAlert type="info">
-          {t(
-            'Adding the integration to a project will enable project specific ' +
-              'integration functionality and configuration.'
-          )}
-        </PanelAlert>
-        <PanelBody>
-          {projects.length === 0 && (
-            <EmptyMessage size="large">
-              {t('Integration is not enabled for any Projects')}
-            </EmptyMessage>
-          )}
-          {projects.map(project => (
-            <PanelItem key={project.slug} align="center">
-              <Box flex="1">
-                <ProjectBadge project={project} avatarSize={16} />
-              </Box>
-              <Box pr={1}>
-                <Button
-                  to={`/settings/${orgId}/${project.slug}/integrations/${integration
-                    .provider.key}/${integration.id}/`}
-                  size="xsmall"
-                >
-                  {t('Configure')}
-                </Button>
-              </Box>
-              <Box>
-                <Confirm
-                  onConfirm={() => this.removeProject(project.slug)}
-                  message={
-                    <React.Fragment>
-                      <p>
-                        <strong>
-                          {t(
-                            'Are you sure you want to remove the integration from %s?',
-                            project.slug
-                          )}
-                        </strong>
-                      </p>
-                      <p>
-                        {t(
-                          'Removing the this integration from the project will clear any project specific configurations and functionality for this project.'
-                        )}
-                      </p>
-                    </React.Fragment>
-                  }
-                >
-                  <Button size="xsmall" icon="icon-trash" />
-                </Confirm>
-              </Box>
-            </PanelItem>
-          ))}
-        </PanelBody>
-      </Panel>
-    );
-  }
-}
-
-export default withProjects(IntegrationProjects);
diff --git a/src/sentry/static/sentry/app/views/projectPlugins/index.jsx b/src/sentry/static/sentry/app/views/projectPlugins/index.jsx
index 6d169162c2..585372a887 100644
--- a/src/sentry/static/sentry/app/views/projectPlugins/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectPlugins/index.jsx
@@ -2,7 +2,6 @@ import React from 'react';
 
 import {fetchPlugins, enablePlugin, disablePlugin} from 'app/actionCreators/plugins';
 import {t} from 'app/locale';
-import ProjectIntegrations from 'app/views/settings/project/projectIntegrations';
 import ProjectPlugins from 'app/views/projectPlugins/projectPlugins';
 import SentryTypes from 'app/sentryTypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
@@ -34,8 +33,6 @@ class ProjectPluginsContainer extends React.Component {
       <React.Fragment>
         <SettingsPageHeader title={t('Integrations')} />
 
-        <ProjectIntegrations {...this.props} />
-
         <ProjectPlugins
           {...this.props}
           onError={this.fetchData}
diff --git a/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx b/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
index e5d762789b..c84cab8916 100644
--- a/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
+++ b/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
@@ -8,7 +8,9 @@ import {
   PanelHeader,
   PanelItem,
 } from 'app/components/panels';
-import {t} from 'app/locale';
+import {t, tct} from 'app/locale';
+import Feature from 'app/components/feature';
+import Link from 'app/components/link';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import ProjectPluginRow from 'app/views/projectPlugins/projectPluginRow';
 import RouteError from 'app/views/routeError';
@@ -26,6 +28,7 @@ class ProjectPlugins extends Component {
 
   render() {
     let {plugins, loading, error, onError, onChange, routes, params} = this.props;
+    let {orgId} = this.props.params;
     let hasError = error;
     let isLoading = !hasError && loading;
 
@@ -45,9 +48,20 @@ class ProjectPlugins extends Component {
         </PanelHeader>
         <PanelBody>
           <PanelAlert type="warning">
-            {t(
-              "Legacy Integrations must be configured per-project. It's recommended to prefer organization-integrations over the legacy project integrations when available, as features will be more robust and flexible."
-            )}
+            <Feature access={['org:integrations']}>
+              {({hasAccess}) => {
+                return hasAccess
+                  ? tct(
+                      "Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available. Visit the [link:organization integrations] settings to manage them.",
+                      {
+                        link: <Link to={`/settings/${orgId}/integrations`} />,
+                      }
+                    )
+                  : t(
+                      "Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available."
+                    );
+              }}
+            </Feature>
           </PanelAlert>
 
           {plugins.map(plugin => (
diff --git a/src/sentry/static/sentry/app/views/settings/organizationIntegrations/configureIntegration.jsx b/src/sentry/static/sentry/app/views/settings/organizationIntegrations/configureIntegration.jsx
index cc53e7829b..a3a2689753 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationIntegrations/configureIntegration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationIntegrations/configureIntegration.jsx
@@ -5,7 +5,6 @@ import AsyncView from 'app/views/asyncView';
 import BreadcrumbTitle from 'app/views/settings/components/settingsBreadcrumb/breadcrumbTitle';
 import Form from 'app/views/settings/components/forms/form';
 import IntegrationItem from 'app/views/organizationIntegrations/integrationItem';
-import IntegrationProjects from 'app/views/organizationIntegrations/integrationProjects';
 import IntegrationRepos from 'app/views/organizationIntegrations/integrationRepos';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
@@ -54,8 +53,6 @@ export default class ConfigureIntegration extends AsyncView {
           </Form>
         )}
 
-        {provider.canAddProject && <IntegrationProjects integrationId={integration.id} />}
-
         {provider.features.includes('commits') && (
           <IntegrationRepos integration={integration} />
         )}
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectIntegration.jsx b/src/sentry/static/sentry/app/views/settings/project/projectIntegration.jsx
deleted file mode 100644
index 8b87388ce7..0000000000
--- a/src/sentry/static/sentry/app/views/settings/project/projectIntegration.jsx
+++ /dev/null
@@ -1,55 +0,0 @@
-import React from 'react';
-
-import {t} from 'app/locale';
-import AsyncView from 'app/views/asyncView';
-import BreadcrumbTitle from 'app/views/settings/components/settingsBreadcrumb/breadcrumbTitle';
-import Form from 'app/views/settings/components/forms/form';
-import IntegrationItem from 'app/views/organizationIntegrations/integrationItem';
-import JsonForm from 'app/views/settings/components/forms/jsonForm';
-import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-
-class ProjectIntegration extends AsyncView {
-  getEndpoints() {
-    const {orgId, projectId, integrationId} = this.props.params;
-
-    return [
-      ['integration', `/projects/${orgId}/${projectId}/integrations/${integrationId}/`],
-    ];
-  }
-
-  getTitle() {
-    return this.state.integration ? this.state.integration.name : 'Configure Integration';
-  }
-
-  renderBody() {
-    const {orgId, projectId} = this.props.params;
-    const {integration} = this.state;
-
-    const title = <IntegrationItem integration={integration} />;
-
-    return (
-      <React.Fragment>
-        <BreadcrumbTitle routes={this.props.routes} title={integration.name} />
-        <SettingsPageHeader noTitleStyles title={title} />
-
-        {integration.configProject.length > 0 && (
-          <Form
-            hideFooter={true}
-            saveOnBlur={true}
-            allowUndo={true}
-            apiMethod="POST"
-            initialData={integration.configData}
-            apiEndpoint={`/projects/${orgId}/${projectId}/integrations/${integration.id}/`}
-          >
-            <JsonForm
-              fields={integration.configProject}
-              title={t('Integration Project Settings')}
-            />
-          </Form>
-        )}
-      </React.Fragment>
-    );
-  }
-}
-
-export default ProjectIntegration;
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectIntegrations.jsx b/src/sentry/static/sentry/app/views/settings/project/projectIntegrations.jsx
deleted file mode 100644
index da1515b0a8..0000000000
--- a/src/sentry/static/sentry/app/views/settings/project/projectIntegrations.jsx
+++ /dev/null
@@ -1,152 +0,0 @@
-import {Box} from 'grid-emotion';
-import React from 'react';
-
-import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
-import {
-  addIntegrationToProject,
-  removeIntegrationFromProject,
-} from 'app/actionCreators/integrations';
-import {t, tct} from 'app/locale';
-import AsyncComponent from 'app/components/asyncComponent';
-import Button from 'app/components/buttons/button';
-import EmptyMessage from 'app/views/settings/components/emptyMessage';
-import Feature from 'app/components/feature';
-import IntegrationItem from 'app/views/organizationIntegrations/integrationItem';
-import Link from 'app/components/link';
-import Switch from 'app/components/switch';
-import Tooltip from 'app/components/tooltip';
-
-export default class ProjectIntegrations extends AsyncComponent {
-  getEndpoints() {
-    let {orgId} = this.props.params;
-    return [['integrations', `/organizations/${orgId}/integrations/`]];
-  }
-
-  onToggleEnabled(enabled, integration) {
-    const {orgId, projectId} = this.props.params;
-
-    const promise = enabled
-      ? addIntegrationToProject(orgId, projectId, integration)
-      : removeIntegrationFromProject(orgId, projectId, integration);
-
-    promise.then(() => {
-      const integrations = [...this.state.integrations];
-      const integRef = integrations.find(i => i.id === integration.id);
-
-      if (enabled) {
-        integRef.projects.push(projectId);
-      } else {
-        integRef.projects = integRef.projects.filter(p => p !== projectId);
-      }
-
-      this.setState({integrations});
-    });
-  }
-
-  renderBody() {
-    const {orgId, projectId} = this.props.params;
-
-    const integrations = this.state.integrations
-      .filter(integration => integration.provider.canAddProject)
-      .map(integration => {
-        const enabled = integration.projects.includes(projectId);
-
-        return (
-          <PanelItem key={integration.id} align="center">
-            <Box flex={1}>
-              <IntegrationItem integration={integration} />
-            </Box>
-            <Feature access={['project:integrations']}>
-              {({hasAccess}) => (
-                <React.Fragment>
-                  <Box px={2}>
-                    <Button
-                      size="small"
-                      disabled={!enabled || !hasAccess}
-                      to={`/settings/${orgId}/${projectId}/integrations/${integration
-                        .provider.key}/${integration.id}/`}
-                    >
-                      {t('Configure')}
-                    </Button>
-                  </Box>
-                  <Tooltip
-                    title="You don't have permission to enable or disable project integrations"
-                    tooltipOptions={{placement: 'left'}}
-                    disabled={hasAccess}
-                  >
-                    <span>
-                      <Switch
-                        size="lg"
-                        isActive={enabled}
-                        isDisabled={!hasAccess}
-                        toggle={() => this.onToggleEnabled(!enabled, integration)}
-                      />
-                    </span>
-                  </Tooltip>
-                </React.Fragment>
-              )}
-            </Feature>
-          </PanelItem>
-        );
-      });
-
-    return (
-      <Panel>
-        <PanelHeader disablePadding hasButtons>
-          <Box px={2} flex="1">
-            {t('Project Integrations')}
-          </Box>
-          <Box pr={1}>
-            <Feature access={['org:integrations']}>
-              {({hasAccess}) => (
-                <Tooltip
-                  title="You don't have permission to manage organization integrations"
-                  disabled={hasAccess}
-                >
-                  <span>
-                    <Button
-                      size="xsmall"
-                      disabled={!hasAccess}
-                      to={`/settings/${orgId}/integrations/`}
-                    >
-                      {t('Manage Integrations')}
-                    </Button>
-                  </span>
-                </Tooltip>
-              )}
-            </Feature>
-          </Box>
-        </PanelHeader>
-        <PanelBody>
-          {integrations.length === 0 && (
-            <EmptyMessage
-              size="large"
-              title={t('No Integrations Enabled')}
-              description={
-                <Feature access={['org:integrations']}>
-                  {({hasAccess}) => {
-                    const description = t(
-                      'Project Integrations can be enabled here for this project. Currently no organization integrations are enabled with project-specific integration capabilities.'
-                    );
-
-                    return hasAccess
-                      ? tct('[description] Visit the [link] to configure integrations.', {
-                          description,
-                          link: (
-                            <Link to={`/settings/${orgId}/integrations`}>
-                              {t('Organization Integration Settings')}
-                            </Link>
-                          ),
-                        })
-                      : description;
-                  }}
-                </Feature>
-              }
-            />
-          )}
-          {integrations}
-        </PanelBody>
-      </Panel>
-    );
-  }
-}
diff --git a/tests/js/fixtures/roleList.js b/tests/js/fixtures/roleList.js
index b796140541..3569f45111 100644
--- a/tests/js/fixtures/roleList.js
+++ b/tests/js/fixtures/roleList.js
@@ -29,7 +29,7 @@ export default function RoleList(params = [], fullAccess = false) {
         'event:admin',
         'member:read',
         'project:write',
-        'project:integrationsteam:read',
+        'team:read',
         'project:admin',
         'team:write',
         'org:integrations',
@@ -51,7 +51,6 @@ export default function RoleList(params = [], fullAccess = false) {
         'org:write',
         'event:admin',
         'project:write',
-        'project:integrations',
         'project:admin',
         'team:read',
         'org:integrations',
diff --git a/tests/js/setup.js b/tests/js/setup.js
index db979fd76a..ef7f19e9a4 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -510,7 +510,6 @@ window.TestStubs = {
       key: 'github',
       name: 'GitHub',
       canAdd: true,
-      canAddProject: false,
       config: [],
       externalIssues: [],
       features: [],
@@ -543,7 +542,6 @@ window.TestStubs = {
       key: 'jira',
       name: 'Jira',
       canAdd: false,
-      canAddProject: true,
       config: [],
       features: [],
       metadata: {
@@ -574,12 +572,10 @@ window.TestStubs = {
         name: 'GitHub',
         key: 'github',
         canAdd: true,
-        canAddProject: false,
         features: [],
       },
       projects: [],
       configOrganization: [],
-      configProject: [],
       configData: {},
       ...params,
     };
@@ -595,12 +591,10 @@ window.TestStubs = {
         name: 'Jira',
         key: 'jira',
         canAdd: true,
-        canAddProject: true,
         features: [],
       },
       projects: [],
       configOrganization: [],
-      configProject: [],
       configData: {},
       ...params,
     };
diff --git a/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap
index 515a3bba57..41f52cdc8c 100644
--- a/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap
@@ -131,7 +131,6 @@ exports[`ExternalIssueActions with no external issues linked renders 1`] = `
     Object {
       "configData": Object {},
       "configOrganization": Array [],
-      "configProject": Array [],
       "domainName": "gtithub.com/test-integration",
       "externalIssues": Array [],
       "icon": "http://example.com/integration_icon.png",
@@ -140,7 +139,6 @@ exports[`ExternalIssueActions with no external issues linked renders 1`] = `
       "projects": Array [],
       "provider": Object {
         "canAdd": true,
-        "canAddProject": false,
         "features": Array [],
         "key": "github",
         "name": "GitHub",
diff --git a/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
index 0382660910..f6df66171f 100644
--- a/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
+++ b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
@@ -89,7 +89,6 @@ exports[`IntegrationDetailsModal renders simple integration 1`] = `
       provider={
         Object {
           "canAdd": true,
-          "canAddProject": false,
           "config": Array [],
           "externalIssues": Array [],
           "features": Array [],
diff --git a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
index c38064069c..e9d6324b1c 100644
--- a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
+++ b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
@@ -20,7 +20,13 @@ exports[`ProjectPlugins renders 1`] = `
       mb={0}
       type="warning"
     >
-      Legacy Integrations must be configured per-project. It's recommended to prefer organization-integrations over the legacy project integrations when available, as features will be more robust and flexible.
+      <FeatureContainer
+        access={
+          Array [
+            "org:integrations",
+          ]
+        }
+      />
     </PanelAlert>
     <PanelItem
       key="amazon-sqs"
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
index 59fc31d3d0..7711e43b64 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
@@ -50,7 +50,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
       Array [
         Object {
           "canAdd": true,
-          "canAddProject": false,
           "config": Array [],
           "externalIssues": Array [],
           "features": Array [],
@@ -81,14 +80,12 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
         },
         Object {
           "canAdd": false,
-          "canAddProject": true,
           "config": Array [],
           "features": Array [],
           "integrations": Array [
             Object {
               "configData": Object {},
               "configOrganization": Array [],
-              "configProject": Array [],
               "domainName": "jira.com/test-integration",
               "icon": "http://jira.example.com/integration_icon.png",
               "id": "2",
@@ -96,7 +93,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
               "projects": Array [],
               "provider": Object {
                 "canAdd": true,
-                "canAddProject": true,
                 "features": Array [],
                 "key": "jira",
                 "name": "Jira",
@@ -195,7 +191,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
               provider={
                 Object {
                   "canAdd": true,
-                  "canAddProject": false,
                   "config": Array [],
                   "externalIssues": Array [],
                   "features": Array [],
@@ -875,7 +870,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                   Object {
                     "configData": Object {},
                     "configOrganization": Array [],
-                    "configProject": Array [],
                     "domainName": "jira.com/test-integration",
                     "icon": "http://jira.example.com/integration_icon.png",
                     "id": "2",
@@ -883,7 +877,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                     "projects": Array [],
                     "provider": Object {
                       "canAdd": true,
-                      "canAddProject": true,
                       "features": Array [],
                       "key": "jira",
                       "name": "Jira",
@@ -900,14 +893,12 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
               provider={
                 Object {
                   "canAdd": false,
-                  "canAddProject": true,
                   "config": Array [],
                   "features": Array [],
                   "integrations": Array [
                     Object {
                       "configData": Object {},
                       "configOrganization": Array [],
-                      "configProject": Array [],
                       "domainName": "jira.com/test-integration",
                       "icon": "http://jira.example.com/integration_icon.png",
                       "id": "2",
@@ -915,7 +906,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                       "projects": Array [],
                       "provider": Object {
                         "canAdd": true,
-                        "canAddProject": true,
                         "features": Array [],
                         "key": "jira",
                         "name": "Jira",
@@ -1585,7 +1575,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                         Object {
                           "configData": Object {},
                           "configOrganization": Array [],
-                          "configProject": Array [],
                           "domainName": "jira.com/test-integration",
                           "icon": "http://jira.example.com/integration_icon.png",
                           "id": "2",
@@ -1593,7 +1582,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                           "projects": Array [],
                           "provider": Object {
                             "canAdd": true,
-                            "canAddProject": true,
                             "features": Array [],
                             "key": "jira",
                             "name": "Jira",
@@ -1608,14 +1596,12 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                       provider={
                         Object {
                           "canAdd": false,
-                          "canAddProject": true,
                           "config": Array [],
                           "features": Array [],
                           "integrations": Array [
                             Object {
                               "configData": Object {},
                               "configOrganization": Array [],
-                              "configProject": Array [],
                               "domainName": "jira.com/test-integration",
                               "icon": "http://jira.example.com/integration_icon.png",
                               "id": "2",
@@ -1623,7 +1609,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                               "projects": Array [],
                               "provider": Object {
                                 "canAdd": true,
-                                "canAddProject": true,
                                 "features": Array [],
                                 "key": "jira",
                                 "name": "Jira",
@@ -1656,7 +1641,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                           Object {
                             "configData": Object {},
                             "configOrganization": Array [],
-                            "configProject": Array [],
                             "domainName": "jira.com/test-integration",
                             "icon": "http://jira.example.com/integration_icon.png",
                             "id": "2",
@@ -1664,7 +1648,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                             "projects": Array [],
                             "provider": Object {
                               "canAdd": true,
-                              "canAddProject": true,
                               "features": Array [],
                               "key": "jira",
                               "name": "Jira",
@@ -1678,14 +1661,12 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                         provider={
                           Object {
                             "canAdd": false,
-                            "canAddProject": true,
                             "config": Array [],
                             "features": Array [],
                             "integrations": Array [
                               Object {
                                 "configData": Object {},
                                 "configOrganization": Array [],
-                                "configProject": Array [],
                                 "domainName": "jira.com/test-integration",
                                 "icon": "http://jira.example.com/integration_icon.png",
                                 "id": "2",
@@ -1693,7 +1674,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                 "projects": Array [],
                                 "provider": Object {
                                   "canAdd": true,
-                                  "canAddProject": true,
                                   "features": Array [],
                                   "key": "jira",
                                   "name": "Jira",
@@ -1726,7 +1706,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                             Object {
                               "configData": Object {},
                               "configOrganization": Array [],
-                              "configProject": Array [],
                               "domainName": "jira.com/test-integration",
                               "icon": "http://jira.example.com/integration_icon.png",
                               "id": "2",
@@ -1734,7 +1713,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                               "projects": Array [],
                               "provider": Object {
                                 "canAdd": true,
-                                "canAddProject": true,
                                 "features": Array [],
                                 "key": "jira",
                                 "name": "Jira",
@@ -1748,14 +1726,12 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                           provider={
                             Object {
                               "canAdd": false,
-                              "canAddProject": true,
                               "config": Array [],
                               "features": Array [],
                               "integrations": Array [
                                 Object {
                                   "configData": Object {},
                                   "configOrganization": Array [],
-                                  "configProject": Array [],
                                   "domainName": "jira.com/test-integration",
                                   "icon": "http://jira.example.com/integration_icon.png",
                                   "id": "2",
@@ -1763,7 +1739,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                   "projects": Array [],
                                   "provider": Object {
                                     "canAdd": true,
-                                    "canAddProject": true,
                                     "features": Array [],
                                     "key": "jira",
                                     "name": "Jira",
@@ -1820,7 +1795,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                           Object {
                                             "configData": Object {},
                                             "configOrganization": Array [],
-                                            "configProject": Array [],
                                             "domainName": "jira.com/test-integration",
                                             "icon": "http://jira.example.com/integration_icon.png",
                                             "id": "2",
@@ -1828,7 +1802,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                             "projects": Array [],
                                             "provider": Object {
                                               "canAdd": true,
-                                              "canAddProject": true,
                                               "features": Array [],
                                               "key": "jira",
                                               "name": "Jira",
@@ -1857,7 +1830,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                         Object {
                                                           "configData": Object {},
                                                           "configOrganization": Array [],
-                                                          "configProject": Array [],
                                                           "domainName": "jira.com/test-integration",
                                                           "icon": "http://jira.example.com/integration_icon.png",
                                                           "id": "2",
@@ -1865,7 +1837,6 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                           "projects": Array [],
                                                           "provider": Object {
                                                             "canAdd": true,
-                                                            "canAddProject": true,
                                                             "features": Array [],
                                                             "key": "jira",
                                                             "name": "Jira",
@@ -2221,7 +2192,6 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
       Array [
         Object {
           "canAdd": true,
-          "canAddProject": false,
           "config": Array [],
           "externalIssues": Array [],
           "features": Array [],
@@ -2252,7 +2222,6 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
         },
         Object {
           "canAdd": false,
-          "canAddProject": true,
           "config": Array [],
           "features": Array [],
           "integrations": Array [],
@@ -2348,7 +2317,6 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
               provider={
                 Object {
                   "canAdd": true,
-                  "canAddProject": false,
                   "config": Array [],
                   "externalIssues": Array [],
                   "features": Array [],
@@ -3033,7 +3001,6 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
               provider={
                 Object {
                   "canAdd": false,
-                  "canAddProject": true,
                   "config": Array [],
                   "features": Array [],
                   "integrations": Array [],
diff --git a/tests/js/spec/views/settings/project/__snapshots__/projectIntegrations.spec.jsx.snap b/tests/js/spec/views/settings/project/__snapshots__/projectIntegrations.spec.jsx.snap
deleted file mode 100644
index 1e10c6de13..0000000000
--- a/tests/js/spec/views/settings/project/__snapshots__/projectIntegrations.spec.jsx.snap
+++ /dev/null
@@ -1,770 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`ProjectIntegrations Renders emptystate with access 1`] = `
-<ProjectIntegrations
-  params={
-    Object {
-      "orgId": "org-slug",
-      "projectId": "project-slug",
-    }
-  }
->
-  <Panel>
-    <Component
-      className="css-10qfvek-Panel e1laxa7d0"
-    >
-      <div
-        className="css-10qfvek-Panel e1laxa7d0"
-      >
-        <PanelHeader
-          disablePadding={true}
-          hasButtons={true}
-        >
-          <Component
-            className="css-30ccsi-PanelHeader-getPadding e1p8v8nv0"
-            disablePadding={true}
-            hasButtons={true}
-          >
-            <Flex
-              align="center"
-              className="css-30ccsi-PanelHeader-getPadding e1p8v8nv0"
-              justify="space-between"
-            >
-              <Base
-                align="center"
-                className="e1p8v8nv0 css-1uiswd5-PanelHeader-getPadding"
-                justify="space-between"
-              >
-                <div
-                  className="e1p8v8nv0 css-1uiswd5-PanelHeader-getPadding"
-                  is={null}
-                >
-                  <Box
-                    flex="1"
-                    px={2}
-                  >
-                    <Base
-                      className="css-pcjga5"
-                      flex="1"
-                      px={2}
-                    >
-                      <div
-                        className="css-pcjga5"
-                        is={null}
-                      >
-                        Project Integrations
-                      </div>
-                    </Base>
-                  </Box>
-                  <Box
-                    pr={1}
-                  >
-                    <Base
-                      className="css-ioegso"
-                      pr={1}
-                    >
-                      <div
-                        className="css-ioegso"
-                        is={null}
-                      >
-                        <FeatureContainer
-                          access={
-                            Array [
-                              "org:integrations",
-                            ]
-                          }
-                        >
-                          <Feature
-                            access={
-                              Array [
-                                "org:integrations",
-                              ]
-                            }
-                            configFeatures={Array []}
-                            configUser={
-                              Object {
-                                "email": "foo@example.com",
-                                "flags": Object {
-                                  "newsletter_consent_prompt": false,
-                                },
-                                "hasPasswordAuth": true,
-                                "id": "1",
-                                "isAuthenticated": true,
-                                "name": "Foo Bar",
-                                "options": Object {
-                                  "timezone": "UTC",
-                                },
-                                "permissions": Set {},
-                                "username": "foo@example.com",
-                              }
-                            }
-                            organization={
-                              Object {
-                                "access": Array [
-                                  "org:read",
-                                  "org:write",
-                                  "org:admin",
-                                  "project:read",
-                                  "project:write",
-                                  "project:admin",
-                                  "team:read",
-                                  "team:write",
-                                  "team:admin",
-                                  "org:integrations",
-                                ],
-                                "features": Array [],
-                                "id": "3",
-                                "name": "Organization Name",
-                                "onboardingTasks": Array [],
-                                "projects": Array [],
-                                "scrapeJavaScript": true,
-                                "slug": "org-slug",
-                                "status": Object {
-                                  "id": "active",
-                                  "name": "active",
-                                },
-                                "teams": Array [],
-                              }
-                            }
-                            project={
-                              Object {
-                                "hasAccess": true,
-                                "id": "2",
-                                "isBookmarked": false,
-                                "isMember": true,
-                                "name": "Project Name",
-                                "slug": "project-slug",
-                                "teams": Array [],
-                              }
-                            }
-                            renderNoFeatureMessage={false}
-                          >
-                            <Tooltip
-                              disabled={true}
-                              title="You don't have permission to manage organization integrations"
-                            >
-                              <span>
-                                <Button
-                                  disabled={false}
-                                  size="xsmall"
-                                  to="/settings/org-slug/integrations/"
-                                >
-                                  <StyledButton
-                                    aria-label="Manage Integrations"
-                                    disabled={false}
-                                    onClick={[Function]}
-                                    role="button"
-                                    size="xsmall"
-                                    to="/settings/org-slug/integrations/"
-                                  >
-                                    <Component
-                                      aria-label="Manage Integrations"
-                                      className="css-dkprmi-StyledButton-getColors e17811v30"
-                                      disabled={false}
-                                      onClick={[Function]}
-                                      role="button"
-                                      size="xsmall"
-                                      to="/settings/org-slug/integrations/"
-                                    >
-                                      <Link
-                                        aria-label="Manage Integrations"
-                                        className="css-dkprmi-StyledButton-getColors e17811v30"
-                                        disabled={false}
-                                        onClick={[Function]}
-                                        onlyActiveOnIndex={false}
-                                        role="button"
-                                        size="xsmall"
-                                        style={Object {}}
-                                        to="/settings/org-slug/integrations/"
-                                      >
-                                        <a
-                                          aria-label="Manage Integrations"
-                                          className="css-dkprmi-StyledButton-getColors e17811v30"
-                                          disabled={false}
-                                          onClick={[Function]}
-                                          role="button"
-                                          size="xsmall"
-                                          style={Object {}}
-                                        >
-                                          <ButtonLabel
-                                            size="xsmall"
-                                          >
-                                            <Component
-                                              className="css-6q5v1w-ButtonLabel e17811v31"
-                                              size="xsmall"
-                                            >
-                                              <Flex
-                                                align="center"
-                                                className="css-6q5v1w-ButtonLabel e17811v31"
-                                                size="xsmall"
-                                              >
-                                                <Base
-                                                  align="center"
-                                                  className="e17811v31 css-dqr4rq-ButtonLabel"
-                                                  size="xsmall"
-                                                >
-                                                  <div
-                                                    className="e17811v31 css-dqr4rq-ButtonLabel"
-                                                    is={null}
-                                                    size="xsmall"
-                                                  >
-                                                    Manage Integrations
-                                                  </div>
-                                                </Base>
-                                              </Flex>
-                                            </Component>
-                                          </ButtonLabel>
-                                        </a>
-                                      </Link>
-                                    </Component>
-                                  </StyledButton>
-                                </Button>
-                              </span>
-                            </Tooltip>
-                          </Feature>
-                        </FeatureContainer>
-                      </div>
-                    </Base>
-                  </Box>
-                </div>
-              </Base>
-            </Flex>
-          </Component>
-        </PanelHeader>
-        <PanelBody
-          direction="column"
-          disablePadding={true}
-          flex={false}
-        >
-          <div
-            className="css-9vq8an-textStyles"
-          >
-            <EmptyMessage
-              description={
-                <FeatureContainer
-                  access={
-                    Array [
-                      "org:integrations",
-                    ]
-                  }
-                >
-                  [Function]
-                </FeatureContainer>
-              }
-              size="large"
-              title="No Integrations Enabled"
-            >
-              <Wrapper
-                size="large"
-              >
-                <div
-                  className="css-1ykemxy-Wrapper eh488yo0"
-                  size="large"
-                >
-                  <div
-                    className="ref-message"
-                  >
-                    <EmptyHeader>
-                      <div
-                        className="css-y01aqt-EmptyHeader eh488yo3"
-                      >
-                        No Integrations Enabled
-                      </div>
-                    </EmptyHeader>
-                    <EmptyDescription
-                      noMargin={true}
-                    >
-                      <Component
-                        className="css-1szwf0j-TextBlock-EmptyDescription eh488yo4"
-                        noMargin={true}
-                      >
-                        <div
-                          className="css-1szwf0j-TextBlock-EmptyDescription eh488yo4"
-                        >
-                          <FeatureContainer
-                            access={
-                              Array [
-                                "org:integrations",
-                              ]
-                            }
-                          >
-                            <Feature
-                              access={
-                                Array [
-                                  "org:integrations",
-                                ]
-                              }
-                              configFeatures={Array []}
-                              configUser={
-                                Object {
-                                  "email": "foo@example.com",
-                                  "flags": Object {
-                                    "newsletter_consent_prompt": false,
-                                  },
-                                  "hasPasswordAuth": true,
-                                  "id": "1",
-                                  "isAuthenticated": true,
-                                  "name": "Foo Bar",
-                                  "options": Object {
-                                    "timezone": "UTC",
-                                  },
-                                  "permissions": Set {},
-                                  "username": "foo@example.com",
-                                }
-                              }
-                              organization={
-                                Object {
-                                  "access": Array [
-                                    "org:read",
-                                    "org:write",
-                                    "org:admin",
-                                    "project:read",
-                                    "project:write",
-                                    "project:admin",
-                                    "team:read",
-                                    "team:write",
-                                    "team:admin",
-                                    "org:integrations",
-                                  ],
-                                  "features": Array [],
-                                  "id": "3",
-                                  "name": "Organization Name",
-                                  "onboardingTasks": Array [],
-                                  "projects": Array [],
-                                  "scrapeJavaScript": true,
-                                  "slug": "org-slug",
-                                  "status": Object {
-                                    "id": "active",
-                                    "name": "active",
-                                  },
-                                  "teams": Array [],
-                                }
-                              }
-                              project={
-                                Object {
-                                  "hasAccess": true,
-                                  "id": "2",
-                                  "isBookmarked": false,
-                                  "isMember": true,
-                                  "name": "Project Name",
-                                  "slug": "project-slug",
-                                  "teams": Array [],
-                                }
-                              }
-                              renderNoFeatureMessage={false}
-                            >
-                              <span
-                                key="6"
-                              >
-                                <span
-                                  key="1"
-                                >
-                                  Project Integrations can be enabled here for this project. Currently no organization integrations are enabled with project-specific integration capabilities.
-                                </span>
-                                <span
-                                  key="2"
-                                >
-                                   Visit the 
-                                </span>
-                                <Link
-                                  key="3"
-                                  to="/settings/org-slug/integrations"
-                                >
-                                  <Link
-                                    onlyActiveOnIndex={false}
-                                    style={Object {}}
-                                    to="/settings/org-slug/integrations"
-                                  >
-                                    <a
-                                      onClick={[Function]}
-                                      style={Object {}}
-                                    >
-                                      Organization Integration Settings
-                                    </a>
-                                  </Link>
-                                </Link>
-                                <span
-                                  key="4"
-                                >
-                                   to configure integrations.
-                                </span>
-                              </span>
-                            </Feature>
-                          </FeatureContainer>
-                        </div>
-                      </Component>
-                    </EmptyDescription>
-                  </div>
-                </div>
-              </Wrapper>
-            </EmptyMessage>
-          </div>
-        </PanelBody>
-      </div>
-    </Component>
-  </Panel>
-</ProjectIntegrations>
-`;
-
-exports[`ProjectIntegrations Renders emptystate with no permissions 1`] = `
-<ProjectIntegrations
-  params={
-    Object {
-      "orgId": "org-slug",
-      "projectId": "project-slug",
-    }
-  }
->
-  <Panel>
-    <Component
-      className="css-10qfvek-Panel e1laxa7d0"
-    >
-      <div
-        className="css-10qfvek-Panel e1laxa7d0"
-      >
-        <PanelHeader
-          disablePadding={true}
-          hasButtons={true}
-        >
-          <Component
-            className="css-30ccsi-PanelHeader-getPadding e1p8v8nv0"
-            disablePadding={true}
-            hasButtons={true}
-          >
-            <Flex
-              align="center"
-              className="css-30ccsi-PanelHeader-getPadding e1p8v8nv0"
-              justify="space-between"
-            >
-              <Base
-                align="center"
-                className="e1p8v8nv0 css-1uiswd5-PanelHeader-getPadding"
-                justify="space-between"
-              >
-                <div
-                  className="e1p8v8nv0 css-1uiswd5-PanelHeader-getPadding"
-                  is={null}
-                >
-                  <Box
-                    flex="1"
-                    px={2}
-                  >
-                    <Base
-                      className="css-pcjga5"
-                      flex="1"
-                      px={2}
-                    >
-                      <div
-                        className="css-pcjga5"
-                        is={null}
-                      >
-                        Project Integrations
-                      </div>
-                    </Base>
-                  </Box>
-                  <Box
-                    pr={1}
-                  >
-                    <Base
-                      className="css-ioegso"
-                      pr={1}
-                    >
-                      <div
-                        className="css-ioegso"
-                        is={null}
-                      >
-                        <FeatureContainer
-                          access={
-                            Array [
-                              "org:integrations",
-                            ]
-                          }
-                        >
-                          <Feature
-                            access={
-                              Array [
-                                "org:integrations",
-                              ]
-                            }
-                            configFeatures={Array []}
-                            configUser={
-                              Object {
-                                "email": "foo@example.com",
-                                "flags": Object {
-                                  "newsletter_consent_prompt": false,
-                                },
-                                "hasPasswordAuth": true,
-                                "id": "1",
-                                "isAuthenticated": true,
-                                "name": "Foo Bar",
-                                "options": Object {
-                                  "timezone": "UTC",
-                                },
-                                "permissions": Set {},
-                                "username": "foo@example.com",
-                              }
-                            }
-                            organization={
-                              Object {
-                                "access": Array [
-                                  "org:read",
-                                  "org:write",
-                                  "org:admin",
-                                  "project:read",
-                                  "project:write",
-                                  "project:admin",
-                                  "team:read",
-                                  "team:write",
-                                  "team:admin",
-                                ],
-                                "features": Array [],
-                                "id": "3",
-                                "name": "Organization Name",
-                                "onboardingTasks": Array [],
-                                "projects": Array [],
-                                "scrapeJavaScript": true,
-                                "slug": "org-slug",
-                                "status": Object {
-                                  "id": "active",
-                                  "name": "active",
-                                },
-                                "teams": Array [],
-                              }
-                            }
-                            project={
-                              Object {
-                                "hasAccess": true,
-                                "id": "2",
-                                "isBookmarked": false,
-                                "isMember": true,
-                                "name": "Project Name",
-                                "slug": "project-slug",
-                                "teams": Array [],
-                              }
-                            }
-                            renderNoFeatureMessage={false}
-                          >
-                            <Tooltip
-                              disabled={false}
-                              title="You don't have permission to manage organization integrations"
-                            >
-                              <span
-                                className="tip"
-                                title="You don't have permission to manage organization integrations"
-                              >
-                                <Button
-                                  disabled={true}
-                                  size="xsmall"
-                                  to="/settings/org-slug/integrations/"
-                                >
-                                  <StyledButton
-                                    aria-label="Manage Integrations"
-                                    disabled={true}
-                                    href={null}
-                                    onClick={[Function]}
-                                    role="button"
-                                    size="xsmall"
-                                    to={null}
-                                  >
-                                    <Component
-                                      aria-label="Manage Integrations"
-                                      className="css-1rcxqx1-StyledButton-getColors e17811v30"
-                                      disabled={true}
-                                      href={null}
-                                      onClick={[Function]}
-                                      role="button"
-                                      size="xsmall"
-                                      to={null}
-                                    >
-                                      <button
-                                        aria-label="Manage Integrations"
-                                        className="css-1rcxqx1-StyledButton-getColors e17811v30"
-                                        disabled={true}
-                                        href={null}
-                                        onClick={[Function]}
-                                        role="button"
-                                        size="xsmall"
-                                        to={null}
-                                      >
-                                        <ButtonLabel
-                                          size="xsmall"
-                                        >
-                                          <Component
-                                            className="css-6q5v1w-ButtonLabel e17811v31"
-                                            size="xsmall"
-                                          >
-                                            <Flex
-                                              align="center"
-                                              className="css-6q5v1w-ButtonLabel e17811v31"
-                                              size="xsmall"
-                                            >
-                                              <Base
-                                                align="center"
-                                                className="e17811v31 css-dqr4rq-ButtonLabel"
-                                                size="xsmall"
-                                              >
-                                                <div
-                                                  className="e17811v31 css-dqr4rq-ButtonLabel"
-                                                  is={null}
-                                                  size="xsmall"
-                                                >
-                                                  Manage Integrations
-                                                </div>
-                                              </Base>
-                                            </Flex>
-                                          </Component>
-                                        </ButtonLabel>
-                                      </button>
-                                    </Component>
-                                  </StyledButton>
-                                </Button>
-                              </span>
-                            </Tooltip>
-                          </Feature>
-                        </FeatureContainer>
-                      </div>
-                    </Base>
-                  </Box>
-                </div>
-              </Base>
-            </Flex>
-          </Component>
-        </PanelHeader>
-        <PanelBody
-          direction="column"
-          disablePadding={true}
-          flex={false}
-        >
-          <div
-            className="css-9vq8an-textStyles"
-          >
-            <EmptyMessage
-              description={
-                <FeatureContainer
-                  access={
-                    Array [
-                      "org:integrations",
-                    ]
-                  }
-                >
-                  [Function]
-                </FeatureContainer>
-              }
-              size="large"
-              title="No Integrations Enabled"
-            >
-              <Wrapper
-                size="large"
-              >
-                <div
-                  className="css-1ykemxy-Wrapper eh488yo0"
-                  size="large"
-                >
-                  <div
-                    className="ref-message"
-                  >
-                    <EmptyHeader>
-                      <div
-                        className="css-y01aqt-EmptyHeader eh488yo3"
-                      >
-                        No Integrations Enabled
-                      </div>
-                    </EmptyHeader>
-                    <EmptyDescription
-                      noMargin={true}
-                    >
-                      <Component
-                        className="css-1szwf0j-TextBlock-EmptyDescription eh488yo4"
-                        noMargin={true}
-                      >
-                        <div
-                          className="css-1szwf0j-TextBlock-EmptyDescription eh488yo4"
-                        >
-                          <FeatureContainer
-                            access={
-                              Array [
-                                "org:integrations",
-                              ]
-                            }
-                          >
-                            <Feature
-                              access={
-                                Array [
-                                  "org:integrations",
-                                ]
-                              }
-                              configFeatures={Array []}
-                              configUser={
-                                Object {
-                                  "email": "foo@example.com",
-                                  "flags": Object {
-                                    "newsletter_consent_prompt": false,
-                                  },
-                                  "hasPasswordAuth": true,
-                                  "id": "1",
-                                  "isAuthenticated": true,
-                                  "name": "Foo Bar",
-                                  "options": Object {
-                                    "timezone": "UTC",
-                                  },
-                                  "permissions": Set {},
-                                  "username": "foo@example.com",
-                                }
-                              }
-                              organization={
-                                Object {
-                                  "access": Array [
-                                    "org:read",
-                                    "org:write",
-                                    "org:admin",
-                                    "project:read",
-                                    "project:write",
-                                    "project:admin",
-                                    "team:read",
-                                    "team:write",
-                                    "team:admin",
-                                  ],
-                                  "features": Array [],
-                                  "id": "3",
-                                  "name": "Organization Name",
-                                  "onboardingTasks": Array [],
-                                  "projects": Array [],
-                                  "scrapeJavaScript": true,
-                                  "slug": "org-slug",
-                                  "status": Object {
-                                    "id": "active",
-                                    "name": "active",
-                                  },
-                                  "teams": Array [],
-                                }
-                              }
-                              project={
-                                Object {
-                                  "hasAccess": true,
-                                  "id": "2",
-                                  "isBookmarked": false,
-                                  "isMember": true,
-                                  "name": "Project Name",
-                                  "slug": "project-slug",
-                                  "teams": Array [],
-                                }
-                              }
-                              renderNoFeatureMessage={false}
-                            >
-                              Project Integrations can be enabled here for this project. Currently no organization integrations are enabled with project-specific integration capabilities.
-                            </Feature>
-                          </FeatureContainer>
-                        </div>
-                      </Component>
-                    </EmptyDescription>
-                  </div>
-                </div>
-              </Wrapper>
-            </EmptyMessage>
-          </div>
-        </PanelBody>
-      </div>
-    </Component>
-  </Panel>
-</ProjectIntegrations>
-`;
diff --git a/tests/js/spec/views/settings/project/projectIntegrations.spec.jsx b/tests/js/spec/views/settings/project/projectIntegrations.spec.jsx
deleted file mode 100644
index 8903b6fbc5..0000000000
--- a/tests/js/spec/views/settings/project/projectIntegrations.spec.jsx
+++ /dev/null
@@ -1,99 +0,0 @@
-import React from 'react';
-
-import {mount} from 'enzyme';
-import {
-  removeIntegrationFromProject,
-  addIntegrationToProject,
-} from 'app/actionCreators/integrations';
-import ProjectIntegrations from 'app/views/settings/project/projectIntegrations';
-
-jest.mock('app/actionCreators/integrations');
-
-describe('ProjectIntegrations', function() {
-  let org, project, params, organization, routerContext;
-
-  beforeEach(function() {
-    project = TestStubs.Project();
-    org = TestStubs.Organization();
-    organization = org;
-    params = {
-      orgId: org.slug,
-      projectId: project.slug,
-    };
-    routerContext = TestStubs.routerContext([{organization, project}]);
-
-    removeIntegrationFromProject.mockReturnValue(new Promise(resolve => resolve()));
-    addIntegrationToProject.mockReturnValue(new Promise(resolve => resolve()));
-  });
-
-  it('Renders emptystate with no permissions', function() {
-    MockApiClient.addMockResponse({
-      url: `/organizations/${org.slug}/integrations/`,
-      method: 'GET',
-      body: [],
-    });
-
-    const wrapper = mount(<ProjectIntegrations params={params} />, routerContext);
-
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('Renders emptystate with access', function() {
-    organization.access.push('org:integrations');
-
-    const wrapper = mount(<ProjectIntegrations params={params} />, routerContext);
-
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('Renders integration without access', function() {
-    MockApiClient.addMockResponse({
-      url: `/organizations/${org.slug}/integrations/`,
-      method: 'GET',
-      body: [TestStubs.JiraIntegration()],
-    });
-
-    const wrapper = mount(<ProjectIntegrations params={params} />, routerContext);
-
-    expect(wrapper.find('Switch').prop('isDisabled')).toBe(true);
-  });
-
-  it('Renders integration with access', function() {
-    organization.access.push('project:integrations');
-
-    MockApiClient.addMockResponse({
-      url: `/organizations/${org.slug}/integrations/`,
-      method: 'GET',
-      body: [TestStubs.JiraIntegration()],
-    });
-
-    const wrapper = mount(<ProjectIntegrations params={params} />, routerContext);
-    const integration = wrapper.find('IntegrationItem');
-
-    expect(integration.exists()).toBe(true);
-    expect(wrapper.find('Switch').prop('isDisabled')).toBe(false);
-  });
-
-  it('can enable and disable an integration', async function() {
-    organization.access.push('project:integrations');
-    MockApiClient.addMockResponse({
-      url: `/organizations/${org.slug}/integrations/`,
-      method: 'GET',
-      body: [TestStubs.JiraIntegration()],
-    });
-
-    const wrapper = mount(<ProjectIntegrations params={params} />, routerContext);
-
-    wrapper.find('Switch').simulate('click');
-    expect(addIntegrationToProject).toHaveBeenCalled();
-
-    await tick();
-    expect(wrapper.state('integrations')[0].projects).toEqual([project.slug]);
-
-    wrapper.find('Switch').simulate('click');
-    expect(removeIntegrationFromProject).toHaveBeenCalled();
-
-    await tick();
-    expect(wrapper.state('integrations')[0].projects).toEqual([]);
-  });
-});
diff --git a/tests/sentry/api/endpoints/test_group_integration_details.py b/tests/sentry/api/endpoints/test_group_integration_details.py
index 57a9d842f5..adfebd21ff 100644
--- a/tests/sentry/api/endpoints/test_group_integration_details.py
+++ b/tests/sentry/api/endpoints/test_group_integration_details.py
@@ -34,7 +34,6 @@ class GroupIntegrationDetailsTest(APITestCase):
                 'key': provider.key,
                 'name': provider.name,
                 'canAdd': provider.can_add,
-                'canAddProject': provider.can_add_project,
                 'canDisable': provider.can_disable,
                 'features': [f.value for f in provider.features],
                 'aspects': provider.metadata.aspects,
@@ -74,7 +73,6 @@ class GroupIntegrationDetailsTest(APITestCase):
                 'key': provider.key,
                 'name': provider.name,
                 'canAdd': provider.can_add,
-                'canAddProject': provider.can_add_project,
                 'canDisable': provider.can_disable,
                 'features': [f.value for f in provider.features],
                 'aspects': provider.metadata.aspects,
diff --git a/tests/sentry/api/endpoints/test_group_integrations.py b/tests/sentry/api/endpoints/test_group_integrations.py
index e063670dda..497f8fb3cf 100644
--- a/tests/sentry/api/endpoints/test_group_integrations.py
+++ b/tests/sentry/api/endpoints/test_group_integrations.py
@@ -47,7 +47,6 @@ class GroupIntegrationsTest(APITestCase):
                 'key': provider.key,
                 'name': provider.name,
                 'canAdd': provider.can_add,
-                'canAddProject': provider.can_add_project,
                 'canDisable': provider.can_disable,
                 'features': [f.value for f in provider.features],
                 'aspects': provider.metadata.aspects,
diff --git a/tests/sentry/api/endpoints/test_organization_integration_details.py b/tests/sentry/api/endpoints/test_organization_integration_details.py
index 467f6bcdad..ea29ff59e2 100644
--- a/tests/sentry/api/endpoints/test_organization_integration_details.py
+++ b/tests/sentry/api/endpoints/test_organization_integration_details.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 import six
 
-from sentry.models import Integration, OrganizationIntegration, ProjectIntegration
+from sentry.models import Integration, OrganizationIntegration
 from sentry.testutils import APITestCase
 
 
@@ -29,28 +29,17 @@ class OrganizationIntegrationDetailsTest(APITestCase):
         assert response.data['configData'] == {'setting': 'value'}
 
     def test_removal(self):
-        team = self.create_team(organization=self.org, name='Mariachi Band')
-        project1 = self.create_project(teams=[team], name='project-1')
-        project2 = self.create_project(teams=[team], name='project-2')
-
-        # Setup projects to ensure the projects are removed along with the organization integration
-        assert self.integration.add_project(project1.id)
-        assert self.integration.add_project(project2.id)
-
         with self.tasks():
             response = self.client.delete(self.path, format='json')
 
             assert response.status_code == 204, response.content
             assert Integration.objects.filter(id=self.integration.id).exists()
 
-            # Ensure both Organization *and* Project integrations are removed
+            # Ensure Organization integrations are removed
             assert not OrganizationIntegration.objects.filter(
                 integration=self.integration,
                 organization=self.org,
             ).exists()
-            assert not ProjectIntegration.objects.filter(
-                project__organization=self.org
-            ).exists()
 
     def test_update_config(self):
         config = {
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index c39d415b32..c652dcb2bf 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -465,9 +465,6 @@ class GroupUpdateTest(APITestCase):
             name='Example',
         )
         integration.add_organization(org.id)
-        integration.add_project(
-            self.project.id, {
-                'resolve_status': 'Resolved', 'resolve_when': 'Resolved'})
         group = self.create_group(status=GroupStatus.UNRESOLVED, organization=org)
 
         OrganizationIntegration.objects.filter(
@@ -553,9 +550,6 @@ class GroupUpdateTest(APITestCase):
                 'sync_assignee_inbound': True,
             }
         )
-        integration.add_project(
-            group.project_id, {
-                'resolve_status': 'Resolved', 'resolve_when': 'Resolved'})
         GroupResolution.objects.create(
             group=group,
             release=release,
diff --git a/tests/sentry/api/endpoints/test_project_integration_details.py b/tests/sentry/api/endpoints/test_project_integration_details.py
deleted file mode 100644
index 57b6303bf7..0000000000
--- a/tests/sentry/api/endpoints/test_project_integration_details.py
+++ /dev/null
@@ -1,82 +0,0 @@
-from __future__ import absolute_import
-
-import six
-
-from sentry.models import Integration, ProjectIntegration
-from sentry.testutils import APITestCase
-
-
-class ProjectIntegrationDetailsTest(APITestCase):
-    def setUp(self):
-        super(ProjectIntegrationDetailsTest, self).setUp()
-
-        self.login_as(user=self.user)
-        self.org = self.create_organization(owner=self.user, name='baz')
-
-        team = self.create_team(organization=self.org, name='Mariachi Band')
-        self.project = self.create_project(teams=[team], name='bar-project')
-
-        self.integration = Integration.objects.create(
-            provider='example',
-            name='Example',
-        )
-        self.integration.add_organization(self.org.id)
-
-        self.path = '/api/0/projects/{}/{}/integrations/{}/'.format(
-            self.org.slug,
-            self.project.slug,
-            self.integration.id,
-        )
-
-    def test_simple(self):
-        config = {'setting': 'value'}
-        assert self.integration.add_project(self.project.id, config=config)
-
-        response = self.client.get(self.path, format='json')
-
-        assert response.status_code == 200, response.content
-        assert response.data['id'] == six.text_type(self.integration.id)
-        assert response.data['configData'] == config
-
-    def test_enable(self):
-        response = self.client.put(self.path, format='json')
-        assert response.status_code == 201, response.content
-
-        assert ProjectIntegration.objects.filter(
-            project=self.project,
-            integration=self.integration
-        ).exists()
-
-        # Object has already been created, 204
-        response = self.client.put(self.path, format='json')
-        assert response.status_code == 204, response.content
-
-    def test_remove(self):
-        assert self.integration.add_project(self.project.id)
-
-        response = self.client.delete(self.path, format='json')
-        assert response.status_code == 204, response.content
-
-        assert not ProjectIntegration.objects.filter(
-            project=self.project,
-            integration=self.integration
-        ).exists()
-
-    def test_update_config(self):
-        config = {'setting': 'value'}
-        assert self.integration.add_project(self.project.id, config=config)
-
-        config = {
-            'setting': 'new_value',
-            'setting2': 'baz',
-        }
-        response = self.client.post(self.path, format='json', data=config)
-
-        assert response.status_code == 200, response.content
-
-        project_integration = ProjectIntegration.objects.get(
-            project=self.project,
-            integration=self.integration,
-        )
-
-        assert project_integration.config == config
diff --git a/tests/sentry/deletions/test_organizationintegration.py b/tests/sentry/deletions/test_organizationintegration.py
index 6bce154e38..6ab6ea38c1 100644
--- a/tests/sentry/deletions/test_organizationintegration.py
+++ b/tests/sentry/deletions/test_organizationintegration.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 
 from sentry.models import (
-    ExternalIssue, Integration, OrganizationIntegration, ProjectIntegration, ScheduledDeletion
+    ExternalIssue, Integration, OrganizationIntegration, ScheduledDeletion
 )
 from sentry.tasks.deletion import run_deletion
 from sentry.testutils import TestCase
@@ -10,21 +10,15 @@ from sentry.testutils import TestCase
 class DeleteOrganizationIntegrationTest(TestCase):
     def test_simple(self):
         org = self.create_organization()
-        project = self.create_project(organization=org)
         integration = Integration.objects.create(
             provider='example',
             name='Example',
         )
         integration.add_organization(org.id)
-        integration.add_project(project.id)
         organization_integration = OrganizationIntegration.objects.get(
             integration_id=integration.id,
             organization_id=org.id,
         )
-        project_integration = ProjectIntegration.objects.get(
-            integration_id=integration.id,
-            project__organization=org,
-        )
         external_issue = ExternalIssue.objects.create(
             organization_id=org.id,
             integration_id=integration.id,
@@ -39,4 +33,3 @@ class DeleteOrganizationIntegrationTest(TestCase):
 
         assert not OrganizationIntegration.objects.filter(id=organization_integration.id).exists()
         assert not ExternalIssue.objects.filter(id=external_issue.id).exists()
-        assert not ProjectIntegration.objects.filter(id=project_integration.id).exists()
diff --git a/tests/sentry/integrations/test_base.py b/tests/sentry/integrations/test_base.py
index 12d75288fa..8f5427ba18 100644
--- a/tests/sentry/integrations/test_base.py
+++ b/tests/sentry/integrations/test_base.py
@@ -29,7 +29,6 @@ class IntegrationTestCase(TestCase):
             }
         )
         self.org_integration = self.model.add_organization(self.organization.id, self.identity.id)
-        self.project_integration = self.model.add_project(self.project.id)
 
     def test_no_context(self):
         integration = Integration(self.model, self.organization.id)
diff --git a/tests/sentry/integrations/vsts/test_issues.py b/tests/sentry/integrations/vsts/test_issues.py
index 38de070788..2cb1ce9f85 100644
--- a/tests/sentry/integrations/vsts/test_issues.py
+++ b/tests/sentry/integrations/vsts/test_issues.py
@@ -53,7 +53,6 @@ class VstsIssueSycnTest(TestCase):
             'sync_forward_assignment': True,
             'sync_reverse_assignment': True,
         }
-        model.add_project(self.project.id, self.config)
         self.integration = VstsIntegration(model, self.organization.id)
         self.issue_id = 309
 
diff --git a/tests/sentry/integrations/vsts/test_webhooks.py b/tests/sentry/integrations/vsts/test_webhooks.py
index 4b9a5a70b4..2ac6a04c68 100644
--- a/tests/sentry/integrations/vsts/test_webhooks.py
+++ b/tests/sentry/integrations/vsts/test_webhooks.py
@@ -56,7 +56,6 @@ class VstsWebhookWorkItemTest(APITestCase):
             'sync_reverse_assignment': True,
         }
         self.org_integration.save()
-        self.project_integration = self.model.add_project(self.project.id)
         self.integration = VstsIntegration(self.model, self.organization.id)
 
         self.user_to_assign = self.create_user('sentryuseremail@email.com')
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index 40dd1d0e34..ed9e5fb258 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -543,9 +543,6 @@ class EventManagerTest(TransactionTestCase):
             }
         )
 
-        integration.add_project(
-            group.project_id, {
-                'resolve_status': 'Resolved', 'resolve_when': 'Resolved'})
         external_issue = ExternalIssue.objects.get_or_create(
             organization_id=org.id,
             integration_id=integration.id,
