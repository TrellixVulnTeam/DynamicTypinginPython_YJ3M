commit 4ff5911f66a8240c93063f88207e381b7e8d038e
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Dec 16 13:57:50 2015 -0800

    Add User Reports to Project UI
    
    Prototype feature exposing a list of user reports sorted by the most recent.

diff --git a/src/sentry/static/sentry/app/components/compactIssue.jsx b/src/sentry/static/sentry/app/components/compactIssue.jsx
index 0a5c061b2b..2d9810722b 100644
--- a/src/sentry/static/sentry/app/components/compactIssue.jsx
+++ b/src/sentry/static/sentry/app/components/compactIssue.jsx
@@ -73,10 +73,6 @@ const SnoozeAction = React.createClass({
 });
 
 const CompactIssue = React.createClass({
-  propTypes: {
-    id: React.PropTypes.string.isRequired,
-  },
-
   mixins: [
     ApiMixin,
     Reflux.listenTo(GroupStore, 'onGroupChange')
@@ -84,7 +80,7 @@ const CompactIssue = React.createClass({
 
   getInitialState() {
     return {
-      issue: GroupStore.get(this.props.id)
+      issue: this.props.data || GroupStore.get(this.props.id)
     };
   },
 
@@ -133,7 +129,7 @@ const CompactIssue = React.createClass({
   render() {
     let issue = this.state.issue;
 
-    let className = 'issue row';
+    let className = 'issue';
     if (issue.isBookmarked) {
       className += ' isBookmarked';
     }
@@ -156,63 +152,66 @@ const CompactIssue = React.createClass({
 
     return (
       <li className={className} onClick={this.toggleSelect}>
-        <div className="col-md-9">
-          <span className="error-level truncate" title={issue.level}></span>
-          <h3 className="truncate">
-            <Link to={`/${orgId}/${projectId}/issues/${id}/`}>
-              <span className="icon icon-soundoff" />
-              <span className="icon icon-bookmark" />
-              {issue.title}
-            </Link>
-          </h3>
-          <div className="event-extra">
-            <span className="project-name">
-              <Link to={`/${orgId}/${projectId}/`}>{issue.project.name}</Link>
-            </span>
-            {issue.numComments !== 0 &&
-              <span>
-                <Link to={`/${orgId}/${projectId}/issues/${id}/activity/`} className="comments">
-                  <span className="icon icon-comments" />
-                  <span className="tag-count">{issue.numComments}</span>
-                </Link>
+        <div className="row">
+          <div className="col-md-11">
+            <span className="error-level truncate" title={issue.level}></span>
+            <h3 className="truncate">
+              <Link to={`/${orgId}/${projectId}/issues/${id}/`}>
+                <span className="icon icon-soundoff" />
+                <span className="icon icon-bookmark" />
+                {issue.title}
+              </Link>
+            </h3>
+            <div className="event-extra">
+              <span className="project-name">
+                <Link to={`/${orgId}/${projectId}/`}>{issue.project.name}</Link>
               </span>
-            }
-            <span className="culprit">{issue.culprit}</span>
+              {issue.numComments !== 0 &&
+                <span>
+                  <Link to={`/${orgId}/${projectId}/issues/${id}/activity/`} className="comments">
+                    <span className="icon icon-comments" />
+                    <span className="tag-count">{issue.numComments}</span>
+                  </Link>
+                </span>
+              }
+              <span className="culprit">{issue.culprit}</span>
+            </div>
           </div>
-        </div>
-        {this.props.statsPeriod &&
-          <div className="col-md-2 hidden-sm hidden-xs event-graph align-right">
-            <GroupChart id={id} statsPeriod={this.props.statsPeriod} />
+          {this.props.statsPeriod &&
+            <div className="col-md-2 hidden-sm hidden-xs event-graph align-right">
+              <GroupChart id={id} statsPeriod={this.props.statsPeriod} />
+            </div>
+          }
+          <div className="col-md-1 align-right">
+            <DropdownLink
+              topLevelClasses="more-menu"
+              className="more-menu-toggle"
+              caret={false}
+              title={title}>
+              <li>
+                <a onClick={this.onUpdate.bind(this, {status: issue.status !== 'resolved' ? 'resolved' : 'unresolved'})}>
+                  <span className="icon-checkmark" />
+                </a>
+              </li>
+              <li>
+                <a onClick={this.onUpdate.bind(this, {isBookmarked: !issue.isBookmarked})}>
+                  <span className="icon-bookmark" />
+                </a>
+              </li>
+              <li>
+                <SnoozeAction
+                  orgId={orgId}
+                  projectId={projectId}
+                  groupId={id}
+                  onSnooze={this.onSnooze} />
+              </li>
+              {false &&
+                <li><a href="#"><span className="icon-user" /></a></li>
+              }
+            </DropdownLink>
           </div>
-        }
-        <div className="col-md-1 align-right">
-          <DropdownLink
-            topLevelClasses="more-menu"
-            className="more-menu-toggle"
-            caret={false}
-            title={title}>
-            <li>
-              <a onClick={this.onUpdate.bind(this, {status: issue.status !== 'resolved' ? 'resolved' : 'unresolved'})}>
-                <span className="icon-checkmark" />
-              </a>
-            </li>
-            <li>
-              <a onClick={this.onUpdate.bind(this, {isBookmarked: !issue.isBookmarked})}>
-                <span className="icon-bookmark" />
-              </a>
-            </li>
-            <li>
-              <SnoozeAction
-                orgId={orgId}
-                projectId={projectId}
-                groupId={id}
-                onSnooze={this.onSnooze} />
-            </li>
-            {false &&
-              <li><a href="#"><span className="icon-user" /></a></li>
-            }
-          </DropdownLink>
         </div>
+        {this.props.children}
       </li>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/projectHeader/index.jsx b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
index 0dafdb310d..086b9251cd 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
@@ -37,6 +37,13 @@ const ProjectHeader = React.createClass({
                     </Link>
                   </li>
                 }
+                {features.has('user-reports') &&
+                  <li className={navSection == 'user-reports' ? 'active' : ''}>
+                    <Link to={`/${org.slug}/${project.slug}/user-reports/`}>
+                      {t('User Reports')}
+                    </Link>
+                  </li>
+                }
                 <li className={navSection == 'releases' ? 'active' : ''}>
                   <Link to={`/${org.slug}/${project.slug}/releases/`}>
                     {t('Releases')}
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 7b564c2e70..c6f5956781 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -28,6 +28,7 @@ import ProjectInstallOverview from './views/projectInstall/overview';
 import ProjectInstallPlatform from './views/projectInstall/platform';
 import ProjectReleases from './views/projectReleases';
 import ProjectSettings from './views/projectSettings';
+import ProjectUserReports from './views/projectUserReports';
 import ReleaseAllEvents from './views/releaseAllEvents';
 import ReleaseArtifacts from './views/releaseArtifacts';
 import ReleaseDetails from './views/releaseDetails';
@@ -76,6 +77,7 @@ let routes = (
           <Route path="all-events/" component={errorHandler(ReleaseAllEvents)} />
           <Route path="artifacts/" component={errorHandler(ReleaseArtifacts)} />
         </Route>
+        <Route path="user-reports/" component={errorHandler(ProjectUserReports)} />
         <Route path="settings/" component={errorHandler(ProjectSettings)}>
           <Route path="install/" component={errorHandler(ProjectInstall)}>
             <IndexRoute component={errorHandler(ProjectInstallOverview)}/>
diff --git a/src/sentry/static/sentry/app/views/projectEvents/index.jsx b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
index 235e9b222c..d1176b921b 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
@@ -149,7 +149,7 @@ const ProjectEvents = React.createClass({
 
     let children = this.state.eventList.map((event, eventIdx) => {
       return (
-        <tr key={eventIdx}>
+        <tr key={event.id}>
           <td style={{width: 240}}><small><DateTime date={event.dateCreated} /></small></td>
           <td>
             <h5>
diff --git a/src/sentry/static/sentry/app/views/projectUserReports.jsx b/src/sentry/static/sentry/app/views/projectUserReports.jsx
new file mode 100644
index 0000000000..3ee7c0d5eb
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectUserReports.jsx
@@ -0,0 +1,196 @@
+import jQuery from 'jquery';
+import React from 'react';
+import {History} from 'react-router';
+import ApiMixin from '../mixins/apiMixin';
+import Gravatar from '../components/gravatar';
+import LoadingError from '../components/loadingError';
+import LoadingIndicator from '../components/loadingIndicator';
+import Pagination from '../components/pagination';
+import CompactIssue from '../components/compactIssue';
+import TimeSince from '../components/timeSince';
+import utils from '../utils';
+import {t} from '../locale';
+
+const ProjectUserReports = React.createClass({
+  propTypes: {
+    setProjectNavSection: React.PropTypes.func
+  },
+
+  mixins: [
+    ApiMixin,
+    History,
+  ],
+
+  getDefaultProps() {
+    return {
+      defaultQuery: '',
+    };
+  },
+
+  getInitialState() {
+    let queryParams = this.props.location.query;
+
+    return {
+      reportList: [],
+      loading: true,
+      error: false,
+      query: queryParams.query || this.props.defaultQuery,
+      pageLinks: '',
+    };
+  },
+
+  componentWillMount() {
+    this.props.setProjectNavSection('user-reports');
+    this.fetchData();
+  },
+
+  componentWillReceiveProps(nextProps) {
+    if (nextProps.location.search !== this.props.location.search) {
+      let queryParams = nextProps.location.query;
+      this.setState({
+        query: queryParams.query
+      }, this.fetchData);
+    }
+  },
+
+  onSearch(query) {
+    let targetQueryParams = {};
+    if (query !== '')
+      targetQueryParams.query = query;
+
+    let {orgId, projectId} = this.props.params;
+    this.history.pushState(null, `/${orgId}/${projectId}/user-reports/`, targetQueryParams);
+  },
+
+  fetchData() {
+    this.setState({
+      loading: true,
+      error: false
+    });
+
+    this.api.request(this.getEndpoint(), {
+      success: (data, _, jqXHR) => {
+        this.setState({
+          error: false,
+          loading: false,
+          reportList: data,
+          pageLinks: jqXHR.getResponseHeader('Link')
+        });
+      },
+      error: () => {
+        this.setState({
+          error: true,
+          loading: false
+        });
+      }
+    });
+  },
+
+  getEndpoint() {
+    let params = this.props.params;
+    let queryParams = {
+      ...this.props.location.query,
+      limit: 50,
+      query: this.state.query
+    };
+
+    return `/projects/${params.orgId}/${params.projectId}/user-reports/?${jQuery.param(queryParams)}`;
+  },
+
+  renderStreamBody() {
+    let body;
+
+    if (this.state.loading)
+      body = this.renderLoading();
+    else if (this.state.error)
+      body = <LoadingError onRetry={this.fetchData} />;
+    else if (this.state.reportList.length > 0)
+      body = this.renderResults();
+    else if (this.state.query && this.state.query !== this.props.defaultQuery)
+      body = this.renderNoQueryResults();
+    else
+      body = this.renderEmpty();
+
+    return body;
+  },
+
+  renderLoading() {
+    return (
+      <div className="box">
+        <LoadingIndicator />
+      </div>
+    );
+  },
+
+  renderNoQueryResults() {
+    return (
+      <div className="box empty-stream">
+        <span className="icon icon-exclamation" />
+        <p>{t('Sorry, no results match your search query.')}</p>
+      </div>
+    );
+  },
+
+  renderEmpty() {
+    return (
+      <div className="box empty-stream">
+        <span className="icon icon-exclamation" />
+        <p>{t('No user reports have been collected for this project.')}</p>
+        <p><a href="">{t('Learn how to integrate User Crash Reports')}</a></p>
+      </div>
+    );
+  },
+
+  renderResults() {
+    let {orgId, projectId} = this.props.params;
+    let children = this.state.reportList.map((item, itemIdx) => {
+      let body = utils.nl2br(utils.urlize(utils.escape(item.comments)));
+      let issue = item.issue;
+
+      return (
+        <CompactIssue
+            key={issue.id}
+            id={issue.id}
+            data={issue}
+            orgId={orgId}
+            projectId={projectId}>
+          <div className="activity-container" style={{margin: '10px 0 5px'}}>
+            <ul className="activity">
+              <li className="activity-note" style={{paddingBottom: 0}}>
+                <Gravatar email={item.email} size={64} className="avatar" />
+                <div className="activity-bubble">
+                  <TimeSince date={item.dateCreated} />
+                  <div className="activity-author">{item.name} <small>{item.email}</small></div>
+                  <p dangerouslySetInnerHTML={{__html: body}} />
+                </div>
+              </li>
+            </ul>
+          </div>
+        </CompactIssue>
+      );
+    });
+
+    return (
+      <ul className="issue-list">
+        {children}
+      </ul>
+    );
+  },
+
+  render() {
+    return (
+      <div>
+        <div className="row release-list-header">
+          <div className="col-sm-7">
+            <h3>{t('User Reports')}</h3>
+          </div>
+        </div>
+        <div className="alert alert-block alert-info">Psst! This feature is still a work-in-progress. Thanks for being an early adopter!</div>
+        {this.renderStreamBody()}
+        <Pagination pageLinks={this.state.pageLinks} />
+      </div>
+    );
+  }
+});
+
+export default ProjectUserReports;
