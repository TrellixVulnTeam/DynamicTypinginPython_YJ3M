commit 0fb6e38e25a3028e083cb258be049544a9a8635d
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 11 18:39:09 2013 -0800

    Dont support extra data which is not a dictionary

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 96005e257e..c5e4817227 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -323,10 +323,15 @@ def validate_data(project, data, client=None):
             del data['timestamp']
 
     if data.get('modules') and type(data['modules']) != dict:
-        logger.error('Discardied invalid type for modules: %s', type(data['modules']),
+        logger.error('Discarded invalid type for modules: %s', type(data['modules']),
             **client_metadata(client))
         del data['modules']
 
+    if data.get('extra') and type(data['extra']) != dict:
+        logger.error('Discarded invalid type for extra: %s', type(data['extra']),
+            **client_metadata(client))
+        del data['extra']
+
     for k in data.keys():
         if k in RESERVED_FIELDS:
             continue
diff --git a/src/sentry/web/frontend/groups.py b/src/sentry/web/frontend/groups.py
index 746bf86ac3..4d64f7a1fa 100644
--- a/src/sentry/web/frontend/groups.py
+++ b/src/sentry/web/frontend/groups.py
@@ -187,9 +187,13 @@ def render_with_group_context(group, template, context, request=None, event=None
             next_event = None
             prev_event = None
 
+        extra_data = event.data.get('extra', {})
+        if not isinstance(extra_data, dict):
+            extra_data = {}
+
         context.update({
             'event': event,
-            'json_data': event.data.get('extra', {}),
+            'json_data': extra_data,
             'version_data': event.data.get('modules', None),
             'next_event': next_event,
             'prev_event': prev_event,
