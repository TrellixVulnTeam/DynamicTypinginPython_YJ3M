commit 944ac97c3c39a760a29dc8e0f1da162759ecb7d6
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 23 16:22:43 2015 -0800

    Pull latest stable version from beacon

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index c7afe983a1..0842101e2e 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -372,7 +372,6 @@ CELERY_CREATE_MISSING_QUEUES = True
 CELERY_IMPORTS = (
     'sentry.tasks.beacon',
     'sentry.tasks.check_alerts',
-    'sentry.tasks.check_update',
     'sentry.tasks.cleanup',
     'sentry.tasks.deletion',
     'sentry.tasks.email',
@@ -419,13 +418,6 @@ CELERYBEAT_SCHEDULE = {
             'queue': 'alerts',
         }
     },
-    'check-version': {
-        'task': 'sentry.tasks.check_update',
-        'schedule': timedelta(hours=1),
-        'options': {
-            'expires': 3600,
-        },
-    },
     'send-beacon': {
         'task': 'sentry.tasks.send_beacon',
         'schedule': timedelta(hours=1),
diff --git a/src/sentry/tasks/beacon.py b/src/sentry/tasks/beacon.py
index 5804338aaa..0daec74505 100644
--- a/src/sentry/tasks/beacon.py
+++ b/src/sentry/tasks/beacon.py
@@ -8,6 +8,7 @@ sentry.tasks.beacon
 
 from __future__ import absolute_import, print_function
 
+import json
 import logging
 import sentry
 
@@ -73,3 +74,7 @@ def send_beacon():
     except Exception:
         logger.warning('Failed sending beacon', exc_info=True)
         return
+
+    data = json.loads(response)
+    if 'version' in data:
+        options.set('sentry:latest_version', data['version']['stable'])
diff --git a/src/sentry/tasks/check_update.py b/src/sentry/tasks/check_update.py
deleted file mode 100644
index d989baa51e..0000000000
--- a/src/sentry/tasks/check_update.py
+++ /dev/null
@@ -1,44 +0,0 @@
-"""
-sentry.tasks.check_version
-~~~~~~~~~~~~~~~~~~~~~~~~~
-
-:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
-:license: BSD, see LICENSE for more details.
-"""
-
-from __future__ import absolute_import, print_function
-
-import json
-import logging
-
-from simplejson import JSONDecodeError
-
-from sentry.http import safe_urlopen, safe_urlread
-from sentry.tasks.base import instrumented_task
-
-PYPI_URL = 'https://pypi.python.org/pypi/sentry/json'
-
-logger = logging.getLogger(__name__)
-
-
-@instrumented_task(name='sentry.tasks.check_update', queue='update')
-def check_update():
-    """
-    Daily retrieving latest available Sentry version from PyPI
-    """
-    from sentry.receivers import set_sentry_version
-
-    try:
-        request = safe_urlopen(PYPI_URL)
-        result = safe_urlread(request)
-    except Exception:
-        logger.warning('Failed update info of latest version Sentry', exc_info=True)
-        return
-
-    try:
-        version = json.loads(result)['info']['version']
-        set_sentry_version(version)
-    except JSONDecodeError:
-        logger.warning('Failed parsing data json from PYPI')
-    except Exception:
-        logger.warning('Failed update info of latest version Sentry', exc_info=True)
diff --git a/tests/sentry/tasks/check_update/tests.py b/tests/sentry/tasks/check_update/tests.py
deleted file mode 100644
index ff5771c8c8..0000000000
--- a/tests/sentry/tasks/check_update/tests.py
+++ /dev/null
@@ -1,66 +0,0 @@
-import json
-
-from mock import patch
-
-from sentry import options
-from sentry.testutils import TestCase
-from sentry.receivers import set_sentry_version
-from sentry.tasks.check_update import check_update, PYPI_URL
-
-
-class CheckUpdateTest(TestCase):
-
-    OLD = '5.0.0'
-    CURRENT = '5.5.0-DEV'
-    NEW = '1000000000.5.1'
-
-    KEY = 'sentry:latest_version'
-
-    @patch('sentry.tasks.check_update.safe_urlopen')
-    @patch('sentry.tasks.check_update.safe_urlread')
-    def test_run_check_update_task(self, safe_urlread, safe_urlopen):
-        safe_urlread.return_value = json.dumps({'info': {'version': self.NEW}})
-
-        check_update()  # latest_version > current_version
-
-        safe_urlopen.assert_called_once_with(PYPI_URL)
-        safe_urlread.assert_called_once_with(safe_urlopen.return_value)
-
-        self.assertEqual(options.get(key=self.KEY), self.NEW)
-
-    @patch('sentry.tasks.check_update.safe_urlopen')
-    @patch('sentry.tasks.check_update.safe_urlread')
-    def test_run_check_update_task_with_bad_response(self, safe_urlread,
-                                                     safe_urlopen):
-        safe_urlread.return_value = ''
-
-        check_update()  # latest_version == current_version
-
-        safe_urlopen.assert_called_once_with(PYPI_URL)
-        safe_urlread.assert_called_once_with(safe_urlopen.return_value)
-
-        self.assertEqual(options.get(key=self.KEY), '')
-
-    def test_set_sentry_version_empty_latest(self):
-        set_sentry_version(latest=self.NEW)
-        self.assertEqual(options.get(key=self.KEY), self.NEW)
-
-    @patch('sentry.get_version')
-    def test_set_sentry_version_new(self, get_version):
-        options.set(self.KEY, self.OLD)
-
-        get_version.return_value = self.CURRENT
-
-        set_sentry_version(latest=self.NEW)
-
-        self.assertEqual(options.get(key=self.KEY), self.NEW)
-
-    @patch('sentry.get_version')
-    def test_set_sentry_version_old(self, get_version):
-        options.set(self.KEY, self.NEW)
-
-        get_version.return_value = self.CURRENT
-
-        set_sentry_version(latest=self.OLD)
-
-        self.assertEqual(options.get(key=self.KEY), self.NEW)
diff --git a/tests/sentry/tasks/test_beacon.py b/tests/sentry/tasks/test_beacon.py
index e15c9b0ee9..732a8e9cbf 100644
--- a/tests/sentry/tasks/test_beacon.py
+++ b/tests/sentry/tasks/test_beacon.py
@@ -18,6 +18,7 @@ class SendBeaconTest(TestCase):
 
         safe_urlread.return_value = json.dumps({
             'notices': [],
+            'version': {'stable': '1.0.0'},
         })
 
         with self.settings(SENTRY_ADMIN_EMAIL='foo@example.com'):
@@ -39,3 +40,5 @@ class SendBeaconTest(TestCase):
             'admin_email': 'foo@example.com',
         }, timeout=5)
         safe_urlread.assert_called_once_with(safe_urlopen.return_value)
+
+        assert options.get('sentry:latest_version') == '1.0.0'
