commit 22097214e2dec2921b646adbd8a587f7c2d6d034
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Aug 18 22:24:29 2013 -0700

    Move max length constants

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 017afd4c65..eaa27b82ec 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -2,7 +2,8 @@
 sentry.constants
 ~~~~~~~~~~~~~~~~
 
-These settings act as the default (base) settings for the Sentry-provided web-server
+These settings act as the default (base) settings for the Sentry-provided
+web-server
 
 :copyright: (c) 2010-2013 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
@@ -181,6 +182,11 @@ MAX_EXTRA_VARIABLE_SIZE = 2048
 # keys
 MAX_DICTIONARY_ITEMS = 50
 
+MAX_TAG_KEY_LENGTH = 32
+MAX_TAG_VALUE_LENGTH = 200
+MAX_CULPRIT_LENGTH = 200
+MAX_MESSAGE_LENGTH = 2048
+
 # Team slugs which may not be used. Generally these are top level URL patterns
 # which we don't want to worry about conflicts on.
 RESERVED_TEAM_SLUGS = (
diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index bd56ec3819..68fffac0bb 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -18,7 +18,9 @@ import zlib
 from django.utils.encoding import smart_str
 
 from sentry.app import env
-from sentry.constants import DEFAULT_LOG_LEVEL, LOG_LEVELS
+from sentry.constants import (
+    DEFAULT_LOG_LEVEL, LOG_LEVELS, MAX_MESSAGE_LENGTH, MAX_CULPRIT_LENGTH,
+    MAX_TAG_VALUE_LENGTH, MAX_TAG_KEY_LENGTH)
 from sentry.exceptions import InvalidTimestamp
 from sentry.models import Project, ProjectKey
 from sentry.tasks.store import preprocess_event
@@ -32,9 +34,6 @@ logger = logging.getLogger('sentry.coreapi.errors')
 
 LOG_LEVEL_REVERSE_MAP = dict((v, k) for k, v in LOG_LEVELS.iteritems())
 
-MAX_CULPRIT_LENGTH = 200
-MAX_MESSAGE_LENGTH = 2048
-
 INTERFACE_ALIASES = {
     'exception': 'sentry.interfaces.Exception',
     'request': 'sentry.interfaces.Http',
@@ -290,7 +289,7 @@ def validate_data(project, data, client=None):
                     logger.info('Discarded invalid tag value: %s=%r',
                                 k, type(v), **client_metadata(client, project))
                     continue
-            if len(k) > 32 or len(v) > 200:
+            if len(k) > MAX_TAG_KEY_LENGTH or len(v) > MAX_TAG_VALUE_LENGTH:
                 logger.info('Discarded invalid tag: %s=%s',
                             k, v, **client_metadata(client, project))
                 continue
