commit 031e2e9a327ba5ed82190c7de6be8b099497f9e2
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jan 3 01:53:10 2012 -0800

    Move UDP tests

diff --git a/tests/tests.py b/tests/tests.py
index 8a69ed0ff1..a0ad73f639 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -11,21 +11,9 @@ from sentry.conf import settings
 from sentry.exceptions import InvalidInterface, InvalidData
 from sentry.interfaces import Interface
 from sentry.models import Group, Project
-from sentry.utils.auth import get_auth_header
-from sentry.services.udp import SentryUDPServer
 
 from tests.base import TestCase
 
-# class NullHandler(logging.Handler):
-#     def emit(self, record):
-#         pass
-#
-# # Configure our "oh shit" handler, so that we dont output a bunch of unused
-# # information to stderr
-#
-# logger = logging.getLogger('sentry.error')
-# logger.addHandler(NullHandler())
-
 # Configure our test handler
 
 logger = logging.getLogger(__name__)
@@ -187,18 +175,3 @@ class SentryManagerTest(TestCase):
         frame = stack['frames'][0]
         self.assertEquals(frame['filename'], 'foo.py')
         self.assertEquals(frame['function'], 'hello_world')
-
-
-class SentryUDPTest(TestCase):
-    def setUp(self):
-        self.address = (('0.0.0.0', 0))
-        self.server = SentryUDPServer(*self.address)
-
-    def test_failure(self):
-        self.assertNotEquals(None, self.server.handle('deadbeef', self.address))
-
-    def test_success(self):
-        data = {'message': 'hello', 'server_name': 'not_dcramer.local', 'level': 40, 'site': 'not_a_real_site'}
-        ts, message, sig = self._makeMessage(data)
-        packet = get_auth_header(sig, ts, 'udpTest') + '\n\n' + message
-        self.assertEquals(None, self.server.handle(packet, self.address))
diff --git a/tests/udp/__init__.py b/tests/udp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/udp/tests.py b/tests/udp/tests.py
new file mode 100644
index 0000000000..a8ec0acfda
--- /dev/null
+++ b/tests/udp/tests.py
@@ -0,0 +1,23 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from sentry.utils.auth import get_auth_header
+from sentry.services.udp import SentryUDPServer
+
+from tests.base import TestCase
+
+
+class SentryUDPTest(TestCase):
+    def setUp(self):
+        self.address = (('0.0.0.0', 0))
+        self.server = SentryUDPServer(*self.address)
+
+    def test_failure(self):
+        self.assertNotEquals(None, self.server.handle('deadbeef', self.address))
+
+    def test_success(self):
+        data = {'message': 'hello', 'server_name': 'not_dcramer.local', 'level': 40, 'site': 'not_a_real_site'}
+        ts, message, sig = self._makeMessage(data)
+        packet = get_auth_header(sig, ts, 'udpTest') + '\n\n' + message
+        self.assertEquals(None, self.server.handle(packet, self.address))
