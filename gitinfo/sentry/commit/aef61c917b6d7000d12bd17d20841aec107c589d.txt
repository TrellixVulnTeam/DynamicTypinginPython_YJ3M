commit aef61c917b6d7000d12bd17d20841aec107c589d
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jan 20 13:56:19 2015 -0800

    Share memberList data

diff --git a/src/sentry/api/endpoints/project_member_index.py b/src/sentry/api/endpoints/project_member_index.py
index bcb2deb008..f9142cace8 100644
--- a/src/sentry/api/endpoints/project_member_index.py
+++ b/src/sentry/api/endpoints/project_member_index.py
@@ -10,8 +10,11 @@ from sentry.models import Project, User
 
 
 class ProjectMemberIndexEndpoint(Endpoint):
-    def get(self, request, project_id):
-        project = Project.objects.get_from_cache(id=project_id)
+    def get(self, request, organization_slug, project_slug):
+        project = Project.objects.get(
+            organization__slug=organization_slug,
+            slug=project_slug,
+        )
 
         assert_perm(project, request.user, request.auth)
 
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 7fade4adf6..cf9c2b83ec 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -91,7 +91,7 @@ urlpatterns = patterns(
     url(r'^projects/(?P<organization_slug>[^/]+)/(?P<project_slug>[^/]+)/groups/$',
         ProjectGroupIndexEndpoint.as_view(),
         name='sentry-api-0-project-group-index'),
-    url(r'^projects/(?P<project_id>\d+)/members/$',
+    url(r'^projects/(?P<organization_slug>[^/]+)/(?P<project_slug>[^/]+)/members/$',
         ProjectMemberIndexEndpoint.as_view(),
         name='sentry-api-0-project-member-index'),
     url(r'^projects/(?P<project_id>\d+)/releases/$',
diff --git a/src/sentry/static/sentry/app/components/aggregateDetails.jsx b/src/sentry/static/sentry/app/components/aggregateDetails.jsx
index 2b61b0ca04..f5b2fd393f 100644
--- a/src/sentry/static/sentry/app/components/aggregateDetails.jsx
+++ b/src/sentry/static/sentry/app/components/aggregateDetails.jsx
@@ -7,6 +7,7 @@ var Router = require("react-router");
 var api = require("../api");
 var AssigneeSelector = require("./assigneeSelector");
 var Count = require("./count");
+var MemberListStore = require("../stores/memberListStore");
 var TimeSince = require("./timeSince");
 var utils = require("../utils");
 
@@ -109,11 +110,14 @@ var AggregateHeader = React.createClass({
 var AggregateDetails = React.createClass({
   mixins: [Router.State],
 
+  propTypes: {
+    memberList: React.PropTypes.instanceOf(Array).isRequired
+  },
+
   getInitialState: function() {
     return {
       aggregate: null,
-      statsPeriod: '24h',
-      memberList: []
+      statsPeriod: '24h'
     };
   },
 
@@ -143,7 +147,7 @@ var AggregateDetails = React.createClass({
         <AggregateHeader
             aggregate={this.state.aggregate}
             statsPeriod={this.state.statsPeriod}
-            memberList={this.state.memberList} />
+            memberList={this.props.memberList} />
         <div className="box">
           <div className="box-content with-padding">
             <AggregateChart
diff --git a/src/sentry/static/sentry/app/components/projectDetails.jsx b/src/sentry/static/sentry/app/components/projectDetails.jsx
index 3b2c0f202a..3b8c074c83 100644
--- a/src/sentry/static/sentry/app/components/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/components/projectDetails.jsx
@@ -1,12 +1,31 @@
 /*** @jsx React.DOM */
 
 var React = require("react");
-var Router = require('react-router');
+var Reflux = require("reflux");
+var Router = require("react-router");
+
+var api = require("../api");
+var MemberListStore = require("../stores/memberListStore");
 
 var ProjectDetails = React.createClass({
+  mixins: [Reflux.connect(MemberListStore, "memberList"), Router.State],
+
+  componentWillMount: function() {
+    api.request(this.getMemberListEndpoint(), {
+      success: function(data, textStatus, jqXHR) {
+        MemberListStore.loadInitialData(data);
+      }.bind(this)
+    });
+  },
+
+  getMemberListEndpoint: function() {
+    var params = this.getParams();
+    return '/projects/' + params.orgId + '/' + params.projectId + '/members/';
+  },
+
   render: function () {
     return (
-      <Router.RouteHandler />
+      <Router.RouteHandler memberList={this.state.memberList} />
     );
   }
 });
diff --git a/src/sentry/static/sentry/app/components/stream.jsx b/src/sentry/static/sentry/app/components/stream.jsx
index cb5c457ad8..93ea002887 100644
--- a/src/sentry/static/sentry/app/components/stream.jsx
+++ b/src/sentry/static/sentry/app/components/stream.jsx
@@ -24,7 +24,7 @@ var Aggregate = React.createClass({
     data: React.PropTypes.shape({
       id: React.PropTypes.string.isRequired
     }).isRequired,
-    memberList: React.PropTypes.instanceOf(Array),
+    memberList: React.PropTypes.instanceOf(Array).isRequired,
     onSelect: React.PropTypes.func.isRequired,
     statsPeriod: React.PropTypes.string.isRequired,
     isSelected: React.PropTypes.bool
@@ -144,7 +144,14 @@ StreamPoller.prototype.poll = function() {
 };
 
 var Stream = React.createClass({
-  mixins: [Reflux.connect(AggregateListStore, "aggList"), Router.State],
+  mixins: [
+    Reflux.connect(AggregateListStore, "aggList"),
+    Router.State
+  ],
+
+  propTypes: {
+    memberList: React.PropTypes.instanceOf(Array).isRequired
+  },
 
   getInitialState: function() {
     var queryParams = utils.getQueryParams();
@@ -157,7 +164,6 @@ var Stream = React.createClass({
         },
         limit: 50
       }),
-      memberList: [],
       selectAllActive: false,
       multiSelected: false,
       anySelected: false,
@@ -370,7 +376,7 @@ var Stream = React.createClass({
         <Aggregate key={node.id}
                    data={node}
                    isSelected={node.isSelected}
-                   memberList={this.state.memberList}
+                   memberList={this.props.memberList}
                    onSelect={this.handleSelect.bind(this, node.id)}
                    statsPeriod={this.state.statsPeriod} />
       );
diff --git a/src/sentry/static/sentry/app/stores/memberListStore.jsx b/src/sentry/static/sentry/app/stores/memberListStore.jsx
new file mode 100644
index 0000000000..b1e67144d4
--- /dev/null
+++ b/src/sentry/static/sentry/app/stores/memberListStore.jsx
@@ -0,0 +1,22 @@
+/** @jsx React.DOM */
+
+var Reflux = require("reflux");
+
+// var MemberListActions = require('../actions/aggregateListActions');
+var utils = require("../utils");
+
+var MemberListStore = Reflux.createStore({
+  // listenables: MemberListActions,
+
+  init: function() {
+    this.items = [];
+  },
+
+  // TODO(dcramer): this should actually come from an action of some sorts
+  loadInitialData: function(items) {
+    this.items = items;
+    this.trigger(this.items, 'initial');
+  }
+});
+
+module.exports = MemberListStore;
