commit ff6af47b58b886924039ae775728d7c22dead5e2
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 25 11:15:47 2019 -0800

    fix(monitors): Correct handling of interval-based schedules

diff --git a/src/sentry/api/validators/monitor.py b/src/sentry/api/validators/monitor.py
index f081d1985e..e1796719fb 100644
--- a/src/sentry/api/validators/monitor.py
+++ b/src/sentry/api/validators/monitor.py
@@ -63,13 +63,15 @@ class CronJobValidator(serializers.Serializer):
             return attrs
 
         if schedule_type == ScheduleType.INTERVAL:
+            # type: [int count, str unit name]
             if not isinstance(value, list):
                 raise ValidationError('Invalid value for schedule_type')
             if not isinstance(value[0], int):
-                raise ValidationError('Invalid value for schedule frequency')
+                raise ValidationError('Invalid value for schedule unit count (index 0)')
             if value[1] not in INTERVAL_NAMES:
-                raise ValidationError('Invalid value for schedlue interval')
+                raise ValidationError('Invalid value for schedlue unit name (index 1)')
         elif schedule_type == ScheduleType.CRONTAB:
+            # type: str schedule
             if not isinstance(value, six.string_types):
                 raise ValidationError('Invalid value for schedule_type')
             value = value.strip()
diff --git a/src/sentry/models/monitor.py b/src/sentry/models/monitor.py
index e17d0bade7..bf9e2e66ff 100644
--- a/src/sentry/models/monitor.py
+++ b/src/sentry/models/monitor.py
@@ -19,7 +19,7 @@ from sentry.db.models import (
     sane_repr,
 )
 
-SCHEDULE_FREQ_MAP = {
+SCHEDULE_INTERVAL_MAP = {
     'year': rrule.YEARLY,
     'month': rrule.MONTHLY,
     'week': rrule.WEEKLY,
@@ -38,10 +38,12 @@ def get_next_schedule(base_datetime, schedule_type, schedule):
         itr = croniter(schedule, base_datetime)
         next_schedule = itr.get_next(datetime)
     elif schedule_type == ScheduleType.INTERVAL:
-        freq, interval = schedule
+        count, unit_name = schedule
+        # count is the "number of units" and unit_name is the "unit name of interval"
+        # which is inverse from what rrule calls them
         rule = rrule.rrule(
-            freq=SCHEDULE_FREQ_MAP[freq],
-            interval=interval,
+            freq=SCHEDULE_INTERVAL_MAP[unit_name],
+            interval=count,
             dtstart=base_datetime,
             count=2)
         if rule[0] > base_datetime:
diff --git a/tests/sentry/models/test_monitor.py b/tests/sentry/models/test_monitor.py
index e92cc59103..f224ad6bc9 100644
--- a/tests/sentry/models/test_monitor.py
+++ b/tests/sentry/models/test_monitor.py
@@ -36,7 +36,7 @@ class MonitorTestCase(TestCase):
         monitor = Monitor(
             last_checkin=datetime(2019, 1, 1, 1, 10, 20, tzinfo=timezone.utc),
             config={
-                'schedule': ['month', 1],
+                'schedule': [1, 'month'],
                 'schedule_type': ScheduleType.INTERVAL,
             }
         )
