commit e2722385831a0930765d2c4bb78a582d41f4b64b
Author: messense <messense@icloud.com>
Date:   Wed Sep 9 15:48:06 2015 +0800

    Use requests instead of httplib to do replay

diff --git a/src/sentry/replays.py b/src/sentry/replays.py
index c070544fbf..3f51dd5ed7 100644
--- a/src/sentry/replays.py
+++ b/src/sentry/replays.py
@@ -1,10 +1,5 @@
 from __future__ import absolute_import
-
-import socket
-
-from httplib import HTTPConnection, HTTPSConnection
-from urllib import urlencode
-from urlparse import urlparse
+import requests
 
 
 class Replayer(object):
@@ -15,37 +10,22 @@ class Replayer(object):
         self.headers = headers
 
     def replay(self):
-        urlparts = urlparse(self.url)
-        if urlparts.scheme == 'http':
-            conn_cls = HTTPConnection
-        elif urlparts.scheme == 'https':
-            conn_cls = HTTPSConnection
-        else:
-            raise ValueError(self.url)
-
-        data = self.data
-        if isinstance(data, dict):
-            data = urlencode(data)
-
-        if urlparts.query:
-            full_url = urlparts.path + '?' + urlparts.query
-        else:
-            full_url = urlparts.path
-
-        conn = conn_cls(urlparts.netloc)
         try:
-            conn.request(self.method, full_url, data, self.headers or {})
-
-            response = conn.getresponse()
-        except socket.error as e:
+            response = requests.request(
+                self.method,
+                self.url,
+                data=self.data,
+                headers=self.headers or {}
+            )
+        except requests.RequestException as e:
             return {
                 'status': 'error',
                 'reason': str(e),
             }
 
         return {
-            'status': response.status,
+            'status': response.status_code,
             'reason': response.reason,
-            'headers': response.getheaders(),
-            'body': response.read(),
+            'headers': response.headers,
+            'body': response.content,
         }
