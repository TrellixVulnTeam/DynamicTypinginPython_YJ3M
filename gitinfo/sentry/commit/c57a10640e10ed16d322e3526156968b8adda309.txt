commit c57a10640e10ed16d322e3526156968b8adda309
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Oct 15 00:24:07 2015 +0200

    Move notification task into a separate module

diff --git a/src/sentry/models/activity.py b/src/sentry/models/activity.py
index 96eb270c98..55029c18f9 100644
--- a/src/sentry/models/activity.py
+++ b/src/sentry/models/activity.py
@@ -18,36 +18,7 @@ from sentry.db.models import (
     sane_repr
 )
 from sentry.utils.http import absolute_uri
-from sentry.utils.safe import safe_execute
-from sentry.tasks.base import instrumented_task
-
-
-def get_activity_notifiers(project):
-    from sentry.plugins.bases.notify import NotificationPlugin
-    from sentry.plugins import plugins
-
-    results = []
-    for plugin in plugins.for_project(project, version=1):
-        if isinstance(plugin, NotificationPlugin):
-            results.append(plugin)
-
-    for plugin in plugins.for_project(project, version=2):
-        for notifier in (safe_execute(plugin.get_notifiers) or ()):
-            results.append(notifier)
-
-    return results
-
-
-@instrumented_task(
-    name='sentry.models.activity.send_activity_notifications')
-def send_activity_notifications(activity_id):
-    try:
-        activity = Activity.objects.get(pk=activity_id)
-    except Activity.DoesNotExist:
-        return
-
-    for notifier in get_activity_notifiers(activity.project):
-        notifier.notify_about_activity(activity)
+from sentry.tasks.activity import send_activity_notifications
 
 
 class Activity(Model):
diff --git a/src/sentry/tasks/activity.py b/src/sentry/tasks/activity.py
new file mode 100644
index 0000000000..17698b5985
--- /dev/null
+++ b/src/sentry/tasks/activity.py
@@ -0,0 +1,46 @@
+"""
+sentry.tasks.activity
+~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2015 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+
+from __future__ import absolute_import
+
+import logging
+
+from sentry.utils.safe import safe_execute
+from sentry.tasks.base import instrumented_task
+
+logger = logging.getLogger(__name__)
+
+
+def get_activity_notifiers(project):
+    from sentry.plugins.bases.notify import NotificationPlugin
+    from sentry.plugins import plugins
+
+    results = []
+    for plugin in plugins.for_project(project, version=1):
+        if isinstance(plugin, NotificationPlugin):
+            results.append(plugin)
+
+    for plugin in plugins.for_project(project, version=2):
+        for notifier in (safe_execute(plugin.get_notifiers) or ()):
+            results.append(notifier)
+
+    return results
+
+
+@instrumented_task(
+    name='sentry.models.activity.send_activity_notifications')
+def send_activity_notifications(activity_id):
+    from sentry.models import Activity
+
+    try:
+        activity = Activity.objects.get(pk=activity_id)
+    except Activity.DoesNotExist:
+        return
+
+    for notifier in get_activity_notifiers(activity.project):
+        notifier.notify_about_activity(activity)
