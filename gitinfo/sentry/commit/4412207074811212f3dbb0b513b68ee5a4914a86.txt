commit 4412207074811212f3dbb0b513b68ee5a4914a86
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Aug 20 16:51:14 2015 -0700

    Enable implicit search by event ID (refs GH-1637)

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index b926108814..495bc2d202 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -16,7 +16,7 @@ from sentry.constants import (
 )
 from sentry.db.models.query import create_or_update
 from sentry.models import (
-    Activity, Group, GroupBookmark, GroupSeen, GroupStatus, TagKey
+    Activity, EventMapping, Group, GroupBookmark, GroupSeen, GroupStatus, TagKey
 )
 from sentry.search.utils import parse_query
 from sentry.tasks.deletion import delete_group
@@ -139,7 +139,23 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
         if cursor:
             query_kwargs['cursor'] = Cursor.from_string(cursor)
 
-        query = request.GET.get('query', 'is:unresolved')
+        query = request.GET.get('query', 'is:unresolved').strip()
+        if len(query) == 32:
+            # check to see if we've got an event ID
+            try:
+                matching_event = EventMapping.objects.filter(
+                    project=project,
+                    event_id=query,
+                ).select_related('group')[0]
+            except IndexError:
+                pass
+            else:
+                return Response(serialize(
+                    [matching_event.group], request.user, StreamGroupSerializer(
+                        stats_period=stats_period
+                    )
+                ))
+
         if query is not None:
             query_kwargs.update(parse_query(query, request.user))
 
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index 870fa77444..c3b33086c4 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -5,7 +5,9 @@ from django.core.urlresolvers import reverse
 from django.utils import timezone
 from mock import patch
 
-from sentry.models import Group, GroupBookmark, GroupSeen, GroupStatus
+from sentry.models import (
+    EventMapping, Group, GroupBookmark, GroupSeen, GroupStatus
+)
 from sentry.testutils import APITestCase
 from sentry.testutils.helpers import parse_link_header
 
@@ -143,6 +145,44 @@ class GroupListTest(APITestCase):
         assert len(response.data) == 1
         assert response.data[0]['id'] == str(group2.id)
 
+    def test_lookup_by_event_id(self):
+        project = self.project
+        project.update_option('sentry:resolve_age', 1)
+        now = timezone.now()
+        group = self.create_group(checksum='a' * 32)
+        self.create_group(checksum='b' * 32)
+        EventMapping.objects.create(
+            event_id='c' * 32,
+            project=group.project,
+            group=group,
+        )
+
+        self.login_as(user=self.user)
+        url = reverse('sentry-api-0-project-group-index', kwargs={
+            'organization_slug': self.project.organization.slug,
+            'project_slug': self.project.slug,
+        })
+        response = self.client.get(url + '?query=' + ('c' * 32), format='json')
+        assert response.status_code == 200
+        assert len(response.data) == 1
+        assert response.data[0]['id'] == str(group.id)
+
+    def test_lookup_by_unknown_event_id(self):
+        project = self.project
+        project.update_option('sentry:resolve_age', 1)
+        now = timezone.now()
+        group = self.create_group(checksum='a' * 32)
+        self.create_group(checksum='b' * 32)
+
+        self.login_as(user=self.user)
+        url = reverse('sentry-api-0-project-group-index', kwargs={
+            'organization_slug': self.project.organization.slug,
+            'project_slug': self.project.slug,
+        })
+        response = self.client.get(url + '?query=' + ('c' * 32), format='json')
+        assert response.status_code == 200
+        assert len(response.data) == 0
+
 
 class GroupUpdateTest(APITestCase):
     def test_global_resolve(self):
