commit a218ce51936db8ebb9a36fae1982ad1722c8e306
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Thu Jun 13 14:40:58 2019 -0700

    fix(ui): Handle portal clicks in DropdownMenu (#13662)

diff --git a/src/sentry/static/sentry/app/components/autoComplete.jsx b/src/sentry/static/sentry/app/components/autoComplete.jsx
index 5a84b2b79a..942dfc9661 100644
--- a/src/sentry/static/sentry/app/components/autoComplete.jsx
+++ b/src/sentry/static/sentry/app/components/autoComplete.jsx
@@ -147,7 +147,7 @@ class AutoComplete extends React.Component {
   };
 
   // Dropdown detected click outside, we should close
-  handleClickOutside = () => {
+  handleClickOutside = async () => {
     // Otherwise, it's possible that this gets fired multiple times
     // e.g. click outside triggers closeMenu and at the same time input gets blurred, so
     // a timer is set to close the menu
@@ -155,6 +155,12 @@ class AutoComplete extends React.Component {
       clearTimeout(this.blurTimer);
     }
 
+    // Wait until the current macrotask completes, in the case that the click
+    // happened on a hovercard or some other element rendered outside of the
+    // autocomplete, but controlled by the existance of the autocomplete, we
+    // need to ensure any click handlers are run.
+    await new Promise(resolve => setTimeout(resolve));
+
     this.closeMenu();
   };
 
diff --git a/src/sentry/static/sentry/app/components/dropdownMenu.jsx b/src/sentry/static/sentry/app/components/dropdownMenu.jsx
index 6ed8feb01c..60c0e9a5ba 100644
--- a/src/sentry/static/sentry/app/components/dropdownMenu.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownMenu.jsx
@@ -69,7 +69,7 @@ class DropdownMenu extends React.Component {
 
   // Checks if click happens inside of dropdown menu (or its button)
   // Closes dropdownmenu if it is "outside"
-  checkClickOutside = e => {
+  checkClickOutside = async e => {
     const {onClickOutside, shouldIgnoreClickOutside} = this.props;
 
     if (!this.dropdownMenu) {
@@ -101,7 +101,13 @@ class DropdownMenu extends React.Component {
       onClickOutside(e);
     }
 
-    this.handleClose(e);
+    // Wait until the current macrotask completes, in the case that the click
+    // happened on a hovercard or some other element rendered outside of the
+    // dropdown, but controlled by the existance of the dropdown, we need to
+    // ensure any click handlers are run.
+    await new Promise(resolve => setTimeout(resolve));
+
+    this.handleClose();
   };
 
   // Callback function from <DropdownMenu> to see if we should close menu
diff --git a/tests/js/spec/components/autoComplete.spec.jsx b/tests/js/spec/components/autoComplete.spec.jsx
index b6f5e8bc97..0b596e54f8 100644
--- a/tests/js/spec/components/autoComplete.spec.jsx
+++ b/tests/js/spec/components/autoComplete.spec.jsx
@@ -114,7 +114,7 @@ describe('AutoComplete', function() {
       expect(wrapper.find('li')).toHaveLength(3);
     });
 
-    it('only tries to close once if input is blurred and click outside occurs', function() {
+    it('only tries to close once if input is blurred and click outside occurs', async function() {
       jest.useFakeTimers();
       input.simulate('focus');
       input.simulate('blur');
@@ -122,6 +122,7 @@ describe('AutoComplete', function() {
       expect(wrapper.find('li')).toHaveLength(3);
       wrapper.find('DropdownMenu').prop('onClickOutside')();
       jest.runAllTimers();
+      await Promise.resolve();
       wrapper.update();
 
       expect(mocks.onClose).toHaveBeenCalledTimes(1);
diff --git a/tests/js/spec/components/dropdownLink.spec.jsx b/tests/js/spec/components/dropdownLink.spec.jsx
index 9f2dc85c87..80eb672294 100644
--- a/tests/js/spec/components/dropdownLink.spec.jsx
+++ b/tests/js/spec/components/dropdownLink.spec.jsx
@@ -72,10 +72,12 @@ describe('DropdownLink', function() {
         wrapper.find('a').simulate('click');
       });
 
-      it('closes when clicked outside', function() {
+      it('closes when clicked outside', async function() {
         const evt = document.createEvent('HTMLEvents');
         evt.initEvent('click', false, true);
         document.body.dispatchEvent(evt);
+        jest.runAllTimers();
+        await Promise.resolve();
         wrapper.update();
         expect(wrapper.find('li')).toHaveLength(0);
       });
diff --git a/tests/js/spec/components/dropdownMenu.spec.jsx b/tests/js/spec/components/dropdownMenu.spec.jsx
index 6d2ecd6a7d..66ae111681 100644
--- a/tests/js/spec/components/dropdownMenu.spec.jsx
+++ b/tests/js/spec/components/dropdownMenu.spec.jsx
@@ -46,12 +46,14 @@ describe('DropdownMenu', function() {
     expect(wrapper.find('ul')).toHaveLength(0);
   });
 
-  it('closes dropdown when clicking outside of menu', function() {
+  it('closes dropdown when clicking outside of menu', async function() {
     wrapper.find('button').simulate('click');
     // Simulate click on document
     const evt = document.createEvent('HTMLEvents');
     evt.initEvent('click', false, true);
     document.body.dispatchEvent(evt);
+    jest.runAllTimers();
+    await Promise.resolve();
     wrapper.update();
 
     expect(wrapper.find('ul')).toHaveLength(0);
