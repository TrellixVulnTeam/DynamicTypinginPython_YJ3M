commit a8fecbf52a99803a8f8c6fac52e1e16d34ab7b62
Author: Mark Story <mark@mark-story.com>
Date:   Wed Mar 20 14:21:03 2019 -0700

    fix(integrations) Make logger name consistent (#12473)
    
    Other parts of the gitlab integration use `sentry.integration.gitlab`.
    Match that convention here as well.
    
    Add more logging context when oauth fails We need more context
    on why a gitlab connection is failing to be created.

diff --git a/src/sentry/identity/gitlab/provider.py b/src/sentry/identity/gitlab/provider.py
index 7d4feac841..856014636d 100644
--- a/src/sentry/identity/gitlab/provider.py
+++ b/src/sentry/identity/gitlab/provider.py
@@ -8,7 +8,7 @@ from sentry.http import safe_urlopen, safe_urlread
 from sentry.identity.oauth2 import OAuth2Provider
 from sentry.utils import json
 
-logger = logging.getLogger('sentry.integrations.gitlab')
+logger = logging.getLogger('sentry.integration.gitlab')
 
 
 def get_oauth_data(payload):
diff --git a/src/sentry/identity/oauth2.py b/src/sentry/identity/oauth2.py
index f1b1f80513..3ad0e8d9c4 100644
--- a/src/sentry/identity/oauth2.py
+++ b/src/sentry/identity/oauth2.py
@@ -314,7 +314,12 @@ class OAuth2CallbackView(PipelineView):
             return pipeline.error(error)
 
         if state != pipeline.fetch_state('state'):
-            pipeline.logger.info('identity.token-exchange-error', extra={'error': 'invalid_state'})
+            pipeline.logger.info('identity.token-exchange-error', extra={
+                'error': 'invalid_state',
+                'state': state,
+                'pipeline_state': pipeline.fetch_state('state'),
+                'code': code
+            })
             return pipeline.error(ERR_INVALID_STATE)
 
         data = self.exchange_token(request, pipeline, code)
