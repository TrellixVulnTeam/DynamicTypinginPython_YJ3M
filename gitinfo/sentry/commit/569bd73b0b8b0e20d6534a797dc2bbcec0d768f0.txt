commit 569bd73b0b8b0e20d6534a797dc2bbcec0d768f0
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jul 26 14:38:05 2014 +0200

    Expand collection tests

diff --git a/tests/js/spec/collectionSpec.js b/tests/js/spec/collectionSpec.js
index dd9a1c3185..3a52b36ee5 100644
--- a/tests/js/spec/collectionSpec.js
+++ b/tests/js/spec/collectionSpec.js
@@ -19,5 +19,59 @@ describe('sentry.collection', function(){
       assert.equal(c[0].id, 'foo');
       assert.equal(c[1].id, 'bar');
     });
+
+    it('should update existing elements', function(){
+      var c = new Collection();
+      c.push({id: 'foo', biz: 'baz'});
+      c.push({id: 'foo', biz: 'boz'});
+
+      assert.equal(c.length, 1);
+
+      assert.equal(c[0].id, 'foo');
+      assert.equal(c[0].biz, 'boz');
+    });
+  });
+
+  describe('unshift', function() {
+    it('should prepend elements', function(){
+      var c = new Collection();
+      c.unshift({id: 'foo'});
+      c.unshift({id: 'bar'});
+
+      assert.equal(c.length, 2);
+
+      assert.equal(c[0].id, 'bar');
+      assert.equal(c[1].id, 'foo');
+    });
+
+    it('should update existing elements', function(){
+      var c = new Collection();
+      c.unshift({id: 'foo', biz: 'baz'});
+      c.unshift({id: 'foo', biz: 'boz'});
+
+      assert.equal(c.length, 1);
+
+      assert.equal(c[0].id, 'foo');
+      assert.equal(c[0].biz, 'boz');
+    });
   });
+
+  describe('remove', function() {
+    it('should not fail with missing elements', function(){
+      var c = new Collection();
+
+      c.remove({id: 'foo'});
+    });
+
+    it('should remove matching element', function(){
+      var c = new Collection([{id: 'foo'}, {id: 'bar'}]);
+
+      c.remove({id: 'foo'});
+
+      assert.equal(c.length, 1);
+
+      assert.equal(c[0].id, 'bar');
+    });
+  });
+
 });
