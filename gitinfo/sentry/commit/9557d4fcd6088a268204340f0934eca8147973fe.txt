commit 9557d4fcd6088a268204340f0934eca8147973fe
Author: Ted Kaemming <ted@kaemming.com>
Date:   Mon Oct 12 15:51:10 2015 -0700

    Fix import, failing test.

diff --git a/src/sentry/digests/backends/base.py b/src/sentry/digests/backends/base.py
index 0328ff3679..2a051dc82c 100644
--- a/src/sentry/digests/backends/base.py
+++ b/src/sentry/digests/backends/base.py
@@ -74,6 +74,8 @@ class Backend(object):
         else:
             if options.get('truncation_chance') is not None:
                 raise TypeError('No timeline capacity has been set, "truncation_chance" must be None.')
+            else:
+                self.truncation_chance = 0.0
 
     def add(self, key, record):
         """
diff --git a/src/sentry/digests/backends/redis.py b/src/sentry/digests/backends/redis.py
index 665d6b826d..6c58682b77 100644
--- a/src/sentry/digests/backends/redis.py
+++ b/src/sentry/digests/backends/redis.py
@@ -19,9 +19,7 @@ from sentry.digests import (
     Record,
     ScheduleEntry,
 )
-from sentry.digests.base import (
-    Backend,
-)
+from sentry.digests.backends.base import Backend
 from sentry.utils.cache import Lock
 
 
@@ -346,7 +344,6 @@ class RedisBackend(Backend):
 
         connection = self.cluster.get_local_client_for_key(timeline_key)
 
-        # TODO: Note that callers must be prepared to handle this exception.
         with Lock(timeline_key, nowait=True, timeout=30):
             if connection.zscore(make_schedule_key(self.namespace, SCHEDULE_STATE_READY), key) is None:
                 raise Exception('Cannot digest timeline, timeline is not in the ready state.')
