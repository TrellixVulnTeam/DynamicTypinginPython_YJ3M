commit da56a5c06d53b6dbc27f94648796b88023cfe464
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Sep 11 01:19:15 2019 -0700

    chore(ts): Convert components/duration

diff --git a/src/sentry/static/sentry/app/components/duration.jsx b/src/sentry/static/sentry/app/components/duration.jsx
deleted file mode 100644
index a03ab9cb00..0000000000
--- a/src/sentry/static/sentry/app/components/duration.jsx
+++ /dev/null
@@ -1,42 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-class Duration extends React.Component {
-  static propTypes = {
-    seconds: PropTypes.number.isRequired,
-  };
-
-  getDuration = () => {
-    const value = Math.abs(this.props.seconds * 1000);
-    let result = '';
-
-    if (value >= 604800000) {
-      // one week
-      result = Math.round(value / 604800000);
-      result = result !== 1 ? result + ' weeks' : result + ' week';
-    } else if (value >= 172800000) {
-      // two days
-      result = Math.round(value / 86400000);
-      result = result !== 1 ? result + ' days' : result + ' day';
-    } else if (value >= 7200000) {
-      result = Math.round(value / 3600000);
-      result = result !== 1 ? result + ' hours' : result + ' hour';
-    } else if (value >= 120000) {
-      result = Math.round(value / 60000);
-      result = result !== 1 ? result + ' minutes' : result + ' minute';
-    } else if (value >= 1000) {
-      result = Math.round(value / 1000);
-      result = result !== 1 ? result + ' seconds' : result + ' second';
-    } else {
-      result = Math.round(value) + ' ms';
-    }
-
-    return result;
-  };
-
-  render() {
-    return <span className={this.props.className}>{this.getDuration()}</span>;
-  }
-}
-
-export default Duration;
diff --git a/src/sentry/static/sentry/app/components/duration.tsx b/src/sentry/static/sentry/app/components/duration.tsx
new file mode 100644
index 0000000000..abaa6b1863
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/duration.tsx
@@ -0,0 +1,44 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import {tn} from 'app/locale';
+
+function getDuration(seconds: number): string {
+  const value = Math.abs(seconds * 1000);
+  let result: number = 0;
+
+  if (value >= 604800000) {
+    result = Math.round(value / 604800000);
+    return `${result} ${tn('week', 'weeks', result)}`;
+  }
+  if (value >= 172800000) {
+    result = Math.round(value / 86400000);
+    return `${result} ${tn('day', 'days', result)}`;
+  }
+  if (value >= 7200000) {
+    result = Math.round(value / 3600000);
+    return `${result} ${tn('hour', 'hours', result)}`;
+  }
+  if (value >= 120000) {
+    result = Math.round(value / 60000);
+    return `${result} ${tn('minute', 'minutes', result)}`;
+  }
+  if (value >= 1000) {
+    result = Math.round(value / 1000);
+    return `${result} ${tn('second', 'seconds', result)}`;
+  }
+
+  return Math.round(value) + ' ms';
+}
+
+type Props = React.HTMLProps<HTMLSpanElement> & {seconds: number};
+
+const Duration = ({seconds, ...props}: Props) => (
+  <span {...props}>{getDuration(seconds)}</span>
+);
+
+Duration.propTypes = {
+  seconds: PropTypes.number.isRequired,
+};
+
+export default Duration;
diff --git a/src/sentry/static/sentry/app/views/incidents/details/header.tsx b/src/sentry/static/sentry/app/views/incidents/details/header.tsx
index 53d9af244c..1f10702a98 100644
--- a/src/sentry/static/sentry/app/views/incidents/details/header.tsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/header.tsx
@@ -114,7 +114,9 @@ export default class DetailsHeader extends React.Component<Props> {
               <ItemTitle>{t('Duration')}</ItemTitle>
               {incident && (
                 <ItemValue>
-                  <Duration seconds={getDynamicText({value: duration, fixed: 1200})} />
+                  <Duration
+                    seconds={getDynamicText({value: duration || 0, fixed: 1200})}
+                  />
                 </ItemValue>
               )}
             </HeaderItem>
