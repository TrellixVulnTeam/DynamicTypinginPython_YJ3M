commit f7c6ec25a89662c52b91a6680d27c25b544890d5
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Dec 18 13:34:28 2017 -0800

    feat(api): Dont allow member updates to own membership (#6782)
    
    * feat(api): Dont allow member updates to own membership
    
    * fix test

diff --git a/src/sentry/api/endpoints/organization_member_details.py b/src/sentry/api/endpoints/organization_member_details.py
index eced918234..6a284abcd3 100644
--- a/src/sentry/api/endpoints/organization_member_details.py
+++ b/src/sentry/api/endpoints/organization_member_details.py
@@ -110,6 +110,7 @@ class OrganizationMemberDetailsEndpoint(OrganizationEndpoint):
         if request.access.has_scope('member:admin'):
             context['invite_link'] = member.get_invite_link()
 
+        context['isOnlyOwner'] = self._is_only_owner(member)
         context['roles'] = serialize(
             roles.get_all(), serializer=RoleSerializer(), allowed_roles=allowed_roles)
 
@@ -135,6 +136,11 @@ class OrganizationMemberDetailsEndpoint(OrganizationEndpoint):
         except OrganizationMember.DoesNotExist:
             raise ResourceDoesNotExist
 
+        # You can't edit your own membership
+        if om.user == request.user:
+            return Response(
+                {'detail': 'You cannot make changes to your own membership.'}, status=400)
+
         serializer = OrganizationMemberSerializer(
             data=request.DATA, partial=True)
 
diff --git a/tests/sentry/api/endpoints/test_organization_member_details.py b/tests/sentry/api/endpoints/test_organization_member_details.py
index 8dbda4aa04..f98ae004c0 100644
--- a/tests/sentry/api/endpoints/test_organization_member_details.py
+++ b/tests/sentry/api/endpoints/test_organization_member_details.py
@@ -201,6 +201,54 @@ class UpdateOrganizationMemberTest(APITestCase):
         assert resp.status_code == 200
         assert team.slug in resp.data['teams']
 
+    def test_can_update_member_membership(self):
+        self.login_as(user=self.user)
+
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        member = self.create_user('baz@example.com')
+        member_om = self.create_member(
+            organization=organization,
+            user=member,
+            role='member',
+            teams=[]
+        )
+
+        path = reverse(
+            'sentry-api-0-organization-member-details', args=[organization.slug, member_om.id]
+        )
+
+        self.login_as(self.user)
+
+        resp = self.client.put(path, data={
+            'role': 'admin'
+        })
+        assert resp.status_code == 200
+
+        member_om = OrganizationMember.objects.get(id=member_om.id)
+        assert member_om.role == 'admin'
+
+    def test_can_not_update_own_membership(self):
+        self.login_as(user=self.user)
+
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        member_om = OrganizationMember.objects.get(user_id=self.user.id)
+
+        path = reverse(
+            'sentry-api-0-organization-member-details', args=[organization.slug, member_om.id]
+        )
+
+        self.login_as(self.user)
+
+        resp = self.client.put(path, data={
+            'role': 'admin'
+        })
+        assert resp.status_code == 400
+
+        member_om = OrganizationMember.objects.get(user_id=self.user.id)
+        assert member_om.role == 'owner'
+
     def test_can_update_teams(self):
         self.login_as(user=self.user)
 
