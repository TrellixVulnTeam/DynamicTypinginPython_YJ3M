commit b286099c787ccce06010507a78ed5162e0e48848
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Mar 28 15:00:55 2011 -0700

    Move static media into sentry/static/ and pull out Django's media serving view so that deprecation warnings arent raised in Django 1.3. Added SENTRY_STATIC_URL_PREFIX to allow overriding of the default {BASE}/_static static URL.

diff --git a/CHANGES b/CHANGES
index aae1ae5e3d..1e3e252935 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,3 +1,9 @@
+1.6.7
+
+* Moved static media into /static/.
+* Added serve_static view to handle static media solely within Sentry.
+* Added SENTRY_STATIC_URL_PREFIX setting.
+
 1.6.6
 
 * setup.py install will no longer install example_project.
diff --git a/MANIFEST.in b/MANIFEST.in
index ce89b78478..210f7ad54b 100644
--- a/MANIFEST.in
+++ b/MANIFEST.in
@@ -1,5 +1,5 @@
 include setup.py README.rst MANIFEST.in LICENSE
 recursive-include sentry/templates *
-recursive-include sentry/media *
+recursive-include sentry/static *
 recursive-include sentry/plugins/*/templates *
 global-exclude *~
\ No newline at end of file
diff --git a/docs/config.rst b/docs/config.rst
index bf11f818ec..ae93a7d01e 100644
--- a/docs/config.rst
+++ b/docs/config.rst
@@ -239,4 +239,28 @@ Default value is ``False``
 SENTRY_NAME
 ###########
 
-This will override the ``server_name`` value for this installation. Defaults to ``socket.get_hostname()``.
\ No newline at end of file
+This will override the ``server_name`` value for this installation. Defaults to ``socket.get_hostname()``.
+
+#################
+SENTRY_URL_PREFIX
+#################
+
+Absolute URL to the sentry root directory. Should not include a trailing slash. Defaults to "".
+
+########################
+SENTRY_STATIC_URL_PREFIX
+########################
+
+Absolute URL to the sentry static directory. Should not include a trailing slash. Defaults to "{SENTRY_URL_PREFIX}/_static".
+
+####################
+SENTRY_EXCLUDE_PATHS
+####################
+
+Extending this allow you to ignore module prefixes when we attempt to discover which function an error comes from (typically a view)
+
+####################
+SENTRY_INCLUDE_PATHS
+####################
+
+By default Sentry only looks at modules in INSTALLED_APPS for drilling down where an exception is located
diff --git a/sentry/conf.py b/sentry/conf.py
index 9dc5906e38..83b3166280 100644
--- a/sentry/conf.py
+++ b/sentry/conf.py
@@ -3,8 +3,8 @@ from django.utils.hashcompat import md5_constructor
 from django.utils.translation import ugettext_lazy as _
 
 import logging
+import os.path
 import socket
-import warnings
 
 # Allow local testing of Sentry even if DEBUG is enabled
 DEBUG = getattr(settings, 'DEBUG', False) and not getattr(settings, 'SENTRY_TESTING', False)
@@ -77,7 +77,12 @@ EXCLUDE_PATHS = getattr(settings, 'SENTRY_EXCLUDE_PATHS', [])
 INCLUDE_PATHS = getattr(settings, 'SENTRY_INCLUDE_PATHS', [])
 
 # Absolute URL to the sentry root directory. Should not include a trailing slash.
-URL_PREFIX = getattr(settings, 'SENTRY_URL_PREFIX', None)
+URL_PREFIX = getattr(settings, 'SENTRY_URL_PREFIX', '')
 
 # Allow access to Sentry without authentication.
-PUBLIC = getattr(settings, 'SENTRY_PUBLIC', False)
\ No newline at end of file
+PUBLIC = getattr(settings, 'SENTRY_PUBLIC', False)
+
+# Absolute URL to the sentry static directory. Should not include a trailing slash.
+STATIC_URL_PREFIX = getattr(settings, 'SENTRY_STATIC_URL_PREFIX', URL_PREFIX + '/_static')
+
+ROOT = os.path.normpath(os.path.dirname(__file__))
\ No newline at end of file
diff --git a/sentry/media/images/search.png b/sentry/static/images/search.png
similarity index 100%
rename from sentry/media/images/search.png
rename to sentry/static/images/search.png
diff --git a/sentry/media/images/sentry.png b/sentry/static/images/sentry.png
similarity index 100%
rename from sentry/media/images/sentry.png
rename to sentry/static/images/sentry.png
diff --git a/sentry/media/scripts/global.js b/sentry/static/scripts/global.js
similarity index 100%
rename from sentry/media/scripts/global.js
rename to sentry/static/scripts/global.js
diff --git a/sentry/media/scripts/highcharts.js b/sentry/static/scripts/highcharts.js
similarity index 100%
rename from sentry/media/scripts/highcharts.js
rename to sentry/static/scripts/highcharts.js
diff --git a/sentry/media/scripts/jquery.animate-colors-min.js b/sentry/static/scripts/jquery.animate-colors-min.js
similarity index 100%
rename from sentry/media/scripts/jquery.animate-colors-min.js
rename to sentry/static/scripts/jquery.animate-colors-min.js
diff --git a/sentry/media/styles/global.css b/sentry/static/styles/global.css
similarity index 100%
rename from sentry/media/styles/global.css
rename to sentry/static/styles/global.css
diff --git a/sentry/urls.py b/sentry/urls.py
index cfae63a80b..b1268ebcae 100644
--- a/sentry/urls.py
+++ b/sentry/urls.py
@@ -10,8 +10,8 @@ from sentry.feeds import MessageFeed, SummaryFeed
 SENTRY_ROOT = os.path.dirname(__file__) 
 
 urlpatterns = patterns('',
-    url(r'^_media/(?P<path>.*)$', 'django.views.static.serve',
-        {'document_root': os.path.join(SENTRY_ROOT, 'media')}, name='sentry-media'),
+    # This path is also reflected in conf.STATIC_URL_PREFIX
+    url(r'^_static/(?P<path>.*)$', views.static_media, name='sentry-media'),
 
     # Feeds
 
diff --git a/sentry/views.py b/sentry/views.py
index 1a483cc1cc..b4a5008f9c 100644
--- a/sentry/views.py
+++ b/sentry/views.py
@@ -12,7 +12,7 @@ from django.core.context_processors import csrf
 from django.core.urlresolvers import reverse
 from django.db.models import Q
 from django.http import HttpResponse, HttpResponseBadRequest, \
-    HttpResponseForbidden, HttpResponseRedirect, Http404
+    HttpResponseForbidden, HttpResponseRedirect, Http404, HttpResponseNotModified
 from django.shortcuts import render_to_response, get_object_or_404
 from django.template.loader import render_to_string
 from django.utils import simplejson
@@ -370,3 +370,49 @@ def group_plugin_action(request, group_id, slug):
     if response:
         return response
     return HttpResponseRedirect(request.META.get('HTTP_REFERER') or reverse('sentry'))
+
+def static_media(request, path):
+    """
+    Serve static files below a given point in the directory structure.
+    """
+    from django.utils.http import http_date
+    from django.views.static import was_modified_since
+    import mimetypes
+    import os.path
+    import posixpath
+    import stat
+    import urllib
+
+    document_root = os.path.join(conf.ROOT, 'static')
+    
+    path = posixpath.normpath(urllib.unquote(path))
+    path = path.lstrip('/')
+    newpath = ''
+    for part in path.split('/'):
+        if not part:
+            # Strip empty path components.
+            continue
+        drive, part = os.path.splitdrive(part)
+        head, part = os.path.split(part)
+        if part in (os.curdir, os.pardir):
+            # Strip '.' and '..' in path.
+            continue
+        newpath = os.path.join(newpath, part).replace('\\', '/')
+    if newpath and path != newpath:
+        return HttpResponseRedirect(newpath)
+    fullpath = os.path.join(document_root, newpath)
+    if os.path.isdir(fullpath):
+        raise Http404("Directory indexes are not allowed here.")
+    if not os.path.exists(fullpath):
+        raise Http404('"%s" does not exist' % fullpath)
+    # Respect the If-Modified-Since header.
+    statobj = os.stat(fullpath)
+    mimetype = mimetypes.guess_type(fullpath)[0] or 'application/octet-stream'
+    if not was_modified_since(request.META.get('HTTP_IF_MODIFIED_SINCE'),
+                              statobj[stat.ST_MTIME], statobj[stat.ST_SIZE]):
+        return HttpResponseNotModified(mimetype=mimetype)
+    contents = open(fullpath, 'rb').read()
+    response = HttpResponse(contents, mimetype=mimetype)
+    response["Last-Modified"] = http_date(statobj[stat.ST_MTIME])
+    response["Content-Length"] = len(contents)
+    return response
\ No newline at end of file
diff --git a/setup.py b/setup.py
index ea33afbb68..f499f9de1d 100644
--- a/setup.py
+++ b/setup.py
@@ -17,7 +17,7 @@ tests_require = [
 
 setup(
     name='django-sentry',
-    version='1.6.6.1',
+    version='1.6.7',
     author='David Cramer',
     author_email='dcramer@gmail.com',
     url='http://github.com/dcramer/django-sentry',
@@ -31,7 +31,7 @@ setup(
     ],
     dependency_links=[
         'https://github.com/disqus/django-haystack/tarball/master#egg=django-haystack',
-        ],
+    ],
     tests_require=tests_require,
     extras_require={'test': tests_require},
     test_suite='sentry.runtests.runtests',
