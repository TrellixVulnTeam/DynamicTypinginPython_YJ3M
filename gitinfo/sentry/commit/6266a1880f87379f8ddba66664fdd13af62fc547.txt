commit 6266a1880f87379f8ddba66664fdd13af62fc547
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon May 7 13:28:19 2018 -0700

    feat(ui): Allow sidebar to render w/o org/router (#8288)

diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 174d4ad41b..5c3b66eb0e 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -1,4 +1,4 @@
-import {withRouter, Link} from 'react-router';
+import {withRouter} from 'react-router';
 import $ from 'jquery';
 import PropTypes from 'prop-types';
 import React from 'react';
@@ -45,17 +45,21 @@ class Sidebar extends React.Component {
   }
 
   componentDidMount() {
+    let {router} = this.props;
     jQuery(document.body).addClass('body-sidebar');
     jQuery(document).on('click', this.documentClickHandler);
 
     loadIncidents();
     loadSidebarState();
 
+    // router can potentially not exist in server side (django) views
     // Otherwise when we change routes using collapsed sidebar, the tooltips will remain after
     // route changes.
-    this.routerListener = this.props.router.listen(() => {
-      $('.tooltip').tooltip('hide');
-    });
+    this.routerListener =
+      router &&
+      router.listen(() => {
+        $('.tooltip').tooltip('hide');
+      });
     this.doCollapse(this.props.collapsed);
   }
 
@@ -160,23 +164,13 @@ class Sidebar extends React.Component {
       collapsed,
       hasPanel,
     };
-
-    if (!organization) {
-      return (
-        <StyledSidebar innerRef={ref => (this.sidebar = ref)} collapsed>
-          <SidebarSectionGroup>
-            <SidebarSection>
-              <Link to="/">
-                <InlineSvg css={{fontSize: 32}} src="icon-sentry" />
-              </Link>
-            </SidebarSection>
-          </SidebarSectionGroup>
-        </StyledSidebar>
-      );
-    }
+    let hasOrganization = !!organization;
 
     return (
-      <StyledSidebar innerRef={ref => (this.sidebar = ref)} collapsed={collapsed}>
+      <StyledSidebar
+        innerRef={ref => (this.sidebar = ref)}
+        collapsed={hasOrganization ? collapsed : true}
+      >
         <SidebarSectionGroup>
           <SidebarSection>
             <SidebarDropdown
@@ -189,104 +183,110 @@ class Sidebar extends React.Component {
             />
           </SidebarSection>
 
-          <SidebarSection>
-            <SidebarItem
-              {...sidebarItemProps}
-              index
-              onClick={this.hidePanel}
-              icon={<InlineSvg src="icon-projects" />}
-              label={t('Projects')}
-              to={`/${organization.slug}/`}
-            />
-          </SidebarSection>
-
-          <SidebarSection>
-            <SidebarItem
-              {...sidebarItemProps}
-              onClick={this.hidePanel}
-              icon={<InlineSvg src="icon-user" />}
-              label={t('Assigned to me')}
-              to={`/organizations/${organization.slug}/issues/assigned/`}
-            />
-            <SidebarItem
-              {...sidebarItemProps}
-              onClick={this.hidePanel}
-              icon={<InlineSvg src="icon-star" />}
-              label={t('Starred issues')}
-              to={`/organizations/${organization.slug}/issues/bookmarks/`}
-            />
-            <SidebarItem
-              {...sidebarItemProps}
-              onClick={this.hidePanel}
-              icon={<InlineSvg src="icon-history" />}
-              label={t('Recently viewed')}
-              to={`/organizations/${organization.slug}/issues/history/`}
-            />
-          </SidebarSection>
-
-          <SidebarSection>
-            <SidebarItem
-              {...sidebarItemProps}
-              onClick={this.hidePanel}
-              icon={<InlineSvg src="icon-activity" />}
-              label={t('Activity')}
-              to={`/organizations/${organization.slug}/activity/`}
-            />
-            <SidebarItem
-              {...sidebarItemProps}
-              onClick={this.hidePanel}
-              icon={<InlineSvg src="icon-stats" />}
-              label={t('Stats')}
-              to={`/organizations/${organization.slug}/stats/`}
-            />
-          </SidebarSection>
+          {hasOrganization && (
+            <React.Fragment>
+              <SidebarSection>
+                <SidebarItem
+                  {...sidebarItemProps}
+                  index
+                  onClick={this.hidePanel}
+                  icon={<InlineSvg src="icon-projects" />}
+                  label={t('Projects')}
+                  to={`/${organization.slug}/`}
+                />
+              </SidebarSection>
+
+              <SidebarSection>
+                <SidebarItem
+                  {...sidebarItemProps}
+                  onClick={this.hidePanel}
+                  icon={<InlineSvg src="icon-user" />}
+                  label={t('Assigned to me')}
+                  to={`/organizations/${organization.slug}/issues/assigned/`}
+                />
+                <SidebarItem
+                  {...sidebarItemProps}
+                  onClick={this.hidePanel}
+                  icon={<InlineSvg src="icon-star" />}
+                  label={t('Starred issues')}
+                  to={`/organizations/${organization.slug}/issues/bookmarks/`}
+                />
+                <SidebarItem
+                  {...sidebarItemProps}
+                  onClick={this.hidePanel}
+                  icon={<InlineSvg src="icon-history" />}
+                  label={t('Recently viewed')}
+                  to={`/organizations/${organization.slug}/issues/history/`}
+                />
+              </SidebarSection>
+
+              <SidebarSection>
+                <SidebarItem
+                  {...sidebarItemProps}
+                  onClick={this.hidePanel}
+                  icon={<InlineSvg src="icon-activity" />}
+                  label={t('Activity')}
+                  to={`/organizations/${organization.slug}/activity/`}
+                />
+                <SidebarItem
+                  {...sidebarItemProps}
+                  onClick={this.hidePanel}
+                  icon={<InlineSvg src="icon-stats" />}
+                  label={t('Stats')}
+                  to={`/organizations/${organization.slug}/stats/`}
+                />
+              </SidebarSection>
+            </React.Fragment>
+          )}
         </SidebarSectionGroup>
 
-        <SidebarSectionGroup>
-          <SidebarSection>
-            <Broadcasts
-              orientation={orientation}
-              collapsed={collapsed}
-              showPanel={showPanel}
-              currentPanel={currentPanel}
-              onShowPanel={() => this.togglePanel('broadcasts')}
-              hidePanel={this.hidePanel}
-            />
-            <Incidents
-              orientation={orientation}
-              collapsed={collapsed}
-              showPanel={showPanel}
-              currentPanel={currentPanel}
-              onShowPanel={() => this.togglePanel('statusupdate')}
-              hidePanel={this.hidePanel}
-            />
-          </SidebarSection>
-
-          {!horizontal && (
-            <SidebarSection noMargin>
-              <OnboardingStatus
-                org={organization}
-                currentPanel={currentPanel}
-                onShowPanel={() => this.togglePanel('todos')}
+        {hasOrganization && (
+          <SidebarSectionGroup>
+            <SidebarSection>
+              <Broadcasts
+                orientation={orientation}
+                collapsed={collapsed}
                 showPanel={showPanel}
+                currentPanel={currentPanel}
+                onShowPanel={() => this.togglePanel('broadcasts')}
                 hidePanel={this.hidePanel}
+              />
+              <Incidents
+                orientation={orientation}
                 collapsed={collapsed}
+                showPanel={showPanel}
+                currentPanel={currentPanel}
+                onShowPanel={() => this.togglePanel('statusupdate')}
+                hidePanel={this.hidePanel}
               />
             </SidebarSection>
-          )}
 
-          {!horizontal && (
-            <SidebarSection>
-              <SidebarCollapseItem
-                data-test-id="sidebar-collapse"
-                {...sidebarItemProps}
-                icon={<StyledInlineSvg src="icon-collapse" collapsed={collapsed} />}
-                label={collapsed ? t('Expand') : t('Collapse')}
-                onClick={this.toggleSidebar}
-              />
-            </SidebarSection>
-          )}
-        </SidebarSectionGroup>
+            {!horizontal && (
+              <SidebarSection noMargin>
+                <OnboardingStatus
+                  org={organization}
+                  currentPanel={currentPanel}
+                  onShowPanel={() => this.togglePanel('todos')}
+                  showPanel={showPanel}
+                  hidePanel={this.hidePanel}
+                  collapsed={collapsed}
+                />
+              </SidebarSection>
+            )}
+
+            {!horizontal && (
+              <SidebarSection>
+                <SidebarCollapseItem
+                  data-test-id="sidebar-collapse"
+                  {...sidebarItemProps}
+                  icon={<StyledInlineSvg src="icon-collapse" collapsed={collapsed} />}
+                  label={collapsed ? t('Expand') : t('Collapse')}
+                  onClick={this.toggleSidebar}
+                />
+              </SidebarSection>
+            )}
+          </SidebarSectionGroup>
+        )}
       </StyledSidebar>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
index b120741dab..12d9f7bfef 100644
--- a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
@@ -6,6 +6,7 @@ import {t} from 'app/locale';
 import Avatar from 'app/components/avatar';
 import DropdownMenu from 'app/components/dropdownMenu';
 import Hook from 'app/components/hook';
+import InlineSvg from 'app/components/inlineSvg';
 import Link from 'app/components/link';
 import SentryTypes from 'app/proptypes';
 import TextOverflow from 'app/components/textOverflow';
@@ -33,9 +34,31 @@ class SidebarDropdown extends React.Component {
 
   render() {
     let {org, orientation, collapsed, config, user, onClick} = this.props;
+    let hasOrganization = !!org;
+    let hasUser = !!user;
+
+    // If there is no org in context, we use an org from `withLatestContext`
+    // (which uses an org from organizations index endpoint versus details endpoint)
+    // and does not have `access`
     let hasOrgWrite = org && org.access && org.access.indexOf('org:write') > -1;
     let hasMemberRead = org && org.access && org.access.indexOf('member:read') > -1;
 
+    // Avatar to use: Organization --> user --> Sentry
+    const avatar =
+      hasOrganization || hasUser ? (
+        <StyledAvatar
+          onClick={onClick}
+          collapsed={collapsed}
+          organization={org}
+          user={!org ? user : null}
+          size={32}
+        />
+      ) : (
+        <SentryLink to="/">
+          <InlineSvg css={{fontSize: 32}} src="icon-sentry" />
+        </SentryLink>
+      );
+
     return (
       <DropdownMenu>
         {({isOpen, getRootProps, getActorProps, getMenuProps}) => {
@@ -46,13 +69,9 @@ class SidebarDropdown extends React.Component {
                 {...getActorProps({isStyled: true})}
               >
                 <div style={{display: 'flex', alignItems: 'flex-start'}}>
-                  <StyledAvatar
-                    onClick={onClick}
-                    collapsed={collapsed}
-                    organization={org}
-                    size={32}
-                  />
-                  {!collapsed &&
+                  {avatar}
+                  {hasOrganization &&
+                    !collapsed &&
                     orientation !== 'top' && (
                       <NameAndOrgWrapper>
                         <DropdownOrgName>
@@ -66,54 +85,62 @@ class SidebarDropdown extends React.Component {
 
               {isOpen && (
                 <OrgAndUserMenu {...getMenuProps({isStyled: true, org})}>
-                  <SidebarOrgSummary organization={org} />
-                  {hasOrgWrite && (
-                    <SidebarMenuItem to={`/settings/${org.slug}/`}>
-                      {t('Organization settings')}
-                    </SidebarMenuItem>
-                  )}
-                  {hasMemberRead && (
-                    <SidebarMenuItem to={`/settings/${org.slug}/members/`}>
-                      {t('Members')}
-                    </SidebarMenuItem>
+                  {hasOrganization && (
+                    <React.Fragment>
+                      <SidebarOrgSummary organization={org} />
+                      {hasOrgWrite && (
+                        <SidebarMenuItem to={`/settings/${org.slug}/`}>
+                          {t('Organization settings')}
+                        </SidebarMenuItem>
+                      )}
+                      {hasMemberRead && (
+                        <SidebarMenuItem to={`/settings/${org.slug}/members/`}>
+                          {t('Members')}
+                        </SidebarMenuItem>
+                      )}
+
+                      <Hook
+                        name="sidebar:organization-dropdown-menu"
+                        organization={org}
+                        Components={{SidebarMenuItem}}
+                      />
+
+                      {config.isOnPremise && (
+                        <SidebarMenuItem href="https://forum.sentry.io/">
+                          {t('Support forum')}
+                        </SidebarMenuItem>
+                      )}
+
+                      <SidebarMenuItem>
+                        <SwitchOrganization canCreateOrganization={hasOrgWrite} />
+                      </SidebarMenuItem>
+
+                      <Divider />
+                    </React.Fragment>
                   )}
 
-                  <Hook
-                    name="sidebar:organization-dropdown-menu"
-                    organization={org}
-                    Components={{SidebarMenuItem}}
-                  />
-
-                  {config.isOnPremise && (
-                    <SidebarMenuItem href="https://forum.sentry.io/">
-                      {t('Support forum')}
-                    </SidebarMenuItem>
+                  {!!user && (
+                    <React.Fragment>
+                      <UserSummary to="/settings/account/details/">
+                        <UserBadgeNoOverflow user={user} avatarSize={32} />
+                      </UserSummary>
+
+                      <div>
+                        <SidebarMenuItem to="/settings/account/">
+                          {t('User settings')}
+                        </SidebarMenuItem>
+                        <SidebarMenuItem to={'/settings/account/api/'}>
+                          {t('API keys')}
+                        </SidebarMenuItem>
+                        {user.isSuperuser && (
+                          <SidebarMenuItem to={'/manage/'}>{t('Admin')}</SidebarMenuItem>
+                        )}
+                        <SidebarMenuItem href="/auth/logout/">
+                          {t('Sign out')}
+                        </SidebarMenuItem>
+                      </div>
+                    </React.Fragment>
                   )}
-
-                  <SidebarMenuItem>
-                    <SwitchOrganization canCreateOrganization={hasOrgWrite} />
-                  </SidebarMenuItem>
-
-                  <Divider />
-
-                  <UserSummary to="/settings/account/details/">
-                    <UserBadgeNoOverflow user={user} avatarSize={32} />
-                  </UserSummary>
-
-                  <div>
-                    <SidebarMenuItem to="/settings/account/">
-                      {t('User settings')}
-                    </SidebarMenuItem>
-                    <SidebarMenuItem to={'/settings/account/api/'}>
-                      {t('API keys')}
-                    </SidebarMenuItem>
-                    {user.isSuperuser && (
-                      <SidebarMenuItem to={'/manage/'}>{t('Admin')}</SidebarMenuItem>
-                    )}
-                    <SidebarMenuItem href="/auth/logout/">
-                      {t('Sign out')}
-                    </SidebarMenuItem>
-                  </div>
                 </OrgAndUserMenu>
               )}
             </SidebarDropdownRoot>
@@ -126,6 +153,13 @@ class SidebarDropdown extends React.Component {
 
 export default SidebarDropdown;
 
+const SentryLink = styled(Link)`
+  color: ${p => p.theme.white};
+  &:hover {
+    color: ${p => p.theme.white};
+  }
+`;
+
 const UserSummary = styled(Link)`
   display: flex;
   padding: 10px 15px;
diff --git a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
index 02b5d499d4..1c9ca4a462 100644
--- a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
@@ -156,7 +156,7 @@ exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
   }
 >
   <div
-    className="css-1d11loe-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw8"
+    className="css-1d11loe-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw9"
     onClick={[Function]}
     onMouseEnter={[Function]}
     onMouseLeave={[Function]}
@@ -483,17 +483,17 @@ exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
       to="/settings/account/details/"
     >
       <Link
-        className="css-1fpw0f9-UserSummary e1fowdfw0"
+        className="css-1fpw0f9-UserSummary e1fowdfw1"
         to="/settings/account/details/"
       >
         <Link
-          className="css-1fpw0f9-UserSummary e1fowdfw0"
+          className="css-1fpw0f9-UserSummary e1fowdfw1"
           onlyActiveOnIndex={false}
           style={Object {}}
           to="/settings/account/details/"
         >
           <a
-            className="css-1fpw0f9-UserSummary e1fowdfw0"
+            className="css-1fpw0f9-UserSummary e1fowdfw1"
             onClick={[Function]}
             style={Object {}}
           >
@@ -519,7 +519,7 @@ exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
             >
               <IdBadge
                 avatarSize={32}
-                className="css-1tz319h-UserBadgeNoOverflow e1fowdfw1"
+                className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
                 user={
                   Object {
                     "email": "foo@example.com",
@@ -540,7 +540,7 @@ exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
               >
                 <UserBadge
                   avatarSize={32}
-                  className="css-1tz319h-UserBadgeNoOverflow e1fowdfw1"
+                  className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
                   hideEmail={false}
                   useLink={false}
                   user={
@@ -562,10 +562,10 @@ exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
                   }
                 >
                   <StyledUserBadge
-                    className="css-1tz319h-UserBadgeNoOverflow e1fowdfw1"
+                    className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
                   >
                     <div
-                      className="e1fowdfw1 css-1dpgz1o-StyledUserBadge-UserBadgeNoOverflow ev46mzr0"
+                      className="e1fowdfw2 css-1dpgz1o-StyledUserBadge-UserBadgeNoOverflow ev46mzr0"
                     >
                       <StyledAvatar
                         size={32}
@@ -1476,3 +1476,395 @@ exports[`Sidebar can have onboarding feature 1`] = `
   </StyledSidebarPanel>
 </SidebarPanel>
 `;
+
+exports[`Sidebar renders without org and router 1`] = `
+<OrgAndUserMenu
+  innerRef={[Function]}
+  onClick={[Function]}
+  onMouseEnter={[Function]}
+  onMouseLeave={[Function]}
+  org={null}
+>
+  <div
+    className="css-1d11loe-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw9"
+    onClick={[Function]}
+    onMouseEnter={[Function]}
+    onMouseLeave={[Function]}
+  >
+    <UserSummary
+      to="/settings/account/details/"
+    >
+      <Link
+        className="css-1fpw0f9-UserSummary e1fowdfw1"
+        to="/settings/account/details/"
+      >
+        <Link
+          className="css-1fpw0f9-UserSummary e1fowdfw1"
+          onlyActiveOnIndex={false}
+          style={Object {}}
+          to="/settings/account/details/"
+        >
+          <a
+            className="css-1fpw0f9-UserSummary e1fowdfw1"
+            onClick={[Function]}
+            style={Object {}}
+          >
+            <UserBadgeNoOverflow
+              avatarSize={32}
+              user={
+                Object {
+                  "email": "foo@example.com",
+                  "flags": Object {
+                    "newsletter_consent_prompt": false,
+                  },
+                  "hasPasswordAuth": true,
+                  "id": "1",
+                  "isAuthenticated": true,
+                  "name": "Foo Bar",
+                  "options": Object {
+                    "timezone": "UTC",
+                  },
+                  "permissions": Set {},
+                  "username": "foo@example.com",
+                }
+              }
+            >
+              <IdBadge
+                avatarSize={32}
+                className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
+                user={
+                  Object {
+                    "email": "foo@example.com",
+                    "flags": Object {
+                      "newsletter_consent_prompt": false,
+                    },
+                    "hasPasswordAuth": true,
+                    "id": "1",
+                    "isAuthenticated": true,
+                    "name": "Foo Bar",
+                    "options": Object {
+                      "timezone": "UTC",
+                    },
+                    "permissions": Set {},
+                    "username": "foo@example.com",
+                  }
+                }
+              >
+                <UserBadge
+                  avatarSize={32}
+                  className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
+                  hideEmail={false}
+                  useLink={false}
+                  user={
+                    Object {
+                      "email": "foo@example.com",
+                      "flags": Object {
+                        "newsletter_consent_prompt": false,
+                      },
+                      "hasPasswordAuth": true,
+                      "id": "1",
+                      "isAuthenticated": true,
+                      "name": "Foo Bar",
+                      "options": Object {
+                        "timezone": "UTC",
+                      },
+                      "permissions": Set {},
+                      "username": "foo@example.com",
+                    }
+                  }
+                >
+                  <StyledUserBadge
+                    className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
+                  >
+                    <div
+                      className="e1fowdfw2 css-1dpgz1o-StyledUserBadge-UserBadgeNoOverflow ev46mzr0"
+                    >
+                      <StyledAvatar
+                        size={32}
+                        user={
+                          Object {
+                            "email": "foo@example.com",
+                            "flags": Object {
+                              "newsletter_consent_prompt": false,
+                            },
+                            "hasPasswordAuth": true,
+                            "id": "1",
+                            "isAuthenticated": true,
+                            "name": "Foo Bar",
+                            "options": Object {
+                              "timezone": "UTC",
+                            },
+                            "permissions": Set {},
+                            "username": "foo@example.com",
+                          }
+                        }
+                      >
+                        <Component
+                          className="css-1u6j7yz-StyledAvatar ev46mzr4"
+                          size={32}
+                          user={
+                            Object {
+                              "email": "foo@example.com",
+                              "flags": Object {
+                                "newsletter_consent_prompt": false,
+                              },
+                              "hasPasswordAuth": true,
+                              "id": "1",
+                              "isAuthenticated": true,
+                              "name": "Foo Bar",
+                              "options": Object {
+                                "timezone": "UTC",
+                              },
+                              "permissions": Set {},
+                              "username": "foo@example.com",
+                            }
+                          }
+                        >
+                          <Avatar
+                            className="css-1u6j7yz-StyledAvatar ev46mzr4"
+                            hasTooltip={false}
+                            size={32}
+                            user={
+                              Object {
+                                "email": "foo@example.com",
+                                "flags": Object {
+                                  "newsletter_consent_prompt": false,
+                                },
+                                "hasPasswordAuth": true,
+                                "id": "1",
+                                "isAuthenticated": true,
+                                "name": "Foo Bar",
+                                "options": Object {
+                                  "timezone": "UTC",
+                                },
+                                "permissions": Set {},
+                                "username": "foo@example.com",
+                              }
+                            }
+                          >
+                            <UserAvatar
+                              className="css-1u6j7yz-StyledAvatar ev46mzr4"
+                              gravatar={true}
+                              hasTooltip={false}
+                              size={32}
+                              user={
+                                Object {
+                                  "email": "foo@example.com",
+                                  "flags": Object {
+                                    "newsletter_consent_prompt": false,
+                                  },
+                                  "hasPasswordAuth": true,
+                                  "id": "1",
+                                  "isAuthenticated": true,
+                                  "name": "Foo Bar",
+                                  "options": Object {
+                                    "timezone": "UTC",
+                                  },
+                                  "permissions": Set {},
+                                  "username": "foo@example.com",
+                                }
+                              }
+                            >
+                              <BaseAvatar
+                                className="css-1u6j7yz-StyledAvatar ev46mzr4"
+                                gravatarId="foo@example.com"
+                                hasTooltip={false}
+                                letterId="foo@example.com"
+                                size={32}
+                                style={Object {}}
+                                title="Foo Bar"
+                                tooltip="Foo Bar (foo@example.com)"
+                                type="gravatar"
+                              >
+                                <Tooltip
+                                  disabled={true}
+                                  title="Foo Bar (foo@example.com)"
+                                >
+                                  <StyledBaseAvatar
+                                    className="avatar css-1u6j7yz-StyledAvatar ev46mzr4"
+                                    style={
+                                      Object {
+                                        "height": "32px",
+                                        "width": "32px",
+                                      }
+                                    }
+                                  >
+                                    <span
+                                      className="avatar ev46mzr4 css-1dbvbxh-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                                      style={
+                                        Object {
+                                          "height": "32px",
+                                          "width": "32px",
+                                        }
+                                      }
+                                    >
+                                      <img
+                                        onError={[Function]}
+                                        onLoad={[Function]}
+                                        src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                                      />
+                                    </span>
+                                  </StyledBaseAvatar>
+                                </Tooltip>
+                              </BaseAvatar>
+                            </UserAvatar>
+                          </Avatar>
+                        </Component>
+                      </StyledAvatar>
+                      <StyledNameAndEmail>
+                        <div
+                          className="css-9l6b2w-StyledNameAndEmail ev46mzr1"
+                        >
+                          <StyledName
+                            hideEmail={false}
+                            to="/settings/undefined/members/1/"
+                            useLink={false}
+                          >
+                            <Component
+                              className="css-12fcmnb-StyledName ev46mzr3"
+                              hideEmail={false}
+                              to="/settings/undefined/members/1/"
+                              useLink={false}
+                            >
+                              <span
+                                className="css-12fcmnb-StyledName ev46mzr3"
+                              >
+                                Foo Bar
+                              </span>
+                            </Component>
+                          </StyledName>
+                          <StyledEmail>
+                            <div
+                              className="css-3w2sfq-StyledEmail ev46mzr2"
+                            >
+                              foo@example.com
+                            </div>
+                          </StyledEmail>
+                        </div>
+                      </StyledNameAndEmail>
+                    </div>
+                  </StyledUserBadge>
+                </UserBadge>
+              </IdBadge>
+            </UserBadgeNoOverflow>
+          </a>
+        </Link>
+      </Link>
+    </UserSummary>
+    <div>
+      <SidebarMenuItem
+        to="/settings/account/"
+      >
+        <MenuItemLink
+          to="/settings/account/"
+        >
+          <Component
+            className="css-1vsrn4x-MenuItemLink ebifsjx1"
+            to="/settings/account/"
+          >
+            <Link
+              className="css-1vsrn4x-MenuItemLink ebifsjx1"
+              to="/settings/account/"
+            >
+              <Link
+                className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                onlyActiveOnIndex={false}
+                style={Object {}}
+                to="/settings/account/"
+              >
+                <a
+                  className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                  onClick={[Function]}
+                  style={Object {}}
+                >
+                  <MenuItemLabel
+                    hasMenu={false}
+                  >
+                    <span
+                      className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
+                    >
+                      User settings
+                    </span>
+                  </MenuItemLabel>
+                </a>
+              </Link>
+            </Link>
+          </Component>
+        </MenuItemLink>
+      </SidebarMenuItem>
+      <SidebarMenuItem
+        to="/settings/account/api/"
+      >
+        <MenuItemLink
+          to="/settings/account/api/"
+        >
+          <Component
+            className="css-1vsrn4x-MenuItemLink ebifsjx1"
+            to="/settings/account/api/"
+          >
+            <Link
+              className="css-1vsrn4x-MenuItemLink ebifsjx1"
+              to="/settings/account/api/"
+            >
+              <Link
+                className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                onlyActiveOnIndex={false}
+                style={Object {}}
+                to="/settings/account/api/"
+              >
+                <a
+                  className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                  onClick={[Function]}
+                  style={Object {}}
+                >
+                  <MenuItemLabel
+                    hasMenu={false}
+                  >
+                    <span
+                      className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
+                    >
+                      API keys
+                    </span>
+                  </MenuItemLabel>
+                </a>
+              </Link>
+            </Link>
+          </Component>
+        </MenuItemLink>
+      </SidebarMenuItem>
+      <SidebarMenuItem
+        href="/auth/logout/"
+      >
+        <MenuItemLink
+          href="/auth/logout/"
+        >
+          <Component
+            className="css-1vsrn4x-MenuItemLink ebifsjx1"
+            href="/auth/logout/"
+          >
+            <Link
+              className="css-1vsrn4x-MenuItemLink ebifsjx1"
+              href="/auth/logout/"
+            >
+              <a
+                className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                href="/auth/logout/"
+              >
+                <MenuItemLabel
+                  hasMenu={false}
+                >
+                  <span
+                    className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
+                  >
+                    Sign out
+                  </span>
+                </MenuItemLabel>
+              </a>
+            </Link>
+          </Component>
+        </MenuItemLink>
+      </SidebarMenuItem>
+    </div>
+  </div>
+</OrgAndUserMenu>
+`;
diff --git a/tests/js/spec/components/sidebar/index.spec.jsx b/tests/js/spec/components/sidebar/index.spec.jsx
index 088f0faea9..d32aa354b3 100644
--- a/tests/js/spec/components/sidebar/index.spec.jsx
+++ b/tests/js/spec/components/sidebar/index.spec.jsx
@@ -43,6 +43,16 @@ describe('Sidebar', function() {
     expect(wrapper.find('StyledSidebar')).toHaveLength(1);
   });
 
+  it('renders without org and router', function() {
+    wrapper = createWrapper({
+      organization: null,
+      router: null,
+    });
+
+    wrapper.find('SidebarDropdownActor').simulate('click');
+    expect(wrapper.find('OrgAndUserMenu')).toMatchSnapshot();
+  });
+
   it('can toggle collapsed state', async function() {
     wrapper = mount(
       <SidebarContainer organization={organization} user={user} router={router} />,
