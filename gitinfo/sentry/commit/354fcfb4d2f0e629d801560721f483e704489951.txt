commit 354fcfb4d2f0e629d801560721f483e704489951
Author: David Cramer <dcramer@gmail.com>
Date:   Sun May 13 02:44:42 2012 -0700

    Reenable countdown and allow delay to be configured as part of BUFFER_OPTIONS

diff --git a/docs/buffer/index.rst b/docs/buffer/index.rst
index 6baacbde29..3cc5e1d430 100644
--- a/docs/buffer/index.rst
+++ b/docs/buffer/index.rst
@@ -22,7 +22,9 @@ To specify a backend, simply modify the ``BUFFER`` and ``BUFFER_OPTIONS`` values
 ::
 
     SENTRY_BUFFER = 'sentry.buffer.base.Buffer'
-    SENTRY_BUFFER_OPTIONS = {}
+    SENTRY_BUFFER_OPTIONS = {
+        'delay': 5,  # delay for queued tasks
+    }
 
 The Redis Backend
 -----------------
diff --git a/sentry/buffer/base.py b/sentry/buffer/base.py
index 5d85ffdb93..46ebf70b79 100644
--- a/sentry/buffer/base.py
+++ b/sentry/buffer/base.py
@@ -24,8 +24,8 @@ class Buffer(object):
     This is useful in situations where a single event might be happening so fast that the queue cant
     keep up with the updates.
     """
-    def __init__(self, **options):
-        pass
+    def __init__(self, delay=5, **options):
+        self.delay = delay
 
     def incr(self, model, columns, filters, extra=None):
         """
@@ -36,7 +36,7 @@ class Buffer(object):
             'columns': columns,
             'filters': filters,
             'extra': extra,
-        })
+        }, countdown=self.delay)
 
     def process(self, model, columns, filters, extra=None):
         update_kwargs = dict((c, F(c) + v) for c, v in columns.iteritems())
diff --git a/tests/sentry/buffer/base/tests.py b/tests/sentry/buffer/base/tests.py
index c7b6d57cec..28588d9cd4 100644
--- a/tests/sentry/buffer/base/tests.py
+++ b/tests/sentry/buffer/base/tests.py
@@ -22,7 +22,7 @@ class BufferTest(TestCase):
         filters = {'pk': 1}
         self.buf.incr(model, columns, filters)
         kwargs = dict(model=model, columns=columns, filters=filters, extra=None)
-        maybe_async.assert_called_once_with(process_incr, kwargs=kwargs)
+        maybe_async.assert_called_once_with(process_incr, kwargs=kwargs, countdown=5)
 
     def test_process_saves_data(self):
         group = Group.objects.create(project=Project(id=1))
diff --git a/tests/sentry/buffer/redis/tests.py b/tests/sentry/buffer/redis/tests.py
index 6f1e543789..11adb84408 100644
--- a/tests/sentry/buffer/redis/tests.py
+++ b/tests/sentry/buffer/redis/tests.py
@@ -45,7 +45,7 @@ class RedisBufferTest(TestCase):
         filters = {'pk': 1}
         self.buf.incr(model, columns, filters)
         kwargs = dict(model=model, columns=columns, filters=filters, extra=None)
-        maybe_async.assert_called_once_with(process_incr, kwargs=kwargs)
+        maybe_async.assert_called_once_with(process_incr, kwargs=kwargs, countdown=5)
 
     @mock.patch('sentry.buffer.redis.RedisBuffer._make_extra_key', mock.Mock(return_value='extra'))
     @mock.patch('sentry.buffer.redis.RedisBuffer._make_key', mock.Mock(return_value='foo'))
