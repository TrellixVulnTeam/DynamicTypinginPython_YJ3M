commit 0c6e2e3a8b03a2a4fdec0129ef36158bbe079d0c
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Mon May 22 14:57:19 2017 -0700

    fix ListField to raise validation error when values are None fixes SENTRY-3CJ (#5398)
    
    * fix ListField to raise validation error when values are None
    
    * add allow_none kwarg to ListField
    
    * add test for ListField

diff --git a/src/sentry/api/endpoints/organization_release_details.py b/src/sentry/api/endpoints/organization_release_details.py
index 6513ea1702..9bf1dbfce4 100644
--- a/src/sentry/api/endpoints/organization_release_details.py
+++ b/src/sentry/api/endpoints/organization_release_details.py
@@ -46,9 +46,17 @@ class ReleaseSerializer(serializers.Serializer):
     ref = serializers.CharField(max_length=64, required=False)
     url = serializers.URLField(required=False)
     dateReleased = serializers.DateTimeField(required=False)
-    commits = ListField(child=CommitSerializer(), required=False)
-    headCommits = ListField(child=ReleaseHeadCommitSerializerDeprecated(), required=False)
-    refs = ListField(child=ReleaseHeadCommitSerializer(), required=False)
+    commits = ListField(child=CommitSerializer(), required=False, allow_null=False)
+    headCommits = ListField(
+        child=ReleaseHeadCommitSerializerDeprecated(),
+        required=False,
+        allow_null=False
+    )
+    refs = ListField(
+        child=ReleaseHeadCommitSerializer(),
+        required=False,
+        allow_null=False,
+    )
 
 
 class OrganizationReleaseDetailsEndpoint(OrganizationReleasesBaseEndpoint):
diff --git a/src/sentry/api/endpoints/organization_releases.py b/src/sentry/api/endpoints/organization_releases.py
index 5842294b1d..63ce36b1ce 100644
--- a/src/sentry/api/endpoints/organization_releases.py
+++ b/src/sentry/api/endpoints/organization_releases.py
@@ -40,8 +40,16 @@ def list_org_releases_scenario(runner):
 
 class ReleaseSerializerWithProjects(ReleaseSerializer):
     projects = ListField()
-    headCommits = ListField(child=ReleaseHeadCommitSerializerDeprecated(), required=False)
-    refs = ListField(child=ReleaseHeadCommitSerializer(), required=False)
+    headCommits = ListField(
+        child=ReleaseHeadCommitSerializerDeprecated(),
+        required=False,
+        allow_null=False,
+    )
+    refs = ListField(
+        child=ReleaseHeadCommitSerializer(),
+        required=False,
+        allow_null=False,
+    )
 
 
 class OrganizationReleasesEndpoint(OrganizationReleasesBaseEndpoint):
diff --git a/src/sentry/api/endpoints/project_release_details.py b/src/sentry/api/endpoints/project_release_details.py
index 4f577cfc85..5991795604 100644
--- a/src/sentry/api/endpoints/project_release_details.py
+++ b/src/sentry/api/endpoints/project_release_details.py
@@ -17,7 +17,7 @@ class ReleaseSerializer(serializers.Serializer):
     ref = serializers.CharField(max_length=64, required=False)
     url = serializers.URLField(required=False)
     dateReleased = serializers.DateTimeField(required=False)
-    commits = ListField(child=CommitSerializer(), required=False)
+    commits = ListField(child=CommitSerializer(), required=False, allow_null=False)
 
 
 class ProjectReleaseDetailsEndpoint(ProjectEndpoint):
diff --git a/src/sentry/api/endpoints/project_releases.py b/src/sentry/api/endpoints/project_releases.py
index b2bdc75e19..feab276ae2 100644
--- a/src/sentry/api/endpoints/project_releases.py
+++ b/src/sentry/api/endpoints/project_releases.py
@@ -23,7 +23,7 @@ class ReleaseSerializer(serializers.Serializer):
     url = serializers.URLField(required=False)
     owner = UserField(required=False)
     dateReleased = serializers.DateTimeField(required=False)
-    commits = ListField(child=CommitSerializer(), required=False)
+    commits = ListField(child=CommitSerializer(), required=False, allow_null=False)
 
     def validate_version(self, attrs, source):
         value = attrs[source]
diff --git a/src/sentry/api/serializers/rest_framework/list.py b/src/sentry/api/serializers/rest_framework/list.py
index 27bdb53b08..d4db4b0e9b 100644
--- a/src/sentry/api/serializers/rest_framework/list.py
+++ b/src/sentry/api/serializers/rest_framework/list.py
@@ -4,10 +4,11 @@ from rest_framework.serializers import WritableField, ValidationError
 
 
 class ListField(WritableField):
-    def __init__(self, child=None, **kwargs):
+    def __init__(self, child=None, allow_null=True, **kwargs):
         if child:
             assert isinstance(child, WritableField)
         self.child = child
+        self.allow_null = allow_null
         super(ListField, self).__init__(**kwargs)
 
     def initialize(self, parent, field_name):
@@ -44,6 +45,8 @@ class ListField(WritableField):
 
         if self.child:
             for item in value:
+                if item is None and not self.allow_null:
+                    raise ValidationError('Incorrect type. Expected value, but got null')
                 self.child.validate(item)
 
     def run_validators(self, value):
diff --git a/tests/sentry/api/serializers/test_fields.py b/tests/sentry/api/serializers/test_fields.py
new file mode 100644
index 0000000000..d6fc24e277
--- /dev/null
+++ b/tests/sentry/api/serializers/test_fields.py
@@ -0,0 +1,42 @@
+from __future__ import absolute_import
+
+from rest_framework import serializers
+
+from sentry.api.serializers.rest_framework import ListField
+from sentry.testutils import TestCase
+
+
+class ChildSerializer(serializers.Serializer):
+    b_field = serializers.CharField(max_length=64)
+
+
+class DummySerializer(serializers.Serializer):
+    a_field = ListField(
+        child=ChildSerializer(),
+        required=False,
+        allow_null=False,
+    )
+
+
+class TestListField(TestCase):
+    def test_simple(self):
+        data = {
+            'a_field': [{'b_field': 'abcdefg'}],
+        }
+
+        serializer = DummySerializer(data=data)
+        assert serializer.is_valid()
+        assert serializer.data == {
+            'a_field': [{'b_field': 'abcdefg'}],
+        }
+
+    def test_allow_null(self):
+        data = {
+            'a_field': [None],
+        }
+
+        serializer = DummySerializer(data=data)
+        assert not serializer.is_valid()
+        assert serializer.errors == {
+            'a_field': [u'Incorrect type. Expected value, but got null'],
+        }
diff --git a/tests/sentry/api/serializers/test_release.py b/tests/sentry/api/serializers/test_release.py
index 9a35734a7c..625a84fc61 100644
--- a/tests/sentry/api/serializers/test_release.py
+++ b/tests/sentry/api/serializers/test_release.py
@@ -7,6 +7,7 @@ import datetime
 from django.utils import timezone
 from uuid import uuid4
 
+from sentry.api.endpoints.organization_releases import ReleaseSerializerWithProjects
 from sentry.api.serializers import serialize
 from sentry.models import (Commit, CommitAuthor,
     Release, ReleaseCommit, ReleaseProject, TagValue, User, UserEmail,)
@@ -336,3 +337,34 @@ class ReleaseSerializerTest(TestCase):
         result = serialize(release, user)
         assert len(result['authors']) == 1
         assert result['authors'][0]['email'] == 'stebe@sentry.io'
+
+
+class ReleaseRefsSerializerTest(TestCase):
+    def test_simple(self):
+        # test bad refs
+        data = {
+            'version': 'a' * 40,
+            'projects': ['earth'],
+            'refs': [None]
+        }
+
+        serializer = ReleaseSerializerWithProjects(data=data)
+
+        assert not serializer.is_valid()
+        assert serializer.errors == {
+            'refs': [u'Incorrect type. Expected value, but got null'],
+        }
+
+        # test good refs
+        data = {
+            'version': 'a' * 40,
+            'projects': ['earth'],
+            'refs': [{
+                'repository': 'my-repo',
+                'commit': 'b' * 40,
+            }]
+        }
+
+        serializer = ReleaseSerializerWithProjects(data=data)
+
+        assert serializer.is_valid()
