commit 30d3ea45699f6bc09217214fe6c25251992cc33f
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Apr 25 12:32:24 2018 -0700

     feat: Scaffold org dashboard (#8157)

diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
index 26fc379539..abd3522b9b 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
@@ -1,21 +1,91 @@
 import React from 'react';
+import PropTypes from 'prop-types';
 import createReactClass from 'create-react-class';
+import {Flex, Box} from 'grid-emotion';
+import styled from 'react-emotion';
 
 import OrganizationState from '../../mixins/organizationState';
 import OldDashboard from './oldDashboard';
 import ProjectNav from './projectNav';
+import TeamMembers from './teamMembers';
+import ProjectCard from './projectCard';
+import getProjectsByTeams from '../../utils/getProjectsByTeams';
+import withTeams from '../../utils/withTeams';
+import withProjects from '../../utils/withProjects';
 
 class Dashboard extends React.Component {
+  static propTypes = {
+    teams: PropTypes.array,
+    projects: PropTypes.array,
+  };
+
+  componentWillMount() {
+    $(document.body).addClass('org-dashboard');
+  }
+  componentWillUnmount() {
+    $(document.body).removeClass('org-dashboard');
+  }
+
   render() {
+    const {projects, teams} = this.props;
+    const {projectsByTeam} = getProjectsByTeams(teams, projects);
+    const projectKeys = Object.keys(projectsByTeam);
+
     return (
       <div>
         <ProjectNav />
-        New dashboard placeholder
+        <div>
+          {projectKeys.map((slug, index) => {
+            return (
+              <TeamSection key={slug} showBorder={index !== projectKeys.length - 1}>
+                <TeamTitleBar justify="space-between" align="center">
+                  <TeamName>{`#${slug}`}</TeamName>
+                  <TeamMembers teamId={slug} orgId={this.props.params.orgId} />
+                </TeamTitleBar>
+                <ProjectCards>
+                  {projectsByTeam[slug].map(project => {
+                    return (
+                      <ProjectCardWrapper
+                        key={project.id}
+                        width={['100%', '50%', '33%', '25%']}
+                      >
+                        <ProjectCard project={project} />
+                      </ProjectCardWrapper>
+                    );
+                  })}
+                </ProjectCards>
+              </TeamSection>
+            );
+          })}
+        </div>
       </div>
     );
   }
 }
 
+const TeamSection = styled.div`
+  border-bottom: ${p => (p.showBorder ? '1px solid ' + p.theme.borderLight : 0)};
+`;
+
+const TeamTitleBar = styled(Flex)`
+  padding: 24px 24px 0;
+  margin-bottom: 16px;
+`;
+
+const TeamName = styled.h4`
+  margin: 0;
+  font-size: ${p => p.theme.fontSizeLarge};
+`;
+
+const ProjectCards = styled(Flex)`
+  flex-wrap: wrap;
+  padding: 0 16px 24px;
+`;
+
+const ProjectCardWrapper = styled(Box)`
+  padding: 8px;
+`;
+
 const OrganizationDashboard = createReactClass({
   displayName: 'OrganizationDashboard',
   mixins: [OrganizationState],
@@ -31,4 +101,4 @@ const OrganizationDashboard = createReactClass({
   },
 });
 
-export default OrganizationDashboard;
+export default withTeams(withProjects(OrganizationDashboard));
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
new file mode 100644
index 0000000000..31cff81ab9
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
@@ -0,0 +1,35 @@
+import React from 'react';
+import styled from 'react-emotion';
+import {withRouter} from 'react-router';
+
+import SentryTypes from '../../proptypes';
+import Link from '../../components/link';
+
+class ProjectCard extends React.Component {
+  static propTypes = {
+    project: SentryTypes.Project.isRequired,
+  };
+
+  render() {
+    const {project, params} = this.props;
+
+    return (
+      <StyledProjectCard>
+        <ProjectCardHeader>
+          <Link to={`/${params.orgId}/${project.slug}/`}>{project.slug}</Link>
+        </ProjectCardHeader>
+      </StyledProjectCard>
+    );
+  }
+}
+
+const StyledProjectCard = styled.div`
+  background-color: white;
+  border: 1px solid ${p => p.theme.borderDark};
+  border-radius: ${p => p.theme.borderRadius};
+  box-shadow: ${p => p.theme.dropShadowLight};
+`;
+
+const ProjectCardHeader = styled.div``;
+
+export default withRouter(ProjectCard);
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/projectNav.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/projectNav.jsx
index fa0f4e5f29..4ea16dd8aa 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/projectNav.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/projectNav.jsx
@@ -96,6 +96,7 @@ const ProjectNav = createReactClass({
 const StyledNav = styled(Flex)`
   border-bottom: 1px solid ${p => p.theme.borderLight};
   box-shadow: ${p => p.theme.dropShadowLight};
+  background-color: white;
 `;
 
 const StyledDropdown = styled.div`
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/teamMembers.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/teamMembers.jsx
new file mode 100644
index 0000000000..7947fdeaab
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/teamMembers.jsx
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import AsyncComponent from '../../components/asyncComponent';
+import AvatarList from '../../components/avatar/avatarList';
+
+export default class TeamMembers extends AsyncComponent {
+  static propTypes = {
+    teamId: PropTypes.string.isRequired,
+    orgId: PropTypes.string.isRequired,
+  };
+
+  getEndpoints() {
+    const {orgId, teamId} = this.props;
+    return [['members', `/teams/${orgId}/${teamId}/members/`]];
+  }
+
+  renderBody() {
+    if (this.state.members) {
+      const users = this.state.members.map(member => member.user);
+      return <AvatarList users={users} />;
+    }
+    return null;
+  }
+}
diff --git a/src/sentry/static/sentry/less/layout.less b/src/sentry/static/sentry/less/layout.less
index 3d7de1298c..970d06db93 100644
--- a/src/sentry/static/sentry/less/layout.less
+++ b/src/sentry/static/sentry/less/layout.less
@@ -32,6 +32,10 @@ body {
       z-index: 1000;
     }
   }
+
+  &.org-dashboard {
+    background-color: #fcfcfc;
+  }
 }
 
 #blk_router {
