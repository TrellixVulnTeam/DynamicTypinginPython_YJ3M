commit fd9d2088ee74e40469482e7ab9b5191ba2e5b2d3
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Apr 2 12:48:56 2020 +0200

    fix(sessions): Ensure current bucket is included in release stats (#18029)

diff --git a/src/sentry/snuba/sessions.py b/src/sentry/snuba/sessions.py
index c8b4613760..2d65407415 100644
--- a/src/sentry/snuba/sessions.py
+++ b/src/sentry/snuba/sessions.py
@@ -4,10 +4,13 @@ import pytz
 from datetime import datetime, timedelta
 
 from sentry.utils.snuba import raw_query, parse_snuba_datetime
-from sentry.utils.dates import to_timestamp
+from sentry.utils.dates import to_timestamp, to_datetime
 from sentry.snuba.dataset import Dataset
 
 
+DATASET_BUCKET = 3600
+
+
 def _convert_duration(val):
     if val != val:
         return None
@@ -357,6 +360,11 @@ def get_crash_free_breakdown(project_id, release, start, environments=None):
 def get_project_release_stats(project_id, release, stat, rollup, start, end, environments=None):
     assert stat in ("users", "sessions")
 
+    # since snuba end queries are exclusive of the time and we're bucketing to
+    # a full hour, we need to round to the next hour since snuba is exclusive
+    # on the end.
+    end = to_datetime((to_timestamp(end) // DATASET_BUCKET + 1) * DATASET_BUCKET)
+
     filter_keys = {"project_id": [project_id]}
     conditions = [["release", "=", release]]
     if environments is not None:
diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index c36b40a3fa..e787b2f1b6 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -490,6 +490,10 @@ class SnubaQueryParams(object):
         # TODO: instead of having events be the default, make dataset required.
         self.dataset = dataset or Dataset.Events
         self.start = start or datetime.utcfromtimestamp(0)  # will be clamped to project retention
+        # Snuba has end exclusive but our UI wants it generally to be inclusive.
+        # This shows up in unittests: https://github.com/getsentry/sentry/pull/15939
+        # We generally however require that the API user is aware of the exclusive
+        # end.
         self.end = end or datetime.utcnow() + timedelta(seconds=1)
         self.groupby = groupby or []
         self.conditions = conditions or []
