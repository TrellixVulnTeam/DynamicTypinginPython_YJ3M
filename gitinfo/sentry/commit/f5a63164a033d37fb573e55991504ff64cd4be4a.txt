commit f5a63164a033d37fb573e55991504ff64cd4be4a
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Tue Aug 21 12:00:37 2018 -0700

    Update created_at date on code regeneration (#9374)

diff --git a/src/sentry/models/authenticator.py b/src/sentry/models/authenticator.py
index 13f52f37ba..f54ce77b49 100644
--- a/src/sentry/models/authenticator.py
+++ b/src/sentry/models/authenticator.py
@@ -317,6 +317,7 @@ class RecoveryCodeInterface(AuthenticatorInterface):
         if not self.is_enrolled:
             raise RuntimeError('Interface is not enrolled')
         self.config.update(self.generate_new_config())
+        self.authenticator.reset_fields(save=False)
         if save:
             self.authenticator.save()
 
@@ -612,6 +613,12 @@ class Authenticator(BaseModel):
         if save:
             self.save()
 
+    def reset_fields(self, save=True):
+        self.created_at = timezone.now()
+        self.last_used_at = None
+        if save:
+            self.save()
+
     def __repr__(self):
         return '<Authenticator user=%r interface=%r>' % (
             self.user.email, self.interface.interface_id,
diff --git a/tests/sentry/api/endpoints/test_user_authenticator_details.py b/tests/sentry/api/endpoints/test_user_authenticator_details.py
index 6d4324dbfd..3afb0fcb17 100644
--- a/tests/sentry/api/endpoints/test_user_authenticator_details.py
+++ b/tests/sentry/api/endpoints/test_user_authenticator_details.py
@@ -1,11 +1,13 @@
 from __future__ import absolute_import
 
+import datetime
 import mock
 import six
 
 from django.core.urlresolvers import reverse
 from django.db.models import F
 from django.conf import settings
+from django.utils import timezone
 
 from sentry.models import Authenticator, TotpInterface, RecoveryCodeInterface, SmsInterface, Organization
 from sentry.testutils import APITestCase
@@ -243,15 +245,20 @@ class UserAuthenticatorDetailsTest(APITestCase):
         resp = self.client.get(url)
         assert resp.status_code == 200
         old_codes = resp.data['codes']
+        old_created_at = resp.data['createdAt']
 
         resp = self.client.get(url)
         assert old_codes == resp.data['codes']
+        assert old_created_at == resp.data['createdAt']
 
         # regenerate codes
-        resp = self.client.put(url)
+        tomorrow = timezone.now() + datetime.timedelta(days=1)
+        with mock.patch.object(timezone, 'now', return_value=tomorrow):
+            resp = self.client.put(url)
 
-        resp = self.client.get(url)
-        assert old_codes != resp.data['codes']
+            resp = self.client.get(url)
+            assert old_codes != resp.data['codes']
+            assert old_created_at != resp.data['createdAt']
 
         self._assert_security_email_sent('recovery-codes-regenerated', email_log)
 
