commit c121bf492faa5cf2cecb743a6986f0729cdceedc
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue Jul 10 15:53:14 2018 -0700

    feat(integrations): Add IntegrationDetailsModal (#8959)

diff --git a/src/sentry/static/sentry/app/actionCreators/modal.jsx b/src/sentry/static/sentry/app/actionCreators/modal.jsx
index 73af41040b..83ea740e7c 100644
--- a/src/sentry/static/sentry/app/actionCreators/modal.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/modal.jsx
@@ -86,3 +86,17 @@ export function openRecoveryOptions(options = {}) {
       });
     });
 }
+
+/**
+ * @param Object options.provider The integration provider to show the details for
+ * @param Function options.onAddIntegration Called after a new integration is added
+ */
+export function openIntegrationDetails(options = {}) {
+  import(/* webpackChunkName: "IntegrationDetailsModal" */ 'app/components/modals/integrationDetailsModal')
+    .then(mod => mod.default)
+    .then(Modal => {
+      openModal(deps => <Modal {...deps} {...options} />, {
+        modalClassName: 'integration-details',
+      });
+    });
+}
diff --git a/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx b/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
new file mode 100644
index 0000000000..59e88694fa
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
@@ -0,0 +1,122 @@
+import {Box, Flex} from 'grid-emotion';
+import PropTypes from 'prop-types';
+import React from 'react';
+import marked from 'marked';
+import styled from 'react-emotion';
+
+import {t} from 'app/locale';
+import AddIntegrationButton from 'app/views/organizationIntegrations/addIntegrationButton';
+import Alert from 'app/components/alert';
+import Button from 'app/components/buttons/button';
+import ExternalLink from 'app/components/externalLink';
+import PluginIcon from 'app/plugins/components/pluginIcon';
+import space from 'app/styles/space';
+
+class IntegrationDetailsModal extends React.Component {
+  static propTypes = {
+    closeModal: PropTypes.func.isRequired,
+    onAddIntegration: PropTypes.func.isRequired,
+    provider: PropTypes.object.isRequired,
+  };
+
+  onAddIntegration = integration => {
+    this.props.closeModal();
+    this.props.onAddIntegration(integration);
+  };
+
+  render() {
+    const {provider, closeModal} = this.props;
+    const {metadata} = provider;
+    const description = marked(metadata.description);
+
+    return (
+      <React.Fragment>
+        <Flex align="center" mb={2}>
+          <PluginIcon pluginId={provider.key} size={32} />
+          <ProviderName>{t('%s Integration', provider.name)}</ProviderName>
+        </Flex>
+        <Description dangerouslySetInnerHTML={{__html: description}} />
+        <Metadata>
+          <AuthorName flex={1}>{t('By %s', provider.metadata.author)}</AuthorName>
+          <Box>
+            <ExternalLink href={metadata.source_url}>{t('View Source')}</ExternalLink>
+            <ExternalLink href={metadata.issue_url}>{t('Report Issue')}</ExternalLink>
+          </Box>
+        </Metadata>
+
+        {!provider.canAdd &&
+          metadata.aspects.externalInstall && (
+            <Alert type="warning" icon="icon-exit">
+              {metadata.aspects.externalInstall.noticeText}
+            </Alert>
+          )}
+
+        {metadata.aspects.alerts &&
+          metadata.aspects.alerts.map((alert, i) => (
+            <Alert key={i} type={alert.type}>
+              {alert.text}
+            </Alert>
+          ))}
+
+        <div className="modal-footer">
+          <Button size="small" onClick={closeModal}>
+            {t('Cancel')}
+          </Button>
+          {provider.canAdd && (
+            <AddIntegrationButton
+              css={{marginLeft: space(1)}}
+              size="small"
+              priority="primary"
+              provider={provider}
+              onAddIntegration={this.onAddIntegration}
+            />
+          )}
+          {!provider.canAdd &&
+            metadata.aspects.externalInstall && (
+              <Button
+                css={{marginLeft: space(1)}}
+                size="small"
+                priority="primary"
+                icon="icon-exit"
+                href={metadata.aspects.externalInstall.url}
+                onClick={closeModal}
+                external
+              >
+                {metadata.aspects.externalInstall.buttonText}
+              </Button>
+            )}
+        </div>
+      </React.Fragment>
+    );
+  }
+}
+
+const ProviderName = styled(p => <Box pl={1} {...p} />)`
+  font-weight: bold;
+  font-size: 1.2em;
+`;
+
+const Description = styled.div`
+  font-size: 1.5rem;
+  line-height: 2.1rem;
+  margin-bottom: ${space(2)};
+
+  li {
+    margin-bottom: 6px;
+  }
+`;
+
+const Metadata = styled(Flex)`
+  font-size: 0.9em;
+  margin-bottom: ${space(2)};
+
+  a {
+    margin-left: ${space(1)};
+  }
+`;
+
+const AuthorName = styled(Box)`
+  color: ${p => p.theme.gray2};
+`;
+
+export default IntegrationDetailsModal;
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 516fb829ca..15527caeaa 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -516,10 +516,12 @@ window.TestStubs = {
         issue_url: 'http://example.com/integration_issue_url',
         source_url: 'http://example.com/integration_source_url',
         aspects: {
-          alert_link: {
-            text: 'This is a *alert link* with markdown formatting',
-            link: '/url/with/params/{orgId}/',
-          },
+          alerts: [
+            {
+              type: 'warning',
+              text: 'This is a an alert example',
+            },
+          ],
         },
       },
       ...params,
diff --git a/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
new file mode 100644
index 0000000000..9acebcb636
--- /dev/null
+++ b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
@@ -0,0 +1,102 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`IntegrationDetailsModal renders simple integration 1`] = `
+<React.Fragment>
+  <Flex
+    align="center"
+    mb={2}
+  >
+    <PluginIcon
+      pluginId="github"
+      size={32}
+    />
+    <ProviderName>
+      GitHub Integration
+    </ProviderName>
+  </Flex>
+  <Description
+    dangerouslySetInnerHTML={
+      Object {
+        "__html": "<p><em>markdown</em> formatted <em>description</em></p>
+",
+      }
+    }
+  />
+  <Metadata>
+    <AuthorName
+      flex={1}
+    >
+      By Morty
+    </AuthorName>
+    <Box>
+      <ExternalLink
+        href="http://example.com/integration_source_url"
+        rel="noreferrer noopener"
+        target="_blank"
+      >
+        View Source
+      </ExternalLink>
+      <ExternalLink
+        href="http://example.com/integration_issue_url"
+        rel="noreferrer noopener"
+        target="_blank"
+      >
+        Report Issue
+      </ExternalLink>
+    </Box>
+  </Metadata>
+  <Alert
+    key="0"
+    type="warning"
+  >
+    This is a an alert example
+  </Alert>
+  <div
+    className="modal-footer"
+  >
+    <Button
+      disabled={false}
+      onClick={[MockFunction]}
+      size="small"
+    >
+      Cancel
+    </Button>
+    <AddIntegrationButton
+      className="css-1isemmb"
+      onAddIntegration={[Function]}
+      priority="primary"
+      provider={
+        Object {
+          "canAdd": true,
+          "canAddProject": false,
+          "config": Array [],
+          "features": Array [],
+          "key": "github",
+          "metadata": Object {
+            "aspects": Object {
+              "alerts": Array [
+                Object {
+                  "text": "This is a an alert example",
+                  "type": "warning",
+                },
+              ],
+            },
+            "author": "Morty",
+            "description": "*markdown* formatted _description_",
+            "issue_url": "http://example.com/integration_issue_url",
+            "noun": "Installation",
+            "source_url": "http://example.com/integration_source_url",
+          },
+          "name": "GitHub",
+          "setupDialog": Object {
+            "height": 100,
+            "url": "/github-integration-setup-uri/",
+            "width": 100,
+          },
+        }
+      }
+      size="small"
+    />
+  </div>
+</React.Fragment>
+`;
diff --git a/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx b/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
new file mode 100644
index 0000000000..b0ab75de03
--- /dev/null
+++ b/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
@@ -0,0 +1,43 @@
+import React from 'react';
+
+import {shallow} from 'enzyme';
+import IntegrationDetailsModal from 'app/components/modals/integrationDetailsModal';
+
+describe('IntegrationDetailsModal', function() {
+  const integrationAdded = jest.fn();
+
+  it('renders simple integration', function() {
+    const onClose = jest.fn();
+    const provider = TestStubs.GitHubIntegrationProvider();
+
+    const wrapper = shallow(
+      <IntegrationDetailsModal
+        provider={provider}
+        closeModal={onClose}
+        onAddIntegration={integrationAdded}
+      />
+    );
+
+    expect(wrapper).toMatchSnapshot();
+    wrapper
+      .find('Button')
+      .first()
+      .simulate('click');
+    expect(onClose).toHaveBeenCalled();
+  });
+
+  it('renders link for non-addable integration', function() {
+    const onClose = jest.fn();
+    const provider = TestStubs.JiraIntegrationProvider();
+
+    const wrapper = shallow(
+      <IntegrationDetailsModal
+        provider={provider}
+        closeModal={onClose}
+        onAddIntegration={integrationAdded}
+      />
+    );
+
+    expect(wrapper.find('Button[external]').exists()).toBe(true);
+  });
+});
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
index 979fe855c7..777a00d5ba 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
@@ -41,10 +41,12 @@ exports[`Integration render() with one integration renders 1`] = `
                 "key": "github",
                 "metadata": Object {
                   "aspects": Object {
-                    "alert_link": Object {
-                      "link": "/url/with/params/{orgId}/",
-                      "text": "This is a *alert link* with markdown formatting",
-                    },
+                    "alerts": Array [
+                      Object {
+                        "text": "This is a an alert example",
+                        "type": "warning",
+                      },
+                    ],
                   },
                   "author": "Morty",
                   "description": "*markdown* formatted _description_",
@@ -105,10 +107,12 @@ exports[`Integration render() with one integration renders 1`] = `
               "key": "github",
               "metadata": Object {
                 "aspects": Object {
-                  "alert_link": Object {
-                    "link": "/url/with/params/{orgId}/",
-                    "text": "This is a *alert link* with markdown formatting",
-                  },
+                  "alerts": Array [
+                    Object {
+                      "text": "This is a an alert example",
+                      "type": "warning",
+                    },
+                  ],
                 },
                 "author": "Morty",
                 "description": "*markdown* formatted _description_",
@@ -127,17 +131,6 @@ exports[`Integration render() with one integration renders 1`] = `
         />
       </PanelBody>
     </Panel>
-    <AlertLink
-      onClick={[Function]}
-    >
-      <span
-        dangerouslySetInnerHTML={
-          Object {
-            "__html": "This is a <em>alert link</em> with markdown formatting",
-          }
-        }
-      />
-    </AlertLink>
     <hr />
     <h5>
       GitHub Integration
