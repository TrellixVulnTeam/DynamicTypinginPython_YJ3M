commit 5f7d0fc1c411ca313c17c686ec90be892c3437e0
Author: Chris Fuller <cfuller@sentry.io>
Date:   Mon Apr 20 10:30:50 2020 -0400

    feat(workflow): Alert auto-resolution banner (#18340)
    
    * Adding rule updated status_method to async task
    
    * Adding banner to alert page
    
    Co-authored-by: Billy Vong <billyvg@users.noreply.github.com>
    Co-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>

diff --git a/src/sentry/incidents/tasks.py b/src/sentry/incidents/tasks.py
index b2a51d5c14..5c5f1b4602 100644
--- a/src/sentry/incidents/tasks.py
+++ b/src/sentry/incidents/tasks.py
@@ -11,6 +11,7 @@ from sentry.incidents.models import (
     IncidentActivity,
     IncidentActivityType,
     IncidentStatus,
+    IncidentStatusMethod,
     INCIDENT_STATUS,
 )
 from sentry.models import Project
@@ -173,6 +174,7 @@ def auto_resolve_snapshot_incidents(alert_rule_id, **kwargs):
                 incident,
                 IncidentStatus.CLOSED,
                 comment="This alert has been auto-resolved because the rule that triggered it has been modified or deleted.",
+                status_method=IncidentStatusMethod.RULE_UPDATED,
             )
 
     if has_more:
diff --git a/src/sentry/static/sentry/app/views/alerts/details/body.tsx b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
index c098b15758..c8be4e365e 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/body.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
@@ -13,6 +13,7 @@ import {defined} from 'app/utils';
 import {getDisplayForAlertRuleAggregation} from 'app/views/alerts/utils';
 import {getUtcDateString} from 'app/utils/dates';
 import {t} from 'app/locale';
+import Alert from 'app/components/alert';
 import Duration from 'app/components/duration';
 import EventView from 'app/utils/discover/eventView';
 import Feature from 'app/components/acl/feature';
@@ -20,12 +21,18 @@ import Link from 'app/components/links/link';
 import NavTabs from 'app/components/navTabs';
 import Placeholder from 'app/components/placeholder';
 import SeenByList from 'app/components/seenByList';
-import {IconEdit, IconTelescope} from 'app/icons';
+import {IconEdit, IconTelescope, IconWarning} from 'app/icons';
 import Projects from 'app/utils/projects';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
 
-import {Incident, IncidentStats, AlertRuleStatus} from '../types';
+import {
+  Incident,
+  IncidentStats,
+  AlertRuleStatus,
+  IncidentStatus,
+  IncidentStatusMethod,
+} from '../types';
 import Activity from './activity';
 import Chart from './chart';
 import SideHeader from './sideHeader';
@@ -149,6 +156,17 @@ export default class DetailsBody extends React.Component<Props> {
 
     return (
       <StyledPageContent>
+        {incident &&
+          incident.status === IncidentStatus.CLOSED &&
+          incident.statusMethod === IncidentStatusMethod.RULE_UPDATED && (
+            <AlertWrapper>
+              <Alert type="warning" icon={<IconWarning size="sm" />}>
+                {t(
+                  'This alert has been auto-resolved because the rule that triggered it has been modified or deleted'
+                )}
+              </Alert>
+            </AlertWrapper>
+          )}
         <ChartWrapper>
           {incident && stats ? (
             <Chart
@@ -293,6 +311,10 @@ const ChartWrapper = styled('div')`
   padding: ${space(2)};
 `;
 
+const AlertWrapper = styled('div')`
+  padding: ${space(2)} ${space(4)} 0;
+`;
+
 const StyledNavTabs = styled(NavTabs)`
   display: flex;
 `;
diff --git a/src/sentry/static/sentry/app/views/alerts/types.tsx b/src/sentry/static/sentry/app/views/alerts/types.tsx
index c7ff176f71..2eeb66df4e 100644
--- a/src/sentry/static/sentry/app/views/alerts/types.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/types.tsx
@@ -21,6 +21,7 @@ export type Incident = {
   projects: string[]; // Array of slugs
   seenBy: User[];
   status: IncidentStatus;
+  statusMethod: IncidentStatusMethod;
   title: string;
   hasSeen: boolean;
   alertRule: IncidentRule;
@@ -83,6 +84,12 @@ export enum IncidentStatus {
   CRITICAL = 20,
 }
 
+export enum IncidentStatusMethod {
+  MANUAL = 1,
+  RULE_UPDATED = 2,
+  RULE_TRIGGERED = 3,
+}
+
 export enum AlertRuleStatus {
   PENDING = 0,
   SNAPSHOT = 4,
