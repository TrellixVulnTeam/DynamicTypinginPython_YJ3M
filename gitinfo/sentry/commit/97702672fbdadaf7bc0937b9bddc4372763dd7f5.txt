commit 97702672fbdadaf7bc0937b9bddc4372763dd7f5
Author: Max Bittker <maxbittker@gmail.com>
Date:   Tue May 2 11:02:07 2017 -0700

    Feature/broadcast modal (#5318)
    
    * feature broadcast and user option to hide it

diff --git a/src/sentry/api/endpoints/user_details.py b/src/sentry/api/endpoints/user_details.py
index 7f04e26f45..17b4be4f12 100644
--- a/src/sentry/api/endpoints/user_details.py
+++ b/src/sentry/api/endpoints/user_details.py
@@ -7,7 +7,7 @@ from rest_framework.response import Response
 from sentry.api.bases.user import UserEndpoint
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.user import DetailedUserSerializer
-from sentry.models import User
+from sentry.models import User, UserOption
 
 
 class BaseUserSerializer(serializers.ModelSerializer):
@@ -73,10 +73,18 @@ class UserDetailsEndpoint(UserEndpoint):
             serializer_cls = AdminUserSerializer
         else:
             serializer_cls = UserSerializer
-
         serializer = serializer_cls(user, data=request.DATA, partial=True)
+
         if serializer.is_valid():
             user = serializer.save()
+
+            options = request.DATA.get('options', {})
+            if options.get('seenReleaseBroadcast'):
+                UserOption.objects.set_value(
+                    user=user,
+                    key='seen_release_broadcast',
+                    value=options.get('seenReleaseBroadcast'),
+                )
             return Response(serialize(user, request.user))
 
         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
diff --git a/src/sentry/api/serializers/models/user.py b/src/sentry/api/serializers/models/user.py
index 15b27a04c1..62abe9c373 100644
--- a/src/sentry/api/serializers/models/user.py
+++ b/src/sentry/api/serializers/models/user.py
@@ -95,6 +95,7 @@ class UserSerializer(Serializer):
                 'stacktraceOrder': stacktrace_order,
                 'timezone': options.get('timezone') or settings.SENTRY_DEFAULT_TIME_ZONE,
                 'clock24Hours': options.get('clock_24_hours') or False,
+                'seenReleaseBroadcast': options.get('seen_release_broadcast'),
             }
 
         if attrs.get('avatar'):
diff --git a/src/sentry/static/sentry/app/components/broadcastModal.jsx b/src/sentry/static/sentry/app/components/broadcastModal.jsx
new file mode 100644
index 0000000000..65de34cd1d
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/broadcastModal.jsx
@@ -0,0 +1,155 @@
+import React from 'react';
+import IconCloseLg from '../icons/icon-close-lg';
+import ConfigStore from '../stores/configStore';
+import ApiMixin from '../mixins/apiMixin';
+import {logAjaxError} from '../utils/logging';
+
+const ReleaseAnnouncement = ({close}) => {
+  const mediaUrl = ConfigStore.get('mediaUrl');
+  return (
+    <div>
+      <h3>
+        Releases are better with commits
+        {' '}
+        <span className="badge badge-square badge-new">NEW</span>
+      </h3>
+      <p>
+        <img src={mediaUrl + 'dist/release-commits-modal.gif'} />
+      </p>
+      <h5 style={{lineHeight: '1.2'}}>
+        By integrating commit data with Sentry, youâ€™ll unlock a number of helpful features:
+      </h5>
+      <ul>
+        <li>
+          Enhanced releases overview page that allows you to see new and resolved issues, files changed and authors all in the same place
+        </li>
+        <li>
+          Resolving Sentry issues via commit messages
+        </li>
+        <li>
+          Suggested assignees for issues
+        </li>
+        <li>
+          Detailed summary emails when a deploy goes out
+        </li>
+      </ul>
+      <p className="release-buttons">
+        <a className="btn btn-default btn-lg" href="#" onClick={close}>
+          Dismiss
+        </a>
+        <a
+          className="btn btn-primary btn-lg"
+          href="https://blog.sentry.io/2017/05/01/release-commits.html"
+          onClick={close}>
+          Read the full post
+        </a>
+      </p>
+    </div>
+  );
+};
+
+ReleaseAnnouncement.propTypes = {
+  close: React.PropTypes.func.isRequired
+};
+
+const BroadcastModal = React.createClass({
+  propTypes: {
+    closeBroadcast: React.PropTypes.func.isRequired
+  },
+  mixins: [ApiMixin],
+
+  getInitialState() {
+    return {
+      alerts: [ReleaseAnnouncement],
+      index: 0
+    };
+  },
+
+  componentWillMount() {
+    document.addEventListener('keydown', this.handleKeyDown);
+  },
+
+  componentWillUnmount() {
+    document.removeEventListener('keydown', this.handleKeyDown);
+  },
+
+  close() {
+    //tell server to close
+    let user = ConfigStore.get('user');
+    let markedData = {
+      options: {
+        seenReleaseBroadcast: true
+      }
+    };
+    this.api.request(`/users/${user.id}/`, {
+      method: 'PUT',
+      data: markedData,
+      success: (data, _, jqXHR) => {
+        ConfigStore.set('user', data);
+        this.props.closeBroadcast();
+      },
+      error: err => {
+        logAjaxError(err);
+        this.props.closeBroadcast();
+      }
+    });
+  },
+
+  handleKeyDown(evt) {
+    if (evt.key === 'Escape' || evt.keyCode === 27) {
+      this.close();
+    }
+  },
+
+  handleClick(evt) {
+    if ([].includes.call(evt.target.classList, 'modal')) {
+      this.close();
+    }
+  },
+
+  renderOneModal(message, i, a) {
+    let nth = 'abcd'[a.length - 1 - i] + '-nth';
+    return (
+      <div
+        className={'modal ' + nth}
+        style={{display: 'block'}}
+        key={i}
+        onClick={this.handleClick}>
+        <div className="modal-dialog">
+          <div className="modal-content" role="document">
+            <div className="modal-body">
+              <div className="pull-right">
+                <span
+                  className="close-icon"
+                  onClick={() => {
+                    if (this.state.index + 1 >= this.state.alerts.length) {
+                      this.close();
+                    }
+                    this.setState({index: this.state.index + 1});
+                  }}>
+                  <IconCloseLg />
+                </span>
+              </div>
+              {message({close: this.close})}
+            </div>
+          </div>
+        </div>
+      </div>
+    );
+  },
+
+  render() {
+    let {alerts, index} = this.state;
+    let modals = alerts.slice(index, index + 4).reverse().map(this.renderOneModal);
+    return (
+      <div className="modal-broadcast">
+        <div className="modal-backdrop in" />
+        <div className="modals">
+          {modals}
+        </div>
+      </div>
+    );
+  }
+});
+
+export default BroadcastModal;
diff --git a/src/sentry/static/sentry/app/icons/icon-close-lg.js b/src/sentry/static/sentry/app/icons/icon-close-lg.js
new file mode 100644
index 0000000000..d541116451
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-close-lg.js
@@ -0,0 +1,15 @@
+import React from 'react';
+import Icon from 'react-icon-base';
+
+function IconCloseLg(props) {
+  return(
+    <Icon viewBox="0 0 20 20" {...props}>
+      <g stroke="currentColor" fill="none">
+        <path d="M0.5,0.5 L19.5,19.5" />
+        <path d="M0.5,19.5 L19.5,0.5" />
+      </g>
+    </Icon>
+  );
+}
+
+export default IconCloseLg;
diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
index 0cf744f853..3f84803ab4 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -6,9 +6,15 @@ import Sidebar from '../components/sidebar';
 import HookStore from '../stores/hookStore';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
+import BroadcastModal from '../components/broadcastModal';
+import moment from 'moment';
 import PropTypes from '../proptypes';
 import TeamStore from '../stores/teamStore';
 import ProjectStore from '../stores/projectStore';
+import ConfigStore from '../stores/configStore';
+
+import OrganizationState from '../mixins/organizationState';
+
 import {t} from '../locale';
 
 let ERROR_TYPES = {
@@ -39,14 +45,15 @@ const OrganizationDetails = React.createClass({
     organization: PropTypes.Organization
   },
 
-  mixins: [ApiMixin],
+  mixins: [ApiMixin, OrganizationState],
 
   getInitialState() {
     return {
       loading: true,
       error: false,
       errorType: null,
-      organization: null
+      organization: null,
+      showBroadCast: false
     };
   },
 
@@ -87,13 +94,13 @@ const OrganizationDetails = React.createClass({
         });
 
         data.requiredAdminActions = getRequiredAdminActions(data);
-
         this.setState({
           organization: data,
           loading: false,
           error: false,
           errorType: null,
-          hooks: hooks
+          hooks: hooks,
+          showBroadCast: this.shouldShowBroadCast(data)
         });
 
         TeamStore.loadInitialData(data.teams);
@@ -103,6 +110,7 @@ const OrganizationDetails = React.createClass({
           }, [])
         );
       },
+
       error: (_, textStatus, errorThrown) => {
         let errorType = null;
         switch (errorThrown) {
@@ -129,6 +137,33 @@ const OrganizationDetails = React.createClass({
     return 'Sentry';
   },
 
+  shouldShowBroadCast(data) {
+    let user = ConfigStore.get('user');
+    let options = user ? user.options : {};
+    let seen = options.seenReleaseBroadcast;
+    let tasks = data.onboardingTasks;
+    // don't show broadcast they've seen it
+    if (seen) {
+      return false;
+    }
+
+    // also if they havn't sent their first event
+    let sentFirstEvent = tasks.find(
+      ({task, status}) => task == 2 && status == 'complete'
+    );
+
+    if (!sentFirstEvent) {
+      return false;
+    }
+
+    // show it if they sent their first event more than 2 days ago
+    return moment().diff(sentFirstEvent.dateCompleted, 'days') > 2;
+  },
+
+  closeBroadcast() {
+    this.setState({showBroadCast: false});
+  },
+
   render() {
     if (this.state.loading) {
       return (
@@ -156,6 +191,8 @@ const OrganizationDetails = React.createClass({
         <div className="app">
           {this.state.hooks}
           <Sidebar />
+          {this.state.showBroadCast &&
+            <BroadcastModal closeBroadcast={this.closeBroadcast} />}
           {this.props.children}
           <Footer />
         </div>
diff --git a/src/sentry/static/sentry/images/onboarding/release-commits-modal.gif b/src/sentry/static/sentry/images/onboarding/release-commits-modal.gif
new file mode 100644
index 0000000000..e16743dd9c
Binary files /dev/null and b/src/sentry/static/sentry/images/onboarding/release-commits-modal.gif differ
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 13c9264598..019009d88e 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -2746,6 +2746,16 @@ ul.faces {
   margin-left: 4px;
   .transition(.1s background linear);
 
+  &.badge-square {
+    height: auto;
+    line-height: 1;
+    border-radius: 3px;
+    padding: 7px;
+    font-size: 12px;
+    vertical-align: bottom;
+    top: 0;
+  }
+
   &.new {
     background: @red;
   }
@@ -2757,6 +2767,10 @@ ul.faces {
     border: 1px solid @gray-lighter;
     background: inherit;
   }
+
+  &.badge-new {
+    background: @green;
+  }
 }
 
 /**
@@ -2964,9 +2978,9 @@ ul.radio-inputs {
     }
   }
   .modal-content {
-    padding: 20px;
-    border-radius: 2px;
-    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2), 0 1px 3px rgba(0, 0, 0, 0.1);
+    padding: 30px;
+    box-shadow: 0 15px 40px 0 rgba(67,62,75,0.30), 0 1px 15px 0 rgba(67,61,74,0.15);
+    border-radius: 7px;
     border: 0;
     overflow: hidden;
   }
@@ -2974,8 +2988,8 @@ ul.radio-inputs {
   .modal-header {
     background: rgba(249, 250, 251, 0.8);
     border-bottom: 1px solid @trim;
-    border-radius: 5px 5px 0 0;
-    padding: 20px;
+    border-radius: 7px 7px 0 0;
+    padding: 20px 30px;
     margin: -20px -20px 20px;
 
     h1, h2, h3, h4, h5, h6 {
@@ -3000,12 +3014,19 @@ ul.radio-inputs {
     .alert {
       border-radius: @border-radius-base;
     }
+
+    img {
+      max-width: 100%;
+      border-radius: 3px;
+      border: 1px solid @trim;
+      box-shadow: 0 1px 1px rgba(0,0,0, .08);
+    }
   }
 
   .modal-footer {
-    padding: 15px 20px;
+    padding: 20px 30px;
     border-top: 1px solid @trim;
-    margin: 5px -20px -20px;
+    margin: 20px -30px -30px;
   }
 
   .nav-stacked {
@@ -3029,230 +3050,60 @@ ul.radio-inputs {
   width: 400px;
 }
 
-.welcome-modal {
-  background: rgba(52, 60, 69, 0.5);
+// Broadcast Modal
 
-  @slideWidth: 720px;
-  @slideCount: 4;
+.modal-broadcast {
 
-  .dot-nav {
-    .clearfix();
-    margin: 8px 0 0;
-    padding: 0;
-
-    li {
-      .list-unstyled();
-      display: inline-block;
-
-      a {
-        text-indent: -9999em;
-        display: block;
-        .square(9px);
-        border: 1px solid lighten(@gray, 35);
-        border-radius: 12px;
-        margin: 0 2px;
-        overflow: hidden;
-      }
-
-      &.active {
-        a {
-          border-color: @gray;
-          background: @gray;
-        }
-      }
-    }
-  }
-
-  .modal-body {
-    margin: 0 -20px;
-  }
-
-  .modal-footer {
+  .modal-dialog{
     position: absolute;
-    left: 0;
-    right: 0;
-    bottom: 0;
-    box-shadow: 0 -1px 0 rgba(52, 60, 69, 0.1);
-    padding: 21px 100px;
-    background: #fff;
-    margin-bottom: 0;
-  }
-
-  .prev, .next {
-    border-radius: 24px;
-    .square(34px);
-    padding: 0;
-    line-height: 37px;
-    text-align: center;
-
-    span {
-      font-size: 18px !important;
-      position: relative;
-    }
-  }
-
-  .prev span {
-    left: -1px;
-  }
-
-  .next span {
-    left: 1px;
-  }
-
-  .welcome-slides {
-    width: @slideWidth * @slideCount;
-    .transition(margin-left .4s ease-in-out);
-  }
-
-  .slide {
-    width: @slideWidth;
-    float: left;
-
-    h1, h2, h3 {
-      color: @gray-dark;
-      line-height: 1.2;
-    }
-
-    h1 {
-      font-size: 34px;
-    }
-
-    p {
-      font-size: 18px;
-      line-height: 1.4;
-    }
-
-    .screenshot {
-      background-size: contain;
-      box-shadow: inset 0 0 0 1px rgba(52, 60, 69, 0.2), 0 1px 2px rgba(52, 60, 69, 0.1);
-      border-radius: 2px;
-    }
-  }
-
-  .slide-1 {
-    padding: 35px 0;
-    text-align: center;
-
-    .screenshot {
-      width: 600px;
-      height: 348px;
-      margin: 30px auto 0;
-      background-image: url(https://s3.amazonaws.com/f.cl.ly/items/261Y0m3B2W3V0F2I2b1w/Screen%20Shot%202015-04-20%20at%205.04.01%20PM.png);
-    }
-
-    &.active {
-
-    }
-  }
-
-  .slide-2 {
-    padding: 45px;
-
-    h3 {
-      margin-top: 45px;
-    }
-
-    .screenshot, .loupe {
-      background-image: url(http://cl.ly/image/0G0S2R07000L/Screen%20Shot%202015-04-20%20at%206.02.20%20PM.png);
-    }
-
-    .screenshot {
-      margin-top: -15px;
-      position: relative;
-      right: -25px;
-      background-size: cover;
-      width: 400px;
-      height: 375px;
-    }
-
-    .loupe {
-      position: absolute;
-      top: -10px;
-      left: -28px;
-      width: 170px;
-      height: 170px;
-      background-position: -112px -143px;
-      border-radius: 190px;
-      box-shadow: inset 0 0 0 1px rgba(52, 60, 69, 0.3), 0 1px 2px rgba(52, 60, 69, 0.2), inset 0 0 60px rgba(255, 255,255, 1), inset 0 0 20px rgba(255, 255,255, 1), inset 0 0 40px rgba(255, 255,255, 1), inset 0 0 40px rgba(255, 255,255, 1);
-      background-size: 540% 540%;
-    }
-  }
-
-  .slide-3 {
-    padding: 45px;
-    position: relative;
-    height: 423px;
-
-    h3 {
-      margin-top: 55px;
-    }
-
-    .chat-column, .row {
-      position: static;
+    right: 10px;
+    bottom: 10px;
+    .release-buttons{
+        display: flex;
+        justify-content: flex-end;
+        .btn{
+          margin-left: 10px;
+        }
     }
+      .close-icon {
+        color: @50;
+        cursor: pointer;
 
-    .chat {
-      .list-unstyled();
-      position: relative;
-      top: -90px;
-
-      .chat-message {
-        position: relative;
-        padding-left: 54px;
-        margin-bottom: 24px;
+        &:hover {
+          color: @80;
+        }
+      }
+      .modal {
+        z-index: 2000;
+        .transition(transform .2s ease);
 
-        h5 {
-          line-height: 1.2;
-          font-weight: 600;
-          font-size: 15px;
-          margin: 0 0 4px;
 
-          time {
-            font-weight: 400;
-            text-transform: uppercase;
-          }
+        &.a-nth{
+          transform: scale(1.0, 1.0) translate(0, 0px);
+          z-index: 2000;
+          opacity: 1.0;
         }
-      }
 
-      blockquote {
-        font-size: 13px;
-        margin-top: 10px;
-        padding: 0 0 0 15px;
-        border-left: 4px solid @orange;
-      }
+        &.b-nth{
+          transform: scale(.95, .95) translate(0, -50px);
+          z-index: 1999;
+          // opacity: .8;
+        }
 
-      .chat-avatar {
-        position: absolute;
-        left: 0;
-        top: 0;
-        background: #f1f2f3 url(https://avatars3.githubusercontent.com/u/1396951?v=3);
-        background-size: cover;
-        .square(40px);
-        border-radius: 3px;
-
-        img {
-          max-width: 100%;
-          border-radius: 3px;
+        &.c-nth{
+          transform: scale(.90, .90) translate(0, -100px);
+          z-index: 1998;
+          // opacity: .6;
         }
-      }
-    }
-    .mask {
-      position: absolute;
-      top: -20px;
-      left: 0;
-      right: 100px;
-      height: 100px;
-      #gradient > .vertical(rgba(255,255,255, 1), rgba(255,255,255, 0));
-    }
-  }
 
-  .slide-4 {
-    padding: 45px;
+        &.d-nth{
+          transform: scale(.85, .85) translate(0, -150px);
+          z-index: 1997;
+          // opacity: .4;
+        }
 
-    h3 {
-      padding-top: 35px;
+      }
     }
-  }
 }
 
 
diff --git a/tests/sentry/api/endpoints/test_user_details.py b/tests/sentry/api/endpoints/test_user_details.py
index 5ed19f9098..de17fe7003 100644
--- a/tests/sentry/api/endpoints/test_user_details.py
+++ b/tests/sentry/api/endpoints/test_user_details.py
@@ -4,7 +4,7 @@ import six
 
 from django.core.urlresolvers import reverse
 
-from sentry.models import Authenticator, AuthIdentity, AuthProvider, User
+from sentry.models import Authenticator, AuthIdentity, AuthProvider, User, UserOption
 from sentry.testutils import APITestCase
 
 
@@ -93,6 +93,9 @@ class UserUpdateTest(APITestCase):
         resp = self.client.put(url, data={
             'name': 'hello world',
             'username': 'b@example.com',
+            'options': {
+                'seenReleaseBroadcast': True
+            }
         })
         assert resp.status_code == 200, resp.content
         assert resp.data['id'] == six.text_type(user.id)
@@ -101,6 +104,10 @@ class UserUpdateTest(APITestCase):
         assert user.name == 'hello world'
         assert user.email == 'b@example.com'
         assert user.username == user.email
+        assert UserOption.objects.get_value(
+            user=user,
+            key='seen_release_broadcast',
+        ) is True
 
     def test_superuser(self):
         user = self.create_user(email='a@example.com')
