commit 18d1ea8713e2f551aab1c61d7b385883a21e5899
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Wed Sep 12 11:24:43 2018 -0700

    Allow members to delete their searches (#9691)

diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index 151aa05b38..3a2afc8024 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -92,7 +92,8 @@ class RelaxedSearchPermission(ProjectPermission):
         # members can do writes
         'POST': ['project:write', 'project:admin', 'project:read'],
         'PUT': ['project:write', 'project:admin', 'project:read'],
-        'DELETE': ['project:admin'],
+        # members can delete their own searches
+        'DELETE': ['project:read', 'project:write', 'project:admin'],
     }
 
 
diff --git a/src/sentry/api/endpoints/project_search_details.py b/src/sentry/api/endpoints/project_search_details.py
index 93a3335bc3..4e85d87dd8 100644
--- a/src/sentry/api/endpoints/project_search_details.py
+++ b/src/sentry/api/endpoints/project_search_details.py
@@ -119,6 +119,14 @@ class ProjectSearchDetailsEndpoint(ProjectEndpoint):
         except SavedSearch.DoesNotExist:
             raise ResourceDoesNotExist
 
-        search.delete()
+        is_search_owner = request.user and request.user == search.owner
 
-        return Response(status=204)
+        if request.access.has_scope('project:write'):
+            if not search.owner or is_search_owner:
+                search.delete()
+                return Response(status=204)
+        elif is_search_owner:
+            search.delete()
+            return Response(status=204)
+
+        return Response(status=403)
diff --git a/src/sentry/static/sentry/app/views/projectSavedSearches.jsx b/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
index 5df623a7a7..f4d94e4dad 100644
--- a/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
+++ b/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
@@ -52,6 +52,7 @@ class SavedSearchRow extends React.Component {
 
   render() {
     let {data, canModify} = this.props;
+    let deleteDisabled = !canModify && !data.isPrivate;
 
     return (
       <PanelItem p={0} py={2} align="center">
@@ -76,20 +77,20 @@ class SavedSearchRow extends React.Component {
                 name="default"
                 checked={data.isDefault}
                 onChange={this.handleDefault}
+                disabled={data.isPrivate}
               />
             </InputColumn>
           )}
 
-          {canModify && (
-            <InputColumn>
-              <Confirm
-                message={t('Are you sure you want to remove this?')}
-                onConfirm={this.handleRemove}
-              >
-                <Button size="small" icon="icon-trash" />
-              </Confirm>
-            </InputColumn>
-          )}
+          <InputColumn>
+            <Confirm
+              message={t('Are you sure you want to remove this?')}
+              onConfirm={this.handleRemove}
+              disabled={deleteDisabled}
+            >
+              <Button size="small" icon="icon-trash" />
+            </Confirm>
+          </InputColumn>
         </Flex>
       </PanelItem>
     );
@@ -226,7 +227,7 @@ class ProjectSavedSearches extends AsyncView {
               <Flex flex="1">
                 <InputColumn>{t('My Default')}</InputColumn>
                 {canModify && <InputColumn>{t('Team Default')}</InputColumn>}
-                {canModify && <InputColumn>{t('Remove')}</InputColumn>}
+                {<InputColumn>{t('Remove')}</InputColumn>}
               </Flex>
             </Flex>
           </PanelHeader>
diff --git a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
index a5346be4bd..2c98972b17 100644
--- a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
@@ -322,6 +322,7 @@ exports[`ProjectSavedSearches renders 1`] = `
                                       >
                                         <input
                                           checked={true}
+                                          disabled={false}
                                           name="default"
                                           onChange={[Function]}
                                           type="radio"
@@ -348,6 +349,7 @@ exports[`ProjectSavedSearches renders 1`] = `
                                           cancelText="Cancel"
                                           confirmText="Confirm"
                                           disableConfirmButton={false}
+                                          disabled={false}
                                           message="Are you sure you want to remove this?"
                                           onConfirm={[Function]}
                                           priority="primary"
@@ -658,6 +660,7 @@ exports[`ProjectSavedSearches renders 1`] = `
                                       >
                                         <input
                                           checked={false}
+                                          disabled={false}
                                           name="default"
                                           onChange={[Function]}
                                           type="radio"
@@ -684,6 +687,7 @@ exports[`ProjectSavedSearches renders 1`] = `
                                           cancelText="Cancel"
                                           confirmText="Confirm"
                                           disableConfirmButton={false}
+                                          disabled={false}
                                           message="Are you sure you want to remove this?"
                                           onConfirm={[Function]}
                                           priority="primary"
diff --git a/tests/sentry/api/endpoints/test_project_search_details.py b/tests/sentry/api/endpoints/test_project_search_details.py
index 2e3c3be523..63b35a2b35 100644
--- a/tests/sentry/api/endpoints/test_project_search_details.py
+++ b/tests/sentry/api/endpoints/test_project_search_details.py
@@ -197,26 +197,106 @@ class UpdateProjectSearchDetailsTest(APITestCase):
 
 
 class DeleteProjectSearchTest(APITestCase):
-    def test_simple(self):
+    def setUp(self):
         self.login_as(user=self.user)
 
-        project = self.create_project(name='foo')
+    def get_url(self, search):
+        return reverse(
+            'sentry-api-0-project-search-details',
+            kwargs={
+                'organization_slug': self.project.organization.slug,
+                'project_slug': self.project.slug,
+                'search_id': search.id,
+            }
+        )
+
+    def create_user_with_member_role(self):
+        user = self.create_user()
+        self.create_member(
+            user=user,
+            role="member",
+            organization=self.organization
+        )
+        return user
+
+    def test_owner_can_delete_shared_searches(self):
         search = SavedSearch.objects.create(
-            project=project,
+            project=self.project,
             name='foo',
             query='',
         )
 
-        url = reverse(
-            'sentry-api-0-project-search-details',
-            kwargs={
-                'organization_slug': project.organization.slug,
-                'project_slug': project.slug,
-                'search_id': search.id,
-            }
+        response = self.client.delete(self.get_url(search))
+
+        assert response.status_code == 204, response.content
+        assert not SavedSearch.objects.filter(id=search.id).exists()
+
+    def test_owner_can_delete_own_searches(self):
+        search = SavedSearch.objects.create(
+            project=self.project,
+            name='foo',
+            query='',
+            owner=self.user
         )
-        response = self.client.delete(url)
+
+        response = self.client.delete(self.get_url(search))
 
         assert response.status_code == 204, response.content
+        assert not SavedSearch.objects.filter(id=search.id).exists()
 
+    def test_owners_cannot_delete_searches_they_do_not_own(self):
+        search = SavedSearch.objects.create(
+            project=self.project,
+            name='foo',
+            query='',
+            owner=self.create_user()
+        )
+
+        response = self.client.delete(self.get_url(search))
+
+        assert response.status_code == 403, response.content
+        assert SavedSearch.objects.filter(id=search.id).exists()
+
+    def test_members_can_delete_own_searches(self):
+        user = self.create_user_with_member_role()
+        search = SavedSearch.objects.create(
+            project=self.project,
+            name='foo',
+            query='',
+            owner=user,
+        )
+
+        self.login_as(user=user)
+        response = self.client.delete(self.get_url(search))
+
+        assert response.status_code == 204, response.content
         assert not SavedSearch.objects.filter(id=search.id).exists()
+
+    def test_members_cannot_delete_searches_they_do_not_own(self):
+        user = self.create_user_with_member_role()
+        search = SavedSearch.objects.create(
+            project=self.project,
+            name='foo',
+            query='',
+            owner=self.create_user(),
+        )
+
+        self.login_as(user=user)
+        response = self.client.delete(self.get_url(search))
+
+        assert response.status_code == 403, response.content
+        assert SavedSearch.objects.filter(id=search.id).exists()
+
+    def test_members_cannot_delete_shared_searches(self):
+        user = self.create_user_with_member_role()
+        search = SavedSearch.objects.create(
+            project=self.project,
+            name='foo',
+            query=''
+        )
+
+        self.login_as(user=user)
+        response = self.client.delete(self.get_url(search))
+
+        assert response.status_code == 403, response.content
+        assert SavedSearch.objects.filter(id=search.id).exists()
