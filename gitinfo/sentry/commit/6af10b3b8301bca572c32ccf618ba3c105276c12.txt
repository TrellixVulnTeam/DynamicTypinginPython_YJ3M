commit 6af10b3b8301bca572c32ccf618ba3c105276c12
Author: Mark Story <mark@sentry.io>
Date:   Wed Apr 22 09:39:29 2020 -0400

    feat(discover) Add p50() and p100() functions (#18385)
    
    We plan on offering a graph that shows these soon, and having easier to
    operate aliases will be helpful for users.

diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index d0f00b848e..fa366306bb 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -1044,6 +1044,12 @@ FUNCTIONS = {
         "aggregate": [u"quantile({percentile:.2f})", u"{column}", None],
         "result_type": "duration",
     },
+    "p50": {
+        "name": "p50",
+        "args": [],
+        "aggregate": [u"quantile(0.5)", "transaction.duration", None],
+        "result_type": "duration",
+    },
     "p75": {
         "name": "p75",
         "args": [],
@@ -1062,6 +1068,12 @@ FUNCTIONS = {
         "aggregate": [u"quantile(0.99)", "transaction.duration", None],
         "result_type": "duration",
     },
+    "p100": {
+        "name": "p100",
+        "args": [],
+        "aggregate": [u"max", "transaction.duration", None],
+        "result_type": "duration",
+    },
     "rps": {
         "name": "rps",
         "args": [IntervalDefault("interval", 1, None)],
diff --git a/src/sentry/static/sentry/app/utils/discover/fields.tsx b/src/sentry/static/sentry/app/utils/discover/fields.tsx
index a4fc12c0bf..bf9b2b9117 100644
--- a/src/sentry/static/sentry/app/utils/discover/fields.tsx
+++ b/src/sentry/static/sentry/app/utils/discover/fields.tsx
@@ -122,6 +122,11 @@ export const AGGREGATIONS = {
   },
 
   // Tracing functions.
+  p50: {
+    parameters: [],
+    outputType: 'duration',
+    isSortable: true,
+  },
   p75: {
     parameters: [],
     outputType: 'duration',
@@ -138,6 +143,11 @@ export const AGGREGATIONS = {
     outputType: 'duration',
     isSortable: true,
   },
+  p100: {
+    parameters: [],
+    outputType: 'duration',
+    isSortable: true,
+  },
   percentile: {
     parameters: [
       {
@@ -297,9 +307,11 @@ export const TRACING_FIELDS = [
   'transaction.duration',
   'transaction.op',
   'transaction.status',
+  'p50',
   'p75',
   'p95',
   'p99',
+  'p100',
   'percentile',
   'error_rate',
   'apdex',
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index 19bac6071b..6bbd7dc81c 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -43,9 +43,11 @@ def test_get_json_meta_type():
     assert get_json_meta_type("other", "") == "string"
     assert get_json_meta_type("avg_duration", "number") == "duration"
     assert get_json_meta_type("duration", "number") == "duration"
+    assert get_json_meta_type("p50", "number") == "duration"
     assert get_json_meta_type("p75", "number") == "duration"
     assert get_json_meta_type("p95", "number") == "duration"
     assert get_json_meta_type("p99", "number") == "duration"
+    assert get_json_meta_type("p100", "number") == "duration"
     assert get_json_meta_type("apdex_transaction_duration_300", "number") == "number"
     assert get_json_meta_type("error_rate", "number") == "percentage"
     assert get_json_meta_type("impact_300", "number") == "number"
diff --git a/tests/snuba/api/endpoints/test_organization_events_v2.py b/tests/snuba/api/endpoints/test_organization_events_v2.py
index e7c9e871ce..555f3225ff 100644
--- a/tests/snuba/api/endpoints/test_organization_events_v2.py
+++ b/tests/snuba/api/endpoints/test_organization_events_v2.py
@@ -868,38 +868,6 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
         data["start_timestamp"] = iso_format(before_now(minutes=1, seconds=3))
         event = self.store_event(data, project_id=project.id)
 
-        with self.feature("organizations:discover-basic"):
-            response = self.client.get(
-                self.url,
-                format="json",
-                data={
-                    "field": ["transaction", "p95"],
-                    "query": "event.type:transaction p95:<4000",
-                    "orderby": ["transaction"],
-                },
-            )
-
-        assert response.status_code == 200, response.content
-        assert len(response.data["data"]) == 1
-        data = response.data["data"]
-        assert data[0]["transaction"] == event.transaction
-        assert data[0]["p95"] == 3000
-
-    def test_aggregation_alias_comparison_with_brackets(self):
-        self.login_as(user=self.user)
-        project = self.create_project()
-        data = load_data("transaction")
-        data["transaction"] = "/aggregates/1"
-        data["timestamp"] = iso_format(before_now(minutes=1))
-        data["start_timestamp"] = iso_format(before_now(minutes=1, seconds=5))
-        self.store_event(data, project_id=project.id)
-
-        data = load_data("transaction")
-        data["transaction"] = "/aggregates/2"
-        data["timestamp"] = iso_format(before_now(minutes=1))
-        data["start_timestamp"] = iso_format(before_now(minutes=1, seconds=3))
-        event = self.store_event(data, project_id=project.id)
-
         with self.feature("organizations:discover-basic"):
             response = self.client.get(
                 self.url,
@@ -1685,11 +1653,14 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
                 data={
                     "field": [
                         "event.type",
-                        "p75",
+                        "p50()",
+                        "p75()",
                         "p95()",
+                        "p99()",
+                        "p100()",
                         "percentile(transaction.duration, 0.99)",
                         "apdex(300)",
-                        "impact()",
+                        "impact(300)",
                         "error_rate()",
                     ],
                     "query": "event.type:transaction",
@@ -1698,20 +1669,26 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
 
             assert response.status_code == 200, response.content
             meta = response.data["meta"]
+            assert meta["p50"] == "duration"
             assert meta["p75"] == "duration"
             assert meta["p95"] == "duration"
+            assert meta["p99"] == "duration"
+            assert meta["p100"] == "duration"
             assert meta["percentile_transaction_duration_0_99"] == "duration"
             assert meta["apdex_300"] == "number"
             assert meta["error_rate"] == "percentage"
-            assert meta["impact"] == "number"
+            assert meta["impact_300"] == "number"
 
             data = response.data["data"]
             assert len(data) == 1
+            assert data[0]["p50"] == 5000
             assert data[0]["p75"] == 5000
             assert data[0]["p95"] == 5000
+            assert data[0]["p99"] == 5000
+            assert data[0]["p100"] == 5000
             assert data[0]["percentile_transaction_duration_0_99"] == 5000
             assert data[0]["apdex_300"] == 0.0
-            assert data[0]["impact"] == 1.0
+            assert data[0]["impact_300"] == 1.0
             assert data[0]["error_rate"] == 0.5
 
         with self.feature(
@@ -1791,19 +1768,23 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
                 data={
                     "field": [
                         "event.type",
-                        "p75",
+                        "p50()",
+                        "p75()",
                         "p95()",
                         "percentile(transaction.duration, 0.99)",
+                        "p100()",
                     ],
-                    "query": "event.type:transaction p75:>1000 p95():>1000 percentile(transaction.duration, 0.99):>1000",
+                    "query": "event.type:transaction p50():>100 p75():>1000 p95():>1000 p100():>1000 percentile(transaction.duration, 0.99):>1000",
                 },
             )
 
             assert response.status_code == 200, response.content
             data = response.data["data"]
             assert len(data) == 1
+            assert data[0]["p50"] == 5000
             assert data[0]["p75"] == 5000
             assert data[0]["p95"] == 5000
+            assert data[0]["p100"] == 5000
             assert data[0]["percentile_transaction_duration_0_99"] == 5000
 
         with self.feature(
@@ -1813,7 +1794,7 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
                 self.url,
                 format="json",
                 data={
-                    "field": ["event.type", "apdex", "impact()", "error_rate()"],
+                    "field": ["event.type", "apdex()", "impact()", "error_rate()"],
                     "query": "event.type:transaction apdex:>-1.0 impact():>0.5 error_rate():>0.25",
                 },
             )
@@ -1947,8 +1928,8 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
                 self.url,
                 format="json",
                 data={
-                    "field": ["event.type", "apdex()"],
-                    "sort": "-apdex",
+                    "field": ["event.type", "apdex(300)"],
+                    "sort": "-apdex(300)",
                     "query": "event.type:transaction",
                 },
             )
@@ -1956,7 +1937,7 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
             assert response.status_code == 200, response.content
             data = response.data["data"]
             assert len(data) == 1
-            assert data[0]["apdex"] == 0.0
+            assert data[0]["apdex_300"] == 0.0
 
         with self.feature(
             {"organizations:discover-basic": True, "organizations:global-views": True}
