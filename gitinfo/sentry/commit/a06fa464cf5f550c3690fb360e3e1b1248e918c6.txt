commit a06fa464cf5f550c3690fb360e3e1b1248e918c6
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Sep 15 20:08:24 2010 -0700

    Support defaults for filters and enable realtime on page 1 of any filters

diff --git a/sentry/filters/__init__.py b/sentry/filters/__init__.py
index e0d0156baa..67a85b6b3a 100644
--- a/sentry/filters/__init__.py
+++ b/sentry/filters/__init__.py
@@ -47,6 +47,8 @@ class SentryFilter(object):
     label = ''
     column = ''
     widget = ChoiceWidget
+    # This must be a string
+    default = ''
     
     def __init__(self, request):
         self.request = request
@@ -55,7 +57,7 @@ class SentryFilter(object):
         return bool(self.get_value())
     
     def get_value(self):
-        return self.request.GET.get(self.get_query_param()) or ''
+        return self.request.GET.get(self.get_query_param(), self.default) or ''
     
     def get_query_param(self):
         return getattr(self, 'query_param', self.column)
@@ -94,6 +96,7 @@ class SentryFilter(object):
 class StatusFilter(SentryFilter):
     label = 'Status'
     column = 'status'
+    default = '0'
 
     def get_choices(self):
         return SortedDict([
diff --git a/sentry/media/scripts/global.js b/sentry/media/scripts/global.js
index c037112e37..0ece03d4a4 100644
--- a/sentry/media/scripts/global.js
+++ b/sentry/media/scripts/global.js
@@ -50,6 +50,18 @@ function switchPastebinFriendly(link) {
   return false;
 }
 
+function getQueryParams()
+{
+    var vars = {}, hash;
+    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
+    for(var i = 0; i < hashes.length; i++)
+    {
+        hash = hashes[i].split('=');
+        vars[hash[0]] = hash[1];
+    }
+    return vars;
+}
+
 $.fn.setAllToMaxHeight = function(){
 	return this.height( Math.max.apply(this, $.map( this , function(e){ return $(e).height() }) ) );
 }
@@ -78,16 +90,13 @@ function sentryResolve(gid, remove){
     });
 }
 function sentryRefresh(){
+    data = getQueryParams();
+    data.op = 'poll';
     $.ajax({
       url: SENTRY_JS_API_URL,
       type: 'get',
       dataType: 'json',
-      data: {
-          op: 'poll',
-          logger: '{{ logger }}',
-          server_name: '{{ server_name }}',
-          level: '{{ level }}'
-      },
+      data: data,
       success: function(groups){
           // $('#message_list').each(function(){
           //               $(this).removeClass('fresh');
@@ -120,7 +129,7 @@ function sentryRefresh(){
                   $(this).remove();
               }
           });
-          setTimeout(sentryRefresh, 3000);          
+          setTimeout(sentryRefresh, 3000);
       }
     });
 }
diff --git a/sentry/media/styles/global.css b/sentry/media/styles/global.css
index b02178a97f..76071b6654 100644
--- a/sentry/media/styles/global.css
+++ b/sentry/media/styles/global.css
@@ -373,12 +373,11 @@ pre {
 }
 .no-messages { font-size: 1.1em; padding: 20px 0; }
 
-.paging {
+.paging-wrap {
     display: inline; float: left;
     width: 100%;
 }
-
-.paging-meta {
+.paging-meta, .sort-by, .realtime {
     display: inline; float: right;
     margin: 10px 10px 0 0;
     font-size: 14px;
@@ -386,7 +385,9 @@ pre {
     color: #aaa;
     font-weight: bold;
 }
-
+.paging-meta {
+    padding: 4px 8px;
+}
 .paging-endless {
     display: inline; float: left;
     margin: 10px 0 0 10px;
@@ -399,8 +400,8 @@ pre {
 
 .paging-endless li span {
     display: inline-block;
-    color: #aaa;
 	padding: 6px 8px 6px 8px;
+    color: #aaa;
     font-size: 11px;
     line-height: 12px;
     border:1px solid #ddd;
@@ -414,13 +415,14 @@ pre {
     background:-moz-linear-gradient(center top , #FFFFFF 0pt, #DCDCDC 100%) repeat scroll 0 0 transparent;    
 }
 
-.paging-endless li a {
+.paging-endless li a,
+.sort-by, .realtime {
     display: inline-block;
     text-decoration: none;
 	color: #888;
 	padding: 6px 8px 6px 8px;
     font-size: 11px;
-    line-height: 12px;
+    line-height: 11px;
     border:1px solid #C5C5C5;
 	text-decoration: none;
 	-webkit-border-radius: 6px;
diff --git a/sentry/templates/sentry/index.html b/sentry/templates/sentry/index.html
index 057cc834b5..73965b5104 100644
--- a/sentry/templates/sentry/index.html
+++ b/sentry/templates/sentry/index.html
@@ -44,7 +44,9 @@
 					{% paginate message_list from request as message_list per_page 15 %}
 					{% if message_list.objects %}
 						<div class="clearfix">
-							{{ message_list.paging }}
+							<div class="paging-wrap">
+								{{ message_list.paging }}
+							</div>
 						</div>                   
 						<ul class="messages" id="message_list">
 							{% for group, priority in message_list.objects|with_priority %}
@@ -66,7 +68,7 @@
 		</div> 
 		{% endblock %}
 	</body>
-	{% if realtime %}
+	{% if has_realtime %}
 	<script type="text/javascript">
 	$(document).ready(function(){
 		//$("div.column").setAllToMaxHeight();
diff --git a/sentry/views.py b/sentry/views.py
index 3885ea3385..4831610350 100644
--- a/sentry/views.py
+++ b/sentry/views.py
@@ -116,10 +116,7 @@ def index(request):
     
     today = datetime.datetime.now()
 
-    if not any_filter and page == 1:
-        realtime = True
-    else:
-        realtime = False
+    has_realtime = page == 1
     
     return render_to_response('sentry/index.html', locals())
 
@@ -128,12 +125,21 @@ def ajax_handler(request):
     op = request.REQUEST.get('op')
 
     if op == 'poll':
+        filters = []
+        for filter_ in get_filters():
+            filters.append(filter_(request))
+
         message_list = GroupedMessage.objects.extra(
             select={
                 'score': GroupedMessage.get_score_clause(),
             }
         ).order_by('-score', '-last_seen')
         
+        for filter_ in filters:
+            if not filter_.is_set():
+                continue
+            message_list = filter_.get_query_set(message_list)
+        
         data = [
             (m.pk, {
                 'html': render_to_string('sentry/partial/_group.html', {'group': m, 'priority': p}),
