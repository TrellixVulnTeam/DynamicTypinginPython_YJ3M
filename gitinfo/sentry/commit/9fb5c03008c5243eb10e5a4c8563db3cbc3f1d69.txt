commit 9fb5c03008c5243eb10e5a4c8563db3cbc3f1d69
Author: Jan Michael Auer <jan.auer@sentry.io>
Date:   Wed Nov 20 16:58:04 2019 +0100

    ref(issue_details): Improvements to the issue details UI (#15692)
    
    Adds improved help texts for symbolication status and a placeholder for empty search results. The placeholder is modeled after the breadcrumbs placeholder.

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
index ef4565deb8..1b274ccc8e 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
@@ -84,17 +84,16 @@ function getImageStatusText(status) {
 function getImageStatusDetails(status) {
   switch (status) {
     case 'found':
-      return t('The file was found and successfully processed.');
+      return t('Debug information for this image was found and successfully processed.');
     case 'unused':
-      return t('The file was not required for processing the stack trace.');
+      return t('The image was not required for processing the stack trace.');
     case 'missing':
-      return t('The file could not be found in any of the specified sources.');
+      return t('No debug information could not be in any of the specified sources.');
     case 'malformed':
-      return t('The file failed to process.');
-    case 'fetching_failed':
-      return t('The file could not be downloaded.');
+      return t('The debug information file for this image failed to process.');
     case 'timeout':
-      return t('Downloading or processing the file took too long.');
+    case 'fetching_failed':
+      return t('The debug information file for this image could not be downloaded.');
     case 'other':
       return t('An internal error occurred while handling this image.');
     default:
@@ -442,16 +441,16 @@ class DebugMetaInterface extends React.PureComponent {
     );
 
     return (
-      <React.Fragment>
-        <EventDataSection
-          event={this.props.event}
-          type="packages"
-          title={titleElement}
-          wrapTitle={false}
-        >
-          <DebugImagesPanel>
-            <PanelBody>
-              {filteredImages.map(image => (
+      <EventDataSection
+        event={this.props.event}
+        type="packages"
+        title={titleElement}
+        wrapTitle={false}
+      >
+        <DebugImagesPanel>
+          <PanelBody>
+            {filteredImages.length > 0 ? (
+              filteredImages.map(image => (
                 <DebugImage
                   key={image.debug_id}
                   image={image}
@@ -459,11 +458,16 @@ class DebugMetaInterface extends React.PureComponent {
                   projectId={this.props.projectId}
                   showDetails={this.state.showDetails}
                 />
-              ))}
-            </PanelBody>
-          </DebugImagesPanel>
-        </EventDataSection>
-      </React.Fragment>
+              ))
+            ) : (
+              <EmptyItem>
+                <ImageIcon type="muted" src="icon-circle-exclamation" />{' '}
+                {t('Sorry, no images match your query.')}
+              </EmptyItem>
+            )}
+          </PanelBody>
+        </DebugImagesPanel>
+      </EventDataSection>
     );
   }
 }
@@ -553,4 +557,15 @@ const SymbolicationStatus = styled('span')`
   }
 `;
 
+const EmptyItem = styled(PanelItem)`
+  display: block;
+  text-align: center;
+
+  ${ImageIcon} {
+    opacity: 0.4;
+    margin-right: 1ex;
+    vertical-align: text-bottom;
+  }
+`;
+
 export default DebugMetaInterface;
