commit 88854e5ea0fc08e31b4e98be77231e1553bc7f1e
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Oct 18 22:42:13 2012 -0700

    Move coffeescript files out of js dir

diff --git a/Makefile b/Makefile
index 93beddca2a..3f3edbb101 100644
--- a/Makefile
+++ b/Makefile
@@ -37,7 +37,7 @@ static: coffee
 
 
 coffee:
-	@coffee --join ${STATIC_DIR}/scripts/sentry/app.js -c ${STATIC_DIR}/scripts/sentry/*.coffee
+	@coffee --join ${STATIC_DIR}/scripts/site.js -c ${STATIC_DIR}/coffee/*.coffee
 	@echo "Coffe script assets successfully built! - `date`";
 #
 # Watch less files
@@ -51,7 +51,7 @@ watch:
 cwatch:
 	@echo "Watching coffee script files..."; \
 	make coffee
-	coffee --join ${STATIC_DIR}/scripts/sentry/site.js -cw ${STATIC_DIR}/scripts/sentry/*.coffee
+	coffee --join ${STATIC_DIR}/scripts/site.js -cw ${STATIC_DIR}/coffee/*.coffee
 
 
 test:
diff --git a/src/sentry/static/sentry/scripts/sentry/app.coffee b/src/sentry/static/sentry/coffee/app.coffee
similarity index 100%
rename from src/sentry/static/sentry/scripts/sentry/app.coffee
rename to src/sentry/static/sentry/coffee/app.coffee
diff --git a/src/sentry/static/sentry/scripts/sentry/collections.coffee b/src/sentry/static/sentry/coffee/collections.coffee
similarity index 100%
rename from src/sentry/static/sentry/scripts/sentry/collections.coffee
rename to src/sentry/static/sentry/coffee/collections.coffee
diff --git a/src/sentry/static/sentry/scripts/sentry/models.coffee b/src/sentry/static/sentry/coffee/models.coffee
similarity index 100%
rename from src/sentry/static/sentry/scripts/sentry/models.coffee
rename to src/sentry/static/sentry/coffee/models.coffee
diff --git a/src/sentry/static/sentry/scripts/sentry/views.coffee b/src/sentry/static/sentry/coffee/views.coffee
similarity index 100%
rename from src/sentry/static/sentry/scripts/sentry/views.coffee
rename to src/sentry/static/sentry/coffee/views.coffee
diff --git a/src/sentry/static/sentry/scripts/sentry/app.js b/src/sentry/static/sentry/scripts/sentry/app.js
deleted file mode 100644
index 571aef37a7..0000000000
--- a/src/sentry/static/sentry/scripts/sentry/app.js
+++ /dev/null
@@ -1,249 +0,0 @@
-// Generated by CoffeeScript 1.3.3
-(function() {
-  var app,
-    __hasProp = {}.hasOwnProperty,
-    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
-
-  window.app = app = app || {};
-
-  app.config = app.config || {};
-
-  jQuery(function() {
-    var StreamView;
-    return app.StreamView = StreamView = (function(_super) {
-
-      __extends(StreamView, _super);
-
-      function StreamView() {
-        return StreamView.__super__.constructor.apply(this, arguments);
-      }
-
-      StreamView.prototype.el = $('body');
-
-      StreamView.prototype.initialize = function(data) {
-        var group_list;
-        return group_list = new app.GroupListView({
-          id: 'event_list',
-          members: data.groups
-        });
-      };
-
-      return StreamView;
-
-    })(Backbone.View);
-  });
-
-  window.app = app = app || {};
-
-  jQuery(function() {
-    var GroupList;
-    return app.GroupList = GroupList = (function(_super) {
-
-      __extends(GroupList, _super);
-
-      function GroupList() {
-        return GroupList.__super__.constructor.apply(this, arguments);
-      }
-
-      GroupList.prototype.model = app.Group;
-
-      return GroupList;
-
-    })(Backbone.Collection);
-  });
-
-  window.app = app = app || {};
-
-  jQuery(function() {
-    var Group, Project, User;
-    app.User = User = (function(_super) {
-
-      __extends(User, _super);
-
-      function User() {
-        return User.__super__.constructor.apply(this, arguments);
-      }
-
-      User.prototype.defaults = {
-        name: null,
-        avatar: null
-      };
-
-      User.prototype.isAnonymous = function() {
-        return !(this.id != null);
-      };
-
-      User.prototype.isUser = function(user) {
-        return this.id === user.id;
-      };
-
-      return User;
-
-    })(Backbone.Model);
-    app.Project = Project = (function(_super) {
-
-      __extends(Project, _super);
-
-      function Project() {
-        return Project.__super__.constructor.apply(this, arguments);
-      }
-
-      Project.prototype.defaults = {
-        name: null,
-        slug: null
-      };
-
-      return Project;
-
-    })(Backbone.Model);
-    return app.Group = Group = (function(_super) {
-
-      __extends(Group, _super);
-
-      function Group() {
-        return Group.__super__.constructor.apply(this, arguments);
-      }
-
-      Group.prototype.defaults = {
-        tags: [],
-        versions: [],
-        isBookmarked: false,
-        historicalData: []
-      };
-
-      return Group;
-
-    })(Backbone.Model);
-  });
-
-  window.app = app = app || {};
-
-  jQuery(function() {
-    var GroupListView, GroupView;
-    app.GroupListView = GroupListView = (function(_super) {
-
-      __extends(GroupListView, _super);
-
-      function GroupListView() {
-        return GroupListView.__super__.constructor.apply(this, arguments);
-      }
-
-      GroupListView.prototype.el = '.group-list';
-
-      GroupListView.prototype.model = app.Group;
-
-      GroupListView.prototype.initialize = function(data) {
-        var inst, obj, _i, _len, _ref, _results;
-        _.bindAll(this);
-        this.collection = new app.GroupList;
-        this.collection.on('add', this.appendMember);
-        this.collection.on('remove', this.clearMember);
-        _ref = data.members;
-        _results = [];
-        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
-          obj = _ref[_i];
-          inst = new this.model(obj);
-          _results.push(this.addMember(inst));
-        }
-        return _results;
-      };
-
-      GroupListView.prototype.changed = function() {
-        return this.trigger("membership");
-      };
-
-      GroupListView.prototype.addMember = function(obj) {
-        if (!this.hasMember(obj)) {
-          return this.collection.add(obj);
-        } else {
-          obj = this.collection.get(obj.id);
-          return obj.set('count', obj.get("count"));
-        }
-      };
-
-      GroupListView.prototype.hasMember = function(obj) {
-        if (this.collection.get(obj.id)) {
-          return true;
-        } else {
-          return false;
-        }
-      };
-
-      GroupListView.prototype.removeMember = function(obj) {
-        return this.collection.remove(obj);
-      };
-
-      GroupListView.prototype.appendMember = function(obj) {
-        var out, view;
-        view = new GroupView({
-          model: obj,
-          id: this.id + obj.id
-        });
-        out = view.render();
-        return $('#' + this.id).append(out.el);
-      };
-
-      GroupListView.prototype.clearMember = function(obj) {
-        return $('li[data-id="' + this.id + '"]', el).remove();
-      };
-
-      return GroupListView;
-
-    })(Backbone.View);
-    return app.GroupView = GroupView = (function(_super) {
-
-      __extends(GroupView, _super);
-
-      function GroupView() {
-        return GroupView.__super__.constructor.apply(this, arguments);
-      }
-
-      GroupView.prototype.tagName = 'li';
-
-      GroupView.prototype.className = 'group';
-
-      GroupView.prototype.template = _.template($('#group-template').html());
-
-      GroupView.prototype.initialize = function() {
-        _.bindAll(this);
-        return this.model.on("change:count", this.updateCount);
-      };
-
-      GroupView.prototype.render = function() {
-        var data;
-        data = this.model.toJSON();
-        data.historicalData = this.getHistoricalAsString(this.model);
-        this.$el.html(this.template(data));
-        this.$el.addClass(this.getLevelClassName(this.model));
-        if (data.isResolved) {
-          this.$el.addClass('resolved');
-        }
-        if (data.historicalData) {
-          this.$el.addClass('with-metadata');
-        }
-        this.$el.attr('data-id', data.id);
-        return this;
-      };
-
-      GroupView.prototype.getHistoricalAsString = function(obj) {
-        if (obj.historicalData) {
-          return obj.historicalData.join(', ');
-        } else {
-          return '';
-        }
-      };
-
-      GroupView.prototype.getLevelClassName = function(obj) {
-        return 'level-' + obj.attributes.levelName;
-      };
-
-      GroupView.prototype.updateCount = function(obj) {
-        return $('.count span', this.$el).text(this.model.get("count"));
-      };
-
-      return GroupView;
-
-    })(Backbone.View);
-  });
-
-}).call(this);
diff --git a/src/sentry/static/sentry/scripts/sentry/collections.js b/src/sentry/static/sentry/scripts/sentry/collections.js
deleted file mode 100644
index a4a1f797fd..0000000000
--- a/src/sentry/static/sentry/scripts/sentry/collections.js
+++ /dev/null
@@ -1,21 +0,0 @@
-// Generated by CoffeeScript 1.3.3
-(function() {
-  var GroupList,
-    __hasProp = {}.hasOwnProperty,
-    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
-
-  GroupList = (function(_super) {
-
-    __extends(GroupList, _super);
-
-    function GroupList() {
-      return GroupList.__super__.constructor.apply(this, arguments);
-    }
-
-    GroupList.prototype.model = Group;
-
-    return GroupList;
-
-  })(Backbone.Collection);
-
-}).call(this);
diff --git a/src/sentry/static/sentry/scripts/sentry/models.js b/src/sentry/static/sentry/scripts/sentry/models.js
deleted file mode 100644
index b57b782f24..0000000000
--- a/src/sentry/static/sentry/scripts/sentry/models.js
+++ /dev/null
@@ -1,80 +0,0 @@
-// Generated by CoffeeScript 1.3.3
-(function() {
-  var Group, Project, User,
-    __hasProp = {}.hasOwnProperty,
-    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
-
-  User = (function(_super) {
-
-    __extends(User, _super);
-
-    function User() {
-      return User.__super__.constructor.apply(this, arguments);
-    }
-
-    User.prototype.defaults = {
-      name: null,
-      avatar: null
-    };
-
-    User.prototype.isAnonymous = function() {
-      return !(this.id != null);
-    };
-
-    User.prototype.isUser = function(user) {
-      return this.id === user.id;
-    };
-
-    return User;
-
-  })(Backbone.Model);
-
-  Project = (function(_super) {
-
-    __extends(Project, _super);
-
-    function Project() {
-      return Project.__super__.constructor.apply(this, arguments);
-    }
-
-    Project.prototype.defaults = {
-      name: null,
-      slug: null
-    };
-
-    return Project;
-
-  })(Backbone.Model);
-
-  Group = (function(_super) {
-
-    __extends(Group, _super);
-
-    function Group() {
-      return Group.__super__.constructor.apply(this, arguments);
-    }
-
-    Group.prototype.defaults = {
-      message: null,
-      count: 0,
-      levelName: null,
-      isResolved: false
-    };
-
-    Group.prototype.title = function() {
-      if (this.view) {
-        return this.view;
-      } else {
-        return label;
-      }
-    };
-
-    Group.prototype.label = function() {
-      return this.message;
-    };
-
-    return Group;
-
-  })(Backbone.Model);
-
-}).call(this);
diff --git a/src/sentry/static/sentry/scripts/sentry/views.js b/src/sentry/static/sentry/scripts/sentry/views.js
deleted file mode 100644
index c828487262..0000000000
--- a/src/sentry/static/sentry/scripts/sentry/views.js
+++ /dev/null
@@ -1,100 +0,0 @@
-// Generated by CoffeeScript 1.3.3
-(function() {
-  var GroupListView, GroupView,
-    __hasProp = {}.hasOwnProperty,
-    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
-
-  GroupListView = (function(_super) {
-
-    __extends(GroupListView, _super);
-
-    function GroupListView() {
-      return GroupListView.__super__.constructor.apply(this, arguments);
-    }
-
-    GroupListView.prototype.el = '.group-list';
-
-    GroupListView.prototype.initialize = function() {
-      _.bindAll(this);
-      this.collection = new GroupList;
-      this.collection.on('add', this.appendMember);
-      this.collection.on('remove', this.clearMember);
-      return this.collection.on('add remove', this.changed);
-    };
-
-    GroupListView.prototype.changed = function() {
-      return this.trigger("membership");
-    };
-
-    GroupListView.prototype.appendMember = function(obj) {
-      var out, view;
-      view = new GroupView({
-        model: obj,
-        id: this.id + obj.id
-      });
-      out = group_view.render();
-      return $('#' + this.id).append(out.el);
-    };
-
-    GroupListView.prototype.addMember = function(obj) {
-      if (!this.hasMember(obj)) {
-        return this.collection.add(obj);
-      } else {
-        obj = this.collection.get(obj.id);
-        return obj.set('count', obj.get("count"));
-      }
-    };
-
-    GroupListView.prototype.hasMember = function(obj) {
-      if (this.collection.get(obj.id)) {
-        return true;
-      } else {
-        return false;
-      }
-    };
-
-    GroupListView.prototype.removeMember = function(obj) {
-      return this.collection.remove(obj);
-    };
-
-    GroupListView.prototype.clearMember = function(obj) {
-      return $('li[data-id="' + this.id + '"]', el).remove();
-    };
-
-    return GroupListView;
-
-  })(Backbone.View);
-
-  GroupView = GroupView = (function(_super) {
-
-    __extends(GroupView, _super);
-
-    function GroupView() {
-      return GroupView.__super__.constructor.apply(this, arguments);
-    }
-
-    GroupView.prototype.tagName = 'li';
-
-    GroupView.prototype.className = 'group';
-
-    GroupView.prototype.template = _.template($('#group-template').html());
-
-    GroupView.prototype.initialize = function() {
-      _.bindAll(this);
-      return this.model.on("change:count", this.updateCount);
-    };
-
-    GroupView.prototype.render = function() {
-      this.$el.html(this.template(this.model.toJSON()));
-      return this;
-    };
-
-    GroupView.prototype.updateCount = function(obj) {
-      return $('.count span', this.$el).text(this.model.get("count"));
-    };
-
-    return GroupView;
-
-  })(Backbone.View);
-
-}).call(this);
diff --git a/src/sentry/static/sentry/scripts/sentry/site.js b/src/sentry/static/sentry/scripts/site.js
similarity index 100%
rename from src/sentry/static/sentry/scripts/sentry/site.js
rename to src/sentry/static/sentry/scripts/site.js
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 0731393af0..669ddf7482 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -38,7 +38,7 @@
         <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/backbone.min.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/select2/select2.min.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/global.min.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/sentry/site.js" %}"></script>
+        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/site.js" %}"></script>
         <script type="text/javascript">
         Sentry.config({
             urlPrefix: {{ URL_PREFIX|to_json|safe }},
