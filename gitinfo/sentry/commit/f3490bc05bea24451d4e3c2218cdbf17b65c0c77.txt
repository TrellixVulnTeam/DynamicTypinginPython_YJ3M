commit f3490bc05bea24451d4e3c2218cdbf17b65c0c77
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Thu Jan 16 12:19:46 2020 -0800

    fix(pagerduty): Only show services added by current organization (#16425)
    
    * fix(pagerduty): Only show services added by current organization

diff --git a/src/sentry/integrations/pagerduty/notify_action.py b/src/sentry/integrations/pagerduty/notify_action.py
index 49e6944a4f..fa959f710f 100644
--- a/src/sentry/integrations/pagerduty/notify_action.py
+++ b/src/sentry/integrations/pagerduty/notify_action.py
@@ -8,7 +8,7 @@ from django.utils.translation import ugettext_lazy as _
 from sentry.constants import ObjectStatus
 
 from sentry.rules.actions.base import EventAction
-from sentry.models import Integration, PagerDutyService
+from sentry.models import Integration, OrganizationIntegration, PagerDutyService
 from sentry.integrations.exceptions import ApiError
 from .client import PagerDutyClient
 
@@ -124,15 +124,16 @@ class PagerDutyNotifyServiceAction(EventAction):
         return integrations
 
     def get_services(self):
+        organization = self.project.organization
         integrations = Integration.objects.filter(
-            provider="pagerduty",
-            organizations=self.project.organization,
-            status=ObjectStatus.VISIBLE,
+            provider="pagerduty", organizations=organization, status=ObjectStatus.VISIBLE
         )
         services = []
         for integration in integrations:
             service_list = PagerDutyService.objects.filter(
-                organization_integration_id__in=integration.organizationintegration_set.all()
+                organization_integration_id=OrganizationIntegration.objects.get(
+                    organization=organization, integration=integration
+                )
             ).values_list("id", "service_name")
             services += service_list
         return services
diff --git a/tests/sentry/integrations/pagerduty/test_notify_action.py b/tests/sentry/integrations/pagerduty/test_notify_action.py
index 0f70672a9c..4c9af7ee6b 100644
--- a/tests/sentry/integrations/pagerduty/test_notify_action.py
+++ b/tests/sentry/integrations/pagerduty/test_notify_action.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 import responses
 
 from sentry.utils import json
-from sentry.models import Integration, PagerDutyService, GroupStatus
+from sentry.models import Integration, PagerDutyService, GroupStatus, OrganizationIntegration
 from sentry.testutils.cases import RuleTestCase
 from sentry.integrations.pagerduty.notify_action import PagerDutyNotifyServiceAction
 
@@ -76,6 +76,29 @@ class PagerDutyNotifyActionTest(RuleTestCase):
         label = rule.render_label()
         assert label == "Send a notification to PagerDuty account [removed] and service [removed]"
 
+    def test_valid_service_options(self):
+        # create new org that has the same pd account but different a service added
+        new_org = self.create_organization(name="New Org", owner=self.user)
+
+        # need to create a new project and set it as self.project because rules are
+        # project based and we want the project in this case to be associated with the
+        # new organization when we call `self.get_rule()`
+        new_project = self.create_project(name="new proj", organization=new_org)
+        self.project = new_project
+
+        self.integration.add_organization(new_org, self.user)
+        oi = OrganizationIntegration.objects.get(organization=new_org)
+        new_service = PagerDutyService.objects.create(
+            service_name="New Service",
+            integration_key="new_service_key",
+            organization_integration=oi,
+        )
+
+        rule = self.get_rule(data={"account": self.integration.id})
+
+        service_options = rule.get_services()
+        assert service_options == [(new_service.id, new_service.service_name)]
+
     @responses.activate
     def test_valid_service_selected(self):
         rule = self.get_rule(data={"account": self.integration.id, "service": self.service.id})
