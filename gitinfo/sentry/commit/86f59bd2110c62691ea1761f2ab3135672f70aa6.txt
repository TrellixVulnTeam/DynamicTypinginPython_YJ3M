commit 86f59bd2110c62691ea1761f2ab3135672f70aa6
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Aug 9 22:27:48 2015 -0700

    Various debugger fixes
    
    - Better thread handling
    - Remove print
    - Prioritize __debug__ routes

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index fc92331f9c..4d228ee7c0 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -542,6 +542,8 @@ DEBUG_TOOLBAR_PANELS = (
     'debug_toolbar.panels.versions.VersionsPanel',
 )
 
+DEBUG_TOOLBAR_PATCH_SETTINGS = False
+
 # Sentry and Raven configuration
 
 SENTRY_CLIENT = 'sentry.utils.raven.SentryInternalClient'
diff --git a/src/sentry/debug/middleware.py b/src/sentry/debug/middleware.py
index 98f614ad4f..4baf4102fa 100644
--- a/src/sentry/debug/middleware.py
+++ b/src/sentry/debug/middleware.py
@@ -2,13 +2,31 @@ from __future__ import absolute_import
 
 import json
 import re
-import threading
+import thread
 
 from debug_toolbar.toolbar import DebugToolbar
 from django.utils.encoding import force_text
 
 
-class DebugMiddleware(threading.local):
+class ToolbarCache(object):
+    def __init__(self):
+        self._toolbars = {}
+
+    def create(self, request):
+        toolbar = DebugToolbar(request)
+        self._toolbars[thread.get_ident()] = toolbar
+        return toolbar
+
+    def pop(self):
+        return self._toolbars.pop(thread.get_ident(), None)
+
+    def get(self):
+        return self._toolbars.get(thread.get_ident(), None)
+
+toolbar_cache = ToolbarCache()
+
+
+class DebugMiddleware(object):
     _body_regexp = re.compile(re.escape('</body>'), flags=re.IGNORECASE)
 
     def show_toolbar(self, request):
@@ -24,10 +42,9 @@ class DebugMiddleware(threading.local):
     def process_request(self, request):
         # Decide whether the toolbar is active for this request.
         if not self.show_toolbar(request):
-            self.toolbar = None
             return
 
-        self.toolbar = toolbar = DebugToolbar(request)
+        toolbar = toolbar_cache.create(request)
 
         # Activate instrumentation ie. monkey-patch.
         for panel in toolbar.enabled_panels:
@@ -42,7 +59,7 @@ class DebugMiddleware(threading.local):
         return response
 
     def process_view(self, request, view_func, view_args, view_kwargs):
-        toolbar = getattr(self, 'toolbar', None)
+        toolbar = toolbar_cache.get()
         if not toolbar:
             return
 
@@ -54,7 +71,7 @@ class DebugMiddleware(threading.local):
                 break
 
     def process_response(self, request, response):
-        toolbar = getattr(self, 'toolbar', None)
+        toolbar = toolbar_cache.pop()
         if not toolbar:
             return response
 
@@ -85,7 +102,6 @@ class DebugMiddleware(threading.local):
         bits = self._body_regexp.split(content)
         if len(bits) > 1:
             bits[-2] += toolbar.render_toolbar()
-            print(bits)
             response.content = '</body>'.join(bits)
 
         response['Content-Length'] = len(response.content)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 04b5cd1b80..ad57eb56eb 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -243,6 +243,9 @@ urlpatterns += patterns('',
     url(r'^accept/(?P<member_id>\d+)/(?P<token>\w+)/$', AcceptOrganizationInviteView.as_view(),
         name='sentry-accept-invite'),
 
+    # Debugger
+    url(r'^__debug__/', include(debug_toolbar.urls)),
+
     # Settings - Projects
     url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/get-started/$',
         sentry.web.frontend.projects.general.get_started,
@@ -424,7 +427,4 @@ urlpatterns += patterns('',
     # Legacy
     url(r'^(?P<project_id>[\w_-]+)/group/(?P<group_id>\d+)/$', groups.redirect_to_group,
         name='sentry-group'),
-
-    # Debugger
-    url(r'^__debug__/', include(debug_toolbar.urls)),
 )
