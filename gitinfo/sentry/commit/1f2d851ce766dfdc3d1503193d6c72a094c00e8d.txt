commit 1f2d851ce766dfdc3d1503193d6c72a094c00e8d
Author: Max Bittker <maxbittker@gmail.com>
Date:   Wed Jun 14 13:26:32 2017 -0700

    scope auth to webhooks and repos (#5480)
    
    * scope auth to webhooks and repos
    
    * update for file changes
    
    * commit links
    
    * feature flag instead of early adopter

diff --git a/src/sentry/api/endpoints/organization_config_repositories.py b/src/sentry/api/endpoints/organization_config_repositories.py
index 7b1df7db83..42585a2e1f 100644
--- a/src/sentry/api/endpoints/organization_config_repositories.py
+++ b/src/sentry/api/endpoints/organization_config_repositories.py
@@ -4,6 +4,7 @@ from rest_framework.response import Response
 
 from sentry.api.bases.organization import OrganizationEndpoint
 from sentry.plugins import bindings
+from sentry import features
 
 
 class OrganizationConfigRepositoriesEndpoint(OrganizationEndpoint):
@@ -13,11 +14,12 @@ class OrganizationConfigRepositoriesEndpoint(OrganizationEndpoint):
         providers = []
         for provider_id in provider_bindings:
             provider = provider_bindings.get(provider_id)(id=provider_id)
-            providers.append({
-                'id': provider_id,
-                'name': provider.name,
-                'config': provider.get_config(),
-            })
+            if provider_id != 'bitbucket' or features.has('organizations:bitbucket-repos', organization):
+                providers.append({
+                    'id': provider_id,
+                    'name': provider.name,
+                    'config': provider.get_config(),
+                })
 
         return Response({
             'providers': providers,
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index a3176f3e41..6f4384563c 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -15,6 +15,7 @@ default_manager.add('organizations:callsigns', OrganizationFeature)  # NOQA
 default_manager.add('organizations:repos', OrganizationFeature)  # NOQA
 default_manager.add('organizations:release-commits', OrganizationFeature)  # NOQA
 default_manager.add('organizations:group-unmerge', OrganizationFeature)  # NOQA
+default_manager.add('organizations:bitbucket-repos', OrganizationFeature)  # NOQA
 default_manager.add('projects:global-events', ProjectFeature)  # NOQA
 default_manager.add('projects:plugins', ProjectPluginFeature)  # NOQA
 default_manager.add('projects:data-forwarding', ProjectFeature)  # NOQA
diff --git a/src/sentry/models/release.py b/src/sentry/models/release.py
index 616dddc252..bf0cf798f8 100644
--- a/src/sentry/models/release.py
+++ b/src/sentry/models/release.py
@@ -20,6 +20,9 @@ from sentry.db.models import (
     ArrayField, BoundedPositiveIntegerField, FlexibleForeignKey, Model,
     sane_repr
 )
+
+from sentry.models import CommitFileChange
+
 from sentry.utils.cache import cache
 from sentry.utils.hashlib import md5_text
 
@@ -381,6 +384,17 @@ class Release(Model):
                     key=data['id'],
                     defaults=defaults,
                 )
+
+                patch_set = data.get('patch_set', [])
+
+                for patched_file in patch_set:
+                    CommitFileChange.objects.get_or_create(
+                        organization_id=self.organization.id,
+                        commit=commit,
+                        filename=patched_file['path'],
+                        type=patched_file['type'],
+                    )
+
                 if not created:
                     update_kwargs = {}
                     if commit.message is None and defaults['message'] is not None:
diff --git a/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx b/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx
index 00ed41b694..47f2bd3114 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx
@@ -25,6 +25,9 @@ const CommitLink = React.createClass({
     if (this.props.repository.provider.id === 'github') {
       return this.props.repository.url + '/commit/' + this.props.commitId;
     }
+    if (this.props.repository.provider.id === 'bitbucket') {
+      return this.props.repository.url + '/commits/' + this.props.commitId;
+    }
     return undefined;
   },
 
diff --git a/src/social_auth/backends/bitbucket.py b/src/social_auth/backends/bitbucket.py
index f0b22bdd2c..226fc07d4f 100644
--- a/src/social_auth/backends/bitbucket.py
+++ b/src/social_auth/backends/bitbucket.py
@@ -76,6 +76,7 @@ class BitbucketAuth(ConsumerBasedOAuth):
     AUTH_BACKEND = BitbucketBackend
     SETTINGS_KEY_NAME = 'BITBUCKET_CONSUMER_KEY'
     SETTINGS_SECRET_NAME = 'BITBUCKET_CONSUMER_SECRET'
+    DEFAULT_SCOPE = ['webhook', 'repository', 'issue']
 
     def user_data(self, access_token):
         """Return user data provided"""
