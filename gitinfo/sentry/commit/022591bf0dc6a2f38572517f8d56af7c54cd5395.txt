commit 022591bf0dc6a2f38572517f8d56af7c54cd5395
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Tue May 15 16:26:55 2018 -0700

    feat(api): Add group integrations index endpoint

diff --git a/src/sentry/api/endpoints/group_integrations.py b/src/sentry/api/endpoints/group_integrations.py
new file mode 100644
index 0000000000..d099a815e9
--- /dev/null
+++ b/src/sentry/api/endpoints/group_integrations.py
@@ -0,0 +1,27 @@
+from __future__ import absolute_import
+
+from sentry import integrations
+from sentry.api.bases import GroupEndpoint
+from sentry.api.paginator import OffsetPaginator
+from sentry.api.serializers import serialize
+from sentry.integrations.base import IntegrationFeatures
+from sentry.models import Integration
+
+
+class GroupIntegrationsEndpoint(GroupEndpoint):
+    def get(self, request, group):
+        providers = [
+            i.key for i in integrations.all() if i.has_feature(IntegrationFeatures.ISSUE_SYNC)
+        ]
+        return self.paginate(
+            # TODO(jess): This should filter by integrations that
+            # are configured for the group's project once that is supported
+            queryset=Integration.objects.filter(
+                organizations=group.organization,
+                provider__in=providers,
+            ),
+            request=request,
+            order_by='name',
+            on_results=lambda x: serialize(x, request.user),
+            paginator_cls=OffsetPaginator,
+        )
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 3f4e4e6dd6..4ee74b043d 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -29,6 +29,7 @@ from .endpoints.group_events_latest import GroupEventsLatestEndpoint
 from .endpoints.group_events_oldest import GroupEventsOldestEndpoint
 from .endpoints.group_hashes import GroupHashesEndpoint
 from .endpoints.group_integration_details import GroupIntegrationDetailsEndpoint
+from .endpoints.group_integrations import GroupIntegrationsEndpoint
 from .endpoints.group_notes import GroupNotesEndpoint
 from .endpoints.group_notes_details import GroupNotesDetailsEndpoint
 from .endpoints.group_participants import GroupParticipantsEndpoint
@@ -955,6 +956,11 @@ urlpatterns = patterns(
         GroupSimilarIssuesEndpoint.as_view(),
         name='sentry-api-0-group-similar-issues'
     ),
+    url(
+        r'^(?:issues|groups)/(?P<issue_id>\d+)/integrations/$',
+        GroupIntegrationsEndpoint.as_view(),
+        name='sentry-api-0-group-integrations'
+    ),
     url(
         r'^(?:issues|groups)/(?P<issue_id>\d+)/integrations/(?P<integration_id>[^\/]+)/$',
         GroupIntegrationDetailsEndpoint.as_view(),
diff --git a/tests/sentry/api/endpoints/test_group_integrations.py b/tests/sentry/api/endpoints/test_group_integrations.py
new file mode 100644
index 0000000000..63824feb72
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_group_integrations.py
@@ -0,0 +1,33 @@
+from __future__ import absolute_import
+
+import six
+
+from sentry.models import Integration
+from sentry.testutils import APITestCase
+
+
+class GroupIntegrationsTest(APITestCase):
+    def test_simple_get(self):
+        self.login_as(user=self.user)
+        org = self.organization
+        group = self.create_group()
+        integration = Integration.objects.create(
+            provider='example',
+            name='Example',
+        )
+        integration.add_organization(org.id)
+
+        path = '/api/0/issues/{}/integrations/'.format(group.id)
+
+        response = self.client.get(path)
+
+        assert response.data[0] == {
+            'id': six.text_type(integration.id),
+            'name': integration.name,
+            'icon': integration.metadata.get('icon'),
+            'domain_name': integration.metadata.get('domain_name'),
+            'provider': {
+                'key': integration.get_provider().key,
+                'name': integration.get_provider().name,
+            },
+        }
