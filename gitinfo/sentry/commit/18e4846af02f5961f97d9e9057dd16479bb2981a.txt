commit 18e4846af02f5961f97d9e9057dd16479bb2981a
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Apr 15 04:17:15 2020 -0700

    fix(ui): progressRing text alignment in safari (#18271)

diff --git a/src/sentry/static/sentry/app/components/progressRing.tsx b/src/sentry/static/sentry/app/components/progressRing.tsx
index 3b2d7a37ba..e6e3ef7d19 100644
--- a/src/sentry/static/sentry/app/components/progressRing.tsx
+++ b/src/sentry/static/sentry/app/components/progressRing.tsx
@@ -112,7 +112,7 @@ const ProgressRing = ({
     typeof progressColor === 'function' ? progressColor({percent, theme}) : progressColor;
 
   return (
-    <svg height={radius * 2 + barWidth} width={radius * 2 + barWidth} {...p}>
+    <RingSvg height={radius * 2 + barWidth} width={radius * 2 + barWidth} {...p}>
       <RingBackground
         r={radius}
         barWidth={barWidth}
@@ -133,10 +133,14 @@ const ProgressRing = ({
       <foreignObject height="100%" width="100%">
         {text !== undefined && textNode}
       </foreignObject>
-    </svg>
+    </RingSvg>
   );
 };
 
+const RingSvg = styled('svg')`
+  position: relative;
+`;
+
 const RingBackground = styled('circle')<{color: string; barWidth: number}>`
   fill: none;
   stroke: ${p => p.color};
diff --git a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
index 6ae442e89a..e38d69b956 100644
--- a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
@@ -1251,18 +1251,19 @@ exports[`Sidebar can have onboarding feature 1`] = `
               class="css-1osy0pt-Container e1roosa10"
             >
               <svg
+                class="css-1vfby2y-RingSvg eqr38d41"
                 height="88"
                 width="88"
               >
                 <circle
-                  class="css-tvb94l-RingBackground eqr38d41"
+                  class="css-tvb94l-RingBackground eqr38d42"
                   color="#E7E1EC"
                   cx="44"
                   cy="44"
                   r="38"
                 />
                 <circle
-                  class="css-sn14z-RingBar eqr38d42"
+                  class="css-sn14z-RingBar eqr38d43"
                   color="#57be8c"
                   cx="44"
                   cy="44"
@@ -1882,133 +1883,139 @@ exports[`Sidebar can have onboarding feature 1`] = `
                     textCss={[Function]}
                     value={0}
                   >
-                    <svg
+                    <RingSvg
                       height={88}
                       width={88}
                     >
-                      <RingBackground
-                        barWidth={12}
-                        color="#E7E1EC"
-                        cx={44}
-                        cy={44}
-                        r={38}
+                      <svg
+                        className="css-1vfby2y-RingSvg eqr38d41"
+                        height={88}
+                        width={88}
                       >
-                        <circle
-                          className="css-tvb94l-RingBackground eqr38d41"
+                        <RingBackground
+                          barWidth={12}
                           color="#E7E1EC"
                           cx={44}
                           cy={44}
                           r={38}
-                        />
-                      </RingBackground>
-                      <RingBar
-                        barWidth={12}
-                        circumference={238.76104167282426}
-                        color="#57be8c"
-                        cx={44}
-                        cy={44}
-                        r={38}
-                        strokeDashoffset={238.76104167282426}
-                        strokeLinecap="round"
-                      >
-                        <circle
-                          className="css-sn14z-RingBar eqr38d42"
+                        >
+                          <circle
+                            className="css-tvb94l-RingBackground eqr38d42"
+                            color="#E7E1EC"
+                            cx={44}
+                            cy={44}
+                            r={38}
+                          />
+                        </RingBackground>
+                        <RingBar
+                          barWidth={12}
+                          circumference={238.76104167282426}
                           color="#57be8c"
                           cx={44}
                           cy={44}
                           r={38}
                           strokeDashoffset={238.76104167282426}
                           strokeLinecap="round"
-                        />
-                      </RingBar>
-                      <foreignObject
-                        height="100%"
-                        width="100%"
-                      >
-                        <PoseGroup
-                          flipMove={true}
-                          preEnterPose="init"
                         >
-                          <Transition
-                            enterAfterExit={false}
-                            enterPose="enter"
-                            exitPose="exit"
+                          <circle
+                            className="css-sn14z-RingBar eqr38d43"
+                            color="#57be8c"
+                            cx={44}
+                            cy={44}
+                            r={38}
+                            strokeDashoffset={238.76104167282426}
+                            strokeLinecap="round"
+                          />
+                        </RingBar>
+                        <foreignObject
+                          height="100%"
+                          width="100%"
+                        >
+                          <PoseGroup
                             flipMove={true}
                             preEnterPose="init"
                           >
-                            <ForwardRef
-                              _pose="enter"
-                              key="7"
-                              percent={0}
-                              textCss={[Function]}
-                              x="50%"
-                              y="50%"
+                            <Transition
+                              enterAfterExit={false}
+                              enterPose="enter"
+                              exitPose="exit"
+                              flipMove={true}
+                              preEnterPose="init"
                             >
-                              <PoseElement
+                              <ForwardRef
                                 _pose="enter"
-                                elementType={
-                                  Object {
-                                    "$$typeof": Symbol(react.forward_ref),
-                                    "__emotion_base": "div",
-                                    "__emotion_forwardProp": undefined,
-                                    "__emotion_real": [Circular],
-                                    "__emotion_styles": Array [
-                                      "label:Text;",
-                                      "position:absolute;display:flex;align-items:center;justify-content:center;height:100%;width:100%;color:",
-                                      [Function],
-                                      ";font-size:",
-                                      [Function],
-                                      ";padding-top:1px;transition:color 100ms;",
-                                      [Function],
-                                    ],
-                                    "defaultProps": undefined,
-                                    "displayName": "Text",
-                                    "render": [Function],
-                                    "withComponent": [Function],
-                                  }
-                                }
-                                innerRef={null}
+                                key="7"
                                 percent={0}
-                                poseConfig={
-                                  Object {
-                                    "enter": Object {
-                                      "opacity": 1,
-                                      "y": 0,
-                                    },
-                                    "exit": Object {
-                                      "opacity": 0,
-                                      "y": 10,
-                                    },
-                                    "init": Object {
-                                      "opacity": 0,
-                                      "y": -10,
-                                    },
-                                  }
-                                }
                                 textCss={[Function]}
                                 x="50%"
                                 y="50%"
                               >
-                                <Text
+                                <PoseElement
+                                  _pose="enter"
+                                  elementType={
+                                    Object {
+                                      "$$typeof": Symbol(react.forward_ref),
+                                      "__emotion_base": "div",
+                                      "__emotion_forwardProp": undefined,
+                                      "__emotion_real": [Circular],
+                                      "__emotion_styles": Array [
+                                        "label:Text;",
+                                        "position:absolute;display:flex;align-items:center;justify-content:center;height:100%;width:100%;color:",
+                                        [Function],
+                                        ";font-size:",
+                                        [Function],
+                                        ";padding-top:1px;transition:color 100ms;",
+                                        [Function],
+                                      ],
+                                      "defaultProps": undefined,
+                                      "displayName": "Text",
+                                      "render": [Function],
+                                      "withComponent": [Function],
+                                    }
+                                  }
+                                  innerRef={null}
                                   percent={0}
+                                  poseConfig={
+                                    Object {
+                                      "enter": Object {
+                                        "opacity": 1,
+                                        "y": 0,
+                                      },
+                                      "exit": Object {
+                                        "opacity": 0,
+                                        "y": 10,
+                                      },
+                                      "init": Object {
+                                        "opacity": 0,
+                                        "y": -10,
+                                      },
+                                    }
+                                  }
                                   textCss={[Function]}
                                   x="50%"
                                   y="50%"
                                 >
-                                  <div
-                                    className="css-102hoso-Text-ProgressHeader eqr38d40"
+                                  <Text
+                                    percent={0}
+                                    textCss={[Function]}
                                     x="50%"
                                     y="50%"
                                   >
-                                    7
-                                  </div>
-                                </Text>
-                              </PoseElement>
-                            </ForwardRef>
-                          </Transition>
-                        </PoseGroup>
-                      </foreignObject>
-                    </svg>
+                                    <div
+                                      className="css-102hoso-Text-ProgressHeader eqr38d40"
+                                      x="50%"
+                                      y="50%"
+                                    >
+                                      7
+                                    </div>
+                                  </Text>
+                                </PoseElement>
+                              </ForwardRef>
+                            </Transition>
+                          </PoseGroup>
+                        </foreignObject>
+                      </svg>
+                    </RingSvg>
                   </ProgressRing>
                   <HeadingText>
                     <div
