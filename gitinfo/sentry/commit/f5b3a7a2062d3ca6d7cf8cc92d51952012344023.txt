commit f5b3a7a2062d3ca6d7cf8cc92d51952012344023
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jul 24 16:43:53 2015 +0200

    Add project events endpoint

diff --git a/src/sentry/api/endpoints/project_events.py b/src/sentry/api/endpoints/project_events.py
new file mode 100644
index 0000000000..f1f002afbd
--- /dev/null
+++ b/src/sentry/api/endpoints/project_events.py
@@ -0,0 +1,33 @@
+from __future__ import absolute_import
+
+from sentry.api.base import DocSection
+from sentry.api.bases.project import ProjectEndpoint
+from sentry.api.serializers import serialize
+from sentry.api.paginator import DateTimePaginator
+from sentry.models import Event
+
+
+class ProjectEventsEndpoint(ProjectEndpoint):
+    doc_section = DocSection.EVENTS
+
+    def get(self, request, project):
+        """
+        List a project's available samples
+
+        Return a list of sampled events bound to a project.
+
+            {method} {path}
+
+        """
+
+        events = Event.objects.filter(
+            project=project,
+        )
+
+        return self.paginate(
+            request=request,
+            queryset=events,
+            order_by='-datetime',
+            on_results=lambda x: serialize(x, request.user),
+            paginator_cls=DateTimePaginator,
+        )
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index b964152105..03439083a0 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -29,6 +29,7 @@ from .endpoints.organization_projects import OrganizationProjectsEndpoint
 from .endpoints.organization_stats import OrganizationStatsEndpoint
 from .endpoints.organization_teams import OrganizationTeamsEndpoint
 from .endpoints.project_details import ProjectDetailsEndpoint
+from .endpoints.project_events import ProjectEventsEndpoint
 from .endpoints.project_group_index import ProjectGroupIndexEndpoint
 from .endpoints.project_group_stats import ProjectGroupStatsEndpoint
 from .endpoints.project_keys import ProjectKeysEndpoint
@@ -125,6 +126,9 @@ urlpatterns = patterns(
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/$',
         ProjectDetailsEndpoint.as_view(),
         name='sentry-api-0-project-details'),
+    url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/events/$',
+        ProjectEventsEndpoint.as_view(),
+        name='sentry-api-0-project-events'),
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/groups/$',
         ProjectGroupIndexEndpoint.as_view(),
         name='sentry-api-0-project-group-index'),
diff --git a/tests/sentry/api/endpoints/test_project_events.py b/tests/sentry/api/endpoints/test_project_events.py
new file mode 100644
index 0000000000..ac6aedf948
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_project_events.py
@@ -0,0 +1,25 @@
+from django.core.urlresolvers import reverse
+from sentry.testutils import APITestCase
+
+
+class ProjectEventsTest(APITestCase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project()
+        group = self.create_group(project=project)
+        event_1 = self.create_event('a' * 32, group=group)
+        event_2 = self.create_event('b' * 32, group=group)
+
+        url = reverse('sentry-api-0-project-events', kwargs={
+            'organization_slug': project.organization.slug,
+            'project_slug': project.slug,
+        })
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 2
+        assert sorted(map(lambda x: x['id'], response.data)) == sorted([
+            str(event_1.id),
+            str(event_2.id),
+        ])
