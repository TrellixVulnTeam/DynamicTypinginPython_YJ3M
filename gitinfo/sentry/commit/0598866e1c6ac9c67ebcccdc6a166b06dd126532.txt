commit 0598866e1c6ac9c67ebcccdc6a166b06dd126532
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Mon Aug 28 11:15:49 2017 -0700

    Make user actor and assignee for Activity when they resolve issues via commit (#5984)

diff --git a/src/sentry/receivers/releases.py b/src/sentry/receivers/releases.py
index 89013710f7..4c3eb35924 100644
--- a/src/sentry/receivers/releases.py
+++ b/src/sentry/receivers/releases.py
@@ -70,7 +70,8 @@ def resolved_in_commit(instance, created, **kwargs):
                             'commit': instance.id,
                         }
                     )
-                    GroupAssignee.objects.assign(group=group, assigned_to=user_list[0])
+                    GroupAssignee.objects.assign(
+                        group=group, assigned_to=user_list[0], acting_user=user_list[0])
                 else:
                     Activity.objects.create(
                         project_id=group.project_id,
diff --git a/tests/sentry/receivers/test_releases.py b/tests/sentry/receivers/test_releases.py
index 7e17ab2a7a..5783b22be0 100644
--- a/tests/sentry/receivers/test_releases.py
+++ b/tests/sentry/receivers/test_releases.py
@@ -1,12 +1,13 @@
 from __future__ import absolute_import
 
+import six
 from hashlib import sha1
 from mock import patch
 from uuid import uuid4
 
 from sentry.models import (
-    Commit, CommitAuthor, GroupAssignee, GroupCommitResolution, OrganizationMember, Release,
-    Repository, TagValue, UserEmail
+    Activity, Commit, CommitAuthor, GroupAssignee, GroupCommitResolution, OrganizationMember,
+    Release, Repository, TagValue, UserEmail
 )
 from sentry.testutils import TestCase
 
@@ -77,7 +78,8 @@ class ResolvedInCommitTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=self.organization.id,
-            message='Foo Biz\n\nFixes {}-12F'.format(self.project.slug.upper()),
+            message='Foo Biz\n\nFixes {}-12F'.format(
+                self.project.slug.upper()),
         )
 
         assert not GroupCommitResolution.objects.filter(
@@ -111,7 +113,8 @@ class ResolvedInCommitTest(TestCase):
 
     def test_assigns_author(self):
         group = self.create_group()
-        user = self.create_user(name='Foo Bar', email='foo@example.com', is_active=True)
+        user = self.create_user(
+            name='Foo Bar', email='foo@example.com', is_active=True)
         email = UserEmail.get_primary_email(user=user)
         email.is_verified = True
         email.save()
@@ -119,7 +122,8 @@ class ResolvedInCommitTest(TestCase):
             name='example',
             organization_id=self.group.organization.id,
         )
-        OrganizationMember.objects.create(organization=group.project.organization, user=user)
+        OrganizationMember.objects.create(
+            organization=group.project.organization, user=user)
         commit = Commit.objects.create(
             key=sha1(uuid4().hex).hexdigest(),
             organization_id=group.organization.id,
@@ -138,3 +142,8 @@ class ResolvedInCommitTest(TestCase):
         ).exists()
 
         assert GroupAssignee.objects.filter(group=group, user=user).exists()
+
+        self.assertEqual(Activity.objects.filter(project=group.project,
+                                                 group=group,
+                                                 type=Activity.ASSIGNED,
+                                                 user=user,)[0].data, {'assignee': six.text_type(user.id), 'assigneeEmail': user.email})
