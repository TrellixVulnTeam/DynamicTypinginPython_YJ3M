commit 0d641a3f21119eaf267b88e1de3ae531d15fe86c
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Mon Feb 24 14:43:59 2020 +0100

    ref(ui): re-organized events contexts property order (#17239)

diff --git a/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx b/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx
index bd7964d55e..25b70e2969 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx
@@ -4,18 +4,28 @@ import ContextBlock from 'app/components/events/contexts/contextBlockV2';
 import {defined} from 'app/utils';
 
 import getAppKnownData from './getAppKnownData';
-import {AppData} from './types';
+import {AppData, AppKnownDataType} from './types';
 
 type Props = {
   data?: AppData;
 };
 
+const appKnownDataValues = [
+  AppKnownDataType.ID,
+  AppKnownDataType.START_TIME,
+  AppKnownDataType.DEVICE_HASH,
+  AppKnownDataType.IDENTIFIER,
+  AppKnownDataType.NAME,
+  AppKnownDataType.VERSION,
+  AppKnownDataType.BUILD,
+];
+
 const App = ({data}: Props) => {
   if (!defined(data)) {
     return null;
   }
 
-  return <ContextBlock knownData={getAppKnownData(data)} />;
+  return <ContextBlock knownData={getAppKnownData(data, appKnownDataValues)} />;
 };
 
 App.getTitle = () => 'App';
diff --git a/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx
index f3dadaff21..bdf3800f86 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx
@@ -4,10 +4,16 @@ import {getMeta} from 'app/components/events/meta/metaProxy';
 import getAppKnownDataDetails from './getAppKnownDataDetails';
 import {AppData, AppKnownDataType} from './types';
 
-function getAppKnownData(data: AppData): Array<KeyValueListData> {
+function getAppKnownData(
+  data: AppData,
+  appKnownDataValues: Array<AppKnownDataType>
+): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = Object.keys(data);
+  const dataKeys = appKnownDataValues.filter(
+    appKnownDataValue => data[appKnownDataValue]
+  );
+
   for (const key of dataKeys) {
     const knownDataDetails = getAppKnownDataDetails(data, key as AppKnownDataType);
 
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx b/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx
index 473b526cd5..da46030812 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx
@@ -3,19 +3,50 @@ import React from 'react';
 import ContextBlock from 'app/components/events/contexts/contextBlockV2';
 import {defined} from 'app/utils';
 
-import {DeviceData} from './types';
+import {DeviceData, DeviceKnownDataType} from './types';
 import getDeviceKnownData from './getDeviceKnownData';
 
 type Props = {
   data?: DeviceData;
 };
 
+const deviceKnownDataValues = [
+  DeviceKnownDataType.NAME,
+  DeviceKnownDataType.FAMILY,
+  DeviceKnownDataType.RENDERED_MODEL,
+  DeviceKnownDataType.CPU_DESCRIPTION,
+  DeviceKnownDataType.ARCH,
+  DeviceKnownDataType.BATTERY_LEVEL,
+  DeviceKnownDataType.BATTERY_STATUS,
+  DeviceKnownDataType.ORIENTATION,
+  DeviceKnownDataType.MEMORY,
+  DeviceKnownDataType.STORAGE,
+  DeviceKnownDataType.SIMULATOR,
+  DeviceKnownDataType.BOOT_TIME,
+  DeviceKnownDataType.TIMEZONE,
+  DeviceKnownDataType.DEVICE_TYPE,
+  DeviceKnownDataType.ARCHS,
+  DeviceKnownDataType.BRAND,
+  DeviceKnownDataType.CHARGING,
+  DeviceKnownDataType.CONNECTION_TYPE,
+  DeviceKnownDataType.ID,
+  DeviceKnownDataType.LANGUAGE,
+  DeviceKnownDataType.LOW_MEMORY,
+  DeviceKnownDataType.MANUFACTURER,
+  DeviceKnownDataType.ONLINE,
+  DeviceKnownDataType.SCREEN_DENSITY,
+  DeviceKnownDataType.SCREEN_DPI,
+  DeviceKnownDataType.SCREEN_HEIGHT_PIXELS,
+  DeviceKnownDataType.SCREEN_RESOLUTION,
+  DeviceKnownDataType.SCREEN_WIDTH_PIXELS,
+];
+
 const Device = ({data}: Props) => {
   if (!defined(data)) {
     return null;
   }
 
-  return <ContextBlock knownData={getDeviceKnownData(data)} />;
+  return <ContextBlock knownData={getDeviceKnownData(data, deviceKnownDataValues)} />;
 };
 
 Device.getTitle = () => 'Device';
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownData.tsx
index d6b15489ba..6036baa1ae 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownData.tsx
@@ -4,10 +4,16 @@ import {getMeta} from 'app/components/events/meta/metaProxy';
 import getDeviceKnownDataDetails from './getDeviceKnownDataDetails';
 import {DeviceKnownDataType, DeviceData} from './types';
 
-function getOperatingSystemKnownData(data: DeviceData): Array<KeyValueListData> {
+function getOperatingSystemKnownData(
+  data: DeviceData,
+  deviceKnownDataValues: Array<DeviceKnownDataType>
+): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = Object.keys(data);
+  const dataKeys = deviceKnownDataValues.filter(
+    deviceKnownDataValue => data[deviceKnownDataValue]
+  );
+
   for (const key of dataKeys) {
     const knownDataDetails = getDeviceKnownDataDetails(data, key as DeviceKnownDataType);
 
diff --git a/src/sentry/static/sentry/app/components/events/contexts/gpu/getGPUKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/gpu/getGPUKnownData.tsx
index 2f31a7d5d0..a4aae75f6f 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/gpu/getGPUKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/gpu/getGPUKnownData.tsx
@@ -6,15 +6,15 @@ import {GPUData, GPUKnownDataType} from './types';
 
 function getGPUKnownData(
   data: GPUData,
-  dataToBeFiltered: Array<GPUKnownDataType>
+  gpuKnownDataValues: Array<GPUKnownDataType>
 ): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const filteredDataKeys = Object.keys(data).filter(key =>
-    dataToBeFiltered.includes(key as GPUKnownDataType)
+  const dataKeys = gpuKnownDataValues.filter(
+    gpuKnownDataValue => data[gpuKnownDataValue]
   );
 
-  for (const key of filteredDataKeys) {
+  for (const key of dataKeys) {
     const knownDataDetails = getGpuKnownDataDetails(data, key as GPUKnownDataType);
 
     knownData.push({
diff --git a/src/sentry/static/sentry/app/components/events/contexts/gpu/gpu.tsx b/src/sentry/static/sentry/app/components/events/contexts/gpu/gpu.tsx
index 9cffef2861..3f114e9d5c 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/gpu/gpu.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/gpu/gpu.tsx
@@ -9,7 +9,7 @@ type Props = {
   data?: GPUData;
 };
 
-const KNOWN_DATA = [
+const gpuKnownDataValues = [
   GPUKnownDataType.NAME,
   GPUKnownDataType.VERSION,
   GPUKnownDataType.VENDOR_NAME,
@@ -25,13 +25,15 @@ const GPU = ({data}: Props) => {
   }
 
   if (data.vendor_id > 0) {
-    KNOWN_DATA.unshift[GPUKnownDataType.VENDOR_ID];
+    gpuKnownDataValues.unshift[GPUKnownDataType.VENDOR_ID];
   }
   if (data.id > 0) {
-    KNOWN_DATA.unshift[GPUKnownDataType.ID];
+    gpuKnownDataValues.unshift[GPUKnownDataType.ID];
   }
 
-  return <ContextBlock knownData={getOperatingSystemKnownData(data, KNOWN_DATA)} />;
+  return (
+    <ContextBlock knownData={getOperatingSystemKnownData(data, gpuKnownDataValues)} />
+  );
 };
 
 GPU.getTitle = () => 'GPU';
diff --git a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx
index a630a123de..9e4214110f 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx
@@ -5,11 +5,15 @@ import getOperatingSystemKnownDataDetails from './getOperatingSystemKnownDataDet
 import {OperatingSystemKnownData, OperatingSystemKnownDataType} from './types';
 
 function getOperatingSystemKnownData(
-  data: OperatingSystemKnownData
+  data: OperatingSystemKnownData,
+  operatingSystemKnownDataValues: Array<OperatingSystemKnownDataType>
 ): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = Object.keys(data);
+  const dataKeys = operatingSystemKnownDataValues.filter(
+    operatingSystemKnownDataValue => data[operatingSystemKnownDataValue]
+  );
+
   for (const key of dataKeys) {
     const knownDataDetails = getOperatingSystemKnownDataDetails(
       data,
diff --git a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx
index 9a6cfd5c60..143656dfac 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/operatingSystem/operatingSystem.tsx
@@ -4,18 +4,29 @@ import {defined} from 'app/utils';
 import ContextBlock from 'app/components/events/contexts/contextBlockV2';
 
 import getOperatingSystemKnownData from './getOperatingSystemKnownData';
-import {OperatingSystemKnownData} from './types';
+import {OperatingSystemKnownData, OperatingSystemKnownDataType} from './types';
 
 type Props = {
   data?: OperatingSystemKnownData;
 };
 
+const operatingSystemKnownDataValues = [
+  OperatingSystemKnownDataType.NAME,
+  OperatingSystemKnownDataType.VERSION,
+  OperatingSystemKnownDataType.KERNEL_VERSION,
+  OperatingSystemKnownDataType.ROOTED,
+];
+
 const OperatingSystem = ({data}: Props) => {
   if (!defined(data)) {
     return null;
   }
 
-  return <ContextBlock knownData={getOperatingSystemKnownData(data)} />;
+  return (
+    <ContextBlock
+      knownData={getOperatingSystemKnownData(data, operatingSystemKnownDataValues)}
+    />
+  );
 };
 
 OperatingSystem.getTitle = () => 'Operating System';
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx
index 932f821393..9d83330e88 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx
@@ -4,10 +4,16 @@ import {getMeta} from 'app/components/events/meta/metaProxy';
 import getRuntimeKnownDataDetails from './getRuntimeKnownDataDetails';
 import {RuntimeData, RuntimeKnownDataType} from './types';
 
-function getRuntimeKnownData(data: RuntimeData): Array<KeyValueListData> {
+function getRuntimeKnownData(
+  data: RuntimeData,
+  runTimerKnownDataValues: Array<RuntimeKnownDataType>
+): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = Object.keys(data);
+  const dataKeys = runTimerKnownDataValues.filter(
+    runTimerKnownDataValue => data[runTimerKnownDataValue]
+  );
+
   for (const key of dataKeys) {
     const knownDataDetails = getRuntimeKnownDataDetails(
       data,
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx b/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx
index 558c8c2e1b..31c2c5593e 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx
@@ -4,18 +4,20 @@ import ContextBlock from 'app/components/events/contexts/contextBlockV2';
 import {defined} from 'app/utils';
 
 import getRuntimeKnownData from './getRuntimeKnownData';
-import {RuntimeData} from './types';
+import {RuntimeData, RuntimeKnownDataType} from './types';
 
 type Props = {
   data?: RuntimeData;
 };
 
+const runTimerKnownDataValues = [RuntimeKnownDataType.NAME, RuntimeKnownDataType.VERSION];
+
 const Runtime = ({data}: Props) => {
   if (!defined(data)) {
     return null;
   }
 
-  return <ContextBlock knownData={getRuntimeKnownData(data)} />;
+  return <ContextBlock knownData={getRuntimeKnownData(data, runTimerKnownDataValues)} />;
 };
 
 Runtime.getTitle = () => 'Runtime';
diff --git a/src/sentry/static/sentry/app/components/events/contexts/user/getUserKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/user/getUserKnownData.tsx
index f0a67499c6..b1a966a1b0 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user/getUserKnownData.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user/getUserKnownData.tsx
@@ -6,17 +6,21 @@ import {defined} from 'app/utils';
 import getUserKnownDataDetails from './getUserKnownDataDetails';
 import {UserKnownDataType} from './types';
 
-function getUserKnownData(data: UserType): Array<KeyValueListData> {
+function getUserKnownData(
+  data: UserType,
+  userKnownDataValues: Array<UserKnownDataType>
+): Array<KeyValueListData> {
   const knownData: Array<KeyValueListData> = [];
 
-  const dataKeys = Object.keys(data);
+  const dataKeys = userKnownDataValues.filter(
+    userKnownDataValue => data[userKnownDataValue]
+  );
+
   for (const key of dataKeys) {
     const knownDataDetails = getUserKnownDataDetails(data, key as UserKnownDataType);
-
     if ((knownDataDetails && !defined(knownDataDetails.value)) || !knownDataDetails) {
       continue;
     }
-
     knownData.push({
       key,
       ...knownDataDetails,
diff --git a/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx b/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx
index 63714cdb24..b218541046 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx
@@ -9,6 +9,7 @@ import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValue
 import {defined} from 'app/utils';
 
 import getUserKnownData from './getUserKnownData';
+import {UserKnownDataType} from './types';
 
 type Props = {
   data: Data;
@@ -18,6 +19,14 @@ type Data = {
   data?: null | {[key: string]: string};
 } & UserType;
 
+const userKnownDataValues = [
+  UserKnownDataType.ID,
+  UserKnownDataType.EMAIL,
+  UserKnownDataType.USERNAME,
+  UserKnownDataType.IP_ADDRESS,
+  UserKnownDataType.NAME,
+];
+
 const User = ({data}: Props) => {
   if (!defined(data)) {
     return null;
@@ -32,7 +41,7 @@ const User = ({data}: Props) => {
       <div className="pull-left">
         <UserAvatar user={removeFilterMaskedEntries(data)} size={48} gravatar={false} />
       </div>
-      <ContextBlock knownData={getUserKnownData(data)} />
+      <ContextBlock knownData={getUserKnownData(data, userKnownDataValues)} />
       {defined(data?.data) && (
         <ErrorBoundary mini>
           <KeyValueList data={getKeyValueData(data.data)} isContextData />
diff --git a/src/sentry/static/sentry/app/components/events/eventExtraData/eventDataContent.tsx b/src/sentry/static/sentry/app/components/events/eventExtraData/eventDataContent.tsx
index 41cee36b1f..92c9bc9f82 100644
--- a/src/sentry/static/sentry/app/components/events/eventExtraData/eventDataContent.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventExtraData/eventDataContent.tsx
@@ -6,7 +6,7 @@ import ContextBlock from 'app/components/events/contexts/contextBlockV2';
 import getEventExtraDataKnownData from './getEventExtraDataKnownData';
 
 type Props = {
-  data?: any;
+  data?: {[key: string]: any};
   raw: boolean;
 };
 
