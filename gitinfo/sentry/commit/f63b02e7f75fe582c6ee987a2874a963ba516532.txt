commit f63b02e7f75fe582c6ee987a2874a963ba516532
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Oct 14 15:40:02 2015 -0700

    Don't normalize document-uri and and blocked-uri multiple times

diff --git a/src/sentry/interfaces/csp.py b/src/sentry/interfaces/csp.py
index c264d72e90..e58ad6a7aa 100644
--- a/src/sentry/interfaces/csp.py
+++ b/src/sentry/interfaces/csp.py
@@ -12,6 +12,7 @@ __all__ = ('Csp',)
 
 from urlparse import urlsplit, urlunsplit
 from sentry.interfaces.base import Interface, InterfaceValidationError
+from sentry.utils.cache import memoize
 from sentry.utils.safe import trim
 
 
@@ -113,7 +114,7 @@ class Csp(Interface):
 
     def get_hash(self):
         directive = self.effective_directive
-        uri = _normalize_uri(self.blocked_uri)
+        uri = self._normalized_blocked_uri
 
         # We want to distinguish between the different script-src
         # violations that happen in
@@ -127,7 +128,7 @@ class Csp(Interface):
 
     def get_message(self):
         directive = self.effective_directive
-        uri = _normalize_uri(self.blocked_uri)
+        uri = self._normalized_blocked_uri
 
         index = 1 if uri == SELF else 0
 
@@ -156,9 +157,17 @@ class Csp(Interface):
     def get_tags(self):
         return (
             ('effective-directive', self.effective_directive),
-            ('blocked-uri', _normalize_uri(self.blocked_uri)),
+            ('blocked-uri', self._normalized_blocked_uri),
         )
 
+    @memoize
+    def _normalized_blocked_uri(self):
+        return _normalize_uri(self.blocked_uri)
+
+    @memoize
+    def _normalized_document_uri(self):
+        return _normalize_uri(self.document_uri)
+
     def _normalize_directive(self, directive):
         bits = filter(None, directive.split(' '))
         return ' '.join([bits[0]] + map(self._normalize_value, bits[1:]))
@@ -174,14 +183,14 @@ class Csp(Interface):
         # FireFox transforms a 'self' value into the spelled out origin, so we
         # want to reverse this and bring it back
         if value.startswith(ALL_SCHEMES):
-            if _normalize_uri(self.document_uri) == _normalize_uri(value):
+            if self._normalized_document_uri == _normalize_uri(value):
                 return SELF
             # Their rule had an explicit scheme, so let's respect that
             return value
 
         # value doesn't have a scheme, but let's see if their
         # hostnames match at least, if so, they're the same
-        if value == _normalize_uri(self.document_uri):
+        if value == self._normalized_document_uri:
             return SELF
 
         # Now we need to stitch on a scheme to the value
diff --git a/tests/sentry/interfaces/test_csp.py b/tests/sentry/interfaces/test_csp.py
index 0c4284d12a..568a239cd3 100644
--- a/tests/sentry/interfaces/test_csp.py
+++ b/tests/sentry/interfaces/test_csp.py
@@ -41,7 +41,8 @@ class CspTest(TestCase):
 
     def test_coerce_blocked_uri_if_missing(self):
         result = Csp.to_python(dict(
-            effective_directive='script-src'
+            document_uri='http://example.com',
+            effective_directive='script-src',
         ))
         assert result.blocked_uri == 'self'
 
