commit 7f8e6a1a865ad433c7dc16ba9c9bc90340ec0fef
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Oct 1 11:16:17 2015 -0700

    Various cleanup for Rules
    
    - Remove Selectize
    - Style select2 components
    - Fix issue with node.id not passing
    
    Fixes GH-1824

diff --git a/package.json b/package.json
index ce9f9bddf9..b52fa5d9ac 100644
--- a/package.json
+++ b/package.json
@@ -35,7 +35,6 @@
     "react-sticky": "^2.5.2",
     "reflux": "^0.2.8",
     "select2": "^3.5.1",
-    "selectize": "^0.12.1",
     "underscore": "^1.8.3",
     "webpack": "^1.9.10"
   },
diff --git a/src/sentry/static/sentry/app/components/selectInput.jsx b/src/sentry/static/sentry/app/components/selectInput.jsx
new file mode 100644
index 0000000000..1df3eeedde
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/selectInput.jsx
@@ -0,0 +1,71 @@
+import React from "react";
+import jQuery from "jquery";
+
+var SelectInput = React.createClass({
+  getDefaultProps() {
+    return {
+      // HTML attrs
+      disabled: false,
+      multiple: false,
+      required: false,
+
+      // Extra options
+      placeholder: 'Select an option...',
+
+      // Component options
+      value: '',
+      onChange: $.noop
+    };
+  },
+
+  getValue() {
+    return this.select2.getValue();
+  },
+
+  create() {
+    this.select2 = jQuery(this.refs.select.getDOMNode()).select2();
+    this.select2.on('change', this.onChange);
+  },
+
+  destroy() {
+    jQuery(this.refs.select.getDOMNode()).select2('destroy');
+  },
+
+  onChange(...args) {
+    this.props.onChange.call(this, this.select2, ...args);
+  },
+
+  componentDidMount() {
+    this.create();
+  },
+
+  componentWillUnmount() {
+    this.destroy();
+  },
+
+  componentWillUpdate() {
+    this.destroy();
+  },
+
+  componentDidUpdate() {
+    this.create();
+  },
+
+  render() {
+    var opts = {
+        ref: 'select',
+        disabled: this.props.disabled,
+        required: this.props.required,
+        multiple: this.props.multiple,
+        placeholder: this.props.placeholder,
+        className: this.props.className
+    };
+    return (
+      <select {...opts}>
+        {this.props.children}
+      </select>
+    );
+  }
+});
+
+export default SelectInput;
diff --git a/src/sentry/static/sentry/app/components/selectize.jsx b/src/sentry/static/sentry/app/components/selectize.jsx
deleted file mode 100644
index 473fb7f842..0000000000
--- a/src/sentry/static/sentry/app/components/selectize.jsx
+++ /dev/null
@@ -1,212 +0,0 @@
-import React from "react";
-import $ from "jquery";
-
-function identicalArray(a1, a2){
-  return (
-      a1.length === a2.length &&
-      !a1.some(function(e, idx) { return a2[idx] !== e; })
-  );
-}
-
-const selectizeOptNames = [
-  'delimiter',
-  'diacritics',
-  'create',
-  'createOnBlur',
-  'createFilter',
-  'highlight',
-  'persist',
-  'openOnFocus',
-  'maxOptions',
-  'maxItems',
-  'hideSelected',
-  'scrollDuration',
-  'loadThrottle',
-  'preload',
-  'dropdownParent',
-  'addPrecedence',
-  'selectOnTab',
-  'options',
-  'dataAttr',
-  'valueField',
-  'optgroupValueField',
-  'labelField',
-  'optgroupLabelField',
-  'optgroupField',
-  'sortField',
-  'searchField',
-  'searchConjunction',
-  'optgroupOrder',
-  'load',
-  'score',
-  'render',
-
-  // Unofficial, but works as expected.
-  'placeholder'
-];
-
-var handledProps = {
-  children:     true,
-  value:        true,
-  disabled:     true,
-  placeholder:  true,
-  onChange:     true,
-  options:      true,
-};
-
-var Selectize = React.createClass({
-  getDefaultProps() {
-    return {
-      // HTML attrs
-      disabled: false,
-      multiple: false,
-      // -- unsupported --
-      //autofocus: false,
-      //form: null,
-      //name: null
-      //required: false
-      //size: 0
-
-      // Extra options
-      placeholder: 'Select an option...',
-
-      // Component options
-      value: '',
-      onChange: $.noop
-    };
-  },
-
-  getValue() {
-    return this.selectize.getValue();
-  },
-
-  create() {
-    var self = this;
-
-    var options = {};
-    selectizeOptNames.forEach(function(optName) {
-      if (optName in self.props) {
-        options[optName] = self.props[optName];
-      }
-    });
-
-    this.selectize = (
-      $(this.refs.select.getDOMNode())
-      .selectize(options)
-    )[0].selectize;
-
-    this.selectize.setValue(this.props.value);
-
-    this.selectize.on('change', this.onChange);
-  },
-
-  destroy() {
-    this.selectize.destroy();
-  },
-
-  shouldComponentUpdate(nextProps) {
-    var self = this;
-    var shouldUpdate = Object.keys(nextProps).some(function(propName) {
-      // If it's handled, we'll deal with it on our own.
-      if (propName in handledProps) return false;
-
-      return nextProps[propName] !== self.props[propName];
-    });
-    if (shouldUpdate) return true;
-
-    this._updating = true;
-
-    // Handle our handledProps if they've changed.
-    // If they're not here, they probably need no handling.
-
-    if (nextProps.disabled !== this.props.disabled) {
-      if (nextProps.disabled) {
-        this.selectize.disable();
-      }
-      else {
-        this.selectize.enable();
-      }
-    }
-
-    if (nextProps.placeholder !== this.props.placeholder) {
-      this.selectize.settings.placeholder = nextProps.placeholder;
-      this.selectize.updatePlaceholder();
-    }
-
-    if (nextProps.options !== this.props.options &&
-      !identicalArray(this.props.options, nextProps.options)) {
-      // Synchronously update the options, as
-      // Selectize's async load function causes
-      // issues.
-      this.selectize.clearOptions();
-      nextProps.options.forEach(function(option) {
-        self.selectize.addOption(option);
-      });
-      this.selectize.refreshOptions(false);
-    }
-
-    if (nextProps.value !== this.props.value) {
-      if (nextProps.multiple && nextProps.value !== null) {
-        if (!identicalArray(nextProps.value, this.getValue())) {
-          this.selectize.setValue(nextProps.value);
-        }
-      }
-      else {
-        if (nextProps.value !== this.getValue()) {
-          this.selectize.setValue(nextProps.value);
-        }
-      }
-    }
-
-    this._updating = false;
-
-    return false;
-  },
-
-  onChange(...args) {
-    // Because handleChange often triggers state
-    // changes in containing components, we need to
-    // make sure that we're not currently updating from
-    // within another state change (otherwise react
-    // will throw an InvariantError).
-    if (!this._updating) {
-      this.props.onChange.call(this, this.selectize, ...args);
-    }
-  },
-
-  componentDidMount() {
-    this.create();
-  },
-
-  componentWillUnmount() {
-    this.destroy();
-  },
-
-  componentWillUpdate() {
-    this.destroy();
-  },
-
-  componentDidUpdate() {
-    this.create();
-  },
-
-  render() {
-    var opts = {
-        ref: 'select',
-        className: " " + (this.props.className || '')
-    };
-    if (this.props.disabled) {
-      opts.disabled = true;
-    }
-    if (this.props.multiple) {
-      opts.multiple = true;
-    }
-    return (
-      <select {...opts}>
-        {this.props.children}
-      </select>
-    );
-  }
-});
-
-export default Selectize;
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
index ebcdcc74d8..62e2fbb2c5 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
@@ -2,7 +2,7 @@ import React from "react";
 import $ from "jquery";
 import api from "../../api";
 import IndicatorStore from '../../stores/indicatorStore';
-import Selectize from "../../components/selectize";
+import SelectInput from "../../components/selectInput";
 
 import RuleNodeList from "./ruleNodeList";
 
@@ -113,18 +113,21 @@ var RuleEditor = React.createClass({
                    required={true}
                    placeholder="My Rule Name" />
             <hr/>
-            <h6>
-              Every time
-              <Selectize ref="actionMatch"
-                      className={"selectize-inline" + (this.hasError('actionMatch') ? ' error' : '')}
+
+            <div className="node-match-selector">
+              <h6>
+                Every time
+                <SelectInput ref="actionMatch"
+                      className={(this.hasError('actionMatch') ? ' error' : '')}
                       value={actionMatch}
                       required={true}>
-                <option value="all">all</option>
-                <option value="any">any</option>
-                <option value="none">none</option>
-              </Selectize>
-              of these conditions are met:
-            </h6>
+                  <option value="all">all</option>
+                  <option value="any">any</option>
+                  <option value="none">none</option>
+                </SelectInput>
+                of these conditions are met:
+              </h6>
+            </div>
 
             {this.hasError('conditions') &&
               <p className="error">Ensure at least one condition is enabled and all required fields are filled in.</p>
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
index ea33a9a50f..aaf3729400 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
@@ -29,11 +29,11 @@ var RuleNode = React.createClass({
   },
 
   render() {
-    let {id, node} = this.props;
+    let {data, node} = this.props;
     return (
       <tr>
         <td className="rule-form">
-          <input type="hidden" name="id" value={id} />
+          <input type="hidden" name="id" value={data.id} />
           <span ref="html" dangerouslySetInnerHTML={{__html: node.html}} />
         </td>
         <td className="align-right">
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx b/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
index 25bdc9e26b..a5b5cf882e 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
@@ -1,6 +1,6 @@
 import React from "react";
-import Selectize from "../../components/selectize";
 
+import SelectInput from "../../components/selectInput";
 import RuleNode from "./ruleNode";
 
 var RuleNodeList = React.createClass({
@@ -44,7 +44,7 @@ var RuleNodeList = React.createClass({
   render() {
     return (
       <div className={this.props.className}>
-        <table className="actions-list table" style={{marginBottom: '10px'}}>
+        <table className="node-list table" style={{marginBottom: '10px'}}>
           <col />
           <col style={{ textAlign: 'right'}} />
           <tbody>
@@ -58,15 +58,15 @@ var RuleNodeList = React.createClass({
             })}
           </tbody>
         </table>
-        <fieldset>
-          <Selectize onChange={this.onAddRow}>
+        <fieldset className="node-selector">
+          <SelectInput onChange={this.onAddRow}>
             <option key="blank" />
             {this.props.nodes.map((node) => {
               return (
                 <option value={node.id} key={node.id}>{node.label}</option>
               );
             })}
-          </Selectize>
+          </SelectInput>
         </fieldset>
       </div>
     );
diff --git a/src/sentry/static/sentry/less/includes.less b/src/sentry/static/sentry/less/includes.less
index 703399ce78..4366059e91 100644
--- a/src/sentry/static/sentry/less/includes.less
+++ b/src/sentry/static/sentry/less/includes.less
@@ -3,7 +3,6 @@
 @import url("includes/datepicker.less");
 @import url("includes/github.less");
 @import url("includes/select2.less");
-@import url("includes/selectize.less");
 @import url("includes/pygments.less");
 @import url("includes/simple-slider.less");
 @import url("includes/typeahead.less");
diff --git a/src/sentry/static/sentry/less/includes/selectize.less b/src/sentry/static/sentry/less/includes/selectize.less
deleted file mode 100644
index 2c8b1089e7..0000000000
--- a/src/sentry/static/sentry/less/includes/selectize.less
+++ /dev/null
@@ -1,297 +0,0 @@
-// base styles
-
-@selectize-font-family: inherit;
-@selectize-font-smoothing: inherit;
-@selectize-font-size: 14px;
-@selectize-line-height: inherit;
-
-@selectize-color-text: #34343f;
-@selectize-color-border: darken(@trim, 4);
-@selectize-color-highlight: rgba(125,168,208,0.2);
-@selectize-color-input: #fff;
-@selectize-color-input-full: @selectize-color-input;
-@selectize-color-disabled: #fafafa;
-@selectize-color-item: #f2f2f2;
-@selectize-color-item-text: @selectize-color-text;
-@selectize-color-item-border: #d0d0d0;
-@selectize-color-item-active: #e8e8e8;
-@selectize-color-item-active-text: @selectize-color-text;
-@selectize-color-item-active-border: #cacaca;
-@selectize-color-dropdown: #fff;
-@selectize-color-dropdown-border: @selectize-color-border;
-@selectize-color-dropdown-border-top: #f0f0f0;
-@selectize-color-dropdown-item-active: #f1f6f7;
-@selectize-color-dropdown-item-active-text: #495c68;
-@selectize-color-dropdown-item-create-text: rgba(red(@selectize-color-text), green(@selectize-color-text), blue(@selectize-color-text), 0.5);
-@selectize-color-dropdown-item-create-active-text: @selectize-color-dropdown-item-active-text;
-@selectize-color-optgroup: @selectize-color-dropdown;
-@selectize-color-optgroup-text: @selectize-color-text;
-@selectize-lighten-disabled-item: 30%;
-@selectize-lighten-disabled-item-text: 30%;
-@selectize-lighten-disabled-item-border: 30%;
-@selectize-opacity-disabled: 0.5;
-
-@selectize-shadow-input: 0 1px 1px rgba(70, 82, 98, 0.06);
-@selectize-shadow-input-focus: none;
-@selectize-border: 1px solid @selectize-color-border;
-@selectize-border-radius: 2px;
-
-@selectize-width-item-border: 0;
-@selectize-max-height-dropdown: 200px;
-
-@selectize-padding-x: 10px;
-@selectize-padding-y: 5px;
-@selectize-padding-item-x: 10px;
-@selectize-padding-item-y: 5px;
-@selectize-padding-dropdown-item-x: @selectize-padding-x;
-@selectize-padding-dropdown-item-y: 3px;
-@selectize-margin-item-x: 3px;
-@selectize-margin-item-y: 3px;
-
-@selectize-arrow-size: 6px;
-@selectize-arrow-color: #808080;
-@selectize-arrow-offset: 10px;
-
-@selectize-caret-margin: 0 2px 0 0;
-@selectize-caret-margin-rtl: 0 4px 0 -2px;
-
-.selectize-border-radius (@radii) {
-  -webkit-border-radius: @radii;
-  -moz-border-radius: @radii;
-  border-radius: @radii;
-}
-.selectize-unselectable () {
-  -webkit-user-select: none;
-  -moz-user-select: none;
-  -ms-user-select: none;
-  user-select: none;
-}
-.selectize-box-shadow (@shadow) {
-  -webkit-box-shadow: @shadow;
-  box-shadow: @shadow;
-}
-.selectize-box-sizing (@type: border-box) {
-  -webkit-box-sizing: @type;
-  -moz-box-sizing: @type;
-  box-sizing: @type;
-}
-.selectize-vertical-gradient (@color-top, @color-bottom) {
-    background-color: mix(@color-top, @color-bottom, 60%);
-    background-image: -moz-linear-gradient(top, @color-top, @color-bottom); // FF 3.6+
-    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@color-top), to(@color-bottom)); // Safari 4+, Chrome 2+
-    background-image: -webkit-linear-gradient(top, @color-top, @color-bottom); // Safari 5.1+, Chrome 10+
-    background-image: -o-linear-gradient(top, @color-top, @color-bottom); // Opera 11.10
-    background-image: linear-gradient(to bottom, @color-top, @color-bottom); // Standard, IE10
-    background-repeat: repeat-x;
-    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@color-top),argb(@color-bottom))); // IE9 and down
-}
-
-.selectize-control {
-  position: relative;
-}
-
-.selectize-dropdown, .selectize-input, .selectize-input input {
-  color: @selectize-color-text;
-  font-family: @selectize-font-family;
-  font-size: @selectize-font-size;
-  line-height: @selectize-line-height;
-  -webkit-font-smoothing: @selectize-font-smoothing;
-}
-
-.selectize-input, .selectize-control.single .selectize-input.input-active {
-  background: @selectize-color-input;
-  cursor: text;
-  display: inline-block;
-}
-
-.selectize-input {
-  border: @selectize-border;
-  padding: @selectize-padding-y @selectize-padding-x @selectize-padding-y;
-  display: inline-block;
-  width: 100%;
-  overflow: hidden;
-  position: relative;
-  z-index: 1;
-  .selectize-box-sizing(border-box);
-  .selectize-box-shadow(@selectize-shadow-input);
-  .selectize-border-radius(@selectize-border-radius);
-
-  .selectize-control.multi &.has-items {
-    @padding-x: @selectize-padding-x;
-    @padding-top: @selectize-padding-y - @selectize-padding-item-y - @selectize-width-item-border;
-    @padding-bottom: @selectize-padding-y - @selectize-padding-item-y - @selectize-margin-item-y - @selectize-width-item-border;
-    padding: @padding-top @padding-x @padding-bottom;
-  }
-
-  &.full {
-    background-color: @selectize-color-input-full;
-  }
-  &.disabled, &.disabled * {
-    cursor: default !important;
-  }
-  &.focus {
-    .selectize-box-shadow(@selectize-shadow-input-focus);
-  }
-  &.dropdown-active {
-    .selectize-border-radius(@selectize-border-radius @selectize-border-radius 0 0);
-  }
-
-  > * {
-    vertical-align: baseline;
-    display: -moz-inline-stack;
-    display: inline-block;
-    zoom: 1;
-    *display: inline;
-  }
-  .selectize-control.multi & > div {
-    cursor: pointer;
-    margin: 0 @selectize-margin-item-x @selectize-margin-item-y 0;
-    padding: @selectize-padding-item-y @selectize-padding-item-x;
-    background: @selectize-color-item;
-    color: @selectize-color-item-text;
-    border: @selectize-width-item-border solid @selectize-color-item-border;
-
-    &.active {
-      background: @selectize-color-item-active;
-      color: @selectize-color-item-active-text;
-      border: @selectize-width-item-border solid @selectize-color-item-active-border;
-    }
-  }
-  .selectize-control.multi &.disabled > div {
-    &, &.active {
-      color: lighten(desaturate(@selectize-color-item-text, 100%), @selectize-lighten-disabled-item-text);
-      background: lighten(desaturate(@selectize-color-item, 100%), @selectize-lighten-disabled-item);
-      border: @selectize-width-item-border solid lighten(desaturate(@selectize-color-item-border, 100%), @selectize-lighten-disabled-item-border);
-    }
-  }
-  > input {
-    padding: 0 !important;
-    min-height: 0 !important;
-    max-height: none !important;
-    max-width: 100% !important;
-    margin: @selectize-caret-margin !important;
-    text-indent: 0 !important;
-    border: 0 none !important;
-    background: none !important;
-    line-height: inherit !important;
-    -webkit-user-select: auto !important;
-    .selectize-box-shadow(none) !important;
-    &:focus { outline: none !important; }
-  }
-}
-
-.selectize-input::after {
-  content: ' ';
-  display: block;
-  clear: left;
-}
-
-.selectize-input.dropdown-active::before {
-  content: ' ';
-  display: block;
-  position: absolute;
-  background: @selectize-color-dropdown-border-top;
-  height: 1px;
-  bottom: 0;
-  left: 0;
-  right: 0;
-}
-
-.error {
-  .selectize-input, .selectize-dropdown {
-    border-color: red;
-  }
-}
-
-.selectize-dropdown {
-  position: absolute !important;
-  z-index: 10;
-  border: @selectize-border;
-  background: @selectize-color-dropdown;
-  margin: -2px 0 0 0;
-  border-top: 0 none;
-  .selectize-box-sizing(border-box);
-  // .selectize-box-shadow(0 1px 3px rgba(0,0,0,0.1));
-  .selectize-border-radius(0 0 @selectize-border-radius @selectize-border-radius);
-
-  [data-selectable] {
-    cursor: pointer;
-    overflow: hidden;
-    .highlight {
-      background: @selectize-color-highlight;
-      .selectize-border-radius(1px);
-    }
-  }
-  [data-selectable], .optgroup-header {
-    padding: @selectize-padding-dropdown-item-y @selectize-padding-dropdown-item-x;
-  }
-  .optgroup:first-child .optgroup-header {
-    border-top: 0 none;
-  }
-  .optgroup-header {
-    color: @selectize-color-optgroup-text;
-    background: @selectize-color-optgroup;
-    cursor: default;
-  }
-  .active {
-    background-color: @selectize-color-dropdown-item-active;
-    color: @selectize-color-dropdown-item-active-text;
-    &.create {
-      color: @selectize-color-dropdown-item-create-active-text;
-    }
-  }
-  .create {
-    color: @selectize-color-dropdown-item-create-text;
-  }
-}
-
-.selectize-dropdown-content {
-  overflow-y: auto;
-  overflow-x: hidden;
-  max-height: @selectize-max-height-dropdown;
-}
-
-.selectize-control.single .selectize-input {
-  &, input { cursor: pointer; }
-  &.input-active, &.input-active input { cursor: text; }
-
-  &:after {
-    font-family: "sentry-simple";
-    font-size: 16px;
-    content: "\e60f";
-    display: block;
-    position: absolute;
-    top: 32%;
-    right: @selectize-arrow-offset;
-    margin-top: -4px;
-  }
-  &.dropdown-active:after {
-    content: "\e610";
-    margin-top: @selectize-arrow-size * -0.8;
-  }
-}
-
-.selectize-control.rtl {
-  &.single .selectize-input:after {
-    left: @selectize-arrow-offset;
-    right: auto;
-  }
-  .selectize-input > input {
-    margin: @selectize-caret-margin-rtl !important;
-  }
-}
-
-.selectize-control .selectize-input.disabled {
-  opacity: @selectize-opacity-disabled;
-  background-color: @selectize-color-disabled;
-}
-
-.selectize-control.form-control {
-  border: 0;
-  padding: 0;
-  height: auto;
-}
-
-.selectize-dropdown.form-control {
-  padding: 2px 0;
-}
diff --git a/src/sentry/static/sentry/less/project-settings.less b/src/sentry/static/sentry/less/project-settings.less
index 844eb9a2b1..1b5d96c607 100644
--- a/src/sentry/static/sentry/less/project-settings.less
+++ b/src/sentry/static/sentry/less/project-settings.less
@@ -24,35 +24,6 @@
   margin: 0 6px;
 }
 
-.rule-form input[type="text"] + .selectize-control .selectize-input {
-  margin: 0;
-}
-
-.selectize-inline, .rule-form .selectize-control {
-  display: inline-block;
-  padding: 0 6px;
-  margin-bottom: 0 !important;
-  vertical-align: middle;
-
-  .selectize-input {
-    font-size: 90%;
-    padding: 6px 15px 5px 8px;
-    min-width: 70px;
-
-    &:after {
-      top: 46% !important;
-      font-size: 85% !important;
-      right: 6px !important;
-    }
-  }
-
-  .selectize-dropdown {
-    z-index: 5000;
-    padding: 0 !important;
-    font-size: 95%;
-  }
-}
-
 .rules-list {
   h6 {
     margin-bottom: 15px;
@@ -63,11 +34,17 @@
 }
 
 .rules-list, .rule-detail {
-  h6 {
-    font-weight: 600;
-    select {
+  .node-match-selector {
+    .select2-container {
       margin: 0 5px;
+      display: inline-block;
+      width: 100px;
+      max-width: none;
     }
+  }
+
+  h6 {
+    font-weight: 600;
 
     strong {
       padding: 1px 5px;
@@ -107,10 +84,6 @@
     }
   }
 
-  .selectize-control {
-    margin-bottom: 20px;
-  }
-
   .actions {
     padding: 20px;
     border-top: 1px solid lighten(@trim, 4);
@@ -119,9 +92,16 @@
 }
 
 .rule-action-list, .rule-condition-list {
-  .selectize-control {
+  .select2-container {
     max-width: 40%;
   }
+
+  .node-selector .select2-container {
+    width: 100%;
+    max-width: 100%;
+  }
+
+  margin-bottom: 20px;
 }
 
 /**
diff --git a/webpack.config.js b/webpack.config.js
index 7923197465..9c33dd6a07 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -26,7 +26,6 @@ var config = {
       "react-router",
       "react-bootstrap",
       "reflux",
-      "selectize",
       "select2",
       "flot/jquery.flot",
       "flot/jquery.flot.stack",
