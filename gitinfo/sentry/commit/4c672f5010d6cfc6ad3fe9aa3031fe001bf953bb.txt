commit 4c672f5010d6cfc6ad3fe9aa3031fe001bf953bb
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Fri Oct 19 13:42:45 2018 -0700

    Add member_id query (#10159)

diff --git a/src/sentry/api/endpoints/organization_index.py b/src/sentry/api/endpoints/organization_index.py
index 4752f38eb6..625779eca7 100644
--- a/src/sentry/api/endpoints/organization_index.py
+++ b/src/sentry/api/endpoints/organization_index.py
@@ -132,6 +132,12 @@ class OrganizationIndexEndpoint(Endpoint):
                         ])
                     except KeyError:
                         queryset = queryset.none()
+                elif key == 'member_id':
+                    queryset = queryset.filter(
+                        id__in=OrganizationMember.objects.filter(
+                            id__in=value,
+                        ).values('organization'),
+                    )
                 else:
                     queryset = queryset.none()
 
diff --git a/src/sentry/static/sentry/app/actionCreators/organizations.jsx b/src/sentry/static/sentry/app/actionCreators/organizations.jsx
index 95c504bc10..5fba4d7587 100644
--- a/src/sentry/static/sentry/app/actionCreators/organizations.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/organizations.jsx
@@ -60,15 +60,15 @@ export function updateOrganization(org) {
   OrganizationsActions.update(org);
 }
 
-export function fetchOrganizationsByMember(memberId, {setActive}) {
+export function fetchOrganizationByMember(memberId, {loadOrg, setActive}) {
   let api = new Client();
-  let request = api.requestPromise('/organizations/', {
-    query: {
-      member: memberId,
-    },
-  });
+  let request = api.requestPromise(`/organizations/?query=member_id:${memberId}`);
 
   request.then(data => {
+    if (data.length && loadOrg) {
+      OrganizationsStore.add(data[0]);
+    }
+
     if (data.length && setActive) {
       setActiveOrganization(data[0]);
     }
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx
index ca4a750be5..e9eaed7156 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx
@@ -12,7 +12,7 @@ import {
 } from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
 import {openRecoveryOptions} from 'app/actionCreators/modal';
-import {fetchOrganizationsByMember} from 'app/actionCreators/organizations';
+import {fetchOrganizationByMember} from 'app/actionCreators/organizations';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
 import CircleIndicator from 'app/components/circleIndicator';
@@ -142,7 +142,8 @@ class AccountSecurityEnroll extends AsyncView {
 
   loadOrganizationContext = () => {
     if (this.invite && this.invite.memberId) {
-      fetchOrganizationsByMember(this.invite.memberId, {
+      fetchOrganizationByMember(this.invite.memberId, {
+        loadOrg: true,
         setActive: true,
       });
     }
diff --git a/tests/sentry/api/endpoints/test_organization_index.py b/tests/sentry/api/endpoints/test_organization_index.py
index 4f11420b6e..17a9fd4360 100644
--- a/tests/sentry/api/endpoints/test_organization_index.py
+++ b/tests/sentry/api/endpoints/test_organization_index.py
@@ -5,7 +5,9 @@ import six
 from django.core.urlresolvers import reverse
 from exam import fixture
 
-from sentry.models import Authenticator, Organization, OrganizationStatus, TotpInterface
+from sentry.models import (
+    Authenticator, Organization, OrganizationMember, OrganizationStatus, TotpInterface
+)
 from sentry.testutils import APITestCase, TwoFactorAPITestCase
 
 
@@ -79,6 +81,25 @@ class OrganizationsListTest(APITestCase):
         assert response.status_code == 200
         assert len(response.data) == 0
 
+    def test_member_id_query(self):
+        org = self.create_organization(owner=self.user)
+        self.create_organization(owner=self.user)
+        self.login_as(user=self.user)
+
+        response = self.client.get(u'{}?member=1'.format(self.path))
+        assert response.status_code == 200
+        assert len(response.data) == 2
+
+        om = OrganizationMember.objects.get(organization=org, user=self.user)
+        response = self.client.get(u'{}?query=member_id:{}'.format(self.path, om.id))
+        assert response.status_code == 200
+        assert len(response.data) == 1
+        assert response.data[0]['id'] == six.text_type(org.id)
+
+        response = self.client.get(u'{}?query=member_id:{}'.format(self.path, om.id + 10))
+        assert response.status_code == 200
+        assert len(response.data) == 0
+
 
 class OrganizationsCreateTest(APITestCase):
     path = '/api/0/organizations/'
