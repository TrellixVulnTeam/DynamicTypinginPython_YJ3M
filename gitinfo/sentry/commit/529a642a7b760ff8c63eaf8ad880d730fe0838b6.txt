commit 529a642a7b760ff8c63eaf8ad880d730fe0838b6
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Oct 18 12:39:56 2019 -0700

    test(acceptance): Generate UI assets before running tests (#15028)
    
    This uses a session fixture to look at all collected tests to determine if any acceptance tests will be run. If so, generate frontend assets using webpack. This *will* run every time a file changes when `py.test` is run with `-f`. This sucks in the case where you are only editing the test cases and not the frontend.

diff --git a/.gitignore b/.gitignore
index 0deb3f4631..1629843438 100644
--- a/.gitignore
+++ b/.gitignore
@@ -43,3 +43,4 @@ coverage.xml
 junit.xml
 *.codestyle.xml
 package-lock.json
+.webpack.meta
diff --git a/build-utils/last-built-plugin.js b/build-utils/last-built-plugin.js
new file mode 100644
index 0000000000..0c25a37541
--- /dev/null
+++ b/build-utils/last-built-plugin.js
@@ -0,0 +1,24 @@
+/*eslint-env node*/
+/*eslint import/no-nodejs-modules:0 */
+const path = require('path');
+const fs = require('fs');
+
+class LastBuiltPlugin {
+  constructor({basePath}) {
+    this.basePath = basePath;
+  }
+
+  apply(compiler) {
+    compiler.hooks.done.tapAsync('LastBuiltPlugin', (_compilation, callback) => {
+      fs.writeFile(
+        path.join(this.basePath, '.webpack.meta'),
+        JSON.stringify({
+          // in seconds
+          built: Math.floor(new Date(new Date().toUTCString()).getTime() / 1000),
+        }),
+        callback
+      );
+    });
+  }
+}
+module.exports = LastBuiltPlugin;
diff --git a/package.json b/package.json
index 4e52b0e470..ea2d9bd87a 100644
--- a/package.json
+++ b/package.json
@@ -183,6 +183,7 @@
     "lint:css": "yarn stylelint --syntax css-in-js 'src/sentry/static/sentry/app/**/*.jsx'",
     "dev": "(yarn check --verify-tree || yarn install --check-files) && sentry devserver",
     "dev-server": "webpack-dev-server",
+    "dev-acceptance": "NO_DEV_SERVER=1 NODE_ENV=development yarn webpack --watch",
     "storybook": "start-storybook -p 9001 -c .storybook",
     "storybook-build": "build-storybook -c .storybook -o .storybook-out && sed -i -e 's/\\/sb_dll/sb_dll/g' .storybook-out/index.html",
     "snapshot": "build-storybook && PERCY_TOKEN=$STORYBOOK_PERCY_TOKEN PERCY_PROJECT=$STORYBOOK_PERCY_PROJECT percy-storybook --widths=1280",
diff --git a/tests/acceptance/conftest.py b/tests/acceptance/conftest.py
new file mode 100644
index 0000000000..b507ba4841
--- /dev/null
+++ b/tests/acceptance/conftest.py
@@ -0,0 +1,60 @@
+from __future__ import absolute_import
+
+import os
+import json
+import subprocess
+import time
+
+
+def pytest_configure(config):
+    """
+    Generate frontend assets before running any acceptance tests
+
+    TODO: There is a bug if you run `py.test` with `-f` -- the built
+    assets will trigger another `py.test` run.
+    """
+
+    # Do not build in CI because tests are run w/ `make test-acceptance` which builds assets
+    # Can also skip with the env var `SKIP_ACCEPTANCE_UI_BUILD`
+    # `CI` is a default env var on Travis CI (see: https://docs.travis-ci.com/user/environment-variables/#default-environment-variables)
+    if os.environ.get("CI") or os.environ.get("SKIP_ACCEPTANCE_UI_BUILD"):
+        return
+
+    try:
+        with open("./.webpack.meta") as f:
+            data = json.load(f)
+
+            # If built within last hour, do not build again
+            last_built = int(time.time()) - data["built"]
+
+            if last_built <= 3600:
+                print (  # noqa: B314
+                    """
+###################
+#
+# Frontend assets last built %d seconds ago, skipping rebuilds for another %d seconds.
+# Delete the file: `.webpack.meta` to rebuild.
+#
+###################
+                """
+                    % (last_built, 3600 - last_built)
+                )
+                return
+    except IOError:
+        pass
+    except Exception:
+        pass
+
+    print (  # noqa: B314
+        """
+###################
+#
+# Running webpack to compile frontend assets - this will take awhile
+#
+###################
+    """
+    )
+
+    subprocess.call(
+        ["yarn", "webpack"], env={"NODE_ENV": "development", "PATH": os.environ["PATH"]}
+    )
diff --git a/webpack.config.js b/webpack.config.js
index b835a11037..4f1be7445e 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -5,6 +5,7 @@ const fs = require('fs');
 
 const {CleanWebpackPlugin} = require('clean-webpack-plugin'); // installed via npm
 const webpack = require('webpack');
+const LastBuiltPlugin = require('./build-utils/last-built-plugin');
 const OptionalLocaleChunkPlugin = require('./build-utils/optional-locale-chunk-plugin');
 const IntegrationDocsFetchPlugin = require('./build-utils/integration-docs-fetch-plugin');
 const ExtractTextPlugin = require('mini-css-extract-plugin');
@@ -28,6 +29,7 @@ const SENTRY_BACKEND_PORT = env.SENTRY_BACKEND_PORT;
 const SENTRY_WEBPACK_PROXY_PORT = env.SENTRY_WEBPACK_PROXY_PORT;
 const USE_HOT_MODULE_RELOAD =
   !IS_PRODUCTION && SENTRY_BACKEND_PORT && SENTRY_WEBPACK_PROXY_PORT;
+const NO_DEV_SERVER = env.NO_DEV_SERVER;
 
 // Deploy previews are built using netlify. We can check if we're in netlifys
 // build process by checking the existance of the PULL_REQUEST env var.
@@ -373,8 +375,12 @@ if (IS_TEST || IS_STORYBOOK) {
   appConfig.resolve.alias['integration-docs-platforms'] = plugin.modulePath;
 }
 
+if (!IS_PRODUCTION) {
+  appConfig.plugins.push(new LastBuiltPlugin({basePath: __dirname}));
+}
+
 // Dev only! Hot module reloading
-if (USE_HOT_MODULE_RELOAD) {
+if (USE_HOT_MODULE_RELOAD && !NO_DEV_SERVER) {
   const backendAddress = `http://localhost:${SENTRY_BACKEND_PORT}/`;
 
   appConfig.plugins.push(new webpack.HotModuleReplacementPlugin());
