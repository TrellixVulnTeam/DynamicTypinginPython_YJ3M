commit 68f0f953159cb60eeff4f19078ff58a4a9540344
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Dec 20 15:54:15 2017 -0800

    feat: Add API endpoint to GET user notifications

diff --git a/src/sentry/api/endpoints/user_notification_details.py b/src/sentry/api/endpoints/user_notification_details.py
new file mode 100644
index 0000000000..4a4850fb20
--- /dev/null
+++ b/src/sentry/api/endpoints/user_notification_details.py
@@ -0,0 +1,43 @@
+from __future__ import absolute_import
+
+from collections import defaultdict
+
+from sentry.api.bases.user import UserEndpoint
+from sentry.models import UserOption
+
+from sentry.api.serializers import serialize, Serializer
+
+from rest_framework.response import Response
+
+
+class UserNotificationsSerializer(Serializer):
+    def get_attrs(self, item_list, user, *args, **kwargs):
+        data = list(UserOption.objects.filter(
+            user__in=item_list,
+            project=None).select_related('user'))
+
+        results = defaultdict(list)
+
+        for uo in data:
+            results[uo.user].append(uo)
+
+        return results
+
+    def serialize(self, obj, attrs, user, *args, **kwargs):
+        data = {option.key: option.value for option in attrs}
+
+        return {
+            'alertEmail': data.get('alert_email'),
+            'deployEmails': data.get('deploy-emails'),
+            'seenReleaseBroadcast': data.get('seen_release_broadcast'),
+            'selfAssignIssue': data.get('self_assign_issue'),
+            'selfNotifications': data.get('self_notifications'),
+            'subscribeByDefault': data.get('subscribe_by_default'),
+            'workflowNotifications': data.get('workflow:notifications'),
+        }
+
+
+class UserNotificationDetailsEndpoint(UserEndpoint):
+    def get(self, request, user):
+        serialized = serialize(user, request.user, UserNotificationsSerializer())
+        return Response(serialized)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 022e6d1a12..f386a1ba4d 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -132,6 +132,7 @@ from .endpoints.user_identity_details import UserIdentityDetailsEndpoint
 from .endpoints.user_index import UserIndexEndpoint
 from .endpoints.user_details import UserDetailsEndpoint
 from .endpoints.user_organizations import UserOrganizationsEndpoint
+from .endpoints.user_notification_details import UserNotificationDetailsEndpoint
 from .endpoints.event_file_committers import EventFileCommittersEndpoint
 from .endpoints.setup_wizard import SetupWizard
 
@@ -192,6 +193,11 @@ urlpatterns = patterns(
         UserOrganizationsEndpoint.as_view(),
         name='sentry-api-0-user-organizations'
     ),
+    url(
+        r'^users/(?P<user_id>[^\/]+)/notifications/$',
+        UserNotificationDetailsEndpoint.as_view(),
+        name='sentry-api-0-user-notifications'
+    ),
 
     # Organizations
     url(
diff --git a/tests/sentry/api/endpoints/test_user_notifications.py b/tests/sentry/api/endpoints/test_user_notifications.py
new file mode 100644
index 0000000000..08963d4224
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_user_notifications.py
@@ -0,0 +1,52 @@
+from __future__ import absolute_import
+
+from sentry.testutils import APITestCase
+
+from django.core.urlresolvers import reverse
+
+
+class UserListTest(APITestCase):
+    def test_lookup_self(self):
+        user = self.create_user(email='a@example.com')
+
+        self.login_as(user=user)
+
+        url = reverse(
+            'sentry-api-0-user-notifications', kwargs={
+                'user_id': 'me',
+            }
+        )
+        resp = self.client.get(url, format='json')
+
+        assert resp.status_code == 200
+
+    def test_lookup_other_user(self):
+        user_a = self.create_user(email='a@example.com')
+        user_b = self.create_user(email='b@example.com')
+
+        self.login_as(user=user_b)
+
+        url = reverse(
+            'sentry-api-0-user-notifications', kwargs={
+                'user_id': user_a.id
+            }
+        )
+
+        resp = self.client.get(url, format='json')
+
+        assert resp.status_code == 403
+
+    def test_superuser(self):
+        user = self.create_user(email='a@example.com')
+        superuser = self.create_user(email='b@example.com', is_superuser=True)
+
+        self.login_as(user=superuser, superuser=True)
+
+        url = reverse(
+            'sentry-api-0-user-notifications', kwargs={
+                'user_id': user.id,
+            }
+        )
+        resp = self.client.get(url, format='json')
+
+        assert resp.status_code == 200
