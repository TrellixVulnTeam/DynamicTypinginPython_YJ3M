commit ab6627ebc17bbc992327cfb916a64660df14b560
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Feb 22 13:52:23 2013 -0800

    Remove useless serialization bits

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index ef46301ef6..82312b96cd 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -98,7 +98,6 @@ class Interface(object):
     display_score = None
 
     def __init__(self, **kwargs):
-        self.attrs = kwargs.keys()
         self.__dict__.update(kwargs)
 
     def __eq__(self, other):
@@ -108,7 +107,6 @@ class Interface(object):
 
     def __setstate__(self, data):
         kwargs = self.unserialize(data)
-        self.attrs = kwargs.keys()
         self.__dict__.update(kwargs)
 
     def __getstate__(self):
@@ -121,7 +119,7 @@ class Interface(object):
         return data
 
     def serialize(self):
-        return dict((k, self.__dict__[k]) for k in self.attrs)
+        return vars(self)
 
     def get_composite_hash(self, interfaces):
         return self.get_hash()
@@ -236,7 +234,7 @@ class Query(Interface):
         }
 
 
-class Frame(object):
+class Frame(Interface):
     def __init__(self, abs_path=None, filename=None, lineno=None, colno=None, in_app=False,
                  context_line=None, pre_context=(), post_context=(), vars=None,
                  module=None, function=None, data=None):
@@ -437,16 +435,8 @@ class Stacktrace(Interface):
             assert frame.is_valid()
 
     def serialize(self):
-        frames = []
-        for f in self.frames:
-            # compatibility with old serialization
-            if isinstance(f, Frame):
-                frames.append(vars(f))
-            else:
-                frames.append(f)
-
         return {
-            'frames': frames,
+            'frames': [f.serialize() for f in self.frames],
         }
 
     def unserialize(self, data):
diff --git a/tests/sentry/interfaces/tests.py b/tests/sentry/interfaces/tests.py
index 88746ba6e0..defc7705f8 100644
--- a/tests/sentry/interfaces/tests.py
+++ b/tests/sentry/interfaces/tests.py
@@ -3,7 +3,6 @@
 from __future__ import absolute_import
 
 import mock
-import pickle
 
 from sentry.interfaces import Interface, get_context
 from sentry.models import Event
@@ -23,14 +22,6 @@ class InterfaceTest(InterfaceBase):
     def interface(self):
         return Interface(foo=1)
 
-    def test_init_sets_attrs(self):
-        assert self.interface.attrs == ['foo']
-
-    def test_setstate_sets_attrs(self):
-        data = pickle.dumps(self.interface)
-        obj = pickle.loads(data)
-        assert obj.attrs == ['foo']
-
     def test_to_html_default(self):
         assert self.interface.to_html(self.event) == ''
 
