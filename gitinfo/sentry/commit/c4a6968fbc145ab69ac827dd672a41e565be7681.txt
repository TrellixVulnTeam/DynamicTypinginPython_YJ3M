commit c4a6968fbc145ab69ac827dd672a41e565be7681
Author: Jess MacQueen <jess@getsentry.com>
Date:   Thu Aug 4 18:41:07 2016 -0700

    use group.stale instead of a special plugin group action

diff --git a/src/sentry/static/sentry/app/actions/groupActions.jsx b/src/sentry/static/sentry/app/actions/groupActions.jsx
index 8e11b7b34a..2a0ab116a8 100644
--- a/src/sentry/static/sentry/app/actions/groupActions.jsx
+++ b/src/sentry/static/sentry/app/actions/groupActions.jsx
@@ -16,8 +16,7 @@ let GroupActions = Reflux.createActions([
   'updateSuccess',
   'merge',
   'mergeError',
-  'mergeSuccess',
-  'groupPluginChange'
+  'mergeSuccess'
 ]);
 
 
diff --git a/src/sentry/static/sentry/app/components/group/issuePluginActions.jsx b/src/sentry/static/sentry/app/components/group/issuePluginActions.jsx
index df955ba77f..b366c06bd9 100644
--- a/src/sentry/static/sentry/app/components/group/issuePluginActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/issuePluginActions.jsx
@@ -128,7 +128,7 @@ const IssuePlugin = React.createClass({
     this.api.request(this.getPluginCreateEndpoint(), {
       data: this.state.createFormData,
       success: (data) => {
-        GroupActions.groupPluginChange(this.getGroup().id);
+        GroupActions.updateSuccess(null, [this.getGroup().id], {stale: true});
         AlertActions.addAlert({
           message: t('Successfully created issue.'),
           type: 'success'
@@ -145,7 +145,7 @@ const IssuePlugin = React.createClass({
     this.api.request(this.getPluginLinkEndpoint(), {
       data: this.state.linkFormData,
       success: (data) => {
-        GroupActions.groupPluginChange(this.getGroup().id);
+        GroupActions.updateSuccess(null, [this.getGroup().id], {stale: true});
         AlertActions.addAlert({
           message: t('Successfully linked issue.'),
           type: 'success'
@@ -161,7 +161,7 @@ const IssuePlugin = React.createClass({
   unlinkIssue() {
     this.api.request(this.getPluginUnlinkEndpoint(), {
       success: (data) => {
-        GroupActions.groupPluginChange(this.getGroup().id);
+        GroupActions.updateSuccess(null, [this.getGroup().id], {stale: true});
         AlertActions.addAlert({
           message: t('Successfully unlinked issue.'),
           type: 'success'
diff --git a/src/sentry/static/sentry/app/stores/groupStore.jsx b/src/sentry/static/sentry/app/stores/groupStore.jsx
index dbdc152776..7e500d608d 100644
--- a/src/sentry/static/sentry/app/stores/groupStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupStore.jsx
@@ -336,11 +336,8 @@ const GroupStore = Reflux.createStore({
     });
     this.pendingChanges.remove(changeId);
     this.trigger(new Set(itemIds));
-  },
-
-  onGroupPluginChange(itemId) {
-    this.trigger(new Set([itemId]), true);
   }
+
 });
 
 export default GroupStore;
diff --git a/src/sentry/static/sentry/app/views/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails.jsx
index 28e34c23ed..02c24a0863 100644
--- a/src/sentry/static/sentry/app/views/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails.jsx
@@ -113,12 +113,13 @@ const GroupDetails = React.createClass({
   onGroupChange(itemIds, isPluginChange) {
     let id = this.props.params.groupId;
     if (itemIds.has(id)) {
-      // TODO: do this in a less hacky way
-      if (isPluginChange) {
+      let group = GroupStore.get(id);
+      if (group.stale) {
         this.fetchData();
+        return;
       }
       this.setState({
-        group: GroupStore.get(id),
+        group: group,
       });
     }
   },
