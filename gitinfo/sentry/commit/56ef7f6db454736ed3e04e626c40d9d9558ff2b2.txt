commit 56ef7f6db454736ed3e04e626c40d9d9558ff2b2
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Oct 18 22:27:14 2012 -0700

    Initial backbone code (renders stream, realtime is disabled)

diff --git a/Makefile b/Makefile
index 9886c3b8a4..93beddca2a 100644
--- a/Makefile
+++ b/Makefile
@@ -9,6 +9,7 @@ GLOBAL_JS_MIN = ${STATIC_DIR}/scripts/global.min.js
 BOOTSTRAP_LESS = src/sentry.less
 LESS_COMPRESSOR ?= `which lessc`
 UGLIFY_JS ?= `which uglifyjs`
+COFFEE ?= `which coffee`
 WATCHR ?= `which watchr`
 
 build: static locale
@@ -25,7 +26,7 @@ locale:
 # Build less files
 #
 
-static:
+static: coffee
 	@lessc ${BOOTSTRAP_LESS} > ${GLOBAL_CSS};
 	@lessc ${BOOTSTRAP_LESS} > ${GLOBAL_CSS_MIN} --compress;
 	@cat ${STATIC_DIR}/scripts/sentry.core.js ${STATIC_DIR}/scripts/sentry.realtime.js ${STATIC_DIR}/scripts/sentry.charts.js ${STATIC_DIR}/scripts/sentry.notifications.js ${STATIC_DIR}/scripts/sentry.stream.js > ${GLOBAL_JS};
@@ -34,6 +35,10 @@ static:
 	@uglifyjs -nc ${BOOTSTRAP_JS} > ${BOOTSTRAP_JS_MIN};
 	@echo "Static assets successfully built! - `date`";
 
+
+coffee:
+	@coffee --join ${STATIC_DIR}/scripts/sentry/app.js -c ${STATIC_DIR}/scripts/sentry/*.coffee
+	@echo "Coffe script assets successfully built! - `date`";
 #
 # Watch less files
 #
@@ -41,7 +46,13 @@ static:
 watch:
 	@echo "Watching less files..."; \
 	make static; \
-	watchr -e "watch('src/bootstrap/.*\.less') { system 'make static' }"
+	watchr -e "watch('src/sentry.less') { system 'make static' }"
+
+cwatch:
+	@echo "Watching coffee script files..."; \
+	make coffee
+	coffee --join ${STATIC_DIR}/scripts/sentry/site.js -cw ${STATIC_DIR}/scripts/sentry/*.coffee
+
 
 test:
 	pip install flake8 --use-mirrors
@@ -53,4 +64,4 @@ coverage:
 	coverage html --omit=*/migrations/* -d cover
 
 
-.PHONY: build watch
\ No newline at end of file
+.PHONY: build watch coffee
\ No newline at end of file
diff --git a/src/sentry.less b/src/sentry.less
index 41c04c2eaf..6a7b47b5f9 100644
--- a/src/sentry.less
+++ b/src/sentry.less
@@ -422,7 +422,7 @@ footer {
   }
 }
 
-.events {
+.group-list, .events {
   margin: 0;
   padding: 0;
   list-style: none;
@@ -434,12 +434,12 @@ footer {
   }
 
   &.no-counts {
-    .event {
+    > li {
       padding-left: 20px;
     }
   }
 
-  .event {
+  > li {
     position: relative;
     padding: 15px 20px 15px 100px;
     position: relative;
@@ -579,7 +579,7 @@ footer {
       }
     }
 
-    &.event-small {
+    &.event-small, &.group-small {
       min-height: 30px;
       padding: 10px 10px 10px 60px;
 
diff --git a/src/sentry/static/sentry/scripts/backbone-min.js b/src/sentry/static/sentry/scripts/backbone.min.js
similarity index 99%
rename from src/sentry/static/sentry/scripts/backbone-min.js
rename to src/sentry/static/sentry/scripts/backbone.min.js
index c1c0d4fff2..8669f7dbb4 100644
--- a/src/sentry/static/sentry/scripts/backbone-min.js
+++ b/src/sentry/static/sentry/scripts/backbone.min.js
@@ -35,4 +35,4 @@ f.extend(v.prototype,k,{tagName:"div",$:function(a){return this.$el.find(a)},ini
 for(var b in a){var c=a[b];f.isFunction(c)||(c=this[a[b]]);if(!c)throw Error('Method "'+a[b]+'" does not exist');var d=b.match(F),e=d[1],d=d[2],c=f.bind(c,this),e=e+(".delegateEvents"+this.cid);""===d?this.$el.bind(e,c):this.$el.delegate(d,e,c)}}},undelegateEvents:function(){this.$el.unbind(".delegateEvents"+this.cid)},_configure:function(a){this.options&&(a=f.extend({},this.options,a));for(var b=0,c=w.length;b<c;b++){var d=w[b];a[d]&&(this[d]=a[d])}this.options=a},_ensureElement:function(){if(this.el)this.setElement(this.el,
 !1);else{var a=n(this,"attributes")||{};this.id&&(a.id=this.id);this.className&&(a["class"]=this.className);this.setElement(this.make(this.tagName,a),!1)}}});o.extend=r.extend=u.extend=v.extend=function(a,b){var c=G(this,a,b);c.extend=this.extend;return c};var H={create:"POST",update:"PUT","delete":"DELETE",read:"GET"};g.sync=function(a,b,c){var d=H[a];c||(c={});var e={type:d,dataType:"json"};c.url||(e.url=n(b,"url")||t());if(!c.data&&b&&("create"==a||"update"==a))e.contentType="application/json",
 e.data=JSON.stringify(b.toJSON());g.emulateJSON&&(e.contentType="application/x-www-form-urlencoded",e.data=e.data?{model:e.data}:{});if(g.emulateHTTP&&("PUT"===d||"DELETE"===d))g.emulateJSON&&(e.data._method=d),e.type="POST",e.beforeSend=function(a){a.setRequestHeader("X-HTTP-Method-Override",d)};"GET"!==e.type&&!g.emulateJSON&&(e.processData=!1);return i.ajax(f.extend(e,c))};g.wrapError=function(a,b,c){return function(d,e){e=d===b?e:d;a?a(b,e,c):b.trigger("error",b,e,c)}};var x=function(){},G=function(a,
-b,c){var d;d=b&&b.hasOwnProperty("constructor")?b.constructor:function(){a.apply(this,arguments)};f.extend(d,a);x.prototype=a.prototype;d.prototype=new x;b&&f.extend(d.prototype,b);c&&f.extend(d,c);d.prototype.constructor=d;d.__super__=a.prototype;return d},n=function(a,b){return!a||!a[b]?null:f.isFunction(a[b])?a[b]():a[b]},t=function(){throw Error('A "url" property or function must be specified');}}).call(this);
+b,c){var d;d=b&&b.hasOwnProperty("constructor")?b.constructor:function(){a.apply(this,arguments)};f.extend(d,a);x.prototype=a.prototype;d.prototype=new x;b&&f.extend(d.prototype,b);c&&f.extend(d,c);d.prototype.constructor=d;d.__super__=a.prototype;return d},n=function(a,b){return!a||!a[b]?null:f.isFunction(a[b])?a[b]():a[b]},t=function(){throw Error('A "url" property or function must be specified');}}).call(this);
\ No newline at end of file
diff --git a/src/sentry/static/sentry/scripts/json2.js b/src/sentry/static/sentry/scripts/json2.js
new file mode 100644
index 0000000000..9317ae8bfc
--- /dev/null
+++ b/src/sentry/static/sentry/scripts/json2.js
@@ -0,0 +1,486 @@
+/*
+    json2.js
+    2012-10-08
+
+    Public Domain.
+
+    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
+
+    See http://www.JSON.org/js.html
+
+
+    This code should be minified before deployment.
+    See http://javascript.crockford.com/jsmin.html
+
+    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
+    NOT CONTROL.
+
+
+    This file creates a global JSON object containing two methods: stringify
+    and parse.
+
+        JSON.stringify(value, replacer, space)
+            value       any JavaScript value, usually an object or array.
+
+            replacer    an optional parameter that determines how object
+                        values are stringified for objects. It can be a
+                        function or an array of strings.
+
+            space       an optional parameter that specifies the indentation
+                        of nested structures. If it is omitted, the text will
+                        be packed without extra whitespace. If it is a number,
+                        it will specify the number of spaces to indent at each
+                        level. If it is a string (such as '\t' or '&nbsp;'),
+                        it contains the characters used to indent at each level.
+
+            This method produces a JSON text from a JavaScript value.
+
+            When an object value is found, if the object contains a toJSON
+            method, its toJSON method will be called and the result will be
+            stringified. A toJSON method does not serialize: it returns the
+            value represented by the name/value pair that should be serialized,
+            or undefined if nothing should be serialized. The toJSON method
+            will be passed the key associated with the value, and this will be
+            bound to the value
+
+            For example, this would serialize Dates as ISO strings.
+
+                Date.prototype.toJSON = function (key) {
+                    function f(n) {
+                        // Format integers to have at least two digits.
+                        return n < 10 ? '0' + n : n;
+                    }
+
+                    return this.getUTCFullYear()   + '-' +
+                         f(this.getUTCMonth() + 1) + '-' +
+                         f(this.getUTCDate())      + 'T' +
+                         f(this.getUTCHours())     + ':' +
+                         f(this.getUTCMinutes())   + ':' +
+                         f(this.getUTCSeconds())   + 'Z';
+                };
+
+            You can provide an optional replacer method. It will be passed the
+            key and value of each member, with this bound to the containing
+            object. The value that is returned from your method will be
+            serialized. If your method returns undefined, then the member will
+            be excluded from the serialization.
+
+            If the replacer parameter is an array of strings, then it will be
+            used to select the members to be serialized. It filters the results
+            such that only members with keys listed in the replacer array are
+            stringified.
+
+            Values that do not have JSON representations, such as undefined or
+            functions, will not be serialized. Such values in objects will be
+            dropped; in arrays they will be replaced with null. You can use
+            a replacer function to replace those with JSON values.
+            JSON.stringify(undefined) returns undefined.
+
+            The optional space parameter produces a stringification of the
+            value that is filled with line breaks and indentation to make it
+            easier to read.
+
+            If the space parameter is a non-empty string, then that string will
+            be used for indentation. If the space parameter is a number, then
+            the indentation will be that many spaces.
+
+            Example:
+
+            text = JSON.stringify(['e', {pluribus: 'unum'}]);
+            // text is '["e",{"pluribus":"unum"}]'
+
+
+            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\t');
+            // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'
+
+            text = JSON.stringify([new Date()], function (key, value) {
+                return this[key] instanceof Date ?
+                    'Date(' + this[key] + ')' : value;
+            });
+            // text is '["Date(---current time---)"]'
+
+
+        JSON.parse(text, reviver)
+            This method parses a JSON text to produce an object or array.
+            It can throw a SyntaxError exception.
+
+            The optional reviver parameter is a function that can filter and
+            transform the results. It receives each of the keys and values,
+            and its return value is used instead of the original value.
+            If it returns what it received, then the structure is not modified.
+            If it returns undefined then the member is deleted.
+
+            Example:
+
+            // Parse the text. Values that look like ISO date strings will
+            // be converted to Date objects.
+
+            myData = JSON.parse(text, function (key, value) {
+                var a;
+                if (typeof value === 'string') {
+                    a =
+/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
+                    if (a) {
+                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
+                            +a[5], +a[6]));
+                    }
+                }
+                return value;
+            });
+
+            myData = JSON.parse('["Date(09/09/2001)"]', function (key, value) {
+                var d;
+                if (typeof value === 'string' &&
+                        value.slice(0, 5) === 'Date(' &&
+                        value.slice(-1) === ')') {
+                    d = new Date(value.slice(5, -1));
+                    if (d) {
+                        return d;
+                    }
+                }
+                return value;
+            });
+
+
+    This is a reference implementation. You are free to copy, modify, or
+    redistribute.
+*/
+
+/*jslint evil: true, regexp: true */
+
+/*members "", "\b", "\t", "\n", "\f", "\r", "\"", JSON, "\\", apply,
+    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,
+    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,
+    lastIndex, length, parse, prototype, push, replace, slice, stringify,
+    test, toJSON, toString, valueOf
+*/
+
+
+// Create a JSON object only if one does not already exist. We create the
+// methods in a closure to avoid creating global variables.
+
+if (typeof JSON !== 'object') {
+    JSON = {};
+}
+
+(function () {
+    'use strict';
+
+    function f(n) {
+        // Format integers to have at least two digits.
+        return n < 10 ? '0' + n : n;
+    }
+
+    if (typeof Date.prototype.toJSON !== 'function') {
+
+        Date.prototype.toJSON = function (key) {
+
+            return isFinite(this.valueOf())
+                ? this.getUTCFullYear()     + '-' +
+                    f(this.getUTCMonth() + 1) + '-' +
+                    f(this.getUTCDate())      + 'T' +
+                    f(this.getUTCHours())     + ':' +
+                    f(this.getUTCMinutes())   + ':' +
+                    f(this.getUTCSeconds())   + 'Z'
+                : null;
+        };
+
+        String.prototype.toJSON      =
+            Number.prototype.toJSON  =
+            Boolean.prototype.toJSON = function (key) {
+                return this.valueOf();
+            };
+    }
+
+    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
+        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
+        gap,
+        indent,
+        meta = {    // table of character substitutions
+            '\b': '\\b',
+            '\t': '\\t',
+            '\n': '\\n',
+            '\f': '\\f',
+            '\r': '\\r',
+            '"' : '\\"',
+            '\\': '\\\\'
+        },
+        rep;
+
+
+    function quote(string) {
+
+// If the string contains no control characters, no quote characters, and no
+// backslash characters, then we can safely slap some quotes around it.
+// Otherwise we must also replace the offending characters with safe escape
+// sequences.
+
+        escapable.lastIndex = 0;
+        return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
+            var c = meta[a];
+            return typeof c === 'string'
+                ? c
+                : '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
+        }) + '"' : '"' + string + '"';
+    }
+
+
+    function str(key, holder) {
+
+// Produce a string from holder[key].
+
+        var i,          // The loop counter.
+            k,          // The member key.
+            v,          // The member value.
+            length,
+            mind = gap,
+            partial,
+            value = holder[key];
+
+// If the value has a toJSON method, call it to obtain a replacement value.
+
+        if (value && typeof value === 'object' &&
+                typeof value.toJSON === 'function') {
+            value = value.toJSON(key);
+        }
+
+// If we were called with a replacer function, then call the replacer to
+// obtain a replacement value.
+
+        if (typeof rep === 'function') {
+            value = rep.call(holder, key, value);
+        }
+
+// What happens next depends on the value's type.
+
+        switch (typeof value) {
+        case 'string':
+            return quote(value);
+
+        case 'number':
+
+// JSON numbers must be finite. Encode non-finite numbers as null.
+
+            return isFinite(value) ? String(value) : 'null';
+
+        case 'boolean':
+        case 'null':
+
+// If the value is a boolean or null, convert it to a string. Note:
+// typeof null does not produce 'null'. The case is included here in
+// the remote chance that this gets fixed someday.
+
+            return String(value);
+
+// If the type is 'object', we might be dealing with an object or an array or
+// null.
+
+        case 'object':
+
+// Due to a specification blunder in ECMAScript, typeof null is 'object',
+// so watch out for that case.
+
+            if (!value) {
+                return 'null';
+            }
+
+// Make an array to hold the partial results of stringifying this object value.
+
+            gap += indent;
+            partial = [];
+
+// Is the value an array?
+
+            if (Object.prototype.toString.apply(value) === '[object Array]') {
+
+// The value is an array. Stringify every element. Use null as a placeholder
+// for non-JSON values.
+
+                length = value.length;
+                for (i = 0; i < length; i += 1) {
+                    partial[i] = str(i, value) || 'null';
+                }
+
+// Join all of the elements together, separated with commas, and wrap them in
+// brackets.
+
+                v = partial.length === 0
+                    ? '[]'
+                    : gap
+                    ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']'
+                    : '[' + partial.join(',') + ']';
+                gap = mind;
+                return v;
+            }
+
+// If the replacer is an array, use it to select the members to be stringified.
+
+            if (rep && typeof rep === 'object') {
+                length = rep.length;
+                for (i = 0; i < length; i += 1) {
+                    if (typeof rep[i] === 'string') {
+                        k = rep[i];
+                        v = str(k, value);
+                        if (v) {
+                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
+                        }
+                    }
+                }
+            } else {
+
+// Otherwise, iterate through all of the keys in the object.
+
+                for (k in value) {
+                    if (Object.prototype.hasOwnProperty.call(value, k)) {
+                        v = str(k, value);
+                        if (v) {
+                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
+                        }
+                    }
+                }
+            }
+
+// Join all of the member texts together, separated with commas,
+// and wrap them in braces.
+
+            v = partial.length === 0
+                ? '{}'
+                : gap
+                ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}'
+                : '{' + partial.join(',') + '}';
+            gap = mind;
+            return v;
+        }
+    }
+
+// If the JSON object does not yet have a stringify method, give it one.
+
+    if (typeof JSON.stringify !== 'function') {
+        JSON.stringify = function (value, replacer, space) {
+
+// The stringify method takes a value and an optional replacer, and an optional
+// space parameter, and returns a JSON text. The replacer can be a function
+// that can replace values, or an array of strings that will select the keys.
+// A default replacer method can be provided. Use of the space parameter can
+// produce text that is more easily readable.
+
+            var i;
+            gap = '';
+            indent = '';
+
+// If the space parameter is a number, make an indent string containing that
+// many spaces.
+
+            if (typeof space === 'number') {
+                for (i = 0; i < space; i += 1) {
+                    indent += ' ';
+                }
+
+// If the space parameter is a string, it will be used as the indent string.
+
+            } else if (typeof space === 'string') {
+                indent = space;
+            }
+
+// If there is a replacer, it must be a function or an array.
+// Otherwise, throw an error.
+
+            rep = replacer;
+            if (replacer && typeof replacer !== 'function' &&
+                    (typeof replacer !== 'object' ||
+                    typeof replacer.length !== 'number')) {
+                throw new Error('JSON.stringify');
+            }
+
+// Make a fake root object containing our value under the key of ''.
+// Return the result of stringifying the value.
+
+            return str('', {'': value});
+        };
+    }
+
+
+// If the JSON object does not yet have a parse method, give it one.
+
+    if (typeof JSON.parse !== 'function') {
+        JSON.parse = function (text, reviver) {
+
+// The parse method takes a text and an optional reviver function, and returns
+// a JavaScript value if the text is a valid JSON text.
+
+            var j;
+
+            function walk(holder, key) {
+
+// The walk method is used to recursively walk the resulting structure so
+// that modifications can be made.
+
+                var k, v, value = holder[key];
+                if (value && typeof value === 'object') {
+                    for (k in value) {
+                        if (Object.prototype.hasOwnProperty.call(value, k)) {
+                            v = walk(value, k);
+                            if (v !== undefined) {
+                                value[k] = v;
+                            } else {
+                                delete value[k];
+                            }
+                        }
+                    }
+                }
+                return reviver.call(holder, key, value);
+            }
+
+
+// Parsing happens in four stages. In the first stage, we replace certain
+// Unicode characters with escape sequences. JavaScript handles many characters
+// incorrectly, either silently deleting them, or treating them as line endings.
+
+            text = String(text);
+            cx.lastIndex = 0;
+            if (cx.test(text)) {
+                text = text.replace(cx, function (a) {
+                    return '\\u' +
+                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
+                });
+            }
+
+// In the second stage, we run the text against regular expressions that look
+// for non-JSON patterns. We are especially concerned with '()' and 'new'
+// because they can cause invocation, and '=' because it can cause mutation.
+// But just to be safe, we want to reject all unexpected forms.
+
+// We split the second stage into 4 regexp operations in order to work around
+// crippling inefficiencies in IE's and Safari's regexp engines. First we
+// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we
+// replace all simple value tokens with ']' characters. Third, we delete all
+// open brackets that follow a colon or comma or that begin the text. Finally,
+// we look to see that the remaining characters are only whitespace or ']' or
+// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.
+
+            if (/^[\],:{}\s]*$/
+                    .test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')
+                        .replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']')
+                        .replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {
+
+// In the third stage we use the eval function to compile the text into a
+// JavaScript structure. The '{' operator is subject to a syntactic ambiguity
+// in JavaScript: it can begin a block or an object literal. We wrap the text
+// in parens to eliminate the ambiguity.
+
+                j = eval('(' + text + ')');
+
+// In the optional fourth stage, we recursively walk the new structure, passing
+// each name/value pair to a reviver function for possible transformation.
+
+                return typeof reviver === 'function'
+                    ? walk({'': j}, '')
+                    : j;
+            }
+
+// If the text is not JSON parseable, then a SyntaxError is thrown.
+
+            throw new SyntaxError('JSON.parse');
+        };
+    }
+}());
\ No newline at end of file
diff --git a/src/sentry/static/sentry/scripts/sentry/app.coffee b/src/sentry/static/sentry/scripts/sentry/app.coffee
new file mode 100644
index 0000000000..f98bdbc6a9
--- /dev/null
+++ b/src/sentry/static/sentry/scripts/sentry/app.coffee
@@ -0,0 +1,13 @@
+window.app = app = app || {}
+app.config = app.config || {};
+
+jQuery ->
+
+    app.StreamView = class StreamView extends Backbone.View
+        el: $('body')
+
+        initialize: (data) ->
+
+            group_list = new app.GroupListView
+                id: 'event_list'
+                members: data.groups
diff --git a/src/sentry/static/sentry/scripts/sentry/app.js b/src/sentry/static/sentry/scripts/sentry/app.js
new file mode 100644
index 0000000000..c5d8b64ebc
--- /dev/null
+++ b/src/sentry/static/sentry/scripts/sentry/app.js
@@ -0,0 +1,236 @@
+// Generated by CoffeeScript 1.3.3
+(function() {
+  var app,
+    __hasProp = {}.hasOwnProperty,
+    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
+
+  window.app = app = app || {};
+
+  app.config = app.config || {};
+
+  jQuery(function() {
+    var StreamView;
+    return app.StreamView = StreamView = (function(_super) {
+
+      __extends(StreamView, _super);
+
+      function StreamView() {
+        return StreamView.__super__.constructor.apply(this, arguments);
+      }
+
+      StreamView.prototype.el = $('body');
+
+      StreamView.prototype.initialize = function(data) {
+        var group_list;
+        return group_list = new app.GroupListView({
+          id: 'event_list',
+          members: data.groups
+        });
+      };
+
+      return StreamView;
+
+    })(Backbone.View);
+  });
+
+  window.app = app = app || {};
+
+  jQuery(function() {
+    var GroupList;
+    return app.GroupList = GroupList = (function(_super) {
+
+      __extends(GroupList, _super);
+
+      function GroupList() {
+        return GroupList.__super__.constructor.apply(this, arguments);
+      }
+
+      GroupList.prototype.model = app.Group;
+
+      return GroupList;
+
+    })(Backbone.Collection);
+  });
+
+  window.app = app = app || {};
+
+  jQuery(function() {
+    var Group, Project, User;
+    app.User = User = (function(_super) {
+
+      __extends(User, _super);
+
+      function User() {
+        return User.__super__.constructor.apply(this, arguments);
+      }
+
+      User.prototype.defaults = {
+        name: null,
+        avatar: null
+      };
+
+      User.prototype.isAnonymous = function() {
+        return !(this.id != null);
+      };
+
+      User.prototype.isUser = function(user) {
+        return this.id === user.id;
+      };
+
+      return User;
+
+    })(Backbone.Model);
+    app.Project = Project = (function(_super) {
+
+      __extends(Project, _super);
+
+      function Project() {
+        return Project.__super__.constructor.apply(this, arguments);
+      }
+
+      Project.prototype.defaults = {
+        name: null,
+        slug: null
+      };
+
+      return Project;
+
+    })(Backbone.Model);
+    return app.Group = Group = (function(_super) {
+
+      __extends(Group, _super);
+
+      function Group() {
+        return Group.__super__.constructor.apply(this, arguments);
+      }
+
+      Group.prototype.defaults = {
+        tags: [],
+        versions: [],
+        isBookmarked: false,
+        historicalData: []
+      };
+
+      Group.prototype.getHistorical = function() {
+        if (this.historicalData) {
+          return this.historicalData.join(', ');
+        } else {
+          return '';
+        }
+      };
+
+      return Group;
+
+    })(Backbone.Model);
+  });
+
+  window.app = app = app || {};
+
+  jQuery(function() {
+    var GroupListView, GroupView;
+    app.GroupListView = GroupListView = (function(_super) {
+
+      __extends(GroupListView, _super);
+
+      function GroupListView() {
+        return GroupListView.__super__.constructor.apply(this, arguments);
+      }
+
+      GroupListView.prototype.el = '.group-list';
+
+      GroupListView.prototype.model = app.Group;
+
+      GroupListView.prototype.initialize = function(data) {
+        var inst, obj, _i, _len, _ref, _results;
+        _.bindAll(this);
+        this.collection = new app.GroupList;
+        this.collection.on('add', this.appendMember);
+        this.collection.on('remove', this.clearMember);
+        _ref = data.members;
+        _results = [];
+        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
+          obj = _ref[_i];
+          inst = new this.model(obj);
+          _results.push(this.addMember(inst));
+        }
+        return _results;
+      };
+
+      GroupListView.prototype.changed = function() {
+        return this.trigger("membership");
+      };
+
+      GroupListView.prototype.addMember = function(obj) {
+        if (!this.hasMember(obj)) {
+          return this.collection.add(obj);
+        } else {
+          obj = this.collection.get(obj.id);
+          return obj.set('count', obj.get("count"));
+        }
+      };
+
+      GroupListView.prototype.hasMember = function(obj) {
+        if (this.collection.get(obj.id)) {
+          return true;
+        } else {
+          return false;
+        }
+      };
+
+      GroupListView.prototype.removeMember = function(obj) {
+        return this.collection.remove(obj);
+      };
+
+      GroupListView.prototype.appendMember = function(obj) {
+        var out, view;
+        view = new GroupView({
+          model: obj,
+          id: this.id + obj.id
+        });
+        out = view.render();
+        return $('#' + this.id).append(out.el);
+      };
+
+      GroupListView.prototype.clearMember = function(obj) {
+        return $('li[data-id="' + this.id + '"]', el).remove();
+      };
+
+      return GroupListView;
+
+    })(Backbone.View);
+    return app.GroupView = GroupView = (function(_super) {
+
+      __extends(GroupView, _super);
+
+      function GroupView() {
+        return GroupView.__super__.constructor.apply(this, arguments);
+      }
+
+      GroupView.prototype.tagName = 'li';
+
+      GroupView.prototype.className = 'group';
+
+      GroupView.prototype.template = _.template($('#group-template').html());
+
+      GroupView.prototype.initialize = function() {
+        _.bindAll(this);
+        return this.model.on("change:count", this.updateCount);
+      };
+
+      GroupView.prototype.render = function() {
+        this.$el.html(this.template({
+          model: this.model
+        }));
+        return this;
+      };
+
+      GroupView.prototype.updateCount = function(obj) {
+        return $('.count span', this.$el).text(this.model.get("count"));
+      };
+
+      return GroupView;
+
+    })(Backbone.View);
+  });
+
+}).call(this);
diff --git a/src/sentry/static/sentry/scripts/sentry/collections.coffee b/src/sentry/static/sentry/scripts/sentry/collections.coffee
new file mode 100644
index 0000000000..175e973d9b
--- /dev/null
+++ b/src/sentry/static/sentry/scripts/sentry/collections.coffee
@@ -0,0 +1,7 @@
+window.app = app = app || {}
+
+jQuery ->
+
+    app.GroupList = class GroupList extends Backbone.Collection
+
+        model: app.Group
diff --git a/src/sentry/static/sentry/scripts/sentry/collections.js b/src/sentry/static/sentry/scripts/sentry/collections.js
index 865aab63b9..a4a1f797fd 100644
--- a/src/sentry/static/sentry/scripts/sentry/collections.js
+++ b/src/sentry/static/sentry/scripts/sentry/collections.js
@@ -1,10 +1,21 @@
-(function(){
+// Generated by CoffeeScript 1.3.3
+(function() {
+  var GroupList,
+    __hasProp = {}.hasOwnProperty,
+    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
 
-    window.EventList = Backbone.Collection.extend({
-        model: Event,
-        comparator: function(event){
-            return event.get('score');
-        }
-    });
+  GroupList = (function(_super) {
 
-}());
\ No newline at end of file
+    __extends(GroupList, _super);
+
+    function GroupList() {
+      return GroupList.__super__.constructor.apply(this, arguments);
+    }
+
+    GroupList.prototype.model = Group;
+
+    return GroupList;
+
+  })(Backbone.Collection);
+
+}).call(this);
diff --git a/src/sentry/static/sentry/scripts/sentry/models.coffee b/src/sentry/static/sentry/scripts/sentry/models.coffee
new file mode 100644
index 0000000000..fe7661a1ab
--- /dev/null
+++ b/src/sentry/static/sentry/scripts/sentry/models.coffee
@@ -0,0 +1,35 @@
+window.app = app = app || {}
+
+jQuery ->
+
+    app.User = class User extends Backbone.Model
+
+        defaults:
+            name: null
+            avatar: null
+
+        isAnonymous: ->
+            not @id?
+
+        isUser: (user) ->
+            @id == user.id
+
+    app.Project = class Project extends Backbone.Model
+
+        defaults:
+            name: null
+            slug: null
+
+    app.Group = class Group extends Backbone.Model
+
+        defaults:
+            tags: []
+            versions: []
+            isBookmarked: false
+            historicalData: []
+
+        getHistoricalAsString: ->
+            if @historicalData then @historicalData.join(', ') else ''
+
+        getLevelClassName: ->
+            'level-' + @level
\ No newline at end of file
diff --git a/src/sentry/static/sentry/scripts/sentry/models.js b/src/sentry/static/sentry/scripts/sentry/models.js
index 7806171842..b57b782f24 100644
--- a/src/sentry/static/sentry/scripts/sentry/models.js
+++ b/src/sentry/static/sentry/scripts/sentry/models.js
@@ -1,16 +1,80 @@
-(function(){
-
-  window.Event = Backbone.Model.extend({
-  
-    toggle: function() {
-      this.save({done: !this.get("done")});
-    },
-
-    // Remove this Todo from *localStorage*, deleting its view.
-    clear: function() {
-      this.destroy();
-      $(this.view.el).dispose();
+// Generated by CoffeeScript 1.3.3
+(function() {
+  var Group, Project, User,
+    __hasProp = {}.hasOwnProperty,
+    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
+
+  User = (function(_super) {
+
+    __extends(User, _super);
+
+    function User() {
+      return User.__super__.constructor.apply(this, arguments);
     }
-  
-  });
-}());
\ No newline at end of file
+
+    User.prototype.defaults = {
+      name: null,
+      avatar: null
+    };
+
+    User.prototype.isAnonymous = function() {
+      return !(this.id != null);
+    };
+
+    User.prototype.isUser = function(user) {
+      return this.id === user.id;
+    };
+
+    return User;
+
+  })(Backbone.Model);
+
+  Project = (function(_super) {
+
+    __extends(Project, _super);
+
+    function Project() {
+      return Project.__super__.constructor.apply(this, arguments);
+    }
+
+    Project.prototype.defaults = {
+      name: null,
+      slug: null
+    };
+
+    return Project;
+
+  })(Backbone.Model);
+
+  Group = (function(_super) {
+
+    __extends(Group, _super);
+
+    function Group() {
+      return Group.__super__.constructor.apply(this, arguments);
+    }
+
+    Group.prototype.defaults = {
+      message: null,
+      count: 0,
+      levelName: null,
+      isResolved: false
+    };
+
+    Group.prototype.title = function() {
+      if (this.view) {
+        return this.view;
+      } else {
+        return label;
+      }
+    };
+
+    Group.prototype.label = function() {
+      return this.message;
+    };
+
+    return Group;
+
+  })(Backbone.Model);
+
+}).call(this);
diff --git a/src/sentry/static/sentry/scripts/sentry/site.js b/src/sentry/static/sentry/scripts/sentry/site.js
new file mode 100644
index 0000000000..33834cee96
--- /dev/null
+++ b/src/sentry/static/sentry/scripts/sentry/site.js
@@ -0,0 +1,254 @@
+// Generated by CoffeeScript 1.3.3
+(function() {
+  var app,
+    __hasProp = {}.hasOwnProperty,
+    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
+
+  window.app = app = app || {};
+
+  app.config = app.config || {};
+
+  jQuery(function() {
+    var StreamView;
+    return app.StreamView = StreamView = (function(_super) {
+
+      __extends(StreamView, _super);
+
+      function StreamView() {
+        return StreamView.__super__.constructor.apply(this, arguments);
+      }
+
+      StreamView.prototype.el = $('body');
+
+      StreamView.prototype.initialize = function(data) {
+        var group_list;
+        return group_list = new app.GroupListView({
+          id: 'event_list',
+          members: data.groups
+        });
+      };
+
+      return StreamView;
+
+    })(Backbone.View);
+  });
+
+  window.app = app = app || {};
+
+  jQuery(function() {
+    var GroupList;
+    return app.GroupList = GroupList = (function(_super) {
+
+      __extends(GroupList, _super);
+
+      function GroupList() {
+        return GroupList.__super__.constructor.apply(this, arguments);
+      }
+
+      GroupList.prototype.model = app.Group;
+
+      return GroupList;
+
+    })(Backbone.Collection);
+  });
+
+  window.app = app = app || {};
+
+  jQuery(function() {
+    var Group, Project, User;
+    app.User = User = (function(_super) {
+
+      __extends(User, _super);
+
+      function User() {
+        return User.__super__.constructor.apply(this, arguments);
+      }
+
+      User.prototype.defaults = {
+        name: null,
+        avatar: null
+      };
+
+      User.prototype.isAnonymous = function() {
+        return !(this.id != null);
+      };
+
+      User.prototype.isUser = function(user) {
+        return this.id === user.id;
+      };
+
+      return User;
+
+    })(Backbone.Model);
+    app.Project = Project = (function(_super) {
+
+      __extends(Project, _super);
+
+      function Project() {
+        return Project.__super__.constructor.apply(this, arguments);
+      }
+
+      Project.prototype.defaults = {
+        name: null,
+        slug: null
+      };
+
+      return Project;
+
+    })(Backbone.Model);
+    return app.Group = Group = (function(_super) {
+
+      __extends(Group, _super);
+
+      function Group() {
+        return Group.__super__.constructor.apply(this, arguments);
+      }
+
+      Group.prototype.defaults = {
+        tags: [],
+        versions: [],
+        isBookmarked: false,
+        historicalData: []
+      };
+
+      Group.prototype.getHistoricalAsString = function() {
+        if (this.historicalData) {
+          return this.historicalData.join(', ');
+        } else {
+          return '';
+        }
+      };
+
+      Group.prototype.getLevelClassName = function() {
+        return 'level-' + this.level;
+      };
+
+      return Group;
+
+    })(Backbone.Model);
+  });
+
+  window.app = app = app || {};
+
+  jQuery(function() {
+    var GroupListView, GroupView;
+    app.GroupListView = GroupListView = (function(_super) {
+
+      __extends(GroupListView, _super);
+
+      function GroupListView() {
+        return GroupListView.__super__.constructor.apply(this, arguments);
+      }
+
+      GroupListView.prototype.el = '.group-list';
+
+      GroupListView.prototype.model = app.Group;
+
+      GroupListView.prototype.initialize = function(data) {
+        var inst, obj, _i, _len, _ref, _results;
+        _.bindAll(this);
+        this.collection = new app.GroupList;
+        this.collection.on('add', this.appendMember);
+        this.collection.on('remove', this.clearMember);
+        _ref = data.members;
+        _results = [];
+        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
+          obj = _ref[_i];
+          inst = new this.model(obj);
+          _results.push(this.addMember(inst));
+        }
+        return _results;
+      };
+
+      GroupListView.prototype.changed = function() {
+        return this.trigger("membership");
+      };
+
+      GroupListView.prototype.addMember = function(obj) {
+        if (!this.hasMember(obj)) {
+          return this.collection.add(obj);
+        } else {
+          obj = this.collection.get(obj.id);
+          return obj.set('count', obj.get("count"));
+        }
+      };
+
+      GroupListView.prototype.hasMember = function(obj) {
+        if (this.collection.get(obj.id)) {
+          return true;
+        } else {
+          return false;
+        }
+      };
+
+      GroupListView.prototype.removeMember = function(obj) {
+        return this.collection.remove(obj);
+      };
+
+      GroupListView.prototype.appendMember = function(obj) {
+        var out, view;
+        view = new GroupView({
+          model: obj,
+          id: this.id + obj.id
+        });
+        out = view.render();
+        return $('#' + this.id).append(out.el);
+      };
+
+      GroupListView.prototype.clearMember = function(obj) {
+        return $('li[data-id="' + this.id + '"]', el).remove();
+      };
+
+      return GroupListView;
+
+    })(Backbone.View);
+    return app.GroupView = GroupView = (function(_super) {
+
+      __extends(GroupView, _super);
+
+      function GroupView() {
+        return GroupView.__super__.constructor.apply(this, arguments);
+      }
+
+      GroupView.prototype.tagName = 'li';
+
+      GroupView.prototype.className = 'group';
+
+      GroupView.prototype.template = _.template($('#group-template').html());
+
+      GroupView.prototype.initialize = function() {
+        _.bindAll(this);
+        return this.model.on("change:count", this.updateCount);
+      };
+
+      GroupView.prototype.render = function() {
+        var data;
+        data = this.model.toJSON();
+        data.historicalData = this.getHistoricalAsString(this.model);
+        this.$el.html(this.template(data));
+        this.$el.addClass(this.getLevelClassName(this.model));
+        return this;
+      };
+
+      GroupView.prototype.getHistoricalAsString = function(obj) {
+        if (obj.historicalData) {
+          return obj.attributes.historicalData.join(', ');
+        } else {
+          return '';
+        }
+      };
+
+      GroupView.prototype.getLevelClassName = function(obj) {
+        return 'level-' + obj.attributes.levelName;
+      };
+
+      GroupView.prototype.updateCount = function(obj) {
+        return $('.count span', this.$el).text(this.model.get("count"));
+      };
+
+      return GroupView;
+
+    })(Backbone.View);
+  });
+
+}).call(this);
diff --git a/src/sentry/static/sentry/scripts/sentry/views.coffee b/src/sentry/static/sentry/scripts/sentry/views.coffee
new file mode 100644
index 0000000000..c157fb1a76
--- /dev/null
+++ b/src/sentry/static/sentry/scripts/sentry/views.coffee
@@ -0,0 +1,74 @@
+window.app = app = app || {}
+
+jQuery ->
+
+    app.GroupListView = class GroupListView extends Backbone.View
+        el: '.group-list'
+        model: app.Group
+
+        initialize: (data) ->
+
+            _.bindAll @
+
+            @collection = new app.GroupList
+            @collection.on 'add', @appendMember
+            @collection.on 'remove', @clearMember
+            # @collection.on 'add remove', @changed
+
+            for obj in data.members
+                inst = new @model(obj)
+                @addMember(inst)
+
+
+        changed: ->
+            @trigger "membership"
+
+        addMember: (obj) ->
+            if not @hasMember(obj)
+                @collection.add obj
+            else
+                obj = @collection.get obj.id
+                obj.set('count', obj.get "count")
+
+        hasMember: (obj) ->
+            if @collection.get obj.id then true else false
+
+        removeMember: (obj) ->
+            @collection.remove obj
+
+        appendMember: (obj) ->
+            view = new GroupView
+                model: obj
+                id: @id + obj.id
+
+            out = view.render()
+            $('#' + @id).append out.el
+
+        clearMember: (obj) ->
+            $('li[data-id="' + @id + '"]', el).remove()
+
+
+    app.GroupView = class GroupView extends Backbone.View
+        tagName: 'li'
+        className: 'group'
+        template: _.template $('#group-template').html()
+
+        initialize: ->
+            _.bindAll @
+            @model.on "change:count", @updateCount
+
+        render: ->
+            data = @model.toJSON()
+            data.historicalData = @getHistoricalAsString @model
+            @$el.html @template data
+            @$el.addClass @getLevelClassName @model
+            @
+
+        getHistoricalAsString: (obj) ->
+            if obj.historicalData then obj.attributes.historicalData.join ', ' else ''
+
+        getLevelClassName: (obj) ->
+            'level-' + obj.attributes.levelName
+
+        updateCount: (obj) ->
+            $('.count span', this.$el).text @model.get("count")
diff --git a/src/sentry/static/sentry/scripts/sentry/views.js b/src/sentry/static/sentry/scripts/sentry/views.js
index e69de29bb2..c828487262 100644
--- a/src/sentry/static/sentry/scripts/sentry/views.js
+++ b/src/sentry/static/sentry/scripts/sentry/views.js
@@ -0,0 +1,100 @@
+// Generated by CoffeeScript 1.3.3
+(function() {
+  var GroupListView, GroupView,
+    __hasProp = {}.hasOwnProperty,
+    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
+
+  GroupListView = (function(_super) {
+
+    __extends(GroupListView, _super);
+
+    function GroupListView() {
+      return GroupListView.__super__.constructor.apply(this, arguments);
+    }
+
+    GroupListView.prototype.el = '.group-list';
+
+    GroupListView.prototype.initialize = function() {
+      _.bindAll(this);
+      this.collection = new GroupList;
+      this.collection.on('add', this.appendMember);
+      this.collection.on('remove', this.clearMember);
+      return this.collection.on('add remove', this.changed);
+    };
+
+    GroupListView.prototype.changed = function() {
+      return this.trigger("membership");
+    };
+
+    GroupListView.prototype.appendMember = function(obj) {
+      var out, view;
+      view = new GroupView({
+        model: obj,
+        id: this.id + obj.id
+      });
+      out = group_view.render();
+      return $('#' + this.id).append(out.el);
+    };
+
+    GroupListView.prototype.addMember = function(obj) {
+      if (!this.hasMember(obj)) {
+        return this.collection.add(obj);
+      } else {
+        obj = this.collection.get(obj.id);
+        return obj.set('count', obj.get("count"));
+      }
+    };
+
+    GroupListView.prototype.hasMember = function(obj) {
+      if (this.collection.get(obj.id)) {
+        return true;
+      } else {
+        return false;
+      }
+    };
+
+    GroupListView.prototype.removeMember = function(obj) {
+      return this.collection.remove(obj);
+    };
+
+    GroupListView.prototype.clearMember = function(obj) {
+      return $('li[data-id="' + this.id + '"]', el).remove();
+    };
+
+    return GroupListView;
+
+  })(Backbone.View);
+
+  GroupView = GroupView = (function(_super) {
+
+    __extends(GroupView, _super);
+
+    function GroupView() {
+      return GroupView.__super__.constructor.apply(this, arguments);
+    }
+
+    GroupView.prototype.tagName = 'li';
+
+    GroupView.prototype.className = 'group';
+
+    GroupView.prototype.template = _.template($('#group-template').html());
+
+    GroupView.prototype.initialize = function() {
+      _.bindAll(this);
+      return this.model.on("change:count", this.updateCount);
+    };
+
+    GroupView.prototype.render = function() {
+      this.$el.html(this.template(this.model.toJSON()));
+      return this;
+    };
+
+    GroupView.prototype.updateCount = function(obj) {
+      return $('.count span', this.$el).text(this.model.get("count"));
+    };
+
+    return GroupView;
+
+  })(Backbone.View);
+
+}).call(this);
diff --git a/src/sentry/static/sentry/scripts/underscore.min.js b/src/sentry/static/sentry/scripts/underscore.min.js
new file mode 100644
index 0000000000..ad3a39ad82
--- /dev/null
+++ b/src/sentry/static/sentry/scripts/underscore.min.js
@@ -0,0 +1,5 @@
+//     Underscore.js 1.4.2
+//     http://underscorejs.org
+//     (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.
+//     Underscore may be freely distributed under the MIT license.
+(function(){var e=this,t=e._,n={},r=Array.prototype,i=Object.prototype,s=Function.prototype,o=r.push,u=r.slice,a=r.concat,f=r.unshift,l=i.toString,c=i.hasOwnProperty,h=r.forEach,p=r.map,d=r.reduce,v=r.reduceRight,m=r.filter,g=r.every,y=r.some,b=r.indexOf,w=r.lastIndexOf,E=Array.isArray,S=Object.keys,x=s.bind,T=function(e){if(e instanceof T)return e;if(!(this instanceof T))return new T(e);this._wrapped=e};typeof exports!="undefined"?(typeof module!="undefined"&&module.exports&&(exports=module.exports=T),exports._=T):e._=T,T.VERSION="1.4.2";var N=T.each=T.forEach=function(e,t,r){if(e==null)return;if(h&&e.forEach===h)e.forEach(t,r);else if(e.length===+e.length){for(var i=0,s=e.length;i<s;i++)if(t.call(r,e[i],i,e)===n)return}else for(var o in e)if(T.has(e,o)&&t.call(r,e[o],o,e)===n)return};T.map=T.collect=function(e,t,n){var r=[];return e==null?r:p&&e.map===p?e.map(t,n):(N(e,function(e,i,s){r[r.length]=t.call(n,e,i,s)}),r)},T.reduce=T.foldl=T.inject=function(e,t,n,r){var i=arguments.length>2;e==null&&(e=[]);if(d&&e.reduce===d)return r&&(t=T.bind(t,r)),i?e.reduce(t,n):e.reduce(t);N(e,function(e,s,o){i?n=t.call(r,n,e,s,o):(n=e,i=!0)});if(!i)throw new TypeError("Reduce of empty array with no initial value");return n},T.reduceRight=T.foldr=function(e,t,n,r){var i=arguments.length>2;e==null&&(e=[]);if(v&&e.reduceRight===v)return r&&(t=T.bind(t,r)),arguments.length>2?e.reduceRight(t,n):e.reduceRight(t);var s=e.length;if(s!==+s){var o=T.keys(e);s=o.length}N(e,function(u,a,f){a=o?o[--s]:--s,i?n=t.call(r,n,e[a],a,f):(n=e[a],i=!0)});if(!i)throw new TypeError("Reduce of empty array with no initial value");return n},T.find=T.detect=function(e,t,n){var r;return C(e,function(e,i,s){if(t.call(n,e,i,s))return r=e,!0}),r},T.filter=T.select=function(e,t,n){var r=[];return e==null?r:m&&e.filter===m?e.filter(t,n):(N(e,function(e,i,s){t.call(n,e,i,s)&&(r[r.length]=e)}),r)},T.reject=function(e,t,n){var r=[];return e==null?r:(N(e,function(e,i,s){t.call(n,e,i,s)||(r[r.length]=e)}),r)},T.every=T.all=function(e,t,r){t||(t=T.identity);var i=!0;return e==null?i:g&&e.every===g?e.every(t,r):(N(e,function(e,s,o){if(!(i=i&&t.call(r,e,s,o)))return n}),!!i)};var C=T.some=T.any=function(e,t,r){t||(t=T.identity);var i=!1;return e==null?i:y&&e.some===y?e.some(t,r):(N(e,function(e,s,o){if(i||(i=t.call(r,e,s,o)))return n}),!!i)};T.contains=T.include=function(e,t){var n=!1;return e==null?n:b&&e.indexOf===b?e.indexOf(t)!=-1:(n=C(e,function(e){return e===t}),n)},T.invoke=function(e,t){var n=u.call(arguments,2);return T.map(e,function(e){return(T.isFunction(t)?t:e[t]).apply(e,n)})},T.pluck=function(e,t){return T.map(e,function(e){return e[t]})},T.where=function(e,t){return T.isEmpty(t)?[]:T.filter(e,function(e){for(var n in t)if(t[n]!==e[n])return!1;return!0})},T.max=function(e,t,n){if(!t&&T.isArray(e)&&e[0]===+e[0]&&e.length<65535)return Math.max.apply(Math,e);if(!t&&T.isEmpty(e))return-Infinity;var r={computed:-Infinity};return N(e,function(e,i,s){var o=t?t.call(n,e,i,s):e;o>=r.computed&&(r={value:e,computed:o})}),r.value},T.min=function(e,t,n){if(!t&&T.isArray(e)&&e[0]===+e[0]&&e.length<65535)return Math.min.apply(Math,e);if(!t&&T.isEmpty(e))return Infinity;var r={computed:Infinity};return N(e,function(e,i,s){var o=t?t.call(n,e,i,s):e;o<r.computed&&(r={value:e,computed:o})}),r.value},T.shuffle=function(e){var t,n=0,r=[];return N(e,function(e){t=T.random(n++),r[n-1]=r[t],r[t]=e}),r};var k=function(e){return T.isFunction(e)?e:function(t){return t[e]}};T.sortBy=function(e,t,n){var r=k(t);return T.pluck(T.map(e,function(e,t,i){return{value:e,index:t,criteria:r.call(n,e,t,i)}}).sort(function(e,t){var n=e.criteria,r=t.criteria;if(n!==r){if(n>r||n===void 0)return 1;if(n<r||r===void 0)return-1}return e.index<t.index?-1:1}),"value")};var L=function(e,t,n,r){var i={},s=k(t);return N(e,function(t,o){var u=s.call(n,t,o,e);r(i,u,t)}),i};T.groupBy=function(e,t,n){return L(e,t,n,function(e,t,n){(T.has(e,t)?e[t]:e[t]=[]).push(n)})},T.countBy=function(e,t,n){return L(e,t,n,function(e,t,n){T.has(e,t)||(e[t]=0),e[t]++})},T.sortedIndex=function(e,t,n,r){n=n==null?T.identity:k(n);var i=n.call(r,t),s=0,o=e.length;while(s<o){var u=s+o>>>1;n.call(r,e[u])<i?s=u+1:o=u}return s},T.toArray=function(e){return e?e.length===+e.length?u.call(e):T.values(e):[]},T.size=function(e){return e.length===+e.length?e.length:T.keys(e).length},T.first=T.head=T.take=function(e,t,n){return t!=null&&!n?u.call(e,0,t):e[0]},T.initial=function(e,t,n){return u.call(e,0,e.length-(t==null||n?1:t))},T.last=function(e,t,n){return t!=null&&!n?u.call(e,Math.max(e.length-t,0)):e[e.length-1]},T.rest=T.tail=T.drop=function(e,t,n){return u.call(e,t==null||n?1:t)},T.compact=function(e){return T.filter(e,function(e){return!!e})};var A=function(e,t,n){return N(e,function(e){T.isArray(e)?t?o.apply(n,e):A(e,t,n):n.push(e)}),n};T.flatten=function(e,t){return A(e,t,[])},T.without=function(e){return T.difference(e,u.call(arguments,1))},T.uniq=T.unique=function(e,t,n,r){var i=n?T.map(e,n,r):e,s=[],o=[];return N(i,function(n,r){if(t?!r||o[o.length-1]!==n:!T.contains(o,n))o.push(n),s.push(e[r])}),s},T.union=function(){return T.uniq(a.apply(r,arguments))},T.intersection=function(e){var t=u.call(arguments,1);return T.filter(T.uniq(e),function(e){return T.every(t,function(t){return T.indexOf(t,e)>=0})})},T.difference=function(e){var t=a.apply(r,u.call(arguments,1));return T.filter(e,function(e){return!T.contains(t,e)})},T.zip=function(){var e=u.call(arguments),t=T.max(T.pluck(e,"length")),n=new Array(t);for(var r=0;r<t;r++)n[r]=T.pluck(e,""+r);return n},T.object=function(e,t){var n={};for(var r=0,i=e.length;r<i;r++)t?n[e[r]]=t[r]:n[e[r][0]]=e[r][1];return n},T.indexOf=function(e,t,n){if(e==null)return-1;var r=0,i=e.length;if(n){if(typeof n!="number")return r=T.sortedIndex(e,t),e[r]===t?r:-1;r=n<0?Math.max(0,i+n):n}if(b&&e.indexOf===b)return e.indexOf(t,n);for(;r<i;r++)if(e[r]===t)return r;return-1},T.lastIndexOf=function(e,t,n){if(e==null)return-1;var r=n!=null;if(w&&e.lastIndexOf===w)return r?e.lastIndexOf(t,n):e.lastIndexOf(t);var i=r?n:e.length;while(i--)if(e[i]===t)return i;return-1},T.range=function(e,t,n){arguments.length<=1&&(t=e||0,e=0),n=arguments[2]||1;var r=Math.max(Math.ceil((t-e)/n),0),i=0,s=new Array(r);while(i<r)s[i++]=e,e+=n;return s};var O=function(){};T.bind=function(t,n){var r,i;if(t.bind===x&&x)return x.apply(t,u.call(arguments,1));if(!T.isFunction(t))throw new TypeError;return i=u.call(arguments,2),r=function(){if(this instanceof r){O.prototype=t.prototype;var e=new O,s=t.apply(e,i.concat(u.call(arguments)));return Object(s)===s?s:e}return t.apply(n,i.concat(u.call(arguments)))}},T.bindAll=function(e){var t=u.call(arguments,1);return t.length==0&&(t=T.functions(e)),N(t,function(t){e[t]=T.bind(e[t],e)}),e},T.memoize=function(e,t){var n={};return t||(t=T.identity),function(){var r=t.apply(this,arguments);return T.has(n,r)?n[r]:n[r]=e.apply(this,arguments)}},T.delay=function(e,t){var n=u.call(arguments,2);return setTimeout(function(){return e.apply(null,n)},t)},T.defer=function(e){return T.delay.apply(T,[e,1].concat(u.call(arguments,1)))},T.throttle=function(e,t){var n,r,i,s,o,u,a=T.debounce(function(){o=s=!1},t);return function(){n=this,r=arguments;var f=function(){i=null,o&&(u=e.apply(n,r)),a()};return i||(i=setTimeout(f,t)),s?o=!0:(s=!0,u=e.apply(n,r)),a(),u}},T.debounce=function(e,t,n){var r,i;return function(){var s=this,o=arguments,u=function(){r=null,n||(i=e.apply(s,o))},a=n&&!r;return clearTimeout(r),r=setTimeout(u,t),a&&(i=e.apply(s,o)),i}},T.once=function(e){var t=!1,n;return function(){return t?n:(t=!0,n=e.apply(this,arguments),e=null,n)}},T.wrap=function(e,t){return function(){var n=[e];return o.apply(n,arguments),t.apply(this,n)}},T.compose=function(){var e=arguments;return function(){var t=arguments;for(var n=e.length-1;n>=0;n--)t=[e[n].apply(this,t)];return t[0]}},T.after=function(e,t){return e<=0?t():function(){if(--e<1)return t.apply(this,arguments)}},T.keys=S||function(e){if(e!==Object(e))throw new TypeError("Invalid object");var t=[];for(var n in e)T.has(e,n)&&(t[t.length]=n);return t},T.values=function(e){var t=[];for(var n in e)T.has(e,n)&&t.push(e[n]);return t},T.pairs=function(e){var t=[];for(var n in e)T.has(e,n)&&t.push([n,e[n]]);return t},T.invert=function(e){var t={};for(var n in e)T.has(e,n)&&(t[e[n]]=n);return t},T.functions=T.methods=function(e){var t=[];for(var n in e)T.isFunction(e[n])&&t.push(n);return t.sort()},T.extend=function(e){return N(u.call(arguments,1),function(t){for(var n in t)e[n]=t[n]}),e},T.pick=function(e){var t={},n=a.apply(r,u.call(arguments,1));return N(n,function(n){n in e&&(t[n]=e[n])}),t},T.omit=function(e){var t={},n=a.apply(r,u.call(arguments,1));for(var i in e)T.contains(n,i)||(t[i]=e[i]);return t},T.defaults=function(e){return N(u.call(arguments,1),function(t){for(var n in t)e[n]==null&&(e[n]=t[n])}),e},T.clone=function(e){return T.isObject(e)?T.isArray(e)?e.slice():T.extend({},e):e},T.tap=function(e,t){return t(e),e};var M=function(e,t,n,r){if(e===t)return e!==0||1/e==1/t;if(e==null||t==null)return e===t;e instanceof T&&(e=e._wrapped),t instanceof T&&(t=t._wrapped);var i=l.call(e);if(i!=l.call(t))return!1;switch(i){case"[object String]":return e==String(t);case"[object Number]":return e!=+e?t!=+t:e==0?1/e==1/t:e==+t;case"[object Date]":case"[object Boolean]":return+e==+t;case"[object RegExp]":return e.source==t.source&&e.global==t.global&&e.multiline==t.multiline&&e.ignoreCase==t.ignoreCase}if(typeof e!="object"||typeof t!="object")return!1;var s=n.length;while(s--)if(n[s]==e)return r[s]==t;n.push(e),r.push(t);var o=0,u=!0;if(i=="[object Array]"){o=e.length,u=o==t.length;if(u)while(o--)if(!(u=M(e[o],t[o],n,r)))break}else{var a=e.constructor,f=t.constructor;if(a!==f&&!(T.isFunction(a)&&a instanceof a&&T.isFunction(f)&&f instanceof f))return!1;for(var c in e)if(T.has(e,c)){o++;if(!(u=T.has(t,c)&&M(e[c],t[c],n,r)))break}if(u){for(c in t)if(T.has(t,c)&&!(o--))break;u=!o}}return n.pop(),r.pop(),u};T.isEqual=function(e,t){return M(e,t,[],[])},T.isEmpty=function(e){if(e==null)return!0;if(T.isArray(e)||T.isString(e))return e.length===0;for(var t in e)if(T.has(e,t))return!1;return!0},T.isElement=function(e){return!!e&&e.nodeType===1},T.isArray=E||function(e){return l.call(e)=="[object Array]"},T.isObject=function(e){return e===Object(e)},N(["Arguments","Function","String","Number","Date","RegExp"],function(e){T["is"+e]=function(t){return l.call(t)=="[object "+e+"]"}}),T.isArguments(arguments)||(T.isArguments=function(e){return!!e&&!!T.has(e,"callee")}),typeof /./!="function"&&(T.isFunction=function(e){return typeof e=="function"}),T.isFinite=function(e){return T.isNumber(e)&&isFinite(e)},T.isNaN=function(e){return T.isNumber(e)&&e!=+e},T.isBoolean=function(e){return e===!0||e===!1||l.call(e)=="[object Boolean]"},T.isNull=function(e){return e===null},T.isUndefined=function(e){return e===void 0},T.has=function(e,t){return c.call(e,t)},T.noConflict=function(){return e._=t,this},T.identity=function(e){return e},T.times=function(e,t,n){for(var r=0;r<e;r++)t.call(n,r)},T.random=function(e,t){return t==null&&(t=e,e=0),e+(0|Math.random()*(t-e+1))};var _={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"}};_.unescape=T.invert(_.escape);var D={escape:new RegExp("["+T.keys(_.escape).join("")+"]","g"),unescape:new RegExp("("+T.keys(_.unescape).join("|")+")","g")};T.each(["escape","unescape"],function(e){T[e]=function(t){return t==null?"":(""+t).replace(D[e],function(t){return _[e][t]})}}),T.result=function(e,t){if(e==null)return null;var n=e[t];return T.isFunction(n)?n.call(e):n},T.mixin=function(e){N(T.functions(e),function(t){var n=T[t]=e[t];T.prototype[t]=function(){var e=[this._wrapped];return o.apply(e,arguments),F.call(this,n.apply(T,e))}})};var P=0;T.uniqueId=function(e){var t=P++;return e?e+t:t},T.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var H=/(.)^/,B={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},j=/\\|'|\r|\n|\t|\u2028|\u2029/g;T.template=function(e,t,n){n=T.defaults({},n,T.templateSettings);var r=new RegExp([(n.escape||H).source,(n.interpolate||H).source,(n.evaluate||H).source].join("|")+"|$","g"),i=0,s="__p+='";e.replace(r,function(t,n,r,o,u){s+=e.slice(i,u).replace(j,function(e){return"\\"+B[e]}),s+=n?"'+\n((__t=("+n+"))==null?'':_.escape(__t))+\n'":r?"'+\n((__t=("+r+"))==null?'':__t)+\n'":o?"';\n"+o+"\n__p+='":"",i=u+t.length}),s+="';\n",n.variable||(s="with(obj||{}){\n"+s+"}\n"),s="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+s+"return __p;\n";try{var o=new Function(n.variable||"obj","_",s)}catch(u){throw u.source=s,u}if(t)return o(t,T);var a=function(e){return o.call(this,e,T)};return a.source="function("+(n.variable||"obj")+"){\n"+s+"}",a},T.chain=function(e){return T(e).chain()};var F=function(e){return this._chain?T(e).chain():e};T.mixin(T),N(["pop","push","reverse","shift","sort","splice","unshift"],function(e){var t=r[e];T.prototype[e]=function(){var n=this._wrapped;return t.apply(n,arguments),(e=="shift"||e=="splice")&&n.length===0&&delete n[0],F.call(this,n)}}),N(["concat","join","slice"],function(e){var t=r[e];T.prototype[e]=function(){return F.call(this,t.apply(this._wrapped,arguments))}}),T.extend(T.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}).call(this);
\ No newline at end of file
diff --git a/src/sentry/static/sentry/styles/global.css b/src/sentry/static/sentry/styles/global.css
index 20e2b9629b..8bea6f36d0 100644
--- a/src/sentry/static/sentry/styles/global.css
+++ b/src/sentry/static/sentry/styles/global.css
@@ -5869,22 +5869,26 @@ footer a:hover {
   height: 13px;
   background: url(../images/dashboard/pagination.png) -13px 0;
 }
+.group-list,
 .events {
   margin: 0;
   padding: 0;
   list-style: none;
   border-top: 1px solid #e5e6e7;
 }
+.group-list .empty-result,
 .events .empty-result {
   padding: 15px 20px;
   min-height: 60px;
   /* count height */
 
 }
-.events.no-counts .event {
+.group-list.no-counts > li,
+.events.no-counts > li {
   padding-left: 20px;
 }
-.events .event {
+.group-list > li,
+.events > li {
   position: relative;
   padding: 15px 20px 15px 100px;
   position: relative;
@@ -5894,13 +5898,16 @@ footer a:hover {
   /* count height */
 
 }
-.events .event.with-metadata .message {
+.group-list > li.with-metadata .message,
+.events > li.with-metadata .message {
   padding-right: 124px;
 }
-.events .event.with-metadata .meta {
+.group-list > li.with-metadata .meta,
+.events > li.with-metadata .meta {
   right: 155px;
 }
-.events .event:hover {
+.group-list > li:hover,
+.events > li:hover {
   background-color: #f4fafe;
   background-image: -moz-linear-gradient(top, #f7fbfe, #eff8fd);
   background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#f7fbfe), to(#eff8fd));
@@ -5914,10 +5921,12 @@ footer a:hover {
   -moz-box-shadow: 0 -1px 0 #aec9d7, 1px 0 0 #aec9d7;
   box-shadow: 0 -1px 0 #aec9d7, 1px 0 0 #aec9d7;
 }
-.events .event:hover h3 a {
+.group-list > li:hover h3 a,
+.events > li:hover h3 a {
   color: #12659a;
 }
-.events .event h3 {
+.group-list > li h3,
+.events > li h3 {
   font-family: "proxima nova", "proxima-nova", "heletica-neue", sans-serif;
   margin: 4px 0 0;
   font-size: 20px;
@@ -5926,13 +5935,15 @@ footer a:hover {
   width: 85%;
   overflow: hidden;
 }
-.events .event h3 span {
+.group-list > li h3 span,
+.events > li h3 span {
   margin-left: 10px;
   font-weight: 300;
   padding: 0 5px;
   font-size: 13px;
 }
-.events .event .count {
+.group-list > li .count,
+.events > li .count {
   color: #fff;
   position: absolute;
   left: 20px;
@@ -5949,17 +5960,20 @@ footer a:hover {
   letter-spacing: -1px;
   font-family: "proxima nova", "proxima-nova", "heletica-neue", sans-serif;
 }
-.events .event .message {
+.group-list > li .message,
+.events > li .message {
   margin-bottom: 0;
   font-size: 14px;
   /*font-family: "proxima nova", "proxima-nova", "heletica-neue", sans-serif;*/
 
   padding-right: 24px;
 }
-.events .event .message .tag {
+.group-list > li .message .tag,
+.events > li .message .tag {
   float: right;
 }
-.events .event .tag {
+.group-list > li .tag,
+.events > li .tag {
   margin-left: 5px;
   font-size: 12px;
   -webkit-border-radius: 6px;
@@ -5969,7 +5983,8 @@ footer a:hover {
   padding: 2px 6px;
   color: #aec9d7;
 }
-.events .event .sparkline {
+.group-list > li .sparkline,
+.events > li .sparkline {
   position: absolute;
   right: 40px;
   top: 25px;
@@ -5977,12 +5992,14 @@ footer a:hover {
   width: 100px;
   height: 40px;
 }
-.events .event .meta {
+.group-list > li .meta,
+.events > li .meta {
   position: absolute;
   right: 50px;
   top: 20px;
 }
-.events .event .actions {
+.group-list > li .actions,
+.events > li .actions {
   position: absolute;
   right: 15px;
   top: 20px;
@@ -5990,7 +6007,8 @@ footer a:hover {
   margin: 0;
   padding: 0;
 }
-.events .event .actions li {
+.group-list > li .actions li,
+.events > li .actions li {
   margin-bottom: 12px;
   font-size: 14px;
   line-height: 18px;
@@ -5999,57 +6017,80 @@ footer a:hover {
   width: 16px;
   height: 18px;
 }
-.events .event .actions li > a {
+.group-list > li .actions li > a,
+.events > li .actions li > a {
   color: #AEC9D7;
 }
-.events .event .actions li > a:hover {
+.group-list > li .actions li > a:hover,
+.events > li .actions li > a:hover {
   text-decoration: none;
 }
-.events .event .actions li .checked {
+.group-list > li .actions li .checked,
+.events > li .actions li .checked {
   color: orange;
 }
-.events .event .actions li .disabled {
+.group-list > li .actions li .disabled,
+.events > li .actions li .disabled {
   color: #6d757e;
 }
-.events .event .row_link {
+.group-list > li .row_link,
+.events > li .row_link {
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   position: absolute;
 }
-.events .event.level-info .count {
+.group-list > li.level-info .count,
+.events > li.level-info .count {
   background: #ffa101;
 }
-.events .event.level-warning .count {
+.group-list > li.level-warning .count,
+.events > li.level-warning .count {
   background: #ffa101;
 }
-.events .event.level-error .count {
+.group-list > li.level-error .count,
+.events > li.level-error .count {
   background: #f0431c;
 }
-.events .event.level-fatal .count {
+.group-list > li.level-fatal .count,
+.events > li.level-fatal .count {
   background: #f0431c;
 }
-.events .event.resolved h3 {
+.group-list > li.resolved h3,
+.events > li.resolved h3 {
   text-decoration: line-through;
 }
-.events .event.resolved .count {
+.group-list > li.resolved .count,
+.events > li.resolved .count {
   opacity: 0.5;
   filter: alpha(opacity=50);
 }
-.events .event.event-small {
+.group-list > li.event-small,
+.events > li.event-small,
+.group-list > li.group-small,
+.events > li.group-small {
   min-height: 30px;
   padding: 10px 10px 10px 60px;
 }
-.events .event.event-small h3 {
+.group-list > li.event-small h3,
+.events > li.event-small h3,
+.group-list > li.group-small h3,
+.events > li.group-small h3 {
   margin: 0;
   font-size: 14px;
   line-height: 16px;
 }
-.events .event.event-small .message {
+.group-list > li.event-small .message,
+.events > li.event-small .message,
+.group-list > li.group-small .message,
+.events > li.group-small .message {
   font-size: 12px;
 }
-.events .event.event-small .count {
+.group-list > li.event-small .count,
+.events > li.event-small .count,
+.group-list > li.group-small .count,
+.events > li.group-small .count {
   left: 10px;
   font-size: 12px;
   width: 36px;
@@ -6059,15 +6100,27 @@ footer a:hover {
   -moz-border-radius: 36px;
   border-radius: 36px;
 }
-.events .event.event-small .meta {
+.group-list > li.event-small .meta,
+.events > li.event-small .meta,
+.group-list > li.group-small .meta,
+.events > li.group-small .meta {
   right: 120px;
 }
-.events .event.event-small .sparkline {
+.group-list > li.event-small .sparkline,
+.events > li.event-small .sparkline,
+.group-list > li.group-small .sparkline,
+.events > li.group-small .sparkline {
   right: 10px;
   top: 18px;
 }
-.events .event.event-small .tag,
-.events .event.event-small .meta {
+.group-list > li.event-small .tag,
+.events > li.event-small .tag,
+.group-list > li.group-small .tag,
+.events > li.group-small .tag,
+.group-list > li.event-small .meta,
+.events > li.event-small .meta,
+.group-list > li.group-small .meta,
+.events > li.group-small .meta {
   font-size: 11px;
 }
 label {
diff --git a/src/sentry/static/sentry/styles/global.min.css b/src/sentry/static/sentry/styles/global.min.css
index 22cea9e60b..0c736c2714 100644
--- a/src/sentry/static/sentry/styles/global.min.css
+++ b/src/sentry/static/sentry/styles/global.min.css
@@ -935,33 +935,33 @@ footer a{color:#f4f4f4;font-weight:bold;}footer a:hover{color:#fff;}
 .btn.prev,.btn.next{padding:6px 8px;}
 .btn.prev span{display:block;width:13px;height:13px;background:url(../images/dashboard/pagination.png);}
 .btn.next span{display:block;width:13px;height:13px;background:url(../images/dashboard/pagination.png) -13px 0;}
-.events{margin:0;padding:0;list-style:none;border-top:1px solid #e5e6e7;}.events .empty-result{padding:15px 20px;min-height:60px;}
-.events.no-counts .event{padding-left:20px;}
-.events .event{position:relative;padding:15px 20px 15px 100px;position:relative;border:1px solid #e5e6e7;border-width:0 0 1px 1px;min-height:60px;}.events .event.with-metadata .message{padding-right:124px;}
-.events .event.with-metadata .meta{right:155px;}
-.events .event:hover{background-color:#f4fafe;background-image:-moz-linear-gradient(top, #f7fbfe, #eff8fd);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#f7fbfe), to(#eff8fd));background-image:-webkit-linear-gradient(top, #f7fbfe, #eff8fd);background-image:-o-linear-gradient(top, #f7fbfe, #eff8fd);background-image:linear-gradient(to bottom, #f7fbfe, #eff8fd);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff7fbfe', endColorstr='#ffeff8fd', GradientType=0);border-color:#aec9d7;-webkit-box-shadow:0 -1px 0 #aec9d7, 1px 0 0 #aec9d7;-moz-box-shadow:0 -1px 0 #aec9d7, 1px 0 0 #aec9d7;box-shadow:0 -1px 0 #aec9d7, 1px 0 0 #aec9d7;}.events .event:hover h3 a{color:#12659a;}
-.events .event h3{font-family:"proxima nova","proxima-nova","heletica-neue",sans-serif;margin:4px 0 0;font-size:20px;color:#6d757e;font-weight:normal;width:85%;overflow:hidden;}.events .event h3 span{margin-left:10px;font-weight:300;padding:0 5px;font-size:13px;}
-.events .event .count{color:#fff;position:absolute;left:20px;width:60px;height:60px;background:#cfd3da;-webkit-border-radius:60px;-moz-border-radius:60px;border-radius:60px;line-height:62px;text-align:center;font-size:20px;font-weight:400;letter-spacing:-1px;font-family:"proxima nova","proxima-nova","heletica-neue",sans-serif;}
-.events .event .message{margin-bottom:0;font-size:14px;padding-right:24px;}.events .event .message .tag{float:right;}
-.events .event .tag{margin-left:5px;font-size:12px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;background:#fff;padding:2px 6px;color:#aec9d7;}
-.events .event .sparkline{position:absolute;right:40px;top:25px;display:inline-block;width:100px;height:40px;}
-.events .event .meta{position:absolute;right:50px;top:20px;}
-.events .event .actions{position:absolute;right:15px;top:20px;list-style-type:none;margin:0;padding:0;}.events .event .actions li{margin-bottom:12px;font-size:14px;line-height:18px;text-align:center;display:block;width:16px;height:18px;}.events .event .actions li>a{color:#AEC9D7;}.events .event .actions li>a:hover{text-decoration:none;}
-.events .event .actions li .checked{color:orange;}
-.events .event .actions li .disabled{color:#6d757e;}
-.events .event .row_link{top:0;left:0;width:100%;height:100%;position:absolute;}
-.events .event.level-info .count{background:#ffa101;}
-.events .event.level-warning .count{background:#ffa101;}
-.events .event.level-error .count{background:#f0431c;}
-.events .event.level-fatal .count{background:#f0431c;}
-.events .event.resolved h3{text-decoration:line-through;}
-.events .event.resolved .count{opacity:0.5;filter:alpha(opacity=50);}
-.events .event.event-small{min-height:30px;padding:10px 10px 10px 60px;}.events .event.event-small h3{margin:0;font-size:14px;line-height:16px;}
-.events .event.event-small .message{font-size:12px;}
-.events .event.event-small .count{left:10px;font-size:12px;width:36px;height:36px;line-height:38px;-webkit-border-radius:36px;-moz-border-radius:36px;border-radius:36px;}
-.events .event.event-small .meta{right:120px;}
-.events .event.event-small .sparkline{right:10px;top:18px;}
-.events .event.event-small .tag,.events .event.event-small .meta{font-size:11px;}
+.group-list,.events{margin:0;padding:0;list-style:none;border-top:1px solid #e5e6e7;}.group-list .empty-result,.events .empty-result{padding:15px 20px;min-height:60px;}
+.group-list.no-counts>li,.events.no-counts>li{padding-left:20px;}
+.group-list>li,.events>li{position:relative;padding:15px 20px 15px 100px;position:relative;border:1px solid #e5e6e7;border-width:0 0 1px 1px;min-height:60px;}.group-list>li.with-metadata .message,.events>li.with-metadata .message{padding-right:124px;}
+.group-list>li.with-metadata .meta,.events>li.with-metadata .meta{right:155px;}
+.group-list>li:hover,.events>li:hover{background-color:#f4fafe;background-image:-moz-linear-gradient(top, #f7fbfe, #eff8fd);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#f7fbfe), to(#eff8fd));background-image:-webkit-linear-gradient(top, #f7fbfe, #eff8fd);background-image:-o-linear-gradient(top, #f7fbfe, #eff8fd);background-image:linear-gradient(to bottom, #f7fbfe, #eff8fd);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff7fbfe', endColorstr='#ffeff8fd', GradientType=0);border-color:#aec9d7;-webkit-box-shadow:0 -1px 0 #aec9d7, 1px 0 0 #aec9d7;-moz-box-shadow:0 -1px 0 #aec9d7, 1px 0 0 #aec9d7;box-shadow:0 -1px 0 #aec9d7, 1px 0 0 #aec9d7;}.group-list>li:hover h3 a,.events>li:hover h3 a{color:#12659a;}
+.group-list>li h3,.events>li h3{font-family:"proxima nova","proxima-nova","heletica-neue",sans-serif;margin:4px 0 0;font-size:20px;color:#6d757e;font-weight:normal;width:85%;overflow:hidden;}.group-list>li h3 span,.events>li h3 span{margin-left:10px;font-weight:300;padding:0 5px;font-size:13px;}
+.group-list>li .count,.events>li .count{color:#fff;position:absolute;left:20px;width:60px;height:60px;background:#cfd3da;-webkit-border-radius:60px;-moz-border-radius:60px;border-radius:60px;line-height:62px;text-align:center;font-size:20px;font-weight:400;letter-spacing:-1px;font-family:"proxima nova","proxima-nova","heletica-neue",sans-serif;}
+.group-list>li .message,.events>li .message{margin-bottom:0;font-size:14px;padding-right:24px;}.group-list>li .message .tag,.events>li .message .tag{float:right;}
+.group-list>li .tag,.events>li .tag{margin-left:5px;font-size:12px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;background:#fff;padding:2px 6px;color:#aec9d7;}
+.group-list>li .sparkline,.events>li .sparkline{position:absolute;right:40px;top:25px;display:inline-block;width:100px;height:40px;}
+.group-list>li .meta,.events>li .meta{position:absolute;right:50px;top:20px;}
+.group-list>li .actions,.events>li .actions{position:absolute;right:15px;top:20px;list-style-type:none;margin:0;padding:0;}.group-list>li .actions li,.events>li .actions li{margin-bottom:12px;font-size:14px;line-height:18px;text-align:center;display:block;width:16px;height:18px;}.group-list>li .actions li>a,.events>li .actions li>a{color:#AEC9D7;}.group-list>li .actions li>a:hover,.events>li .actions li>a:hover{text-decoration:none;}
+.group-list>li .actions li .checked,.events>li .actions li .checked{color:orange;}
+.group-list>li .actions li .disabled,.events>li .actions li .disabled{color:#6d757e;}
+.group-list>li .row_link,.events>li .row_link{top:0;left:0;width:100%;height:100%;position:absolute;}
+.group-list>li.level-info .count,.events>li.level-info .count{background:#ffa101;}
+.group-list>li.level-warning .count,.events>li.level-warning .count{background:#ffa101;}
+.group-list>li.level-error .count,.events>li.level-error .count{background:#f0431c;}
+.group-list>li.level-fatal .count,.events>li.level-fatal .count{background:#f0431c;}
+.group-list>li.resolved h3,.events>li.resolved h3{text-decoration:line-through;}
+.group-list>li.resolved .count,.events>li.resolved .count{opacity:0.5;filter:alpha(opacity=50);}
+.group-list>li.event-small,.events>li.event-small,.group-list>li.group-small,.events>li.group-small{min-height:30px;padding:10px 10px 10px 60px;}.group-list>li.event-small h3,.events>li.event-small h3,.group-list>li.group-small h3,.events>li.group-small h3{margin:0;font-size:14px;line-height:16px;}
+.group-list>li.event-small .message,.events>li.event-small .message,.group-list>li.group-small .message,.events>li.group-small .message{font-size:12px;}
+.group-list>li.event-small .count,.events>li.event-small .count,.group-list>li.group-small .count,.events>li.group-small .count{left:10px;font-size:12px;width:36px;height:36px;line-height:38px;-webkit-border-radius:36px;-moz-border-radius:36px;border-radius:36px;}
+.group-list>li.event-small .meta,.events>li.event-small .meta,.group-list>li.group-small .meta,.events>li.group-small .meta{right:120px;}
+.group-list>li.event-small .sparkline,.events>li.event-small .sparkline,.group-list>li.group-small .sparkline,.events>li.group-small .sparkline{right:10px;top:18px;}
+.group-list>li.event-small .tag,.events>li.event-small .tag,.group-list>li.group-small .tag,.events>li.group-small .tag,.group-list>li.event-small .meta,.events>li.event-small .meta,.group-list>li.group-small .meta,.events>li.group-small .meta{font-size:11px;}
 label{font-weight:bold;}
 pre span,code span{display:inline-block;}
 code{border:0;background-color:inherit;color:#666666;}
diff --git a/src/sentry/templates/sentry/groups/group_list.html b/src/sentry/templates/sentry/groups/group_list.html
index 0ff4469644..3fbfe5490b 100644
--- a/src/sentry/templates/sentry/groups/group_list.html
+++ b/src/sentry/templates/sentry/groups/group_list.html
@@ -10,11 +10,13 @@
     {{ block.super }}
     <script>
     {% if has_realtime %}
+        app.config.hasRealtime = {{ hasRealtime|to_json|safe  }};
+        app.config.projectId = {{ project.slug|to_json|safe }};
         Sentry.realtime.config({
             projectId: {{ project.slug|to_json|safe }},
             viewId: {% if view %}{{ view.pk|to_json|safe }}{% else %}null{% endif %}
         })
-        Sentry.realtime.enable();
+        // Sentry.realtime.enable();
     {% endif %}
     </script>
 {% endblock %}
@@ -134,31 +136,9 @@
         </form>
     </div>
 
-    {% if event_list.paginator.objects %}
-        {% handle_before_events request event_list.paginator.objects %}
-        <ul class="events" id="event_list">
-            {% for group, metadata in event_list.paginator.objects|with_metadata:request %}
-                {% include "sentry/partial/_group.html" %}
-            {% endfor %}
-        </ul>
-    {% else %}
-        {% get_project_dsn for request.user from project as project_dsn %}
-        <ul class="events" id="event_list">
-            <li class="empty-result" id="no_messages">
-                <div class="alert alert-block alert-notice">
-                    {% if project_dsn %}
-                        <p>{% trans "To start sending events, configure your client with the following DSN value:" %}</p>
-                        <p><code class="clippy">{{ project_dsn }}</code></p>
-                        <p>{% trans "Choose your platform for quick setup instructions:" %}</p>
-                        {% include "sentry/partial/_client_config.html" %}
-                        <p>{% blocktrans with 'http://sentry.readthedocs.org' as link %}For more information, please see the <a href="{{ link }}">documentation</a>.{% endblocktrans %}</p>
-                    {% else %}
-                        <p>{% trans "No events match your filters." %}</p>
-                    {% endif %}
-                </div>
-            </li>
-        </ul>
-    {% endif %}
+    {% handle_before_events request event_list.paginator.objects %}
+    <ul class="group-list" id="event_list">
+    </ul>
 
     <div class="btn-toolbar">
         <div class="btn-group pull-right">
@@ -167,4 +147,12 @@
         </div>
     </div>
 
+    <script>
+    $(function(){
+        new app.StreamView({
+            groups: {{ event_list.paginator.objects|to_json:request|safe }}
+        });
+    });
+    </script>
+
 {% endblock %}
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index d8f09d31c3..0731393af0 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -33,8 +33,12 @@
         <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.clippy.min.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.flot.min.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.sparkline.min.js" %}"></script>
+        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/json2.js" %}"></script>
+        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/underscore.min.js" %}"></script>
+        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/backbone.min.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/select2/select2.min.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/global.min.js" %}"></script>
+        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/sentry/site.js" %}"></script>
         <script type="text/javascript">
         Sentry.config({
             urlPrefix: {{ URL_PREFIX|to_json|safe }},
@@ -129,5 +133,42 @@
             $('.sparkline').sparkline('html', {enableTagOptions: true});
         });
         </script>
+        <script id="group-template" type="text/template">
+            <div class="count"><span><%= count %></span></div>
+            <div class="details">
+                <h3><a href="<%= permalink %>"><%= title %></a></h3>
+                <p class="message">
+                    <span class="tag tag-logger"><%= logger %></span>
+                    <% _.each(versions, function(version){ %> 
+                        <span class="tag tag-version">{{ version }}</span>
+                    <% }) %>
+                    <% _.each(tags, function(tag){ %> 
+                        <span class="tag">{{ tag }}</span>
+                    <% }) %>
+                    <%= message %>
+                </p>
+                <div class="meta">
+                    <span class="last-seen pretty-date" title="<%= lastSeen %>"><%= Sentry.prettyDate(lastSeen) %></span>
+                    <% if (timeSpent) { %>
+                        <span class="time-spent"><%= timeSpent %></span>
+                    <% } %>
+                </div>
+                <span class="sparkline" sparkwidth="100" sparkheight="40" sparklineColor="#ccc" sparkfillColor="false" sparkspotRadius="0"><!-- <%= historicalData %> --></span>
+                <ul class="actions">
+                    <% if (canResolve) { %>
+                        <li>
+                            <% if (!isResolved) { %>
+                                <a href="#" data-action="resolve" rel="tooltip" title="{% trans "Mark as Resolved" %}">&#10003;</a>
+                            <% } else { %>
+                                <a class="tip checked" rel="tooltip" title="{% trans "Already Resolved" %}">&#10003;</a>
+                            <% } %>
+                        </li>
+                        <li>
+                            <a href="#" data-action="bookmark" class="tip bookmark" rel="tooltip" title="{% trans "Bookmark" %}">&#9733;</a>
+                        </li>
+                    <% } %>
+                </ul>
+            </div>
+        </script>
     </body>
 </html>
diff --git a/src/sentry/templatetags/sentry_helpers.py b/src/sentry/templatetags/sentry_helpers.py
index 896818a4f1..69ff1113e8 100644
--- a/src/sentry/templatetags/sentry_helpers.py
+++ b/src/sentry/templatetags/sentry_helpers.py
@@ -17,7 +17,7 @@ from django.utils.translation import ugettext as _
 from paging.helpers import paginate as paginate_func
 from sentry.conf import settings
 from sentry.models import Group
-from sentry.utils import json
+from sentry.utils.javascript import to_json
 from sentry.utils.strings import truncatechars
 from templatetag_sugar.register import tag
 from templatetag_sugar.parser import Name, Variable, Constant, Optional
@@ -31,6 +31,8 @@ register = template.Library()
 truncatechars = register.filter(stringfilter(truncatechars))
 truncatechars.is_safe = True
 
+to_json = register.filter(to_json)
+
 
 @register.filter
 def pprint(value, break_after=10):
@@ -96,11 +98,6 @@ def num_digits(value):
     return len(str(value))
 
 
-@register.filter
-def to_json(data):
-    return json.dumps(data)
-
-
 @register.filter
 def to_str(data):
     return str(data)
diff --git a/src/sentry/utils/javascript.py b/src/sentry/utils/javascript.py
new file mode 100644
index 0000000000..4e69160c77
--- /dev/null
+++ b/src/sentry/utils/javascript.py
@@ -0,0 +1,56 @@
+"""
+sentry.utils.javascript
+~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2012 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+from django.core.urlresolvers import reverse
+from django.utils.html import escape
+from sentry.constants import STATUS_RESOLVED
+from sentry.models import Group
+from sentry.templatetags.sentry_plugins import get_tags
+from sentry.utils import json
+
+
+def transform(obj, request=None):
+    if isinstance(obj, (list, tuple)):
+        return [transform(o, request=request) for o in obj]
+    elif isinstance(obj, dict):
+        return dict((k, transform(v, request=request)) for k, v in obj.iteritems())
+
+    t = transformers.get(type(obj))
+    if t:
+        return t(obj, request=request)
+    return obj
+
+
+def transform_group(obj, request=None):
+    d = {
+        'id': str(obj.id),
+        'count': str(obj.times_seen),
+        'title': escape(obj.message_top()),
+        'message': escape(obj.error()),
+        'level': obj.level,
+        'levelName': escape(obj.get_level_display()),
+        'logger': escape(obj.logger),
+        'permalink': reverse('sentry-group', args=[obj.project.slug, obj.id]),
+        'versions': list(obj.get_version() or []),
+        'lastSeen': obj.last_seen.isoformat(),
+        'timeSpent': obj.avg_time_spent,
+        'canResolve': request and request.user.is_authenticated(),
+        'isResolved': obj.status == STATUS_RESOLVED,
+    }
+    if request:
+        d['tags'] = list(get_tags(obj, request))
+    return d
+
+
+transformers = {
+    Group: transform_group,
+}
+
+
+def to_json(obj, request=None):
+    result = transform(obj, request=request)
+    return json.dumps(result)
