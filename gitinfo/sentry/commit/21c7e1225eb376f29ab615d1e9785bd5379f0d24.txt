commit 21c7e1225eb376f29ab615d1e9785bd5379f0d24
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Nov 30 15:57:54 2015 -0800

    Automatically tag environment (refs GH-2352)

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index e41c1f6cf7..10a8a6e3e1 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -234,6 +234,7 @@ class EventManager(object):
         data.setdefault('checksum', None)
         data.setdefault('fingerprint', None)
         data.setdefault('platform', None)
+        data.setdefault('environment', None)
         data.setdefault('extra', {})
         data.setdefault('errors', [])
 
@@ -338,6 +339,7 @@ class EventManager(object):
         fingerprint = data.pop('fingerprint', None)
         platform = data.pop('platform', None)
         release = data.pop('release', None)
+        environment = data.pop('environment', None)
 
         if not culprit:
             culprit = generate_culprit(data)
@@ -370,6 +372,8 @@ class EventManager(object):
         if release:
             # TODO(dcramer): we should ensure we create Release objects
             tags.append(('sentry:release', release))
+        if environment:
+            tags.append(('environment', environment))
 
         for plugin in plugins.for_project(project, version=None):
             added_tags = safe_execute(plugin.get_tags, event,
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index bc00468a2a..156b48661e 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -432,6 +432,15 @@ class EventManagerTest(TransactionTestCase):
         ).exists()
         assert 'sentry:user' in dict(event.tags)
 
+    def test_environment(self):
+        manager = EventManager(self.make_event(**{
+            'environment': 'beta',
+        }))
+        manager.normalize()
+        event = manager.save(self.project.id)
+
+        assert dict(event.tags).get('environment') == 'beta'
+
 
 class GetHashesFromEventTest(TestCase):
     @patch('sentry.interfaces.stacktrace.Stacktrace.compute_hashes')
