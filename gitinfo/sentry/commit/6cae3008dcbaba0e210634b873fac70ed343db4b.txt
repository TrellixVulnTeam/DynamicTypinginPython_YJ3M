commit 6cae3008dcbaba0e210634b873fac70ed343db4b
Author: Chris Fuller <cfuller@sentry.io>
Date:   Thu Feb 27 19:24:08 2020 -0500

    fix(workflow): Don't include prewindow in slack aggregate calculation (#17322)
    
    * Don't including prewindow in slack aggregate calculation

diff --git a/src/sentry/incidents/logic.py b/src/sentry/incidents/logic.py
index d0e7c828da..275a657573 100644
--- a/src/sentry/incidents/logic.py
+++ b/src/sentry/incidents/logic.py
@@ -269,11 +269,13 @@ def create_event_stat_snapshot(incident, start, end):
     )
 
 
-def build_incident_query_params(incident, start=None, end=None):
-    return bulk_build_incident_query_params([incident], start=start, end=end)[0]
+def build_incident_query_params(incident, start=None, end=None, prewindow=False):
+    return bulk_build_incident_query_params([incident], start=start, end=end, prewindow=prewindow)[
+        0
+    ]
 
 
-def bulk_build_incident_query_params(incidents, start=None, end=None):
+def bulk_build_incident_query_params(incidents, start=None, end=None, prewindow=False):
     incident_groups = defaultdict(list)
     for incident_id, group_id in IncidentGroup.objects.filter(incident__in=incidents).values_list(
         "incident_id", "group_id"
@@ -291,8 +293,9 @@ def bulk_build_incident_query_params(incidents, start=None, end=None):
             "start": incident.date_started if start is None else start,
             "end": incident.current_end_date if end is None else end,
         }
-        prewindow_time_range = calculate_incident_prewindow(params["start"], params["end"])
-        params["start"] = params["start"] - prewindow_time_range
+        if prewindow:
+            prewindow_time_range = calculate_incident_prewindow(params["start"], params["end"])
+            params["start"] = params["start"] - prewindow_time_range
         group_ids = incident_groups[incident.id]
         if group_ids:
             params["group_ids"] = group_ids
@@ -328,7 +331,9 @@ def get_incident_event_stats(incident, start=None, end=None, data_points=50):
     Gets event stats for an incident. If start/end are provided, uses that time
     period, otherwise uses the incident start/current_end.
     """
-    query_params = bulk_build_incident_query_params([incident], start=start, end=end)
+    query_params = bulk_build_incident_query_params(
+        [incident], start=start, end=end, prewindow=True
+    )
     return bulk_get_incident_event_stats([incident], query_params, data_points=data_points)[0]
 
 
@@ -404,7 +409,7 @@ def bulk_get_incident_stats(incidents):
 
     to_fetch = [i for i in incidents if i.id not in incident_stats]
     if to_fetch:
-        query_params_list = bulk_build_incident_query_params(to_fetch)
+        query_params_list = bulk_build_incident_query_params(to_fetch, prewindow=True)
         all_event_stats = bulk_get_incident_event_stats(to_fetch, query_params_list)
         all_aggregates = bulk_get_incident_aggregates(query_params_list)
         for incident, event_stats, aggregates in zip(to_fetch, all_event_stats, all_aggregates):
diff --git a/tests/sentry/incidents/test_logic.py b/tests/sentry/incidents/test_logic.py
index c8c8ed7b75..6d11307040 100644
--- a/tests/sentry/incidents/test_logic.py
+++ b/tests/sentry/incidents/test_logic.py
@@ -282,7 +282,9 @@ class GetIncidentEventStatsTest(TestCase, BaseIncidentEventStatsTest):
 
 class BulkGetIncidentEventStatsTest(TestCase, BaseIncidentEventStatsTest):
     def run_test(self, incidents, expected_results_list, start=None, end=None):
-        query_params_list = bulk_build_incident_query_params(incidents, start=start, end=end)
+        query_params_list = bulk_build_incident_query_params(
+            incidents, start=start, end=end, prewindow=True
+        )
         results = bulk_get_incident_event_stats(incidents, query_params_list, data_points=20)
         for incident, result, expected_results in zip(incidents, results, expected_results_list):
             # Duration of 300s / 20 data points
