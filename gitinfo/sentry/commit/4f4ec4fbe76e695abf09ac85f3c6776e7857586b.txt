commit 4f4ec4fbe76e695abf09ac85f3c6776e7857586b
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Thu Sep 13 16:55:35 2018 -0700

    fix(integrations): Ensure we migrate all eligible vsts repos (#9763)

diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index 91e73310db..549d68db8d 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -14,7 +14,6 @@ from sentry.models import (
 )
 from sentry.integrations import IntegrationInstallation, IntegrationFeatures, IntegrationProvider, IntegrationMetadata
 from sentry.integrations.exceptions import ApiError, IntegrationError
-from sentry.integrations.migrate import PluginMigrator
 from sentry.integrations.repositories import RepositoryMixin
 from sentry.integrations.vsts.issues import VstsIssueSync
 from sentry.models import Repository
@@ -23,6 +22,7 @@ from sentry.identity.pipeline import IdentityProviderPipeline
 from sentry.identity.vsts import VSTSIdentityProvider, get_user_info
 from sentry.pipeline import PipelineView
 from sentry.web.helpers import render_to_response
+from sentry.tasks.integrations import migrate_repo
 from sentry.utils.http import absolute_uri
 from .client import VstsApiClient
 from .repository import VstsRepositoryProvider
@@ -87,6 +87,16 @@ class VstsIntegration(IntegrationInstallation, RepositoryMixin, VstsIssueSync):
             external_id__in=[r['identifier'] for r in self.get_repositories()],
         )
 
+    def has_repo_access(self, repo):
+        client = self.get_client()
+        try:
+            # since we don't actually use webhooks for vsts commits,
+            # just verify repo access
+            client.get_repo(self.instance, repo.config['name'], project=repo.config['project'])
+        except ApiError:
+            return False
+        return True
+
     def get_client(self):
         if self.default_identity is None:
             self.default_identity = self.get_default_identity()
@@ -266,24 +276,17 @@ class VstsIntegrationProvider(IntegrationProvider):
     VSTS_ACCOUNT_LOOKUP_URL = 'https://app.vssps.visualstudio.com/_apis/resourceareas/79134C72-4A58-4B42-976C-04E7115F32BF?hostId=%s&api-preview=5.0-preview.1'
 
     def post_install(self, integration, organization):
-        installation = self.get_installation(integration, organization.id)
-
-        unmigratable_repos = installation.get_unmigratable_repositories()
-
-        repos = Repository.objects.filter(
+        repo_ids = Repository.objects.filter(
             organization_id=organization.id,
             provider='visualstudio',
-        ).exclude(
-            id__in=unmigratable_repos,
-        )
+        ).values_list('id', flat=True)
 
-        for repo in repos:
-            repo.update(
-                integration_id=integration.id,
-                provider='integrations:vsts',
-            )
-
-        PluginMigrator(integration, organization).call()
+        for repo_id in repo_ids:
+            migrate_repo.apply_async(kwargs={
+                'repo_id': repo_id,
+                'integration_id': integration.id,
+                'organization_id': organization.id,
+            })
 
     def get_pipeline_views(self):
         identity_pipeline_config = {
diff --git a/tests/sentry/integrations/vsts/test_integration.py b/tests/sentry/integrations/vsts/test_integration.py
index aabe117aab..24929d308c 100644
--- a/tests/sentry/integrations/vsts/test_integration.py
+++ b/tests/sentry/integrations/vsts/test_integration.py
@@ -52,6 +52,7 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
             ),
             provider='visualstudio',
             external_id=self.repo_id,
+            config={'name': self.project_a['name'], 'project': self.project_a['name']}
         )
 
         inaccessible_repo = Repository.objects.create(
@@ -60,9 +61,11 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
             url='https://randoaccount.visualstudio.com/Product/_git/NotReachable',
             provider='visualstudio',
             external_id='123456789',
+            config={'name': 'NotReachable', 'project': 'NotReachable'}
         )
 
-        self.assert_installation()
+        with self.tasks():
+            self.assert_installation()
         integration = Integration.objects.get(provider='vsts')
 
         assert Repository.objects.get(
@@ -91,12 +94,14 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
             ),
             provider='visualstudio',
             external_id=self.repo_id,
+            config={'name': self.project_a['name'], 'project': self.project_a['name']}
         )
 
         # Enabled before Integration installation
         assert 'vsts' in [p.slug for p in plugins.for_project(self.project)]
 
-        self.assert_installation()
+        with self.tasks():
+            self.assert_installation()
 
         # Disabled
         assert 'vsts' not in [p.slug for p in plugins.for_project(self.project)]
diff --git a/tests/sentry/integrations/vsts/testutils.py b/tests/sentry/integrations/vsts/testutils.py
index 2375ef63dc..104dbcc7c3 100644
--- a/tests/sentry/integrations/vsts/testutils.py
+++ b/tests/sentry/integrations/vsts/testutils.py
@@ -137,6 +137,22 @@ class VstsIntegrationTestCase(IntegrationTestCase):
             },
         )
 
+        responses.add(
+            responses.GET,
+            u'https://{}.visualstudio.com/DefaultCollection/ProjectA/_apis/git/repositories/ProjectA'.format(
+                self.vsts_account_name.lower(),
+            ),
+            json={
+                'repository': {
+                    'id': self.repo_id,
+                    'name': self.repo_name,
+                    'project': {
+                        'name': self.project_a['name'],
+                    },
+                },
+            },
+        )
+
         responses.add(
             responses.GET,
             u'https://{}.visualstudio.com/{}/_apis/wit/workitemtypes/{}/states'.format(
