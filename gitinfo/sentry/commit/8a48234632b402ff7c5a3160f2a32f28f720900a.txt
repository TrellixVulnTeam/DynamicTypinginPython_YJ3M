commit 8a48234632b402ff7c5a3160f2a32f28f720900a
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Sep 15 09:28:22 2016 -0700

    [plugins] Add various indicators to issue actions (#4147)

diff --git a/src/sentry/static/sentry/app/components/group/issuePluginActions.jsx b/src/sentry/static/sentry/app/components/group/issuePluginActions.jsx
index c0998b18c3..b29e673511 100644
--- a/src/sentry/static/sentry/app/components/group/issuePluginActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/issuePluginActions.jsx
@@ -1,11 +1,11 @@
 import React from 'react';
 import Modal from 'react-bootstrap/lib/Modal';
-import AlertActions from '../../actions/alertActions';
 import ApiMixin from '../../mixins/apiMixin';
 import {Form, Select2Field, Select2FieldAutocomplete, TextareaField, TextField} from '../../components/forms';
 import DropdownLink from '../../components/dropdownLink';
 import GroupActions from '../../actions/groupActions';
 import GroupState from '../../mixins/groupState';
+import IndicatorStore from '../../stores/indicatorStore';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 import MenuItem from '../../components/menuItem';
@@ -120,51 +120,60 @@ const IssuePlugin = React.createClass({
   },
 
   createIssue() {
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
     this.api.request(this.getPluginCreateEndpoint(), {
       data: this.state.createFormData,
       success: (data) => {
         GroupActions.updateSuccess(null, [this.getGroup().id], {stale: true});
-        AlertActions.addAlert({
-          message: t('Successfully created issue.'),
-          type: 'success'
+        IndicatorStore.add(t('Successfully created issue.'), 'success', {
+          duration: 3000
         });
         this.props.onSuccess && this.props.onSuccess();
       },
       error: (error) => {
         this.setError(error, t('There was an error creating the issue.'));
+      },
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
       }
     });
   },
 
   linkIssue() {
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
     this.api.request(this.getPluginLinkEndpoint(), {
       data: this.state.linkFormData,
       success: (data) => {
         GroupActions.updateSuccess(null, [this.getGroup().id], {stale: true});
-        AlertActions.addAlert({
-          message: t('Successfully linked issue.'),
-          type: 'success'
+        IndicatorStore.add(t('Successfully linked issue.'), 'success', {
+          duration: 3000
         });
         this.props.onSuccess && this.props.onSuccess();
       },
       error: (error) => {
         this.setError(error, t('There was an error linking the issue.'));
+      },
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
       }
     });
   },
 
   unlinkIssue() {
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
     this.api.request(this.getPluginUnlinkEndpoint(), {
       success: (data) => {
         GroupActions.updateSuccess(null, [this.getGroup().id], {stale: true});
-        AlertActions.addAlert({
-          message: t('Successfully unlinked issue.'),
-          type: 'success'
+        IndicatorStore.add(t('Successfully unlinked issue.'), 'success', {
+          duration: 3000
         });
         this.props.onSuccess && this.props.onSuccess();
       },
       error: (error) => {
         this.setError(error, t('There was an error unlinking the issue.'));
+      },
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
       }
     });
   },
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 676933185b..72ddddf94e 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -2726,7 +2726,7 @@ ul.radio-inputs {
 * ============================================================================
 */
 
-.modal-open #blk_router {
+.modal-open .app {
   -webkit-filter: ~"blur(3px) grayscale(25%)";
 }
 
