commit bd3086f0d3aa9302fb17e4a5009233de1a301113
Author: ted kaemming <ted@kaemming.com>
Date:   Mon Feb 6 17:07:04 2017 -0800

    Move to Manhattan distance for similarity distance calculations. (#4873)

diff --git a/src/sentry/similarity.py b/src/sentry/similarity.py
index 109255712e..2c7e11a075 100644
--- a/src/sentry/similarity.py
+++ b/src/sentry/similarity.py
@@ -14,7 +14,7 @@ def scale_to_total(value):
     return {k: (v / total) for k, v in value.items()}
 
 
-def get_distance(target, other):
+def get_euclidian_distance(target, other):
     """\
     Calculate the N-dimensional Euclidian between two mappings.
 
@@ -29,6 +29,23 @@ def get_distance(target, other):
     )
 
 
+def get_manhattan_distance(target, other):
+    """
+    Calculate the N-dimensional Manhattan distance between two mappings.
+
+    The mappings are used to represent sparse arrays -- if a key is not present
+    in both mappings, it's assumed to be 0 in the mapping where it is missing.
+
+    The result of this function will be expressed as the distance between the
+    caller and a 5:2 ratio of rye whiskey to sweet Italian vermouth, with a
+    dash of bitters.
+    """
+    return sum(
+        abs(target.get(k, 0) - other.get(k, 0))
+        for k in set(target) | set(other)
+    )
+
+
 formatters = sorted([
     (2 ** 8 - 1, struct.Struct('>B').pack),
     (2 ** 16 - 1, struct.Struct('>H').pack),
@@ -129,15 +146,17 @@ class MinHashIndex(object):
         """
         assert len(target) == len(other)
         assert len(target) == len(self.bands)
-        return 1 - sum(
+        return sum(
             map(
-                lambda (left, right): get_distance(
-                    left,
-                    right,
+                lambda (left, right): 1 - (
+                    get_manhattan_distance(
+                        left,
+                        right,
+                    ) / 2.0
                 ),
                 zip(target, other)
             )
-        ) / math.sqrt(2) / len(target)
+        ) / len(target)
 
     def query(self, scope, key):
         """\
diff --git a/tests/sentry/test_similarity.py b/tests/sentry/test_similarity.py
index bc95ff6c6e..ba85e8895a 100644
--- a/tests/sentry/test_similarity.py
+++ b/tests/sentry/test_similarity.py
@@ -4,31 +4,78 @@ import math
 
 import pytest
 
-from sentry.similarity import MinHashIndex, get_distance, get_number_formatter, scale_to_total
+from sentry.similarity import (
+    MinHashIndex, get_euclidian_distance, get_manhattan_distance,
+    get_number_formatter, scale_to_total
+)
 from sentry.testutils import TestCase
 from sentry.utils import redis
 
 
-def test_get_distance():
-    assert get_distance({}, {}) == 0
+def test_get_euclidian_distance():
+    assert get_euclidian_distance({}, {}) == 0
 
-    assert get_distance(
+    assert get_euclidian_distance(
         {'a': 1},
         {'a': 1},
     ) == 0
 
-    assert get_distance(
+    assert get_euclidian_distance(
         {'a': 1, 'b': 0},
         {'a': 0, 'b': 1},
     ) == math.sqrt(2)
 
-    assert get_distance(
+    assert get_euclidian_distance(
         {'a': 1},
         {'b': 1},
     ) == math.sqrt(2)
 
 
+def test_get_manhattan_distance():
+    assert get_manhattan_distance({}, {}) == 0
+
+    assert get_manhattan_distance(
+        {'a': 1},
+        {'a': 1},
+    ) == 0
+
+    assert get_manhattan_distance(
+        {'a': 1},
+        {'b': 1},
+    ) == get_manhattan_distance(
+        {'a': 1},
+        {'b': 0.5, 'c': 0.5},
+    ) == 2
+
+    assert get_manhattan_distance(
+        {'a': 1},
+        {'a': 1, 'b': 1},
+    ) == 1
+
+    assert get_manhattan_distance(
+        {'a': 1, 'b': 0},
+        {'a': 0, 'b': 1},
+    ) == 2
+
+    assert get_manhattan_distance(
+        {'a': 1},
+        {'b': 1},
+    ) == 2
+
+
 def test_get_similarity():
+    index = MinHashIndex(None, 0xFFFF, 1, 1)
+
+    assert index.get_similarity(
+        [{'a': 1}],
+        [{'a': 0.5, 'b': 0.25, 'c': 0.25}],
+    ) == 0.5
+
+    assert index.get_similarity(
+        [{'a': 1}],
+        [{'b': 0.5, 'c': 0.5}],
+    ) == 0
+
     index = MinHashIndex(None, 0xFFFF, 2, 1)
 
     assert index.get_similarity(
