commit 94e696200692bfa3d17107cad33ff86ce203323c
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 23 14:45:11 2015 -0800

    Additional event abstractions

diff --git a/src/sentry/static/sentry/app/views/aggregate/event.jsx b/src/sentry/static/sentry/app/views/aggregate/event.jsx
new file mode 100644
index 0000000000..40b723b598
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/aggregate/event.jsx
@@ -0,0 +1,39 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+var Reflux = require("reflux");
+var Router = require("react-router");
+
+var AggregateEventDataSection = require("./eventDataSection");
+var AggregateEventHeader = require("./eventHeader");
+var AggregateEventTags = require("./eventTags");
+var PropTypes = require("../../proptypes");
+
+var AggregateEvent = React.createClass({
+  propTypes: {
+    aggregate: PropTypes.Aggregate.isRequired,
+    event: PropTypes.Event.isRequired
+  },
+
+  render: function(){
+    var agg = this.props.aggregate;
+    var evt = this.props.event;
+
+    return (
+      <div>
+        <AggregateEventHeader
+            aggregate={agg}
+            event={evt} />
+        <AggregateEventTags
+            aggregate={agg}
+            event={evt} />
+        <AggregateEventDataSection
+            aggregate={agg}
+            event={evt}
+            title="Additional Data" />
+      </div>
+    );
+  }
+});
+
+module.exports = AggregateEvent;
diff --git a/src/sentry/static/sentry/app/views/aggregate/eventDataSection.jsx b/src/sentry/static/sentry/app/views/aggregate/eventDataSection.jsx
new file mode 100644
index 0000000000..6473d63f9c
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/aggregate/eventDataSection.jsx
@@ -0,0 +1,27 @@
+/*** @jsx React.DOM */
+var React = require("react");
+
+var PropTypes = require("../../proptypes");
+
+var AggregateEventDataSection = React.createClass({
+  propTypes: {
+    aggregate: PropTypes.Aggregate.isRequired,
+    event: PropTypes.Event.isRequired,
+    title: React.PropTypes.string.isRequired
+  },
+
+  render: function() {
+    return (
+      <div className="box">
+        <div className="box-header">
+            <h3>{this.props.title}</h3>
+        </div>
+        <div className="box-content with-padding">
+          {this.props.children}
+        </div>
+      </div>
+    );
+  }
+});
+
+module.exports = AggregateEventDataSection;
diff --git a/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx b/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx
index 6b344157f1..c1c2700174 100644
--- a/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx
+++ b/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx
@@ -7,7 +7,7 @@ var PropTypes = require("../../proptypes");
 var AggregateEventHeader = React.createClass({
   propTypes: {
     aggregate: PropTypes.Aggregate.isRequired,
-    event: PropTypes.Event
+    event: PropTypes.Event.isRequired
   },
 
   render: function() {
diff --git a/src/sentry/static/sentry/app/views/aggregate/eventTags.jsx b/src/sentry/static/sentry/app/views/aggregate/eventTags.jsx
index 3ac64eb93f..7f0af37472 100644
--- a/src/sentry/static/sentry/app/views/aggregate/eventTags.jsx
+++ b/src/sentry/static/sentry/app/views/aggregate/eventTags.jsx
@@ -5,7 +5,8 @@ var PropTypes = require("../../proptypes");
 
 var AggregateEventTags = React.createClass({
   propTypes: {
-    aggregate: PropTypes.Aggregate.isRequired
+    aggregate: PropTypes.Aggregate.isRequired,
+    event: PropTypes.Event.isRequired
   },
 
   render: function() {
diff --git a/src/sentry/static/sentry/app/views/aggregateOverview.jsx b/src/sentry/static/sentry/app/views/aggregateOverview.jsx
index 0249e0c789..cdd910d636 100644
--- a/src/sentry/static/sentry/app/views/aggregateOverview.jsx
+++ b/src/sentry/static/sentry/app/views/aggregateOverview.jsx
@@ -7,8 +7,7 @@ var Router = require("react-router");
 var api = require("../api");
 var AggregateActivity = require("./aggregate/activity");
 var AggregateChart = require("./aggregate/chart");
-var AggregateEventHeader = require("./aggregate/eventHeader");
-var AggregateEventTags = require("./aggregate/eventTags");
+var AggregateEvent = require("./aggregate/event");
 var AggregateListStore = require("../stores/aggregateListStore");
 var MemberListStore = require("../stores/memberListStore");
 var PropTypes = require("../proptypes");
@@ -24,7 +23,8 @@ var AggregateOverview = React.createClass({
 
   getInitialState: function(){
     return {
-      event: null
+      event: null,
+      eventIsLoading: true
     };
   },
 
@@ -41,18 +41,25 @@ var AggregateOverview = React.createClass({
 
   fetchEventData: function(){
     var eventId = this.getParams().eventId || 'latest';
+
+    this.setState({eventIsLoading: true});
+
     api.request('/groups/' + this.props.aggregate.id + '/events/' + eventId + '/', {
       success: function(data) {
         this.setState({event: data});
       }.bind(this),
       error: function() {
         // TODO(dcramer):
+      },
+      complete: function() {
+        this.setState({eventIsLoading: false});
       }
     });
   },
 
   render: function(){
     var agg = this.props.aggregate;
+    var evt = this.state.event;
 
     return (
       <div>
@@ -65,14 +72,13 @@ var AggregateOverview = React.createClass({
             This event has been muted. You will not be notified of any changes and it will not show up in the default feed.
           </div>
         }
-        // TODO(dcramer): we could move these into some kind of
-        // AggregateEvent component
-        <AggregateEventHeader
-            aggregate={agg}
-            event={this.state.event} />
-        <AggregateEventTags
-            aggregate={agg}
-            event={this.state.event} />
+        {evt ?
+          <AggregateEvent
+              aggregate={agg}
+              event={this.state.event} />
+        : this.state.eventIsLoading &&
+          <div className="loading">Loading event data..</div>
+        }
       </div>
     );
   }
