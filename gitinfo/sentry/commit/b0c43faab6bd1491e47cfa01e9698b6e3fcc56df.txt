commit b0c43faab6bd1491e47cfa01e9698b6e3fcc56df
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue Nov 27 10:33:47 2018 -0800

    ref(settings): Expose disabled project tags settings to members (#10775)
    
    Gates the delete button behind project:write access checks.

diff --git a/src/sentry/static/sentry/app/views/projectTags.jsx b/src/sentry/static/sentry/app/views/projectTags.jsx
index c9b45c3f82..1e7ea1e573 100644
--- a/src/sentry/static/sentry/app/views/projectTags.jsx
+++ b/src/sentry/static/sentry/app/views/projectTags.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 
 import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
 import {t, tct} from 'app/locale';
+import Access from 'app/components/acl/access';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
@@ -37,30 +38,17 @@ export default class ProjectTags extends AsyncView {
     });
   }
 
-  renderLink(key, canDelete, idx) {
-    return (
-      <LinkWithConfirmation
-        title={'Remove tag?'}
-        message={'Are you sure you want to remove this tag?'}
-        onConfirm={() => this.onDelete(key, idx)}
-        disabled={!canDelete}
-      >
-        <Button size="xsmall" icon="icon-trash" data-test-id="delete" />
-      </LinkWithConfirmation>
-    );
-  }
-
   renderBody() {
     let {tags} = this.state;
     let isEmpty = !tags || tags.length === 0;
 
     return (
-      <div>
+      <React.Fragment>
         <SettingsPageHeader title={t('Tags')} />
         <TextBlock>
           {tct(
             `Each event in Sentry may be annotated with various tags (key and value pairs).
-          Learn how to [link:add custom tags].`,
+                 Learn how to [link:add custom tags].`,
             {
               link: <ExternalLink href="https://docs.sentry.io/hosted/learn/context/" />,
             }
@@ -77,7 +65,7 @@ export default class ProjectTags extends AsyncView {
           <PanelBody>
             {isEmpty && (
               <EmptyMessage>
-                {tct('There are no tags, [link:learn to add tags]', {
+                {tct('There are no tags, [link:learn how to add tags]', {
                   link: (
                     <ExternalLink href="https://docs.sentry.io/hosted/learn/context/" />
                   ),
@@ -85,28 +73,49 @@ export default class ProjectTags extends AsyncView {
               </EmptyMessage>
             )}
 
-            {!isEmpty &&
-              tags.map(({key, canDelete}, idx) => {
-                return (
-                  <PanelItem p={0} align="center" key={key} className="ref-tag-row">
-                    <Box align="flex-end" flex="1" p={2}>
-                      <span>{key}</span>
-                    </Box>
-                    <Flex align="center" p={2}>
-                      {canDelete ? (
-                        this.renderLink(key, canDelete, idx)
-                      ) : (
-                        <Tooltip title={t('This tag cannot be deleted.')}>
-                          <span>{this.renderLink(key, canDelete, idx)}</span>
+            <Access access={['project:write']}>
+              {({hasAccess}) =>
+                !isEmpty &&
+                tags.map(({key, canDelete}, idx) => {
+                  const enabled = canDelete && hasAccess;
+                  return (
+                    <PanelItem p={0} align="center" key={key} className="ref-tag-row">
+                      <Box align="flex-end" flex="1" p={2}>
+                        <span>{key}</span>
+                      </Box>
+                      <Flex align="center" p={2}>
+                        <Tooltip
+                          disabled={enabled}
+                          title={
+                            hasAccess
+                              ? t('This tag cannot be deleted.')
+                              : t('You do not have permission to remove tags.')
+                          }
+                        >
+                          <span>
+                            <LinkWithConfirmation
+                              title={'Remove tag?'}
+                              message={'Are you sure you want to remove this tag?'}
+                              onConfirm={() => this.onDelete(key, idx)}
+                              disabled={!enabled}
+                            >
+                              <Button
+                                size="xsmall"
+                                icon="icon-trash"
+                                data-test-id="delete"
+                                disabled={!enabled}
+                              />
+                            </LinkWithConfirmation>
+                          </span>
                         </Tooltip>
-                      )}
-                    </Flex>
-                  </PanelItem>
-                );
-              })}
+                      </Flex>
+                    </PanelItem>
+                  );
+                })}
+            </Access>
           </PanelBody>
         </Panel>
-      </div>
+      </React.Fragment>
     );
   }
 }
diff --git a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
index 0b2324a5c2..e20413f8ce 100644
--- a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
@@ -15,1012 +15,1075 @@ exports[`ProjectTags renders 1`] = `
     <DocumentTitle
       title="Sentry"
     >
-      <div>
-        <SettingsPageHeading
-          title="Tags"
-        >
-          <Wrapper>
-            <div
-              className="css-1pnrn3o-Wrapper e1kblvez1"
+      <SettingsPageHeading
+        title="Tags"
+      >
+        <Wrapper>
+          <div
+            className="css-1pnrn3o-Wrapper e1kblvez1"
+          >
+            <Flex
+              align="center"
             >
-              <Flex
+              <Base
                 align="center"
+                className="css-5ipae5"
               >
-                <Base
-                  align="center"
+                <div
                   className="css-5ipae5"
+                  is={null}
                 >
-                  <div
-                    className="css-5ipae5"
-                    is={null}
-                  >
-                    <Title>
-                      <Base
+                  <Title>
+                    <Base
+                      className="css-1mqcea-Title e1kblvez0"
+                    >
+                      <div
                         className="css-1mqcea-Title e1kblvez0"
+                        is={null}
                       >
-                        <div
-                          className="css-1mqcea-Title e1kblvez0"
-                          is={null}
-                        >
-                          Tags
-                        </div>
-                      </Base>
-                    </Title>
-                  </div>
-                </Base>
-              </Flex>
-            </div>
-          </Wrapper>
-        </SettingsPageHeading>
-        <TextBlock>
-          <Component
+                        Tags
+                      </div>
+                    </Base>
+                  </Title>
+                </div>
+              </Base>
+            </Flex>
+          </div>
+        </Wrapper>
+      </SettingsPageHeading>
+      <TextBlock>
+        <Component
+          className="css-1geyb25-TextBlock ec8ep340"
+        >
+          <div
             className="css-1geyb25-TextBlock ec8ep340"
           >
-            <div
-              className="css-1geyb25-TextBlock ec8ep340"
+            <span
+              key="5"
             >
               <span
-                key="5"
+                key="0"
               >
-                <span
-                  key="0"
-                >
-                  Each event in Sentry may be annotated with various tags (key and value pairs).
-          Learn how to 
-                </span>
-                <ExternalLink
+                Each event in Sentry may be annotated with various tags (key and value pairs).
+                 Learn how to 
+              </span>
+              <ExternalLink
+                href="https://docs.sentry.io/hosted/learn/context/"
+                key="2"
+                rel="noreferrer noopener"
+                target="_blank"
+              >
+                <a
                   href="https://docs.sentry.io/hosted/learn/context/"
-                  key="2"
                   rel="noreferrer noopener"
                   target="_blank"
                 >
-                  <a
-                    href="https://docs.sentry.io/hosted/learn/context/"
-                    rel="noreferrer noopener"
-                    target="_blank"
+                  <span
+                    key="1"
                   >
-                    <span
-                      key="1"
-                    >
-                      add custom tags
-                    </span>
-                  </a>
-                </ExternalLink>
-                <span
-                  key="3"
-                >
-                  .
-                </span>
+                    add custom tags
+                  </span>
+                </a>
+              </ExternalLink>
+              <span
+                key="3"
+              >
+                .
               </span>
-            </div>
-          </Component>
-        </TextBlock>
-        <Panel>
-          <Component
+            </span>
+          </div>
+        </Component>
+      </TextBlock>
+      <Panel>
+        <Component
+          className="css-yahxlu-Panel e1laxa7d0"
+        >
+          <div
             className="css-yahxlu-Panel e1laxa7d0"
           >
-            <div
-              className="css-yahxlu-Panel e1laxa7d0"
-            >
-              <PanelHeader>
-                <Component
+            <PanelHeader>
+              <Component
+                className="css-gxu3mm-PanelHeader-getPadding e1p8v8nv0"
+              >
+                <Flex
+                  align="center"
                   className="css-gxu3mm-PanelHeader-getPadding e1p8v8nv0"
+                  justify="space-between"
                 >
-                  <Flex
+                  <Base
                     align="center"
-                    className="css-gxu3mm-PanelHeader-getPadding e1p8v8nv0"
+                    className="e1p8v8nv0 css-18dn1ya-PanelHeader-getPadding"
                     justify="space-between"
                   >
-                    <Base
-                      align="center"
+                    <div
                       className="e1p8v8nv0 css-18dn1ya-PanelHeader-getPadding"
-                      justify="space-between"
+                      is={null}
                     >
-                      <div
-                        className="e1p8v8nv0 css-18dn1ya-PanelHeader-getPadding"
-                        is={null}
-                      >
-                        <Flex>
-                          <Base
+                      <Flex>
+                        <Base
+                          className="css-sncxrr"
+                        >
+                          <div
                             className="css-sncxrr"
+                            is={null}
                           >
-                            <div
-                              className="css-sncxrr"
-                              is={null}
+                            <Box
+                              flex="1"
                             >
-                              <Box
+                              <Base
+                                className="css-vti0ei"
                                 flex="1"
                               >
-                                <Base
+                                <div
                                   className="css-vti0ei"
-                                  flex="1"
+                                  is={null}
                                 >
-                                  <div
-                                    className="css-vti0ei"
-                                    is={null}
-                                  >
-                                    Tags
-                                  </div>
-                                </Base>
-                              </Box>
-                            </div>
-                          </Base>
-                        </Flex>
-                      </div>
-                    </Base>
-                  </Flex>
-                </Component>
-              </PanelHeader>
-              <PanelBody
-                direction="column"
-                disablePadding={true}
-                flex={false}
+                                  Tags
+                                </div>
+                              </Base>
+                            </Box>
+                          </div>
+                        </Base>
+                      </Flex>
+                    </div>
+                  </Base>
+                </Flex>
+              </Component>
+            </PanelHeader>
+            <PanelBody
+              direction="column"
+              disablePadding={true}
+              flex={false}
+            >
+              <div
+                className="css-9vq8an-textStyles"
               >
-                <div
-                  className="css-9vq8an-textStyles"
+                <AccessContainer
+                  access={
+                    Array [
+                      "project:write",
+                    ]
+                  }
                 >
-                  <PanelItem
-                    align="center"
-                    className="ref-tag-row"
-                    key="browser"
-                    p={0}
+                  <Access
+                    access={
+                      Array [
+                        "project:write",
+                      ]
+                    }
+                    configUser={
+                      Object {
+                        "email": "foo@example.com",
+                        "flags": Object {
+                          "newsletter_consent_prompt": false,
+                        },
+                        "hasPasswordAuth": true,
+                        "id": "1",
+                        "isAuthenticated": true,
+                        "name": "Foo Bar",
+                        "options": Object {
+                          "timezone": "UTC",
+                        },
+                        "permissions": Set {},
+                        "username": "foo@example.com",
+                      }
+                    }
+                    organization={
+                      Object {
+                        "access": Array [
+                          "org:read",
+                          "org:write",
+                          "org:admin",
+                          "project:read",
+                          "project:write",
+                          "project:admin",
+                          "team:read",
+                          "team:write",
+                          "team:admin",
+                        ],
+                        "features": Array [],
+                        "id": "3",
+                        "name": "Organization Name",
+                        "onboardingTasks": Array [],
+                        "projects": Array [],
+                        "scrapeJavaScript": true,
+                        "slug": "org-slug",
+                        "status": Object {
+                          "id": "active",
+                          "name": "active",
+                        },
+                        "teams": Array [],
+                      }
+                    }
+                    renderNoAccessMessage={false}
+                    requireAll={true}
                   >
-                    <Base
+                    <PanelItem
                       align="center"
-                      className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                      className="ref-tag-row"
+                      key="browser"
                       p={0}
                     >
-                      <div
+                      <Base
+                        align="center"
                         className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
-                        is={null}
+                        p={0}
                       >
-                        <Box
-                          align="flex-end"
-                          flex="1"
-                          p={2}
+                        <div
+                          className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                          is={null}
                         >
-                          <Base
+                          <Box
                             align="flex-end"
-                            className="css-14o7hgh"
                             flex="1"
                             p={2}
                           >
-                            <div
+                            <Base
+                              align="flex-end"
                               className="css-14o7hgh"
-                              is={null}
+                              flex="1"
+                              p={2}
                             >
-                              <span>
-                                browser
-                              </span>
-                            </div>
-                          </Base>
-                        </Box>
-                        <Flex
-                          align="center"
-                          p={2}
-                        >
-                          <Base
+                              <div
+                                className="css-14o7hgh"
+                                is={null}
+                              >
+                                <span>
+                                  browser
+                                </span>
+                              </div>
+                            </Base>
+                          </Box>
+                          <Flex
                             align="center"
-                            className="css-p3ab1k"
                             p={2}
                           >
-                            <div
+                            <Base
+                              align="center"
                               className="css-p3ab1k"
-                              is={null}
+                              p={2}
                             >
-                              <LinkWithConfirmation
-                                disabled={false}
-                                message="Are you sure you want to remove this tag?"
-                                onConfirm={[Function]}
-                                title="Remove tag?"
+                              <div
+                                className="css-p3ab1k"
+                                is={null}
                               >
-                                <Confirm
-                                  cancelText="Cancel"
-                                  confirmText="Confirm"
-                                  disableConfirmButton={false}
-                                  disabled={false}
-                                  message="Are you sure you want to remove this tag?"
-                                  onConfirm={[Function]}
-                                  priority="primary"
+                                <Tooltip
+                                  disabled={true}
+                                  title="This tag cannot be deleted."
                                 >
-                                  <a
-                                    disabled={false}
-                                    onClick={[Function]}
-                                    title="Remove tag?"
-                                  >
-                                    <Button
-                                      data-test-id="delete"
+                                  <span>
+                                    <LinkWithConfirmation
                                       disabled={false}
-                                      icon="icon-trash"
-                                      size="xsmall"
+                                      message="Are you sure you want to remove this tag?"
+                                      onConfirm={[Function]}
+                                      title="Remove tag?"
                                     >
-                                      <StyledButton
-                                        data-test-id="delete"
+                                      <Confirm
+                                        cancelText="Cancel"
+                                        confirmText="Confirm"
+                                        disableConfirmButton={false}
                                         disabled={false}
-                                        onClick={[Function]}
-                                        role="button"
-                                        size="xsmall"
+                                        message="Are you sure you want to remove this tag?"
+                                        onConfirm={[Function]}
+                                        priority="primary"
                                       >
-                                        <Component
-                                          className="css-dkprmi-StyledButton-getColors eqrebog0"
-                                          data-test-id="delete"
+                                        <a
                                           disabled={false}
                                           onClick={[Function]}
-                                          role="button"
-                                          size="xsmall"
+                                          title="Remove tag?"
                                         >
-                                          <button
-                                            className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                          <Button
                                             data-test-id="delete"
                                             disabled={false}
-                                            onClick={[Function]}
-                                            role="button"
+                                            icon="icon-trash"
                                             size="xsmall"
                                           >
-                                            <ButtonLabel
+                                            <StyledButton
+                                              data-test-id="delete"
+                                              disabled={false}
+                                              onClick={[Function]}
+                                              role="button"
                                               size="xsmall"
                                             >
                                               <Component
-                                                className="css-uthd1f-ButtonLabel eqrebog1"
+                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                data-test-id="delete"
+                                                disabled={false}
+                                                onClick={[Function]}
+                                                role="button"
                                                 size="xsmall"
                                               >
-                                                <span
-                                                  className="css-uthd1f-ButtonLabel eqrebog1"
+                                                <button
+                                                  className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                  data-test-id="delete"
+                                                  disabled={false}
+                                                  onClick={[Function]}
+                                                  role="button"
+                                                  size="xsmall"
                                                 >
-                                                  <Icon
-                                                    hasChildren={false}
+                                                  <ButtonLabel
                                                     size="xsmall"
                                                   >
                                                     <Component
-                                                      className="css-ljhpxy-Icon eqrebog2"
-                                                      hasChildren={false}
+                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                       size="xsmall"
                                                     >
                                                       <span
-                                                        className="css-ljhpxy-Icon eqrebog2"
-                                                        size="xsmall"
+                                                        className="css-uthd1f-ButtonLabel eqrebog1"
                                                       >
-                                                        <StyledInlineSvg
-                                                          size="12px"
-                                                          src="icon-trash"
+                                                        <Icon
+                                                          hasChildren={false}
+                                                          size="xsmall"
                                                         >
-                                                          <InlineSvg
-                                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
-                                                            size="12px"
-                                                            src="icon-trash"
+                                                          <Component
+                                                            className="css-ljhpxy-Icon eqrebog2"
+                                                            hasChildren={false}
+                                                            size="xsmall"
                                                           >
-                                                            <StyledSvg
-                                                              className="css-1ov3rcq-StyledInlineSvg eqrebog3"
-                                                              height="12px"
-                                                              viewBox={Object {}}
-                                                              width="12px"
+                                                            <span
+                                                              className="css-ljhpxy-Icon eqrebog2"
+                                                              size="xsmall"
                                                             >
-                                                              <svg
-                                                                className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
-                                                                height="12px"
-                                                                viewBox={Object {}}
-                                                                width="12px"
+                                                              <StyledInlineSvg
+                                                                size="12px"
+                                                                src="icon-trash"
                                                               >
-                                                                <use
-                                                                  href="#test"
-                                                                  xlinkHref="#test"
-                                                                />
-                                                              </svg>
-                                                            </StyledSvg>
-                                                          </InlineSvg>
-                                                        </StyledInlineSvg>
+                                                                <InlineSvg
+                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                                  size="12px"
+                                                                  src="icon-trash"
+                                                                >
+                                                                  <StyledSvg
+                                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                                    height="12px"
+                                                                    viewBox={Object {}}
+                                                                    width="12px"
+                                                                  >
+                                                                    <svg
+                                                                      className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                                                      height="12px"
+                                                                      viewBox={Object {}}
+                                                                      width="12px"
+                                                                    >
+                                                                      <use
+                                                                        href="#test"
+                                                                        xlinkHref="#test"
+                                                                      />
+                                                                    </svg>
+                                                                  </StyledSvg>
+                                                                </InlineSvg>
+                                                              </StyledInlineSvg>
+                                                            </span>
+                                                          </Component>
+                                                        </Icon>
                                                       </span>
                                                     </Component>
-                                                  </Icon>
-                                                </span>
+                                                  </ButtonLabel>
+                                                </button>
                                               </Component>
-                                            </ButtonLabel>
-                                          </button>
-                                        </Component>
-                                      </StyledButton>
-                                    </Button>
-                                  </a>
-                                  <Modal
-                                    animation={false}
-                                    autoFocus={true}
-                                    backdrop={true}
-                                    bsClass="modal"
-                                    dialogComponentClass={[Function]}
-                                    enforceFocus={true}
-                                    keyboard={true}
-                                    manager={
-                                      ModalManager {
-                                        "add": [Function],
-                                        "containers": Array [],
-                                        "data": Array [],
-                                        "handleContainerOverflow": true,
-                                        "hideSiblingNodes": true,
-                                        "isTopModal": [Function],
-                                        "modals": Array [],
-                                        "remove": [Function],
-                                      }
-                                    }
-                                    onHide={[Function]}
-                                    renderBackdrop={[Function]}
-                                    restoreFocus={true}
-                                    show={false}
-                                  >
-                                    <Modal
-                                      autoFocus={true}
-                                      backdrop={true}
-                                      backdropClassName="modal-backdrop"
-                                      containerClassName="modal-open"
-                                      enforceFocus={true}
-                                      keyboard={true}
-                                      manager={
-                                        ModalManager {
-                                          "add": [Function],
-                                          "containers": Array [],
-                                          "data": Array [],
-                                          "handleContainerOverflow": true,
-                                          "hideSiblingNodes": true,
-                                          "isTopModal": [Function],
-                                          "modals": Array [],
-                                          "remove": [Function],
-                                        }
-                                      }
-                                      onEntering={[Function]}
-                                      onExited={[Function]}
-                                      onHide={[Function]}
-                                      renderBackdrop={[Function]}
-                                      restoreFocus={true}
-                                      show={false}
-                                    />
-                                  </Modal>
-                                </Confirm>
-                              </LinkWithConfirmation>
-                            </div>
-                          </Base>
-                        </Flex>
-                      </div>
-                    </Base>
-                  </PanelItem>
-                  <PanelItem
-                    align="center"
-                    className="ref-tag-row"
-                    key="device"
-                    p={0}
-                  >
-                    <Base
+                                            </StyledButton>
+                                          </Button>
+                                        </a>
+                                        <Modal
+                                          animation={false}
+                                          autoFocus={true}
+                                          backdrop={true}
+                                          bsClass="modal"
+                                          dialogComponentClass={[Function]}
+                                          enforceFocus={true}
+                                          keyboard={true}
+                                          manager={
+                                            ModalManager {
+                                              "add": [Function],
+                                              "containers": Array [],
+                                              "data": Array [],
+                                              "handleContainerOverflow": true,
+                                              "hideSiblingNodes": true,
+                                              "isTopModal": [Function],
+                                              "modals": Array [],
+                                              "remove": [Function],
+                                            }
+                                          }
+                                          onHide={[Function]}
+                                          renderBackdrop={[Function]}
+                                          restoreFocus={true}
+                                          show={false}
+                                        >
+                                          <Modal
+                                            autoFocus={true}
+                                            backdrop={true}
+                                            backdropClassName="modal-backdrop"
+                                            containerClassName="modal-open"
+                                            enforceFocus={true}
+                                            keyboard={true}
+                                            manager={
+                                              ModalManager {
+                                                "add": [Function],
+                                                "containers": Array [],
+                                                "data": Array [],
+                                                "handleContainerOverflow": true,
+                                                "hideSiblingNodes": true,
+                                                "isTopModal": [Function],
+                                                "modals": Array [],
+                                                "remove": [Function],
+                                              }
+                                            }
+                                            onEntering={[Function]}
+                                            onExited={[Function]}
+                                            onHide={[Function]}
+                                            renderBackdrop={[Function]}
+                                            restoreFocus={true}
+                                            show={false}
+                                          />
+                                        </Modal>
+                                      </Confirm>
+                                    </LinkWithConfirmation>
+                                  </span>
+                                </Tooltip>
+                              </div>
+                            </Base>
+                          </Flex>
+                        </div>
+                      </Base>
+                    </PanelItem>
+                    <PanelItem
                       align="center"
-                      className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                      className="ref-tag-row"
+                      key="device"
                       p={0}
                     >
-                      <div
+                      <Base
+                        align="center"
                         className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
-                        is={null}
+                        p={0}
                       >
-                        <Box
-                          align="flex-end"
-                          flex="1"
-                          p={2}
+                        <div
+                          className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                          is={null}
                         >
-                          <Base
+                          <Box
                             align="flex-end"
-                            className="css-14o7hgh"
                             flex="1"
                             p={2}
                           >
-                            <div
+                            <Base
+                              align="flex-end"
                               className="css-14o7hgh"
-                              is={null}
+                              flex="1"
+                              p={2}
                             >
-                              <span>
-                                device
-                              </span>
-                            </div>
-                          </Base>
-                        </Box>
-                        <Flex
-                          align="center"
-                          p={2}
-                        >
-                          <Base
+                              <div
+                                className="css-14o7hgh"
+                                is={null}
+                              >
+                                <span>
+                                  device
+                                </span>
+                              </div>
+                            </Base>
+                          </Box>
+                          <Flex
                             align="center"
-                            className="css-p3ab1k"
                             p={2}
                           >
-                            <div
+                            <Base
+                              align="center"
                               className="css-p3ab1k"
-                              is={null}
+                              p={2}
                             >
-                              <LinkWithConfirmation
-                                disabled={false}
-                                message="Are you sure you want to remove this tag?"
-                                onConfirm={[Function]}
-                                title="Remove tag?"
+                              <div
+                                className="css-p3ab1k"
+                                is={null}
                               >
-                                <Confirm
-                                  cancelText="Cancel"
-                                  confirmText="Confirm"
-                                  disableConfirmButton={false}
-                                  disabled={false}
-                                  message="Are you sure you want to remove this tag?"
-                                  onConfirm={[Function]}
-                                  priority="primary"
+                                <Tooltip
+                                  disabled={true}
+                                  title="This tag cannot be deleted."
                                 >
-                                  <a
-                                    disabled={false}
-                                    onClick={[Function]}
-                                    title="Remove tag?"
-                                  >
-                                    <Button
-                                      data-test-id="delete"
+                                  <span>
+                                    <LinkWithConfirmation
                                       disabled={false}
-                                      icon="icon-trash"
-                                      size="xsmall"
+                                      message="Are you sure you want to remove this tag?"
+                                      onConfirm={[Function]}
+                                      title="Remove tag?"
                                     >
-                                      <StyledButton
-                                        data-test-id="delete"
+                                      <Confirm
+                                        cancelText="Cancel"
+                                        confirmText="Confirm"
+                                        disableConfirmButton={false}
                                         disabled={false}
-                                        onClick={[Function]}
-                                        role="button"
-                                        size="xsmall"
+                                        message="Are you sure you want to remove this tag?"
+                                        onConfirm={[Function]}
+                                        priority="primary"
                                       >
-                                        <Component
-                                          className="css-dkprmi-StyledButton-getColors eqrebog0"
-                                          data-test-id="delete"
+                                        <a
                                           disabled={false}
                                           onClick={[Function]}
-                                          role="button"
-                                          size="xsmall"
+                                          title="Remove tag?"
                                         >
-                                          <button
-                                            className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                          <Button
                                             data-test-id="delete"
                                             disabled={false}
-                                            onClick={[Function]}
-                                            role="button"
+                                            icon="icon-trash"
                                             size="xsmall"
                                           >
-                                            <ButtonLabel
+                                            <StyledButton
+                                              data-test-id="delete"
+                                              disabled={false}
+                                              onClick={[Function]}
+                                              role="button"
                                               size="xsmall"
                                             >
                                               <Component
-                                                className="css-uthd1f-ButtonLabel eqrebog1"
+                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                data-test-id="delete"
+                                                disabled={false}
+                                                onClick={[Function]}
+                                                role="button"
                                                 size="xsmall"
                                               >
-                                                <span
-                                                  className="css-uthd1f-ButtonLabel eqrebog1"
+                                                <button
+                                                  className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                  data-test-id="delete"
+                                                  disabled={false}
+                                                  onClick={[Function]}
+                                                  role="button"
+                                                  size="xsmall"
                                                 >
-                                                  <Icon
-                                                    hasChildren={false}
+                                                  <ButtonLabel
                                                     size="xsmall"
                                                   >
                                                     <Component
-                                                      className="css-ljhpxy-Icon eqrebog2"
-                                                      hasChildren={false}
+                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                       size="xsmall"
                                                     >
                                                       <span
-                                                        className="css-ljhpxy-Icon eqrebog2"
-                                                        size="xsmall"
+                                                        className="css-uthd1f-ButtonLabel eqrebog1"
                                                       >
-                                                        <StyledInlineSvg
-                                                          size="12px"
-                                                          src="icon-trash"
+                                                        <Icon
+                                                          hasChildren={false}
+                                                          size="xsmall"
                                                         >
-                                                          <InlineSvg
-                                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
-                                                            size="12px"
-                                                            src="icon-trash"
+                                                          <Component
+                                                            className="css-ljhpxy-Icon eqrebog2"
+                                                            hasChildren={false}
+                                                            size="xsmall"
                                                           >
-                                                            <StyledSvg
-                                                              className="css-1ov3rcq-StyledInlineSvg eqrebog3"
-                                                              height="12px"
-                                                              viewBox={Object {}}
-                                                              width="12px"
+                                                            <span
+                                                              className="css-ljhpxy-Icon eqrebog2"
+                                                              size="xsmall"
                                                             >
-                                                              <svg
-                                                                className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
-                                                                height="12px"
-                                                                viewBox={Object {}}
-                                                                width="12px"
+                                                              <StyledInlineSvg
+                                                                size="12px"
+                                                                src="icon-trash"
                                                               >
-                                                                <use
-                                                                  href="#test"
-                                                                  xlinkHref="#test"
-                                                                />
-                                                              </svg>
-                                                            </StyledSvg>
-                                                          </InlineSvg>
-                                                        </StyledInlineSvg>
+                                                                <InlineSvg
+                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                                  size="12px"
+                                                                  src="icon-trash"
+                                                                >
+                                                                  <StyledSvg
+                                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                                    height="12px"
+                                                                    viewBox={Object {}}
+                                                                    width="12px"
+                                                                  >
+                                                                    <svg
+                                                                      className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                                                      height="12px"
+                                                                      viewBox={Object {}}
+                                                                      width="12px"
+                                                                    >
+                                                                      <use
+                                                                        href="#test"
+                                                                        xlinkHref="#test"
+                                                                      />
+                                                                    </svg>
+                                                                  </StyledSvg>
+                                                                </InlineSvg>
+                                                              </StyledInlineSvg>
+                                                            </span>
+                                                          </Component>
+                                                        </Icon>
                                                       </span>
                                                     </Component>
-                                                  </Icon>
-                                                </span>
+                                                  </ButtonLabel>
+                                                </button>
                                               </Component>
-                                            </ButtonLabel>
-                                          </button>
-                                        </Component>
-                                      </StyledButton>
-                                    </Button>
-                                  </a>
-                                  <Modal
-                                    animation={false}
-                                    autoFocus={true}
-                                    backdrop={true}
-                                    bsClass="modal"
-                                    dialogComponentClass={[Function]}
-                                    enforceFocus={true}
-                                    keyboard={true}
-                                    manager={
-                                      ModalManager {
-                                        "add": [Function],
-                                        "containers": Array [],
-                                        "data": Array [],
-                                        "handleContainerOverflow": true,
-                                        "hideSiblingNodes": true,
-                                        "isTopModal": [Function],
-                                        "modals": Array [],
-                                        "remove": [Function],
-                                      }
-                                    }
-                                    onHide={[Function]}
-                                    renderBackdrop={[Function]}
-                                    restoreFocus={true}
-                                    show={false}
-                                  >
-                                    <Modal
-                                      autoFocus={true}
-                                      backdrop={true}
-                                      backdropClassName="modal-backdrop"
-                                      containerClassName="modal-open"
-                                      enforceFocus={true}
-                                      keyboard={true}
-                                      manager={
-                                        ModalManager {
-                                          "add": [Function],
-                                          "containers": Array [],
-                                          "data": Array [],
-                                          "handleContainerOverflow": true,
-                                          "hideSiblingNodes": true,
-                                          "isTopModal": [Function],
-                                          "modals": Array [],
-                                          "remove": [Function],
-                                        }
-                                      }
-                                      onEntering={[Function]}
-                                      onExited={[Function]}
-                                      onHide={[Function]}
-                                      renderBackdrop={[Function]}
-                                      restoreFocus={true}
-                                      show={false}
-                                    />
-                                  </Modal>
-                                </Confirm>
-                              </LinkWithConfirmation>
-                            </div>
-                          </Base>
-                        </Flex>
-                      </div>
-                    </Base>
-                  </PanelItem>
-                  <PanelItem
-                    align="center"
-                    className="ref-tag-row"
-                    key="url"
-                    p={0}
-                  >
-                    <Base
+                                            </StyledButton>
+                                          </Button>
+                                        </a>
+                                        <Modal
+                                          animation={false}
+                                          autoFocus={true}
+                                          backdrop={true}
+                                          bsClass="modal"
+                                          dialogComponentClass={[Function]}
+                                          enforceFocus={true}
+                                          keyboard={true}
+                                          manager={
+                                            ModalManager {
+                                              "add": [Function],
+                                              "containers": Array [],
+                                              "data": Array [],
+                                              "handleContainerOverflow": true,
+                                              "hideSiblingNodes": true,
+                                              "isTopModal": [Function],
+                                              "modals": Array [],
+                                              "remove": [Function],
+                                            }
+                                          }
+                                          onHide={[Function]}
+                                          renderBackdrop={[Function]}
+                                          restoreFocus={true}
+                                          show={false}
+                                        >
+                                          <Modal
+                                            autoFocus={true}
+                                            backdrop={true}
+                                            backdropClassName="modal-backdrop"
+                                            containerClassName="modal-open"
+                                            enforceFocus={true}
+                                            keyboard={true}
+                                            manager={
+                                              ModalManager {
+                                                "add": [Function],
+                                                "containers": Array [],
+                                                "data": Array [],
+                                                "handleContainerOverflow": true,
+                                                "hideSiblingNodes": true,
+                                                "isTopModal": [Function],
+                                                "modals": Array [],
+                                                "remove": [Function],
+                                              }
+                                            }
+                                            onEntering={[Function]}
+                                            onExited={[Function]}
+                                            onHide={[Function]}
+                                            renderBackdrop={[Function]}
+                                            restoreFocus={true}
+                                            show={false}
+                                          />
+                                        </Modal>
+                                      </Confirm>
+                                    </LinkWithConfirmation>
+                                  </span>
+                                </Tooltip>
+                              </div>
+                            </Base>
+                          </Flex>
+                        </div>
+                      </Base>
+                    </PanelItem>
+                    <PanelItem
                       align="center"
-                      className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                      className="ref-tag-row"
+                      key="url"
                       p={0}
                     >
-                      <div
+                      <Base
+                        align="center"
                         className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
-                        is={null}
+                        p={0}
                       >
-                        <Box
-                          align="flex-end"
-                          flex="1"
-                          p={2}
+                        <div
+                          className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                          is={null}
                         >
-                          <Base
+                          <Box
                             align="flex-end"
-                            className="css-14o7hgh"
                             flex="1"
                             p={2}
                           >
-                            <div
+                            <Base
+                              align="flex-end"
                               className="css-14o7hgh"
-                              is={null}
+                              flex="1"
+                              p={2}
                             >
-                              <span>
-                                url
-                              </span>
-                            </div>
-                          </Base>
-                        </Box>
-                        <Flex
-                          align="center"
-                          p={2}
-                        >
-                          <Base
+                              <div
+                                className="css-14o7hgh"
+                                is={null}
+                              >
+                                <span>
+                                  url
+                                </span>
+                              </div>
+                            </Base>
+                          </Box>
+                          <Flex
                             align="center"
-                            className="css-p3ab1k"
                             p={2}
                           >
-                            <div
+                            <Base
+                              align="center"
                               className="css-p3ab1k"
-                              is={null}
+                              p={2}
                             >
-                              <LinkWithConfirmation
-                                disabled={false}
-                                message="Are you sure you want to remove this tag?"
-                                onConfirm={[Function]}
-                                title="Remove tag?"
+                              <div
+                                className="css-p3ab1k"
+                                is={null}
                               >
-                                <Confirm
-                                  cancelText="Cancel"
-                                  confirmText="Confirm"
-                                  disableConfirmButton={false}
-                                  disabled={false}
-                                  message="Are you sure you want to remove this tag?"
-                                  onConfirm={[Function]}
-                                  priority="primary"
+                                <Tooltip
+                                  disabled={true}
+                                  title="This tag cannot be deleted."
                                 >
-                                  <a
-                                    disabled={false}
-                                    onClick={[Function]}
-                                    title="Remove tag?"
-                                  >
-                                    <Button
-                                      data-test-id="delete"
+                                  <span>
+                                    <LinkWithConfirmation
                                       disabled={false}
-                                      icon="icon-trash"
-                                      size="xsmall"
+                                      message="Are you sure you want to remove this tag?"
+                                      onConfirm={[Function]}
+                                      title="Remove tag?"
                                     >
-                                      <StyledButton
-                                        data-test-id="delete"
+                                      <Confirm
+                                        cancelText="Cancel"
+                                        confirmText="Confirm"
+                                        disableConfirmButton={false}
                                         disabled={false}
-                                        onClick={[Function]}
-                                        role="button"
-                                        size="xsmall"
+                                        message="Are you sure you want to remove this tag?"
+                                        onConfirm={[Function]}
+                                        priority="primary"
                                       >
-                                        <Component
-                                          className="css-dkprmi-StyledButton-getColors eqrebog0"
-                                          data-test-id="delete"
+                                        <a
                                           disabled={false}
                                           onClick={[Function]}
-                                          role="button"
-                                          size="xsmall"
+                                          title="Remove tag?"
                                         >
-                                          <button
-                                            className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                          <Button
                                             data-test-id="delete"
                                             disabled={false}
-                                            onClick={[Function]}
-                                            role="button"
+                                            icon="icon-trash"
                                             size="xsmall"
                                           >
-                                            <ButtonLabel
+                                            <StyledButton
+                                              data-test-id="delete"
+                                              disabled={false}
+                                              onClick={[Function]}
+                                              role="button"
                                               size="xsmall"
                                             >
                                               <Component
-                                                className="css-uthd1f-ButtonLabel eqrebog1"
+                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                data-test-id="delete"
+                                                disabled={false}
+                                                onClick={[Function]}
+                                                role="button"
                                                 size="xsmall"
                                               >
-                                                <span
-                                                  className="css-uthd1f-ButtonLabel eqrebog1"
+                                                <button
+                                                  className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                                  data-test-id="delete"
+                                                  disabled={false}
+                                                  onClick={[Function]}
+                                                  role="button"
+                                                  size="xsmall"
                                                 >
-                                                  <Icon
-                                                    hasChildren={false}
+                                                  <ButtonLabel
                                                     size="xsmall"
                                                   >
                                                     <Component
-                                                      className="css-ljhpxy-Icon eqrebog2"
-                                                      hasChildren={false}
+                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                       size="xsmall"
                                                     >
                                                       <span
-                                                        className="css-ljhpxy-Icon eqrebog2"
-                                                        size="xsmall"
+                                                        className="css-uthd1f-ButtonLabel eqrebog1"
                                                       >
-                                                        <StyledInlineSvg
-                                                          size="12px"
-                                                          src="icon-trash"
+                                                        <Icon
+                                                          hasChildren={false}
+                                                          size="xsmall"
                                                         >
-                                                          <InlineSvg
-                                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
-                                                            size="12px"
-                                                            src="icon-trash"
+                                                          <Component
+                                                            className="css-ljhpxy-Icon eqrebog2"
+                                                            hasChildren={false}
+                                                            size="xsmall"
                                                           >
-                                                            <StyledSvg
-                                                              className="css-1ov3rcq-StyledInlineSvg eqrebog3"
-                                                              height="12px"
-                                                              viewBox={Object {}}
-                                                              width="12px"
+                                                            <span
+                                                              className="css-ljhpxy-Icon eqrebog2"
+                                                              size="xsmall"
                                                             >
-                                                              <svg
-                                                                className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
-                                                                height="12px"
-                                                                viewBox={Object {}}
-                                                                width="12px"
+                                                              <StyledInlineSvg
+                                                                size="12px"
+                                                                src="icon-trash"
                                                               >
-                                                                <use
-                                                                  href="#test"
-                                                                  xlinkHref="#test"
-                                                                />
-                                                              </svg>
-                                                            </StyledSvg>
-                                                          </InlineSvg>
-                                                        </StyledInlineSvg>
+                                                                <InlineSvg
+                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                                  size="12px"
+                                                                  src="icon-trash"
+                                                                >
+                                                                  <StyledSvg
+                                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                                    height="12px"
+                                                                    viewBox={Object {}}
+                                                                    width="12px"
+                                                                  >
+                                                                    <svg
+                                                                      className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                                                      height="12px"
+                                                                      viewBox={Object {}}
+                                                                      width="12px"
+                                                                    >
+                                                                      <use
+                                                                        href="#test"
+                                                                        xlinkHref="#test"
+                                                                      />
+                                                                    </svg>
+                                                                  </StyledSvg>
+                                                                </InlineSvg>
+                                                              </StyledInlineSvg>
+                                                            </span>
+                                                          </Component>
+                                                        </Icon>
                                                       </span>
                                                     </Component>
-                                                  </Icon>
-                                                </span>
+                                                  </ButtonLabel>
+                                                </button>
                                               </Component>
-                                            </ButtonLabel>
-                                          </button>
-                                        </Component>
-                                      </StyledButton>
-                                    </Button>
-                                  </a>
-                                  <Modal
-                                    animation={false}
-                                    autoFocus={true}
-                                    backdrop={true}
-                                    bsClass="modal"
-                                    dialogComponentClass={[Function]}
-                                    enforceFocus={true}
-                                    keyboard={true}
-                                    manager={
-                                      ModalManager {
-                                        "add": [Function],
-                                        "containers": Array [],
-                                        "data": Array [],
-                                        "handleContainerOverflow": true,
-                                        "hideSiblingNodes": true,
-                                        "isTopModal": [Function],
-                                        "modals": Array [],
-                                        "remove": [Function],
-                                      }
-                                    }
-                                    onHide={[Function]}
-                                    renderBackdrop={[Function]}
-                                    restoreFocus={true}
-                                    show={false}
-                                  >
-                                    <Modal
-                                      autoFocus={true}
-                                      backdrop={true}
-                                      backdropClassName="modal-backdrop"
-                                      containerClassName="modal-open"
-                                      enforceFocus={true}
-                                      keyboard={true}
-                                      manager={
-                                        ModalManager {
-                                          "add": [Function],
-                                          "containers": Array [],
-                                          "data": Array [],
-                                          "handleContainerOverflow": true,
-                                          "hideSiblingNodes": true,
-                                          "isTopModal": [Function],
-                                          "modals": Array [],
-                                          "remove": [Function],
-                                        }
-                                      }
-                                      onEntering={[Function]}
-                                      onExited={[Function]}
-                                      onHide={[Function]}
-                                      renderBackdrop={[Function]}
-                                      restoreFocus={true}
-                                      show={false}
-                                    />
-                                  </Modal>
-                                </Confirm>
-                              </LinkWithConfirmation>
-                            </div>
-                          </Base>
-                        </Flex>
-                      </div>
-                    </Base>
-                  </PanelItem>
-                  <PanelItem
-                    align="center"
-                    className="ref-tag-row"
-                    key="environment"
-                    p={0}
-                  >
-                    <Base
+                                            </StyledButton>
+                                          </Button>
+                                        </a>
+                                        <Modal
+                                          animation={false}
+                                          autoFocus={true}
+                                          backdrop={true}
+                                          bsClass="modal"
+                                          dialogComponentClass={[Function]}
+                                          enforceFocus={true}
+                                          keyboard={true}
+                                          manager={
+                                            ModalManager {
+                                              "add": [Function],
+                                              "containers": Array [],
+                                              "data": Array [],
+                                              "handleContainerOverflow": true,
+                                              "hideSiblingNodes": true,
+                                              "isTopModal": [Function],
+                                              "modals": Array [],
+                                              "remove": [Function],
+                                            }
+                                          }
+                                          onHide={[Function]}
+                                          renderBackdrop={[Function]}
+                                          restoreFocus={true}
+                                          show={false}
+                                        >
+                                          <Modal
+                                            autoFocus={true}
+                                            backdrop={true}
+                                            backdropClassName="modal-backdrop"
+                                            containerClassName="modal-open"
+                                            enforceFocus={true}
+                                            keyboard={true}
+                                            manager={
+                                              ModalManager {
+                                                "add": [Function],
+                                                "containers": Array [],
+                                                "data": Array [],
+                                                "handleContainerOverflow": true,
+                                                "hideSiblingNodes": true,
+                                                "isTopModal": [Function],
+                                                "modals": Array [],
+                                                "remove": [Function],
+                                              }
+                                            }
+                                            onEntering={[Function]}
+                                            onExited={[Function]}
+                                            onHide={[Function]}
+                                            renderBackdrop={[Function]}
+                                            restoreFocus={true}
+                                            show={false}
+                                          />
+                                        </Modal>
+                                      </Confirm>
+                                    </LinkWithConfirmation>
+                                  </span>
+                                </Tooltip>
+                              </div>
+                            </Base>
+                          </Flex>
+                        </div>
+                      </Base>
+                    </PanelItem>
+                    <PanelItem
                       align="center"
-                      className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                      className="ref-tag-row"
+                      key="environment"
                       p={0}
                     >
-                      <div
+                      <Base
+                        align="center"
                         className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
-                        is={null}
+                        p={0}
                       >
-                        <Box
-                          align="flex-end"
-                          flex="1"
-                          p={2}
+                        <div
+                          className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                          is={null}
                         >
-                          <Base
+                          <Box
                             align="flex-end"
-                            className="css-14o7hgh"
                             flex="1"
                             p={2}
                           >
-                            <div
+                            <Base
+                              align="flex-end"
                               className="css-14o7hgh"
-                              is={null}
+                              flex="1"
+                              p={2}
                             >
-                              <span>
-                                environment
-                              </span>
-                            </div>
-                          </Base>
-                        </Box>
-                        <Flex
-                          align="center"
-                          p={2}
-                        >
-                          <Base
+                              <div
+                                className="css-14o7hgh"
+                                is={null}
+                              >
+                                <span>
+                                  environment
+                                </span>
+                              </div>
+                            </Base>
+                          </Box>
+                          <Flex
                             align="center"
-                            className="css-p3ab1k"
                             p={2}
                           >
-                            <div
+                            <Base
+                              align="center"
                               className="css-p3ab1k"
-                              is={null}
+                              p={2}
                             >
-                              <Tooltip
-                                title="This tag cannot be deleted."
+                              <div
+                                className="css-p3ab1k"
+                                is={null}
                               >
-                                <span
-                                  className="tip"
+                                <Tooltip
+                                  disabled={false}
                                   title="This tag cannot be deleted."
                                 >
-                                  <LinkWithConfirmation
-                                    disabled={true}
-                                    message="Are you sure you want to remove this tag?"
-                                    onConfirm={[Function]}
-                                    title="Remove tag?"
+                                  <span
+                                    className="tip"
+                                    title="This tag cannot be deleted."
                                   >
-                                    <Confirm
-                                      cancelText="Cancel"
-                                      confirmText="Confirm"
-                                      disableConfirmButton={false}
+                                    <LinkWithConfirmation
                                       disabled={true}
                                       message="Are you sure you want to remove this tag?"
                                       onConfirm={[Function]}
-                                      priority="primary"
+                                      title="Remove tag?"
                                     >
-                                      <a
-                                        className="undefined disabled"
+                                      <Confirm
+                                        cancelText="Cancel"
+                                        confirmText="Confirm"
+                                        disableConfirmButton={false}
                                         disabled={true}
-                                        onClick={[Function]}
-                                        title="Remove tag?"
+                                        message="Are you sure you want to remove this tag?"
+                                        onConfirm={[Function]}
+                                        priority="primary"
                                       >
-                                        <Button
-                                          data-test-id="delete"
-                                          disabled={false}
-                                          icon="icon-trash"
-                                          size="xsmall"
+                                        <a
+                                          className="undefined disabled"
+                                          disabled={true}
+                                          onClick={[Function]}
+                                          title="Remove tag?"
                                         >
-                                          <StyledButton
+                                          <Button
                                             data-test-id="delete"
-                                            disabled={false}
-                                            onClick={[Function]}
-                                            role="button"
+                                            disabled={true}
+                                            icon="icon-trash"
                                             size="xsmall"
                                           >
-                                            <Component
-                                              className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                            <StyledButton
                                               data-test-id="delete"
-                                              disabled={false}
+                                              disabled={true}
+                                              href={null}
                                               onClick={[Function]}
                                               role="button"
                                               size="xsmall"
+                                              to={null}
                                             >
-                                              <button
-                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
+                                              <Component
+                                                className="css-1rcxqx1-StyledButton-getColors eqrebog0"
                                                 data-test-id="delete"
-                                                disabled={false}
+                                                disabled={true}
+                                                href={null}
                                                 onClick={[Function]}
                                                 role="button"
                                                 size="xsmall"
+                                                to={null}
                                               >
-                                                <ButtonLabel
+                                                <button
+                                                  className="css-1rcxqx1-StyledButton-getColors eqrebog0"
+                                                  data-test-id="delete"
+                                                  disabled={true}
+                                                  href={null}
+                                                  onClick={[Function]}
+                                                  role="button"
                                                   size="xsmall"
+                                                  to={null}
                                                 >
-                                                  <Component
-                                                    className="css-uthd1f-ButtonLabel eqrebog1"
+                                                  <ButtonLabel
                                                     size="xsmall"
                                                   >
-                                                    <span
+                                                    <Component
                                                       className="css-uthd1f-ButtonLabel eqrebog1"
+                                                      size="xsmall"
                                                     >
-                                                      <Icon
-                                                        hasChildren={false}
-                                                        size="xsmall"
+                                                      <span
+                                                        className="css-uthd1f-ButtonLabel eqrebog1"
                                                       >
-                                                        <Component
-                                                          className="css-ljhpxy-Icon eqrebog2"
+                                                        <Icon
                                                           hasChildren={false}
                                                           size="xsmall"
                                                         >
-                                                          <span
+                                                          <Component
                                                             className="css-ljhpxy-Icon eqrebog2"
+                                                            hasChildren={false}
                                                             size="xsmall"
                                                           >
-                                                            <StyledInlineSvg
-                                                              size="12px"
-                                                              src="icon-trash"
+                                                            <span
+                                                              className="css-ljhpxy-Icon eqrebog2"
+                                                              size="xsmall"
                                                             >
-                                                              <InlineSvg
-                                                                className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                              <StyledInlineSvg
                                                                 size="12px"
                                                                 src="icon-trash"
                                                               >
-                                                                <StyledSvg
+                                                                <InlineSvg
                                                                   className="css-1ov3rcq-StyledInlineSvg eqrebog3"
-                                                                  height="12px"
-                                                                  viewBox={Object {}}
-                                                                  width="12px"
+                                                                  size="12px"
+                                                                  src="icon-trash"
                                                                 >
-                                                                  <svg
-                                                                    className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                                                  <StyledSvg
+                                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                     height="12px"
                                                                     viewBox={Object {}}
                                                                     width="12px"
                                                                   >
-                                                                    <use
-                                                                      href="#test"
-                                                                      xlinkHref="#test"
-                                                                    />
-                                                                  </svg>
-                                                                </StyledSvg>
-                                                              </InlineSvg>
-                                                            </StyledInlineSvg>
-                                                          </span>
-                                                        </Component>
-                                                      </Icon>
-                                                    </span>
-                                                  </Component>
-                                                </ButtonLabel>
-                                              </button>
-                                            </Component>
-                                          </StyledButton>
-                                        </Button>
-                                      </a>
-                                      <Modal
-                                        animation={false}
-                                        autoFocus={true}
-                                        backdrop={true}
-                                        bsClass="modal"
-                                        dialogComponentClass={[Function]}
-                                        enforceFocus={true}
-                                        keyboard={true}
-                                        manager={
-                                          ModalManager {
-                                            "add": [Function],
-                                            "containers": Array [],
-                                            "data": Array [],
-                                            "handleContainerOverflow": true,
-                                            "hideSiblingNodes": true,
-                                            "isTopModal": [Function],
-                                            "modals": Array [],
-                                            "remove": [Function],
-                                          }
-                                        }
-                                        onHide={[Function]}
-                                        renderBackdrop={[Function]}
-                                        restoreFocus={true}
-                                        show={false}
-                                      >
+                                                                    <svg
+                                                                      className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                                                      height="12px"
+                                                                      viewBox={Object {}}
+                                                                      width="12px"
+                                                                    >
+                                                                      <use
+                                                                        href="#test"
+                                                                        xlinkHref="#test"
+                                                                      />
+                                                                    </svg>
+                                                                  </StyledSvg>
+                                                                </InlineSvg>
+                                                              </StyledInlineSvg>
+                                                            </span>
+                                                          </Component>
+                                                        </Icon>
+                                                      </span>
+                                                    </Component>
+                                                  </ButtonLabel>
+                                                </button>
+                                              </Component>
+                                            </StyledButton>
+                                          </Button>
+                                        </a>
                                         <Modal
+                                          animation={false}
                                           autoFocus={true}
                                           backdrop={true}
-                                          backdropClassName="modal-backdrop"
-                                          containerClassName="modal-open"
+                                          bsClass="modal"
+                                          dialogComponentClass={[Function]}
                                           enforceFocus={true}
                                           keyboard={true}
                                           manager={
@@ -1035,30 +1098,55 @@ exports[`ProjectTags renders 1`] = `
                                               "remove": [Function],
                                             }
                                           }
-                                          onEntering={[Function]}
-                                          onExited={[Function]}
                                           onHide={[Function]}
                                           renderBackdrop={[Function]}
                                           restoreFocus={true}
                                           show={false}
-                                        />
-                                      </Modal>
-                                    </Confirm>
-                                  </LinkWithConfirmation>
-                                </span>
-                              </Tooltip>
-                            </div>
-                          </Base>
-                        </Flex>
-                      </div>
-                    </Base>
-                  </PanelItem>
-                </div>
-              </PanelBody>
-            </div>
-          </Component>
-        </Panel>
-      </div>
+                                        >
+                                          <Modal
+                                            autoFocus={true}
+                                            backdrop={true}
+                                            backdropClassName="modal-backdrop"
+                                            containerClassName="modal-open"
+                                            enforceFocus={true}
+                                            keyboard={true}
+                                            manager={
+                                              ModalManager {
+                                                "add": [Function],
+                                                "containers": Array [],
+                                                "data": Array [],
+                                                "handleContainerOverflow": true,
+                                                "hideSiblingNodes": true,
+                                                "isTopModal": [Function],
+                                                "modals": Array [],
+                                                "remove": [Function],
+                                              }
+                                            }
+                                            onEntering={[Function]}
+                                            onExited={[Function]}
+                                            onHide={[Function]}
+                                            renderBackdrop={[Function]}
+                                            restoreFocus={true}
+                                            show={false}
+                                          />
+                                        </Modal>
+                                      </Confirm>
+                                    </LinkWithConfirmation>
+                                  </span>
+                                </Tooltip>
+                              </div>
+                            </Base>
+                          </Flex>
+                        </div>
+                      </Base>
+                    </PanelItem>
+                  </Access>
+                </AccessContainer>
+              </div>
+            </PanelBody>
+          </div>
+        </Component>
+      </Panel>
     </DocumentTitle>
   </SideEffect(DocumentTitle)>
 </ProjectTags>
diff --git a/tests/js/spec/views/projectTags.spec.jsx b/tests/js/spec/views/projectTags.spec.jsx
index 7477ac963a..1587b9aa9f 100644
--- a/tests/js/spec/views/projectTags.spec.jsx
+++ b/tests/js/spec/views/projectTags.spec.jsx
@@ -45,6 +45,19 @@ describe('ProjectTags', function() {
     expect(wrapper.find('EmptyMessage')).toHaveLength(1);
   });
 
+  it('disables delete button for users without access', function() {
+    const context = {
+      organization: TestStubs.Organization({access: []}),
+    };
+
+    wrapper = mount(
+      <ProjectTags params={{orgId: org.slug, projectId: project.slug}} />,
+      TestStubs.routerContext([context])
+    );
+
+    expect(wrapper.find('Button[disabled=false]')).toHaveLength(0);
+  });
+
   it('renders', function() {
     expect(wrapper).toMatchSnapshot();
   });
