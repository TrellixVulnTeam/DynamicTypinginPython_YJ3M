commit 7b3a15e2eaa79e5a23376c8b33d145b308d690ce
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Feb 27 14:20:37 2019 -0800

    feat: Search by short ID searches all projects (#12216)
    
    Searching by group short ID ignores selected projects and search all user's projects.
    
    Addresses SEN-171

diff --git a/src/sentry/api/endpoints/organization_group_index.py b/src/sentry/api/endpoints/organization_group_index.py
index 45d0611520..8ef45ce632 100644
--- a/src/sentry/api/endpoints/organization_group_index.py
+++ b/src/sentry/api/endpoints/organization_group_index.py
@@ -127,8 +127,8 @@ class OrganizationGroupIndexEndpoint(OrganizationEventsEndpointBase):
 
             group = get_by_short_id(organization.id, request.GET.get('shortIdLookup'), query)
             if group is not None:
-                # check to make sure user has access to project
-                if group.project_id in project_ids:
+                # check all projects user has access to
+                if request.access.has_project_access(group.project):
                     response = Response(
                         serialize(
                             [group], request.user, serializer()
diff --git a/tests/snuba/api/endpoints/test_organization_group_index.py b/tests/snuba/api/endpoints/test_organization_group_index.py
index 0198831329..a3555a78e9 100644
--- a/tests/snuba/api/endpoints/test_organization_group_index.py
+++ b/tests/snuba/api/endpoints/test_organization_group_index.py
@@ -241,15 +241,27 @@ class GroupListTest(APITestCase, SnubaTestCase):
         response = self.get_valid_response(query=short_id, shortIdLookup=1)
         assert len(response.data) == 1
 
-    def test_lookup_by_short_id_no_perms(self):
+    def test_lookup_by_short_id_ignores_project_list(self):
         organization = self.create_organization()
         project = self.create_project(organization=organization)
         project2 = self.create_project(organization=organization)
-        team = self.create_team(organization=organization)
-        project2.add_team(team)
+        group = self.create_group(project=project2)
+        user = self.create_user()
+        self.create_member(organization=organization, user=user)
+
+        short_id = group.qualified_short_id
+
+        self.login_as(user=user)
+
+        response = self.get_valid_response(organization.slug, project=project.id, query=short_id, shortIdLookup=1)
+        assert len(response.data) == 1
+
+    def test_lookup_by_short_id_no_perms(self):
+        organization = self.create_organization()
+        project = self.create_project(organization=organization)
         group = self.create_group(project=project)
         user = self.create_user()
-        self.create_member(organization=organization, user=user, teams=[team])
+        self.create_member(organization=organization, user=user, has_global_access=False)
 
         short_id = group.qualified_short_id
 
