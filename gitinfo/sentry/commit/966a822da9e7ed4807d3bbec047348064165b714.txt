commit 966a822da9e7ed4807d3bbec047348064165b714
Author: David Cramer <dcramer@gmail.com>
Date:   Thu May 5 12:17:43 2011 -0700

    Ensure that we gracefully fail when accessing value.__sentry__ blows up

diff --git a/CHANGES b/CHANGES
index 77c4f0cacb..b30c4b483d 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,6 +1,8 @@
 1.7.5
 
 * Implemented new client/server storage API and signing methods.
+* Fixed a bug where accessing __sentry__ would sometimes cause errors on
+  certain code paths.
 
 1.7.4
 
diff --git a/sentry/helpers.py b/sentry/helpers.py
index 1d6c26b6e2..30a5a7b33d 100644
--- a/sentry/helpers.py
+++ b/sentry/helpers.py
@@ -71,6 +71,12 @@ def varmap(func, var, context=None):
     del context[objid]
     return ret
 
+def has_sentry_metadata(value):
+    try:
+        return callable(getattr(value, '__sentry__', None))
+    except:
+        return False
+
 def transform(value, stack=[], context=None):
     # TODO: make this extendable
     # TODO: include some sane defaults, like UUID
@@ -98,7 +104,7 @@ def transform(value, stack=[], context=None):
         except:
             ret = to_unicode(value)
     elif not isinstance(value, (ClassType, TypeType)) and \
-            callable(getattr(value, '__sentry__', None)):
+            has_sentry_metadata(value):
         ret = transform_rec(value.__sentry__())
     elif not isinstance(value, (int, bool)) and value is not None:
         # XXX: we could do transform(repr(value)) here
