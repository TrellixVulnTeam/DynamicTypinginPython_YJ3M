commit 50960aec8c6ecd2c6c38098a25f584900640cf4e
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Dec 11 14:56:21 2019 -0800

    fix: Restrict load sample data to only loading files within the samples folder
    
    Fixes SEN-1247

diff --git a/src/sentry/utils/json.py b/src/sentry/utils/json.py
index e7c1539b90..b8c05444ae 100644
--- a/src/sentry/utils/json.py
+++ b/src/sentry/utils/json.py
@@ -99,6 +99,10 @@ def dumps(value, escape=False, **kwargs):
     return _default_encoder.encode(value)
 
 
+def load(fp, **kwargs):
+    return loads(fp.read())
+
+
 def loads(value, **kwargs):
     return _default_decoder.decode(value)
 
diff --git a/src/sentry/utils/samples.py b/src/sentry/utils/samples.py
index 61f124cbf3..4cc847cd41 100644
--- a/src/sentry/utils/samples.py
+++ b/src/sentry/utils/samples.py
@@ -116,12 +116,17 @@ def load_data(platform, default=None, sample_name=None):
     if platform_data is not None and platform_data["type"] != "language":
         language = platform_data["language"]
 
+    samples_root = os.path.join(DATA_ROOT, "samples")
+    all_samples = set(f for f in os.listdir(samples_root) if f.endswith(".json"))
+
     for platform in (platform, language, default):
         if not platform:
             continue
 
-        json_path = os.path.join(DATA_ROOT, "samples", "%s.json" % (platform.encode("utf-8"),))
-        if not os.path.exists(json_path):
+        # Verify by checking if the file is within our folder explicitly
+        # avoids being able to have a name that invokes traversing directories.
+        json_path = "%s.json" % platform.encode("utf-8")
+        if json_path not in all_samples:
             continue
 
         if not sample_name:
@@ -130,8 +135,11 @@ def load_data(platform, default=None, sample_name=None):
             except KeyError:
                 pass
 
-        with open(json_path) as fp:
-            data = json.loads(fp.read())
+        # XXX: At this point, it's assumed that `json_path` was safely found
+        # within `samples_root` due to the check above and cannot traverse
+        # into paths.
+        with open(os.path.join(samples_root, json_path)) as fp:
+            data = json.load(fp)
             break
 
     if data is None:
