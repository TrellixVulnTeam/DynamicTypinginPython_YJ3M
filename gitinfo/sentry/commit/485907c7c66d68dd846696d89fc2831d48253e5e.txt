commit 485907c7c66d68dd846696d89fc2831d48253e5e
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Fri Mar 6 00:47:31 2020 -0800

    chore(ts): Always use exported Theme type (#17497)

diff --git a/src/sentry/static/sentry/app/components/dropdownBubble.tsx b/src/sentry/static/sentry/app/components/dropdownBubble.tsx
index f7e69a5ce3..1d4038cbef 100644
--- a/src/sentry/static/sentry/app/components/dropdownBubble.tsx
+++ b/src/sentry/static/sentry/app/components/dropdownBubble.tsx
@@ -2,7 +2,7 @@ import {css} from '@emotion/core';
 import styled from '@emotion/styled';
 
 import SettingsHeader from 'app/views/settings/components/settingsHeader';
-import themeObj from 'app/utils/theme';
+import {Theme} from 'app/utils/theme';
 
 type Params = {
   /**
@@ -26,7 +26,7 @@ type Params = {
    */
   menuWithArrow: boolean;
 
-  theme: typeof themeObj;
+  theme: Theme;
 };
 
 /**
diff --git a/src/sentry/static/sentry/app/components/organizations/headerItemPosition.tsx b/src/sentry/static/sentry/app/components/organizations/headerItemPosition.tsx
index 41d0e0d59f..fd0537c412 100644
--- a/src/sentry/static/sentry/app/components/organizations/headerItemPosition.tsx
+++ b/src/sentry/static/sentry/app/components/organizations/headerItemPosition.tsx
@@ -1,12 +1,12 @@
 import styled from '@emotion/styled';
 
-import theme from 'app/utils/theme';
+import {Theme} from 'app/utils/theme';
 import {AutoCompleteRoot} from 'app/components/dropdownAutoCompleteMenu';
 import {TimeRangeRoot} from 'app/components/organizations/timeRangeSelector/index';
 
 type Props = {
   isSpacer?: boolean;
-  theme: typeof theme;
+  theme: Theme;
 };
 
 function getMediaQueryForSpacer(p: Props): string {
diff --git a/src/sentry/static/sentry/app/components/progressRing.tsx b/src/sentry/static/sentry/app/components/progressRing.tsx
index 8387c4eb00..c3143e76a6 100644
--- a/src/sentry/static/sentry/app/components/progressRing.tsx
+++ b/src/sentry/static/sentry/app/components/progressRing.tsx
@@ -2,13 +2,13 @@ import React from 'react';
 import styled, {SerializedStyles} from '@emotion/styled';
 import posed, {PoseGroup} from 'react-pose';
 
-import theme from 'app/utils/theme';
+import theme, {Theme} from 'app/utils/theme';
 import testablePose from 'app/utils/testablePose';
 
 type TextProps = {
   textCss?: Props['textCss'];
   percent: number;
-  theme: typeof theme;
+  theme: Theme;
 };
 
 type Props = React.HTMLAttributes<SVGSVGElement> & {
@@ -42,6 +42,10 @@ type Props = React.HTMLAttributes<SVGSVGElement> & {
    * The color of the ring background
    */
   backgroundColor?: string;
+  /**
+   * Endcaps on the progress bar
+   */
+  progressEndcaps?: React.SVGAttributes<SVGCircleElement>['strokeLinecap'];
 };
 
 const Text = styled('text')<Omit<TextProps, 'theme'>>`
@@ -72,6 +76,7 @@ const ProgressRing = ({
   animateText = false,
   progressColor = theme.green,
   backgroundColor = theme.offWhite2,
+  progressEndcaps,
   ...p
 }: Props) => {
   const radius = size / 2 - barWidth / 2;
@@ -111,6 +116,7 @@ const ProgressRing = ({
       />
       <RingBar
         strokeDashoffset={progressOffset}
+        strokeLinecap={progressEndcaps}
         circumference={circumference}
         r={radius}
         barWidth={barWidth}
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.tsx b/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.tsx
index e64917ab83..d422062656 100644
--- a/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.tsx
@@ -3,7 +3,7 @@ import React from 'react';
 import styled from '@emotion/styled';
 import {css} from '@emotion/core';
 
-import theme from 'app/utils/theme';
+import {Theme} from 'app/utils/theme';
 import space from 'app/styles/space';
 import {IconClose} from 'app/icons';
 
@@ -41,7 +41,7 @@ SidebarPanel.propTypes = {
 
 export default SidebarPanel;
 
-const getPositionForOrientation = (p: Props & {theme: typeof theme}) =>
+const getPositionForOrientation = (p: Props & {theme: Theme}) =>
   p.orientation === 'top'
     ? css`
         top: ${p.theme.sidebar.mobileHeight};
diff --git a/src/sentry/static/sentry/app/styled.tsx b/src/sentry/static/sentry/app/styled.tsx
index 9e102522f4..1f70b9b1ef 100644
--- a/src/sentry/static/sentry/app/styled.tsx
+++ b/src/sentry/static/sentry/app/styled.tsx
@@ -21,9 +21,7 @@ import * as React from 'react';
 // eslint-disable-next-line import/no-unresolved
 import * as CSS from 'csstype';
 
-import theme from './utils/theme';
-
-type Theme = typeof theme;
+import {Theme} from './utils/theme';
 
 /**
  * @desc Utility type for getting props type of React component.
diff --git a/src/sentry/static/sentry/app/styles/input.tsx b/src/sentry/static/sentry/app/styles/input.tsx
index 34b34f4781..667a2b68a1 100644
--- a/src/sentry/static/sentry/app/styles/input.tsx
+++ b/src/sentry/static/sentry/app/styles/input.tsx
@@ -1,10 +1,12 @@
 import {css} from '@emotion/core';
 
+import {Theme} from 'app/utils/theme';
+
 type Props = {
   disabled?: boolean;
   monospace?: boolean;
   readOnly?: boolean;
-  theme: any;
+  theme: Theme;
 };
 
 const inputStyles = (props: Props) =>
