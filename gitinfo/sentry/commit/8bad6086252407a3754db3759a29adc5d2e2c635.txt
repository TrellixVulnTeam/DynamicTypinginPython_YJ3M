commit 8bad6086252407a3754db3759a29adc5d2e2c635
Author: Jess MacQueen <jess@getsentry.com>
Date:   Fri Apr 15 16:28:03 2016 -0700

    add css classes to bars

diff --git a/src/sentry/static/sentry/app/components/barChart.jsx b/src/sentry/static/sentry/app/components/barChart.jsx
index 051019b50b..f3d4f93114 100644
--- a/src/sentry/static/sentry/app/components/barChart.jsx
+++ b/src/sentry/static/sentry/app/components/barChart.jsx
@@ -18,7 +18,8 @@ const BarChart = React.createClass({
     markers: React.PropTypes.arrayOf(React.PropTypes.shape({
       x: React.PropTypes.number.isRequired,
       label: React.PropTypes.string
-    }))
+    })),
+    barClasses: React.PropTypes.array
   },
 
   mixins: [
@@ -61,7 +62,8 @@ const BarChart = React.createClass({
       placement: 'bottom',
       points: [],
       markers: [],
-      width: null
+      width: null,
+      barClasses: ['chart-bar']
     };
   },
 
@@ -205,7 +207,8 @@ const BarChart = React.createClass({
     let pts = point.y.map((y, i) => {
         let pct = totalY && this.floatFormat((y / totalY) * totalPct * 99, 2);
         let pt = (
-          <span key={i} style={{height: pct + '%', bottom: prevPct + '%'}}>{y}</span>
+          <span key={i} className={this.props.barClasses[i]}
+                style={{height: pct + '%', bottom: prevPct + '%'}}>{y}</span>
         );
         prevPct += pct;
         return pt;
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
index 97959a575c..2d60e8de29 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
@@ -255,10 +255,7 @@ const EPH = React.createClass({
       for (let i = 0; i < this.STAT_OPTS.length; i++) {
         rawOrgData[this.STAT_OPTS[i]] = arguments[i][0];
       }
-      this.setState({
-        rawOrgData: rawOrgData,
-        formattedData: this.formatData(rawOrgData)
-      });
+      this.setState(Object.assign({rawOrgData: rawOrgData}, this.getChartState(rawOrgData)));
     }.bind(this)).fail(function() {
       this.setState({error: true});
     }.bind(this));
@@ -268,17 +265,22 @@ const EPH = React.createClass({
     return `/organizations/${this.props.params.orgId}/stats/`;
   },
 
-  formatData(rawData) {
+  getChartState(rawData) {
     // TODO: make sure stats data is zero filled otherwise this will be wrong
     let chartData = [];
+    let barClasses = [];
     for (let i = 0; i < rawData.received.length; i++) {
       let point = {x: rawData.received[i][0], y: []};
       for (let statType in rawData) {
         point.y.push(rawData[statType][i][1]);
+        barClasses.push(statType);
       }
       chartData.push(point);
     }
-    return chartData;
+    return {
+      formattedData: chartData,
+      barClasses: barClasses
+    };
   },
 
   render() {
@@ -295,7 +297,7 @@ const EPH = React.createClass({
       <div>
         <Link className="btn-sidebar-header" to={`/organizations/${org.slug}/stats/`}>{t('View Stats')}</Link>
         <h6 className="nav-header">{t('Events Per Hour')}</h6>
-          <BarChart points={this.state.formattedData} className="sparkline" />
+          <BarChart points={this.state.formattedData} className="sparkline" barClasses={this.state.barClasses} />
       </div>
     );
   },
