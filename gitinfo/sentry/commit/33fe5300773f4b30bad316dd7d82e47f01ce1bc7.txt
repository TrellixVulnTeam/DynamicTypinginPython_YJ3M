commit 33fe5300773f4b30bad316dd7d82e47f01ce1bc7
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 31 16:08:45 2015 -0700

    Ensure non-members cannot be recorded as having seen an event

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index 781ace9df2..6b69a11264 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -227,7 +227,7 @@ class GroupDetailsEndpoint(GroupEndpoint):
             group.status = STATUS_CHOICES[result['status']]
             group.save()
 
-        if result.get('hasSeen'):
+        if result.get('hasSeen') and group.project.member_set.filter(user=request.user).exists():
             instance, created = create_or_update(
                 GroupSeen,
                 group=group,
diff --git a/tests/sentry/api/endpoints/test_group_details.py b/tests/sentry/api/endpoints/test_group_details.py
index e8f590edc6..9e6fd8014e 100644
--- a/tests/sentry/api/endpoints/test_group_details.py
+++ b/tests/sentry/api/endpoints/test_group_details.py
@@ -153,6 +153,24 @@ class GroupUpdateTest(APITestCase):
         assert not GroupSeen.objects.filter(
             group=group, user=self.user).exists()
 
+    def test_mark_seen_as_non_member(self):
+        user = self.create_user('foo@example.com', is_superuser=True)
+        self.login_as(user=user)
+
+        group = self.create_group()
+
+        url = reverse('sentry-api-0-group-details', kwargs={
+            'group_id': group.id
+        })
+        response = self.client.put(url, data={
+            'hasSeen': '1',
+        }, format='json')
+
+        assert response.status_code == 200, response.content
+
+        assert not GroupSeen.objects.filter(
+            group=group, user=self.user).exists()
+
 
 class GroupDeleteTest(APITestCase):
     def test_delete(self):
