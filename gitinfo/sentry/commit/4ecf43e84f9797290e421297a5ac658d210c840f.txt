commit 4ecf43e84f9797290e421297a5ac658d210c840f
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed May 15 13:22:48 2019 -0700

    fix(settings): Fix missing borders for Integrations List (#13210)

diff --git a/src/sentry/static/sentry/app/utils/withApi.jsx b/src/sentry/static/sentry/app/utils/withApi.jsx
index 007d760fa6..3f1917f23f 100644
--- a/src/sentry/static/sentry/app/utils/withApi.jsx
+++ b/src/sentry/static/sentry/app/utils/withApi.jsx
@@ -16,7 +16,9 @@ const withApi = WrappedComponent => {
       this.api.clear();
     }
     render() {
-      return <WrappedComponent api={this.api} {...this.props} />;
+      const {['data-test-id']: _, ...props} = this.props;
+
+      return <WrappedComponent api={this.api} {...props} />;
     }
   }
 
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
index 1d1a3da9d9..6a1cd2f115 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
@@ -134,19 +134,18 @@ class OrganizationIntegrations extends AsyncComponent {
 
   renderProvider(provider) {
     return (
-      <IntegrationRow key={`row-${provider.key}`}>
-        <ProviderRow
-          key={provider.key}
-          provider={provider}
-          orgId={this.props.params.orgId}
-          integrations={provider.integrations}
-          onInstall={this.onInstall}
-          onRemove={this.onRemove}
-          onDisable={this.onDisable}
-          onReinstall={this.onInstall}
-          enabledPlugins={this.enabledPlugins}
-        />
-      </IntegrationRow>
+      <ProviderRow
+        key={`row-${provider.key}`}
+        data-test-id="integration-row"
+        provider={provider}
+        orgId={this.props.params.orgId}
+        integrations={provider.integrations}
+        onInstall={this.onInstall}
+        onRemove={this.onRemove}
+        onDisable={this.onDisable}
+        onReinstall={this.onInstall}
+        enabledPlugins={this.enabledPlugins}
+      />
     );
   }
 
@@ -155,14 +154,13 @@ class OrganizationIntegrations extends AsyncComponent {
     const {appInstalls} = this.state;
 
     return (
-      <IntegrationRow key={`row-${key}`}>
-        <SentryAppInstallations
-          key={key}
-          organization={organization}
-          installs={appInstalls}
-          applications={apps}
-        />
-      </IntegrationRow>
+      <SentryAppInstallations
+        key={`sentry-app-row-${key}`}
+        data-test-id="integration-row"
+        organization={organization}
+        installs={appInstalls}
+        applications={apps}
+      />
     );
   }
 
@@ -232,8 +230,6 @@ class OrganizationIntegrations extends AsyncComponent {
   }
 }
 
-const IntegrationRow = styled('div')``;
-
 const StyledLoadingIndicator = styled(LoadingIndicator)`
   position: absolute;
   right: 7px;
diff --git a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
index 7ec55c0ce3..0d0451b631 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
@@ -157,7 +157,7 @@ describe('OrganizationIntegrations', () => {
     });
 
     it('sorts Sentry App Integrations among Integrations, alphabetically', () => {
-      const rows = wrapper.find('IntegrationRow');
+      const rows = wrapper.find('[data-test-id="integration-row"]');
 
       expect(rows.length).toBe(4);
 
@@ -367,9 +367,7 @@ describe('OrganizationIntegrations', () => {
       it('displays an Update when the Plugin is enabled but a new Integration is not', () => {
         expect(
           wrapper
-            .find('ProviderRow')
-            .filterWhere(n => n.key() === 'vsts')
-            .find('Button')
+            .find('ProviderRow PanelItem[data-test-id="vsts"] Button')
             .first()
             .text()
         ).toBe('Update');
@@ -378,9 +376,7 @@ describe('OrganizationIntegrations', () => {
       it('displays Add Another button when both Integration and Plugin are enabled', () => {
         expect(
           wrapper
-            .find('ProviderRow')
-            .filterWhere(n => n.key() === 'github')
-            .find('Button')
+            .find('ProviderRow PanelItem[data-test-id="github"] Button')
             .first()
             .text()
         ).toBe('Add Another');
@@ -389,9 +385,7 @@ describe('OrganizationIntegrations', () => {
       it('display an Install button when its not an upgradable Integration', () => {
         expect(
           wrapper
-            .find('ProviderRow')
-            .filterWhere(n => n.key() === 'jira')
-            .find('Button')
+            .find('ProviderRow PanelItem[data-test-id="jira"] Button')
             .first()
             .text()
         ).toBe('Install');
