commit 2879edf0f8cc6b4440057c218ae5c677d6601b95
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Aug 6 11:28:52 2015 -0700

    Add explicit protocol tests

diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index edafc93767..02438487ae 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -144,7 +144,7 @@ class BaseTestCase(Fixtures, Exam):
     def _makePostMessage(self, data):
         return base64.b64encode(self._makeMessage(data))
 
-    def _postWithHeader(self, data, key=None, secret=None):
+    def _postWithHeader(self, data, key=None, secret=None, protocol=None):
         if key is None:
             key = self.projectkey.public_key
             secret = self.projectkey.secret_key
@@ -154,7 +154,12 @@ class BaseTestCase(Fixtures, Exam):
             resp = self.client.post(
                 reverse('sentry-api-store'), message,
                 content_type='application/octet-stream',
-                HTTP_X_SENTRY_AUTH=get_auth_header('_postWithHeader', key, secret),
+                HTTP_X_SENTRY_AUTH=get_auth_header(
+                    '_postWithHeader',
+                    key,
+                    secret,
+                    protocol,
+                ),
             )
         return resp
 
diff --git a/src/sentry/testutils/helpers/auth_header.py b/src/sentry/testutils/helpers/auth_header.py
index e6c3562d87..8b098fc29f 100644
--- a/src/sentry/testutils/helpers/auth_header.py
+++ b/src/sentry/testutils/helpers/auth_header.py
@@ -3,10 +3,13 @@ from __future__ import absolute_import
 __all__ = ('get_auth_header',)
 
 
-def get_auth_header(client, api_key=None, secret_key=None):
+def get_auth_header(client, api_key=None, secret_key=None, version=None):
+    if version is None:
+        version = '6'
+
     header = [
         ('sentry_client', client),
-        ('sentry_version', '5'),
+        ('sentry_version', version),
     ]
 
     if api_key:
diff --git a/tests/integration/tests.py b/tests/integration/tests.py
index 7ba49ff0d2..fda8d1d4f7 100644
--- a/tests/integration/tests.py
+++ b/tests/integration/tests.py
@@ -260,6 +260,90 @@ class SentryRemoteTest(TestCase):
 
         assert instance.message == 'hello'
 
+    def test_protocol_v2_0_without_secret_key(self):
+        kwargs = {'message': 'hello'}
+
+        resp = self._postWithHeader(
+            data=kwargs,
+            key=self.projectkey.public_key,
+            protocol='2.0',
+        )
+
+        assert resp.status_code == 200, resp.content
+
+        event_id = json.loads(resp.content)['id']
+        instance = Event.objects.get(event_id=event_id)
+
+        assert instance.message == 'hello'
+
+    def test_protocol_v3(self):
+        kwargs = {'message': 'hello'}
+
+        resp = self._postWithHeader(
+            data=kwargs,
+            key=self.projectkey.public_key,
+            secret=self.projectkey.secret_key,
+            protocol='3',
+        )
+
+        assert resp.status_code == 200, resp.content
+
+        event_id = json.loads(resp.content)['id']
+        instance = Event.objects.get(event_id=event_id)
+
+        assert instance.message == 'hello'
+
+    def test_protocol_v4(self):
+        kwargs = {'message': 'hello'}
+
+        resp = self._postWithHeader(
+            data=kwargs,
+            key=self.projectkey.public_key,
+            secret=self.projectkey.secret_key,
+            protocol='4',
+        )
+
+        assert resp.status_code == 200, resp.content
+
+        event_id = json.loads(resp.content)['id']
+        instance = Event.objects.get(event_id=event_id)
+
+        assert instance.message == 'hello'
+
+    def test_protocol_v5(self):
+        kwargs = {'message': 'hello'}
+
+        resp = self._postWithHeader(
+            data=kwargs,
+            key=self.projectkey.public_key,
+            secret=self.projectkey.secret_key,
+            protocol='5',
+        )
+
+        assert resp.status_code == 200, resp.content
+
+        event_id = json.loads(resp.content)['id']
+        instance = Event.objects.get(event_id=event_id)
+
+        assert instance.message == 'hello'
+
+    def test_protocol_v6(self):
+        kwargs = {'message': 'hello'}
+
+        resp = self._postWithHeader(
+            data=kwargs,
+            key=self.projectkey.public_key,
+            secret=self.projectkey.secret_key,
+            protocol='6',
+        )
+
+        assert resp.status_code == 200, resp.content
+
+        event_id = json.loads(resp.content)['id']
+        instance = Event.objects.get(event_id=event_id)
+
+        assert instance.message == 'hello'
+
 
 class DepdendencyTest(TestCase):
     def raise_import_error(self, package):
