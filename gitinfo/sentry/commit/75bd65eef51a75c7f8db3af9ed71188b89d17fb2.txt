commit 75bd65eef51a75c7f8db3af9ed71188b89d17fb2
Author: jeffkwoh <23180853+jeffkwoh@users.noreply.github.com>
Date:   Fri Jan 17 11:14:03 2020 -0800

    feat(lint): Update prettier (#16505)
    
    Required to properly support nullish coalescence operator and optional chaining.

diff --git a/package.json b/package.json
index 62767dbc14..a020ba7a25 100644
--- a/package.json
+++ b/package.json
@@ -152,7 +152,7 @@
     "jest-junit": "^9.0.0",
     "mockdate": "2.0.5",
     "object.fromentries": "^2.0.0",
-    "prettier": "1.16.4",
+    "prettier": "1.19.1",
     "react-test-renderer": "16.7.0",
     "source-map-loader": "^0.2.4",
     "speed-measure-webpack-plugin": "^1.3.1",
diff --git a/src/sentry/static/sentry/app/actionCreators/modal.tsx b/src/sentry/static/sentry/app/actionCreators/modal.tsx
index d0679bcc5a..de16b8f298 100644
--- a/src/sentry/static/sentry/app/actionCreators/modal.tsx
+++ b/src/sentry/static/sentry/app/actionCreators/modal.tsx
@@ -115,7 +115,9 @@ export function openDiffModal(options: ModalOptions) {
  * we may add a project selection inside of the modal flow
  */
 export function openCreateTeamModal(options: ModalOptions = {}) {
-  import(/* webpackChunkName: "CreateTeamModal" */ 'app/components/modals/createTeamModal')
+  import(
+    /* webpackChunkName: "CreateTeamModal" */ 'app/components/modals/createTeamModal'
+  )
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} {...options} />, {
@@ -129,7 +131,9 @@ export function openCreateTeamModal(options: ModalOptions = {}) {
  * @param Object options.project The project to create a rules for
  */
 export function openCreateOwnershipRule(options: ModalOptions = {}) {
-  import(/* webpackChunkName: "CreateOwnershipRuleModal" */ 'app/components/modals/createOwnershipRuleModal')
+  import(
+    /* webpackChunkName: "CreateOwnershipRuleModal" */ 'app/components/modals/createOwnershipRuleModal'
+  )
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} {...options} />, {
@@ -149,7 +153,9 @@ export function openCommandPalette(options: ModalOptions = {}) {
 }
 
 export function openRecoveryOptions(options: ModalOptions = {}) {
-  import(/* webpackChunkName: "RecoveryOptionsModal" */ 'app/components/modals/recoveryOptionsModal')
+  import(
+    /* webpackChunkName: "RecoveryOptionsModal" */ 'app/components/modals/recoveryOptionsModal'
+  )
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} {...options} />, {
@@ -159,7 +165,9 @@ export function openRecoveryOptions(options: ModalOptions = {}) {
 }
 
 export function openTeamAccessRequestModal(options: TeamAccessRequestModalOptions) {
-  import(/* webpackChunkName: "TeamAccessRequestModal" */ 'app/components/modals/teamAccessRequestModal')
+  import(
+    /* webpackChunkName: "TeamAccessRequestModal" */ 'app/components/modals/teamAccessRequestModal'
+  )
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} {...options} />, {
@@ -173,7 +181,9 @@ export function openTeamAccessRequestModal(options: TeamAccessRequestModalOption
  * @param Function options.onAddIntegration Called after a new integration is added
  */
 export function openIntegrationDetails(options: IntegrationDetailsModalOptions) {
-  import(/* webpackChunkName: "IntegrationDetailsModal" */ 'app/components/modals/integrationDetailsModal')
+  import(
+    /* webpackChunkName: "IntegrationDetailsModal" */ 'app/components/modals/integrationDetailsModal'
+  )
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} {...options} />);
@@ -181,7 +191,9 @@ export function openIntegrationDetails(options: IntegrationDetailsModalOptions)
 }
 
 export function redirectToProject(newProjectSlug: string) {
-  import(/* webpackChunkName: "RedirectToProjectModal" */ 'app/components/modals/redirectToProject')
+  import(
+    /* webpackChunkName: "RedirectToProjectModal" */ 'app/components/modals/redirectToProject'
+  )
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} slug={newProjectSlug} />, {});
@@ -189,7 +201,9 @@ export function redirectToProject(newProjectSlug: string) {
 }
 
 export function openHelpSearchModal() {
-  import(/* webpackChunkName: "HelpSearchModal" */ 'app/components/modals/helpSearchModal')
+  import(
+    /* webpackChunkName: "HelpSearchModal" */ 'app/components/modals/helpSearchModal'
+  )
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} />, {
@@ -199,7 +213,9 @@ export function openHelpSearchModal() {
 }
 
 export function openSentryAppDetailsModal(options: SentryAppDetailsModalOptions) {
-  import(/* webpackChunkName: "SentryAppDetailsModal" */ 'app/components/modals/sentryAppDetailsModal')
+  import(
+    /* webpackChunkName: "SentryAppDetailsModal" */ 'app/components/modals/sentryAppDetailsModal'
+  )
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} {...options} />);
@@ -207,7 +223,9 @@ export function openSentryAppDetailsModal(options: SentryAppDetailsModalOptions)
 }
 
 export function openDebugFileSourceModal(options: ModalOptions = {}) {
-  import(/* webpackChunkName: "DebugFileSourceModal" */ 'app/components/modals/debugFileSourceModal')
+  import(
+    /* webpackChunkName: "DebugFileSourceModal" */ 'app/components/modals/debugFileSourceModal'
+  )
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} {...options} />, {
@@ -217,7 +235,9 @@ export function openDebugFileSourceModal(options: ModalOptions = {}) {
 }
 
 export async function openInviteMembersModal(options = {}) {
-  const mod = await import(/* webpackChunkName: "InviteMembersModal" */ 'app/components/modals/inviteMembersModal');
+  const mod = await import(
+    /* webpackChunkName: "InviteMembersModal" */ 'app/components/modals/inviteMembersModal'
+  );
   const {default: Modal, modalCss} = mod;
 
   openModal(deps => <Modal {...deps} {...options} />, {modalCss});
diff --git a/src/sentry/static/sentry/app/api.tsx b/src/sentry/static/sentry/app/api.tsx
index d3a28e4f56..39f4a066a6 100644
--- a/src/sentry/static/sentry/app/api.tsx
+++ b/src/sentry/static/sentry/app/api.tsx
@@ -336,10 +336,11 @@ export class Client {
           );
         },
         complete: (jqXHR: JQueryXHR, textStatus: string) => {
-          return this.wrapCallback<[JQueryXHR, string]>(id, options.complete, true)(
-            jqXHR,
-            textStatus
-          );
+          return this.wrapCallback<[JQueryXHR, string]>(
+            id,
+            options.complete,
+            true
+          )(jqXHR, textStatus);
         },
       })
     );
@@ -391,11 +392,9 @@ export class Client {
   }
 
   _chain<Args extends any[]>(...funcs: Array<((...args: Args) => any) | undefined>) {
-    const filteredFuncs = funcs.filter(
-      (f): f is (...args: Args) => any => {
-        return typeof f === 'function';
-      }
-    );
+    const filteredFuncs = funcs.filter((f): f is (...args: Args) => any => {
+      return typeof f === 'function';
+    });
     return (...args: Args): void => {
       filteredFuncs.forEach(func => {
         func.apply(funcs, args);
diff --git a/src/sentry/static/sentry/app/bootstrap.jsx b/src/sentry/static/sentry/app/bootstrap.jsx
index 50a22a005c..7b32889e2f 100644
--- a/src/sentry/static/sentry/app/bootstrap.jsx
+++ b/src/sentry/static/sentry/app/bootstrap.jsx
@@ -86,7 +86,9 @@ const render = Component => {
 // zxcvbn, a relatively byte-heavy password strength estimation library. Load
 // it on demand.
 async function loadPasswordStrength(callback) {
-  const module = await import(/* webpackChunkName: "passwordStrength" */ 'app/components/passwordStrength');
+  const module = await import(
+    /* webpackChunkName: "passwordStrength" */ 'app/components/passwordStrength'
+  );
   callback(module);
 }
 
diff --git a/src/sentry/static/sentry/app/components/actions/ignore.jsx b/src/sentry/static/sentry/app/components/actions/ignore.jsx
index 528c0b4bdd..0e77a4df37 100644
--- a/src/sentry/static/sentry/app/components/actions/ignore.jsx
+++ b/src/sentry/static/sentry/app/components/actions/ignore.jsx
@@ -39,7 +39,11 @@ export default class IgnoreActions extends React.Component {
   }
 
   getIgnoreWindows() {
-    return [[60, 'per hour'], [24 * 60, 'per day'], [24 * 7 * 60, 'per week']];
+    return [
+      [60, 'per hour'],
+      [24 * 60, 'per day'],
+      [24 * 7 * 60, 'per week'],
+    ];
   }
 
   onCustomIgnore(statusDetails) {
diff --git a/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx b/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
index ef5d3229e7..d1ba0ce1ad 100644
--- a/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
@@ -20,7 +20,9 @@ export default class WorldMapChart extends React.Component {
   }
 
   async componentDidMount() {
-    const countryToCodeMap = await import(/* webpackChunkName: "countryCodesMap" */ 'app/data/countryCodesMap');
+    const countryToCodeMap = await import(
+      /* webpackChunkName: "countryCodesMap" */ 'app/data/countryCodesMap'
+    );
 
     // eslint-disable-next-line
     this.setState({
diff --git a/src/sentry/static/sentry/app/components/createProject.jsx b/src/sentry/static/sentry/app/components/createProject.jsx
index b2ce578f14..a62da4d078 100644
--- a/src/sentry/static/sentry/app/components/createProject.jsx
+++ b/src/sentry/static/sentry/app/components/createProject.jsx
@@ -78,9 +78,7 @@ class CreateProject extends React.Component {
         ProjectActions.createSuccess(data);
 
         const platformKey = platform || 'other';
-        const nextUrl = `/${organization.slug}/${
-          data.slug
-        }/getting-started/${platformKey}/`;
+        const nextUrl = `/${organization.slug}/${data.slug}/getting-started/${platformKey}/`;
 
         browserHistory.push(nextUrl);
       },
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime.jsx b/src/sentry/static/sentry/app/components/events/contexts/runtime.jsx
index 8993c66eec..01582572b6 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/runtime.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/runtime.jsx
@@ -14,7 +14,10 @@ class RuntimeContextType extends React.Component {
     return (
       <ContextBlock
         data={data}
-        knownData={[['Name', name], ['Version', version + (build ? ` (${build})` : '')]]}
+        knownData={[
+          ['Name', name],
+          ['Version', version + (build ? ` (${build})` : '')],
+        ]}
         alias={this.props.alias}
       />
     );
diff --git a/src/sentry/static/sentry/app/components/events/eventAttachments.tsx b/src/sentry/static/sentry/app/components/events/eventAttachments.tsx
index 6fb64735fa..0ce3f93b73 100644
--- a/src/sentry/static/sentry/app/components/events/eventAttachments.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventAttachments.tsx
@@ -66,9 +66,7 @@ class EventAttachments extends React.Component<Props, State> {
 
     try {
       const data = await this.props.api.requestPromise(
-        `/projects/${this.props.orgId}/${this.props.projectId}/events/${
-          event.id
-        }/attachments/`
+        `/projects/${this.props.orgId}/${this.props.projectId}/events/${event.id}/attachments/`
       );
 
       this.setState({
diff --git a/src/sentry/static/sentry/app/components/events/eventCause.jsx b/src/sentry/static/sentry/app/components/events/eventCause.jsx
index 5b46f5fb18..4303b328dc 100644
--- a/src/sentry/static/sentry/app/components/events/eventCause.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventCause.jsx
@@ -56,9 +56,7 @@ class EventCause extends React.Component {
       return;
     }
     this.props.api.request(
-      `/projects/${this.props.orgId}/${this.props.projectId}/events/${
-        event.id
-      }/committers/`,
+      `/projects/${this.props.orgId}/${this.props.projectId}/events/${event.id}/committers/`,
       {
         success: (data, _, jqXHR) => {
           this.setState(data);
diff --git a/src/sentry/static/sentry/app/components/events/eventRow.jsx b/src/sentry/static/sentry/app/components/events/eventRow.jsx
index d2e8494bde..b4f05e2420 100644
--- a/src/sentry/static/sentry/app/components/events/eventRow.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventRow.jsx
@@ -33,9 +33,7 @@ class EventRow extends React.Component {
 
   render() {
     const event = this.state.event;
-    const eventLink = `/${this.props.orgSlug}/${this.props.projectSlug}/issues/${
-      event.groupID
-    }/events/${event.id}/`;
+    const eventLink = `/${this.props.orgSlug}/${this.props.projectSlug}/issues/${event.groupID}/events/${event.id}/`;
 
     const tagList = [];
     for (const key in event.tags) {
diff --git a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
index 0861496da3..abdbf0b9eb 100644
--- a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
+++ b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
@@ -270,9 +270,7 @@ class EventGroupingInfo extends AsyncComponent {
   getEndpoints() {
     const {organization, event, projectId} = this.props;
 
-    let path = `/projects/${organization.slug}/${projectId}/events/${
-      event.id
-    }/grouping-info/`;
+    let path = `/projects/${organization.slug}/${projectId}/events/${event.id}/grouping-info/`;
     if (this.state && this.state.configOverride) {
       path = `${path}?config=${this.state.configOverride}`;
     }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
index c321cf5de7..d053b638bb 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
@@ -106,9 +106,7 @@ class DebugImage extends React.PureComponent {
       return null;
     }
 
-    return `/settings/${orgId}/projects/${projectId}/debug-symbols/?query=${
-      image.debug_id
-    }`;
+    return `/settings/${orgId}/projects/${projectId}/debug-symbols/?query=${image.debug_id}`;
   }
 
   renderStatus(title, status) {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx
index 40e25b38ef..94c3e7344b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx
@@ -53,9 +53,7 @@ class RawExceptionContent extends React.Component {
     const {type, organization, projectId, eventId} = this.props;
 
     const minified = type === 'minified';
-    return `/projects/${
-      organization.slug
-    }/${projectId}/events/${eventId}/apple-crash-report?minified=${minified}`;
+    return `/projects/${organization.slug}/${projectId}/events/${eventId}/apple-crash-report?minified=${minified}`;
   }
 
   fetchAppleCrashReport() {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
index 660baee322..2f0ba5670b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
@@ -144,9 +144,7 @@ class SpanDetail extends React.Component<Props, State> {
         'timestamp',
       ],
       orderby: '-timestamp',
-      query: `event.type:transaction trace:${span.trace_id} trace.parent_span:${
-        span.span_id
-      }`,
+      query: `event.type:transaction trace:${span.trace_id} trace.parent_span:${span.span_id}`,
       tags: ['release', 'project.name', 'user.email', 'user.ip', 'environment'],
       projects: [],
       version: 2,
diff --git a/src/sentry/static/sentry/app/components/forms/selectAsyncControl.jsx b/src/sentry/static/sentry/app/components/forms/selectAsyncControl.jsx
index 2b4c6ef178..e0eab022d8 100644
--- a/src/sentry/static/sentry/app/components/forms/selectAsyncControl.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectAsyncControl.jsx
@@ -66,7 +66,10 @@ class SelectAsyncControl extends React.Component {
       .requestPromise(url, {
         query: typeof onQuery === 'function' ? onQuery(query) : {query},
       })
-      .then(data => cb(null, data), err => cb(err));
+      .then(
+        data => cb(null, data),
+        err => cb(err)
+      );
   }, 250);
 
   handleLoadOptions = () => {
diff --git a/src/sentry/static/sentry/app/components/group/externalIssueActions.tsx b/src/sentry/static/sentry/app/components/group/externalIssueActions.tsx
index f3cc8c7541..821e26c955 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssueActions.tsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssueActions.tsx
@@ -55,9 +55,7 @@ class ExternalIssueActions extends AsyncComponent<Props, State> {
 
   deleteIssue(issueId: string) {
     const {group, integration} = this.props;
-    const endpoint = `/groups/${group.id}/integrations/${
-      integration.id
-    }/?externalIssue=${issueId}`;
+    const endpoint = `/groups/${group.id}/integrations/${integration.id}/?externalIssue=${issueId}`;
     this.api.request(endpoint, {
       method: 'DELETE',
       success: () => {
diff --git a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.tsx b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.tsx
index acd45323fa..50a967b597 100644
--- a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.tsx
+++ b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.tsx
@@ -156,9 +156,7 @@ export class SentryAppExternalIssueForm extends React.Component<Props> {
     return (
       <Form
         key={action}
-        apiEndpoint={`/sentry-app-installations/${
-          sentryAppInstallation.uuid
-        }/external-issues/`}
+        apiEndpoint={`/sentry-app-installations/${sentryAppInstallation.uuid}/external-issues/`}
         apiMethod="POST"
         onSubmitSuccess={this.onSubmitSuccess}
         onSubmitError={this.onSubmitError}
diff --git a/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx
index 2f6082ee76..771e354710 100644
--- a/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx
+++ b/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx
@@ -77,7 +77,7 @@ class BaseBadge extends React.PureComponent {
             css={avatarClassName}
             size={avatarSize}
             hideName={hideName}
-            {...avatarProps || {}}
+            {...(avatarProps || {})}
             {...data}
           />
         )}
diff --git a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
index df9e5cff8d..08ec9e765b 100644
--- a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
+++ b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
@@ -351,9 +351,19 @@ class InviteMembersModal extends AsyncComponent<Props, State> {
             teamOptions={allTeams}
             inviteStatus={inviteStatus}
             onRemove={() => this.removeInviteRow(i)}
-            onChangeEmails={opts => this.setEmails(opts.map(v => v.value), i)}
+            onChangeEmails={opts =>
+              this.setEmails(
+                opts.map(v => v.value),
+                i
+              )
+            }
             onChangeRole={({value}) => this.setRole(value, i)}
-            onChangeTeams={opts => this.setTeams(opts.map(v => v.value), i)}
+            onChangeTeams={opts =>
+              this.setTeams(
+                opts.map(v => v.value),
+                i
+              )
+            }
             disableRemove={disableInputs || pendingInvites.length === 1}
           />
         ))}
diff --git a/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx b/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx
index 8d4cb1f4d2..779b54acfb 100644
--- a/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx
+++ b/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx
@@ -51,9 +51,7 @@ class TodoItem extends React.Component {
     const {task} = this.props;
     let learnMoreUrl;
     if (task.featureLocation === 'project') {
-      learnMoreUrl = `/organizations/${org.slug}/projects/choose/?onboarding=1&task=${
-        task.task
-      }`;
+      learnMoreUrl = `/organizations/${org.slug}/projects/choose/?onboarding=1&task=${task.task}`;
     } else if (task.featureLocation === 'organization') {
       learnMoreUrl = `/organizations/${org.slug}/${task.location}`;
     } else if (task.featureLocation === 'absolute') {
diff --git a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
index 9c4cd171dd..10511eec19 100644
--- a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
@@ -130,9 +130,7 @@ async function createShortIdLookupResult(shortIdLookupPromise) {
       model: shortIdLookup.group,
       sourceType: 'issue',
       resultType: 'issue',
-      to: `/${shortIdLookup.organizationSlug}/${shortIdLookup.projectSlug}/issues/${
-        shortIdLookup.groupId
-      }/`,
+      to: `/${shortIdLookup.organizationSlug}/${shortIdLookup.projectSlug}/issues/${shortIdLookup.groupId}/`,
     },
   };
 }
@@ -150,9 +148,7 @@ async function createEventIdLookupResult(eventIdLookupPromise) {
       description: `${event && event.metadata && event.metadata.value}`,
       sourceType: 'event',
       resultType: 'event',
-      to: `/${eventIdLookup.organizationSlug}/${eventIdLookup.projectSlug}/issues/${
-        eventIdLookup.groupId
-      }/events/${eventIdLookup.eventId}/`,
+      to: `/${eventIdLookup.organizationSlug}/${eventIdLookup.projectSlug}/issues/${eventIdLookup.groupId}/events/${eventIdLookup.eventId}/`,
     },
   };
 }
@@ -207,7 +203,8 @@ class ApiSource extends React.Component {
       (nextProps.query.length <= 2 &&
         nextProps.query.substr(0, 2) !== this.props.query.substr(0, 2)) ||
       // Also trigger a search if next query value satisfies an eventid/shortid query
-      (shouldSearchShortIds(nextProps.query) || shouldSearchEventIds(nextProps.query))
+      shouldSearchShortIds(nextProps.query) ||
+      shouldSearchEventIds(nextProps.query)
     ) {
       this.setState({loading: true});
       this.doSearch(nextProps.query);
@@ -357,10 +354,12 @@ class ApiSource extends React.Component {
   async getDirectResults(requests, query) {
     const [shortIdLookup, eventIdLookup] = requests;
 
-    const directResults = (await Promise.all([
-      createShortIdLookupResult(shortIdLookup),
-      createEventIdLookupResult(eventIdLookup),
-    ])).filter(result => !!result);
+    const directResults = (
+      await Promise.all([
+        createShortIdLookupResult(shortIdLookup),
+        createEventIdLookupResult(eventIdLookup),
+      ])
+    ).filter(result => !!result);
 
     if (!directResults.length) {
       return [];
diff --git a/src/sentry/static/sentry/app/components/selectMembers/index.tsx b/src/sentry/static/sentry/app/components/selectMembers/index.tsx
index 1fc51f7421..028068fc76 100644
--- a/src/sentry/static/sentry/app/components/selectMembers/index.tsx
+++ b/src/sentry/static/sentry/app/components/selectMembers/index.tsx
@@ -268,7 +268,10 @@ class SelectMembers extends React.Component<Props> {
       .requestPromise(`/organizations/${organization.slug}/members/`, {
         query: {query},
       })
-      .then((data: Member[]) => cb(null, data), err => cb(err));
+      .then(
+        (data: Member[]) => cb(null, data),
+        err => cb(err)
+      );
   }, 250);
 
   handleLoadOptions = (): Promise<{options: any[]}> => {
diff --git a/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx b/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx
index e00d7e1f6f..b5b6df3f74 100644
--- a/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx
@@ -17,7 +17,11 @@ export const fields = {
     name: 'workflowNotifications',
     type: 'radio',
     label: t('Send Me Workflow Notifications'),
-    choices: [[0, 'Always'], [1, 'Only On Issues I Subscribe To'], [2, 'Never']],
+    choices: [
+      [0, 'Always'],
+      [1, 'Only On Issues I Subscribe To'],
+      [2, 'Never'],
+    ],
     help: t('E.g. changes in issue assignment, resolution status, and comments.'),
   },
   weeklyReports: {
@@ -32,7 +36,11 @@ export const fields = {
     name: 'deployNotifications',
     type: 'radio',
     label: t('Send Me Deploy Notifications'),
-    choices: [[2, 'Always'], [3, 'Only On Deploys With My Commits'], [4, 'Never']],
+    choices: [
+      [2, 'Always'],
+      [3, 'Only On Deploys With My Commits'],
+      [4, 'Never'],
+    ],
     help: t('Deploy emails include release, environment and commit overviews.'),
   },
   personalActivityNotifications: {
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 08163248ce..cbadb4bde1 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -47,7 +47,9 @@ function routes() {
         path="details/"
         name="Details"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountDetails" */ 'app/views/settings/account/accountDetails')
+          import(
+            /* webpackChunkName: "AccountDetails" */ 'app/views/settings/account/accountDetails'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -55,7 +57,9 @@ function routes() {
       <Route path="notifications/" name="Notifications">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "AccountNotifications" */ 'app/views/settings/account/accountNotifications')
+            import(
+              /* webpackChunkName: "AccountNotifications" */ 'app/views/settings/account/accountNotifications'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -63,7 +67,9 @@ function routes() {
           path=":fineTuneType/"
           name="Fine Tune Alerts"
           componentPromise={() =>
-            import(/* webpackChunkName: "AccountNotificationsFineTuning" */ 'app/views/settings/account/accountNotificationFineTuning')
+            import(
+              /* webpackChunkName: "AccountNotificationsFineTuning" */ 'app/views/settings/account/accountNotificationFineTuning'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -72,7 +78,9 @@ function routes() {
         path="emails/"
         name="Emails"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountEmails" */ 'app/views/settings/account/accountEmails')
+          import(
+            /* webpackChunkName: "AccountEmails" */ 'app/views/settings/account/accountEmails'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -80,7 +88,9 @@ function routes() {
       <Route
         path="authorizations/"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountAuthorizations" */ 'app/views/settings/account/accountAuthorizations')
+          import(
+            /* webpackChunkName: "AccountAuthorizations" */ 'app/views/settings/account/accountAuthorizations'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -88,13 +98,17 @@ function routes() {
       <Route name="Security" path="security/">
         <Route
           componentPromise={() =>
-            import(/* webpackChunkName: "AccountSecurityWrapper" */ 'app/views/settings/account/accountSecurity/accountSecurityWrapper')
+            import(
+              /* webpackChunkName: "AccountSecurityWrapper" */ 'app/views/settings/account/accountSecurity/accountSecurityWrapper'
+            )
           }
           component={errorHandler(LazyLoad)}
         >
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "AccountSecurity" */ 'app/views/settings/account/accountSecurity')
+              import(
+                /* webpackChunkName: "AccountSecurity" */ 'app/views/settings/account/accountSecurity'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -102,7 +116,9 @@ function routes() {
             path="session-history/"
             name="Session History"
             componentPromise={() =>
-              import(/* webpackChunkName: "AccountSecuritySessionHistory" */ 'app/views/settings/account/accountSecurity/accountSecuritySessionHistory')
+              import(
+                /* webpackChunkName: "AccountSecuritySessionHistory" */ 'app/views/settings/account/accountSecurity/accountSecuritySessionHistory'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -110,7 +126,9 @@ function routes() {
             path="mfa/:authId/"
             name="Details"
             componentPromise={() =>
-              import(/* webpackChunkName: "AccountSecurityDetails" */ 'app/views/settings/account/accountSecurity/accountSecurityDetails')
+              import(
+                /* webpackChunkName: "AccountSecurityDetails" */ 'app/views/settings/account/accountSecurity/accountSecurityDetails'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -120,7 +138,9 @@ function routes() {
           path="mfa/:authId/enroll/"
           name="Enroll"
           componentPromise={() =>
-            import(/* webpackChunkName: "AccountSecurityEnroll" */ 'app/views/settings/account/accountSecurity/accountSecurityEnroll')
+            import(
+              /* webpackChunkName: "AccountSecurityEnroll" */ 'app/views/settings/account/accountSecurity/accountSecurityEnroll'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -130,7 +150,9 @@ function routes() {
         path="subscriptions/"
         name="Subscriptions"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountSubscriptions" */ 'app/views/settings/account/accountSubscriptions')
+          import(
+            /* webpackChunkName: "AccountSubscriptions" */ 'app/views/settings/account/accountSubscriptions'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -139,7 +161,9 @@ function routes() {
         path="identities/"
         name="Identities"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountSocialIdentities" */ 'app/views/settings/account/accountIdentities')
+          import(
+            /* webpackChunkName: "AccountSocialIdentities" */ 'app/views/settings/account/accountIdentities'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -150,7 +174,9 @@ function routes() {
         <Route path="auth-tokens/" name="Auth Tokens">
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "ApiTokensIndex" */ 'app/views/settings/account/apiTokens')
+              import(
+                /* webpackChunkName: "ApiTokensIndex" */ 'app/views/settings/account/apiTokens'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -158,7 +184,9 @@ function routes() {
             path="new-token/"
             name="Create New Token"
             componentPromise={() =>
-              import(/* webpackChunkName: "ApiTokenCreate" */ 'app/views/settings/account/apiNewToken')
+              import(
+                /* webpackChunkName: "ApiTokenCreate" */ 'app/views/settings/account/apiNewToken'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -167,7 +195,9 @@ function routes() {
         <Route path="applications/" name="Applications">
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "ApiApplications" */ 'app/views/settings/account/apiApplications')
+              import(
+                /* webpackChunkName: "ApiApplications" */ 'app/views/settings/account/apiApplications'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -175,7 +205,9 @@ function routes() {
             path=":appId/"
             name="Details"
             componentPromise={() =>
-              import(/* webpackChunkName: "ApiApplicationDetails" */ 'app/views/settings/account/apiApplications/details')
+              import(
+                /* webpackChunkName: "ApiApplicationDetails" */ 'app/views/settings/account/apiApplications/details'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -186,7 +218,9 @@ function routes() {
         path="close-account/"
         name="Close Account"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountClose" */ 'app/views/settings/account/accountClose')
+          import(
+            /* webpackChunkName: "AccountClose" */ 'app/views/settings/account/accountClose'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -198,7 +232,9 @@ function routes() {
       <IndexRoute
         name="General"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectGeneralSettings" */ 'app/views/settings/projectGeneralSettings')
+          import(
+            /* webpackChunkName: "ProjectGeneralSettings" */ 'app/views/settings/projectGeneralSettings'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -206,7 +242,9 @@ function routes() {
         path="teams/"
         name="Teams"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectTeams" */ 'app/views/settings/project/projectTeams')
+          import(
+            /* webpackChunkName: "ProjectTeams" */ 'app/views/settings/project/projectTeams'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -216,7 +254,9 @@ function routes() {
         path="alerts/"
         component={errorHandler(LazyLoad)}
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectAlerts" */ 'app/views/settings/projectAlerts')
+          import(
+            /* webpackChunkName: "ProjectAlerts" */ 'app/views/settings/projectAlerts'
+          )
         }
       >
         <IndexRedirect to="rules/" />
@@ -225,14 +265,18 @@ function routes() {
           name="Settings"
           component={errorHandler(LazyLoad)}
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectAlertSettings" */ 'app/views/settings/projectAlerts/projectAlertSettings')
+            import(
+              /* webpackChunkName: "ProjectAlertSettings" */ 'app/views/settings/projectAlerts/projectAlertSettings'
+            )
           }
         />
         <Route path="rules/" name="Rules" component={null}>
           <IndexRoute
             component={errorHandler(LazyLoad)}
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectAlertRules" */ 'app/views/settings/projectAlerts/projectAlertRules')
+              import(
+                /* webpackChunkName: "ProjectAlertRules" */ 'app/views/settings/projectAlerts/projectAlertRules'
+              )
             }
           />
           <Route
@@ -240,14 +284,18 @@ function routes() {
             name="New"
             component={errorHandler(LazyLoad)}
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectAlertRuleDetails" */ 'app/views/settings/projectAlerts/projectAlertRuleDetails')
+              import(
+                /* webpackChunkName: "ProjectAlertRuleDetails" */ 'app/views/settings/projectAlerts/projectAlertRuleDetails'
+              )
             }
           />
           <Route
             path=":ruleId/"
             name="Edit"
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectAlertRuleDetails" */ 'app/views/settings/projectAlerts/projectAlertRuleDetails')
+              import(
+                /* webpackChunkName: "ProjectAlertRuleDetails" */ 'app/views/settings/projectAlerts/projectAlertRuleDetails'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -259,13 +307,17 @@ function routes() {
         path="alerts-v2/"
         component={errorHandler(LazyLoad)}
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectAlertsNew" */ 'app/views/settings/projectAlerts/new')
+          import(
+            /* webpackChunkName: "ProjectAlertsNew" */ 'app/views/settings/projectAlerts/new'
+          )
         }
       >
         <IndexRoute
           component={errorHandler(LazyLoad)}
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectAlertRules" */ 'app/views/settings/projectAlerts/projectAlertRulesNew')
+            import(
+              /* webpackChunkName: "ProjectAlertRules" */ 'app/views/settings/projectAlerts/projectAlertRulesNew'
+            )
           }
         />
 
@@ -274,7 +326,9 @@ function routes() {
           name="Settings"
           component={errorHandler(LazyLoad)}
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectAlertSettings" */ 'app/views/settings/projectAlerts/projectAlertSettings')
+            import(
+              /* webpackChunkName: "ProjectAlertSettings" */ 'app/views/settings/projectAlerts/projectAlertSettings'
+            )
           }
         />
         <Route
@@ -282,7 +336,9 @@ function routes() {
           name="New Alert Rule"
           component={errorHandler(LazyLoad)}
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectAlertsRuleDetails" */ 'app/views/settings/projectAlerts/ruleDetailsNew')
+            import(
+              /* webpackChunkName: "ProjectAlertsRuleDetails" */ 'app/views/settings/projectAlerts/ruleDetailsNew'
+            )
           }
         />
 
@@ -293,14 +349,18 @@ function routes() {
             name="New Alert Rule"
             component={errorHandler(LazyLoad)}
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectAlertRuleDetails" */ 'app/views/settings/projectAlerts/ruleDetailsNew')
+              import(
+                /* webpackChunkName: "ProjectAlertRuleDetails" */ 'app/views/settings/projectAlerts/ruleDetailsNew'
+              )
             }
           />
           <Route
             path=":ruleId/"
             name="Edit Alert Rule"
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectAlertRuleDetails" */ 'app/views/settings/projectAlerts/ruleDetailsNew')
+              import(
+                /* webpackChunkName: "ProjectAlertRuleDetails" */ 'app/views/settings/projectAlerts/ruleDetailsNew'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -312,7 +372,9 @@ function routes() {
             name="New Incident Rule"
             path="new/"
             componentPromise={() =>
-              import(/* webpackChunkName: "IncidentRulesCreate" */ 'app/views/settings/incidentRules/create')
+              import(
+                /* webpackChunkName: "IncidentRulesCreate" */ 'app/views/settings/incidentRules/create'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -320,7 +382,9 @@ function routes() {
             name="Edit Incident Rule"
             path=":incidentRuleId/"
             componentPromise={() =>
-              import(/* webpackChunkName: "IncidentRulesDetails" */ 'app/views/settings/incidentRules/details')
+              import(
+                /* webpackChunkName: "IncidentRulesDetails" */ 'app/views/settings/incidentRules/details'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -331,7 +395,9 @@ function routes() {
         name="Environments"
         path="environments/"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectEnvironments" */ 'app/views/settings/project/projectEnvironments')
+          import(
+            /* webpackChunkName: "ProjectEnvironments" */ 'app/views/settings/project/projectEnvironments'
+          )
         }
         component={errorHandler(LazyLoad)}
       >
@@ -351,7 +417,9 @@ function routes() {
         path="release-tracking/"
         name="Release Tracking"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectReleaseTracking" */ 'app/views/settings/project/projectReleaseTracking')
+          import(
+            /* webpackChunkName: "ProjectReleaseTracking" */ 'app/views/settings/project/projectReleaseTracking'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -359,7 +427,9 @@ function routes() {
         path="ownership/"
         name="Issue Owners"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectOwnership" */ 'app/views/settings/project/projectOwnership')
+          import(
+            /* webpackChunkName: "ProjectOwnership" */ 'app/views/settings/project/projectOwnership'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -367,7 +437,9 @@ function routes() {
         path="data-forwarding/"
         name="Data Forwarding"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectDataForwarding" */ 'app/views/settings/projectDataForwarding')
+          import(
+            /* webpackChunkName: "ProjectDataForwarding" */ 'app/views/settings/projectDataForwarding'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -375,7 +447,9 @@ function routes() {
         path="debug-symbols/"
         name="Debug Information Files"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectDebugFiles" */ 'app/views/settings/projectDebugFiles')
+          import(
+            /* webpackChunkName: "ProjectDebugFiles" */ 'app/views/settings/projectDebugFiles'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -383,7 +457,9 @@ function routes() {
         path="processing-issues/"
         name="Processing Issues"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectProcessingIssues" */ 'app/views/settings/project/projectProcessingIssues')
+          import(
+            /* webpackChunkName: "ProjectProcessingIssues" */ 'app/views/settings/project/projectProcessingIssues'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -391,7 +467,9 @@ function routes() {
         path="filters/"
         name="Inbound Filters"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectFilters" */ 'app/views/settings/project/projectFilters')
+          import(
+            /* webpackChunkName: "ProjectFilters" */ 'app/views/settings/project/projectFilters'
+          )
         }
         component={errorHandler(LazyLoad)}
       >
@@ -402,7 +480,9 @@ function routes() {
         path="hooks/"
         name="Service Hooks"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectServiceHooks" */ 'app/views/settings/project/projectServiceHooks')
+          import(
+            /* webpackChunkName: "ProjectServiceHooks" */ 'app/views/settings/project/projectServiceHooks'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -410,7 +490,9 @@ function routes() {
         path="hooks/new/"
         name="Create Service Hook"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectCreateServiceHook" */ 'app/views/settings/project/projectCreateServiceHook')
+          import(
+            /* webpackChunkName: "ProjectCreateServiceHook" */ 'app/views/settings/project/projectCreateServiceHook'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -418,14 +500,18 @@ function routes() {
         path="hooks/:hookId/"
         name="Service Hook Details"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectServiceHookDetails" */ 'app/views/settings/project/projectServiceHookDetails')
+          import(
+            /* webpackChunkName: "ProjectServiceHookDetails" */ 'app/views/settings/project/projectServiceHookDetails'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
       <Route path="keys/" name="Client Keys">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectKeys" */ 'app/views/settings/project/projectKeys/list')
+            import(
+              /* webpackChunkName: "ProjectKeys" */ 'app/views/settings/project/projectKeys/list'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -434,7 +520,9 @@ function routes() {
           path=":keyId/"
           name="Details"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectKeyDetails" */ 'app/views/settings/project/projectKeys/details')
+            import(
+              /* webpackChunkName: "ProjectKeyDetails" */ 'app/views/settings/project/projectKeys/details'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -443,7 +531,9 @@ function routes() {
         path="user-feedback/"
         name="User Feedback"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectUserFeedbackSettings" */ 'app/views/settings/project/projectUserFeedback')
+          import(
+            /* webpackChunkName: "ProjectUserFeedbackSettings" */ 'app/views/settings/project/projectUserFeedback'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -451,7 +541,9 @@ function routes() {
       <Route path="security-headers/" name="Security Headers">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectSecurityHeaders" */ 'app/views/settings/projectSecurityHeaders')
+            import(
+              /* webpackChunkName: "ProjectSecurityHeaders" */ 'app/views/settings/projectSecurityHeaders'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -459,7 +551,9 @@ function routes() {
           path="csp/"
           name="Content Security Policy"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectCspReports" */ 'app/views/settings/projectSecurityHeaders/csp')
+            import(
+              /* webpackChunkName: "ProjectCspReports" */ 'app/views/settings/projectSecurityHeaders/csp'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -467,7 +561,9 @@ function routes() {
           path="expect-ct/"
           name="Certificate Transparency"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectExpectCtReports" */ 'app/views/settings/projectSecurityHeaders/expectCt')
+            import(
+              /* webpackChunkName: "ProjectExpectCtReports" */ 'app/views/settings/projectSecurityHeaders/expectCt'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -475,7 +571,9 @@ function routes() {
           path="hpkp/"
           name="HPKP"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectHpkpReports" */ 'app/views/settings/projectSecurityHeaders/hpkp')
+            import(
+              /* webpackChunkName: "ProjectHpkpReports" */ 'app/views/settings/projectSecurityHeaders/hpkp'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -483,7 +581,9 @@ function routes() {
       <Route path="plugins/" name="Legacy Integrations">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectPlugins" */ 'app/views/settings/projectPlugins')
+            import(
+              /* webpackChunkName: "ProjectPlugins" */ 'app/views/settings/projectPlugins'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -491,7 +591,9 @@ function routes() {
           path=":pluginId/"
           name="Integration Details"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectPluginDetails" */ 'app/views/settings/projectPlugins/details')
+            import(
+              /* webpackChunkName: "ProjectPluginDetails" */ 'app/views/settings/projectPlugins/details'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -499,7 +601,9 @@ function routes() {
       <Route path="install/" name="Configuration">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectInstallOverview" */ 'app/views/projectInstall/overview')
+            import(
+              /* webpackChunkName: "ProjectInstallOverview" */ 'app/views/projectInstall/overview'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -507,7 +611,9 @@ function routes() {
           path=":platform/"
           name="Docs"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectInstallPlatform" */ 'app/views/projectInstall/platform')
+            import(
+              /* webpackChunkName: "ProjectInstallPlatform" */ 'app/views/projectInstall/platform'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -522,7 +628,9 @@ function routes() {
       <IndexRoute
         name="General"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationGeneralSettings" */ 'app/views/settings/organizationGeneralSettings')
+          import(
+            /* webpackChunkName: "OrganizationGeneralSettings" */ 'app/views/settings/organizationGeneralSettings'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -531,7 +639,9 @@ function routes() {
         path="projects/"
         name="Projects"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationProjects" */ 'app/views/settings/organizationProjects')
+          import(
+            /* webpackChunkName: "OrganizationProjects" */ 'app/views/settings/organizationProjects'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -539,7 +649,9 @@ function routes() {
       <Route path="api-keys/" name="API Key">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationApiKeys" */ 'app/views/settings/organizationApiKeys')
+            import(
+              /* webpackChunkName: "OrganizationApiKeys" */ 'app/views/settings/organizationApiKeys'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -548,7 +660,9 @@ function routes() {
           path=":apiKey/"
           name="Details"
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationApiKeyDetails" */ 'app/views/settings/organizationApiKeys/organizationApiKeyDetails')
+            import(
+              /* webpackChunkName: "OrganizationApiKeyDetails" */ 'app/views/settings/organizationApiKeys/organizationApiKeyDetails'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -558,7 +672,9 @@ function routes() {
         path="audit-log/"
         name="Audit Log"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationAuditLog" */ 'app/views/settings/organizationAuditLog')
+          import(
+            /* webpackChunkName: "OrganizationAuditLog" */ 'app/views/settings/organizationAuditLog'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -567,7 +683,9 @@ function routes() {
         path="auth/"
         name="Auth Providers"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationAuth" */ 'app/views/settings/organizationAuth')
+          import(
+            /* webpackChunkName: "OrganizationAuth" */ 'app/views/settings/organizationAuth'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -575,13 +693,17 @@ function routes() {
       <Route path="members/" name="Members">
         <Route
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationMembersWrapper" */ 'app/views/settings/organizationMembers/organizationMembersWrapper')
+            import(
+              /* webpackChunkName: "OrganizationMembersWrapper" */ 'app/views/settings/organizationMembers/organizationMembersWrapper'
+            )
           }
           component={errorHandler(LazyLoad)}
         >
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationMembersList" */ 'app/views/settings/organizationMembers/organizationMembersList')
+              import(
+                /* webpackChunkName: "OrganizationMembersList" */ 'app/views/settings/organizationMembers/organizationMembersList'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -590,7 +712,9 @@ function routes() {
             path="requests/"
             name="Requests"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationRequestsView" */ 'app/views/settings/organizationMembers/organizationRequestsView')
+              import(
+                /* webpackChunkName: "OrganizationRequestsView" */ 'app/views/settings/organizationMembers/organizationRequestsView'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -600,7 +724,9 @@ function routes() {
           path="new/"
           name="Invite"
           componentPromise={() =>
-            import(/* webpackChunkName: "InviteMember" */ 'app/views/settings/organizationMembers/inviteMember')
+            import(
+              /* webpackChunkName: "InviteMember" */ 'app/views/settings/organizationMembers/inviteMember'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -609,7 +735,9 @@ function routes() {
           path=":memberId/"
           name="Details"
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationMemberDetail" */ 'app/views/settings/organizationMembers/organizationMemberDetail')
+            import(
+              /* webpackChunkName: "OrganizationMemberDetail" */ 'app/views/settings/organizationMembers/organizationMemberDetail'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -619,7 +747,9 @@ function routes() {
         path="rate-limits/"
         name="Rate Limits"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationRateLimits" */ 'app/views/settings/organizationRateLimits')
+          import(
+            /* webpackChunkName: "OrganizationRateLimits" */ 'app/views/settings/organizationRateLimits'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -628,7 +758,9 @@ function routes() {
         path="repos/"
         name="Repositories"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationRepositories" */ 'app/views/settings/organizationRepositories')
+          import(
+            /* webpackChunkName: "OrganizationRepositories" */ 'app/views/settings/organizationRepositories'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -636,7 +768,9 @@ function routes() {
       <Route
         path="settings/"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationGeneralSettings" */ 'app/views/settings/organizationGeneralSettings')
+          import(
+            /* webpackChunkName: "OrganizationGeneralSettings" */ 'app/views/settings/organizationGeneralSettings'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -644,7 +778,9 @@ function routes() {
       <Route name="Teams" path="teams/">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationTeams" */ 'app/views/settings/organizationTeams')
+            import(
+              /* webpackChunkName: "OrganizationTeams" */ 'app/views/settings/organizationTeams'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -653,7 +789,9 @@ function routes() {
           name="Team"
           path=":teamId/"
           componentPromise={() =>
-            import(/* webpackChunkName: "TeamDetails" */ 'app/views/settings/organizationTeams/teamDetails')
+            import(
+              /* webpackChunkName: "TeamDetails" */ 'app/views/settings/organizationTeams/teamDetails'
+            )
           }
           component={errorHandler(LazyLoad)}
         >
@@ -662,7 +800,9 @@ function routes() {
             path="members/"
             name="Members"
             componentPromise={() =>
-              import(/* webpackChunkName: "TeamMembers" */ 'app/views/settings/organizationTeams/teamMembers')
+              import(
+                /* webpackChunkName: "TeamMembers" */ 'app/views/settings/organizationTeams/teamMembers'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -670,7 +810,9 @@ function routes() {
             path="projects/"
             name="Projects"
             componentPromise={() =>
-              import(/* webpackChunkName: "TeamProjects" */ 'app/views/settings/organizationTeams/teamProjects')
+              import(
+                /* webpackChunkName: "TeamProjects" */ 'app/views/settings/organizationTeams/teamProjects'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -678,7 +820,9 @@ function routes() {
             path="settings/"
             name="settings"
             componentPromise={() =>
-              import(/* webpackChunkName: "TeamSettings" */ 'app/views/settings/organizationTeams/teamSettings')
+              import(
+                /* webpackChunkName: "TeamSettings" */ 'app/views/settings/organizationTeams/teamSettings'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -688,7 +832,9 @@ function routes() {
       <Route name="Integrations" path="integrations/">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationIntegrations" */ 'app/views/organizationIntegrations')
+            import(
+              /* webpackChunkName: "OrganizationIntegrations" */ 'app/views/organizationIntegrations'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -696,7 +842,9 @@ function routes() {
           name="Configure Integration"
           path=":providerKey/:integrationId/"
           componentPromise={() =>
-            import(/* webpackChunkName: "ConfigureIntegration" */ 'app/views/settings/organizationIntegrations/configureIntegration')
+            import(
+              /* webpackChunkName: "ConfigureIntegration" */ 'app/views/settings/organizationIntegrations/configureIntegration'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -705,7 +853,9 @@ function routes() {
       <Route name="Developer Settings" path="developer-settings/">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationDeveloperSettings" */ 'app/views/settings/organizationDeveloperSettings')
+            import(
+              /* webpackChunkName: "OrganizationDeveloperSettings" */ 'app/views/settings/organizationDeveloperSettings'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -713,7 +863,9 @@ function routes() {
           name="New Public Integration"
           path="new-public/"
           componentPromise={() =>
-            import(/* webpackChunkName: "sentryApplicationDetails" */ 'app/views/settings/organizationDeveloperSettings/sentryApplicationDetails')
+            import(
+              /* webpackChunkName: "sentryApplicationDetails" */ 'app/views/settings/organizationDeveloperSettings/sentryApplicationDetails'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -721,7 +873,9 @@ function routes() {
           name="New Internal Integration"
           path="new-internal/"
           componentPromise={() =>
-            import(/* webpackChunkName: "sentryApplicationDetails" */ 'app/views/settings/organizationDeveloperSettings/sentryApplicationDetails')
+            import(
+              /* webpackChunkName: "sentryApplicationDetails" */ 'app/views/settings/organizationDeveloperSettings/sentryApplicationDetails'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -729,7 +883,9 @@ function routes() {
           name="Edit Integration"
           path=":appSlug/"
           componentPromise={() =>
-            import(/* webpackChunkName: "sentryApplicationDetails" */ 'app/views/settings/organizationDeveloperSettings/sentryApplicationDetails')
+            import(
+              /* webpackChunkName: "sentryApplicationDetails" */ 'app/views/settings/organizationDeveloperSettings/sentryApplicationDetails'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -737,7 +893,9 @@ function routes() {
           name="Integration Dashboard"
           path=":appSlug/dashboard/"
           componentPromise={() =>
-            import(/* webpackChunkName: "SentryApplicationDashboard" */ 'app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard')
+            import(
+              /* webpackChunkName: "SentryApplicationDashboard" */ 'app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -750,21 +908,27 @@ function routes() {
       <Route
         path="/accept/:memberId/:token/"
         componentPromise={() =>
-          import(/* webpackChunkName: "AcceptOrganizationInvite" */ 'app/views/acceptOrganizationInvite')
+          import(
+            /* webpackChunkName: "AcceptOrganizationInvite" */ 'app/views/acceptOrganizationInvite'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
       <Route
         path="/accept-transfer/"
         componentPromise={() =>
-          import(/* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/acceptProjectTransfer')
+          import(
+            /* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/acceptProjectTransfer'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
       <Route
         path="/extensions/external-install/:providerId/:installationId"
         componentPromise={() =>
-          import(/* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/integrationInstallation')
+          import(
+            /* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/integrationInstallation'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -772,16 +936,18 @@ function routes() {
       <Route
         path="/extensions/vsts/link/"
         getComponent={(_loc, cb) =>
-          import(/* webpackChunkName: "VSTSOrganizationLink" */ 'app/views/vstsOrganizationLink').then(
-            lazyLoad(cb)
-          )
+          import(
+            /* webpackChunkName: "VSTSOrganizationLink" */ 'app/views/vstsOrganizationLink'
+          ).then(lazyLoad(cb))
         }
       />
 
       <Route
         path="/sentry-apps/:sentryAppSlug/external-install/"
         componentPromise={() =>
-          import(/* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/sentryAppExternalInstallation')
+          import(
+            /* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/sentryAppExternalInstallation'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -808,7 +974,9 @@ function routes() {
       >
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminOverview" */ 'app/views/admin/adminOverview')
+            import(
+              /* webpackChunkName: "AdminOverview" */ 'app/views/admin/adminOverview'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -829,14 +997,18 @@ function routes() {
         <Route
           path="organizations/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminOrganizations" */ 'app/views/admin/adminOrganizations')
+            import(
+              /* webpackChunkName: "AdminOrganizations" */ 'app/views/admin/adminOrganizations'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="projects/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminProjects" */ 'app/views/admin/adminProjects')
+            import(
+              /* webpackChunkName: "AdminProjects" */ 'app/views/admin/adminProjects'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -857,7 +1029,9 @@ function routes() {
         <Route
           path="settings/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminSettings" */ 'app/views/admin/adminSettings')
+            import(
+              /* webpackChunkName: "AdminSettings" */ 'app/views/admin/adminSettings'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -871,7 +1045,9 @@ function routes() {
           <Route
             path=":id"
             componentPromise={() =>
-              import(/* webpackChunkName: "AdminUserEdit" */ 'app/views/admin/adminUserEdit')
+              import(
+                /* webpackChunkName: "AdminUserEdit" */ 'app/views/admin/adminUserEdit'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -886,21 +1062,27 @@ function routes() {
         <Route
           path="status/environment/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminEnvironment" */ 'app/views/admin/adminEnvironment')
+            import(
+              /* webpackChunkName: "AdminEnvironment" */ 'app/views/admin/adminEnvironment'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="status/packages/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminPackages" */ 'app/views/admin/adminPackages')
+            import(
+              /* webpackChunkName: "AdminPackages" */ 'app/views/admin/adminPackages'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="status/warnings/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminWarnings" */ 'app/views/admin/adminWarnings')
+            import(
+              /* webpackChunkName: "AdminWarnings" */ 'app/views/admin/adminWarnings'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -910,7 +1092,9 @@ function routes() {
       <Route
         path="/share/issue/:shareId/"
         componentPromise={() =>
-          import(/* webpackChunkName: "SharedGroupDetails" */ 'app/views/sharedGroupDetails')
+          import(
+            /* webpackChunkName: "SharedGroupDetails" */ 'app/views/sharedGroupDetails'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -918,7 +1102,9 @@ function routes() {
       <Route
         path="/organizations/new/"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationCreate" */ 'app/views/organizationCreate')
+          import(
+            /* webpackChunkName: "OrganizationCreate" */ 'app/views/organizationCreate'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -926,7 +1112,9 @@ function routes() {
       <Route
         path="/join-request/:orgId/"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationJoinRequest" */ 'app/views/organizationJoinRequest')
+          import(
+            /* webpackChunkName: "OrganizationJoinRequest" */ 'app/views/organizationJoinRequest'
+          )
         }
         component={errorHandler(LazyLoad)}
       />
@@ -945,9 +1133,9 @@ function routes() {
         <Route path="/settings/" name="Settings" component={SettingsWrapper}>
           <IndexRoute
             getComponent={(_loc, cb) =>
-              import(/* webpackChunkName: "SettingsIndex" */ 'app/views/settings/settingsIndex').then(
-                lazyLoad(cb)
-              )
+              import(
+                /* webpackChunkName: "SettingsIndex" */ 'app/views/settings/settingsIndex'
+              ).then(lazyLoad(cb))
             }
           />
 
@@ -955,9 +1143,9 @@ function routes() {
             path="account/"
             name="Account"
             getComponent={(_loc, cb) =>
-              import(/* webpackChunkName: "AccountSettingsLayout" */ 'app/views/settings/account/accountSettingsLayout').then(
-                lazyLoad(cb)
-              )
+              import(
+                /* webpackChunkName: "AccountSettingsLayout" */ 'app/views/settings/account/accountSettingsLayout'
+              ).then(lazyLoad(cb))
             }
           >
             {accountSettingsRoutes}
@@ -966,9 +1154,9 @@ function routes() {
           <Route name="Organization" path=":orgId/">
             <Route
               getComponent={(_loc, cb) =>
-                import(/* webpackChunkName: "OrganizationSettingsLayout" */ 'app/views/settings/organization/organizationSettingsLayout').then(
-                  lazyLoad(cb)
-                )
+                import(
+                  /* webpackChunkName: "OrganizationSettingsLayout" */ 'app/views/settings/organization/organizationSettingsLayout'
+                ).then(lazyLoad(cb))
               }
             >
               {hook('routes:organization')}
@@ -979,9 +1167,9 @@ function routes() {
               name="Project"
               path="projects/:projectId/"
               getComponent={(_loc, cb) =>
-                import(/* webpackChunkName: "ProjectSettingsLayout" */ 'app/views/settings/project/projectSettingsLayout').then(
-                  lazyLoad(cb)
-                )
+                import(
+                  /* webpackChunkName: "ProjectSettingsLayout" */ 'app/views/settings/project/projectSettingsLayout'
+                ).then(lazyLoad(cb))
               }
             >
               <Route component={errorHandler(SettingsProjectProvider)}>
@@ -1010,7 +1198,9 @@ function routes() {
         <Route
           path="/organizations/:orgId/projects/"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectsDashboard" */ 'app/views/projectsDashboard')
+            import(
+              /* webpackChunkName: "ProjectsDashboard" */ 'app/views/projectsDashboard'
+            )
           }
           component={errorHandler(LazyLoad)}
         />
@@ -1026,7 +1216,9 @@ function routes() {
         <Route
           path="/organizations/:orgId/issues/:groupId/"
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationGroupDetails" */ 'app/views/organizationGroupDetails')
+            import(
+              /* webpackChunkName: "OrganizationGroupDetails" */ 'app/views/organizationGroupDetails'
+            )
           }
           component={errorHandler(LazyLoad)}
         >
@@ -1034,70 +1226,90 @@ function routes() {
             There is behavior that depends on this path and unfortunately no great way to test for this contract */}
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationGroupEventDetails" */ 'app/views/organizationGroupDetails/groupEventDetails')
+              import(
+                /* webpackChunkName: "OrganizationGroupEventDetails" */ 'app/views/organizationGroupDetails/groupEventDetails'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/issues/:groupId/activity/"
             componentPromise={() =>
-              import(/* webpackChunkName: "GroupActivity" */ 'app/views/organizationGroupDetails/groupActivity')
+              import(
+                /* webpackChunkName: "GroupActivity" */ 'app/views/organizationGroupDetails/groupActivity'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/issues/:groupId/events/:eventId/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationGroupEventDetails" */ 'app/views/organizationGroupDetails/groupEventDetails')
+              import(
+                /* webpackChunkName: "OrganizationGroupEventDetails" */ 'app/views/organizationGroupDetails/groupEventDetails'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/issues/:groupId/events/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationGroupEvents" */ 'app/views/organizationGroupDetails/groupEvents')
+              import(
+                /* webpackChunkName: "OrganizationGroupEvents" */ 'app/views/organizationGroupDetails/groupEvents'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/issues/:groupId/tags/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationGroupTags" */ 'app/views/organizationGroupDetails/groupTags')
+              import(
+                /* webpackChunkName: "OrganizationGroupTags" */ 'app/views/organizationGroupDetails/groupTags'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/issues/:groupId/tags/:tagKey/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationGroupTagsValues" */ 'app/views/organizationGroupDetails/groupTagValues')
+              import(
+                /* webpackChunkName: "OrganizationGroupTagsValues" */ 'app/views/organizationGroupDetails/groupTagValues'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/issues/:groupId/feedback/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationGroupUserFeedback" */ 'app/views/organizationGroupDetails/groupUserFeedback')
+              import(
+                /* webpackChunkName: "OrganizationGroupUserFeedback" */ 'app/views/organizationGroupDetails/groupUserFeedback'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/issues/:groupId/attachments/"
             componentPromise={() =>
-              import(/* webpackChunkName: "GroupEventAttachments" */ 'app/views/organizationGroupDetails/groupEventAttachments')
+              import(
+                /* webpackChunkName: "GroupEventAttachments" */ 'app/views/organizationGroupDetails/groupEventAttachments'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/issues/:groupId/similar/"
             componentPromise={() =>
-              import(/* webpackChunkName: "GroupSimilarView" */ 'app/views/organizationGroupDetails/groupSimilar')
+              import(
+                /* webpackChunkName: "GroupSimilarView" */ 'app/views/organizationGroupDetails/groupSimilar'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/issues/:groupId/merged/"
             componentPromise={() =>
-              import(/* webpackChunkName: "GroupSimilarView" */ 'app/views/organizationGroupDetails/groupMerged')
+              import(
+                /* webpackChunkName: "GroupSimilarView" */ 'app/views/organizationGroupDetails/groupMerged'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -1110,14 +1322,18 @@ function routes() {
           <Route
             path="/organizations/:orgId/stats/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationStats" */ 'app/views/organizationStats')
+              import(
+                /* webpackChunkName: "OrganizationStats" */ 'app/views/organizationStats'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/activity/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationActivity" */ 'app/views/organizationActivity')
+              import(
+                /* webpackChunkName: "OrganizationActivity" */ 'app/views/organizationActivity'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -1130,7 +1346,9 @@ function routes() {
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "OverviewDashboard" */ 'app/views/dashboards/overviewDashboard')
+                import(
+                  /* webpackChunkName: "OverviewDashboard" */ 'app/views/dashboards/overviewDashboard'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
@@ -1168,21 +1386,27 @@ function routes() {
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "DiscoverV2Landing" */ 'app/views/eventsV2/landing')
+                import(
+                  /* webpackChunkName: "DiscoverV2Landing" */ 'app/views/eventsV2/landing'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="results/"
               componentPromise={() =>
-                import(/* webpackChunkName: "DiscoverV2Results" */ 'app/views/eventsV2/results')
+                import(
+                  /* webpackChunkName: "DiscoverV2Results" */ 'app/views/eventsV2/results'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path=":eventSlug/"
               componentPromise={() =>
-                import(/* webpackChunkName: "DiscoverV2Details" */ 'app/views/eventsV2/eventDetails')
+                import(
+                  /* webpackChunkName: "DiscoverV2Details" */ 'app/views/eventsV2/eventDetails'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
@@ -1203,14 +1427,18 @@ function routes() {
             <Route
               path="/organizations/:orgId/monitors/create/"
               componentPromise={() =>
-                import(/* webpackChunkName: "MonitorCreate" */ 'app/views/monitors/create')
+                import(
+                  /* webpackChunkName: "MonitorCreate" */ 'app/views/monitors/create'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/monitors/:monitorId/"
               componentPromise={() =>
-                import(/* webpackChunkName: "MonitorDetails" */ 'app/views/monitors/details')
+                import(
+                  /* webpackChunkName: "MonitorDetails" */ 'app/views/monitors/details'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
@@ -1260,7 +1488,9 @@ function routes() {
             <Route
               path=":incidentId/"
               componentPromise={() =>
-                import(/* webpackChunkName: "IncidentDetails" */ 'app/views/incidents/details')
+                import(
+                  /* webpackChunkName: "IncidentDetails" */ 'app/views/incidents/details'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
@@ -1268,20 +1498,26 @@ function routes() {
           <Route
             path="/organizations/:orgId/projects/:projectId/getting-started/"
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectGettingStarted" */ 'app/views/projectInstall/gettingStarted')
+              import(
+                /* webpackChunkName: "ProjectGettingStarted" */ 'app/views/projectInstall/gettingStarted'
+              )
             }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "ProjectInstallOverview" */ 'app/views/projectInstall/overview')
+                import(
+                  /* webpackChunkName: "ProjectInstallOverview" */ 'app/views/projectInstall/overview'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path=":platform/"
               componentPromise={() =>
-                import(/* webpackChunkName: "ProjectInstallPlatform" */ 'app/views/projectInstall/platform')
+                import(
+                  /* webpackChunkName: "ProjectInstallPlatform" */ 'app/views/projectInstall/platform'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
@@ -1317,35 +1553,45 @@ function routes() {
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseOverview" */ 'app/views/releases/detail/releaseOverview')
+                import(
+                  /* webpackChunkName: "ReleaseOverview" */ 'app/views/releases/detail/releaseOverview'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="new-events/"
               componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseNewEvents" */ 'app/views/releases/detail/releaseNewEvents')
+                import(
+                  /* webpackChunkName: "ReleaseNewEvents" */ 'app/views/releases/detail/releaseNewEvents'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="all-events/"
               componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseAllEvents" */ 'app/views/releases/detail/releaseAllEvents')
+                import(
+                  /* webpackChunkName: "ReleaseAllEvents" */ 'app/views/releases/detail/releaseAllEvents'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="artifacts/"
               componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseArtifacts" */ 'app/views/releases/detail/releaseArtifacts')
+                import(
+                  /* webpackChunkName: "ReleaseArtifacts" */ 'app/views/releases/detail/releaseArtifacts'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="commits/"
               componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseCommits" */ 'app/views/releases/detail/releaseCommits')
+                import(
+                  /* webpackChunkName: "ReleaseCommits" */ 'app/views/releases/detail/releaseCommits'
+                )
               }
               component={errorHandler(LazyLoad)}
             />
@@ -1414,7 +1660,9 @@ function routes() {
           <Route
             path="/organizations/:orgId/projects/new/"
             componentPromise={() =>
-              import(/* webpackChunkName: "NewProject" */ 'app/views/projectInstall/newProject')
+              import(
+                /* webpackChunkName: "NewProject" */ 'app/views/projectInstall/newProject'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -1429,20 +1677,26 @@ function routes() {
         <Route
           path=":projectId/getting-started/"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectGettingStarted" */ 'app/views/projectInstall/gettingStarted')
+            import(
+              /* webpackChunkName: "ProjectGettingStarted" */ 'app/views/projectInstall/gettingStarted'
+            )
           }
           component={errorHandler(LazyLoad)}
         >
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectInstallOverview" */ 'app/views/projectInstall/overview')
+              import(
+                /* webpackChunkName: "ProjectInstallOverview" */ 'app/views/projectInstall/overview'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path=":platform/"
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectInstallPlatform" */ 'app/views/projectInstall/platform')
+              import(
+                /* webpackChunkName: "ProjectInstallPlatform" */ 'app/views/projectInstall/platform'
+              )
             }
             component={errorHandler(LazyLoad)}
           />
@@ -1481,9 +1735,7 @@ function routes() {
             component={errorHandler(
               redirectDeprecatedProjectRoute(
                 ({orgId, projectId, router}) =>
-                  `/organizations/${orgId}/releases/${
-                    router.params.version
-                  }/?project=${projectId}`
+                  `/organizations/${orgId}/releases/${router.params.version}/?project=${projectId}`
               )
             )}
           />
@@ -1492,9 +1744,7 @@ function routes() {
             component={errorHandler(
               redirectDeprecatedProjectRoute(
                 ({orgId, projectId, router}) =>
-                  `/organizations/${orgId}/releases/${
-                    router.params.version
-                  }/new-events/?project=${projectId}`
+                  `/organizations/${orgId}/releases/${router.params.version}/new-events/?project=${projectId}`
               )
             )}
           />
@@ -1503,9 +1753,7 @@ function routes() {
             component={errorHandler(
               redirectDeprecatedProjectRoute(
                 ({orgId, projectId, router}) =>
-                  `/organizations/${orgId}/releases/${
-                    router.params.version
-                  }/all-events/?project=${projectId}`
+                  `/organizations/${orgId}/releases/${router.params.version}/all-events/?project=${projectId}`
               )
             )}
           />
@@ -1514,9 +1762,7 @@ function routes() {
             component={errorHandler(
               redirectDeprecatedProjectRoute(
                 ({orgId, projectId, router}) =>
-                  `/organizations/${orgId}/releases/${
-                    router.params.version
-                  }/artifacts/?project=${projectId}`
+                  `/organizations/${orgId}/releases/${router.params.version}/artifacts/?project=${projectId}`
               )
             )}
           />
@@ -1525,9 +1771,7 @@ function routes() {
             component={errorHandler(
               redirectDeprecatedProjectRoute(
                 ({orgId, projectId, router}) =>
-                  `/organizations/${orgId}/releases/${
-                    router.params.version
-                  }/commits/?project=${projectId}`
+                  `/organizations/${orgId}/releases/${router.params.version}/commits/?project=${projectId}`
               )
             )}
           />
diff --git a/src/sentry/static/sentry/app/stores/groupingStore.jsx b/src/sentry/static/sentry/app/stores/groupingStore.jsx
index db63252350..57a8a72341 100644
--- a/src/sentry/static/sentry/app/stores/groupingStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupingStore.jsx
@@ -345,9 +345,13 @@ const GroupingStore = Reflux.createStore({
 
   // Toggle collapsed state of all fingerprints
   onToggleCollapseFingerprints() {
-    this.setStateForId(this.unmergeState, this.mergedItems.map(({id}) => id), {
-      collapsed: !this.unmergeLastCollapsed,
-    });
+    this.setStateForId(
+      this.unmergeState,
+      this.mergedItems.map(({id}) => id),
+      {
+        collapsed: !this.unmergeLastCollapsed,
+      }
+    );
 
     this.unmergeLastCollapsed = !this.unmergeLastCollapsed;
 
diff --git a/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx b/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx
index 0bacd2697a..80b35074ba 100644
--- a/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx
+++ b/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx
@@ -53,9 +53,9 @@ const SavedSearchesStore = Reflux.createStore({
           !(
             savedSearch.isPinned &&
             savedSearch.type === type &&
-            (!savedSearch.isOrgCustom &&
-              !savedSearch.isGlobal &&
-              savedSearch.id !== existingSearchId)
+            !savedSearch.isOrgCustom &&
+            !savedSearch.isGlobal &&
+            savedSearch.id !== existingSearchId
           )
       )
       .map(savedSearch => {
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 989657265a..eb1100cb4c 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -208,12 +208,12 @@ type SentryEventBase = {
 // This type is incomplete
 export type Event =
   | ({type: string} & SentryEventBase)
-  | {
+  | ({
       type: 'transaction';
       entries: SpanEntry[];
       startTimestamp: number;
       endTimestamp: number;
-    } & SentryEventBase;
+    } & SentryEventBase);
 
 export type EventsStatsData = [number, {count: number}[]][];
 
diff --git a/src/sentry/static/sentry/app/utils/attachmentUrl.tsx b/src/sentry/static/sentry/app/utils/attachmentUrl.tsx
index de44780b61..d564690238 100644
--- a/src/sentry/static/sentry/app/utils/attachmentUrl.tsx
+++ b/src/sentry/static/sentry/app/utils/attachmentUrl.tsx
@@ -46,9 +46,7 @@ class AttachmentUrl extends React.PureComponent<Props> {
 
   getDownloadUrl() {
     const {attachment, organization, eventId, projectId} = this.props;
-    return `/api/0/projects/${
-      organization.slug
-    }/${projectId}/events/${eventId}/attachments/${attachment.id}/`;
+    return `/api/0/projects/${organization.slug}/${projectId}/events/${eventId}/attachments/${attachment.id}/`;
   }
 
   render() {
diff --git a/src/sentry/static/sentry/app/utils/formatAbbreviatedNumber.jsx b/src/sentry/static/sentry/app/utils/formatAbbreviatedNumber.jsx
index 92a3f40d26..ccb6c5ee4e 100644
--- a/src/sentry/static/sentry/app/utils/formatAbbreviatedNumber.jsx
+++ b/src/sentry/static/sentry/app/utils/formatAbbreviatedNumber.jsx
@@ -1,6 +1,10 @@
 import floatFormat from './floatFormat';
 
-const numberFormats = [[1000000000, 'b'], [1000000, 'm'], [1000, 'k']];
+const numberFormats = [
+  [1000000000, 'b'],
+  [1000000, 'm'],
+  [1000, 'k'],
+];
 
 export default function formatNumber(number) {
   let b, x, y, o, p;
diff --git a/src/sentry/static/sentry/app/utils/withApi.tsx b/src/sentry/static/sentry/app/utils/withApi.tsx
index 01f602d955..9db9110132 100644
--- a/src/sentry/static/sentry/app/utils/withApi.tsx
+++ b/src/sentry/static/sentry/app/utils/withApi.tsx
@@ -46,7 +46,7 @@ const withApi = <P extends InjectedApiProps>(
     private api: Client;
 
     render() {
-      return <WrappedComponent api={this.api} {...this.props as P} />;
+      return <WrappedComponent api={this.api} {...(this.props as P)} />;
     }
   };
 
diff --git a/src/sentry/static/sentry/app/utils/withConfig.tsx b/src/sentry/static/sentry/app/utils/withConfig.tsx
index 9900ae078b..7b8bfe038d 100644
--- a/src/sentry/static/sentry/app/utils/withConfig.tsx
+++ b/src/sentry/static/sentry/app/utils/withConfig.tsx
@@ -37,7 +37,7 @@ const withConfig = <P extends InjectedConfigProps>(
 
     render() {
       return (
-        <WrappedComponent config={this.state.config as Config} {...this.props as P} />
+        <WrappedComponent config={this.state.config as Config} {...(this.props as P)} />
       );
     },
   });
diff --git a/src/sentry/static/sentry/app/utils/withGlobalSelection.tsx b/src/sentry/static/sentry/app/utils/withGlobalSelection.tsx
index 13cb47aec1..2ef5d4bd6e 100644
--- a/src/sentry/static/sentry/app/utils/withGlobalSelection.tsx
+++ b/src/sentry/static/sentry/app/utils/withGlobalSelection.tsx
@@ -57,7 +57,7 @@ const withGlobalSelection = <P extends InjectedGlobalSelectionProps>(
         <WrappedComponent
           forceUrlSync={!!forceUrlSync}
           selection={selection as GlobalSelection}
-          {...this.props as P}
+          {...(this.props as P)}
         />
       );
     },
diff --git a/src/sentry/static/sentry/app/utils/withLatestContext.tsx b/src/sentry/static/sentry/app/utils/withLatestContext.tsx
index 40606c0e4b..709a83f371 100644
--- a/src/sentry/static/sentry/app/utils/withLatestContext.tsx
+++ b/src/sentry/static/sentry/app/utils/withLatestContext.tsx
@@ -72,7 +72,7 @@ const withLatestContext = <P extends InjectedLatestContextProps>(
             organizations={organizations as OrganizationSummary[]}
             project={project as Project}
             lastRoute={lastRoute as string}
-            {...this.props as P}
+            {...(this.props as P)}
             organization={(this.props.organization || latestOrganization) as Organization}
           />
         );
diff --git a/src/sentry/static/sentry/app/utils/withOrganization.tsx b/src/sentry/static/sentry/app/utils/withOrganization.tsx
index 9f7d3127bb..313d566ee7 100644
--- a/src/sentry/static/sentry/app/utils/withOrganization.tsx
+++ b/src/sentry/static/sentry/app/utils/withOrganization.tsx
@@ -23,7 +23,7 @@ const withOrganization = <P extends InjectedOrganizationProps>(
       return (
         <WrappedComponent
           organization={this.context.organization as Organization}
-          {...this.props as P}
+          {...(this.props as P)}
         />
       );
     }
diff --git a/src/sentry/static/sentry/app/utils/withOrganizations.tsx b/src/sentry/static/sentry/app/utils/withOrganizations.tsx
index 4bc85cf384..17750b1c69 100644
--- a/src/sentry/static/sentry/app/utils/withOrganizations.tsx
+++ b/src/sentry/static/sentry/app/utils/withOrganizations.tsx
@@ -30,7 +30,7 @@ const withOrganizations = <P extends InjectedOrganizationsProps>(
         <WrappedComponent
           organizationsLoading={!OrganizationsStore.loaded as boolean}
           organizations={this.state.organizations as OrganizationSummary[]}
-          {...this.props as P}
+          {...(this.props as P)}
         />
       );
     },
diff --git a/src/sentry/static/sentry/app/utils/withPlugins.tsx b/src/sentry/static/sentry/app/utils/withPlugins.tsx
index e8a67c0bd0..c74b35edba 100644
--- a/src/sentry/static/sentry/app/utils/withPlugins.tsx
+++ b/src/sentry/static/sentry/app/utils/withPlugins.tsx
@@ -83,7 +83,7 @@ const withPlugins = <P extends InjectedPluginProps>(
         render() {
           return (
             <WrappedComponent
-              {...this.props as P}
+              {...(this.props as P)}
               plugins={this.state.store as Plugin[]}
             />
           );
diff --git a/src/sentry/static/sentry/app/utils/withProject.tsx b/src/sentry/static/sentry/app/utils/withProject.tsx
index 1f946507be..791e23a111 100644
--- a/src/sentry/static/sentry/app/utils/withProject.tsx
+++ b/src/sentry/static/sentry/app/utils/withProject.tsx
@@ -26,7 +26,7 @@ const withProject = <P extends InjectedProjectProps>(
       return (
         <WrappedComponent
           project={this.context.project as Project}
-          {...this.props as P}
+          {...(this.props as P)}
         />
       );
     }
diff --git a/src/sentry/static/sentry/app/utils/withSavedSearches.tsx b/src/sentry/static/sentry/app/utils/withSavedSearches.tsx
index 2f4d6f5c21..715a79748c 100644
--- a/src/sentry/static/sentry/app/utils/withSavedSearches.tsx
+++ b/src/sentry/static/sentry/app/utils/withSavedSearches.tsx
@@ -66,7 +66,7 @@ const withSavedSearches = <P extends InjectedSavedSearchesProps>(
           savedSearches={savedSearches as SavedSearch[]}
           savedSearchLoading={isLoading as boolean}
           savedSearch={savedSearch as SavedSearch | null}
-          {...this.props as P}
+          {...(this.props as P)}
         />
       );
     },
diff --git a/src/sentry/static/sentry/app/utils/withSentryAppComponents.tsx b/src/sentry/static/sentry/app/utils/withSentryAppComponents.tsx
index 647f9a5465..8d5c903956 100644
--- a/src/sentry/static/sentry/app/utils/withSentryAppComponents.tsx
+++ b/src/sentry/static/sentry/app/utils/withSentryAppComponents.tsx
@@ -37,7 +37,7 @@ const withSentryAppComponents = <P extends InjectedAppComponentsProps>(
           components={
             SentryAppComponentsStore.getComponentByType(componentType) as Component[]
           }
-          {...this.props as P}
+          {...(this.props as P)}
         />
       );
     },
diff --git a/src/sentry/static/sentry/app/utils/withTeams.tsx b/src/sentry/static/sentry/app/utils/withTeams.tsx
index 94e1ceda2a..bd6511be97 100644
--- a/src/sentry/static/sentry/app/utils/withTeams.tsx
+++ b/src/sentry/static/sentry/app/utils/withTeams.tsx
@@ -36,7 +36,9 @@ const withTeams = <P extends InjectedTeamsProps>(
       });
     },
     render() {
-      return <WrappedComponent {...this.props as P} teams={this.state.teams as Team[]} />;
+      return (
+        <WrappedComponent {...(this.props as P)} teams={this.state.teams as Team[]} />
+      );
     },
   });
 export default withTeams;
diff --git a/src/sentry/static/sentry/app/utils/withTeamsForUser.tsx b/src/sentry/static/sentry/app/utils/withTeamsForUser.tsx
index 6bde622a0c..78e6a41d60 100644
--- a/src/sentry/static/sentry/app/utils/withTeamsForUser.tsx
+++ b/src/sentry/static/sentry/app/utils/withTeamsForUser.tsx
@@ -98,7 +98,7 @@ const withTeamsForUser = <P extends InjectedTeamsProps>(
     }
 
     render() {
-      return <WrappedComponent {...this.props as (P & DependentProps)} {...this.state} />;
+      return <WrappedComponent {...(this.props as P & DependentProps)} {...this.state} />;
     }
   };
 
diff --git a/src/sentry/static/sentry/app/views/admin/adminProjects.jsx b/src/sentry/static/sentry/app/views/admin/adminProjects.jsx
index 9a55f0c193..ecb0f7b12d 100644
--- a/src/sentry/static/sentry/app/views/admin/adminProjects.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminProjects.jsx
@@ -44,7 +44,10 @@ class AdminProjects extends React.Component {
           filters={{
             status: {
               name: 'Status',
-              options: [['active', 'Active'], ['deleted', 'Deleted']],
+              options: [
+                ['active', 'Active'],
+                ['deleted', 'Deleted'],
+              ],
             },
           }}
           sortOptions={[['date', 'Date Created']]}
diff --git a/src/sentry/static/sentry/app/views/admin/adminUsers.jsx b/src/sentry/static/sentry/app/views/admin/adminUsers.jsx
index 37f8a08d31..cc2a2fe392 100644
--- a/src/sentry/static/sentry/app/views/admin/adminUsers.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminUsers.jsx
@@ -45,7 +45,10 @@ class AdminUsers extends React.Component {
           filters={{
             status: {
               name: 'Status',
-              options: [['active', 'Active'], ['disabled', 'Disabled']],
+              options: [
+                ['active', 'Active'],
+                ['disabled', 'Disabled'],
+              ],
             },
           }}
           sortOptions={[['date', 'Date Joined']]}
diff --git a/src/sentry/static/sentry/app/views/discover/queryBuilder.tsx b/src/sentry/static/sentry/app/views/discover/queryBuilder.tsx
index 61fede795e..323b6f1382 100644
--- a/src/sentry/static/sentry/app/views/discover/queryBuilder.tsx
+++ b/src/sentry/static/sentry/app/views/discover/queryBuilder.tsx
@@ -228,9 +228,7 @@ export default function createQueryBuilder(
    */
   function fetch(data = getExternal(), cursor = '0:0:1') {
     const limit = data.limit || 1000;
-    const endpoint = `/organizations/${
-      organization.slug
-    }/discover/query/?per_page=${limit}&cursor=${cursor}`;
+    const endpoint = `/organizations/${organization.slug}/discover/query/?per_page=${limit}&cursor=${cursor}`;
 
     // Reject immediately if no projects are available
     if (!data.projects.length) {
diff --git a/src/sentry/static/sentry/app/views/discover/sidebar/newQuery.tsx b/src/sentry/static/sentry/app/views/discover/sidebar/newQuery.tsx
index 1b1c04a39e..04f2fef7de 100644
--- a/src/sentry/static/sentry/app/views/discover/sidebar/newQuery.tsx
+++ b/src/sentry/static/sentry/app/views/discover/sidebar/newQuery.tsx
@@ -37,9 +37,7 @@ export default class NewQuery extends React.Component<NewQueryProps> {
       .then((savedQuery: SavedQuery) => {
         addSuccessMessage(tct('Successfully saved query [name]', {name: savedQueryName}));
         browserHistory.push({
-          pathname: `/organizations/${organization.slug}/discover/saved/${
-            savedQuery.id
-          }/`,
+          pathname: `/organizations/${organization.slug}/discover/saved/${savedQuery.id}/`,
           query: {editing: true},
         });
       })
diff --git a/src/sentry/static/sentry/app/views/discover/sidebar/orderby.tsx b/src/sentry/static/sentry/app/views/discover/sidebar/orderby.tsx
index d066c0911c..be06cf29c7 100644
--- a/src/sentry/static/sentry/app/views/discover/sidebar/orderby.tsx
+++ b/src/sentry/static/sentry/app/views/discover/sidebar/orderby.tsx
@@ -72,7 +72,10 @@ export default class Orderby extends React.Component<OrderbyProps> {
           <OrderbyValue>
             <SelectControl
               name="orderbyDirection"
-              options={[{value: 'asc', label: 'asc'}, {value: 'desc', label: 'desc'}]}
+              options={[
+                {value: 'asc', label: 'asc'},
+                {value: 'desc', label: 'desc'},
+              ]}
               value={direction}
               onChange={(val: ReactSelectOption) => this.updateDirection(val.value)}
               disabled={disabled}
diff --git a/src/sentry/static/sentry/app/views/discover/sidebar/queryFields.tsx b/src/sentry/static/sentry/app/views/discover/sidebar/queryFields.tsx
index 61a8617588..843ccb7739 100644
--- a/src/sentry/static/sentry/app/views/discover/sidebar/queryFields.tsx
+++ b/src/sentry/static/sentry/app/views/discover/sidebar/queryFields.tsx
@@ -111,7 +111,10 @@ export default class QueryFields extends React.Component<QueryFieldsProps> {
             optionRenderer={this.optionRenderer}
             value={currentQuery.fields}
             onChange={(val: ReactSelectOption[]) =>
-              onUpdateField('fields', val.map(({value}) => value))
+              onUpdateField(
+                'fields',
+                val.map(({value}) => value)
+              )
             }
             clearable
             disabled={isLoading}
diff --git a/src/sentry/static/sentry/app/views/events/events.jsx b/src/sentry/static/sentry/app/views/events/events.jsx
index 9a7cd05a8b..2ccea78cd3 100644
--- a/src/sentry/static/sentry/app/views/events/events.jsx
+++ b/src/sentry/static/sentry/app/views/events/events.jsx
@@ -134,9 +134,7 @@ class Events extends AsyncView {
       const project = organization.projects.find(p => p.id === event.projectID);
 
       browserHistory.replace(
-        `/organizations/${organization.slug}/projects/${project.slug}/events/${
-          event.eventID
-        }/`
+        `/organizations/${organization.slug}/projects/${project.slug}/events/${event.eventID}/`
       );
     }
   }
diff --git a/src/sentry/static/sentry/app/views/events/eventsTable.jsx b/src/sentry/static/sentry/app/views/events/eventsTable.jsx
index c131da6e25..ba87263716 100644
--- a/src/sentry/static/sentry/app/views/events/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/events/eventsTable.jsx
@@ -27,9 +27,7 @@ class EventsTableBody extends React.PureComponent {
     return events.map((event, eventIdx) => {
       const project = projectsMap.get(event.projectID);
       const trimmedMessage = event.title || event.message.split('\n')[0].substr(0, 100);
-      const eventLink = `/organizations/${organization.slug}/projects/${
-        project.slug
-      }/events/${event.eventID}/`;
+      const eventLink = `/organizations/${organization.slug}/projects/${project.slug}/events/${event.eventID}/`;
 
       return (
         <TableRow key={`${project.slug}-${event.eventID}`} first={eventIdx === 0}>
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index 550336ce8d..4abbd9828d 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -284,9 +284,7 @@ const EventMetadata = (props: {
 }) => {
   const {event, organization, projectId} = props;
 
-  const eventJsonUrl = `/api/0/projects/${organization.slug}/${projectId}/events/${
-    event.eventID
-  }/json/`;
+  const eventJsonUrl = `/api/0/projects/${organization.slug}/${projectId}/events/${event.eventID}/json/`;
 
   return (
     <MetaDataID>
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
index e4b295f443..ced41b81d4 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
@@ -143,7 +143,8 @@ class EventInterfaces extends React.Component<
             if (
               objectIsEmpty(event[section]) ||
               (section === 'contexts' &&
-                (objectIsEmpty(event.contexts) && objectIsEmpty(event.user)))
+                objectIsEmpty(event.contexts) &&
+                objectIsEmpty(event.user))
             ) {
               return null;
             }
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventQueryParams.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventQueryParams.tsx
index 1cb6e32836..b9f5ea1374 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventQueryParams.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventQueryParams.tsx
@@ -54,14 +54,16 @@ export const AGGREGATIONS = {
   */
 } as const;
 
-assert(AGGREGATIONS as Readonly<
-  {
-    [key in keyof typeof AGGREGATIONS]: {
-      type: '*' | Readonly<ColumnValueType[]>;
-      isSortable: boolean;
+assert(
+  AGGREGATIONS as Readonly<
+    {
+      [key in keyof typeof AGGREGATIONS]: {
+        type: '*' | Readonly<ColumnValueType[]>;
+        isSortable: boolean;
+      };
     }
-  }
->);
+  >
+);
 
 export type Aggregation = keyof typeof AGGREGATIONS | '';
 
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
index 5763c0e222..55202d4b38 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
@@ -300,11 +300,9 @@ class EventView {
       .map(field => {
         return getSortKeyFromField(field, undefined);
       })
-      .filter(
-        (sortKey): sortKey is string => {
-          return !!sortKey;
-        }
-      );
+      .filter((sortKey): sortKey is string => {
+        return !!sortKey;
+      });
 
     const sort = sorts.find(currentSort => {
       return sortKeys.includes(currentSort.field);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
index 2e6f7eb7bc..df292e1e1d 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
@@ -289,18 +289,21 @@ class ContextMenu extends React.Component {
             >
               <ContextMenuButton
                 data-test-id="context-menu"
-                {...getActorProps({
+                {...(getActorProps({
                   onClick: (event: MouseEvent) => {
                     event.stopPropagation();
                     event.preventDefault();
                   },
-                }) as any}
+                }) as any)}
               >
                 <InlineSvg src="icon-ellipsis-filled" />
               </ContextMenuButton>
 
               {isOpen && (
-                <ul {...getMenuProps({}) as any} className={classNames('dropdown-menu')}>
+                <ul
+                  {...(getMenuProps({}) as any)}
+                  className={classNames('dropdown-menu')}
+                >
                   {children}
                 </ul>
               )}
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
index 1e9f7f4820..e6b31b87b2 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
@@ -221,20 +221,17 @@ function filterAggregationByField(organization: Organization, f?: Field): Aggreg
     return [];
   }
 
-  functionList = functionList.reduce(
-    (accumulator, a) => {
-      if (
-        AGGREGATIONS[a].type.includes(fieldType) ||
-        AGGREGATIONS[a].type === '*' ||
-        fieldType === '*'
-      ) {
-        accumulator.push(a as Aggregation);
-      }
+  functionList = functionList.reduce((accumulator, a) => {
+    if (
+      AGGREGATIONS[a].type.includes(fieldType) ||
+      AGGREGATIONS[a].type === '*' ||
+      fieldType === '*'
+    ) {
+      accumulator.push(a as Aggregation);
+    }
 
-      return accumulator;
-    },
-    [] as Aggregation[]
-  );
+    return accumulator;
+  }, [] as Aggregation[]);
 
   // sort list in ascending order
   functionList.sort();
@@ -262,26 +259,23 @@ function filterFieldByAggregation(
     return fieldList as Field[];
   }
 
-  fieldList = fieldList.reduce(
-    (accumulator, f) => {
-      // tag keys are all strings, and values not in FIELDS is a tag.
-      const fieldType = FIELDS[f] || 'string';
-      if (fieldType === 'never') {
-        return accumulator;
-      }
+  fieldList = fieldList.reduce((accumulator, f) => {
+    // tag keys are all strings, and values not in FIELDS is a tag.
+    const fieldType = FIELDS[f] || 'string';
+    if (fieldType === 'never') {
+      return accumulator;
+    }
 
-      if (
-        AGGREGATIONS[a].type.includes(fieldType) ||
-        AGGREGATIONS[a].type === '*' ||
-        fieldType === '*'
-      ) {
-        accumulator.push(f as Field);
-      }
+    if (
+      AGGREGATIONS[a].type.includes(fieldType) ||
+      AGGREGATIONS[a].type === '*' ||
+      fieldType === '*'
+    ) {
+      accumulator.push(f as Field);
+    }
 
-      return accumulator;
-    },
-    [] as Field[]
-  );
+    return accumulator;
+  }, [] as Field[]);
 
   // sort list in ascending order
   fieldList.sort();
diff --git a/src/sentry/static/sentry/app/views/monitors/monitorForm.jsx b/src/sentry/static/sentry/app/views/monitors/monitorForm.jsx
index da88f39cd4..65a9170e20 100644
--- a/src/sentry/static/sentry/app/views/monitors/monitorForm.jsx
+++ b/src/sentry/static/sentry/app/views/monitors/monitorForm.jsx
@@ -17,7 +17,10 @@ import withOrganization from 'app/utils/withOrganization';
 
 import MonitorModel from './monitorModel';
 
-const SCHEDULE_TYPES = [['crontab', 'Crontab'], ['interval', 'Interval']];
+const SCHEDULE_TYPES = [
+  ['crontab', 'Crontab'],
+  ['interval', 'Interval'],
+];
 
 const MONITOR_TYPES = [['cron_job', 'Cron Job']];
 
diff --git a/src/sentry/static/sentry/app/views/organizationContext.jsx b/src/sentry/static/sentry/app/views/organizationContext.jsx
index 0900dd793e..0e3385a4a4 100644
--- a/src/sentry/static/sentry/app/views/organizationContext.jsx
+++ b/src/sentry/static/sentry/app/views/organizationContext.jsx
@@ -158,7 +158,8 @@ const OrganizationContext = createReactClass({
     return (
       loading ||
       (!error &&
-        (detailed && (!organization || !organization.projects || !organization.teams)))
+        detailed &&
+        (!organization || !organization.projects || !organization.teams))
     );
   },
 
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
index e3f3c7dab6..a82008412f 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
@@ -158,9 +158,7 @@ class GroupTagValues extends React.Component {
         <h3>
           {tagKey.key === 'user' ? t('Affected Users') : tagKey.name}
           <a
-            href={`/${orgId}/${group.project.slug}/issues/${group.id}/tags/${
-              this.props.params.tagKey
-            }/export/`}
+            href={`/${orgId}/${group.project.slug}/issues/${group.id}/tags/${this.props.params.tagKey}/export/`}
             className="btn btn-default btn-sm"
             style={{marginLeft: 10}}
           >
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegrationButton.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegrationButton.tsx
index 9efbfea1c3..0d5620dc68 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegrationButton.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegrationButton.tsx
@@ -37,9 +37,7 @@ export default class AddIntegrationButton extends React.Component<Props> {
     return (
       <Tooltip
         disabled={provider.canAdd}
-        title={`Integration cannot be added on Sentry. Enable this integration via the ${
-          provider.name
-        } instance.`}
+        title={`Integration cannot be added on Sentry. Enable this integration via the ${provider.name} instance.`}
       >
         <AddIntegration provider={provider} onInstall={onAddIntegration}>
           {onClick => (
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.tsx
index 6672024353..8f51cd18fa 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.tsx
@@ -146,9 +146,7 @@ export default class InstalledIntegration extends React.Component<Props> {
                     borderless
                     icon="icon-settings"
                     disabled={!this.hasConfiguration() || !hasAccess}
-                    to={`/settings/${orgId}/integrations/${provider.key}/${
-                      integration.id
-                    }/`}
+                    to={`/settings/${orgId}/integrations/${provider.key}/${integration.id}/`}
                     data-test-id="integration-configure-button"
                   >
                     Configure
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.tsx
index a928fcdca9..0add8315aa 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.tsx
@@ -87,9 +87,7 @@ export default class IntegrationRepos extends AsyncComponent<Props, State> {
   searchRepositoriesRequest = (searchQuery: string) => {
     const orgId = this.context.organization.slug;
     const query = {search: searchQuery};
-    const endpoint = `/organizations/${orgId}/integrations/${
-      this.props.integration.id
-    }/repos/`;
+    const endpoint = `/organizations/${orgId}/integrations/${this.props.integration.id}/repos/`;
     return this.api.request(endpoint, {
       method: 'GET',
       query,
diff --git a/src/sentry/static/sentry/app/views/organizationStats/index.jsx b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
index 2295f1230b..938860dfe6 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
@@ -255,9 +255,9 @@ class OrganizationStatsContainer extends React.Component {
       <DocumentTitle title={`Stats - ${organization.slug} - Sentry`}>
         <LazyLoad
           component={() =>
-            import(/* webpackChunkName: "organizationStats" */ './organizationStatsDetails').then(
-              mod => mod.default
-            )
+            import(
+              /* webpackChunkName: "organizationStats" */ './organizationStatsDetails'
+            ).then(mod => mod.default)
           }
           organization={organization}
           {...this.state}
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index f1476e5b34..94cfb297ce 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -80,9 +80,7 @@ class ProjectInstallPlatform extends React.Component {
       return <NotFound />;
     }
 
-    const issueStreamLink = `/organizations/${orgId}/issues/?project=${
-      project.id
-    }#welcome`;
+    const issueStreamLink = `/organizations/${orgId}/issues/?project=${project.id}#welcome`;
     const gettingStartedLink = `/organizations/${orgId}/projects/${projectId}/getting-started/`;
 
     return (
diff --git a/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx b/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx
index 86c3d29da4..06962e57d5 100644
--- a/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx
+++ b/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx
@@ -65,9 +65,7 @@ class Deploy extends React.Component {
         <Environment>{deploy.environment}</Environment>
         <Version>
           <StyledLink
-            to={`/organizations/${organization.slug}/releases/${
-              deploy.version
-            }/?project=${project.id}`}
+            to={`/organizations/${organization.slug}/releases/${deploy.version}/?project=${project.id}`}
           >
             {deploy.version}
           </StyledLink>
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
index bc00c73967..c6f9ec524b 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
@@ -21,7 +21,11 @@ const ACCOUNT_NOTIFICATION_FIELDS = {
     title: 'Project Alerts',
     description: t('Control alerts that you receive per project.'),
     type: 'select',
-    choices: [[-1, t('Default')], [1, t('On')], [0, t('Off')]],
+    choices: [
+      [-1, t('Default')],
+      [1, t('On')],
+      [0, t('Off')],
+    ],
     defaultValue: -1,
     defaultFieldName: 'subscribeByDefault',
   },
@@ -63,7 +67,10 @@ const ACCOUNT_NOTIFICATION_FIELDS = {
     type: 'select',
     // API only saves organizations that have this disabled, so we should default to "On"
     defaultValue: 1,
-    choices: [[1, t('On')], [0, t('Off')]],
+    choices: [
+      [1, t('On')],
+      [0, t('Off')],
+    ],
     defaultFieldName: 'weeklyReports',
   },
 
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityWrapper.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityWrapper.jsx
index 05f6579a36..55d2f7b0fd 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityWrapper.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityWrapper.jsx
@@ -9,7 +9,10 @@ const ENDPOINT = '/users/me/authenticators/';
 
 class AccountSecurityWrapper extends AsyncComponent {
   getEndpoints() {
-    return [['authenticators', ENDPOINT], ['organizations', '/organizations/']];
+    return [
+      ['authenticators', ENDPOINT],
+      ['organizations', '/organizations/'],
+    ];
   }
 
   handleDisable = auth => {
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx
index cfb1277cc5..1848124964 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx
@@ -67,9 +67,7 @@ class U2fEnrolledDetails extends React.Component {
                         </ConfirmHeader>
                         <TextBlock>
                           {t(
-                            `Are you sure you want to remove the U2F device "${
-                              device.name
-                            }"?`
+                            `Are you sure you want to remove the U2F device "${device.name}"?`
                           )}
                         </TextBlock>
                       </React.Fragment>
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/type.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/type.tsx
index 383c7a53e1..b37e78ce7e 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/type.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/type.tsx
@@ -90,7 +90,8 @@ export type Field = (
   | SelectControlType
   | TextareaType
   | RangeType
-  | {type: typeof FieldType[number]}) &
+  | {type: typeof FieldType[number]}
+) &
   BaseField;
 
 export type FieldObject = Field | Function;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
index 39245b8215..20fa189dca 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
@@ -77,9 +77,7 @@ class OrganizationApiKeyDetails extends AsyncView {
 
         <ApiForm
           apiMethod="PUT"
-          apiEndpoint={`/organizations/${this.props.params.orgId}/api-keys/${
-            this.props.params.apiKey
-          }/`}
+          apiEndpoint={`/organizations/${this.props.params.orgId}/api-keys/${this.props.params.apiKey}/`}
           initialData={this.state.apiKey}
           onSubmitSuccess={this.handleSubmitSuccess}
           onSubmitError={this.handleSubmitError}
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
index a7d91ecb49..78844017b4 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
@@ -51,7 +51,10 @@ class ProjectOwnershipModal extends AsyncComponent {
         eventData.entries.find(({type}) => type === 'exception'),
         'data.values[0].stacktrace.frames'
       ) ||
-      get(eventData.entries.find(({type}) => type === 'stacktrace'), 'data.frames') ||
+      get(
+        eventData.entries.find(({type}) => type === 'stacktrace'),
+        'data.frames'
+      ) ||
       [];
 
     //filter frames by inApp unless there would be 0
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
index 1fe466ff52..533df6e2da 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
@@ -121,7 +121,10 @@ class RuleBuilder extends React.Component {
             value={type}
             showSearch={false}
             onChange={this.handleTypeChange}
-            options={[{value: 'path', label: t('Path')}, {value: 'url', label: t('URL')}]}
+            options={[
+              {value: 'path', label: t('Path')},
+              {value: 'url', label: t('URL')},
+            ]}
             style={{width: 140}}
             clearable={false}
             disabled={disabled}
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx
index 918c36ec80..e885f39b75 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx
@@ -260,7 +260,10 @@ export default class SelectOwners extends React.Component {
       .requestPromise(`/organizations/${organization.slug}/members/`, {
         query: {query},
       })
-      .then(data => cb(null, data), err => cb(err));
+      .then(
+        data => cb(null, data),
+        err => cb(err)
+      );
   }, 250);
 
   handleLoadOptions = () => {
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/index.tsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/index.tsx
index 2f75a2a005..5005db0c79 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/index.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/index.tsx
@@ -47,7 +47,11 @@ const FREQUENCY_CHOICES = [
   ['43200', t('30 days')],
 ];
 
-const ACTION_MATCH_CHOICES = [['all', t('all')], ['any', t('any')], ['none', t('none')]];
+const ACTION_MATCH_CHOICES = [
+  ['all', t('all')],
+  ['any', t('any')],
+  ['none', t('none')],
+];
 
 const defaultRule: UnsavedIssueAlertRule = {
   actionMatch: 'all',
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx
index b920f98413..136898635c 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx
@@ -125,7 +125,7 @@ class RuleNode extends React.Component<Props> {
 
       // If matcher is "is set" or "is not set", then we do not want to show the value input
       // because it is not required
-      if (key === 'value' && (data && (data.match === 'is' || data.match === 'ns'))) {
+      if (key === 'value' && data && (data.match === 'is' || data.match === 'ns')) {
         return null;
       }
 
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
index d8a65e8297..e45ac663cc 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
@@ -35,7 +35,11 @@ const FREQUENCY_CHOICES = [
   ['43200', t('30 days')],
 ];
 
-const ACTION_MATCH_CHOICES = [['all', t('all')], ['any', t('any')], ['none', t('none')]];
+const ACTION_MATCH_CHOICES = [
+  ['all', t('all')],
+  ['any', t('any')],
+  ['none', t('none')],
+];
 
 const AlertRuleRow = styled('h6')`
   display: flex;
diff --git a/src/sentry/static/sentry/app/views/settings/projectDebugFiles.jsx b/src/sentry/static/sentry/app/views/settings/projectDebugFiles.jsx
index 6f7f1c663e..d1174d4793 100644
--- a/src/sentry/static/sentry/app/views/settings/projectDebugFiles.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectDebugFiles.jsx
@@ -121,9 +121,7 @@ class ProjectDebugSymbols extends AsyncComponent {
     const {orgId, projectId} = this.props.params;
 
     const rows = this.state.debugFiles.map((dsym, key) => {
-      const url = `${this.api.baseUrl}/projects/${orgId}/${projectId}/files/dsyms/?id=${
-        dsym.id
-      }`;
+      const url = `${this.api.baseUrl}/projects/${orgId}/${projectId}/files/dsyms/?id=${dsym.id}`;
       const fileType = getFileType(dsym);
       const symbolType = fileType ? `${dsym.symbolType} ${fileType}` : dsym.symbolType;
       const features = dsym.data && dsym.data.features;
diff --git a/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx b/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx
index 9b214cc1ab..42c9a9526a 100644
--- a/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx
+++ b/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx
@@ -346,8 +346,9 @@ type SupportLinkProps = {
   to: string;
   isCentered?: boolean;
 } & (
-  | {isOnPremise: true} & React.ComponentProps<typeof ExternalLink>
-  | {isOnPremise: false} & React.ComponentProps<typeof HomeLink>);
+  | ({isOnPremise: true} & React.ComponentProps<typeof ExternalLink>)
+  | ({isOnPremise: false} & React.ComponentProps<typeof HomeLink>)
+);
 
 const SupportLinkComponent = ({
   isCentered,
diff --git a/tests/js/sentry-test/fixtures/events.js b/tests/js/sentry-test/fixtures/events.js
index d73d817f6b..bb1838bb23 100644
--- a/tests/js/sentry-test/fixtures/events.js
+++ b/tests/js/sentry-test/fixtures/events.js
@@ -15,7 +15,10 @@ export function Events(params = []) {
 
 export function EventsStats(query = {}, params) {
   return {
-    data: [[new Date(), [{count: 321}, {count: 79}]], [new Date(), [{count: 123}]]],
+    data: [
+      [new Date(), [{count: 321}, {count: 79}]],
+      [new Date(), [{count: 123}]],
+    ],
     ...params,
   };
 }
diff --git a/tests/js/sentry-test/fixtures/group.js b/tests/js/sentry-test/fixtures/group.js
index 1ab51a48d7..ce0e3fcf7b 100644
--- a/tests/js/sentry-test/fixtures/group.js
+++ b/tests/js/sentry-test/fixtures/group.js
@@ -36,8 +36,14 @@ export function Group(params = {}) {
     shareId: null,
     shortId: 'JAVASCRIPT-6QS',
     stats: {
-      '24h': [[1517281200, 2], [1517310000, 1]],
-      '30d': [[1514764800, 1], [1515024000, 122]],
+      '24h': [
+        [1517281200, 2],
+        [1517310000, 1],
+      ],
+      '30d': [
+        [1514764800, 1],
+        [1515024000, 122],
+      ],
     },
     status: 'unresolved',
     statusDetails: {},
diff --git a/tests/js/sentry-test/fixtures/sentryAppComponent.js b/tests/js/sentry-test/fixtures/sentryAppComponent.js
index 93e0e7147e..ed582ced8c 100644
--- a/tests/js/sentry-test/fixtures/sentryAppComponent.js
+++ b/tests/js/sentry-test/fixtures/sentryAppComponent.js
@@ -21,7 +21,10 @@ export function SentryAppComponent(params = {}) {
             type: 'select',
             name: 'numbers',
             label: 'Numbers',
-            choices: [[1, 'one'], [2, 'two']],
+            choices: [
+              [1, 'one'],
+              [2, 'two'],
+            ],
             default: 1,
           },
         ],
diff --git a/tests/js/spec/actionCreators/events.spec.jsx b/tests/js/spec/actionCreators/events.spec.jsx
index abf3d4cd30..79a92ef1a8 100644
--- a/tests/js/spec/actionCreators/events.spec.jsx
+++ b/tests/js/spec/actionCreators/events.spec.jsx
@@ -17,7 +17,16 @@ describe('Events ActionCreator', function() {
     MockApiClient.clearMockResponses();
     mock = MockApiClient.addMockResponse({
       url: '/organizations/org-slug/events-stats/',
-      body: {data: [[123, []], [123, []], [123, []], [123, []], [123, []], [123, []]]},
+      body: {
+        data: [
+          [123, []],
+          [123, []],
+          [123, []],
+          [123, []],
+          [123, []],
+          [123, []],
+        ],
+      },
     });
   });
 
diff --git a/tests/js/spec/api.spec.jsx b/tests/js/spec/api.spec.jsx
index b6ef6c0839..2e6a045c00 100644
--- a/tests/js/spec/api.spec.jsx
+++ b/tests/js/spec/api.spec.jsx
@@ -114,7 +114,10 @@ describe('api', function() {
   it('does not call success callback if 302 was returned because of a project slug change', function() {
     const successCb = jest.fn();
     api.activeRequests = {id: {alive: true}};
-    api.wrapCallback('id', successCb)({
+    api.wrapCallback(
+      'id',
+      successCb
+    )({
       responseJSON: {
         detail: {
           code: PROJECT_MOVED,
diff --git a/tests/js/spec/components/asyncComponent.spec.jsx b/tests/js/spec/components/asyncComponent.spec.jsx
index 91c83dbf47..49be20c41a 100644
--- a/tests/js/spec/components/asyncComponent.spec.jsx
+++ b/tests/js/spec/components/asyncComponent.spec.jsx
@@ -59,7 +59,10 @@ describe('AsyncComponent', function() {
   describe('multi-route component', () => {
     class MultiRouteComponent extends TestAsyncComponent {
       getEndpoints() {
-        return [['data', '/some/path/to/something/'], ['project', '/another/path/here']];
+        return [
+          ['data', '/some/path/to/something/'],
+          ['project', '/another/path/here'],
+        ];
       }
     }
 
diff --git a/tests/js/spec/components/charts/tableChart/index.spec.jsx b/tests/js/spec/components/charts/tableChart/index.spec.jsx
index 18dcd89f69..53d9fc5b99 100644
--- a/tests/js/spec/components/charts/tableChart/index.spec.jsx
+++ b/tests/js/spec/components/charts/tableChart/index.spec.jsx
@@ -88,7 +88,10 @@ describe('TableChart', function() {
   });
 
   it('renders percentage bar on correct rows', function() {
-    const ERROR_TYPE_DATA = [['TypeError', 50, 40, 30], ['SyntaxError', 40, 30, 20]];
+    const ERROR_TYPE_DATA = [
+      ['TypeError', 50, 40, 30],
+      ['SyntaxError', 40, 30, 20],
+    ];
     const wrapper = mount(
       <TableChart
         title="Error Type"
diff --git a/tests/js/spec/components/events/eventCause.spec.jsx b/tests/js/spec/components/events/eventCause.spec.jsx
index 62ffee5ca0..4d1f24b479 100644
--- a/tests/js/spec/components/events/eventCause.spec.jsx
+++ b/tests/js/spec/components/events/eventCause.spec.jsx
@@ -22,9 +22,7 @@ describe('EventCause', function() {
   beforeEach(function() {
     Client.addMockResponse({
       method: 'GET',
-      url: `/projects/${organization.slug}/${project.slug}/events/${
-        event.id
-      }/committers/`,
+      url: `/projects/${organization.slug}/${project.slug}/events/${event.id}/committers/`,
       body: {
         committers: [
           {
@@ -105,9 +103,7 @@ describe('EventCause', function() {
   it('shows unassociated email warning', async function() {
     Client.addMockResponse({
       method: 'GET',
-      url: `/projects/${organization.slug}/${project.slug}/events/${
-        event.id
-      }/committers/`,
+      url: `/projects/${organization.slug}/${project.slug}/events/${event.id}/committers/`,
       body: {
         committers: [
           {
diff --git a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
index 01fd6eb0f2..c56f957063 100644
--- a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
@@ -6,7 +6,10 @@ import KeyValueList from 'app/components/events/interfaces/keyValueList';
 describe('KeyValueList', function() {
   describe('render', function() {
     it('should render a definition list of key/value pairs', function() {
-      const data = [['a', 'x'], ['b', 'y']];
+      const data = [
+        ['a', 'x'],
+        ['b', 'y'],
+      ];
       const wrapper = mount(<KeyValueList data={data} />);
 
       expect(
@@ -37,7 +40,10 @@ describe('KeyValueList', function() {
     });
 
     it('should sort sort key/value pairs', function() {
-      const data = [['b', 'y'], ['a', 'x']];
+      const data = [
+        ['b', 'y'],
+        ['a', 'x'],
+      ];
       const wrapper = mount(<KeyValueList data={data} />);
 
       expect(
@@ -102,7 +108,10 @@ describe('KeyValueList', function() {
     });
 
     it('can sort key/value pairs with non-string values', function() {
-      const data = [['b', {foo: 'bar'}], ['a', [3, 2, 1]]];
+      const data = [
+        ['b', {foo: 'bar'}],
+        ['a', [3, 2, 1]],
+      ];
       const wrapper = mount(<KeyValueList isContextData data={data} />);
 
       // Ignore values, more interested in if keys rendered + are sorted
diff --git a/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx b/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
index d3c9a28583..424db67373 100644
--- a/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
@@ -14,9 +14,7 @@ describe('OpenInContextLine', function() {
       type: 'stacktrace-link',
       schema: {
         uri: '/redirection',
-        url: `http://localhost:5000/redirection?installationId=${
-          install.uuid
-        }&projectSlug=${group.project.slug}`,
+        url: `http://localhost:5000/redirection?installationId=${install.uuid}&projectSlug=${group.project.slug}`,
       },
       sentryApp: {
         uuid: 'b468fed3-afba-4917-80d6-bdac99c1ec05',
@@ -51,9 +49,7 @@ describe('OpenInContextLine', function() {
         TestStubs.routerContext()
       );
       expect(wrapper.props().components[0].schema.url).toEqual(
-        `http://localhost:5000/redirection?installationId=${install.uuid}&projectSlug=${
-          group.project.slug
-        }`
+        `http://localhost:5000/redirection?installationId=${install.uuid}&projectSlug=${group.project.slug}`
       );
       const baseUrl = 'http://localhost:5000/redirection';
       const queryParams = {
diff --git a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
index 55f1cf9d93..ded91d95e2 100644
--- a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
@@ -40,7 +40,10 @@ describe('RichHttpContent', function() {
 
       // NOTE: displayName is set manually in this class
       expect(out.type.displayName).toEqual('KeyValueList');
-      expect(out.props.data).toEqual([['bar', 'baz'], ['foo', 'bar']]);
+      expect(out.props.data).toEqual([
+        ['bar', 'baz'],
+        ['foo', 'bar'],
+      ]);
     });
 
     it('should return a ContextData element when inferred Content-Type is application/json', function() {
diff --git a/tests/js/spec/components/events/interfaces/utils.spec.jsx b/tests/js/spec/components/events/interfaces/utils.spec.jsx
index 056c23806e..c45a99155b 100644
--- a/tests/js/spec/components/events/interfaces/utils.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/utils.spec.jsx
@@ -11,7 +11,10 @@ describe('components/interfaces/utils', function() {
     it('should convert an http request object to an equivalent unix curl command string', function() {
       expect(
         getCurlCommand({
-          cookies: [['foo', 'bar'], ['biz', 'baz']],
+          cookies: [
+            ['foo', 'bar'],
+            ['biz', 'baz'],
+          ],
           url: 'http://example.com/foo',
           headers: [
             ['Referer', 'http://example.com'],
@@ -97,7 +100,10 @@ describe('components/interfaces/utils', function() {
       // Escape escaped strings.
       expect(
         getCurlCommand({
-          cookies: [['foo', 'bar'], ['biz', 'baz']],
+          cookies: [
+            ['foo', 'bar'],
+            ['biz', 'baz'],
+          ],
           url: 'http://example.com/foo',
           headers: [
             ['Referer', 'http://example.com'],
@@ -166,7 +172,10 @@ describe('components/interfaces/utils', function() {
         objectToSortedTupleArray({
           foo: ['bar', 'baz'],
         })
-      ).toEqual([['foo', 'bar'], ['foo', 'baz']]);
+      ).toEqual([
+        ['foo', 'bar'],
+        ['foo', 'baz'],
+      ]);
     });
   });
 
diff --git a/tests/js/spec/components/forms/multiSelectField.spec.jsx b/tests/js/spec/components/forms/multiSelectField.spec.jsx
index 3eac35e447..7ce6201f3d 100644
--- a/tests/js/spec/components/forms/multiSelectField.spec.jsx
+++ b/tests/js/spec/components/forms/multiSelectField.spec.jsx
@@ -8,7 +8,10 @@ describe('MultiSelectField', function() {
     it('renders without form context', function() {
       const wrapper = shallow(
         <MultiSelectField
-          options={[{label: 'a', value: 'a'}, {label: 'b', value: 'b'}]}
+          options={[
+            {label: 'a', value: 'a'},
+            {label: 'b', value: 'b'},
+          ]}
           name="fieldName"
         />
       );
@@ -18,7 +21,10 @@ describe('MultiSelectField', function() {
     it('has the right value from props', function() {
       const wrapper = shallow(
         <MultiSelectField
-          options={[{label: 'a', value: 'a'}, {label: 'b', value: 'b'}]}
+          options={[
+            {label: 'a', value: 'a'},
+            {label: 'b', value: 'b'},
+          ]}
           name="fieldName"
           value={['a']}
         />
@@ -29,7 +35,10 @@ describe('MultiSelectField', function() {
     it('renders with form context', function() {
       const wrapper = shallow(
         <MultiSelectField
-          options={[{label: 'a', value: 'a'}, {label: 'b', value: 'b'}]}
+          options={[
+            {label: 'a', value: 'a'},
+            {label: 'b', value: 'b'},
+          ]}
           name="fieldName"
         />,
         {
diff --git a/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx b/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx
index a20dbd3254..8cea0208f0 100644
--- a/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx
+++ b/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx
@@ -9,7 +9,10 @@ describe('MultipleCheckboxField', function() {
       const wrapper = shallow(
         <MultipleCheckboxField
           name="fieldName"
-          choices={[['1', 'On'], ['2', 'Off']]}
+          choices={[
+            ['1', 'On'],
+            ['2', 'Off'],
+          ]}
           value={['1']}
         />
       );
@@ -18,7 +21,13 @@ describe('MultipleCheckboxField', function() {
 
     it('renders with form context', function() {
       const wrapper = shallow(
-        <MultipleCheckboxField name="fieldName" choices={[['1', 'On'], ['2', 'Off']]} />,
+        <MultipleCheckboxField
+          name="fieldName"
+          choices={[
+            ['1', 'On'],
+            ['2', 'Off'],
+          ]}
+        />,
         {
           context: {
             form: {
diff --git a/tests/js/spec/components/forms/selectControl.spec.jsx b/tests/js/spec/components/forms/selectControl.spec.jsx
index d3442ae60a..d022af6078 100644
--- a/tests/js/spec/components/forms/selectControl.spec.jsx
+++ b/tests/js/spec/components/forms/selectControl.spec.jsx
@@ -42,7 +42,11 @@ describe('SelectControl', function() {
   it('renders with select2 paired "choices"', function() {
     const wrapper = mountWithTheme(
       <SelectControl
-        choices={[['a', 'abc'], ['b', 'bcd'], ['c', 'cde']]}
+        choices={[
+          ['a', 'abc'],
+          ['b', 'bcd'],
+          ['c', 'cde'],
+        ]}
         name="fieldName"
       />
     );
@@ -60,7 +64,10 @@ describe('SelectControl', function() {
 
     const wrapper = mountWithTheme(
       <SelectControl
-        choices={[[{id: 'foo', name: 'Foo'}, Foo], [{id: 'bar', name: 'Bar'}, Bar]]}
+        choices={[
+          [{id: 'foo', name: 'Foo'}, Foo],
+          [{id: 'bar', name: 'Bar'}, Bar],
+        ]}
         name="fieldName"
         onChange={mock}
       />,
diff --git a/tests/js/spec/components/forms/selectField.spec.jsx b/tests/js/spec/components/forms/selectField.spec.jsx
index 7169987b64..49bebb7421 100644
--- a/tests/js/spec/components/forms/selectField.spec.jsx
+++ b/tests/js/spec/components/forms/selectField.spec.jsx
@@ -8,7 +8,10 @@ describe('SelectField', function() {
   it('renders without form context', function() {
     const wrapper = mountWithTheme(
       <SelectField
-        options={[{label: 'a', value: 'a'}, {label: 'b', value: 'b'}]}
+        options={[
+          {label: 'a', value: 'a'},
+          {label: 'b', value: 'b'},
+        ]}
         name="fieldName"
         value="a"
       />,
@@ -34,7 +37,11 @@ describe('SelectField', function() {
   it('renders with paired choices', function() {
     const wrapper = shallow(
       <SelectField
-        choices={[['a', 'abc'], ['b', 'bcd'], ['c', 'cde']]}
+        choices={[
+          ['a', 'abc'],
+          ['b', 'bcd'],
+          ['c', 'cde'],
+        ]}
         name="fieldName"
       />,
       {
@@ -56,7 +63,10 @@ describe('SelectField', function() {
     const wrapper = mountWithTheme(
       <Form onSubmit={mock}>
         <SelectField
-          options={[{label: 'a', value: 'a'}, {label: 'b', value: 'b'}]}
+          options={[
+            {label: 'a', value: 'a'},
+            {label: 'b', value: 'b'},
+          ]}
           name="fieldName"
         />
       </Form>,
@@ -78,7 +88,10 @@ describe('SelectField', function() {
         <Form onSubmit={mock}>
           <SelectField
             multiple
-            options={[{label: 'a', value: 'a'}, {label: 'b', value: 'b'}]}
+            options={[
+              {label: 'a', value: 'a'},
+              {label: 'b', value: 'b'},
+            ]}
             name="fieldName"
           />
         </Form>,
diff --git a/tests/js/spec/components/group/externalIssueForm.spec.jsx b/tests/js/spec/components/group/externalIssueForm.spec.jsx
index 3500db5cff..af068e4acc 100644
--- a/tests/js/spec/components/group/externalIssueForm.spec.jsx
+++ b/tests/js/spec/components/group/externalIssueForm.spec.jsx
@@ -85,7 +85,10 @@ describe('ExternalIssueForm', () => {
             name: 'repo',
             default: 'scefali/test',
             updatesForm: true,
-            choices: [['scefali/test', 'test'], ['scefali/ZeldaBazaar', 'ZeldaBazaar']],
+            choices: [
+              ['scefali/test', 'test'],
+              ['scefali/ZeldaBazaar', 'ZeldaBazaar'],
+            ],
             type: 'select',
             label: 'GitHub Repository',
           },
diff --git a/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx b/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx
index 6cf7222ac0..7d83335bb0 100644
--- a/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx
+++ b/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx
@@ -63,9 +63,7 @@ describe('SentryAppExternalIssueForm', () => {
     });
 
     it('submits to the New External Issue endpoint', () => {
-      const url = `/sentry-app-installations/${
-        sentryAppInstallation.uuid
-      }/external-issues/`;
+      const url = `/sentry-app-installations/${sentryAppInstallation.uuid}/external-issues/`;
       expect(wrapper.find('Form').prop('apiEndpoint')).toEqual(url);
       expect(wrapper.find('Form').prop('apiMethod')).toEqual('POST');
     });
@@ -126,9 +124,7 @@ describe('SentryAppExternalIssueForm', () => {
     });
 
     it('submits to the New External Issue endpoint', () => {
-      const url = `/sentry-app-installations/${
-        sentryAppInstallation.uuid
-      }/external-issues/`;
+      const url = `/sentry-app-installations/${sentryAppInstallation.uuid}/external-issues/`;
       expect(wrapper.find('Form').prop('apiEndpoint')).toEqual(url);
       expect(wrapper.find('Form').prop('apiMethod')).toEqual('POST');
     });
@@ -194,7 +190,10 @@ describe('SentryAppExternalIssueForm Async Field', () => {
         url:
           '/sentry-app-installations/d950595e-cba2-46f6-8a94-b79e42806f98/external-requests/',
         body: {
-          choices: [[1, 'Issue 1'], [2, 'Issue 2']],
+          choices: [
+            [1, 'Issue 1'],
+            [2, 'Issue 2'],
+          ],
         },
       });
 
diff --git a/tests/js/spec/components/multipleCheckbox.spec.js b/tests/js/spec/components/multipleCheckbox.spec.js
index f0a4b31821..d293c5a9a0 100644
--- a/tests/js/spec/components/multipleCheckbox.spec.js
+++ b/tests/js/spec/components/multipleCheckbox.spec.js
@@ -6,7 +6,11 @@ describe('MultipleCheckbox', function() {
   it('renders', function() {
     const wrapper = shallow(
       <MultipleCheckbox
-        choices={[[0, 'Choice A'], [1, 'Choice B'], [2, 'Choice C']]}
+        choices={[
+          [0, 'Choice A'],
+          [1, 'Choice B'],
+          [2, 'Choice C'],
+        ]}
         value={[1]}
       />
     );
@@ -18,7 +22,11 @@ describe('MultipleCheckbox', function() {
     const onChange = jest.fn();
     const wrapper = mount(
       <MultipleCheckbox
-        choices={[[0, 'Choice A'], [1, 'Choice B'], [2, 'Choice C']]}
+        choices={[
+          [0, 'Choice A'],
+          [1, 'Choice B'],
+          [2, 'Choice C'],
+        ]}
         value={[1]}
         onChange={onChange}
       />
@@ -35,7 +43,11 @@ describe('MultipleCheckbox', function() {
     const onChange = jest.fn();
     const wrapper = mount(
       <MultipleCheckbox
-        choices={[[0, 'Choice A'], [1, 'Choice B'], [2, 'Choice C']]}
+        choices={[
+          [0, 'Choice A'],
+          [1, 'Choice B'],
+          [2, 'Choice C'],
+        ]}
         value={[1]}
         onChange={onChange}
       />
diff --git a/tests/js/spec/components/organizations/getParams.spec.jsx b/tests/js/spec/components/organizations/getParams.spec.jsx
index 8fc1a7b50b..2b94a75e4a 100644
--- a/tests/js/spec/components/organizations/getParams.spec.jsx
+++ b/tests/js/spec/components/organizations/getParams.spec.jsx
@@ -22,9 +22,9 @@ describe('getParams', function() {
   });
 
   it('should parse start and end', function() {
-    expect(getParams({start: '2019-10-01T00:00:00', end: '2019-10-02T00:00:00'})).toEqual(
-      {start: '2019-10-01T00:00:00.000', end: '2019-10-02T00:00:00.000'}
-    );
+    expect(
+      getParams({start: '2019-10-01T00:00:00', end: '2019-10-02T00:00:00'})
+    ).toEqual({start: '2019-10-01T00:00:00.000', end: '2019-10-02T00:00:00.000'});
 
     expect(
       getParams({start: '2019-10-23T04:28:49+0000', end: '2019-10-26T02:56:17+0000'})
diff --git a/tests/js/spec/components/settingsBreadcrumbDropdown.spec.jsx b/tests/js/spec/components/settingsBreadcrumbDropdown.spec.jsx
index d086a859c1..8240ccb393 100644
--- a/tests/js/spec/components/settingsBreadcrumbDropdown.spec.jsx
+++ b/tests/js/spec/components/settingsBreadcrumbDropdown.spec.jsx
@@ -10,7 +10,10 @@ const CLOSE_DELAY = 0;
 describe('Settings Breadcrumb Dropdown', function() {
   let wrapper;
   const selectMock = jest.fn();
-  const items = [{value: '1', label: 'foo'}, {value: '2', label: 'bar'}];
+  const items = [
+    {value: '1', label: 'foo'},
+    {value: '2', label: 'bar'},
+  ];
 
   beforeEach(function() {
     wrapper = mountWithTheme(
diff --git a/tests/js/spec/utils/convertFromSelect2Choices.spec.jsx b/tests/js/spec/utils/convertFromSelect2Choices.spec.jsx
index b9081378ad..3589702acc 100644
--- a/tests/js/spec/utils/convertFromSelect2Choices.spec.jsx
+++ b/tests/js/spec/utils/convertFromSelect2Choices.spec.jsx
@@ -19,7 +19,13 @@ describe('convertFromSelect2Choices', function() {
   });
 
   it('changes a paired array of strings into array of {label, value}', function() {
-    expect(convertFromSelect2Choices([['a', 'A'], ['b', 'B'], ['c', 'C']])).toEqual([
+    expect(
+      convertFromSelect2Choices([
+        ['a', 'A'],
+        ['b', 'B'],
+        ['c', 'C'],
+      ])
+    ).toEqual([
       {
         label: 'A',
         value: 'a',
diff --git a/tests/js/spec/utils/highlightFuseMatches.spec.jsx b/tests/js/spec/utils/highlightFuseMatches.spec.jsx
index 8571e4ce85..bbdcb05886 100644
--- a/tests/js/spec/utils/highlightFuseMatches.spec.jsx
+++ b/tests/js/spec/utils/highlightFuseMatches.spec.jsx
@@ -3,7 +3,11 @@ import highlightFuseMatches, {getFuseMatches} from 'app/utils/highlightFuseMatch
 describe('highlightFuseMatches', function() {
   const matchObj = {
     value: 'Authentication tokens allow you to perform actions',
-    indices: [[4, 6], [12, 13], [15, 16]],
+    indices: [
+      [4, 6],
+      [12, 13],
+      [15, 16],
+    ],
   };
 
   it('handles no matches', function() {
diff --git a/tests/js/spec/utils/parseHtmlMarks.spec.jsx b/tests/js/spec/utils/parseHtmlMarks.spec.jsx
index 21afab1f8b..b0e417a8c9 100644
--- a/tests/js/spec/utils/parseHtmlMarks.spec.jsx
+++ b/tests/js/spec/utils/parseHtmlMarks.spec.jsx
@@ -30,7 +30,10 @@ describe('parseHtmlMarks', function() {
     expect(parseHtmlMarks(data)).toEqual({
       key: 'title',
       value: 'A string without any marking tags',
-      indices: [[9, 12], [21, 27]],
+      indices: [
+        [9, 12],
+        [21, 27],
+      ],
     });
   });
 
diff --git a/tests/js/spec/views/discover/aggregations/aggregation.spec.jsx b/tests/js/spec/views/discover/aggregations/aggregation.spec.jsx
index 369d9863ba..161d713f6e 100644
--- a/tests/js/spec/views/discover/aggregations/aggregation.spec.jsx
+++ b/tests/js/spec/views/discover/aggregations/aggregation.spec.jsx
@@ -85,7 +85,10 @@ describe('Aggregation', function() {
   describe('handleChange()', function() {
     let wrapper, focusSpy;
     beforeEach(function() {
-      const cols = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
+      const cols = [
+        {name: 'col1', type: 'string'},
+        {name: 'col2', type: 'number'},
+      ];
       focusSpy = jest.spyOn(Aggregation.prototype, 'focus');
 
       wrapper = mountWithTheme(
diff --git a/tests/js/spec/views/discover/aggregations/index.spec.jsx b/tests/js/spec/views/discover/aggregations/index.spec.jsx
index 42f729d674..316f59c06a 100644
--- a/tests/js/spec/views/discover/aggregations/index.spec.jsx
+++ b/tests/js/spec/views/discover/aggregations/index.spec.jsx
@@ -6,9 +6,15 @@ import Aggregations from 'app/views/discover/aggregations';
 describe('Aggregations', function() {
   let wrapper, onChangeMock, aggregations;
   beforeEach(function() {
-    aggregations = [['count()', null, 'count'], ['uniq', 'col1', 'uniq_col1']];
+    aggregations = [
+      ['count()', null, 'count'],
+      ['uniq', 'col1', 'uniq_col1'],
+    ];
     onChangeMock = jest.fn();
-    const columns = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
+    const columns = [
+      {name: 'col1', type: 'string'},
+      {name: 'col2', type: 'number'},
+    ];
     const value = [];
     wrapper = mountWithTheme(
       <Aggregations columns={columns} onChange={onChangeMock} value={value} />,
diff --git a/tests/js/spec/views/discover/analytics.spec.jsx b/tests/js/spec/views/discover/analytics.spec.jsx
index cfe3e6297b..96dcb06837 100644
--- a/tests/js/spec/views/discover/analytics.spec.jsx
+++ b/tests/js/spec/views/discover/analytics.spec.jsx
@@ -8,14 +8,20 @@ describe('Analytics', function() {
     const query = {
       fields: ['col1'],
       projects: [1],
-      conditions: [['customer', '=', 'test@test.com'], ['some_count', '=', 5]],
+      conditions: [
+        ['customer', '=', 'test@test.com'],
+        ['some_count', '=', 5],
+      ],
     };
 
     trackQuery(TestStubs.Organization(), query);
   });
 
   it('scrubs only conditions with strings', function() {
-    const conditions = [['customer', '=', '[REDACTED]'], ['some_count', '=', 5]];
+    const conditions = [
+      ['customer', '=', '[REDACTED]'],
+      ['some_count', '=', 5],
+    ];
 
     expect(analytics).toHaveBeenCalledWith(
       'discover.query',
diff --git a/tests/js/spec/views/discover/conditions/condition.spec.jsx b/tests/js/spec/views/discover/conditions/condition.spec.jsx
index 4e15604c70..1967f4102f 100644
--- a/tests/js/spec/views/discover/conditions/condition.spec.jsx
+++ b/tests/js/spec/views/discover/conditions/condition.spec.jsx
@@ -93,7 +93,10 @@ describe('Condition', function() {
     const onChangeMock = jest.fn();
     beforeEach(function() {
       focusSpy = jest.spyOn(Condition.prototype, 'focus');
-      const columns = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
+      const columns = [
+        {name: 'col1', type: 'string'},
+        {name: 'col2', type: 'number'},
+      ];
       wrapper = mountWithTheme(
         <Condition
           value={[null, null, null]}
@@ -132,7 +135,10 @@ describe('Condition', function() {
     let wrapper;
     const onChangeMock = jest.fn();
     beforeEach(function() {
-      const columns = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
+      const columns = [
+        {name: 'col1', type: 'string'},
+        {name: 'col2', type: 'number'},
+      ];
       wrapper = mountWithTheme(
         <Condition
           value={[null, null, null]}
diff --git a/tests/js/spec/views/discover/conditions/index.spec.jsx b/tests/js/spec/views/discover/conditions/index.spec.jsx
index b6b4d19ab7..6f430385d5 100644
--- a/tests/js/spec/views/discover/conditions/index.spec.jsx
+++ b/tests/js/spec/views/discover/conditions/index.spec.jsx
@@ -6,9 +6,15 @@ import Conditions from 'app/views/discover/conditions';
 describe('Conditions', function() {
   let wrapper, onChangeMock, conditions;
   beforeEach(function() {
-    conditions = [['col1', 'IS NOT NULL', null], ['col2', '=', 2]];
+    conditions = [
+      ['col1', 'IS NOT NULL', null],
+      ['col2', '=', 2],
+    ];
     onChangeMock = jest.fn();
-    const columns = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
+    const columns = [
+      {name: 'col1', type: 'string'},
+      {name: 'col2', type: 'number'},
+    ];
     const value = [];
     wrapper = mountWithTheme(
       <Conditions columns={columns} onChange={onChangeMock} value={value} />,
diff --git a/tests/js/spec/views/discover/index.spec.jsx b/tests/js/spec/views/discover/index.spec.jsx
index 39329360df..591b2007f3 100644
--- a/tests/js/spec/views/discover/index.spec.jsx
+++ b/tests/js/spec/views/discover/index.spec.jsx
@@ -17,7 +17,10 @@ describe('DiscoverContainer', function() {
       url: '/organizations/org-slug/discover/query/?per_page=1000&cursor=0:0:1',
       method: 'POST',
       body: {
-        data: [{tags_key: 'tag1', count: 5}, {tags_key: 'tag2', count: 1}],
+        data: [
+          {tags_key: 'tag1', count: 5},
+          {tags_key: 'tag2', count: 1},
+        ],
         timing: {},
         meta: [],
       },
diff --git a/tests/js/spec/views/discover/queryBuilder.spec.jsx b/tests/js/spec/views/discover/queryBuilder.spec.jsx
index 6944e02dd9..c46f2061d0 100644
--- a/tests/js/spec/views/discover/queryBuilder.spec.jsx
+++ b/tests/js/spec/views/discover/queryBuilder.spec.jsx
@@ -40,7 +40,10 @@ describe('Query Builder', function() {
         url: '/organizations/org-slug/discover/query/?per_page=1000&cursor=0:0:1',
         method: 'POST',
         body: {
-          data: [{tags_key: 'tag1', count: 5}, {tags_key: 'tag2', count: 1}],
+          data: [
+            {tags_key: 'tag1', count: 5},
+            {tags_key: 'tag2', count: 1},
+          ],
         },
       });
     });
diff --git a/tests/js/spec/views/discover/result/table.spec.jsx b/tests/js/spec/views/discover/result/table.spec.jsx
index e86b0f62f1..07134e87a2 100644
--- a/tests/js/spec/views/discover/result/table.spec.jsx
+++ b/tests/js/spec/views/discover/result/table.spec.jsx
@@ -14,7 +14,10 @@ describe('ResultTable', function() {
         query={{aggregations: [], fields: ['id', 'project.id']}}
         data={{
           data: [{id: '111', 'project.id': 1}],
-          meta: [{name: 'id', type: 'string'}, {name: 'project.id', type: 'number'}],
+          meta: [
+            {name: 'id', type: 'string'},
+            {name: 'project.id', type: 'number'},
+          ],
         }}
       />
     );
diff --git a/tests/js/spec/views/discover/result/utils.spec.jsx b/tests/js/spec/views/discover/result/utils.spec.jsx
index ecee9487a8..bff1ef60e5 100644
--- a/tests/js/spec/views/discover/result/utils.spec.jsx
+++ b/tests/js/spec/views/discover/result/utils.spec.jsx
@@ -18,7 +18,10 @@ describe('Utils', function() {
       {count: 6, uniq_id: 10, 'project.id': 5, environment: 'production'},
     ];
     const query = {
-      aggregations: [['count()', null, 'count'], ['uniq', 'id', 'uniq_id']],
+      aggregations: [
+        ['count()', null, 'count'],
+        ['uniq', 'id', 'uniq_id'],
+      ],
       fields: ['project.id', 'environment'],
     };
 
@@ -58,7 +61,10 @@ describe('Utils', function() {
       {count: 6, uniq_id: 10, 'project.id': 5, environment: 'production'},
     ];
     const query = {
-      aggregations: [['count()', null, 'count'], ['uniq', 'id', 'uniq_id']],
+      aggregations: [
+        ['count()', null, 'count'],
+        ['uniq', 'id', 'uniq_id'],
+      ],
       fields: ['project.id', 'environment'],
     };
 
diff --git a/tests/js/spec/views/discover/sidebar/orderBy.spec.jsx b/tests/js/spec/views/discover/sidebar/orderBy.spec.jsx
index fb238dbf5f..f09bce8408 100644
--- a/tests/js/spec/views/discover/sidebar/orderBy.spec.jsx
+++ b/tests/js/spec/views/discover/sidebar/orderBy.spec.jsx
@@ -9,7 +9,10 @@ describe('orderBy', function() {
     project = TestStubs.Project();
     organization = TestStubs.Organization({projects: [project]});
     onChangeMock = jest.fn();
-    columns = [{value: 'timestamp', label: 'timestamp'}, {value: 'id', label: 'id'}];
+    columns = [
+      {value: 'timestamp', label: 'timestamp'},
+      {value: 'id', label: 'id'},
+    ];
 
     wrapper = mountWithTheme(
       <Orderby value="-timestamp" columns={columns} onChange={onChangeMock} />,
@@ -23,14 +26,20 @@ describe('orderBy', function() {
         .find('StyledSelect')
         .at(0)
         .prop('options')
-    ).toEqual([{value: 'timestamp', label: 'timestamp'}, {value: 'id', label: 'id'}]);
+    ).toEqual([
+      {value: 'timestamp', label: 'timestamp'},
+      {value: 'id', label: 'id'},
+    ]);
 
     expect(
       wrapper
         .find('StyledSelect')
         .at(1)
         .prop('options')
-    ).toEqual([{value: 'asc', label: 'asc'}, {value: 'desc', label: 'desc'}]);
+    ).toEqual([
+      {value: 'asc', label: 'asc'},
+      {value: 'desc', label: 'desc'},
+    ]);
 
     expect(
       wrapper
diff --git a/tests/js/spec/views/discover/utils.spec.jsx b/tests/js/spec/views/discover/utils.spec.jsx
index 5f69c27007..7edf579e77 100644
--- a/tests/js/spec/views/discover/utils.spec.jsx
+++ b/tests/js/spec/views/discover/utils.spec.jsx
@@ -17,7 +17,10 @@ const queryStringWithInvalidKey =
   '?aggregations=%5B%5B%22count()%22%2Cnull%2C%22count%22%5D%2C%5B%22uniq%22%2C%22os_build%22%2C%22uniq_os_build%22%5D%5D&conditions=%5B%5D&end=%222018-07-10T01%3A18%3A04%22&fields=%5B%22id%22%2C%22timestamp%22%5D&limit=1000&orderby=%22-timestamp%22&projects=%5B8%5D&start=%222018-06-26T01%3A18%3A04%22&invalid=true';
 
 const query = {
-  aggregations: [['count()', null, 'count'], ['uniq', 'os_build', 'uniq_os_build']],
+  aggregations: [
+    ['count()', null, 'count'],
+    ['uniq', 'os_build', 'uniq_os_build'],
+  ],
   conditions: [],
   end: '2018-07-10T01:18:04',
   fields: ['id', 'timestamp'],
diff --git a/tests/js/spec/views/events/events.spec.jsx b/tests/js/spec/views/events/events.spec.jsx
index 5bff78781b..70bc8ea49c 100644
--- a/tests/js/spec/views/events/events.spec.jsx
+++ b/tests/js/spec/views/events/events.spec.jsx
@@ -75,7 +75,10 @@ describe('EventsErrors', function() {
     // Search bar makes this request when mounted
     MockApiClient.addMockResponse({
       url: '/organizations/org-slug/tags/',
-      body: [{count: 1, tag: 'transaction'}, {count: 2, tag: 'mechanism'}],
+      body: [
+        {count: 1, tag: 'transaction'},
+        {count: 2, tag: 'mechanism'},
+      ],
     });
     eventsMock = MockApiClient.addMockResponse({
       url: '/organizations/org-slug/events/',
@@ -326,7 +329,10 @@ describe('EventsContainer', function() {
     // Search bar makes this request when mounted
     MockApiClient.addMockResponse({
       url: '/organizations/org-slug/tags/',
-      body: [{count: 1, tag: 'transaction'}, {count: 2, tag: 'mechanism'}],
+      body: [
+        {count: 1, tag: 'transaction'},
+        {count: 2, tag: 'mechanism'},
+      ],
     });
     eventsMock = MockApiClient.addMockResponse({
       url: '/organizations/org-slug/events/',
diff --git a/tests/js/spec/views/events/eventsLineChart.spec.jsx b/tests/js/spec/views/events/eventsLineChart.spec.jsx
index a3802c6967..95e985aa05 100644
--- a/tests/js/spec/views/events/eventsLineChart.spec.jsx
+++ b/tests/js/spec/views/events/eventsLineChart.spec.jsx
@@ -19,7 +19,10 @@ describe('EventsChart > EventsLineChart', function() {
       url: `/organizations/${org.slug}/events-stats/`,
       method: 'GET',
       body: {
-        data: [[1543449600, [20, 12]], [1543449601, [10, 5]]],
+        data: [
+          [1543449600, [20, 12]],
+          [1543449601, [10, 5]],
+        ],
       },
     });
 
diff --git a/tests/js/spec/views/events/index.spec.jsx b/tests/js/spec/views/events/index.spec.jsx
index 399a6212f1..c5820cdaf6 100644
--- a/tests/js/spec/views/events/index.spec.jsx
+++ b/tests/js/spec/views/events/index.spec.jsx
@@ -34,7 +34,10 @@ describe('EventsContainer', function() {
     });
     MockApiClient.addMockResponse({
       url: '/organizations/org-slug/tags/',
-      body: [{count: 1, tag: 'transaction'}, {count: 2, tag: 'mechanism'}],
+      body: [
+        {count: 1, tag: 'transaction'},
+        {count: 2, tag: 'mechanism'},
+      ],
     });
 
     setActiveOrganization(organization);
diff --git a/tests/js/spec/views/events/utils/eventsRequest.spec.jsx b/tests/js/spec/views/events/utils/eventsRequest.spec.jsx
index 829f6826ec..29f00ec11f 100644
--- a/tests/js/spec/views/events/utils/eventsRequest.spec.jsx
+++ b/tests/js/spec/views/events/utils/eventsRequest.spec.jsx
@@ -122,7 +122,13 @@ describe('EventsRequest', function() {
       doEventsRequest.mockImplementation(() =>
         Promise.resolve({
           data: [
-            [new Date(), [{...COUNT_OBJ, count: 321}, {...COUNT_OBJ, count: 79}]],
+            [
+              new Date(),
+              [
+                {...COUNT_OBJ, count: 321},
+                {...COUNT_OBJ, count: 79},
+              ],
+            ],
             [new Date(), [COUNT_OBJ]],
           ],
         })
diff --git a/tests/js/spec/views/eventsV2/eventDetails.spec.jsx b/tests/js/spec/views/eventsV2/eventDetails.spec.jsx
index d261e0f121..4c4c6eb149 100644
--- a/tests/js/spec/views/eventsV2/eventDetails.spec.jsx
+++ b/tests/js/spec/views/eventsV2/eventDetails.spec.jsx
@@ -69,7 +69,10 @@ describe('EventsV2 > EventDetails', function() {
       url: '/organizations/org-slug/events-stats/',
       method: 'GET',
       body: {
-        data: [[1234561700, [1]], [1234561800, [1]]],
+        data: [
+          [1234561700, [1]],
+          [1234561800, [1]],
+        ],
       },
     });
 
diff --git a/tests/js/spec/views/eventsV2/eventView.spec.jsx b/tests/js/spec/views/eventsV2/eventView.spec.jsx
index fee292831c..63caf1a4f4 100644
--- a/tests/js/spec/views/eventsV2/eventView.spec.jsx
+++ b/tests/js/spec/views/eventsV2/eventView.spec.jsx
@@ -66,7 +66,10 @@ describe('EventView.fromLocation()', function() {
     expect(eventView).toMatchObject({
       id: '42',
       name: 'best query',
-      fields: [{field: 'count()', width: 123}, {field: 'id', width: 456}],
+      fields: [
+        {field: 'count()', width: 123},
+        {field: 'id', width: 456},
+      ],
       sorts: generateSorts(['count']),
       query: 'event.type:transaction',
       project: [123],
@@ -100,7 +103,10 @@ describe('EventView.fromLocation()', function() {
     expect(eventView).toMatchObject({
       id: '42',
       name: 'best query',
-      fields: [{field: 'count()', width: 123}, {field: 'id', width: 456}],
+      fields: [
+        {field: 'count()', width: 123},
+        {field: 'id', width: 456},
+      ],
       sorts: generateSorts(['count']),
       query: 'event.type:transaction',
       project: [123],
@@ -132,7 +138,10 @@ describe('EventView.fromLocation()', function() {
     expect(eventView).toMatchObject({
       id: '42',
       name: 'best query',
-      fields: [{field: 'count()', width: 123}, {field: 'id', width: 456}],
+      fields: [
+        {field: 'count()', width: 123},
+        {field: 'id', width: 456},
+      ],
       sorts: generateSorts(['count']),
       query: 'event.type:transaction',
       project: [123],
@@ -241,7 +250,10 @@ describe('EventView.fromSavedQuery()', function() {
     const expected = {
       id: '5',
       name: 'foo bar',
-      fields: [{field: 'release', width: 111}, {field: 'count(id)', width: 222}],
+      fields: [
+        {field: 'release', width: 111},
+        {field: 'count(id)', width: 222},
+      ],
       sorts: generateSorts(['count_id']),
       query: '',
       project: [1],
@@ -535,7 +547,10 @@ describe('EventView.generateQueryStringObject()', function() {
     const state = {
       id: '1234',
       name: 'best query',
-      fields: [{field: 'count()', width: 123}, {field: 'project.id', width: 456}],
+      fields: [
+        {field: 'count()', width: 123},
+        {field: 'project.id', width: 456},
+      ],
       sorts: generateSorts(['count']),
       query: 'event.type:error',
       project: [42],
@@ -873,7 +888,10 @@ describe('EventView.toNewQuery()', function() {
   const state = {
     id: '1234',
     name: 'best query',
-    fields: [{field: 'count()', width: 123}, {field: 'project.id', width: 456}],
+    fields: [
+      {field: 'count()', width: 123},
+      {field: 'project.id', width: 456},
+    ],
     sorts: generateSorts(['count']),
     query: 'event.type:error',
     project: [42],
diff --git a/tests/js/spec/views/incidents/details/activity.spec.jsx b/tests/js/spec/views/incidents/details/activity.spec.jsx
index 5f56f57d76..e51d645841 100644
--- a/tests/js/spec/views/incidents/details/activity.spec.jsx
+++ b/tests/js/spec/views/incidents/details/activity.spec.jsx
@@ -13,9 +13,7 @@ describe('IncidentDetails -> Activity', function() {
 
   beforeAll(function() {
     activitiesList = MockApiClient.addMockResponse({
-      url: `/organizations/${organization.slug}/incidents/${
-        incident.identifier
-      }/activity/`,
+      url: `/organizations/${organization.slug}/incidents/${incident.identifier}/activity/`,
       body: [activity],
     });
   });
@@ -55,9 +53,7 @@ describe('IncidentDetails -> Activity', function() {
 
   it('creates a new note', async function() {
     const createComment = MockApiClient.addMockResponse({
-      url: `/organizations/${organization.slug}/incidents/${
-        incident.identifier
-      }/comments/`,
+      url: `/organizations/${organization.slug}/incidents/${incident.identifier}/comments/`,
       method: 'POST',
       body: TestStubs.IncidentActivity({
         id: '234',
@@ -82,9 +78,7 @@ describe('IncidentDetails -> Activity', function() {
   it('updates an existing note', async function() {
     const newComment = 'edited comment';
     const updateComment = MockApiClient.addMockResponse({
-      url: `/organizations/${organization.slug}/incidents/${
-        incident.identifier
-      }/comments/${activity.id}/`,
+      url: `/organizations/${organization.slug}/incidents/${incident.identifier}/comments/${activity.id}/`,
       method: 'PUT',
       body: {
         ...activity,
@@ -129,9 +123,7 @@ describe('IncidentDetails -> Activity', function() {
   it('fails to update an existing note', async function() {
     const newComment = 'edited comment';
     const updateComment = MockApiClient.addMockResponse({
-      url: `/organizations/${organization.slug}/incidents/${
-        incident.identifier
-      }/comments/${activity.id}/`,
+      url: `/organizations/${organization.slug}/incidents/${incident.identifier}/comments/${activity.id}/`,
       method: 'PUT',
       statusCode: 400,
     });
@@ -165,9 +157,7 @@ describe('IncidentDetails -> Activity', function() {
 
   it('deletes a note', async function() {
     const deleteComment = MockApiClient.addMockResponse({
-      url: `/organizations/${organization.slug}/incidents/${
-        incident.identifier
-      }/comments/${activity.id}/`,
+      url: `/organizations/${organization.slug}/incidents/${incident.identifier}/comments/${activity.id}/`,
       method: 'DELETE',
       body: {},
     });
@@ -191,9 +181,7 @@ describe('IncidentDetails -> Activity', function() {
 
   it('fails to delete a note', async function() {
     const deleteComment = MockApiClient.addMockResponse({
-      url: `/organizations/${organization.slug}/incidents/${
-        incident.identifier
-      }/comments/${activity.id}/`,
+      url: `/organizations/${organization.slug}/incidents/${incident.identifier}/comments/${activity.id}/`,
       method: 'DELETE',
       statusCode: 400,
     });
diff --git a/tests/js/spec/views/incidents/details/index.spec.jsx b/tests/js/spec/views/incidents/details/index.spec.jsx
index f8c46897b2..cb544421b6 100644
--- a/tests/js/spec/views/incidents/details/index.spec.jsx
+++ b/tests/js/spec/views/incidents/details/index.spec.jsx
@@ -45,9 +45,7 @@ describe('IncidentDetails', function() {
       statusCode: 404,
     });
     activitiesList = MockApiClient.addMockResponse({
-      url: `/organizations/${organization.slug}/incidents/${
-        mockIncident.identifier
-      }/activity/`,
+      url: `/organizations/${organization.slug}/incidents/${mockIncident.identifier}/activity/`,
       body: [TestStubs.IncidentActivity()],
     });
   });
diff --git a/tests/js/spec/views/projectsDashboard/index.spec.jsx b/tests/js/spec/views/projectsDashboard/index.spec.jsx
index 215f0d44d2..574d129cd6 100644
--- a/tests/js/spec/views/projectsDashboard/index.spec.jsx
+++ b/tests/js/spec/views/projectsDashboard/index.spec.jsx
@@ -168,7 +168,10 @@ describe('ProjectsDashboard', function() {
         body: [
           TestStubs.Project({
             teams,
-            stats: [[1517281200, 2], [1517310000, 1]],
+            stats: [
+              [1517281200, 2],
+              [1517310000, 1],
+            ],
           }),
         ],
       });
@@ -246,7 +249,10 @@ describe('ProjectsDashboard', function() {
         url: `/organizations/${org.slug}/projects/`,
         body: projects.map(project => ({
           ...project,
-          stats: [[1517281200, 2], [1517310000, 1]],
+          stats: [
+            [1517281200, 2],
+            [1517310000, 1],
+          ],
         })),
       });
 
diff --git a/tests/js/spec/views/projectsDashboard/projectCard.spec.jsx b/tests/js/spec/views/projectsDashboard/projectCard.spec.jsx
index 92ba1aca14..09fd32db26 100644
--- a/tests/js/spec/views/projectsDashboard/projectCard.spec.jsx
+++ b/tests/js/spec/views/projectsDashboard/projectCard.spec.jsx
@@ -14,7 +14,10 @@ describe('ProjectCard', function() {
       <ProjectCard
         organization={TestStubs.Organization()}
         project={TestStubs.Project({
-          stats: [[1525042800, 1], [1525046400, 2]],
+          stats: [
+            [1525042800, 1],
+            [1525046400, 2],
+          ],
           platform: 'javascript',
         })}
         params={{orgId: 'org-slug'}}
@@ -54,7 +57,10 @@ describe('ProjectCard', function() {
       <ProjectCard
         organization={TestStubs.Organization()}
         project={TestStubs.Project({
-          stats: [[1525042800, 1], [1525046400, 2]],
+          stats: [
+            [1525042800, 1],
+            [1525046400, 2],
+          ],
           platform: 'javascript',
           latestDeploys,
         })}
diff --git a/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx b/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx
index b3b46b1ee3..5cb17a3aaa 100644
--- a/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx
+++ b/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx
@@ -118,9 +118,7 @@ describe('SentryAppExternalInstallation', () => {
       );
 
       expect(window.location.assign).toHaveBeenCalledWith(
-        `https://google.com/?code=${install.code}&installationId=${
-          install.uuid
-        }&orgSlug=${org1.slug}`
+        `https://google.com/?code=${install.code}&installationId=${install.uuid}&orgSlug=${org1.slug}`
       );
       window.location.assign.mockRestore();
     });
diff --git a/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallationDetail.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallationDetail.spec.jsx
index 847ca78926..9831fb25d8 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallationDetail.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallationDetail.spec.jsx
@@ -98,9 +98,7 @@ describe('Sentry App Installations', function() {
       wrapper.instance().handleInstall(sentryApp);
       await tick();
       expect(window.location.assign).toHaveBeenCalledWith(
-        `${sentryApp.redirectUrl}?code=${install.code}&installationId=${
-          install.uuid
-        }&orgSlug=${org.slug}`
+        `${sentryApp.redirectUrl}?code=${install.code}&installationId=${install.uuid}&orgSlug=${org.slug}`
       );
     });
 
@@ -119,9 +117,7 @@ describe('Sentry App Installations', function() {
       wrapper.instance().handleInstall(sentryAppWithQuery);
       await tick();
       expect(window.location.assign).toHaveBeenCalledWith(
-        `https://example.com/setup?code=${install.code}&hello=1&installationId=${
-          install.uuid
-        }&orgSlug=${org.slug}`
+        `https://example.com/setup?code=${install.code}&hello=1&installationId=${install.uuid}&orgSlug=${org.slug}`
       );
     });
   });
diff --git a/tests/js/spec/views/settings/organizationMembers/organizationAccessRequests.spec.jsx b/tests/js/spec/views/settings/organizationMembers/organizationAccessRequests.spec.jsx
index 84a7c55d9b..27760e8115 100644
--- a/tests/js/spec/views/settings/organizationMembers/organizationAccessRequests.spec.jsx
+++ b/tests/js/spec/views/settings/organizationMembers/organizationAccessRequests.spec.jsx
@@ -42,9 +42,7 @@ describe('OrganizationAccessRequests', function() {
         .first()
         .text()
         .includes(
-          `${accessRequest.member.user.name} requests access to the #${
-            accessRequest.team.slug
-          } team`
+          `${accessRequest.member.user.name} requests access to the #${accessRequest.team.slug} team`
         )
     ).toBe(true);
     expect(
@@ -53,9 +51,7 @@ describe('OrganizationAccessRequests', function() {
         .last()
         .text()
         .includes(
-          `${requester.name} requests to add ${accessRequest.member.user.name} to the #${
-            accessRequest.team.slug
-          } team`
+          `${requester.name} requests to add ${accessRequest.member.user.name} to the #${accessRequest.team.slug} team`
         )
     ).toBe(true);
   });
diff --git a/tests/js/spec/views/settings/projectAlertRuleDetails.spec.jsx b/tests/js/spec/views/settings/projectAlertRuleDetails.spec.jsx
index e1c6263a78..7967e9ad1c 100644
--- a/tests/js/spec/views/settings/projectAlertRuleDetails.spec.jsx
+++ b/tests/js/spec/views/settings/projectAlertRuleDetails.spec.jsx
@@ -41,7 +41,10 @@ describe('ProjectAlertRuleDetails', function() {
       name: 'Rules',
       component: null,
       indexRoute: {},
-      childRoutes: [{path: 'new/', name: 'New'}, {path: ':ruleId/', name: 'Edit'}],
+      childRoutes: [
+        {path: 'new/', name: 'New'},
+        {path: ':ruleId/', name: 'Edit'},
+      ],
     },
     {path: ':ruleId/', name: 'Edit'},
   ];
diff --git a/tests/js/spec/views/teamMembers.spec.jsx b/tests/js/spec/views/teamMembers.spec.jsx
index cca66751db..d4148c0ae7 100644
--- a/tests/js/spec/views/teamMembers.spec.jsx
+++ b/tests/js/spec/views/teamMembers.spec.jsx
@@ -210,9 +210,7 @@ describe('TeamMembers', function() {
 
   it('can remove member from team', async function() {
     const deleteMock = Client.addMockResponse({
-      url: `/organizations/${organization.slug}/members/${members[0].id}/teams/${
-        team.slug
-      }/`,
+      url: `/organizations/${organization.slug}/members/${members[0].id}/teams/${team.slug}/`,
       method: 'DELETE',
     });
     const wrapper = mountWithTheme(
diff --git a/yarn.lock b/yarn.lock
index b1f4e34d87..6ae0dc58a1 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -10635,12 +10635,7 @@ prettier-linter-helpers@^1.0.0:
   dependencies:
     fast-diff "^1.1.2"
 
-prettier@1.16.4:
-  version "1.16.4"
-  resolved "https://registry.yarnpkg.com/prettier/-/prettier-1.16.4.tgz#73e37e73e018ad2db9c76742e2647e21790c9717"
-  integrity sha512-ZzWuos7TI5CKUeQAtFd6Zhm2s6EpAD/ZLApIhsF9pRvRtM1RFo61dM/4MSRUA0SuLugA/zgrZD8m0BaY46Og7g==
-
-prettier@^1.14.3:
+prettier@1.19.1, prettier@^1.14.3:
   version "1.19.1"
   resolved "https://registry.yarnpkg.com/prettier/-/prettier-1.19.1.tgz#f7d7f5ff8a9cd872a7be4ca142095956a60797cb"
   integrity sha512-s7PoyDv/II1ObgQunCbB9PdLmUcBZcnWOcxDh7O0N/UwDEsHyqkW+Qh28jW+mVuCdx7gLB0BotYI1Y6uI9iyew==
