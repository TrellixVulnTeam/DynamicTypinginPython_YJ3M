commit 57cc36cee71f3e54ff82658f5e716150accea72f
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Mon May 7 15:11:37 2018 -0700

    feat: Add basic Integration class to manage behavior after install

diff --git a/src/sentry/integrations/base.py b/src/sentry/integrations/base.py
index b29ed59a88..10743b52d4 100644
--- a/src/sentry/integrations/base.py
+++ b/src/sentry/integrations/base.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-__all__ = ['IntegrationProvider', 'IntegrationMetadata']
+__all__ = ['Integration', 'IntegrationProvider', 'IntegrationMetadata']
 
 import logging
 from collections import namedtuple
@@ -20,7 +20,7 @@ IntegrationMetadata = namedtuple('IntegrationMetadata', [
 
 class IntegrationProvider(PipelineProvider):
     """
-    An integration describes a third party that can be registered within Sentry.
+    An integration provider describes a third party that can be registered within Sentry.
 
     The core behavior is simply how to add the integration (the setup
     pipeline), which will likely use a nested pipeline for identity
@@ -42,6 +42,9 @@ class IntegrationProvider(PipelineProvider):
     # configuration interface of the integration.
     metadata = None
 
+    # an Integration class that will manage the functionality once installed
+    integration_cls = None
+
     # configuration for the setup dialog
     setup_dialog_config = {
         'width': 600,
@@ -51,6 +54,13 @@ class IntegrationProvider(PipelineProvider):
     # whether or not the integration installation be initiated from Sentry
     can_add = True
 
+    @classmethod
+    def get_integration(cls, model, **kwargs):
+        if cls.integration_cls is None:
+            raise NotImplementedError
+
+        return cls.integration_cls(model, **kwargs)
+
     def get_logger(self):
         return logging.getLogger('sentry.integration.%s' % (self.key, ))
 
@@ -120,3 +130,17 @@ class IntegrationProvider(PipelineProvider):
         >>> def setup(self):
         >>>     bindings.add('repository.provider', GitHubRepositoryProvider, key='github')
         """
+
+
+class Integration(object):
+    """
+    An integration represents an installed integration and manages the
+    core functionality of the integration.
+    """
+
+    def __init__(self, model):
+        self.model = model
+
+    def get_client(self):
+        # Return the api client for a given provider
+        raise NotImplementedError
diff --git a/src/sentry/models/integration.py b/src/sentry/models/integration.py
index 13090ddea6..99fabccf74 100644
--- a/src/sentry/models/integration.py
+++ b/src/sentry/models/integration.py
@@ -63,6 +63,9 @@ class Integration(Model):
         from sentry import integrations
         return integrations.get(self.provider)
 
+    def get_integration(self):
+        return self.get_provider().get_integration(self)
+
     def add_organization(self, organization_id, default_auth_id=None, config=None):
         """
         Add an organization to this integration.
