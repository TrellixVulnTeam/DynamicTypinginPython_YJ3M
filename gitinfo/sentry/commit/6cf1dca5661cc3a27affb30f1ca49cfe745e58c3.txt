commit 6cf1dca5661cc3a27affb30f1ca49cfe745e58c3
Author: ted kaemming <ted@kaemming.com>
Date:   Tue Dec 12 14:23:18 2017 -0800

    feat(ingest): Measure event reporting latency (#6743)

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 34246533a6..f40aeb814d 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -504,7 +504,8 @@ class EventManager(object):
         else:
             transaction_name = culprit
 
-        date = datetime.fromtimestamp(data.pop('timestamp'))
+        recorded_timestamp = data.pop('timestamp')
+        date = datetime.fromtimestamp(recorded_timestamp)
         date = date.replace(tzinfo=timezone.utc)
 
         kwargs = {
@@ -636,6 +637,7 @@ class EventManager(object):
         event.message = message
         kwargs['message'] = message
 
+        received_timestamp = event.data.get('received') or float(event.datetime.strftime('%s'))
         group_kwargs = kwargs.copy()
         group_kwargs.update(
             {
@@ -646,8 +648,7 @@ class EventManager(object):
                 'first_seen': date,
                 'active_at': date,
                 'data': {
-                    'last_received':
-                    event.data.get('received') or float(event.datetime.strftime('%s')),
+                    'last_received': received_timestamp,
                     'type':
                     event_type.key,
                     # we cache the events metadata on the group to ensure its
@@ -851,6 +852,14 @@ class EventManager(object):
         if is_regression and not raw:
             regression_signal.send_robust(sender=Group, instance=group)
 
+        metrics.timing(
+            'events.latency',
+            received_timestamp - recorded_timestamp,
+            tags={
+                'project_id': project.id,
+            },
+        )
+
         return event
 
     def _get_event_user(self, project, data):
