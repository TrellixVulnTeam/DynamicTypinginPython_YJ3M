commit 907e6d1c0e65decab4d948da50aefda9f78fd2d2
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 17 16:25:19 2011 -0800

    Refactor JS code into common namespace. Added initial support for HTML5 (webkit) notifications.

diff --git a/sentry/media/scripts/global.js b/sentry/media/scripts/global.js
index 6e14cdeb12..01f6b6e603 100644
--- a/sentry/media/scripts/global.js
+++ b/sentry/media/scripts/global.js
@@ -1,5 +1,3 @@
-sentryRealtime = true;
-
 function getElementsByClassName(oElm, strTagName, strClassName){
     // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
     var arrElements = (strTagName == "*" && document.all)? document.all :
@@ -14,7 +12,7 @@ function getElementsByClassName(oElm, strTagName, strClassName){
             arrReturnElements.push(oElement);
         }
     }
-    return (arrReturnElements)
+    return (arrReturnElements);
 }
 function hideAll(elems) {
   for (var e = 0; e < elems.length; e++) {
@@ -65,108 +63,199 @@ function getQueryParams()
 }
 
 $.fn.setAllToMaxHeight = function(){
-    return this.height( Math.max.apply(this, $.map( this , function(e){ return $(e).height() }) ) );
-}
+    return this.height( Math.max.apply(this, $.map( this , function(e){ return $(e).height(); }) ) );
+};
+
+var Sentry = {};
+(function(){
+    Sentry.options = {
+        mediaUrl: '/media/',
+        apiUrl: '/api/',
+        defaultImage: '/media/images/sentry.png'
+    };
 
-function sentryResolve(gid, remove){
-    if (remove === undefined) var remove = true;
-    $.ajax({
-        url: SENTRY_JS_API_URL,
-        type: 'post',
-        dataType: 'json',
-        data: {
-            op: 'resolve',
-            gid: gid,
-        },
-        success: function(groups){
-            for (var i=groups.length-1, el, row; (el=groups[i]); i--) {
-                var id = el[0];
-                var data = el[1];
-                $('#group_' + id).remove();
-                if (!remove) {
-                    $('#message_list').prepend(data.html);
-                    $('#group_' + id).addClass('fresh');
+    Sentry.config = function(data){
+        $.each(data, function(k, v){
+            Sentry.options[k] = v;
+        });
+    };
+    
+    Sentry.stream = {};
+    Sentry.stream.resolve = function(gid, remove){
+        if (typeof(remove) == 'undefined') {
+            remove = true;
+        } 
+        $.ajax({
+            url: SENTRY_JS_API_URL,
+            type: 'post',
+            dataType: 'json',
+            data: {
+                op: 'resolve',
+                gid: gid
+            },
+            success: function(groups){
+                for (var i=groups.length-1, el, row; (el=groups[i]); i--) {
+                    var id = el[0];
+                    var data = el[1];
+                    $('#group_' + id).remove();
+                    if (!remove) {
+                        $('#message_list').prepend(data.html);
+                        $('#group_' + id).addClass('fresh');
+                    }
                 }
             }
+        });
+    };
+    
+    Sentry.realtime = {};
+    Sentry.realtime.status = false;
+
+    Sentry.realtime.enable = function(){
+        $('#sentry_realtime').removeClass('realtime-play');
+        $('#sentry_realtime').addClass('realtime-pause');
+        $('#sentry_realtime').text('Pause Feed');
+        Sentry.realtime.status = true;
+    };
+
+    Sentry.realtime.disable = function(){
+        $('#sentry_realtime').addClass('realtime-play');
+        $('#sentry_realtime').removeClass('realtime-pause');
+        $('#sentry_realtime').text('Go Live');
+        Sentry.realtime.status = false;
+    };
+    
+    Sentry.realtime.refresh = function(){
+        data = getQueryParams();
+        data.op = 'poll';
+        if (!Sentry.realtime.status) {
+            return;
         }
-    });
-}
-function sentryRefresh(){
-    data = getQueryParams();
-    data.op = 'poll';
-    if (!sentryRealtime) {
-        return;
-    }
-    $.ajax({
-      url: SENTRY_JS_API_URL,
-      type: 'get',
-      dataType: 'json',
-      data: data,
-      success: function(groups){
-          if (groups.length) {
-              $('#no_messages').remove();
-          }
-          for (var i=groups.length-1, el, row; (el=groups[i]); i--) {
-              var id = el[0];
-              var data = el[1];
-              if ((row = $('#group_' + id))) {
-                  row.remove();
-                  $('#message_list').prepend(data.html);
-                  if (row.attr('data-sentry-count') != data.count) {
-                      $('#group_' + id).addClass('fresh');
-                  }
-              } else {
-                  $('#message_list').prepend(data.html);
-                  $('#group_' + id).addClass('fresh');
-              }
-          }
-          $('#message_list .fresh').css('background-color', '#ccc').animate({backgroundColor: '#fff'}, 1200, function() { 
-                $(this).removeClass('fresh');
-          });
-          // make sure we limit the number shown
-          var count = 0;
-          $('#message_list li').each(function(){
-              count++;
-              if (count > 50) {
-                  $(this).remove();
-              }
-          });
-          setTimeout(sentryRefresh, 3000);
-      }
-    });
-}
-$(document).ready(function(){
-    $('#sentry_realtime').click(function(){
-        if ($(this).hasClass('realtime-play')) {
-            $(this).removeClass('realtime-play');
-            $(this).addClass('realtime-pause');
-            $(this).text('Pause Feed');
-            sentryRealtime = true;
+        $.ajax({
+            url: Sentry.options.apiUrl,
+            type: 'get',
+            dataType: 'json',
+            data: data,
+            success: function(groups){
+                if (groups.length) {
+                    $('#no_messages').remove();
+                }
+                for (var i=groups.length-1, el, row; (el=groups[i]); i--) {
+                    var id = el[0];
+                    var data = el[1];
+                    if ((row = $('#group_' + id))) {
+                        row.remove();
+                        $('#message_list').prepend(data.html);
+                        if (row.attr('data-sentry-count') != data.count) {
+                            $('#group_' + id).addClass('fresh');
+                            var url = Sentry.options.apiUrl + '?' + $.param({
+                                op: 'notification',
+                                count: data.count,
+                                title: data.title,
+                                message: data.message,
+                                level: data.level,
+                                logger: data.logger
+                            });
+                        }
+                    } else {
+                        $('#message_list').prepend(data.html);
+                        $('#group_' + id).addClass('fresh');
+                        Sentry.notifications.show({'type': 'html', 'url': url});
+                    }
+                }
+                $('#message_list .fresh').css('background-color', '#ccc').animate({backgroundColor: '#fff'}, 1200, function() { 
+                    $(this).removeClass('fresh');
+                });
+                // make sure we limit the number shown
+                var count = 0;
+                $('#message_list li').each(function(){
+                    count++;
+                    if (count > 50) {
+                        $(this).remove();
+                    }
+                });
+                setTimeout(Sentry.realtime.refresh, 3000);
+            }
+        });
+    };
+    
+    Sentry.notifications = {};
+    Sentry.notifications.status = false;
+
+    Sentry.notifications.enable = function(){
+        // if (window.webkitNotifications.checkPermission()) {
+        //     Sentry.notifications.status = true;
+        //     $('#sentry_notify').text('Disable Notifications');
+        // } else {
+        window.webkitNotifications.requestPermission(function(){
+            Sentry.notifications.status = true;
+            Sentry.notifications.show({'type': 'simple', 'title': 'Sentry', 'body': 'Notifications have been enabled.'});
+            $('#sentry_notify').text('Disable Notifications');
+        });
+        // }
+    };
+
+    Sentry.notifications.disable = function(){
+        Sentry.notifications.status = false;
+        $('#sentry_notify').text('Enable Notifications');
+    };
+
+    Sentry.notifications.show = function(options){
+        if (!Sentry.notifications.status) return;
+
+        var note;
+
+        if (options.type == 'html') {
+            note = window.webkitNotifications.createHTMLNotification(options.url);
         } else {
-            $(this).addClass('realtime-play');
-            $(this).removeClass('realtime-pause');
-            $(this).text('Go Live');
-            sentryRealtime = false;
+            note = window.webkitNotifications.createNotification(options.image || Sentry.options.defaultImage, options.title, options.body);
         }
-    });
-    $('#sidebar .filter-list').each(function(_, el){
-        var el = $(el);
-        if (el.find('li').length > 6) {
-            // rebuild this widget as a dropdown select
-            var select = $('<select></select>');
-            var parent = $('<div class="filter-select sidebar-module">').appendTo(el.parent());
+        note.ondisplay = function() { 
+            setTimeout(function(){ note.cancel(); }, 10000);
+        };
+        note.show();
+    };
+    
+    $(document).ready(function(){
+        $('#sentry_realtime').click(function(){
+            if (Sentry.realtime.status) {
+                Sentry.realtime.disable();
+            } else {
+                Sentry.realtime.enable();
+            }
+        });
 
-            el.find('li a').each(function(_, a){
-                a = $(a);
-                var opt = $('<option value="' + a.attr('href') + '">' + a.text() + '</option>').appendTo(select);
-                if (a.parent().hasClass('active')) {
-                    opt.attr('selected', 'selected');
+        setTimeout(Sentry.realtime.refresh, 3000);
+    
+        if (window.webkitNotifications){
+            Sentry.notifications.status = (window.webkitNotifications.checkPermission() > 0);
+            $('<li><a id="sentry_notify" href="javascript:void()">' + (Sentry.notifications.status ? 'Disable Notifications' : 'Enable Notifications') + '</a></li>').click(function(){
+                if (Sentry.notifications.status) {
+                    Sentry.notifications.disable();
+                } else {
+                    Sentry.notifications.enable();
                 }
-            });
-            el.remove();
-            select.appendTo(parent).change(function(){
-                window.location.href = $(this).val();
-            });
-       }
+            }).prependTo('#account');
+        }
+    
+        $('#sidebar .filter-list').each(function(_, el){
+            var el = $(el);
+            if (el.find('li').length > 6) {
+                // rebuild this widget as a dropdown select
+                var select = $('<select></select>');
+                var parent = $('<div class="filter-select sidebar-module">').appendTo(el.parent());
+
+                el.find('li a').each(function(_, a){
+                    a = $(a);
+                    var opt = $('<option value="' + a.attr('href') + '">' + a.text() + '</option>').appendTo(select);
+                    if (a.parent().hasClass('active')) {
+                        opt.attr('selected', 'selected');
+                    }
+                });
+                el.remove();
+                select.appendTo(parent).change(function(){
+                    window.location.href = $(this).val();
+                });
+            }
+        });
     });
-});
\ No newline at end of file
+}());
diff --git a/sentry/templates/sentry/index.html b/sentry/templates/sentry/index.html
index ff506b3988..9cae1b2ae9 100644
--- a/sentry/templates/sentry/index.html
+++ b/sentry/templates/sentry/index.html
@@ -6,17 +6,24 @@
     <head> 
         <meta http-equiv="content-type" content="text/html; charset=utf-8"> 
         <meta name="robots" content="NONE,NOARCHIVE">
-        <link href='http{% if request.is_secure %}s{% endif %}://fonts.googleapis.com/css?family=Yanone+Kaffeesatz:light,regular&amp;subset=latin' rel='stylesheet' type='text/css'>
-        <link rel="shortcut icon" href="{% url sentry-media "images/sentry.png" %}"/>
+        <link href="http{% if request.is_secure %}s{% endif %}://fonts.googleapis.com/css?family=Yanone+Kaffeesatz:light,regular&amp;subset=latin" rel="stylesheet" type="text/css">
+        <link href="{% url sentry-media "styles/global.css" %}" rel="stylesheet" type="text/css"/>
+        <link href="{% url sentry-media "images/sentry.png" %}" rel="shortcut icon"/>
         <title>{% block title %}Sentry{% endblock %}</title> 
-        <script type="text/javascript">
-        SENTRY_JS_API_URL = '{% url sentry-ajax %}';
-        </script>
         <script type="text/javascript" src="http{% if request.is_secure %}s{% endif %}://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
         <script type="text/javascript" src="{% url sentry-media "scripts/highcharts.js" %}" ></script>
         <script type="text/javascript" src="{% url sentry-media "scripts/jquery.animate-colors-min.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "scripts/global.js" %}"></script>
-        <style type="text/css">@import '{% url sentry-media "styles/global.css" %}';</style>
+        <script type="text/javascript">
+        Sentry.config({
+            mediaUrl: '{% url sentry-media '' %}',
+            apiUrl: '{% url sentry-ajax %}',
+            defaultImage: '{% url sentry-media 'images/sentry.png' %}'
+        });
+        {% if has_realtime %}
+        Sentry.realtime.enable();
+        {% endif %}
+        </script>
     </head> 
     
     <body> 
@@ -105,13 +112,4 @@
         </div> 
         {% endblock %}
     </body>
-    {% if has_realtime %}
-    <script type="text/javascript">
-    sentryRealtime = true;
-    $(document).ready(function(){
-        //$("div.column").setAllToMaxHeight();
-        setTimeout(sentryRefresh, 3000);
-    });
-    </script>
-    {% endif %}
 </html>
diff --git a/sentry/templates/sentry/partial/_group.html b/sentry/templates/sentry/partial/_group.html
index f5da1380ca..e2d8851754 100644
--- a/sentry/templates/sentry/partial/_group.html
+++ b/sentry/templates/sentry/partial/_group.html
@@ -18,6 +18,6 @@
     </p>
     <a href="{% url sentry-group group.pk %}" class="row_link"></a>
     {% if group.status == 0 %}
-        <a href="{% url sentry-ajax %}?op=resolve&amp;gid={{ group.pk }}" onclick="sentryResolve({{ group.pk }});return false;" class="button resolve_button hidden">&#10003;</a>
+        <a href="{% url sentry-ajax %}?op=resolve&amp;gid={{ group.pk }}" onclick="Sentry.stream.resolve({{ group.pk }});return false;" class="button resolve_button hidden">&#10003;</a>
     {% endif %}
 </li>
diff --git a/sentry/templates/sentry/partial/_notification.html b/sentry/templates/sentry/partial/_notification.html
new file mode 100644
index 0000000000..c05e380122
--- /dev/null
+++ b/sentry/templates/sentry/partial/_notification.html
@@ -0,0 +1,35 @@
+<doctype html>
+<html>
+    <head>
+        <meta http-equiv="content-type" content="text/html; charset=utf-8"> 
+        <meta name="robots" content="NONE,NOARCHIVE">
+        <link href="{% url sentry-media "images/sentry.png" %}" rel="shortcut icon"/>
+        <style type="text/css">
+        html * { padding:0; margin:0; }
+        body * * { padding:0; }
+        body {
+            font: 0.7em "Lucida Grande", "Lucida Sans", verdana, sans-serif;
+        }
+        body { padding: 5px; background: #fff; }
+        h1 { font-size: 1.1em; font-weight: bold; line-height: 1.2em; margin-bottom: 5px; }
+        .count { font-size: 0.8em; background: #000; -moz-border-radius: 5px; -webkit-border-radius: 5px; border-radius: 5px; padding: 0 5px; margin-right: 3px; line-height: 19px; color: #fff; display: inline-block; }
+        .message { margin-bottom: 10px; }
+        .tags span {
+            color: #666;
+            background: #eaeaea;
+            display: inline-block;
+            margin-right: 5px;
+            padding: 2px 5px;
+        }
+        </style>
+    </head>
+    <body>
+        <div id="notify-header">
+            <h1><span class="count">{{ count }}</span> {{ title }}</h1>
+        </div>
+        <div id="notify-content">
+            <p class="message">{{ message }}</p>
+            <div class="tags"><span>{{ level }}</span> <span>{{ logger }}</span></p>
+        </div>
+    </body>
+</html>
\ No newline at end of file
diff --git a/sentry/views.py b/sentry/views.py
index 86d6e2c412..b23781768d 100644
--- a/sentry/views.py
+++ b/sentry/views.py
@@ -165,7 +165,9 @@ def index(request):
 def ajax_handler(request):
     op = request.REQUEST.get('op')
 
-    if op == 'poll':
+    if op == 'notification':
+        return render_to_response('sentry/partial/_notification.html', request.GET)
+    elif op == 'poll':
         filters = []
         for filter_ in get_filters():
             filters.append(filter_(request))
@@ -211,6 +213,10 @@ def ajax_handler(request):
                     'priority': p,
                     'request': request,
                 }),
+                'title': m.view or m.message_top(),
+                'message': m.error(),
+                'level': m.get_level_display(),
+                'logger': m.logger,
                 'count': m.times_seen,
                 'priority': p,
             }) for m, p in with_priority(message_list[0:15])]
