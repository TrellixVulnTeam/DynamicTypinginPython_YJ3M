commit c7d19420bc821533ed66b18836b61971338fe3ba
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Jun 26 09:09:58 2018 -0700

    fix(settings): Better settings permissions (#8773)
    
    * Links to Project Settings are only enabled for `project:write` perms
    * Links to Team details (w/ Members/Projects/Settings) enabled for *everyone*
      * Team Settings enabled only for `team:write`
    * Members Details enabled only for `org:write`
    * always allow project settings link
    * add OrganizationMemberDetails test

diff --git a/src/sentry/static/sentry/app/data/forms/teamSettingsFields.jsx b/src/sentry/static/sentry/app/data/forms/teamSettingsFields.jsx
index 1215d2b007..42f33dc83b 100644
--- a/src/sentry/static/sentry/app/data/forms/teamSettingsFields.jsx
+++ b/src/sentry/static/sentry/app/data/forms/teamSettingsFields.jsx
@@ -17,6 +17,7 @@ const formGroups = [
         label: t('Name'),
         placeholder: 'e.g. api-team',
         help: t('A unique ID used to identify the team'),
+        disabled: ({access}) => !access.has('team:write'),
 
         saveOnBlur: false,
         saveMessageAlertType: 'info',
@@ -28,6 +29,7 @@ const formGroups = [
         required: true,
         label: t('Legacy Name'),
         placeholder: 'e.g. API Team',
+        disabled: ({access}) => !access.has('team:write'),
         help: tct(
           '[Deprecated] In the future, only [Name] will be used to identify your team',
           {
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
index a0955218e3..1c6fb764b8 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
@@ -1,8 +1,6 @@
 import styled from 'react-emotion';
 import React from 'react';
-
 import createReactClass from 'create-react-class';
-import theme from 'app/utils/theme';
 
 import {update} from 'app/actionCreators/projects';
 import ApiMixin from 'app/mixins/apiMixin';
@@ -19,10 +17,6 @@ const InlineButton = styled('button')`
   padding: 0;
 `;
 
-const StyledProjectLabel = styled(ProjectLabel)`
-  color: ${p => p.theme.blue};
-`;
-
 const ProjectItem = createReactClass({
   displayName: 'ProjectItem',
 
@@ -66,7 +60,6 @@ const ProjectItem = createReactClass({
 
   render() {
     let {project, organization} = this.props;
-    let org = organization;
     let {isBookmarked} = this.state;
 
     return (
@@ -80,8 +73,8 @@ const ProjectItem = createReactClass({
             )}
           </InlineButton>
         </Tooltip>
-        <Link to={`/settings/${org.slug}/${project.slug}/`} css={{color: theme.gray3}}>
-          <StyledProjectLabel project={project} organization={this.props.organization} />
+        <Link to={`/settings/${organization.slug}/${project.slug}/`}>
+          <ProjectLabel project={project} organization={organization} />
         </Link>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/teamSelect.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/teamSelect.jsx
index 3aed59de30..f29358e66b 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/teamSelect.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/teamSelect.jsx
@@ -33,7 +33,7 @@ class TeamSelect extends React.Component {
           <PanelItem css={{flexWrap: 'wrap'}}>
             {teams.map(team => (
               <TeamItem key={team.slug}>
-                <label className="checkbox">
+                <label disabled={disabled} className="checkbox">
                   <Checkbox
                     id={team.slug}
                     disabled={disabled}
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberDetail.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberDetail.jsx
index e3f11c6e6a..24bdd35aa9 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberDetail.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberDetail.jsx
@@ -5,7 +5,6 @@ import {resendMemberInvite, updateMember} from 'app/actionCreators/members';
 import {t} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/buttons/button';
-import ConfigStore from 'app/stores/configStore';
 import DateTime from 'app/components/dateTime';
 import IndicatorStore from 'app/stores/indicatorStore';
 import NotFound from 'app/components/errors/notFound';
@@ -121,16 +120,13 @@ class OrganizationMemberDetail extends AsyncView {
 
   renderBody() {
     let {error, member} = this.state;
-    let {teams} = this.getOrganization();
+    let {teams, access} = this.getOrganization();
 
     if (!member) return <NotFound />;
 
     let email = member.email;
     let inviteLink = member.invite_link;
-
-    let currentUser = ConfigStore.get('user');
-    let isCurrentUser = currentUser.email === email;
-    let roleSelectDisabled = isCurrentUser;
+    let canEdit = access.includes('org:write');
 
     return (
       <div>
@@ -216,7 +212,7 @@ class OrganizationMemberDetail extends AsyncView {
 
         <RoleSelect
           enforceAllowed={false}
-          disabled={roleSelectDisabled}
+          disabled={!canEdit}
           roleList={member.roles}
           selectedRole={member.role}
           setRole={slug => this.setState({member: {...member, role: slug}})}
@@ -226,6 +222,7 @@ class OrganizationMemberDetail extends AsyncView {
           teams={teams}
           selectedTeams={new Set(member.teams)}
           toggleTeam={this.handleToggleTeam}
+          disabled={!canEdit}
         />
 
         <Button
@@ -233,6 +230,7 @@ class OrganizationMemberDetail extends AsyncView {
           busy={this.state.busy}
           className="invite-member-submit"
           onClick={this.handleSave}
+          disabled={!canEdit}
         >
           {t('Save Member')}
         </Button>
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
index 41687f9cb4..83bd3b5f4e 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
@@ -117,10 +117,11 @@ const AllTeamsRow = createReactClass({
     let {access, team, urlPrefix, openMembership, organization} = this.props;
     let features = new Set(organization.features);
     let display = features.has('new-teams') ? <IdBadge team={team} /> : team.name;
+
     return (
       <PanelItem p={0} align="center">
         <Box flex="1" p={2}>
-          {access.has('team:write') ? (
+          {access.has('team:read') ? (
             <Link to={`${urlPrefix}teams/${team.slug}/`}>{display}</Link>
           ) : (
             display
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamSettings/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamSettings/index.jsx
index 04a4d00bcf..4848385c52 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamSettings/index.jsx
@@ -7,7 +7,6 @@ import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import {removeTeam, updateTeamSuccess} from 'app/actionCreators/teams';
 import {t, tct} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
-import AvatarChooser from 'app/components/avatarChooser';
 import Button from 'app/components/buttons/button';
 import Confirm from 'app/components/confirm';
 import Field from 'app/views/settings/components/forms/field';
@@ -84,44 +83,38 @@ export default class TeamSettings extends AsyncView {
           }}
         >
           <Box>
-            <JsonForm location={location} forms={teamSettingsFields} />
+            <JsonForm access={access} location={location} forms={teamSettingsFields} />
           </Box>
         </Form>
 
-        {organization.features.includes('internal-catchall') && (
-          <AvatarChooser
-            type="team"
-            allowGravatar={false}
-            endpoint={`/teams/${organization.slug}/${team.slug}/avatar/`}
-            model={team}
-            onSave={this.handleSubmitSuccess}
-          />
-        )}
-
-        {access.has('team:admin') && (
-          <Panel>
-            <PanelHeader>{t('Remove Team')}</PanelHeader>
-            <Field
-              help={t(
-                "This may affect team members' access to projects and associated alert delivery."
-              )}
-            >
-              <div>
-                <Confirm
-                  onConfirm={this.handleRemoveTeam}
+        <Panel>
+          <PanelHeader>{t('Remove Team')}</PanelHeader>
+          <Field
+            help={t(
+              "This may affect team members' access to projects and associated alert delivery."
+            )}
+          >
+            <div>
+              <Confirm
+                disabled={!access.has('team:admin')}
+                onConfirm={this.handleRemoveTeam}
+                priority="danger"
+                message={tct('Are you sure you want to remove the team [team]?', {
+                  team: `#${team.slug}`,
+                })}
+              >
+                <Button
+                  icon="icon-trash"
                   priority="danger"
-                  message={tct('Are you sure you want to remove the team [team]?', {
-                    team: `#${team.slug}`,
-                  })}
+                  title={t('Remove Team')}
+                  disabled={!access.has('team:admin')}
                 >
-                  <Button icon="icon-trash" priority="danger" title={t('Remove Team')}>
-                    {t('Remove Team')}
-                  </Button>
-                </Confirm>
-              </div>
-            </Field>
-          </Panel>
-        )}
+                  {t('Remove Team')}
+                </Button>
+              </Confirm>
+            </div>
+          </Field>
+        </Panel>
       </React.Fragment>
     );
   }
diff --git a/tests/js/fixtures/roleList.js b/tests/js/fixtures/roleList.js
new file mode 100644
index 0000000000..b796140541
--- /dev/null
+++ b/tests/js/fixtures/roleList.js
@@ -0,0 +1,100 @@
+export default function RoleList(params = [], fullAccess = false) {
+  return [
+    {
+      scopes: [
+        'event:read',
+        'event:write',
+        'project:read',
+        'project:releases',
+        'org:read',
+        'event:admin',
+        'member:read',
+        'team:read',
+      ],
+      is_global: false,
+      name: 'Member',
+      allowed: true,
+      id: 'member',
+      desc:
+        'Members can view and act on events, as well as view most other data within the organization.',
+    },
+    {
+      scopes: [
+        'event:read',
+        'event:write',
+        'team:admin',
+        'project:read',
+        'project:releases',
+        'org:read',
+        'event:admin',
+        'member:read',
+        'project:write',
+        'project:integrationsteam:read',
+        'project:admin',
+        'team:write',
+        'org:integrations',
+      ],
+      is_global: false,
+      name: 'Admin',
+      allowed: fullAccess,
+      id: 'admin',
+      desc:
+        "Admin privileges on any teams of which they're a member. They can create new teams and projects, as well as remove teams and projects which they already hold membership on.",
+    },
+    {
+      scopes: [
+        'event:read',
+        'event:write',
+        'team:admin',
+        'member:write',
+        'member:admin',
+        'org:write',
+        'event:admin',
+        'project:write',
+        'project:integrations',
+        'project:admin',
+        'team:read',
+        'org:integrations',
+        'project:read',
+        'project:releases',
+        'org:read',
+        'member:read',
+        'team:write',
+      ],
+      is_global: true,
+      name: 'Manager',
+      allowed: fullAccess,
+      id: 'manager',
+      desc:
+        'Gains admin access on all teams as well as the ability to add and remove members.',
+    },
+    {
+      scopes: [
+        'org:write',
+        'member:write',
+        'team:admin',
+        'member:admin',
+        'event:admin',
+        'project:write',
+        'org:admin',
+        'project:admin',
+        'event:write',
+        'team:read',
+        'project:read',
+        'project:releases',
+        'org:read',
+        'member:read',
+        'org:integrations',
+        'event:read',
+        'team:write',
+      ],
+      is_global: true,
+      name: 'Owner',
+      allowed: fullAccess,
+      id: 'owner',
+      desc:
+        'Gains full permission across the organization. Can manage members as well as perform catastrophic operations such as removing the organization.',
+    },
+    ...params,
+  ];
+}
diff --git a/tests/js/setup.js b/tests/js/setup.js
index a98471fc3f..be2897188c 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -9,6 +9,8 @@ import PropTypes from 'prop-types';
 import ConfigStore from 'app/stores/configStore';
 import theme from 'app/utils/theme';
 
+import RoleList from './fixtures/roleList';
+
 jest.mock('lodash/debounce', () => jest.fn(fn => fn));
 jest.mock('app/utils/recreateRoute');
 jest.mock('app/translations');
@@ -579,6 +581,7 @@ window.TestStubs = {
     user: TestStubs.User(),
     ...params,
   }),
+
   Members: () => [
     TestStubs.Member(),
     {
@@ -868,6 +871,8 @@ window.TestStubs = {
     };
   },
 
+  RoleList,
+
   Searches: params => [
     {
       name: 'Needs Triage',
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index 4386ce8e52..f816af1605 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -320,21 +320,18 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                             </InlineButton>
                           </Tooltip>
                           <Link
-                            className="css-5kvhca"
                             to="/settings/org-slug/project-slug/"
                           >
                             <Link
-                              className="css-5kvhca"
                               onlyActiveOnIndex={false}
                               style={Object {}}
                               to="/settings/org-slug/project-slug/"
                             >
                               <a
-                                className="css-5kvhca"
                                 onClick={[Function]}
                                 style={Object {}}
                               >
-                                <StyledProjectLabel
+                                <ProjectLabel
                                   organization={
                                     Object {
                                       "access": Array [
@@ -380,8 +377,8 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                     }
                                   }
                                 >
-                                  <ProjectLabel
-                                    className="css-ngf4wp-StyledProjectLabel enngb6z1"
+                                  <span
+                                    className="project-label"
                                     organization={
                                       Object {
                                         "access": Array [
@@ -428,60 +425,12 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                     }
                                   >
                                     <span
-                                      className="css-ngf4wp-StyledProjectLabel enngb6z1"
-                                      organization={
-                                        Object {
-                                          "access": Array [
-                                            "org:read",
-                                            "org:write",
-                                            "org:admin",
-                                            "project:read",
-                                            "project:write",
-                                            "project:admin",
-                                            "team:read",
-                                            "team:write",
-                                            "team:admin",
-                                          ],
-                                          "features": Array [],
-                                          "id": "3",
-                                          "name": "Organization Name",
-                                          "onboardingTasks": Array [],
-                                          "projects": Array [],
-                                          "slug": "org-slug",
-                                          "status": Object {
-                                            "id": "active",
-                                            "name": "active",
-                                          },
-                                          "teams": Array [],
-                                        }
-                                      }
-                                      project={
-                                        Object {
-                                          "hasAccess": true,
-                                          "id": "2",
-                                          "isBookmarked": false,
-                                          "isMember": true,
-                                          "name": "Project Name",
-                                          "slug": "project-slug",
-                                          "teams": Array [
-                                            Object {
-                                              "id": "1",
-                                              "isMember": true,
-                                              "name": "Team Name",
-                                              "slug": "team-slug",
-                                            },
-                                          ],
-                                        }
-                                      }
+                                      className="project-name"
                                     >
-                                      <span
-                                        className="project-name"
-                                      >
-                                        Project Name
-                                      </span>
+                                      Project Name
                                     </span>
-                                  </ProjectLabel>
-                                </StyledProjectLabel>
+                                  </span>
+                                </ProjectLabel>
                               </a>
                             </Link>
                           </Link>
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
index 00b566f124..e69f8e8619 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
@@ -358,21 +358,18 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                       </InlineButton>
                                     </Tooltip>
                                     <Link
-                                      className="css-5kvhca"
                                       to="/settings/org-slug/project-slug/"
                                     >
                                       <Link
-                                        className="css-5kvhca"
                                         onlyActiveOnIndex={false}
                                         style={Object {}}
                                         to="/settings/org-slug/project-slug/"
                                       >
                                         <a
-                                          className="css-5kvhca"
                                           onClick={[Function]}
                                           style={Object {}}
                                         >
-                                          <StyledProjectLabel
+                                          <ProjectLabel
                                             organization={
                                               Object {
                                                 "access": Array [
@@ -411,8 +408,8 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                               }
                                             }
                                           >
-                                            <ProjectLabel
-                                              className="css-ngf4wp-StyledProjectLabel enngb6z1"
+                                            <span
+                                              className="project-label"
                                               organization={
                                                 Object {
                                                   "access": Array [
@@ -452,53 +449,12 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                               }
                                             >
                                               <span
-                                                className="css-ngf4wp-StyledProjectLabel enngb6z1"
-                                                organization={
-                                                  Object {
-                                                    "access": Array [
-                                                      "org:read",
-                                                      "org:write",
-                                                      "org:admin",
-                                                      "project:read",
-                                                      "project:write",
-                                                      "project:admin",
-                                                      "team:read",
-                                                      "team:write",
-                                                      "team:admin",
-                                                    ],
-                                                    "features": Array [],
-                                                    "id": "3",
-                                                    "name": "Organization Name",
-                                                    "onboardingTasks": Array [],
-                                                    "projects": Array [],
-                                                    "slug": "org-slug",
-                                                    "status": Object {
-                                                      "id": "active",
-                                                      "name": "active",
-                                                    },
-                                                    "teams": Array [],
-                                                  }
-                                                }
-                                                project={
-                                                  Object {
-                                                    "hasAccess": true,
-                                                    "id": "2",
-                                                    "isBookmarked": false,
-                                                    "isMember": true,
-                                                    "name": "Project Name",
-                                                    "slug": "project-slug",
-                                                    "teams": Array [],
-                                                  }
-                                                }
+                                                className="project-name"
                                               >
-                                                <span
-                                                  className="project-name"
-                                                >
-                                                  Project Name
-                                                </span>
+                                                Project Name
                                               </span>
-                                            </ProjectLabel>
-                                          </StyledProjectLabel>
+                                            </span>
+                                          </ProjectLabel>
                                         </a>
                                       </Link>
                                     </Link>
diff --git a/tests/js/spec/views/settings/organizationMembersView.spec.jsx b/tests/js/spec/views/settings/organizationMembers/index.spec.jsx
similarity index 100%
rename from tests/js/spec/views/settings/organizationMembersView.spec.jsx
rename to tests/js/spec/views/settings/organizationMembers/index.spec.jsx
diff --git a/tests/js/spec/views/settings/organizationMembers/organizationMemberDetail.spec.jsx b/tests/js/spec/views/settings/organizationMembers/organizationMemberDetail.spec.jsx
new file mode 100644
index 0000000000..0d94aed170
--- /dev/null
+++ b/tests/js/spec/views/settings/organizationMembers/organizationMemberDetail.spec.jsx
@@ -0,0 +1,143 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import {updateMember} from 'app/actionCreators/members';
+import OrganizationMemberDetail from 'app/views/settings/organizationMembers/organizationMemberDetail';
+
+jest.mock('app/actionCreators/members', () => ({
+  updateMember: jest.fn().mockReturnValue(new Promise(() => {})),
+}));
+
+describe('OrganizationMemberDetail', function() {
+  let organization;
+  let wrapper;
+  let routerContext;
+  let team = TestStubs.Team();
+  let teams = [
+    team,
+    TestStubs.Team({
+      id: '2',
+      slug: 'new-team',
+      name: 'New Team',
+      isMember: false,
+    }),
+  ];
+  let member = TestStubs.Member({
+    roles: TestStubs.RoleList(),
+    dateCreated: new Date(),
+    teams: [team.slug],
+  });
+
+  describe('Can Edit', function() {
+    beforeAll(function() {
+      organization = TestStubs.Organization({teams});
+      routerContext = TestStubs.routerContext([{organization}]);
+    });
+
+    beforeEach(function() {
+      MockApiClient.clearMockResponses();
+      MockApiClient.addMockResponse({
+        url: `/organizations/${organization.slug}/members/${member.id}/`,
+        body: member,
+      });
+    });
+
+    it('changes role to owner', function() {
+      wrapper = mount(
+        <OrganizationMemberDetail params={{memberId: member.id}} />,
+        routerContext
+      );
+
+      // Should have 4 roles
+      expect(wrapper.find('RoleSelect Radio')).toHaveLength(4);
+
+      wrapper
+        .find('RoleSelect Radio')
+        .last()
+        .simulate('click');
+
+      expect(
+        wrapper
+          .find('RoleSelect Radio')
+          .last()
+          .prop('checked')
+      ).toBe(true);
+
+      // Save Member
+      wrapper.find('Button[priority="primary"]').simulate('click');
+
+      expect(updateMember).toHaveBeenCalledWith(
+        expect.anything(),
+        expect.objectContaining({
+          data: expect.objectContaining({
+            role: 'owner',
+          }),
+        })
+      );
+    });
+
+    it('joins a team', function() {
+      wrapper = mount(
+        <OrganizationMemberDetail params={{memberId: member.id}} />,
+        routerContext
+      );
+
+      expect(
+        wrapper
+          .find('TeamSelect Checkbox')
+          .first()
+          .prop('checked')
+      ).toBe(true);
+      expect(
+        wrapper
+          .find('TeamSelect Checkbox')
+          .last()
+          .prop('checked')
+      ).toBe(false);
+
+      // Select new team to join
+      wrapper
+        .find('TeamSelect Checkbox')
+        .last()
+        .simulate('change');
+
+      expect(
+        wrapper
+          .find('TeamSelect Checkbox')
+          .last()
+          .prop('checked')
+      ).toBe(true);
+
+      // Save Member
+      wrapper.find('Button[priority="primary"]').simulate('click');
+
+      expect(updateMember).toHaveBeenCalledWith(
+        expect.anything(),
+        expect.objectContaining({
+          data: expect.objectContaining({
+            teams: ['team-slug', 'new-team'],
+          }),
+        })
+      );
+    });
+  });
+
+  describe('Cannot Edit', function() {
+    beforeAll(function() {
+      organization = TestStubs.Organization({teams, access: ['org:read']});
+      routerContext = TestStubs.routerContext([{organization}]);
+    });
+
+    it('can not change roles, teams, or save', function() {
+      wrapper = mount(
+        <OrganizationMemberDetail params={{memberId: member.id}} />,
+        routerContext
+      );
+
+      // Should have 4 roles
+      expect(wrapper.find('RoleSelect').prop('disabled')).toBe(true);
+      expect(wrapper.find('TeamSelect').prop('disabled')).toBe(true);
+      expect(wrapper.find('Button').prop('disabled')).toBe(true);
+    });
+  });
+});
diff --git a/tests/js/spec/views/settings/organizationMemberRow.spec.jsx b/tests/js/spec/views/settings/organizationMembers/organizationMemberRow.spec.jsx
similarity index 100%
rename from tests/js/spec/views/settings/organizationMemberRow.spec.jsx
rename to tests/js/spec/views/settings/organizationMembers/organizationMemberRow.spec.jsx
diff --git a/tests/js/spec/views/teamSettings.spec.jsx b/tests/js/spec/views/teamSettings.spec.jsx
index fef4ef4dab..09638ba00e 100644
--- a/tests/js/spec/views/teamSettings.spec.jsx
+++ b/tests/js/spec/views/teamSettings.spec.jsx
@@ -68,7 +68,7 @@ describe('TeamSettings', function() {
     expect(router.push).toHaveBeenCalledWith('/settings/org/teams/new-slug/settings/');
   });
 
-  it('needs team:admin in order to see remove team button', function() {
+  it('needs team:admin in order to see an enabled Remove Team button', function() {
     let team = TestStubs.Team();
 
     let wrapper = mount(
@@ -80,13 +80,13 @@ describe('TeamSettings', function() {
       />,
       TestStubs.routerContext([{organization: TestStubs.Organization({access: []})}])
     );
-
     expect(
       wrapper
-        .find('PanelHeader')
+        .find('Panel')
         .last()
-        .text()
-    ).not.toBe('Remove Team');
+        .find('Button')
+        .prop('disabled')
+    ).toBe(true);
   });
 
   it('can remove team', async function() {
