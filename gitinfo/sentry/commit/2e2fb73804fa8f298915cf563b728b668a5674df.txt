commit 2e2fb73804fa8f298915cf563b728b668a5674df
Author: William Mak <william@wmak.io>
Date:   Fri Mar 6 15:48:48 2020 -0500

    feat(visibility) - Adding new KeyTransaction model

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index 0351d9bf79..759a6ba276 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0053_migrate_alert_task_onboarding
+sentry: 0054_create_key_transaction
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/deletions/defaults/organization.py b/src/sentry/deletions/defaults/organization.py
index bad77b941d..7fdc7d1ec1 100644
--- a/src/sentry/deletions/defaults/organization.py
+++ b/src/sentry/deletions/defaults/organization.py
@@ -26,7 +26,7 @@ class OrganizationDeletionTask(ModelDeletionTask):
             PromptsActivity,
         )
         from sentry.incidents.models import AlertRule, Incident
-        from sentry.discover.models import DiscoverSavedQuery
+        from sentry.discover.models import DiscoverSavedQuery, KeyTransaction
 
         # Team must come first
         relations = [ModelRelation(Team, {"organization_id": instance.id})]
@@ -48,6 +48,7 @@ class OrganizationDeletionTask(ModelDeletionTask):
             ReleaseHeadCommit,
             Dashboard,
             DiscoverSavedQuery,
+            KeyTransaction,
             ExternalIssue,
             PromptsActivity,
             Incident,
diff --git a/src/sentry/deletions/defaults/project.py b/src/sentry/deletions/defaults/project.py
index 206e3baa56..787a46e3c7 100644
--- a/src/sentry/deletions/defaults/project.py
+++ b/src/sentry/deletions/defaults/project.py
@@ -6,7 +6,7 @@ from ..base import BulkModelDeletionTask, ModelDeletionTask, ModelRelation
 class ProjectDeletionTask(ModelDeletionTask):
     def get_child_relations(self, instance):
         from sentry import models
-        from sentry.discover.models import DiscoverSavedQueryProject
+        from sentry.discover.models import DiscoverSavedQueryProject, KeyTransaction
         from sentry.incidents.models import IncidentProject
         from sentry.snuba.models import QuerySubscription
 
@@ -39,6 +39,7 @@ class ProjectDeletionTask(ModelDeletionTask):
             models.ServiceHook,
             models.UserReport,
             DiscoverSavedQueryProject,
+            KeyTransaction,
             IncidentProject,
             QuerySubscription,
         )
diff --git a/src/sentry/discover/models.py b/src/sentry/discover/models.py
index a053133754..7ecfd5d799 100644
--- a/src/sentry/discover/models.py
+++ b/src/sentry/discover/models.py
@@ -5,6 +5,9 @@ from sentry.db.models.fields import JSONField
 from sentry.db.models import Model, FlexibleForeignKey, sane_repr
 
 
+MAX_KEY_TRANSACTIONS = 10
+
+
 class DiscoverSavedQueryProject(Model):
     __core__ = False
 
@@ -57,3 +60,18 @@ class DiscoverSavedQuery(Model):
                     for project_id in new_project_ids
                 ]
             )
+
+
+class KeyTransaction(Model):
+    __core__ = False
+
+    # max_length here is based on the maximum for transactions in relay
+    transaction = models.CharField(max_length=200)
+    project = FlexibleForeignKey("sentry.Project", db_constraint=False)
+    owner = FlexibleForeignKey("sentry.User", null=True, on_delete=models.SET_NULL)
+    organization = FlexibleForeignKey("sentry.Organization")
+
+    class Meta:
+        app_label = "sentry"
+        db_table = "sentry_discoverkeytransaction"
+        unique_together = (("project", "transaction"),)
diff --git a/src/sentry/migrations/0054_create_key_transaction.py b/src/sentry/migrations/0054_create_key_transaction.py
new file mode 100644
index 0000000000..8b8fa91395
--- /dev/null
+++ b/src/sentry/migrations/0054_create_key_transaction.py
@@ -0,0 +1,53 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.28 on 2020-03-13 20:05
+from __future__ import unicode_literals
+
+from django.conf import settings
+from django.db import migrations, models
+import django.db.models.deletion
+import sentry.db.models.fields.bounded
+import sentry.db.models.fields.foreignkey
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+
+    dependencies = [
+        ('sentry', '0053_migrate_alert_task_onboarding'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='KeyTransaction',
+            fields=[
+                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
+                ('transaction', models.CharField(max_length=200)),
+                ('organization', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentry.Organization')),
+                ('owner', sentry.db.models.fields.foreignkey.FlexibleForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
+                ('project', sentry.db.models.fields.foreignkey.FlexibleForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='sentry.Project')),
+            ],
+            options={
+                'db_table': 'sentry_discoverkeytransaction',
+            },
+        ),
+        migrations.AlterUniqueTogether(
+            name='keytransaction',
+            unique_together=set([('project', 'transaction')]),
+        ),
+    ]
