commit 66a5be7a1602a92cf4c1d01eef5b28c05f7a2cca
Author: David Cramer <dcramer@David-Cramers-MacBook.local>
Date:   Tue Apr 6 17:52:24 2010 -0500

    Add support for skip_dblog on exception classes

diff --git a/README.rst b/README.rst
index 9b2465ff0d..140ff8ca61 100644
--- a/README.rst
+++ b/README.rst
@@ -145,6 +145,10 @@ Both the ``url`` and ``level`` parameters are optional. ``level`` should be one
 * ``logging.ERROR``
 * ``logging.FATAL``
 
+If you have a custom exception class, similar to Http404, or something else you don't want to log,
+you can also add ``skip_dblog = True`` to your exception class or instance, and dblog will simply ignore
+the error.
+
 =====
 Notes
 =====
diff --git a/djangodblog/manager.py b/djangodblog/manager.py
index 977191594d..b36dfe6616 100644
--- a/djangodblog/manager.py
+++ b/djangodblog/manager.py
@@ -1,6 +1,13 @@
 # Multi-db support based on http://www.eflorenzano.com/blog/post/easy-multi-database-support-django/
 # TODO: is there a way to use the traceback module based on an exception variable?
 
+import traceback
+import logging
+import socket
+import warnings
+import datetime
+import django
+
 from django.conf import settings
 from django.db import models
 from django.conf import settings
@@ -9,13 +16,6 @@ from django.utils.hashcompat import md5_constructor
 from django.utils.encoding import smart_unicode
 from django.db.models.query import QuerySet
 
-import traceback
-import logging
-import socket
-import warnings
-import datetime
-import django
-
 DBLOG_DATABASE_USING = getattr(settings, 'DBLOG_DATABASE_USING', None)
 
 assert not DBLOG_DATABASE_USING or django.VERSION >= (1, 2), 'The `DBLOG_DATABASE_USING` setting requires Django >= 1.2'
diff --git a/djangodblog/middleware.py b/djangodblog/middleware.py
index 974636b934..da3b5d92f8 100644
--- a/djangodblog/middleware.py
+++ b/djangodblog/middleware.py
@@ -10,6 +10,9 @@ class DBLogMiddleware(object):
         if not getattr(settings, 'DBLOG_CATCH_404_ERRORS', False) and isinstance(exception, Http404):
             return
 
+        if getattr(exception, 'skip_dblog', False):
+            return
+
         Error.objects.create_from_exception(exception, url=request.build_absolute_uri(), data=dict(
             META=request.META,
             POST=request.POST,
