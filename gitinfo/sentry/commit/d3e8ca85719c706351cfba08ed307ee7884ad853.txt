commit d3e8ca85719c706351cfba08ed307ee7884ad853
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Mon Feb 17 10:03:21 2020 +0100

    ref(ui): Added tooltip - Datascrubbers v2 - Part 4 (#16975)

diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index 536ae8c763..84a3d8916d 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -11,7 +11,7 @@ const CONTEXT_TYPES = {
   app: require('app/components/events/contexts/app').default,
   device: require('app/components/events/contexts/device').default,
   os: require('app/components/events/contexts/operatingSystem/operatingSystem').default,
-  runtime: require('app/components/events/contexts/runtime').default,
+  runtime: require('app/components/events/contexts/runtime/runtime').default,
   user: require('app/components/events/contexts/user').default,
   gpu: require('app/components/events/contexts/gpu').default,
 };
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime.jsx b/src/sentry/static/sentry/app/components/events/contexts/runtime.jsx
deleted file mode 100644
index 01582572b6..0000000000
--- a/src/sentry/static/sentry/app/components/events/contexts/runtime.jsx
+++ /dev/null
@@ -1,29 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import ContextBlock from 'app/components/events/contexts/contextBlock';
-
-class RuntimeContextType extends React.Component {
-  static propTypes = {
-    alias: PropTypes.string.isRequired,
-    data: PropTypes.object.isRequired,
-  };
-
-  render() {
-    const {name, version, build, ...data} = this.props.data;
-    return (
-      <ContextBlock
-        data={data}
-        knownData={[
-          ['Name', name],
-          ['Version', version + (build ? ` (${build})` : '')],
-        ]}
-        alias={this.props.alias}
-      />
-    );
-  }
-}
-
-RuntimeContextType.getTitle = () => 'Runtime';
-
-export default RuntimeContextType;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx
new file mode 100644
index 0000000000..93d83423c0
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownData.tsx
@@ -0,0 +1,30 @@
+import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
+import {getMeta} from 'app/components/events/meta/metaProxy';
+
+import getRuntimeKnownDataDetails from './getRuntimeKnownDataDetails';
+import {RuntimeData, RuntimeKnownDataType} from './types';
+
+function getRuntimeKnownData(data: RuntimeData): Array<KeyValueListData> {
+  const knownData: Array<KeyValueListData> = [];
+
+  const dataKeys = Object.keys(data);
+  for (const key of dataKeys) {
+    const knownDataDetails = getRuntimeKnownDataDetails(
+      data,
+      key as RuntimeKnownDataType
+    );
+
+    if (key === null || !knownDataDetails) {
+      continue;
+    }
+
+    knownData.push({
+      key,
+      ...knownDataDetails,
+      meta: getMeta(data, key),
+    });
+  }
+  return knownData;
+}
+
+export default getRuntimeKnownData;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownDataDetails.tsx b/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownDataDetails.tsx
new file mode 100644
index 0000000000..d48ea44ca7
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/runtime/getRuntimeKnownDataDetails.tsx
@@ -0,0 +1,30 @@
+import {t} from 'app/locale';
+
+import {RuntimeData, RuntimeKnownDataType} from './types';
+
+type Output = {
+  subject: string;
+  value: string | null;
+};
+
+function getRuntimeKnownDataDetails(
+  data: RuntimeData,
+  type: RuntimeKnownDataType
+): Output | undefined {
+  switch (type) {
+    case RuntimeKnownDataType.NAME:
+      return {
+        subject: t('Name'),
+        value: data.name,
+      };
+    case RuntimeKnownDataType.VERSION:
+      return {
+        subject: t('Version'),
+        value: `${data.version}${data.build ? `(${data.build})` : ''}`,
+      };
+    default:
+      return undefined;
+  }
+}
+
+export default getRuntimeKnownDataDetails;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx b/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx
new file mode 100644
index 0000000000..558c8c2e1b
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/runtime/runtime.tsx
@@ -0,0 +1,23 @@
+import React from 'react';
+
+import ContextBlock from 'app/components/events/contexts/contextBlockV2';
+import {defined} from 'app/utils';
+
+import getRuntimeKnownData from './getRuntimeKnownData';
+import {RuntimeData} from './types';
+
+type Props = {
+  data?: RuntimeData;
+};
+
+const Runtime = ({data}: Props) => {
+  if (!defined(data)) {
+    return null;
+  }
+
+  return <ContextBlock knownData={getRuntimeKnownData(data)} />;
+};
+
+Runtime.getTitle = () => 'Runtime';
+
+export default Runtime;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/runtime/types.ts b/src/sentry/static/sentry/app/components/events/contexts/runtime/types.ts
new file mode 100644
index 0000000000..96404d1b11
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/runtime/types.ts
@@ -0,0 +1,11 @@
+export enum RuntimeKnownDataType {
+  NAME = 'name',
+  VERSION = 'version',
+}
+
+export type RuntimeData = {
+  name: string;
+  type: string;
+  build: string;
+  version?: string;
+};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/types.tsx b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/types.tsx
new file mode 100644
index 0000000000..f2ee78b0e2
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/types.tsx
@@ -0,0 +1,8 @@
+import {Meta} from 'app/types';
+
+export type KeyValueListData = {
+  key: string;
+  subject: React.ReactNode;
+  value: string | null;
+  meta: Meta;
+};
