commit 49b1a85770bec1284eb42b3f63a44034aa12a3a2
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 8 16:35:59 2016 -0700

    Improve membership merging for users
    
    @getsentry/infrastructure

diff --git a/src/sentry/models/user.py b/src/sentry/models/user.py
index b3d262a098..4c91d07aae 100644
--- a/src/sentry/models/user.py
+++ b/src/sentry/models/user.py
@@ -101,9 +101,10 @@ class User(BaseModel, AbstractBaseUser):
 
     def merge_to(from_user, to_user):
         # TODO: we could discover relations automatically and make this useful
+        from sentry import roles
         from sentry.models import (
             AuditLogEntry, Activity, AuthIdentity, GroupBookmark,
-            OrganizationMember, UserOption
+            OrganizationMember, OrganizationMemberTeam, UserOption
         )
 
         for obj in OrganizationMember.objects.filter(user=from_user):
@@ -112,6 +113,22 @@ class User(BaseModel, AbstractBaseUser):
                     obj.update(user=to_user)
             except IntegrityError:
                 pass
+
+            # identify the highest priority membership
+            to_member = OrganizationMember.objects.get(user=to_user)
+            if roles.get(obj.role).priority > roles.get(to_member.role).priority:
+                to_member.update(role=obj.role)
+
+            for team in obj.teams.all():
+                try:
+                    with transaction.atomic():
+                        OrganizationMemberTeam.objects.create(
+                            organizationmember=to_member,
+                            team=team,
+                        )
+                except IntegrityError:
+                    pass
+
         for obj in GroupBookmark.objects.filter(user=from_user):
             try:
                 with transaction.atomic():
diff --git a/tests/sentry/models/test_user.py b/tests/sentry/models/test_user.py
index 18c9530018..11aa7ec644 100644
--- a/tests/sentry/models/test_user.py
+++ b/tests/sentry/models/test_user.py
@@ -1,12 +1,44 @@
 from __future__ import absolute_import
 
+from sentry.models import OrganizationMember
 from sentry.testutils import TestCase
 
 
-class UserTest(TestCase):
-    def test_merge_to(self):
+class UserMergeToTest(TestCase):
+    def test_simple(self):
         from_user = self.create_user('foo@example.com')
 
         to_user = self.create_user('bar@example.com')
 
         from_user.merge_to(to_user)
+
+    def test_duplicate_memberships(self):
+        from_user = self.create_user('foo@example.com')
+        to_user = self.create_user('bar@example.com')
+
+        org_1 = self.create_organization()
+        team_1 = self.create_team(organization=org_1)
+        team_2 = self.create_team(organization=org_1)
+        team_3 = self.create_team(organization=org_1)
+        self.create_member(
+            organization=org_1,
+            user=from_user,
+            role='owner',
+            teams=[team_1, team_2],
+        )
+        # to_user should have less roles
+        self.create_member(
+            organization=org_1,
+            user=to_user,
+            role='member',
+            teams=[team_2, team_3],
+        )
+
+        from_user.merge_to(to_user)
+
+        member = OrganizationMember.objects.get(
+            user=to_user,
+        )
+
+        assert member.role == 'owner'
+        assert list(member.teams.all()) == [team_1, team_2, team_3]
