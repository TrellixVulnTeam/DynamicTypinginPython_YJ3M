commit 8c39e6a62cba3855ef9d8e6c612af9bf7a081e06
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Wed Dec 18 12:10:56 2019 -0800

    ref(invite): Add invite modal to suggested assignees and suspect commits (#16074)

diff --git a/src/sentry/static/sentry/app/components/commitRow.tsx b/src/sentry/static/sentry/app/components/commitRow.tsx
index 01afdd8630..402879673d 100644
--- a/src/sentry/static/sentry/app/components/commitRow.tsx
+++ b/src/sentry/static/sentry/app/components/commitRow.tsx
@@ -3,10 +3,14 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import {Commit} from 'app/types';
+import {openInviteMembersModal} from 'app/actionCreators/modal';
 import {PanelItem} from 'app/components/panels';
 import {t, tct} from 'app/locale';
 import UserAvatar from 'app/components/avatar/userAvatar';
 import CommitLink from 'app/components/commitLink';
+import Hovercard from 'app/components/hovercard';
+import InlineSvg from 'app/components/inlineSvg';
+import Link from 'app/components/links/link';
 import TextOverflow from 'app/components/textOverflow';
 import TimeSince from 'app/components/timeSince';
 import space from 'app/styles/space';
@@ -32,14 +36,50 @@ export default class CommitRow extends React.Component<Props> {
     return firstLine;
   }
 
+  renderHovercardBody(author) {
+    return (
+      <EmailWarning>
+        {tct(
+          'The email [actorEmail] is not a member of your organization. [inviteUser:Invite] them or link additional emails in [accountSettings:account settings].',
+          {
+            actorEmail: <strong>{author.email}</strong>,
+            accountSettings: <StyledLink to="/settings/account/emails/" />,
+            inviteUser: (
+              <StyledLink
+                onClick={() =>
+                  openInviteMembersModal({
+                    initialData: [
+                      {
+                        emails: new Set([author.email]),
+                      },
+                    ],
+                    source: 'suspect_commit',
+                  })
+                }
+              />
+            ),
+          }
+        )}
+      </EmailWarning>
+    );
+  }
+
   render() {
     const {commit, customAvatar} = this.props;
     const {id, dateCreated, message, author, repository} = commit;
+    const nonMemberEmail = author && author.id === undefined;
 
     return (
       <PanelItem key={id} align="center">
         {customAvatar ? (
           customAvatar
+        ) : nonMemberEmail ? (
+          <AvatarWrapper>
+            <Hovercard body={this.renderHovercardBody(author)}>
+              <UserAvatar size={36} user={author} />
+              <EmailWarningIcon src="icon-circle-exclamation" />
+            </Hovercard>
+          </AvatarWrapper>
         ) : (
           <AvatarWrapper>
             <UserAvatar size={36} user={author} />
@@ -69,6 +109,30 @@ const AvatarWrapper = styled('div')`
   margin-right: ${space(2)};
 `;
 
+const EmailWarning = styled('div')`
+  font-size: ${p => p.theme.fontSizeSmall};
+  line-height: 1.4;
+  margin: -4px;
+`;
+
+const StyledLink = styled(Link)`
+  color: ${p => p.theme.textColor};
+  border-bottom: 1px dotted ${p => p.theme.textColor};
+
+  &:hover {
+    color: ${p => p.theme.textColor};
+  }
+`;
+
+const EmailWarningIcon = styled(InlineSvg)`
+  position: relative;
+  margin-left: -11px;
+  border-radius: 11px;
+  margin-bottom: -25px;
+  border: 1px solid ${p => p.theme.white};
+  background: ${p => p.theme.yellowLight};
+`;
+
 const CommitMessage = styled('div')`
   flex: 1;
   flex-direction: column;
@@ -82,7 +146,7 @@ const Message = styled(TextOverflow)`
   font-weight: bold;
 `;
 
-const Meta = styled('p')`
+const Meta = styled(TextOverflow)`
   font-size: 13px;
   line-height: 1.5;
   margin: 0;
diff --git a/src/sentry/static/sentry/app/components/group/suggestedOwnerHovercard.jsx b/src/sentry/static/sentry/app/components/group/suggestedOwnerHovercard.jsx
index 1beda69531..ccb895493c 100644
--- a/src/sentry/static/sentry/app/components/group/suggestedOwnerHovercard.jsx
+++ b/src/sentry/static/sentry/app/components/group/suggestedOwnerHovercard.jsx
@@ -4,6 +4,7 @@ import moment from 'moment';
 import styled from 'react-emotion';
 
 import {t, tct} from 'app/locale';
+import {openInviteMembersModal} from 'app/actionCreators/modal';
 import ActorAvatar from 'app/components/avatar/actorAvatar';
 import Alert from 'app/components/alert';
 import Hovercard from 'app/components/hovercard';
@@ -24,10 +25,24 @@ const SuggestedOwnerHovercard = ({actor, commits, rules, ...props}) => (
         {actor.id === undefined && (
           <EmailAlert icon="icon-warning-sm" type="warning">
             {tct(
-              'The email [actorEmail]  has no associated Sentry account. Make sure to link alternative emails in [accountSettings:Account Settings].',
+              'The email [actorEmail] is not a member of your organization. [inviteUser:Invite] them or link additional emails in [accountSettings:account settings].',
               {
                 actorEmail: <strong>{actor.email}</strong>,
                 accountSettings: <Link to="/settings/account/emails/" />,
+                inviteUser: (
+                  <a
+                    onClick={() =>
+                      openInviteMembersModal({
+                        initialData: [
+                          {
+                            emails: new Set([actor.email]),
+                          },
+                        ],
+                        source: 'suggested_assignees',
+                      })
+                    }
+                  />
+                ),
               }
             )}
           </EmailAlert>
@@ -170,7 +185,7 @@ const OwnershipValue = styled('code')`
 `;
 
 const EmailAlert = styled(p => <Alert iconSize="16px" {...p} />)`
-  margin: 10px -13px -9px;
+  margin: 10px -13px -13px;
   border-radius: 0;
   border-color: #ece0b0;
   padding: 10px;
diff --git a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
index e593f70a80..59f72c0773 100644
--- a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
+++ b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
@@ -25,6 +25,7 @@ type Props = AsyncComponent['props'] &
     organization: Organization;
     teams: Team[];
     source?: string;
+    initialData?: Partial<InviteRow>[];
   };
 
 type State = AsyncComponent['state'] & {
@@ -46,7 +47,11 @@ type InviteModalRenderFunc = React.ComponentProps<typeof InviteModalHook>['child
 
 class InviteMembersModal extends AsyncComponent<Props, State> {
   get inviteTemplate(): InviteRow {
-    return {emails: new Set(), teams: new Set(), role: DEFAULT_ROLE};
+    return {
+      emails: new Set(),
+      teams: new Set(),
+      role: DEFAULT_ROLE,
+    };
   }
 
   /**
@@ -77,9 +82,18 @@ class InviteMembersModal extends AsyncComponent<Props, State> {
 
   getDefaultState() {
     const state = super.getDefaultState();
+    const {initialData} = this.props;
+
+    const pendingInvites = initialData
+      ? initialData.map(initial => ({
+          ...this.inviteTemplate,
+          ...initial,
+        }))
+      : [this.inviteTemplate];
+
     return {
       ...state,
-      pendingInvites: [this.inviteTemplate],
+      pendingInvites,
       inviteStatus: {},
       complete: false,
       sendingInvites: false,
@@ -486,5 +500,6 @@ const modalClassName = css`
     margin: 50px auto;
   }
 `;
+
 export {modalClassName};
 export default withLatestContext(withTeams(InviteMembersModal));
diff --git a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/inviteRowControl.tsx b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/inviteRowControl.tsx
index 82f14769d8..53a573fa60 100644
--- a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/inviteRowControl.tsx
+++ b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/inviteRowControl.tsx
@@ -47,6 +47,7 @@ const InviteRowControl = ({
   <div className={className}>
     <div>
       <SelectControl
+        data-test-id="select-emails"
         disabled={disabled}
         placeholder={t('Enter one or more email')}
         value={emails}
@@ -74,6 +75,7 @@ const InviteRowControl = ({
     </div>
     <div>
       <RoleSelectControl
+        data-test-id="select-role"
         disabled={disabled}
         value={role}
         roles={roleOptions}
@@ -83,6 +85,7 @@ const InviteRowControl = ({
     </div>
     <div>
       <SelectControl
+        data-test-id="select-teams"
         disabled={disabled}
         placeholder={t('Add to teams...')}
         value={teams}
diff --git a/tests/js/spec/components/events/eventCause.spec.jsx b/tests/js/spec/components/events/eventCause.spec.jsx
index 55bfe8040f..62ffee5ca0 100644
--- a/tests/js/spec/components/events/eventCause.spec.jsx
+++ b/tests/js/spec/components/events/eventCause.spec.jsx
@@ -5,16 +5,21 @@ import {Client} from 'app/api';
 import EventCause from 'app/components/events/eventCause';
 
 describe('EventCause', function() {
-  let wrapper, organization, project, event;
+  const event = TestStubs.Event();
+  const organization = TestStubs.Organization();
+  const project = TestStubs.Project();
+
+  const context = {
+    organization,
+    project,
+    group: TestStubs.Group(),
+  };
 
   afterEach(function() {
     Client.clearMockResponses();
   });
 
   beforeEach(function() {
-    event = TestStubs.Event();
-    organization = TestStubs.Organization();
-    project = TestStubs.Project();
     Client.addMockResponse({
       method: 'GET',
       url: `/projects/${organization.slug}/${project.slug}/events/${
@@ -58,38 +63,81 @@ describe('EventCause', function() {
         ],
       },
     });
+  });
 
-    wrapper = mount(
+  it('renders', async function() {
+    const wrapper = mount(
       <EventCause event={event} orgId={organization.slug} projectId={project.slug} />,
       {
-        context: {
-          organization,
-          project,
-          group: TestStubs.Group(),
-        },
+        context,
       }
     );
-  });
 
-  it('renders', function(done) {
+    await tick();
     wrapper.update();
 
-    setTimeout(() => {
-      expect(wrapper.find('CommitRow')).toHaveLength(1);
-      done();
-    });
+    expect(wrapper.find('CommitRow')).toHaveLength(1);
+    expect(wrapper.find('EmailWarningIcon').exists()).toBe(false);
+    expect(wrapper.find('Hovercard').exists()).toBe(false);
   });
 
-  it('expands', async function(done) {
+  it('expands', async function() {
+    const wrapper = mount(
+      <EventCause event={event} orgId={organization.slug} projectId={project.slug} />,
+      {
+        context,
+      }
+    );
+
+    await tick();
     wrapper.update();
+
     wrapper.find('ExpandButton').simulate('click');
     await tick();
     expect(wrapper.find('CommitRow')).toHaveLength(2);
-    //and hides
+
+    // and hides
     wrapper.find('ExpandButton').simulate('click');
     await tick();
     expect(wrapper.find('CommitRow')).toHaveLength(1);
+  });
+
+  it('shows unassociated email warning', async function() {
+    Client.addMockResponse({
+      method: 'GET',
+      url: `/projects/${organization.slug}/${project.slug}/events/${
+        event.id
+      }/committers/`,
+      body: {
+        committers: [
+          {
+            author: {name: 'Somebody else', email: 'somebodyelse@email.com'},
+            commits: [
+              {
+                message: 'fix: Make things less broken',
+                score: 2,
+                id: 'zzzzzz3d0c9000829084ac7b1c9221fb18437c',
+                repository: TestStubs.Repository(),
+                dateCreated: '2018-03-02T16:30:26Z',
+              },
+            ],
+          },
+        ],
+      },
+    });
 
-    done();
+    const wrapper = mount(
+      <EventCause event={event} orgId={organization.slug} projectId={project.slug} />,
+      {
+        context,
+      }
+    );
+
+    await tick();
+    wrapper.update();
+
+    expect(wrapper.find('CommitRow')).toHaveLength(1);
+    expect(wrapper.find('EmailWarningIcon').exists()).toBe(true);
+    expect(wrapper.find('Hovercard').exists()).toBe(true);
   });
 });
diff --git a/tests/js/spec/components/modals/inviteMembersModal.spec.jsx b/tests/js/spec/components/modals/inviteMembersModal.spec.jsx
index 2b102a6189..c648c47d2c 100644
--- a/tests/js/spec/components/modals/inviteMembersModal.spec.jsx
+++ b/tests/js/spec/components/modals/inviteMembersModal.spec.jsx
@@ -3,9 +3,12 @@ import React from 'react';
 
 import {mountWithTheme} from 'sentry-test/enzyme';
 import InviteMembersModal from 'app/components/modals/inviteMembersModal';
+import TeamStore from 'app/stores/teamStore';
 
 describe('InviteMembersModal', function() {
-  const org = TestStubs.Organization({access: ['member:write']});
+  const team = TestStubs.Team();
+  const org = TestStubs.Organization({access: ['member:write'], teams: [team]});
+  TeamStore.loadInitialData([team]);
 
   const noWriteOrg = TestStubs.Organization({
     access: [],
@@ -264,6 +267,106 @@ describe('InviteMembersModal', function() {
     ).toBe(true);
   });
 
+  it('can send initial email', async function() {
+    const createMemberMock = MockApiClient.addMockResponse({
+      url: `/organizations/${org.slug}/members/`,
+      method: 'POST',
+    });
+
+    const initialEmail = 'test@gmail.com';
+    const initialData = [{emails: new Set([initialEmail])}];
+
+    const wrapper = mountWithTheme(
+      <InviteMembersModal
+        Body={Modal.Body}
+        Header={Modal.Header}
+        Footer={Modal.Footer}
+        organization={org}
+        initialData={initialData}
+      />,
+      TestStubs.routerContext()
+    );
+
+    expect(
+      wrapper
+        .find('span[className="Select-value-label"]')
+        .first()
+        .text()
+        .includes(initialEmail)
+    ).toBe(true);
+
+    wrapper.find('FooterContent Button[priority="primary"]').simulate('click');
+    await tick();
+    wrapper.update();
+
+    expect(createMemberMock).toHaveBeenCalledWith(
+      `/organizations/${org.slug}/members/`,
+      expect.objectContaining({
+        data: {email: initialEmail, role: 'member', teams: []},
+      })
+    );
+
+    expect(wrapper.find('StatusMessage').text()).toBe('Sent 1 invite');
+  });
+
+  it('can send initial email with role and team', async function() {
+    const createMemberMock = MockApiClient.addMockResponse({
+      url: `/organizations/${org.slug}/members/`,
+      method: 'POST',
+    });
+
+    const initialEmail = 'test@gmail.com';
+    const role = 'admin';
+    const initialData = [
+      {emails: new Set([initialEmail]), role, teams: new Set([team.slug])},
+    ];
+
+    const wrapper = mountWithTheme(
+      <InviteMembersModal
+        Body={Modal.Body}
+        Header={Modal.Header}
+        Footer={Modal.Footer}
+        organization={org}
+        initialData={initialData}
+      />,
+      TestStubs.routerContext()
+    );
+
+    expect(
+      wrapper
+        .find('SelectControl[data-test-id="select-emails"]')
+        .text()
+        .includes(initialEmail)
+    ).toBe(true);
+
+    expect(
+      wrapper
+        .find('SelectControl[data-test-id="select-role"]')
+        .text()
+        .toLowerCase()
+    ).toBe(role);
+
+    expect(
+      wrapper
+        .find('SelectControl[data-test-id="select-teams"]')
+        .text()
+        .includes(team.slug)
+    ).toBe(true);
+
+    wrapper.find('FooterContent Button[priority="primary"]').simulate('click');
+    await tick();
+    wrapper.update();
+
+    expect(createMemberMock).toHaveBeenCalledWith(
+      `/organizations/${org.slug}/members/`,
+      expect.objectContaining({
+        data: {email: initialEmail, role, teams: [team.slug]},
+      })
+    );
+
+    expect(wrapper.find('StatusMessage').text()).toBe('Sent 1 invite');
+  });
+
   describe('member invite request mode', function() {
     it('has adjusted wording', function() {
       const wrapper = mountWithTheme(
diff --git a/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap b/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
index 341f37e316..0df307ee47 100644
--- a/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
+++ b/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
@@ -245,18 +245,18 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                         </AvatarWrapper>
                         <CommitMessage>
                           <div
-                            className="css-bm0kt8-CommitMessage eyce8w21"
+                            className="css-bm0kt8-CommitMessage eyce8w24"
                           >
                             <Message>
                               <div
-                                className="css-q4dmcs-TextOverflow-Message eyce8w22"
+                                className="css-q4dmcs-TextOverflow-Message eyce8w25"
                               >
                                 (improve) Add Links to Spike-Protection Email (#2408)
                               </div>
                             </Message>
                             <Meta>
-                              <p
-                                className="css-10csi2f-Meta eyce8w23"
+                              <div
+                                className="css-qb05h1-TextOverflow-Meta eyce8w26"
                               >
                                 <span
                                   key="4"
@@ -284,7 +284,7 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                                     </time>
                                   </TimeSince>
                                 </span>
-                              </p>
+                              </div>
                             </Meta>
                           </div>
                         </CommitMessage>
@@ -568,18 +568,18 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                         </AvatarWrapper>
                         <CommitMessage>
                           <div
-                            className="css-bm0kt8-CommitMessage eyce8w21"
+                            className="css-bm0kt8-CommitMessage eyce8w24"
                           >
                             <Message>
                               <div
-                                className="css-q4dmcs-TextOverflow-Message eyce8w22"
+                                className="css-q4dmcs-TextOverflow-Message eyce8w25"
                               >
                                 (improve) Add Links to Spike-Protection Email (#2408)
                               </div>
                             </Message>
                             <Meta>
-                              <p
-                                className="css-10csi2f-Meta eyce8w23"
+                              <div
+                                className="css-qb05h1-TextOverflow-Meta eyce8w26"
                               >
                                 <span
                                   key="4"
@@ -607,7 +607,7 @@ Users now have access to useful links from the blogs and docs on Spike-protectio
                                     </time>
                                   </TimeSince>
                                 </span>
-                              </p>
+                              </div>
                             </Meta>
                           </div>
                         </CommitMessage>
