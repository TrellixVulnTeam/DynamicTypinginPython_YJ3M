commit 6b38e3a01165c0bb185c15f4208acbdc8232a25a
Author: Mark Story <mark@mark-story.com>
Date:   Thu May 16 10:34:31 2019 -0400

    fix: Update schema definitions to match South (#13227)

diff --git a/src/sentry/models/commitauthor.py b/src/sentry/models/commitauthor.py
index a84a6e37be..e15b4e52aa 100644
--- a/src/sentry/models/commitauthor.py
+++ b/src/sentry/models/commitauthor.py
@@ -10,7 +10,7 @@ class CommitAuthor(Model):
 
     organization_id = BoundedPositiveIntegerField(db_index=True)
     name = models.CharField(max_length=128, null=True)
-    email = models.EmailField()
+    email = models.EmailField(max_length=75)
     external_id = models.CharField(max_length=164, null=True)
 
     class Meta:
diff --git a/src/sentry/models/commitfilechange.py b/src/sentry/models/commitfilechange.py
index 1f9d9f652b..13e8b0434d 100644
--- a/src/sentry/models/commitfilechange.py
+++ b/src/sentry/models/commitfilechange.py
@@ -12,7 +12,7 @@ class CommitFileChange(Model):
 
     organization_id = BoundedPositiveIntegerField(db_index=True)
     commit = FlexibleForeignKey('sentry.Commit')
-    filename = models.CharField(max_length=255)
+    filename = models.TextField()
     type = models.CharField(
         max_length=1, choices=(('A', 'Added'), ('D', 'Deleted'), ('M', 'Modified'), )
     )
diff --git a/src/sentry/models/counter.py b/src/sentry/models/counter.py
index 93a6c4a0ef..caeea6f71b 100644
--- a/src/sentry/models/counter.py
+++ b/src/sentry/models/counter.py
@@ -66,34 +66,39 @@ def create_counter_function(db, created_models, app=None, **kwargs):
         return
 
     cursor = connections[db].cursor()
-    cursor.execute(
-        '''
-        create or replace function sentry_increment_project_counter(
-            project bigint, delta int) returns int as $$
-        declare
-          new_val int;
-        begin
-          loop
-            update sentry_projectcounter set value = value + delta
-             where project_id = project
-               returning value into new_val;
-            if found then
-              return new_val;
-            end if;
+    try:
+        cursor.execute(
+            '''
+            create or replace function sentry_increment_project_counter(
+                project bigint, delta int) returns int as $$
+            declare
+            new_val int;
             begin
-              insert into sentry_projectcounter(project_id, value)
-                   values (project, delta)
+            loop
+                update sentry_projectcounter set value = value + delta
+                where project_id = project
                 returning value into new_val;
-              return new_val;
-            exception when unique_violation then
-            end;
-          end loop;
-        end
-        $$ language plpgsql;
-    '''
-    )
+                if found then
+                return new_val;
+                end if;
+                begin
+                insert into sentry_projectcounter(project_id, value)
+                    values (project, delta)
+                    returning value into new_val;
+                return new_val;
+                exception when unique_violation then
+                end;
+            end loop;
+            end
+            $$ language plpgsql;
+        '''
+        )
+    finally:
+        cursor.close()
 
 
+# TODO(dcramer): Remove when Django 1.6 is no longer supported, as this does
+# nothing with Django migrations
 post_syncdb.connect(
     create_counter_function,
     dispatch_uid='create_counter_function',
diff --git a/src/sentry/models/email.py b/src/sentry/models/email.py
index a8cf1ae171..85180a8625 100644
--- a/src/sentry/models/email.py
+++ b/src/sentry/models/email.py
@@ -15,7 +15,7 @@ class Email(Model):
     """
     __core__ = True
 
-    email = CIEmailField(_('email address'), unique=True)
+    email = CIEmailField(_('email address'), unique=True, max_length=75)
     date_added = models.DateTimeField(default=timezone.now)
 
     class Meta:
diff --git a/src/sentry/models/groupemailthread.py b/src/sentry/models/groupemailthread.py
index b12e6fded3..180e579a55 100644
--- a/src/sentry/models/groupemailthread.py
+++ b/src/sentry/models/groupemailthread.py
@@ -27,7 +27,7 @@ class GroupEmailThread(Model):
     """
     __core__ = False
 
-    email = models.EmailField()
+    email = models.EmailField(max_length=75)
     project = FlexibleForeignKey('sentry.Project', related_name="groupemail_set")
     group = FlexibleForeignKey('sentry.Group', related_name="groupemail_set")
     msgid = models.CharField(max_length=100)
diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index 4935368151..2af0120cde 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -76,7 +76,7 @@ class OrganizationMember(Model):
     user = FlexibleForeignKey(
         settings.AUTH_USER_MODEL, null=True, blank=True, related_name="sentry_orgmember_set"
     )
-    email = models.EmailField(null=True, blank=True)
+    email = models.EmailField(null=True, blank=True, max_length=75)
     role = models.CharField(
         choices=roles.get_choices(),
         max_length=32,
diff --git a/src/sentry/models/release.py b/src/sentry/models/release.py
index 55adf9ddc1..dbc17011c4 100644
--- a/src/sentry/models/release.py
+++ b/src/sentry/models/release.py
@@ -20,7 +20,7 @@ from time import time
 
 from sentry.app import locks
 from sentry.db.models import (
-    ArrayField, BoundedPositiveIntegerField, FlexibleForeignKey, Model, sane_repr
+    ArrayField, BoundedBigIntegerField, BoundedPositiveIntegerField, FlexibleForeignKey, Model, sane_repr
 )
 
 from sentry.models import CommitFileChange
@@ -65,7 +65,7 @@ class Release(Model):
         'sentry.Project', related_name='releases', through=ReleaseProject
     )
     # DEPRECATED
-    project_id = BoundedPositiveIntegerField(null=True)
+    project_id = BoundedBigIntegerField(null=True)
     version = models.CharField(max_length=DB_VERSION_LENGTH)
     # ref might be the branch name being released
     ref = models.CharField(max_length=DB_VERSION_LENGTH, null=True, blank=True)
diff --git a/src/sentry/models/releasefile.py b/src/sentry/models/releasefile.py
index 7a55366c86..e1fec25103 100644
--- a/src/sentry/models/releasefile.py
+++ b/src/sentry/models/releasefile.py
@@ -11,7 +11,7 @@ from __future__ import absolute_import
 from django.db import models
 from six.moves.urllib.parse import urlsplit, urlunsplit
 
-from sentry.db.models import BoundedPositiveIntegerField, FlexibleForeignKey, Model, sane_repr
+from sentry.db.models import BoundedBigIntegerField, FlexibleForeignKey, Model, sane_repr
 from sentry.utils.hashlib import sha1_text
 
 
@@ -26,7 +26,7 @@ class ReleaseFile(Model):
 
     organization = FlexibleForeignKey('sentry.Organization')
     # DEPRECATED
-    project_id = BoundedPositiveIntegerField(null=True)
+    project_id = BoundedBigIntegerField(null=True)
     release = FlexibleForeignKey('sentry.Release')
     file = FlexibleForeignKey('sentry.File')
     ident = models.CharField(max_length=40)
diff --git a/src/sentry/models/savedsearch.py b/src/sentry/models/savedsearch.py
index 333f3126ed..3735df9046 100644
--- a/src/sentry/models/savedsearch.py
+++ b/src/sentry/models/savedsearch.py
@@ -54,8 +54,9 @@ class SavedSearch(Model):
     class Meta:
         app_label = 'sentry'
         db_table = 'sentry_savedsearch'
-        # Note that we also have a partial unique constraint on
-        # (organization_id, name, type) where owner_id is null
+        # Note that we also have a partial unique constraint on:
+        #   (organization_id, name, type) WHERE owner_id IS NULL
+        #   (is_global, name) WHERE is_global
         unique_together = (
             ('project', 'name'),
             # Each user can have one default search per org
diff --git a/src/sentry/models/user.py b/src/sentry/models/user.py
index 1c235e1b4a..88dfbaff07 100644
--- a/src/sentry/models/user.py
+++ b/src/sentry/models/user.py
@@ -36,7 +36,7 @@ class User(BaseModel, AbstractBaseUser):
     # this column is called first_name for legacy reasons, but it is the entire
     # display name
     name = models.CharField(_('name'), max_length=200, blank=True, db_column='first_name')
-    email = models.EmailField(_('email address'), blank=True)
+    email = models.EmailField(_('email address'), blank=True, max_length=75)
     is_staff = models.BooleanField(
         _('staff status'),
         default=False,
diff --git a/src/sentry/models/useremail.py b/src/sentry/models/useremail.py
index 49f760e15a..704ec842c9 100644
--- a/src/sentry/models/useremail.py
+++ b/src/sentry/models/useremail.py
@@ -21,7 +21,7 @@ class UserEmail(Model):
     __core__ = True
 
     user = FlexibleForeignKey(settings.AUTH_USER_MODEL, related_name='emails')
-    email = models.EmailField(_('email address'))
+    email = models.EmailField(_('email address'), max_length=75)
     validation_hash = models.CharField(
         max_length=32, default=default_validation_hash
     )
diff --git a/src/sentry/tagstore/legacy/models/grouptagkey.py b/src/sentry/tagstore/legacy/models/grouptagkey.py
index 73b7a178ca..eb86f6a052 100644
--- a/src/sentry/tagstore/legacy/models/grouptagkey.py
+++ b/src/sentry/tagstore/legacy/models/grouptagkey.py
@@ -11,7 +11,7 @@ from django.db import models, router, transaction, DataError
 
 from sentry.constants import MAX_TAG_KEY_LENGTH
 from sentry.db.models import (
-    Model, BoundedPositiveIntegerField, BaseManager, sane_repr
+    Model, BoundedBigIntegerField, BoundedPositiveIntegerField, BaseManager, sane_repr
 )
 
 
@@ -23,8 +23,8 @@ class GroupTagKey(Model):
     """
     __core__ = False
 
-    project_id = BoundedPositiveIntegerField(db_index=True, null=True)
-    group_id = BoundedPositiveIntegerField(db_index=True)
+    project_id = BoundedBigIntegerField(db_index=True, null=True)
+    group_id = BoundedBigIntegerField(db_index=True)
     key = models.CharField(max_length=MAX_TAG_KEY_LENGTH)
     values_seen = BoundedPositiveIntegerField(default=0)
 
diff --git a/src/sentry/tagstore/legacy/models/grouptagvalue.py b/src/sentry/tagstore/legacy/models/grouptagvalue.py
index c12da8c90f..44e4f7e1be 100644
--- a/src/sentry/tagstore/legacy/models/grouptagvalue.py
+++ b/src/sentry/tagstore/legacy/models/grouptagvalue.py
@@ -12,7 +12,7 @@ from django.utils import timezone
 
 from sentry.constants import MAX_TAG_KEY_LENGTH, MAX_TAG_VALUE_LENGTH
 from sentry.db.models import (
-    Model, BoundedPositiveIntegerField, BaseManager, sane_repr)
+    Model, BoundedBigIntegerField, BoundedPositiveIntegerField, BaseManager, sane_repr)
 
 
 class GroupTagValue(Model):
@@ -22,8 +22,8 @@ class GroupTagValue(Model):
     """
     __core__ = False
 
-    project_id = BoundedPositiveIntegerField(db_index=True, null=True)
-    group_id = BoundedPositiveIntegerField(db_index=True)
+    project_id = BoundedBigIntegerField(db_index=True, null=True)
+    group_id = BoundedBigIntegerField(db_index=True)
     times_seen = BoundedPositiveIntegerField(default=0)
     key = models.CharField(max_length=MAX_TAG_KEY_LENGTH)
     value = models.CharField(max_length=MAX_TAG_VALUE_LENGTH)
diff --git a/src/sentry/tagstore/legacy/models/tagkey.py b/src/sentry/tagstore/legacy/models/tagkey.py
index 78db1e9f4c..e4aca33cd3 100644
--- a/src/sentry/tagstore/legacy/models/tagkey.py
+++ b/src/sentry/tagstore/legacy/models/tagkey.py
@@ -13,7 +13,7 @@ from django.utils.translation import ugettext_lazy as _
 
 from sentry.tagstore import TagKeyStatus
 from sentry.constants import MAX_TAG_KEY_LENGTH
-from sentry.db.models import (Model, BoundedPositiveIntegerField, sane_repr)
+from sentry.db.models import (Model, BoundedBigIntegerField, BoundedPositiveIntegerField, sane_repr)
 
 
 class TagKey(Model):
@@ -22,7 +22,7 @@ class TagKey(Model):
     """
     __core__ = False
 
-    project_id = BoundedPositiveIntegerField(db_index=True)
+    project_id = BoundedBigIntegerField(db_index=True)
     key = models.CharField(max_length=MAX_TAG_KEY_LENGTH)
     values_seen = BoundedPositiveIntegerField(default=0)
     label = models.CharField(max_length=64, null=True)
diff --git a/src/sentry/tagstore/legacy/models/tagvalue.py b/src/sentry/tagstore/legacy/models/tagvalue.py
index aa08f5d9ad..d1035369e1 100644
--- a/src/sentry/tagstore/legacy/models/tagvalue.py
+++ b/src/sentry/tagstore/legacy/models/tagvalue.py
@@ -12,7 +12,7 @@ from django.utils import timezone
 
 from sentry.constants import MAX_TAG_KEY_LENGTH, MAX_TAG_VALUE_LENGTH
 from sentry.db.models import (
-    Model, BoundedPositiveIntegerField, GzippedDictField, BaseManager, sane_repr
+    Model, BoundedBigIntegerField, BoundedPositiveIntegerField, GzippedDictField, BaseManager, sane_repr
 )
 
 
@@ -22,7 +22,7 @@ class TagValue(Model):
     """
     __core__ = False
 
-    project_id = BoundedPositiveIntegerField(db_index=True, null=True)
+    project_id = BoundedBigIntegerField(db_index=True, null=True)
     key = models.CharField(max_length=MAX_TAG_KEY_LENGTH)
     value = models.CharField(max_length=MAX_TAG_VALUE_LENGTH)
     data = GzippedDictField(blank=True, null=True)
