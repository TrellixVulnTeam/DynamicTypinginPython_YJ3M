commit 60813eb4b8ed8fecd7799f6bd62b58a79c1b0c76
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Nov 20 01:37:25 2012 -0800

    Enable realtime updating of various pieces of information without resorting when stream is paused

diff --git a/src/sentry/static/sentry/coffee/templates.coffee b/src/sentry/static/sentry/coffee/templates.coffee
index 4956e5b5c0..8742fff31e 100644
--- a/src/sentry/static/sentry/coffee/templates.coffee
+++ b/src/sentry/static/sentry/coffee/templates.coffee
@@ -16,7 +16,7 @@ app.templates.group = '
                 <%= message %>
             </p>
             <div class="meta">
-                <span class="last-seen title="<%= lastSeen %>"><%= app.prettyDate(lastSeen) %></span>
+                <span class="last-seen pretty-date" title="<%= lastSeen %>"><%= app.prettyDate(lastSeen) %></span>
                 <% if (timeSpent) { %>
                     <span class="time-spent"><%= app.utils.round(timeSpent) %>ms</span>
                 <% } %>
diff --git a/src/sentry/static/sentry/coffee/views.coffee b/src/sentry/static/sentry/coffee/views.coffee
index 5e82189928..edb1db1b48 100644
--- a/src/sentry/static/sentry/coffee/views.coffee
+++ b/src/sentry/static/sentry/coffee/views.coffee
@@ -69,7 +69,9 @@ jQuery ->
             @collection.each (member) =>
                 @renderMemberInContainer(member)
 
-        updateMember: (member) ->
+        updateMember: (member, options) ->
+            options ||= {}
+
             # TODO: is there a better way to pass both non-models and models here?
             count = member.count ? member.get('count')
             score = member.score ? member.get('score')
@@ -81,6 +83,7 @@ jQuery ->
             if existing.get('score') != score
                 existing.set('score', score)
 
+            if options.sort ? true
                 # score changed, resort
                 @collection.sort()
 
@@ -136,7 +139,7 @@ jQuery ->
                 @setEmpty()
 
 
-    app.GroupListView = class GroupListView extends OrderedElementsView
+    app.GroupListView = class GroupListView extends app.OrderedElementsView
 
         initialize: (data) ->
             if !data?
@@ -151,7 +154,6 @@ jQuery ->
                 tickTime: data.tickTime ? 100
 
             @queue = new app.ScoredList
-                model: data.model
 
             @cursor = null
 
@@ -166,12 +168,13 @@ jQuery ->
             item = @queue.pop()
             if @config.realtime
                 @addMember(item)
+            else
+                if @hasMember(item)
+                    @updateMember(item, {
+                        sort: false
+                    })
 
         poll: ->
-            if !@config.realtime
-                window.setTimeout(@poll, @config.pollTime)
-                return
-
             data = app.utils.getQueryParams()
             data.cursor = @cursor || undefined
 
diff --git a/src/sentry/static/sentry/scripts/site.js b/src/sentry/static/sentry/scripts/site.js
index ef9811aead..b6fef9a960 100644
--- a/src/sentry/static/sentry/scripts/site.js
+++ b/src/sentry/static/sentry/scripts/site.js
@@ -335,7 +335,7 @@
                 <%= message %>\
             </p>\
             <div class="meta">\
-                <span class="last-seen title="<%= lastSeen %>"><%= app.prettyDate(lastSeen) %></span>\
+                <span class="last-seen pretty-date" title="<%= lastSeen %>"><%= app.prettyDate(lastSeen) %></span>\
                 <% if (timeSpent) { %>\
                     <span class="time-spent"><%= app.utils.round(timeSpent) %>ms</span>\
                 <% } %>\
@@ -505,8 +505,9 @@
         });
       };
 
-      OrderedElementsView.prototype.updateMember = function(member) {
-        var count, existing, score, _ref, _ref1;
+      OrderedElementsView.prototype.updateMember = function(member, options) {
+        var count, existing, score, _ref, _ref1, _ref2;
+        options || (options = {});
         count = (_ref = member.count) != null ? _ref : member.get('count');
         score = (_ref1 = member.score) != null ? _ref1 : member.get('score');
         existing = this.collection.get(member.id);
@@ -515,6 +516,8 @@
         }
         if (existing.get('score') !== score) {
           existing.set('score', score);
+        }
+        if ((_ref2 = options.sort) != null ? _ref2 : true) {
           return this.collection.sort();
         }
       };
@@ -597,9 +600,7 @@
           pollTime: (_ref2 = data.pollTime) != null ? _ref2 : 1000,
           tickTime: (_ref3 = data.tickTime) != null ? _ref3 : 100
         };
-        this.queue = new app.ScoredList({
-          model: data.model
-        });
+        this.queue = new app.ScoredList;
         this.cursor = null;
         this.poll();
         return window.setInterval(this.tick, this.config.tickTime);
@@ -613,16 +614,18 @@
         item = this.queue.pop();
         if (this.config.realtime) {
           return this.addMember(item);
+        } else {
+          if (this.hasMember(item)) {
+            return this.updateMember(item, {
+              sort: false
+            });
+          }
         }
       };
 
       GroupListView.prototype.poll = function() {
         var data,
           _this = this;
-        if (!this.config.realtime) {
-          window.setTimeout(this.poll, this.config.pollTime);
-          return;
-        }
         data = app.utils.getQueryParams();
         data.cursor = this.cursor || void 0;
         return $.ajax({
@@ -658,7 +661,7 @@
 
       return GroupListView;
 
-    })(OrderedElementsView);
+    })(app.OrderedElementsView);
     app.GroupView = GroupView = (function(_super) {
 
       __extends(GroupView, _super);
