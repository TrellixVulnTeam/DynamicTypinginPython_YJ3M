commit 49a35c00ededaa88fbc498c45141373ec213c72f
Author: Matej Minar <matej.minar@sentry.io>
Date:   Tue Mar 24 17:26:31 2020 +0100

    feat(ui): Add message to the bottom of project list in globalSelectionHeader (#17874)

diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
index 96e3f3e8ef..fedfcfb234 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
@@ -164,6 +164,11 @@ class GlobalSelectionHeader extends React.Component {
      * E.g. This 'issue' is unique to a project
      */
     lockedMessageSubject: PropTypes.string,
+
+    /**
+     * Message to display at the bottom of project list
+     */
+    projectsFooterMessage: PropTypes.node,
   };
 
   static defaultProps = {
@@ -603,6 +608,7 @@ class GlobalSelectionHeader extends React.Component {
       timeRangeHint,
       specificProjectSlugs,
       disableMultipleProjectSelection,
+      projectsFooterMessage,
     } = this.props;
     const {period, start, end, utc} = this.props.selection.datetime || {};
 
@@ -660,6 +666,7 @@ class GlobalSelectionHeader extends React.Component {
                   showIssueStreamLink={showIssueStreamLink}
                   showProjectSettingsLink={showProjectSettingsLink}
                   lockedMessageSubject={lockedMessageSubject}
+                  footerMessage={projectsFooterMessage}
                 />
               );
             }}
diff --git a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
index 060c30cb5a..7da02a5cb4 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
@@ -32,6 +32,7 @@ export default class MultipleProjectSelector extends React.PureComponent {
     showIssueStreamLink: PropTypes.bool,
     showProjectSettingsLink: PropTypes.bool,
     lockedMessageSubject: PropTypes.string,
+    footerMessage: PropTypes.node,
   };
 
   static contextTypes = {
@@ -188,6 +189,7 @@ export default class MultipleProjectSelector extends React.PureComponent {
       shouldForceProject,
       forceProject,
       showProjectSettingsLink,
+      footerMessage,
     } = this.props;
     const selectedProjectIds = new Set(value);
 
@@ -250,6 +252,7 @@ export default class MultipleProjectSelector extends React.PureComponent {
                   this.handleClear();
                   actions.close();
                 }}
+                message={footerMessage}
               />
             )}
           >
@@ -293,6 +296,7 @@ const SelectorFooterControls = props => {
     onShowAllProjects,
     onShowMyProjects,
     organization,
+    message,
   } = props;
   let showMyProjects = false;
   let showAllProjects = false;
@@ -309,27 +313,31 @@ const SelectorFooterControls = props => {
   }
 
   // Nothing to show.
-  if (!(showAllProjects || showMyProjects || hasChanges)) {
+  if (!(showAllProjects || showMyProjects || hasChanges || message)) {
     return null;
   }
 
   return (
     <FooterContainer>
-      {showAllProjects && (
-        <Button onClick={onShowAllProjects} priority="default" size="xsmall">
-          {t('View All Projects')}
-        </Button>
-      )}
-      {showMyProjects && (
-        <Button onClick={onShowMyProjects} priority="default" size="xsmall">
-          {t('View My Projects')}
-        </Button>
-      )}
-      {hasChanges && (
-        <SubmitButton onClick={onApply} size="xsmall" priority="primary">
-          {t('Apply Filter')}
-        </SubmitButton>
-      )}
+      {message && <FooterMessage>{message}</FooterMessage>}
+
+      <FooterActions>
+        {showAllProjects && (
+          <Button onClick={onShowAllProjects} priority="default" size="xsmall">
+            {t('View All Projects')}
+          </Button>
+        )}
+        {showMyProjects && (
+          <Button onClick={onShowMyProjects} priority="default" size="xsmall">
+            {t('View My Projects')}
+          </Button>
+        )}
+        {hasChanges && (
+          <SubmitButton onClick={onApply} size="xsmall" priority="primary">
+            {t('Apply Filter')}
+          </SubmitButton>
+        )}
+      </FooterActions>
     </FooterContainer>
   );
 };
@@ -342,12 +350,15 @@ SelectorFooterControls.propTypes = {
   onApply: PropTypes.func,
   onShowAllProjects: PropTypes.func,
   onShowMyProjects: PropTypes.func,
+  message: PropTypes.node,
 };
 
 const FooterContainer = styled('div')`
+  padding: ${space(1)} 0;
+`;
+const FooterActions = styled('div')`
   display: flex;
   justify-content: flex-end;
-  padding: ${space(1)} 0;
   & > * {
     margin-left: ${space(0.5)};
   }
@@ -356,6 +367,11 @@ const SubmitButton = styled(Button)`
   animation: 0.1s ${growIn} ease-in;
 `;
 
+const FooterMessage = styled('div')`
+  font-size: ${p => p.theme.fontSizeSmall};
+  padding: 0 ${space(0.5)};
+`;
+
 const StyledProjectSelector = styled(ProjectSelector)`
   margin: 1px 0 0 -1px;
   border-radius: ${p => p.theme.borderRadiusBottom};
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
index b07eab4694..c9bed8095c 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
@@ -16,6 +16,8 @@ import {formatVersion} from 'app/utils/formatters';
 import AsyncComponent from 'app/components/asyncComponent';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
 import LoadingIndicator from 'app/components/loadingIndicator';
+import {IconInfo} from 'app/icons';
+import space from 'app/styles/space';
 
 import ReleaseHeader from './releaseHeader';
 import PickProjectToContinue from './pickProjectToContinue';
@@ -145,6 +147,14 @@ class ReleasesV2DetailContainer extends AsyncComponent<Props> {
     return !projectId || typeof projectId !== 'string';
   }
 
+  renderProjectsFooterMessage() {
+    return (
+      <ProjectsFooterMessage>
+        <IconInfo size="xs" /> {t('Only projects with this release are visible.')}
+      </ProjectsFooterMessage>
+    );
+  }
+
   renderBody() {
     const {organization, params, router} = this.props;
     const {projects} = this.state.release;
@@ -170,6 +180,7 @@ class ReleasesV2DetailContainer extends AsyncComponent<Props> {
           specificProjectSlugs={projects.map(p => p.slug)}
           disableMultipleProjectSelection
           showProjectSettingsLink
+          projectsFooterMessage={this.renderProjectsFooterMessage()}
         />
         <ReleasesV2Detail {...this.props} />
       </React.Fragment>
@@ -181,5 +192,12 @@ const StyledPageContent = styled(PageContent)`
   padding: 0;
 `;
 
+const ProjectsFooterMessage = styled('div')`
+  display: grid;
+  align-items: center;
+  grid-template-columns: min-content 1fr;
+  grid-gap: ${space(1)};
+`;
+
 export {ReleasesV2DetailContainer, ReleaseContext};
 export default withGlobalSelection(withOrganization(ReleasesV2DetailContainer));
