commit 066d3e67325ff903a97960a64e5de4a0e227840f
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jul 15 10:10:54 2013 -0700

    Force tags to strings

diff --git a/src/sentry/conf/settings.py b/src/sentry/conf/settings.py
index aa5d2392b5..8a5dbc3e27 100644
--- a/src/sentry/conf/settings.py
+++ b/src/sentry/conf/settings.py
@@ -46,6 +46,3 @@ LANGUAGE_MAP = dict(settings.LANGUAGES)
 LANGUAGES = [(k, LANGUAGE_MAP[k]) for k in get_all_languages() if k in LANGUAGE_MAP]
 
 LOG_LEVEL_REVERSE_MAP = dict((str(v), k) for k, v in LOG_LEVELS)
-
-# XXX: legacy support for Sentry's USE_QUEUE setting
-settings.CELERY_ALWAYS_EAGER = (not locals().get('USE_QUEUE', False))
diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 181d09e50a..241486faf0 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -274,6 +274,20 @@ def validate_data(project, data, client=None):
         # remove any values which are over 32 characters
         tags = []
         for k, v in data['tags']:
+            if not isinstance(k, basestring):
+                try:
+                    k = unicode(k)
+                except Exception:
+                    logger.info('Discarded invalid tag key: %r',
+                                type(k), **client_metadata(client, project))
+                    continue
+            if not isinstance(v, basestring):
+                try:
+                    v = unicode(v)
+                except Exception:
+                    logger.info('Discarded invalid tag value: %s=%r',
+                                k, type(v), **client_metadata(client, project))
+                    continue
             if len(k) > 32 or len(v) > 32:
                 logger.info('Discarded invalid tag: %s=%s',
                             k, v, **client_metadata(client, project))
diff --git a/src/sentry/utils/runner.py b/src/sentry/utils/runner.py
index 1285ff30a2..c6a13dd97d 100644
--- a/src/sentry/utils/runner.py
+++ b/src/sentry/utils/runner.py
@@ -11,6 +11,7 @@ from logan.runner import run_app, configure_app
 import base64
 import os
 import pkg_resources
+import warnings
 
 KEY_LENGTH = 40
 
@@ -214,6 +215,18 @@ def initialize_app(config):
     skip_migration_if_applied(
         config['settings'], 'social_auth', 'social_auth_association')
 
+    apply_legacy_settings(config)
+
+
+def apply_legacy_settings(config):
+    settings = config['settings']
+
+    # SENTRY_USE_QUEUE used to determine if Celery was eager or not
+    if hasattr(settings, 'SENTRY_USE_QUEUE'):
+        warnings.warn('SENTRY_USE_QUEUE is deprecated. Please use CELERY_ALWAYS_EAGER instead. '
+                      'See http://sentry.readthedocs.org/en/latest/queue/index.html for more information.')
+        settings.CELERY_ALWAYS_EAGER = (not settings.SENTRY_USE_QUEUE)
+
 
 def table_exists(name):
     from django.db import connections
