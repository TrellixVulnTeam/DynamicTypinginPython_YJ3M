commit 271684f2535bac56451bca9a9bff63d91095200d
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu May 10 16:14:36 2018 -0700

    feat(dashboard): Lazy load projects (#8394)
    
    * clear ProjectsStatsStore when dashboard is unmounted
    * dedupe project ids during fetch (and do not refetch projects we already have)

diff --git a/src/sentry/static/sentry/app/actionCreators/projects.jsx b/src/sentry/static/sentry/app/actionCreators/projects.jsx
index c5c6c79349..253072066f 100644
--- a/src/sentry/static/sentry/app/actionCreators/projects.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/projects.jsx
@@ -1,3 +1,5 @@
+import {debounce} from 'lodash';
+
 import {
   addLoadingMessage,
   addErrorMessage,
@@ -5,6 +7,7 @@ import {
 } from 'app/actionCreators/indicator';
 import {tct} from 'app/locale';
 import ProjectActions from 'app/actions/projectActions';
+import ProjectsStatsStore from 'app/stores/projectsStatsStore';
 
 export function update(api, params) {
   ProjectActions.update(params.projectId, params.data);
@@ -42,6 +45,46 @@ export function loadStats(api, params) {
   });
 }
 
+// This is going to queue up a list of project ids we need to fetch stats for
+// Will be cleared when debounced function fires
+let _projectStatsToFetch = new Set();
+
+const _debouncedLoadStats = debounce((api, projectSet, params) => {
+  let existingProjectStats = Object.keys(ProjectsStatsStore.itemsById);
+  let projects = Array.from(projectSet).filter(
+    project => !existingProjectStats.includes(project)
+  );
+
+  if (!projects.length) {
+    _projectStatsToFetch.clear();
+    return;
+  }
+
+  let idQueryParams = projects.map(project => `id:${project}`).join(' ');
+  let endpoint = `/organizations/${params.orgId}/projects/`;
+
+  api.request(endpoint, {
+    query: {
+      statsPeriod: '24h',
+      query: idQueryParams,
+    },
+    success: data => {
+      ProjectActions.loadStatsForProjectSuccess(data);
+    },
+    error: data => {},
+  });
+
+  // Reset projects list
+  _projectStatsToFetch.clear();
+}, 50);
+
+export function loadStatsForProject(api, project, params) {
+  // Queue up a list of projects that we need stats for
+  // and call a debounced function to fetch stats for list of projects
+  _projectStatsToFetch.add(project);
+  _debouncedLoadStats(api, _projectStatsToFetch, params);
+}
+
 export function setActiveProject(project) {
   ProjectActions.setActive(project);
 }
diff --git a/src/sentry/static/sentry/app/actions/projectActions.jsx b/src/sentry/static/sentry/app/actions/projectActions.jsx
index da06739331..de1c6ef0f4 100644
--- a/src/sentry/static/sentry/app/actions/projectActions.jsx
+++ b/src/sentry/static/sentry/app/actions/projectActions.jsx
@@ -8,6 +8,7 @@ export default Reflux.createActions([
   'loadStats',
   'loadStatsError',
   'loadStatsSuccess',
+  'loadStatsForProjectSuccess',
   'removeProject',
   'removeProjectError',
   'removeProjectSuccess',
diff --git a/src/sentry/static/sentry/app/stores/projectsStatsStore.jsx b/src/sentry/static/sentry/app/stores/projectsStatsStore.jsx
new file mode 100644
index 0000000000..1cfaeeea36
--- /dev/null
+++ b/src/sentry/static/sentry/app/stores/projectsStatsStore.jsx
@@ -0,0 +1,32 @@
+import Reflux from 'reflux';
+
+import ProjectActions from 'app/actions/projectActions';
+
+/**
+ * This is a store specifically used by the dashboard, so that we can
+ * clear the store when the Dashboard unmounts
+ * (as to not disrupt ProjectsStore which a lot more components use)
+ */
+const ProjectsStatsStore = Reflux.createStore({
+  init() {
+    this.reset();
+    this.listenTo(ProjectActions.loadStatsForProjectSuccess, this.onStatsLoadSuccess);
+  },
+
+  getInitialState() {
+    return this.itemsById;
+  },
+
+  reset() {
+    this.itemsById = {};
+  },
+
+  onStatsLoadSuccess(projects) {
+    projects.forEach(project => {
+      this.itemsById[project.id] = project;
+    });
+    this.trigger(this.itemsById);
+  },
+});
+
+export default ProjectsStatsStore;
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
index 244e5f4b65..5080f88f3c 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
@@ -1,13 +1,14 @@
-import {flatten} from 'lodash';
+import LazyLoad from 'react-lazyload';
 import React from 'react';
 import PropTypes from 'prop-types';
 import createReactClass from 'create-react-class';
-import {Flex, Box} from 'grid-emotion';
+import {Flex} from 'grid-emotion';
 import styled from 'react-emotion';
 
 import SentryTypes from 'app/proptypes';
-import AsyncComponent from 'app/components/asyncComponent';
+import IdBadge from 'app/components/idBadge';
 import OrganizationState from 'app/mixins/organizationState';
+import ProjectsStatsStore from 'app/stores/projectsStatsStore';
 import getProjectsByTeams from 'app/utils/getProjectsByTeams';
 import {sortProjects} from 'app/utils';
 import withTeams from 'app/utils/withTeams';
@@ -16,107 +17,65 @@ import {t} from 'app/locale';
 
 import OldDashboard from './oldDashboard';
 import ProjectNav from './projectNav';
-import TeamMembers from './teamMembers';
-import ProjectCard from './projectCard';
+import TeamSection from './teamSection';
 import EmptyState from './emptyState';
 
-class Dashboard extends AsyncComponent {
+class Dashboard extends React.Component {
   static propTypes = {
     teams: PropTypes.array,
     projects: PropTypes.array,
     organization: SentryTypes.Organization,
   };
 
-  componentWillMount() {
+  componentDidMount() {
     $(document.body).addClass('org-dashboard');
-    super.componentWillMount();
   }
   componentWillUnmount() {
     $(document.body).removeClass('org-dashboard');
-    super.componentWillUnmount();
+    ProjectsStatsStore.reset();
   }
 
-  getEndpoints() {
-    const {projects, teams, params} = this.props;
-    const {orgId} = params;
-
-    // TODO(billy): Optimize this so we're not running the same sorts multiple times during a render
-    const sortedProjects = sortProjects(projects);
-    const {projectsByTeam} = getProjectsByTeams(teams, sortedProjects);
-
-    // Fetch list of projectIds to get stats for
-    const projectIds =
-      (projectsByTeam &&
-        flatten(
-          Object.keys(projectsByTeam).map(teamSlug =>
-            projectsByTeam[teamSlug].map(({id}) => id)
-          )
-        )) ||
-      [];
-
-    const idQueries = projectIds.map(id => `id:${id}`).join(' ');
-    const idQueryString = (idQueries && `&query=${idQueries}`) || '';
-
-    return [
-      [
-        'projectsWithStats',
-        `/organizations/${orgId}/projects/?statsPeriod=24h${idQueryString}`,
-      ],
-    ];
-  }
-
-  renderProjectCard = project => {
-    const {projectsWithStats} = this.state;
-
-    const projectDetails = projectsWithStats.find(p => project.id === p.id) || {};
-    const stats = projectDetails.stats || null;
-
-    return (
-      <ProjectCardWrapper
-        data-test-id={project.slug}
-        key={project.id}
-        width={['100%', '50%', '33%', '25%']}
-      >
-        <ProjectCard project={project} stats={stats} />
-      </ProjectCardWrapper>
-    );
-  };
-
-  renderBody() {
+  render() {
     const {teams, projects, params, organization} = this.props;
     const sortedProjects = sortProjects(projects);
     const {projectsByTeam} = getProjectsByTeams(teams, sortedProjects);
     const teamSlugs = Object.keys(projectsByTeam).sort();
-
     const favorites = projects.filter(project => project.isBookmarked);
-
     const hasTeamAccess = new Set(organization.access).has('team:read');
+    const teamsMap = new Map(teams.map(teamObj => [teamObj.slug, teamObj]));
 
     return (
       <React.Fragment>
         {favorites.length > 0 && (
-          <div data-test-id="favorites">
-            <TeamSection showBorder>
-              <TeamTitleBar>
-                <TeamName>{t('Favorites')}</TeamName>
-              </TeamTitleBar>
-              <ProjectCards>{favorites.map(this.renderProjectCard)}</ProjectCards>
-            </TeamSection>
-          </div>
+          <TeamSection
+            data-test-id="favorites"
+            orgId={params.orgId}
+            showBorder
+            team={null}
+            title={t('Favorites')}
+            projects={favorites}
+          />
         )}
 
         {teamSlugs.map((slug, index) => {
           const showBorder = index !== teamSlugs.length - 1;
+          const team = teamsMap.get(slug);
           return (
-            <TeamSection data-test-id="team" key={slug} showBorder={showBorder}>
-              <TeamTitleBar justify="space-between" align="center">
-                <TeamName>{`#${slug}`}</TeamName>
-                {hasTeamAccess && <TeamMembers teamId={slug} orgId={params.orgId} />}
-              </TeamTitleBar>
-              <ProjectCards>
-                {projectsByTeam[slug].map(this.renderProjectCard)}
-              </ProjectCards>
-            </TeamSection>
+            <LazyLoad
+              key={slug}
+              once
+              debounce={50}
+              placeholder={<TeamSectionPlaceholder />}
+            >
+              <TeamSection
+                orgId={params.orgId}
+                team={team}
+                hasTeamAccess={hasTeamAccess}
+                showBorder={showBorder}
+                title={<IdBadge team={team} />}
+                projects={projectsByTeam[slug]}
+              />
+            </LazyLoad>
           );
         })}
         {!teamSlugs.length && (
@@ -127,29 +86,6 @@ class Dashboard extends AsyncComponent {
   }
 }
 
-const TeamSection = styled.div`
-  border-bottom: ${p => (p.showBorder ? '1px solid ' + p.theme.borderLight : 0)};
-`;
-
-const TeamTitleBar = styled(Flex)`
-  padding: 24px 24px 0;
-  margin-bottom: 16px;
-`;
-
-const TeamName = styled.h4`
-  margin: 0;
-  font-size: 20px;
-`;
-
-const ProjectCards = styled(Flex)`
-  flex-wrap: wrap;
-  padding: 0 16px 24px;
-`;
-
-const ProjectCardWrapper = styled(Box)`
-  padding: 8px;
-`;
-
 const OrganizationDashboard = createReactClass({
   displayName: 'OrganizationDashboard',
   mixins: [OrganizationState],
@@ -170,5 +106,9 @@ const OrganizationDashboard = createReactClass({
   },
 });
 
+// This placeholder height will mean that we query for the first `window.height / 180` components
+const TeamSectionPlaceholder = styled('div')`
+  height: 180px;
+`;
 export {Dashboard};
 export default withTeams(withProjects(OrganizationDashboard));
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/platformList.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/platformList.jsx
index 8376e4a050..9460f74251 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/platformList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/platformList.jsx
@@ -37,13 +37,14 @@ class PlatformList extends React.Component {
   }
   render() {
     const {project, orgId} = this.props;
-    const platforms = project.platforms.slice(0, MAX_PLATFORMS);
+    const platforms =
+      project && project.platforms && project.platforms.slice(0, MAX_PLATFORMS);
 
     const link = `/${orgId}/${project.slug}/getting-started/${project.platform
       ? project.platform + '/'
       : ''}`;
 
-    if (!platforms.length) {
+    if (!platforms || !platforms.length) {
       return (
         <NoPlatforms align="center" p={2}>
           {project.firstEvent ? (
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
index 6d16efc5ca..df103ec00f 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
@@ -1,8 +1,10 @@
+import createReactClass from 'create-react-class';
 import React from 'react';
+import Reflux from 'reflux';
 import PropTypes from 'prop-types';
 import styled from 'react-emotion';
 import {withRouter} from 'react-router';
-import {Flex} from 'grid-emotion';
+import {Flex, Box} from 'grid-emotion';
 
 import SentryTypes from 'app/proptypes';
 import {Client} from 'app/api';
@@ -10,7 +12,8 @@ import Link from 'app/components/link';
 import space from 'app/styles/space';
 import Tooltip from 'app/components/tooltip';
 import {t} from 'app/locale';
-import {update} from 'app/actionCreators/projects';
+import {update, loadStatsForProject} from 'app/actionCreators/projects';
+import ProjectsStatsStore from 'app/stores/projectsStatsStore';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 
 import PlatformList from './platformList';
@@ -20,14 +23,24 @@ import NoEvents from './noEvents';
 class ProjectCard extends React.Component {
   static propTypes = {
     project: SentryTypes.Project.isRequired,
-    stats: PropTypes.array,
     params: PropTypes.object,
   };
 
+  componentDidMount() {
+    const {project, params} = this.props;
+
+    this.api = new Client();
+
+    // fetch project stats
+    loadStatsForProject(this.api, project.id, {
+      orgId: params.orgId,
+    });
+  }
+
   toggleProjectBookmark = () => {
     const {project, params} = this.props;
 
-    update(new Client(), {
+    update(this.api, {
       orgId: params.orgId,
       projectId: project.slug,
       data: {
@@ -37,48 +50,80 @@ class ProjectCard extends React.Component {
   };
 
   render() {
-    const {project, stats, params} = this.props;
+    const {project, params} = this.props;
+    const {stats} = project;
 
     const bookmarkText = project.isBookmarked
       ? t('Remove from bookmarks')
       : t('Add to bookmarks');
 
     return (
-      <StyledProjectCard>
-        <Flex justify="space-between" align="center">
-          <StyledLink to={`/${params.orgId}/${project.slug}/`}>
-            <strong>{project.slug}</strong>
-          </StyledLink>
-          <Tooltip title={bookmarkText}>
-            <Star
-              active={project.isBookmarked}
-              className="project-select-bookmark icon icon-star-solid"
-              onClick={this.toggleProjectBookmark}
-            />
-          </Tooltip>
-        </Flex>
-        <ChartContainer>
-          {!stats ? (
-            <NoStats>{t('Project stats are not available at the moment.')}</NoStats>
-          ) : (
-            <Chart stats={stats} noEvents={!project.firstEvent} />
-          )}
-          {!project.firstEvent && <NoEvents />}
-        </ChartContainer>
-        <PlatformList project={project} orgId={params.orgId} />
-      </StyledProjectCard>
+      <Box p={1} data-test-id={project.slug} width={['100%', '50%', '33%', '25%']}>
+        {stats ? (
+          <StyledProjectCard>
+            <Flex justify="space-between" align="center">
+              <StyledLink to={`/${params.orgId}/${project.slug}/`}>
+                <strong>{project.slug}</strong>
+              </StyledLink>
+              <Tooltip title={bookmarkText}>
+                <Star
+                  active={project.isBookmarked}
+                  className="project-select-bookmark icon icon-star-solid"
+                  onClick={this.toggleProjectBookmark}
+                />
+              </Tooltip>
+            </Flex>
+            <ChartContainer>
+              <Chart stats={stats} noEvents={!project.firstEvent} />
+              {!project.firstEvent && <NoEvents />}
+            </ChartContainer>
+            <PlatformList project={project} orgId={params.orgId} />
+          </StyledProjectCard>
+        ) : (
+          <LoadingCard />
+        )}
+      </Box>
     );
   }
 }
 
-const NoStats = styled('div')`
-  background-color: rgba(255, 255, 255);
-  font-weight: bold;
-  font-size: 0.8em;
-  text-align: center;
-  opacity: 0.4;
-  padding: 18px 0;
-`;
+const ProjectCardContainer = createReactClass({
+  propTypes: {
+    project: SentryTypes.Project,
+  },
+  mixins: [Reflux.listenTo(ProjectsStatsStore, 'onProjectStoreUpdate')],
+  getInitialState() {
+    const {project} = this.props;
+    const initialState = ProjectsStatsStore.getInitialState() || {};
+    return {
+      projectDetails: initialState[project.id] || null,
+    };
+  },
+  onProjectStoreUpdate(itemsById) {
+    const {project} = this.props;
+
+    // Don't update state if we already have stats
+    if (!!this.state.projectDetails) return;
+    if (!itemsById[project.id]) return;
+
+    this.setState({
+      projectDetails: itemsById[project.id],
+    });
+  },
+  render() {
+    const {project, ...props} = this.props;
+    const {projectDetails} = this.state;
+    return (
+      <ProjectCard
+        {...props}
+        project={{
+          ...project,
+          ...(projectDetails || {}),
+        }}
+      />
+    );
+  },
+});
 
 const ChartContainer = styled.div`
   position: relative;
@@ -107,5 +152,11 @@ const Star = styled.a`
   }
 `;
 
+const LoadingCard = styled('div')`
+  border: 1px solid transparent;
+  background-color: ${p => p.theme.offWhite};
+  height: 180px;
+`;
+
 export {ProjectCard};
-export default withRouter(ProjectCard);
+export default withRouter(ProjectCardContainer);
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/teamMembers.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/teamMembers.jsx
index 2f34618e21..ef0dd5fc80 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/teamMembers.jsx
@@ -15,6 +15,10 @@ export default class TeamMembers extends AsyncComponent {
     return [['members', `/teams/${orgId}/${teamId}/members/`]];
   }
 
+  renderLoading() {
+    return null;
+  }
+
   renderBody() {
     if (this.state.members) {
       const users = this.state.members.filter(({user}) => !!user).map(({user}) => user);
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/teamSection.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/teamSection.jsx
new file mode 100644
index 0000000000..080d2eb149
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/teamSection.jsx
@@ -0,0 +1,65 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import {Flex} from 'grid-emotion';
+import styled from 'react-emotion';
+
+import SentryTypes from 'app/proptypes';
+
+import TeamMembers from './teamMembers';
+import ProjectCard from './projectCard';
+
+class TeamSection extends React.Component {
+  static propTypes = {
+    team: SentryTypes.Team,
+    orgId: PropTypes.string,
+    showBorder: PropTypes.bool,
+    hasTeamAccess: PropTypes.bool,
+    title: PropTypes.node,
+    projects: PropTypes.array,
+  };
+
+  render() {
+    const {team, projects, title, showBorder, orgId, hasTeamAccess} = this.props;
+
+    return (
+      <TeamSectionWrapper data-test-id="team" showBorder={showBorder}>
+        <TeamTitleBar justify="space-between" align="center">
+          <TeamName>{title}</TeamName>
+          {hasTeamAccess && team && <TeamMembers teamId={team.slug} orgId={orgId} />}
+        </TeamTitleBar>
+        <ProjectCards>
+          {projects.map(project => (
+            <ProjectCard
+              data-test-id={project.slug}
+              key={project.slug}
+              project={project}
+            />
+          ))}
+        </ProjectCards>
+      </TeamSectionWrapper>
+    );
+  }
+}
+
+const TeamSectionWrapper = styled.div`
+  border-bottom: ${p => (p.showBorder ? '1px solid ' + p.theme.borderLight : 0)};
+  min-height: 180px;
+`;
+
+const TeamTitleBar = styled(Flex)`
+  padding: 24px 24px 0;
+  margin-bottom: 16px;
+`;
+
+const TeamName = styled.h4`
+  margin: 0;
+  font-size: 20px;
+  line-height: 24px;
+`;
+
+const ProjectCards = styled(Flex)`
+  flex-wrap: wrap;
+  padding: 0 16px 24px;
+`;
+
+export default TeamSection;
diff --git a/tests/js/setup.js b/tests/js/setup.js
index dc3ae901e4..7cc41bda4b 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -26,6 +26,10 @@ jest.mock('react-router', () => {
     },
   };
 });
+jest.mock('react-lazyload', () => {
+  const LazyLoadMock = ({children}) => children;
+  return LazyLoadMock;
+});
 
 const constantDate = new Date(1508208080000); //National Pasta Day
 MockDate.set(constantDate);
diff --git a/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap b/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
index 95344289eb..c3c139a2a1 100644
--- a/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
+++ b/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
@@ -18,432 +18,483 @@ exports[`ProjectCard renders 1`] = `
         "javascript",
       ],
       "slug": "project-slug",
+      "stats": Array [
+        Array [
+          1525042800,
+          1,
+        ],
+        Array [
+          1525046400,
+          2,
+        ],
+      ],
       "teams": Array [],
     }
   }
-  stats={
-    Array [
-      Array [
-        1525042800,
-        1,
-      ],
-      Array [
-        1525046400,
-        2,
-      ],
-    ]
-  }
 >
-  <StyledProjectCard>
-    <div
-      className="css-18be1td-StyledProjectCard efesc7i3"
+  <Box
+    data-test-id="project-slug"
+    p={1}
+    width={
+      Array [
+        "100%",
+        "50%",
+        "33%",
+        "25%",
+      ]
+    }
+  >
+    <Base
+      className="css-1g50fs4"
+      data-test-id="project-slug"
+      p={1}
+      width={
+        Array [
+          "100%",
+          "50%",
+          "33%",
+          "25%",
+        ]
+      }
     >
-      <Flex
-        align="center"
-        justify="space-between"
+      <div
+        className="css-1g50fs4"
+        data-test-id="project-slug"
+        is={null}
       >
-        <Base
-          align="center"
-          className="css-v7pzd9"
-          justify="space-between"
-        >
+        <StyledProjectCard>
           <div
-            className="css-v7pzd9"
-            is={null}
+            className="css-18be1td-StyledProjectCard efesc7i2"
           >
-            <StyledLink
-              to="/org-slug/project-slug/"
+            <Flex
+              align="center"
+              justify="space-between"
             >
-              <Link
-                className="css-1vw4sd8-StyledLink efesc7i2"
-                to="/org-slug/project-slug/"
+              <Base
+                align="center"
+                className="css-v7pzd9"
+                justify="space-between"
               >
-                <Link
-                  className="css-1vw4sd8-StyledLink efesc7i2"
-                  onlyActiveOnIndex={false}
-                  style={Object {}}
-                  to="/org-slug/project-slug/"
+                <div
+                  className="css-v7pzd9"
+                  is={null}
                 >
-                  <a
-                    className="css-1vw4sd8-StyledLink efesc7i2"
-                    onClick={[Function]}
-                    style={Object {}}
+                  <StyledLink
+                    to="/org-slug/project-slug/"
                   >
-                    <strong>
-                      project-slug
-                    </strong>
-                  </a>
-                </Link>
-              </Link>
-            </StyledLink>
-            <Tooltip
-              title="Add to bookmarks"
-            >
-              <Star
-                active={false}
-                className="tip project-select-bookmark icon icon-star-solid"
-                onClick={[Function]}
-                title="Add to bookmarks"
-              >
-                <a
-                  className="tip project-select-bookmark icon icon-star-solid css-31kf5u-Star efesc7i4"
-                  onClick={[Function]}
-                  title="Add to bookmarks"
-                />
-              </Star>
-            </Tooltip>
-          </div>
-        </Base>
-      </Flex>
-      <ChartContainer>
-        <div
-          className="css-1s8o1vf-ChartContainer efesc7i1"
-        >
-          <Chart
-            noEvents={true}
-            stats={
-              Array [
-                Array [
-                  1525042800,
-                  1,
-                ],
-                Array [
-                  1525046400,
-                  2,
-                ],
-              ]
-            }
-          >
-            <div>
-              <StyledBarChart
-                height={60}
-                label="events"
-                points={
-                  Array [
-                    Object {
-                      "x": 1525042800,
-                      "y": 1,
-                    },
-                    Object {
-                      "x": 1525046400,
-                      "y": 2,
-                    },
-                  ]
-                }
+                    <Link
+                      className="css-1vw4sd8-StyledLink efesc7i1"
+                      to="/org-slug/project-slug/"
+                    >
+                      <Link
+                        className="css-1vw4sd8-StyledLink efesc7i1"
+                        onlyActiveOnIndex={false}
+                        style={Object {}}
+                        to="/org-slug/project-slug/"
+                      >
+                        <a
+                          className="css-1vw4sd8-StyledLink efesc7i1"
+                          onClick={[Function]}
+                          style={Object {}}
+                        >
+                          <strong>
+                            project-slug
+                          </strong>
+                        </a>
+                      </Link>
+                    </Link>
+                  </StyledLink>
+                  <Tooltip
+                    title="Add to bookmarks"
+                  >
+                    <Star
+                      active={false}
+                      className="tip project-select-bookmark icon icon-star-solid"
+                      onClick={[Function]}
+                      title="Add to bookmarks"
+                    >
+                      <a
+                        className="tip project-select-bookmark icon icon-star-solid css-31kf5u-Star efesc7i3"
+                        onClick={[Function]}
+                        title="Add to bookmarks"
+                      />
+                    </Star>
+                  </Tooltip>
+                </div>
+              </Base>
+            </Flex>
+            <ChartContainer>
+              <div
+                className="css-1s8o1vf-ChartContainer efesc7i0"
               >
-                <BarChart
-                  className="css-h6aoq0-StyledBarChart e1wib7610"
-                  height={60}
-                  label="events"
-                  points={
+                <Chart
+                  noEvents={true}
+                  stats={
                     Array [
-                      Object {
-                        "x": 1525042800,
-                        "y": 1,
-                      },
-                      Object {
-                        "x": 1525046400,
-                        "y": 2,
-                      },
+                      Array [
+                        1525042800,
+                        1,
+                      ],
+                      Array [
+                        1525046400,
+                        2,
+                      ],
                     ]
                   }
                 >
-                  <StackedBarChart
-                    barClasses={
-                      Array [
-                        "chart-bar",
-                      ]
-                    }
-                    className="css-h6aoq0-StyledBarChart e1wib7610"
-                    height={60}
-                    label="events"
-                    markers={Array []}
-                    points={
-                      Array [
-                        Object {
-                          "x": 1525042800,
-                          "y": Array [
-                            1,
-                          ],
-                        },
-                        Object {
-                          "x": 1525046400,
-                          "y": Array [
-                            2,
-                          ],
-                        },
-                      ]
-                    }
-                    series={Array []}
-                    width={null}
-                  >
-                    <figure
-                      className="css-h6aoq0-StyledBarChart e1wib7610 barchart"
-                      style={
-                        Object {
-                          "height": 60,
-                          "width": null,
-                        }
+                  <div>
+                    <StyledBarChart
+                      height={60}
+                      label="events"
+                      points={
+                        Array [
+                          Object {
+                            "x": 1525042800,
+                            "y": 1,
+                          },
+                          Object {
+                            "x": 1525046400,
+                            "y": 2,
+                          },
+                        ]
                       }
                     >
-                      <span
-                        className="max-y"
-                      >
-                        <count
-                          value={10}
-                        >
-                          <span>
-                            10
-                          </span>
-                        </count>
-                      </span>
-                      <span
-                        className="min-y"
-                      >
-                        0
-                      </span>
-                      <span>
-                        <Tooltip
-                          key="1525042800"
-                          title="<div style=\\"width:130px\\"><div class=\\"time-label\\"><span>April 29, 2018<br />11:00 PM  &#8594; 11:59 PM</span></div></div><div class=\\"value-label\\">1 events</div>"
-                          tooltipOptions={
+                      <BarChart
+                        className="css-h6aoq0-StyledBarChart e1wib7610"
+                        height={60}
+                        label="events"
+                        points={
+                          Array [
                             Object {
-                              "html": true,
-                              "placement": "bottom",
-                            }
+                              "x": 1525042800,
+                              "y": 1,
+                            },
+                            Object {
+                              "x": 1525046400,
+                              "y": 2,
+                            },
+                          ]
+                        }
+                      >
+                        <StackedBarChart
+                          barClasses={
+                            Array [
+                              "chart-bar",
+                            ]
                           }
+                          className="css-h6aoq0-StyledBarChart e1wib7610"
+                          height={60}
+                          label="events"
+                          markers={Array []}
+                          points={
+                            Array [
+                              Object {
+                                "x": 1525042800,
+                                "y": Array [
+                                  1,
+                                ],
+                              },
+                              Object {
+                                "x": 1525046400,
+                                "y": Array [
+                                  2,
+                                ],
+                              },
+                            ]
+                          }
+                          series={Array []}
+                          width={null}
                         >
-                          <a
-                            className="tip chart-column"
+                          <figure
+                            className="css-h6aoq0-StyledBarChart e1wib7610 barchart"
                             style={
                               Object {
-                                "height": "100%",
-                                "width": "50%",
+                                "height": 60,
+                                "width": null,
                               }
                             }
-                            title="<div style=\\"width:130px\\"><div class=\\"time-label\\"><span>April 29, 2018<br />11:00 PM  &#8594; 11:59 PM</span></div></div><div class=\\"value-label\\">1 events</div>"
                           >
                             <span
-                              className="chart-bar"
-                              key="0"
-                              style={
-                                Object {
-                                  "backgroundColor": null,
-                                  "bottom": "0%",
-                                  "height": "9.9%",
-                                }
-                              }
+                              className="max-y"
                             >
-                              1
+                              <count
+                                value={10}
+                              >
+                                <span>
+                                  10
+                                </span>
+                              </count>
                             </span>
-                          </a>
-                        </Tooltip>
-                        <Tooltip
-                          key="1525046400"
-                          title="<div style=\\"width:130px\\"><div class=\\"time-label\\"><span>April 30, 2018<br />12:00 AM  &#8594; 12:59 AM</span></div></div><div class=\\"value-label\\">2 events</div>"
-                          tooltipOptions={
-                            Object {
-                              "html": true,
-                              "placement": "bottom",
-                            }
-                          }
-                        >
-                          <a
-                            className="tip chart-column"
-                            style={
-                              Object {
-                                "height": "100%",
-                                "width": "50%",
-                              }
-                            }
-                            title="<div style=\\"width:130px\\"><div class=\\"time-label\\"><span>April 30, 2018<br />12:00 AM  &#8594; 12:59 AM</span></div></div><div class=\\"value-label\\">2 events</div>"
-                          >
                             <span
-                              className="chart-bar"
-                              key="0"
-                              style={
-                                Object {
-                                  "backgroundColor": null,
-                                  "bottom": "0%",
-                                  "height": "19.8%",
-                                }
-                              }
+                              className="min-y"
                             >
-                              2
+                              0
                             </span>
-                          </a>
-                        </Tooltip>
-                      </span>
-                    </figure>
-                  </StackedBarChart>
-                </BarChart>
-              </StyledBarChart>
-            </div>
-          </Chart>
-          <NoEvents>
-            <Container>
-              <div
-                className="css-1m9okvh-Container eks1zeg0"
-              >
-                <EmptyText
-                  align="center"
-                  justify="center"
-                >
-                  <Base
-                    align="center"
-                    className="css-k1bbsy-EmptyText eks1zeg1"
-                    justify="center"
-                  >
+                            <span>
+                              <Tooltip
+                                key="1525042800"
+                                title="<div style=\\"width:130px\\"><div class=\\"time-label\\"><span>April 29, 2018<br />11:00 PM  &#8594; 11:59 PM</span></div></div><div class=\\"value-label\\">1 events</div>"
+                                tooltipOptions={
+                                  Object {
+                                    "html": true,
+                                    "placement": "bottom",
+                                  }
+                                }
+                              >
+                                <a
+                                  className="tip chart-column"
+                                  style={
+                                    Object {
+                                      "height": "100%",
+                                      "width": "50%",
+                                    }
+                                  }
+                                  title="<div style=\\"width:130px\\"><div class=\\"time-label\\"><span>April 29, 2018<br />11:00 PM  &#8594; 11:59 PM</span></div></div><div class=\\"value-label\\">1 events</div>"
+                                >
+                                  <span
+                                    className="chart-bar"
+                                    key="0"
+                                    style={
+                                      Object {
+                                        "backgroundColor": null,
+                                        "bottom": "0%",
+                                        "height": "9.9%",
+                                      }
+                                    }
+                                  >
+                                    1
+                                  </span>
+                                </a>
+                              </Tooltip>
+                              <Tooltip
+                                key="1525046400"
+                                title="<div style=\\"width:130px\\"><div class=\\"time-label\\"><span>April 30, 2018<br />12:00 AM  &#8594; 12:59 AM</span></div></div><div class=\\"value-label\\">2 events</div>"
+                                tooltipOptions={
+                                  Object {
+                                    "html": true,
+                                    "placement": "bottom",
+                                  }
+                                }
+                              >
+                                <a
+                                  className="tip chart-column"
+                                  style={
+                                    Object {
+                                      "height": "100%",
+                                      "width": "50%",
+                                    }
+                                  }
+                                  title="<div style=\\"width:130px\\"><div class=\\"time-label\\"><span>April 30, 2018<br />12:00 AM  &#8594; 12:59 AM</span></div></div><div class=\\"value-label\\">2 events</div>"
+                                >
+                                  <span
+                                    className="chart-bar"
+                                    key="0"
+                                    style={
+                                      Object {
+                                        "backgroundColor": null,
+                                        "bottom": "0%",
+                                        "height": "19.8%",
+                                      }
+                                    }
+                                  >
+                                    2
+                                  </span>
+                                </a>
+                              </Tooltip>
+                            </span>
+                          </figure>
+                        </StackedBarChart>
+                      </BarChart>
+                    </StyledBarChart>
+                  </div>
+                </Chart>
+                <NoEvents>
+                  <Container>
                     <div
-                      className="css-k1bbsy-EmptyText eks1zeg1"
-                      is={null}
+                      className="css-1m9okvh-Container eks1zeg0"
                     >
-                      No activity yet.
+                      <EmptyText
+                        align="center"
+                        justify="center"
+                      >
+                        <Base
+                          align="center"
+                          className="css-k1bbsy-EmptyText eks1zeg1"
+                          justify="center"
+                        >
+                          <div
+                            className="css-k1bbsy-EmptyText eks1zeg1"
+                            is={null}
+                          >
+                            No activity yet.
+                          </div>
+                        </Base>
+                      </EmptyText>
                     </div>
-                  </Base>
-                </EmptyText>
+                  </Container>
+                </NoEvents>
               </div>
-            </Container>
-          </NoEvents>
-        </div>
-      </ChartContainer>
-      <withRouter(PlatformList)
-        orgId="org-slug"
-        project={
-          Object {
-            "hasAccess": true,
-            "id": "2",
-            "isBookmarked": false,
-            "isMember": true,
-            "name": "Project Name",
-            "platforms": Array [
-              "javascript",
-            ],
-            "slug": "project-slug",
-            "teams": Array [],
-          }
-        }
-      >
-        <PlatformList
-          location={
-            Object {
-              "query": Object {},
-            }
-          }
-          orgId="org-slug"
-          project={
-            Object {
-              "hasAccess": true,
-              "id": "2",
-              "isBookmarked": false,
-              "isMember": true,
-              "name": "Project Name",
-              "platforms": Array [
-                "javascript",
-              ],
-              "slug": "project-slug",
-              "teams": Array [],
-            }
-          }
-          router={
-            Object {
-              "createHref": [MockFunction] {
-                "calls": Array [
-                  Array [
-                    "/org-slug/project-slug/",
+            </ChartContainer>
+            <withRouter(PlatformList)
+              orgId="org-slug"
+              project={
+                Object {
+                  "hasAccess": true,
+                  "id": "2",
+                  "isBookmarked": false,
+                  "isMember": true,
+                  "name": "Project Name",
+                  "platforms": Array [
+                    "javascript",
                   ],
-                ],
-              },
-              "go": [MockFunction],
-              "goBack": [MockFunction],
-              "goForward": [MockFunction],
-              "isActive": [MockFunction],
-              "listen": [MockFunction],
-              "location": Object {
-                "query": Object {},
-              },
-              "push": [MockFunction],
-              "replace": [MockFunction],
-              "setRouteLeaveHook": [MockFunction],
-            }
-          }
-        >
-          <Flex
-            align="center"
-          >
-            <Base
-              align="center"
-              className="css-5ipae5"
+                  "slug": "project-slug",
+                  "stats": Array [
+                    Array [
+                      1525042800,
+                      1,
+                    ],
+                    Array [
+                      1525046400,
+                      2,
+                    ],
+                  ],
+                  "teams": Array [],
+                }
+              }
             >
-              <div
-                className="css-5ipae5"
-                is={null}
+              <PlatformList
+                location={
+                  Object {
+                    "query": Object {},
+                  }
+                }
+                orgId="org-slug"
+                project={
+                  Object {
+                    "hasAccess": true,
+                    "id": "2",
+                    "isBookmarked": false,
+                    "isMember": true,
+                    "name": "Project Name",
+                    "platforms": Array [
+                      "javascript",
+                    ],
+                    "slug": "project-slug",
+                    "stats": Array [
+                      Array [
+                        1525042800,
+                        1,
+                      ],
+                      Array [
+                        1525046400,
+                        2,
+                      ],
+                    ],
+                    "teams": Array [],
+                  }
+                }
+                router={
+                  Object {
+                    "createHref": [MockFunction] {
+                      "calls": Array [
+                        Array [
+                          "/org-slug/project-slug/",
+                        ],
+                      ],
+                    },
+                    "go": [MockFunction],
+                    "goBack": [MockFunction],
+                    "goForward": [MockFunction],
+                    "isActive": [MockFunction],
+                    "listen": [MockFunction],
+                    "location": Object {
+                      "query": Object {},
+                    },
+                    "push": [MockFunction],
+                    "replace": [MockFunction],
+                    "setRouteLeaveHook": [MockFunction],
+                  }
+                }
               >
-                <div
-                  className="org-dashboard-platform-list"
+                <Flex
+                  align="center"
                 >
-                  <Flex
-                    direction="row-reverse"
-                    p={2}
+                  <Base
+                    align="center"
+                    className="css-5ipae5"
                   >
-                    <Base
-                      className="css-1tznizk"
-                      direction="row-reverse"
-                      p={2}
+                    <div
+                      className="css-5ipae5"
+                      is={null}
                     >
                       <div
-                        className="css-1tznizk"
-                        is={null}
+                        className="org-dashboard-platform-list"
                       >
-                        <StyledPlatformiconWrapper
-                          key="javascript"
+                        <Flex
+                          direction="row-reverse"
+                          p={2}
                         >
-                          <span
-                            className="css-sxusd0-StyledPlatformiconWrapper e1mca4c60"
+                          <Base
+                            className="css-1tznizk"
+                            direction="row-reverse"
+                            p={2}
                           >
-                            <StyledPlatformicon
-                              platform="javascript"
-                              size="24"
+                            <div
+                              className="css-1tznizk"
+                              is={null}
                             >
-                              <Platformicon
-                                className="css-950w8s-StyledPlatformicon e1mca4c61"
-                                platform="javascript"
-                                size="24"
+                              <StyledPlatformiconWrapper
+                                key="javascript"
                               >
-                                <img
-                                  className="css-950w8s-StyledPlatformicon e1mca4c61"
-                                  height="24"
-                                  src={
-                                    Object {
-                                      "default": Object {
-                                        "id": "test",
-                                        "viewBox": Object {},
-                                      },
-                                    }
-                                  }
-                                  width="24"
-                                />
-                              </Platformicon>
-                            </StyledPlatformicon>
-                          </span>
-                        </StyledPlatformiconWrapper>
+                                <span
+                                  className="css-sxusd0-StyledPlatformiconWrapper e1mca4c60"
+                                >
+                                  <StyledPlatformicon
+                                    platform="javascript"
+                                    size="24"
+                                  >
+                                    <Platformicon
+                                      className="css-950w8s-StyledPlatformicon e1mca4c61"
+                                      platform="javascript"
+                                      size="24"
+                                    >
+                                      <img
+                                        className="css-950w8s-StyledPlatformicon e1mca4c61"
+                                        height="24"
+                                        src={
+                                          Object {
+                                            "default": Object {
+                                              "id": "test",
+                                              "viewBox": Object {},
+                                            },
+                                          }
+                                        }
+                                        width="24"
+                                      />
+                                    </Platformicon>
+                                  </StyledPlatformicon>
+                                </span>
+                              </StyledPlatformiconWrapper>
+                            </div>
+                          </Base>
+                        </Flex>
                       </div>
-                    </Base>
-                  </Flex>
-                </div>
-                <PlatformText>
-                  <div
-                    className="css-1oyd7ep-PlatformText e1mca4c62"
-                  >
-                    javascript
-                  </div>
-                </PlatformText>
-              </div>
-            </Base>
-          </Flex>
-        </PlatformList>
-      </withRouter(PlatformList)>
-    </div>
-  </StyledProjectCard>
+                      <PlatformText>
+                        <div
+                          className="css-1oyd7ep-PlatformText e1mca4c62"
+                        >
+                          javascript
+                        </div>
+                      </PlatformText>
+                    </div>
+                  </Base>
+                </Flex>
+              </PlatformList>
+            </withRouter(PlatformList)>
+          </div>
+        </StyledProjectCard>
+      </div>
+    </Base>
+  </Box>
 </ProjectCard>
 `;
diff --git a/tests/js/spec/views/organizationDashboard/index.spec.jsx b/tests/js/spec/views/organizationDashboard/index.spec.jsx
index 7982ae089a..19ce823c58 100644
--- a/tests/js/spec/views/organizationDashboard/index.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/index.spec.jsx
@@ -1,23 +1,56 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow, mount} from 'enzyme';
 
 import {Dashboard} from 'app/views/organizationDashboard';
+import ProjectsStatsStore from 'app/stores/projectsStatsStore';
+import * as projectsActions from 'app/actionCreators/projects';
+
+jest.unmock('lodash/debounce');
+jest.mock('lodash/debounce', () => {
+  const debounceMap = new Map();
+  const mockDebounce = (fn, timeout) => {
+    return (...args) => {
+      if (debounceMap.has(fn)) {
+        clearTimeout(debounceMap.get(fn));
+      }
+      debounceMap.set(
+        fn,
+        setTimeout(() => {
+          fn.apply(fn, args);
+          debounceMap.delete(fn);
+        }, timeout)
+      );
+    };
+  };
+  return mockDebounce;
+});
 
 describe('OrganizationDashboard', function() {
+  const routerContext = TestStubs.routerContext();
+  routerContext.context.router = {
+    ...routerContext.context.router,
+    params: {
+      orgId: 'org-slug',
+    },
+  };
+  const teams = [TestStubs.Team()];
+
+  beforeEach(function() {
+    MockApiClient.addMockResponse({
+      url: '/teams/org-slug/team-slug/members/',
+      body: [],
+    });
+    ProjectsStatsStore.reset();
+  });
+
   afterEach(function() {
     MockApiClient.clearMockResponses();
   });
 
   describe('empty state', function() {
-    beforeEach(function() {
-      MockApiClient.addMockResponse({
-        url: '/organizations/org-slug/projects/?statsPeriod=24h',
-        body: [],
-      });
-    });
+    beforeEach(function() {});
 
     it('renders', function() {
-      const teams = [TestStubs.Team()];
       const projects = [];
 
       const wrapper = shallow(
@@ -35,20 +68,9 @@ describe('OrganizationDashboard', function() {
   });
 
   describe('with projects', function() {
-    beforeEach(function() {
-      MockApiClient.addMockResponse({
-        url: '/organizations/org-slug/projects/?statsPeriod=24h&query=id:2',
-        body: [
-          TestStubs.Project({
-            teams: [TestStubs.Team()],
-            stats: [[1517281200, 2], [1517310000, 1]],
-          }),
-        ],
-      });
-    });
+    beforeEach(function() {});
 
-    it('renders project cards', function() {
-      const teams = [TestStubs.Team()];
+    it('renders TeamSection', function() {
       const projects = [TestStubs.Project({teams})];
 
       const wrapper = shallow(
@@ -61,15 +83,14 @@ describe('OrganizationDashboard', function() {
         TestStubs.routerContext()
       );
       const emptyState = wrapper.find('EmptyState');
-      const favorites = wrapper.find('[data-test-id="favorites"]');
-      const projectCard = wrapper.find('ProjectCardWrapper');
+      const favorites = wrapper.find('TeamSection[data-test-id="favorites"]');
+      const teamSection = wrapper.find('TeamSection');
       expect(emptyState).toHaveLength(0);
       expect(favorites).toHaveLength(0);
-      expect(projectCard).toHaveLength(1);
+      expect(teamSection).toHaveLength(1);
     });
 
     it('renders favorited project in favorites section ', function() {
-      const teams = [TestStubs.Team()];
       const projects = [TestStubs.Project({teams, isBookmarked: true})];
 
       const wrapper = shallow(
@@ -81,13 +102,11 @@ describe('OrganizationDashboard', function() {
         />,
         TestStubs.routerContext()
       );
-      const favorites = wrapper.find('[data-test-id="favorites"]');
-      const projectCard = favorites.find('ProjectCardWrapper');
-      expect(projectCard).toHaveLength(1);
+      const favorites = wrapper.find('TeamSection[data-test-id="favorites"]');
+      expect(favorites).toHaveLength(1);
     });
 
     it('renders bookmarked projects first in team list', function() {
-      const teams = [TestStubs.Team()];
       const projects = [
         TestStubs.Project({
           id: '1',
@@ -132,26 +151,31 @@ describe('OrganizationDashboard', function() {
           stats: [],
         }),
       ];
-
       MockApiClient.addMockResponse({
-        url:
-          '/organizations/org-slug/projects/?statsPeriod=24h&query=id:3 id:2 id:4 id:5 id:1 id:6',
-        body: projects,
+        url: '/organizations/org-slug/projects/',
+        body: [
+          TestStubs.Project({
+            teams: [TestStubs.Team()],
+            stats: [[1517281200, 2], [1517310000, 1]],
+          }),
+        ],
       });
 
-      const wrapper = shallow(
+      jest.useFakeTimers();
+      const wrapper = mount(
         <Dashboard
           teams={teams}
           projects={projects}
           organization={TestStubs.Organization()}
           params={{orgId: 'org-slug'}}
         />,
-        TestStubs.routerContext()
+        routerContext
       );
 
-      const projectCards = wrapper.find(
-        'TeamSection[data-test-id="team"] ProjectCardWrapper'
-      );
+      jest.runAllTimers();
+
+      const projectCards = wrapper.find('LazyLoadMock ProjectCard');
+      expect(projectCards.at(0).prop('data-test-id')).toBe('a-fave');
       expect(projectCards.at(1).prop('data-test-id')).toBe('m-fave');
       expect(projectCards.at(2).prop('data-test-id')).toBe('z-fave');
       expect(projectCards.at(3).prop('data-test-id')).toBe('a');
@@ -159,4 +183,98 @@ describe('OrganizationDashboard', function() {
       expect(projectCards.at(5).prop('data-test-id')).toBe('z');
     });
   });
+
+  describe('ProjectsStatsStore', function() {
+    const projects = [
+      TestStubs.Project({
+        id: '1',
+        slug: 'm',
+        teams,
+        isBookmarked: false,
+      }),
+      TestStubs.Project({
+        id: '2',
+        slug: 'm-fave',
+        teams,
+        isBookmarked: true,
+      }),
+      TestStubs.Project({
+        id: '3',
+        slug: 'a-fave',
+        teams,
+        isBookmarked: true,
+      }),
+      TestStubs.Project({
+        id: '4',
+        slug: 'z-fave',
+        teams,
+        isBookmarked: true,
+      }),
+      TestStubs.Project({
+        id: '5',
+        slug: 'a',
+        teams,
+        isBookmarked: false,
+      }),
+      TestStubs.Project({
+        id: '6',
+        slug: 'z',
+        teams,
+        isBookmarked: false,
+      }),
+    ];
+
+    it('uses ProjectsStatsStore to load stats', function() {
+      jest.useFakeTimers();
+      ProjectsStatsStore.onStatsLoadSuccess([{...projects[0], stats: [[1517281200, 2]]}]);
+      const loadStatsSpy = jest.spyOn(projectsActions, 'loadStatsForProject');
+      const mock = MockApiClient.addMockResponse({
+        url: '/organizations/org-slug/projects/',
+        body: projects.map(project => ({
+          ...project,
+          stats: [[1517281200, 2], [1517310000, 1]],
+        })),
+      });
+
+      const wrapper = mount(
+        <Dashboard
+          teams={teams}
+          projects={projects}
+          organization={TestStubs.Organization()}
+          params={{orgId: 'org-slug'}}
+        />,
+        routerContext
+      );
+
+      // Favorites = 3 + 6 for first team
+      expect(loadStatsSpy).toHaveBeenCalledTimes(9);
+      expect(mock).not.toHaveBeenCalled();
+
+      // Has 8 Loading Cards because 1 project has been loaded in store already
+      expect(wrapper.find('LoadingCard')).toHaveLength(8);
+
+      // Advance timers so that batched request fires
+      jest.advanceTimersByTime(51);
+
+      expect(mock).toHaveBeenCalledTimes(1);
+      // query ids = 3, 2, 4 = bookmarked
+      // 1 - already loaded in store so shouldn't be in query
+      expect(mock).toHaveBeenCalledWith(
+        expect.anything(),
+        expect.objectContaining({
+          query: expect.objectContaining({
+            query: 'id:3 id:2 id:4 id:5 id:6',
+          }),
+        })
+      );
+      wrapper.update();
+      expect(wrapper.find('LoadingCard')).toHaveLength(0);
+      expect(wrapper.find('Chart')).toHaveLength(9);
+      jest.useRealTimers();
+
+      // Resets store when it unmounts
+      wrapper.unmount();
+      expect(ProjectsStatsStore.itemsById).toEqual({});
+    });
+  });
 });
diff --git a/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx b/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx
index 74c9d20b45..92efb43c06 100644
--- a/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/projectCard.spec.jsx
@@ -3,15 +3,20 @@ import {mount} from 'enzyme';
 
 import {ProjectCard} from 'app/views/organizationDashboard/projectCard';
 
+// NOTE: Unmocking debounce so that the actionCreator never fires
+jest.unmock('lodash/debounce');
+
 describe('ProjectCard', function() {
   let wrapper, projectMock;
 
   beforeEach(function() {
     wrapper = mount(
       <ProjectCard
-        project={TestStubs.Project({platforms: ['javascript']})}
+        project={TestStubs.Project({
+          stats: [[1525042800, 1], [1525046400, 2]],
+          platforms: ['javascript'],
+        })}
         params={{orgId: 'org-slug'}}
-        stats={[[1525042800, 1], [1525046400, 2]]}
       />,
       TestStubs.routerContext()
     );
@@ -53,6 +58,15 @@ describe('ProjectCard', function() {
     );
   });
 
+  it('renders loading placeholder card if there are no stats', function() {
+    wrapper = mount(
+      <ProjectCard project={TestStubs.Project()} params={{orgId: 'org-slug'}} />,
+      TestStubs.routerContext()
+    );
+
+    expect(wrapper.find('LoadingCard')).toHaveLength(1);
+  });
+
   it('renders empty state if no event has ever been sent', function() {
     wrapper = mount(
       <ProjectCard
@@ -60,9 +74,9 @@ describe('ProjectCard', function() {
           platforms: [],
           firstEvent: null,
           platform: 'csharp',
+          stats: [],
         })}
         params={{orgId: 'org-slug'}}
-        stats={[]}
       />,
       TestStubs.routerContext()
     );
