commit 21c456a7b4d09e1cf4713f7ca940c879bb1aff9e
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Mar 22 11:55:14 2018 -0700

    feat(ui): Change new settings routes to be more compact (#7641)
    
    * Move Settings Footer
    * remove extra `settings/` path and change to be an index route

diff --git a/src/sentry/integrations/slack/integration.py b/src/sentry/integrations/slack/integration.py
index 602ff4e43b..60770e2819 100644
--- a/src/sentry/integrations/slack/integration.py
+++ b/src/sentry/integrations/slack/integration.py
@@ -18,7 +18,7 @@ Define a relationship between Sentry and your Slack workspace(s).
 
 alert_link = {
     'text': 'Looking to send Sentry alerts to Slack? Add an **Alert Rule** for this project.',
-    'link': '/settings/organization/{orgId}/project/{projectId}/alerts/rules/'
+    'link': '/settings/{orgId}/{projectId}/alerts/rules/'
 }
 
 metadata = IntegrationMetadata(
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index 0297e007a8..ebd41386b0 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -344,8 +344,7 @@ const AssigneeSelector = createReactClass({
                 <MenuItem
                   className="invite-member"
                   disabled={!loading}
-                  to={`/settings/organization/${this.context.organization
-                    .slug}/members/new/`}
+                  to={`/settings/${this.context.organization.slug}/members/new/`}
                   query={{referrer: 'assignee_selector'}}
                 >
                   <span className="icon-plus" /> {t('Invite Member')}
diff --git a/src/sentry/static/sentry/app/components/link.jsx b/src/sentry/static/sentry/app/components/link.jsx
index f29137b6f0..a07720c053 100644
--- a/src/sentry/static/sentry/app/components/link.jsx
+++ b/src/sentry/static/sentry/app/components/link.jsx
@@ -4,11 +4,12 @@ import {Link as RouterLink} from 'react-router';
 
 /**
  * A context-aware version of Link (from react-router) that falls
- * back to <a> if there is no router present.
+ * back to <a> if there is no router present OR if you use `href`.
  */
 class Link extends React.Component {
   static propTypes = {
-    to: PropTypes.string.isRequired,
+    to: PropTypes.string,
+    href: PropTypes.string,
   };
 
   static contextTypes = {
@@ -16,15 +17,12 @@ class Link extends React.Component {
   };
 
   render() {
-    if (this.context.location) {
-      return <RouterLink {...this.props}>{this.props.children}</RouterLink>;
+    let {to, href, ...props} = this.props;
+
+    if (this.context.location && to) {
+      return <RouterLink {...this.props} />;
     } else {
-      let {to, ...props} = this.props;
-      return (
-        <a {...props} href={to}>
-          {this.props.children}
-        </a>
-      );
+      return <a {...props} href={to || href} />;
     }
   }
 }
diff --git a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
index fc7a09a647..638047a384 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
@@ -14,9 +14,7 @@ const OrgSettingsMenu = ({access, org, features}) => {
   if (!access.has('org:write') && !access.has('member:read')) return null;
 
   let hasNewSettings = features.has('new-settings');
-  let pathPrefix = `${hasNewSettings
-    ? '/settings/organization'
-    : '/organizations'}/${org.slug}`;
+  let pathPrefix = `${hasNewSettings ? '/settings' : '/organizations'}/${org.slug}`;
 
   return (
     <div>
@@ -59,7 +57,9 @@ const OrgSettingsMenu = ({access, org, features}) => {
             <ListLink to={`${pathPrefix}/repos/`}>{t('Repositories')}</ListLink>
           )}
         {access.has('org:write') && (
-          <ListLink to={`${pathPrefix}/settings/`}>{t('Settings')}</ListLink>
+          <ListLink index to={`${pathPrefix}/`}>
+            {t('Settings')}
+          </ListLink>
         )}
       </ul>
     </div>
@@ -100,9 +100,7 @@ const HomeSidebar = createReactClass({
     let org = this.getOrganization();
 
     let hasNewSettings = features.has('new-settings');
-    let pathPrefix = `${hasNewSettings
-      ? '/settings/organization'
-      : '/organizations'}/${org.slug}`;
+    let pathPrefix = `${hasNewSettings ? '/settings' : '/organizations'}/${org.slug}`;
     let orgId = org.slug;
 
     return (
diff --git a/src/sentry/static/sentry/app/components/projectHeader/index.jsx b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
index 86804e0d4e..14bf74aa0a 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
@@ -97,7 +97,7 @@ class ProjectHeader extends React.Component {
                   <Link
                     to={
                       orgFeatures.has('new-settings')
-                        ? `/settings/organization/${org.slug}/project/${project.slug}/`
+                        ? `/settings/${org.slug}/${project.slug}/`
                         : `/${org.slug}/${project.slug}/settings/`
                     }
                   >
@@ -128,7 +128,7 @@ class ProjectHeader extends React.Component {
                   <Button
                     to={
                       orgFeatures.has('new-settings')
-                        ? `/settings/organization/${org.slug}/project/${project.slug}/environments/`
+                        ? `/settings/${org.slug}/${project.slug}/environments/`
                         : `/${org.slug}/${project.slug}/settings/`
                     }
                     priority="primary"
diff --git a/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx b/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx
index d79b3d4c0f..e166d1a293 100644
--- a/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx
@@ -98,7 +98,7 @@ const OrganizationSelector = createReactClass({
                       <p>
                         <RouterOrBrowserLink
                           isRouter={hasNewSettings}
-                          path={`${settingsPrefix}/${org.slug}/settings/`}
+                          path={`${settingsPrefix}/${org.slug}/`}
                         >
                           <span className="icon-settings" /> {t('Settings')}
                         </RouterOrBrowserLink>
diff --git a/src/sentry/static/sentry/app/components/userBadge.jsx b/src/sentry/static/sentry/app/components/userBadge.jsx
index 0a1ee11a3b..2cfba2692b 100644
--- a/src/sentry/static/sentry/app/components/userBadge.jsx
+++ b/src/sentry/static/sentry/app/components/userBadge.jsx
@@ -10,7 +10,7 @@ const UserBadge = ({user, orgId, ...props}) => {
     <StyledUserBadge {...props}>
       <StyledAvatar user={user} size={80} className="avatar" />
       <StyledNameAndEmail>
-        <StyledLink to={`/settings/organization/${orgId}/members/${user.id}`}>
+        <StyledLink to={`/settings/${orgId}/members/${user.id}`}>
           {user.name || user.email}
         </StyledLink>
         <StyledEmail>{user.email}</StyledEmail>
diff --git a/src/sentry/static/sentry/app/data/forms/cspReports.jsx b/src/sentry/static/sentry/app/data/forms/cspReports.jsx
index af558d245d..a6aacb038f 100644
--- a/src/sentry/static/sentry/app/data/forms/cspReports.jsx
+++ b/src/sentry/static/sentry/app/data/forms/cspReports.jsx
@@ -1,7 +1,7 @@
 // Export route to make these forms searchable by label/help
 import {t} from '../../locale';
 
-export const route = '/settings/organization/:orgId/project/:projectId/csp/';
+export const route = '/settings/:orgId/:projectId/csp/';
 
 const formGroups = [
   {
diff --git a/src/sentry/static/sentry/app/data/forms/inboundFilters.jsx b/src/sentry/static/sentry/app/data/forms/inboundFilters.jsx
index 2aa12e847f..025bd70d50 100644
--- a/src/sentry/static/sentry/app/data/forms/inboundFilters.jsx
+++ b/src/sentry/static/sentry/app/data/forms/inboundFilters.jsx
@@ -3,7 +3,7 @@ import {t, tct} from '../../locale';
 import ExternalLink from '../../components/externalLink';
 
 // Export route to make these forms searchable by label/help
-export const route = '/settings/organization/:orgId/project/:projectId/filters/';
+export const route = '/settings/:orgId/:projectId/filters/';
 
 const newLineHelpText = t('Separate multiple entries with a newline.');
 const globHelpText = tct('Allows [link:glob pattern matching].', {
diff --git a/src/sentry/static/sentry/app/data/forms/organizationGeneralSettings.jsx b/src/sentry/static/sentry/app/data/forms/organizationGeneralSettings.jsx
index 197fe656bd..0906daca65 100644
--- a/src/sentry/static/sentry/app/data/forms/organizationGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/organizationGeneralSettings.jsx
@@ -4,7 +4,7 @@ import {extractMultilineFields} from '../../utils';
 import {t, tct} from '../../locale';
 
 // Export route to make these forms searchable by label/help
-export const route = '/settings/organization/:orgId/settings/';
+export const route = '/settings/:orgId/';
 
 const formGroups = [
   {
diff --git a/src/sentry/static/sentry/app/data/forms/processingIssues.jsx b/src/sentry/static/sentry/app/data/forms/processingIssues.jsx
index 31ebbceb56..142238f4d4 100644
--- a/src/sentry/static/sentry/app/data/forms/processingIssues.jsx
+++ b/src/sentry/static/sentry/app/data/forms/processingIssues.jsx
@@ -1,8 +1,7 @@
 // Export route to make these forms searchable by label/help
 import {t} from '../../locale';
 
-export const route =
-  '/settings/organization/:orgId/project/:projectId/processing-issues/';
+export const route = '/settings/:orgId/:projectId/processing-issues/';
 
 const formGroups = [
   {
diff --git a/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx b/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx
index ec53621425..ea4677c678 100644
--- a/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx
+++ b/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx
@@ -1,7 +1,7 @@
 import {t, tn} from '../../locale';
 
 // Export route to make these forms searchable by label/help
-export const route = '/settings/organization/:orgId/project/:projectId/alerts/';
+export const route = '/settings/:orgId/:projectId/alerts/';
 
 const formatMinutes = value => {
   value = value / 60;
diff --git a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
index 73994caf8a..1ae09ca001 100644
--- a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
@@ -4,7 +4,7 @@ import {t, tct, tn} from '../../locale';
 import getDynamicText from '../../utils/getDynamicText';
 
 // Export route to make these forms searchable by label/help
-export const route = '/settings/organization/:orgId/project/:projectId/settings/';
+export const route = '/settings/:orgId/:projectId/';
 
 const getResolveAgeAllowedValues = () => {
   let i = 0;
diff --git a/src/sentry/static/sentry/app/data/forms/teamSettingsFields.jsx b/src/sentry/static/sentry/app/data/forms/teamSettingsFields.jsx
index e5ee83aee9..95eb39b74a 100644
--- a/src/sentry/static/sentry/app/data/forms/teamSettingsFields.jsx
+++ b/src/sentry/static/sentry/app/data/forms/teamSettingsFields.jsx
@@ -3,7 +3,7 @@ import React from 'react';
 import {t, tct} from '../../locale';
 
 // Export route to make these forms searchable by label/help
-export const route = '/settings/organization/:orgId/teams/:teamId/settings/';
+export const route = '/settings/:orgId/teams/:teamId/settings/';
 
 const formGroups = [
   {
diff --git a/src/sentry/static/sentry/app/data/forms/userFeedback.jsx b/src/sentry/static/sentry/app/data/forms/userFeedback.jsx
index a2277dd10e..f3c4350741 100644
--- a/src/sentry/static/sentry/app/data/forms/userFeedback.jsx
+++ b/src/sentry/static/sentry/app/data/forms/userFeedback.jsx
@@ -1,5 +1,5 @@
 // Export route to make these forms searchable by label/help
-export const route = '/settings/organization/:orgId/project/:projectId/user-feedback/';
+export const route = '/settings/:orgId/:projectId/user-feedback/';
 
 const formGroups = [
   {
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 28ae36f95f..25dcad9094 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -48,7 +48,6 @@ import OrganizationDetails from './views/organizationDetails';
 import OrganizationHomeContainer from './components/organizations/homeContainer';
 import OrganizationMemberDetail from './views/settings/organization/members/organizationMemberDetail';
 import OrganizationMembersView from './views/settings/organization/members/organizationMembersView';
-import OrganizationPicker from './views/settings/components/organizationPicker';
 import OrganizationProjectsView from './views/settings/organization/projects/organizationProjectsView';
 import OrganizationRateLimits from './views/organizationRateLimits';
 import OrganizationRepositoriesView from './views/organizationRepositoriesView';
@@ -72,7 +71,6 @@ import ProjectGeneralSettings from './views/projectGeneralSettings';
 import ProjectGettingStarted from './views/projectInstall/gettingStarted';
 import ProjectInstallOverview from './views/projectInstall/overview';
 import ProjectInstallPlatform from './views/projectInstall/platform';
-import ProjectPicker from './views/settings/components/projectPicker';
 import ProjectIssueTracking from './views/projectIssueTracking';
 import ProjectReleases from './views/projectReleases';
 import ProjectSavedSearches from './views/projectSavedSearches';
@@ -241,12 +239,7 @@ const accountSettingsRoutes = (
 
 const projectSettingsRoutes = (
   <React.Fragment>
-    <IndexRedirect to="settings/" />
-    <Route
-      path="settings/"
-      name="General"
-      component={errorHandler(ProjectGeneralSettings)}
-    />
+    <IndexRoute name="General" component={errorHandler(ProjectGeneralSettings)} />
     <Route
       path="teams/"
       name="Teams"
@@ -409,7 +402,10 @@ function routes() {
   // hook store which is not available at import time.
   const orgSettingsRoutes = (
     <React.Fragment>
-      <IndexRedirect to="settings/" />
+      <IndexRoute
+        name="General"
+        component={errorHandler(OrganizationGeneralSettingsView)}
+      />
 
       <Route
         path="projects/"
@@ -417,12 +413,6 @@ function routes() {
         component={errorHandler(OrganizationProjectsView)}
       />
 
-      <Route
-        path="settings/"
-        name="General"
-        component={errorHandler(OrganizationGeneralSettingsView)}
-      />
-
       <Route
         path="api-keys/"
         name="API Key"
@@ -548,38 +538,31 @@ function routes() {
           {accountSettingsRoutes}
         </Route>
 
-        <Route path="organization/">
-          <IndexRoute component={errorHandler(OrganizationPicker)} />
-
+        <Route
+          name="Organization"
+          path=":orgId/"
+          component={errorHandler(OrganizationContext)}
+        >
           <Route
-            name="Organization"
-            path=":orgId/"
-            component={errorHandler(OrganizationContext)}
+            getComponent={(loc, cb) =>
+              import(/*webpackChunkName: "OrganizationSettingsLayout" */ './views/settings/organization/organizationSettingsLayout').then(
+                lazyLoad(cb)
+              )}
           >
-            <Route
-              getComponent={(loc, cb) =>
-                import(/*webpackChunkName: "OrganizationSettingsLayout" */ './views/settings/organization/organizationSettingsLayout').then(
-                  lazyLoad(cb)
-                )}
-            >
-              {hooksOrgRoutes}
-              {orgSettingsRoutes}
-            </Route>
+            {hooksOrgRoutes}
+            {orgSettingsRoutes}
+          </Route>
 
-            <Route path="project/">
-              <IndexRoute component={errorHandler(ProjectPicker)} />
-              <Route
-                name="Project"
-                path=":projectId/"
-                getComponent={(loc, cb) =>
-                  import(/*webpackChunkName: "ProjectSettingsLayout" */ './views/settings/project/projectSettingsLayout').then(
-                    lazyLoad(cb)
-                  )}
-              >
-                <Route component={errorHandler(SettingsProjectProvider)}>
-                  {projectSettingsRoutes}
-                </Route>
-              </Route>
+          <Route
+            name="Project"
+            path=":projectId/"
+            getComponent={(loc, cb) =>
+              import(/*webpackChunkName: "ProjectSettingsLayout" */ './views/settings/project/projectSettingsLayout').then(
+                lazyLoad(cb)
+              )}
+          >
+            <Route component={errorHandler(SettingsProjectProvider)}>
+              {projectSettingsRoutes}
             </Route>
           </Route>
         </Route>
diff --git a/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx b/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx
index f165321a79..a5699b330f 100644
--- a/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx
@@ -103,7 +103,7 @@ class OrganizationTeamsProjectsView extends React.Component {
           <Box ml={2}>
             <Button
               size="small"
-              to={`/settings/organization/${orgId}/project/${project.slug}/settings/`}
+              to={`/settings/organization/${orgId}/project/${project.slug}/`}
             >
               {t('Manage Project')}
             </Button>
diff --git a/src/sentry/static/sentry/app/views/projectPlugins/organizationIntegrations.jsx b/src/sentry/static/sentry/app/views/projectPlugins/organizationIntegrations.jsx
index d70010e8bc..c8e9271196 100644
--- a/src/sentry/static/sentry/app/views/projectPlugins/organizationIntegrations.jsx
+++ b/src/sentry/static/sentry/app/views/projectPlugins/organizationIntegrations.jsx
@@ -47,7 +47,7 @@ export default class OrganizationIntegrations extends AsyncComponent {
         <Box px={2} flex={1}>
           <ProviderName>
             <Link
-              to={`/settings/organization/${orgId}/project/${projectId}/integrations/${provider.key}/`}
+              to={`/settings/${orgId}/${projectId}/integrations/${provider.key}/`}
               css={{color: theme.gray5}}
             >
               {provider.name}
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index a7f55b510b..570f2094c2 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -87,7 +87,7 @@ const ProjectSettings = createReactClass({
     let {orgId, projectId} = this.props.params;
     let hasNewSettings = features.has('new-settings');
     let pathPrefix = hasNewSettings
-      ? `/settings/organization/${orgId}/project/${projectId}`
+      ? `/settings/${orgId}/${projectId}`
       : `/${orgId}/${projectId}/settings`;
     let settingsUrlRoot = pathPrefix;
     let project = this.state.project;
diff --git a/src/sentry/static/sentry/app/views/settings/components/organizationPicker.jsx b/src/sentry/static/sentry/app/views/settings/components/organizationPicker.jsx
deleted file mode 100644
index b716d2247c..0000000000
--- a/src/sentry/static/sentry/app/views/settings/components/organizationPicker.jsx
+++ /dev/null
@@ -1,8 +0,0 @@
-import React from 'react';
-
-class OrganizationPicker extends React.Component {
-  render() {
-    return <div>Select an organization</div>;
-  }
-}
-export default OrganizationPicker;
diff --git a/src/sentry/static/sentry/app/views/settings/components/projectPicker.jsx b/src/sentry/static/sentry/app/views/settings/components/projectPicker.jsx
deleted file mode 100644
index f1fbb2745c..0000000000
--- a/src/sentry/static/sentry/app/views/settings/components/projectPicker.jsx
+++ /dev/null
@@ -1,8 +0,0 @@
-import React from 'react';
-
-class ProjectPicker extends React.Component {
-  render() {
-    return <div>Select a project</div>;
-  }
-}
-export default ProjectPicker;
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/organizationCrumb.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/organizationCrumb.jsx
index 54833dedff..bb28cebdc2 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/organizationCrumb.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/organizationCrumb.jsx
@@ -21,6 +21,8 @@ class OrganizationCrumb extends React.Component {
   render() {
     let {organizations, organization, params, routes, route, ...props} = this.props;
 
+    if (!organization) return null;
+
     let hasMenu = organizations.length > 1;
 
     return (
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
index 9767823ec5..1c3e76362a 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
@@ -58,13 +58,10 @@ class ProjectCrumb extends React.Component {
             ) : (
               <div>
                 <TextLink
-                  to={replaceRouterParams(
-                    '/settings/organization/:orgId/project/:projectId/',
-                    {
-                      orgId: latestOrganization.slug,
-                      projectId: latestProject.slug,
-                    }
-                  )}
+                  to={replaceRouterParams('/settings/:orgId/:projectId/', {
+                    orgId: latestOrganization.slug,
+                    projectId: latestProject.slug,
+                  })}
                 >
                   {latestProject.slug}
                 </TextLink>
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.jsx
index f02c7f3463..3044acb145 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.jsx
@@ -1,50 +1,56 @@
 import {Link} from 'react-router';
-import {withTheme} from 'emotion-theming';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
 import Badge from '../../../components/badge';
 
-const StyledNavItem = withTheme(
-  styled(({active, ...props}) => <Link {...props} />)`
-    display: block;
-    color: ${p => (p.active ? p.theme.gray5 : p.theme.gray2)};
-    font-size: 14px;
-    line-height: 30px;
-    position: relative;
-
-    &:hover,
-    &:focus,
-    &:active {
-      color: ${p => p.theme.gray5};
-    }
+const StyledNavItem = styled(Link)`
+  display: block;
+  color: ${p => p.theme.gray2};
+  font-size: 14px;
+  line-height: 30px;
+  position: relative;
+
+  &.active {
+    color: ${p => p.theme.gray5};
 
     &:before {
-      position: absolute;
-      content: '';
-      display: block;
-      top: 7px;
-      left: -22px;
-      height: 14px;
-      width: 2px;
-      background: ${p => (p.active ? p.theme.purple : 'transparent')};
-      border-radius: 1px;
+      background: ${p => p.theme.purple};
     }
-  `
-);
+  }
+
+  &:hover,
+  &:focus,
+  &:active {
+    color: ${p => p.theme.gray5};
+  }
+
+  &:before {
+    position: absolute;
+    content: '';
+    display: block;
+    top: 7px;
+    left: -22px;
+    height: 14px;
+    width: 2px;
+    background: transparent;
+    border-radius: 1px;
+  }
+`;
 
 class SettingsNavItem extends React.Component {
   static propTypes = {
     label: PropTypes.node.isRequired,
     badge: PropTypes.node,
+    index: PropTypes.bool,
   };
 
   render() {
-    let {badge, label, ...props} = this.props;
+    let {badge, label, index, ...props} = this.props;
 
     return (
-      <StyledNavItem {...props}>
+      <StyledNavItem onlyActiveOnIndex={index} activeClassName="active" {...props}>
         {label} {badge ? <Badge text={badge} /> : null}
       </StyledNavItem>
     );
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsNavigationGroup.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsNavigationGroup.jsx
index 0fb64e68d5..7a2fa22210 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsNavigationGroup.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsNavigationGroup.jsx
@@ -34,12 +34,11 @@ export default class NavigationGroup extends React.Component {
 
   render() {
     let {organization, project, name, items} = this.props;
-    let {router} = this.context;
 
     return (
       <NavSection>
         <SettingsHeading>{name}</SettingsHeading>
-        {items.map(({path, title, show, badge}) => {
+        {items.map(({path, title, index, show, badge}) => {
           if (typeof show === 'function' && !show(this.props)) return null;
           if (typeof show !== 'undefined' && !show) return null;
           let badgeResult = typeof badge === 'function' ? badge(this.props) : null;
@@ -50,10 +49,10 @@ export default class NavigationGroup extends React.Component {
 
           return (
             <SettingsNavItem
-              active={router.isActive(to)}
               key={title}
               to={to}
               label={title}
+              index={index}
               badge={badgeResult}
             />
           );
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsPluginsNavigation.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsPluginsNavigation.jsx
index b3b725bd28..0db64ce55a 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsPluginsNavigation.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsPluginsNavigation.jsx
@@ -35,7 +35,7 @@ class SettingsPluginsNavigation extends React.Component {
     let {organization, project} = this.props;
     let {router} = this.context;
 
-    const pathPrefix = '/settings/organization/:orgId/project/:projectId';
+    const pathPrefix = '/settings/:orgId/:projectId';
     let allIntegrationsPath = replaceRouterParams(`${pathPrefix}/plugins/`, {
       orgId: organization && organization.slug,
       projectId: project && project.slug,
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
index 607e2d118f..7f1601b837 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
@@ -80,10 +80,7 @@ const ProjectItem = createReactClass({
             )}
           </InlineButton>
         </Tooltip>
-        <Link
-          to={`/settings/organization/${org.slug}/project/${project.slug}/`}
-          css={{color: theme.gray3}}
-        >
+        <Link to={`/settings/${org.slug}/${project.slug}/`} css={{color: theme.gray3}}>
           <StyledProjectLabel project={project} organization={this.props.organization} />
         </Link>
       </div>
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsSearch.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsSearch.jsx
index dbcad90507..6c937069c9 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsSearch.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsSearch.jsx
@@ -188,7 +188,7 @@ class SettingsSearch extends React.Component {
                             },
                           })}
                           highlighted={index === highlightedIndex}
-                          key={field.name}
+                          key={`${route}::${field.name}`}
                         >
                           <div>
                             <span>{field.label}</span>
diff --git a/src/sentry/static/sentry/app/views/settings/organization/general/organizationGeneralSettingsView.jsx b/src/sentry/static/sentry/app/views/settings/organization/general/organizationGeneralSettingsView.jsx
index 2b88aff02e..6b7925bf5e 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/general/organizationGeneralSettingsView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/general/organizationGeneralSettingsView.jsx
@@ -102,7 +102,7 @@ const OrganizationGeneralSettingsView = createReactClass({
   handleSave(prevData, data) {
     if (data.slug && data.slug !== prevData.slug) {
       changeOrganizationSlug(prevData, data);
-      browserHistory.replace(`/settings/organization/${data.slug}/settings/`);
+      browserHistory.replace(`/settings/${data.slug}/`);
     } else {
       // TODO(dcramer): this should propagate
       this.setState({data});
diff --git a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
index 408fae755b..7964e6f765 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
@@ -1,14 +1,15 @@
 import {t} from '../../../locale';
 
-const pathPrefix = '/settings/organization/:orgId';
+const pathPrefix = '/settings/:orgId';
 
 const organizationNavigation = [
   {
     name: 'Organization',
     items: [
       {
-        path: `${pathPrefix}/settings/`,
+        path: `${pathPrefix}/`,
         title: t('General Settings'),
+        index: true,
         show: ({access}) => access.has('org:write'),
       },
       {
diff --git a/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx
index ad6172ce3b..d3f52d5e50 100644
--- a/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx
@@ -1,6 +1,6 @@
 import {t} from '../../../locale';
 
-const pathPrefix = '/settings/organization/:orgId/project/:projectId';
+const pathPrefix = '/settings/:orgId/:projectId';
 
 export default function getConfiguration({project}) {
   let plugins = ((project && project.plugins) || []).filter(plugin => plugin.enabled);
@@ -10,7 +10,8 @@ export default function getConfiguration({project}) {
       name: t('Project'),
       items: [
         {
-          path: `${pathPrefix}/settings/`,
+          path: `${pathPrefix}/`,
+          index: true,
           title: t('General Settings'),
         },
         {
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
index 759da79ad7..6d93580c50 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
@@ -76,9 +76,7 @@ const TeamRow = createReactClass({
       <StyledPanelItem>
         <div>
           {access.has('team:write') ? (
-            <Link to={`/settings/organization/${orgId}/teams/${team.slug}`}>
-              #{team.slug}
-            </Link>
+            <Link to={`/settings/${orgId}/teams/${team.slug}/`}>#{team.slug}</Link>
           ) : (
             `#${team.slug}`
           )}
diff --git a/src/sentry/static/sentry/app/views/settings/settingsIndex.jsx b/src/sentry/static/sentry/app/views/settings/settingsIndex.jsx
index df00879f77..bca53520d7 100644
--- a/src/sentry/static/sentry/app/views/settings/settingsIndex.jsx
+++ b/src/sentry/static/sentry/app/views/settings/settingsIndex.jsx
@@ -96,7 +96,7 @@ class SettingsIndex extends React.Component {
     let isSuperuser = user.isSuperuser;
 
     let organizationSettingsUrl =
-      (organization && `/settings/organization/${organization.slug}/`) || '';
+      (organization && `/settings/${organization.slug}/`) || '';
 
     let supportLinkProps = isOnPremise
       ? {href: LINKS.FORUM}
@@ -123,7 +123,7 @@ class SettingsIndex extends React.Component {
                   <h3>{t('Quick links')}:</h3>
                   <ul>
                     <li>
-                      <HomeLink href="/settings/account/security/">
+                      <HomeLink to="/settings/account/security/">
                         {t('Change my password')}
                       </HomeLink>
                     </li>
diff --git a/src/sentry/static/sentry/app/views/settings/settingsLayout.jsx b/src/sentry/static/sentry/app/views/settings/settingsLayout.jsx
index d833b330c1..083931db0a 100644
--- a/src/sentry/static/sentry/app/views/settings/settingsLayout.jsx
+++ b/src/sentry/static/sentry/app/views/settings/settingsLayout.jsx
@@ -5,6 +5,7 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import Alert from '../../components/alert';
+import Footer from '../../components/footer';
 import SettingsBackButton from './components/settingsBackButton';
 import SettingsBreadcrumb from './components/settingsBreadcrumb';
 import SettingsHeader from './components/settingsHeader';
@@ -18,30 +19,29 @@ let StyledAlert = styled(Alert)`
 let NewSettingsWarning = ({location = {}}) => {
   // This translates current URLs back to "old" settings URLs
   // This is so that we can move from new settings back to old settings
-  let projectRegex = /^\/settings\/organization\/([^\/]+)\/project\/([^\/]+)\//;
+  let projectRegex = /^\/settings\/([^\/]+)\/([^\/]+)\//;
   let accountRegex = /^\/settings\/account\/([^\/]+)\//;
+  let orgRegex = /^\/settings\/([^\/]+)\/(settings|projects|teams|stats|members|auth|audit-log|rate-limits|repos|billing|payments|subscription|legal|support)\//;
   let isProject = projectRegex.test(location.pathname);
+  let isOrg = orgRegex.test(location.pathname);
   let isAccount = accountRegex.test(location.pathname);
   let oldLocation;
 
-  if (isProject) {
-    oldLocation = location.pathname.replace(projectRegex, '/$1/$2/settings/');
-  } else if (isAccount) {
+  if (isAccount) {
     oldLocation = location.pathname
       .replace(accountRegex, '/account/settings/$1/')
       .replace('details/', '')
       .replace('settings/close-account/', 'remove/')
       .replace('account/settings/api/', 'api/')
       .replace('auth-tokens/', '');
-  } else {
-    oldLocation = location.pathname.replace(
-      /^\/settings\/organization\//,
-      '/organizations/'
-    );
+  } else if (isOrg) {
+    oldLocation = location.pathname.replace(orgRegex, '/organizations/$1/$2/');
+  } else if (isProject) {
+    oldLocation = location.pathname.replace(projectRegex, '/$1/$2/settings/');
   }
 
   // original org auth view and account settings are django views so we can't use react router navigation
-  let isRouter = !/\/(auth|account)\//.test(location.pathname);
+  let isRouter = !/\/(auth)\//.test(location.pathname);
   let linkProps = {
     href: isRouter ? undefined : oldLocation,
     to: isRouter ? oldLocation : undefined,
@@ -125,6 +125,7 @@ class SettingsLayout extends React.Component {
             <NewSettingsWarning location={this.props.location} />
           </Content>
         </Container>
+        <Footer />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/settings/settingsWrapper.jsx b/src/sentry/static/sentry/app/views/settings/settingsWrapper.jsx
index f8e97b70c3..83ba829435 100644
--- a/src/sentry/static/sentry/app/views/settings/settingsWrapper.jsx
+++ b/src/sentry/static/sentry/app/views/settings/settingsWrapper.jsx
@@ -1,25 +1,21 @@
 import $ from 'jquery';
-import {withTheme} from 'emotion-theming';
 import React from 'react';
 import styled from 'react-emotion';
 
-import Footer from '../../components/footer';
 import ScrollToTop from './components/scrollToTop';
 
-const StyledSettingsWrapper = withTheme(
-  styled.div`
-    font-family: 'Rubik', sans-serif;
-    font-size: 16px;
-    color: ${p => p.theme.gray5};
-    margin: 0 auto;
-    line-height: 1;
+const StyledSettingsWrapper = styled.div`
+  font-family: 'Rubik', sans-serif;
+  font-size: 16px;
+  color: ${p => p.theme.gray5};
+  margin: 0 auto;
+  line-height: 1;
 
-    footer > .container {
-      max-width: ${p => p.theme.settings.containerWidth};
-      padding: ${p => p.theme.grid * 2}px;
-    }
-  `
-);
+  footer > .container {
+    max-width: ${p => p.theme.settings.containerWidth};
+    padding: ${p => p.theme.grid * 2}px;
+  }
+`;
 
 class SettingsWrapper extends React.Component {
   componentWillMount() {
@@ -33,7 +29,6 @@ class SettingsWrapper extends React.Component {
     return (
       <StyledSettingsWrapper>
         <ScrollToTop>{this.props.children}</ScrollToTop>
-        <Footer />
       </StyledSettingsWrapper>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/settings/team/organizationStatOverview.jsx b/src/sentry/static/sentry/app/views/settings/team/organizationStatOverview.jsx
index c71e75f38e..e8e907b7a7 100644
--- a/src/sentry/static/sentry/app/views/settings/team/organizationStatOverview.jsx
+++ b/src/sentry/static/sentry/app/views/settings/team/organizationStatOverview.jsx
@@ -87,10 +87,7 @@ const OrganizationStatOverview = createReactClass({
         <h6 className="nav-header">{t('Rejected in last 24h')}</h6>
         <p className={classNames(rejectedClasses)}>{this.state.totalRejected}</p>
         {access.has('org:read') && (
-          <Link
-            to={`/settings/organization/${this.props.orgId}/stats/`}
-            className="stats-link"
-          >
+          <Link to={`/settings/${this.props.orgId}/stats/`} className="stats-link">
             {t('View all stats')}
           </Link>
         )}
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
index 6e80d4e863..8a3228b0ca 100644
--- a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
@@ -192,9 +192,7 @@ const TeamMembers = createReactClass({
     let menuHeader = (
       <StyledMembersLabel>
         {t('Members')}
-        <StyledCreateMemberLink
-          to={`/settings/organization/${params.orgId}/members/new/`}
-        >
+        <StyledCreateMemberLink to={`/settings/${params.orgId}/members/new/`}>
           {t('Add Member')}
         </StyledCreateMemberLink>
       </StyledMembersLabel>
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx b/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx
index 7d36985255..ac3149f528 100644
--- a/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx
@@ -43,14 +43,10 @@ export default class TeamSettings extends AsyncView {
     if (id === 'slug') {
       addLoadingMessage(t('Slug changed, refreshing page...'));
       window.location.assign(
-        `/settings/organization/${this.props.params.orgId}/teams/${model.getValue(
-          id
-        )}/settings/`
+        `/settings/${this.props.params.orgId}/teams/${model.getValue(id)}/settings/`
       );
       this.props.router.push(
-        `/settings/organization/${this.props.params.orgId}/teams/${model.getValue(
-          id
-        )}/settings/`
+        `/settings/${this.props.params.orgId}/teams/${model.getValue(id)}/settings/`
       );
       this.setState({loading: true});
     }
diff --git a/src/sentry/static/sentry/app/views/teamCreate.jsx b/src/sentry/static/sentry/app/views/teamCreate.jsx
index cd9bd2624c..970e28f3d3 100644
--- a/src/sentry/static/sentry/app/views/teamCreate.jsx
+++ b/src/sentry/static/sentry/app/views/teamCreate.jsx
@@ -20,7 +20,7 @@ export default class TeamCreate extends AsyncView {
     let redirectUrl = `/organizations/${orgId}/projects/new/?team=${data.slug}`;
     if (features.has('new-teams')) {
       // New behavior: redirect to team settings page
-      redirectUrl = `/settings/organization/${orgId}/teams/${data.slug}/`;
+      redirectUrl = `/settings/${orgId}/teams/${data.slug}/`;
     }
     window.location.assign(redirectUrl);
   };
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 0bbe25bdb2..19c2df5b5e 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -355,8 +355,7 @@ urlpatterns += patterns(
     url(r'^accept-transfer/$', AcceptProjectTransferView.as_view(),
         name='sentry-accept-project-transfer'),
 
-    url(r'^settings/$', react_page_view),
-    url(r'^settings/account/$', react_page_view),
+    url(r'^settings/', react_page_view),
 
     # Organizations
     url(r'^(?P<organization_slug>[\w_-]+)/$',
diff --git a/tests/acceptance/test_project_general_settings.py b/tests/acceptance/test_project_general_settings.py
index 7d75e6f4c0..27f7ff72a9 100644
--- a/tests/acceptance/test_project_general_settings.py
+++ b/tests/acceptance/test_project_general_settings.py
@@ -27,7 +27,7 @@ class ProjectGeneralSettingsTest(AcceptanceTestCase):
         self.login_as(self.user)
 
     def test_saved_searches(self):
-        path = '/{}/{}/settings/settings/'.format(self.org.slug, self.project.slug)
+        path = '/{}/{}/settings/'.format(self.org.slug, self.project.slug)
         self.browser.get(path)
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot('project settings - general settings')
diff --git a/tests/js/spec/components/__snapshots__/settingsLayout.spec.jsx.snap b/tests/js/spec/components/__snapshots__/settingsLayout.spec.jsx.snap
index c56a37fa6f..e627818677 100644
--- a/tests/js/spec/components/__snapshots__/settingsLayout.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/settingsLayout.spec.jsx.snap
@@ -32,5 +32,6 @@ exports[`SettingsLayout renders 1`] = `
       <NewSettingsWarning />
     </Content>
   </Container>
+  <Footer />
 </div>
 `;
diff --git a/tests/js/spec/utils/recreateRoute.spec.jsx b/tests/js/spec/utils/recreateRoute.spec.jsx
index 224efa0e60..a616589b4f 100644
--- a/tests/js/spec/utils/recreateRoute.spec.jsx
+++ b/tests/js/spec/utils/recreateRoute.spec.jsx
@@ -3,8 +3,7 @@ import recreateRoute from 'app/utils/recreateRoute';
 const routes = [
   {path: '/', childRoutes: []},
   {newnew: true, path: '/settings/', name: 'Settings'},
-  {name: 'Organizations', path: 'organization/'},
-  {path: ':orgId/', childRoutes: []},
+  {name: 'Organizations', path: ':orgId/', childRoutes: []},
   {childRoutes: []},
   {path: 'api-keys/', name: 'API Key'},
 ];
@@ -12,10 +11,8 @@ const routes = [
 const projectRoutes = [
   {path: '/', childRoutes: []},
   {newnew: true, path: '/settings/', name: 'Settings', indexRoute: {}, childRoutes: []},
-  {path: 'organization/', indexRoute: {}, childRoutes: []},
-  {name: 'Organization', path: ':orgId/', childRoutes: []},
-  {path: 'project/', indexRoute: {}, childRoutes: []},
-  {name: 'Project', path: ':projectId/', childRoutes: []},
+  {name: 'Organizations', path: ':orgId/', childRoutes: []},
+  {name: 'Projects', path: ':projectId/', childRoutes: []},
   {name: 'Alerts', path: 'alerts/'},
 ];
 
@@ -26,30 +23,30 @@ const params = {
 
 describe('recreateRoute', function() {
   it('returns correct path to a route object', function() {
-    expect(recreateRoute(routes[5], {routes, params})).toBe(
-      '/settings/organization/org-slug/api-keys/'
+    expect(recreateRoute(routes[4], {routes, params})).toBe(
+      '/settings/org-slug/api-keys/'
     );
 
-    expect(recreateRoute(projectRoutes[6], {routes: projectRoutes, params})).toBe(
-      '/settings/organization/org-slug/project/project-slug/alerts/'
+    expect(recreateRoute(projectRoutes[4], {routes: projectRoutes, params})).toBe(
+      '/settings/org-slug/project-slug/alerts/'
     );
   });
 
   it('returns correct path to a string (at the end of the routes)', function() {
     expect(recreateRoute('test/', {routes, params})).toBe(
-      '/settings/organization/org-slug/api-keys/test/'
+      '/settings/org-slug/api-keys/test/'
     );
   });
 
   it('returns correct path to a string after the 2nd to last route', function() {
     expect(recreateRoute('test/', {routes, params, stepBack: -2})).toBe(
-      '/settings/organization/org-slug/test/'
+      '/settings/org-slug/test/'
     );
   });
 
   it('switches to new org but keeps current route', function() {
-    expect(recreateRoute(routes[5], {routes, params: {orgId: 'new-org'}})).toBe(
-      '/settings/organization/new-org/api-keys/'
+    expect(recreateRoute(routes[4], {routes, params: {orgId: 'new-org'}})).toBe(
+      '/settings/new-org/api-keys/'
     );
   });
 });
diff --git a/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
index ea35d86b38..ba2f48836f 100644
--- a/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
@@ -494,13 +494,13 @@ exports[`OrganizationProjectsView render() Should render the projects in the sto
                                     </Tooltip>
                                     <Link
                                       className="glamor-35"
-                                      to="/settings/organization/org-slug/project/project-slug/"
+                                      to="/settings/org-slug/project-slug/"
                                     >
                                       <Link
                                         className="glamor-35"
                                         onlyActiveOnIndex={false}
                                         style={Object {}}
-                                        to="/settings/organization/org-slug/project/project-slug/"
+                                        to="/settings/org-slug/project-slug/"
                                       >
                                         <a
                                           className="glamor-35"
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index 4a0b4df9fe..79c2fb1d74 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -425,13 +425,13 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                 </Tooltip>
                                 <Link
                                   className="glamor-35"
-                                  to="/settings/organization/org-slug/project/project-slug/"
+                                  to="/settings/org-slug/project-slug/"
                                 >
                                   <Link
                                     className="glamor-35"
                                     onlyActiveOnIndex={false}
                                     style={Object {}}
-                                    to="/settings/organization/org-slug/project/project-slug/"
+                                    to="/settings/org-slug/project-slug/"
                                   >
                                     <a
                                       className="glamor-35"
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamsProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamsProjects.spec.jsx.snap
index f9bb338d6c..d19e87a6bf 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamsProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamsProjects.spec.jsx.snap
@@ -344,7 +344,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                     <Button
                                       disabled={false}
                                       size="small"
-                                      to="/settings/organization/org-slug/project/project-slug-2/settings/"
+                                      to="/settings/organization/org-slug/project/project-slug-2/"
                                     >
                                       <Link
                                         className="button button-default button-sm"
@@ -353,7 +353,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                         onlyActiveOnIndex={false}
                                         role="button"
                                         style={Object {}}
-                                        to="/settings/organization/org-slug/project/project-slug-2/settings/"
+                                        to="/settings/organization/org-slug/project/project-slug-2/"
                                       >
                                         <a
                                           className="button button-default button-sm"
diff --git a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
index d17e742d10..a28e110180 100644
--- a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
@@ -22,7 +22,7 @@ exports[`TeamMembers render() renders 1`] = `
           <StyledMembersLabel>
             Members
             <StyledCreateMemberLink
-              to="/settings/organization/org-slug/members/new/"
+              to="/settings/org-slug/members/new/"
             >
               Add Member
             </StyledCreateMemberLink>
diff --git a/tests/js/spec/views/organizationGeneralSettingsView.spec.jsx b/tests/js/spec/views/organizationGeneralSettingsView.spec.jsx
index e8fcbb7569..9770ecaa0d 100644
--- a/tests/js/spec/views/organizationGeneralSettingsView.spec.jsx
+++ b/tests/js/spec/views/organizationGeneralSettingsView.spec.jsx
@@ -103,9 +103,7 @@ describe('OrganizationGeneralSettingsView', function() {
 
       setTimeout(() => {
         // Not sure why this needs to be async, but it does
-        expect(browserHistory.replace).toHaveBeenCalledWith(
-          '/settings/organization/new-slug/settings/'
-        );
+        expect(browserHistory.replace).toHaveBeenCalledWith('/settings/new-slug/');
         done();
       });
     });
diff --git a/tests/js/spec/views/teamCreate.spec.jsx b/tests/js/spec/views/teamCreate.spec.jsx
index 84396e33ae..e404297090 100644
--- a/tests/js/spec/views/teamCreate.spec.jsx
+++ b/tests/js/spec/views/teamCreate.spec.jsx
@@ -64,9 +64,7 @@ describe('TeamCreate', function() {
       wrapper.instance().onSubmitSuccess({
         slug: 'new-team',
       });
-      expect(locationAssignMock).toBeCalledWith(
-        '/settings/organization/org/teams/new-team/'
-      );
+      expect(locationAssignMock).toBeCalledWith('/settings/org/teams/new-team/');
     });
   });
 });
diff --git a/tests/js/spec/views/teamSettings.spec.jsx b/tests/js/spec/views/teamSettings.spec.jsx
index 4c92b4c55c..a544579f10 100644
--- a/tests/js/spec/views/teamSettings.spec.jsx
+++ b/tests/js/spec/views/teamSettings.spec.jsx
@@ -112,9 +112,7 @@ describe('NewTeamSettings', function() {
 
     setTimeout(() => {
       expect(
-        window.location.assign.calledWith(
-          '/settings/organization/org/teams/new-slug/settings/'
-        )
+        window.location.assign.calledWith('/settings/org/teams/new-slug/settings/')
       ).toBe(true);
       done();
     }, 1);
