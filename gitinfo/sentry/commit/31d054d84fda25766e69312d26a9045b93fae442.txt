commit 31d054d84fda25766e69312d26a9045b93fae442
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Jun 20 11:13:22 2019 -0700

    ref(ui): Fix strict inequality (#13755)
    
    Previously this was only done for equality

diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index 9b0ef266d0..2692b71bef 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -52,7 +52,10 @@ class ContextChunk extends React.Component {
   }
 
   componentDidUpdate(prevProps, prevState) {
-    if (prevProps.group.id != this.props.group.id || prevProps.type != this.props.type) {
+    if (
+      prevProps.group.id !== this.props.group.id ||
+      prevProps.type !== this.props.type
+    ) {
       this.syncPlugin();
     }
   }
diff --git a/src/sentry/static/sentry/app/components/events/errors.jsx b/src/sentry/static/sentry/app/components/events/errors.jsx
index 0345d4fcb4..af8ab8a8d0 100644
--- a/src/sentry/static/sentry/app/components/events/errors.jsx
+++ b/src/sentry/static/sentry/app/components/events/errors.jsx
@@ -21,7 +21,7 @@ class EventErrors extends React.Component {
   }
 
   shouldComponentUpdate(nextProps, nextState) {
-    if (this.state.isOpen != nextState.isOpen) {
+    if (this.state.isOpen !== nextState.isOpen) {
       return true;
     }
     return this.props.event.id !== nextProps.event.id;
diff --git a/src/sentry/static/sentry/app/components/events/eventRow.jsx b/src/sentry/static/sentry/app/components/events/eventRow.jsx
index 9223c3e18c..63c592351b 100644
--- a/src/sentry/static/sentry/app/components/events/eventRow.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventRow.jsx
@@ -20,7 +20,7 @@ class EventRow extends React.Component {
   }
 
   componentWillReceiveProps(nextProps) {
-    if (nextProps.id != this.props.id) {
+    if (nextProps.id !== this.props.id) {
       this.setState({
         event: EventStore.get(this.props.id),
       });
diff --git a/src/sentry/static/sentry/app/components/events/sdkUpdates.jsx b/src/sentry/static/sentry/app/components/events/sdkUpdates.jsx
index 9d011a316c..a7850ae16e 100644
--- a/src/sentry/static/sentry/app/components/events/sdkUpdates.jsx
+++ b/src/sentry/static/sentry/app/components/events/sdkUpdates.jsx
@@ -86,7 +86,7 @@ class EventSdkUpdateSuggestion extends React.Component {
     const {event, suggestion} = this.props;
     const title = this.getSuggestionTitle();
 
-    if (suggestion.enables.length == 0) {
+    if (suggestion.enables.length === 0) {
       return title;
     }
 
diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index 07dcb3221d..7e52c9e5e1 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -58,7 +58,7 @@ export default class FormField extends React.PureComponent {
 
   componentWillReceiveProps(nextProps, nextContext) {
     const newError = this.getError(nextProps, nextContext);
-    if (newError != this.state.error) {
+    if (newError !== this.state.error) {
       this.setState({error: newError});
     }
     if (this.props.value !== nextProps.value || defined(nextContext.form)) {
diff --git a/src/sentry/static/sentry/app/components/forms/rangeField.jsx b/src/sentry/static/sentry/app/components/forms/rangeField.jsx
index 7c58cc84e3..7a04ea2d32 100644
--- a/src/sentry/static/sentry/app/components/forms/rangeField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/rangeField.jsx
@@ -7,7 +7,7 @@ import InputField from 'app/components/forms/inputField';
 export default class RangeField extends InputField {
   static formatMinutes = value => {
     value = value / 60;
-    return `${value} minute${value != 1 ? 's' : ''}`;
+    return `${value} minute${value !== 1 ? 's' : ''}`;
   };
 
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx b/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx
index e2cd0d24f4..1856546e8e 100644
--- a/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx
@@ -35,7 +35,7 @@ export default class SelectCreatableField extends SelectField {
 
   componentWillReceiveProps(nextProps, nextContext) {
     const newError = this.getError(nextProps, nextContext);
-    if (newError != this.state.error) {
+    if (newError !== this.state.error) {
       this.setState({error: newError});
     }
     if (this.props.value !== nextProps.value || defined(nextContext.form)) {
diff --git a/src/sentry/static/sentry/app/components/forms/selectField.jsx b/src/sentry/static/sentry/app/components/forms/selectField.jsx
index 4343246708..7b3731026b 100644
--- a/src/sentry/static/sentry/app/components/forms/selectField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectField.jsx
@@ -26,7 +26,7 @@ export default class SelectField extends FormField {
 
   componentWillReceiveProps(nextProps, nextContext) {
     const newError = this.getError(nextProps, nextContext);
-    if (newError != this.state.error) {
+    if (newError !== this.state.error) {
       this.setState({error: newError});
     }
     if (this.props.value !== nextProps.value || defined(nextContext.form)) {
diff --git a/src/sentry/static/sentry/app/components/issueList.jsx b/src/sentry/static/sentry/app/components/issueList.jsx
index c079b82eac..d517b49484 100644
--- a/src/sentry/static/sentry/app/components/issueList.jsx
+++ b/src/sentry/static/sentry/app/components/issueList.jsx
@@ -59,8 +59,8 @@ const IssueList = createReactClass({
     }
 
     if (
-      location.pathname != nextLocation.pathname ||
-      location.search != nextLocation.search
+      location.pathname !== nextLocation.pathname ||
+      location.search !== nextLocation.search
     ) {
       this.remountComponent();
     }
diff --git a/src/sentry/static/sentry/app/components/issues/compactIssue.jsx b/src/sentry/static/sentry/app/components/issues/compactIssue.jsx
index 560f69b181..70f2d02e35 100644
--- a/src/sentry/static/sentry/app/components/issues/compactIssue.jsx
+++ b/src/sentry/static/sentry/app/components/issues/compactIssue.jsx
@@ -134,7 +134,7 @@ const CompactIssue = createReactClass({
   },
 
   componentWillReceiveProps(nextProps) {
-    if (nextProps.id != this.props.id) {
+    if (nextProps.id !== this.props.id) {
       this.setState({
         issue: GroupStore.get(this.props.id),
       });
diff --git a/src/sentry/static/sentry/app/components/placeholder.jsx b/src/sentry/static/sentry/app/components/placeholder.jsx
index 62bb03917c..ee79079a49 100644
--- a/src/sentry/static/sentry/app/components/placeholder.jsx
+++ b/src/sentry/static/sentry/app/components/placeholder.jsx
@@ -16,7 +16,7 @@ const Placeholder = styled(props => {
   background-color: ${p => p.theme.placeholderBackground};
   width: ${p => p.width};
   height: ${p => p.height};
-  ${p => (p.shape == 'circle' ? 'border-radius: 100%;' : '')}
+  ${p => (p.shape === 'circle' ? 'border-radius: 100%;' : '')}
   ${p => (p.bottomGutter > 0 ? `margin-bottom: ${space(p.bottomGutter)};` : '')}
 `;
 
diff --git a/src/sentry/static/sentry/app/components/pluginConfig.jsx b/src/sentry/static/sentry/app/components/pluginConfig.jsx
index 20f6616205..9d6200ad18 100644
--- a/src/sentry/static/sentry/app/components/pluginConfig.jsx
+++ b/src/sentry/static/sentry/app/components/pluginConfig.jsx
@@ -139,7 +139,7 @@ const PluginConfig = createReactClass({
               </strong>
             </div>
           ) : null}
-          {this.state.testResults != '' ? (
+          {this.state.testResults !== '' ? (
             <div className="alert alert-block alert-warning">
               <strong>Test Results: </strong>
               <p>{this.state.testResults}</p>
diff --git a/src/sentry/static/sentry/app/components/spreadLayout.jsx b/src/sentry/static/sentry/app/components/spreadLayout.jsx
index 4e4862a979..5fd01fbc81 100644
--- a/src/sentry/static/sentry/app/components/spreadLayout.jsx
+++ b/src/sentry/static/sentry/app/components/spreadLayout.jsx
@@ -4,7 +4,7 @@ import classNames from 'classnames';
 
 // Flexbox container whose children will have `justify-content: space-between`
 //
-// Intended for children.length == 2
+// Intended for children.length === 2
 // "responsive" will change flex-direction to be column on small widths
 const SpreadLayout = ({children, className, responsive, center, ...props}) => {
   const cx = classNames('spread-layout', className, {
diff --git a/src/sentry/static/sentry/app/components/stream/group.jsx b/src/sentry/static/sentry/app/components/stream/group.jsx
index 4e0e559c52..28925337c8 100644
--- a/src/sentry/static/sentry/app/components/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/stream/group.jsx
@@ -47,7 +47,7 @@ const StreamGroup = createReactClass({
   },
 
   componentWillReceiveProps(nextProps) {
-    if (nextProps.id != this.props.id) {
+    if (nextProps.id !== this.props.id) {
       this.setState({
         data: GroupStore.get(this.props.id),
       });
diff --git a/src/sentry/static/sentry/app/components/stream/groupCheckBox.jsx b/src/sentry/static/sentry/app/components/stream/groupCheckBox.jsx
index 85477acc8d..99996f8fbb 100644
--- a/src/sentry/static/sentry/app/components/stream/groupCheckBox.jsx
+++ b/src/sentry/static/sentry/app/components/stream/groupCheckBox.jsx
@@ -22,7 +22,7 @@ const GroupCheckBox = createReactClass({
   },
 
   componentWillReceiveProps(nextProps) {
-    if (nextProps.id != this.props.id) {
+    if (nextProps.id !== this.props.id) {
       this.setState({
         isSelected: SelectedGroupStore.isSelected(nextProps.id),
       });
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 7eacc4b1df..0dda3c1a3c 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -11,7 +11,7 @@ function arrayIsEqual(arr, other, deep) {
   }
 
   // compare lengths - can save a lot of time
-  if (arr.length != other.length) {
+  if (arr.length !== other.length) {
     return false;
   }
 
@@ -46,7 +46,7 @@ function objectMatchesSubset(obj, other, deep) {
 
   if (deep !== true) {
     for (k in other) {
-      if (obj[k] != other[k]) {
+      if (obj[k] !== other[k]) {
         return false;
       }
     }
diff --git a/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx b/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx
index d5702c2842..05fc441a73 100644
--- a/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx
+++ b/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx
@@ -13,7 +13,7 @@ class PendingChangeQueue {
 
   remove(changeId, itemId) {
     this.changes = this.changes.filter(
-      change => change[0] != changeId || change[1] != itemId
+      change => change[0] !== changeId || change[1] !== itemId
     );
   }
 
diff --git a/src/sentry/static/sentry/app/utils/withSavedSearches.jsx b/src/sentry/static/sentry/app/utils/withSavedSearches.jsx
index aa3ef11186..404a192f4c 100644
--- a/src/sentry/static/sentry/app/utils/withSavedSearches.jsx
+++ b/src/sentry/static/sentry/app/utils/withSavedSearches.jsx
@@ -36,7 +36,7 @@ const withSavedSearches = WrappedComponent =>
         // If there's no direct saved search being requested (via URL route)
         // *AND* there's no query in URL, then check if there is pinned search
         //
-        // Note: Don't use pinned searches when there is an empty query (query == empty string)
+        // Note: Don't use pinned searches when there is an empty query (query === empty string)
         if (!savedSearch && typeof location.query.query === 'undefined') {
           const pin = savedSearches.find(search => search.isPinned);
           savedSearch = pin ? pin : null;
diff --git a/src/sentry/static/sentry/app/views/installWizard.jsx b/src/sentry/static/sentry/app/views/installWizard.jsx
index c636367b73..e86fbbd412 100644
--- a/src/sentry/static/sentry/app/views/installWizard.jsx
+++ b/src/sentry/static/sentry/app/views/installWizard.jsx
@@ -72,7 +72,7 @@ export default class InstallWizard extends AsyncView {
       if (
         // XXX(dcramer): we need the user to explicitly choose beacon.anonymous
         // vs using an implied default so effectively this is binding
-        optionName != 'beacon.anonymous' &&
+        optionName !== 'beacon.anonymous' &&
         // XXX(byk): if we don't have a set value but have a default value filled
         // instead, from the client, set it on the data so it is sent to the server
         !option.field.isSet &&
diff --git a/src/sentry/static/sentry/app/views/organizationActivity/activityFeed.jsx b/src/sentry/static/sentry/app/views/organizationActivity/activityFeed.jsx
index ac54497afc..2ba35e0bb9 100644
--- a/src/sentry/static/sentry/app/views/organizationActivity/activityFeed.jsx
+++ b/src/sentry/static/sentry/app/views/organizationActivity/activityFeed.jsx
@@ -46,8 +46,8 @@ class ActivityFeed extends React.Component {
     const location = this.props.location;
     const nextLocation = nextProps.location;
     if (
-      location.pathname != nextLocation.pathname ||
-      location.search != nextLocation.search
+      location.pathname !== nextLocation.pathname ||
+      location.search !== nextLocation.search
     ) {
       this.setState({
         itemList: [],
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/widgetChart.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/widgetChart.jsx
index 079161d9d4..141c530a92 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/widgetChart.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/widgetChart.jsx
@@ -36,7 +36,7 @@ class WidgetChart extends React.Component {
       return false;
     }
 
-    // It's not a big deal to re-render if this.prop.results == nextProps.results == []
+    // It's not a big deal to re-render if this.prop.results === nextProps.results === []
     const isDataEqual =
       this.props.results.length &&
       nextProps.results.length &&
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index 516bad6637..775fac58c4 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -224,7 +224,7 @@ export default class OrganizationDiscover extends React.Component {
         if (shouldRedirect) {
           browserHistory.push({
             pathname: `/organizations/${organization.slug}/discover/`,
-            // This is kind of a hack, but this causes a re-render in result where this.props == nextProps after
+            // This is kind of a hack, but this causes a re-render in result where this.props === nextProps after
             // a query has completed... we don't preserve `state` when we update browser history, so
             // if this is present in `Result.shouldComponentUpdate` then should perform a render
             state: 'fetching',
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
index 0c1a31dd1e..578a8b2758 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
@@ -57,7 +57,7 @@ class ResultTable extends React.Component {
     const isNumberCol =
       !isSpacingCol && ['number', 'integer'].includes(meta[columnIndex].type);
 
-    const align = isNumberCol && colName != 'issue.id' ? 'right' : 'left';
+    const align = isNumberCol && colName !== 'issue.id' ? 'right' : 'left';
 
     if (rowIndex === 0) {
       return (
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx
index 325581a188..1892d17e8b 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx
@@ -107,7 +107,7 @@ const GroupDetails = createReactClass({
         // rather than blindly pattern matching like we do here. Unfortunately,
         // `formatPattern` isn't actually exported until `react-router` 2.0.1:
         // https://github.com/reactjs/react-router/blob/v2.0.1/modules/index.js#L25
-        if (this.props.params.groupId != data.id) {
+        if (this.props.params.groupId !== data.id) {
           const location = this.props.location;
           browserHistory.push(
             location.pathname.replace(
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx
index 3a793bb33c..02e5146f4b 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx
@@ -133,7 +133,7 @@ class GroupEventDetails extends React.Component {
                 location={location}
               />
             )}
-            {group.status != 'unresolved' && (
+            {group.status !== 'unresolved' && (
               <div className="issue-status">
                 {group.status === 'ignored' && (
                   <MutedBox statusDetails={group.statusDetails} />
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegration.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegration.jsx
index 12c3e9f2ee..4667304bcb 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegration.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegration.jsx
@@ -24,9 +24,9 @@ export default class AddIntegration extends React.Component {
   }
 
   computeCenteredWindow(width, height) {
-    const screenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
+    const screenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;
 
-    const screenTop = window.screenTop != undefined ? window.screenTop : screen.top;
+    const screenTop = window.screenTop !== undefined ? window.screenTop : screen.top;
 
     const innerWidth = window.innerWidth
       ? window.innerWidth
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallations.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallations.jsx
index 130d7c0d45..9f47a50a8a 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallations.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallations.jsx
@@ -61,7 +61,7 @@ class SentryAppInstallations extends React.Component {
   uninstall = install => {
     const {api} = this.props;
     const origInstalls = [...this.state.installs];
-    const installs = this.state.installs.filter(i => install.uuid != i.uuid);
+    const installs = this.state.installs.filter(i => install.uuid !== i.uuid);
 
     uninstallSentryApp(api, install).then(
       () => this.setState({installs}),
diff --git a/src/sentry/static/sentry/app/views/projectChooser.jsx b/src/sentry/static/sentry/app/views/projectChooser.jsx
index 20ceda205a..5b6576ec75 100644
--- a/src/sentry/static/sentry/app/views/projectChooser.jsx
+++ b/src/sentry/static/sentry/app/views/projectChooser.jsx
@@ -49,7 +49,7 @@ class ProjectChooser extends React.Component {
       task_inst => task_inst.task === parseInt(this.props.location.query.task, 10)
     )[0];
 
-    // Expect onboarding=1 and task=<task id> parameters and task.featureLocation == 'project'
+    // Expect onboarding=1 and task=<task id> parameters and task.featureLocation === 'project'
     // TODO throw up report dialog if not true
     if (!task || task.featureLocation !== 'project') {
       throw new Error('User arrived on project chooser without a valid task id.');
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.jsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.jsx
index 3fd1a943a9..3c75526ed2 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.jsx
@@ -33,7 +33,7 @@ import SelectField from 'app/views/settings/components/forms/selectField';
  *    This components displays things per Resource. Meaning the User selects
  *    "Read", "Read & Write", or "Admin" for Project or Organization or etc.
  *
- *    == Scopes to Permissions
+ *    === Scopes to Permissions
  *
  *    The first thing this component does on instantiation is take the list of API
  *    Scopes passed via `props` and converts them to "Permissions.
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectServiceHookDetails.jsx b/src/sentry/static/sentry/app/views/settings/project/projectServiceHookDetails.jsx
index 4e15e9c4e6..134691c9e7 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectServiceHookDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectServiceHookDetails.jsx
@@ -135,7 +135,7 @@ export default class ProjectServiceHookDetails extends AsyncView {
           hookId={hookId}
           initialData={{
             ...hook,
-            isActive: hook.status != 'disabled',
+            isActive: hook.status !== 'disabled',
           }}
         />
         <Panel>
diff --git a/tests/js/spec/components/charts/tableChart/index.spec.jsx b/tests/js/spec/components/charts/tableChart/index.spec.jsx
index c0d3a737cd..8e2e068d56 100644
--- a/tests/js/spec/components/charts/tableChart/index.spec.jsx
+++ b/tests/js/spec/components/charts/tableChart/index.spec.jsx
@@ -171,7 +171,7 @@ describe('TableChart', function() {
       />
     );
 
-    // table headers == Number of data columns + total column
+    // table headers === Number of data columns + total column
     expect(renderTableHeaderCell).toHaveBeenCalledTimes(5);
     expect(renderTableHeaderCell).toHaveBeenLastCalledWith(
       expect.objectContaining({
diff --git a/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx b/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx
index 146d9ad435..8122068cd0 100644
--- a/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx
@@ -75,7 +75,7 @@ describe('Condition', function() {
       expect(options[7]).toEqual({value: 'col3 IS NOT NULL', label: 'col3 IS NOT NULL'});
     });
 
-    it('limits operators to = and != for array fields', function() {
+    it('limits operators to = and !== for array fields', function() {
       wrapper.setState({inputValue: 'error.type'});
       const options = wrapper.instance().filterOptions([]);
       expect(options).toHaveLength(4);
diff --git a/tests/js/spec/views/organizationStream/overview.spec.jsx b/tests/js/spec/views/organizationStream/overview.spec.jsx
index 6ae86a0c3d..e95edb97ef 100644
--- a/tests/js/spec/views/organizationStream/overview.spec.jsx
+++ b/tests/js/spec/views/organizationStream/overview.spec.jsx
@@ -975,7 +975,7 @@ describe('OrganizationStream', function() {
         .first()
         .simulate('click');
 
-      // cursor is undefined because "prev" cursor is == initial "next" cursor
+      // cursor is undefined because "prev" cursor is === initial "next" cursor
       expect(browserHistory.push).toHaveBeenLastCalledWith({
         pathname: '/organizations/org-slug/issues/',
         query: {
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx
index 32ee2f356e..f62d04dd25 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx
@@ -39,7 +39,7 @@ describe('Sentry Application Details', function() {
       // new app starts off with no scopes selected
       expect(wrapper.find('PermissionsObserver').prop('scopes')).toEqual([]);
       expect(
-        wrapper.find('PanelHeader').findWhere(h => h.text() == 'Permissions')
+        wrapper.find('PanelHeader').findWhere(h => h.text() === 'Permissions')
       ).toBeDefined();
     });
 
