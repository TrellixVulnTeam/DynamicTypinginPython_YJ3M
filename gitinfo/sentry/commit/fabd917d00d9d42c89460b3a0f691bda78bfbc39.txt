commit fabd917d00d9d42c89460b3a0f691bda78bfbc39
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 1 15:31:43 2015 -0700

    Create activity entries for releases
    
    Conflicts:
            src/sentry/event_manager.py
            src/sentry/templatetags/sentry_activity.py

diff --git a/src/sentry/api/endpoints/project_releases.py b/src/sentry/api/endpoints/project_releases.py
index 8c5b5867bb..ddb297ecdf 100644
--- a/src/sentry/api/endpoints/project_releases.py
+++ b/src/sentry/api/endpoints/project_releases.py
@@ -8,7 +8,7 @@ from rest_framework.response import Response
 from sentry.api.base import DocSection
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.serializers import serialize
-from sentry.models import Release
+from sentry.models import Activity, Release
 
 
 class ReleaseSerializer(serializers.Serializer):
@@ -74,6 +74,14 @@ class ProjectReleasesEndpoint(ProjectEndpoint):
                     return Response({
                         'detail': 'Release with version already exists'
                     }, status=400)
+                else:
+                    Activity.objects.create(
+                        type=Activity.RELEASE,
+                        project=project,
+                        ident=result['version'],
+                        data={'version': result['version']},
+                        datetime=release.date_released,
+                    )
 
             return Response(serialize(release, request.user), status=201)
         return Response(serializer.errors, status=400)
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index cd11a2e4d9..2a98fdaea7 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -26,7 +26,8 @@ from sentry.constants import (
 )
 from sentry.interfaces.base import get_interface
 from sentry.models import (
-    Event, EventMapping, Group, GroupHash, GroupStatus, Project, Release
+    Activity, Event, EventMapping, Group, GroupHash, GroupStatus, Project,
+    Release
 )
 from sentry.plugins import plugins
 from sentry.signals import regression_signal
@@ -335,10 +336,21 @@ class EventManager(object):
         })
 
         if release:
-            group_kwargs['first_release'] = Release.objects.get_or_create(
+            group_kwargs['first_release'], created = Release.objects.get_or_create(
                 project=project,
                 version=release,
-            )[0]
+                defaults={
+                    'date_created': date,
+                },
+            )
+
+            Activity.objects.create(
+                type=Activity.RELEASE,
+                project=project,
+                ident=release,
+                data={'version': release},
+                datetime=date,
+            )
 
         group, is_new, is_regression, is_sample = safe_execute(
             self._save_aggregate,
diff --git a/src/sentry/plugins/interfaces/releasehook.py b/src/sentry/plugins/interfaces/releasehook.py
index a8eaf163d0..c471f63af8 100644
--- a/src/sentry/plugins/interfaces/releasehook.py
+++ b/src/sentry/plugins/interfaces/releasehook.py
@@ -12,7 +12,7 @@ __all__ = ['ReleaseHook']
 
 from django.utils import timezone
 
-from sentry.models import Release
+from sentry.models import Activity, Release
 
 
 class ReleaseHook(object):
@@ -34,6 +34,13 @@ class ReleaseHook(object):
             project=self.project,
             values=values,
         )
+        Activity.objects.create(
+            type=Activity.RELEASE,
+            project=self.project,
+            ident=version,
+            data={'version': version},
+            datetime=values['date_released'],
+        )
 
     def handle(self, request):
         raise NotImplementedError
diff --git a/src/sentry/templatetags/sentry_activity.py b/src/sentry/templatetags/sentry_activity.py
index 15c3cd9ad9..271591ec3f 100644
--- a/src/sentry/templatetags/sentry_activity.py
+++ b/src/sentry/templatetags/sentry_activity.py
@@ -30,6 +30,7 @@ ACTIVITY_ACTION_STRINGS = {
     Activity.SET_REGRESSION: 'marked this event as a regression',
     Activity.CREATE_ISSUE: u'created an issue on {provider:s} titled <a href="{location:s}">{title:s}</a>',
     Activity.FIRST_SEEN: 'first saw this event',
+    Activity.RELEASE: 'saw a new release: {version:s}',
 }
 
 
