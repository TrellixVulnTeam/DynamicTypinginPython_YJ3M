commit e7e98d12b06b533f2139050c06b88edc16751e95
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Dec 5 14:04:48 2019 -0800

    ref: Deprecate legacy event methods (#15786)
    
    event.error() -> event.title
    event.get_tags() -> event.tags

diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index 0425deab27..86c33cb7a7 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -2,7 +2,6 @@ from __future__ import absolute_import
 
 import six
 import string
-import warnings
 import pytz
 
 from collections import OrderedDict
@@ -279,12 +278,8 @@ class EventCommon(object):
             # vs ((tag, foo), (tag, bar))
             return []
 
-    # For compatibility, still used by plugins.
-    def get_tags(self):
-        return self.tags
-
     def get_tag(self, key):
-        for t, v in self.get_tags():
+        for t, v in self.tags:
             if t == key:
                 return v
         return None
@@ -373,18 +368,6 @@ class EventCommon(object):
         ref = self.data.get_ref(self)
         self.data.bind_data(node_data, ref=ref)
 
-    # ============================================
-    # DEPRECATED
-    # ============================================
-
-    # TODO: This is currently used in the Twilio and Flowdock plugins
-    # Remove this after usage has been removed there.
-    def error(self):  # TODO why is this not a property?
-        warnings.warn("Event.error is deprecated, use Event.title", DeprecationWarning)
-        return self.title
-
-    error.short_description = _("error")
-
 
 class SnubaEvent(EventCommon):
     """
diff --git a/src/sentry_plugins/pagerduty/plugin.py b/src/sentry_plugins/pagerduty/plugin.py
index 78a36cdfbc..aa97f7c03c 100644
--- a/src/sentry_plugins/pagerduty/plugin.py
+++ b/src/sentry_plugins/pagerduty/plugin.py
@@ -51,7 +51,7 @@ class PagerDutyPlugin(CorePluginMixin, NotifyPlugin):
 
         description = event.get_legacy_message()[:1024]
 
-        tags = dict(event.get_tags())
+        tags = dict(event.tags)
         details = {
             "event_id": event.event_id,
             "project": group.project.name,
diff --git a/src/sentry_plugins/pushover/plugin.py b/src/sentry_plugins/pushover/plugin.py
index b7a5c7177f..1536f95500 100644
--- a/src/sentry_plugins/pushover/plugin.py
+++ b/src/sentry_plugins/pushover/plugin.py
@@ -96,7 +96,7 @@ class PushoverPlugin(CorePluginMixin, NotifyPlugin):
 
         message = event.get_legacy_message()[:256]
 
-        tags = event.get_tags()
+        tags = event.tags
         if tags:
             message += "\n\nTags: %s" % (", ".join("%s=%s" % (k, v) for (k, v) in tags))
 
diff --git a/src/sentry_plugins/slack/plugin.py b/src/sentry_plugins/slack/plugin.py
index cffcdc235a..077a8ffe8a 100644
--- a/src/sentry_plugins/slack/plugin.py
+++ b/src/sentry_plugins/slack/plugin.py
@@ -123,7 +123,7 @@ class SlackPlugin(CorePluginMixin, notify.NotificationPlugin):
         return "#" + LEVEL_TO_COLOR.get(event.get_tag("level"), "error")
 
     def _get_tags(self, event):
-        tag_list = event.get_tags()
+        tag_list = event.tags
         if not tag_list:
             return ()
 
diff --git a/src/sentry_plugins/splunk/plugin.py b/src/sentry_plugins/splunk/plugin.py
index 200e33d488..6f93a45e79 100644
--- a/src/sentry_plugins/splunk/plugin.py
+++ b/src/sentry_plugins/splunk/plugin.py
@@ -155,9 +155,7 @@ class SplunkPlugin(CorePluginMixin, Plugin):
             "environment": event.get_tag("environment") or "",
             "type": event.get_event_type(),
         }
-        props["tags"] = [
-            [k.format(tagstore.get_standardized_key(k)), v] for k, v in event.get_tags()
-        ]
+        props["tags"] = [[k.format(tagstore.get_standardized_key(k)), v] for k, v in event.tags]
         for key, value in six.iteritems(event.interfaces):
             if key == "request":
                 headers = value.headers
