commit 1d036793653ee137fe0d54f8818872e58d515382
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Nov 19 23:58:35 2012 -0800

    Correct some minor issues with util funcs and add tests

diff --git a/src/sentry/static/sentry/coffee/views.coffee b/src/sentry/static/sentry/coffee/views.coffee
index 49ae9d477d..e795b87557 100644
--- a/src/sentry/static/sentry/coffee/views.coffee
+++ b/src/sentry/static/sentry/coffee/views.coffee
@@ -301,7 +301,7 @@ jQuery ->
                 .animate({top:0, opacity:1}, 'fast')
 
     app.floatFormat = (number, places) ->
-        multi = 10 * places
+        multi = Math.pow(10, places)
         return parseInt(number * multi, 10) / multi
 
     app.formatNumber = (number) ->
@@ -320,7 +320,7 @@ jQuery ->
                 if ('' + o.length) > 2 or not p
                     return '' + o + y
                 return '' + @floatFormat(number / x, 1) + y
-        return number
+        return '' + number
 
     app.prettyDate = (date_str) ->
         # we need to zero out at CST
diff --git a/src/sentry/static/sentry/scripts/site.js b/src/sentry/static/sentry/scripts/site.js
index 62662b3bc4..da13ad496c 100644
--- a/src/sentry/static/sentry/scripts/site.js
+++ b/src/sentry/static/sentry/scripts/site.js
@@ -801,7 +801,7 @@
     })(Backbone.View);
     app.floatFormat = function(number, places) {
       var multi;
-      multi = 10 * places;
+      multi = Math.pow(10, places);
       return parseInt(number * multi, 10) / multi;
     };
     app.formatNumber = function(number) {
@@ -821,7 +821,7 @@
           return '' + this.floatFormat(number / x, 1) + y;
         }
       }
-      return number;
+      return '' + number;
     };
     return app.prettyDate = function(date_str) {
       var format, list_choice, now, now_utc, seconds, time, time_formats, token, _i, _len;
diff --git a/tests/js/index.html b/tests/js/index.html
index 5fa21bb549..339f46b861 100644
--- a/tests/js/index.html
+++ b/tests/js/index.html
@@ -26,6 +26,8 @@
 
   <!-- include spec files here... -->
   <script type="text/javascript" src="spec/OrderedElementsViewSpec.js"></script>
+  <script type="text/javascript" src="spec/floatFormat.js"></script>
+  <script type="text/javascript" src="spec/formatNumber.js"></script>
 
   <script type="text/javascript">
     $(function() {
diff --git a/tests/js/spec/floatFormat.js b/tests/js/spec/floatFormat.js
new file mode 100644
index 0000000000..fb0b475ade
--- /dev/null
+++ b/tests/js/spec/floatFormat.js
@@ -0,0 +1,9 @@
+describe("floatFormat", function() {
+  it("does format two decimal places", function() {
+    expect(app.floatFormat(1.134, 2)).toBe(1.13);
+  });
+
+  it("does format one decimal places", function() {
+    expect(app.floatFormat(1.134, 1)).toBe(1.1);
+  });
+});
\ No newline at end of file
diff --git a/tests/js/spec/formatNumber.js b/tests/js/spec/formatNumber.js
new file mode 100644
index 0000000000..bfa1dd93f7
--- /dev/null
+++ b/tests/js/spec/formatNumber.js
@@ -0,0 +1,17 @@
+describe("formatNumber", function() {
+  it("handles billions", function() {
+    expect(app.formatNumber(1134134134)).toBe('1.1b');
+  });
+
+  it("handles billions", function() {
+    expect(app.formatNumber(1234134)).toBe('1.2m');
+  });
+
+  it("handles thousands", function() {
+    expect(app.formatNumber(5334)).toBe('5.3k');
+  });
+
+  it("doesnt format small numbers", function() {
+    expect(app.formatNumber(15)).toBe('15');
+  });
+});
\ No newline at end of file
