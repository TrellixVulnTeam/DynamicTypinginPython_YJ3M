commit f5f5d9627f9c3c6706ffcad69c29b24f678938a5
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Nov 13 13:55:26 2019 -0800

    feat(ui): Change `<SmartSearchBar>` to simulate "search" on Enâ€¦ (#15345)
    
    ...keypress when we use the prop `useFormWrapper=false` and there are no dropdown items selected. When it is wrapped in a `<form>`, the enter keypress gets captured by the form and submits the form. When it is not wrapped, we should call the search bar `onSearch` callback when enter is pressed. I think there is an argument that this should be default behavior regardless of the `useFormWrapper` prop.

diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
index c8a372198c..47abec2223 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
@@ -332,6 +332,7 @@ class SmartSearchBar extends React.Component {
       return;
     }
 
+    const {useFormWrapper} = this.props;
     const {key} = evt;
     const isSelectingDropdownItems = this.state.activeSearchItem !== -1;
 
@@ -396,6 +397,12 @@ class SmartSearchBar extends React.Component {
       if (item && !this.isDefaultDropdownItem(item)) {
         this.onAutoComplete(item.value, item);
       }
+    } else if (key === 'Enter' && !useFormWrapper && !isSelectingDropdownItems) {
+      // If enter is pressed, and we are not wrapping input in a `<form>`, and
+      // we are not selecting an item from the dropdown, then we should consider
+      // the user as finished selecting and perform a "search" since there is no
+      // `<form>` to catch and call `this.onSubmit`
+      this.doSearch();
     }
   };
 
diff --git a/tests/js/spec/views/events/searchBar.spec.jsx b/tests/js/spec/views/events/searchBar.spec.jsx
index 213ecbb92d..8b50837665 100644
--- a/tests/js/spec/views/events/searchBar.spec.jsx
+++ b/tests/js/spec/views/events/searchBar.spec.jsx
@@ -39,6 +39,12 @@ describe('SearchBar', function() {
 
     options = TestStubs.routerContext();
 
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/recent-searches/',
+      method: 'POST',
+      body: [],
+    });
+
     MockApiClient.addMockResponse({
       url: '/organizations/org-slug/recent-searches/',
       body: [],
@@ -97,6 +103,37 @@ describe('SearchBar', function() {
     expect(wrapper.find('input').prop('value')).toBe('gpu:"Nvidia 1080ti" ');
   });
 
+  it('if `useFormWrapper` is false, pressing enter when there are no dropdown items selected should blur and call `onSearch` callback', async function() {
+    const onBlur = jest.fn();
+    const onSearch = jest.fn();
+    const wrapper = mountWithTheme(
+      <SearchBar {...props} useFormWrapper={false} onSearch={onSearch} onBlur={onBlur} />,
+      options
+    );
+    await tick();
+    setQuery(wrapper, 'gpu:');
+
+    expect(tagValuesMock).toHaveBeenCalledWith(
+      '/organizations/org-slug/tags/gpu/values/',
+      expect.objectContaining({query: {}})
+    );
+
+    await tick();
+    wrapper.update();
+
+    expect(wrapper.find('SearchDropdown').prop('searchSubstring')).toEqual('');
+    expect(
+      wrapper
+        .find('SearchDropdown Description')
+        .first()
+        .text()
+    ).toEqual('"Nvidia 1080ti"');
+
+    wrapper.find('input').simulate('keydown', {key: 'Enter'});
+
+    expect(onSearch).toHaveBeenCalledTimes(1);
+  });
+
   it('does not requery for event field values if query does not change', async function() {
     const wrapper = mountWithTheme(<SearchBar {...props} />, options);
     await tick();
