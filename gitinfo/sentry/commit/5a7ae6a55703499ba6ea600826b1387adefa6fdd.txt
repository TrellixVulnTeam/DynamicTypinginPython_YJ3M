commit 5a7ae6a55703499ba6ea600826b1387adefa6fdd
Author: David Cramer <dcramer@gmail.com>
Date:   Mon May 11 17:30:47 2015 -0700

    Fix csrf exemption on webhooks

diff --git a/src/sentry/web/frontend/mailgun_inbound_webhook.py b/src/sentry/web/frontend/mailgun_inbound_webhook.py
index a1374e16de..3f67b14e11 100644
--- a/src/sentry/web/frontend/mailgun_inbound_webhook.py
+++ b/src/sentry/web/frontend/mailgun_inbound_webhook.py
@@ -6,8 +6,10 @@ import logging
 
 from django.conf import settings
 from django.http import HttpResponse
+from django.views.decorators.csrf import csrf_exempt
 from django.views.generic import View
 from django.utils.crypto import constant_time_compare
+from django.utils.decorators import method_decorator
 from email_reply_parser import EmailReplyParser
 from email.utils import parseaddr
 
@@ -16,8 +18,6 @@ from sentry.utils.email import email_to_group_id
 
 
 class MailgunInboundWebhookView(View):
-    auth_required = False
-
     def verify(self, api_key, token, timestamp, signature):
         return constant_time_compare(signature, hmac.new(
             key=api_key,
@@ -25,6 +25,10 @@ class MailgunInboundWebhookView(View):
             digestmod=hashlib.sha256
         ).hexdigest())
 
+    @method_decorator(csrf_exempt)
+    def dispatch(self, *args, **kwargs):
+        return super(MailgunInboundWebhookView, self).dispatch(*args, **kwargs)
+
     def post(self, request):
         token = request.POST['token']
         signature = request.POST['signature']
diff --git a/src/sentry/web/frontend/release_webhook.py b/src/sentry/web/frontend/release_webhook.py
index f2a30e2626..e21b129fa1 100644
--- a/src/sentry/web/frontend/release_webhook.py
+++ b/src/sentry/web/frontend/release_webhook.py
@@ -8,14 +8,13 @@ from django.http import HttpResponse
 from django.views.decorators.csrf import csrf_exempt
 from django.views.generic import View
 from django.utils.crypto import constant_time_compare
+from django.utils.decorators import method_decorator
 
 from sentry.models import Project, ProjectOption
 from sentry.plugins import plugins
 
 
 class ReleaseWebhookView(View):
-    auth_required = False
-
     def verify(self, project_id, plugin_id, token, signature):
         return constant_time_compare(signature, hmac.new(
             key=str(token),
@@ -23,7 +22,10 @@ class ReleaseWebhookView(View):
             digestmod=hashlib.sha256
         ).hexdigest())
 
-    @csrf_exempt
+    @method_decorator(csrf_exempt)
+    def dispatch(self, *args, **kwargs):
+        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)
+
     def post(self, request, project_id, plugin_id, signature):
         project = Project.objects.get_from_cache(id=project_id)
 
