commit c0181dd63c5f17c2a582665ce661a04dd08ab765
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Aug 1 16:59:41 2018 -0700

    feat(discover): Add NOT LIKE support for conditions (#9272)

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx
index 561a8ec384..196302c31e 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx
@@ -60,7 +60,7 @@ export default class Condition extends React.Component {
     const column = this.props.columns.find(({name}) => name === colName);
     const colType = column ? column.type : 'string';
     const numberOnlyOperators = new Set(['>', '<', '>=', '<=']);
-    const stringOnlyOperators = new Set(['LIKE']);
+    const stringOnlyOperators = new Set(['LIKE', 'NOT LIKE']);
 
     return CONDITION_OPERATORS.filter(operator => {
       if (colType === 'number') {
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/utils.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/utils.jsx
index 04725e2b48..6a51b7b166 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/utils.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/utils.jsx
@@ -63,19 +63,17 @@ export function getExternal(internal, columns) {
   if (specialConditions.has(remaining)) {
     external[1] = remaining;
   } else {
-    const operatorMatch = remaining.match(/^([^\s]+).*$/);
-    const operatorValue = operatorMatch ? operatorMatch[1] : null;
-
-    if (new Set(CONDITION_OPERATORS).has(operatorValue)) {
-      external[1] = operatorValue;
-    }
+    CONDITION_OPERATORS.forEach(operator => {
+      if (remaining.startsWith(operator)) {
+        external[1] = operator;
+      }
+    });
   }
 
   // Validate value and convert to correct type
   if (external[0] && external[1] && !specialConditions.has(external[1])) {
-    const valuesMatch = internal.match(/^[a-zA-Z0-9_\.:-\[\]]+ [^\s]+ (.*)$/);
+    external[2] = internal.replace(`${external[0]} ${external[1]} `, '');
 
-    external[2] = valuesMatch ? valuesMatch[1] : null;
     const type = columns.find(({name}) => name === colValue).type;
 
     if (type === 'number') {
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx
index 5f7de7985e..66a900da9a 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx
@@ -79,6 +79,7 @@ const CONDITION_OPERATORS = [
   'IS NULL',
   'IS NOT NULL',
   'LIKE',
+  'NOT LIKE',
 ];
 
 const TOPK_COUNTS = [5, 10, 20, 50, 100];
diff --git a/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx b/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx
index 33113d8d56..ebd0728323 100644
--- a/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx
@@ -41,7 +41,7 @@ describe('Condition', function() {
 
     it('renders operator options for string column', function() {
       const options = wrapper.instance().filterOptions([], 'col1');
-      expect(options).toHaveLength(5);
+      expect(options).toHaveLength(6);
       expect(options[0]).toEqual({value: 'col1 =', label: 'col1 ='});
     });
 
diff --git a/tests/js/spec/views/organizationDiscover/conditions/utils.spec.jsx b/tests/js/spec/views/organizationDiscover/conditions/utils.spec.jsx
index 8a11ba5625..c6e9e48398 100644
--- a/tests/js/spec/views/organizationDiscover/conditions/utils.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/conditions/utils.spec.jsx
@@ -27,6 +27,10 @@ const conditionList = [
     internal: 'retention_days >= 0',
     external: ['retention_days', '>=', 0],
   },
+  {
+    internal: 'message NOT LIKE something%',
+    external: ['message', 'NOT LIKE', 'something%'],
+  },
 ];
 
 describe('Conditions', function() {
