commit 29f8169ff01ee2d460fd55119985773f82566614
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Tue Mar 3 08:35:06 2020 +0100

    feat(ui): added component ExceptionStacktraceContent (#17409)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
index cebe804591..1441ce6848 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
@@ -1,12 +1,14 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from '@emotion/styled';
 
-import {defined} from 'app/utils';
+import space from 'app/styles/space';
 import Annotated from 'app/components/events/meta/annotated';
 import ExceptionMechanism from 'app/components/events/interfaces/exceptionMechanism';
-import StacktraceContent from 'app/components/events/interfaces/stacktraceContent';
 import SentryTypes from 'app/sentryTypes';
 
+import ExceptionStacktraceContent from './exceptionStacktraceContent';
+
 class ExceptionContent extends React.Component {
   static propTypes = {
     type: PropTypes.oneOf(['original', 'minified']),
@@ -26,34 +28,30 @@ class ExceptionContent extends React.Component {
         </h5>
 
         <Annotated object={exc} objectKey="value" required>
-          {value => (
-            <pre className="exc-message" style={{marginTop: 0}}>
-              {value}
-            </pre>
-          )}
+          {value => <StyledPre className="exc-message">{value}</StyledPre>}
         </Annotated>
 
         {exc.mechanism && (
           <ExceptionMechanism data={exc.mechanism} platform={this.props.platform} />
         )}
-        {defined(exc.stacktrace) && (
-          <StacktraceContent
-            data={
-              this.props.type === 'original'
-                ? exc.stacktrace
-                : exc.rawStacktrace || exc.stacktrace
-            }
-            expandFirstFrame={
-              platform === 'csharp' ? excIdx === values.length - 1 : excIdx === 0
-            }
-            includeSystemFrames={stackView === 'full'}
-            platform={this.props.platform}
-            newestFirst={newestFirst}
-            event={event}
-          />
-        )}
+        <ExceptionStacktraceContent
+          data={
+            this.props.type === 'original'
+              ? exc.stacktrace
+              : exc.rawStacktrace || exc.stacktrace
+          }
+          stackView={stackView}
+          stacktrace={exc.stacktrace}
+          expandFirstFrame={
+            platform === 'csharp' ? excIdx === values.length - 1 : excIdx === 0
+          }
+          platform={this.props.platform}
+          newestFirst={newestFirst}
+          event={event}
+        />
       </div>
     ));
+
     if (newestFirst) {
       children.reverse();
     }
@@ -64,3 +62,8 @@ class ExceptionContent extends React.Component {
 }
 
 export default ExceptionContent;
+
+const StyledPre = styled('pre')`
+  margin-bottom: ${space(1)};
+  margin-top: 0;
+`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionStacktraceContent.tsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionStacktraceContent.tsx
new file mode 100644
index 0000000000..7a026ead63
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionStacktraceContent.tsx
@@ -0,0 +1,68 @@
+import React from 'react';
+
+import {Frame, PlatformType} from 'app/components/events/interfaces/frame/types';
+import {defined} from 'app/utils';
+import StacktraceContent from 'app/components/events/interfaces/stacktraceContent';
+import {Panel} from 'app/components/panels';
+import EmptyMessage from 'app/views/settings/components/emptyMessage';
+import SentryTypes from 'app/sentryTypes';
+
+type StackViewType = 'app' | 'full' | 'raw';
+
+type Stacktrace = {
+  frames: Array<Frame>;
+  hasSystemFrames: boolean;
+  registers: {[key: string]: string} | null;
+  framesOmitted: any;
+};
+
+type Props = {
+  stackView: StackViewType;
+  data: Stacktrace | null;
+  event: SentryTypes.Event;
+  platform: PlatformType;
+  expandFirstFrame?: boolean;
+  newestFirst?: boolean;
+  stacktrace: Stacktrace;
+};
+
+const ExceptionStacktraceContent = ({
+  stackView,
+  stacktrace,
+  platform,
+  newestFirst,
+  data,
+  expandFirstFrame,
+  event,
+}: Props) => {
+  if (!defined(stacktrace)) {
+    return null;
+  }
+
+  if (
+    stackView === 'app' &&
+    stacktrace.frames.filter(frame => frame.inApp).length === 0
+  ) {
+    return (
+      <Panel dashedBorder>
+        <EmptyMessage
+          icon="icon-warning-sm"
+          title="No app only stacktrace has been found!"
+        />
+      </Panel>
+    );
+  }
+
+  return (
+    <StacktraceContent
+      data={data}
+      expandFirstFrame={expandFirstFrame}
+      includeSystemFrames={stackView === 'full'}
+      platform={platform}
+      newestFirst={newestFirst}
+      event={event}
+    />
+  );
+};
+
+export default ExceptionStacktraceContent;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame/types.tsx b/src/sentry/static/sentry/app/components/events/interfaces/frame/types.tsx
index 485acc3bc4..3ca5cb8f24 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame/types.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame/types.tsx
@@ -3,6 +3,12 @@ export type PlatformType = 'java' | 'csharp' | 'other';
 export type Frame = {
   filename: string;
   module: string;
+  map: string;
+  preventCollapse: () => void;
+  errors: Array<any>;
+  context: Array<[number, string]>;
+  vars: {[key: string]: any};
+  inApp: boolean;
   function?: string;
   absPath?: string;
   rawFunction?: string;
@@ -12,9 +18,4 @@ export type Frame = {
   package?: string;
   origAbsPath?: string;
   mapUrl?: string;
-  map: string;
-  preventCollapse: () => void;
-  errors: Array<any>;
-  context: Array<[number, string]>;
-  vars: {[key: string]: any};
 };
diff --git a/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap b/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
index 64a78f3a5b..0a19b36b60 100644
--- a/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
+++ b/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
@@ -111,77 +111,76 @@ exports[`CrashContent renders with meta data 1`] = `
               <ErrorBoundary
                 mini={true}
               >
-                <pre
+                <StyledPre
                   className="exc-message"
-                  style={
-                    Object {
-                      "marginTop": 0,
-                    }
-                  }
                 >
-                  <AnnotatedText
-                    chunks={Array []}
-                    errors={Array []}
-                    remarks={
-                      Array [
-                        Array [
-                          "device_id",
-                          "p",
-                          11,
-                          51,
-                        ],
-                      ]
-                    }
-                    value="python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err"
+                  <pre
+                    className="exc-message css-1q8nviw-StyledPre e1rxtykr0"
                   >
-                    <span>
-                      <Tooltip
-                        containerDisplayMode="inline-block"
-                        position="top"
-                        title="Pseudonymized because of PII rule \\"device_id\\""
-                      >
-                        <Manager>
-                          <Reference>
-                            <InnerReference
-                              setReferenceNode={[Function]}
-                            >
-                              <Container
-                                aria-describedby="tooltip-123456"
-                                containerDisplayMode="inline-block"
-                                onBlur={[Function]}
-                                onFocus={[Function]}
-                                onMouseEnter={[Function]}
-                                onMouseLeave={[Function]}
+                    <AnnotatedText
+                      chunks={Array []}
+                      errors={Array []}
+                      remarks={
+                        Array [
+                          Array [
+                            "device_id",
+                            "p",
+                            11,
+                            51,
+                          ],
+                        ]
+                      }
+                      value="python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err"
+                    >
+                      <span>
+                        <Tooltip
+                          containerDisplayMode="inline-block"
+                          position="top"
+                          title="Pseudonymized because of PII rule \\"device_id\\""
+                        >
+                          <Manager>
+                            <Reference>
+                              <InnerReference
+                                setReferenceNode={[Function]}
                               >
-                                <span
+                                <Container
                                   aria-describedby="tooltip-123456"
-                                  className="css-sce1yi-Container eowlwvy0"
+                                  containerDisplayMode="inline-block"
                                   onBlur={[Function]}
                                   onFocus={[Function]}
                                   onMouseEnter={[Function]}
                                   onMouseLeave={[Function]}
                                 >
-                                  <Redaction>
-                                    <span
-                                      className="css-1vnqw28-Redaction e1p1th7g1"
-                                    >
-                                      python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err
-                                    </span>
-                                  </Redaction>
-                                </span>
-                              </Container>
-                            </InnerReference>
-                          </Reference>
-                        </Manager>
-                      </Tooltip>
-                       
-                    </span>
-                  </AnnotatedText>
-                </pre>
+                                  <span
+                                    aria-describedby="tooltip-123456"
+                                    className="css-sce1yi-Container eowlwvy0"
+                                    onBlur={[Function]}
+                                    onFocus={[Function]}
+                                    onMouseEnter={[Function]}
+                                    onMouseLeave={[Function]}
+                                  >
+                                    <Redaction>
+                                      <span
+                                        className="css-1vnqw28-Redaction e1p1th7g1"
+                                      >
+                                        python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err
+                                      </span>
+                                    </Redaction>
+                                  </span>
+                                </Container>
+                              </InnerReference>
+                            </Reference>
+                          </Manager>
+                        </Tooltip>
+                         
+                      </span>
+                    </AnnotatedText>
+                  </pre>
+                </StyledPre>
               </ErrorBoundary>
             </MetaData>
           </Annotated>
-          <StacktraceContent
+          <ExceptionStacktraceContent
             data={
               Object {
                 "frames": Array [],
@@ -199,15 +198,42 @@ exports[`CrashContent renders with meta data 1`] = `
               }
             }
             expandFirstFrame={true}
-            includeSystemFrames={true}
             newestFirst={true}
+            stackView="full"
+            stacktrace={
+              Object {
+                "frames": Array [],
+              }
+            }
           >
-            <div
-              className=" traceback full-traceback"
+            <StacktraceContent
+              data={
+                Object {
+                  "frames": Array [],
+                }
+              }
+              event={
+                Object {
+                  "dateCreated": "2019-05-21T18:01:48.762Z",
+                  "eventID": "12345678901234567890123456789012",
+                  "groupID": "1",
+                  "id": "1",
+                  "message": "ApiException",
+                  "tags": Array [],
+                  "title": "ApiException",
+                }
+              }
+              expandFirstFrame={true}
+              includeSystemFrames={true}
+              newestFirst={true}
             >
-              <ul />
-            </div>
-          </StacktraceContent>
+              <div
+                className=" traceback full-traceback"
+              >
+                <ul />
+              </div>
+            </StacktraceContent>
+          </ExceptionStacktraceContent>
         </div>
       </div>
     </ExceptionContent>
