commit 68a30d95644295af1aa077aa6d04c183309b5743
Author: David Cramer <dcramer@gmail.com>
Date:   Mon May 11 19:06:07 2015 -0700

    Add separate Issue Tracking configuration pane

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 9e83a41b82..cea6171da7 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -233,3 +233,9 @@ DEFAULT_SCRUBBED_FIELDS = (
     'api_key',
     'apikey',
 )
+
+OK_PLUGIN_ENABLED = _("The {name} integration has been enabled.")
+
+OK_PLUGIN_DISABLED = _("The {name} integration has been disabled.")
+
+OK_PLUGIN_SAVED = _('Configuration for the {name} integration has been saved.')
diff --git a/src/sentry/plugins/bases/__init__.py b/src/sentry/plugins/bases/__init__.py
index daa11e5ff4..c8c3a3c566 100644
--- a/src/sentry/plugins/bases/__init__.py
+++ b/src/sentry/plugins/bases/__init__.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from .issue import IssuePlugin  # NOQA
+from .issue import IssueTrackingPlugin  # NOQA
 from .notify import NotificationPlugin  # NOQA
 from .releasetracking import ReleaseTrackingPlugin  # NOQA
 from .tag import TagPlugin  # NOQA
diff --git a/src/sentry/plugins/bases/issue.py b/src/sentry/plugins/bases/issue.py
index 6d8100786a..4748c6e19c 100644
--- a/src/sentry/plugins/bases/issue.py
+++ b/src/sentry/plugins/bases/issue.py
@@ -25,7 +25,7 @@ class NewIssueForm(forms.Form):
     description = forms.CharField(widget=forms.Textarea(attrs={'class': 'span9'}))
 
 
-class IssuePlugin(Plugin):
+class IssueTrackingPlugin(Plugin):
     # project_conf_form = BaseIssueOptionsForm
     new_issue_form = NewIssueForm
 
@@ -220,3 +220,8 @@ class IssuePlugin(Plugin):
         )))
 
         return tag_list
+
+    def get_issue_doc_html(self, **kwargs):
+        return ""
+
+IssuePlugin = IssueTrackingPlugin
diff --git a/src/sentry/templates/sentry/partial/_form.html b/src/sentry/templates/sentry/partial/_form.html
index 2e0a4ef52e..2e19f05e3e 100644
--- a/src/sentry/templates/sentry/partial/_form.html
+++ b/src/sentry/templates/sentry/partial/_form.html
@@ -3,6 +3,10 @@
 
 <form action="" method="post">
     {% csrf_token %}
+    {% if plugin %}
+    	<input type="hidden" name="plugin" value="{{ plugin.slug }}" />
+    {% endif %}
+
     {% include "sentry/partial/form_base.html" %}
 
     <fieldset class="form-actions">
diff --git a/src/sentry/templates/sentry/project-issue-tracking.html b/src/sentry/templates/sentry/project-issue-tracking.html
new file mode 100644
index 0000000000..9fddf0df47
--- /dev/null
+++ b/src/sentry/templates/sentry/project-issue-tracking.html
@@ -0,0 +1,55 @@
+{% extends "sentry/projects/manage.html" %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+{% load sentry_plugins %}
+
+{% block title %}{% trans "Issue Tracking" %} | {{ block.super }}{% endblock %}
+
+{% block inner %}
+  <div class="page-header">
+    <h2>{% trans "Issue Tracking" %}</h2>
+  </div>
+  <p>Configure issue tracking for this project to enable quick issue creation links on events.</p>
+
+  {% if enabled_plugins or other_plugins %}
+    {% for plugin, content in enabled_plugins %}
+      <form method="POST">
+        {% csrf_token %}
+        <input type="hidden" name="plugin" value="{{ plugin.slug }}" />
+        <fieldset>
+          <legend>
+            {{ plugin.get_title }}
+            {% if plugin.can_disable %}
+              <button type="submit" class="btn btn-small btn-default" name="op" value="disable">Disable</button>
+            {% endif %}
+          </legend>
+          {{ content }}
+        </fieldset>
+      </form>
+    {% endfor %}
+
+    {% if other_plugins %}
+      <fieldset>
+        <legend>Inactive Integrations</legend>
+
+        <ul class="integration-list unstyled">
+          {% for plugin in other_plugins %}
+            <li>
+              <form method="POST">
+                {% csrf_token %}
+                <input type="hidden" name="op" value="enable" />
+                <input type="hidden" name="plugin" value="{{ plugin.slug }}" />
+                <button type="submit">{{ plugin.get_title }}</button>
+              </form>
+            </li>
+          {% endfor %}
+        </ul>
+      </fieldset>
+    {% endif %}
+  {% else %}
+    <div class="alert alert-info alert-block">
+      <p>There are no issue tracker integrations available.</p>
+    </div>
+  {% endif %}
+{% endblock %}
diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index 0d9c61bad1..a43df7ce12 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -89,14 +89,17 @@
         <li{% if page == 'tags' %} class="active"{% endif %}>
             <a href="{% url 'sentry-manage-project-tags' project.organization.slug project.slug %}">{% trans "Tags" %}</a>
         </li>
-        <li{% if page == 'keys' %} class="active"{% endif %}>
-            <a href="{% url 'sentry-manage-project-keys' project.organization.slug project.slug %}">{% trans "Client Keys" %}</a>
+        <li{% if page == 'issue-tracking' %} class="active"{% endif %}>
+            <a href="{% url 'sentry-project-issue-tracking' project.organization.slug project.slug %}">{% trans "Issue Tracking" %}</a>
         </li>
         {% feature projects:release-tracking project %}
         <li{% if page == 'release-tracking' %} class="active"{% endif %}>
             <a href="{% url 'sentry-project-release-tracking' project.organization.slug project.slug %}">{% trans "Release Tracking" %}</a>
         </li>
         {% endfeature %}
+        <li{% if page == 'keys' %} class="active"{% endif %}>
+            <a href="{% url 'sentry-manage-project-keys' project.organization.slug project.slug %}">{% trans "Client Keys" %}</a>
+        </li>
         <li class="nav-header">{% trans "Help" %}</li>
         <li>
             <a href="{% url 'sentry-help-platform-list' %}?pid={{ project.id }}">{% trans "Setup &amp; Installation" %}</a>
diff --git a/src/sentry/web/frontend/project_issue_tracking.py b/src/sentry/web/frontend/project_issue_tracking.py
new file mode 100644
index 0000000000..c042956547
--- /dev/null
+++ b/src/sentry/web/frontend/project_issue_tracking.py
@@ -0,0 +1,74 @@
+from __future__ import absolute_import
+
+from django.contrib import messages
+from django.http import HttpResponseRedirect
+from django.utils.safestring import mark_safe
+
+from sentry import constants
+from sentry.models import OrganizationMemberType
+from sentry.plugins import plugins, IssueTrackingPlugin
+from sentry.web.frontend.base import ProjectView
+from sentry.web.helpers import plugin_config
+
+
+class ProjectIssueTrackingView(ProjectView):
+    required_access = OrganizationMemberType.ADMIN
+
+    def _iter_plugins(self):
+        for plugin in plugins.all(version=1):
+            if not isinstance(plugin, IssueTrackingPlugin):
+                continue
+            yield plugin
+
+    def _handle_enable_plugin(self, request, project):
+        plugin = plugins.get(request.POST['plugin'])
+        plugin.set_option('enabled', True, project)
+        messages.add_message(
+            request, messages.SUCCESS,
+            constants.OK_PLUGIN_ENABLED.format(name=plugin.get_title()),
+        )
+
+    def _handle_disable_plugin(self, request, project):
+        plugin = plugins.get(request.POST['plugin'])
+        plugin.set_option('enabled', False, project)
+        messages.add_message(
+            request, messages.SUCCESS,
+            constants.OK_PLUGIN_DISABLED.format(name=plugin.get_title()),
+        )
+
+    def handle(self, request, organization, team, project):
+        if request.method == 'POST':
+            op = request.POST.get('op')
+            if op == 'enable':
+                self._handle_enable_plugin(request, project)
+                return HttpResponseRedirect(request.path)
+            elif op == 'disable':
+                self._handle_disable_plugin(request, project)
+                return HttpResponseRedirect(request.path)
+
+        enabled_plugins = []
+        other_plugins = []
+        for plugin in self._iter_plugins():
+            if plugin.is_enabled(project):
+                content = plugin.get_issue_doc_html()
+
+                form = plugin.project_conf_form
+                if form is not None:
+                    action, view = plugin_config(plugin, project, request)
+                    if action == 'redirect':
+                        messages.add_message(
+                            request, messages.SUCCESS,
+                            constants.OK_PLUGIN_SAVED.format(name=plugin.get_title()),
+                        )
+                        return HttpResponseRedirect(request.path)
+                enabled_plugins.append((plugin, mark_safe(content + view)))
+            else:
+                other_plugins.append(plugin)
+
+        context = {
+            'page': 'issue-tracking',
+            'enabled_plugins': enabled_plugins,
+            'other_plugins': other_plugins,
+        }
+
+        return self.respond('sentry/project-issue-tracking.html', context)
diff --git a/src/sentry/web/frontend/project_release_tracking.py b/src/sentry/web/frontend/project_release_tracking.py
index f6260cd0a4..f79d5cd279 100644
--- a/src/sentry/web/frontend/project_release_tracking.py
+++ b/src/sentry/web/frontend/project_release_tracking.py
@@ -10,7 +10,7 @@ from django.utils.safestring import mark_safe
 from django.utils.translation import ugettext_lazy as _
 from uuid import uuid1
 
-from sentry import features
+from sentry import constants, features
 from sentry.models import OrganizationMemberType, ProjectOption
 from sentry.plugins import plugins, ReleaseTrackingPlugin
 from sentry.utils.http import absolute_uri
@@ -19,10 +19,6 @@ from sentry.web.frontend.base import ProjectView
 
 OK_TOKEN_REGENERATED = _("Your deploy token has been regenerated. You will need to update any pre-existing deploy hooks.")
 
-OK_PLUGIN_ENABLED = _("The {name} integration has been enabled.")
-
-OK_PLUGIN_DISABLED = _("The {name} integration has been disabled.")
-
 ERR_NO_FEATURE = _('The release tracking feature is not enabled for this project.')
 
 
@@ -40,7 +36,7 @@ class ProjectReleaseTrackingView(ProjectView):
         plugin.set_option('enabled', True, project)
         messages.add_message(
             request, messages.SUCCESS,
-            OK_PLUGIN_ENABLED.format(name=plugin.get_title()),
+            constants.OK_PLUGIN_ENABLED.format(name=plugin.get_title()),
         )
 
     def _handle_disable_plugin(self, request, project):
@@ -48,7 +44,7 @@ class ProjectReleaseTrackingView(ProjectView):
         plugin.set_option('enabled', False, project)
         messages.add_message(
             request, messages.SUCCESS,
-            OK_PLUGIN_DISABLED.format(name=plugin.get_title()),
+            constants.OK_PLUGIN_DISABLED.format(name=plugin.get_title()),
         )
 
     def _regenerate_token(self, project):
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index 58612b36f7..53c6d152b8 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -159,7 +159,7 @@ def plugin_config(plugin, project, request):
             initials[field] = value
 
     form = form_class(
-        request.POST or None,
+        request.POST if request.POST.get('plugin') == plugin.slug else None,
         initial=initials,
         prefix=plugin_key
     )
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 04064553b3..fd822d143c 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -57,8 +57,9 @@ from sentry.web.frontend.create_organization import CreateOrganizationView
 from sentry.web.frontend.create_organization_member import CreateOrganizationMemberView
 from sentry.web.frontend.create_project import CreateProjectView
 from sentry.web.frontend.create_team import CreateTeamView
-from sentry.web.frontend.project_settings import ProjectSettingsView
+from sentry.web.frontend.project_issue_tracking import ProjectIssueTrackingView
 from sentry.web.frontend.project_release_tracking import ProjectReleaseTrackingView
+from sentry.web.frontend.project_settings import ProjectSettingsView
 from sentry.web.frontend.release_webhook import ReleaseWebhookView
 from sentry.web.frontend.remove_organization import RemoveOrganizationView
 from sentry.web.frontend.remove_project import RemoveProjectView
@@ -238,12 +239,15 @@ urlpatterns += patterns('',
         sentry.web.frontend.projects.general.get_started,
         name='sentry-get-started'),
 
-    url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/settings/$',
-        ProjectSettingsView.as_view(),
-        name='sentry-manage-project'),
+    url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/issue-tracking/$',
+        ProjectIssueTrackingView.as_view(),
+        name='sentry-project-issue-tracking'),
     url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/release-tracking/$',
         ProjectReleaseTrackingView.as_view(),
         name='sentry-project-release-tracking'),
+    url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/settings/$',
+        ProjectSettingsView.as_view(),
+        name='sentry-manage-project'),
     url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/keys/$',
         sentry.web.frontend.projects.keys.manage_project_keys,
         name='sentry-manage-project-keys'),
diff --git a/tests/sentry/plugins/bases/issue/tests.py b/tests/sentry/plugins/bases/issue/tests.py
index 5335bd2616..6013ebebf6 100644
--- a/tests/sentry/plugins/bases/issue/tests.py
+++ b/tests/sentry/plugins/bases/issue/tests.py
@@ -7,7 +7,7 @@ import mock
 from social_auth.models import UserSocialAuth
 
 from sentry.models import User
-from sentry.plugins.bases.issue import IssuePlugin
+from sentry.plugins import IssueTrackingPlugin
 from sentry.testutils import TestCase
 
 
@@ -20,18 +20,18 @@ class GetAuthForUserTest(TestCase):
 
     def test_requires_auth_provider(self):
         user = self._get_mock_user()
-        p = IssuePlugin()
+        p = IssueTrackingPlugin()
         self.assertRaises(AssertionError, p.get_auth_for_user, user)
 
     def test_returns_none_on_missing_identity(self):
         user = self._get_mock_user()
-        p = IssuePlugin()
+        p = IssueTrackingPlugin()
         p.auth_provider = 'test'
         self.assertEquals(p.get_auth_for_user(user), None)
 
     def test_returns_identity(self):
         user = User.objects.create(username='test', email='test@example.com')
         auth = UserSocialAuth.objects.create(provider='test', user=user)
-        p = IssuePlugin()
+        p = IssueTrackingPlugin()
         p.auth_provider = 'test'
         self.assertEquals(p.get_auth_for_user(user), auth)
diff --git a/tests/sentry/web/frontend/test_project_issue_tracking.py b/tests/sentry/web/frontend/test_project_issue_tracking.py
new file mode 100644
index 0000000000..4d9056f908
--- /dev/null
+++ b/tests/sentry/web/frontend/test_project_issue_tracking.py
@@ -0,0 +1,27 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+from exam import fixture
+
+from sentry.testutils import TestCase
+
+
+class ProjectIssueTrackingTest(TestCase):
+    def setUp(self):
+        super(ProjectIssueTrackingTest, self).setUp()
+        self.organization = self.create_organization()
+        self.team = self.create_team(organization=self.organization)
+        self.project = self.create_project(team=self.team)
+
+    @fixture
+    def path(self):
+        return reverse('sentry-project-issue-tracking', args=[
+            self.organization.slug, self.project.slug,
+        ])
+
+    def test_renders_with_context(self):
+        self.login_as(self.organization.owner)
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/project-issue-tracking.html')
+        assert resp.context['project'] == self.project
