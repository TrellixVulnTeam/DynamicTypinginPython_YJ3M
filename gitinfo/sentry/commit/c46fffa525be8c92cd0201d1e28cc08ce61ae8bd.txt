commit c46fffa525be8c92cd0201d1e28cc08ce61ae8bd
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed Aug 5 19:04:46 2015 -0700

    Pressing 'esc' from search box triggers blur/dropdown closes ...
    
    Fixes #1685

diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 2a0c0218d0..15c58df739 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -25,9 +25,13 @@ var SearchBar = React.createClass({
     };
   },
 
+  blur() {
+    this.refs.searchInput.getDOMNode().blur();
+  },
+
   onSubmit(event) {
     event.preventDefault();
-    this.refs.searchInput.getDOMNode().blur();
+    this.blur();
     this.props.onSearch();
   },
 
@@ -51,6 +55,13 @@ var SearchBar = React.createClass({
     this.props.onQueryChange(event.target.value);
   },
 
+  onKeyUp(event) {
+    if (event.key === 'Escape' || event.keyCode === 27) {
+      // blur handler should additionally hide dropdown
+      this.blur();
+    }
+  },
+
   render() {
     return (
       <div className="search">
@@ -64,6 +75,7 @@ var SearchBar = React.createClass({
               value={this.props.query}
               onFocus={this.onQueryFocus}
               onBlur={this.onQueryBlur}
+              onKeyUp={this.onKeyUp}
               onChange={this.onQueryChange} />
             <span className="icon-search" />
             {this.props.query !== this.props.defaultQuery &&
diff --git a/tests/js/spec/views/stream/searchBar.spec.jsx b/tests/js/spec/views/stream/searchBar.spec.jsx
index 026213aaac..f8deb7f978 100644
--- a/tests/js/spec/views/stream/searchBar.spec.jsx
+++ b/tests/js/spec/views/stream/searchBar.spec.jsx
@@ -79,6 +79,25 @@ describe("SearchBar", function() {
 
   });
 
+  describe("onKeyUp()", function () {
+    describe("escape", function () {
+      it("blurs the input", function () {
+        var wrapper = React.render(<SearchBar />, document.body);
+        wrapper.state.dropdownVisible = true;
+
+        var input = React.findDOMNode(wrapper.refs.searchInput);
+
+        input.focus();
+
+        expect(document.activeElement).to.eql(input);
+
+        TestUtils.Simulate.keyUp(input, {key: "Escape", keyCode: "27"}});
+
+        expect(document.activeElement).to.not.eql(input);
+      });
+    });
+  });
+
   describe("render()", function() {
 
     it("invokes onSearch() when submitting the form", function() {
