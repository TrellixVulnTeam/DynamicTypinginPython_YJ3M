commit 93db051f56e26fc9a88a6a3ce424f4b74f83781a
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 29 12:52:50 2012 -0800

    Search view now functions

diff --git a/sentry/templates/sentry/header.html b/sentry/templates/sentry/header.html
index 4f03947dbd..d1440508dd 100644
--- a/sentry/templates/sentry/header.html
+++ b/sentry/templates/sentry/header.html
@@ -42,7 +42,7 @@
                 {% if project %}
                     <form action="{% url sentry-search project.pk %}" class="navbar-search pull-right" id="search">
                         <input type="hidden" name="sort" value="{% if sort %}{{ sort }}{% endif %}"/>
-                        <input type="text" name="q" value="{% if query %}{{ query }}{% endif %}" placeholder="{% if has_search %}search query or message id{% else %}message id{% endif %}"/>
+                        <input type="text" name="q" value="{% if query %}{{ query }}{% endif %}" placeholder="{% if HAS_SEARCH %}search query or message id{% else %}message id{% endif %}"/>
                     </form>
                 {% endif %}
                 {% endblock %}
diff --git a/sentry/templates/sentry/search.html b/sentry/templates/sentry/search.html
index 0316a29470..d508210a3e 100644
--- a/sentry/templates/sentry/search.html
+++ b/sentry/templates/sentry/search.html
@@ -6,38 +6,27 @@
 {% block heading %}{% trans "Search" %}{% endblock %}
 
 {% block main %}
-    {% paginate event_list from request as event_list per_page 15 %}
+    <ul class="nav tabs options">
+        <li class="dropdown pull-right" data-dropdown="dropdown">
+            <a href="#" class="dropdown-toggle">{% blocktrans with sort_label as label %}Sort by: {{ label }}{% endblocktrans %} <b class="caret"></b></a>
+            <ul class="dropdown-menu">
+                <li{% ifequal sort 'date' %} class="active"{% endifequal %}><a href="?{{ sort_querystring }}">{% trans "Last Seen" %}</a></li>
+                <li{% ifequal sort 'score' %} class="active"{% endifequal %}><a href="?{{ sort_querystring }}&amp;sort=score">{% trans "Score" %}</a></li>
+                <li{% ifequal sort 'new' %} class="active"{% endifequal %}><a href="?{{ sort_querystring }}&amp;sort=new">{% trans "First Seen" %}</a></li>
+            </ul>
+        </li>
+    </ul>
 
-    <div class="paging-wrap">
-        <div class="clearfix">
-            <form method="GET" action="">
-                <input type="hidden" name="q" value="{% if query %}{{ query }}{% endif %}"/>
-                <div class="sort-by">Sort by <select name="sort" onchange="this.form.submit()">
-                    <option value=""{% ifequal sort 'relevance' %} selected="selected"{% endifequal %}>Relevance</option>
-                    <option value="date"{% ifequal sort 'date' %} selected="selected"{% endifequal %}>Last Seen</option>
-                    <option value="new"{% ifequal sort 'new' %} selected="selected"{% endifequal %}>First Seen</option>
-                </select>
-                </div>
-            </form>
-            {{ event_list.paging }}
-        </div>
-    </div>
-
-    {% if event_list.objects %}
+    {% if event_list %}
+        {% handle_before_events request event_list %}
         <ul class="messages" id="event_list">
-            {% for group in event_list.objects %}
+            {% for group, is_bookmarked in event_list|as_bookmarks:request.user %}
                 {% include "sentry/partial/_group.html" %}
             {% endfor %}
         </ul>
     {% else %}
         <ul class="messages" id="event_list">
-            <li class="no-messages" id="no_messages">{% trans "No events match your query." %}</li>
+            <li class="no-messages" id="no_messages">{% trans "No events match your search query." %}</li>
         </ul>
     {% endif %}
-
-    <div class="paging-wrap">
-        <div class="clearfix">
-            {{ event_list.paging }}
-        </div>
-    </div>
 {% endblock %}
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index 41c37d8f5a..c4d0d12372 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -18,8 +18,9 @@ from django.utils.datastructures import SortedDict
 from django.utils.safestring import mark_safe
 from django.utils.translation import ugettext_lazy as _
 
+from sentry.conf import settings
 from sentry.filters import Filter
-from sentry.models import Group, Event, View
+from sentry.models import Group, Event, View, SearchDocument
 from sentry.plugins import plugins
 from sentry.utils import json, has_trending
 from sentry.web.decorators import has_access, login_required
@@ -41,6 +42,13 @@ SORT_OPTIONS = (
 )
 DEFAULT_SORT_OPTION = 'priority'
 
+SEARCH_SORT_OPTIONS = (
+    'score',
+    'date',
+    'new',
+)
+SEARCH_DEFAULT_SORT_OPTION = 'date'
+
 
 def _get_rendered_interfaces(event):
     interface_list = []
@@ -68,6 +76,7 @@ def _get_sort_label(sort):
         'tottime': _('Total Time Spent'),
         'avgtime': _('Average Time Spent'),
         'priority': _('Priority'),
+        'score': _('Score'),
     }[sort]
 
 
@@ -126,50 +135,58 @@ def _get_group_list(request, project, view=None):
 def search(request, project):
     query = request.GET.get('q')
 
-    if query:
-        result = event_re.match(query)
-        if result:
-            # Forward to message if it exists
-            # event_id = result.group(1)
-            checksum = result.group(2)
-            event_list = Group.objects.filter(checksum=checksum)
-            top_matches = event_list[:2]
-            if len(top_matches) == 0:
-                return render_to_response('sentry/invalid_message_id.html', {
-                    'project': project,
-                }, request)
-            elif len(top_matches) == 1:
-                return HttpResponseRedirect(top_matches[0].get_absolute_url())
-        elif uuid_re.match(query):
-            # Forward to message if it exists
-            try:
-                message = Event.objects.get(event_id=query)
-            except Event.DoesNotExist:
-                return render_to_response('sentry/invalid_message_id.html', {
-                    'project': project,
-                }, request)
-            else:
-                return HttpResponseRedirect(message.get_absolute_url())
-        else:
+    if not query:
+        return HttpResponseRedirect(reverse('sentry', args=[project.pk]))
+
+    result = event_re.match(query)
+    if result:
+        # Forward to message if it exists
+        # event_id = result.group(1)
+        checksum = result.group(2)
+        event_list = Group.objects.filter(checksum=checksum)
+        top_matches = event_list[:2]
+        if len(top_matches) == 0:
             return render_to_response('sentry/invalid_message_id.html', {
-                    'project': project,
-                }, request)
-    else:
-        event_list = Group.objects.none()
+                'project': project,
+            }, request)
+        elif len(top_matches) == 1:
+            return HttpResponseRedirect(top_matches[0].get_absolute_url())
+    elif uuid_re.match(query):
+        # Forward to message if it exists
+        try:
+            message = Event.objects.get(event_id=query)
+        except Event.DoesNotExist:
+            return render_to_response('sentry/invalid_message_id.html', {
+                'project': project,
+            }, request)
+        else:
+            return HttpResponseRedirect(message.get_absolute_url())
+    elif not settings.USE_SEARCH:
+        return render_to_response('sentry/invalid_message_id.html', {
+                'project': project,
+            }, request)
 
     sort = request.GET.get('sort')
-    if sort == 'date':
-        event_list = event_list.order_by('-last_seen')
-    elif sort == 'new':
-        event_list = event_list.order_by('-first_seen')
-    else:
-        sort = 'relevance'
+    if sort not in SEARCH_SORT_OPTIONS:
+        sort = SEARCH_DEFAULT_SORT_OPTION
+    sort_label = _get_sort_label(sort)
+
+    documents = list(SearchDocument.objects.search(project, query, sort_by=sort))
+    groups = Group.objects.in_bulk([d.group_id for d in documents])
+
+    event_list = []
+    for doc in documents:
+        try:
+            event_list.append(groups[doc.group_id])
+        except KeyError:
+            continue
 
     return render_to_response('sentry/search.html', {
         'project': project,
         'event_list': event_list,
         'query': query,
         'sort': sort,
+        'sort_label': sort_label,
     }, request)
 
 
diff --git a/sentry/web/helpers.py b/sentry/web/helpers.py
index 53bb9e1911..0e64369380 100644
--- a/sentry/web/helpers.py
+++ b/sentry/web/helpers.py
@@ -84,7 +84,7 @@ def render_to_string(template, context=None, request=None):
         context = {}
 
     context.update({
-        'has_search': False,
+        'HAS_SEARCH': settings.USE_SEARCH,
         'MESSAGES_PER_PAGE': settings.MESSAGES_PER_PAGE,
         'PROJECT_ID': int(settings.PROJECT),
         'VIEWS': list(View.objects.all()),
