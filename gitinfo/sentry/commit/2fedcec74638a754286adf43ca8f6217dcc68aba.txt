commit 2fedcec74638a754286adf43ca8f6217dcc68aba
Author: Mark Story <mark@sentry.io>
Date:   Tue Sep 10 11:43:32 2019 -0400

    fix(discover2) Hide related events when it fails (#14619)
    
    Related events can fail to load if the account doesn't have
    global-views. When that request fails and the account is missing
    global-views we can hide the panel entirely.
    
    Fixes SEN-1018

diff --git a/src/sentry/static/sentry/app/components/asyncComponent.tsx b/src/sentry/static/sentry/app/components/asyncComponent.tsx
index 266fe11644..364608bde8 100644
--- a/src/sentry/static/sentry/app/components/asyncComponent.tsx
+++ b/src/sentry/static/sentry/app/components/asyncComponent.tsx
@@ -378,7 +378,7 @@ export default class AsyncComponent<
     return <LoadingIndicator />;
   }
 
-  renderError(error, disableLog = false, disableReport = false) {
+  renderError(error, disableLog = false, disableReport = false): React.ReactNode {
     // 401s are captured by SudoModal, but may be passed back to AsyncComponent if they close the modal without identifying
     const unauthorizedErrors = Object.values(this.state.errors).find(
       resp => resp && resp.status === 401
diff --git a/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx b/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx
index 9fc7f38602..18b9e07f77 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx
@@ -36,8 +36,11 @@ class RelatedEvents extends AsyncComponent<Props> {
     projects: PropTypes.arrayOf(SentryTypes.Project),
   };
 
+  hasGlobalViews(): boolean {
+    return this.props.organization.features.includes('global-views');
+  }
+
   getEndpoints(): Array<[string, string, {query: EventQuery}]> {
-    // TODO what happens when global-views feature is not on the org?
     const {event, organization} = this.props;
     const eventsUrl = `/organizations/${organization.slug}/eventsv2/`;
     const trace = event.tags.find(tag => tag.key === 'trace');
@@ -70,6 +73,15 @@ class RelatedEvents extends AsyncComponent<Props> {
     return <Placeholder height="120px" bottomGutter={2} />;
   }
 
+  renderError(error) {
+    // Hide the related events if the user doesn't have global-views
+    if (!this.hasGlobalViews()) {
+      return null;
+    }
+
+    return super.renderError(error);
+  }
+
   renderBody() {
     const {location, projects, event} = this.props;
     const {events} = this.state;
diff --git a/tests/js/spec/stores/discoverSavedQueriesStore.spec.jsx b/tests/js/spec/stores/discoverSavedQueriesStore.spec.jsx
index caa2ed633d..db99df626a 100644
--- a/tests/js/spec/stores/discoverSavedQueriesStore.spec.jsx
+++ b/tests/js/spec/stores/discoverSavedQueriesStore.spec.jsx
@@ -136,6 +136,7 @@ describe('DiscoverSavedQueriesStore', function() {
     };
     createSavedQuery(api, 'org-1', query);
     await tick();
+    await tick();
 
     const state = DiscoverSavedQueriesStore.get();
     expect(state.isLoading).toEqual(false);
