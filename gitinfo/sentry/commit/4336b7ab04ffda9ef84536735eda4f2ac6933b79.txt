commit 4336b7ab04ffda9ef84536735eda4f2ac6933b79
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue Mar 24 10:17:19 2020 -0700

    ref(frontend): Move one-off pendingChangeQueue to where its used (#17866)

diff --git a/src/sentry/static/sentry/app/stores/groupStore.jsx b/src/sentry/static/sentry/app/stores/groupStore.jsx
index 5ed671f5b8..de7dcfc90f 100644
--- a/src/sentry/static/sentry/app/stores/groupStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupStore.jsx
@@ -4,7 +4,6 @@ import Reflux from 'reflux';
 
 import GroupActions from 'app/actions/groupActions';
 import IndicatorStore from 'app/stores/indicatorStore';
-import PendingChangeQueue from 'app/utils/pendingChangeQueue';
 import {t} from 'app/locale';
 
 function showAlert(msg, type) {
@@ -13,6 +12,30 @@ function showAlert(msg, type) {
   });
 }
 
+class PendingChangeQueue {
+  constructor() {
+    this.changes = [];
+  }
+
+  getForItem(itemId) {
+    return this.changes.filter(change => change[1] === itemId);
+  }
+
+  push(changeId, itemId, data) {
+    this.changes.push([changeId, itemId, data]);
+  }
+
+  remove(changeId, itemId) {
+    this.changes = this.changes.filter(
+      change => change[0] !== changeId || change[1] !== itemId
+    );
+  }
+
+  forEach() {
+    this.changes.forEach.apply(this.changes, arguments);
+  }
+}
+
 const GroupStore = Reflux.createStore({
   listenables: [GroupActions],
 
diff --git a/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx b/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx
deleted file mode 100644
index 05fc441a73..0000000000
--- a/src/sentry/static/sentry/app/utils/pendingChangeQueue.jsx
+++ /dev/null
@@ -1,25 +0,0 @@
-class PendingChangeQueue {
-  constructor() {
-    this.changes = [];
-  }
-
-  getForItem(itemId) {
-    return this.changes.filter(change => change[1] === itemId);
-  }
-
-  push(changeId, itemId, data) {
-    this.changes.push([changeId, itemId, data]);
-  }
-
-  remove(changeId, itemId) {
-    this.changes = this.changes.filter(
-      change => change[0] !== changeId || change[1] !== itemId
-    );
-  }
-
-  forEach() {
-    this.changes.forEach.apply(this.changes, arguments);
-  }
-}
-
-export default PendingChangeQueue;
