commit e386a0e3defa32dfe43d13111d018d05b9f28c0b
Author: Ben Vinegar <ben@benv.ca>
Date:   Tue Aug 18 11:21:50 2015 -0700

    Project releases search now updates query string (refs #1776)

diff --git a/src/sentry/static/sentry/app/views/projectReleases.jsx b/src/sentry/static/sentry/app/views/projectReleases.jsx
index ed40d374bb..1f46ce1f2e 100644
--- a/src/sentry/static/sentry/app/views/projectReleases.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases.jsx
@@ -19,8 +19,6 @@ var ReleaseList = React.createClass({
   },
 
   render() {
-    var params = this.context.router.getCurrentParams();
-
     return (
       <ul className="release-list">
           {this.props.releaseList.map((release) => {
@@ -72,16 +70,24 @@ var ProjectReleases = React.createClass({
   },
 
   getInitialState() {
+    var queryParams = this.context.router.getCurrentQuery();
+
     return {
       releaseList: [],
       loading: true,
       error: false,
-      query: this.props.defaultQuery
+      query: queryParams.query || this.props.defaultQuery
     };
   },
 
   onSearch(query) {
-    this.setState({ query: query }, this.fetchData);
+    var router = this.context.router;
+
+    var targetQueryParams = {};
+    if (query !== '')
+      targetQueryParams.query = query;
+
+    router.transitionTo("projectReleases", router.getCurrentParams(), targetQueryParams);
   },
 
   componentWillMount() {
@@ -90,7 +96,10 @@ var ProjectReleases = React.createClass({
   },
 
   routeDidChange() {
-    this.fetchData();
+    var queryParams = this.context.router.getCurrentQuery();
+    this.setState({
+      query: queryParams.query
+    }, this.fetchData);
   },
 
   fetchData() {
diff --git a/tests/js/spec/views/projectReleases.spec.jsx b/tests/js/spec/views/projectReleases.spec.jsx
new file mode 100644
index 0000000000..c23fa3ef41
--- /dev/null
+++ b/tests/js/spec/views/projectReleases.spec.jsx
@@ -0,0 +1,101 @@
+var React = require("react/addons");
+var TestUtils = React.addons.TestUtils;
+
+var stubReactComponents = require("../../helpers/stubReactComponent");
+var stubContext = require("../../helpers/stubContext");
+var stubRouter = require("../../helpers/stubRouter");
+
+var api = require("app/api");
+
+var ProjectReleases = require("app/views/projectReleases");
+var SearchBar = require("app/views/stream/searchBar");
+var Pagination = require("app/components/pagination");
+
+describe("ProjectReleases", function () {
+  beforeEach(function () {
+    this.sandbox = sinon.sandbox.create();
+
+    this.sandbox.stub(api, "request");
+    stubReactComponents(this.sandbox, [SearchBar, Pagination]);
+
+    this.ContextStubbedProjectReleases = stubContext(ProjectReleases, {
+      router: stubRouter({
+        getCurrentParams() {
+          return {
+            orgId: "123",
+            projectId: "456"
+          };
+        },
+        getCurrentQuery() {
+          return {
+            limit: 0,
+            query: "derp"
+          };
+        }
+      })
+    });
+  });
+
+  afterEach(function () {
+    this.sandbox.restore();
+  });
+
+  describe("fetchData()", function () {
+    it("should call releases endpoint", function () {
+      TestUtils.renderIntoDocument(
+        <this.ContextStubbedProjectReleases setProjectNavSection={function(){}}/>
+      );
+
+      expect(api.request.args[0][0]).to.equal('/projects/123/456/releases/?limit=50&query=derp');
+    });
+  });
+
+  describe("getInitialState()", function () {
+    it("should take query state from query string", function () {
+      TestUtils.renderIntoDocument(
+        <this.ContextStubbedProjectReleases setProjectNavSection={function(){}}/>
+      );
+
+      var projectReleases = TestUtils.renderIntoDocument(
+        <this.ContextStubbedProjectReleases setProjectNavSection={function(){}}/>
+      ).refs.wrapped;
+
+      expect(projectReleases.state.query).to.equal("derp");
+    });
+  });
+
+  describe("onSearch", function () {
+    it("should change query string with new search parameter", function () {
+      var projectReleases = TestUtils.renderIntoDocument(
+        <this.ContextStubbedProjectReleases setProjectNavSection={function(){}}/>
+      ).refs.wrapped;
+
+      var router = this.sandbox.stub(projectReleases.context.router, 'transitionTo');
+
+      projectReleases.onSearch("searchquery");
+
+      expect(router.calledOnce).to.be.ok;
+      expect(router.args[0]).to.eql([
+        "projectReleases",
+        { orgId: "123", projectId: "456" },
+        { query: "searchquery" }
+      ]);
+    });
+  });
+
+  describe("routeDidChange()", function () {
+    it("should update state with latest query pulled from query string", function () {
+      var projectReleases = TestUtils.renderIntoDocument(
+        <this.ContextStubbedProjectReleases setProjectNavSection={function(){}}/>
+      ).refs.wrapped;
+
+      this.sandbox.stub(projectReleases.context.router, 'getCurrentQuery').returns({
+        query: "newquery"
+      });
+
+      projectReleases.routeDidChange();
+
+      expect(projectReleases.state.query).to.eql("newquery");
+    });
+  });
+});
\ No newline at end of file
