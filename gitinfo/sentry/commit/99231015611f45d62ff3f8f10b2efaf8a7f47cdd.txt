commit 99231015611f45d62ff3f8f10b2efaf8a7f47cdd
Author: Max Bittker <maxbittker@gmail.com>
Date:   Fri Oct 7 11:49:22 2016 -0700

    fix dropdownLink memory leak (#4296)
    
    * fix dropdownLink memory leak
    
    dropdownLink now uses
    `jQuery(this.refs.dropdownToggle.parentNode).off();`
    to remove event handlers in componentWillUnmount, and has a new test
    case to ensure this works. testcase calls componentWillUnmount manually
    fixes #4275
    /cc @getsentry/product
    
    * case sensitive fix

diff --git a/src/sentry/static/sentry/app/components/dropdownLink.jsx b/src/sentry/static/sentry/app/components/dropdownLink.jsx
index c152dc95de..283afee24a 100644
--- a/src/sentry/static/sentry/app/components/dropdownLink.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownLink.jsx
@@ -49,6 +49,10 @@ const DropdownLink = React.createClass({
       });
   },
 
+  componentWillUnmount(){
+    jQuery(this.refs.dropdownToggle.parentNode).off();
+  },
+
   close() {
     this.setState({isOpen: false});
   },
diff --git a/tests/js/spec/components/dropdownLink.spec.jsx b/tests/js/spec/components/dropdownLink.spec.jsx
new file mode 100644
index 0000000000..ca91524d60
--- /dev/null
+++ b/tests/js/spec/components/dropdownLink.spec.jsx
@@ -0,0 +1,29 @@
+import React from 'react';
+import TestUtils from 'react-addons-test-utils';
+import DropdownLink from 'app/components/dropdownLink';
+
+describe('DropdownLink', function() {
+  const INPUT_1 = {
+    title: 'test',
+    onOpen: ()=>{},
+    onClose: ()=>{},
+    topLevelClasses: 'React.PropTypes.string',
+    menuClasses: ''
+  };
+
+
+  describe('componentWillUnmount()', function() {
+    it('should remove event handlers before unmounting', function() {
+      let dropdownlink = TestUtils.renderIntoDocument(<DropdownLink {...INPUT_1}/>);
+
+      let handlers = jQuery._data(dropdownlink.refs.dropdownToggle.parentNode, 'events');
+      expect(handlers).to.be.an('object');
+
+      dropdownlink.componentWillUnmount(dropdownlink);
+
+      handlers = jQuery._data(dropdownlink.refs.dropdownToggle.parentNode, 'events');
+      expect(handlers).to.be.an('undefined');
+    });
+  });
+
+});
