commit cd6b7fb6f8d8596fd2ed027d86e3eff4d889d71d
Author: William Mak <william@wmak.io>
Date:   Wed Jan 8 12:10:30 2020 -0500

    fix(search) - fixing autocomplete for numeric fields (#16161)
    
    * fix(search) - fixing autocomplete for numeric tags
    
    - Currently if a tag is numeric (eg. `stack.lineno`) autocomplete
      doesn't work at all, since we try to perform a `LIKE` or `!=` on an
      int field with a string field
    - This changes how we handle numeric keys so that when there's no query
      we return all possible values
    - And if there is a query try to find values within 100 of what was
      searched

diff --git a/src/sentry/tagstore/snuba/backend.py b/src/sentry/tagstore/snuba/backend.py
index f62e75c29f..101ebc4678 100644
--- a/src/sentry/tagstore/snuba/backend.py
+++ b/src/sentry/tagstore/snuba/backend.py
@@ -24,6 +24,22 @@ SEEN_COLUMN = "timestamp"
 # all values for a given tag/column
 BLACKLISTED_COLUMNS = frozenset(["project_id"])
 
+FUZZY_NUMERIC_KEYS = frozenset(
+    [
+        "device.battery_level",
+        "device.charging",
+        "device.online",
+        "device.simulator",
+        "error.handled",
+        "stack.colno",
+        "stack.in_app",
+        "stack.lineno",
+        "stack.stack_level",
+        "transaction.duration",
+    ]
+)
+FUZZY_NUMERIC_DISTANCE = 50
+
 tag_value_data_transformers = {"first_seen": parse_datetime, "last_seen": parse_datetime}
 
 
@@ -595,13 +611,19 @@ class SnubaTagStorage(TagStorage):
 
         conditions = []
 
-        if snuba_key in BLACKLISTED_COLUMNS:
-            snuba_key = "tags[%s]" % (key,)
-
-        if query:
-            conditions.append([snuba_key, "LIKE", u"%{}%".format(query)])
+        if key in FUZZY_NUMERIC_KEYS:
+            converted_query = int(query) if query is not None and query.isdigit() else None
+            if converted_query is not None:
+                conditions.append([snuba_key, ">=", converted_query - FUZZY_NUMERIC_DISTANCE])
+                conditions.append([snuba_key, "<=", converted_query + FUZZY_NUMERIC_DISTANCE])
         else:
-            conditions.append([snuba_key, "!=", ""])
+            if snuba_key in BLACKLISTED_COLUMNS:
+                snuba_key = "tags[%s]" % (key,)
+
+            if query:
+                conditions.append([snuba_key, "LIKE", u"%{}%".format(query)])
+            else:
+                conditions.append([snuba_key, "!=", ""])
 
         filters = {"project_id": projects}
         if environments:
@@ -626,7 +648,7 @@ class SnubaTagStorage(TagStorage):
         )
 
         tag_values = [
-            TagValue(key=key, value=value, **fix_tag_value_data(data))
+            TagValue(key=key, value=six.text_type(value), **fix_tag_value_data(data))
             for value, data in six.iteritems(results)
         ]
 
diff --git a/tests/snuba/tagstore/test_tagstore_backend.py b/tests/snuba/tagstore/test_tagstore_backend.py
index 04dc75dba3..81a0c5488b 100644
--- a/tests/snuba/tagstore/test_tagstore_backend.py
+++ b/tests/snuba/tagstore/test_tagstore_backend.py
@@ -60,6 +60,7 @@ class TagStorageTest(TestCase, SnubaTestCase):
                             "sentry:user": u"id:user{}".format(r),
                         },
                         "user": {"id": u"user{}".format(r), "email": u"user{}@sentry.io".format(r)},
+                        "exception": {"values": [{"stacktrace": {"frames": [{"lineno": 29}]}}]},
                     },
                 }
                 for r in [1, 2]
@@ -487,6 +488,37 @@ class TagStorageTest(TestCase, SnubaTestCase):
             == []
         )
 
+    def test_numeric_tag_value_paginator(self):
+        from sentry.tagstore.types import TagValue
+
+        assert list(
+            self.ts.get_tag_value_paginator(
+                self.proj1.id, self.proj1env1.id, "stack.lineno"
+            ).get_result(10)
+        ) == [
+            TagValue(
+                key="stack.lineno",
+                value="29",
+                times_seen=2,
+                first_seen=self.now - timedelta(seconds=2),
+                last_seen=self.now - timedelta(seconds=1),
+            )
+        ]
+
+        assert list(
+            self.ts.get_tag_value_paginator(
+                self.proj1.id, self.proj1env1.id, "stack.lineno", query="30"
+            ).get_result(10)
+        ) == [
+            TagValue(
+                key="stack.lineno",
+                value="29",
+                times_seen=2,
+                first_seen=self.now - timedelta(seconds=2),
+                last_seen=self.now - timedelta(seconds=1),
+            )
+        ]
+
     def test_get_group_tag_value_iter(self):
         from sentry.tagstore.types import GroupTagValue
 
