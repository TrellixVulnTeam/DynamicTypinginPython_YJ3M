commit bfc9716860e9b5ab8143f0c69017149c1d501ed9
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Mon Aug 28 11:33:27 2017 -0700

    clean up discarded group list UI (#5970)
    
    * clean up discarded group list UI
    
    * adjust EventOrGroupHeader to not always include a link
    
    * fix tests

diff --git a/src/sentry/api/serializers/models/grouptombstone.py b/src/sentry/api/serializers/models/grouptombstone.py
index f33631fcae..222b0fc210 100644
--- a/src/sentry/api/serializers/models/grouptombstone.py
+++ b/src/sentry/api/serializers/models/grouptombstone.py
@@ -28,5 +28,6 @@ class GroupTombstoneSerializer(Serializer):
             'message': obj.message,
             'culprit': obj.culprit,
             'type': obj.get_event_type(),
+            'metadata': obj.get_event_metadata(),
             'actor': attrs.get('user'),
         }
diff --git a/src/sentry/models/grouptombstone.py b/src/sentry/models/grouptombstone.py
index 04ed20d1eb..a2afe8e454 100644
--- a/src/sentry/models/grouptombstone.py
+++ b/src/sentry/models/grouptombstone.py
@@ -4,6 +4,7 @@ import logging
 
 from django.db import models
 
+from sentry import eventtypes
 from sentry.constants import LOG_LEVELS, MAX_CULPRIT_LENGTH
 from sentry.db.models import (
     BoundedPositiveIntegerField, FlexibleForeignKey, GzippedDictField, Model
@@ -40,3 +41,18 @@ class GroupTombstone(Model):
         See ``sentry.eventtypes``.
         """
         return self.data.get('type', 'default')
+
+    def get_event_metadata(self):
+        """
+        Return the metadata of this issue.
+
+        See ``sentry.eventtypes``.
+        """
+        etype = self.data.get('type')
+        if etype is None:
+            etype = 'default'
+        if 'metadata' not in self.data:
+            data = self.data.copy() if self.data else {}
+            data['message'] = self.message
+            return eventtypes.get(etype)(data).get_metadata()
+        return self.data['metadata']
diff --git a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
index 3791549b51..de4c8c57c7 100644
--- a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
+++ b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
@@ -22,10 +22,15 @@ class EventOrGroupHeader extends React.Component {
       groupID: PropTypes.string,
       culprit: PropTypes.string
     }),
+    includeLink: PropTypes.bool,
     hideIcons: PropTypes.bool,
     hideLevel: PropTypes.bool
   };
 
+  static defaultProps = {
+    includeLink: true
+  };
+
   getMessage() {
     let {data} = this.props;
     let {metadata, type, culprit} = data || {};
@@ -40,23 +45,39 @@ class EventOrGroupHeader extends React.Component {
     }
   }
 
-  render() {
-    let {className, hideLevel, hideIcons, orgId, projectId, data} = this.props;
-    let cx = classNames('event-issue-header', className);
+  getTitle() {
+    let {hideLevel, hideIcons, includeLink, orgId, projectId, data} = this.props;
     let {id, level, groupID} = data || {};
     let isEvent = !!data.eventID;
-    let url = `/${orgId}/${projectId}/issues/${isEvent ? groupID : id}/${isEvent ? `events/${data.id}/` : ''}`;
+
+    let props = {};
+    let Wrapper;
+    if (includeLink) {
+      props.to = `/${orgId}/${projectId}/issues/${isEvent ? groupID : id}/${isEvent ? `events/${data.id}/` : ''}`;
+      Wrapper = Link;
+    } else {
+      Wrapper = 'span';
+    }
+
+    return (
+      <Wrapper {...props}>
+        {!hideLevel && level && <span className="error-level truncate">{level}</span>}
+        {!hideIcons && <span className="icon icon-soundoff" />}
+        {!hideIcons && <span className="icon icon-star-solid" />}
+        <EventOrGroupTitle {...this.props} />
+      </Wrapper>
+    );
+  }
+
+  render() {
+    let {className} = this.props;
+    let cx = classNames('event-issue-header', className);
     let message = this.getMessage();
 
     return (
       <div className={cx}>
         <h3 className="truncate">
-          <Link to={url}>
-            {!hideLevel && level && <span className="error-level truncate">{level}</span>}
-            {!hideIcons && <span className="icon icon-soundoff" />}
-            {!hideIcons && <span className="icon icon-star-solid" />}
-            <EventOrGroupTitle {...this.props} />
-          </Link>
+          {this.getTitle()}
         </h3>
         {message &&
           <div className="event-message truncate">
diff --git a/src/sentry/static/sentry/app/components/groupTombstones.jsx b/src/sentry/static/sentry/app/components/groupTombstones.jsx
index 6317d7d6e5..72520c3ba6 100644
--- a/src/sentry/static/sentry/app/components/groupTombstones.jsx
+++ b/src/sentry/static/sentry/app/components/groupTombstones.jsx
@@ -1,60 +1,66 @@
 import React from 'react';
+import _ from 'lodash';
 
 import AlertActions from '../actions/alertActions';
-
+import Avatar from '../components/avatar';
+import EventOrGroupHeader from '../components/eventOrGroupHeader';
 import LoadingError from '../components/loadingError';
 import LinkWithConfirmation from '../components/linkWithConfirmation';
+import TooltipMixin from '../mixins/tooltip';
 
 import ApiMixin from '../mixins/apiMixin';
 
-import {t, tct} from '../locale';
+import {t} from '../locale';
 
 const GroupTombstoneRow = React.createClass({
   propTypes: {
     data: React.PropTypes.object.isRequired,
-    undiscard: React.PropTypes.func.isRequired
+    undiscard: React.PropTypes.func.isRequired,
+    orgId: React.PropTypes.string.isRequired,
+    projectId: React.PropTypes.string.isRequired
   },
+
+  mixins: [
+    TooltipMixin({
+      selector: '.tip'
+    })
+  ],
+
   render() {
-    let {data, undiscard} = this.props;
+    let {data, undiscard} = this.props, actor = data.actor;
+
     return (
       <li className={`group row level-${data.level} type-${data.type}`}>
-        <div className="col-md-7 col-xs-8 event-details">
-          <div>
-            <h3 className="truncate">
-              <span className="error-level truncate" title={data.level}>
-                {data.level}
-              </span>
-              <span>
-                <span style={{marginRight: 10}}>{data.type}</span>
-                <em>{data.culprit}</em><br />
-              </span>
-            </h3>
-            <div className="event-message truncate">
-              <span className="message">{data.message}</span>
-            </div>
-            <div className="event-extra">
-
-              <LinkWithConfirmation
-                title={t('Undiscard')}
-                className="btn btn-warning btn-xs"
-                message={t(
-                  'Undiscarding this group means that ' +
-                    'incoming events that match this will no longer be discarded. ' +
-                    'New incoming events will count toward your event quota ' +
-                    'and will display on your issues dashboard. ' +
-                    'Are you sure you wish to continue?'
-                )}
-                onConfirm={() => {
-                  undiscard(data.id);
-                }}>
-                <span>{t('Undiscard')}</span>
-              </LinkWithConfirmation>
-              {data.actor &&
-                <span style={{marginLeft: 10}} className="event-message actor">
-                  {tct('discarded by [actor]', {actor: data.actor.name})}
-                </span>}
-            </div>
-          </div>
+        <div className="col-md-10 event-details issue">
+          <EventOrGroupHeader
+            includeLink={false}
+            hideIcons={true}
+            {..._.omit(this.props, 'undiscard')}
+          />
+        </div>
+        <div className="col-md-1 event-actor">
+          {actor &&
+            <span className="tip" title={t('Discarded by %s', actor.name || actor.email)}>
+              <Avatar user={data.actor} />
+            </span>}
+        </div>
+        <div className="col-md-1 event-undiscard">
+          <span className="tip" title={t('Undiscard')}>
+            <LinkWithConfirmation
+              className="group-remove btn btn-default btn-sm"
+              message={t(
+                'Undiscarding this group means that ' +
+                  'incoming events that match this will no longer be discarded. ' +
+                  'New incoming events will count toward your event quota ' +
+                  'and will display on your issues dashboard. ' +
+                  'Are you sure you wish to continue?'
+              )}
+              onConfirm={() => {
+                undiscard(data.id);
+              }}>
+              <span className="icon-trash undiscard" />
+            </LinkWithConfirmation>
+          </span>
         </div>
       </li>
     );
@@ -100,11 +106,11 @@ const GroupTombstones = React.createClass({
   render() {
     if (this.props.tombstoneError) return <LoadingError />;
 
-    let {tombstones} = this.props;
+    let {tombstones, orgId, projectId} = this.props;
     return (
       <div>
         <div className="row" style={{paddingTop: 10}}>
-          <div className="col-sm-8">
+          <div className="col-md-12 discarded-groups">
             <h5>{t('Discarded Groups')}</h5>
             {tombstones.length
               ? <ul className="group-list">
@@ -113,6 +119,8 @@ const GroupTombstones = React.createClass({
                       <GroupTombstoneRow
                         key={data.id}
                         data={data}
+                        orgId={orgId}
+                        projectId={projectId}
                         undiscard={this.undiscard}
                       />
                     );
diff --git a/src/sentry/static/sentry/less/discarded-groups.less b/src/sentry/static/sentry/less/discarded-groups.less
new file mode 100644
index 0000000000..eadf3a5323
--- /dev/null
+++ b/src/sentry/static/sentry/less/discarded-groups.less
@@ -0,0 +1,29 @@
+/**
+* Discarded Groups
+* ============================================================================
+*/
+
+.discarded-groups {
+
+  .group-list {
+
+    .event-actor,
+    .event-undiscard {
+      text-align: center;
+      padding: 12px 0 8px 0;
+    }
+
+    .event-undiscard {
+
+      .btn:hover {
+        color: #fff;
+        background: @red;
+        border-color: @red-dark;
+        text-shadow: 0 1px 0 rgba(0,0,0, .15);
+      }
+
+    }
+
+  }
+
+}
diff --git a/src/sentry/static/sentry/less/sentry.less b/src/sentry/static/sentry/less/sentry.less
index 85ce608d15..28892a2634 100644
--- a/src/sentry/static/sentry/less/sentry.less
+++ b/src/sentry/static/sentry/less/sentry.less
@@ -37,6 +37,7 @@
 @import url("./admin.less");
 @import url("./auth.less");
 @import url("./dashboard.less");
+@import url("./discarded-groups.less");
 @import url("./docs.less");
 @import url("./group-detail.less");
 @import url("./organization.less");
diff --git a/tests/js/spec/components/__snapshots__/eventOrGroupHeader.spec.jsx.snap b/tests/js/spec/components/__snapshots__/eventOrGroupHeader.spec.jsx.snap
index b2e447def3..765be6171f 100644
--- a/tests/js/spec/components/__snapshots__/eventOrGroupHeader.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/eventOrGroupHeader.spec.jsx.snap
@@ -37,6 +37,7 @@ exports[`EventOrGroupHeader Event hides level tag 1`] = `
           }
         }
         hideLevel={true}
+        includeLink={true}
         orgId="orgId"
         projectId="projectId"
       />
@@ -81,6 +82,7 @@ exports[`EventOrGroupHeader Event renders with \`type = csp\` 1`] = `
             "type": "csp",
           }
         }
+        includeLink={true}
         orgId="orgId"
         projectId="projectId"
       />
@@ -134,6 +136,7 @@ exports[`EventOrGroupHeader Event renders with \`type = default\` 1`] = `
             "type": "default",
           }
         }
+        includeLink={true}
         orgId="orgId"
         projectId="projectId"
       />
@@ -178,6 +181,7 @@ exports[`EventOrGroupHeader Event renders with \`type = error\` 1`] = `
             "type": "error",
           }
         }
+        includeLink={true}
         orgId="orgId"
         projectId="projectId"
       />
@@ -235,6 +239,7 @@ exports[`EventOrGroupHeader Group renders with \`type = csp\` 1`] = `
             "type": "csp",
           }
         }
+        includeLink={true}
         orgId="orgId"
         projectId="projectId"
       />
@@ -292,6 +297,7 @@ exports[`EventOrGroupHeader Group renders with \`type = default\` 1`] = `
             "type": "default",
           }
         }
+        includeLink={true}
         orgId="orgId"
         projectId="projectId"
       />
@@ -349,6 +355,7 @@ exports[`EventOrGroupHeader Group renders with \`type = error\` 1`] = `
             "type": "error",
           }
         }
+        includeLink={true}
         orgId="orgId"
         projectId="projectId"
       />
