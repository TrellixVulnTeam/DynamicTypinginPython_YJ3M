commit 941c7dfde8adff734358c0e3d63a2c6bfb331f93
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Feb 1 11:31:32 2018 -0800

    feat(projects): Add ability to add team to project from project teams page

diff --git a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
index a9c1d96e96..b927df9117 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
@@ -8,8 +8,10 @@ import ApiMixin from '../../../mixins/apiMixin';
 import AsyncView from '../../asyncView';
 import Button from '../../../components/buttons/button';
 import Confirm from '../../../components/confirm';
+import DropdownLink from '../../../components/dropdownLink';
 import EmptyMessage from '../components/emptyMessage';
 import IndicatorStore from '../../../stores/indicatorStore';
+import MenuItem from '../../../components/menuItem';
 import Panel from '../components/panel';
 import PanelBody from '../components/panelBody';
 import PanelHeader from '../components/panelHeader';
@@ -85,14 +87,48 @@ const TeamRow = createReactClass({
 class ProjectTeams extends AsyncView {
   getEndpoints() {
     let {orgId, projectId} = this.props.params;
-    return [['teams', `/projects/${orgId}/${projectId}/teams/`]];
+    return [
+      ['projectTeams', `/projects/${orgId}/${projectId}/teams/`],
+      ['allTeams', `/organizations/${orgId}/teams/`],
+    ];
   }
 
   handleRemovedTeam(removedTeam) {
-    this.setState({
-      teams: this.state.teams.filter(team => {
-        return team.slug !== removedTeam.slug;
-      }),
+    this.setState(prevState => {
+      return {
+        projectTeams: this.state.projectTeams.filter(team => {
+          return team.slug !== removedTeam.slug;
+        }),
+      };
+    });
+  }
+
+  handleAddedTeam(team) {
+    this.setState(prevState => {
+      return {
+        projectTeams: this.state.projectTeams.concat([team]),
+      };
+    });
+  }
+
+  handleAdd(team) {
+    if (this.state.loading) return;
+
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
+    let {orgId, projectId} = this.props.params;
+    this.api.request(`/projects/${orgId}/${projectId}/teams/${team.slug}/`, {
+      method: 'POST',
+      success: (d, _, jqXHR) => {
+        this.handleAddedTeam(team);
+        IndicatorStore.remove(loadingIndicator);
+      },
+      error: () => {
+        this.setState({
+          error: true,
+          loading: false,
+        });
+        IndicatorStore.remove(loadingIndicator);
+      },
     });
   }
 
@@ -109,7 +145,7 @@ class ProjectTeams extends AsyncView {
     return [
       <PanelHeader key={'header'}>{t('Team')}</PanelHeader>,
       <PanelBody key={'body'}>
-        {this.state.teams.map(team => {
+        {this.state.projectTeams.map(team => {
           return (
             <TeamRow
               access={access}
@@ -128,12 +164,40 @@ class ProjectTeams extends AsyncView {
   renderBody() {
     let body;
 
-    if (this.state.teams.length > 0) body = this.renderResults();
+    if (this.state.projectTeams.length > 0) body = this.renderResults();
     else body = this.renderEmpty();
 
+    let projectTeams = new Set(this.state.projectTeams.map(team => team.slug));
+    let teamsToAdd = this.state.allTeams.filter(team => {
+      return team.hasAccess && !projectTeams.has(team.slug);
+    });
+
     return (
       <div>
-        <SettingsPageHeader title={t('Teams')} />
+        <SettingsPageHeader
+          title={t('Teams')}
+          action={
+            <DropdownLink
+              anchorRight
+              className="btn btn-primary btn-sm"
+              title={t('Add Team')}
+            >
+              {teamsToAdd.length ? (
+                teamsToAdd.map(team => {
+                  return (
+                    <MenuItem noAnchor={true} key={team.slug}>
+                      <a onClick={this.handleAdd.bind(this, team)}>{team.name}</a>
+                    </MenuItem>
+                  );
+                })
+              ) : (
+                <MenuItem noAnchor={true} key={'empty'}>
+                  <a>{t('No available teams')}</a>
+                </MenuItem>
+              )}
+            </DropdownLink>
+          }
+        />
         <Panel>{body}</Panel>
       </div>
     );
diff --git a/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
index c22028906c..e002f6afdc 100644
--- a/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTeamSettings.spec.jsx.snap
@@ -6,6 +6,26 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
 >
   <div>
     <SettingsPageHeading
+      action={
+        <DropdownLink
+          alwaysRenderMenu={true}
+          anchorRight={true}
+          caret={true}
+          className="btn btn-primary btn-sm"
+          disabled={false}
+          title="Add Team"
+        >
+          <MenuItem
+            noAnchor={true}
+          >
+            <a
+              onClick={[Function]}
+            >
+              Team Name 2
+            </a>
+          </MenuItem>
+        </DropdownLink>
+      }
       title="Teams"
     />
     <Panel>
diff --git a/tests/js/spec/views/projectTeamSettings.spec.jsx b/tests/js/spec/views/projectTeamSettings.spec.jsx
index cadf6eb6ec..bcbae71c4f 100644
--- a/tests/js/spec/views/projectTeamSettings.spec.jsx
+++ b/tests/js/spec/views/projectTeamSettings.spec.jsx
@@ -8,6 +8,12 @@ describe('ProjectTeamsSettings', function() {
   let org;
   let project;
   let team;
+  let team2 = {
+    id: '2',
+    slug: 'team-slug-2',
+    name: 'Team Name 2',
+    hasAccess: true,
+  };
 
   beforeEach(function() {
     org = TestStubs.Organization();
@@ -24,6 +30,11 @@ describe('ProjectTeamsSettings', function() {
       method: 'GET',
       body: [team],
     });
+    Client.addMockResponse({
+      url: `/organizations/${org.slug}/teams/`,
+      method: 'GET',
+      body: [team, team2],
+    });
   });
 
   describe('render()', function() {
@@ -43,7 +54,7 @@ describe('ProjectTeamsSettings', function() {
     });
   });
 
-  describe('handleRemove()', function() {
+  describe('TeamRow.handleRemove()', function() {
     it('can remove a team', function() {
       let endpoint = `/projects/${org.slug}/${project.slug}/teams/${team.slug}/`;
       let mock = Client.addMockResponse({
