commit 80e8d6ad9a29c5c96ffa8b8f626031080c07a78c
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Tue Mar 31 11:58:53 2020 -0700

    fix(teams): Fix access request error (#17963)

diff --git a/src/sentry/api/endpoints/organization_member_team_details.py b/src/sentry/api/endpoints/organization_member_team_details.py
index 4241151436..27816f6582 100644
--- a/src/sentry/api/endpoints/organization_member_team_details.py
+++ b/src/sentry/api/endpoints/organization_member_team_details.py
@@ -111,12 +111,16 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
         return queryset.select_related("user").get()
 
     def _create_access_request(self, request, team, member):
+        omt, created = OrganizationAccessRequest.objects.get_or_create(team=team, member=member)
+
+        if not created:
+            return
+
         requester = request.user if request.user != member.user else None
-        omt, created = OrganizationAccessRequest.objects.get_or_create(
-            team=team, member=member, requester=requester
-        )
-        if created:
-            omt.send_request_email()
+        if requester:
+            omt.update(requester=requester)
+
+        omt.send_request_email()
 
     def post(self, request, organization, member_id, team_slug):
         """
diff --git a/tests/sentry/api/endpoints/test_organization_member_team_details.py b/tests/sentry/api/endpoints/test_organization_member_team_details.py
index e130265cb8..ef8fcf189b 100644
--- a/tests/sentry/api/endpoints/test_organization_member_team_details.py
+++ b/tests/sentry/api/endpoints/test_organization_member_team_details.py
@@ -213,7 +213,6 @@ class CreateWithClosedMembershipTest(CreateOrganizationMemberTeamTest):
             team=self.team, organizationmember=self.member
         ).exists()
 
-        # access request created
         assert OrganizationAccessRequest.objects.filter(
             team=self.team, member=self.member, requester=None
         ).exists()
@@ -227,7 +226,6 @@ class CreateWithClosedMembershipTest(CreateOrganizationMemberTeamTest):
             team=self.team, organizationmember=self.admin
         ).exists()
 
-        # access request created
         assert OrganizationAccessRequest.objects.filter(
             team=self.team, member=self.admin, requester=None
         ).exists()
@@ -241,7 +239,6 @@ class CreateWithClosedMembershipTest(CreateOrganizationMemberTeamTest):
             team=self.team, organizationmember=self.member
         ).exists()
 
-        # access request created
         assert OrganizationAccessRequest.objects.filter(
             team=self.team, member=self.member, requester=self.team_member.user
         ).exists()
@@ -256,11 +253,26 @@ class CreateWithClosedMembershipTest(CreateOrganizationMemberTeamTest):
             team=self.team, organizationmember=self.member
         ).exists()
 
-        # access request created
         assert OrganizationAccessRequest.objects.filter(
             team=self.team, member=self.member, requester=self.admin.user
         ).exists()
 
+    def test_multiple_of_the_same_access_request(self):
+        self.login_as(self.member.user)
+        resp = self.get_response(self.org.slug, self.admin.id, self.team.slug)
+        assert resp.status_code == 202
+
+        self.login_as(self.team_member.user)
+        resp = self.get_response(self.org.slug, self.admin.id, self.team.slug)
+        assert resp.status_code == 202
+
+        assert not OrganizationMemberTeam.objects.filter(
+            team=self.team, organizationmember=self.admin
+        ).exists()
+
+        oar = OrganizationAccessRequest.objects.get(team=self.team, member=self.admin)
+        assert oar.requester == self.member.user
+
 
 class DeleteOrganizationMemberTeamTest(MemberTeamFixtures):
     endpoint = "sentry-api-0-organization-member-team-details"
