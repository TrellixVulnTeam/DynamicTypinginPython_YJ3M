commit 1dc57e0a1d0c50c2700df671e9bca60ed4d87c2e
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Nov 2 11:03:47 2010 -0700

    More intelligent grouping of messages sent through logging

diff --git a/sentry/client/base.py b/sentry/client/base.py
index bef4efa156..2dfa179142 100644
--- a/sentry/client/base.py
+++ b/sentry/client/base.py
@@ -24,7 +24,10 @@ class SentryClient(object):
         kwargs.setdefault('level', logging.ERROR)
         kwargs.setdefault('server_name', conf.NAME)
 
-        checksum = construct_checksum(**kwargs)
+        if 'checksum' not in kwargs:
+            checksum = construct_checksum(**kwargs)
+        else:
+            checksum = kwargs['checksum']
 
         if conf.THRASHING_TIMEOUT and conf.THRASHING_LIMIT:
             cache_key = 'sentry:%s:%s' % (kwargs.get('class_name') or '', checksum)
@@ -89,9 +92,16 @@ class SentryClient(object):
         kwargs.update({
             'logger': record.name,
             'level': record.levelno,
-            'message': record.getMessage(),
+            'message': force_unicode(record.msg),
+            'server_name': conf.NAME,
         })
         
+        # construct the checksum with the unparsed message
+        kwargs['checksum'] = construct_checksum(**kwargs)
+        
+        # save the message with included formatting
+        kwargs['message'] = record.getMessage()
+        
         # If there's no exception being processed, exc_info may be a 3-tuple of None
         # http://docs.python.org/library/sys.html#sys.exc_info
         if record.exc_info and all(record.exc_info):
@@ -117,6 +127,7 @@ class SentryClient(object):
         """
         if not exc_info:
             exc_info = sys.exc_info()
+
         exc_type, exc_value, exc_traceback = exc_info
 
         def shorten(var):
diff --git a/sentry/manager.py b/sentry/manager.py
index 6dbc2136f9..1dd1308332 100644
--- a/sentry/manager.py
+++ b/sentry/manager.py
@@ -39,7 +39,9 @@ class SentryManager(models.Manager):
             data['url'] = url
             url = url[:URL_MAX_LENGTH]
 
-        checksum = construct_checksum(**kwargs)
+        checksum = kwargs.pop('checksum', None)
+        if not checksum:
+            checksum = construct_checksum(**kwargs)
 
         mail = False
         try:
diff --git a/sentry/tests/tests.py b/sentry/tests/tests.py
index 4c1d074110..3ca445c1f2 100644
--- a/sentry/tests/tests.py
+++ b/sentry/tests/tests.py
@@ -572,6 +572,26 @@ class SentryTestCase(TestCase):
         message = client.create_from_record(record)
         self.assertEquals('test', message.message)
 
+    def testGroupFormatting(self):
+        logger = logging.getLogger()
+        
+        self.setUpHandler()
+
+        logger.error('This is a test %s', 'error')
+        self.assertEquals(Message.objects.count(), 1)
+        self.assertEquals(GroupedMessage.objects.count(), 1)
+        last = Message.objects.get()
+        self.assertEquals(last.logger, 'root')
+        self.assertEquals(last.level, logging.ERROR)
+        self.assertEquals(last.message, 'This is a test error')
+
+        logger.error('This is a test %s', 'message')
+        logger.error('This is a test %s', 'foo')
+        
+        self.assertEquals(Message.objects.count(), 3)
+        self.assertEquals(GroupedMessage.objects.count(), 1)
+        
+
 
 class SentryViewsTest(TestCase):
     urls = 'sentry.tests.urls'
