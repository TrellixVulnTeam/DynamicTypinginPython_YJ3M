commit 571dec965b422239ade39e229a940ea85da97f9c
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Apr 14 13:48:02 2013 -0700

    Switch can_create_teams permission to behave similar to can_create_projects and remove unused view

diff --git a/src/sentry/permissions.py b/src/sentry/permissions.py
index 47708f9142..39b8db02ca 100644
--- a/src/sentry/permissions.py
+++ b/src/sentry/permissions.py
@@ -26,6 +26,7 @@ class Permission(object):
 
 class Permissions(object):
     ADD_PROJECT = Permission('add_project', 'create new projects')
+    ADD_TEAM = Permission('add_team', 'create new teams')
 
 
 def perm_override(perm):
diff --git a/src/sentry/templates/sentry/bases/team.html b/src/sentry/templates/sentry/bases/team.html
index 903d6c4135..adb1fd5406 100644
--- a/src/sentry/templates/sentry/bases/team.html
+++ b/src/sentry/templates/sentry/bases/team.html
@@ -20,7 +20,7 @@
             <a href="{% url 'sentry-manage-access-groups' team.slug %}">{% trans "Access Groups" %}</a>
         </li>
         <li class="pull-right{% if SUBSECTION == 'new_project' %} active{% endif %}">
-            <a href="{% url 'sentry-new-team-project' team.slug %}">{% trans "Create a New Project" %}</a>
+            <a href="{% url 'sentry-new-project' team.slug %}">{% trans "Create a New Project" %}</a>
         </li>
     </ul>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/dashboard.html b/src/sentry/templates/sentry/dashboard.html
index 867f53f793..72a07bfe5d 100644
--- a/src/sentry/templates/sentry/dashboard.html
+++ b/src/sentry/templates/sentry/dashboard.html
@@ -7,7 +7,7 @@
 
 {% block page_header %}
     <div class="pull-right">
-        <a href="{% url 'sentry-new-team-project' team.slug %}" class="btn btn-primary">{% trans "Create a New Project" %}</a>
+        <a href="{% url 'sentry-new-project' team.slug %}" class="btn btn-primary">{% trans "Create a New Project" %}</a>
     </div>
     {{ block.super }}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/header.html b/src/sentry/templates/sentry/header.html
index 983d48461e..81e4a69d38 100644
--- a/src/sentry/templates/sentry/header.html
+++ b/src/sentry/templates/sentry/header.html
@@ -29,10 +29,8 @@
                                         {% for t in TEAM_LIST %}
                                             <li><a href="{% url 'sentry' t.slug %}">{{ t.name }}</a></li>
                                         {% endfor %}
-                                        {% if can_create_teams %}
-                                            <li class="divider"></li>
-                                            <li><a href="{% url 'sentry-new-team' %}">{% trans "Create new team" %}</a></li>
-                                        {% endif %}
+                                        <li class="divider"></li>
+                                        <li><a href="{% url 'sentry-new-team' %}">{% trans "Create new team" %}</a></li>
                                     </ul>
                                 </li>
                             {% endif %}
diff --git a/src/sentry/templates/sentry/projects/keys.html b/src/sentry/templates/sentry/projects/keys.html
index f21d149325..e24babf307 100644
--- a/src/sentry/templates/sentry/projects/keys.html
+++ b/src/sentry/templates/sentry/projects/keys.html
@@ -16,7 +16,7 @@
 {% block inner %}
     <div class="page-header">
         {% if can_add_key %}
-            <a href="{% url 'sentry-new-project-key' project.team.slug project.slug %}" class="btn pull-right btn-primary">{% trans "Generate New Key" %}</a>
+            <a href="{% url '-key' project.team.slug project.slug %}" class="btn pull-right btn-primary">{% trans "Generate New Key" %}</a>
         {% endif %}
         <h2>
             {% trans "Manage API Keys" %}
diff --git a/src/sentry/templates/sentry/projects/new.html b/src/sentry/templates/sentry/projects/new.html
deleted file mode 100644
index 03e93b9454..0000000000
--- a/src/sentry/templates/sentry/projects/new.html
+++ /dev/null
@@ -1,71 +0,0 @@
-{% extends "sentry/projects/base.html" %}
-
-{% load url from future %}
-{% load crispy_forms_tags %}
-{% load i18n %}
-
-{% block title %}{% trans "New Project" %} | {{ block.super }}{% endblock %}
-
-{% block breadcrumb %}
-    {{ block.super }}
-    <li class="divider"></li>
-    <li><a href="{% url 'sentry-new-project' team.slug %}">{% trans "New Project" %}</a></li>
-{% endblock %}
-
-{% block main %}
-    <section class="body">
-        <div class="page-header">
-            <h2>{% trans "Create a New Project" %}</h2>
-        </div>
-
-        <p>{% blocktrans %}Projects allow you to scope events to a specific application in your organization. For example, you might have seperate projects for production vs development instances, or separate projects for your web app and mobile app.{% endblocktrans %}</p>
-
-        <br>
-
-        <form class="form-stacked" action="" method="post" id="new_project">
-            {% csrf_token %}
-
-            {{ project_form|as_crispy_errors }}
-            {% for field in project_form %}
-                {% include "sentry/partial/_form_field.html" %}
-            {% endfor %}
-
-            {% if select_team_form %}
-                <div id="select_team">
-                    {{ select_team_form|as_crispy_errors }}
-
-                    {% for field in select_team_form %}
-                        {% include "sentry/partial/_form_field.html" %}
-                    {% endfor %}
-        
-                    {% if new_team_form %}
-                        <p><small>You can also <a href="#" rel="create-new-team">create a new team</a>.</small></p>
-                    {% endif %}
-                </div>
-            {% endif %}
-    
-            {% if new_team_form %}
-                <div id="new_team">
-                    {% for field in new_team_form %}
-                        {% include "sentry/partial/_form_field.html" %}
-                    {% endfor %}
-
-                    {% if select_team_form %}
-                        <p><small>You can also <a href="#" rel="select-team">select an existing team</a>.</small></p>
-                    {% endif %}
-                </div>
-            {% endif %}
-
-            <div class="actions">
-                <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
-            </div>
-        </form>
-    </section>
-    <script>
-    new app.NewProjectPage({
-        el: '#new_project',
-        canSelectTeam: {% if select_team_form %}true{% else %}false{% endif %},
-        canCreateTeam: {% if new_team_form %}true{% else %}false{% endif %},
-    })
-    </script>
-{% endblock %}
diff --git a/src/sentry/templates/sentry/select_team.html b/src/sentry/templates/sentry/select_team.html
index 98ca2a8f80..97c487f4b9 100644
--- a/src/sentry/templates/sentry/select_team.html
+++ b/src/sentry/templates/sentry/select_team.html
@@ -44,11 +44,7 @@
                 {% endfor %}
             </ul>
         {% else %}
-            {% if can_create_teams %}
-                <div class="alert alert-info">{% trans "You are not a member of any teams." %}</div>
-            {% else %}
-                <div class="alert alert-notice">{% trans "You are not a member of any teams. Ask an administrator to add you to a team." %}</div>
-            {% endif %}
+            <div class="alert alert-info">{% trans "You are not a member of any teams." %}</div>
         {% endif %}
     </section>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/teams/base.html b/src/sentry/templates/sentry/teams/base.html
index 72b3ad2c70..a5c2bcd303 100644
--- a/src/sentry/templates/sentry/teams/base.html
+++ b/src/sentry/templates/sentry/teams/base.html
@@ -8,11 +8,9 @@
 {% block bodyclass %}{% endblock %}
 
 {% block page_header %}
-    {% if can_create_teams %}
-        <div class="pull-right">
-            <a href="{% url 'sentry-new-team' %}" class="btn btn-primary">{% trans "Create a new team" %}</a>
-        </div>
-    {% endif %}
+    <div class="pull-right">
+        <a href="{% url 'sentry-new-team' %}" class="btn btn-primary">{% trans "Create a new team" %}</a>
+    </div>
 
     <ul class="breadcrumb">
         <li><a href="{% url 'sentry' %}" class="dashboard-btn" title="{% trans "Dashboard" %}">
diff --git a/src/sentry/templates/sentry/teams/list.html b/src/sentry/templates/sentry/teams/list.html
index cf7e78b4cd..4fba6914a3 100644
--- a/src/sentry/templates/sentry/teams/list.html
+++ b/src/sentry/templates/sentry/teams/list.html
@@ -40,10 +40,6 @@
             </tbody>
         </table>
     {% else %}
-        {% if can_create_teams %}
-            <div class="alert alert-info">{% trans "You are not a member of any teams." %}</div>
-        {% else %}
-            <div class="alert alert-notice">{% trans "You are not a member of any teams. Ask an administrator to add you to a team." %}</div>
-        {% endif %}
+        <div class="alert alert-info">{% trans "You are not a member of any teams." %}</div>
     {% endif %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/teams/projects/index.html b/src/sentry/templates/sentry/teams/projects/index.html
index fb937015c9..ee9ec88aef 100644
--- a/src/sentry/templates/sentry/teams/projects/index.html
+++ b/src/sentry/templates/sentry/teams/projects/index.html
@@ -13,7 +13,7 @@
 {% block inner %}
     <div class="page-header">
         {% if can_add_project %}
-            <a href="{% url 'sentry-new-team-project' team.slug %}" class="btn pull-right btn-primary">{% trans "New Project" %}</a>
+            <a href="{% url 'sentry-new-project' team.slug %}" class="btn pull-right btn-primary">{% trans "New Project" %}</a>
         {% endif %}
         <h2>{% trans "Projects" %}</h2>
     </div>
diff --git a/src/sentry/templates/sentry/teams/projects/new.html b/src/sentry/templates/sentry/teams/projects/new.html
index cd1761237c..5bc4bb73a2 100644
--- a/src/sentry/templates/sentry/teams/projects/new.html
+++ b/src/sentry/templates/sentry/teams/projects/new.html
@@ -8,7 +8,7 @@
 {% block breadcrumb %}
     {{ block.super }}
     <li class="divider"></li>
-    <li><a href="{% url 'sentry-new-team-project' team.slug %}">{% trans "New Project" %}</a></li>
+    <li><a href="{% url 'sentry-new-project' team.slug %}">{% trans "New Project" %}</a></li>
 {% endblock %}
 
 {% block main %}
diff --git a/src/sentry/web/frontend/projects.py b/src/sentry/web/frontend/projects.py
index 675f2fb6f9..5d0aadcb9e 100644
--- a/src/sentry/web/frontend/projects.py
+++ b/src/sentry/web/frontend/projects.py
@@ -16,14 +16,13 @@ from django.utils.translation import ugettext_lazy as _
 from sentry.conf import settings
 from sentry.constants import MEMBER_OWNER
 from sentry.models import Project, ProjectKey, Team, FilterKey
-from sentry.permissions import (can_create_projects, can_remove_project, can_create_teams,
-    can_add_project_key, can_remove_project_key)
+from sentry.permissions import (
+    can_remove_project, can_add_project_key, can_remove_project_key)
 from sentry.plugins import plugins
 from sentry.web.decorators import login_required, has_access
-from sentry.web.forms.projects import (NewProjectForm, NewProjectAdminForm,
+from sentry.web.forms.projects import (
     ProjectTagsForm, EditProjectForm, RemoveProjectForm, EditProjectAdminForm,
     NotificationTagValuesForm, AlertSettingsForm)
-from sentry.web.forms.teams import NewTeamForm, SelectTeamForm
 from sentry.web.helpers import render_to_response, plugin_config
 
 
@@ -38,72 +37,6 @@ def get_started(request, team, project):
     }, request)
 
 
-# TODO: we need a team specific project creation view, vs the "get started" view
-@login_required
-def new_project(request):
-    from django.contrib.auth.models import User
-
-    if not can_create_projects(request.user):
-        return HttpResponseRedirect(reverse('sentry'))
-
-    allow_create_teams = can_create_teams(request.user)
-    team_list = Team.objects.get_for_user(request.user)
-
-    if request.user.has_perm('sentry.can_add_project') and User.objects.all()[0:2] == 2:
-        project_form_cls = NewProjectAdminForm
-        project_initial = {
-            'owner': request.user.username,
-        }
-    else:
-        project_form_cls = NewProjectForm
-        project_initial = {}
-
-    if len(team_list) > 0:
-        select_team_form = SelectTeamForm(team_list, request.POST or None, prefix='st')
-    elif not allow_create_teams:
-        return render_to_response('sentry/projects/cannot_create_teams.html', {}, request)
-    else:
-        select_team_form = None
-
-    if allow_create_teams:
-        new_team_form = NewTeamForm(request.POST or None, prefix='nt')
-    else:
-        new_team_form = None
-
-    project_form = project_form_cls(request.POST or None, initial=project_initial, prefix='prj')
-
-    is_new_team = new_team_form and new_team_form.is_valid()
-    if is_new_team or not select_team_form:
-        team_form = new_team_form
-    else:
-        team_form = select_team_form
-
-    if project_form.is_valid() and team_form.is_valid():
-        project = project_form.save(commit=False)
-        if not project.owner:
-            project.owner = request.user
-
-        if is_new_team:
-            team = new_team_form.save(commit=False)
-            team.owner = project.owner
-            team.save()
-        else:
-            team = select_team_form.cleaned_data['team']
-
-        project.team = team
-        project.save()
-
-        if project.platform not in (None, 'other'):
-            return HttpResponseRedirect(reverse('sentry-docs-client', args=[project.team.slug, project.slug, project.platform]))
-        return HttpResponseRedirect(reverse('sentry-get-started', args=[project.team.slug, project.slug]))
-
-    return render_to_response('sentry/projects/new.html', {
-        'project_form': project_form,
-        'select_team_form': select_team_form,
-        'new_team_form': new_team_form,
-    }, request)
-
-
 @has_access(MEMBER_OWNER)
 @csrf_protect
 def remove_project(request, team, project):
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index c33ca28ad2..8031334919 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -47,7 +47,7 @@ def team_list(request):
 @csrf_protect
 def create_new_team(request):
     if not can_create_teams(request.user):
-        return HttpResponseRedirect(reverse('sentry'))
+        return missing_perm(request, Permissions.ADD_TEAM)
 
     if request.user.has_perm('sentry.can_add_team'):
         form_cls = NewTeamAdminForm
@@ -64,7 +64,7 @@ def create_new_team(request):
         if not team.owner_id:
             team.owner = request.user
         team.save()
-        return HttpResponseRedirect(reverse('sentry-new-team-project', args=[team.slug]))
+        return HttpResponseRedirect(reverse('sentry-new-project', args=[team.slug]))
 
     context = csrf(request)
     context.update({
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index 92d2ab2eb8..d39e22a333 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -19,15 +19,16 @@ from django.utils.safestring import mark_safe
 from sentry.conf import settings
 from sentry.constants import MEMBER_OWNER
 from sentry.models import Project, Team, Option, ProjectOption, ProjectKey
-from sentry.permissions import can_create_teams
 
 logger = logging.getLogger('sentry.errors')
 
 
 def get_project_list(user=None, access=None, hidden=False, key='id', team=None):
     warnings.warn('get_project_list is Deprecated. Use Project.objects.get_for_user instead.', DeprecationWarning)
-    return SortedDict((getattr(p, key), p)
-        for p in Project.objects.get_for_user(user, access))
+    return SortedDict(
+        (getattr(p, key), p)
+        for p in Project.objects.get_for_user(user, access)
+    )
 
 
 def group_is_public(group, user):
@@ -111,7 +112,6 @@ def get_default_context(request, existing_context=None, team=None):
 
         context.update({
             'request': request,
-            'can_create_teams': can_create_teams(request.user),
         })
         if team:
             context.update({
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 2e0df0e77c..a470ebdd03 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -106,14 +106,11 @@ urlpatterns = patterns('',
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/projects/$', teams.manage_team_projects,
         name='sentry-manage-team-projects'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/projects/new/$', teams.create_new_team_project,
-        name='sentry-new-team-project'),
+        name='sentry-new-project'),
     url(r'^accept/(?P<member_id>\d+)/(?P<token>\w+)/$', teams.accept_invite,
         name='sentry-accept-invite'),
 
     # Settings - Projects
-    url(r'^account/teams/(?P<team_slug>[\w_-]+)/projects/new/$', projects.new_project,
-        name='sentry-new-project'),
-
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/settings/$', projects.manage_project,
         name='sentry-manage-project'),
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/docs/$', docs.client_help,
@@ -123,7 +120,7 @@ urlpatterns = patterns('',
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/keys/$', projects.manage_project_keys,
         name='sentry-manage-project-keys'),
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/keys/new/$', projects.new_project_key,
-        name='sentry-new-project-key'),
+        name='-key'),
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/keys/(?P<key_id>\d+)/remove/$', projects.remove_project_key,
         name='sentry-remove-project-key'),
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/plugins/$', projects.manage_plugins,
diff --git a/tests/sentry/web/frontend/generic/tests.py b/tests/sentry/web/frontend/generic/tests.py
index 109922e56b..f32b877587 100644
--- a/tests/sentry/web/frontend/generic/tests.py
+++ b/tests/sentry/web/frontend/generic/tests.py
@@ -2,6 +2,7 @@ import mock
 
 from django.core.urlresolvers import reverse
 
+from sentry.models import Team
 from sentry.testutils import TestCase, fixture, before
 
 
@@ -34,6 +35,16 @@ class DashboardTest(TestCase):
         assert resp.status_code == 302
         assert resp['Location'] == 'http://testserver' + reverse('sentry', args=[team.slug])
 
+    @mock.patch('sentry.web.frontend.generic.can_create_teams', mock.Mock(return_value=True))
+    def test_renders_team_selector_with_multiple(self):
+        Team.objects.create(name='test', owner=self.user)
+        Team.objects.create(name='test2', owner=self.user)
+
+        resp = self.client.get(self.path)
+
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/select_team.html')
+
     @mock.patch('sentry.web.frontend.generic.can_create_teams', mock.Mock(return_value=False))
     def test_shows_error_when_no_teams_and_cannot_create(self):
         resp = self.client.get(self.path)
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index 8963aeaebd..216425c520 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -8,60 +8,12 @@ from mock_django.managers import ManagerMock
 
 from django.core.urlresolvers import reverse
 
-from sentry.constants import MEMBER_OWNER
 from sentry.models import Project, ProjectKey
 from sentry.testutils import TestCase, fixture, before
 
 logger = logging.getLogger(__name__)
 
 
-class NewProjectTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-new-team-project', args=[self.team.slug])
-
-    def test_missing_permission(self):
-        resp = self.client.get(self.path)
-        assert resp.status_code == 302
-
-    def test_does_load(self):
-        self.login_as(self.user)
-
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed('sentry/projects/new.html')
-
-    def test_missing_name(self):
-        self.login_as(self.user)
-
-        resp = self.client.post(self.path)
-        self.assertEquals(resp.status_code, 200)
-
-    def test_valid_params(self):
-        self.login_as(self.user)
-
-        resp = self.client.post(self.path, {
-            'name': 'Test Project',
-            'slug': 'test',
-            'platform': 'python',
-        })
-        self.assertNotEquals(resp.status_code, 200)
-
-        project = Project.objects.filter(name='Test Project')
-        self.assertTrue(project.exists())
-        project = project.get()
-
-        self.assertEquals(project.owner, self.user)
-        self.assertNotEquals(project.team, None)
-
-        member_set = list(project.team.member_set.all())
-
-        self.assertEquals(len(member_set), 1)
-        member = member_set[0]
-        self.assertEquals(member.user, self.user)
-        self.assertEquals(member.type, MEMBER_OWNER)
-
-
 class ManageProjectKeysTest(TestCase):
     @fixture
     def path(self):
@@ -83,7 +35,7 @@ class ManageProjectKeysTest(TestCase):
 class NewProjectKeyTest(TestCase):
     @fixture
     def path(self):
-        return reverse('sentry-new-project-key', args=[self.team.slug, self.project.id])
+        return reverse('-key', args=[self.team.slug, self.project.id])
 
     def test_requires_authentication(self):
         self.assertRequiresAuthentication(self.path)
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index d6ae8a7ad9..acf21e7d75 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -47,8 +47,8 @@ class NewTeamTest(BaseTeamTest):
     @mock.patch('sentry.web.frontend.teams.can_create_teams', mock.Mock(return_value=False))
     def test_missing_permission(self):
         resp = self.client.post(self.path)
-        self.assertEquals(resp.status_code, 302)
-        self.assertEquals(resp['Location'], 'http://testserver' + reverse('sentry'))
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/generic_error.html')
 
     @mock.patch('sentry.web.frontend.teams.can_create_teams', mock.Mock(return_value=True))
     def test_missing_params(self):
