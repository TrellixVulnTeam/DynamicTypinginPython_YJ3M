commit 11b650a9e96f67f1a0fd977d9250eb9b9f3bd60b
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jan 5 14:02:20 2013 -0800

    Correct users_seen behavior and add tests

diff --git a/src/sentry/buffer/base.py b/src/sentry/buffer/base.py
index e0ed66c420..e54769eca3 100644
--- a/src/sentry/buffer/base.py
+++ b/src/sentry/buffer/base.py
@@ -52,6 +52,7 @@ class Buffer(object):
         buffer_incr_complete.send_robust(
             model=model,
             columns=columns,
+            filters=filters,
             extra=extra,
             created=created,
             sender=model,
diff --git a/src/sentry/manager.py b/src/sentry/manager.py
index 587dd5cf59..3838b362da 100644
--- a/src/sentry/manager.py
+++ b/src/sentry/manager.py
@@ -594,7 +594,7 @@ class GroupManager(BaseManager, ChartMixin):
             silence = silence_timedelta.days * 86400 + silence_timedelta.seconds
 
             app.buffer.incr(self.model, update_kwargs, {
-                'pk': group.pk,
+                'id': group.id,
             }, extra)
         else:
             # TODO: this update should actually happen as part of create
diff --git a/src/sentry/models.py b/src/sentry/models.py
index f20ef57dd3..2f9fc0926d 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -943,21 +943,21 @@ def set_language_on_logon(request, user, **kwargs):
         request.session['django_language'] = language
 
 
-@buffer_incr_complete.connect(sender=MessageFilterValue)
-def record_user_count(columns, extra, created, **kwargs):
+@buffer_incr_complete.connect(sender=MessageFilterValue, weak=False)
+def record_user_count(filters, extra, created, **kwargs):
     from sentry import app
 
     if not created:
         # if it's not a new row, it's not a unique user
         return
 
-    if columns.get('key') != 'user_email':
+    if filters.get('key') != 'user_email':
         return
 
     app.buffer.incr(Group, {
         'users_seen': 1,
     }, {
-        'id': columns['group'].id,
+        'id': filters['group'].id,
     })
 
 
diff --git a/src/sentry/signals.py b/src/sentry/signals.py
index 1da5a0358c..05f4c65c5a 100644
--- a/src/sentry/signals.py
+++ b/src/sentry/signals.py
@@ -1,3 +1,4 @@
+from functools import wraps
 from django.dispatch import Signal
 
 
@@ -16,7 +17,7 @@ class BetterSignal(Signal):
 
         if receiver is None:
             return wrapped
-        return wrapped(receiver)
+        return wraps(receiver)(wrapped(receiver))
 
 
 regression_signal = BetterSignal(providing_args=["instance"])
diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index 7144c77882..0a156b98f1 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -46,6 +46,32 @@ class SentryManagerTest(TestCase):
         self.assertEquals(event.message, 'foo')
         self.assertEquals(event.project_id, 1)
 
+    def test_records_users_seen(self):
+        # TODO: we could lower the level of this test by just testing our signal receiver's logic
+        event = Group.objects.from_kwargs(1, message='foo', **{
+            'sentry.interfaces.User': {
+                'email': 'foo@example.com',
+            },
+        })
+        group = Group.objects.get(id=event.group_id)
+        assert group.users_seen == 1
+
+        event = Group.objects.from_kwargs(1, message='foo', **{
+            'sentry.interfaces.User': {
+                'email': 'foo@example.com',
+            },
+        })
+        group = Group.objects.get(id=event.group_id)
+        assert group.users_seen == 1
+
+        event = Group.objects.from_kwargs(1, message='foo', **{
+            'sentry.interfaces.User': {
+                'email': 'bar@example.com',
+            },
+        })
+        group = Group.objects.get(id=event.group_id)
+        assert group.users_seen == 2
+
     def test_valid_timestamp_without_tz(self):
         # TODO: this doesnt error, but it will throw a warning. What should we do?
         with self.Settings(USE_TZ=True):
