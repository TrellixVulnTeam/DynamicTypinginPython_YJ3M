commit bad970e21a7d35a329ad5a9b837ce70ead87ea88
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Dec 30 17:53:37 2014 -0800

    Improve watchers

diff --git a/gulpfile.js b/gulpfile.js
index f14d52563a..265090cc6c 100644
--- a/gulpfile.js
+++ b/gulpfile.js
@@ -8,6 +8,7 @@ var gulp = require("gulp"),
     gp_rename = require("gulp-rename"),
     gp_uglify = require("gulp-uglify"),
     gp_util = require("gulp-util"),
+    gp_watch = require("gulp-watch"),
     gp_webpack = require("gulp-webpack");
 
 var path = require("path");
@@ -83,6 +84,31 @@ var jsDistros = {
   ]
 }
 
+// Workaround for https://github.com/gulpjs/gulp/issues/71
+var origSrc = gulp.src;
+gulp.src = function () {
+    return fixPipe(origSrc.apply(this, arguments));
+};
+function fixPipe(stream) {
+    var origPipe = stream.pipe;
+    stream.pipe = function (dest) {
+        arguments[0] = dest.on('error', function (error) {
+            var nextStreams = dest._nextStreams;
+            if (nextStreams) {
+                nextStreams.forEach(function (nextStream) {
+                    nextStream.emit('error', error.toString());
+                });
+            } else if (dest.listeners('error').length === 1) {
+                throw error;
+            }
+        });
+        var nextStream = fixPipe(origPipe.apply(this, arguments));
+        (this._nextStreams || (this._nextStreams = [])).push(nextStream);
+        return nextStream;
+    };
+    return stream;
+}
+
 function file(name) {
   return path.join(__dirname, staticPrefix, name);
 }
@@ -108,7 +134,7 @@ function buildJsCompileTask(name, fileList) {
 
 function buildJsWatchTask(name, fileList) {
   return function(){
-    return gulp.watch(fileList, ["dist:js:" + name]);
+    return ;
   };
 };
 
@@ -134,8 +160,11 @@ function buildJsDistroTasks() {
     compileTask = buildJsCompileTask(distroName, fileList);
     gulp.task("dist:js:" + distroName, compileTask);
 
-    watchTask = buildJsWatchTask(distroName, fileList);
-    gulp.task("watch:js:" + distroName, watchTask);
+    gulp.task("watch:js:" + distroName, function(){
+      return gp_watch(fileList, function(){
+        gulp.start("dist:js:" + distroName);
+      });
+    });
 
     jsDistroNames.push(distroName);
   }
@@ -167,11 +196,15 @@ gulp.task("dist:webpack", function(){
 gulp.task("dist", ["dist:js", "dist:css", "dist:webpack"]);
 
 gulp.task("watch:css:sentry", function(){
-  return gulp.watch(file("less/sentry.less"), ["dist:css:sentry"]);
+  return gp_watch(file("less/sentry.less"), function(){
+    gulp.start("dist:css:sentry");
+  });
 });
 
 gulp.task("watch:css:wall", function(){
-  return gulp.watch(file("less/wall.less"), ["dist:css:wall"]);
+  return gp_watch(file("less/wall.less"), function(){
+    gulp.start("dist:css:wall");
+  });
 });
 
 gulp.task("watch:css", ["watch:css:sentry", "watch:css:wall"]);
diff --git a/src/sentry/management/commands/runserver.py b/src/sentry/management/commands/runserver.py
index 43e1e6d354..cd1f31ecdd 100644
--- a/src/sentry/management/commands/runserver.py
+++ b/src/sentry/management/commands/runserver.py
@@ -30,7 +30,7 @@ class Command(RunserverCommand):
         devnull = open('/dev/null', 'w')
 
         self.stdout.write('>> Running [gulp watch]')
-        return Popen([self.gulp_bin, 'watch'], cwd=self.cwd, stdout=devnull)
+        return Popen([self.gulp_bin, 'watch'], cwd=self.cwd)
 
     def run_server(self):
         args = sys.argv
@@ -39,9 +39,6 @@ class Command(RunserverCommand):
 
     def run(self, *args, **options):
         if options['use_watcher']:
-            self.stdout.write('>> Running [gulp clean]')
-            Popen([self.gulp_bin, 'clean'], cwd=self.cwd).wait()
-
             self.stdout.write('>> Running [gulp dist]')
             Popen([self.gulp_bin, 'dist'], cwd=self.cwd).wait()
 
