commit 597b86d0786e1f244aff787ce6489fec4e4c4f1f
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jul 12 19:16:55 2015 -0700

    Basic functional submission and error handling

diff --git a/src/sentry/templates/sentry/error-page-embed.html b/src/sentry/templates/sentry/error-page-embed.html
index 527ea2835a..369045cd87 100644
--- a/src/sentry/templates/sentry/error-page-embed.html
+++ b/src/sentry/templates/sentry/error-page-embed.html
@@ -90,7 +90,7 @@
 .sentry-error-embed .form-field textarea {
   font-size: 15px;
   padding: 8px;
-  border: 0;
+  border: 1px solid #fcfcfc;
   background: #fcfcfc;
   border-radius: 0;
   box-shadow: none;
@@ -133,6 +133,20 @@
   float: right;
   font-size: 12px;
 }
+.sentry-error-embed .message-success,
+.sentry-error-embed .message-error {
+  text-align: center;
+  font-size: 14px;
+}
+.sentry-error-embed .message-success {
+  color: green;
+}
+.sentry-error-embed .message-error {
+  color: red;
+}
+.sentry-error-embed .error-wrapper p:last-child {
+  margin-bottom: 0;
+}
 @media screen and (max-height: 570px) {
   .sentry-error-embed {
     max-height: none;
@@ -197,21 +211,23 @@
     <p><span class="hide-tiny">Our team has been notified.</span> If you'd like to help, tell us what happened below.</p>
   </header>
   <form>
-    {{ form.dsn }}
-    <div class="form-field clearfix{% if form.name.errors %} form-errors{% endif %}">
-      <label>Name</label>
-      {{ form.name }}
-    </div>
-    <div class="form-field clearfix{% if form.email.errors %} form-errors{% endif %}">
-      <label>Email</label>
-      {{ form.email }}
-    </div>
-    <div class="form-field clearfix{% if form.comments.errors %} form-errors{% endif %}">
-      <label>What happened?</label>
-      {{ form.comments }}
+    <div class="error-wrapper"></div>
+    <div class="form-content">
+      <div class="form-field clearfix">
+        <label>Name</label>
+        {{ form.name }}
+      </div>
+      <div class="form-field clearfix">
+        <label>Email</label>
+        {{ form.email }}
+      </div>
+      <div class="form-field clearfix">
+        <label>What happened?</label>
+        {{ form.comments }}
+      </div>
     </div>
     <div class="form-submit clearfix">
-      <input type="submit" class="btn" value="Submit Crash Report" />
+      <button type="submit" class="btn">Submit Crash Report</button>
       <a class="close">Close</a>
       <p class="powered-by">
         Crash reports powered by <a href="https://getsentry.com">Sentry</a>
diff --git a/src/sentry/templates/sentry/error-page-embed.js b/src/sentry/templates/sentry/error-page-embed.js
index e930586e7f..282a06f39f 100644
--- a/src/sentry/templates/sentry/error-page-embed.js
+++ b/src/sentry/templates/sentry/error-page-embed.js
@@ -1,9 +1,25 @@
-(function(window, document){
+(function(window, document, JSON){
   'use strict';
 
+  var GENERIC_ERROR = '<p class="message-error">An unknown error occurred while submitting your report. Please try again.</p>';
+  var FORM_ERROR = '<p class="message-error">Some fields were invalid. Please correct the errors and try again.</p>';
+
   var template = {{ template }};
   var endpoint = {{ endpoint }};
   var options = window.sentryConfig;
+  var encode = window.encodeURIComponent;
+
+  var escape = function(str) {
+    return str.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
+  };
+
+  var serialize = function(form) {
+    var q = [];
+    for (var i = 0; i < form.elements.length; i++) {
+      q.push(form.elements[i].name + "=" + encodeURIComponent(form.elements[i].value));
+    }
+    return q.join("&");
+  };
 
   var onReady = function(f) {
     /in/.test(document.readyState)
@@ -15,6 +31,45 @@
     document.body.removeChild(child);
   };
 
+  var submit = function(body) {
+    var xhr;
+    if (window.XMLHttpRequest) {
+      // code for IE7+, Firefox, Chrome, Opera, Safari
+      xhr = new XMLHttpRequest();
+    } else {
+      // code for IE6, IE5
+      xhr = new ActiveXObject("Microsoft.XMLHTTP");
+    }
+
+    xhr.onreadystatechange = function() {
+      if (xhr.readyState === XMLHttpRequest.DONE) {
+        if (xhr.status === 200) {
+          formContent.innerHTML = "<p class="message-success">Your report has been sent. Thank you!</p>";
+          submitBtn.parentNode.removeChild(submitBtn);
+        } else if (xhr.status == 400) {
+          var data = JSON.parse(xhr.responseText);
+          var node;
+          for (var key in formMap) {
+            node = formMap[key]
+            if (data.errors[key]) {
+              if (!/form-errors/.test(node.className)) {
+                node.className += " form-errors";
+              }
+            } else if (/form-errors/.test(node.className)) {
+              node.className = node.className.replace(/form-errors/, "");
+            }
+          }
+          errorWrapper.innerHTML = FORM_ERROR;
+        } else {
+          errorWrapper.innerHTML = GENERIC_ERROR;
+        }
+      }
+    }
+    xhr.open("POST", endpoint, true);
+    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
+    xhr.send(body);
+  };
+
   var child = document.createElement('div');
   child.className = 'sentry-error-embed-wrapper';
   child.innerHTML = template;
@@ -22,10 +77,31 @@
     if (e.target !== child) return;
     close();
   };
+
   var form = child.getElementsByTagName('form')[0];
   form.onsumbit = function(e) {
     e.preventDefault();
+    submit(serialize(form));
+  };
+
+  var submitBtn = child.getElementsByTagName('button')[0]
+  submitBtn.onclick = function(e) {
+    e.preventDefault();
+    submit(serialize(form));
   };
+
+  var errorWrapper;
+  var formContent;
+  var divTags = form.getElementsByTagName('div');
+  for (var i = 0; i < divTags.length; i++) {
+    if (divTags[i].className === 'error-wrapper') {
+      errorWrapper = divTags[i];
+    }
+    if (divTags[i].className === 'form-content') {
+      formContent = divTags[i];
+    }
+  }
+
   var linkTags = child.getElementsByTagName('a');
   for (var i = 0; i < linkTags.length; i++) {
     if (linkTags[i].className === 'close') {
@@ -36,7 +112,12 @@
     }
   }
 
+  var formMap = {};
+  for (var i = 0; i < form.elements.length; i++) {
+    formMap[form.elements[i].name] = form.elements[i].parentNode;
+  }
+
   onReady(function(){
     document.body.appendChild(child);
   });
-}(window, document));
+}(window, document, JSON));
diff --git a/src/sentry/web/frontend/error_page_embed.py b/src/sentry/web/frontend/error_page_embed.py
index 97c3ebe160..5998a0702e 100644
--- a/src/sentry/web/frontend/error_page_embed.py
+++ b/src/sentry/web/frontend/error_page_embed.py
@@ -1,21 +1,19 @@
 from __future__ import absolute_import
 
 from django import forms
-from django.core.urlresolvers import reverse
 from django.http import HttpResponse
 from django.views.generic import View
 from django.template.loader import render_to_string
 from django.utils.safestring import mark_safe
+from django.views.decorators.csrf import csrf_exempt
 
 from sentry.models import Group, ProjectKey, UserReport
 from sentry.web.helpers import render_to_response
 from sentry.utils import json
-from sentry.utils.http import absolute_uri, is_valid_origin
+from sentry.utils.http import is_valid_origin
 
 
 class UserReportForm(forms.ModelForm):
-    event_id = forms.CharField(max_length=32, widget=forms.HiddenInput)
-    dsn = forms.CharField(max_length=128, widget=forms.HiddenInput)
     name = forms.CharField(max_length=128, widget=forms.TextInput(attrs={
         'placeholder': 'Jane Doe',
     }))
@@ -29,7 +27,7 @@ class UserReportForm(forms.ModelForm):
 
     class Meta:
         model = UserReport
-        fields = ('name', 'email', 'comments', 'event_id')
+        fields = ('name', 'email', 'comments')
 
 
 class ErrorPageEmbedView(View):
@@ -45,7 +43,10 @@ class ErrorPageEmbedView(View):
     def _get_origin(self, request):
         return request.META.get('HTTP_ORIGIN', request.META.get('HTTP_REFERER'))
 
+    @csrf_exempt
     def dispatch(self, request):
+        # TODO(dcramer): since we cant use a csrf cookie we should at the very
+        # least sign the request / add some kind of nonce
         try:
             initial = {
                 'dsn': request.GET['dsn'],
@@ -65,11 +66,12 @@ class ErrorPageEmbedView(View):
         if not is_valid_origin(origin, key.project):
             return HttpResponse(status=403)
 
-        form = UserReportForm(request.POST or None, initial=initial)
+        form = UserReportForm(request.POST if request.method == 'POST' else None,
+                              initial=initial)
         if form.is_valid():
             report = form.save(commit=False)
             report.project = key.project
-            report.event_id = form.cleaned_data['event_id']
+            report.event_id = request.GET['eventId']
             try:
                 report.group = Group.objects.get(
                     eventmapping__event_id=report.event_id,
@@ -79,10 +81,11 @@ class ErrorPageEmbedView(View):
                 # XXX(dcramer): the system should fill this in later
                 pass
             report.save()
-
             return HttpResponse(status=200)
         elif request.method == 'POST':
-            return HttpResponse(status=400)
+            return HttpResponse(json.dumps({
+                "errors": dict(form.errors),
+            }), status=400, content_type='application/json')
 
         form = UserReportForm(initial=initial)
 
@@ -91,7 +94,7 @@ class ErrorPageEmbedView(View):
         })
 
         context = {
-            'endpoint': mark_safe(json.dumps(absolute_uri(reverse('sentry-error-page-embed')))),
+            'endpoint': mark_safe(json.dumps(request.get_full_path())),
             'template': mark_safe(json.dumps(template)),
         }
 
