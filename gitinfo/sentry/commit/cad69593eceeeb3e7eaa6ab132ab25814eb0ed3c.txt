commit cad69593eceeeb3e7eaa6ab132ab25814eb0ed3c
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Fri Jan 18 11:12:25 2019 -0800

    ref(api): Move self assign on resolution logic off project view

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 8f965384e5..506d33a769 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -12,10 +12,9 @@ from rest_framework.response import Response
 from sentry import analytics, eventstream, search
 from sentry.api.base import DocSection, EnvironmentMixin
 from sentry.api.bases.project import ProjectEndpoint, ProjectEventPermission
-from sentry.api.fields import Actor
 from sentry.api.helpers.group_index import (
     build_query_params_from_request, delete_groups, get_by_short_id, GroupValidator,
-    handle_discard, STATUS_CHOICES, ValidationError
+    handle_discard, self_subscribe_and_assign_issue, STATUS_CHOICES, ValidationError
 )
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.actor import ActorSerializer
@@ -25,7 +24,7 @@ from sentry.db.models.query import create_or_update
 from sentry.models import (
     Activity, Environment, Group, GroupAssignee, GroupBookmark, GroupLink, GroupResolution,
     GroupSeen, GroupShare, GroupSnooze, GroupStatus, GroupSubscription, GroupSubscriptionReason,
-    Release, UserOption, User
+    Release
 )
 from sentry.models.event import Event
 from sentry.models.savedsearch import DEFAULT_SAVED_SEARCH_QUERIES
@@ -103,19 +102,6 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint, EnvironmentMixin):
             result = search.query(**query_kwargs)
         return result, query_kwargs
 
-    def _subscribe_and_assign_issue(self, acting_user, group, result):
-        if acting_user:
-            GroupSubscription.objects.subscribe(
-                user=acting_user,
-                group=group,
-                reason=GroupSubscriptionReason.status_change,
-            )
-            self_assign_issue = UserOption.objects.get_value(
-                user=acting_user, key='self_assign_issue', default='0'
-            )
-            if self_assign_issue == '1' and not group.assignee_set.exists():
-                result['assignedTo'] = Actor(type=User, id=acting_user.id)
-
     # statsPeriod=24h
     @attach_scenarios([list_project_issues_scenario])
     def get(self, request, project):
@@ -462,8 +448,9 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint, EnvironmentMixin):
                     group.status = GroupStatus.RESOLVED
                     group.resolved_at = now
 
-                    self._subscribe_and_assign_issue(
-                        acting_user, group, result)
+                    assigned_to = self_subscribe_and_assign_issue(acting_user, group)
+                    if assigned_to is not None:
+                        result['assignedTo'] = assigned_to
 
                     if created:
                         activity = Activity.objects.create(
diff --git a/src/sentry/api/helpers/group_index.py b/src/sentry/api/helpers/group_index.py
index 86b9730382..3b2c1a56af 100644
--- a/src/sentry/api/helpers/group_index.py
+++ b/src/sentry/api/helpers/group_index.py
@@ -12,11 +12,12 @@ from rest_framework.response import Response
 
 from sentry import eventstream, features
 from sentry.api.base import audit_logger
-from sentry.api.fields import ActorField
+from sentry.api.fields import Actor, ActorField
 from sentry.constants import DEFAULT_SORT_OPTION
 from sentry.models import (
-    Commit, Group, GroupHash, GroupStatus, GroupTombstone,
-    Release, Repository, TOMBSTONE_FIELDS_FROM_GROUP, Team, User
+    Commit, Group, GroupHash, GroupStatus, GroupTombstone, GroupSubscription,
+    GroupSubscriptionReason, Release, Repository, TOMBSTONE_FIELDS_FROM_GROUP,
+    Team, User, UserOption
 )
 from sentry.models.group import looks_like_short_id
 from sentry.search.utils import InvalidQuery, parse_query
@@ -319,3 +320,21 @@ def delete_groups(request, project, group_list, delete_type):
             user=request.user,
             delete_type=delete_type,
             sender=delete_groups)
+
+
+def self_subscribe_and_assign_issue(acting_user, group):
+    # Used during issue resolution to assign to acting user
+    # returns None if the user didn't elect to self assign on resolution
+    # or the group is assigned already, otherwise returns Actor
+    # representation of current user
+    if acting_user:
+        GroupSubscription.objects.subscribe(
+            user=acting_user,
+            group=group,
+            reason=GroupSubscriptionReason.status_change,
+        )
+        self_assign_issue = UserOption.objects.get_value(
+            user=acting_user, key='self_assign_issue', default='0'
+        )
+        if self_assign_issue == '1' and not group.assignee_set.exists():
+            return Actor(type=User, id=acting_user.id)
