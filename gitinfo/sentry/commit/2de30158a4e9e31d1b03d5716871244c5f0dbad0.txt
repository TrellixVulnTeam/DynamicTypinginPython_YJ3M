commit 2de30158a4e9e31d1b03d5716871244c5f0dbad0
Author: adhiraj <693121+adhiraj@users.noreply.github.com>
Date:   Tue Jul 9 12:17:32 2019 -0700

    Assistant updates (#13852)
    
    - Converts the ping/drawer model to a hovercard model (see screenshot)
    - Removes "cues" -- now all guides start automatically (most users were not even noticing the cue)
    - Guide text is less verbose now
    - Removes some unnecessary guides
    - Removes the feedback button at the end of a guide
    - Adds amplitude tracking

diff --git a/docs-ui/components/hovercard.stories.js b/docs-ui/components/hovercard.stories.js
index 7d41a048dc..90c3631d45 100644
--- a/docs-ui/components/hovercard.stories.js
+++ b/docs-ui/components/hovercard.stories.js
@@ -12,6 +12,17 @@ const positionOptions = {
   right: 'right',
 };
 
+const showOptions = {
+  true: true,
+  false: false,
+  null: null,
+};
+
+const tipColorOptions = {
+  red: 'red',
+  null: null,
+};
+
 storiesOf('UI|Hovercard', module).add(
   'Hovercard',
   withInfo(
@@ -29,6 +40,8 @@ storiesOf('UI|Hovercard', module).add(
         header={text('Header', 'Hovercard Header')}
         body={text('Body', 'Hovercard body (can also be a React node)')}
         position={select('position', positionOptions, 'top', 'Hovercard positioning')}
+        show={select('show', showOptions, null, 'Force show/unshow')}
+        tipColor={select('tipColor', tipColorOptions, null, 'Tip color')}
       >
         Hover over me
       </Hovercard>
diff --git a/src/sentry/assistant/guides.py b/src/sentry/assistant/guides.py
index e8417a80f9..b85002ec1b 100644
--- a/src/sentry/assistant/guides.py
+++ b/src/sentry/assistant/guides.py
@@ -5,7 +5,6 @@ from django.utils.translation import ugettext_lazy as _
 
 # Guide Schema
 # id (text, required): unique id
-# cue (text):  The text used to prompt the user to initiate the guide.
 # required_targets (list): An empty list will cause the guide to be shown regardless
 #                          of page/targets presence.
 # steps (list): List of steps
@@ -20,23 +19,21 @@ from django.utils.translation import ugettext_lazy as _
 #                          otherwise the anchor will be pinged and scrolled to. If you'd like
 #                          your step to show always or have a step is not tied to a specific
 #                          element but you'd still like it to be shown, set this as None.
-# guide_type (text, optional): "guide" or "tip" (defaults to guide). If it's a tip, the cue won't
-#     be shown, and you should also specify the fields "cta_text" and "cta_link", which would
-#     replace the "Was this guide useful" message at the end with the CTA and a dismiss button.
-# cta_text (text, conditional): CTA button text on the last step of a tip. Must be present if
-#     guide_type = tip.
-# cta_link (text, conditional): Where the CTA button points to. Must be present if guide_type = tip.
 
 GUIDES = {
     'issue': {
         'id': 1,
-        'cue': _('Get a tour of the issue page'),
-        'required_targets': ['exception'],
+        'required_targets': ['issue_title', 'exception'],
         'steps': [
+            {
+                'title': _('Issue Details'),
+                'message': _('The issue page contains all the details about an issue. Let\'s get started.'),
+                'target': 'issue_title',
+            },
             {
                 'title': _('Stacktrace'),
                 'message': _(
-                    'See the sequence of function calls that led to the error, and in some cases '
+                    'See the sequence of function calls that led to the error, and '
                     'global/local variables for each stack frame.'),
                 'target': 'exception',
             },
@@ -52,157 +49,55 @@ GUIDES = {
             {
                 'title': _('Tags'),
                 'message': _(
-                    'Tags are arbitrary key-value pairs you can send with an event. Events can be '
-                    'filtered by tags, allowing you to do things like search for all events from '
-                    'a specific machine, browser or release. The sidebar on the right shows you '
-                    'the distribution of tags for all events in this event group.'),
+                    'Attach arbitrary key-value pairs to each event which you can search and filter on. '
+                    'View a heatmap of all tags for an issue on the right panel. '),
                 'target': 'tags',
             },
             {
                 'title': _('Resolve'),
                 'message': _(
-                    'Resolving an issue removes it from the default dashboard view of unresolved '
-                    'issues. You can ask Sentry to <a href="/settings/account/notifications/" target="_blank"> '
-                    'alert you</a> when a resolved issue re-occurs.'),
+                    'Resolve an issue to remove it from your issue list. '
+                    'Sentry can also <a href="/settings/account/notifications/" target="_blank"> '
+                    'alert you</a> when a new issue occurs or a resolved issue re-occurs.'),
                 'target': 'resolve',
             },
             {
-                'title': _('Issue Number'),
-                'message': _(
-                    'This is a unique identifier for the issue and can be included in a commit '
-                    'message to tell Sentry to resolve the issue when the commit gets deployed. '
-                    'See <a href="https://docs.sentry.io/learn/releases/" target="_blank">Releases</a> '
-                    'to learn more.'),
-                'target': 'issue_number',
-            },
-            {
-                'title': _('Issue Tracking'),
+                'title': _('Delete and Ignore'),
                 'message': _(
-                    'Create issues in your project management tool from within Sentry. See a list '
-                    'of all integrations <a href="https://docs.sentry.io/integrations/" target="_blank">here</a>.'),
-                'target': 'issue_tracking',
+                    'Delete an issue to remove it from your issue list until it happens again. '
+                    'Ignore an issue to remove it permanently or until certain conditions are met.'),
+                'target': 'ignore_delete_discard',
             },
             {
-                'title': _('Ignore, Delete and Discard'),
+                'title': _('Issue Number'),
                 'message': _(
-                    'Ignoring an issue silences notifications and removes it from your feeds. '
-                    'Deleting an issue deletes its data and causes a new issue to be created if it '
-                    'happens again. Delete & Discard (available on the medium plan and higher) '
-                    'deletes most of the issue\'s data and discards future events matching the '
-                    'issue before they reach your stream. This is useful to permanently ignore '
-                    'errors you don\'t care about.'),
-                'target': 'ignore_delete_discard',
+                    'Include this unique identifier in your commit message to have Sentry automatically '
+                    'resolve the issue when your code is deployed. '
+                    '<a href="https://docs.sentry.io/learn/releases/" target="_blank">Learn more</a>.'),
+                'target': 'issue_number',
             },
             {
-                'title': _('Issue Owners'),
+                'title': _('Ownership Rules'),
                 'message': _(
-                    'Define users or teams that are responsible for specific paths or URLS so '
-                    'that notifications can be routed to the correct people. Learn more '
-                    '<a href="https://docs.sentry.io/learn/issue-owners/" target="_blank">here</a>.'),
+                    'Define users or teams responsible for specific file paths or URLs so '
+                    'that alerts can be routed to the right person. '
+                    '<a href="https://docs.sentry.io/learn/issue-owners/" target="_blank">Learn more</a>.'),
                 'target': 'owners',
             },
         ],
     },
-    'releases': {
-        'id': 2,
-        'cue': _('What are releases?'),
-        'required_targets': ['releases'],
-        'steps': [
-            {
-                'title': _('Releases'),
-                'message': _('A release is a specific version of your code.'
-                             'When you tell Sentry about your releases, it can '
-                             'predict which commits caused an error and who might be a likely '
-                             'owner.'),
-                'target': 'releases',
-            },
-            {
-                'title': _('Releases'),
-                'message': _('Sentry does this by tying together commits in the release, files '
-                             'touched by those commits, files observed in the stacktrace, and '
-                             'authors of those files. Learn more about releases '
-                             '<a href="https://docs.sentry.io/learn/releases/" target="_blank">here</a>.'),
-                'target': 'releases',
-            },
-        ]
-    },
-
-    'event_issue': {
+    'issue_stream': {
         'id': 3,
-        'cue': _('Learn about the issue stream'),
-        'required_targets': ['issues'],
+        'required_targets': ['issue_stream'],
         'steps': [
-            {
-                'title': _('Events'),
-                'message': _(
-                    'When your application throws an error, that error is captured by Sentry as an event.'),
-                'target': 'events',
-            },
             {
                 'title': _('Issues'),
                 'message': _(
-                    'Individual events are then automatically rolled up and grouped into Issues with other similar events. '
-                    'A single issue can represent anywhere from one to thousands of individual events, depending on how many '
-                    'times a specific error is thrown. '),
-                'target': 'issues',
-            },
-            {
-                'title': _('Users'),
-                'message': _(
-                    'Sending user data to Sentry will unlock a number of features, primarily the ability to drill '
-                    'down into the number of users affected by an issue. '
-                    'Learn how easy it is to '
-                    '<a href="https://docs.sentry.io/learn/context/#capturing-the-user" target="_blank">set this up </a>today.'),
-                'target': 'users',
-            },
-        ]
-    },
-    # Ideally, this would only be sent if the organization has never
-    # customized alert rules (as per FeatureAdoption)
-    'alert_rules': {
-        'id': 5,
-        'cue': _('Tips for alert rules'),
-        'required_targets': ['alert_conditions'],
-        'steps': [
-            {
-                'title': _('Reduce Inbox Noise'),
-                'message': _('Sentry, by default, alerts on every new issue via email. '
-                             'If that\'s too noisy, send the alerts to a service like Slack to '
-                             'reduce inbox noise.<br><br> Enabling <a href="https://sentry.io/settings/account/notifications/#weeklyReports" target="_blank">'
-                             'weekly reports</a> can also help you stay on top of issues without '
-                             'getting overwhelmed.'),
-                'target': 'alert_conditions',
-            },
-            {
-                'title': _('Prioritize Alerts'),
-                'message': _('Not all alerts are equally important. Send the important ones to a '
-                             'service like PagerDuty. <a href="https://blog.sentry.io/2017/10/12/proactive-alert-rules" target="_blank">Learn more</a> '
-                             'about prioritizing alerts.'),
-                'target': 'alert_actions',
-            },
-            {
-                'title': _('Fine-tune notifications'),
-                'message': _('You can control alerts both at the project and the user level. '
-                             'Go to <a href="/account/settings/notifications/" target="_blank">Account Notifications</a> '
-                             'to choose which project\'s alert or workflow notifications you\'d like to receive.'),
-                'target': None,
-            },
-        ],
-    },
-    'alert_reminder_1': {
-        'id': 6,
-        'guide_type': 'tip',
-        'required_targets': ['project_details'],
-        'steps': [
-            {
-                'title': _('Alert Rules'),
-                'message': _('This project received ${numEvents} events in the last 30 days but doesn\'t have '
-                             'custom alerts. Customizing alerts gives you more control over how you get '
-                             'notified of issues. Learn more <a href="https://sentry.io/_/resources/customer-success/alert-rules/?referrer=assistant" target="_blank">here</a>.'),
-                'target': 'project_details',
+                    'Sentry automatically groups similar events together into an issue. Similarity '
+                    'is determined by stacktrace and other factors. '
+                    '<a href="https://docs.sentry.io/data-management/rollups/" target="_blank">Learn more</a>. '),
+                'target': 'issue_stream',
             },
         ],
-        'cta_text': _('Customize Alerts'),
-        'cta_link': '/settings/${orgSlug}/projects/${projectSlug}/alerts/rules/',
     },
 }
diff --git a/src/sentry/static/sentry/app/actionCreators/guides.jsx b/src/sentry/static/sentry/app/actionCreators/guides.jsx
index 4224b58bd5..3f46535d3e 100644
--- a/src/sentry/static/sentry/app/actionCreators/guides.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/guides.jsx
@@ -1,6 +1,6 @@
 import {Client} from 'app/api';
 import GuideActions from 'app/actions/guideActions';
-import {analytics} from 'app/utils/analytics';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 
 const api = new Client();
 
@@ -29,22 +29,31 @@ export function closeGuide() {
   GuideActions.closeGuide();
 }
 
-export function recordFinish(guideId, useful) {
+export function dismissGuide(guideId, step, org) {
+  recordDismiss(guideId, step, org);
+  closeGuide();
+}
+
+export function recordFinish(guideId, org) {
   api.request('/assistant/', {
     method: 'PUT',
     data: {
       guide_id: guideId,
       status: 'viewed',
-      useful,
     },
   });
-  analytics('assistant.guide_finished', {
+  const data = {
+    eventKey: 'assistant.guide_finished',
+    eventName: 'Assistant Guide Finished',
     guide: guideId,
-    useful,
-  });
+  };
+  if (org) {
+    data.organization_id = org.id;
+  }
+  trackAnalyticsEvent(data);
 }
 
-export function recordDismiss(guideId, step) {
+export function recordDismiss(guideId, step, org) {
   api.request('/assistant/', {
     method: 'PUT',
     data: {
@@ -52,8 +61,14 @@ export function recordDismiss(guideId, step) {
       status: 'dismissed',
     },
   });
-  analytics('assistant.guide_dismissed', {
+  const data = {
+    eventKey: 'assistant.guide_dismissed',
+    eventName: 'Assistant Guide Dismissed',
     guide: guideId,
     step,
-  });
+  };
+  if (org) {
+    data.organization_id = org.id;
+  }
+  trackAnalyticsEvent(data);
 }
diff --git a/src/sentry/static/sentry/app/components/actions/ignore.jsx b/src/sentry/static/sentry/app/components/actions/ignore.jsx
index a0ed56fdfe..78dd7519c6 100644
--- a/src/sentry/static/sentry/app/components/actions/ignore.jsx
+++ b/src/sentry/static/sentry/app/components/actions/ignore.jsx
@@ -10,7 +10,6 @@ import CustomIgnoreCountModal from 'app/components/customIgnoreCountModal';
 import CustomIgnoreDurationModal from 'app/components/customIgnoreDurationModal';
 import ActionLink from 'app/components/actions/actionLink';
 import Tooltip from 'app/components/tooltip';
-import GuideAnchor from 'app/components/assistant/guideAnchor';
 
 export default class IgnoreActions extends React.Component {
   static propTypes = {
@@ -123,7 +122,6 @@ export default class IgnoreActions extends React.Component {
           windowChoices={this.getIgnoreWindows()}
         />
         <div className="btn-group">
-          <GuideAnchor target="ignore_delete_discard" type="text" />
           <ActionLink
             {...actionLinkProps}
             title="Ignore"
diff --git a/src/sentry/static/sentry/app/components/actions/resolve.jsx b/src/sentry/static/sentry/app/components/actions/resolve.jsx
index be69933310..b9f234950c 100644
--- a/src/sentry/static/sentry/app/components/actions/resolve.jsx
+++ b/src/sentry/static/sentry/app/components/actions/resolve.jsx
@@ -126,81 +126,82 @@ export default class ResolveActions extends React.Component {
           orgId={orgId}
           projectId={projectId}
         />
-        <div className="btn-group">
-          <GuideAnchor target="resolve" type="text" />
-          <ActionLink
-            {...actionLinkProps}
-            title="Resolve"
-            className={buttonClass}
-            onAction={() => onUpdate({status: 'resolved'})}
-          >
-            <span className="icon-checkmark hidden-xs" style={{marginRight: 5}} />
-            {t('Resolve')}
-          </ActionLink>
+        <GuideAnchor target="resolve">
+          <div className="btn-group">
+            <ActionLink
+              {...actionLinkProps}
+              title="Resolve"
+              className={buttonClass}
+              onAction={() => onUpdate({status: 'resolved'})}
+            >
+              <span className="icon-checkmark hidden-xs" style={{marginRight: 5}} />
+              {t('Resolve')}
+            </ActionLink>
 
-          <DropdownLink
-            key="resolve-dropdown"
-            caret={true}
-            className={buttonClass}
-            title=""
-            alwaysRenderMenu
-            disabled={disableDropdown || disabled}
-          >
-            <MenuItem header={true}>{t('Resolved In')}</MenuItem>
-            <MenuItem noAnchor={true}>
-              <Tooltip title={actionTitle} containerDisplayMode="block">
-                <ActionLink
-                  {...actionLinkProps}
-                  onAction={() => {
-                    return (
-                      hasRelease &&
-                      onUpdate({
-                        status: 'resolved',
-                        statusDetails: {
-                          inNextRelease: true,
-                        },
-                      })
-                    );
-                  }}
-                >
-                  {t('The next release')}
-                </ActionLink>
-              </Tooltip>
-              <Tooltip title={actionTitle} containerDisplayMode="block">
-                <ActionLink
-                  {...actionLinkProps}
-                  onAction={() => {
-                    return (
-                      hasRelease &&
-                      onUpdate({
-                        status: 'resolved',
-                        statusDetails: {
-                          inRelease: latestRelease ? latestRelease.version : 'latest',
-                        },
-                      })
-                    );
-                  }}
-                >
-                  {latestRelease
-                    ? t(
-                        'The current release (%s)',
-                        getShortVersion(latestRelease.version)
-                      )
-                    : t('The current release')}
-                </ActionLink>
-              </Tooltip>
-              <Tooltip title={actionTitle} containerDisplayMode="block">
-                <ActionLink
-                  {...actionLinkProps}
-                  onAction={() => hasRelease && this.setState({modal: true})}
-                  shouldConfirm={false}
-                >
-                  {t('Another version\u2026')}
-                </ActionLink>
-              </Tooltip>
-            </MenuItem>
-          </DropdownLink>
-        </div>
+            <DropdownLink
+              key="resolve-dropdown"
+              caret={true}
+              className={buttonClass}
+              title=""
+              alwaysRenderMenu
+              disabled={disableDropdown || disabled}
+            >
+              <MenuItem header={true}>{t('Resolved In')}</MenuItem>
+              <MenuItem noAnchor={true}>
+                <Tooltip title={actionTitle} containerDisplayMode="block">
+                  <ActionLink
+                    {...actionLinkProps}
+                    onAction={() => {
+                      return (
+                        hasRelease &&
+                        onUpdate({
+                          status: 'resolved',
+                          statusDetails: {
+                            inNextRelease: true,
+                          },
+                        })
+                      );
+                    }}
+                  >
+                    {t('The next release')}
+                  </ActionLink>
+                </Tooltip>
+                <Tooltip title={actionTitle} containerDisplayMode="block">
+                  <ActionLink
+                    {...actionLinkProps}
+                    onAction={() => {
+                      return (
+                        hasRelease &&
+                        onUpdate({
+                          status: 'resolved',
+                          statusDetails: {
+                            inRelease: latestRelease ? latestRelease.version : 'latest',
+                          },
+                        })
+                      );
+                    }}
+                  >
+                    {latestRelease
+                      ? t(
+                          'The current release (%s)',
+                          getShortVersion(latestRelease.version)
+                        )
+                      : t('The current release')}
+                  </ActionLink>
+                </Tooltip>
+                <Tooltip title={actionTitle} containerDisplayMode="block">
+                  <ActionLink
+                    {...actionLinkProps}
+                    onAction={() => hasRelease && this.setState({modal: true})}
+                    shouldConfirm={false}
+                  >
+                    {t('Another version\u2026')}
+                  </ActionLink>
+                </Tooltip>
+              </MenuItem>
+            </DropdownLink>
+          </div>
+        </GuideAnchor>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
index f0af2d5863..4546ffc0c0 100644
--- a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
@@ -1,25 +1,34 @@
 import PropTypes from 'prop-types';
-import classNames from 'classnames';
 import React from 'react';
-import styled, {keyframes} from 'react-emotion';
+import styled from 'react-emotion';
+import {css} from 'emotion';
+import $ from 'jquery';
 import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
-import $ from 'jquery';
-import {registerAnchor, unregisterAnchor} from 'app/actionCreators/guides';
+import theme from 'app/utils/theme';
+import {
+  registerAnchor,
+  unregisterAnchor,
+  nextStep,
+  closeGuide,
+  recordFinish,
+  dismissGuide,
+} from 'app/actionCreators/guides';
 import GuideStore from 'app/stores/guideStore';
-import {expandOut} from 'app/styles/animations';
-
-// A guide anchor provides a ripple-effect on an element to draw attention to it.
-// Guide anchors register with the guide store, which uses this information to
-// determine which guides can be shown on the page. Multiple guide anchors on
-// a page can have the same `target` property, which will make all of them glow
-// when a step in the guide matches that target (although only one of them will
-// be scrolled to).
+import Hovercard from 'app/components/hovercard';
+import Button from 'app/components/button';
+import space from 'app/styles/space';
+import {t} from 'app/locale';
+import {CloseIcon} from 'app/components/assistant/styles';
+
+// A GuideAnchor puts an informative hovercard around an element.
+// Guide anchors register with the GuideStore, which uses registrations
+// from one or more anchors on the page to determine which guides can
+// be shown on the page.
 const GuideAnchor = createReactClass({
   propTypes: {
     target: PropTypes.string.isRequired,
-    // The `invisible` anchor type can be used for guides not attached to specific elements.
-    type: PropTypes.oneOf(['text', 'button', 'invisible']),
+    position: PropTypes.string,
   },
 
   mixins: [Reflux.listenTo(GuideStore, 'onGuideStateChange')],
@@ -35,10 +44,10 @@ const GuideAnchor = createReactClass({
   },
 
   componentDidUpdate(prevProps, prevState) {
-    if (!prevState.active && this.state.active && this.props.type !== 'invisible') {
+    if (this.containerElement && !prevState.active && this.state.active) {
       const windowHeight = $(window).height();
       $('html,body').animate({
-        scrollTop: $(this.anchorElement).offset().top - windowHeight / 4,
+        scrollTop: $(this.containerElement).offset().top - windowHeight / 2,
       });
     }
   },
@@ -48,123 +57,138 @@ const GuideAnchor = createReactClass({
   },
 
   onGuideStateChange(data) {
-    if (
+    const active =
       data.currentGuide &&
-      data.currentStep > 0 &&
-      data.currentGuide.steps[data.currentStep - 1].target === this.props.target &&
-      // TODO(adhiraj): It would be more correct to let invisible anchors become active,
-      // and use CSS to make them invisible.
-      this.props.type !== 'invisible'
-    ) {
-      this.setState({active: true});
-    } else {
-      this.setState({active: false});
-    }
+      data.currentGuide.steps[data.currentStep].target === this.props.target;
+    this.setState({
+      active,
+      guide: data.currentGuide,
+      step: data.currentStep,
+      org: data.org,
+      messageVariables: {
+        orgSlug: data.org && data.org.slug,
+        projectSlug: data.project && data.project.slug,
+      },
+    });
+  },
+
+  interpolate(template, variables) {
+    const regex = /\${([^{]+)}/g;
+    return template.replace(regex, (match, g1) => {
+      return variables[g1.trim()];
+    });
+  },
+
+  /* Terminology:
+   - A guide can be FINISHED by clicking one of the buttons in the last step.
+   - A guide can be DISMISSED by x-ing out of it at any step except the last (where there is no x).
+   - In both cases we consider it CLOSED.
+  */
+  handleFinish(e) {
+    e.stopPropagation();
+    const {guide, org} = this.state;
+    recordFinish(guide.id, org);
+    closeGuide();
+  },
+
+  handleNextStep(e) {
+    e.stopPropagation();
+    nextStep();
+  },
+
+  handleDismiss(e) {
+    e.stopPropagation();
+    const {guide, step, org} = this.state;
+    dismissGuide(guide.id, step, org);
   },
 
   render() {
-    const {target, type} = this.props;
-    const {active} = this.state;
+    const {active, guide, step, messageVariables} = this.state;
     if (!active) {
       return this.props.children ? this.props.children : null;
     }
 
+    const body = (
+      <GuideContainer>
+        <GuideInputRow>
+          <StyledTitle>{guide.steps[step].title}</StyledTitle>
+          {step < guide.steps.length - 1 && (
+            <CloseLink onClick={this.handleDismiss} href="#" data-test-id="close-button">
+              <CloseIcon />
+            </CloseLink>
+          )}
+        </GuideInputRow>
+        <StyledContent>
+          <div
+            dangerouslySetInnerHTML={{
+              __html: this.interpolate(guide.steps[step].message, messageVariables),
+            }}
+          />
+          <div css={{marginTop: '1em'}}>
+            <div>
+              {step < guide.steps.length - 1 ? (
+                <Button priority="success" size="small" onClick={this.handleNextStep}>
+                  {t('Next')} &rarr;
+                </Button>
+              ) : (
+                <Button priority="success" size="small" onClick={this.handleFinish}>
+                  {t(guide.steps.length === 1 ? 'Got It' : 'Done')}
+                </Button>
+              )}
+            </div>
+          </div>
+        </StyledContent>
+      </GuideContainer>
+    );
+
     return (
-      <GuideAnchorContainer innerRef={el => (this.anchorElement = el)} type={type}>
-        {this.props.children}
-        <StyledGuideAnchor
-          className={classNames('guide-anchor-ping', target)}
-          active={this.state.active}
-        >
-          <StyledGuideAnchorRipples />
-        </StyledGuideAnchor>
-      </GuideAnchorContainer>
+      <Hovercard
+        show={true}
+        body={body}
+        bodyClassName={css`
+          background-color: ${theme.greenDark};
+          margin: -1px;
+        `}
+        tipColor={theme.greenDark}
+        position={this.props.position}
+      >
+        <span ref={el => (this.containerElement = el)}>{this.props.children}</span>
+      </Hovercard>
     );
   },
 });
 
-export const conditionalGuideAnchor = (condition, target, type, children) => {
-  return condition
-    ? React.createElement(GuideAnchor, {target, type}, children)
-    : children;
-};
-
-const recedeAnchor = keyframes`
-  0% {
-    transform: scale(3, 3);
-    opacity: 1;
-  }
+const GuideContainer = styled('div')`
+  background-color: ${p => p.theme.greenDark};
+  border-color: ${p => p.theme.greenLight};
+  color: ${p => p.theme.offWhite};
+`;
 
-  100% {
-    transform: scale(1, 1);
-    opacity: 0.75;
+const CloseLink = styled('a')`
+  color: ${p => p.theme.offWhite};
+  &:hover {
+    color: ${p => p.theme.offWhite};
   }
+  display: flex;
 `;
 
-const GuideAnchorContainer = styled('div')`
-  ${p =>
-    p.type === 'text' &&
-    `
-      display: inline-block;
-      position: relative;
-    `};
+const GuideInputRow = styled('div')`
+  display: flex;
+  align-items: center;
 `;
 
-const StyledGuideAnchor = styled('div')`
-  width: 20px;
-  height: 20px;
-  cursor: pointer;
-  z-index: 999;
-  position: absolute;
-  pointer-events: none;
-  visibility: hidden;
-
-  ${p =>
-    p.active
-      ? `
-    visibility: visible;
-    animation: ${recedeAnchor} 5s ease-in forwards;
-  `
-      : ''};
+const StyledTitle = styled('div')`
+  font-weight: bold;
+  font-size: 1.3em;
+  flex-grow: 1;
 `;
 
-const StyledGuideAnchorRipples = styled('div')`
-  animation: ${expandOut} 1.5s ease-out infinite;
-  width: 100%;
-  height: 100%;
-  top: 0;
-  left: 0;
-
-  &,
-  &:before,
-  &:after {
-    position: absolute;
-    display: block;
-    left: calc(50% - 10px);
-    top: calc(50% - 10px);
-    background-color: ${p => p.theme.greenTransparent};
-    border-radius: 50%;
-  }
-
-  &:before,
-  &:after {
-    content: '';
-  }
-
-  &:before {
-    width: 70%;
-    height: 70%;
-    left: calc(50% - 7px);
-    top: calc(50% - 7px);
-    background-color: ${p => p.theme.greenTransparent};
-  }
+const StyledContent = styled('div')`
+  margin-top: ${space(1)};
+  line-height: 1.5;
 
-  &:after {
-    width: 50%;
-    height: 50%;
-    left: calc(50% - 5px);
-    top: calc(50% - 5px);
-    color: ${p => p.theme.green};
+  a {
+    color: ${p => p.theme.greenLight};
   }
 `;
 
diff --git a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx b/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
deleted file mode 100644
index 38b6c92a3c..0000000000
--- a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
+++ /dev/null
@@ -1,211 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import {withRouter} from 'react-router';
-import Reflux from 'reflux';
-import createReactClass from 'create-react-class';
-import styled from 'react-emotion';
-import Button from 'app/components/button';
-import GuideStore from 'app/stores/guideStore';
-import space from 'app/styles/space';
-import {t} from 'app/locale';
-import {
-  closeGuide,
-  fetchGuides,
-  nextStep,
-  recordDismiss,
-  recordFinish,
-} from 'app/actionCreators/guides';
-import {
-  AssistantContainer,
-  CloseIcon,
-  CueContainer,
-  CueIcon,
-  CueText,
-} from 'app/components/assistant/styles';
-
-/* GuideDrawer is what slides up when the user clicks on a guide cue. */
-const GuideDrawer = createReactClass({
-  displayName: 'GuideDrawer',
-  propTypes: {
-    router: PropTypes.object,
-  },
-  mixins: [Reflux.listenTo(GuideStore, 'onGuideStateChange')],
-
-  getInitialState() {
-    return {
-      guide: null,
-      step: 0,
-      messageVariables: {},
-    };
-  },
-
-  componentDidMount() {
-    fetchGuides();
-  },
-
-  onGuideStateChange(data) {
-    this.setState({
-      guide: data.currentGuide,
-      step: data.currentStep,
-      messageVariables: {
-        orgSlug: data.org && data.org.slug,
-        projectSlug: data.project && data.project.slug,
-        numEvents: data.project && data.projectStats.get(parseInt(data.project.id, 10)),
-      },
-    });
-  },
-
-  /* Terminology:
-   - A guide can be FINISHED by clicking one of the buttons in the last step.
-   - A guide can be DISMISSED by x-ing out of it at any step except the last (where there is no x).
-   - In both cases we consider it CLOSED.
-  */
-  handleFinish(useful) {
-    recordFinish(this.state.guide.id, useful);
-    closeGuide();
-    // This is a bit racy. Technically the correct thing to do would be to wait until closeGuide
-    // has updated the guide store and triggered a component state change. But it doesn't seem
-    // to cause any issues in practice.
-    if (useful && this.state.guide.cta_link) {
-      const link = this.interpolate(
-        this.state.guide.cta_link,
-        this.state.messageVariables
-      );
-      this.props.router.push(link);
-    }
-  },
-
-  handleDismiss(e) {
-    e.stopPropagation();
-    recordDismiss(this.state.guide.id, this.state.step);
-    closeGuide();
-  },
-
-  interpolate(template, variables) {
-    const regex = /\${([^{]+)}/g;
-    return template.replace(regex, (match, g1) => {
-      return variables[g1.trim()];
-    });
-  },
-
-  render() {
-    const {guide, step, messageVariables} = this.state;
-
-    if (!guide) {
-      return null;
-    }
-
-    if (step === 0) {
-      return (
-        <StyledCueContainer onClick={nextStep} data-test-id="assistant-cue">
-          {<CueIcon hasGuide={true} />}
-          <StyledCueText>{guide.cue}</StyledCueText>
-          <div style={{display: 'flex'}} onClick={this.handleDismiss}>
-            <CloseIcon />
-          </div>
-        </StyledCueContainer>
-      );
-    }
-
-    const isTip = guide.guide_type === 'tip';
-
-    return (
-      <GuideContainer>
-        <GuideInputRow>
-          <CueIcon hasGuide={true} />
-          <StyledTitle>{guide.steps[step - 1].title}</StyledTitle>
-          {step < guide.steps.length && (
-            <div
-              className="close-button"
-              style={{display: 'flex'}}
-              onClick={this.handleDismiss}
-            >
-              <CloseIcon />
-            </div>
-          )}
-        </GuideInputRow>
-        <StyledContent>
-          <div
-            dangerouslySetInnerHTML={{
-              __html: this.interpolate(guide.steps[step - 1].message, messageVariables),
-            }}
-          />
-          <div style={{marginTop: '1em'}}>
-            {step < guide.steps.length ? (
-              <div>
-                <Button priority="success" size="small" onClick={nextStep}>
-                  {t('Next')} &rarr;
-                </Button>
-              </div>
-            ) : (
-              <div style={{textAlign: 'center'}}>
-                {!isTip && <p>{t('Did you find this guide useful?')}</p>}
-                <Button
-                  priority="success"
-                  size="small"
-                  onClick={() => this.handleFinish(true)}
-                >
-                  {isTip ? guide.cta_text : <span>{t('Yes')} &nbsp; &#x2714;</span>}
-                </Button>
-                <Button
-                  priority="success"
-                  size="small"
-                  style={{marginLeft: '0.25em'}}
-                  onClick={() => this.handleFinish(false)}
-                >
-                  {isTip ? t('Dismiss') : <span>{t('No')} &nbsp; &#x2716;</span>}
-                </Button>
-              </div>
-            )}
-          </div>
-        </StyledContent>
-      </GuideContainer>
-    );
-  },
-});
-
-const StyledCueText = styled(CueText)`
-  width: auto;
-  opacity: 1;
-  margin-left: ${space(1)};
-`;
-
-const StyledCueContainer = styled(CueContainer)`
-  right: 50%;
-  transform: translateX(50%);
-  background-color: ${p => p.theme.greenDark};
-  border-color: ${p => p.theme.greenLight};
-  color: ${p => p.theme.offWhite};
-`;
-
-const GuideContainer = styled(AssistantContainer)`
-  background-color: ${p => p.theme.greenDark};
-  border-color: ${p => p.theme.greenLight};
-  color: ${p => p.theme.offWhite};
-  height: auto;
-  right: 50%;
-  transform: translateX(50%);
-`;
-
-const GuideInputRow = styled('div')`
-  display: flex;
-  align-items: center;
-`;
-
-const StyledTitle = styled('div')`
-  font-size: 1.5em;
-  margin-left: 0.5em;
-  flex-grow: 1;
-`;
-
-const StyledContent = styled('div')`
-  margin-top: ${space(1)};
-  line-height: 1.5;
-
-  a {
-    color: ${p => p.theme.greenLight};
-  }
-`;
-
-export {GuideDrawer};
-export default withRouter(GuideDrawer);
diff --git a/src/sentry/static/sentry/app/components/assistant/helper.jsx b/src/sentry/static/sentry/app/components/assistant/helper.jsx
deleted file mode 100644
index ea426aeac7..0000000000
--- a/src/sentry/static/sentry/app/components/assistant/helper.jsx
+++ /dev/null
@@ -1,22 +0,0 @@
-import React from 'react';
-import styled from 'react-emotion';
-import GuideDrawer from 'app/components/assistant/guideDrawer';
-
-/* AssistantHelper is responsible for rendering the guide and support drawers. */
-export default class AssistantHelper extends React.Component {
-  render() {
-    return (
-      <StyledHelper>
-        <GuideDrawer />
-      </StyledHelper>
-    );
-  }
-}
-
-/* this globally controls the size of the component */
-const StyledHelper = styled('div')`
-  font-size: 1.4rem;
-  @media (max-width: 600px) {
-    display: none;
-  }
-`;
diff --git a/src/sentry/static/sentry/app/components/events/eventDataSection.jsx b/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
index b931b8ba90..71b46e2b9a 100644
--- a/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
@@ -50,10 +50,15 @@ class EventDataSection extends React.Component {
       raw,
       wrapTitle,
     } = this.props;
-    const guideAnchor =
-      type === 'tags' && hideGuide === false ? (
-        <GuideAnchor target="tags" type="text" />
-      ) : null;
+
+    let titleNode = wrapTitle ? <h3>{title}</h3> : <div>{title}</div>;
+    if (type === 'tags' && hideGuide === false) {
+      titleNode = (
+        <GuideAnchor target="tags" position="top">
+          {titleNode}
+        </GuideAnchor>
+      );
+    }
 
     return (
       <div className={(className || '') + ' box'}>
@@ -62,17 +67,7 @@ class EventDataSection extends React.Component {
             <a href={'#' + type} className="permalink">
               <em className="icon-anchor" />
             </a>
-            {wrapTitle ? (
-              <h3>
-                {guideAnchor}
-                {title}
-              </h3>
-            ) : (
-              <div>
-                {guideAnchor}
-                {title}
-              </div>
-            )}
+            {titleNode}
             {type === 'extra' && (
               <div className="btn-group pull-right">
                 <a
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
index 5d1cd0eb4b..b8a70de4b0 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
@@ -174,10 +174,11 @@ class BreadcrumbsInterface extends React.Component {
 
     const title = (
       <div>
-        <GuideAnchor target="breadcrumbs" type="text" />
-        <h3>
-          <strong>{t('Breadcrumbs')}</strong>
-        </h3>
+        <GuideAnchor target="breadcrumbs" position="top">
+          <h3>
+            <strong>{t('Breadcrumbs')}</strong>
+          </h3>
+        </GuideAnchor>
         {this.getSearchField()}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
index 88e6563f33..15adbbc52d 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
@@ -87,25 +87,33 @@ class CrashHeader extends React.Component {
   render() {
     const {title, beforeTitle, hideGuide, stackView, stackType, newestFirst} = this.props;
 
+    let titleNode = (
+      <h3 className="pull-left">
+        {title}
+        <small style={{marginLeft: 5}}>
+          (
+          <Tooltip title={t('Toggle stacktrace order')}>
+            <a onClick={this.handleToggleOrder} style={{borderBottom: '1px dotted #aaa'}}>
+              {newestFirst ? t('most recent call first') : t('most recent call last')}
+            </a>
+          </Tooltip>
+          )
+        </small>
+      </h3>
+    );
+
+    if (!hideGuide) {
+      titleNode = (
+        <GuideAnchor target="exception" position="top">
+          {titleNode}
+        </GuideAnchor>
+      );
+    }
+
     return (
       <div className="crash-title">
         {beforeTitle}
-        {hideGuide === false && <GuideAnchor target="exception" type="text" />}
-        <h3 className="pull-left">
-          {title}
-          <small style={{marginLeft: 5}}>
-            (
-            <Tooltip title={t('Toggle stacktrace order')}>
-              <a
-                onClick={this.handleToggleOrder}
-                style={{borderBottom: '1px dotted #aaa'}}
-              >
-                {newestFirst ? t('most recent call first') : t('most recent call last')}
-              </a>
-            </Tooltip>
-            )
-          </small>
-        </h3>
+        {titleNode}
         <div className="btn-group" style={{marginLeft: 10}}>
           {this.hasSystemFrames() && (
             <a
diff --git a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
index 4e1c3fa4d2..3730ab2ad8 100644
--- a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
+++ b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
@@ -189,10 +189,11 @@ const SuggestedOwners = createReactClass({
         )}
         <Access access={['project:write']}>
           <div className="m-b-1">
-            <h6>
-              <GuideAnchor target="owners" type="text" />
-              <span>{t('Ownership Rules')}</span>
-            </h6>
+            <GuideAnchor target="owners">
+              <h6>
+                <span>{t('Ownership Rules')}</span>
+              </h6>
+            </GuideAnchor>
             <Button
               onClick={() =>
                 openCreateOwnershipRule({
diff --git a/src/sentry/static/sentry/app/components/hovercard.jsx b/src/sentry/static/sentry/app/components/hovercard.jsx
index 471ea70d0c..4c676d8a4b 100644
--- a/src/sentry/static/sentry/app/components/hovercard.jsx
+++ b/src/sentry/static/sentry/app/components/hovercard.jsx
@@ -41,6 +41,14 @@ class Hovercard extends React.Component {
      * Position tooltip should take relative to the child element
      */
     position: PropTypes.oneOf(VALID_DIRECTIONS),
+    /**
+     * If set, is used INSTEAD OF the hover action to determine whether the hovercard is shown
+     */
+    show: PropTypes.bool,
+    /**
+     * Color of the arrow tip
+     */
+    tipColor: PropTypes.string,
   };
 
   static defaultProps = {
@@ -90,8 +98,9 @@ class Hovercard extends React.Component {
       header,
       body,
       position,
+      show,
+      tipColor,
     } = this.props;
-    const {visible} = this.state;
 
     // Maintain the hovercard class name for BC with less styles
     const cx = classNames('hovercard', className);
@@ -106,19 +115,24 @@ class Hovercard extends React.Component {
       },
     };
 
+    const visible = show !== undefined ? show : this.state.visible;
+    const hoverProps =
+      show !== undefined
+        ? {}
+        : {onMouseEnter: this.handleToggleOn, onMouseLeave: this.handleToggleOff};
+
     return (
       <Manager>
         <Reference>
           {({ref}) => (
-            <Container
-              innerRef={ref}
+            <span
+              ref={ref}
               aria-describedby={this.tooltipId}
-              onMouseEnter={this.handleToggleOn}
-              onMouseLeave={this.handleToggleOff}
               className={containerClassName}
+              {...hoverProps}
             >
               {this.props.children}
-            </Container>
+            </span>
           )}
         </Reference>
         {visible &&
@@ -126,14 +140,13 @@ class Hovercard extends React.Component {
             <Popper placement={position} modifiers={modifiers}>
               {({ref, style, placement, arrowProps}) => (
                 <StyledHovercard
-                  innerRef={ref}
                   visible={visible}
-                  withHeader={!!header}
+                  innerRef={ref}
                   style={style}
                   placement={placement}
-                  onMouseEnter={this.handleToggleOn}
-                  onMouseLeave={this.handleToggleOff}
+                  withHeader={!!header}
                   className={cx}
+                  {...hoverProps}
                 >
                   {header && <Header>{header}</Header>}
                   {body && <Body className={bodyClassName}>{body}</Body>}
@@ -141,6 +154,7 @@ class Hovercard extends React.Component {
                     innerRef={arrowProps.ref}
                     style={arrowProps.style}
                     placement={placement}
+                    tipColor={tipColor}
                   />
                 </StyledHovercard>
               )}
@@ -204,10 +218,6 @@ const StyledHovercard = styled('div')`
   ${p => (p.placement === 'right' ? 'margin-left: 15px' : '')};
 `;
 
-const Container = styled('span')`
-  position: relative;
-`;
-
 const Header = styled('div')`
   font-size: 14px;
   background: ${p => p.theme.offWhite};
@@ -254,7 +264,7 @@ const HovercardArrow = styled('span')`
     top: 1px;
     border: 10px solid transparent;
     /* stylelint-disable-next-line property-no-unknown */
-    border-${getTipDirection}-color: ${p => p.theme.borderLight};
+    border-${getTipDirection}-color: ${p => p.tipColor || p.theme.borderLight};
 
     ${p => (p.placement === 'bottom' ? 'top: -1px' : '')};
     ${p => (p.placement === 'left' ? 'top: 0; left: 1px;' : '')};
@@ -263,7 +273,7 @@ const HovercardArrow = styled('span')`
   &::after {
     border: 10px solid transparent;
     /* stylelint-disable-next-line property-no-unknown */
-    border-${getTipDirection}-color: ${getTipColor};
+    border-${getTipDirection}-color: ${p => p.tipColor || getTipColor(p)};
   }
 `;
 
diff --git a/src/sentry/static/sentry/app/components/stream/group.jsx b/src/sentry/static/sentry/app/components/stream/group.jsx
index 28925337c8..fee0101cb2 100644
--- a/src/sentry/static/sentry/app/components/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/stream/group.jsx
@@ -103,7 +103,6 @@ const StreamGroup = createReactClass({
       >
         {canSelect && (
           <GroupCheckbox ml={2}>
-            {hasGuideAnchor && <GuideAnchor target="issues" type="text" />}
             <GroupCheckBox id={data.id} />
           </GroupCheckbox>
         )}
@@ -111,15 +110,14 @@ const StreamGroup = createReactClass({
           <EventOrGroupHeader data={data} query={query} />
           <EventOrGroupExtraDetails {...data} />
         </GroupSummary>
+        {hasGuideAnchor && <GuideAnchor target="issue_stream" />}
         <Box w={160} mx={2} className="hidden-xs hidden-sm">
           <GroupChart id={data.id} statsPeriod={this.props.statsPeriod} data={data} />
         </Box>
         <Flex w={[40, 60, 80, 80]} mx={2} justify="flex-end">
-          {hasGuideAnchor && <GuideAnchor target="events" type="text" />}
           <StyledCount value={data.count} />
         </Flex>
         <Flex w={[40, 60, 80, 80]} mx={2} justify="flex-end">
-          {hasGuideAnchor && <GuideAnchor target="users" type="text" />}
           <StyledCount value={data.userCount} />
         </Flex>
         <Box w={80} mx={2} className="hidden-xs hidden-sm">
diff --git a/src/sentry/static/sentry/app/stores/guideStore.jsx b/src/sentry/static/sentry/app/stores/guideStore.jsx
index 9f3007ba6d..678b482234 100644
--- a/src/sentry/static/sentry/app/stores/guideStore.jsx
+++ b/src/sentry/static/sentry/app/stores/guideStore.jsx
@@ -2,12 +2,10 @@ import {browserHistory} from 'react-router';
 import Reflux from 'reflux';
 import GuideActions from 'app/actions/guideActions';
 import OrganizationsActions from 'app/actions/organizationsActions';
-import {analytics} from 'app/utils/analytics';
 import ProjectActions from 'app/actions/projectActions';
 import {Client} from 'app/api';
 import ConfigStore from 'app/stores/configStore';
-
-const ALERT_REMINDER_1 = 'alert_reminder_1';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 
 const GuideStore = Reflux.createStore({
   init() {
@@ -18,8 +16,7 @@ const GuideStore = Reflux.createStore({
       anchors: new Set(),
       // The "on deck" guide.
       currentGuide: null,
-      // Current step of the current guide (1-indexed). 0 if there's no guide
-      // or the guide is just cued but not opened.
+      // Current step of the current guide (0-indexed).
       currentStep: 0,
       // Current organization.
       org: null,
@@ -29,10 +26,6 @@ const GuideStore = Reflux.createStore({
       forceShow: false,
       // The previously shown guide.
       prevGuide: null,
-      // Total events received in the project in the last 30 days. id (int) -> int.
-      projectStats: new Map(),
-      // Whether the project has customized alert rules. id (int) -> bool.
-      projectRules: new Map(),
     };
 
     this.api = new Client();
@@ -89,11 +82,6 @@ const GuideStore = Reflux.createStore({
   onNextStep() {
     this.state.currentStep += 1;
     this.trigger(this.state);
-    if (this.state.currentGuide && this.state.currentStep === 1) {
-      analytics('assistant.guide_opened', {
-        guide: this.state.currentGuide.id,
-      });
-    }
   },
 
   onRegisterAnchor(anchor) {
@@ -106,15 +94,16 @@ const GuideStore = Reflux.createStore({
     this.updateCurrentGuide();
   },
 
-  recordCue(id, cue) {
+  recordCue(id) {
     const data = {
+      eventKey: 'assistant.guide_cued',
+      eventName: 'Assistant Guide Cued',
       guide: id,
-      cue,
     };
     if (this.state.org) {
-      data.org_id = parseInt(this.state.org.id, 10);
+      data.organization_id = this.state.org.id;
     }
-    analytics('assistant.guide_cued', data);
+    trackAnalyticsEvent(data);
   },
 
   updatePrevGuide(bestGuide) {
@@ -123,122 +112,17 @@ const GuideStore = Reflux.createStore({
     }
 
     if (!this.state.prevGuide || this.state.prevGuide.id !== bestGuide.id) {
-      this.recordCue(bestGuide.id, bestGuide.cue);
+      this.recordCue(bestGuide.id);
       this.state.prevGuide = bestGuide;
     }
   },
 
-  isDefaultAlert(data) {
-    return (
-      data.length === 1 &&
-      data[0].actionMatch === 'all' &&
-      data[0].frequency === 30 &&
-      data[0].conditions.length === 1 &&
-      data[0].conditions[0].id ===
-        'sentry.rules.conditions.first_seen_event.FirstSeenEventCondition' &&
-      data[0].actions.length === 1 &&
-      data[0].actions[0].id === 'sentry.rules.actions.notify_event.NotifyEventAction'
-    );
-  },
-
-  async getProjectStats(projectId) {
-    const {org, project, projectStats} = this.state;
-
-    if (projectStats.has(projectId)) {
-      return Promise.resolve(projectStats.get(projectId));
-    }
-
-    const path = `/projects/${org.slug}/${project.slug}/stats/`;
-    return this.api
-      .requestPromise(path, {
-        query: {
-          // Last 30 days.
-          since: new Date().getTime() / 1000 - 3600 * 24 * 30,
-        },
-      })
-      .then(data => {
-        const eventsReceived = data.reduce((sum, point) => sum + point[1], 0);
-        projectStats.set(projectId, eventsReceived);
-        return eventsReceived;
-      });
-  },
-
-  async getProjectRules(projectId) {
-    const {org, project, projectRules} = this.state;
-
-    if (projectRules.has(projectId)) {
-      return Promise.resolve(projectRules.get(projectId));
-    }
-
-    const path = `/projects/${org.slug}/${project.slug}/rules/`;
-    return this.api
-      .requestPromise(path, {
-        query: {
-          // Last 30 days.
-          since: new Date().getTime() / 1000 - 3600 * 24 * 30,
-        },
-      })
-      .then(data => {
-        const result = !this.isDefaultAlert(data);
-        projectRules.set(projectId, result);
-        return result;
-      });
-  },
-
-  async checkAlertTipData() {
-    // Check if we have the data needed to determine if the alert-reminder tip should be shown.
-    // If not, take the necessary actions to fetch the data.
-    const {org, project} = this.state;
-
-    if (!org || !project) {
-      return Promise.resolve([]);
-    }
-
-    const projectId = parseInt(project.id, 10);
-    return Promise.all([
-      this.getProjectStats(projectId),
-      this.getProjectRules(projectId),
-    ]);
-  },
-
-  async getBestGuideKey(guideKeys) {
-    // Pick the first guide that satisfies conditions.
-    const user = ConfigStore.get('user');
-
-    return new Promise(async (resolve, reject) => {
-      let projectData = [];
-
-      if (guideKeys.includes(ALERT_REMINDER_1)) {
-        projectData = await this.checkAlertTipData();
-      }
-
-      resolve(
-        guideKeys.find(key => {
-          // Pick the first guide that satisfies conditions.
-          if (key === ALERT_REMINDER_1) {
-            const [stats, rules] = projectData;
-            return !rules && stats > 1000;
-          } else if (
-            user.isSuperuser ||
-            new Date(user.dateJoined) > new Date(2018, 4, 10)
-          ) {
-            return true;
-          }
-
-          return false;
-        })
-      );
-    });
-  },
-
-  async updateCurrentGuide() {
+  updateCurrentGuide() {
     // Logic to determine if a guide is shown:
     // 1. If any required target is missing, don't show the guide.
-    // 2. If custom checks fail, don't show the guide.
-    // 3. If the URL ends with #assistant, show the guide.
-    // 4. If the user isn't in the A/B test, don't show the guide.
-    // 5. If the user has seen the guide, don't show it.
-    // 6. Otherwise show the guide.
+    // 2. If the URL ends with #assistant, show the guide.
+    // 3. If the user has seen the guide or is an old non-superuser, don't show the guide.
+    // 4. Otherwise show the guide.
 
     const availableTargets = [...this.state.anchors].map(a => a.props.target);
 
@@ -252,30 +136,30 @@ const GuideStore = Reflux.createStore({
       });
 
     if (!this.state.forceShow) {
-      guideKeys = guideKeys.filter(key => !this.state.guides[key].seen);
+      const user = ConfigStore.get('user');
+      guideKeys = guideKeys.filter(
+        key =>
+          !this.state.guides[key].seen &&
+          // Don't show guides to users who signed up way before these changes were implemented
+          (user.isSuperuser || new Date(user.dateJoined) > new Date(2019, 6, 1) || true)
+      );
     }
 
-    // Pick the first guide that satisfies conditions.
-    const bestGuideKey = await this.getBestGuideKey(guideKeys);
-
     let bestGuide = null;
-    if (bestGuideKey) {
+    if (guideKeys.length > 0) {
       bestGuide = {
-        ...this.state.guides[bestGuideKey],
+        ...this.state.guides[guideKeys[0]],
 
         // Remove steps that don't have an anchor on the page.
-        steps: this.state.guides[bestGuideKey].steps.filter(
-          step =>
-            step.target === null ||
-            (step.target && availableTargets.indexOf(step.target) >= 0)
+        steps: this.state.guides[guideKeys[0]].steps.filter(
+          step => step.target && availableTargets.indexOf(step.target) >= 0
         ),
       };
     }
 
     this.updatePrevGuide(bestGuide);
     this.state.currentGuide = bestGuide;
-    this.state.currentStep =
-      bestGuide && (this.state.forceShow || bestGuide.guide_type === 'tip') ? 1 : 0;
+    this.state.currentStep = 0;
     this.trigger(this.state);
   },
 });
diff --git a/src/sentry/static/sentry/app/views/app.jsx b/src/sentry/static/sentry/app/views/app.jsx
index 7e9dfcd166..22abfa415b 100644
--- a/src/sentry/static/sentry/app/views/app.jsx
+++ b/src/sentry/static/sentry/app/views/app.jsx
@@ -10,10 +10,10 @@ import keydown from 'react-keydown';
 import {get, isEqual} from 'lodash';
 
 import {openCommandPalette} from 'app/actionCreators/modal';
+import {fetchGuides} from 'app/actionCreators/guides';
 import {t} from 'app/locale';
 import AlertActions from 'app/actions/alertActions';
 import Alerts from 'app/components/alerts';
-import AssistantHelper from 'app/components/assistant/helper';
 import ConfigStore from 'app/stores/configStore';
 import ErrorBoundary from 'app/components/errorBoundary';
 import GlobalModal from 'app/components/globalModal';
@@ -146,6 +146,7 @@ class App extends React.Component {
 
   componentDidMount() {
     this.updateTracing();
+    fetchGuides();
   }
 
   componentDidUpdate(prevProps) {
@@ -242,7 +243,6 @@ class App extends React.Component {
           <Alerts className="messages-container" />
           <Indicators className="indicators-container" />
           <ErrorBoundary>{this.renderBody()}</ErrorBoundary>
-          <AssistantHelper />
         </div>
       </ThemeProvider>
     );
diff --git a/src/sentry/static/sentry/app/views/issueList/overview.jsx b/src/sentry/static/sentry/app/views/issueList/overview.jsx
index cb76ae9bd0..77c9edf109 100644
--- a/src/sentry/static/sentry/app/views/issueList/overview.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/overview.jsx
@@ -23,7 +23,6 @@ import {fetchOrgMembers, indexMembersByProject} from 'app/actionCreators/members
 import {fetchOrganizationTags, fetchTagValues} from 'app/actionCreators/tags';
 import {getUtcDateString} from 'app/utils/dates';
 import {t} from 'app/locale';
-import ConfigStore from 'app/stores/configStore';
 import CursorPoller from 'app/utils/cursorPoller';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import ErrorRobot from 'app/components/errorRobot';
@@ -526,19 +525,12 @@ const IssueList = createReactClass({
   },
 
   renderGroupNodes(ids, groupStatsPeriod) {
-    // Restrict this guide to only show for new users (joined < 30 days)
-    // and add guide anchor only to the first issue
-    const userDateJoined = new Date(ConfigStore.get('user').dateJoined);
-    const dateCutoff = new Date();
-    dateCutoff.setDate(dateCutoff.getDate() - 30);
-
     const topIssue = ids[0];
     const {memberList} = this.state;
 
     const {orgId} = this.props.params;
     const groupNodes = ids.map(id => {
-      const hasGuideAnchor = userDateJoined > dateCutoff && id === topIssue;
-
+      const hasGuideAnchor = id === topIssue;
       const group = GroupStore.get(id);
       let members = null;
       if (group && group.project) {
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/actions.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/actions.jsx
index 28149d81d7..f430e04457 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/actions.jsx
@@ -84,7 +84,7 @@ class DeleteActions extends React.Component {
   render() {
     return (
       <div className="btn-group">
-        <GuideAnchor type="text" target="ignore_delete_discard" />
+        <GuideAnchor target="ignore_delete_discard" />
         <LinkWithConfirmation
           className="group-remove btn btn-default btn-sm"
           title={t('Delete')}
@@ -97,7 +97,6 @@ class DeleteActions extends React.Component {
         </LinkWithConfirmation>
         <DropdownLink caret={true} className="group-delete btn btn-default btn-sm">
           <MenuItem onClick={this.openDiscardModal}>
-            <GuideAnchor type="text" target="delete_discard" />
             <span>{t('Delete and discard future events')}</span>
           </MenuItem>
         </DropdownLink>
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
index 6aade867c7..8deea2ea83 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
@@ -99,7 +99,9 @@ class GroupHeader extends React.Component {
         <div className="row">
           <div className="col-sm-7">
             <h3>
-              <EventOrGroupTitle data={group} />
+              <GuideAnchor target="issue_title">
+                <EventOrGroupTitle data={group} />
+              </GuideAnchor>
             </h3>
             <div className="event-message">
               <span className="error-level">{group.level}</span>
@@ -131,22 +133,23 @@ class GroupHeader extends React.Component {
             <div className="flex flex-justify-right">
               {group.shortId && (
                 <div className="short-id-box count align-right">
-                  <h6 className="nav-header">
-                    <GuideAnchor target="issue_number" type="text" />
-                    <Tooltip
-                      title={t(
-                        'This identifier is unique across your organization, and can be used to reference an issue in various places, like commit messages.'
-                      )}
-                      position="bottom"
-                    >
-                      <a
-                        className="help-link"
-                        href="https://docs.sentry.io/learn/releases/#resolving-issues-via-commits"
+                  <GuideAnchor target="issue_number" position="right">
+                    <h6 className="nav-header">
+                      <Tooltip
+                        title={t(
+                          'This identifier is unique across your organization, and can be used to reference an issue in various places, like commit messages.'
+                        )}
+                        position="bottom"
                       >
-                        {t('Issue #')}
-                      </a>
-                    </Tooltip>
-                  </h6>
+                        <a
+                          className="help-link"
+                          href="https://docs.sentry.io/learn/releases/#resolving-issues-via-commits"
+                        >
+                          {t('Issue #')}
+                        </a>
+                      </Tooltip>
+                    </h6>
+                  </GuideAnchor>
                   <ShortId
                     shortId={group.shortId}
                     avatar={
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
index e3bf2e303d..9a3803229b 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
@@ -9,7 +9,6 @@ import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import ConfigStore from 'app/stores/configStore';
-import GuideAnchor from 'app/components/assistant/guideAnchor';
 import Pagination from 'app/components/pagination';
 import SentryTypes from 'app/sentryTypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
@@ -234,35 +233,28 @@ class OrganizationMembersView extends AsyncView {
     // Only admins/owners can remove members
     const requireLink = !!this.state.authProvider && this.state.authProvider.require_link;
 
-    let action = (
-      <Button
-        priority="primary"
-        size="small"
-        disabled={!canAddMembers}
-        title={
-          !canAddMembers
-            ? t('You do not have enough permission to add new members')
-            : undefined
-        }
-        to={recreateRoute('new/', {routes, params})}
-        icon="icon-circle-add"
-        data-test-id="invite-member"
-      >
-        {t('Invite Member')}
-      </Button>
-    );
-
-    if (canAddMembers) {
-      action = (
-        <GuideAnchor target="member_add" type="invisible">
-          {action}
-        </GuideAnchor>
-      );
-    }
-
     return (
       <div>
-        <SettingsPageHeader title="Members" action={action} />
+        <SettingsPageHeader
+          title="Members"
+          action={
+            <Button
+              priority="primary"
+              size="small"
+              disabled={!canAddMembers}
+              title={
+                !canAddMembers
+                  ? t('You do not have enough permission to add new members')
+                  : undefined
+              }
+              to={recreateRoute('new/', {routes, params})}
+              icon="icon-circle-add"
+              data-test-id="invite-member"
+            >
+              {t('Invite Member')}
+            </Button>
+          }
+        />
 
         <OrganizationAccessRequests
           onApprove={this.handleApprove}
@@ -301,7 +293,6 @@ class OrganizationMembersView extends AsyncView {
                   onSendInvite={this.handleSendInvite}
                   onRemove={this.handleRemove}
                   onLeave={this.handleLeave}
-                  firstRow={members.indexOf(member) === 0}
                 />
               );
             })}
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx
index ffbb8d5b47..b576ec0ab3 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx
@@ -14,7 +14,6 @@ import LoadingIndicator from 'app/components/loadingIndicator';
 import SentryTypes from 'app/sentryTypes';
 import Tooltip from 'app/components/tooltip';
 import recreateRoute from 'app/utils/recreateRoute';
-import {conditionalGuideAnchor} from 'app/components/assistant/guideAnchor';
 
 const UserName = styled(Link)`
   font-size: 16px;
@@ -40,7 +39,6 @@ export default class OrganizationMemberRow extends React.PureComponent {
     canAddMembers: PropTypes.bool,
     currentUser: SentryTypes.User,
     status: PropTypes.oneOf(['', 'loading', 'success', 'error']),
-    firstRow: PropTypes.bool,
   };
 
   constructor(...args) {
@@ -124,55 +122,50 @@ export default class OrganizationMemberRow extends React.PureComponent {
         </Box>
 
         <Box px={2} w={180}>
-          {conditionalGuideAnchor(
-            this.props.firstRow,
-            'member_status',
-            'text',
-            needsSso || pending ? (
+          {needsSso || pending ? (
+            <div>
               <div>
-                <div>
-                  {expired ? (
-                    <strong>{t('Expired')}</strong>
-                  ) : pending ? (
-                    <strong>{t('Invited')}</strong>
-                  ) : (
-                    <strong>{t('Missing SSO Link')}</strong>
-                  )}
-                </div>
-
-                {isInviting && (
-                  <div style={{padding: '4px 0 3px'}}>
-                    <LoadingIndicator mini />
-                  </div>
-                )}
-                {isInviteSuccessful && <span>Sent!</span>}
-                {!isInviting && !isInviteSuccessful && canResend && (
-                  <ResendInviteButton
-                    priority="primary"
-                    size="xsmall"
-                    onClick={this.handleSendInvite}
-                    data-test-id="resend-invite"
-                  >
-                    {t('Resend invite')}
-                  </ResendInviteButton>
-                )}
-              </div>
-            ) : (
-              <div>
-                {!has2fa ? (
-                  <Tooltip title={t('Two-factor auth not enabled')}>
-                    <NoTwoFactorIcon />
-                  </Tooltip>
+                {expired ? (
+                  <strong>{t('Expired')}</strong>
+                ) : pending ? (
+                  <strong>{t('Invited')}</strong>
                 ) : (
-                  <HasTwoFactorIcon />
+                  <strong>{t('Missing SSO Link')}</strong>
                 )}
               </div>
-            )
+
+              {isInviting && (
+                <div style={{padding: '4px 0 3px'}}>
+                  <LoadingIndicator mini />
+                </div>
+              )}
+              {isInviteSuccessful && <span>Sent!</span>}
+              {!isInviting && !isInviteSuccessful && canResend && (
+                <ResendInviteButton
+                  priority="primary"
+                  size="xsmall"
+                  onClick={this.handleSendInvite}
+                  data-test-id="resend-invite"
+                >
+                  {t('Resend invite')}
+                </ResendInviteButton>
+              )}
+            </div>
+          ) : (
+            <div>
+              {!has2fa ? (
+                <Tooltip title={t('Two-factor auth not enabled')}>
+                  <NoTwoFactorIcon />
+                </Tooltip>
+              ) : (
+                <HasTwoFactorIcon />
+              )}
+            </div>
           )}
         </Box>
 
         <Box px={2} w={140}>
-          {conditionalGuideAnchor(this.props.firstRow, 'member_role', 'text', roleName)}
+          {roleName}
         </Box>
 
         {showRemoveButton || showLeaveButton ? (
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx
index 8338cad518..e7d81ef04a 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx
@@ -11,7 +11,6 @@ import {
   addLoadingMessage,
   removeIndicator,
 } from 'app/actionCreators/indicator';
-import {conditionalGuideAnchor} from 'app/components/assistant/guideAnchor';
 import {t, tct} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
@@ -54,7 +53,6 @@ const RuleRow = withApi(
       projectId: PropTypes.string.isRequired,
       data: PropTypes.object.isRequired,
       onDelete: PropTypes.func.isRequired,
-      firstRule: PropTypes.bool,
       canEdit: PropTypes.bool,
     };
 
@@ -143,22 +141,17 @@ const RuleRow = withApi(
                       When <strong>{data.actionMatch}</strong> of these conditions are
                       met:
                     </h6>
-                    {conditionalGuideAnchor(
-                      this.props.firstRule,
-                      'alert_conditions',
-                      'text',
-                      <table className="conditions-list table">
-                        <tbody>
-                          {data.conditions.map((condition, i) => {
-                            return (
-                              <tr key={i}>
-                                <td>{condition.name}</td>
-                              </tr>
-                            );
-                          })}
-                        </tbody>
-                      </table>
-                    )}
+                    <table className="conditions-list table">
+                      <tbody>
+                        {data.conditions.map((condition, i) => {
+                          return (
+                            <tr key={i}>
+                              <td>{condition.name}</td>
+                            </tr>
+                          );
+                        })}
+                      </tbody>
+                    </table>
                   </Condition>
                 )}
               </RuleDescriptionColumn>
@@ -172,22 +165,17 @@ const RuleRow = withApi(
                       </strong>{' '}
                       for an issue:
                     </h6>
-                    {conditionalGuideAnchor(
-                      this.props.firstRule,
-                      'alert_actions',
-                      'text',
-                      <table className="actions-list table">
-                        <tbody>
-                          {data.actions.map((action, i) => {
-                            return (
-                              <tr key={i}>
-                                <td>{action.name}</td>
-                              </tr>
-                            );
-                          })}
-                        </tbody>
-                      </table>
-                    )}
+                    <table className="actions-list table">
+                      <tbody>
+                        {data.actions.map((action, i) => {
+                          return (
+                            <tr key={i}>
+                              <td>{action.name}</td>
+                            </tr>
+                          );
+                        })}
+                      </tbody>
+                    </table>
                   </Condition>
                 )}
               </RuleDescriptionColumn>
@@ -246,7 +234,6 @@ class ProjectAlertRules extends AsyncView {
               params={this.props.params}
               routes={this.props.routes}
               onDelete={this.handleDeleteRule.bind(this, rule)}
-              firstRule={this.state.ruleList.indexOf(rule) === 0}
               canEdit={canEditRule}
             />
           );
diff --git a/tests/js/spec/components/__snapshots__/streamGroup.spec.jsx.snap b/tests/js/spec/components/__snapshots__/streamGroup.spec.jsx.snap
index b21f822ec5..8de377839a 100644
--- a/tests/js/spec/components/__snapshots__/streamGroup.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/streamGroup.spec.jsx.snap
@@ -12,10 +12,6 @@ exports[`StreamGroup renders with anchors 1`] = `
   <GroupCheckbox
     ml={2}
   >
-    <GuideAnchor
-      target="issues"
-      type="text"
-    />
     <GroupCheckBox
       id="1337"
     />
@@ -175,6 +171,9 @@ exports[`StreamGroup renders with anchors 1`] = `
       userReportCount={0}
     />
   </GroupSummary>
+  <GuideAnchor
+    target="issue_stream"
+  />
   <Box
     className="hidden-xs hidden-sm"
     mx={2}
@@ -266,10 +265,6 @@ exports[`StreamGroup renders with anchors 1`] = `
       ]
     }
   >
-    <GuideAnchor
-      target="events"
-      type="text"
-    />
     <StyledCount
       value="327482"
     />
@@ -286,10 +281,6 @@ exports[`StreamGroup renders with anchors 1`] = `
       ]
     }
   >
-    <GuideAnchor
-      target="users"
-      type="text"
-    />
     <StyledCount
       value={35097}
     />
diff --git a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
index 6dd2dba697..1479837094 100644
--- a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
+++ b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
@@ -79,78 +79,53 @@ exports[`ResolveActions with confirmation step renders 1`] = `
         />
       </Modal>
     </CustomResolutionModal>
-    <div
-      className="btn-group"
+    <GuideAnchor
+      target="resolve"
     >
-      <GuideAnchor
-        target="resolve"
-        type="text"
-      />
-      <ActionLink
-        className="btn btn-default btn-sm"
-        confirmLabel="Resolve"
-        disabled={false}
-        message="Are you sure???"
-        onAction={[Function]}
-        shouldConfirm={true}
-        title="Resolve"
+      <div
+        className="btn-group"
       >
-        <Confirm
-          cancelText="Cancel"
-          confirmText="Resolve"
-          disableConfirmButton={false}
+        <ActionLink
+          className="btn btn-default btn-sm"
+          confirmLabel="Resolve"
+          disabled={false}
           message="Are you sure???"
-          onConfirm={[Function]}
-          priority="primary"
-          stopPropagation={false}
+          onAction={[Function]}
+          shouldConfirm={true}
+          title="Resolve"
         >
-          <a
-            aria-label="Resolve"
-            className="btn btn-default btn-sm"
-            onClick={[Function]}
-            title="Resolve"
+          <Confirm
+            cancelText="Cancel"
+            confirmText="Resolve"
+            disableConfirmButton={false}
+            message="Are you sure???"
+            onConfirm={[Function]}
+            priority="primary"
+            stopPropagation={false}
           >
-             
-            <span
-              className="icon-checkmark hidden-xs"
-              style={
-                Object {
-                  "marginRight": 5,
+            <a
+              aria-label="Resolve"
+              className="btn btn-default btn-sm"
+              onClick={[Function]}
+              title="Resolve"
+            >
+               
+              <span
+                className="icon-checkmark hidden-xs"
+                style={
+                  Object {
+                    "marginRight": 5,
+                  }
                 }
-              }
-            />
-            Resolve
-          </a>
-          <Modal
-            animation={false}
-            autoFocus={true}
-            backdrop={true}
-            bsClass="modal"
-            dialogComponentClass={[Function]}
-            enforceFocus={true}
-            keyboard={true}
-            manager={
-              ModalManager {
-                "add": [Function],
-                "containers": Array [],
-                "data": Array [],
-                "handleContainerOverflow": true,
-                "hideSiblingNodes": true,
-                "isTopModal": [Function],
-                "modals": Array [],
-                "remove": [Function],
-              }
-            }
-            onHide={[Function]}
-            renderBackdrop={[Function]}
-            restoreFocus={true}
-            show={false}
-          >
+              />
+              Resolve
+            </a>
             <Modal
+              animation={false}
               autoFocus={true}
               backdrop={true}
-              backdropClassName="modal-backdrop"
-              containerClassName="modal-open"
+              bsClass="modal"
+              dialogComponentClass={[Function]}
               enforceFocus={true}
               keyboard={true}
               manager={
@@ -165,161 +140,161 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                   "remove": [Function],
                 }
               }
-              onEntering={[Function]}
-              onExited={[Function]}
               onHide={[Function]}
               renderBackdrop={[Function]}
               restoreFocus={true}
               show={false}
-            />
-          </Modal>
-        </Confirm>
-      </ActionLink>
-      <DropdownLink
-        alwaysRenderMenu={true}
-        anchorRight={false}
-        caret={true}
-        className="btn btn-default btn-sm"
-        disabled={false}
-        key="resolve-dropdown"
-        title=""
-      >
-        <DropdownMenu
+            >
+              <Modal
+                autoFocus={true}
+                backdrop={true}
+                backdropClassName="modal-backdrop"
+                containerClassName="modal-open"
+                enforceFocus={true}
+                keyboard={true}
+                manager={
+                  ModalManager {
+                    "add": [Function],
+                    "containers": Array [],
+                    "data": Array [],
+                    "handleContainerOverflow": true,
+                    "hideSiblingNodes": true,
+                    "isTopModal": [Function],
+                    "modals": Array [],
+                    "remove": [Function],
+                  }
+                }
+                onEntering={[Function]}
+                onExited={[Function]}
+                onHide={[Function]}
+                renderBackdrop={[Function]}
+                restoreFocus={true}
+                show={false}
+              />
+            </Modal>
+          </Confirm>
+        </ActionLink>
+        <DropdownLink
           alwaysRenderMenu={true}
-          closeOnEscape={true}
-          keepMenuOpen={false}
+          anchorRight={false}
+          caret={true}
+          className="btn btn-default btn-sm"
+          disabled={false}
+          key="resolve-dropdown"
+          title=""
         >
-          <span
-            className="dropdown"
+          <DropdownMenu
+            alwaysRenderMenu={true}
+            closeOnEscape={true}
+            keepMenuOpen={false}
           >
-            <a
-              className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
-              onClick={[Function]}
-              onKeyDown={[Function]}
-              onMouseEnter={[Function]}
-              onMouseLeave={[Function]}
-              style={
-                Object {
-                  "outline": "none",
-                }
-              }
-              tabIndex={-1}
-            >
-              <div
-                className="dropdown-actor-title"
-              >
-                <span />
-                <i
-                  className="icon-arrow-down"
-                />
-              </div>
-            </a>
-            <ul
-              className="dropdown-menu"
-              onClick={[Function]}
-              onMouseEnter={[Function]}
-              onMouseLeave={[Function]}
+            <span
+              className="dropdown"
             >
-              <MenuItem
-                header={true}
+              <a
+                className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
+                onClick={[Function]}
+                onKeyDown={[Function]}
+                onMouseEnter={[Function]}
+                onMouseLeave={[Function]}
+                style={
+                  Object {
+                    "outline": "none",
+                  }
+                }
+                tabIndex={-1}
               >
-                <li
-                  className="dropdown-header"
-                  href={null}
-                  role="presentation"
-                  title={null}
+                <div
+                  className="dropdown-actor-title"
                 >
-                  Resolved In
-                </li>
-              </MenuItem>
-              <MenuItem
-                noAnchor={true}
+                  <span />
+                  <i
+                    className="icon-arrow-down"
+                  />
+                </div>
+              </a>
+              <ul
+                className="dropdown-menu"
+                onClick={[Function]}
+                onMouseEnter={[Function]}
+                onMouseLeave={[Function]}
               >
-                <li
-                  className=""
-                  href={null}
-                  role="presentation"
-                  title={null}
+                <MenuItem
+                  header={true}
+                >
+                  <li
+                    className="dropdown-header"
+                    href={null}
+                    role="presentation"
+                    title={null}
+                  >
+                    Resolved In
+                  </li>
+                </MenuItem>
+                <MenuItem
+                  noAnchor={true}
                 >
-                  <Tooltip
-                    containerDisplayMode="block"
-                    position="top"
-                    title="Set up release tracking in order to use this feature."
+                  <li
+                    className=""
+                    href={null}
+                    role="presentation"
+                    title={null}
                   >
-                    <Manager>
-                      <Reference>
-                        <InnerReference
-                          setReferenceNode={[Function]}
-                        >
-                          <Container
-                            aria-describedby="tooltip-123456"
-                            containerDisplayMode="block"
-                            innerRef={[Function]}
-                            onBlur={[Function]}
-                            onFocus={[Function]}
-                            onMouseEnter={[Function]}
-                            onMouseLeave={[Function]}
+                    <Tooltip
+                      containerDisplayMode="block"
+                      position="top"
+                      title="Set up release tracking in order to use this feature."
+                    >
+                      <Manager>
+                        <Reference>
+                          <InnerReference
+                            setReferenceNode={[Function]}
                           >
-                            <span
+                            <Container
                               aria-describedby="tooltip-123456"
-                              className="css-zt6512-Container erna86q0"
+                              containerDisplayMode="block"
+                              innerRef={[Function]}
                               onBlur={[Function]}
                               onFocus={[Function]}
                               onMouseEnter={[Function]}
                               onMouseLeave={[Function]}
                             >
-                              <ActionLink
-                                confirmLabel="Resolve"
-                                disabled={false}
-                                message="Are you sure???"
-                                onAction={[Function]}
-                                shouldConfirm={true}
+                              <span
+                                aria-describedby="tooltip-123456"
+                                className="css-zt6512-Container erna86q0"
+                                onBlur={[Function]}
+                                onFocus={[Function]}
+                                onMouseEnter={[Function]}
+                                onMouseLeave={[Function]}
                               >
-                                <Confirm
-                                  cancelText="Cancel"
-                                  confirmText="Resolve"
-                                  disableConfirmButton={false}
+                                <ActionLink
+                                  confirmLabel="Resolve"
+                                  disabled={false}
                                   message="Are you sure???"
-                                  onConfirm={[Function]}
-                                  priority="primary"
-                                  stopPropagation={false}
+                                  onAction={[Function]}
+                                  shouldConfirm={true}
                                 >
-                                  <a
-                                    onClick={[Function]}
-                                  >
-                                     
-                                    The next release
-                                  </a>
-                                  <Modal
-                                    animation={false}
-                                    autoFocus={true}
-                                    backdrop={true}
-                                    bsClass="modal"
-                                    dialogComponentClass={[Function]}
-                                    enforceFocus={true}
-                                    keyboard={true}
-                                    manager={
-                                      ModalManager {
-                                        "add": [Function],
-                                        "containers": Array [],
-                                        "data": Array [],
-                                        "handleContainerOverflow": true,
-                                        "hideSiblingNodes": true,
-                                        "isTopModal": [Function],
-                                        "modals": Array [],
-                                        "remove": [Function],
-                                      }
-                                    }
-                                    onHide={[Function]}
-                                    renderBackdrop={[Function]}
-                                    restoreFocus={true}
-                                    show={false}
+                                  <Confirm
+                                    cancelText="Cancel"
+                                    confirmText="Resolve"
+                                    disableConfirmButton={false}
+                                    message="Are you sure???"
+                                    onConfirm={[Function]}
+                                    priority="primary"
+                                    stopPropagation={false}
                                   >
+                                    <a
+                                      onClick={[Function]}
+                                    >
+                                       
+                                      The next release
+                                    </a>
                                     <Modal
+                                      animation={false}
                                       autoFocus={true}
                                       backdrop={true}
-                                      backdropClassName="modal-backdrop"
-                                      containerClassName="modal-open"
+                                      bsClass="modal"
+                                      dialogComponentClass={[Function]}
                                       enforceFocus={true}
                                       keyboard={true}
                                       manager={
@@ -334,101 +309,101 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                                           "remove": [Function],
                                         }
                                       }
-                                      onEntering={[Function]}
-                                      onExited={[Function]}
                                       onHide={[Function]}
                                       renderBackdrop={[Function]}
                                       restoreFocus={true}
                                       show={false}
-                                    />
-                                  </Modal>
-                                </Confirm>
-                              </ActionLink>
-                            </span>
-                          </Container>
-                        </InnerReference>
-                      </Reference>
-                    </Manager>
-                  </Tooltip>
-                  <Tooltip
-                    containerDisplayMode="block"
-                    position="top"
-                    title="Set up release tracking in order to use this feature."
-                  >
-                    <Manager>
-                      <Reference>
-                        <InnerReference
-                          setReferenceNode={[Function]}
-                        >
-                          <Container
-                            aria-describedby="tooltip-123456"
-                            containerDisplayMode="block"
-                            innerRef={[Function]}
-                            onBlur={[Function]}
-                            onFocus={[Function]}
-                            onMouseEnter={[Function]}
-                            onMouseLeave={[Function]}
+                                    >
+                                      <Modal
+                                        autoFocus={true}
+                                        backdrop={true}
+                                        backdropClassName="modal-backdrop"
+                                        containerClassName="modal-open"
+                                        enforceFocus={true}
+                                        keyboard={true}
+                                        manager={
+                                          ModalManager {
+                                            "add": [Function],
+                                            "containers": Array [],
+                                            "data": Array [],
+                                            "handleContainerOverflow": true,
+                                            "hideSiblingNodes": true,
+                                            "isTopModal": [Function],
+                                            "modals": Array [],
+                                            "remove": [Function],
+                                          }
+                                        }
+                                        onEntering={[Function]}
+                                        onExited={[Function]}
+                                        onHide={[Function]}
+                                        renderBackdrop={[Function]}
+                                        restoreFocus={true}
+                                        show={false}
+                                      />
+                                    </Modal>
+                                  </Confirm>
+                                </ActionLink>
+                              </span>
+                            </Container>
+                          </InnerReference>
+                        </Reference>
+                      </Manager>
+                    </Tooltip>
+                    <Tooltip
+                      containerDisplayMode="block"
+                      position="top"
+                      title="Set up release tracking in order to use this feature."
+                    >
+                      <Manager>
+                        <Reference>
+                          <InnerReference
+                            setReferenceNode={[Function]}
                           >
-                            <span
+                            <Container
                               aria-describedby="tooltip-123456"
-                              className="css-zt6512-Container erna86q0"
+                              containerDisplayMode="block"
+                              innerRef={[Function]}
                               onBlur={[Function]}
                               onFocus={[Function]}
                               onMouseEnter={[Function]}
                               onMouseLeave={[Function]}
                             >
-                              <ActionLink
-                                confirmLabel="Resolve"
-                                disabled={false}
-                                message="Are you sure???"
-                                onAction={[Function]}
-                                shouldConfirm={true}
+                              <span
+                                aria-describedby="tooltip-123456"
+                                className="css-zt6512-Container erna86q0"
+                                onBlur={[Function]}
+                                onFocus={[Function]}
+                                onMouseEnter={[Function]}
+                                onMouseLeave={[Function]}
                               >
-                                <Confirm
-                                  cancelText="Cancel"
-                                  confirmText="Resolve"
-                                  disableConfirmButton={false}
+                                <ActionLink
+                                  confirmLabel="Resolve"
+                                  disabled={false}
                                   message="Are you sure???"
-                                  onConfirm={[Function]}
-                                  priority="primary"
-                                  stopPropagation={false}
+                                  onAction={[Function]}
+                                  shouldConfirm={true}
                                 >
-                                  <a
-                                    onClick={[Function]}
-                                  >
-                                     
-                                    The current release
-                                  </a>
-                                  <Modal
-                                    animation={false}
-                                    autoFocus={true}
-                                    backdrop={true}
-                                    bsClass="modal"
-                                    dialogComponentClass={[Function]}
-                                    enforceFocus={true}
-                                    keyboard={true}
-                                    manager={
-                                      ModalManager {
-                                        "add": [Function],
-                                        "containers": Array [],
-                                        "data": Array [],
-                                        "handleContainerOverflow": true,
-                                        "hideSiblingNodes": true,
-                                        "isTopModal": [Function],
-                                        "modals": Array [],
-                                        "remove": [Function],
-                                      }
-                                    }
-                                    onHide={[Function]}
-                                    renderBackdrop={[Function]}
-                                    restoreFocus={true}
-                                    show={false}
+                                  <Confirm
+                                    cancelText="Cancel"
+                                    confirmText="Resolve"
+                                    disableConfirmButton={false}
+                                    message="Are you sure???"
+                                    onConfirm={[Function]}
+                                    priority="primary"
+                                    stopPropagation={false}
                                   >
+                                    <a
+                                      onClick={[Function]}
+                                    >
+                                       
+                                      The current release
+                                    </a>
                                     <Modal
+                                      animation={false}
                                       autoFocus={true}
                                       backdrop={true}
-                                      backdropClassName="modal-backdrop"
-                                      containerClassName="modal-open"
+                                      bsClass="modal"
+                                      dialogComponentClass={[Function]}
                                       enforceFocus={true}
                                       keyboard={true}
                                       manager={
@@ -443,78 +418,103 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                                           "remove": [Function],
                                         }
                                       }
-                                      onEntering={[Function]}
-                                      onExited={[Function]}
                                       onHide={[Function]}
                                       renderBackdrop={[Function]}
                                       restoreFocus={true}
                                       show={false}
-                                    />
-                                  </Modal>
-                                </Confirm>
-                              </ActionLink>
-                            </span>
-                          </Container>
-                        </InnerReference>
-                      </Reference>
-                    </Manager>
-                  </Tooltip>
-                  <Tooltip
-                    containerDisplayMode="block"
-                    position="top"
-                    title="Set up release tracking in order to use this feature."
-                  >
-                    <Manager>
-                      <Reference>
-                        <InnerReference
-                          setReferenceNode={[Function]}
-                        >
-                          <Container
-                            aria-describedby="tooltip-123456"
-                            containerDisplayMode="block"
-                            innerRef={[Function]}
-                            onBlur={[Function]}
-                            onFocus={[Function]}
-                            onMouseEnter={[Function]}
-                            onMouseLeave={[Function]}
+                                    >
+                                      <Modal
+                                        autoFocus={true}
+                                        backdrop={true}
+                                        backdropClassName="modal-backdrop"
+                                        containerClassName="modal-open"
+                                        enforceFocus={true}
+                                        keyboard={true}
+                                        manager={
+                                          ModalManager {
+                                            "add": [Function],
+                                            "containers": Array [],
+                                            "data": Array [],
+                                            "handleContainerOverflow": true,
+                                            "hideSiblingNodes": true,
+                                            "isTopModal": [Function],
+                                            "modals": Array [],
+                                            "remove": [Function],
+                                          }
+                                        }
+                                        onEntering={[Function]}
+                                        onExited={[Function]}
+                                        onHide={[Function]}
+                                        renderBackdrop={[Function]}
+                                        restoreFocus={true}
+                                        show={false}
+                                      />
+                                    </Modal>
+                                  </Confirm>
+                                </ActionLink>
+                              </span>
+                            </Container>
+                          </InnerReference>
+                        </Reference>
+                      </Manager>
+                    </Tooltip>
+                    <Tooltip
+                      containerDisplayMode="block"
+                      position="top"
+                      title="Set up release tracking in order to use this feature."
+                    >
+                      <Manager>
+                        <Reference>
+                          <InnerReference
+                            setReferenceNode={[Function]}
                           >
-                            <span
+                            <Container
                               aria-describedby="tooltip-123456"
-                              className="css-zt6512-Container erna86q0"
+                              containerDisplayMode="block"
+                              innerRef={[Function]}
                               onBlur={[Function]}
                               onFocus={[Function]}
                               onMouseEnter={[Function]}
                               onMouseLeave={[Function]}
                             >
-                              <ActionLink
-                                confirmLabel="Resolve"
-                                disabled={false}
-                                message="Are you sure???"
-                                onAction={[Function]}
-                                shouldConfirm={false}
+                              <span
+                                aria-describedby="tooltip-123456"
+                                className="css-zt6512-Container erna86q0"
+                                onBlur={[Function]}
+                                onFocus={[Function]}
+                                onMouseEnter={[Function]}
+                                onMouseLeave={[Function]}
                               >
-                                <a
-                                  className=""
-                                  data-test-id="action-link"
+                                <ActionLink
+                                  confirmLabel="Resolve"
                                   disabled={false}
-                                  onClick={[Function]}
+                                  message="Are you sure???"
+                                  onAction={[Function]}
+                                  shouldConfirm={false}
                                 >
-                                  Another version…
-                                </a>
-                              </ActionLink>
-                            </span>
-                          </Container>
-                        </InnerReference>
-                      </Reference>
-                    </Manager>
-                  </Tooltip>
-                </li>
-              </MenuItem>
-            </ul>
-          </span>
-        </DropdownMenu>
-      </DropdownLink>
-    </div>
+                                  <a
+                                    className=""
+                                    data-test-id="action-link"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                  >
+                                    Another version…
+                                  </a>
+                                </ActionLink>
+                              </span>
+                            </Container>
+                          </InnerReference>
+                        </Reference>
+                      </Manager>
+                    </Tooltip>
+                  </li>
+                </MenuItem>
+              </ul>
+            </span>
+          </DropdownMenu>
+        </DropdownLink>
+      </div>
+    </GuideAnchor>
   </div>
 </ResolveActions>
 `;
@@ -596,256 +596,256 @@ exports[`ResolveActions without confirmation renders 1`] = `
         />
       </Modal>
     </CustomResolutionModal>
-    <div
-      className="btn-group"
+    <GuideAnchor
+      target="resolve"
     >
-      <GuideAnchor
-        target="resolve"
-        type="text"
-      />
-      <ActionLink
-        className="btn btn-default btn-sm"
-        confirmLabel="Resolve"
-        disabled={false}
-        onAction={[Function]}
-        shouldConfirm={false}
-        title="Resolve"
+      <div
+        className="btn-group"
       >
-        <a
-          aria-label="Resolve"
+        <ActionLink
           className="btn btn-default btn-sm"
-          data-test-id="action-link-resolve"
+          confirmLabel="Resolve"
           disabled={false}
-          onClick={[Function]}
-        >
-          <span
-            className="icon-checkmark hidden-xs"
-            style={
-              Object {
-                "marginRight": 5,
-              }
-            }
-          />
-          Resolve
-        </a>
-      </ActionLink>
-      <DropdownLink
-        alwaysRenderMenu={true}
-        anchorRight={false}
-        caret={true}
-        className="btn btn-default btn-sm"
-        disabled={false}
-        key="resolve-dropdown"
-        title=""
-      >
-        <DropdownMenu
-          alwaysRenderMenu={true}
-          closeOnEscape={true}
-          keepMenuOpen={false}
+          onAction={[Function]}
+          shouldConfirm={false}
+          title="Resolve"
         >
-          <span
-            className="dropdown"
+          <a
+            aria-label="Resolve"
+            className="btn btn-default btn-sm"
+            data-test-id="action-link-resolve"
+            disabled={false}
+            onClick={[Function]}
           >
-            <a
-              className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
-              onClick={[Function]}
-              onKeyDown={[Function]}
-              onMouseEnter={[Function]}
-              onMouseLeave={[Function]}
+            <span
+              className="icon-checkmark hidden-xs"
               style={
                 Object {
-                  "outline": "none",
+                  "marginRight": 5,
                 }
               }
-              tabIndex={-1}
-            >
-              <div
-                className="dropdown-actor-title"
-              >
-                <span />
-                <i
-                  className="icon-arrow-down"
-                />
-              </div>
-            </a>
-            <ul
-              className="dropdown-menu"
-              onClick={[Function]}
-              onMouseEnter={[Function]}
-              onMouseLeave={[Function]}
+            />
+            Resolve
+          </a>
+        </ActionLink>
+        <DropdownLink
+          alwaysRenderMenu={true}
+          anchorRight={false}
+          caret={true}
+          className="btn btn-default btn-sm"
+          disabled={false}
+          key="resolve-dropdown"
+          title=""
+        >
+          <DropdownMenu
+            alwaysRenderMenu={true}
+            closeOnEscape={true}
+            keepMenuOpen={false}
+          >
+            <span
+              className="dropdown"
             >
-              <MenuItem
-                header={true}
+              <a
+                className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
+                onClick={[Function]}
+                onKeyDown={[Function]}
+                onMouseEnter={[Function]}
+                onMouseLeave={[Function]}
+                style={
+                  Object {
+                    "outline": "none",
+                  }
+                }
+                tabIndex={-1}
               >
-                <li
-                  className="dropdown-header"
-                  href={null}
-                  role="presentation"
-                  title={null}
+                <div
+                  className="dropdown-actor-title"
                 >
-                  Resolved In
-                </li>
-              </MenuItem>
-              <MenuItem
-                noAnchor={true}
+                  <span />
+                  <i
+                    className="icon-arrow-down"
+                  />
+                </div>
+              </a>
+              <ul
+                className="dropdown-menu"
+                onClick={[Function]}
+                onMouseEnter={[Function]}
+                onMouseLeave={[Function]}
               >
-                <li
-                  className=""
-                  href={null}
-                  role="presentation"
-                  title={null}
+                <MenuItem
+                  header={true}
+                >
+                  <li
+                    className="dropdown-header"
+                    href={null}
+                    role="presentation"
+                    title={null}
+                  >
+                    Resolved In
+                  </li>
+                </MenuItem>
+                <MenuItem
+                  noAnchor={true}
                 >
-                  <Tooltip
-                    containerDisplayMode="block"
-                    position="top"
-                    title="Set up release tracking in order to use this feature."
+                  <li
+                    className=""
+                    href={null}
+                    role="presentation"
+                    title={null}
                   >
-                    <Manager>
-                      <Reference>
-                        <InnerReference
-                          setReferenceNode={[Function]}
-                        >
-                          <Container
-                            aria-describedby="tooltip-123456"
-                            containerDisplayMode="block"
-                            innerRef={[Function]}
-                            onBlur={[Function]}
-                            onFocus={[Function]}
-                            onMouseEnter={[Function]}
-                            onMouseLeave={[Function]}
+                    <Tooltip
+                      containerDisplayMode="block"
+                      position="top"
+                      title="Set up release tracking in order to use this feature."
+                    >
+                      <Manager>
+                        <Reference>
+                          <InnerReference
+                            setReferenceNode={[Function]}
                           >
-                            <span
+                            <Container
                               aria-describedby="tooltip-123456"
-                              className="css-zt6512-Container erna86q0"
+                              containerDisplayMode="block"
+                              innerRef={[Function]}
                               onBlur={[Function]}
                               onFocus={[Function]}
                               onMouseEnter={[Function]}
                               onMouseLeave={[Function]}
                             >
-                              <ActionLink
-                                confirmLabel="Resolve"
-                                disabled={false}
-                                onAction={[Function]}
-                                shouldConfirm={false}
+                              <span
+                                aria-describedby="tooltip-123456"
+                                className="css-zt6512-Container erna86q0"
+                                onBlur={[Function]}
+                                onFocus={[Function]}
+                                onMouseEnter={[Function]}
+                                onMouseLeave={[Function]}
                               >
-                                <a
-                                  className=""
-                                  data-test-id="action-link"
+                                <ActionLink
+                                  confirmLabel="Resolve"
                                   disabled={false}
-                                  onClick={[Function]}
+                                  onAction={[Function]}
+                                  shouldConfirm={false}
                                 >
-                                  The next release
-                                </a>
-                              </ActionLink>
-                            </span>
-                          </Container>
-                        </InnerReference>
-                      </Reference>
-                    </Manager>
-                  </Tooltip>
-                  <Tooltip
-                    containerDisplayMode="block"
-                    position="top"
-                    title="Set up release tracking in order to use this feature."
-                  >
-                    <Manager>
-                      <Reference>
-                        <InnerReference
-                          setReferenceNode={[Function]}
-                        >
-                          <Container
-                            aria-describedby="tooltip-123456"
-                            containerDisplayMode="block"
-                            innerRef={[Function]}
-                            onBlur={[Function]}
-                            onFocus={[Function]}
-                            onMouseEnter={[Function]}
-                            onMouseLeave={[Function]}
+                                  <a
+                                    className=""
+                                    data-test-id="action-link"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                  >
+                                    The next release
+                                  </a>
+                                </ActionLink>
+                              </span>
+                            </Container>
+                          </InnerReference>
+                        </Reference>
+                      </Manager>
+                    </Tooltip>
+                    <Tooltip
+                      containerDisplayMode="block"
+                      position="top"
+                      title="Set up release tracking in order to use this feature."
+                    >
+                      <Manager>
+                        <Reference>
+                          <InnerReference
+                            setReferenceNode={[Function]}
                           >
-                            <span
+                            <Container
                               aria-describedby="tooltip-123456"
-                              className="css-zt6512-Container erna86q0"
+                              containerDisplayMode="block"
+                              innerRef={[Function]}
                               onBlur={[Function]}
                               onFocus={[Function]}
                               onMouseEnter={[Function]}
                               onMouseLeave={[Function]}
                             >
-                              <ActionLink
-                                confirmLabel="Resolve"
-                                disabled={false}
-                                onAction={[Function]}
-                                shouldConfirm={false}
+                              <span
+                                aria-describedby="tooltip-123456"
+                                className="css-zt6512-Container erna86q0"
+                                onBlur={[Function]}
+                                onFocus={[Function]}
+                                onMouseEnter={[Function]}
+                                onMouseLeave={[Function]}
                               >
-                                <a
-                                  className=""
-                                  data-test-id="action-link"
+                                <ActionLink
+                                  confirmLabel="Resolve"
                                   disabled={false}
-                                  onClick={[Function]}
+                                  onAction={[Function]}
+                                  shouldConfirm={false}
                                 >
-                                  The current release
-                                </a>
-                              </ActionLink>
-                            </span>
-                          </Container>
-                        </InnerReference>
-                      </Reference>
-                    </Manager>
-                  </Tooltip>
-                  <Tooltip
-                    containerDisplayMode="block"
-                    position="top"
-                    title="Set up release tracking in order to use this feature."
-                  >
-                    <Manager>
-                      <Reference>
-                        <InnerReference
-                          setReferenceNode={[Function]}
-                        >
-                          <Container
-                            aria-describedby="tooltip-123456"
-                            containerDisplayMode="block"
-                            innerRef={[Function]}
-                            onBlur={[Function]}
-                            onFocus={[Function]}
-                            onMouseEnter={[Function]}
-                            onMouseLeave={[Function]}
+                                  <a
+                                    className=""
+                                    data-test-id="action-link"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                  >
+                                    The current release
+                                  </a>
+                                </ActionLink>
+                              </span>
+                            </Container>
+                          </InnerReference>
+                        </Reference>
+                      </Manager>
+                    </Tooltip>
+                    <Tooltip
+                      containerDisplayMode="block"
+                      position="top"
+                      title="Set up release tracking in order to use this feature."
+                    >
+                      <Manager>
+                        <Reference>
+                          <InnerReference
+                            setReferenceNode={[Function]}
                           >
-                            <span
+                            <Container
                               aria-describedby="tooltip-123456"
-                              className="css-zt6512-Container erna86q0"
+                              containerDisplayMode="block"
+                              innerRef={[Function]}
                               onBlur={[Function]}
                               onFocus={[Function]}
                               onMouseEnter={[Function]}
                               onMouseLeave={[Function]}
                             >
-                              <ActionLink
-                                confirmLabel="Resolve"
-                                disabled={false}
-                                onAction={[Function]}
-                                shouldConfirm={false}
+                              <span
+                                aria-describedby="tooltip-123456"
+                                className="css-zt6512-Container erna86q0"
+                                onBlur={[Function]}
+                                onFocus={[Function]}
+                                onMouseEnter={[Function]}
+                                onMouseLeave={[Function]}
                               >
-                                <a
-                                  className=""
-                                  data-test-id="action-link"
+                                <ActionLink
+                                  confirmLabel="Resolve"
                                   disabled={false}
-                                  onClick={[Function]}
+                                  onAction={[Function]}
+                                  shouldConfirm={false}
                                 >
-                                  Another version…
-                                </a>
-                              </ActionLink>
-                            </span>
-                          </Container>
-                        </InnerReference>
-                      </Reference>
-                    </Manager>
-                  </Tooltip>
-                </li>
-              </MenuItem>
-            </ul>
-          </span>
-        </DropdownMenu>
-      </DropdownLink>
-    </div>
+                                  <a
+                                    className=""
+                                    data-test-id="action-link"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                  >
+                                    Another version…
+                                  </a>
+                                </ActionLink>
+                              </span>
+                            </Container>
+                          </InnerReference>
+                        </Reference>
+                      </Manager>
+                    </Tooltip>
+                  </li>
+                </MenuItem>
+              </ul>
+            </span>
+          </DropdownMenu>
+        </DropdownLink>
+      </div>
+    </GuideAnchor>
   </div>
 </ResolveActions>
 `;
diff --git a/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap b/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap
index 74e6d64fbf..ca7784a7da 100644
--- a/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap
+++ b/tests/js/spec/components/assistant/__snapshots__/guideAnchor.spec.jsx.snap
@@ -1,17 +1,662 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`GuideAnchor renders 1`] = `""`;
+exports[`GuideAnchor renders, advances, and finishes 1`] = `
+<GuideAnchor
+  target="target 1"
+>
+  <Hovercard
+    body={
+      <GuideContainer>
+        <GuideInputRow>
+          <StyledTitle>
+            title 1
+          </StyledTitle>
+          <CloseLink
+            data-test-id="close-button"
+            href="#"
+            onClick={[Function]}
+          >
+            <CloseIcon />
+          </CloseLink>
+        </GuideInputRow>
+        <StyledContent>
+          <div
+            dangerouslySetInnerHTML={
+              Object {
+                "__html": "abc",
+              }
+            }
+          />
+          <div
+            className="css-16f1609"
+          >
+            <div>
+              <Button
+                disabled={false}
+                onClick={[Function]}
+                priority="success"
+                size="small"
+              >
+                Next
+                 →
+              </Button>
+            </div>
+          </div>
+        </StyledContent>
+      </GuideContainer>
+    }
+    bodyClassName="css-dvx057-GuideAnchor-bodyClassName"
+    displayTimeout={100}
+    position="top"
+    show={true}
+    tipColor="#3EA573"
+  >
+    <Manager>
+      <Reference>
+        <InnerReference
+          setReferenceNode={[Function]}
+        >
+          <span
+            aria-describedby="hovercard-123456"
+          >
+            <span />
+          </span>
+        </InnerReference>
+      </Reference>
+      <Portal
+        containerInfo={
+          <div
+            id="hovercard-portal"
+          >
+            <div
+              class="hovercard css-17wb929-StyledHovercard e38w1je0"
+              style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
+            >
+              <div
+                class="css-1oqil3e-Body-GuideAnchor-bodyClassName e38w1je2"
+              >
+                <div
+                  class="css-m6hbxj-GuideContainer e130o4350"
+                >
+                  <div
+                    class="css-pe6gi5-GuideInputRow e130o4352"
+                  >
+                    <div
+                      class="css-1w7cm7e-StyledTitle e130o4353"
+                    >
+                      title 1
+                    </div>
+                    <a
+                      class="css-wxg3cb-CloseLink e130o4351"
+                      data-test-id="close-button"
+                      href="#"
+                    >
+                      <svg
+                        class="e173w1i13 css-1v6op5i-StyledSvg-CloseIcon e2idor0"
+                        height="1em"
+                        viewBox="[object Object]"
+                        width="1em"
+                      >
+                        <use
+                          href="#test"
+                          xlink:href="#test"
+                        />
+                      </svg>
+                    </a>
+                  </div>
+                  <div
+                    class="css-1lbv6lb-StyledContent e130o4354"
+                  >
+                    <div>
+                      abc
+                    </div>
+                    <div
+                      class="css-16f1609"
+                    >
+                      <div>
+                        <button
+                          aria-disabled="false"
+                          class="css-1xjdilq-StyledButton-getColors e12ma6z0"
+                          role="button"
+                        >
+                          <span
+                            class="css-7ui8bl-ButtonLabel e12ma6z1"
+                          >
+                            Next
+                             →
+                          </span>
+                        </button>
+                      </div>
+                    </div>
+                  </div>
+                </div>
+              </div>
+              <span
+                class="css-6jrnh6-HovercardArrow e38w1je3"
+              />
+            </div>
+          </div>
+        }
+      >
+        <Popper
+          modifiers={
+            Object {
+              "hide": Object {
+                "enabled": false,
+              },
+              "preventOverflow": Object {
+                "boundariesElement": "viewport",
+                "enabled": true,
+                "padding": 10,
+              },
+            }
+          }
+          placement="top"
+        >
+          <InnerPopper
+            eventsEnabled={true}
+            modifiers={
+              Object {
+                "hide": Object {
+                  "enabled": false,
+                },
+                "preventOverflow": Object {
+                  "boundariesElement": "viewport",
+                  "enabled": true,
+                  "padding": 10,
+                },
+              }
+            }
+            placement="top"
+            positionFixed={false}
+            referenceElement={
+              <span
+                aria-describedby="hovercard-123456"
+              >
+                <span />
+              </span>
+            }
+          >
+            <StyledHovercard
+              className="hovercard"
+              innerRef={[Function]}
+              style={
+                Object {
+                  "left": 0,
+                  "opacity": 0,
+                  "pointerEvents": "none",
+                  "position": "absolute",
+                  "top": 0,
+                }
+              }
+              visible={true}
+              withHeader={false}
+            >
+              <div
+                className="hovercard css-17wb929-StyledHovercard e38w1je0"
+                style={
+                  Object {
+                    "left": 0,
+                    "opacity": 0,
+                    "pointerEvents": "none",
+                    "position": "absolute",
+                    "top": 0,
+                  }
+                }
+              >
+                <Body
+                  className="css-dvx057-GuideAnchor-bodyClassName"
+                >
+                  <div
+                    className="css-1oqil3e-Body-GuideAnchor-bodyClassName e38w1je2"
+                  >
+                    <GuideContainer>
+                      <div
+                        className="css-m6hbxj-GuideContainer e130o4350"
+                      >
+                        <GuideInputRow>
+                          <div
+                            className="css-pe6gi5-GuideInputRow e130o4352"
+                          >
+                            <StyledTitle>
+                              <div
+                                className="css-1w7cm7e-StyledTitle e130o4353"
+                              >
+                                title 1
+                              </div>
+                            </StyledTitle>
+                            <CloseLink
+                              data-test-id="close-button"
+                              href="#"
+                              onClick={[Function]}
+                            >
+                              <a
+                                className="css-wxg3cb-CloseLink e130o4351"
+                                data-test-id="close-button"
+                                href="#"
+                                onClick={[Function]}
+                              >
+                                <CloseIcon>
+                                  <Component
+                                    className="css-1hopv4i-CloseIcon e173w1i13"
+                                  >
+                                    <InlineSvg
+                                      className="css-1hopv4i-CloseIcon e173w1i13"
+                                      src="icon-close-lg"
+                                    >
+                                      <StyledSvg
+                                        className="css-1hopv4i-CloseIcon e173w1i13"
+                                        height="1em"
+                                        viewBox={Object {}}
+                                        width="1em"
+                                      >
+                                        <svg
+                                          className="e173w1i13 css-1v6op5i-StyledSvg-CloseIcon e2idor0"
+                                          height="1em"
+                                          viewBox={Object {}}
+                                          width="1em"
+                                        >
+                                          <use
+                                            href="#test"
+                                            xlinkHref="#test"
+                                          />
+                                        </svg>
+                                      </StyledSvg>
+                                    </InlineSvg>
+                                  </Component>
+                                </CloseIcon>
+                              </a>
+                            </CloseLink>
+                          </div>
+                        </GuideInputRow>
+                        <StyledContent>
+                          <div
+                            className="css-1lbv6lb-StyledContent e130o4354"
+                          >
+                            <div
+                              dangerouslySetInnerHTML={
+                                Object {
+                                  "__html": "abc",
+                                }
+                              }
+                            />
+                            <div
+                              className="css-16f1609"
+                            >
+                              <div>
+                                <Button
+                                  disabled={false}
+                                  onClick={[Function]}
+                                  priority="success"
+                                  size="small"
+                                >
+                                  <StyledButton
+                                    aria-disabled={false}
+                                    disabled={false}
+                                    onClick={[Function]}
+                                    priority="success"
+                                    role="button"
+                                    size="small"
+                                  >
+                                    <ForwardRef
+                                      aria-disabled={false}
+                                      className="css-1xjdilq-StyledButton-getColors e12ma6z0"
+                                      disabled={false}
+                                      onClick={[Function]}
+                                      priority="success"
+                                      role="button"
+                                      size="small"
+                                    >
+                                      <button
+                                        aria-disabled={false}
+                                        className="css-1xjdilq-StyledButton-getColors e12ma6z0"
+                                        onClick={[Function]}
+                                        role="button"
+                                        size="small"
+                                      >
+                                        <ButtonLabel
+                                          priority="success"
+                                          size="small"
+                                        >
+                                          <Component
+                                            className="css-7ui8bl-ButtonLabel e12ma6z1"
+                                            priority="success"
+                                            size="small"
+                                          >
+                                            <span
+                                              className="css-7ui8bl-ButtonLabel e12ma6z1"
+                                            >
+                                              Next
+                                               →
+                                            </span>
+                                          </Component>
+                                        </ButtonLabel>
+                                      </button>
+                                    </ForwardRef>
+                                  </StyledButton>
+                                </Button>
+                              </div>
+                            </div>
+                          </div>
+                        </StyledContent>
+                      </div>
+                    </GuideContainer>
+                  </div>
+                </Body>
+                <HovercardArrow
+                  innerRef={[Function]}
+                  style={Object {}}
+                  tipColor="#3EA573"
+                >
+                  <span
+                    className="css-6jrnh6-HovercardArrow e38w1je3"
+                    style={Object {}}
+                  />
+                </HovercardArrow>
+              </div>
+            </StyledHovercard>
+          </InnerPopper>
+        </Popper>
+      </Portal>
+    </Manager>
+  </Hovercard>
+</GuideAnchor>
+`;
 
-exports[`GuideAnchor turns active when guide state changes 1`] = `
-<GuideAnchorContainer
-  innerRef={[Function]}
-  type="text"
+exports[`GuideAnchor renders, advances, and finishes 2`] = `
+<GuideAnchor
+  target="target 2"
 >
-  <StyledGuideAnchor
-    active={true}
-    className="guide-anchor-ping target 1"
+  <Hovercard
+    body={
+      <GuideContainer>
+        <GuideInputRow>
+          <StyledTitle>
+            title 2
+          </StyledTitle>
+        </GuideInputRow>
+        <StyledContent>
+          <div
+            dangerouslySetInnerHTML={
+              Object {
+                "__html": "xyz",
+              }
+            }
+          />
+          <div
+            className="css-16f1609"
+          >
+            <div>
+              <Button
+                disabled={false}
+                onClick={[Function]}
+                priority="success"
+                size="small"
+              >
+                Done
+              </Button>
+            </div>
+          </div>
+        </StyledContent>
+      </GuideContainer>
+    }
+    bodyClassName="css-dvx057-GuideAnchor-bodyClassName"
+    displayTimeout={100}
+    position="top"
+    show={true}
+    tipColor="#3EA573"
   >
-    <StyledGuideAnchorRipples />
-  </StyledGuideAnchor>
-</GuideAnchorContainer>
+    <Manager>
+      <Reference>
+        <InnerReference
+          setReferenceNode={[Function]}
+        >
+          <span
+            aria-describedby="hovercard-123456"
+          >
+            <span />
+          </span>
+        </InnerReference>
+      </Reference>
+      <Portal
+        containerInfo={
+          <div
+            id="hovercard-portal"
+          >
+            <div
+              class="hovercard css-17wb929-StyledHovercard e38w1je0"
+              style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
+            >
+              <div
+                class="css-1oqil3e-Body-GuideAnchor-bodyClassName e38w1je2"
+              >
+                <div
+                  class="css-m6hbxj-GuideContainer e130o4350"
+                >
+                  <div
+                    class="css-pe6gi5-GuideInputRow e130o4352"
+                  >
+                    <div
+                      class="css-1w7cm7e-StyledTitle e130o4353"
+                    >
+                      title 2
+                    </div>
+                  </div>
+                  <div
+                    class="css-1lbv6lb-StyledContent e130o4354"
+                  >
+                    <div>
+                      xyz
+                    </div>
+                    <div
+                      class="css-16f1609"
+                    >
+                      <div>
+                        <button
+                          aria-disabled="false"
+                          aria-label="Done"
+                          class="css-1xjdilq-StyledButton-getColors e12ma6z0"
+                          role="button"
+                        >
+                          <span
+                            class="css-7ui8bl-ButtonLabel e12ma6z1"
+                          >
+                            Done
+                          </span>
+                        </button>
+                      </div>
+                    </div>
+                  </div>
+                </div>
+              </div>
+              <span
+                class="css-6jrnh6-HovercardArrow e38w1je3"
+              />
+            </div>
+          </div>
+        }
+      >
+        <Popper
+          modifiers={
+            Object {
+              "hide": Object {
+                "enabled": false,
+              },
+              "preventOverflow": Object {
+                "boundariesElement": "viewport",
+                "enabled": true,
+                "padding": 10,
+              },
+            }
+          }
+          placement="top"
+        >
+          <InnerPopper
+            eventsEnabled={true}
+            modifiers={
+              Object {
+                "hide": Object {
+                  "enabled": false,
+                },
+                "preventOverflow": Object {
+                  "boundariesElement": "viewport",
+                  "enabled": true,
+                  "padding": 10,
+                },
+              }
+            }
+            placement="top"
+            positionFixed={false}
+            referenceElement={
+              <span
+                aria-describedby="hovercard-123456"
+              >
+                <span />
+              </span>
+            }
+          >
+            <StyledHovercard
+              className="hovercard"
+              innerRef={[Function]}
+              style={
+                Object {
+                  "left": 0,
+                  "opacity": 0,
+                  "pointerEvents": "none",
+                  "position": "absolute",
+                  "top": 0,
+                }
+              }
+              visible={true}
+              withHeader={false}
+            >
+              <div
+                className="hovercard css-17wb929-StyledHovercard e38w1je0"
+                style={
+                  Object {
+                    "left": 0,
+                    "opacity": 0,
+                    "pointerEvents": "none",
+                    "position": "absolute",
+                    "top": 0,
+                  }
+                }
+              >
+                <Body
+                  className="css-dvx057-GuideAnchor-bodyClassName"
+                >
+                  <div
+                    className="css-1oqil3e-Body-GuideAnchor-bodyClassName e38w1je2"
+                  >
+                    <GuideContainer>
+                      <div
+                        className="css-m6hbxj-GuideContainer e130o4350"
+                      >
+                        <GuideInputRow>
+                          <div
+                            className="css-pe6gi5-GuideInputRow e130o4352"
+                          >
+                            <StyledTitle>
+                              <div
+                                className="css-1w7cm7e-StyledTitle e130o4353"
+                              >
+                                title 2
+                              </div>
+                            </StyledTitle>
+                          </div>
+                        </GuideInputRow>
+                        <StyledContent>
+                          <div
+                            className="css-1lbv6lb-StyledContent e130o4354"
+                          >
+                            <div
+                              dangerouslySetInnerHTML={
+                                Object {
+                                  "__html": "xyz",
+                                }
+                              }
+                            />
+                            <div
+                              className="css-16f1609"
+                            >
+                              <div>
+                                <Button
+                                  disabled={false}
+                                  onClick={[Function]}
+                                  priority="success"
+                                  size="small"
+                                >
+                                  <StyledButton
+                                    aria-disabled={false}
+                                    aria-label="Done"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                    priority="success"
+                                    role="button"
+                                    size="small"
+                                  >
+                                    <ForwardRef
+                                      aria-disabled={false}
+                                      aria-label="Done"
+                                      className="css-1xjdilq-StyledButton-getColors e12ma6z0"
+                                      disabled={false}
+                                      onClick={[Function]}
+                                      priority="success"
+                                      role="button"
+                                      size="small"
+                                    >
+                                      <button
+                                        aria-disabled={false}
+                                        aria-label="Done"
+                                        className="css-1xjdilq-StyledButton-getColors e12ma6z0"
+                                        onClick={[Function]}
+                                        role="button"
+                                        size="small"
+                                      >
+                                        <ButtonLabel
+                                          priority="success"
+                                          size="small"
+                                        >
+                                          <Component
+                                            className="css-7ui8bl-ButtonLabel e12ma6z1"
+                                            priority="success"
+                                            size="small"
+                                          >
+                                            <span
+                                              className="css-7ui8bl-ButtonLabel e12ma6z1"
+                                            >
+                                              Done
+                                            </span>
+                                          </Component>
+                                        </ButtonLabel>
+                                      </button>
+                                    </ForwardRef>
+                                  </StyledButton>
+                                </Button>
+                              </div>
+                            </div>
+                          </div>
+                        </StyledContent>
+                      </div>
+                    </GuideContainer>
+                  </div>
+                </Body>
+                <HovercardArrow
+                  innerRef={[Function]}
+                  style={Object {}}
+                  tipColor="#3EA573"
+                >
+                  <span
+                    className="css-6jrnh6-HovercardArrow e38w1je3"
+                    style={Object {}}
+                  />
+                </HovercardArrow>
+              </div>
+            </StyledHovercard>
+          </InnerPopper>
+        </Popper>
+      </Portal>
+    </Manager>
+  </Hovercard>
+</GuideAnchor>
 `;
diff --git a/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap b/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap
deleted file mode 100644
index 8b66b30047..0000000000
--- a/tests/js/spec/components/assistant/__snapshots__/guideDrawer.spec.jsx.snap
+++ /dev/null
@@ -1,204 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`GuideDrawer gets dismissed 1`] = `
-<GuideContainer>
-  <GuideInputRow>
-    <CueIcon
-      hasGuide={true}
-    />
-    <StyledTitle>
-      1. Title 1
-    </StyledTitle>
-    <div
-      className="close-button"
-      onClick={[Function]}
-      style={
-        Object {
-          "display": "flex",
-        }
-      }
-    >
-      <CloseIcon />
-    </div>
-  </GuideInputRow>
-  <StyledContent>
-    <div
-      dangerouslySetInnerHTML={
-        Object {
-          "__html": "Message 1 testorg",
-        }
-      }
-    />
-    <div
-      style={
-        Object {
-          "marginTop": "1em",
-        }
-      }
-    >
-      <div>
-        <Button
-          disabled={false}
-          onClick={[Function]}
-          priority="success"
-          size="small"
-        >
-          Next
-           →
-        </Button>
-      </div>
-    </div>
-  </StyledContent>
-</GuideContainer>
-`;
-
-exports[`GuideDrawer renders drawer 1`] = `
-<StyledCueContainer
-  data-test-id="assistant-cue"
-  onClick={[Function]}
->
-  <CueIcon
-    hasGuide={true}
-  />
-  <StyledCueText>
-    Click here for a tour of the issue page
-  </StyledCueText>
-  <div
-    onClick={[Function]}
-    style={
-      Object {
-        "display": "flex",
-      }
-    }
-  >
-    <CloseIcon />
-  </div>
-</StyledCueContainer>
-`;
-
-exports[`GuideDrawer renders next step 1`] = `
-<GuideContainer>
-  <GuideInputRow>
-    <CueIcon
-      hasGuide={true}
-    />
-    <StyledTitle>
-      2. Title 2
-    </StyledTitle>
-  </GuideInputRow>
-  <StyledContent>
-    <div
-      dangerouslySetInnerHTML={
-        Object {
-          "__html": "Message 2",
-        }
-      }
-    />
-    <div
-      style={
-        Object {
-          "marginTop": "1em",
-        }
-      }
-    >
-      <div
-        style={
-          Object {
-            "textAlign": "center",
-          }
-        }
-      >
-        <p>
-          Did you find this guide useful?
-        </p>
-        <Button
-          disabled={false}
-          onClick={[Function]}
-          priority="success"
-          size="small"
-        >
-          <span>
-            Yes
-               ✔
-          </span>
-        </Button>
-        <Button
-          disabled={false}
-          onClick={[Function]}
-          priority="success"
-          size="small"
-          style={
-            Object {
-              "marginLeft": "0.25em",
-            }
-          }
-        >
-          <span>
-            No
-               ✖
-          </span>
-        </Button>
-      </div>
-    </div>
-  </StyledContent>
-</GuideContainer>
-`;
-
-exports[`GuideDrawer renders tip 1`] = `
-<GuideContainer>
-  <GuideInputRow>
-    <CueIcon
-      hasGuide={true}
-    />
-    <StyledTitle>
-      1. Title 1
-    </StyledTitle>
-  </GuideInputRow>
-  <StyledContent>
-    <div
-      dangerouslySetInnerHTML={
-        Object {
-          "__html": "Message 1 56",
-        }
-      }
-    />
-    <div
-      style={
-        Object {
-          "marginTop": "1em",
-        }
-      }
-    >
-      <div
-        style={
-          Object {
-            "textAlign": "center",
-          }
-        }
-      >
-        <Button
-          disabled={false}
-          onClick={[Function]}
-          priority="success"
-          size="small"
-        >
-          cta_text
-        </Button>
-        <Button
-          disabled={false}
-          onClick={[Function]}
-          priority="success"
-          size="small"
-          style={
-            Object {
-              "marginLeft": "0.25em",
-            }
-          }
-        >
-          Dismiss
-        </Button>
-      </div>
-    </div>
-  </StyledContent>
-</GuideContainer>
-`;
diff --git a/tests/js/spec/components/assistant/guideAnchor.spec.jsx b/tests/js/spec/components/assistant/guideAnchor.spec.jsx
index 5e8059bae8..6925885a60 100644
--- a/tests/js/spec/components/assistant/guideAnchor.spec.jsx
+++ b/tests/js/spec/components/assistant/guideAnchor.spec.jsx
@@ -1,43 +1,118 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {mount, shallow} from 'enzyme';
 import GuideAnchor from 'app/components/assistant/guideAnchor';
+import GuideActions from 'app/actions/guideActions';
+import ConfigStore from 'app/stores/configStore';
 
 describe('GuideAnchor', function() {
-  const data = {
-    currentGuide: {steps: [{message: 'abc', target: 'target 1', title: 'title 1'}]},
-    currentStep: 1,
-    anchors: null,
-    guides: [],
-    guidesSeen: new Set(),
+  const guides = {
+    guide1: {
+      id: 1,
+      required_targets: [],
+      steps: [
+        {message: 'abc', target: 'target 1', title: 'title 1'},
+        {message: 'xyz', target: 'target 2', title: 'title 2'},
+      ],
+    },
   };
 
-  beforeEach(function() {});
+  const routerContext = TestStubs.routerContext();
 
-  afterEach(function() {});
+  let wrapper1, wrapper2;
 
-  it('renders', function() {
-    const component = shallow(<GuideAnchor target="target 1" type="text" />);
-    expect(component).toMatchSnapshot();
+  beforeEach(function() {
+    ConfigStore.config = {
+      user: {
+        isSuperuser: true,
+      },
+    };
+    wrapper1 = mount(<GuideAnchor target="target 1" />, routerContext);
+    wrapper2 = mount(<GuideAnchor target="target 2" />, routerContext);
   });
 
-  it('turns active when guide state changes', function() {
-    const wrapper = shallow(<GuideAnchor target="target 1" type="text" />);
-    const component = wrapper.instance();
-    component.onGuideStateChange(data);
-    wrapper.update();
-    expect(component.state).toEqual({active: true});
-    expect(wrapper).toMatchSnapshot();
+  afterEach(function() {
+    wrapper1.unmount();
+    wrapper2.unmount();
+  });
+
+  it('renders, advances, and finishes', async function() {
+    const data = JSON.parse(JSON.stringify(guides)); // deep copy
+    GuideActions.fetchSucceeded(data);
+    await tick();
+    wrapper1.update();
+    expect(wrapper1).toMatchSnapshot();
+
+    // Clicking on next should deactivate the current card and activate the next one.
+    wrapper1
+      .find('Button')
+      .first()
+      .simulate('click');
+    await tick();
+    wrapper1.update();
+    wrapper2.update();
+    expect(wrapper1.state('active')).toBeFalsy();
+    expect(wrapper2.state('active')).toBeTruthy();
+    expect(wrapper2).toMatchSnapshot();
+
+    // Clicking on the button in the last step should finish the guide.
+    const finishMock = MockApiClient.addMockResponse({
+      method: 'PUT',
+      url: '/assistant/',
+    });
+    wrapper2
+      .find('Button')
+      .last()
+      .simulate('click');
+    //.simulate('click', {stopPropagation: () => {}});
+    expect(finishMock).toHaveBeenCalledWith(
+      '/assistant/',
+      expect.objectContaining({
+        method: 'PUT',
+        data: {
+          guide_id: 1,
+          status: 'viewed',
+        },
+      })
+    );
+  });
+
+  it('dismisses', async function() {
+    const data = JSON.parse(JSON.stringify(guides)); // deep copy
+    GuideActions.fetchSucceeded(data);
+    await tick();
+    wrapper1.update();
+
+    const dismissMock = MockApiClient.addMockResponse({
+      method: 'PUT',
+      url: '/assistant/',
+    });
+    wrapper1
+      .find('[data-test-id="close-button"]')
+      .first()
+      .simulate('click');
+    expect(dismissMock).toHaveBeenCalledWith(
+      '/assistant/',
+      expect.objectContaining({
+        method: 'PUT',
+        data: {
+          guide_id: 1,
+          status: 'dismissed',
+        },
+      })
+    );
+    await tick();
+    expect(wrapper1.state('active')).toBeFalsy();
   });
 
   it('renders no container when inactive', function() {
     const wrapper = shallow(
-      <GuideAnchor target="target 1" type="text">
+      <GuideAnchor target="target 1">
         <span>A child</span>
       </GuideAnchor>
     );
     const component = wrapper.instance();
     wrapper.update();
-    expect(component.state).toEqual({active: false});
-    expect(wrapper.find('GuideAnchorContainer')).toHaveLength(0);
+    expect(component.state).toMatchObject({active: false});
+    expect(wrapper.find('Hovercard')).toHaveLength(0);
   });
 });
diff --git a/tests/js/spec/components/assistant/guideDrawer.spec.jsx b/tests/js/spec/components/assistant/guideDrawer.spec.jsx
deleted file mode 100644
index 30dcecc2a8..0000000000
--- a/tests/js/spec/components/assistant/guideDrawer.spec.jsx
+++ /dev/null
@@ -1,144 +0,0 @@
-import React from 'react';
-
-import {GuideDrawer} from 'app/components/assistant/guideDrawer';
-import {shallow} from 'enzyme';
-
-describe('GuideDrawer', function() {
-  const guides = [
-    {
-      cue: 'Click here for a tour of the issue page',
-      id: 1,
-      required_targets: ['target 1'],
-      steps: [
-        {message: 'Message 1 ${orgSlug}', target: 'target 1', title: '1. Title 1'},
-        {message: 'Message 2', target: 'target 2', title: '2. Title 2'},
-      ],
-    },
-    {
-      id: 2,
-      guide_type: 'tip',
-      cta_text: 'cta_text',
-      cta_link: '/cta/link/${orgSlug}/${projectSlug}/',
-      required_targets: ['target 3'],
-      steps: [
-        {message: 'Message 1 ${numEvents}', target: 'target 3', title: '1. Title 1'},
-      ],
-    },
-  ];
-  let wrapper, component, closeMock, pushMock;
-
-  beforeEach(function() {
-    MockApiClient.addMockResponse({
-      url: '/assistant/',
-      body: guides,
-    });
-    closeMock = MockApiClient.addMockResponse({
-      method: 'PUT',
-      url: '/assistant/',
-    });
-    pushMock = jest.fn();
-    wrapper = shallow(
-      <GuideDrawer
-        router={{
-          push: pushMock,
-        }}
-      />,
-      {
-        context: {
-          router: TestStubs.router(),
-          organization: {
-            id: '100',
-          },
-        },
-      }
-    );
-    component = wrapper.instance();
-  });
-
-  afterEach(function() {
-    MockApiClient.clearMockResponses();
-  });
-
-  it('renders tip', async function() {
-    component.onGuideStateChange({
-      currentGuide: guides[1],
-      currentStep: 1,
-      project: {id: '10', slug: 'testproj'},
-      projectStats: new Map([[10, 56]]),
-      org: {slug: 'testorg'},
-    });
-    wrapper.update();
-    expect(wrapper).toMatchSnapshot();
-    // Click on the CTA.
-    wrapper
-      .find('Button')
-      .first()
-      .simulate('click');
-    expect(pushMock).toHaveBeenCalledWith('/cta/link/testorg/testproj/');
-  });
-
-  it('renders drawer', function() {
-    component.onGuideStateChange({
-      currentGuide: guides[0],
-      currentStep: 0,
-    });
-    wrapper.update();
-    wrapper
-      .find('[data-test-id="assistant-cue"]')
-      .first()
-      .simulate('click');
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('gets dismissed', function() {
-    component.onGuideStateChange({
-      currentGuide: guides[0],
-      currentStep: 1,
-      org: {slug: 'testorg'},
-    });
-    wrapper.update();
-    expect(wrapper).toMatchSnapshot();
-
-    wrapper
-      .find('.close-button')
-      .last()
-      .simulate('click', {stopPropagation: () => {}});
-    expect(closeMock).toHaveBeenCalledWith(
-      '/assistant/',
-      expect.objectContaining({
-        method: 'PUT',
-        data: {
-          guide_id: 1,
-          status: 'dismissed',
-        },
-      })
-    );
-  });
-
-  it('renders next step', function() {
-    component.onGuideStateChange({
-      currentGuide: guides[0],
-      currentStep: 2,
-      org: {slug: 'testorg'},
-    });
-    wrapper.update();
-    expect(wrapper).toMatchSnapshot();
-
-    // Mark as useful.
-    wrapper
-      .find('Button')
-      .first()
-      .simulate('click');
-    expect(closeMock).toHaveBeenCalledWith(
-      '/assistant/',
-      expect.objectContaining({
-        method: 'PUT',
-        data: {
-          guide_id: 1,
-          status: 'viewed',
-          useful: true,
-        },
-      })
-    );
-  });
-});
diff --git a/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap
index ceaad6a928..cc58892048 100644
--- a/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/externalIssueActions.spec.jsx.snap
@@ -162,60 +162,52 @@ exports[`ExternalIssueActions with no external issues linked renders 1`] = `
               <InnerReference
                 setReferenceNode={[Function]}
               >
-                <Container
+                <span
                   aria-describedby="hovercard-123456"
                   className="css-2jp7uo-hoverCardContainer"
-                  innerRef={[Function]}
                   onMouseEnter={[Function]}
                   onMouseLeave={[Function]}
                 >
-                  <span
-                    aria-describedby="hovercard-123456"
-                    className="css-9q2tea-Container-hoverCardContainer e38w1je1"
-                    onMouseEnter={[Function]}
-                    onMouseLeave={[Function]}
+                  <IntegrationIcon
+                    src="icon-github"
                   >
-                    <IntegrationIcon
+                    <InlineSvg
+                      className="css-jn9d7y-IntegrationIcon e1vaar1z1"
                       src="icon-github"
                     >
-                      <InlineSvg
+                      <StyledSvg
                         className="css-jn9d7y-IntegrationIcon e1vaar1z1"
-                        src="icon-github"
+                        height="1em"
+                        viewBox={Object {}}
+                        width="1em"
                       >
-                        <StyledSvg
-                          className="css-jn9d7y-IntegrationIcon e1vaar1z1"
+                        <svg
+                          className="e1vaar1z1 css-ihls3x-StyledSvg-IntegrationIcon e2idor0"
                           height="1em"
                           viewBox={Object {}}
                           width="1em"
                         >
-                          <svg
-                            className="e1vaar1z1 css-ihls3x-StyledSvg-IntegrationIcon e2idor0"
-                            height="1em"
-                            viewBox={Object {}}
-                            width="1em"
-                          >
-                            <use
-                              href="#test"
-                              xlinkHref="#test"
-                            />
-                          </svg>
-                        </StyledSvg>
-                      </InlineSvg>
-                    </IntegrationIcon>
-                    <IntegrationLink
+                          <use
+                            href="#test"
+                            xlinkHref="#test"
+                          />
+                        </svg>
+                      </StyledSvg>
+                    </InlineSvg>
+                  </IntegrationIcon>
+                  <IntegrationLink
+                    href={null}
+                    onClick={[Function]}
+                  >
+                    <a
+                      className="css-1g8yzea-IntegrationLink e1vaar1z2"
                       href={null}
                       onClick={[Function]}
                     >
-                      <a
-                        className="css-1g8yzea-IntegrationLink e1vaar1z2"
-                        href={null}
-                        onClick={[Function]}
-                      >
-                        Link GitHub Issue
-                      </a>
-                    </IntegrationLink>
-                  </span>
-                </Container>
+                      Link GitHub Issue
+                    </a>
+                  </IntegrationLink>
+                </span>
               </InnerReference>
             </Reference>
           </Manager>
diff --git a/tests/js/spec/components/streamGroup.spec.jsx b/tests/js/spec/components/streamGroup.spec.jsx
index a29d36a5bc..246444b67c 100644
--- a/tests/js/spec/components/streamGroup.spec.jsx
+++ b/tests/js/spec/components/streamGroup.spec.jsx
@@ -36,7 +36,7 @@ describe('StreamGroup', function() {
     );
 
     expect(component.find('GuideAnchor').exists()).toBe(true);
-    expect(component.find('GuideAnchor')).toHaveLength(3);
+    expect(component.find('GuideAnchor')).toHaveLength(1);
     expect(component).toMatchSnapshot();
   });
 });
diff --git a/tests/js/spec/stores/guideStore.spec.jsx b/tests/js/spec/stores/guideStore.spec.jsx
index 4efe9de75b..29abec4efe 100644
--- a/tests/js/spec/stores/guideStore.spec.jsx
+++ b/tests/js/spec/stores/guideStore.spec.jsx
@@ -4,8 +4,8 @@ import GuideAnchor from 'app/components/assistant/guideAnchor';
 import ConfigStore from 'app/stores/configStore';
 
 describe('GuideStore', function() {
-  const anchor1 = <GuideAnchor target="target 1" type="text" />;
-  const anchor2 = <GuideAnchor target="target 2" type="text" />;
+  const anchor1 = <GuideAnchor target="target 1" />;
+  const anchor2 = <GuideAnchor target="target 2" />;
   let data;
 
   beforeEach(function() {
@@ -17,7 +17,6 @@ describe('GuideStore', function() {
     GuideStore.init();
     data = {
       Guide1: {
-        cue: 'Click here for a tour of the issue page',
         id: 1,
         required_targets: ['target 1'],
         steps: [
@@ -28,7 +27,6 @@ describe('GuideStore', function() {
         seen: true,
       },
       Guide2: {
-        cue: 'Some other guide here',
         id: 2,
         required_targets: ['target 1'],
         steps: [
@@ -37,95 +35,51 @@ describe('GuideStore', function() {
         ],
         seen: false,
       },
-      alert_reminder_1: {
-        id: 3,
-        guide_type: 'tip',
-        required_targets: ['target 1'],
-        steps: [{message: 'Message 1', target: 'target 1', title: '1. Title 1'}],
-        seen: false,
-      },
     };
     GuideStore.onRegisterAnchor(anchor1);
     GuideStore.onRegisterAnchor(anchor2);
-    MockApiClient.addMockResponse({
-      url: '/projects/org/proj/stats/',
-      body: [[1, 500], [2, 300], [3, 500]],
-    });
-    MockApiClient.addMockResponse({
-      url: '/projects/org/proj/rules/',
-      body: [],
-    });
   });
 
   afterEach(function() {});
 
-  it('should move through the steps in the guide', async function() {
+  it('should move through the steps in the guide', function() {
     GuideStore.onFetchSucceeded(data);
-    await tick();
-    let guide = GuideStore.state.currentGuide;
+    const guide = GuideStore.state.currentGuide;
     // Should pick the first non-seen guide in alphabetic order.
     expect(guide.id).toEqual(2);
     expect(guide.steps).toHaveLength(2);
     GuideStore.onNextStep();
     expect(GuideStore.state.currentStep).toEqual(1);
     GuideStore.onCloseGuide();
-    await tick();
-    guide = GuideStore.state.currentGuide;
-    // We don't have the alert reminder guide's data yet, so we can't show it.
-    expect(guide).toEqual(null);
+    expect(GuideStore.state.currentGuide).toEqual(null);
   });
 
-  it('should force show a guide', async function() {
+  it('should force show a guide', function() {
     GuideStore.onFetchSucceeded(data);
-    await tick();
     window.location.hash = '#assistant';
     GuideStore.onURLChange();
-    await tick();
     expect(GuideStore.state.currentGuide.id).toEqual(1);
     // Should prune steps that don't have anchors.
     expect(GuideStore.state.currentGuide.steps).toHaveLength(2);
     GuideStore.onCloseGuide();
-    await tick();
     expect(GuideStore.state.currentGuide.id).toEqual(2);
     window.location.hash = '';
   });
 
-  it('should render tip', async function() {
-    GuideStore.onFetchSucceeded({
-      ...data,
-      Guide2: {
-        ...data.Guide2,
-        seen: true,
-      },
-    });
-    expect(GuideStore.state.currentGuide).toEqual(null);
-    const spy = jest.spyOn(GuideStore, 'isDefaultAlert').mockImplementation(() => true);
-    GuideStore.onSetActiveOrganization({id: 1, slug: 'org'});
-    GuideStore.onSetActiveProject({id: 1, slug: 'proj'});
-    await tick();
-    expect(GuideStore.state.currentGuide.id).toEqual(3);
-    spy.mockRestore();
-  });
-
-  it('should record analytics events when guide is cued', async function() {
+  it('should record analytics events when guide is cued', function() {
     const spy = jest.spyOn(GuideStore, 'recordCue');
-
     GuideStore.onFetchSucceeded(data);
-    await tick();
-    expect(spy).toHaveBeenCalledWith(data.Guide2.id, data.Guide2.cue);
+    expect(spy).toHaveBeenCalledWith(data.Guide2.id);
     expect(spy).toHaveBeenCalledTimes(1);
     spy.mockRestore();
   });
 
-  it('should not send multiple cue analytics events for same guide', async function() {
+  it('should not send multiple cue analytics events for same guide', function() {
     const spy = jest.spyOn(GuideStore, 'recordCue');
-
     GuideStore.onFetchSucceeded(data);
-    await tick();
-    expect(spy).toHaveBeenCalledWith(data.Guide2.id, data.Guide2.cue);
+    expect(spy).toHaveBeenCalledWith(data.Guide2.id);
     expect(spy).toHaveBeenCalledTimes(1);
     GuideStore.updateCurrentGuide();
-    await tick();
     expect(spy).toHaveBeenCalledTimes(1);
     spy.mockRestore();
   });
diff --git a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
index 405c88a048..b536308a8a 100644
--- a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
+++ b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
@@ -1604,19 +1604,28 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                           <InnerReference
                             setReferenceNode={[Function]}
                           >
-                            <Container
+                            <span
                               aria-describedby="hovercard-123456"
-                              innerRef={[Function]}
                               onMouseEnter={[Function]}
                               onMouseLeave={[Function]}
                             >
-                              <span
-                                aria-describedby="hovercard-123456"
-                                className="css-s35yzd-Container e38w1je1"
-                                onMouseEnter={[Function]}
-                                onMouseLeave={[Function]}
+                              <StyledScoreBar
+                                palette={
+                                  Array [
+                                    "#ec5e44",
+                                    "#f38259",
+                                    "#f9a66d",
+                                    "#98b480",
+                                    "#57be8c",
+                                  ]
+                                }
+                                score={4}
+                                size={40}
+                                thickness={4}
+                                vertical={true}
                               >
-                                <StyledScoreBar
+                                <ScoreBar
+                                  className="css-omtyju-StyledScoreBar eecxaw40"
                                   palette={
                                     Array [
                                       "#ec5e44",
@@ -1631,94 +1640,77 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                   thickness={4}
                                   vertical={true}
                                 >
-                                  <ScoreBar
+                                  <div
                                     className="css-omtyju-StyledScoreBar eecxaw40"
-                                    palette={
-                                      Array [
-                                        "#ec5e44",
-                                        "#f38259",
-                                        "#f9a66d",
-                                        "#98b480",
-                                        "#57be8c",
-                                      ]
-                                    }
-                                    score={4}
-                                    size={40}
-                                    thickness={4}
-                                    vertical={true}
                                   >
-                                    <div
-                                      className="css-omtyju-StyledScoreBar eecxaw40"
+                                    <Bar
+                                      color="#98b480"
+                                      key="0"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
                                     >
-                                      <Bar
+                                      <div
+                                        className="css-1jrlewc-Bar eecxaw41"
                                         color="#98b480"
-                                        key="0"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-1jrlewc-Bar eecxaw41"
-                                          color="#98b480"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                      <Bar
+                                      />
+                                    </Bar>
+                                    <Bar
+                                      color="#98b480"
+                                      key="1"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
+                                    >
+                                      <div
+                                        className="css-1jrlewc-Bar eecxaw41"
                                         color="#98b480"
-                                        key="1"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-1jrlewc-Bar eecxaw41"
-                                          color="#98b480"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                      <Bar
+                                      />
+                                    </Bar>
+                                    <Bar
+                                      color="#98b480"
+                                      key="2"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
+                                    >
+                                      <div
+                                        className="css-1jrlewc-Bar eecxaw41"
                                         color="#98b480"
-                                        key="2"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-1jrlewc-Bar eecxaw41"
-                                          color="#98b480"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                      <Bar
+                                      />
+                                    </Bar>
+                                    <Bar
+                                      color="#98b480"
+                                      key="3"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
+                                    >
+                                      <div
+                                        className="css-1jrlewc-Bar eecxaw41"
                                         color="#98b480"
-                                        key="3"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-1jrlewc-Bar eecxaw41"
-                                          color="#98b480"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                      <Bar
-                                        empty={true}
-                                        key="empty-0"
+                                      />
+                                    </Bar>
+                                    <Bar
+                                      empty={true}
+                                      key="empty-0"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
+                                    >
+                                      <div
+                                        className="css-15vxee-Bar eecxaw41"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-15vxee-Bar eecxaw41"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                    </div>
-                                  </ScoreBar>
-                                </StyledScoreBar>
-                              </span>
-                            </Container>
+                                      />
+                                    </Bar>
+                                  </div>
+                                </ScoreBar>
+                              </StyledScoreBar>
+                            </span>
                           </InnerReference>
                         </Reference>
                       </Manager>
@@ -1738,19 +1730,28 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                           <InnerReference
                             setReferenceNode={[Function]}
                           >
-                            <Container
+                            <span
                               aria-describedby="hovercard-123456"
-                              innerRef={[Function]}
                               onMouseEnter={[Function]}
                               onMouseLeave={[Function]}
                             >
-                              <span
-                                aria-describedby="hovercard-123456"
-                                className="css-s35yzd-Container e38w1je1"
-                                onMouseEnter={[Function]}
-                                onMouseLeave={[Function]}
+                              <StyledScoreBar
+                                palette={
+                                  Array [
+                                    "#ec5e44",
+                                    "#f38259",
+                                    "#f9a66d",
+                                    "#98b480",
+                                    "#57be8c",
+                                  ]
+                                }
+                                score={0}
+                                size={40}
+                                thickness={4}
+                                vertical={true}
                               >
-                                <StyledScoreBar
+                                <ScoreBar
+                                  className="css-omtyju-StyledScoreBar eecxaw40"
                                   palette={
                                     Array [
                                       "#ec5e44",
@@ -1765,90 +1766,73 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                   thickness={4}
                                   vertical={true}
                                 >
-                                  <ScoreBar
+                                  <div
                                     className="css-omtyju-StyledScoreBar eecxaw40"
-                                    palette={
-                                      Array [
-                                        "#ec5e44",
-                                        "#f38259",
-                                        "#f9a66d",
-                                        "#98b480",
-                                        "#57be8c",
-                                      ]
-                                    }
-                                    score={0}
-                                    size={40}
-                                    thickness={4}
-                                    vertical={true}
                                   >
-                                    <div
-                                      className="css-omtyju-StyledScoreBar eecxaw40"
+                                    <Bar
+                                      empty={true}
+                                      key="empty-0"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
                                     >
-                                      <Bar
-                                        empty={true}
-                                        key="empty-0"
+                                      <div
+                                        className="css-15vxee-Bar eecxaw41"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-15vxee-Bar eecxaw41"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                      <Bar
-                                        empty={true}
-                                        key="empty-1"
+                                      />
+                                    </Bar>
+                                    <Bar
+                                      empty={true}
+                                      key="empty-1"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
+                                    >
+                                      <div
+                                        className="css-15vxee-Bar eecxaw41"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-15vxee-Bar eecxaw41"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                      <Bar
-                                        empty={true}
-                                        key="empty-2"
+                                      />
+                                    </Bar>
+                                    <Bar
+                                      empty={true}
+                                      key="empty-2"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
+                                    >
+                                      <div
+                                        className="css-15vxee-Bar eecxaw41"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-15vxee-Bar eecxaw41"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                      <Bar
-                                        empty={true}
-                                        key="empty-3"
+                                      />
+                                    </Bar>
+                                    <Bar
+                                      empty={true}
+                                      key="empty-3"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
+                                    >
+                                      <div
+                                        className="css-15vxee-Bar eecxaw41"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-15vxee-Bar eecxaw41"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                      <Bar
-                                        empty={true}
-                                        key="empty-4"
+                                      />
+                                    </Bar>
+                                    <Bar
+                                      empty={true}
+                                      key="empty-4"
+                                      size={40}
+                                      thickness={4}
+                                      vertical={true}
+                                    >
+                                      <div
+                                        className="css-15vxee-Bar eecxaw41"
                                         size={40}
-                                        thickness={4}
-                                        vertical={true}
-                                      >
-                                        <div
-                                          className="css-15vxee-Bar eecxaw41"
-                                          size={40}
-                                        />
-                                      </Bar>
-                                    </div>
-                                  </ScoreBar>
-                                </StyledScoreBar>
-                              </span>
-                            </Container>
+                                      />
+                                    </Bar>
+                                  </div>
+                                </ScoreBar>
+                              </StyledScoreBar>
+                            </span>
                           </InnerReference>
                         </Reference>
                       </Manager>
diff --git a/tests/sentry/api/endpoints/test_assistant.py b/tests/sentry/api/endpoints/test_assistant.py
index 122aa55f29..1f2ef68c43 100644
--- a/tests/sentry/api/endpoints/test_assistant.py
+++ b/tests/sentry/api/endpoints/test_assistant.py
@@ -40,12 +40,12 @@ class AssistantActivity(APITestCase):
 
         # Dismiss the guide and make sure it is not returned again.
         resp = self.client.put(self.path, {
-            'guide_id': 2,
+            'guide_id': 3,
             'status': 'dismissed',
         })
         assert resp.status_code == 201
         resp = self.client.get(self.path)
-        guides_with_seen['releases']['seen'] = True
+        guides_with_seen['issue_stream']['seen'] = True
         assert resp.status_code == 200
         assert resp.data == guides_with_seen
 
