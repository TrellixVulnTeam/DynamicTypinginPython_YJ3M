commit 614691c273512bd709a37071ed93bf95d1888bc7
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jun 25 18:52:03 2015 -0700

    Bypass logging and use internal client directly

diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index 1e6db55da9..1ae63a5b78 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -2,7 +2,6 @@ from __future__ import absolute_import
 
 __all__ = ['DocSection', 'Endpoint', 'StatsMixin']
 
-import logging
 import time
 
 from datetime import datetime, timedelta
@@ -17,7 +16,7 @@ from rest_framework.renderers import JSONRenderer
 from rest_framework.response import Response
 from rest_framework.views import APIView
 
-from sentry.app import tsdb
+from sentry.app import raven, tsdb
 from sentry.models import ApiKey, AuditLogEntry
 from sentry.utils.cursors import Cursor
 from sentry.utils.http import is_valid_origin
@@ -81,10 +80,11 @@ class Endpoint(APIView):
         try:
             return super(Endpoint, self).handle_exception(exc)
         except Exception as exc:
-            logging.error(unicode(exc), extra={'request': request}, exc_info=True)
-            context = {'detail': 'Internal Error'}
-            if hasattr(request, 'sentry'):
-                context['errorId'] = request.sentry['id']
+            event_id = raven.get_ident(raven.captureException(request=request))
+            context = {
+                'detail': 'Internal Error',
+                'errorId': event_id,
+            }
             return Response(context, status=500)
 
     def create_audit_entry(self, request, **kwargs):
diff --git a/src/sentry/app.py b/src/sentry/app.py
index 32268c104f..d96204371d 100644
--- a/src/sentry/app.py
+++ b/src/sentry/app.py
@@ -10,6 +10,7 @@ from __future__ import absolute_import
 from django.conf import settings
 from sentry.utils.imports import import_string
 from threading import local
+from raven.contrib.django.models import client
 
 
 class State(local):
@@ -34,3 +35,4 @@ ratelimiter = get_instance(
     settings.SENTRY_RATELIMITER, settings.SENTRY_RATELIMITER_OPTIONS)
 search = get_instance(settings.SENTRY_SEARCH, settings.SENTRY_SEARCH_OPTIONS)
 tsdb = get_instance(settings.SENTRY_TSDB, settings.SENTRY_TSDB_OPTIONS)
+raven = client
