commit b0af579baba7954360db0e587f59577267cd8fd7
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Apr 20 01:14:35 2017 +0200

    Killed Distribution.get_or_create

diff --git a/src/sentry/api/endpoints/organization_release_file_details.py b/src/sentry/api/endpoints/organization_release_file_details.py
index 2d97a97a31..139d24bc33 100644
--- a/src/sentry/api/endpoints/organization_release_file_details.py
+++ b/src/sentry/api/endpoints/organization_release_file_details.py
@@ -121,7 +121,7 @@ class OrganizationReleaseFileDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         dist_name = request.DATA.get('dist')
         dist = None
         if dist_name:
-            dist = Distribution.get_or_create(release, dist_name)
+            dist = release.add_dist(dist_name)
 
         try:
             releasefile = ReleaseFile.objects.get(
diff --git a/src/sentry/api/endpoints/organization_release_files.py b/src/sentry/api/endpoints/organization_release_files.py
index 6d93ae55ec..a93e699d2c 100644
--- a/src/sentry/api/endpoints/organization_release_files.py
+++ b/src/sentry/api/endpoints/organization_release_files.py
@@ -11,7 +11,7 @@ from sentry.api.content_negotiation import ConditionalContentNegotiation
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
-from sentry.models import File, Release, ReleaseFile, Distribution
+from sentry.models import File, Release, ReleaseFile
 
 ERR_FILE_EXISTS = 'A file matching this name already exists for the given release'
 _filename_re = re.compile(r"[\n\t\r\f\v\\]")
@@ -111,7 +111,7 @@ class OrganizationReleaseFilesEndpoint(OrganizationReleasesBaseEndpoint):
         dist_name = request.DATA.get('dist')
         dist = None
         if dist_name:
-            dist = Distribution.get_or_create(release, dist_name)
+            dist = release.add_dist(dist_name)
 
         headers = {
             'Content-Type': fileobj.content_type,
diff --git a/src/sentry/api/endpoints/project_release_file_details.py b/src/sentry/api/endpoints/project_release_file_details.py
index 24eb4c7906..48db68e857 100644
--- a/src/sentry/api/endpoints/project_release_file_details.py
+++ b/src/sentry/api/endpoints/project_release_file_details.py
@@ -175,7 +175,7 @@ class ProjectReleaseFileDetailsEndpoint(ProjectEndpoint):
         dist_name = request.DATA.get('dist')
         dist = None
         if dist_name:
-            dist = Distribution.get_or_create(release, dist_name)
+            dist = release.add_dist(dist_name)
 
         try:
             releasefile = ReleaseFile.objects.get(
diff --git a/src/sentry/api/endpoints/project_release_files.py b/src/sentry/api/endpoints/project_release_files.py
index cd9168cd31..8a08459bbf 100644
--- a/src/sentry/api/endpoints/project_release_files.py
+++ b/src/sentry/api/endpoints/project_release_files.py
@@ -11,7 +11,7 @@ from sentry.api.content_negotiation import ConditionalContentNegotiation
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
-from sentry.models import File, Release, ReleaseFile, Distribution
+from sentry.models import File, Release, ReleaseFile
 from sentry.utils.apidocs import scenario, attach_scenarios
 
 ERR_FILE_EXISTS = 'A file matching this name already exists for the given release'
@@ -147,7 +147,7 @@ class ProjectReleaseFilesEndpoint(ProjectEndpoint):
         dist_name = request.DATA.get('dist')
         dist = None
         if dist_name:
-            dist = Distribution.get_or_create(release, dist_name)
+            dist = release.add_dist(dist_name)
 
         headers = {
             'Content-Type': fileobj.content_type,
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 6aeb1eba40..8a7880fcf1 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -30,7 +30,7 @@ from sentry.constants import (
 from sentry.interfaces.base import get_interface
 from sentry.models import (
     Activity, Environment, Event, EventMapping, EventUser, Group, GroupHash,
-    GroupRelease, GroupResolution, GroupStatus, Project, Release, Distribution,
+    GroupRelease, GroupResolution, GroupStatus, Project, Release,
     ReleaseEnvironment, ReleaseProject, TagKey, UserReport
 )
 from sentry.plugins import plugins
@@ -474,11 +474,7 @@ class EventManager(object):
             tags['sentry:release'] = release.version
 
         if dist and release:
-            dist = Distribution.get_or_create(
-                release=release,
-                name=dist,
-                date_added=date
-            )
+            release.ensure_distribution(dist, date)
             tags['sentry:dist'] = dist.name
         else:
             dist = None
diff --git a/src/sentry/models/distribution.py b/src/sentry/models/distribution.py
index 07fac93e54..01adb3918d 100644
--- a/src/sentry/models/distribution.py
+++ b/src/sentry/models/distribution.py
@@ -7,7 +7,7 @@ sentry.models.distribution
 """
 from __future__ import absolute_import
 
-from django.db import models, IntegrityError, transaction
+from django.db import models
 from django.utils import timezone
 
 from sentry.db.models import Model, FlexibleForeignKey, sane_repr
@@ -26,20 +26,3 @@ class Distribution(Model):
         unique_together = (('release', 'name'),)
 
     __repr__ = sane_repr('release', 'name')
-
-    @classmethod
-    def get_or_create(cls, release, name, date_added=None):
-        if date_added is None:
-            date_added = timezone.now()
-        try:
-            with transaction.atomic():
-                return cls.objects.create(
-                    release=release,
-                    name=name,
-                    date_added=date_added
-                )
-        except IntegrityError:
-            return cls.objects.get(
-                release=release,
-                name=name
-            )
diff --git a/src/sentry/models/release.py b/src/sentry/models/release.py
index 99891231fc..e1bdf1d5ed 100644
--- a/src/sentry/models/release.py
+++ b/src/sentry/models/release.py
@@ -199,6 +199,23 @@ class Release(Model):
             return self.version[:12]
         return self.version
 
+    def add_dist(self, name, date_added=None):
+        from sentry.models import Distribution
+        if date_added is None:
+            date_added = timezone.now()
+        try:
+            with transaction.atomic():
+                return Distribution.objects.create(
+                    release=self,
+                    name=name,
+                    date_added=date_added
+                )
+        except IntegrityError:
+            return Distribution.objects.get(
+                release=self,
+                name=name
+            )
+
     def add_project(self, project):
         """
         Add a project to this release.
