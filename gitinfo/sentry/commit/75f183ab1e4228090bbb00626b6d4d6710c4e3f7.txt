commit 75f183ab1e4228090bbb00626b6d4d6710c4e3f7
Author: Dan Fuller <dfuller@sentry.io>
Date:   Tue Jul 9 17:29:20 2019 -0700

    fix(api): Fix sms otp validation error when passing a null/blank otp value.
    
    This was caused by the DRF upgrade. No actual bug here, just an error where we should have a
    validation error.
    
    Fixes SENTRY-BGA

diff --git a/src/sentry/models/authenticator.py b/src/sentry/models/authenticator.py
index 22394b0971..537b761029 100644
--- a/src/sentry/models/authenticator.py
+++ b/src/sentry/models/authenticator.py
@@ -379,6 +379,8 @@ class OtpMixin(object):
             cache.set(cache_key, '1', timeout=120)
 
     def validate_otp(self, otp):
+        if not otp:
+            return False
         otp = otp.strip().replace('-', '').replace(' ', '')
         used_counter = self.make_otp().verify(
             otp, return_counter=True, check_counter_func=self.check_otp_counter
diff --git a/tests/sentry/api/endpoints/test_user_authenticator_enroll.py b/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
index 269cb6512e..85dcf91347 100644
--- a/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
+++ b/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
@@ -115,6 +115,27 @@ class UserAuthenticatorEnrollTest(APITestCase):
 
             self._assert_security_email_sent('mfa-added', email_log)
 
+    def test_sms_invalid_otp(self):
+        new_options = settings.SENTRY_OPTIONS.copy()
+        new_options['sms.twilio-account'] = 'twilio-account'
+
+        with self.settings(SENTRY_OPTIONS=new_options):
+            url = reverse(
+                'sentry-api-0-user-authenticator-enroll', kwargs={'user_id': 'me', 'interface_id': 'sms'}
+            )
+            resp = self.client.post(url, data={
+                "secret": "secret12",
+                "phone": "1231234",
+                "otp": None,
+            })
+            assert resp.status_code == 400
+            resp = self.client.post(url, data={
+                "secret": "secret12",
+                "phone": "1231234",
+                "otp": "",
+            })
+            assert resp.status_code == 400
+
     @mock.patch('sentry.utils.email.logger')
     @mock.patch('sentry.models.U2fInterface.try_enroll', return_value=True)
     def test_u2f_can_enroll(self, try_enroll, email_log):
