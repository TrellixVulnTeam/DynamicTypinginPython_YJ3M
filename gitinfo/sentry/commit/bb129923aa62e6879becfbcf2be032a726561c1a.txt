commit bb129923aa62e6879becfbcf2be032a726561c1a
Author: William Mak <william@wmak.io>
Date:   Thu Feb 20 16:07:09 2020 -0500

    ref: Switching to encodeURIComponent

diff --git a/src/sentry/static/sentry/app/views/discover/result/utils.tsx b/src/sentry/static/sentry/app/views/discover/result/utils.tsx
index ba74222ca1..efb3ccdc94 100644
--- a/src/sentry/static/sentry/app/views/discover/result/utils.tsx
+++ b/src/sentry/static/sentry/app/views/discover/result/utils.tsx
@@ -367,10 +367,7 @@ export function downloadAsCsv(result: SnubaResult) {
   });
 
   // Need to also manually replace # since encodeURI skips them
-  const encodedDataUrl = encodeURI(`data:text/csv;charset=utf8,${csvContent}`).replace(
-    /#/g,
-    '%23'
-  );
+  const encodedDataUrl = `data:text/csv;charset=utf8,${encodeURIComponent(csvContent)}`;
 
   window.location.assign(encodedDataUrl);
 }
diff --git a/src/sentry/static/sentry/app/views/eventsV2/utils.tsx b/src/sentry/static/sentry/app/views/eventsV2/utils.tsx
index 29a8af5437..c1b8afa27b 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/utils.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/utils.tsx
@@ -336,10 +336,7 @@ export function downloadAsCsv(tableData, columnOrder, filename) {
   });
 
   // Need to also manually replace # since encodeURI skips them
-  const encodedDataUrl = encodeURI(`data:text/csv;charset=utf8,${csvContent}`).replace(
-    /#/g,
-    '%23'
-  );
+  const encodedDataUrl = `data:text/csv;charset=utf8,${encodeURIComponent(csvContent)}`;
 
   // Create a download link then click it, this is so we can get a filename
   const link = document.createElement('a');
diff --git a/tests/js/spec/views/discover/result/utils.spec.jsx b/tests/js/spec/views/discover/result/utils.spec.jsx
index bff1ef60e5..d3e34ae61c 100644
--- a/tests/js/spec/views/discover/result/utils.spec.jsx
+++ b/tests/js/spec/views/discover/result/utils.spec.jsx
@@ -432,7 +432,7 @@ describe('Utils', function() {
       downloadAsCsv(result);
       expect(locationSpy).toHaveBeenCalledWith(
         expect.stringContaining(
-          encodeURI('message,environment\r\ntest 1,prod\r\ntest 2,test')
+          encodeURIComponent('message,environment\r\ntest 1,prod\r\ntest 2,test')
         )
       );
     });
@@ -449,12 +449,12 @@ describe('Utils', function() {
     it('quotes unsafe strings', function() {
       const result = {
         meta: [{name: 'message'}],
-        data: [{message: '=HYPERLINK(http://some-bad-website)'}],
+        data: [{message: '=HYPERLINK(http://some-bad-website#)'}],
       };
       downloadAsCsv(result);
       expect(locationSpy).toHaveBeenCalledWith(
         expect.stringContaining(
-          encodeURI("message\r\n'=HYPERLINK(http://some-bad-website)")
+          encodeURIComponent("message\r\n'=HYPERLINK(http://some-bad-website#)")
         )
       );
     });
