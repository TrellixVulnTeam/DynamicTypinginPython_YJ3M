commit bf7587ea6d7986a9b6529cb58de7780ca31c3056
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Jul 11 15:58:28 2018 -0700

    feat(api): Add organization environments endpoint

diff --git a/src/sentry/api/endpoints/organization_environments.py b/src/sentry/api/endpoints/organization_environments.py
new file mode 100644
index 0000000000..551aeae6a2
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_environments.py
@@ -0,0 +1,23 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.bases import OrganizationEndpoint
+from sentry.api.serializers import serialize
+from sentry.models import Environment
+
+
+class OrganizationEnvironmentsEndpoint(OrganizationEndpoint):
+    def get(self, request, organization):
+        queryset = Environment.objects.filter(
+            organization_id=organization.id,
+        ).exclude(
+            # HACK(mattrobenolt): We don't want to surface the
+            # "No Environment" environment to the UI since it
+            # doesn't really exist. This might very likely change
+            # with new tagstore backend in the future, but until
+            # then, we're hiding it since it causes more problems
+            # than it's worth.
+            name='',
+        ).order_by('name')
+        return Response(serialize(list(queryset), request.user))
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 1beab8eb89..78efad2d1c 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -58,6 +58,7 @@ from .endpoints.organization_avatar import OrganizationAvatarEndpoint
 from .endpoints.organization_details import OrganizationDetailsEndpoint
 from .endpoints.organization_discover import OrganizationDiscoverEndpoint
 from .endpoints.organization_shortid import ShortIdLookupEndpoint
+from .endpoints.organization_environments import OrganizationEnvironmentsEndpoint
 from .endpoints.organization_eventid import EventIdLookupEndpoint
 from .endpoints.organization_slugs import SlugsUpdateEndpoint
 from .endpoints.organization_issues_new import OrganizationIssuesNewEndpoint
@@ -564,6 +565,11 @@ urlpatterns = patterns(
         OrganizationOnboardingTaskEndpoint.as_view(),
         name='sentry-api-0-organization-onboardingtasks'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/environments/$',
+        OrganizationEnvironmentsEndpoint.as_view(),
+        name='sentry-api-0-organization-environments',
+    ),
 
     # Teams
     url(
diff --git a/tests/sentry/api/endpoints/test_organization_environments.py b/tests/sentry/api/endpoints/test_organization_environments.py
new file mode 100644
index 0000000000..6643f6cad6
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_organization_environments.py
@@ -0,0 +1,31 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import Environment
+from sentry.testutils import APITestCase
+
+
+class OrganizationEnvironmentsTest(APITestCase):
+    def test_simple(self):
+        project = self.create_project()
+
+        for name in 'production', 'staging':
+            Environment.objects.create(
+                organization_id=project.organization_id,
+                name=name,
+            )
+
+        self.login_as(user=self.user)
+
+        url = reverse(
+            'sentry-api-0-organization-environments',
+            kwargs={
+                'organization_slug': project.organization.slug,
+            }
+        )
+        response = self.client.get(url, format='json')
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 2
+        assert response.data[0]['name'] == 'production'
+        assert response.data[1]['name'] == 'staging'
