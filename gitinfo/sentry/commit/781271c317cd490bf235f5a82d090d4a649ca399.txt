commit 781271c317cd490bf235f5a82d090d4a649ca399
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Jun 7 15:48:05 2016 -0700

    Validate event_id value (#3433)

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index a33926c4ff..1ab9265c2a 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -12,6 +12,7 @@ from __future__ import absolute_import, print_function
 
 import base64
 import logging
+import re
 import six
 import uuid
 import zlib
@@ -39,6 +40,7 @@ from sentry.utils.strings import decompress
 from sentry.utils.validators import is_float
 
 LOG_LEVEL_REVERSE_MAP = dict((v, k) for k, v in LOG_LEVELS.iteritems())
+EVENT_ID_RE = re.compile(r'^[a-fA-F0-9]{32}$')
 
 
 class APIError(Exception):
@@ -373,6 +375,16 @@ class ClientApiHelper(object):
                 'value': data['event_id'],
             })
             data['event_id'] = uuid.uuid4().hex
+        elif not EVENT_ID_RE.match(data['event_id']):
+            self.log.info(
+                'Discarded invalid value for event_id: %r',
+                data['event_id'], exc_info=True)
+            data['errors'].append({
+                'type': EventError.INVALID_DATA,
+                'name': 'event_id',
+                'value': data['event_id'],
+            })
+            data['event_id'] = uuid.uuid4().hex
 
         if 'timestamp' in data:
             try:
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index 882c6f36c4..4916a0744a 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -194,6 +194,15 @@ class ValidateDataTest(BaseAPITest):
         assert data['errors'][0]['name'] == 'event_id'
         assert data['errors'][0]['value'] == 'a' * 33
 
+        data = self.helper.validate_data(self.project, {
+            'event_id': 'xyz',
+        })
+        assert data['event_id'] == '031667ea1758441f92c7995a428d2d14'
+        assert len(data['errors']) == 1
+        assert data['errors'][0]['type'] == 'invalid_data'
+        assert data['errors'][0]['name'] == 'event_id'
+        assert data['errors'][0]['value'] == 'xyz'
+
     def test_invalid_event_id_raises(self):
         self.assertRaises(APIError, self.helper.validate_data, self.project, {
             'event_id': 1
