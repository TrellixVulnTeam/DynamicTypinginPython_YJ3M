commit 77ca7a1ca078b46a5614ef1ca3d6fa64e0a71bdb
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Fri Oct 19 11:17:49 2018 -0700

    feat(app-platform): Add sentry app install details endpoint  (#10155)
    
    * feat(app-platform): Add sentry app install details endpoint

diff --git a/src/sentry/api/endpoints/organization_sentry_app_installation_details.py b/src/sentry/api/endpoints/organization_sentry_app_installation_details.py
new file mode 100644
index 0000000000..2b0ef6101f
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_sentry_app_installation_details.py
@@ -0,0 +1,36 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.bases import OrganizationEndpoint
+from sentry.api.serializers import serialize
+from sentry.features.helpers import requires_feature
+from sentry.mediators.sentry_app_installations import Destroyer
+from sentry.models import SentryAppInstallation
+
+
+class OrganizationSentryAppInstallationDetailsEndpoint(OrganizationEndpoint):
+    @requires_feature('organizations:internal-catchall')
+    def get(self, request, organization, uuid):
+        try:
+            install = SentryAppInstallation.objects.get(
+                organization=organization,
+                uuid=uuid,
+            )
+        except SentryAppInstallation.DoesNotExist:
+            return Response(status=404)
+
+        return Response(serialize(install))
+
+    @requires_feature('organizations:internal-catchall')
+    def delete(self, request, organization, uuid):
+        try:
+            install = SentryAppInstallation.objects.get(
+                organization=organization,
+                uuid=uuid,
+            )
+        except SentryAppInstallation.DoesNotExist:
+            return Response(status=404)
+
+        Destroyer.run(install=install)
+        return Response(status=204)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index cca0c16da2..efbef7bd50 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -93,6 +93,7 @@ from .endpoints.organization_config_repositories import OrganizationConfigReposi
 from .endpoints.organization_repository_commits import OrganizationRepositoryCommitsEndpoint
 from .endpoints.organization_repository_details import OrganizationRepositoryDetailsEndpoint
 from .endpoints.organization_sentry_app_installations import OrganizationSentryAppInstallationsEndpoint
+from .endpoints.organization_sentry_app_installation_details import OrganizationSentryAppInstallationDetailsEndpoint
 from .endpoints.organization_stats import OrganizationStatsEndpoint
 from .endpoints.organization_teams import OrganizationTeamsEndpoint
 from .endpoints.organization_user_issues import OrganizationUserIssuesEndpoint
@@ -612,6 +613,11 @@ urlpatterns = patterns(
         OrganizationSentryAppInstallationsEndpoint.as_view(),
         name='sentry-api-0-organization-sentry-app-installations'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/sentry-app-installations/(?P<uuid>[^\/]+)/$',
+        OrganizationSentryAppInstallationDetailsEndpoint.as_view(),
+        name='sentry-api-0-organization-sentry-app-installations-details'
+    ),
     url(
         r'^organizations/(?P<organization_slug>[^\/]+)/stats/$',
         OrganizationStatsEndpoint.as_view(),
diff --git a/tests/sentry/api/endpoints/test_organization_sentry_app_installation_details.py b/tests/sentry/api/endpoints/test_organization_sentry_app_installation_details.py
new file mode 100644
index 0000000000..087b7facc7
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_organization_sentry_app_installation_details.py
@@ -0,0 +1,104 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.constants import SentryAppStatus
+from sentry.testutils import APITestCase
+from sentry.testutils.helpers import with_feature
+from sentry.mediators.sentry_apps import Creator as SentryAppCreator
+from sentry.mediators.sentry_app_installations import Creator
+
+
+class OrganizationSentryAppInstallationDetailsTest(APITestCase):
+    def setUp(self):
+        self.superuser = self.create_user(email='a@example.com', is_superuser=True)
+        self.user = self.create_user(email='boop@example.com')
+        self.org = self.create_organization(owner=self.user)
+        self.super_org = self.create_organization(owner=self.superuser)
+        self.published_app = SentryAppCreator.run(
+            name='Test',
+            organization=self.super_org,
+            scopes=(),
+            webhook_url='https://example.com',
+        )
+        self.published_app.update(status=SentryAppStatus.PUBLISHED)
+        self.installation, _ = Creator.run(
+            slug=self.published_app.slug,
+            organization=self.super_org,
+        )
+        self.unpublished_app = SentryAppCreator.run(
+            name='Testin',
+            organization=self.org,
+            scopes=(),
+            webhook_url='https://example.com',
+        )
+        self.installation2, _ = Creator.run(
+            slug=self.unpublished_app.slug,
+            organization=self.org,
+        )
+        self.url = reverse(
+            'sentry-api-0-organization-sentry-app-installations-details',
+            args=[
+                self.org.slug,
+                self.installation2.uuid,
+            ])
+
+
+class GetOrganizationSentryAppInstallationDetailsTest(OrganizationSentryAppInstallationDetailsTest):
+    @with_feature('organizations:internal-catchall')
+    def test_access_within_installs_organization(self):
+        self.login_as(user=self.user)
+        response = self.client.get(self.url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert response.data == {
+            'app': self.unpublished_app.slug,
+            'organization': self.org.slug,
+            'uuid': self.installation2.uuid,
+        }
+
+    @with_feature('organizations:internal-catchall')
+    def test_no_access_outside_install_organization(self):
+        self.login_as(user=self.user)
+        url = reverse(
+            'sentry-api-0-organization-sentry-app-installations-details',
+            args=[self.org.slug, self.installation.uuid],
+        )
+        response = self.client.get(url, format='json')
+        assert response.status_code == 404
+
+        url = reverse(
+            'sentry-api-0-organization-sentry-app-installations-details',
+            args=[self.super_org.slug, self.installation2.uuid],
+        )
+        response = self.client.get(url, format='json')
+        assert response.status_code == 403
+
+    def test_no_access_without_internal_catchall(self):
+        self.login_as(user=self.user)
+
+        response = self.client.get(self.url, format='json')
+        assert response.status_code == 404
+
+
+class DeleteOrganizationSentryAppInstallationDetailsTest(
+        OrganizationSentryAppInstallationDetailsTest):
+    @with_feature('organizations:internal-catchall')
+    def test_delete_install(self):
+        self.login_as(user=self.user)
+        response = self.client.delete(self.url, format='json')
+
+        assert response.status_code == 204
+
+    @with_feature('organizations:internal-catchall')
+    def test_member_cannot_delete_install(self):
+        user = self.create_user('bar@example.com')
+        self.create_member(
+            organization=self.org,
+            user=user,
+            role='member',
+        )
+        self.login_as(user)
+        response = self.client.delete(self.url, format='json')
+
+        assert response.status_code == 403
