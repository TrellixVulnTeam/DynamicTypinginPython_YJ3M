commit fdcf61e801d36f2b565d1ae311c8f223593566e8
Author: David Cramer <dcramer@gmail.com>
Date:   Sun May 10 20:51:44 2015 -0700

    Initial (shitty) releases view

diff --git a/src/sentry/static/sentry/app/components/projectHeader.jsx b/src/sentry/static/sentry/app/components/projectHeader.jsx
index d10330223a..50ca809920 100644
--- a/src/sentry/static/sentry/app/components/projectHeader.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader.jsx
@@ -39,6 +39,11 @@ var ProjectHeader = React.createClass({
                   Stream
                 </Router.Link>
               </li>
+              <li className={navSection == 'releases' ? 'active': ''}>
+                <Router.Link to="projectReleases" params={routeParams}>
+                  Releases
+                </Router.Link>
+              </li>
               <li className={navSection == 'settings' ? 'active': ''}>
                 <a href={urlPrefix + '/' + routeParams.orgId + '/' + routeParams.projectId + '/settings/'}>
                   Settings
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index cc71be244d..9f3553c541 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -16,6 +16,7 @@ var GroupEventDetails = require("./views/groupEventDetails");
 var OrganizationDetails = require("./views/organizationDetails");
 var OrganizationTeams = require("./views/organizationTeams");
 var ProjectDetails = require("./views/projectDetails");
+var ProjectReleases = require("./views/projectReleases");
 var PropTypes = require("./proptypes");
 var Stream = require("./views/stream");
 var TeamDashboard = require("./views/teamDashboard");
@@ -30,6 +31,7 @@ var routes = (
       </Route>
       <Route name="projectDetails" path=":projectId/" handler={ProjectDetails}>
         <DefaultRoute name="stream" handler={Stream} />
+        <Route name="projectReleases" path="releases/" handler={ProjectReleases} />
         <Route name="groupDetails" path="group/:groupId/" handler={GroupDetails}
                ignoreScrollBehavior>
           <DefaultRoute name="groupOverview" handler={GroupOverview} />
diff --git a/src/sentry/static/sentry/app/views/projectReleases.jsx b/src/sentry/static/sentry/app/views/projectReleases.jsx
new file mode 100644
index 0000000000..4be938f90a
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectReleases.jsx
@@ -0,0 +1,128 @@
+/*** @jsx React.DOM */
+var React = require("react");
+var Reflux = require("reflux");
+var $ = require("jquery");
+
+var api = require("../api");
+var GroupActions = require("../actions/groupActions");
+var GroupListStore = require("../stores/groupStore");
+var LoadingError = require("../components/loadingError");
+var LoadingIndicator = require("../components/loadingIndicator");
+var Pagination = require("../components/pagination");
+var RouteMixin = require("../mixins/routeMixin");
+var Sticky = require('react-sticky');
+var StreamGroup = require('./stream/group');
+var StreamActions = require('./stream/actions');
+var StreamFilters = require('./stream/filters');
+var utils = require("../utils");
+
+var ProjectReleases = React.createClass({
+  mixins: [
+    RouteMixin
+  ],
+
+  contextTypes: {
+    router: React.PropTypes.func
+  },
+
+  propTypes: {
+    setProjectNavSection: React.PropTypes.func.isRequired
+  },
+
+  getInitialState() {
+    return {
+      releaseList: [],
+      loading: true,
+      error: false
+    };
+  },
+
+  componentWillMount() {
+    this.props.setProjectNavSection('releases');
+    this.fetchData();
+  },
+
+  routeDidChange() {
+    this.fetchData();
+  },
+
+  fetchData() {
+    this.setState({
+      loading: true,
+      error: false
+    });
+
+    api.request(this.getProjectReleasesEndpoint(), {
+      success: (data, _, jqXHR) => {
+        this.setState({
+          error: false,
+          loading: false,
+          releaseList: data,
+          pageLinks: jqXHR.getResponseHeader('Link')
+        });
+      },
+      error: () => {
+        this.setState({
+          error: true,
+          loading: false
+        });
+      }
+    });
+  },
+
+  getProjectReleasesEndpoint() {
+    var router = this.context.router;
+    var params = router.getCurrentParams();
+    var queryParams = router.getCurrentQuery();
+    queryParams.limit = 50;
+    var querystring = $.param(queryParams);
+
+    return '/projects/' + params.orgId + '/' + params.projectId + '/releases/?' + querystring;
+  },
+
+  onPage(cursor) {
+    var router = this.context.router;
+    var params = router.getCurrentParams();
+    var queryParams = router.getCurrentQuery();
+    queryParams.cursor = cursor;
+
+    this.transitionTo('projectReleases', params, queryParams);
+  },
+
+  render() {
+    var router = this.context.router;
+    var params = router.getCurrentParams();
+
+    return (
+      <div>
+        {this.state.loading ?
+          <LoadingIndicator />
+        : (this.state.error ?
+          <LoadingError onRetry={this.fetchData} />
+        :
+          <table className="release-list">
+            <thead>
+              <tr>
+                <th>Version</th>
+                <th>Date</th>
+              </tr>
+            </thead>
+            <tbody>
+              {this.state.releaseList.map((release) => {
+                return (
+                  <tr>
+                    <td>{release.version}</td>
+                    <td>{release.dateReleased || <span>&mdash;</span>}</td>
+                  </tr>
+                );
+              })}
+            </tbody>
+          </table>
+        )}
+        <Pagination pageLinks={this.state.pageLinks} onPage={this.onPage} />
+      </div>
+    );
+  }
+});
+
+module.exports = ProjectReleases;
diff --git a/src/sentry/static/sentry/less/layout.less b/src/sentry/static/sentry/less/layout.less
index d60402b7b6..b69105d556 100644
--- a/src/sentry/static/sentry/less/layout.less
+++ b/src/sentry/static/sentry/less/layout.less
@@ -126,6 +126,7 @@ header {
     white-space: nowrap;
     margin-right: 140px;
     position: relative;
+    z-index: 1;
 
     .clearfix;
 
@@ -244,6 +245,7 @@ header {
 
   .nav-tabs {
     margin-top: -2px;
+    z-index: 2;
     li {
       margin: 0 0 0 20px;
 
diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index 5bc5976c4f..08ca9b0681 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -15,6 +15,9 @@
     <li>
       <a href="{% url 'sentry-stream' project.organization.slug project.slug %}">Stream</a>
     </li>
+    <li>
+      <a href="{% url 'sentry-releases' project.organization.slug project.slug %}">Releases</a>
+    </li>
     <li class="active">
       <a href="{% url 'sentry-manage-project' project.organization.slug project.slug %}">Settings</a>
     </li>
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 7a0f7544a5..ac782b7f58 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -396,6 +396,8 @@ urlpatterns += patterns('',
         name='sentry-alert-details'),
     url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/alerts/(?P<alert_id>\d+)/resolve/$', alerts.resolve_alert,
         name='sentry-resolve-alert'),
+    url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/releases/$', ReactPageView.as_view(),
+        name='sentry-releases'),
     url(r'^(?P<organization_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/$', ReactPageView.as_view(),
         name='sentry-stream'),
 
