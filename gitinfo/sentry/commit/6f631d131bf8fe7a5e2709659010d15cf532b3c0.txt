commit 6f631d131bf8fe7a5e2709659010d15cf532b3c0
Author: David Cramer <dcramer@gmail.com>
Date:   Thu May 10 16:46:06 2012 -0500

    Tests for process_buffer and store tasks

diff --git a/sentry/tasks/process_buffer.py b/sentry/tasks/process_buffer.py
index 5c7628ecc7..844dd108ea 100644
--- a/sentry/tasks/process_buffer.py
+++ b/sentry/tasks/process_buffer.py
@@ -14,6 +14,6 @@ def process_incr(**kwargs):
     """
     Processes a buffer event.
     """
-    from sentry.app import buffer
+    from sentry import app
 
-    buffer.process(**kwargs)
+    app.buffer.process(**kwargs)
diff --git a/tests/sentry/tasks/process_buffer/__init__.py b/tests/sentry/tasks/process_buffer/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/tasks/process_buffer/tests.py b/tests/sentry/tasks/process_buffer/tests.py
new file mode 100644
index 0000000000..b13356721d
--- /dev/null
+++ b/tests/sentry/tasks/process_buffer/tests.py
@@ -0,0 +1,22 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+import mock
+
+from celery.task import Task
+from sentry.tasks.process_buffer import process_incr
+from tests.base import TestCase
+
+
+class ProcessIncrTest(TestCase):
+    def test_is_task(self):
+        self.assertTrue(isinstance(process_incr, Task))
+
+    @mock.patch('sentry.app.buffer.process')
+    def test_calls_process(self, process):
+        model = mock.Mock()
+        columns = {'times_seen': 1}
+        filters = {'pk': 1}
+        process_incr(model=model, columns=columns, filters=filters)
+        process.assert_called_once_with(model=model, columns=columns, filters=filters)
diff --git a/tests/sentry/tasks/store/__init__.py b/tests/sentry/tasks/store/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/tasks/store/tests.py b/tests/sentry/tasks/store/tests.py
new file mode 100644
index 0000000000..6665fe458e
--- /dev/null
+++ b/tests/sentry/tasks/store/tests.py
@@ -0,0 +1,20 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+import mock
+
+from celery.task import Task
+from sentry.tasks.store import store_event
+from tests.base import TestCase
+
+
+class StoreEventTest(TestCase):
+    def test_is_task(self):
+        self.assertTrue(isinstance(store_event, Task))
+
+    @mock.patch('sentry.models.Group.objects.from_kwargs')
+    def test_calls_from_kwargs(self, from_kwargs):
+        data = {'foo': 'bar'}
+        store_event(data=data)
+        from_kwargs.assert_called_once_with(foo='bar')
