commit d1483ce5b5a961f36e672437a05014747ef58483
Author: David Cramer <dcramer@gmail.com>
Date:   Fri May 29 12:15:15 2015 +0200

    Hide create org when disabled

diff --git a/src/sentry/static/sentry/app/components/organizationSidebar.jsx b/src/sentry/static/sentry/app/components/organizationSidebar.jsx
index 29af6885f1..15ebf662aa 100644
--- a/src/sentry/static/sentry/app/components/organizationSidebar.jsx
+++ b/src/sentry/static/sentry/app/components/organizationSidebar.jsx
@@ -24,6 +24,8 @@ var OrganizationSelector = React.createClass({
 
   render() {
     var activeOrg = this.getOrganization();
+    var urlPrefix = ConfigStore.get('urlPrefix');
+    var features = ConfigStore.get('features');
 
     return (
       <DropdownLink
@@ -37,26 +39,22 @@ var OrganizationSelector = React.createClass({
           };
           return (
             <MenuItem key={org.slug} to="organizationDetails" params={{orgId: org.slug}} iconUrl="http://github.com/getsentry.png">
-              <span className="org-avatar" style={iconStyle}></span> {org.name}
+              <span className="org-avatar" style={iconStyle} />
+              {org.name}
             </MenuItem>
           );
         })}
-        <div className="divider"></div>
-        <MenuItem>New Organization</MenuItem>
+        {features.has('organizations:create') &&
+          <div>
+            <div className="divider"></div>
+            <MenuItem href={urlPrefix + '/organizations/new/'}>New Organization</MenuItem>
+          </div>
+        }
       </DropdownLink>
     );
   }
 });
 
-function getUserDisplayName(user) {
-  var name = user.name || user.email;
-  var parts = user.email.split(/@/);
-  if (parts.length == 1) {
-    return parts[0];
-  }
-  return parts[0].toLowerCase().replace(/[\.-_]+/, ' ');
-}
-
 var UserNav = React.createClass({
   mixins: [
     PureRenderMixin
diff --git a/src/sentry/static/sentry/app/stores/configStore.jsx b/src/sentry/static/sentry/app/stores/configStore.jsx
index cb58507a02..a8f0c47745 100644
--- a/src/sentry/static/sentry/app/stores/configStore.jsx
+++ b/src/sentry/static/sentry/app/stores/configStore.jsx
@@ -16,6 +16,8 @@ var ConfigStore = Reflux.createStore({
   },
 
   loadInitialData(config) {
+    config.features = new Set(config.features || []);
+
     this.config = config;
   }
 });
diff --git a/src/sentry/templates/sentry/bases/react.html b/src/sentry/templates/sentry/bases/react.html
index bca78a13d2..ddf86cc5cc 100644
--- a/src/sentry/templates/sentry/bases/react.html
+++ b/src/sentry/templates/sentry/bases/react.html
@@ -15,6 +15,7 @@
             latest: '{{ sentry_version.latest }}',
             upgradeAvailable: {% if sentry_version.upgrade_available %}true{% else %}false{% endif %}
           },
+          features: {{ features }},
           mediaUrl: '{% url 'sentry-media' "sentry" '' %}',
         {% if request.user.is_authenticated %}
           isAuthenticated: true,
diff --git a/src/sentry/web/frontend/react_page.py b/src/sentry/web/frontend/react_page.py
index 0d0a89a114..9886315934 100644
--- a/src/sentry/web/frontend/react_page.py
+++ b/src/sentry/web/frontend/react_page.py
@@ -1,7 +1,10 @@
 from __future__ import absolute_import
 
+from sentry import features
 from sentry.web.frontend.base import OrganizationView
+from sentry.utils import json
 from sentry.utils.functional import extract_lazy_object
+from django.utils.safestring import mark_safe
 
 
 # TODO(dcramer): once we implement basic auth hooks in React we can make this
@@ -12,4 +15,14 @@ class ReactPageView(OrganizationView):
             # remove lazy eval
             request.user = extract_lazy_object(request.user)
 
-        return self.respond('sentry/bases/react.html')
+        enabled_features = []
+        if features.has('organizations:create', actor=request.user):
+            enabled_features.append('organizations:create')
+        if features.has('auth:register', actor=request.user):
+            enabled_features.append('auth:register')
+
+        context = {
+            'features': mark_safe(json.dumps(enabled_features)),
+        }
+
+        return self.respond('sentry/bases/react.html', context)
