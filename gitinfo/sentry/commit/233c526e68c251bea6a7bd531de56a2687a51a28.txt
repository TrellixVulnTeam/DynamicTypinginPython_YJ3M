commit 233c526e68c251bea6a7bd531de56a2687a51a28
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Mon Feb 27 22:48:01 2017 +0100

    Use original server.py variables

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 75a5513c8e..fe9f68ff95 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -968,16 +968,13 @@ SENTRY_MAX_EXCEPTIONS = 25
 SENTRY_GRAVATAR_BASE_URL = 'https://secure.gravatar.com'
 
 # Timeout (in seconds) for fetching remote source files (e.g. JS)
-SENTRY_FETCH_TIMEOUT = 5
-SENTRY_SOURCE_FETCH_TIMEOUT = SENTRY_FETCH_TIMEOUT
+SENTRY_SOURCE_FETCH_TIMEOUT = 5
 
 # Timeout (in seconds) for socket operations when fetching remote source files
-SENTRY_FETCH_SOCKET_TIMEOUT = 2
-SENTRY_SOURCE_FETCH_TIMEOUT = SENTRY_FETCH_SOCKET_TIMEOUT
+SENTRY_SOURCE_FETCH_SOCKET_TIMEOUT = 2
 
 # Maximum content length for source files before we abort fetching
-SENTRY_FETCH_MAX_SIZE = 40 * 1024 * 1024
-SENTRY_SOURCE_FETCH_MAX_SIZE = SENTRY_FETCH_MAX_SIZE
+SENTRY_SOURCE_FETCH_MAX_SIZE = 40 * 1024 * 1024
 
 # List of IP subnets which should not be accessible
 SENTRY_DISALLOWED_IPS = ()
diff --git a/src/sentry/http.py b/src/sentry/http.py
index 0324a72d3b..bbbae135c8 100644
--- a/src/sentry/http.py
+++ b/src/sentry/http.py
@@ -236,7 +236,7 @@ def expose_url(url):
 
 def fetch_file(url, domain_lock_enabled=True, outfile=None,
                headers=None, allow_redirects=True, verify_ssl=False,
-               timeout=settings.SENTRY_FETCH_SOCKET_TIMEOUT, **kwargs):
+               timeout=settings.SENTRY_SOURCE_FETCH_SOCKET_TIMEOUT, **kwargs):
     """
     Pull down a URL, returning a UrlResult object.
     """
@@ -273,7 +273,7 @@ def fetch_file(url, domain_lock_enabled=True, outfile=None,
                 cl = int(response.headers['content-length'])
             except (LookupError, ValueError):
                 cl = 0
-            if cl > settings.SENTRY_FETCH_MAX_SIZE:
+            if cl > settings.SENTRY_SOURCE_FETCH_MAX_SIZE:
                 raise OverflowError()
 
             return_body = False
@@ -287,11 +287,11 @@ def fetch_file(url, domain_lock_enabled=True, outfile=None,
             # got a 200 OK
             if response.status_code == 200:
                 for chunk in response.iter_content(16 * 1024):
-                    if time.time() - start > settings.SENTRY_FETCH_TIMEOUT:
+                    if time.time() - start > settings.SENTRY_SOURCE_FETCH_TIMEOUT:
                         raise Timeout()
                     outfile.write(chunk)
                     cl += len(chunk)
-                    if cl > settings.SENTRY_FETCH_MAX_SIZE:
+                    if cl > settings.SENTRY_SOURCE_FETCH_MAX_SIZE:
                         raise OverflowError()
 
         except Exception as exc:
@@ -310,14 +310,14 @@ def fetch_file(url, domain_lock_enabled=True, outfile=None,
                 error = {
                     'type': EventError.FETCH_TIMEOUT,
                     'url': expose_url(url),
-                    'timeout': settings.SENTRY_FETCH_TIMEOUT,
+                    'timeout': settings.SENTRY_SOURCE_FETCH_TIMEOUT,
                 }
             elif isinstance(exc, OverflowError):
                 error = {
                     'type': EventError.FETCH_TOO_LARGE,
                     'url': expose_url(url),
                     # We want size in megabytes to format nicely
-                    'max_size': float(settings.SENTRY_FETCH_MAX_SIZE) / 1024 / 1024,
+                    'max_size': float(settings.SENTRY_SOURCE_FETCH_MAX_SIZE) / 1024 / 1024,
                 }
             elif isinstance(exc, (RequestException, ZeroReturnError)):
                 error = {
diff --git a/src/sentry/lang/javascript/errormapping.py b/src/sentry/lang/javascript/errormapping.py
index 266c2e0a36..16ebd5d9ba 100644
--- a/src/sentry/lang/javascript/errormapping.py
+++ b/src/sentry/lang/javascript/errormapping.py
@@ -56,7 +56,7 @@ class Processor(object):
             http_session = http.build_session()
             response = http_session.get(self.mapping_url,
                 allow_redirects=True,
-                timeout=settings.SENTRY_FETCH_TIMEOUT,
+                timeout=settings.SENTRY_SOURCE_FETCH_TIMEOUT,
             )
             # Make sure we only get a 2xx to prevent caching bad data
             response.raise_for_status()
