commit c0951847ee97f82d9906213273d71a18d9b4eee4
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Jun 20 10:22:43 2016 -0700

    Use more cryptographically secure password reset hash (#3522)

diff --git a/src/sentry/models/lostpasswordhash.py b/src/sentry/models/lostpasswordhash.py
index 5d7862b151..018be72119 100644
--- a/src/sentry/models/lostpasswordhash.py
+++ b/src/sentry/models/lostpasswordhash.py
@@ -16,6 +16,8 @@ from django.utils import timezone
 from sentry.db.models import FlexibleForeignKey, Model, sane_repr
 from sentry.utils.http import absolute_uri
 
+CHARACTERS = u'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
+
 
 class LostPasswordHash(Model):
     __core__ = False
@@ -36,14 +38,19 @@ class LostPasswordHash(Model):
         super(LostPasswordHash, self).save(*args, **kwargs)
 
     def set_hash(self):
-        import hashlib
-        import random
+        from django.utils.crypto import get_random_string
 
-        self.hash = hashlib.md5(str(random.randint(1, 10000000))).hexdigest()
+        self.hash = get_random_string(32, CHARACTERS)
 
     def is_valid(self):
         return self.date_added > timezone.now() - timedelta(hours=48)
 
+    def get_absolute_url(self):
+        return absolute_uri(reverse(
+            'sentry-account-recover-confirm',
+            args=[self.user.id, self.hash]
+        ))
+
     def send_recover_mail(self):
         from sentry import options
         from sentry.http import get_server_hostname
@@ -52,10 +59,7 @@ class LostPasswordHash(Model):
         context = {
             'user': self.user,
             'domain': get_server_hostname(),
-            'url': absolute_uri(reverse(
-                'sentry-account-recover-confirm',
-                args=[self.user.id, self.hash]
-            )),
+            'url': self.get_absolute_url(),
         }
         msg = MessageBuilder(
             subject='%sPassword Recovery' % (options.get('mail.subject-prefix'),),
