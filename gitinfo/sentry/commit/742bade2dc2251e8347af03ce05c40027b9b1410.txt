commit 742bade2dc2251e8347af03ce05c40027b9b1410
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Wed Mar 18 15:08:19 2020 +0100

    ref(ui): removed defined data privacy rules indicator duration (#17760)

diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanel.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanel.tsx
index 4436e11655..5353721fd9 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanel.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanel.tsx
@@ -19,7 +19,6 @@ import Link from 'app/components/links/link';
 import DataPrivacyRulesPanelForm from './dataPrivacyRulesPanelForm';
 import {RULE_TYPE, METHOD_TYPE} from './utils';
 
-const INDICATORS_DURATION = 500;
 const DEFAULT_RULE_FROM_VALUE = '$string';
 
 type Rule = React.ComponentProps<typeof DataPrivacyRulesPanelForm>['rule'];
@@ -202,14 +201,10 @@ class DataPrivacyRulesPanel extends React.Component<Props, State> {
         });
       })
       .then(() => {
-        addSuccessMessage(t('Successfully saved data scrubbing rules'), {
-          duration: INDICATORS_DURATION,
-        });
+        addSuccessMessage(t('Successfully saved data scrubbing rules'));
       })
       .catch(() => {
-        addErrorMessage(t('An error occurred while saving data scrubbing rules'), {
-          duration: INDICATORS_DURATION,
-        });
+        addErrorMessage(t('An error occurred while saving data scrubbing rules'));
       });
   };
 
@@ -226,7 +221,7 @@ class DataPrivacyRulesPanel extends React.Component<Props, State> {
     if (isFormValid) {
       this.handleSubmit();
     } else {
-      addErrorMessage(t("Invalid rule's form"), {duration: INDICATORS_DURATION});
+      addErrorMessage(t("Invalid rule's form"));
     }
   };
 
@@ -235,7 +230,7 @@ class DataPrivacyRulesPanel extends React.Component<Props, State> {
   };
 
   handleCancelForm = () => {
-    addLoadingMessage(t('Cancelling...'), {duration: INDICATORS_DURATION});
+    addLoadingMessage(t('Cancelling...'));
     this.setState(prevState => ({
       rules: prevState.savedRules,
     }));
