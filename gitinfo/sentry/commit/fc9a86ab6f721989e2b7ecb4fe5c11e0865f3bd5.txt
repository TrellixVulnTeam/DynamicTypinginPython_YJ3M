commit fc9a86ab6f721989e2b7ecb4fe5c11e0865f3bd5
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Thu Jun 4 11:18:27 2020 +0200

    ref(ui): Updated breadcrumbs toggle logic (#18825)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
index 458126f3a6..4749899ff9 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
@@ -16,7 +16,7 @@ import {defined} from 'app/utils';
 
 import {
   Breadcrumb,
-  BreadcrumbDetails,
+  BreadcrumbsWithDetails,
   BreadcrumbType,
   BreadcrumbLevelType,
 } from './types';
@@ -29,18 +29,14 @@ import Icon from './icon';
 
 const MAX_CRUMBS_WHEN_COLLAPSED = 10;
 
-type BreadcrumbsWithDetails = Array<Breadcrumb & BreadcrumbDetails & {id: number}>;
 type FilterOptions = React.ComponentProps<typeof Filter>['options'];
 
 type State = {
-  isCollapsed: boolean;
   searchTerm: string;
   breadcrumbs: BreadcrumbsWithDetails;
   filteredByFilter: BreadcrumbsWithDetails;
-  filteredByCustomSearch: BreadcrumbsWithDetails;
-  filteredBreadcrumbs: BreadcrumbsWithDetails;
+  filteredBySearch: BreadcrumbsWithDetails;
   filterOptions: FilterOptions;
-  listBodyHeight?: React.CSSProperties['maxHeight'];
 };
 
 type Props = {
@@ -54,12 +50,10 @@ type Props = {
 
 class Breadcrumbs extends React.Component<Props, State> {
   state: State = {
-    isCollapsed: true,
     searchTerm: '',
     breadcrumbs: [],
     filteredByFilter: [],
-    filteredByCustomSearch: [],
-    filteredBreadcrumbs: [],
+    filteredBySearch: [],
     filterOptions: [[], []],
   };
 
@@ -67,19 +61,39 @@ class Breadcrumbs extends React.Component<Props, State> {
     this.loadBreadcrumbs();
   }
 
-  componentDidUpdate() {
-    this.loadListBodyHeight();
+  componentDidUpdate(_prevProps: Props, prevState: State) {
+    if (
+      prevState.breadcrumbs.length === 0 &&
+      this.state.breadcrumbs.length >= MAX_CRUMBS_WHEN_COLLAPSED
+    ) {
+      this.expandCollapsedCrumbs();
+    }
   }
 
   listBodyRef = React.createRef<HTMLDivElement>();
 
-  loadListBodyHeight = () => {
-    if (!this.state.listBodyHeight) {
-      const offsetHeight = this.listBodyRef?.current?.offsetHeight;
-      this.setState({
-        listBodyHeight: offsetHeight ? `${offsetHeight}px` : 'none',
-      });
+  expandCollapsedCrumbs = () => {
+    this.setState(
+      prevState => ({
+        filteredBySearch: prevState.breadcrumbs,
+      }),
+      () => {
+        this.scrollToTheBottom();
+      }
+    );
+  };
+
+  scrollToTheBottom = () => {
+    const element = this.listBodyRef?.current;
+
+    if (!element) {
+      return;
     }
+
+    element.scrollTo({
+      top: element.scrollHeight,
+      left: 0,
+    });
   };
 
   loadBreadcrumbs = () => {
@@ -97,13 +111,18 @@ class Breadcrumbs extends React.Component<Props, State> {
 
     this.setState({
       breadcrumbs: tranformedCrumbs,
-      filteredBreadcrumbs: tranformedCrumbs,
       filteredByFilter: tranformedCrumbs,
-      filteredByCustomSearch: tranformedCrumbs,
+      filteredBySearch: this.getCollapsedBreadcrumbs(tranformedCrumbs),
       filterOptions,
     });
   };
 
+  getCollapsedBreadcrumbs = (breadcrumbs: BreadcrumbsWithDetails) => {
+    return breadcrumbs.length > MAX_CRUMBS_WHEN_COLLAPSED
+      ? breadcrumbs.slice(-MAX_CRUMBS_WHEN_COLLAPSED)
+      : breadcrumbs;
+  };
+
   getFilterOptions = (breadcrumbs: ReturnType<typeof transformCrumbs>): FilterOptions => {
     const types = this.getFilterTypes(breadcrumbs);
     const levels = this.getFilterLevels(types);
@@ -210,60 +229,33 @@ class Breadcrumbs extends React.Component<Props, State> {
     };
   };
 
-  getCollapsedCrumbQuantity = (): {
-    filteredCollapsedBreadcrumbs: BreadcrumbsWithDetails;
-    collapsedQuantity: number;
-  } => {
-    const {isCollapsed, filteredBreadcrumbs} = this.state;
-
-    let filteredCollapsedBreadcrumbs = filteredBreadcrumbs;
-
-    if (isCollapsed && filteredCollapsedBreadcrumbs.length > MAX_CRUMBS_WHEN_COLLAPSED) {
-      filteredCollapsedBreadcrumbs = filteredCollapsedBreadcrumbs.slice(
-        -MAX_CRUMBS_WHEN_COLLAPSED
-      );
-    }
-
-    return {
-      filteredCollapsedBreadcrumbs,
-      collapsedQuantity: filteredBreadcrumbs.length - filteredCollapsedBreadcrumbs.length,
-    };
+  filterBySearch = (searchTerm: string, breadcrumbs: BreadcrumbsWithDetails) => {
+    return !searchTerm.trim()
+      ? breadcrumbs
+      : breadcrumbs.filter(obj =>
+          Object.keys(
+            pick(obj, ['type', 'category', 'message', 'level', 'timestamp', 'data'])
+          ).some(key => {
+            if (!defined(obj[key]) || !String(obj[key]).trim()) {
+              return false;
+            }
+            return JSON.stringify(obj[key])
+              .toLocaleLowerCase()
+              .includes(searchTerm);
+          })
+        );
   };
 
-  handleFilterBySearchTerm = (value: string) => {
-    const {filteredByFilter} = this.state;
-
-    const searchTerm = value.toLocaleLowerCase();
-
-    const filteredBreadcrumbs = filteredByFilter.filter(obj =>
-      Object.keys(
-        pick(obj, ['type', 'category', 'message', 'level', 'timestamp', 'data'])
-      ).some(key => {
-        if (!defined(obj[key]) || !String(obj[key]).trim()) {
-          return false;
-        }
-        return JSON.stringify(obj[key])
-          .toLocaleLowerCase()
-          .includes(searchTerm);
-      })
-    );
-
-    this.setState({
-      searchTerm,
-      filteredBreadcrumbs,
-    });
-  };
-
-  handleToggleCollapse = () => {
+  handleSearch = (value: string) => {
     this.setState(prevState => ({
-      isCollapsed: !prevState.isCollapsed,
+      searchTerm: value,
+      filteredBySearch: this.filterBySearch(value, prevState.filteredByFilter),
     }));
   };
 
   handleCleanSearch = () => {
     this.setState({
       searchTerm: '',
-      isCollapsed: true,
     });
   };
 
@@ -272,36 +264,31 @@ class Breadcrumbs extends React.Component<Props, State> {
   };
 
   handleClickFilterCheckAll = (checkAll: boolean) => {
-    const {filterOptions} = this.state;
-    const updatedFilterOptions: FilterOptions = [[], []];
-
-    for (const index in filterOptions) {
-      for (const option in filterOptions[index]) {
-        updatedFilterOptions[index][option] = {
-          ...filterOptions[index][option],
-          isChecked: checkAll,
-          isDisabled: false,
-        };
-      }
-    }
+    const {breadcrumbs} = this.state;
 
-    this.setState(
-      prevState => ({
-        filteredByFilter: checkAll ? prevState.breadcrumbs : [],
-        filterOptions: updatedFilterOptions,
-      }),
-      () => {
-        this.handleFilterBySearchTerm(this.state.searchTerm);
-      }
-    );
+    const filteredByFilter = checkAll ? breadcrumbs : [];
+
+    this.setState(prevState => ({
+      filteredByFilter,
+      filterOptions: prevState.filterOptions.map(filterOption =>
+        (filterOption as Array<FilterOptions[0][0] | FilterOptions[1][0]>).map(
+          option => ({
+            ...option,
+            isChecked: checkAll,
+            isDisabled: false,
+          })
+        )
+      ) as FilterOptions,
+      filteredBySearch: this.filterBySearch(prevState.searchTerm, filteredByFilter),
+    }));
   };
 
   filterCrumbsBy = (
     type: keyof Pick<BreadcrumbsWithDetails[0], 'level' | 'type'>,
     breadcrumbs: BreadcrumbsWithDetails,
     filterOptions: Array<FilterOptions[0][0] | FilterOptions[1][0]>
-  ) =>
-    breadcrumbs.filter(b => {
+  ) => {
+    return breadcrumbs.filter(b => {
       const crumbProperty = b[type];
       if (!crumbProperty) {
         return true;
@@ -312,6 +299,7 @@ class Breadcrumbs extends React.Component<Props, State> {
       }
       return true;
     });
+  };
 
   handleFilter = (filterOptions: FilterOptions) => {
     const {breadcrumbs} = this.state;
@@ -327,25 +315,16 @@ class Breadcrumbs extends React.Component<Props, State> {
       filterOptions[1]
     );
 
-    this.setState(
-      {
-        filterOptions,
-        filteredByFilter: filteredCrumbsByLevel,
-      },
-      () => {
-        this.handleFilterBySearchTerm(this.state.searchTerm);
-      }
-    );
+    this.setState(prevState => ({
+      filterOptions,
+      filteredByFilter: filteredCrumbsByLevel,
+      filteredBySearch: this.filterBySearch(prevState.searchTerm, filteredCrumbsByLevel),
+    }));
   };
 
   render() {
     const {type, event, orgId} = this.props;
-    const {filterOptions, searchTerm, listBodyHeight} = this.state;
-
-    const {
-      collapsedQuantity,
-      filteredCollapsedBreadcrumbs,
-    } = this.getCollapsedCrumbQuantity();
+    const {filterOptions, searchTerm, filteredBySearch} = this.state;
 
     return (
       <EventDataSection
@@ -364,7 +343,7 @@ class Breadcrumbs extends React.Component<Props, State> {
             />
             <StyledSearchBar
               placeholder={t('Search breadcrumbs\u2026')}
-              onChange={this.handleFilterBySearchTerm}
+              onChange={this.handleSearch}
               query={searchTerm}
             />
           </Search>
@@ -373,16 +352,13 @@ class Breadcrumbs extends React.Component<Props, State> {
         isCentered
       >
         <Content>
-          {filteredCollapsedBreadcrumbs.length > 0 ? (
+          {filteredBySearch.length > 0 ? (
             <React.Fragment>
               <ListHeader />
               <ListBody
                 event={event}
                 orgId={orgId}
-                onToggleCollapse={this.handleToggleCollapse}
-                collapsedQuantity={collapsedQuantity}
-                breadcrumbs={filteredCollapsedBreadcrumbs}
-                maxHeight={listBodyHeight}
+                breadcrumbs={filteredBySearch}
                 ref={this.listBodyRef}
               />
             </React.Fragment>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/category.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/category.tsx
index afd441893e..de0530ffd8 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/category.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/category.tsx
@@ -10,7 +10,7 @@ type Props = {
   category?: string | null;
 };
 
-const Category = ({category}: Props) => {
+const Category = React.memo(({category}: Props) => {
   const title = !defined(category) ? t('generic') : category;
   return (
     <Wrapper title={title}>
@@ -19,7 +19,7 @@ const Category = ({category}: Props) => {
       </Tooltip>
     </Wrapper>
   );
-};
+});
 
 export default Category;
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/collapsedInfo.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/collapsedInfo.tsx
deleted file mode 100644
index 3fb85d43d9..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/collapsedInfo.tsx
+++ /dev/null
@@ -1,35 +0,0 @@
-import React from 'react';
-import styled from '@emotion/styled';
-
-import {tct} from 'app/locale';
-import {IconEllipsis} from 'app/icons';
-import space from 'app/styles/space';
-
-import {GridCellLeft, IconWrapper} from './styles';
-
-type Props = {
-  onClick: () => void;
-  quantity: number;
-};
-
-const CollapsedInfo = ({quantity, onClick}: Props) => (
-  <Wrapper data-test-id="breadcrumb-collapsed" onClick={onClick}>
-    <IconWrapper>
-      <IconEllipsis />
-    </IconWrapper>
-    {tct('Show [quantity] collapsed crumbs', {quantity})}
-  </Wrapper>
-);
-
-export default CollapsedInfo;
-
-const Wrapper = styled(GridCellLeft)`
-  cursor: pointer;
-  background: ${p => p.theme.gray100};
-  font-size: ${p => p.theme.fontSizeMedium};
-  grid-column-start: 1;
-  grid-column-end: -1;
-  display: grid;
-  grid-gap: ${space(1.5)};
-  grid-template-columns: max-content 1fr;
-`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx
index 2382382079..c499c71597 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx
@@ -111,9 +111,13 @@ class Filter extends React.Component<Props, State> {
           checkedLevels.some(checkedLevel => checkedLevel.type === level)
         )
       ) {
+        const isAllLevelsWithTypeDisabled = levels
+          .filter(l => type.levels.includes(l.type))
+          .every(l => l.isDisabled);
+
         return {
           ...type,
-          isDisabled: true,
+          isDisabled: !isAllLevelsWithTypeDisabled,
         };
       }
       return {
@@ -135,9 +139,12 @@ class Filter extends React.Component<Props, State> {
     // Filter levels
     const levels = options[1].map(level => {
       if (!checkedTypes.some(type => type.levels.includes(level.type))) {
+        const isAllTypesWithLevelDisabled = types
+          .filter(t => t.levels.includes(level.type))
+          .every(t => t.isDisabled);
         return {
           ...level,
-          isDisabled: true,
+          isDisabled: !isAllTypesWithLevelDisabled,
         };
       }
       return {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/icon.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/icon.tsx
index cad6fd8028..01d5d5ebb8 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/icon.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/icon.tsx
@@ -5,17 +5,18 @@ import SvgIcon from 'app/icons/svgIcon';
 type SvgIconProps = React.ComponentProps<typeof SvgIcon>;
 
 import {IconWrapper} from './styles';
-import {BreadcrumbDetails} from './types';
+import {BreadcrumbsWithDetails} from './types';
 
-type Props = Omit<BreadcrumbDetails, 'description'> & Pick<SvgIconProps, 'size'>;
+type Props = Pick<BreadcrumbsWithDetails[0], 'color' | 'icon'> &
+  Pick<SvgIconProps, 'size'>;
 
-const Icon = ({icon, color, size}: Props) => {
+const Icon = React.memo(({icon, color, size}: Props) => {
   const Svg = icon as React.ComponentType<SvgIconProps>;
   return (
     <IconWrapper color={color}>
       <Svg size={size} />
     </IconWrapper>
   );
-};
+});
 
 export default Icon;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/level.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/level.tsx
index 176a110278..3f78cde456 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/level.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/level.tsx
@@ -11,7 +11,7 @@ type Props = {
   level?: BreadcrumbLevelType;
 };
 
-const Level = ({level}: Props) => {
+const Level = React.memo(({level}: Props) => {
   switch (level) {
     case BreadcrumbLevelType.FATAL:
       return <StyledTag color="red500">{level}</StyledTag>;
@@ -24,7 +24,7 @@ const Level = ({level}: Props) => {
     default:
       return <Tag>{level || t('undefined')}</Tag>;
   }
-};
+});
 
 export default Level;
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listBody.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listBody.tsx
index df3b6bad5f..a00b29de98 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listBody.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listBody.tsx
@@ -8,39 +8,30 @@ import space from 'app/styles/space';
 import SentryTypes from 'app/sentryTypes';
 
 import Time from './time';
-import CollapsedInfo from './collapsedInfo';
 import Data from './data/data';
 import Category from './category';
 import Icon from './icon';
 import Level from './level';
 import {Grid, GridCell, GridCellLeft} from './styles';
-import {Breadcrumb, BreadcrumbDetails, BreadcrumbType} from './types';
-
-type Breadcrumbs = Array<Breadcrumb & BreadcrumbDetails & {id: number}>;
+import {Breadcrumb, BreadcrumbsWithDetails, BreadcrumbType} from './types';
 
 type Props = {
-  breadcrumbs: Breadcrumbs;
-  collapsedQuantity: number;
-  onToggleCollapse: () => void;
+  breadcrumbs: BreadcrumbsWithDetails;
   event: Event;
   orgId: string | null;
-  maxHeight?: React.CSSProperties['maxHeight'];
 };
 
 const ListBody = React.forwardRef<HTMLDivElement, Props>(function ListBody(
-  {collapsedQuantity, onToggleCollapse, orgId, event, maxHeight, breadcrumbs},
+  {orgId, event, breadcrumbs},
   ref
 ) {
   return (
-    <StyledGrid maxHeight={maxHeight} ref={ref}>
-      {collapsedQuantity > 0 && (
-        <CollapsedInfo onClick={onToggleCollapse} quantity={collapsedQuantity} />
-      )}
-      {breadcrumbs.map(({color, icon, ...crumb}, idx) => {
+    <StyledGrid ref={ref}>
+      {breadcrumbs.map(({color, icon, id, ...crumb}, idx) => {
         const hasError = crumb.type === BreadcrumbType.ERROR;
         const isLastItem = breadcrumbs.length - 1 === idx;
         return (
-          <React.Fragment key={idx}>
+          <React.Fragment key={id}>
             <GridCellLeft hasError={hasError} isLastItem={isLastItem}>
               <Tooltip title={crumb.description}>
                 <Icon icon={icon} color={color} />
@@ -65,15 +56,12 @@ const ListBody = React.forwardRef<HTMLDivElement, Props>(function ListBody(
   );
 });
 
-export default ListBody;
+export default React.memo(ListBody) as typeof ListBody;
 
 ListBody.propTypes = {
   breadcrumbs: PropTypes.array.isRequired,
-  collapsedQuantity: PropTypes.number.isRequired,
-  onToggleCollapse: PropTypes.func.isRequired,
   event: SentryTypes.Event.isRequired,
   orgId: PropTypes.string.isRequired,
-  maxHeight: PropTypes.string,
 };
 
 const GridCellCategory = styled(GridCell)`
@@ -85,4 +73,6 @@ const GridCellCategory = styled(GridCell)`
 const StyledGrid = styled(Grid)`
   border-radius: ${p => p.theme.borderRadiusBottom};
   border-top: 0;
+  overflow-y: auto;
+  max-height: 450px;
 `;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listHeader.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listHeader.tsx
index 1f5776e24e..23b7c2bf13 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listHeader.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listHeader.tsx
@@ -41,4 +41,5 @@ const StyledGridCellCategory = styled(StyledGridCell)`
 
 const StyledGrid = styled(Grid)`
   border-radius: ${p => p.theme.borderRadiusTop};
+  margin-bottom: 0;
 `;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/styles.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/styles.tsx
index 830ee72c97..e8e5252c76 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/styles.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/styles.tsx
@@ -15,7 +15,7 @@ const IconWrapper = styled('div', {
   width: 26px;
   height: 26px;
   background: ${p => p.theme.white};
-  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.08);
+  box-shadow: ${p => p.theme.dropShadowLightest};
   border-radius: 32px;
   z-index: 1;
   position: relative;
@@ -72,11 +72,10 @@ const GridCellLeft = styled(GridCell)`
   }
 `;
 
-const Grid = styled('div')<{maxHeight?: React.CSSProperties['maxHeight']}>`
+const Grid = styled('div')`
   border: 1px solid ${p => p.theme.borderDark};
   display: grid;
-  overflow-y: auto;
-  ${p => p.maxHeight && `max-height: ${p.maxHeight}`};
+  overflow: hidden;
   > *:nth-last-child(5):before {
     bottom: calc(100% - ${space(1)});
   }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time.tsx
index 517ba32cdd..79f772a026 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time.tsx
@@ -17,7 +17,7 @@ type Props = {
   timestamp?: string;
 };
 
-const Time = ({timestamp}: Props) =>
+const Time = React.memo(({timestamp}: Props) =>
   defined(timestamp) ? (
     <Wrapper>
       <Tooltip
@@ -32,7 +32,8 @@ const Time = ({timestamp}: Props) =>
         </TextOverflow>
       </Tooltip>
     </Wrapper>
-  ) : null;
+  ) : null
+);
 
 export default Time;
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/transformCrumbs.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/transformCrumbs.tsx
index 956577c027..920090be38 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/transformCrumbs.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/transformCrumbs.tsx
@@ -2,8 +2,8 @@ import convertCrumbType from './convertCrumbType';
 import getCrumbDetails from './getCrumbDetails';
 import {Breadcrumb} from './types';
 
-const transformCrumbs = (breadcrumbs: Array<Breadcrumb>) => {
-  return breadcrumbs.map((breadcrumb, index) => {
+const transformCrumbs = (breadcrumbs: Array<Breadcrumb>) =>
+  breadcrumbs.map((breadcrumb, index) => {
     const convertedCrumbType = convertCrumbType(breadcrumb);
     const crumbDetails = getCrumbDetails(convertedCrumbType.type);
     return {
@@ -12,6 +12,5 @@ const transformCrumbs = (breadcrumbs: Array<Breadcrumb>) => {
       ...crumbDetails,
     };
   });
-};
 
 export default transformCrumbs;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/types.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/types.tsx
index f59153f339..4abbe10d3a 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/types.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/types.tsx
@@ -99,8 +99,10 @@ export type Breadcrumb =
   | BreadcrumbTypeHTTP
   | BreadcrumbTypeDefault;
 
-export type BreadcrumbDetails = {
+type BreadcrumbDetails = {
   color?: Color | React.CSSProperties['color'];
   icon?: React.ComponentType<IconProps>;
   description: string;
 };
+
+export type BreadcrumbsWithDetails = Array<Breadcrumb & BreadcrumbDetails & {id: number}>;
diff --git a/tests/js/spec/components/events/interfaces/breadcrumbs/__snapshots__/filter.spec.tsx.snap b/tests/js/spec/components/events/interfaces/breadcrumbs/__snapshots__/filter.spec.tsx.snap
index 1447c0aa32..a0db302103 100644
--- a/tests/js/spec/components/events/interfaces/breadcrumbs/__snapshots__/filter.spec.tsx.snap
+++ b/tests/js/spec/components/events/interfaces/breadcrumbs/__snapshots__/filter.spec.tsx.snap
@@ -14,7 +14,7 @@ exports[`Filter default render 1`] = `
           "levels": Array [
             "info",
           ],
-          "symbol": <Icon
+          "symbol": <UNDEFINED
             color="green400"
             icon={
               Object {
@@ -33,7 +33,7 @@ exports[`Filter default render 1`] = `
           "levels": Array [
             "error",
           ],
-          "symbol": <Icon
+          "symbol": <UNDEFINED
             color="pink400"
             icon={
               Object {
@@ -52,7 +52,7 @@ exports[`Filter default render 1`] = `
           "levels": Array [
             "info",
           ],
-          "symbol": <Icon
+          "symbol": <UNDEFINED
             color="purple400"
             icon={
               Object {
@@ -71,7 +71,7 @@ exports[`Filter default render 1`] = `
           "levels": Array [
             "info",
           ],
-          "symbol": <Icon
+          "symbol": <UNDEFINED
             color="green500"
             icon={
               Object {
@@ -90,7 +90,7 @@ exports[`Filter default render 1`] = `
           "levels": Array [
             "info",
           ],
-          "symbol": <Icon
+          "symbol": <UNDEFINED
             color="purple500"
             icon={
               Object {
@@ -109,7 +109,7 @@ exports[`Filter default render 1`] = `
           "levels": Array [
             "error",
           ],
-          "symbol": <Icon
+          "symbol": <UNDEFINED
             color="red400"
             icon={
               Object {
@@ -126,7 +126,7 @@ exports[`Filter default render 1`] = `
         Object {
           "isChecked": true,
           "isDisabled": false,
-          "symbol": <Level
+          "symbol": <UNDEFINED
             level="info"
           />,
           "type": "info",
@@ -134,7 +134,7 @@ exports[`Filter default render 1`] = `
         Object {
           "isChecked": true,
           "isDisabled": false,
-          "symbol": <Level
+          "symbol": <UNDEFINED
             level="error"
           />,
           "type": "error",
@@ -839,7 +839,7 @@ exports[`Filter default render 1`] = `
                           "levels": Array [
                             "info",
                           ],
-                          "symbol": <Icon
+                          "symbol": <UNDEFINED
                             color="green400"
                             icon={
                               Object {
@@ -858,7 +858,7 @@ exports[`Filter default render 1`] = `
                           "levels": Array [
                             "error",
                           ],
-                          "symbol": <Icon
+                          "symbol": <UNDEFINED
                             color="pink400"
                             icon={
                               Object {
@@ -877,7 +877,7 @@ exports[`Filter default render 1`] = `
                           "levels": Array [
                             "info",
                           ],
-                          "symbol": <Icon
+                          "symbol": <UNDEFINED
                             color="purple400"
                             icon={
                               Object {
@@ -896,7 +896,7 @@ exports[`Filter default render 1`] = `
                           "levels": Array [
                             "info",
                           ],
-                          "symbol": <Icon
+                          "symbol": <UNDEFINED
                             color="green500"
                             icon={
                               Object {
@@ -915,7 +915,7 @@ exports[`Filter default render 1`] = `
                           "levels": Array [
                             "info",
                           ],
-                          "symbol": <Icon
+                          "symbol": <UNDEFINED
                             color="purple500"
                             icon={
                               Object {
@@ -934,7 +934,7 @@ exports[`Filter default render 1`] = `
                           "levels": Array [
                             "error",
                           ],
-                          "symbol": <Icon
+                          "symbol": <UNDEFINED
                             color="red400"
                             icon={
                               Object {
@@ -972,7 +972,7 @@ exports[`Filter default render 1`] = `
                               className="css-5ewcs4-ListItem e1cujor52"
                               onClick={[Function]}
                             >
-                              <Icon
+                              <Memo()
                                 color="green400"
                                 icon={
                                   Object {
@@ -986,7 +986,7 @@ exports[`Filter default render 1`] = `
                                   color="green400"
                                 >
                                   <div
-                                    className="css-1r7qc7g-IconWrapper e1oljvyu0"
+                                    className="css-m7rno3-IconWrapper e1oljvyu0"
                                   >
                                     <ForwardRef
                                       size="xs"
@@ -1017,7 +1017,7 @@ exports[`Filter default render 1`] = `
                                     </ForwardRef>
                                   </div>
                                 </IconWrapper>
-                              </Icon>
+                              </Memo()>
                               <ListItemDescription>
                                 <div
                                   className="css-1xx8l1w-ListItemDescription e1cujor53"
@@ -1087,7 +1087,7 @@ exports[`Filter default render 1`] = `
                               className="css-5ewcs4-ListItem e1cujor52"
                               onClick={[Function]}
                             >
-                              <Icon
+                              <Memo()
                                 color="pink400"
                                 icon={
                                   Object {
@@ -1101,7 +1101,7 @@ exports[`Filter default render 1`] = `
                                   color="pink400"
                                 >
                                   <div
-                                    className="css-fj4khb-IconWrapper e1oljvyu0"
+                                    className="css-efjb4a-IconWrapper e1oljvyu0"
                                   >
                                     <ForwardRef
                                       size="xs"
@@ -1123,7 +1123,7 @@ exports[`Filter default render 1`] = `
                                     </ForwardRef>
                                   </div>
                                 </IconWrapper>
-                              </Icon>
+                              </Memo()>
                               <ListItemDescription>
                                 <div
                                   className="css-1xx8l1w-ListItemDescription e1cujor53"
@@ -1193,7 +1193,7 @@ exports[`Filter default render 1`] = `
                               className="css-5ewcs4-ListItem e1cujor52"
                               onClick={[Function]}
                             >
-                              <Icon
+                              <Memo()
                                 color="purple400"
                                 icon={
                                   Object {
@@ -1207,7 +1207,7 @@ exports[`Filter default render 1`] = `
                                   color="purple400"
                                 >
                                   <div
-                                    className="css-lmp22n-IconWrapper e1oljvyu0"
+                                    className="css-12w2aso-IconWrapper e1oljvyu0"
                                   >
                                     <ForwardRef
                                       size="xs"
@@ -1232,7 +1232,7 @@ exports[`Filter default render 1`] = `
                                     </ForwardRef>
                                   </div>
                                 </IconWrapper>
-                              </Icon>
+                              </Memo()>
                               <ListItemDescription>
                                 <div
                                   className="css-1xx8l1w-ListItemDescription e1cujor53"
@@ -1302,7 +1302,7 @@ exports[`Filter default render 1`] = `
                               className="css-5ewcs4-ListItem e1cujor52"
                               onClick={[Function]}
                             >
-                              <Icon
+                              <Memo()
                                 color="green500"
                                 icon={
                                   Object {
@@ -1316,7 +1316,7 @@ exports[`Filter default render 1`] = `
                                   color="green500"
                                 >
                                   <div
-                                    className="css-9dr8gi-IconWrapper e1oljvyu0"
+                                    className="css-1o5bgxp-IconWrapper e1oljvyu0"
                                   >
                                     <ForwardRef
                                       size="xs"
@@ -1341,7 +1341,7 @@ exports[`Filter default render 1`] = `
                                     </ForwardRef>
                                   </div>
                                 </IconWrapper>
-                              </Icon>
+                              </Memo()>
                               <ListItemDescription>
                                 <div
                                   className="css-1xx8l1w-ListItemDescription e1cujor53"
@@ -1411,7 +1411,7 @@ exports[`Filter default render 1`] = `
                               className="css-5ewcs4-ListItem e1cujor52"
                               onClick={[Function]}
                             >
-                              <Icon
+                              <Memo()
                                 color="purple500"
                                 icon={
                                   Object {
@@ -1425,7 +1425,7 @@ exports[`Filter default render 1`] = `
                                   color="purple500"
                                 >
                                   <div
-                                    className="css-dkqp3s-IconWrapper e1oljvyu0"
+                                    className="css-11o98lp-IconWrapper e1oljvyu0"
                                   >
                                     <ForwardRef
                                       size="xs"
@@ -1447,7 +1447,7 @@ exports[`Filter default render 1`] = `
                                     </ForwardRef>
                                   </div>
                                 </IconWrapper>
-                              </Icon>
+                              </Memo()>
                               <ListItemDescription>
                                 <div
                                   className="css-1xx8l1w-ListItemDescription e1cujor53"
@@ -1517,7 +1517,7 @@ exports[`Filter default render 1`] = `
                               className="css-5ewcs4-ListItem e1cujor52"
                               onClick={[Function]}
                             >
-                              <Icon
+                              <Memo()
                                 color="red400"
                                 icon={
                                   Object {
@@ -1531,7 +1531,7 @@ exports[`Filter default render 1`] = `
                                   color="red400"
                                 >
                                   <div
-                                    className="css-11m7bo8-IconWrapper e1oljvyu0"
+                                    className="css-1hei10e-IconWrapper e1oljvyu0"
                                   >
                                     <ForwardRef
                                       size="xs"
@@ -1553,7 +1553,7 @@ exports[`Filter default render 1`] = `
                                     </ForwardRef>
                                   </div>
                                 </IconWrapper>
-                              </Icon>
+                              </Memo()>
                               <ListItemDescription>
                                 <div
                                   className="css-1xx8l1w-ListItemDescription e1cujor53"
@@ -1624,7 +1624,7 @@ exports[`Filter default render 1`] = `
                         Object {
                           "isChecked": true,
                           "isDisabled": false,
-                          "symbol": <Level
+                          "symbol": <UNDEFINED
                             level="info"
                           />,
                           "type": "info",
@@ -1632,7 +1632,7 @@ exports[`Filter default render 1`] = `
                         Object {
                           "isChecked": true,
                           "isDisabled": false,
-                          "symbol": <Level
+                          "symbol": <UNDEFINED
                             level="error"
                           />,
                           "type": "error",
@@ -1663,7 +1663,7 @@ exports[`Filter default render 1`] = `
                               className="css-5ewcs4-ListItem e1cujor52"
                               onClick={[Function]}
                             >
-                              <Level
+                              <Memo()
                                 level="info"
                               >
                                 <StyledTag
@@ -1681,7 +1681,7 @@ exports[`Filter default render 1`] = `
                                     </div>
                                   </Component>
                                 </StyledTag>
-                              </Level>
+                              </Memo()>
                               <ListItemDescription>
                                 <div
                                   className="css-1xx8l1w-ListItemDescription e1cujor53"
@@ -1749,7 +1749,7 @@ exports[`Filter default render 1`] = `
                               className="css-5ewcs4-ListItem e1cujor52"
                               onClick={[Function]}
                             >
-                              <Level
+                              <Memo()
                                 level="error"
                               >
                                 <StyledTag
@@ -1767,7 +1767,7 @@ exports[`Filter default render 1`] = `
                                     </div>
                                   </Component>
                                 </StyledTag>
-                              </Level>
+                              </Memo()>
                               <ListItemDescription>
                                 <div
                                   className="css-1xx8l1w-ListItemDescription e1cujor53"
