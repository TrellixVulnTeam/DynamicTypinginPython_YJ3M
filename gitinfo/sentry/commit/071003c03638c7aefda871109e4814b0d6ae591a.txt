commit 071003c03638c7aefda871109e4814b0d6ae591a
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Oct 17 18:20:15 2019 -0700

    ref(stores): Allow silent organization updates (#15165)

diff --git a/src/sentry/static/sentry/app/actionCreators/organization.jsx b/src/sentry/static/sentry/app/actionCreators/organization.jsx
index 99c48e707a..fb0269a708 100644
--- a/src/sentry/static/sentry/app/actionCreators/organization.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/organization.jsx
@@ -10,20 +10,29 @@ import ProjectsStore from 'app/stores/projectsStore';
  *
  * @param {Object} api A reference to the api client
  * @param {String} slug The organization slug
- * @param {boolean} detailed whether or not the detailed org details should be retrieved
+ * @param {boolean} detailed Whether or not the detailed org details should be
+ *                           retrieved
+ * @param {boolean} silent Should we silenty update the organization (do not
+ *                         clear the current organization in the store)
  */
-export async function fetchOrganizationDetails(api, slug, detailed) {
-  OrganizationActions.fetchOrg();
+export async function fetchOrganizationDetails(api, slug, detailed, silent) {
+  if (!silent) {
+    OrganizationActions.fetchOrg();
+  }
+
   try {
     const org = await api.requestPromise(`/organizations/${slug}/`, {
       query: {detailed: detailed ? 1 : 0},
     });
+
     if (!org) {
       OrganizationActions.fetchOrgError(new Error('retrieved organization is falsey'));
       return;
     }
+
     OrganizationActions.update(org);
     setActiveOrganization(org);
+
     if (detailed) {
       TeamStore.loadInitialData(org.teams);
       ProjectsStore.loadInitialData(org.projects);
diff --git a/src/sentry/static/sentry/app/stores/latestContextStore.jsx b/src/sentry/static/sentry/app/stores/latestContextStore.jsx
index 34f0f09ddd..41c8367c52 100644
--- a/src/sentry/static/sentry/app/stores/latestContextStore.jsx
+++ b/src/sentry/static/sentry/app/stores/latestContextStore.jsx
@@ -1,6 +1,7 @@
 import Reflux from 'reflux';
 
 import ProjectActions from 'app/actions/projectActions';
+import OrganizationActions from 'app/actions/organizationActions';
 import OrganizationsActions from 'app/actions/organizationsActions';
 import NavigationActions from 'app/actions/navigationActions';
 
@@ -21,6 +22,7 @@ const LatestContextStore = Reflux.createStore({
     this.listenTo(ProjectActions.updateSuccess, this.onUpdateProject);
     this.listenTo(OrganizationsActions.setActive, this.onSetActiveOrganization);
     this.listenTo(OrganizationsActions.update, this.onUpdateOrganization);
+    this.listenTo(OrganizationActions.update, this.onUpdateOrganization);
     this.listenTo(NavigationActions.setLastRoute, this.onSetLastRoute);
   },
 
diff --git a/tests/js/spec/actionCreators/organization.spec.jsx b/tests/js/spec/actionCreators/organization.spec.jsx
index 72fde6987f..ea4652ff79 100644
--- a/tests/js/spec/actionCreators/organization.spec.jsx
+++ b/tests/js/spec/actionCreators/organization.spec.jsx
@@ -73,6 +73,27 @@ describe('OrganizationActionCreator', function() {
     expect(ProjectsStore.loadInitialData).not.toHaveBeenCalled();
   });
 
+  it('silently fetches organization details', async function() {
+    const getOrgMock = MockApiClient.addMockResponse({
+      url: `/organizations/${detailedOrg.slug}/`,
+      body: detailedOrg,
+    });
+
+    fetchOrganizationDetails(api, detailedOrg.slug, true, true);
+    await tick();
+    expect(OrganizationActions.fetchOrg).not.toHaveBeenCalled();
+
+    expect(getOrgMock).toHaveBeenCalledWith(
+      `/organizations/${detailedOrg.slug}/`,
+      expect.anything()
+    );
+    expect(OrganizationActions.update).toHaveBeenCalledWith(detailedOrg);
+    expect(OrganizationsActionCreator.setActiveOrganization).toHaveBeenCalled();
+
+    expect(TeamStore.loadInitialData).toHaveBeenCalledWith(detailedOrg.teams);
+    expect(ProjectsStore.loadInitialData).toHaveBeenCalledWith(detailedOrg.projects);
+  });
+
   it('errors out correctly', async function() {
     const getOrgMock = MockApiClient.addMockResponse({
       url: `/organizations/${detailedOrg.slug}/`,
