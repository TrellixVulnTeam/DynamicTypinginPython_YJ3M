commit 421296fefc7adda1261ad75749698bdb637669d8
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 20 10:32:41 2015 -0700

    Add pending_delete signal

diff --git a/src/sentry/signals.py b/src/sentry/signals.py
index 7911c48154..ba48346e79 100644
--- a/src/sentry/signals.py
+++ b/src/sentry/signals.py
@@ -25,3 +25,4 @@ class BetterSignal(Signal):
 regression_signal = BetterSignal(providing_args=["instance"])
 buffer_incr_complete = BetterSignal(providing_args=["model", "columns", "extra", "result"])
 event_received = BetterSignal(providing_args=["ip"])
+pending_delete = BetterSignal(providing_args=["instance"])
diff --git a/src/sentry/tasks/deletion.py b/src/sentry/tasks/deletion.py
index aeae67cb5d..5d9fd1c019 100644
--- a/src/sentry/tasks/deletion.py
+++ b/src/sentry/tasks/deletion.py
@@ -11,6 +11,7 @@ from __future__ import absolute_import
 from celery.utils.log import get_task_logger
 
 from sentry.utils.query import bulk_delete_objects
+from sentry.signals import pending_delete
 from sentry.tasks.base import instrumented_task, retry
 
 logger = get_task_logger(__name__)
@@ -34,6 +35,7 @@ def delete_organization(object_id, continuous=True, **kwargs):
 
     if o.status != OrganizationStatus.DELETION_IN_PROGRESS:
         o.update(status=OrganizationStatus.DELETION_IN_PROGRESS)
+        pending_delete.send(sender=Organization, instance=o)
 
     for team in Team.objects.filter(organization=o).order_by('id')[:1]:
         logger.info('Removing Team id=%s where organization=%s', team.id, o.id)
@@ -68,6 +70,7 @@ def delete_team(object_id, continuous=True, **kwargs):
         raise ValueError('Aborting team deletion as status is invalid')
 
     if t.status != TeamStatus.DELETION_IN_PROGRESS:
+        pending_delete.send(sender=Team, instance=t)
         t.update(status=TeamStatus.DELETION_IN_PROGRESS)
 
     # Delete 1 project at a time since this is expensive by itself
@@ -101,6 +104,7 @@ def delete_project(object_id, continuous=True, **kwargs):
         raise ValueError('Aborting project deletion as status is invalid')
 
     if p.status != ProjectStatus.DELETION_IN_PROGRESS:
+        pending_delete.send(sender=Project, instance=p)
         p.update(status=ProjectStatus.DELETION_IN_PROGRESS)
 
     # XXX: remove keys first to prevent additional data from flowing in
