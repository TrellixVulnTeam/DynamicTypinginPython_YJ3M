commit 5b8479be7397dab47120452ec0bb9e48025e9cea
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Oct 3 10:46:07 2019 -0700

    feat(ui): Add more columns to Incident Rules list [SEN-1053] (#14877)
    
    * Adds the "Metric" and "Thresholds" columns to Incident Rules list.
    * Add edit button and make delete trigger button to be default priority to match rule list
    
    Closes SEN-1053

diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/list.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/list.tsx
index 85af4ff71a..7660daddbb 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/list.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/list.tsx
@@ -1,7 +1,7 @@
-import {RouteComponentProps} from 'react-router/lib/Router';
 import {Link} from 'react-router';
+import {RouteComponentProps} from 'react-router/lib/Router';
 import React from 'react';
-import styled from 'react-emotion';
+import styled, {css} from 'react-emotion';
 
 import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
 import {t} from 'app/locale';
@@ -15,6 +15,7 @@ import space from 'app/styles/space';
 
 import {IncidentRule} from './types';
 import {deleteRule} from './actions';
+import getMetricDisplayName from './utils/getMetricDisplayName';
 
 type State = {
   rules: IncidentRule[];
@@ -79,7 +80,14 @@ class IncidentRulesList extends AsyncView<Props, State> {
       <div>
         <SettingsPageHeader title={t('Incident Rules')} action={action} />
         <Panel>
-          <PanelHeader>{t('Rules')}</PanelHeader>
+          <GridPanelHeader>
+            <NameColumn>{t('Name')}</NameColumn>
+
+            <div>{t('Metric')}</div>
+
+            <div>{t('Threshold')}</div>
+          </GridPanelHeader>
+
           <PanelBody>
             {isLoading && <LoadingIndicator />}
 
@@ -90,17 +98,38 @@ class IncidentRulesList extends AsyncView<Props, State> {
                   <RuleLink to={`/settings/${orgId}/incident-rules/${rule.id}/`}>
                     {rule.name}
                   </RuleLink>
-                  <Confirm
-                    priority="danger"
-                    onConfirm={() => this.handleRemoveRule(rule)}
-                    message={t('Are you sure you want to remove this rule?')}
-                  >
-                    <RemoveButton
-                      size="small"
-                      icon="icon-trash"
-                      label={t('Remove Rule')}
-                    />
-                  </Confirm>
+
+                  <MetricName>{getMetricDisplayName(rule.thresholdType)}</MetricName>
+
+                  <ThresholdColumn>
+                    <Thresholds>
+                      {rule.triggers.map(trigger => trigger.alertThreshold).join(', ')}
+                    </Thresholds>
+
+                    <Actions>
+                      <Button
+                        to={`/settings/${orgId}/incident-rules/${rule.id}/`}
+                        size="small"
+                        icon="icon-edit"
+                        aria-label={t('Edit Rule')}
+                      >
+                        {t('Edit')}
+                      </Button>
+
+                      <Confirm
+                        priority="danger"
+                        onConfirm={() => this.handleRemoveRule(rule)}
+                        message={t('Are you sure you want to remove this rule?')}
+                      >
+                        <Button
+                          type="button"
+                          size="small"
+                          icon="icon-trash"
+                          label={t('Remove Rule')}
+                        />
+                      </Confirm>
+                    </Actions>
+                  </ThresholdColumn>
                 </RuleRow>
               ))}
 
@@ -116,17 +145,50 @@ class IncidentRulesList extends AsyncView<Props, State> {
 
 export default IncidentRulesList;
 
+const gridCss = css`
+  display: grid;
+  grid-template-columns: 3fr 1fr 2fr;
+  align-items: center;
+`;
+
+const nameColumnCss = css`
+  padding: ${space(2)};
+`;
+
+const GridPanelHeader = styled(PanelHeader)`
+  padding: 0;
+  ${gridCss};
+`;
+
 const RuleRow = styled(PanelItem)`
   padding: 0;
   align-items: center;
-  justify-content: space-between;
+  ${gridCss};
+`;
+
+const NameColumn = styled('div')`
+  ${nameColumnCss};
 `;
 
 const RuleLink = styled(Link)`
-  flex: 1;
-  padding: ${space(2)};
+  ${nameColumnCss}
 `;
 
-const RemoveButton = styled(Button)`
+// For tests
+const MetricName = styled('div')``;
+
+const ThresholdColumn = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
+`;
+
+// For tests
+const Thresholds = styled('div')``;
+
+const Actions = styled('div')`
+  display: grid;
+  grid-auto-flow: column;
+  grid-gap: ${space(1)};
   margin: ${space(2)};
 `;
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm.tsx
index efee3ea876..88d12d1879 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm.tsx
@@ -12,6 +12,7 @@ import withOrganization from 'app/utils/withOrganization';
 import withProjects from 'app/utils/withProjects';
 
 import {AlertRuleAggregations, IncidentRule, TimeWindow} from './types';
+import getMetricDisplayName from './utils/getMetricDisplayName';
 
 const DEFAULT_METRIC = [AlertRuleAggregations.TOTAL];
 
@@ -89,8 +90,14 @@ class RuleForm extends React.Component<Props> {
                 label: t('Metric'),
                 help: t('Choose which metric to trigger on'),
                 choices: [
-                  [AlertRuleAggregations.UNIQUE_USERS, 'Users Affected'],
-                  [AlertRuleAggregations.TOTAL, 'Events'],
+                  [
+                    AlertRuleAggregations.UNIQUE_USERS,
+                    getMetricDisplayName(AlertRuleAggregations.UNIQUE_USERS),
+                  ],
+                  [
+                    AlertRuleAggregations.TOTAL,
+                    getMetricDisplayName(AlertRuleAggregations.TOTAL),
+                  ],
                 ],
                 required: true,
                 setValue: value => (value && value.length ? value[0] : value),
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/list.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/list.tsx
index e2f138f32a..059697290e 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/list.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/list.tsx
@@ -72,7 +72,7 @@ export default class TriggersList extends React.Component<Props> {
                       priority="danger"
                     >
                       <Button
-                        priority="danger"
+                        priority="default"
                         size="small"
                         aria-label={t('Delete Trigger')}
                         icon="icon-trash"
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/utils/getMetricDisplayName.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/utils/getMetricDisplayName.tsx
new file mode 100644
index 0000000000..a42efa5645
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/utils/getMetricDisplayName.tsx
@@ -0,0 +1,15 @@
+import {t} from 'app/locale';
+
+import {AlertRuleAggregations} from '../types';
+
+export default function getMetricDisplayName(metric: AlertRuleAggregations): string {
+  switch (metric) {
+    case AlertRuleAggregations.UNIQUE_USERS:
+      return t('Users Affected');
+    case AlertRuleAggregations.TOTAL:
+      return t('Events');
+
+    default:
+      return '';
+  }
+}
diff --git a/tests/js/spec/views/settings/incidentRules/list.spec.jsx b/tests/js/spec/views/settings/incidentRules/list.spec.jsx
index 4797ba8b55..bbb8b953cb 100644
--- a/tests/js/spec/views/settings/incidentRules/list.spec.jsx
+++ b/tests/js/spec/views/settings/incidentRules/list.spec.jsx
@@ -22,5 +22,8 @@ describe('Incident Rules List', function() {
 
     expect(req).toHaveBeenCalled();
     expect(wrapper.find('RuleLink').text()).toEqual('My Incident Rule');
+    expect(wrapper.find('MetricName').text()).toEqual('Events');
+
+    expect(wrapper.find('Thresholds').text()).toEqual('70');
   });
 });
