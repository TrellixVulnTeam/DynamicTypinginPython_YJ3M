commit db2976e8681ee070f4039686c3a5943ef2b20416
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Dec 18 15:57:35 2019 -0800

    fix(ui): Fix input on `<CustomIgnoreCountModal>` (#16172)
    
    Dang, `<InputField>` was not in typescript or else it would have this... added a test as well

diff --git a/src/sentry/static/sentry/app/components/actions/ignore.jsx b/src/sentry/static/sentry/app/components/actions/ignore.jsx
index 6708bcfed0..528c0b4bdd 100644
--- a/src/sentry/static/sentry/app/components/actions/ignore.jsx
+++ b/src/sentry/static/sentry/app/components/actions/ignore.jsx
@@ -116,7 +116,7 @@ export default class IgnoreActions extends React.Component {
           onSelected={details => this.onCustomIgnore(details)}
           onCanceled={() => this.setState({modal: null})}
           label={t('Ignore this issue until it affects an additional\u2026')}
-          countLabel={t('Numbers of users')}
+          countLabel={t('Number of users')}
           countName="ignoreUserCount"
           windowName="ignoreUserWindow"
           windowChoices={this.getIgnoreWindows()}
diff --git a/src/sentry/static/sentry/app/components/customIgnoreCountModal.tsx b/src/sentry/static/sentry/app/components/customIgnoreCountModal.tsx
index 78a872608b..9e670c3ca5 100644
--- a/src/sentry/static/sentry/app/components/customIgnoreCountModal.tsx
+++ b/src/sentry/static/sentry/app/components/customIgnoreCountModal.tsx
@@ -74,7 +74,7 @@ export default class CustomIgnoreCountModal extends React.Component<Props, State
             name="count"
             type="number"
             value={count}
-            onChange={e => this.handleChange('count' as 'count', Number(e.target.value))}
+            onChange={val => this.handleChange('count' as 'count', Number(val))}
             required
             placeholder={t('e.g. 100')}
           />
@@ -85,7 +85,7 @@ export default class CustomIgnoreCountModal extends React.Component<Props, State
             label={t('Time window')}
             value={window}
             name="window"
-            onChange={v => this.handleChange('window' as 'window', v)}
+            onChange={val => this.handleChange('window' as 'window', val)}
             choices={windowChoices}
             placeholder={t('e.g. per hour')}
             allowClear
diff --git a/tests/js/spec/views/issueList/actions.spec.jsx b/tests/js/spec/views/issueList/actions.spec.jsx
index 206f889f91..857c7e7144 100644
--- a/tests/js/spec/views/issueList/actions.spec.jsx
+++ b/tests/js/spec/views/issueList/actions.spec.jsx
@@ -1,8 +1,9 @@
 import React from 'react';
-import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 
 import {IssueListActions} from 'app/views/issueList/actions';
 import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
+import {selectByLabel} from 'sentry-test/select';
 import SelectedGroupStore from 'app/stores/selectedGroupStore';
 
 describe('IssueListActions', function() {
@@ -218,6 +219,51 @@ describe('IssueListActions', function() {
           })
         );
       });
+
+      it('ignores selected items', function() {
+        const apiMock = MockApiClient.addMockResponse({
+          url: '/organizations/1337/issues/',
+          method: 'PUT',
+        });
+        jest
+          .spyOn(SelectedGroupStore, 'getSelectedIds')
+          .mockImplementation(() => new Set([3, 6, 9]));
+
+        wrapper.setState({allInQuerySelected: false, anySelected: true});
+        wrapper
+          .find('IgnoreActions MenuItem a')
+          .last()
+          .simulate('click');
+
+        wrapper
+          .find('CustomIgnoreCountModal input[label="Number of users"]')
+          .simulate('change', {target: {value: 300}});
+
+        selectByLabel(wrapper, 'per week', {
+          name: 'window',
+        });
+
+        wrapper
+          .find('CustomIgnoreCountModal Button[priority="primary"]')
+          .simulate('click');
+
+        expect(apiMock).toHaveBeenCalledWith(
+          expect.anything(),
+          expect.objectContaining({
+            query: {
+              id: [3, 6, 9],
+              project: [1],
+            },
+            data: {
+              status: 'ignored',
+              statusDetails: {
+                ignoreUserCount: 300,
+                ignoreUserWindow: 10080,
+              },
+            },
+          })
+        );
+      });
     });
   });
 
