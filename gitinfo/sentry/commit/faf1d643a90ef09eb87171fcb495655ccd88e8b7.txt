commit faf1d643a90ef09eb87171fcb495655ccd88e8b7
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Aug 13 11:41:38 2018 -0700

    fix(charts): Fix AreaChart and PieChart (#9308)

diff --git a/docs-ui/components/areaChart.stories.js b/docs-ui/components/areaChart.stories.js
index 4a6fdfe993..76749f76d2 100644
--- a/docs-ui/components/areaChart.stories.js
+++ b/docs-ui/components/areaChart.stories.js
@@ -8,25 +8,33 @@ import AreaChart from 'app/components/charts/areaChart';
 // eslint-disable-next-line
 storiesOf('Charts/AreaChart', module).add(
   'default',
-  withInfo('Stacked AreaChart with previous period')(() => (
-    <AreaChart
-      startDate={new Date()}
-      series={[
-        {
-          name: 'Handled',
-          data: [150, 300, 250, 600, 342, 800, 750],
-        },
-        {
-          name: 'Unhandled',
-          data: [50, 200, 150, 300, 102, 283, 341],
-        },
-      ]}
-      lines={[
-        {
-          name: 'Previous',
-          data: [650, 300, 350, 300, 400, 250, 200],
-        },
-      ]}
-    />
-  ))
+  withInfo('Stacked AreaChart with previous period')(() => {
+    const TOTAL = 6;
+    const NOW = new Date().getTime();
+    const getValue = () => Math.round(Math.random() * 1000);
+    const getDate = num => NOW - (TOTAL - num) * 86400000;
+    const getData = num =>
+      [...Array(num)].map((v, i) => ({value: getValue(), name: getDate(i)}));
+    return (
+      <div>
+        <AreaChart
+          style={{height: 250}}
+          series={[
+            {
+              seriesName: 'Handled',
+              data: getData(7),
+            },
+            {
+              seriesName: 'Unhandled',
+              data: getData(7),
+            },
+          ]}
+          previousPeriod={{
+            seriesName: 'Previous',
+            data: getData(7),
+          }}
+        />
+      </div>
+    );
+  })
 );
diff --git a/docs-ui/components/panelChart.stories.js b/docs-ui/components/panelChart.stories.js
index c784d6de82..c484e15a09 100644
--- a/docs-ui/components/panelChart.stories.js
+++ b/docs-ui/components/panelChart.stories.js
@@ -11,63 +11,58 @@ import PieChart from 'app/components/charts/pieChart';
 storiesOf('Charts/PanelChart', module).add(
   'default',
   withInfo('PanelChart')(() => {
-    const browsers = [
-      {
-        name: 'Chrome',
-        value: 3500,
-      },
-      {
-        name: 'Firefox',
-        value: 650,
-      },
-      {
-        name: 'Safari',
-        value: 250,
-      },
-    ];
+    const TOTAL = 6;
+    const NOW = new Date().getTime();
+    const getValue = () => Math.round(Math.random() * 1000);
+    const getDate = num => NOW - (TOTAL - num) * 86400000;
+    const getData = num =>
+      [...Array(num)].map((v, i) => ({value: getValue(), name: getDate(i)}));
+    const browsers = {
+      seriesName: '',
+      data: [
+        {
+          name: 'Chrome',
+          value: 3500,
+        },
+        {
+          name: 'Firefox',
+          value: 650,
+        },
+        {
+          name: 'Safari',
+          value: 250,
+        },
+      ],
+    };
+
     const errorSeries = [
       {
-        name: 'Handled',
-        data: [150, 300, 250, 600, 342, 800, 750],
+        seriesName: 'Handled',
+        data: getData(7),
       },
       {
-        name: 'Unhandled',
-        data: [50, 200, 150, 300, 102, 283, 341],
+        seriesName: 'Unhandled',
+        data: getData(7),
       },
     ];
     const previousPeriodData = {
-      name: 'Previous',
-      data: [650, 300, 350, 300, 400, 250, 200],
+      seriesName: 'Previous',
+      data: getData(7),
     };
 
     return (
       <React.Fragment>
-        <PanelChart
-          title="Pie Chart"
-          startDate={new Date()}
-          name="Browsers"
-          series={browsers}
-        >
-          <PieChart data={browsers} />
-          {({series, title, ...props}) => (
-            <PieChart {...props} name={title} data={series} />
-          )}
+        <PanelChart title="Pie Chart" name="Browsers" series={[browsers]}>
+          {({...props}) => <PieChart {...props} />}
         </PanelChart>
 
         <PanelChart
           title="Area Chart"
-          startDate={new Date()}
           name="Browsers"
           series={errorSeries}
           previousPeriod={previousPeriodData}
         >
-          {({title, previousPeriod, ...props}) => (
-            <AreaChart
-              {...props}
-              lines={(previousPeriod && [previousPeriod]) || []}
-              name={title}
-            />
-          )}
+          {({...props}) => <AreaChart {...props} />}
         </PanelChart>
       </React.Fragment>
     );
diff --git a/src/sentry/static/sentry/app/components/charts/areaChart.jsx b/src/sentry/static/sentry/app/components/charts/areaChart.jsx
index 87e67c87b8..6e043da2d7 100644
--- a/src/sentry/static/sentry/app/components/charts/areaChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/areaChart.jsx
@@ -1,8 +1,8 @@
-import PropTypes from 'prop-types';
-import React from 'react';
 import moment from 'moment';
+import React from 'react';
 
 import theme from 'app/utils/theme';
+import SentryTypes from 'app/sentryTypes';
 
 import AreaSeries from './series/areaSeries';
 import BaseChart from './baseChart';
@@ -12,54 +12,36 @@ import YAxis from './components/yAxis';
 
 class AreaChart extends React.Component {
   static propTypes = {
-    // We passthrough all props exception `options`
     ...BaseChart.propTypes,
 
-    startDate: PropTypes.string,
-    series: PropTypes.arrayOf(
-      PropTypes.shape({
-        name: PropTypes.string,
-        data: PropTypes.arrayOf(PropTypes.number),
-      })
-    ),
     /**
-     * Other line series to display
+     * Display previous period as a line
      */
-    lines: PropTypes.arrayOf(
-      PropTypes.shape({
-        name: PropTypes.string,
-        data: PropTypes.arrayOf(PropTypes.number),
-      })
-    ),
+    previousPeriod: SentryTypes.SeriesUnit,
   };
 
   render() {
-    const {series, lines, startDate, ...props} = this.props;
+    const {series, previousPeriod, ...props} = this.props;
     if (!series.length) return null;
 
-    const numDates = series[0].data.length;
-    const DATES = [...Array(numDates)].map((value, i) =>
-      moment(startDate)
-        .add(i, 'day')
-        .format('MMM D')
-    );
-
     return (
       <BaseChart
         {...props}
         options={{
           xAxis: XAxis({
-            type: 'category',
-            data: DATES,
+            type: 'time',
             boundaryGap: false,
+            axisLabel: {
+              formatter: (value, index) => moment(value).format('MMM D'),
+            },
           }),
           yAxis: YAxis({}),
           series: [
             ...series.map((s, i) =>
               AreaSeries({
                 stack: 'test',
-                name: s.name,
-                data: s.data,
+                name: s.seriesName,
+                data: s.data.map(({name, value}) => [name, value]),
                 lineStyle: {
                   color: '#fff',
                   width: 2,
@@ -70,16 +52,15 @@ class AreaChart extends React.Component {
                 },
               })
             ),
-            ...lines.map(s =>
+            previousPeriod &&
               LineSeries({
-                name: s.name,
-                data: s.data,
+                name: previousPeriod.seriesName,
+                data: previousPeriod.data.map(({name, value}) => [name, value]),
                 lineStyle: {
                   color: theme.gray1,
                   type: 'dotted',
                 },
-              })
-            ),
+              }),
           ],
         }}
       />
diff --git a/src/sentry/static/sentry/app/components/charts/baseChart.jsx b/src/sentry/static/sentry/app/components/charts/baseChart.jsx
index fb2c78d139..fc90afac66 100644
--- a/src/sentry/static/sentry/app/components/charts/baseChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/baseChart.jsx
@@ -60,8 +60,8 @@ class BaseChart extends React.Component {
   };
 
   static defaultProps = {
-    height: null,
-    width: null,
+    height: 200,
+    width: 'auto',
     renderer: 'svg',
     notMerge: true,
     lazyUpdate: false,
diff --git a/src/sentry/static/sentry/app/components/charts/panelChart/legend.jsx b/src/sentry/static/sentry/app/components/charts/panelChart/legend.jsx
index 9c47b77e86..8f963c8644 100644
--- a/src/sentry/static/sentry/app/components/charts/panelChart/legend.jsx
+++ b/src/sentry/static/sentry/app/components/charts/panelChart/legend.jsx
@@ -1,29 +1,21 @@
 import {Flex} from 'grid-emotion';
-import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
 import CircleIndicator from 'app/components/circleIndicator';
+import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
 
 const Legend = styled(
   class Legend extends React.Component {
     static propTypes = {
-      series: PropTypes.arrayOf(
-        PropTypes.shape({
-          name: PropTypes.string,
-          data: PropTypes.arrayOf(PropTypes.number),
-        })
-      ),
+      series: SentryTypes.Series,
 
       /**
        * Previous Period
        */
-      previousPeriod: PropTypes.shape({
-        name: PropTypes.string,
-        data: PropTypes.arrayOf(PropTypes.number),
-      }),
+      previousPeriod: SentryTypes.SeriesUnit,
     };
 
     render() {
@@ -34,16 +26,16 @@ const Legend = styled(
           {previousPeriod && (
             <SeriesGroup>
               <DottedLineIndicator />
-              <SeriesName>{previousPeriod.name}</SeriesName>
+              <SeriesName>{previousPeriod.seriesName}</SeriesName>
             </SeriesGroup>
           )}
 
           {series &&
-            series.map((serie, i) => {
+            series.map((seriesUnit, i) => {
               return (
-                <SeriesGroup key={serie.name}>
+                <SeriesGroup key={seriesUnit.seriesName}>
                   <CircleIndicator color={theme.charts.colors[i]} />
-                  <SeriesName>{serie.name}</SeriesName>
+                  <SeriesName>{seriesUnit.seriesName}</SeriesName>
                 </SeriesGroup>
               );
             })}
diff --git a/src/sentry/static/sentry/app/components/charts/pieChart.jsx b/src/sentry/static/sentry/app/components/charts/pieChart.jsx
index 79a6768264..29dbf5b841 100644
--- a/src/sentry/static/sentry/app/components/charts/pieChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/pieChart.jsx
@@ -1,4 +1,3 @@
-import PropTypes from 'prop-types';
 import React from 'react';
 
 import PieSeries from './series/pieSeries';
@@ -8,20 +7,18 @@ class PieChart extends React.Component {
   static propTypes = {
     // We passthrough all props exception `options`
     ...BaseChart.propTypes,
-
-    name: PropTypes.string,
-
-    data: PropTypes.arrayOf(
-      PropTypes.shape({
-        name: PropTypes.string,
-        value: PropTypes.number,
-      })
-    ),
   };
 
   render() {
-    const {name, data, ...props} = this.props;
-    if (!data.length) return null;
+    const {series, ...props} = this.props;
+    if (!series || !series.length) return null;
+    if (series.length > 1) {
+      // eslint-disable-next-line no-console
+      console.warn('PieChart only uses the first series!');
+    }
+
+    // Note, we only take the first series unit!
+    const [firstSeries] = series;
 
     return (
       <BaseChart
@@ -29,8 +26,8 @@ class PieChart extends React.Component {
         options={{
           series: [
             PieSeries({
-              name,
-              data,
+              name: firstSeries.seriesName,
+              data: firstSeries.data,
               avoidLabelOverlap: false,
               label: {
                 normal: {
diff --git a/tests/js/spec/components/charts/panelChart/index.spec.jsx b/tests/js/spec/components/charts/panelChart/index.spec.jsx
index 9602d966ba..4438cc879d 100644
--- a/tests/js/spec/components/charts/panelChart/index.spec.jsx
+++ b/tests/js/spec/components/charts/panelChart/index.spec.jsx
@@ -12,16 +12,16 @@ describe('PanelChart', function() {
           title="Panel Chart"
           series={[
             {
-              name: 'Foo',
+              seriesName: 'Foo',
               data: [1, 2, 3, 4],
             },
             {
-              name: 'Bar',
+              seriesName: 'Bar',
               data: [2, 3, 4, 5],
             },
           ]}
           previousPeriod={{
-            name: 'Previous',
+            seriesName: 'Previous',
             data: [1, 2, 3, 4],
           }}
         >
@@ -70,16 +70,16 @@ describe('PanelChart', function() {
       <PanelChart
         series={[
           {
-            name: 'Foo',
+            seriesName: 'Foo',
             data: [1, 2, 3, 4],
           },
           {
-            name: 'Bar',
+            seriesName: 'Bar',
             data: [2, 3, 4, 5],
           },
         ]}
         previousPeriod={{
-          name: 'Previous',
+          seriesName: 'Previous',
           data: [1, 2, 3, 4],
         }}
       >
