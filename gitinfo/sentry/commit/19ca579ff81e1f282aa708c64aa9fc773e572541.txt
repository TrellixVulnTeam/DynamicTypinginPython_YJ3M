commit 19ca579ff81e1f282aa708c64aa9fc773e572541
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 30 23:54:19 2010 -0700

    Rename project to django-sentry

diff --git a/MANIFEST.in b/MANIFEST.in
index 5e34fbdbf9..0fb78e9d33 100644
--- a/MANIFEST.in
+++ b/MANIFEST.in
@@ -1,3 +1,3 @@
 include setup.py README.rst MANIFEST.in LICENSE
-recursive-include dblog/templates *
+recursive-include sentry/templates *
 global-exclude *~
\ No newline at end of file
diff --git a/README.rst b/README.rst
index f63a7742d5..3bc0229231 100644
--- a/README.rst
+++ b/README.rst
@@ -1,5 +1,5 @@
 --------------
-django-db-log2
+django-sentry
 --------------
 
 Logs Django exceptions to your database handler.
@@ -12,7 +12,7 @@ Upgrading
 
 If you use South migrations, simply run::
 
-	python manage.py migrate dblog
+	python manage.py migrate sentry
 
 If you don't use South, then start.
 
@@ -22,20 +22,20 @@ Install
 
 The easiest way to install the package is via pip::
 
-	pip install django-db-log2 --upgrade
+	pip install django-sentry --upgrade
 
 OR, if you're not quite on the same page (work on that), with setuptools::
 
-	easy_install django-db-log2
+	easy_install django-sentry
 
-Once installed, update your settings.py and add dblog to ``INSTALLED_APPS``::
+Once installed, update your settings.py and add sentry to ``INSTALLED_APPS``::
 
 	INSTALLED_APPS = (
 	    'django.contrib.admin',
 	    'django.contrib.auth',
 	    'django.contrib.contenttypes',
 	    'django.contrib.sessions',
-	    'dblog',
+	    'sentry',
 	    ...
 	)
 
@@ -45,7 +45,7 @@ Finally, run ``python manage.py syncdb`` to create the database tables.
 Configuration
 =============
 
-Several options exist to configure django-db-log2 via your ``settings.py``:
+Several options exist to configure django-sentry via your ``settings.py``:
 
 ######################
 DBLOG_CATCH_404_ERRORS
@@ -55,7 +55,7 @@ Enable catching of 404 errors in the logs. Default value is ``False``::
 
 	DBLOG_CATCH_404_ERRORS = True
 
-You can skip other custom exception types by adding a ``skip_dblog = True`` attribute to them.
+You can skip other custom exception types by adding a ``skip_sentry = True`` attribute to them.
 
 ####################
 DBLOG_DATABASE_USING
@@ -69,7 +69,7 @@ Use a secondary database to store error logs. This is useful if you have several
 You should also enable the ``DBLogRouter`` to avoid things like extraneous table creation::
 
 	DATABASE_ROUTERS = [
-		'dblog.routers.DBLogRouter',
+		'sentry.routers.DBLogRouter',
 		...
 	]
 
@@ -86,13 +86,13 @@ Enables showing full embedded (enhanced) tracebacks within the administration fo
 	# Disable embedded interactive tracebacks in the admin
 	DBLOG_ENHANCED_TRACEBACKS = False
 
-* Note: Even if you disable displaying of enhanced tracebacks, dblog will still store the entire exception stacktrace.
+* Note: Even if you disable displaying of enhanced tracebacks, sentry will still store the entire exception stacktrace.
 
 #############
 DBLOG_LOGGING
 #############
 
-Enabling this setting will turn off automatic database logging within the exception handler, and instead send all exceptions to the named logger ``dblog``. Use this in conjuction with ``dblog.handlers.DBLogHandler`` or your own handler to tweak how logging is dealt with.
+Enabling this setting will turn off automatic database logging within the exception handler, and instead send all exceptions to the named logger ``sentry``. Use this in conjuction with ``sentry.handlers.DBLogHandler`` or your own handler to tweak how logging is dealt with.
 
 A good example use case for this, is if you want to write to something like a syslog ahead of time, and later process that into the database with another tool.
 
@@ -103,12 +103,12 @@ Integration with ``logging``
 django-db-log supports the ability to directly tie into the ``logging`` module. To use it simply add ``DBLogHandler`` to your logger::
 
 	import logging
-	from dblog.handlers import DBLogHandler
+	from sentry.handlers import DBLogHandler
 	
 	logging.getLogger().addHandler(DBLogHandler())
 
-	# Add StreamHandler to dblog's default so you can catch missed exceptions
-	logging.getLogger('dblog').addHandler(logging.StreamHandler())
+	# Add StreamHandler to sentry's default so you can catch missed exceptions
+	logging.getLogger('sentry').addHandler(logging.StreamHandler())
 
 You can also use the ``exc_info`` and ``extra=dict(url=foo)`` arguments on your ``log`` methods. This will store the appropriate information and allow django-db-log to render it based on that information:
 
@@ -118,28 +118,28 @@ You can also use the ``exc_info`` and ``extra=dict(url=foo)`` arguments on your
 Usage
 =====
 
-Set up a viewer server (or use your existing application server) and add dblog to your INSTALLED_APPS and your included URLs::
+Set up a viewer server (or use your existing application server) and add sentry to your INSTALLED_APPS and your included URLs::
 
 	# urls.py
 	urlpatterns = patterns('',
 	    (r'^admin/', include(admin.site.urls)),
-	    (r'^dblog/', include('dblog.urls')),
+	    (r'^sentry/', include('sentry.urls')),
 	)
 
-Now enjoy your beautiful new error tracking at ``/dblog/``.
+Now enjoy your beautiful new error tracking at ``/sentry/``.
 
 For the technical, here's some further docs:
 
 If you wish to access these within your own views and models, you may do so via the standard model API::
 
-	from dblog.models import Message, GroupedMessage
+	from sentry.models import Message, GroupedMessage
 	
 	# Pull the last 10 unresolved errors.
 	GroupedMessage.objects.filter(status=0).order_by('-last_seen')[0:10]
 
 You can also record errors outside of handler if you want::
 
-	from dblog.models import Message
+	from sentry.models import Message
 	
 	try:
 		...
@@ -148,7 +148,7 @@ You can also record errors outside of handler if you want::
 
 If you wish to log normal messages (useful for non-``logging`` integration)::
 
-	from dblog.models import Message
+	from sentry.models import Message
 	import logging
 	
 	Message.objects.create_from_text('Message Message'[, level=logging.WARNING, url=None])
@@ -162,7 +162,7 @@ Both the ``url`` and ``level`` parameters are optional. ``level`` should be one
 * ``logging.FATAL``
 
 If you have a custom exception class, similar to Http404, or something else you don't want to log,
-you can also add ``skip_dblog = True`` to your exception class or instance, and dblog will simply ignore
+you can also add ``skip_sentry = True`` to your exception class or instance, and sentry will simply ignore
 the error.
 
 =====
diff --git a/dblog/handlers.py b/dblog/handlers.py
deleted file mode 100644
index 2809ca1c58..0000000000
--- a/dblog/handlers.py
+++ /dev/null
@@ -1,7 +0,0 @@
-import logging
-
-class DBLogHandler(logging.Handler):
-    def emit(self, record):
-        from dblog.models import Message
-
-        Message.objects.create_from_record(record)
\ No newline at end of file
diff --git a/dblog/templates/admin/dblog/message/change_list.html b/dblog/templates/admin/dblog/message/change_list.html
deleted file mode 100644
index a553c0b150..0000000000
--- a/dblog/templates/admin/dblog/message/change_list.html
+++ /dev/null
@@ -1 +0,0 @@
-{% extends "admin/dblog/groupedmessage/change_list.html" %}
diff --git a/example_project/fixtures/sample.json b/example_project/fixtures/sample.json
index 6bb66fc14a..29c59d20f2 100644
--- a/example_project/fixtures/sample.json
+++ b/example_project/fixtures/sample.json
@@ -8,14 +8,14 @@
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
       "times_seen": 10, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "last_seen": "2010-08-30 18:38:13", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 2
   }, 
   {
@@ -27,14 +27,14 @@
       "class_name": "SyntaxError", 
       "checksum": "d275d457361cb3b2743154b71558798d", 
       "times_seen": 1, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise NotImplemented\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise NotImplemented\n\nSyntaxError: None\n", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "last_seen": "2010-08-30 18:38:20", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 3
   }, 
   {
@@ -46,14 +46,14 @@
       "class_name": "TypeError", 
       "checksum": "70cdff7e81b9f17710b7c98c323f18ad", 
       "times_seen": 6, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "last_seen": "2010-08-30 18:38:22", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NotImplementedType", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 4
   }, 
   {
@@ -65,14 +65,14 @@
       "class_name": "TypeError", 
       "checksum": "0edb43b51699ce88eed908b340feb17f", 
       "times_seen": 1, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 239, in wrapper\n    return self.admin_site.admin_view(view)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/views/decorators/cache.py\", line 69, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/sites.py\", line 190, in inner\n    return view(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 21, in _wrapper\n    return decorator(bound_func)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 17, in bound_func\n    return func(self, *args2, **kwargs2)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 968, in changelist_view\n    self.date_hierarchy, self.search_fields, self.list_select_related, self.list_per_page, self.list_editable, self)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 66, in __init__\n    self.filter_specs, self.has_filters = self.get_filters(request)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 74, in get_filters\n    spec = FilterSpec.create(f, request, self.params, self.model, self.model_admin)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/filterspecs.py\", line 29, in create\n    return factory(f, request, params, model, model_admin)\n\n  File \"/Users/dcramer/Development/django-db-log/dblog/admin.py\", line 59, in __init__\n    raise\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n", 
-      "url": "http://localhost:8000/admin/dblog/groupedmessage/", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 239, in wrapper\n    return self.admin_site.admin_view(view)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/views/decorators/cache.py\", line 69, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/sites.py\", line 190, in inner\n    return view(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 21, in _wrapper\n    return decorator(bound_func)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 17, in bound_func\n    return func(self, *args2, **kwargs2)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 968, in changelist_view\n    self.date_hierarchy, self.search_fields, self.list_select_related, self.list_per_page, self.list_editable, self)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 66, in __init__\n    self.filter_specs, self.has_filters = self.get_filters(request)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 74, in get_filters\n    spec = FilterSpec.create(f, request, self.params, self.model, self.model_admin)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/filterspecs.py\", line 29, in create\n    return factory(f, request, params, model, model_admin)\n\n  File \"/Users/dcramer/Development/django-db-log/sentry/admin.py\", line 59, in __init__\n    raise\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n", 
+      "url": "http://localhost:8000/admin/sentry/groupedmessage/", 
       "logger": "root", 
       "last_seen": "2010-07-22 20:14:18", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NoneType", 
       "view": ""
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 1
   }, 
   {
@@ -84,14 +84,14 @@
       "class_name": "TemplateSyntaxError", 
       "checksum": "c3ef95ded78c0ce10ce433872f012016", 
       "times_seen": 1, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 16, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 16, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "last_seen": "2010-08-30 20:44:39", 
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 5
   }, 
   {
@@ -103,14 +103,14 @@
       "class_name": "NameError", 
       "checksum": "8dbca8373fcd0f2c5c804d36873958da", 
       "times_seen": 2, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 17, in index\n    m.score = int(score)\n\nNameError: global name 'score' is not defined\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 17, in index\n    m.score = int(score)\n\nNameError: global name 'score' is not defined\n", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "last_seen": "2010-08-30 20:46:00", 
       "message": "global name 'score' is not defined", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 6
   }, 
   {
@@ -122,14 +122,14 @@
       "class_name": "NameError", 
       "checksum": "a468dbdc69dd0768e435318c488886b3", 
       "times_seen": 1, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 17, in index\n    m.score = int(m.score)\n\nNameError: global name 'score' is not defined\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 17, in index\n    m.score = int(m.score)\n\nNameError: global name 'score' is not defined\n", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "last_seen": "2010-08-30 20:46:03", 
       "message": "global name 'score' is not defined", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 7
   }, 
   {
@@ -141,14 +141,14 @@
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
       "times_seen": 9, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "last_seen": "2010-08-30 20:47:06", 
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 8
   }, 
   {
@@ -160,14 +160,14 @@
       "class_name": "NameError", 
       "checksum": "782d41402ee4b71d9856aa32a42887ea", 
       "times_seen": 1, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    print log(m.score)\n\nNameError: global name 'log' is not defined\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    print log(m.score)\n\nNameError: global name 'log' is not defined\n", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "last_seen": "2010-08-30 20:51:23", 
       "message": "global name 'log' is not defined", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 9
   }, 
   {
@@ -176,15 +176,15 @@
       "level": 40, 
       "class_name": "ValueError", 
       "checksum": "53e723818e8a3f75b9f6bbdd44aebbb9", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
       "datetime": "2010-08-30 18:32:24", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x1038282d0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "yo dude", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 2
   }, 
   {
@@ -193,15 +193,15 @@
       "level": 40, 
       "class_name": "ValueError", 
       "checksum": "53e723818e8a3f75b9f6bbdd44aebbb9", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
       "datetime": "2010-08-30 18:32:25", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x103843cd0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "yo dude", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 3
   }, 
   {
@@ -210,15 +210,15 @@
       "level": 40, 
       "class_name": "ValueError", 
       "checksum": "53e723818e8a3f75b9f6bbdd44aebbb9", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
       "datetime": "2010-08-30 18:32:25", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x1038282d0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "yo dude", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 4
   }, 
   {
@@ -227,15 +227,15 @@
       "level": 40, 
       "class_name": "ValueError", 
       "checksum": "53e723818e8a3f75b9f6bbdd44aebbb9", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
       "datetime": "2010-08-30 18:32:25", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x101f74bd0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "yo dude", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 5
   }, 
   {
@@ -244,15 +244,15 @@
       "level": 40, 
       "class_name": "ValueError", 
       "checksum": "53e723818e8a3f75b9f6bbdd44aebbb9", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise ValueError('yo dude')\n\nValueError: yo dude\n", 
       "datetime": "2010-08-30 18:32:25", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x101f74bd0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "yo dude", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 6
   }, 
   {
@@ -261,15 +261,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:11", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x10277e050>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 7
   }, 
   {
@@ -278,15 +278,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:12", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x103826750>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 8
   }, 
   {
@@ -295,15 +295,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:12", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x103826b50>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 9
   }, 
   {
@@ -312,15 +312,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:12", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x10277e0d0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 10
   }, 
   {
@@ -329,15 +329,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:13", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x1038268d0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 11
   }, 
   {
@@ -346,15 +346,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:13", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x1038266d0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 12
   }, 
   {
@@ -363,15 +363,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:13", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x1038268d0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 13
   }, 
   {
@@ -380,15 +380,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:13", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x103826c50>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 14
   }, 
   {
@@ -397,15 +397,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:13", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x10277e0d0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 15
   }, 
   {
@@ -414,15 +414,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "f4078a8c2c5b192f309105a51e357d2f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise SyntaxError\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:13", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x103826850>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 16
   }, 
   {
@@ -431,15 +431,15 @@
       "level": 40, 
       "class_name": "SyntaxError", 
       "checksum": "d275d457361cb3b2743154b71558798d", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise NotImplemented\n\nSyntaxError: None\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise NotImplemented\n\nSyntaxError: None\n", 
       "datetime": "2010-08-30 18:38:20", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x1038541d0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "None", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 17
   }, 
   {
@@ -448,15 +448,15 @@
       "level": 40, 
       "class_name": "TypeError", 
       "checksum": "70cdff7e81b9f17710b7c98c323f18ad", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
       "datetime": "2010-08-30 18:38:21", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x102680bd0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NotImplementedType", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 19
   }, 
   {
@@ -465,15 +465,15 @@
       "level": 40, 
       "class_name": "TypeError", 
       "checksum": "70cdff7e81b9f17710b7c98c323f18ad", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
       "datetime": "2010-08-30 18:38:21", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x10270f550>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NotImplementedType", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 20
   }, 
   {
@@ -482,15 +482,15 @@
       "level": 40, 
       "class_name": "TypeError", 
       "checksum": "70cdff7e81b9f17710b7c98c323f18ad", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
       "datetime": "2010-08-30 18:38:21", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x10270fa50>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NotImplementedType", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 21
   }, 
   {
@@ -499,15 +499,15 @@
       "level": 40, 
       "class_name": "TypeError", 
       "checksum": "70cdff7e81b9f17710b7c98c323f18ad", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
       "datetime": "2010-08-30 18:38:22", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x102680bd0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NotImplementedType", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 22
   }, 
   {
@@ -516,15 +516,15 @@
       "level": 40, 
       "class_name": "TypeError", 
       "checksum": "70cdff7e81b9f17710b7c98c323f18ad", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
       "datetime": "2010-08-30 18:38:22", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x102735ed0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NotImplementedType", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 23
   }, 
   {
@@ -533,15 +533,15 @@
       "level": 40, 
       "class_name": "TypeError", 
       "checksum": "70cdff7e81b9f17710b7c98c323f18ad", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 8, in index\n    raise NotImplemented\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NotImplementedType\n", 
       "datetime": "2010-08-30 18:38:22", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x102746050>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NotImplementedType", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 24
   }, 
   {
@@ -550,7 +550,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "c3ef95ded78c0ce10ce433872f012016", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 16, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 16, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:44:39", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -558,7 +558,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 25
   }, 
   {
@@ -567,15 +567,15 @@
       "level": 40, 
       "class_name": "NameError", 
       "checksum": "8dbca8373fcd0f2c5c804d36873958da", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 17, in index\n    m.score = int(score)\n\nNameError: global name 'score' is not defined\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 17, in index\n    m.score = int(score)\n\nNameError: global name 'score' is not defined\n", 
       "datetime": "2010-08-30 20:46:00", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x101f4dbd0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "global name 'score' is not defined", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 26
   }, 
   {
@@ -584,15 +584,15 @@
       "level": 40, 
       "class_name": "NameError", 
       "checksum": "8dbca8373fcd0f2c5c804d36873958da", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 17, in index\n    m.score = int(score)\n\nNameError: global name 'score' is not defined\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 17, in index\n    m.score = int(score)\n\nNameError: global name 'score' is not defined\n", 
       "datetime": "2010-08-30 20:46:00", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x10382a1d0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "global name 'score' is not defined", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 27
   }, 
   {
@@ -601,15 +601,15 @@
       "level": 40, 
       "class_name": "NameError", 
       "checksum": "a468dbdc69dd0768e435318c488886b3", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 17, in index\n    m.score = int(m.score)\n\nNameError: global name 'score' is not defined\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 17, in index\n    m.score = int(m.score)\n\nNameError: global name 'score' is not defined\n", 
       "datetime": "2010-08-30 20:46:03", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"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\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x103848bd0>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "global name 'score' is not defined", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 28
   }, 
   {
@@ -618,7 +618,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:47:04", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -626,7 +626,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 29
   }, 
   {
@@ -635,7 +635,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:47:05", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -643,7 +643,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 30
   }, 
   {
@@ -652,7 +652,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:47:05", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -660,7 +660,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 31
   }, 
   {
@@ -669,7 +669,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:47:05", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -677,7 +677,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 32
   }, 
   {
@@ -686,7 +686,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:47:06", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -694,7 +694,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 33
   }, 
   {
@@ -703,7 +703,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:47:06", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -711,7 +711,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 34
   }, 
   {
@@ -720,7 +720,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:47:06", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -728,7 +728,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 35
   }, 
   {
@@ -737,7 +737,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:47:06", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -745,7 +745,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 36
   }, 
   {
@@ -754,7 +754,7 @@
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "56558a0917db2355790d922ceabc84f8", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    return render_to_response('dblog/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 282, in parse\n    compiled_result = compile_func(self, token)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/defaulttags.py\", line 687, in do_for\n    nodelist_loop = parser.parse(('empty', 'endfor',))\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 263, in parse\n    filter_expression = self.compile_filter(token.contents)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 357, in compile_filter\n    return FilterExpression(token, self)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 545, in __init__\n    raise TemplateSyntaxError(\"Could not parse the remainder: '%s' from '%s'\" % (token[upto:], token))\n\nTemplateSyntaxError: Could not parse the remainder: ' * 100' from 'message.score * 100'\n", 
       "datetime": "2010-08-30 20:47:06", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
@@ -762,7 +762,7 @@
       "message": "Could not parse the remainder: ' * 100' from 'message.score * 100'", 
       "view": "django.core.handlers.base.__init__"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 37
   }, 
   {
@@ -771,15 +771,15 @@
       "level": 40, 
       "class_name": "NameError", 
       "checksum": "782d41402ee4b71d9856aa32a42887ea", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/dblog/views.py\", line 19, in index\n    print log(m.score)\n\nNameError: global name 'log' is not defined\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-db-log2/sentry/views.py\", line 19, in index\n    print log(m.score)\n\nNameError: global name 'log' is not defined\n", 
       "datetime": "2010-08-30 20:51:23", 
       "url": "http://localhost:8000/", 
       "logger": "root", 
       "data": "{\"COOKIES\": {\"csrftoken\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\"}, \"exc\": \"eJztWulz2koS/66/YqreByABXSCuOKkigG02GDlIxsnLvlUNaAA9C0nRYeO8yv++3SMB4nCc1F61VaZSWJo+pqenp3v6F4puoAgTy5omjhs7nmUJgSrQohtUhcnC9afUJR5dMVJw/UWBOBHx/JjYbO54zBaCmkCRVxOKdlAXjMI88Wax43sFIWiAPIutkEWB70VMCJpCZBSCkFkz34vZOgaelgDCiixMyMHnN9IJAveR3Dvsgawc23bZAw1BiaII9Ih77oc5JmvF4qVvE8cjEXPnooVKrB29DVrUE1rws7GWvD1WWAzZ14RFcZnMqOtO6exu92TRcBHlXu8ecKAEM1WfmMmZbydDg2pPsKVGxUnokZ0nFQ24TwjE4SPqqgsUPH1PwwhcrDS4j5v8uyVM2HrGAtyiCDZaBiVnK99OXNhg+0/qLXxx5odM3HEVyDz0V6Qg3UQsjCR7FkI0hJJ474RxQl3m3cOgE31NIsl1plLwCK7yVLEuRU7MKgE4gy4YsHDlEiqXdsrF4HFWeAeGKGkcqSoYCDY9H3hqNZOoCZO9TQCSxuNXrWccEIgRiyG2ObGJS94u1ZuLQ/rt0cjoxJ/+yWYxoTGR14osN1qqqsloYCtVVoVYPQoMIahiVJ5N/cSzSRZ93SicTyDwrrbcYhD6MxZFPB6JPycbM3YKxRlIiceiB3apc6pMwS4wrKpmhlVxle4cRmp7KwSlS+qBnjASH6KFI94aF4PLdORIbcOe2rjcqpZprQuTLOphsIGKUXycDv09kWWZXvTN9tnHhIWPPWcWt8lf39+VU8q1bjxF6ur6h0HfaP9VwBXH/h3zCm1SUOy5PW0yZUqb9pSpdXU2V2u2bNuaqjQ1pVX4nslf9c0OCGOSYNZ1MjWSqWX4sztIOGPm2SxEbVK8CiSXQkpaVnpf7Sr7KGXETAspdPWrq86oZ13pvT6KJJ6zVmW5mucYmf2RaQ37owvzEnmOaebnay6NWU0KXOp4OR5jfG6ly/2pFW4FewPjetj5fLiQcdC/+3Yu+eFCXLflHPvfOqML3TL6pjkYXRi4opshn5Kt6QrdBOGHuy1uDsNO9rwzHL7vdD9Yvc/DnjUcvB93xp+t6066XskPYsn14ZThCd9JXXTM/m3nszUAJ4zPO10+WfdiICmikuMamFa/NzD1MZI96vk72uXAMNGHY33IDQ1pxOwkyFl2qV9xtfvZJ0c3zWur0+32r01koxAPzoxibpHWK7e8976MV+5rHOXbhG9vvr6VxVZ5t218oFl2VpCzpMBblF9Jr/iYdnJKq3vZGYPHceqBoVeaTa1VUcpJPK80uVijnIpXT4v3R129B7uF8otvTlCG9ObSmJUje7Y8LTKEXb7pXKQb61VujDLLrD7g73a6l30r590VXVdgWW/lQ0Z9NOp3zYE+Qq47xoIKdZ17dsS2CeHtiX3788HMVVxCPkAFPJaWfhS3m0A9YLox+mMLFjjirFf+N8d1qaSJMile0ZnjxX60fENu3pABXCJcAmNEN8gnoshW3aq9IdwpJX59YLds+sGJJa1aFWuk+OHSvBqWievcMXLBZnd+iXSXUNsYaherDU1U1AYx6JyGTiqzMw3dnrocDBRvzPNKzt9wYExdHw5+5+5ZwCGJfd91vuVcONQvRp00lI9iWB/2rm97x1Eu9dg9c/1gxbw4q58Ve1qBcqjuhLeH9PnyPHW89v5ZlgLYhAXcK766zSrSpTzD0JmGNHyUzlHlgx/eRdI1r+7ifDMiTWBSLOQSVvyDCQ5eI/6eROHRO3/YvqXjh9zb10+Kgi/7HoAcdK6DG5KClCMMrq1x/+PNYNy3JoOxedOBHD7heTpM2CGfcQ2H4Fm+Hd163zFOpKZ9z+eEDQWZi+lelHBYm6XfX/Iv7Eu18UZZ5Yf++PIj7uohd/7l4Zfm+SXmH3HL+6wk54ZfDHTpoHjlNH02L/XRiRr1y2H7o2trezfhx5s+FEXDHGcJe0cZ9690s291ej1e4yCLQD6R80Uw49gkwDwB1BqmBfeZS527Bq5TOfLNyLrqDEbHwWh0xwMoB1lSSXIqIX9OIIVu0s022R5xXOtjbs1+Et4Qx7qpd9PKgXl5v6hnTIZ+bt52xnwevBcaLLyH7YSlk9Tl6N987TQu+0OukiebKY2Wedpwwmn5eYxLq3MD59vQux8Ob0LhdBnM72G/o5h5sKE5scnoyTsH3FWucHQds3BVmfmuH+4TcekX4w5nSu+XJnA6HnVP81ngCSOrnmojV+nNq+vegFsgQS8mzX3XxqC/voF/kezOVtX+x6/NTyvacP3Wcv4aPuZAqpiroJJLHObv3BA4JnCRkbpL+F7kloPl8mRVyTKVlaWy5+vDTvRWH3/QR9bpu9ee6E7GQk5RWlEPzg20dTmK1T1Pq7rZ/7R/54Gm41xry/lrLG9RWBj6sJ9tcuYHzCNzB9vTsygG/4XvCmUCHSsMPBS2fRrcOhQmv9vXgmLWQwh3QN4OnM1cGkX7bW7EAzYSIRLZMo4D8RxkbjORA3WOFyQx6ol4nyFaqD9roI76KCZrh+asEjd2shYQ1JxTN2InOOJlyKgNDCac9316mHiW783YaekkdK1otmQrpBdwNQdevU+THlCLSpnIpe/Y6DWzRq+1a6OFoMZxgQ2WQxzomdabxVWbMp0qTZCtZU17TcUmMfJdmABGEfA4G7MFW9+Mh+NsnBw2IWBtRIoj32Nt/CqRf0ioMsOTapowAY6NVujba/WnoIo8338ArMir38AVtUZmZpPjKZbjzX0YbXHcQZOFyVn8GDDsvLZAxwgM6WNYo7ym/BTGoSFKdRaHdMZwXw6irNpUZkoDu3UNsRA+dR4MSSEooCIcYgdaBodoDb5bGZKkIRyCGwCPGcRRl7nvERsRgjpaemrvgITIwz6iZ7lgOCRbIFaFSasKf2sc9IPyk0P96hqCUfX6MeyXOoz0N34rEwTH6o0nwLHfyGBO4iVLYcKQOtA+EuoRtpOHM0OcGJhCP1ksdxTQ2nxS6w6QKYM6G7E6nGUrnGPIwLmIUNDYelLjxuNlkkQMlNFYJDroDB8cHAwZN35/FlEIGvITGp9BPLc69mHPxinwdIcy/gz0yUqgRuUAI+Y/jF7EemG7/41nbgNY4Q0BiwlMwONoG14NyA+Q9uGhjuPxFMcaws8clgaHoR0bJSDp1aoaZDS1LjeFoCkjKR/LwNRUjsP0wF2bI7fz0qsDXPjVq2NkuKkKER7MZlVYgOk8ycIoLHTBYfGmtj9xIULf8Jugs2KRFTEojRIpBv5DsTh3fT8sgtmw/rjIAn+2TFOhB9QSqRCofTEXKYFMtS7LJfKaqKUyUURVw2elVCjD9PVchHyH983RK4l+COXXmj4WC5XUkjIpVLZqC6UvcluR/8CFbQ4WPG5OxIquLS4Fxdvx0kcMNLouflmJ6SuPaYxhWF0EMQE7EMV/lLjEs1xC0JK307Y2cX6SGQ5CCyN4kULjkKbwG1LnCqSKrRIxGaQ7GjPj0Yvpmmft9unBrp+4Nk/aAQ2z8xuyFcXNBHKBvCIQppuqlBmRLSQlgS0Z1tqqI7Sc+QaG0fOyqLa0Vqve1JpNSNxBKyvXLYjcrUuFAI8CnbREGR+zqgzXkBx2CyfgBbx9AW9fwNsX8PYFvH0Bb1/A2xfw9gW8fQFvX8DbF/D2Bbz9fwVvFbm26fU06AdzLS7S6kJKagj/g6ZWkREEKCpyiezp3ntJcUdFRpCgqJbIFiNt5x/3cNIUeThCShUFG+BiHZb5GGwEc487IJaskigmU0bgQFei+BGCk4cWi4gfgsIQLs92urT3EFc5JBInHPnxACsaFjtm4wQ4t5LNPaFuspkx//zoEzuxOavKvfKvLbWa6fgv7yj/iSLO++yG4s8TKY0WCALDimGgLsAbR30VpbGDtVZiEDp+6MSP5C2B7qCYgTz4u0llhyIpygZG2v4SEg23Yn/769JiwZ7ClUPiKJqI7SFkGl49o2IJ1eFPHaPFCZzyB9eXVCViyxEHIRVVgXVw7LGFbyq+PYs6qvh/JYpaReYd4KhV6ziKaF8eYQR/eDEYvsi7QtWEiFLxn2TnbPU=\", \"GET\": {}, \"url\": \"http://localhost:8000/\", \"META\": {\"RUN_MAIN\": \"true\", \"HTTP_COOKIE\": \"csrftoken=1dfdb8e1ba8dbe262cf24d0dd5218519\", \"WORKON_HOME\": \"/Users/dcramer/.virtualenvs\", \"__CF_USER_TEXT_ENCODING\": \"0x1F5:0:0\", \"PIP_RESPECT_VIRTUALENV\": \"true\", \"SERVER_SOFTWARE\": \"WSGIServer/0.1 Python/2.6.5\", \"TERM_PROGRAM_VERSION\": \"273\", \"REQUEST_METHOD\": \"GET\", \"LOGNAME\": \"dcramer\", \"USER\": \"dcramer\", \"PATH\": \"/Users/dcramer/.virtualenvs/disqus/bin:/opt/local/lib/postgresql83/bin/:/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\", \"QUERY_STRING\": \"\", \"HOME\": \"/Users/dcramer\", \"PS1\": \"(disqus)\\\\[\\\\e[37;1m\\\\][\\\\[\\\\e[33;1m\\\\]\\\\w\\\\[\\\\e[37;1m\\\\]\\\\[\\\\e[37;1m\\\\]]\\\\[\\\\e[0m\\\\] \", \"DISPLAY\": \"/tmp/launch-RpEkzF/org.x:0\", \"TERM_PROGRAM\": \"Apple_Terminal\", \"LANG\": \"en_US.UTF-8\", \"HTTP_ACCEPT_CHARSET\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\", \"TERM\": \"xterm-color\", \"Apple_PubSub_Socket_Render\": \"/tmp/launch-Dqd3eQ/Render\", \"TZ\": \"America/Chicago\", \"SERVER_NAME\": \"localhost\", \"REMOTE_ADDR\": \"127.0.0.1\", \"SHLVL\": \"1\", \"wsgi.url_scheme\": \"http\", \"LIBTOOLIZE\": \"glibtoolize\", \"PIP_REQUIRE_VIRTUALENV\": \"true\", \"TMPDIR\": \"/var/folders/PU/PUs0lcm3EQq8Xma7lo9hf++++TI/-Tmp-/\", \"SERVER_PORT\": \"8000\", \"HTTP_ACCEPT\": \"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\", \"SVN_EDITOR\": \"nano\", \"CONTENT_LENGTH\": \"\", \"PYTHONPATH\": \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/:\", \"SSH_AUTH_SOCK\": \"/tmp/launch-rbhpfv/Listeners\", \"VIRTUAL_ENV\": \"/Users/dcramer/.virtualenvs/disqus\", \"COMMAND_MODE\": \"unix2003\", \"wsgi.input\": \"<socket._fileobject object at 0x102f7e050>\", \"SHELL\": \"/bin/bash\", \"FALLBACK_DYLD_LIBRARY_PATH\": \"/opt/local/lib\", \"SCRIPT_NAME\": \"\", \"wsgi.multithread\": true, \"HTTP_CONNECTION\": \"keep-alive\", \"HTTP_CACHE_CONTROL\": \"max-age=0\", \"_\": \"./manage.py\", \"SERVER_PROTOCOL\": \"HTTP/1.1\", \"wsgi.version\": [1, 0], \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.127 Safari/533.4\", \"GATEWAY_INTERFACE\": \"CGI/1.1\", \"wsgi.run_once\": false, \"REMOTE_HOST\": \"\", \"OLDPWD\": \"/Users/dcramer/Development/django-db-log2\", \"wsgi.multiprocess\": false, \"HTTP_ACCEPT_LANGUAGE\": \"en-US,en;q=0.8\", \"HTTP_ACCEPT_ENCODING\": \"gzip,deflate,sdch\", \"HISTCONTROL\": \"erasedups\", \"PWD\": \"/Users/dcramer/Development/django-db-log2/example_project\", \"PIP_VIRTUALENV_BASE\": \"/Users/dcramer/.virtualenvs/\", \"DJANGO_SETTINGS_MODULE\": \"example_project.settings\", \"CONTENT_TYPE\": \"text/plain\", \"HTTP_HOST\": \"localhost:8000\", \"GIT_EDITOR\": \"nano\", \"wsgi.file_wrapper\": \"<class 'django.core.servers.basehttp.FileWrapper'>\", \"CSRF_COOKIE\": \"1dfdb8e1ba8dbe262cf24d0dd5218519\", \"wsgi.errors\": \"<open file '<stderr>', mode 'w' at 0x10024d1e0>\", \"PATH_INFO\": \"/\"}, \"POST\": {}}", 
       "message": "global name 'log' is not defined", 
-      "view": "dblog.views.index"
+      "view": "sentry.views.index"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 38
   }, 
   {
@@ -788,15 +788,15 @@
       "level": 40, 
       "class_name": "TypeError", 
       "checksum": "0edb43b51699ce88eed908b340feb17f", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 239, in wrapper\n    return self.admin_site.admin_view(view)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/views/decorators/cache.py\", line 69, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/sites.py\", line 190, in inner\n    return view(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 21, in _wrapper\n    return decorator(bound_func)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 17, in bound_func\n    return func(self, *args2, **kwargs2)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 968, in changelist_view\n    self.date_hierarchy, self.search_fields, self.list_select_related, self.list_per_page, self.list_editable, self)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 66, in __init__\n    self.filter_specs, self.has_filters = self.get_filters(request)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 74, in get_filters\n    spec = FilterSpec.create(f, request, self.params, self.model, self.model_admin)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/filterspecs.py\", line 29, in create\n    return factory(f, request, params, model, model_admin)\n\n  File \"/Users/dcramer/Development/django-db-log/dblog/admin.py\", line 59, in __init__\n    raise\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 239, in wrapper\n    return self.admin_site.admin_view(view)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/views/decorators/cache.py\", line 69, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/sites.py\", line 190, in inner\n    return view(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 21, in _wrapper\n    return decorator(bound_func)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 17, in bound_func\n    return func(self, *args2, **kwargs2)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 968, in changelist_view\n    self.date_hierarchy, self.search_fields, self.list_select_related, self.list_per_page, self.list_editable, self)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 66, in __init__\n    self.filter_specs, self.has_filters = self.get_filters(request)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 74, in get_filters\n    spec = FilterSpec.create(f, request, self.params, self.model, self.model_admin)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/filterspecs.py\", line 29, in create\n    return factory(f, request, params, model, model_admin)\n\n  File \"/Users/dcramer/Development/django-db-log/sentry/admin.py\", line 59, in __init__\n    raise\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n", 
       "datetime": "2010-07-22 20:14:18", 
-      "url": "http://localhost:8000/admin/dblog/groupedmessage/", 
+      "url": "http://localhost:8000/admin/sentry/groupedmessage/", 
       "logger": "root", 
       "data": "{}", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NoneType", 
       "view": ""
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 1
   }
 ]
diff --git a/example_project/settings.py b/example_project/settings.py
index e1cf7f41f8..8959cef6fa 100644
--- a/example_project/settings.py
+++ b/example_project/settings.py
@@ -16,7 +16,7 @@ PROJECT_ROOT = os.path.dirname(__file__)
 DATABASES = {
     'default': {
         'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
-        'NAME': 'dblog',                      # Or path to database file if using sqlite3.
+        'NAME': 'sentry',                      # Or path to database file if using sqlite3.
         'USER': 'postgres',                      # Not used with sqlite3.
         'PASSWORD': '',                  # Not used with sqlite3.
         'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
@@ -94,7 +94,7 @@ INSTALLED_APPS = (
     'django.contrib.sessions',
     'django.contrib.sites',
     'django.contrib.messages',
-    'dblog',
+    'sentry',
     'paging',
     'south',
     # Uncomment the next line to enable the admin:
diff --git a/example_project/urls.py b/example_project/urls.py
index caac41fed9..df985cd9f4 100644
--- a/example_project/urls.py
+++ b/example_project/urls.py
@@ -1,5 +1,5 @@
 from django.conf.urls.defaults import *
 
 urlpatterns = patterns('',
-    (r'^', include('dblog.urls')),
+    (r'^', include('sentry.urls')),
 )
diff --git a/runtests.py b/runtests.py
index b6bc2abd44..1fa87afeda 100644
--- a/runtests.py
+++ b/runtests.py
@@ -16,10 +16,10 @@ if not settings.configured:
             # Included to fix Disqus' test Django which solves IntegrityMessage case
             'django.contrib.contenttypes',
 
-            'dblog',
+            'sentry',
 
             # No fucking idea why I have to do this
-            'dblog.tests',
+            'sentry.tests',
         ],
         ROOT_URLCONF='',
     )
@@ -29,7 +29,7 @@ from django.test.simple import run_tests
 
 def runtests(*test_args):
     if not test_args:
-        test_args = ['dblog']
+        test_args = ['sentry']
     parent = dirname(abspath(__file__))
     sys.path.insert(0, parent)
     failures = run_tests(test_args, verbosity=1, interactive=True)
diff --git a/dblog/__init__.py b/sentry/__init__.py
similarity index 100%
rename from dblog/__init__.py
rename to sentry/__init__.py
diff --git a/dblog/feeds.py b/sentry/feeds.py
similarity index 87%
rename from dblog/feeds.py
rename to sentry/feeds.py
index 775474a9ce..3f33655064 100644
--- a/dblog/feeds.py
+++ b/sentry/feeds.py
@@ -4,7 +4,7 @@ from django.http import HttpResponse
 from django.utils import feedgenerator
 from django.utils.translation import ugettext_lazy as _
 
-from dblog.models import Message, GroupedMessage
+from sentry.models import Message, GroupedMessage
 
 import logging
 
@@ -38,7 +38,7 @@ class MessageFeed(object):
         return _('log messages')
 
     def get_link(self, request):
-        return reverse('admin:dblog_message_changelist')
+        return reverse('admin:sentry_message_changelist')
 
     def get_model(self, request):
         return Message
@@ -57,7 +57,7 @@ class MessageFeed(object):
         return '-datetime'
 
     def get_item_url(self, request, obj):
-        return reverse('admin:dblog_message_change', args=[obj.pk])
+        return reverse('admin:sentry_message_change', args=[obj.pk])
 
     def get_item_date(self, request, obj):
         return obj.datetime
@@ -67,7 +67,7 @@ class SummaryFeed(MessageFeed):
         return _('log summaries')
 
     def get_link(self, request):
-        return reverse('admin:dblog_groupedmessage_changelist')
+        return reverse('admin:sentry_groupedmessage_changelist')
 
     def get_model(self, request):
         return GroupedMessage
@@ -80,7 +80,7 @@ class SummaryFeed(MessageFeed):
         return '-last_seen'
 
     def get_item_url(self, request, obj):
-        return reverse('admin:dblog_groupedmessage_change', args=[obj.pk])
+        return reverse('admin:sentry_groupedmessage_change', args=[obj.pk])
 
     def get_item_date(self, request, obj):
         return obj.last_seen
\ No newline at end of file
diff --git a/sentry/handlers.py b/sentry/handlers.py
new file mode 100644
index 0000000000..768d09bf7f
--- /dev/null
+++ b/sentry/handlers.py
@@ -0,0 +1,7 @@
+import logging
+
+class DBLogHandler(logging.Handler):
+    def emit(self, record):
+        from sentry.models import Message
+
+        Message.objects.create_from_record(record)
\ No newline at end of file
diff --git a/dblog/helpers.py b/sentry/helpers.py
similarity index 100%
rename from dblog/helpers.py
rename to sentry/helpers.py
diff --git a/dblog/management/__init__.py b/sentry/management/__init__.py
similarity index 100%
rename from dblog/management/__init__.py
rename to sentry/management/__init__.py
diff --git a/dblog/management/commands/__init__.py b/sentry/management/commands/__init__.py
similarity index 100%
rename from dblog/management/commands/__init__.py
rename to sentry/management/commands/__init__.py
diff --git a/dblog/management/commands/cleanup_dblog.py b/sentry/management/commands/cleanup_dblog.py
similarity index 93%
rename from dblog/management/commands/cleanup_dblog.py
rename to sentry/management/commands/cleanup_dblog.py
index dce34e63a8..58ebd7b2f3 100644
--- a/dblog/management/commands/cleanup_dblog.py
+++ b/sentry/management/commands/cleanup_dblog.py
@@ -1,6 +1,6 @@
 from django.core.management.base import CommandError, BaseCommand
 
-from dblog.models import Message, GroupedMessage
+from sentry.models import Message, GroupedMessage
 
 from optparse import make_option
 
diff --git a/dblog/manager.py b/sentry/manager.py
similarity index 96%
rename from dblog/manager.py
rename to sentry/manager.py
index d9540522bd..f09bb46cf5 100644
--- a/dblog/manager.py
+++ b/sentry/manager.py
@@ -19,12 +19,12 @@ from django.db import models
 from django.utils.encoding import smart_unicode
 from django.views.debug import ExceptionReporter
 
-from dblog import settings
-from dblog.helpers import construct_checksum
+from sentry import settings
+from sentry.helpers import construct_checksum
 
 assert not settings.DATABASE_USING or django.VERSION >= (1, 2), 'The `DBLOG_DATABASE_USING` setting requires Django >= 1.2'
 
-logger = logging.getLogger('dblog')
+logger = logging.getLogger('sentry')
 
 class DBLogManager(models.Manager):
     use_for_related_fields = True
@@ -61,7 +61,7 @@ class DBLogManager(models.Manager):
         instance.checksum = construct_checksum(instance)
         
         if settings.THRASHING_TIMEOUT and settings.THRASHING_LIMIT:
-            cache_key = 'dblog:%s:%s' % (instance.class_name, instance.checksum)
+            cache_key = 'sentry:%s:%s' % (instance.class_name, instance.checksum)
             added = cache.add(cache_key, 1, settings.THRASHING_TIMEOUT)
             if not added and cache.incr(cache_key) > settings.THRASHING_LIMIT:
                 return
diff --git a/dblog/middleware.py b/sentry/middleware.py
similarity index 100%
rename from dblog/middleware.py
rename to sentry/middleware.py
diff --git a/dblog/migrations/0001_initial.py b/sentry/migrations/0001_initial.py
similarity index 92%
rename from dblog/migrations/0001_initial.py
rename to sentry/migrations/0001_initial.py
index d663c75ff2..ca3e89a9d1 100644
--- a/dblog/migrations/0001_initial.py
+++ b/sentry/migrations/0001_initial.py
@@ -9,7 +9,7 @@ class Migration(SchemaMigration):
     def forwards(self, orm):
         
         # Adding model 'GroupedMessage'
-        db.create_table('dblog_groupedmessage', (
+        db.create_table('sentry_groupedmessage', (
             ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
             ('logger', self.gf('django.db.models.fields.CharField')(default='root', max_length=64, db_index=True, blank=True)),
             ('class_name', self.gf('django.db.models.fields.CharField')(db_index=True, max_length=128, null=True, blank=True)),
@@ -25,13 +25,13 @@ class Migration(SchemaMigration):
             ('last_seen', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now, db_index=True)),
             ('first_seen', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now, db_index=True)),
         ))
-        db.send_create_signal('dblog', ['GroupedMessage'])
+        db.send_create_signal('sentry', ['GroupedMessage'])
 
         # Adding unique constraint on 'GroupedMessage', fields ['logger', 'view', 'checksum']
-        db.create_unique('dblog_groupedmessage', ['logger', 'view', 'checksum'])
+        db.create_unique('sentry_groupedmessage', ['logger', 'view', 'checksum'])
 
         # Adding model 'Message'
-        db.create_table('dblog_message', (
+        db.create_table('sentry_message', (
             ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
             ('logger', self.gf('django.db.models.fields.CharField')(default='root', max_length=64, db_index=True, blank=True)),
             ('class_name', self.gf('django.db.models.fields.CharField')(db_index=True, max_length=128, null=True, blank=True)),
@@ -45,23 +45,23 @@ class Migration(SchemaMigration):
             ('datetime', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now, db_index=True)),
             ('data', self.gf('django.db.models.fields.TextField')(null=True, blank=True)),
         ))
-        db.send_create_signal('dblog', ['Message'])
+        db.send_create_signal('sentry', ['Message'])
 
 
     def backwards(self, orm):
         
         # Deleting model 'GroupedMessage'
-        db.delete_table('dblog_groupedmessage')
+        db.delete_table('sentry_groupedmessage')
 
         # Removing unique constraint on 'GroupedMessage', fields ['logger', 'view', 'checksum']
-        db.delete_unique('dblog_groupedmessage', ['logger', 'view', 'checksum'])
+        db.delete_unique('sentry_groupedmessage', ['logger', 'view', 'checksum'])
 
         # Deleting model 'Message'
-        db.delete_table('dblog_message')
+        db.delete_table('sentry_message')
 
 
     models = {
-        'dblog.groupedmessage': {
+        'sentry.groupedmessage': {
             'Meta': {'unique_together': "(('logger', 'view', 'checksum'),)", 'object_name': 'GroupedMessage'},
             'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
             'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
@@ -78,7 +78,7 @@ class Migration(SchemaMigration):
             'url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'}),
             'view': ('django.db.models.fields.CharField', [], {'max_length': '255', 'db_index': 'True'})
         },
-        'dblog.message': {
+        'sentry.message': {
             'Meta': {'object_name': 'Message'},
             'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
             'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
@@ -95,4 +95,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['dblog']
+    complete_apps = ['sentry']
diff --git a/dblog/migrations/0002_auto__del_field_groupedmessage_url__chg_field_groupedmessage_view__chg.py b/sentry/migrations/0002_auto__del_field_groupedmessage_url__chg_field_groupedmessage_view__chg.py
similarity index 81%
rename from dblog/migrations/0002_auto__del_field_groupedmessage_url__chg_field_groupedmessage_view__chg.py
rename to sentry/migrations/0002_auto__del_field_groupedmessage_url__chg_field_groupedmessage_view__chg.py
index 0d0570541a..e60d03631f 100644
--- a/dblog/migrations/0002_auto__del_field_groupedmessage_url__chg_field_groupedmessage_view__chg.py
+++ b/sentry/migrations/0002_auto__del_field_groupedmessage_url__chg_field_groupedmessage_view__chg.py
@@ -9,29 +9,29 @@ class Migration(SchemaMigration):
     def forwards(self, orm):
         
         # Deleting field 'GroupedMessage.url'
-        db.delete_column('dblog_groupedmessage', 'url')
+        db.delete_column('sentry_groupedmessage', 'url')
 
         # Changing field 'GroupedMessage.view'
-        db.alter_column('dblog_groupedmessage', 'view', self.gf('django.db.models.fields.CharField')(max_length=255, null=True, blank=True))
+        db.alter_column('sentry_groupedmessage', 'view', self.gf('django.db.models.fields.CharField')(max_length=255, null=True, blank=True))
 
         # Changing field 'Message.view'
-        db.alter_column('dblog_message', 'view', self.gf('django.db.models.fields.CharField')(max_length=255, null=True, blank=True))
+        db.alter_column('sentry_message', 'view', self.gf('django.db.models.fields.CharField')(max_length=255, null=True, blank=True))
 
 
     def backwards(self, orm):
         
         # Adding field 'GroupedMessage.url'
-        db.add_column('dblog_groupedmessage', 'url', self.gf('django.db.models.fields.URLField')(max_length=200, null=True, blank=True), keep_default=False)
+        db.add_column('sentry_groupedmessage', 'url', self.gf('django.db.models.fields.URLField')(max_length=200, null=True, blank=True), keep_default=False)
 
         # Changing field 'GroupedMessage.view'
-        db.alter_column('dblog_groupedmessage', 'view', self.gf('django.db.models.fields.CharField')(max_length=255))
+        db.alter_column('sentry_groupedmessage', 'view', self.gf('django.db.models.fields.CharField')(max_length=255))
 
         # Changing field 'Message.view'
-        db.alter_column('dblog_message', 'view', self.gf('django.db.models.fields.CharField')(max_length=255))
+        db.alter_column('sentry_message', 'view', self.gf('django.db.models.fields.CharField')(max_length=255))
 
 
     models = {
-        'dblog.groupedmessage': {
+        'sentry.groupedmessage': {
             'Meta': {'unique_together': "(('logger', 'view', 'checksum'),)", 'object_name': 'GroupedMessage'},
             'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
             'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
@@ -47,7 +47,7 @@ class Migration(SchemaMigration):
             'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
             'view': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '255', 'null': 'True', 'blank': 'True'})
         },
-        'dblog.message': {
+        'sentry.message': {
             'Meta': {'object_name': 'Message'},
             'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
             'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
@@ -64,4 +64,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['dblog']
+    complete_apps = ['sentry']
diff --git a/dblog/migrations/__init__.py b/sentry/migrations/__init__.py
similarity index 100%
rename from dblog/migrations/__init__.py
rename to sentry/migrations/__init__.py
diff --git a/dblog/models.py b/sentry/models.py
similarity index 92%
rename from dblog/models.py
rename to sentry/models.py
index a43a92beb0..3902d2ccdc 100644
--- a/dblog/models.py
+++ b/sentry/models.py
@@ -5,10 +5,10 @@ from django.http import Http404
 from django.utils.encoding import smart_unicode
 from django.utils.translation import ugettext_lazy as _
 
-from dblog import settings
-from dblog.helpers import construct_checksum, get_installed_apps
-from dblog.manager import DBLogManager, GroupedMessageManager
-from dblog.utils import JSONDictField
+from sentry import settings
+from sentry.helpers import construct_checksum, get_installed_apps
+from sentry.manager import DBLogManager, GroupedMessageManager
+from sentry.utils import JSONDictField
 
 import datetime
 import warnings
@@ -21,7 +21,7 @@ try:
 except ImportError:
     Model = models.Model
 
-logger = logging.getLogger('dblog')
+logger = logging.getLogger('sentry')
 
 __all__ = ('Message', 'GroupedMessage')
 
@@ -103,7 +103,7 @@ class GroupedMessage(MessageBase):
                     and issubclass(exc_type, Http404):
                 return
 
-            if dj_settings.DEBUG or getattr(exc_type, 'skip_dblog', False):
+            if dj_settings.DEBUG or getattr(exc_type, 'skip_sentry', False):
                 return
 
             if transaction.is_dirty():
@@ -148,7 +148,7 @@ class GroupedMessage(MessageBase):
             )
 
             if settings.USE_LOGGING:
-                logging.getLogger('dblog').critical(exc_value, exc_info=sys.exc_info(), extra=extra)
+                logging.getLogger('sentry').critical(exc_value, exc_info=sys.exc_info(), extra=extra)
             else:
                 Message.objects.create_from_exception(**extra)
         except Exception, exc:
diff --git a/dblog/routers.py b/sentry/routers.py
similarity index 53%
rename from dblog/routers.py
rename to sentry/routers.py
index fd9edcfd3d..440e3d5d34 100644
--- a/dblog/routers.py
+++ b/sentry/routers.py
@@ -1,16 +1,16 @@
-from dblog import settings
+from sentry import settings
 
 class DBLogRouter(object):
     def db_for_write(self, model, **hints):
-        if model._meta.app_label == 'dblog':
+        if model._meta.app_label == 'sentry':
             return settings.DATABASE_USING
 
     def db_for_read(self, model, **hints):
         return self.db_for_write(model, **hints)
 
     def allow_syncdb(self, db, model):
-        dblog_db = settings.DATABASE_USING
-        if not dblog_db:
+        sentry_db = settings.DATABASE_USING
+        if not sentry_db:
             return None
-        if model._meta.app_label == 'dblog' and db != dblog_db:
+        if model._meta.app_label == 'sentry' and db != sentry_db:
             return False
\ No newline at end of file
diff --git a/dblog/settings.py b/sentry/settings.py
similarity index 100%
rename from dblog/settings.py
rename to sentry/settings.py
diff --git a/dblog/templates/admin/dblog/groupedmessage/change_form.html b/sentry/templates/admin/dblog/groupedmessage/change_form.html
similarity index 94%
rename from dblog/templates/admin/dblog/groupedmessage/change_form.html
rename to sentry/templates/admin/dblog/groupedmessage/change_form.html
index c9bb4299a1..689a4d2eb2 100644
--- a/dblog/templates/admin/dblog/groupedmessage/change_form.html
+++ b/sentry/templates/admin/dblog/groupedmessage/change_form.html
@@ -20,7 +20,7 @@
 	.error-list h3 { padding: 0 8px; }
 	.error-list table { width: 100%; border: 1px solid #ddd; }
 	</style>
-	{% include "admin/dblog/partials/change_list_styles.html" %}
+	{% include "admin/sentry/partials/change_list_styles.html" %}
 {% endblock %}
 
 {% block content_title %}{% endblock %}
@@ -75,7 +75,7 @@
 				<tbody>
 					{% for error in recent_errors %}
 						<tr class="{% cycle 'row1' 'row2' %}">
-							<th><a href="{% url admin:dblog_message_change error.pk %}">{{ error.view }}</a></th>
+							<th><a href="{% url admin:sentry_message_change error.pk %}">{{ error.view }}</a></th>
 							<td>{{ error.server_name }}</td>
 							<td>{{ error.datetime }}</td>
 						</tr>
diff --git a/dblog/templates/admin/dblog/groupedmessage/change_list.html b/sentry/templates/admin/dblog/groupedmessage/change_list.html
similarity index 75%
rename from dblog/templates/admin/dblog/groupedmessage/change_list.html
rename to sentry/templates/admin/dblog/groupedmessage/change_list.html
index c969fdd880..578ba54948 100644
--- a/dblog/templates/admin/dblog/groupedmessage/change_list.html
+++ b/sentry/templates/admin/dblog/groupedmessage/change_list.html
@@ -1,10 +1,10 @@
 {% extends "admin/change_list.html" %}
 
-{% load admin_list dblog_admin %}
+{% load admin_list sentry_admin %}
 
 {% block extrastyle %}
 	{{ block.super }}
-	{% include "admin/dblog/partials/change_list_styles.html" %}
+	{% include "admin/sentry/partials/change_list_styles.html" %}
 {% endblock %}
 
 {% block result_list %}
diff --git a/dblog/templates/admin/dblog/groupedmessage/change_list_results.html b/sentry/templates/admin/dblog/groupedmessage/change_list_results.html
similarity index 100%
rename from dblog/templates/admin/dblog/groupedmessage/change_list_results.html
rename to sentry/templates/admin/dblog/groupedmessage/change_list_results.html
diff --git a/dblog/templates/admin/dblog/message/change_form.html b/sentry/templates/admin/dblog/message/change_form.html
similarity index 100%
rename from dblog/templates/admin/dblog/message/change_form.html
rename to sentry/templates/admin/dblog/message/change_form.html
diff --git a/sentry/templates/admin/dblog/message/change_list.html b/sentry/templates/admin/dblog/message/change_list.html
new file mode 100644
index 0000000000..498d644517
--- /dev/null
+++ b/sentry/templates/admin/dblog/message/change_list.html
@@ -0,0 +1 @@
+{% extends "admin/sentry/groupedmessage/change_list.html" %}
diff --git a/dblog/templates/admin/dblog/partials/change_list_styles.html b/sentry/templates/admin/dblog/partials/change_list_styles.html
similarity index 100%
rename from dblog/templates/admin/dblog/partials/change_list_styles.html
rename to sentry/templates/admin/dblog/partials/change_list_styles.html
diff --git a/dblog/templates/dblog/group.html b/sentry/templates/dblog/group.html
similarity index 87%
rename from dblog/templates/dblog/group.html
rename to sentry/templates/dblog/group.html
index 85a4892c56..74be3a876d 100644
--- a/dblog/templates/dblog/group.html
+++ b/sentry/templates/dblog/group.html
@@ -1,12 +1,12 @@
-{% extends "dblog/index.html" %}
+{% extends "sentry/index.html" %}
 
-{% load dblog_helpers %}
+{% load sentry_helpers %}
 
-{% block title %}{{ message.error }} | Django DB Log{% endblock %}
+{% block title %}{{ message.error }} | Django Sentry{% endblock %}
 
 {% block body %}
 	<div id="header"> 
-		<h1><a href="{% url dblog %}">Django DB Log</a></h1> 
+		<h1><a href="{% url sentry %}">Django Sentry</a></h1> 
 		<h2>Message Details</h2>
 	</div> 
 
diff --git a/dblog/templates/dblog/index.html b/sentry/templates/dblog/index.html
similarity index 69%
rename from dblog/templates/dblog/index.html
rename to sentry/templates/dblog/index.html
index c8eeb251bb..b3fc29217d 100644
--- a/dblog/templates/dblog/index.html
+++ b/sentry/templates/dblog/index.html
@@ -1,12 +1,12 @@
 {% load paging_extras %}
-{% load dblog_helpers %}
+{% load sentry_helpers %}
 
 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
 <html lang="en">
 	<head> 
 		<meta http-equiv="content-type" content="text/html; charset=utf-8"> 
 		<meta name="robots" content="NONE,NOARCHIVE">
-		<title>{% block title %}Django DB Log{% endblock %}</title> 
+		<title>{% block title %}Django Sentry{% endblock %}</title> 
 		<script type="text/javascript"> 
 		//<!--
 		function getElementsByClassName(oElm, strTagName, strClassName){
@@ -80,37 +80,8 @@
 			a { color: #333; }
 			a:visited { color: inherit; }
 			ul { margin: 1em 0 1em 2em; }
-			#header {
-                font-family: "lucida grande", "lucida sans", verdana, sans-serif;
-                background: #e0ebff; border-bottom:1px solid #ddd;
-                background: #ccc; /* for non-css3 browsers */
-                filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#e0ebff', endColorstr='#cccccc'); /* for IE */
-                background: -webkit-gradient(linear, left top, left bottom, from(#f2f2f2), to(#ddd)); /* for webkit browsers */
-                background: -moz-linear-gradient(top,  #333,  #000); /* for firefox 3.6+ */
-            }
-            .sentry-logo {
-                display: inline-block;
-                font-weight: normal;
-                font-family: helvetica, sans-serif;
-                font-size: 28px;
-                color: #ddd;
-                border: 1px solid #666;
-                -moz-border-radius: 8px;
-                border-radius: 8px;
-                background: -moz-linear-gradient(top, #333, #444); /* for firefox 3.6+ */                
-                padding: 7px 10px 7px 10px;
-                -webkit-box-shadow:5px 5px 5px #999999; 
-                -moz-box-shadow: 0px 0px 5px #666; 
-                box-shadow:5px 5px 5px #999999; 
-            }
-            .sentry-logo small {
-                font-size: 22px;
-            }
-            #header h1 {display: inline; font-size: 20px; line-height: 24px;
-                        color: #e5e5e5; text-shadow: 1px 1px 1px #333;}
-			#header h2 {display: inline; font-size: 22px; line-height: 24px;
-                        font-weight: normal; color: #888; margin-bottom: 0; margin-left: 10px;
-                        color: #e5e5e5;}
+			#header { background: #e0ebff; border-bottom:1px solid #ddd; }
+			#header h2 { font-weight: normal; color: #666; margin-bottom: 0; }
 			#footer { clear: both; border-top:1px solid #ddd; }
 			#header table { border:none; background:transparent; }
 			#body, #sidebar { position: relative; }
@@ -175,61 +146,34 @@
 			
 			/* message list */
 			.messages { list-style: none; margin-left: 0; }
-			.messages .count { width: 25px; text-align: center;
-                               -moz-border-radius: 6px;
-                               border-radius: 6px;
-                               padding: 4px; line-height: 19px; color: #fff; display: inline-block; margin-right: 5px; }
+			.messages .count { width: 25px; text-align: center; background: red; -moz-border-radius: 4px; border-radius: 4px; padding: 0 8px; line-height: 19px; color: #fff; display: inline-block; margin-right: 5px; }
 			.messages h3 { height: 20px; line-height: 20px; display: inline-block; margin: 0; }
 			.messages h3 a { text-decoration: none; }
 			.messages .message {
-                margin-left: 40px;
 				color: #666;
 				margin-top: 8px;
+				margin-left: 50px;
 				font-size: 0.9em;
 			}
-			.messages .tag { display: inline-block; padding: 2px 5px; background: #d5d5d5; margin-right: 5px;}
+			.messages .tag { display: inline-block; padding: 2px 5px; background: #eee; }
 			.messages .traceback { display: none; }
-			.messages li { padding: 8px; position: relative; }
+			.messages li { padding: 8px; }
 			.messages .row1 { background: #f9f9f9; }
-            .messages .hidden {
-                position: absolute;
-                right: 15px;
-                bottom: 0px;
-                color: #fff;
-                font-size: 60px;
-            }
-            .messages li:hover .hidden {
-                color: #fff;                
-            }
-
 			.priority-veryhigh .count {
-				background: #e22e2e;
-                -webkit-box-shadow: 0 1px 2px rgba(0,0,0,.2);
-	            -moz-box-shadow: 0 1px 2px rgba(0,0,0,.2);
-	            box-shadow: 0 1px 2px rgba(0,0,0,.2);
-                background:-moz-linear-gradient(center top , #ED1C24, #AA1317) repeat scroll 0 0 transparent;
+				background: red;
 			}
 			.priority-high .count {
 				background: #ff5400;
-                background:-moz-linear-gradient(center top , #F16C7C, #BF404F) repeat scroll 0 0 transparent;
-		    }
+			}
 			.priority-medium .count {
 				background: #ff7800;
-                background:-moz-linear-gradient(center top , #FAA51A, #F47A20) repeat scroll 0 0 transparent;
 			}
 			.priority-low .count,
 			.priority-verylow .count {
 				background: #ffb400;
-                background:-moz-linear-gradient(center top , #efd57c, #e0ae00) repeat scroll 0 0 transparent;
 			}
 			.messages .last_seen { color: #bbb; font-size: 0.9em; margin-left: 5px; }
-			.messages li:hover, .messages .active {
-                background: #e0ebff;
-                background: -moz-linear-gradient(top,  #e5e5e5,  #ddd); /* for firefox 3.6+ */
-                cursor: pointer;
-                -moz-border-radius: 6px;
-                border-radius: 6px;
-            }
+			.messages li:hover, .messages .active { background: #e0ebff; cursor: pointer; }
 			.messages li:hover .last_seen, .messages .active .last_seen { color: #777; }
 			pre {
 				white-space: pre-wrap;       /* CSS-3                  */
@@ -246,7 +190,7 @@
 	<body> 
 		{% block body %}
 		<div id="header"> 
-			<h1><a href="{% url dblog %}"><span class="sentry-logo">&#9820; <small></small></span></a></h1> 
+			<h1><a href="{% url sentry %}">Django Sentry</a></h1> 
 			<h2>Dashboard</h2>
 		</div> 
 		
@@ -289,14 +233,13 @@
 				{{ message_list.paging }}
 				<ul class="messages">
 					{% for message, priority in message_list.objects|with_priority %}
-						<li class="{% cycle 'row1' 'row2' %} level-{{ message.level }} priority-{{ priority }}" onclick="window.location.href='{% url dblog-group message.pk %}'">
-                                <span class="count">{{ message.times_seen }}</span>
-                                <h3><a href="{% url dblog-group message.pk %}">{% if message.view %}{{ message.view }}{% else %}{{ message.message }}{% endif %}</a></h3>
-                                <span class="last_seen">{{ message.last_seen|timesince }} ago</span>
-                                <p class="message"><span class="tag tag-{{message.get_level_display}}">{{ message.get_level_display }}</span><span class="tag tag-server">{{ message.server_name }}</span> {{ message.error }}</p>
-                                <pre class="traceback">{{ message.shortened_traceback }}</pre>
-                                <span class="hidden">&raquo;</span>
-   						</li>
+						<li class="{% cycle 'row1' 'row2' %} level-{{ message.level }} priority-{{ priority }}" onclick="window.location.href='{% url sentry-group message.pk %}'">
+							<span class="count">{{ message.times_seen }}</span>
+							<h3><a href="{% url sentry-group message.pk %}">{% if message.view %}{{ message.view }}{% else %}{{ message.message }}{% endif %}</a></h3>
+							<span class="last_seen">{{ message.last_seen|timesince }} ago</span>
+							<p class="message"><span class="tag tag-level">{{ message.get_level_display }}</span> <span class="tag tag-server">{{ message.server_name }}</span> {{ message.error }}</p>
+							<pre class="traceback">{{ message.shortened_traceback }}</pre>
+						</li>
 					{% endfor %}
 				</ul>
 				{{ message_list.paging }}
@@ -308,4 +251,4 @@
 		<div id="footer">Powered by sexy Django magic.</div> 
 		{% endblock %}
 	</body>
-</html>
+</html>
\ No newline at end of file
diff --git a/dblog/templatetags/__init__.py b/sentry/templatetags/__init__.py
similarity index 100%
rename from dblog/templatetags/__init__.py
rename to sentry/templatetags/__init__.py
diff --git a/dblog/templatetags/dblog_admin.py b/sentry/templatetags/dblog_admin.py
similarity index 83%
rename from dblog/templatetags/dblog_admin.py
rename to sentry/templatetags/dblog_admin.py
index a178d0715a..1d521dc9db 100644
--- a/dblog/templatetags/dblog_admin.py
+++ b/sentry/templatetags/dblog_admin.py
@@ -15,4 +15,4 @@ def result_list(cl):
     return {'cl': cl,
             'result_headers': list(result_headers(cl)),
             'results': list(better_results(cl))}
-result_list = register.inclusion_tag("admin/dblog/groupedmessage/change_list_results.html")(result_list)
\ No newline at end of file
+result_list = register.inclusion_tag("admin/sentry/groupedmessage/change_list_results.html")(result_list)
\ No newline at end of file
diff --git a/dblog/templatetags/dblog_helpers.py b/sentry/templatetags/dblog_helpers.py
similarity index 100%
rename from dblog/templatetags/dblog_helpers.py
rename to sentry/templatetags/dblog_helpers.py
diff --git a/dblog/tests/__init__.py b/sentry/tests/__init__.py
similarity index 100%
rename from dblog/tests/__init__.py
rename to sentry/tests/__init__.py
diff --git a/dblog/tests/fixtures/feeds.json b/sentry/tests/fixtures/feeds.json
similarity index 90%
rename from dblog/tests/fixtures/feeds.json
rename to sentry/tests/fixtures/feeds.json
index 94c7a2ed7c..d133c5f41e 100644
--- a/dblog/tests/fixtures/feeds.json
+++ b/sentry/tests/fixtures/feeds.json
@@ -7,14 +7,14 @@
       "level": 40, 
       "class_name": "TypeError", 
       "checksum": "0edb43b51699ce88eed908b340feb17f", 
-      "view": "dblog.admin.create",
+      "view": "sentry.admin.create",
       "times_seen": 1, 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 239, in wrapper\n    return self.admin_site.admin_view(view)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/views/decorators/cache.py\", line 69, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/sites.py\", line 190, in inner\n    return view(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 21, in _wrapper\n    return decorator(bound_func)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 17, in bound_func\n    return func(self, *args2, **kwargs2)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 968, in changelist_view\n    self.date_hierarchy, self.search_fields, self.list_select_related, self.list_per_page, self.list_editable, self)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 66, in __init__\n    self.filter_specs, self.has_filters = self.get_filters(request)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 74, in get_filters\n    spec = FilterSpec.create(f, request, self.params, self.model, self.model_admin)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/filterspecs.py\", line 29, in create\n    return factory(f, request, params, model, model_admin)\n\n  File \"/Users/dcramer/Development/django-db-log/dblog/admin.py\", line 59, in __init__\n    raise\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 239, in wrapper\n    return self.admin_site.admin_view(view)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/views/decorators/cache.py\", line 69, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/sites.py\", line 190, in inner\n    return view(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 21, in _wrapper\n    return decorator(bound_func)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 17, in bound_func\n    return func(self, *args2, **kwargs2)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 968, in changelist_view\n    self.date_hierarchy, self.search_fields, self.list_select_related, self.list_per_page, self.list_editable, self)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 66, in __init__\n    self.filter_specs, self.has_filters = self.get_filters(request)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 74, in get_filters\n    spec = FilterSpec.create(f, request, self.params, self.model, self.model_admin)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/filterspecs.py\", line 29, in create\n    return factory(f, request, params, model, model_admin)\n\n  File \"/Users/dcramer/Development/django-db-log/sentry/admin.py\", line 59, in __init__\n    raise\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n", 
       "logger": "root", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NoneType", 
       "last_seen": "2010-07-22 20:14:18"
     }, 
-    "model": "dblog.groupedmessage", 
+    "model": "sentry.groupedmessage", 
     "pk": 1
   }, 
   {
@@ -23,14 +23,14 @@
       "level": 40, 
       "class_name": "TypeError", 
       "checksum": "0edb43b51699ce88eed908b340feb17f", 
-      "view": "dblog.admin.create",
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 239, in wrapper\n    return self.admin_site.admin_view(view)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/views/decorators/cache.py\", line 69, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/sites.py\", line 190, in inner\n    return view(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 21, in _wrapper\n    return decorator(bound_func)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 17, in bound_func\n    return func(self, *args2, **kwargs2)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 968, in changelist_view\n    self.date_hierarchy, self.search_fields, self.list_select_related, self.list_per_page, self.list_editable, self)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 66, in __init__\n    self.filter_specs, self.has_filters = self.get_filters(request)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 74, in get_filters\n    spec = FilterSpec.create(f, request, self.params, self.model, self.model_admin)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/filterspecs.py\", line 29, in create\n    return factory(f, request, params, model, model_admin)\n\n  File \"/Users/dcramer/Development/django-db-log/dblog/admin.py\", line 59, in __init__\n    raise\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n", 
+      "view": "sentry.admin.create",
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 239, in wrapper\n    return self.admin_site.admin_view(view)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/views/decorators/cache.py\", line 69, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/sites.py\", line 190, in inner\n    return view(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 21, in _wrapper\n    return decorator(bound_func)(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 76, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/utils/decorators.py\", line 17, in bound_func\n    return func(self, *args2, **kwargs2)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/options.py\", line 968, in changelist_view\n    self.date_hierarchy, self.search_fields, self.list_select_related, self.list_per_page, self.list_editable, self)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 66, in __init__\n    self.filter_specs, self.has_filters = self.get_filters(request)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/views/main.py\", line 74, in get_filters\n    spec = FilterSpec.create(f, request, self.params, self.model, self.model_admin)\n\n  File \"/Users/dcramer/.virtualenvs/project/lib/python2.6/site-packages/django/contrib/admin/filterspecs.py\", line 29, in create\n    return factory(f, request, params, model, model_admin)\n\n  File \"/Users/dcramer/Development/django-db-log/sentry/admin.py\", line 59, in __init__\n    raise\n\nTypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n", 
       "datetime": "2010-07-22 20:14:18", 
-      "url": "http://localhost:8000/admin/dblog/groupedmessage/", 
+      "url": "http://localhost:8000/admin/sentry/groupedmessage/", 
       "logger": "root", 
       "message": "exceptions must be old-style classes or derived from BaseException, not NoneType"
     }, 
-    "model": "dblog.message", 
+    "model": "sentry.message", 
     "pk": 1
   }
 ]
diff --git a/dblog/tests/models.py b/sentry/tests/models.py
similarity index 88%
rename from dblog/tests/models.py
rename to sentry/tests/models.py
index fbf6e33b9b..c1743a5ef2 100644
--- a/dblog/tests/models.py
+++ b/sentry/tests/models.py
@@ -1,5 +1,5 @@
 from django.db import models
-from dblog.utils import JSONDictField
+from sentry.utils import JSONDictField
 
 class JSONDictModel(models.Model):
     data = JSONDictField(blank=True, null=True)
diff --git a/dblog/tests/tests.py b/sentry/tests/tests.py
similarity index 92%
rename from dblog/tests/tests.py
rename to sentry/tests/tests.py
index a2e38c093c..1e0b634cc5 100644
--- a/dblog/tests/tests.py
+++ b/sentry/tests/tests.py
@@ -7,10 +7,10 @@ from django.test.client import Client
 from django.test import TestCase
 from django.utils.encoding import smart_unicode
 
-from dblog.middleware import DBLogMiddleware
-from dblog.models import Message, GroupedMessage
-from dblog.tests.models import JSONDictModel, DuplicateKeyModel
-from dblog import settings
+from sentry.middleware import DBLogMiddleware
+from sentry.models import Message, GroupedMessage
+from sentry.tests.models import JSONDictModel, DuplicateKeyModel
+from sentry import settings
 
 import logging
 import sys
@@ -59,14 +59,14 @@ class JSONDictTestCase(TestCase):
         self.assertEquals(instance.data.get('foo'), 'bar')
 
 class DBLogTestCase(TestCase):
-    urls = 'dblog.tests.urls'
+    urls = 'sentry.tests.urls'
 
     def setUp(self):
         settings.DATABASE_USING = None
         self._handlers = None
         self._level = None
         settings.DEBUG = False
-        self.logger = logging.getLogger('dblog')
+        self.logger = logging.getLogger('sentry')
         self.logger.addHandler(logging.StreamHandler())
         Message.objects.all().delete()
         GroupedMessage.objects.all().delete()
@@ -76,7 +76,7 @@ class DBLogTestCase(TestCase):
         
     def setUpHandler(self):
         self.tearDownHandler()
-        from dblog.handlers import DBLogHandler
+        from sentry.handlers import DBLogHandler
         
         logger = logging.getLogger()
         self._handlers = logger.handlers
@@ -87,8 +87,8 @@ class DBLogTestCase(TestCase):
             logger.removeHandler(h)
     
         logger.setLevel(logging.DEBUG)
-        dblog_handler = DBLogHandler()
-        logger.addHandler(dblog_handler)
+        sentry_handler = DBLogHandler()
+        logger.addHandler(sentry_handler)
     
     def tearDownHandler(self):
         if self._handlers is None:
@@ -315,7 +315,7 @@ class DBLogTestCase(TestCase):
         
         settings.USE_LOGGING = True
         
-        logger = logging.getLogger('dblog')
+        logger = logging.getLogger('sentry')
         for h in logger.handlers:
             logger.removeHandler(h)
         logger.addHandler(logging.StreamHandler())
@@ -419,7 +419,7 @@ class DBLogTestCase(TestCase):
         self.assertEquals(GroupedMessage.objects.count(), 1)
 
     def testViewException(self):
-        self.assertRaises(Exception, self.client.get, reverse('dblog-raise-exc'))
+        self.assertRaises(Exception, self.client.get, reverse('sentry-raise-exc'))
         
         cur = (Message.objects.count(), GroupedMessage.objects.count())
         self.assertEquals(cur, (1, 1), 'Assumed logs failed to save. %s' % (cur,))
@@ -428,10 +428,10 @@ class DBLogTestCase(TestCase):
         self.assertEquals(last.class_name, 'Exception')
         self.assertEquals(last.level, logging.ERROR)
         self.assertEquals(last.message, 'view exception')
-        self.assertEquals(last.view, 'dblog.tests.views.raise_exc')
+        self.assertEquals(last.view, 'sentry.tests.views.raise_exc')
 
 class DBLogViewsTest(TestCase):
-    urls = 'dblog.tests.urls'
+    urls = 'sentry.tests.urls'
     
     def setUp(self):
         settings.DATABASE_USING = None
@@ -444,7 +444,7 @@ class DBLogViewsTest(TestCase):
         
     def setUpHandler(self):
         self.tearDownHandler()
-        from dblog.handlers import DBLogHandler
+        from sentry.handlers import DBLogHandler
         
         logger = logging.getLogger()
         self._handlers = logger.handlers
@@ -455,8 +455,8 @@ class DBLogViewsTest(TestCase):
             logger.removeHandler(h)
     
         logger.setLevel(logging.DEBUG)
-        dblog_handler = DBLogHandler()
-        logger.addHandler(dblog_handler)
+        sentry_handler = DBLogHandler()
+        logger.addHandler(sentry_handler)
     
     def tearDownHandler(self):
         if self._handlers is None:
@@ -482,23 +482,23 @@ class DBLogViewsTest(TestCase):
         self.assertEquals(last.message, 'view exception')
 
 class DBLogFeedsTest(TestCase):
-    fixtures = ['dblog/tests/fixtures/feeds.json']
-    urls = 'dblog.tests.urls'
+    fixtures = ['sentry/tests/fixtures/feeds.json']
+    urls = 'sentry.tests.urls'
     
     def testMessageFeed(self):
-        response = self.client.get(reverse('dblog-feed-messages'))
+        response = self.client.get(reverse('sentry-feed-messages'))
         self.assertEquals(response.status_code, 200)
         self.assertTrue(response.content.startswith('<?xml version="1.0" encoding="utf-8"?>'))
-        self.assertTrue('<link>http://testserver/admin/dblog/message/</link>' in response.content)
+        self.assertTrue('<link>http://testserver/admin/sentry/message/</link>' in response.content)
         self.assertTrue('<title>log messages</title>' in response.content)
-        self.assertTrue('<link>http://testserver/admin/dblog/message/1/</link>' in response.content, response.content)
+        self.assertTrue('<link>http://testserver/admin/sentry/message/1/</link>' in response.content, response.content)
         self.assertTrue('<title>TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType</title>' in response.content)
 
     def testSummaryFeed(self):
-        response = self.client.get(reverse('dblog-feed-summaries'))
+        response = self.client.get(reverse('sentry-feed-summaries'))
         self.assertEquals(response.status_code, 200)
         self.assertTrue(response.content.startswith('<?xml version="1.0" encoding="utf-8"?>'))
-        self.assertTrue('<link>http://testserver/admin/dblog/groupedmessage/</link>' in response.content)
+        self.assertTrue('<link>http://testserver/admin/sentry/groupedmessage/</link>' in response.content)
         self.assertTrue('<title>log summaries</title>' in response.content)
-        self.assertTrue('<link>http://testserver/admin/dblog/groupedmessage/1/</link>' in response.content)
+        self.assertTrue('<link>http://testserver/admin/sentry/groupedmessage/1/</link>' in response.content)
         self.assertTrue('<title>(1) TypeError: TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType</title>' in response.content)
\ No newline at end of file
diff --git a/dblog/tests/urls.py b/sentry/tests/urls.py
similarity index 60%
rename from dblog/tests/urls.py
rename to sentry/tests/urls.py
index 6c99b4ab01..cf8822a0a1 100644
--- a/dblog/tests/urls.py
+++ b/sentry/tests/urls.py
@@ -5,6 +5,6 @@ admin.autodiscover()
 
 urlpatterns = patterns('',
     url(r'^admin/', include(admin.site.urls)),
-    url(r'^$', 'dblog.tests.views.raise_exc', name='dblog-raise-exc'),
-    url(r'', include('dblog.urls')),
+    url(r'^$', 'sentry.tests.views.raise_exc', name='sentry-raise-exc'),
+    url(r'', include('sentry.urls')),
 )
\ No newline at end of file
diff --git a/dblog/tests/views.py b/sentry/tests/views.py
similarity index 100%
rename from dblog/tests/views.py
rename to sentry/tests/views.py
diff --git a/dblog/urls.py b/sentry/urls.py
similarity index 70%
rename from dblog/urls.py
rename to sentry/urls.py
index 5ed293b5ea..f595a6a498 100644
--- a/dblog/urls.py
+++ b/sentry/urls.py
@@ -8,8 +8,8 @@ import views
 hashed_secret = md5_constructor(settings.SECRET_KEY).hexdigest()
 
 urlpatterns = patterns('',
-    url(r'^feeds/%s/messages.xml$' % hashed_secret, MessageFeed(), name='dblog-feed-messages'),
-    url(r'^feeds/%s/summaries.xml$' % hashed_secret, SummaryFeed(), name='dblog-feed-summaries'),
-    url(r'^group/(\d+)$', views.group, name='dblog-group'),
-    url(r'^$', views.index, name='dblog'),
+    url(r'^feeds/%s/messages.xml$' % hashed_secret, MessageFeed(), name='sentry-feed-messages'),
+    url(r'^feeds/%s/summaries.xml$' % hashed_secret, SummaryFeed(), name='sentry-feed-summaries'),
+    url(r'^group/(\d+)$', views.group, name='sentry-group'),
+    url(r'^$', views.index, name='sentry'),
 )
diff --git a/dblog/utils.py b/sentry/utils.py
similarity index 100%
rename from dblog/utils.py
rename to sentry/utils.py
diff --git a/dblog/views.py b/sentry/views.py
similarity index 95%
rename from dblog/views.py
rename to sentry/views.py
index 992edd2a27..21d1351890 100644
--- a/dblog/views.py
+++ b/sentry/views.py
@@ -4,8 +4,8 @@ from django.shortcuts import render_to_response
 from django.utils.datastructures import SortedDict
 from django.utils.safestring import mark_safe
 
-from dblog.helpers import FakeRequest, ImprovedExceptionReporter
-from dblog.models import GroupedMessage, Message, LOG_LEVELS
+from sentry.helpers import FakeRequest, ImprovedExceptionReporter
+from sentry.models import GroupedMessage, Message, LOG_LEVELS
 
 from math import log
 from pygooglechart import SimpleLineChart, Axis
@@ -80,7 +80,7 @@ def index(request):
     chart.set_line_style(1, 1)
     chart_url = chart.get_url()
 
-    return render_to_response('dblog/index.html', locals())
+    return render_to_response('sentry/index.html', locals())
 
 def group(request, group_id):
     message = GroupedMessage.objects.extra(
@@ -158,4 +158,4 @@ def group(request, group_id):
     chart.set_line_style(1, 1)
     chart_url = chart.get_url()
     
-    return render_to_response('dblog/group.html', locals())
\ No newline at end of file
+    return render_to_response('sentry/group.html', locals())
\ No newline at end of file
diff --git a/setup.py b/setup.py
index 21705ab537..f604848231 100644
--- a/setup.py
+++ b/setup.py
@@ -3,16 +3,16 @@
 from setuptools import setup, find_packages
 
 setup(
-    name='django-db-log2',
-    version='.'.join(map(str, __import__('dblog').__version__)),
+    name='django-sentry',
+    version='.'.join(map(str, __import__('sentry').__version__)),
     author='David Cramer',
     author_email='dcramer@gmail.com',
-    url='http://github.com/dcramer/django-db-log2',
+    url='http://github.com/dcramer/django-sentry',
     description = 'Exception Logging to a Database in Django',
     packages=find_packages(),
     requirements=[
         'django-paging',
-    ]
+    ],
     include_package_data=True,
     classifiers=[
         'Framework :: Django',
