commit e4b361fc5a6e3d63b1fd5a840f0a5b0a3326128d
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Jul 25 12:46:21 2016 -0700

    Convert org stats page to stackedbarchart (#3786)

diff --git a/src/sentry/static/sentry/app/views/organizationStats/index.jsx b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
index cab5a5f99e..00db7c283d 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
@@ -1,14 +1,15 @@
 import $ from 'jquery';
 import React from 'react';
 import ApiMixin from '../../mixins/apiMixin';
-import FlotChart from '../../components/flotChart';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 import OrganizationHomeContainer from '../../components/organizations/homeContainer';
+import StackedBarChart from '../../components/stackedBarChart';
 import OrganizationState from '../../mixins/organizationState';
 
 import ProjectTable from './projectTable';
 import {t} from '../../locale';
+import {intcomma} from '../../utils';
 
 const OrganizationStats = React.createClass({
   mixins: [
@@ -153,25 +154,21 @@ const OrganizationStats = React.createClass({
     let oReceived = 0;
     let oRejected = 0;
     let oBlacklisted = 0;
-    let sReceived = {};
-    let sRejected = {};
-    let sBlacklisted = {};
+    let orgPoints = [];
     let aReceived = [0, 0]; // received, points
     let rawOrgData = this.state.rawOrgData;
     $.each(rawOrgData.received, (idx, point) => {
       let dReceived = point[1];
       let dRejected = rawOrgData.rejected[idx][1];
       let dBlacklisted = rawOrgData.blacklisted[idx][1];
-      let ts = point[0] * 1000;
-      if (sReceived[ts] === undefined) {
-        sReceived[ts] = dReceived;
-        sRejected[ts] = dRejected;
-        sBlacklisted[ts] = dBlacklisted;
-      } else {
-        sReceived[ts] += dReceived;
-        sRejected[ts] += dRejected;
-        sBlacklisted[ts] += dBlacklisted;
-      }
+      orgPoints.push({
+        x: point[0],
+        y: [
+          dReceived,
+          dRejected,
+          dBlacklisted
+        ]
+      });
       oReceived += dReceived;
       oRejected += dRejected;
       oBlacklisted += dBlacklisted;
@@ -181,17 +178,7 @@ const OrganizationStats = React.createClass({
       }
     });
     this.setState({
-      orgStats: {
-        rejected: $.map(sRejected, (value, ts) => {
-          return [[ts, value || 0]];
-        }),
-        accepted: $.map(sReceived, (value, ts) => {
-          return [[ts, value - (sRejected[ts] || 0) - (sBlacklisted[ts] || 0)]];
-        }),
-        blacklisted: $.map(sBlacklisted, (value, ts) => {
-          return [[ts, value || 0]];
-        })
-      },
+      orgStats: orgPoints,
       orgTotal: {
         received: oReceived,
         rejected: oRejected,
@@ -229,47 +216,24 @@ const OrganizationStats = React.createClass({
     });
   },
 
-  getChartPlotData() {
-    let stats = this.state.orgStats;
+  renderTooltip(point, pointIdx, chart) {
+    let timeLabel = chart.getTimeLabel(point);
+    let [accepted, rejected, blacklisted] = point.y;
 
-    return [
-      {
-        data: stats.accepted,
-        label: t('Accepted'),
-        color: 'rgba(86, 175, 232, 1)',
-        shadowSize: 0,
-        stack: true,
-        lines: {
-          lineWidth: 2,
-          show: true,
-          fill: true
-        }
-      },
-      {
-        data: stats.rejected,
-        color: 'rgba(226, 76, 83, 1)',
-        shadowSize: 0,
-        label: t('Dropped (Rate Limit)'),
-        stack: true,
-        lines: {
-          lineWidth: 2,
-          show: true,
-          fill: true
-        }
-      },
-      {
-        data: stats.blacklisted,
-        color: 'rgba(247, 131, 0, 1)',
-        shadowSize: 0,
-        label: t('Dropped (Blacklist)'),
-        stack: true,
-        lines: {
-          lineWidth: 2,
-          show: true,
-          fill: true
-        }
-      }
-    ];
+    let value = `${intcomma(accepted)} accepted`;
+    if (rejected) {
+      value += `<br>${intcomma(rejected)} rate limited`;
+    }
+    if (blacklisted) {
+      value += `<br>${intcomma(blacklisted)} blacklisted`;
+    }
+
+    return (
+      '<div style="width:150px">' +
+        `<div class="time-label">${timeLabel}</div>` +
+        `<div class="value-label">${value}</div>` +
+      '</div>'
+    );
   },
 
   render() {
@@ -292,18 +256,21 @@ const OrganizationStats = React.createClass({
             </div>
           }
         </div>
-        <div className="box">
-          <div className="box-content with-padding">
+        <div className="organization-stats">
             {this.state.statsLoading ?
               <LoadingIndicator />
             : (this.state.statsError ?
               <LoadingError onRetry={this.fetchData} />
             :
-              <div style={{height: 250}}>
-                <FlotChart plotData={this.getChartPlotData()} className="chart" />
+              <div className="bar-chart">
+                <StackedBarChart
+                  points={this.state.orgStats}
+                  height={150}
+                  barClasses={['accepted', 'rate-limited', 'black-listed']}
+                  className="sparkline"
+                  tooltip={this.renderTooltip} />
               </div>
             )}
-          </div>
         </div>
 
         <div className="box">
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index 6f040b9082..4bf000c165 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -498,6 +498,45 @@ table.project-list {
   }
 }
 
+.organization-stats {
+  height: 150px;
+  margin-bottom: 20px;
+
+  .bar-chart figure a {
+    height: 150px;
+
+    span {
+      &.accepted {
+        background: @gray-lightest;
+      }
+
+      &.rate-limited {
+        background: @red;
+        min-height: 0;
+      }
+
+      &.black-listed {
+        background: @orange-light;
+        min-height: 0;
+      }
+    }
+
+    &:hover span {
+      &.accepted {
+        background: @gray-light;
+      }
+
+      &.rate-limited {
+        background: @red-dark;
+      }
+
+      &.black-listed {
+        background: @orange-dark;
+      }
+    }
+  }
+}
+
 /**
  * Onboarding
  * ============================================================================
