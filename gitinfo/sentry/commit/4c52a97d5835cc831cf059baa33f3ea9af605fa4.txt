commit 4c52a97d5835cc831cf059baa33f3ea9af605fa4
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Feb 13 14:15:50 2018 -0800

    feat(environments): Show and hide environments (#7206)
    
    Add ability to show are hide environments in project settings

diff --git a/src/sentry/static/sentry/app/actionCreators/environments.jsx b/src/sentry/static/sentry/app/actionCreators/environments.jsx
index ac78fb953d..ff813e1778 100644
--- a/src/sentry/static/sentry/app/actionCreators/environments.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/environments.jsx
@@ -12,6 +12,14 @@ export function loadEnvironments(data) {
   EnvironmentActions.loadData(data);
 }
 
+export function loadActiveEnvironments(data) {
+  EnvironmentActions.loadActiveData(data);
+}
+
+export function loadHiddenEnvironments(data) {
+  EnvironmentActions.loadHiddenData(data);
+}
+
 export function setDefaultEnvironment(env) {
   EnvironmentActions.setDefault(env);
 }
diff --git a/src/sentry/static/sentry/app/actions/environmentActions.jsx b/src/sentry/static/sentry/app/actions/environmentActions.jsx
index 12c37fb3b9..3dd345a74c 100644
--- a/src/sentry/static/sentry/app/actions/environmentActions.jsx
+++ b/src/sentry/static/sentry/app/actions/environmentActions.jsx
@@ -4,6 +4,8 @@ let EnvironmentActions = Reflux.createActions([
   'setActive',
   'clearActive',
   'loadData',
+  'loadActiveData',
+  'loadHiddenData',
   'setDefault',
 ]);
 
diff --git a/src/sentry/static/sentry/app/components/group/releaseStats.jsx b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
index 66860aff30..a98a1dc655 100644
--- a/src/sentry/static/sentry/app/components/group/releaseStats.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
@@ -38,7 +38,7 @@ const GroupReleaseStats = createReactClass({
   ],
 
   getInitialState() {
-    let envList = EnvironmentStore.getAll();
+    let envList = EnvironmentStore.getActive();
     let environmentQueryParam = this.props.location.query.environment;
 
     return {
@@ -193,7 +193,7 @@ const GroupReleaseStats = createReactClass({
     let group = this.props.group;
     let {environment, data, hasEnvironmentsFeature} = this.state;
 
-    let envList = this.state.envList;
+    let envList = this.state.envList || [];
 
     let envName = environment ? environment.displayName : t('All Environments');
 
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index ea7e5fb91c..599d4d6b32 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -248,13 +248,6 @@ const projectSettingsRoutes = [
     path="alerts/"
     component={errorHandler(ProjectAlertSettings)}
   />,
-  <Route
-    key="environments/"
-    name="Environments"
-    path="environments/"
-    component={errorHandler(ProjectEnvironments)}
-  />,
-  <Route key="tags/" name="Tags" path="tags/" component={errorHandler(ProjectTags)} />,
   <Route
     key="alerts/rules/"
     path="alerts/rules/"
@@ -273,6 +266,19 @@ const projectSettingsRoutes = [
     name="Edit Alert Rule"
     component={errorHandler(ProjectAlertRuleDetails)}
   />,
+  <Route
+    key="environments/"
+    name="Environments"
+    path="environments/"
+    component={errorHandler(ProjectEnvironments)}
+  />,
+  <Route
+    key="environments/hidden/"
+    name="Hidden Environments"
+    path="environments/hidden/"
+    component={errorHandler(ProjectEnvironments)}
+  />,
+  <Route key="tags/" name="Tags" path="tags/" component={errorHandler(ProjectTags)} />,
   <Route
     key="issue-tracking/"
     path="issue-tracking/"
diff --git a/src/sentry/static/sentry/app/stores/environmentStore.jsx b/src/sentry/static/sentry/app/stores/environmentStore.jsx
index 7cb16dac68..dd4c49b7b4 100644
--- a/src/sentry/static/sentry/app/stores/environmentStore.jsx
+++ b/src/sentry/static/sentry/app/stores/environmentStore.jsx
@@ -19,14 +19,33 @@ const DEFAULT_EMPTY_ROUTING_NAME = 'none';
 
 const EnvironmentStore = Reflux.createStore({
   init() {
-    this.items = [];
+    this.items = null;
+    this.hidden = null;
     this.defaultEnvironment = null;
     this.listenTo(EnvironmentActions.loadData, this.loadInitialData);
+    this.listenTo(EnvironmentActions.loadActiveData, this.loadActiveData);
+    this.listenTo(EnvironmentActions.loadHiddenData, this.loadHiddenData);
     this.listenTo(ProjectActions.setActive, this.onSetActiveProject);
   },
 
   loadInitialData(items) {
-    this.items = items.map(item => ({
+    this.loadActiveData(items);
+
+    // Update the default environment in the latest context store
+    setDefaultEnvironment(this.getDefault());
+  },
+
+  loadHiddenData(items) {
+    this.loadData('hidden', items);
+  },
+
+  loadActiveData(items) {
+    this.loadData('items', items);
+  },
+
+  loadData(key, items) {
+    items = items || [];
+    this[key] = items.map(item => ({
       id: item.id,
       name: item.name,
       get displayName() {
@@ -36,20 +55,22 @@ const EnvironmentStore = Reflux.createStore({
         return item.name || DEFAULT_EMPTY_ROUTING_NAME;
       },
     }));
-    this.trigger(this.items, 'initial');
-
-    // Update the default environment in the latest context store
-    setDefaultEnvironment(this.getDefault());
+    this.trigger(this[key]);
   },
 
   getByName(name) {
-    return this.items.find(item => item.name === name) || null;
+    const envs = this.items || [];
+    return envs.find(item => item.name === name) || null;
   },
 
-  getAll() {
+  getActive() {
     return this.items;
   },
 
+  getHidden() {
+    return this.hidden;
+  },
+
   onSetActiveProject(project) {
     if (project) {
       this.defaultEnvironment = project.defaultEnvironment || null;
@@ -59,7 +80,7 @@ const EnvironmentStore = Reflux.createStore({
   // Default environment is either the first based on the set of common names
   // or the first in the environment list if none match
   getDefault() {
-    let allEnvs = this.items;
+    let allEnvs = this.items || [];
 
     let defaultEnv = allEnvs.find(e => e.name === this.defaultEnvironment);
 
diff --git a/src/sentry/static/sentry/app/views/projectEnvironments.jsx b/src/sentry/static/sentry/app/views/projectEnvironments.jsx
index c65157c7f7..23c4705d60 100644
--- a/src/sentry/static/sentry/app/views/projectEnvironments.jsx
+++ b/src/sentry/static/sentry/app/views/projectEnvironments.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import PropTypes from 'prop-types';
 import Reflux from 'reflux';
 import createReactClass from 'create-react-class';
 
@@ -9,30 +10,140 @@ import PanelBody from './settings/components/panelBody';
 import EmptyMessage from './settings/components/emptyMessage';
 import {t} from '../locale';
 import PanelItem from './settings/components/panelItem';
+import Button from '../components/buttons/button';
 import SettingsPageHeader from './settings/components/settingsPageHeader';
 import ListLink from '../components/listLink';
+import ApiMixin from '../mixins/apiMixin';
+
+import LoadingIndicator from '../components/loadingIndicator';
+import IndicatorStore from '../stores/indicatorStore';
+
+import {
+  loadActiveEnvironments,
+  loadHiddenEnvironments,
+} from '../actionCreators/environments';
 
 const ProjectEnvironments = createReactClass({
-  mixins: [Reflux.listenTo(EnvironmentStore, 'onEnvironmentsChange')],
+  propTypes: {
+    route: PropTypes.object,
+    params: PropTypes.object,
+  },
+  mixins: [ApiMixin, Reflux.listenTo(EnvironmentStore, 'onEnvironmentsChange')],
+
   getInitialState() {
+    const isHidden = this.props.route.path === 'environments/hidden/';
+    const environments = isHidden
+      ? EnvironmentStore.getHidden()
+      : EnvironmentStore.getActive();
+
     return {
-      environments: EnvironmentStore.getAll(),
+      environments,
+      isHidden,
     };
   },
+
+  componentDidMount() {
+    if (this.state.environments === null) {
+      this.fetchData(this.state.isHidden);
+    }
+  },
+
+  componentWillReceiveProps(nextProps) {
+    const isHidden = nextProps.route.path === 'environments/hidden/';
+    const environments = isHidden
+      ? EnvironmentStore.getHidden()
+      : EnvironmentStore.getActive();
+    this.setState(
+      {
+        isHidden,
+        environments,
+      },
+      () => {
+        if (environments === null) {
+          this.fetchData(isHidden);
+        }
+      }
+    );
+  },
+
+  refetchAll() {
+    this.fetchData(true);
+    this.fetchData(false);
+  },
+
+  fetchData(hidden) {
+    const {orgId, projectId} = this.props.params;
+    this.api.request(`/projects/${orgId}/${projectId}/environments/`, {
+      query: {
+        visibility: hidden ? 'hidden' : 'visible',
+      },
+      success: env => {
+        const load = hidden ? loadHiddenEnvironments : loadActiveEnvironments;
+        load(env);
+      },
+    });
+  },
+
   onEnvironmentsChange() {
+    const {isHidden} = this.state;
+
     this.setState({
-      environments: EnvironmentStore.getAll(),
+      environments: isHidden
+        ? EnvironmentStore.getHidden()
+        : EnvironmentStore.getActive(),
     });
   },
+
+  toggleEnv(env, shouldHide) {
+    const {orgId, projectId} = this.props.params;
+
+    this.api.request(
+      `/projects/${orgId}/${projectId}/environments/${env.urlRoutingName}/`,
+      {
+        method: 'PUT',
+        data: {
+          name: env.name,
+          isHidden: shouldHide,
+        },
+        success: e => {
+          IndicatorStore.addSuccess(t('Update successful'));
+        },
+        error: err => {
+          IndicatorStore.addError(t('An error occurred'));
+        },
+        complete: this.refetchAll,
+      }
+    );
+  },
+
   renderEmpty() {
-    return <EmptyMessage>{t("You don't have any environments yet.")}</EmptyMessage>;
+    const {isHidden} = this.state;
+    const message = isHidden
+      ? t("You don't have any hidden environments.")
+      : t("You don't have any environments yet.");
+    return <EmptyMessage>{message}</EmptyMessage>;
   },
+
   renderEnvironmentList(envs) {
-    return envs.map(env => <PanelItem key={env.id}>{env.displayName}</PanelItem>);
+    const {isHidden} = this.state;
+    const buttonText = isHidden ? t('Show') : t('Hide');
+    return envs.map(env => (
+      <PanelItem key={env.id} style={{justifyContent: 'space-between'}}>
+        <span>{env.displayName}</span>
+        <Button size="xsmall" onClick={() => this.toggleEnv(env, !isHidden)}>
+          {buttonText}
+        </Button>
+      </PanelItem>
+    ));
   },
+
   render() {
-    let {environments} = this.state;
-    let {orgId, projectId} = this.props.params;
+    const {environments} = this.state;
+    const {orgId, projectId} = this.props.params;
+
+    if (environments === null) {
+      return <LoadingIndicator />;
+    }
 
     return (
       <div>
@@ -43,11 +154,19 @@ const ProjectEnvironments = createReactClass({
               <ListLink to={`/${orgId}/${projectId}/settings/environments/`} index={true}>
                 {t('Environments')}
               </ListLink>
+              <ListLink
+                to={`/${orgId}/${projectId}/settings/environments/hidden/`}
+                index={true}
+              >
+                {t('Hidden')}
+              </ListLink>
             </ul>
           }
         />
         <Panel>
-          <PanelHeader>{t('Environments')}</PanelHeader>
+          <PanelHeader>
+            {this.state.isHidden ? t('Hidden') : t('Active Environments')}
+          </PanelHeader>
           <PanelBody>
             {environments.length
               ? this.renderEnvironmentList(environments)
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index 2f41d59fac..b73149f6e1 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -104,7 +104,10 @@ const ProjectSettings = createReactClass({
             >
               {t('Alerts')}
             </ListLink>
-            <ListLink to={`/${orgId}/${projectId}/settings/environments/`}>
+            <ListLink
+              to={`/${orgId}/${projectId}/settings/environments/`}
+              isActive={loc => path.indexOf(loc.pathname) === 0}
+            >
               {t('Environments')}
             </ListLink>
             <ListLink to={`/${orgId}/${projectId}/settings/tags/`}>{t('Tags')}</ListLink>
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 1c93b365d3..205af11682 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -170,6 +170,17 @@ window.TestStubs = {
     ...params,
   }),
 
+  Environments: hidden => {
+    if (hidden) {
+      return [{id: '1', name: 'zzz', isHidden: true}];
+    } else {
+      return [
+        {id: '1', name: 'production', isHidden: false},
+        {id: '2', name: 'staging', isHidden: false},
+      ];
+    }
+  },
+
   GitHubRepositoryProvider: params => {
     return {
       id: 'github',
diff --git a/tests/js/spec/components/group/releaseStats.spec.jsx b/tests/js/spec/components/group/releaseStats.spec.jsx
index beaf615c71..8a10cfca55 100644
--- a/tests/js/spec/components/group/releaseStats.spec.jsx
+++ b/tests/js/spec/components/group/releaseStats.spec.jsx
@@ -2,6 +2,7 @@ import React from 'react';
 import {mount} from 'enzyme';
 
 import GroupReleaseStats from 'app/components/group/releaseStats';
+import EnvironmentStore from 'app/stores/environmentStore';
 
 describe('GroupReleaseStats', function() {
   let component;
@@ -19,6 +20,7 @@ describe('GroupReleaseStats', function() {
   });
 
   it('renders', function() {
+    EnvironmentStore.loadInitialData(TestStubs.Environments());
     expect(component).toMatchSnapshot();
   });
 });
diff --git a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
index dc283cd3f2..c60d89d86b 100644
--- a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
@@ -1,6 +1,6 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`ProjectEnvironments render() renders empty message 1`] = `
+exports[`ProjectEnvironments render active renders empty message 1`] = `
 .glamor-4 {
   font-size: 14px;
   box-shadow: inset 0 -1px 0;
@@ -82,6 +82,699 @@ exports[`ProjectEnvironments render() renders empty message 1`] = `
       "projectId": "project-slug",
     }
   }
+  route={
+    Object {
+      "path": "environments/",
+    }
+  }
+>
+  <div>
+    <SettingsPageHeading
+      tabs={
+        <ul
+          className="nav nav-tabs"
+          style={
+            Object {
+              "borderBottom": "1px solid #ddd",
+            }
+          }
+        >
+          <ListLink
+            activeClassName="active"
+            index={true}
+            to="/org-slug/project-slug/settings/environments/"
+          >
+            Environments
+          </ListLink>
+          <ListLink
+            activeClassName="active"
+            index={true}
+            to="/org-slug/project-slug/settings/environments/hidden/"
+          >
+            Hidden
+          </ListLink>
+        </ul>
+      }
+      title="Manage Environments"
+    >
+      <Wrapper
+        tabs={
+          <ul
+            className="nav nav-tabs"
+            style={
+              Object {
+                "borderBottom": "1px solid #ddd",
+              }
+            }
+          >
+            <ListLink
+              activeClassName="active"
+              index={true}
+              to="/org-slug/project-slug/settings/environments/"
+            >
+              Environments
+            </ListLink>
+            <ListLink
+              activeClassName="active"
+              index={true}
+              to="/org-slug/project-slug/settings/environments/hidden/"
+            >
+              Hidden
+            </ListLink>
+          </ul>
+        }
+      >
+        <div
+          className="glamor-4 glamor-5"
+        >
+          <Flex
+            align="center"
+          >
+            <Base
+              align="center"
+              className="glamor-2"
+            >
+              <div
+                className="glamor-2"
+                is={null}
+              >
+                <Title>
+                  <div
+                    className="glamor-0 glamor-1"
+                  >
+                    Manage Environments
+                  </div>
+                </Title>
+              </div>
+            </Base>
+          </Flex>
+          <div>
+            <ul
+              className="nav nav-tabs"
+              style={
+                Object {
+                  "borderBottom": "1px solid #ddd",
+                }
+              }
+            >
+              <ListLink
+                activeClassName="active"
+                index={true}
+                to="/org-slug/project-slug/settings/environments/"
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onlyActiveOnIndex={true}
+                    style={Object {}}
+                    to="/org-slug/project-slug/settings/environments/"
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Environments
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={true}
+                to="/org-slug/project-slug/settings/environments/hidden/"
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onlyActiveOnIndex={true}
+                    style={Object {}}
+                    to="/org-slug/project-slug/settings/environments/hidden/"
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Hidden
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+            </ul>
+          </div>
+        </div>
+      </Wrapper>
+    </SettingsPageHeading>
+    <Panel>
+      <div
+        className="glamor-19 glamor-20"
+      >
+        <PanelHeader>
+          <StyledPanelHeader>
+            <Component
+              className="glamor-13 glamor-14"
+            >
+              <div
+                className="glamor-13 glamor-14"
+              >
+                <StyledPanelHeading>
+                  <Component
+                    className="glamor-9 glamor-6"
+                  >
+                    <_default
+                      className="glamor-9 glamor-6"
+                    >
+                      <div
+                        className="glamor-6 glamor-7 glamor-8"
+                      >
+                        Active Environments
+                      </div>
+                    </_default>
+                  </Component>
+                </StyledPanelHeading>
+              </div>
+            </Component>
+          </StyledPanelHeader>
+        </PanelHeader>
+        <PanelBody
+          direction="column"
+          disablePadding={true}
+          flex={false}
+        >
+          <div
+            className=""
+          >
+            <EmptyMessage>
+              <div
+                className="glamor-17 glamor-18"
+              >
+                You don't have any environments yet.
+              </div>
+            </EmptyMessage>
+          </div>
+        </PanelBody>
+      </div>
+    </Panel>
+  </div>
+</ProjectEnvironments>
+`;
+
+exports[`ProjectEnvironments render active renders environment list 1`] = `
+.glamor-4 {
+  font-size: 14px;
+  box-shadow: inset 0 -1px 0;
+  margin: -20px 0 30px;
+}
+
+.glamor-2 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-align-items: center;
+  -webkit-box-align: center;
+  -ms-flex-align: center;
+  align-items: center;
+}
+
+.glamor-0 {
+  font-size: 20px;
+  font-weight: bold;
+  margin: 20px 0;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-25 {
+  background: #fff;
+  border: 1px solid;
+  margin-bottom: NaNpx;
+  position: relative;
+}
+
+.glamor-13 {
+  border-bottom: 1px solid;
+  border-radius: 0 0;
+  text-transform: uppercase;
+  font-size: 13px;
+  line-height: 1;
+  padding: 15px 20px;
+}
+
+.glamor-9 {
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-7 {
+  font-size: 12px;
+  font-weight: 600;
+  text-transform: uppercase;
+  margin-bottom: 20px;
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-17 {
+  box-sizing: border-box;
+  padding: 16px;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  border-bottom: 1px solid;
+}
+
+.glamor-17:last-child {
+  border: 0;
+}
+
+<ProjectEnvironments
+  params={
+    Object {
+      "orgId": "org-slug",
+      "projectId": "project-slug",
+    }
+  }
+  route={
+    Object {
+      "path": "environments/",
+    }
+  }
+>
+  <div>
+    <SettingsPageHeading
+      tabs={
+        <ul
+          className="nav nav-tabs"
+          style={
+            Object {
+              "borderBottom": "1px solid #ddd",
+            }
+          }
+        >
+          <ListLink
+            activeClassName="active"
+            index={true}
+            to="/org-slug/project-slug/settings/environments/"
+          >
+            Environments
+          </ListLink>
+          <ListLink
+            activeClassName="active"
+            index={true}
+            to="/org-slug/project-slug/settings/environments/hidden/"
+          >
+            Hidden
+          </ListLink>
+        </ul>
+      }
+      title="Manage Environments"
+    >
+      <Wrapper
+        tabs={
+          <ul
+            className="nav nav-tabs"
+            style={
+              Object {
+                "borderBottom": "1px solid #ddd",
+              }
+            }
+          >
+            <ListLink
+              activeClassName="active"
+              index={true}
+              to="/org-slug/project-slug/settings/environments/"
+            >
+              Environments
+            </ListLink>
+            <ListLink
+              activeClassName="active"
+              index={true}
+              to="/org-slug/project-slug/settings/environments/hidden/"
+            >
+              Hidden
+            </ListLink>
+          </ul>
+        }
+      >
+        <div
+          className="glamor-4 glamor-5"
+        >
+          <Flex
+            align="center"
+          >
+            <Base
+              align="center"
+              className="glamor-2"
+            >
+              <div
+                className="glamor-2"
+                is={null}
+              >
+                <Title>
+                  <div
+                    className="glamor-0 glamor-1"
+                  >
+                    Manage Environments
+                  </div>
+                </Title>
+              </div>
+            </Base>
+          </Flex>
+          <div>
+            <ul
+              className="nav nav-tabs"
+              style={
+                Object {
+                  "borderBottom": "1px solid #ddd",
+                }
+              }
+            >
+              <ListLink
+                activeClassName="active"
+                index={true}
+                to="/org-slug/project-slug/settings/environments/"
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onlyActiveOnIndex={true}
+                    style={Object {}}
+                    to="/org-slug/project-slug/settings/environments/"
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Environments
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={true}
+                to="/org-slug/project-slug/settings/environments/hidden/"
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onlyActiveOnIndex={true}
+                    style={Object {}}
+                    to="/org-slug/project-slug/settings/environments/hidden/"
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Hidden
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+            </ul>
+          </div>
+        </div>
+      </Wrapper>
+    </SettingsPageHeading>
+    <Panel>
+      <div
+        className="glamor-25 glamor-26"
+      >
+        <PanelHeader>
+          <StyledPanelHeader>
+            <Component
+              className="glamor-13 glamor-14"
+            >
+              <div
+                className="glamor-13 glamor-14"
+              >
+                <StyledPanelHeading>
+                  <Component
+                    className="glamor-9 glamor-6"
+                  >
+                    <_default
+                      className="glamor-9 glamor-6"
+                    >
+                      <div
+                        className="glamor-6 glamor-7 glamor-8"
+                      >
+                        Active Environments
+                      </div>
+                    </_default>
+                  </Component>
+                </StyledPanelHeading>
+              </div>
+            </Component>
+          </StyledPanelHeader>
+        </PanelHeader>
+        <PanelBody
+          direction="column"
+          disablePadding={true}
+          flex={false}
+        >
+          <div
+            className=""
+          >
+            <PanelItem
+              key="1"
+              p={2}
+              style={
+                Object {
+                  "justifyContent": "space-between",
+                }
+              }
+            >
+              <StyledPanelItem
+                p={2}
+                style={
+                  Object {
+                    "justifyContent": "space-between",
+                  }
+                }
+              >
+                <Base
+                  className="glamor-17 glamor-18"
+                  p={2}
+                  style={
+                    Object {
+                      "justifyContent": "space-between",
+                    }
+                  }
+                >
+                  <div
+                    className="glamor-17 glamor-18"
+                    is={null}
+                    style={
+                      Object {
+                        "justifyContent": "space-between",
+                      }
+                    }
+                  >
+                    <span>
+                      Production
+                    </span>
+                    <Button
+                      disabled={false}
+                      onClick={[Function]}
+                      size="xsmall"
+                    >
+                      <button
+                        className="button button-default button-xs"
+                        disabled={false}
+                        onClick={[Function]}
+                        role="button"
+                      >
+                        <FlowLayout
+                          truncate={false}
+                        >
+                          <div
+                            className="flow-layout"
+                          >
+                            <span
+                              className="button-label"
+                            >
+                              Hide
+                            </span>
+                          </div>
+                        </FlowLayout>
+                      </button>
+                    </Button>
+                  </div>
+                </Base>
+              </StyledPanelItem>
+            </PanelItem>
+            <PanelItem
+              key="2"
+              p={2}
+              style={
+                Object {
+                  "justifyContent": "space-between",
+                }
+              }
+            >
+              <StyledPanelItem
+                p={2}
+                style={
+                  Object {
+                    "justifyContent": "space-between",
+                  }
+                }
+              >
+                <Base
+                  className="glamor-17 glamor-18"
+                  p={2}
+                  style={
+                    Object {
+                      "justifyContent": "space-between",
+                    }
+                  }
+                >
+                  <div
+                    className="glamor-17 glamor-18"
+                    is={null}
+                    style={
+                      Object {
+                        "justifyContent": "space-between",
+                      }
+                    }
+                  >
+                    <span>
+                      Staging
+                    </span>
+                    <Button
+                      disabled={false}
+                      onClick={[Function]}
+                      size="xsmall"
+                    >
+                      <button
+                        className="button button-default button-xs"
+                        disabled={false}
+                        onClick={[Function]}
+                        role="button"
+                      >
+                        <FlowLayout
+                          truncate={false}
+                        >
+                          <div
+                            className="flow-layout"
+                          >
+                            <span
+                              className="button-label"
+                            >
+                              Hide
+                            </span>
+                          </div>
+                        </FlowLayout>
+                      </button>
+                    </Button>
+                  </div>
+                </Base>
+              </StyledPanelItem>
+            </PanelItem>
+          </div>
+        </PanelBody>
+      </div>
+    </Panel>
+  </div>
+</ProjectEnvironments>
+`;
+
+exports[`ProjectEnvironments render hidden renders empty message 1`] = `
+.glamor-4 {
+  font-size: 14px;
+  box-shadow: inset 0 -1px 0;
+  margin: -20px 0 30px;
+}
+
+.glamor-2 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-align-items: center;
+  -webkit-box-align: center;
+  -ms-flex-align: center;
+  align-items: center;
+}
+
+.glamor-0 {
+  font-size: 20px;
+  font-weight: bold;
+  margin: 20px 0;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-19 {
+  background: #fff;
+  border: 1px solid;
+  margin-bottom: NaNpx;
+  position: relative;
+}
+
+.glamor-13 {
+  border-bottom: 1px solid;
+  border-radius: 0 0;
+  text-transform: uppercase;
+  font-size: 13px;
+  line-height: 1;
+  padding: 15px 20px;
+}
+
+.glamor-9 {
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-7 {
+  font-size: 12px;
+  font-weight: 600;
+  text-transform: uppercase;
+  margin-bottom: 20px;
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-17 {
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-box-pack: center;
+  -webkit-justify-content: center;
+  -ms-flex-pack: center;
+  justify-content: center;
+  padding: 18px;
+  font-size: 1.5em;
+  opacity: 0.4;
+  font-weight: bold;
+}
+
+<ProjectEnvironments
+  params={
+    Object {
+      "orgId": "org-slug",
+      "projectId": "project-slug",
+    }
+  }
+  route={
+    Object {
+      "path": "environments/hidden/",
+    }
+  }
 >
   <div>
     <SettingsPageHeading
@@ -101,6 +794,13 @@ exports[`ProjectEnvironments render() renders empty message 1`] = `
           >
             Environments
           </ListLink>
+          <ListLink
+            activeClassName="active"
+            index={true}
+            to="/org-slug/project-slug/settings/environments/hidden/"
+          >
+            Hidden
+          </ListLink>
         </ul>
       }
       title="Manage Environments"
@@ -122,6 +822,13 @@ exports[`ProjectEnvironments render() renders empty message 1`] = `
             >
               Environments
             </ListLink>
+            <ListLink
+              activeClassName="active"
+              index={true}
+              to="/org-slug/project-slug/settings/environments/hidden/"
+            >
+              Hidden
+            </ListLink>
           </ul>
         }
       >
@@ -180,6 +887,28 @@ exports[`ProjectEnvironments render() renders empty message 1`] = `
                   </Link>
                 </li>
               </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={true}
+                to="/org-slug/project-slug/settings/environments/hidden/"
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onlyActiveOnIndex={true}
+                    style={Object {}}
+                    to="/org-slug/project-slug/settings/environments/hidden/"
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Hidden
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
             </ul>
           </div>
         </div>
@@ -207,7 +936,7 @@ exports[`ProjectEnvironments render() renders empty message 1`] = `
                       <div
                         className="glamor-6 glamor-7 glamor-8"
                       >
-                        Environments
+                        Hidden
                       </div>
                     </_default>
                   </Component>
@@ -228,7 +957,7 @@ exports[`ProjectEnvironments render() renders empty message 1`] = `
               <div
                 className="glamor-17 glamor-18"
               >
-                You don't have any environments yet.
+                You don't have any hidden environments.
               </div>
             </EmptyMessage>
           </div>
@@ -239,7 +968,7 @@ exports[`ProjectEnvironments render() renders empty message 1`] = `
 </ProjectEnvironments>
 `;
 
-exports[`ProjectEnvironments render() renders environment list 1`] = `
+exports[`ProjectEnvironments render hidden renders environment list 1`] = `
 .glamor-4 {
   font-size: 14px;
   box-shadow: inset 0 -1px 0;
@@ -320,6 +1049,11 @@ exports[`ProjectEnvironments render() renders environment list 1`] = `
       "projectId": "project-slug",
     }
   }
+  route={
+    Object {
+      "path": "environments/hidden/",
+    }
+  }
 >
   <div>
     <SettingsPageHeading
@@ -339,6 +1073,13 @@ exports[`ProjectEnvironments render() renders environment list 1`] = `
           >
             Environments
           </ListLink>
+          <ListLink
+            activeClassName="active"
+            index={true}
+            to="/org-slug/project-slug/settings/environments/hidden/"
+          >
+            Hidden
+          </ListLink>
         </ul>
       }
       title="Manage Environments"
@@ -360,6 +1101,13 @@ exports[`ProjectEnvironments render() renders environment list 1`] = `
             >
               Environments
             </ListLink>
+            <ListLink
+              activeClassName="active"
+              index={true}
+              to="/org-slug/project-slug/settings/environments/hidden/"
+            >
+              Hidden
+            </ListLink>
           </ul>
         }
       >
@@ -418,6 +1166,28 @@ exports[`ProjectEnvironments render() renders environment list 1`] = `
                   </Link>
                 </li>
               </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={true}
+                to="/org-slug/project-slug/settings/environments/hidden/"
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onlyActiveOnIndex={true}
+                    style={Object {}}
+                    to="/org-slug/project-slug/settings/environments/hidden/"
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Hidden
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
             </ul>
           </div>
         </div>
@@ -445,7 +1215,7 @@ exports[`ProjectEnvironments render() renders environment list 1`] = `
                       <div
                         className="glamor-6 glamor-7 glamor-8"
                       >
-                        Environments
+                        Hidden
                       </div>
                     </_default>
                   </Component>
@@ -465,19 +1235,67 @@ exports[`ProjectEnvironments render() renders environment list 1`] = `
             <PanelItem
               key="1"
               p={2}
+              style={
+                Object {
+                  "justifyContent": "space-between",
+                }
+              }
             >
               <StyledPanelItem
                 p={2}
+                style={
+                  Object {
+                    "justifyContent": "space-between",
+                  }
+                }
               >
                 <Base
                   className="glamor-17 glamor-18"
                   p={2}
+                  style={
+                    Object {
+                      "justifyContent": "space-between",
+                    }
+                  }
                 >
                   <div
                     className="glamor-17 glamor-18"
                     is={null}
+                    style={
+                      Object {
+                        "justifyContent": "space-between",
+                      }
+                    }
                   >
-                    Production
+                    <span>
+                      Zzz
+                    </span>
+                    <Button
+                      disabled={false}
+                      onClick={[Function]}
+                      size="xsmall"
+                    >
+                      <button
+                        className="button button-default button-xs"
+                        disabled={false}
+                        onClick={[Function]}
+                        role="button"
+                      >
+                        <FlowLayout
+                          truncate={false}
+                        >
+                          <div
+                            className="flow-layout"
+                          >
+                            <span
+                              className="button-label"
+                            >
+                              Show
+                            </span>
+                          </div>
+                        </FlowLayout>
+                      </button>
+                    </Button>
                   </div>
                 </Base>
               </StyledPanelItem>
diff --git a/tests/js/spec/views/projectEnvironments.spec.jsx b/tests/js/spec/views/projectEnvironments.spec.jsx
index 870e5b20ad..c2339521c1 100644
--- a/tests/js/spec/views/projectEnvironments.spec.jsx
+++ b/tests/js/spec/views/projectEnvironments.spec.jsx
@@ -1,49 +1,110 @@
 import React from 'react';
-import PropTypes from 'prop-types';
 import {mount} from 'enzyme';
 
 import ProjectEnvironments from 'app/views/projectEnvironments';
 
 import EnvironmentStore from 'app/stores/environmentStore';
 
+function mountComponent(isHidden) {
+  const org = TestStubs.Organization();
+  const project = TestStubs.Project();
+  let path = isHidden ? 'environments/hidden/' : 'environments/';
+  return mount(
+    <ProjectEnvironments
+      params={{
+        orgId: org.slug,
+        projectId: project.slug,
+      }}
+      route={{path}}
+    />,
+    TestStubs.routerContext()
+  );
+}
+
 describe('ProjectEnvironments', function() {
-  let org;
-  let project;
+  afterEach(function() {
+    MockApiClient.clearMockResponses();
+  });
+
+  describe('render active', function() {
+    it('renders empty message', function() {
+      EnvironmentStore.loadInitialData([]);
+      const wrapper = mountComponent(false);
+      expect(wrapper.text()).toContain("You don't have any environments yet");
+      expect(wrapper).toMatchSnapshot();
+    });
 
-  beforeEach(function() {
-    org = TestStubs.Organization();
-    project = TestStubs.Project();
+    it('renders environment list', function() {
+      EnvironmentStore.loadInitialData(TestStubs.Environments(false));
+      const wrapper = mountComponent(false);
+      expect(wrapper).toMatchSnapshot();
+    });
   });
 
-  describe('render()', function() {
+  describe('render hidden', function() {
     it('renders empty message', function() {
-      let wrapper = mount(
-        <ProjectEnvironments params={{orgId: org.slug, projectId: project.slug}} />,
-        {
-          context: {
-            router: TestStubs.router(),
-          },
-          childContextTypes: {
-            router: PropTypes.object,
-          },
-        }
-      );
+      EnvironmentStore.loadHiddenData([]);
+
+      const wrapper = mountComponent(true);
+
+      expect(wrapper.text()).toContain("You don't have any hidden environments");
 
       expect(wrapper).toMatchSnapshot();
     });
 
     it('renders environment list', function() {
-      EnvironmentStore.loadInitialData([{id: 1, name: 'production'}]);
-      let wrapper = mount(
-        <ProjectEnvironments params={{orgId: org.slug, projectId: project.slug}} />,
-        {
-          context: {router: TestStubs.router()},
-          childContextTypes: {
-            router: PropTypes.object,
-          },
-        }
-      );
+      EnvironmentStore.loadHiddenData(TestStubs.Environments(true));
+      const wrapper = mountComponent(true);
+
       expect(wrapper).toMatchSnapshot();
     });
   });
+
+  describe('toggle', function() {
+    let hideMock, showMock;
+    const baseUrl = '/projects/org-slug/project-slug/environments/';
+    beforeEach(function() {
+      hideMock = MockApiClient.addMockResponse({
+        url: `${baseUrl}production/`,
+        method: 'PUT',
+      });
+      showMock = MockApiClient.addMockResponse({
+        url: `${baseUrl}zzz/`,
+        method: 'PUT',
+      });
+
+      MockApiClient.addMockResponse({
+        url: baseUrl,
+      });
+    });
+    it('hides', function() {
+      EnvironmentStore.loadInitialData(TestStubs.Environments(false));
+      const wrapper = mountComponent(false);
+      wrapper
+        .find('Button')
+        .first()
+        .simulate('click');
+      expect(hideMock).toHaveBeenCalledWith(
+        `${baseUrl}production/`,
+        expect.objectContaining({
+          data: expect.objectContaining({isHidden: true}),
+        })
+      );
+    });
+
+    it('shows', function() {
+      EnvironmentStore.loadHiddenData(TestStubs.Environments(true));
+      const wrapper = mountComponent(true);
+      wrapper
+        .find('Button')
+        .first()
+        .simulate('click');
+      expect(showMock).toHaveBeenCalledWith(
+        `${baseUrl}zzz/`,
+        expect.objectContaining({
+          data: expect.objectContaining({isHidden: false}),
+        })
+      );
+    });
+  });
 });
