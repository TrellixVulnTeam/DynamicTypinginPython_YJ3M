commit 63c61d594e94f8e4a4167e13bfdc00d2b6733eb3
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon Jan 16 16:26:59 2017 +0100

    Fix broken tests

diff --git a/src/sentry/stacktraces.py b/src/sentry/stacktraces.py
index 82b4a70839..9ba4cd358c 100644
--- a/src/sentry/stacktraces.py
+++ b/src/sentry/stacktraces.py
@@ -156,9 +156,12 @@ def process_single_stacktrace(stacktrace_info, processors):
     )
 
 
-def process_stacktraces(data):
+def process_stacktraces(data, make_processors=None):
     infos = find_stacktraces_in_data(data)
-    processors = get_processors_for_stacktraces(data, infos)
+    if make_processors is None:
+        processors = get_processors_for_stacktraces(data, infos)
+    else:
+        processors = make_processors(data, infos)
     changed = False
 
     for stacktrace_info in infos:
diff --git a/tests/sentry/lang/native/test_plugin.py b/tests/sentry/lang/native/test_plugin.py
index 43ec4b9ef0..620b2b910d 100644
--- a/tests/sentry/lang/native/test_plugin.py
+++ b/tests/sentry/lang/native/test_plugin.py
@@ -56,10 +56,6 @@ class BasicResolvingIntegrationTest(TestCase):
     def test_frame_resolution(self, symbolize_frame):
         self._do_test_frame_resolution('stacktrace', symbolize_frame)
 
-    @patch('sentry.lang.native.symbolizer.Symbolizer.symbolize_app_frame')
-    def test_frame_resolution_raw(self, symbolize_frame):
-        self._do_test_frame_resolution('raw_stacktrace', symbolize_frame)
-
     def _do_test_frame_resolution(self, stacktrace_key, symbolize_frame):
         object_name = (
             "/var/containers/Bundle/Application/"
diff --git a/tests/sentry/lang/native/test_processor.py b/tests/sentry/lang/native/test_processor.py
index 7d4b17a50f..a2318e7de6 100644
--- a/tests/sentry/lang/native/test_processor.py
+++ b/tests/sentry/lang/native/test_processor.py
@@ -3,7 +3,8 @@ from __future__ import absolute_import
 from mock import patch
 
 from sentry.testutils import TestCase
-from sentry.lang.native.plugin import resolve_frame_symbols
+from sentry.lang.native.plugin import NativeStacktraceProcessor
+from sentry.stacktraces import process_stacktraces
 
 
 OBJECT_NAME = (
@@ -164,7 +165,10 @@ class BasicResolvingFileTest(TestCase):
             }
         }
 
-        resolve_frame_symbols(event_data)
+        def make_processors(data, infos):
+            return [NativeStacktraceProcessor(data, infos)]
+        event_data = process_stacktraces(
+            event_data, make_processors=make_processors)
 
         bt = event_data['sentry.interfaces.Exception']['values'][0]['stacktrace']
         frames = bt['frames']
