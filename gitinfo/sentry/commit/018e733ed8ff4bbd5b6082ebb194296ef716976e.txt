commit 018e733ed8ff4bbd5b6082ebb194296ef716976e
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Dec 2 20:29:20 2012 -0800

    Improve invite flow

diff --git a/src/sentry/models.py b/src/sentry/models.py
index 072e97b301..13467ff0b6 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -84,6 +84,15 @@ class Team(Model):
             self.slug = slugify(self.name)
         super(Team, self).save(*args, **kwargs)
 
+    def get_owner_name(self):
+        if not self.owner:
+            return None
+        if self.owner.first_name:
+            return self.owner.first_name
+        if self.owner.email:
+            return self.owner.email.split('@', 1)[0]
+        return self.owner.username
+
 
 class TeamMember(Model):
     """
diff --git a/src/sentry/templates/sentry/register.html b/src/sentry/templates/sentry/register.html
index 5cbab651d7..e22c50d331 100644
--- a/src/sentry/templates/sentry/register.html
+++ b/src/sentry/templates/sentry/register.html
@@ -32,6 +32,9 @@
                     {% endfor %}
 
                     <fieldset class="form-actions">
+                        <div class="pull-right" style="margin-top: 5px;">
+                            <a href="{% url sentry-login %}">{% trans "Login as an existing user" %}</a>
+                        </div>
                         <button type="submit" class="btn btn-primary">{% trans "Register" %}</button>
                     </fieldset>
                 </form>
@@ -47,7 +50,7 @@
                     <br>
                     <ul class="auth-options">
                         {% for engine in AUTH_PROVIDERS %}
-                            <li><a href="{% url socialauth_begin engine %}" class="auth-{{ engine }}">Sign in with {{ engine|title }}</a></li>
+                            <li><a href="{% url socialauth_begin engine %}" class="auth-{{ engine }}">{% blocktrans with service=engine|title %}Sign in with {{ service }}{% endblocktrans %}</a></li>
                         {% endfor %}
                     </ul>
                 </div>
diff --git a/src/sentry/templates/sentry/teams/members/accept_invite.html b/src/sentry/templates/sentry/teams/members/accept_invite.html
index c1d47bda15..4aa2778cc1 100644
--- a/src/sentry/templates/sentry/teams/members/accept_invite.html
+++ b/src/sentry/templates/sentry/teams/members/accept_invite.html
@@ -9,12 +9,28 @@
 
 {% block main %}
     <section class="body">
-        <p>{% blocktrans with team.name as team_name %}You have been invited to join the <strong>{{ team_name }}</strong> team.{% endblocktrans %}</p>
+        <div class="row">
+            <div class="span7">
+                <div class="page-header">
+                    <h2>Team Invite</h2>
+                </div>
 
-        <form method="POST">
-            {% csrf_token %}
-            <p>{% trans "If you do not wish to join this team, you can safely close this page and ignore the invite." %}
-            <p><button type="submit" class="btn btn-primary">{% blocktrans with team.name as team_name %}Join <em>{{ team_name }}</em>{% endblocktrans %}</button></p>
-        </form>
+                <p style="font-size: 1.3em;">{% blocktrans with team_name=team.name %}<strong>{{ team_owner }}</strong> is using Sentry to aggregate errors for the <strong>{{ team_name }}</strong> team.{% endblocktrans %}</p>
+
+                <p>{% blocktrans with project_count=project_list|length %}You have been invited to join this team, which manages <strong>{{ project_count }}</strong> project(s):{% endblocktrans %}</p>
+                <ul>
+                    {% for project in project_list|slice:"5" %}
+                        <li>
+                            {{ project.name }}
+                        </li>
+                    {% endfor %}
+                </ul>
+                <form method="POST">
+                    {% csrf_token %}
+
+                    <p><button type="submit" class="btn btn-primary">{% blocktrans with team_name=team.name %}Join the {{ team_name }} team{% endblocktrans %}</button></p>
+                </form>
+            </div>
+        </div>
     </section>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/teams/members/accept_invite_unauthenticated.html b/src/sentry/templates/sentry/teams/members/accept_invite_unauthenticated.html
index 7bb5373ee2..263d1f2f20 100644
--- a/src/sentry/templates/sentry/teams/members/accept_invite_unauthenticated.html
+++ b/src/sentry/templates/sentry/teams/members/accept_invite_unauthenticated.html
@@ -9,10 +9,34 @@
 
 {% block main %}
     <section class="body">
-        <p>{% blocktrans with team.name as team_name %}You have been invited to join the <strong>{{ team_name }}</strong> team.{% endblocktrans %}</p>
+        <div class="row">
+            <div class="span7">
+                <div class="page-header">
+                    <h2>Team Invite</h2>
+                </div>
 
-        <p>{% trans "To continue, you must either login to your existing account, or create a new one." %}</p>
+                <p style="font-size: 1.3em;">{% blocktrans with team_name=team.name %}<strong>{{ team_owner }}</strong> is using Sentry to aggregate errors for the <strong>{{ team_name }}</strong> team.{% endblocktrans %}</p>
 
-        <p><a href="{% url sentry-login %}" class="btn btn-large btn-primary">Login</a> or <a href="{% url sentry-register %}" class="btn btn-large btn-primary">New account</a></p>
+                <p>{% blocktrans with project_count=project_list|length %}You have been invited to join this team, which manages <strong>{{ project_count }}</strong> project(s):{% endblocktrans %}</p>
+                <ul>
+                    {% for project in project_list|slice:"5" %}
+                        <li>
+                            {{ project.name }}
+                        </li>
+                    {% endfor %}
+                </ul>
+                    {% csrf_token %}
+            
+                    <p>{% trans "To continue, you must either login to your existing account, or create a new one." %}</p>
+
+                    <fieldset class="form-actions">
+                        <div class="pull-right" style="margin-top: 5px;">
+                            <a href="{% url sentry-login %}">{% trans "Login as an existing user" %}</a>
+                        </div>
+                        <a href="{% url sentry-register %}" class="btn btn-primary">{% trans "Create a new account" %}</a>
+                    </fieldset>
+                </form>
+            </div>
+        </div>
     </section>
 {% endblock %}
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index 12cfba8d0e..3b7ae2990f 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -5,6 +5,7 @@ sentry.web.frontend.teams
 :copyright: (c) 2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+from django.contrib import messages
 from django.core.context_processors import csrf
 from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
@@ -173,33 +174,37 @@ def accept_invite(request, member_id, token):
 
     team = pending_member.team
 
+    context = {
+        'team': team,
+        'team_owner': team.get_owner_name(),
+        'project_list': list(team.project_set.filter(status=0)),
+    }
+
     if not request.user.is_authenticated():
         # Show login or register form
         request.session['_next'] = request.get_full_path()
         request.session['can_register'] = True
 
-        context = {
-            'team': team,
-        }
         return render_to_response('sentry/teams/members/accept_invite_unauthenticated.html', context, request)
 
     form = AcceptInviteForm(request.POST or None)
     if form.is_valid():
         team.member_set.get_or_create(
             user=request.user,
-            type=pending_member.type,
+            defaults={
+                'type': pending_member.type,
+            }
         )
 
         request.session.pop('can_register', None)
 
         pending_member.delete()
 
+        messages.add_message(request, messages.SUCCESS, 'You have been added to the %r team.' % (team.name.encode('utf-8'),))
+
         return HttpResponseRedirect(reverse('sentry', args=[team.slug]))
 
-    context = {
-        'team': team,
-        'form': form,
-    }
+    context['form'] = form
 
     return render_to_response('sentry/teams/members/accept_invite.html', context, request)
 
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index 11cf744d14..aac0085a1c 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -240,61 +240,23 @@ class NewTeamMemberTest(BaseTeamTest):
         send_invite_email.assert_called_once_with()
 
 
-class AcceptInviteTEst(BaseTeamTest):
-    def test_redirects_on_invalid_member_id(self):
+class AcceptInviteTest(BaseTeamTest):
+    def test_renders_unauthenticated_template(self):
         ptm = PendingTeamMember.objects.create(
             email='newuser@example.com',
             token='foobar',
+            team=self.team,
         )
-        resp = self.client.get(reverse('sentry-accept-invite', args=[self.team.slug]))
-        self.assertEquals(resp.status_code, 302)
-        self.assertTemplateUsed(resp, 'sentry/teams/members/new.html')
-
-    def test_cannot_add_existing_member(self):
-        resp = self.client.post(self.path, {
-            'add-type': MEMBER_USER,
-            'add-user': self.team.owner.username,
-        })
+        resp = self.client.get(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
         self.assertEquals(resp.status_code, 200)
-        self.assertIn('user', resp.context['add_form'].errors)
-
-    def test_does_add_existing_user_as_member(self):
-        user = User.objects.create(username='newuser')
-        resp = self.client.post(self.path, {
-            'add-type': MEMBER_USER,
-            'add-user': user.username,
-        })
-        self.assertEquals(resp.status_code, 302, resp.context['add_form'].errors if resp.status_code != 302 else None)
-        member = self.team.member_set.get(user=user)
-        self.assertEquals(member.type, MEMBER_USER)
+        self.assertTemplateUsed(resp, 'sentry/teams/members/accept_invite_unauthenticated.html')
 
-    def test_cannot_invite_existing_member(self):
-        resp = self.client.post(self.path, {
-            'invite-type': MEMBER_USER,
-            'invite-email': self.team.owner.email,
-        })
+    def test_accepts_invite_and_redirects_if_authenticated(self):
+        ptm = PendingTeamMember.objects.create(
+            email='newuser@example.com',
+            token='foobar',
+            team=self.team,
+        )
+        resp = self.client.get(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
         self.assertEquals(resp.status_code, 200)
-        self.assertIn('email', resp.context['invite_form'].errors)
-
-    @mock.patch('sentry.models.PendingTeamMember.send_invite_email')
-    def test_does_invite_already_registered_user(self, send_invite_email):
-        user = User.objects.create(username='newuser', email='newuser@example.com')
-        resp = self.client.post(self.path, {
-            'invite-type': MEMBER_USER,
-            'invite-email': user.email,
-        })
-        self.assertEquals(resp.status_code, 302)
-        ptm = PendingTeamMember.objects.get(email=user.email, team=self.team)
-        self.assertEquals(ptm.type, MEMBER_USER)
-        send_invite_email.assert_called_once_with()
-
-    @mock.patch('sentry.models.PendingTeamMember.send_invite_email')
-    def test_does_invite_unregistered_user(self, send_invite_email):
-        resp = self.client.post(self.path, {
-            'invite-type': MEMBER_USER,
-            'invite-email': 'newuser@example.com',
-        })
-        self.assertEquals(resp.status_code, 302)
-        ptm = PendingTeamMember.objects.get(email='newuser@example.com', team=self.team)
-        self.assertEquals(ptm.type, MEMBER_USER)
-        send_invite_email.assert_called_once_with()
+        self.assertTemplateUsed(resp, 'sentry/teams/members/accept_invite_unauthenticated.html')
