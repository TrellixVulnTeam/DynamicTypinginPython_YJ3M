commit 672a6cbb4adca49fdf63c50de55d69c963b2c99b
Author: Mark Story <mark@sentry.io>
Date:   Wed Feb 19 11:45:55 2020 -0500

    feat(discover) Remove tabs and use event entries (#16892)
    
    The tab based interface made a lot more sense when the event details
    were in a modal. Now that they are on a page, we can re-use the
    EventEntries component to pull all the details in.
    
    Remove chrome styling from event interfaces.
    
    The primary place these components are used is on issue details.
    However, issue details uses styles defined in LESS to override the box
    chrome for issue details.
    
    We would now like to use these same UI components (with the same
    appearance) in discover2. However, the CSS overrides from issue details
    are not present. By removing the dependency on the LESS styles we can
    delete those and further the styled-component refactor.
    
    Update styling for debug meta and remove borders in discover.
    Fix display of event attachments in discover

diff --git a/src/sentry/static/sentry/app/components/events/eventAttachments.tsx b/src/sentry/static/sentry/app/components/events/eventAttachments.tsx
index 0ce3f93b73..79c274b32c 100644
--- a/src/sentry/static/sentry/app/components/events/eventAttachments.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventAttachments.tsx
@@ -4,14 +4,17 @@ import styled from '@emotion/styled';
 
 import {Client} from 'app/api';
 import {Event, EventAttachment} from 'app/types';
-import {Panel, PanelBody, PanelItem} from 'app/components/panels';
-import overflowEllipsis from 'app/styles/overflowEllipsis';
 import {t} from 'app/locale';
-import AttachmentUrl from 'app/utils/attachmentUrl';
+
+import {Panel, PanelBody, PanelItem} from 'app/components/panels';
+import EventAttachmentActions from 'app/components/events/eventAttachmentActions';
+import EventDataSection from 'app/components/events/eventDataSection';
+
 import FileSize from 'app/components/fileSize';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
 import space from 'app/styles/space';
+import AttachmentUrl from 'app/utils/attachmentUrl';
 import withApi from 'app/utils/withApi';
-import EventAttachmentActions from 'app/components/events/eventAttachmentActions';
 
 type Props = {
   api: Client;
@@ -92,44 +95,40 @@ class EventAttachments extends React.Component<Props, State> {
 
   render() {
     const {attachmentList} = this.state;
-
     if (!attachmentList.length) {
       return null;
     }
+    const {event, projectId} = this.props;
+    const title = t('Attachments (%s)', attachmentList.length);
 
     return (
-      <div className="box">
-        <div className="box-header">
-          <h3>
-            {t('Attachments')} ({attachmentList.length})
-          </h3>
-          <Panel>
-            <PanelBody>
-              {attachmentList.map(attachment => {
-                return (
-                  <PanelItem key={attachment.id} alignItems="center">
-                    <AttachmentName>{attachment.name}</AttachmentName>
-                    <FileSizeWithGap bytes={attachment.size} />
-                    <AttachmentUrl
-                      projectId={this.props.projectId}
-                      eventId={this.props.event.id}
-                      attachment={attachment}
-                    >
-                      {url => (
-                        <EventAttachmentActions
-                          url={url}
-                          onDelete={this.handleDelete}
-                          attachmentId={attachment.id}
-                        />
-                      )}
-                    </AttachmentUrl>
-                  </PanelItem>
-                );
-              })}
-            </PanelBody>
-          </Panel>
-        </div>
-      </div>
+      <EventDataSection type="attachments" title={title}>
+        <Panel>
+          <PanelBody>
+            {attachmentList.map(attachment => {
+              return (
+                <PanelItem key={attachment.id} alignItems="center">
+                  <AttachmentName>{attachment.name}</AttachmentName>
+                  <FileSizeWithGap bytes={attachment.size} />
+                  <AttachmentUrl
+                    projectId={projectId}
+                    eventId={event.id}
+                    attachment={attachment}
+                  >
+                    {url => (
+                      <EventAttachmentActions
+                        url={url}
+                        onDelete={this.handleDelete}
+                        attachmentId={attachment.id}
+                      />
+                    )}
+                  </AttachmentUrl>
+                </PanelItem>
+              );
+            })}
+          </PanelBody>
+        </Panel>
+      </EventDataSection>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/components/events/eventDataSection.tsx b/src/sentry/static/sentry/app/components/events/eventDataSection.tsx
index bd681385d2..9584fe9da5 100644
--- a/src/sentry/static/sentry/app/components/events/eventDataSection.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventDataSection.tsx
@@ -1,22 +1,24 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from '@emotion/styled';
+
 import {t} from 'app/locale';
 import {callIfFunction} from 'app/utils/callIfFunction';
-import GuideAnchor from 'app/components/assistant/guideAnchor';
+import space from 'app/styles/space';
 
 const defaultProps = {
   wrapTitle: true,
   raw: false,
-  hideGuide: false,
 };
 
 type DefaultProps = Readonly<typeof defaultProps>;
 
 type Props = {
   className?: string;
-  title: React.ReactText;
+  title: React.ReactNode;
   type: string;
   toggleRaw?: (enable: boolean) => void;
+  actions?: React.ReactNode;
 } & DefaultProps;
 
 class EventDataSection extends React.Component<Props> {
@@ -26,7 +28,7 @@ class EventDataSection extends React.Component<Props> {
     wrapTitle: PropTypes.bool,
     toggleRaw: PropTypes.func,
     raw: PropTypes.bool,
-    hideGuide: PropTypes.bool,
+    actions: PropTypes.node,
   };
 
   static defaultProps = defaultProps;
@@ -55,33 +57,26 @@ class EventDataSection extends React.Component<Props> {
     const {
       children,
       className,
-      hideGuide,
       type,
       title,
       toggleRaw,
       raw,
       wrapTitle,
+      actions,
     } = this.props;
 
-    let titleNode = wrapTitle ? <h3>{title}</h3> : <div>{title}</div>;
-    if (type === 'tags' && hideGuide === false) {
-      titleNode = (
-        <GuideAnchor target="tags" position="top">
-          {titleNode}
-        </GuideAnchor>
-      );
-    }
+    const titleNode = wrapTitle ? <h3>{title}</h3> : title;
 
     return (
-      <div className={(className || '') + ' box'}>
+      <DataSection className={className || ''}>
         {title && (
-          <div className="box-header" id={type}>
-            <a href={'#' + type} className="permalink">
+          <SectionHeader id={type}>
+            <Permalink href={'#' + type} className="permalink">
               <em className="icon-anchor" />
-            </a>
+            </Permalink>
             {titleNode}
             {type === 'extra' && (
-              <div className="btn-group pull-right">
+              <div className="btn-group">
                 <a
                   className={(!raw ? 'active' : '') + ' btn btn-default btn-sm'}
                   onClick={() => callIfFunction(toggleRaw, false)}
@@ -96,12 +91,89 @@ class EventDataSection extends React.Component<Props> {
                 </a>
               </div>
             )}
-          </div>
+            {actions && <ActionContainer>{actions}</ActionContainer>}
+          </SectionHeader>
         )}
-        <div className="box-content with-padding">{children}</div>
-      </div>
+        <SectionContents>{children}</SectionContents>
+      </DataSection>
     );
   }
 }
 
+// Exported as discover needs to restyle this.
+export const DataSection = styled('div')`
+  padding: ${space(3)} ${space(4)} 0 40px;
+  border-top: 1px solid ${p => p.theme.borderLight};
+
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    padding: ${space(2)} 0;
+  }
+`;
+
+const Permalink = styled('a')`
+  font-size: ${p => p.theme.fontSizeSmall};
+  line-height: 27px;
+  display: none;
+  position: absolute;
+  top: -1.5px;
+  left: -22px;
+  color: ${p => p.theme.gray6};
+  padding: ${space(0.25)} 5px;
+`;
+
+const SectionHeader = styled('div')`
+  display: flex;
+  justify-content: space-between;
+  position: relative;
+
+  & h3,
+  & h3 a {
+    font-size: 14px;
+    font-weight: 600;
+    line-height: 1.2;
+    color: ${p => p.theme.gray2};
+  }
+
+  & h3 {
+    font-size: 14px;
+    font-weight: 600;
+    line-height: 1.2;
+    padding: ${space(0.75)} 0;
+    text-transform: uppercase;
+    margin-bottom: 20px;
+  }
+
+  & small {
+    color: ${p => p.theme.foreground};
+    font-size: ${p => p.theme.fontSizeMedium};
+    margin-right: ${space(0.5)};
+    margin-left: ${space(0.5)};
+
+    text-transform: none;
+  }
+  & small a {
+    color: ${p => p.theme.foreground};
+    border-bottom: 1px dotted ${p => p.theme.gray6};
+    font-weight: normal;
+  }
+
+  &:hover ${Permalink} {
+    display: block;
+  }
+  @media (min-width: ${props => props.theme.breakpoints[2]}) {
+    & > small {
+      margin-left: ${space(1)};
+      display: inline-block;
+    }
+  }
+`;
+
+const SectionContents = styled('div')`
+  position: relative;
+`;
+
+const ActionContainer = styled('div')`
+  flex-shrink: 0;
+`;
+
 export default EventDataSection;
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index ffd9c95948..7efc4fa8f1 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -14,7 +14,7 @@ import EventCause from 'app/components/events/eventCause';
 import EventCauseEmpty from 'app/components/events/eventCauseEmpty';
 import EventContextSummary from 'app/components/events/contextSummary';
 import EventContexts from 'app/components/events/contexts';
-import EventDataSection from 'app/components/events/eventDataSection';
+import EventDataSection, {DataSection} from 'app/components/events/eventDataSection';
 import EventDevice from 'app/components/events/device';
 import EventErrors from 'app/components/events/errors';
 import EventExtraData from 'app/components/events/eventExtraData/eventExtraData';
@@ -34,6 +34,7 @@ import SpansInterface from 'app/components/events/interfaces/spans';
 import StacktraceInterface from 'app/components/events/interfaces/stacktrace';
 import TemplateInterface from 'app/components/events/interfaces/template';
 import ThreadsInterface from 'app/components/events/interfaces/threads/threads';
+import space from 'app/styles/space';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 
@@ -60,17 +61,20 @@ class EventEntries extends React.Component {
     // event is not guaranteed in shared issue view
     event: SentryTypes.Event,
 
-    group: SentryTypes.Group.isRequired,
+    group: SentryTypes.Group,
     orgId: PropTypes.string.isRequired,
     project: PropTypes.object.isRequired,
     // TODO(dcramer): ideally isShare would be replaced with simple permission
     // checks
     isShare: PropTypes.bool,
     showExampleCommit: PropTypes.bool,
+    showTagSummary: PropTypes.bool,
   };
 
   static defaultProps = {
     isShare: false,
+    showExampleCommit: false,
+    showTagSummary: true,
   };
 
   componentDidMount() {
@@ -157,6 +161,7 @@ class EventEntries extends React.Component {
 
   render() {
     const {
+      className,
       organization,
       group,
       isShare,
@@ -164,6 +169,7 @@ class EventEntries extends React.Component {
       event,
       orgId,
       showExampleCommit,
+      showTagSummary,
       location,
     } = this.props;
 
@@ -180,7 +186,7 @@ class EventEntries extends React.Component {
     const hasErrors = !objectIsEmpty(event.errors);
 
     return (
-      <div className="entries">
+      <div className={className} data-test-id="event-entries">
         {!objectIsEmpty(event.errors) && <EventErrors event={event} />}{' '}
         {!isShare &&
           (showExampleCommit ? (
@@ -188,7 +194,7 @@ class EventEntries extends React.Component {
           ) : (
             <EventCause event={event} orgId={orgId} projectId={project.slug} />
           ))}
-        {event.userReport && (
+        {event.userReport && group && (
           <StyledEventUserFeedback
             report={event.userReport}
             orgId={orgId}
@@ -196,15 +202,15 @@ class EventEntries extends React.Component {
             includeBorder={!hasErrors}
           />
         )}
-        {hasContext && <EventContextSummary event={event} />}
-        <EventTags
-          organization={organization}
-          group={group}
-          event={event}
-          orgId={orgId}
-          projectId={project.slug}
-          location={location}
-        />
+        {hasContext && showTagSummary && <EventContextSummary event={event} />}
+        {showTagSummary && (
+          <EventTags
+            event={event}
+            orgId={orgId}
+            projectId={project.slug}
+            location={location}
+          />
+        )}
         {!isShare && features.has('event-attachments') && (
           <RRWebIntegration event={event} orgId={orgId} projectId={project.slug} />
         )}
@@ -220,7 +226,7 @@ class EventEntries extends React.Component {
         {!isShare && event.sdkUpdates && event.sdkUpdates.length > 0 && (
           <EventSdkUpdates event={event} />
         )}
-        {!isShare && features.has('grouping-info') && (
+        {!isShare && event.groupID && features.has('grouping-info') && (
           <EventGroupingInfo
             projectId={project.slug}
             event={event}
@@ -232,7 +238,15 @@ class EventEntries extends React.Component {
   }
 }
 
-export default withOrganization(withApi(EventEntries));
+const BorderlessEventEntries = styled(EventEntries)`
+  & ${DataSection} {
+    padding: ${space(3)} 0 0 0;
+  }
+  & ${DataSection}:first-child {
+    padding-top: 0;
+    border-top: none;
+  }
+`;
 
 const StyledEventUserFeedback = styled(EventUserFeedback)`
   border-radius: 0;
@@ -242,3 +256,6 @@ const StyledEventUserFeedback = styled(EventUserFeedback)`
   ${p => (p.includeBorder ? `border-top: 1px solid ${p.theme.borderLight};` : '')}
   margin: 0;
 `;
+
+export default withOrganization(withApi(EventEntries));
+export {BorderlessEventEntries};
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.tsx b/src/sentry/static/sentry/app/components/events/eventTags.tsx
index 3d41da8699..9e9322a989 100644
--- a/src/sentry/static/sentry/app/components/events/eventTags.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventTags.tsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import styled from '@emotion/styled';
 import {Link} from 'react-router';
 import isEmpty from 'lodash/isEmpty';
 import queryString from 'query-string';
@@ -10,11 +11,13 @@ import EventDataSection from 'app/components/events/eventDataSection';
 import DeviceName from 'app/components/deviceName';
 import {isUrl, generateQueryWithTag} from 'app/utils';
 import {t} from 'app/locale';
+import GuideAnchor from 'app/components/assistant/guideAnchor';
 import Pills from 'app/components/pills';
 import Pill from 'app/components/pill';
 import VersionHoverCard from 'app/components/versionHoverCard';
 import InlineSvg from 'app/components/inlineSvg';
 import Version from 'app/components/version';
+import space from 'app/styles/space';
 
 type DefaultProps = {
   hideGuide: boolean;
@@ -28,10 +31,6 @@ type Props = DefaultProps & {
 };
 
 class EventTags extends React.Component<Props> {
-  static defaultProps: DefaultProps = {
-    hideGuide: false,
-  };
-
   renderPill(tag: EventTag, streamPath: string, releasesPath: string) {
     const {orgId, projectId, location} = this.props;
     const query = generateQueryWithTag(location.query, tag);
@@ -79,7 +78,7 @@ class EventTags extends React.Component<Props> {
   }
 
   render() {
-    const {event, orgId, hideGuide} = this.props;
+    const {event, orgId} = this.props;
     const {tags} = event;
 
     if (isEmpty(tags)) {
@@ -88,20 +87,24 @@ class EventTags extends React.Component<Props> {
 
     const streamPath = `/organizations/${orgId}/issues/`;
     const releasesPath = `/organizations/${orgId}/releases/`;
+    const title = (
+      <GuideAnchor target="tags" position="top">
+        <h3>{t('Tags')}</h3>
+      </GuideAnchor>
+    );
 
     return (
-      <EventDataSection
-        title={t('Tags')}
-        type="tags"
-        className="p-b-1"
-        hideGuide={hideGuide}
-      >
-        <Pills className="no-margin">
+      <EventDataSection title={title} wrapTitle={false} type="tags">
+        <StyledPills>
           {tags.map(tag => this.renderPill(tag, streamPath, releasesPath))}
-        </Pills>
+        </StyledPills>
       </EventDataSection>
     );
   }
 }
 
+const StyledPills = styled(Pills)`
+  margin-bottom: ${space(3)};
+`;
+
 export default EventTags;
diff --git a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
index bf1cf8bf46..e3459e1d86 100644
--- a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
+++ b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
@@ -12,6 +12,7 @@ import EventDataSection from 'app/components/events/eventDataSection';
 import SentryTypes from 'app/sentryTypes';
 import {t} from 'app/locale';
 import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
+import space from 'app/styles/space';
 
 import withOrganization from 'app/utils/withOrganization';
 
@@ -34,8 +35,11 @@ const GroupVariantListItem = styled(({contributes: _contributes, ...props}) => (
   <li {...props} />
 ))`
   padding: 15px 0 20px 0;
-  margin-top: 15px;
   ${p => (p.contributes ? '' : 'color:' + p.theme.gray6)};
+
+  & + li {
+    margin-top: 15px;
+  }
 `;
 
 const GroupVariantTitle = styled('h5')`
@@ -75,6 +79,20 @@ const GroupingValue = styled('code')`
   color: inherit;
 `;
 
+const Toggle = styled('a')`
+  font-size: ${p => p.theme.fontSizeMedium};
+  font-weight: 700;
+  color: ${p => p.theme.foreground};
+`;
+
+const SubHeading = styled('small')`
+  text-transform: none;
+  font-weight: normal;
+  font-size: ${p => p.theme.fontSizeMedium};
+  color: ${p => p.theme.foreground};
+  margin-left: ${space(1)};
+`;
+
 class GroupingComponent extends React.Component {
   static propTypes = {
     component: PropTypes.object,
@@ -312,12 +330,7 @@ class EventGroupingInfo extends AsyncComponent {
     }
     variants.sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));
 
-    return (
-      <React.Fragment>
-        {' '}
-        <small>{`(grouped by ${variants.join(', ') || 'nothing'})`}</small>
-      </React.Fragment>
-    );
+    return <SubHeading>{`(grouped by ${variants.join(', ') || 'nothing'})`}</SubHeading>;
   }
 
   renderGroupInfo() {
@@ -363,21 +376,26 @@ class EventGroupingInfo extends AsyncComponent {
 
   renderBody() {
     const isOpen = this.state.isOpen;
+    const title = (
+      <React.Fragment>
+        {t('Event Grouping Information')}
+        {!isOpen && this.renderGroupInfoSummary()}
+      </React.Fragment>
+    );
+    const actions = (
+      <Toggle onClick={this.toggle}>
+        {isOpen ? t('Hide Details') : t('Show Details')} <BetaTag />
+      </Toggle>
+    );
+
     return (
       <EventDataSection
         event={this.props.event}
         type="grouping-info"
         className="grouping-info"
+        title={title}
+        actions={actions}
       >
-        <div className="box-header">
-          <a className="pull-right grouping-info-toggle" onClick={this.toggle}>
-            {isOpen ? t('Hide Details') : t('Show Details')} <BetaTag />
-          </a>
-          <h3>
-            {t('Event Grouping Information')}
-            {!isOpen && this.renderGroupInfoSummary()}
-          </h3>
-        </div>
         <div style={{display: isOpen ? 'block' : 'none'}}>
           {this.state.groupInfo !== null && isOpen && this.renderGroupInfo()}
         </div>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
index ede5fbbe2d..77117e9ae8 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
@@ -48,8 +48,6 @@ class BreadcrumbsInterface extends React.Component {
     project: SentryTypes.Project,
   };
 
-  static MAX_CRUMBS_WHEN_COLLAPSED = 10;
-
   constructor(...args) {
     super(...args);
     this.state = {
@@ -58,6 +56,8 @@ class BreadcrumbsInterface extends React.Component {
     };
   }
 
+  static MAX_CRUMBS_WHEN_COLLAPSED = 10;
+
   onCollapseToggle = () => {
     this.setState({
       collapsed: !this.state.collapsed,
@@ -174,14 +174,9 @@ class BreadcrumbsInterface extends React.Component {
     const data = this.props.data;
 
     const title = (
-      <div>
-        <GuideAnchor target="breadcrumbs" position="top">
-          <h3>
-            <strong>{t('Breadcrumbs')}</strong>
-          </h3>
-        </GuideAnchor>
-        {this.getSearchField()}
-      </div>
+      <GuideAnchor target="breadcrumbs" position="top">
+        <h3>{t('Breadcrumbs')}</h3>
+      </GuideAnchor>
     );
 
     let all = data.values;
@@ -218,6 +213,7 @@ class BreadcrumbsInterface extends React.Component {
         event={evt}
         type={this.props.type}
         title={title}
+        actions={this.getSearchField()}
         wrapTitle={false}
       >
         <PlatformContext.Provider value={evt.platform}>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
index 0842b10133..fbd58cd9df 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
@@ -91,8 +91,7 @@ class CrashHeader extends React.Component {
     const {title, beforeTitle, hideGuide, stackView, stackType, newestFirst} = this.props;
 
     let titleNode = (
-      <StyledH3
-        className="pull-left"
+      <h3
         style={{
           marginBottom: 0,
           maxWidth: '100%',
@@ -103,13 +102,13 @@ class CrashHeader extends React.Component {
         <small>
           (
           <Tooltip title={t('Toggle stacktrace order')}>
-            <a onClick={this.handleToggleOrder} style={{borderBottom: '1px dotted #aaa'}}>
+            <a onClick={this.handleToggleOrder}>
               {newestFirst ? t('most recent call first') : t('most recent call last')}
             </a>
           </Tooltip>
           )
         </small>
-      </StyledH3>
+      </h3>
     );
 
     if (!hideGuide) {
@@ -189,9 +188,11 @@ export default CrashHeader;
 
 const Wrapper = styled('div')`
   display: flex;
+  justify-content: space-between;
   margin-bottom: ${space(3)};
   flex-direction: column;
   flex-wrap: wrap;
+  width: 100%;
   @media (min-width: ${props => props.theme.breakpoints[2]}) {
     align-items: center;
     flex-direction: row;
@@ -227,14 +228,3 @@ const ButtonGroupWrapper = styled('div')`
     flex-direction: row;
   }
 `;
-
-const StyledH3 = styled('h3')`
-  > small {
-    margin-right: ${space(1)};
-  }
-  @media (min-width: ${props => props.theme.breakpoints[2]}) {
-    > small {
-      margin-left: ${space(1)};
-    }
-  }
-`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
index d053b638bb..b43844b3a5 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
@@ -23,7 +23,6 @@ import {
 import ImageForBar from 'app/components/events/interfaces/imageForBar';
 import {t} from 'app/locale';
 import SentryTypes from 'app/sentryTypes';
-import space from 'app/styles/space';
 
 const IMAGE_ADDR_LEN = 12;
 const MIN_FILTER_LEN = 3;
@@ -427,14 +426,9 @@ class DebugMetaInterface extends React.PureComponent {
     const filteredImages = images.filter(image => this.filterImage(image));
 
     const titleElement = (
-      <div>
-        <GuideAnchor target="packages" position="top">
-          <AlignItems>
-            <ImagesTitle>{t('Images Loaded')}</ImagesTitle>
-            {this.renderToolbar()}
-          </AlignItems>
-        </GuideAnchor>
-      </div>
+      <GuideAnchor target="packages" position="top">
+        <h3>{t('Images Loaded')}</h3>
+      </GuideAnchor>
     );
 
     const frames = get(
@@ -450,6 +444,7 @@ class DebugMetaInterface extends React.PureComponent {
         event={this.props.event}
         type="packages"
         title={titleElement}
+        actions={this.renderToolbar()}
         wrapTitle={false}
       >
         <DebugImagesPanel>
@@ -480,19 +475,6 @@ class DebugMetaInterface extends React.PureComponent {
   }
 }
 
-//remove important once less files are gone
-const AlignItems = styled('div')`
-  display: flex;
-  align-items: baseline;
-  justify-content: space-between;
-  flex-wrap: wrap;
-  margin-bottom: ${space(3)};
-`;
-const ImagesTitle = styled('h3')`
-  margin-bottom: 0 !important;
-  padding-right: ${space(1)};
-`;
-
 const Label = styled('label')`
   font-weight: normal;
   margin-right: 1em;
@@ -566,8 +548,9 @@ const SymbolicationStatus = styled('span')`
 `;
 
 const EmptyItem = styled(PanelItem)`
-  display: block;
-  text-align: center;
+  display: flex;
+  align-items: center;
+  justify-content: center;
 
   ${ImageIcon} {
     opacity: 0.4;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
index 81ad07fe88..8fbf24d818 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
@@ -1,5 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from '@emotion/styled';
+
 import EventDataSection from 'app/components/events/eventDataSection';
 import SentryTypes from 'app/sentryTypes';
 import RichHttpContent from 'app/components/events/interfaces/richHttpContent';
@@ -7,6 +9,8 @@ import {getFullUrl, getCurlCommand} from 'app/components/events/interfaces/utils
 import {isUrl} from 'app/utils';
 import {t} from 'app/locale';
 import ExternalLink from 'app/components/links/externalLink';
+import {IconOpen} from 'app/icons';
+import space from 'app/styles/space';
 
 import Truncate from 'app/components/truncate';
 
@@ -59,10 +63,9 @@ class RequestInterface extends React.Component {
       parsedUrl.href = fullUrl;
     }
 
-    const children = [];
-
+    let actions;
     if (!this.isPartial() && fullUrl) {
-      children.push(
+      actions = (
         <div key="view-buttons" className="btn-group">
           <a
             className={(view === 'formatted' ? 'active' : '') + ' btn btn-default btn-sm'}
@@ -81,36 +84,29 @@ class RequestInterface extends React.Component {
       );
     }
 
-    children.push(
-      <h3 key="title">
+    const title = (
+      <Header key="title">
         <ExternalLink href={fullUrl} title={fullUrl}>
-          <span className="path">
+          <Path>
             <strong>{data.method || 'GET'}</strong>
             <Truncate
               value={parsedUrl ? parsedUrl.pathname : ''}
               maxLength={36}
               leftTrim
             />
-          </span>
-          {fullUrl && (
-            <span className="external-icon">
-              <em className="icon-open" />
-            </span>
-          )}
+          </Path>
+          {fullUrl && <StyledIconOpen size="xs" />}
         </ExternalLink>
-        <small style={{marginLeft: 10}} className="host">
-          {parsedUrl ? parsedUrl.hostname : ''}
-        </small>
-      </h3>
+        <small>{parsedUrl ? parsedUrl.hostname : ''}</small>
+      </Header>
     );
 
-    const title = <div>{children}</div>;
-
     return (
       <EventDataSection
         event={event}
         type={type}
         title={title}
+        actions={actions}
         wrapTitle={false}
         className="request"
       >
@@ -124,4 +120,33 @@ class RequestInterface extends React.Component {
   }
 }
 
+const Path = styled('span')`
+  color: ${p => p.theme.foreground};
+  text-transform: none;
+  font-weight: normal;
+
+  & strong {
+    margin-right: ${space(0.5)};
+  }
+`;
+
+const Header = styled('h3')`
+  display: flex;
+  align-items: center;
+`;
+
+// Nudge the icon down so it is centered. the `external-icon` class
+// doesn't quite get it in place.
+const StyledIconOpen = styled(IconOpen)`
+  transition: 0.1s linear color;
+  margin: 0 ${space(0.5)};
+  color: ${p => p.theme.gray6};
+  position: relative;
+  top: 1px;
+
+  &:hover {
+    color: ${p => p.theme.gray3};
+  }
+`;
+
 export default RequestInterface;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index e29e6f597f..459420ed11 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -22,13 +22,15 @@ import LoadingError from 'app/components/loadingError';
 import NotFound from 'app/components/errors/notFound';
 import AsyncComponent from 'app/components/asyncComponent';
 import SentryDocumentTitle from 'app/components/sentryDocumentTitle';
+import EventEntries from 'app/components/events/eventEntries';
+import Projects from 'app/utils/projects';
+import {DataSection} from 'app/components/events/eventDataSection';
 
 import EventView from '../eventView';
 import {hasAggregateField, EventQuery, generateTitle} from '../utils';
 import Pagination from './pagination';
 import LineGraph from './lineGraph';
 import TagsTable from '../tagsTable';
-import EventInterfaces from './eventInterfaces';
 import LinkedIssue from './linkedIssue';
 import DiscoverBreadcrumb from '../breadcrumb';
 import {SectionHeading, ContentBox, HeaderBox} from '../styles';
@@ -164,12 +166,19 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
                 ),
                 fixed: 'events chart',
               })}
-            <EventInterfaces
-              organization={organization}
-              event={event}
-              projectId={this.projectId}
-              eventView={eventView}
-            />
+            <Projects orgId={organization.slug} slugs={[this.projectId]}>
+              {({projects}) => (
+                <StyledEventEntries
+                  organization={organization}
+                  orgId={organization.slug}
+                  event={event}
+                  project={projects[0]}
+                  location={location}
+                  showExampleCommit={false}
+                  showTagSummary={false}
+                />
+              )}
+            </Projects>
           </div>
           <div style={{gridColumn: '2/3', display: isSidebarVisible ? '' : 'none'}}>
             <EventMetadata
@@ -349,4 +358,14 @@ const MetadataJSON = styled(ExternalLink)`
   font-size: ${p => p.theme.fontSizeMedium};
 `;
 
+const StyledEventEntries = styled(EventEntries)`
+  & ${DataSection} {
+    padding: ${space(3)} 0 0 0;
+  }
+  & ${DataSection}:first-child {
+    padding-top: 0;
+    border-top: none;
+  }
+`;
+
 export default withApi(EventDetailsContent);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
deleted file mode 100644
index 56dc94f54e..0000000000
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
+++ /dev/null
@@ -1,181 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {t} from 'app/locale';
-import SentryTypes from 'app/sentryTypes';
-import {INTERFACES} from 'app/components/events/eventEntries';
-
-import ErrorBoundary from 'app/components/errorBoundary';
-import EventContexts from 'app/components/events/contexts';
-import EventDataSection from 'app/components/events/eventDataSection';
-import EventDevice from 'app/components/events/device';
-import EventExtraData from 'app/components/events/eventExtraData/eventExtraData';
-import EventPackageData from 'app/components/events/packageData';
-import NavTabs from 'app/components/navTabs';
-import {objectIsEmpty, toTitleCase} from 'app/utils';
-import {Event, Organization} from 'app/types';
-
-import EventView from '../eventView';
-
-const OTHER_SECTIONS = {
-  contexts: EventContexts,
-  extra: EventExtraData,
-  packages: EventPackageData,
-  device: EventDevice,
-};
-
-function getTabTitle(type: string): string {
-  if (type === 'spans') {
-    return 'Transaction';
-  }
-
-  return type;
-}
-
-type ActiveTabProps = {
-  organization: Organization;
-  projectId: string;
-  event: Event;
-  activeTab: string;
-  eventView: EventView;
-};
-
-/**
- * Render the currently active event interface tab.
- * Some but not all interface elements require a projectId.
- */
-const ActiveTab = (props: ActiveTabProps) => {
-  const {organization, projectId, event, activeTab, eventView} = props;
-  if (!activeTab) {
-    return null;
-  }
-  const entry = event.entries.find(item => item.type === activeTab);
-  if (INTERFACES[activeTab] && entry) {
-    const Component = INTERFACES[activeTab];
-    return (
-      <Component
-        projectId={projectId}
-        orgId={organization.slug}
-        event={event}
-        eventView={eventView}
-        type={entry.type}
-        data={entry.data}
-        isShare={false}
-        hideGuide
-      />
-    );
-  } else if (OTHER_SECTIONS[activeTab]) {
-    const Component = OTHER_SECTIONS[activeTab];
-    return <Component event={event} isShare={false} hideGuide />;
-  } else {
-    /*eslint no-console:0*/
-    window.console &&
-      console.error &&
-      console.error('Unregistered interface: ' + activeTab);
-
-    return (
-      <EventDataSection
-        type={entry && entry.type ? entry.type : ''}
-        title={entry && entry.type ? entry.type : ''}
-      >
-        <p>{t('There was an error rendering this data.')}</p>
-      </EventDataSection>
-    );
-  }
-};
-ActiveTab.propTypes = {
-  event: SentryTypes.Event.isRequired,
-  activeTab: PropTypes.string,
-  projectId: PropTypes.string.isRequired,
-};
-
-type EventInterfacesProps = {
-  event: Event;
-  projectId: string;
-  organization: Organization;
-  eventView: EventView;
-};
-type EventInterfacesState = {
-  activeTab: string;
-};
-
-class EventInterfaces extends React.Component<
-  EventInterfacesProps,
-  EventInterfacesState
-> {
-  constructor(props: EventInterfacesProps) {
-    super(props);
-    this.state = {
-      activeTab: props.event.entries[0].type,
-    };
-  }
-
-  handleTabChange = tab => this.setState({activeTab: tab});
-
-  render() {
-    const {event, projectId, organization, eventView} = this.props;
-    const {activeTab} = this.state;
-
-    return (
-      <React.Fragment>
-        <NavTabs underlined>
-          {event.entries.map(entry => {
-            if (!INTERFACES.hasOwnProperty(entry.type)) {
-              return null;
-            }
-            const type = entry.type;
-            const classname = type === activeTab ? 'active' : undefined;
-            return (
-              <li key={type} className={classname}>
-                <a
-                  href="#"
-                  onClick={evt => {
-                    evt.preventDefault();
-                    this.handleTabChange(type);
-                  }}
-                >
-                  {toTitleCase(getTabTitle(type))}
-                </a>
-              </li>
-            );
-          })}
-          {Object.keys(OTHER_SECTIONS).map(section => {
-            if (
-              objectIsEmpty(event[section]) ||
-              (section === 'contexts' &&
-                objectIsEmpty(event.contexts) &&
-                objectIsEmpty(event.user))
-            ) {
-              return null;
-            }
-            const classname = section === activeTab ? 'active' : undefined;
-            return (
-              <li key={section} className={classname}>
-                <a
-                  href="#"
-                  onClick={evt => {
-                    evt.preventDefault();
-                    this.handleTabChange(section);
-                  }}
-                >
-                  {toTitleCase(section)}
-                </a>
-              </li>
-            );
-          })}
-        </NavTabs>
-        <ErrorBoundary message={t('Could not render event details')}>
-          <ActiveTab
-            event={event}
-            activeTab={activeTab}
-            projectId={projectId}
-            organization={organization}
-            eventView={eventView}
-          />
-        </ErrorBoundary>
-      </React.Fragment>
-    );
-  }
-}
-
-export default EventInterfaces;
diff --git a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
index 9423bb4054..6febbf925c 100644
--- a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
+++ b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
@@ -2,16 +2,18 @@ import PropTypes from 'prop-types';
 import DocumentTitle from 'react-document-title';
 import React from 'react';
 import createReactClass from 'create-react-class';
+import styled from '@emotion/styled';
 
 import {t} from 'app/locale';
 import withApi from 'app/utils/withApi';
-import EventEntries from 'app/components/events/eventEntries';
+import {BorderlessEventEntries} from 'app/components/events/eventEntries';
 import Footer from 'app/components/footer';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import NotFound from 'app/components/errors/notFound';
 import SentryTypes from 'app/sentryTypes';
 import SharedGroupHeader from 'app/views/sharedGroupDetails/sharedGroupHeader';
+import space from 'app/styles/space';
 
 const SharedGroupDetails = createReactClass({
   displayName: 'SharedGroupDetails',
@@ -115,22 +117,18 @@ const SharedGroupDetails = createReactClass({
                   </a>
                 )}
               </div>
-              <div className="box-content">
-                <div className="content">
-                  <SharedGroupHeader group={group} />
-                  <div className="group-overview event-details-container">
-                    <div className="primary">
-                      <EventEntries
-                        group={group}
-                        event={evt}
-                        orgId={group.project.organization.slug}
-                        project={group.project}
-                        isShare
-                      />
-                    </div>
-                  </div>
-                  <Footer />
-                </div>
+              <div className="content">
+                <SharedGroupHeader group={group} />
+                <Container className="group-overview event-details-container">
+                  <BorderlessEventEntries
+                    group={group}
+                    event={evt}
+                    orgId={group.project.organization.slug}
+                    project={group.project}
+                    isShare
+                  />
+                </Container>
+                <Footer />
               </div>
             </div>
           </div>
@@ -140,6 +138,10 @@ const SharedGroupDetails = createReactClass({
   },
 });
 
+const Container = styled('div')`
+  padding: 0 ${space(4)};
+`;
+
 export {SharedGroupDetails};
 
 export default withApi(SharedGroupDetails);
diff --git a/tests/acceptance/page_objects/issue_details.py b/tests/acceptance/page_objects/issue_details.py
index 1498a82b27..1ebb710679 100644
--- a/tests/acceptance/page_objects/issue_details.py
+++ b/tests/acceptance/page_objects/issue_details.py
@@ -82,6 +82,6 @@ class IssueDetailsPage(BasePage):
 
     def wait_until_loaded(self):
         self.browser.wait_until_not(".loading-indicator")
-        self.browser.wait_until(".entries")
+        self.browser.wait_until_test_id("event-entries")
         self.browser.wait_until_test_id("linked-issues")
         self.browser.wait_until_test_id("loaded-device-name")
diff --git a/tests/acceptance/test_issue_details.py b/tests/acceptance/test_issue_details.py
index 2ba37dae3c..ec0a1b3fa4 100644
--- a/tests/acceptance/test_issue_details.py
+++ b/tests/acceptance/test_issue_details.py
@@ -1,15 +1,14 @@
 from __future__ import absolute_import
 
-import json
 import pytz
 
 from mock import patch
 from datetime import datetime, timedelta
-from django.conf import settings
 from django.utils import timezone
 
 from sentry.testutils import AcceptanceTestCase, SnubaTestCase
 from sentry.utils.samples import load_data
+from tests.acceptance.page_objects.issue_details import IssueDetailsPage
 
 event_time = (datetime.utcnow() - timedelta(days=3)).replace(tzinfo=pytz.utc)
 now = datetime.utcnow().replace(tzinfo=pytz.utc)
@@ -26,7 +25,7 @@ class IssueDetailsTest(AcceptanceTestCase, SnubaTestCase):
         self.team = self.create_team(organization=self.org, name="Mariachi Band")
         self.project = self.create_project(organization=self.org, teams=[self.team], name="Bengal")
         self.login_as(self.user)
-        self.dismiss_assistant()
+        self.page = IssueDetailsPage(self.browser, self.client)
 
     def create_sample_event(self, platform, default=None, sample_name=None, time=None):
         event_data = load_data(platform, default=default, sample_name=sample_name)
@@ -51,66 +50,58 @@ class IssueDetailsTest(AcceptanceTestCase, SnubaTestCase):
         )
         return event
 
-    def visit_issue(self, groupid):
-        self.dismiss_assistant()
-        self.browser.get(u"/organizations/{}/issues/{}/".format(self.org.slug, groupid))
-        self.wait_until_loaded()
-
     def test_python_event(self):
         event = self.create_sample_event(platform="python", time=event_time)
-
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
 
         # Wait for tag bars to load
-        self.browser.wait_until('[data-test-id="loaded-device-name"]')
+        self.browser.wait_until_test_id("loaded-device-name")
         self.browser.snapshot("issue details python")
 
     def test_python_rawbody_event(self):
         event = self.create_sample_event(platform="python-rawbody")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.move_to(".request pre span")
         self.browser.snapshot("issue details python raw body")
 
     def test_python_formdata_event(self):
         event = self.create_sample_event(platform="python-formdata")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details python formdata")
 
     def test_pii_tooltips(self):
         event = self.create_sample_event(platform="pii-tooltips")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details pii tooltips")
 
     def test_cocoa_event(self):
         event = self.create_sample_event(platform="cocoa")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details cocoa")
 
     def test_unity_event(self):
         event = self.create_sample_event(default="unity", platform="csharp")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details unity")
 
     def test_android_event(self):
         event = self.create_sample_event(platform="android")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details android")
 
     def test_android_ndk_event(self):
         event = self.create_sample_event(default="android-ndk", platform="android-ndk")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details android-ndk")
 
     def test_aspnetcore_event(self):
         event = self.create_sample_event(default="aspnetcore", platform="csharp")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details aspnetcore")
 
     def test_javascript_specific_event(self):
         event = self.create_sample_event(platform="javascript")
-
-        self.dismiss_assistant()
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details javascript - event details")
 
         self.browser.find_element_by_xpath("//a//code[contains(text(), 'curl')]").click()
@@ -119,70 +110,43 @@ class IssueDetailsTest(AcceptanceTestCase, SnubaTestCase):
     def test_rust_event(self):
         # TODO: This should become its own "rust" platform type
         event = self.create_sample_event(platform="native", sample_name="Rust")
-        self.visit_issue(event.group.id)
-        self.wait_until_loaded()
+        self.page.visit_issue(self.org.slug, event.group.id)
 
         self.browser.snapshot("issue details rust")
 
     def test_cordova_event(self):
         event = self.create_sample_event(platform="cordova")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
 
         self.browser.snapshot("issue details cordova")
 
     def test_stripped_event(self):
         event = self.create_sample_event(platform="pii")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details pii stripped")
 
     def test_empty_exception(self):
         event = self.create_sample_event(platform="empty-exception")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details empty exception")
 
     def test_empty_stacktrace(self):
         event = self.create_sample_event(platform="empty-stacktrace")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details empty stacktrace")
 
     def test_invalid_interfaces(self):
         event = self.create_sample_event(platform="invalid-interfaces")
-        self.visit_issue(event.group.id)
+        self.page.visit_issue(self.org.slug, event.group.id)
 
         self.browser.click('[data-test-id="event-error-toggle"]')
-        self.browser.wait_until('[data-test-id="event-error-details"]')
+        self.browser.wait_until_test_id("event-error-details")
         self.browser.snapshot("issue details invalid interfaces")
 
     def test_activity_page(self):
         event = self.create_sample_event(platform="python")
+        self.page.visit_issue(self.org.slug, event.group.id)
+        self.page.go_to_subtab("Comments")
 
-        self.browser.get(
-            u"/organizations/{}/issues/{}/activity/".format(self.org.slug, event.group.id)
-        )
         self.browser.wait_until_test_id("activity-item")
         self.browser.snapshot("issue activity python")
-
-    def wait_until_loaded(self):
-        self.browser.wait_until_not(".loading-indicator")
-        self.browser.wait_until(".entries")
-        self.browser.wait_until_test_id("linked-issues")
-        self.browser.wait_until_test_id("loaded-device-name")
-        self.browser.wait_until_test_id("loaded-event-cause-empty")
-
-    def dismiss_assistant(self):
-        # Forward session cookie to django client.
-        self.client.cookies[settings.SESSION_COOKIE_NAME] = self.session.session_key
-
-        res = self.client.put(
-            "/api/0/assistant/",
-            content_type="application/json",
-            data=json.dumps({"guide_id": 1, "status": "viewed", "useful": True}),
-        )
-        assert res.status_code == 201
-
-        res = self.client.put(
-            "/api/0/assistant/",
-            content_type="application/json",
-            data=json.dumps({"guide_id": 3, "status": "viewed", "useful": True}),
-        )
-        assert res.status_code == 201
diff --git a/tests/acceptance/test_shared_issue.py b/tests/acceptance/test_shared_issue.py
index f539175cf1..46877ad7b5 100644
--- a/tests/acceptance/test_shared_issue.py
+++ b/tests/acceptance/test_shared_issue.py
@@ -24,5 +24,5 @@ class SharedIssueTest(AcceptanceTestCase):
 
         self.browser.get(u"/share/issue/{}/".format(event.group.get_share_id()))
         self.browser.wait_until_not(".loading-indicator")
-        self.browser.wait_until(".entries")
+        self.browser.wait_until_test_id("event-entries")
         self.browser.snapshot("shared issue python")
diff --git a/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap b/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
index 2c88032f85..59cbb988b2 100644
--- a/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
@@ -1,26 +1,25 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`EventDataSection renders formatted 1`] = `
-<div
-  className=" box"
+<DataSection
+  className=""
 >
-  <div
-    className="box-header"
+  <SectionHeader
     id="extra"
   >
-    <a
+    <Permalink
       className="permalink"
       href="#extra"
     >
       <em
         className="icon-anchor"
       />
-    </a>
+    </Permalink>
     <h3>
       Additional Data
     </h3>
     <div
-      className="btn-group pull-right"
+      className="btn-group"
     >
       <a
         className="active btn btn-default btn-sm"
@@ -35,34 +34,31 @@ exports[`EventDataSection renders formatted 1`] = `
         Raw
       </a>
     </div>
-  </div>
-  <div
-    className="box-content with-padding"
-  />
-</div>
+  </SectionHeader>
+  <SectionContents />
+</DataSection>
 `;
 
 exports[`EventDataSection renders raw 1`] = `
-<div
-  className=" box"
+<DataSection
+  className=""
 >
-  <div
-    className="box-header"
+  <SectionHeader
     id="extra"
   >
-    <a
+    <Permalink
       className="permalink"
       href="#extra"
     >
       <em
         className="icon-anchor"
       />
-    </a>
+    </Permalink>
     <h3>
       Additional Data
     </h3>
     <div
-      className="btn-group pull-right"
+      className="btn-group"
     >
       <a
         className=" btn btn-default btn-sm"
@@ -77,11 +73,9 @@ exports[`EventDataSection renders raw 1`] = `
         Raw
       </a>
     </div>
-  </div>
-  <div
-    className="box-content with-padding"
-  />
-</div>
+  </SectionHeader>
+  <SectionContents />
+</DataSection>
 `;
 
 exports[`KeyValueList renders formatted 1`] = `
diff --git a/tests/js/spec/views/eventsV2/eventDetails.spec.jsx b/tests/js/spec/views/eventsV2/eventDetails.spec.jsx
index bf232f5cfb..8e701f0743 100644
--- a/tests/js/spec/views/eventsV2/eventDetails.spec.jsx
+++ b/tests/js/spec/views/eventsV2/eventDetails.spec.jsx
@@ -75,6 +75,12 @@ describe('EventsV2 > EventDetails', function() {
         ],
       },
     });
+    MockApiClient.addMockResponse({
+      url: '/projects/org-slug/project-slug/events/1234/committers/',
+      method: 'GET',
+      statusCode: 404,
+      body: {},
+    });
 
     // Missing event
     MockApiClient.addMockResponse({
@@ -83,78 +89,6 @@ describe('EventsV2 > EventDetails', function() {
       statusCode: 404,
       body: {},
     });
-
-    // Error event
-    MockApiClient.addMockResponse(
-      {
-        url: '/organizations/org-slug/events/latest/',
-        method: 'GET',
-        body: {
-          id: '5678',
-          size: 1200,
-          projectSlug: 'project-slug',
-          eventID: 'deadbeef',
-          groupID: '123',
-          type: 'error',
-          title: 'Oh no something bad',
-          message: 'It was not good',
-          dateCreated: '2019-05-23T22:12:48+00:00',
-          previousEventID: 'beefbeef',
-          metadata: {
-            type: 'Oh no something bad',
-          },
-          entries: [
-            {
-              type: 'message',
-              message: 'bad stuff',
-              data: {},
-            },
-          ],
-          tags: [{key: 'browser', value: 'Firefox'}],
-        },
-      },
-      {
-        predicate: (_, options) => {
-          const query = options.query.query;
-          return (
-            query && (query.includes('event.type:error') || query.includes('issue.id'))
-          );
-        },
-      }
-    );
-
-    // Transaction event
-    MockApiClient.addMockResponse(
-      {
-        url: '/organizations/org-slug/events/latest/',
-        method: 'GET',
-        body: {
-          id: '5678',
-          size: 1200,
-          projectSlug: 'project-slug',
-          eventID: 'deadbeef',
-          type: 'transaction',
-          title: 'Oh no something bad',
-          location: '/users/login',
-          message: 'It was not good',
-          startTimestamp: 1564153693.2419,
-          endTimestamp: 1564153694.4191,
-          previousEventID: 'beefbeef',
-          entries: [
-            {
-              type: 'spans',
-              data: [],
-            },
-          ],
-          tags: [{key: 'browser', value: 'Firefox'}],
-        },
-      },
-      {
-        predicate: (_, options) => {
-          return options.query.query && options.query.query.includes('transaction');
-        },
-      }
-    );
   });
 
   it('renders', function() {
diff --git a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
index 302e0b1993..c17ed8105f 100644
--- a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
@@ -61,29 +61,151 @@ exports[`SharedGroupDetails renders 1`] = `
                 </a>
               </div>
               <div
-                className="box-content"
+                className="content"
               >
-                <div
-                  className="content"
-                >
-                  <SharedGroupHeader
-                    group={
-                      Object {
-                        "activity": Array [],
-                        "annotations": Array [],
-                        "assignedTo": null,
-                        "count": "327482",
-                        "culprit": "fetchData(app/components/group/suggestedOwners)",
-                        "firstRelease": null,
-                        "firstSeen": "2019-04-05T19:44:05.963Z",
-                        "hasSeen": false,
+                <SharedGroupHeader
+                  group={
+                    Object {
+                      "activity": Array [],
+                      "annotations": Array [],
+                      "assignedTo": null,
+                      "count": "327482",
+                      "culprit": "fetchData(app/components/group/suggestedOwners)",
+                      "firstRelease": null,
+                      "firstSeen": "2019-04-05T19:44:05.963Z",
+                      "hasSeen": false,
+                      "id": "1",
+                      "isBookmarked": false,
+                      "isPublic": false,
+                      "isSubscribed": false,
+                      "lastRelease": null,
+                      "lastSeen": "2019-04-11T01:08:59Z",
+                      "latestEvent": Object {
+                        "dateCreated": "2019-05-21T18:01:48.762Z",
+                        "entries": Array [
+                          Object {
+                            "data": Object {
+                              "formatted": "Blocked script",
+                            },
+                            "id": "1",
+                            "type": "message",
+                          },
+                        ],
+                        "eventID": "12345678901234567890123456789012",
+                        "groupID": "1",
                         "id": "1",
+                        "message": "ApiException",
+                        "tags": Array [],
+                        "title": "ApiException",
+                      },
+                      "level": "warning",
+                      "logger": null,
+                      "metadata": Object {
+                        "function": "fetchData",
+                        "type": "RequestError",
+                      },
+                      "numComments": 0,
+                      "participants": Array [],
+                      "permalink": "https://foo.io/organizations/foo/issues/1234/",
+                      "platform": "javascript",
+                      "pluginActions": Array [],
+                      "pluginContexts": Array [],
+                      "pluginIssues": Array [],
+                      "project": Object {
+                        "environments": Array [],
+                        "hasAccess": true,
+                        "id": "2",
                         "isBookmarked": false,
-                        "isPublic": false,
-                        "isSubscribed": false,
-                        "lastRelease": null,
-                        "lastSeen": "2019-04-11T01:08:59Z",
-                        "latestEvent": Object {
+                        "isMember": true,
+                        "name": "Project Name",
+                        "organization": Object {
+                          "slug": "test-org",
+                        },
+                        "slug": "project-slug",
+                        "teams": Array [],
+                      },
+                      "seenBy": Array [],
+                      "shareId": null,
+                      "shortId": "JAVASCRIPT-6QS",
+                      "stats": Object {
+                        "24h": Array [
+                          Array [
+                            1517281200,
+                            2,
+                          ],
+                          Array [
+                            1517310000,
+                            1,
+                          ],
+                        ],
+                        "30d": Array [
+                          Array [
+                            1514764800,
+                            1,
+                          ],
+                          Array [
+                            1515024000,
+                            122,
+                          ],
+                        ],
+                      },
+                      "status": "unresolved",
+                      "statusDetails": Object {},
+                      "subscriptionDetails": null,
+                      "tags": Array [],
+                      "title": "ZeroDivisionError",
+                      "type": "error",
+                      "userCount": 35097,
+                      "userReportCount": 0,
+                    }
+                  }
+                >
+                  <div
+                    className="group-detail"
+                    style={
+                      Object {
+                        "paddingBottom": 20,
+                      }
+                    }
+                  >
+                    <div
+                      className="details"
+                    >
+                      <h3>
+                        ZeroDivisionError
+                      </h3>
+                      <StyledEventMessage
+                        message="fetchData(app/components/group/suggestedOwners)"
+                      >
+                        <EventMessage
+                          className="css-j0hue0-StyledEventMessage e1vuddz00"
+                          message="fetchData(app/components/group/suggestedOwners)"
+                        >
+                          <div
+                            className="css-j0hue0-StyledEventMessage e1vuddz00"
+                          >
+                            <Message>
+                              <span
+                                className="css-136mfoi-Message e1vuddz02"
+                              >
+                                fetchData(app/components/group/suggestedOwners)
+                              </span>
+                            </Message>
+                          </div>
+                        </EventMessage>
+                      </StyledEventMessage>
+                    </div>
+                  </div>
+                </SharedGroupHeader>
+                <Container
+                  className="group-overview event-details-container"
+                >
+                  <div
+                    className="group-overview event-details-container css-nhk5x7-Container e3jpxgb0"
+                  >
+                    <BorderlessEventEntries
+                      event={
+                        Object {
                           "dateCreated": "2019-05-21T18:01:48.762Z",
                           "entries": Array [
                             Object {
@@ -100,21 +222,107 @@ exports[`SharedGroupDetails renders 1`] = `
                           "message": "ApiException",
                           "tags": Array [],
                           "title": "ApiException",
-                        },
-                        "level": "warning",
-                        "logger": null,
-                        "metadata": Object {
-                          "function": "fetchData",
-                          "type": "RequestError",
-                        },
-                        "numComments": 0,
-                        "participants": Array [],
-                        "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                        "platform": "javascript",
-                        "pluginActions": Array [],
-                        "pluginContexts": Array [],
-                        "pluginIssues": Array [],
-                        "project": Object {
+                        }
+                      }
+                      group={
+                        Object {
+                          "activity": Array [],
+                          "annotations": Array [],
+                          "assignedTo": null,
+                          "count": "327482",
+                          "culprit": "fetchData(app/components/group/suggestedOwners)",
+                          "firstRelease": null,
+                          "firstSeen": "2019-04-05T19:44:05.963Z",
+                          "hasSeen": false,
+                          "id": "1",
+                          "isBookmarked": false,
+                          "isPublic": false,
+                          "isSubscribed": false,
+                          "lastRelease": null,
+                          "lastSeen": "2019-04-11T01:08:59Z",
+                          "latestEvent": Object {
+                            "dateCreated": "2019-05-21T18:01:48.762Z",
+                            "entries": Array [
+                              Object {
+                                "data": Object {
+                                  "formatted": "Blocked script",
+                                },
+                                "id": "1",
+                                "type": "message",
+                              },
+                            ],
+                            "eventID": "12345678901234567890123456789012",
+                            "groupID": "1",
+                            "id": "1",
+                            "message": "ApiException",
+                            "tags": Array [],
+                            "title": "ApiException",
+                          },
+                          "level": "warning",
+                          "logger": null,
+                          "metadata": Object {
+                            "function": "fetchData",
+                            "type": "RequestError",
+                          },
+                          "numComments": 0,
+                          "participants": Array [],
+                          "permalink": "https://foo.io/organizations/foo/issues/1234/",
+                          "platform": "javascript",
+                          "pluginActions": Array [],
+                          "pluginContexts": Array [],
+                          "pluginIssues": Array [],
+                          "project": Object {
+                            "environments": Array [],
+                            "hasAccess": true,
+                            "id": "2",
+                            "isBookmarked": false,
+                            "isMember": true,
+                            "name": "Project Name",
+                            "organization": Object {
+                              "slug": "test-org",
+                            },
+                            "slug": "project-slug",
+                            "teams": Array [],
+                          },
+                          "seenBy": Array [],
+                          "shareId": null,
+                          "shortId": "JAVASCRIPT-6QS",
+                          "stats": Object {
+                            "24h": Array [
+                              Array [
+                                1517281200,
+                                2,
+                              ],
+                              Array [
+                                1517310000,
+                                1,
+                              ],
+                            ],
+                            "30d": Array [
+                              Array [
+                                1514764800,
+                                1,
+                              ],
+                              Array [
+                                1515024000,
+                                122,
+                              ],
+                            ],
+                          },
+                          "status": "unresolved",
+                          "statusDetails": Object {},
+                          "subscriptionDetails": null,
+                          "tags": Array [],
+                          "title": "ZeroDivisionError",
+                          "type": "error",
+                          "userCount": 35097,
+                          "userReportCount": 0,
+                        }
+                      }
+                      isShare={true}
+                      orgId="test-org"
+                      project={
+                        Object {
                           "environments": Array [],
                           "hasAccess": true,
                           "id": "2",
@@ -126,87 +334,13 @@ exports[`SharedGroupDetails renders 1`] = `
                           },
                           "slug": "project-slug",
                           "teams": Array [],
-                        },
-                        "seenBy": Array [],
-                        "shareId": null,
-                        "shortId": "JAVASCRIPT-6QS",
-                        "stats": Object {
-                          "24h": Array [
-                            Array [
-                              1517281200,
-                              2,
-                            ],
-                            Array [
-                              1517310000,
-                              1,
-                            ],
-                          ],
-                          "30d": Array [
-                            Array [
-                              1514764800,
-                              1,
-                            ],
-                            Array [
-                              1515024000,
-                              122,
-                            ],
-                          ],
-                        },
-                        "status": "unresolved",
-                        "statusDetails": Object {},
-                        "subscriptionDetails": null,
-                        "tags": Array [],
-                        "title": "ZeroDivisionError",
-                        "type": "error",
-                        "userCount": 35097,
-                        "userReportCount": 0,
-                      }
-                    }
-                  >
-                    <div
-                      className="group-detail"
-                      style={
-                        Object {
-                          "paddingBottom": 20,
                         }
                       }
+                      showExampleCommit={false}
+                      showTagSummary={true}
                     >
-                      <div
-                        className="details"
-                      >
-                        <h3>
-                          ZeroDivisionError
-                        </h3>
-                        <StyledEventMessage
-                          message="fetchData(app/components/group/suggestedOwners)"
-                        >
-                          <EventMessage
-                            className="css-j0hue0-StyledEventMessage e1vuddz00"
-                            message="fetchData(app/components/group/suggestedOwners)"
-                          >
-                            <div
-                              className="css-j0hue0-StyledEventMessage e1vuddz00"
-                            >
-                              <Message>
-                                <span
-                                  className="css-136mfoi-Message e1vuddz02"
-                                >
-                                  fetchData(app/components/group/suggestedOwners)
-                                </span>
-                              </Message>
-                            </div>
-                          </EventMessage>
-                        </StyledEventMessage>
-                      </div>
-                    </div>
-                  </SharedGroupHeader>
-                  <div
-                    className="group-overview event-details-container"
-                  >
-                    <div
-                      className="primary"
-                    >
-                      <WithOrganizationMockWrapper
+                      <EventEntries
+                        className="css-1bpekop-BorderlessEventEntries enep45q0"
                         event={
                           Object {
                             "dateCreated": "2019-05-21T18:01:48.762Z",
@@ -339,45 +473,17 @@ exports[`SharedGroupDetails renders 1`] = `
                             "teams": Array [],
                           }
                         }
+                        showExampleCommit={false}
+                        showTagSummary={true}
                       >
-                        <withApi(EventEntries)
-                          event={
-                            Object {
-                              "dateCreated": "2019-05-21T18:01:48.762Z",
-                              "entries": Array [
-                                Object {
-                                  "data": Object {
-                                    "formatted": "Blocked script",
-                                  },
-                                  "id": "1",
-                                  "type": "message",
-                                },
-                              ],
-                              "eventID": "12345678901234567890123456789012",
-                              "groupID": "1",
-                              "id": "1",
-                              "message": "ApiException",
-                              "tags": Array [],
-                              "title": "ApiException",
-                            }
-                          }
-                          group={
-                            Object {
-                              "activity": Array [],
-                              "annotations": Array [],
-                              "assignedTo": null,
-                              "count": "327482",
-                              "culprit": "fetchData(app/components/group/suggestedOwners)",
-                              "firstRelease": null,
-                              "firstSeen": "2019-04-05T19:44:05.963Z",
-                              "hasSeen": false,
-                              "id": "1",
-                              "isBookmarked": false,
-                              "isPublic": false,
-                              "isSubscribed": false,
-                              "lastRelease": null,
-                              "lastSeen": "2019-04-11T01:08:59Z",
-                              "latestEvent": Object {
+                        <div
+                          className="css-1bpekop-BorderlessEventEntries enep45q0"
+                          data-test-id="event-entries"
+                        >
+                           
+                          <EventTags
+                            event={
+                              Object {
                                 "dateCreated": "2019-05-21T18:01:48.762Z",
                                 "entries": Array [
                                   Object {
@@ -394,122 +500,15 @@ exports[`SharedGroupDetails renders 1`] = `
                                 "message": "ApiException",
                                 "tags": Array [],
                                 "title": "ApiException",
-                              },
-                              "level": "warning",
-                              "logger": null,
-                              "metadata": Object {
-                                "function": "fetchData",
-                                "type": "RequestError",
-                              },
-                              "numComments": 0,
-                              "participants": Array [],
-                              "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                              "platform": "javascript",
-                              "pluginActions": Array [],
-                              "pluginContexts": Array [],
-                              "pluginIssues": Array [],
-                              "project": Object {
-                                "environments": Array [],
-                                "hasAccess": true,
-                                "id": "2",
-                                "isBookmarked": false,
-                                "isMember": true,
-                                "name": "Project Name",
-                                "organization": Object {
-                                  "slug": "test-org",
-                                },
-                                "slug": "project-slug",
-                                "teams": Array [],
-                              },
-                              "seenBy": Array [],
-                              "shareId": null,
-                              "shortId": "JAVASCRIPT-6QS",
-                              "stats": Object {
-                                "24h": Array [
-                                  Array [
-                                    1517281200,
-                                    2,
-                                  ],
-                                  Array [
-                                    1517310000,
-                                    1,
-                                  ],
-                                ],
-                                "30d": Array [
-                                  Array [
-                                    1514764800,
-                                    1,
-                                  ],
-                                  Array [
-                                    1515024000,
-                                    122,
-                                  ],
-                                ],
-                              },
-                              "status": "unresolved",
-                              "statusDetails": Object {},
-                              "subscriptionDetails": null,
-                              "tags": Array [],
-                              "title": "ZeroDivisionError",
-                              "type": "error",
-                              "userCount": 35097,
-                              "userReportCount": 0,
-                            }
-                          }
-                          isShare={true}
-                          orgId="test-org"
-                          organization={
-                            Object {
-                              "access": Array [
-                                "org:read",
-                                "org:write",
-                                "org:admin",
-                                "org:integrations",
-                                "project:read",
-                                "project:write",
-                                "project:admin",
-                                "team:read",
-                                "team:write",
-                                "team:admin",
-                              ],
-                              "features": Array [],
-                              "id": "3",
-                              "name": "Organization Name",
-                              "onboardingTasks": Array [],
-                              "projects": Array [],
-                              "scrapeJavaScript": true,
-                              "slug": "org-slug",
-                              "status": Object {
-                                "id": "active",
-                                "name": "active",
-                              },
-                              "teams": Array [],
-                            }
-                          }
-                          project={
-                            Object {
-                              "environments": Array [],
-                              "hasAccess": true,
-                              "id": "2",
-                              "isBookmarked": false,
-                              "isMember": true,
-                              "name": "Project Name",
-                              "organization": Object {
-                                "slug": "test-org",
-                              },
-                              "slug": "project-slug",
-                              "teams": Array [],
+                              }
                             }
-                          }
-                        >
-                          <EventEntries
-                            api={
-                              Client {
-                                "_chain": [Function],
-                                "_wrapRequest": [Function],
-                                "bulkUpdate": [Function],
-                                "handleRequestError": [Function],
-                                "hasProjectBeenRenamed": [Function],
+                            orgId="test-org"
+                            projectId="project-slug"
+                          />
+                          <MessageInterface
+                            data={
+                              Object {
+                                "formatted": "Blocked script",
                               }
                             }
                             event={
@@ -532,23 +531,15 @@ exports[`SharedGroupDetails renders 1`] = `
                                 "title": "ApiException",
                               }
                             }
-                            group={
-                              Object {
-                                "activity": Array [],
-                                "annotations": Array [],
-                                "assignedTo": null,
-                                "count": "327482",
-                                "culprit": "fetchData(app/components/group/suggestedOwners)",
-                                "firstRelease": null,
-                                "firstSeen": "2019-04-05T19:44:05.963Z",
-                                "hasSeen": false,
-                                "id": "1",
-                                "isBookmarked": false,
-                                "isPublic": false,
-                                "isSubscribed": false,
-                                "lastRelease": null,
-                                "lastSeen": "2019-04-11T01:08:59Z",
-                                "latestEvent": Object {
+                            isShare={true}
+                            key="entry-0"
+                            orgId={null}
+                            projectId="project-slug"
+                            type="message"
+                          >
+                            <EventDataSection
+                              event={
+                                Object {
                                   "dateCreated": "2019-05-21T18:01:48.762Z",
                                   "entries": Array [
                                     Object {
@@ -565,346 +556,47 @@ exports[`SharedGroupDetails renders 1`] = `
                                   "message": "ApiException",
                                   "tags": Array [],
                                   "title": "ApiException",
-                                },
-                                "level": "warning",
-                                "logger": null,
-                                "metadata": Object {
-                                  "function": "fetchData",
-                                  "type": "RequestError",
-                                },
-                                "numComments": 0,
-                                "participants": Array [],
-                                "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                                "platform": "javascript",
-                                "pluginActions": Array [],
-                                "pluginContexts": Array [],
-                                "pluginIssues": Array [],
-                                "project": Object {
-                                  "environments": Array [],
-                                  "hasAccess": true,
-                                  "id": "2",
-                                  "isBookmarked": false,
-                                  "isMember": true,
-                                  "name": "Project Name",
-                                  "organization": Object {
-                                    "slug": "test-org",
-                                  },
-                                  "slug": "project-slug",
-                                  "teams": Array [],
-                                },
-                                "seenBy": Array [],
-                                "shareId": null,
-                                "shortId": "JAVASCRIPT-6QS",
-                                "stats": Object {
-                                  "24h": Array [
-                                    Array [
-                                      1517281200,
-                                      2,
-                                    ],
-                                    Array [
-                                      1517310000,
-                                      1,
-                                    ],
-                                  ],
-                                  "30d": Array [
-                                    Array [
-                                      1514764800,
-                                      1,
-                                    ],
-                                    Array [
-                                      1515024000,
-                                      122,
-                                    ],
-                                  ],
-                                },
-                                "status": "unresolved",
-                                "statusDetails": Object {},
-                                "subscriptionDetails": null,
-                                "tags": Array [],
-                                "title": "ZeroDivisionError",
-                                "type": "error",
-                                "userCount": 35097,
-                                "userReportCount": 0,
-                              }
-                            }
-                            isShare={true}
-                            orgId="test-org"
-                            organization={
-                              Object {
-                                "access": Array [
-                                  "org:read",
-                                  "org:write",
-                                  "org:admin",
-                                  "org:integrations",
-                                  "project:read",
-                                  "project:write",
-                                  "project:admin",
-                                  "team:read",
-                                  "team:write",
-                                  "team:admin",
-                                ],
-                                "features": Array [],
-                                "id": "3",
-                                "name": "Organization Name",
-                                "onboardingTasks": Array [],
-                                "projects": Array [],
-                                "scrapeJavaScript": true,
-                                "slug": "org-slug",
-                                "status": Object {
-                                  "id": "active",
-                                  "name": "active",
-                                },
-                                "teams": Array [],
-                              }
-                            }
-                            project={
-                              Object {
-                                "environments": Array [],
-                                "hasAccess": true,
-                                "id": "2",
-                                "isBookmarked": false,
-                                "isMember": true,
-                                "name": "Project Name",
-                                "organization": Object {
-                                  "slug": "test-org",
-                                },
-                                "slug": "project-slug",
-                                "teams": Array [],
+                                }
                               }
-                            }
-                          >
-                            <div
-                              className="entries"
+                              raw={false}
+                              title="Message"
+                              type="message"
+                              wrapTitle={true}
                             >
-                               
-                              <EventTags
-                                event={
-                                  Object {
-                                    "dateCreated": "2019-05-21T18:01:48.762Z",
-                                    "entries": Array [
-                                      Object {
-                                        "data": Object {
-                                          "formatted": "Blocked script",
-                                        },
-                                        "id": "1",
-                                        "type": "message",
-                                      },
-                                    ],
-                                    "eventID": "12345678901234567890123456789012",
-                                    "groupID": "1",
-                                    "id": "1",
-                                    "message": "ApiException",
-                                    "tags": Array [],
-                                    "title": "ApiException",
-                                  }
-                                }
-                                group={
-                                  Object {
-                                    "activity": Array [],
-                                    "annotations": Array [],
-                                    "assignedTo": null,
-                                    "count": "327482",
-                                    "culprit": "fetchData(app/components/group/suggestedOwners)",
-                                    "firstRelease": null,
-                                    "firstSeen": "2019-04-05T19:44:05.963Z",
-                                    "hasSeen": false,
-                                    "id": "1",
-                                    "isBookmarked": false,
-                                    "isPublic": false,
-                                    "isSubscribed": false,
-                                    "lastRelease": null,
-                                    "lastSeen": "2019-04-11T01:08:59Z",
-                                    "latestEvent": Object {
-                                      "dateCreated": "2019-05-21T18:01:48.762Z",
-                                      "entries": Array [
-                                        Object {
-                                          "data": Object {
-                                            "formatted": "Blocked script",
-                                          },
-                                          "id": "1",
-                                          "type": "message",
-                                        },
-                                      ],
-                                      "eventID": "12345678901234567890123456789012",
-                                      "groupID": "1",
-                                      "id": "1",
-                                      "message": "ApiException",
-                                      "tags": Array [],
-                                      "title": "ApiException",
-                                    },
-                                    "level": "warning",
-                                    "logger": null,
-                                    "metadata": Object {
-                                      "function": "fetchData",
-                                      "type": "RequestError",
-                                    },
-                                    "numComments": 0,
-                                    "participants": Array [],
-                                    "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                                    "platform": "javascript",
-                                    "pluginActions": Array [],
-                                    "pluginContexts": Array [],
-                                    "pluginIssues": Array [],
-                                    "project": Object {
-                                      "environments": Array [],
-                                      "hasAccess": true,
-                                      "id": "2",
-                                      "isBookmarked": false,
-                                      "isMember": true,
-                                      "name": "Project Name",
-                                      "organization": Object {
-                                        "slug": "test-org",
-                                      },
-                                      "slug": "project-slug",
-                                      "teams": Array [],
-                                    },
-                                    "seenBy": Array [],
-                                    "shareId": null,
-                                    "shortId": "JAVASCRIPT-6QS",
-                                    "stats": Object {
-                                      "24h": Array [
-                                        Array [
-                                          1517281200,
-                                          2,
-                                        ],
-                                        Array [
-                                          1517310000,
-                                          1,
-                                        ],
-                                      ],
-                                      "30d": Array [
-                                        Array [
-                                          1514764800,
-                                          1,
-                                        ],
-                                        Array [
-                                          1515024000,
-                                          122,
-                                        ],
-                                      ],
-                                    },
-                                    "status": "unresolved",
-                                    "statusDetails": Object {},
-                                    "subscriptionDetails": null,
-                                    "tags": Array [],
-                                    "title": "ZeroDivisionError",
-                                    "type": "error",
-                                    "userCount": 35097,
-                                    "userReportCount": 0,
-                                  }
-                                }
-                                hideGuide={false}
-                                orgId="test-org"
-                                organization={
-                                  Object {
-                                    "access": Array [
-                                      "org:read",
-                                      "org:write",
-                                      "org:admin",
-                                      "org:integrations",
-                                      "project:read",
-                                      "project:write",
-                                      "project:admin",
-                                      "team:read",
-                                      "team:write",
-                                      "team:admin",
-                                    ],
-                                    "features": Array [],
-                                    "id": "3",
-                                    "name": "Organization Name",
-                                    "onboardingTasks": Array [],
-                                    "projects": Array [],
-                                    "scrapeJavaScript": true,
-                                    "slug": "org-slug",
-                                    "status": Object {
-                                      "id": "active",
-                                      "name": "active",
-                                    },
-                                    "teams": Array [],
-                                  }
-                                }
-                                projectId="project-slug"
-                              />
-                              <MessageInterface
-                                data={
-                                  Object {
-                                    "formatted": "Blocked script",
-                                  }
-                                }
-                                event={
-                                  Object {
-                                    "dateCreated": "2019-05-21T18:01:48.762Z",
-                                    "entries": Array [
-                                      Object {
-                                        "data": Object {
-                                          "formatted": "Blocked script",
-                                        },
-                                        "id": "1",
-                                        "type": "message",
-                                      },
-                                    ],
-                                    "eventID": "12345678901234567890123456789012",
-                                    "groupID": "1",
-                                    "id": "1",
-                                    "message": "ApiException",
-                                    "tags": Array [],
-                                    "title": "ApiException",
-                                  }
-                                }
-                                isShare={true}
-                                key="entry-0"
-                                orgId="org-slug"
-                                projectId="project-slug"
-                                type="message"
+                              <DataSection
+                                className=""
                               >
-                                <EventDataSection
-                                  event={
-                                    Object {
-                                      "dateCreated": "2019-05-21T18:01:48.762Z",
-                                      "entries": Array [
-                                        Object {
-                                          "data": Object {
-                                            "formatted": "Blocked script",
-                                          },
-                                          "id": "1",
-                                          "type": "message",
-                                        },
-                                      ],
-                                      "eventID": "12345678901234567890123456789012",
-                                      "groupID": "1",
-                                      "id": "1",
-                                      "message": "ApiException",
-                                      "tags": Array [],
-                                      "title": "ApiException",
-                                    }
-                                  }
-                                  hideGuide={false}
-                                  raw={false}
-                                  title="Message"
-                                  type="message"
-                                  wrapTitle={true}
+                                <div
+                                  className=" css-1tpn1lm-DataSection e1fbjd860"
                                 >
-                                  <div
-                                    className=" box"
+                                  <SectionHeader
+                                    id="message"
                                   >
                                     <div
-                                      className="box-header"
+                                      className="css-1aabq9z-SectionHeader e1fbjd862"
                                       id="message"
                                     >
-                                      <a
+                                      <Permalink
                                         className="permalink"
                                         href="#message"
                                       >
-                                        <em
-                                          className="icon-anchor"
-                                        />
-                                      </a>
+                                        <a
+                                          className="permalink css-1p3e1t-Permalink e1fbjd861"
+                                          href="#message"
+                                        >
+                                          <em
+                                            className="icon-anchor"
+                                          />
+                                        </a>
+                                      </Permalink>
                                       <h3>
                                         Message
                                       </h3>
                                     </div>
+                                  </SectionHeader>
+                                  <SectionContents>
                                     <div
-                                      className="box-content with-padding"
+                                      className="css-16dhebx-SectionContents e1fbjd863"
                                     >
                                       <pre
                                         className="plain"
@@ -935,93 +627,93 @@ exports[`SharedGroupDetails renders 1`] = `
                                         </Annotated>
                                       </pre>
                                     </div>
-                                  </div>
-                                </EventDataSection>
-                              </MessageInterface>
-                            </div>
-                          </EventEntries>
-                        </withApi(EventEntries)>
-                      </WithOrganizationMockWrapper>
-                    </div>
+                                  </SectionContents>
+                                </div>
+                              </DataSection>
+                            </EventDataSection>
+                          </MessageInterface>
+                        </div>
+                      </EventEntries>
+                    </BorderlessEventEntries>
                   </div>
-                  <Footer>
-                    <footer>
+                </Container>
+                <Footer>
+                  <footer>
+                    <div
+                      className="container"
+                    >
                       <div
-                        className="container"
+                        className="pull-right"
                       >
-                        <div
-                          className="pull-right"
+                        <FooterLink
+                          className="hidden-xs"
+                          href="/api/"
                         >
-                          <FooterLink
-                            className="hidden-xs"
+                          <ForwardRef
+                            className="hidden-xs css-aovf7d-FooterLink e1xhjlxg0"
                             href="/api/"
                           >
-                            <ForwardRef
+                            <a
                               className="hidden-xs css-aovf7d-FooterLink e1xhjlxg0"
                               href="/api/"
+                              rel="noreferrer noopener"
+                              target="_blank"
                             >
-                              <a
-                                className="hidden-xs css-aovf7d-FooterLink e1xhjlxg0"
-                                href="/api/"
-                                rel="noreferrer noopener"
-                                target="_blank"
-                              >
-                                API
-                              </a>
-                            </ForwardRef>
-                          </FooterLink>
-                          <FooterLink
+                              API
+                            </a>
+                          </ForwardRef>
+                        </FooterLink>
+                        <FooterLink
+                          href="/docs/"
+                        >
+                          <ForwardRef
+                            className="css-aovf7d-FooterLink e1xhjlxg0"
                             href="/docs/"
                           >
-                            <ForwardRef
+                            <a
                               className="css-aovf7d-FooterLink e1xhjlxg0"
                               href="/docs/"
+                              rel="noreferrer noopener"
+                              target="_blank"
                             >
-                              <a
-                                className="css-aovf7d-FooterLink e1xhjlxg0"
-                                href="/docs/"
-                                rel="noreferrer noopener"
-                                target="_blank"
-                              >
-                                Docs
-                              </a>
-                            </ForwardRef>
-                          </FooterLink>
-                          <FooterLink
-                            className="hidden-xs"
+                              Docs
+                            </a>
+                          </ForwardRef>
+                        </FooterLink>
+                        <FooterLink
+                          className="hidden-xs"
+                          href="https://github.com/getsentry/sentry"
+                          rel="noreferrer"
+                        >
+                          <ForwardRef
+                            className="hidden-xs css-aovf7d-FooterLink e1xhjlxg0"
                             href="https://github.com/getsentry/sentry"
                             rel="noreferrer"
                           >
-                            <ForwardRef
+                            <a
                               className="hidden-xs css-aovf7d-FooterLink e1xhjlxg0"
                               href="https://github.com/getsentry/sentry"
                               rel="noreferrer"
+                              target="_blank"
                             >
-                              <a
-                                className="hidden-xs css-aovf7d-FooterLink e1xhjlxg0"
-                                href="https://github.com/getsentry/sentry"
-                                rel="noreferrer"
-                                target="_blank"
-                              >
-                                Contribute
-                              </a>
-                            </ForwardRef>
-                          </FooterLink>
-                        </div>
-                        <a
-                          className="icon-sentry-logo"
-                          href="/"
-                          tabIndex={-1}
-                        />
-                        <Hook
-                          name="footer"
-                        >
-                          <Hook(footer) />
-                        </Hook>
+                              Contribute
+                            </a>
+                          </ForwardRef>
+                        </FooterLink>
                       </div>
-                    </footer>
-                  </Footer>
-                </div>
+                      <a
+                        className="icon-sentry-logo"
+                        href="/"
+                        tabIndex={-1}
+                      />
+                      <Hook
+                        name="footer"
+                      >
+                        <Hook(footer) />
+                      </Hook>
+                    </div>
+                  </footer>
+                </Footer>
               </div>
             </div>
           </div>
