commit d4701af4736f04dd058a4a23f18c83e31572fc14
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 29 16:18:09 2015 -0700

    Switch to http.absolute_uri

diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index 1891d3b423..eab424ba94 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -19,7 +19,7 @@ from rest_framework.views import APIView
 from sentry.app import raven, tsdb
 from sentry.models import ApiKey, AuditLogEntry
 from sentry.utils.cursors import Cursor
-from sentry.utils.http import is_valid_origin
+from sentry.utils.http import absolute_uri, is_valid_origin
 
 from .authentication import ApiKeyAuthentication, ProjectKeyAuthentication
 from .paginator import Paginator
@@ -60,7 +60,7 @@ class Endpoint(APIView):
             for k, v in request.GET.iteritems()
             if k != 'cursor'
         )
-        base_url = request.build_absolute_uri(request.path)
+        base_url = absolute_uri(request.path)
         if querystring:
             base_url = '{0}?{1}'.format(base_url, querystring)
         else:
diff --git a/src/sentry/auth/helper.py b/src/sentry/auth/helper.py
index ab9750e33c..e95d551c99 100644
--- a/src/sentry/auth/helper.py
+++ b/src/sentry/auth/helper.py
@@ -18,6 +18,7 @@ from sentry.models import (
     OrganizationMember, OrganizationMemberTeam, User
 )
 from sentry.utils.auth import get_login_redirect
+from sentry.utils.http import absolute_uri
 from sentry.web.helpers import render_to_response
 
 from . import manager
@@ -136,7 +137,7 @@ class AuthHelper(object):
         self.request.session.modified = True
 
     def get_redirect_url(self):
-        return self.request.build_absolute_uri(reverse('sentry-auth-sso'))
+        return absolute_uri(reverse('sentry-auth-sso'))
 
     def clear_session(self):
         if 'auth' in self.request.session:
diff --git a/src/sentry/middleware/locale.py b/src/sentry/middleware/locale.py
index c05db1a145..c85a3f59a5 100644
--- a/src/sentry/middleware/locale.py
+++ b/src/sentry/middleware/locale.py
@@ -15,6 +15,7 @@ from django.core.urlresolvers import reverse
 
 from sentry.app import env
 from sentry.models import UserOption
+from sentry.utils.http import absolute_uri
 from sentry.utils.safe import safe_execute
 
 
@@ -22,7 +23,7 @@ class SentryLocaleMiddleware(object):
     def process_request(self, request):
         # HACK: bootstrap some env crud if we haven't yet
         if not settings.SENTRY_URL_PREFIX:
-            settings.SENTRY_URL_PREFIX = request.build_absolute_uri(reverse('sentry')).strip('/')
+            settings.SENTRY_URL_PREFIX = absolute_uri(reverse('sentry')).strip('/')
 
         # bind request to env
         env.request = request
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 961b3d7d72..71307eafb8 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -52,7 +52,9 @@ from sentry.utils import json, metrics
 from sentry.utils.data_scrubber import SensitiveDataFilter
 from sentry.utils.db import get_db_engine
 from sentry.utils.javascript import to_json
-from sentry.utils.http import is_valid_origin, get_origins, is_same_domain
+from sentry.utils.http import (
+    absolute_uri, is_valid_origin, get_origins, is_same_domain
+)
 from sentry.utils.safe import safe_execute
 from sentry.web.decorators import has_access
 from sentry.web.frontend.groups import _get_group_list
@@ -418,7 +420,7 @@ def poll(request, organization, project):
         for k, v in request.GET.iteritems()
         if k != 'cursor'
     )
-    base_url = request.build_absolute_uri(request.path)
+    base_url = absolute_uri(request.path)
     if querystring:
         base_url = '{0}?{1}'.format(base_url, querystring)
     else:
