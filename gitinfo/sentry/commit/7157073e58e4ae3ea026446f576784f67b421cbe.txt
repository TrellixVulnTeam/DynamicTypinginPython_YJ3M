commit 7157073e58e4ae3ea026446f576784f67b421cbe
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Mon Nov 5 15:03:21 2018 -0800

    feat(event search): Add support for no environment search (#10425)

diff --git a/src/sentry/api/endpoints/organization_events.py b/src/sentry/api/endpoints/organization_events.py
index d958bb4d03..ac93959c56 100644
--- a/src/sentry/api/endpoints/organization_events.py
+++ b/src/sentry/api/endpoints/organization_events.py
@@ -65,18 +65,17 @@ class OrganizationEventsEndpoint(OrganizationEndpoint):
         if not requested_environments:
             return []
 
-        environments = dict(
+        environments = set(
             Environment.objects.filter(
                 organization_id=organization.id,
                 name__in=requested_environments,
-            ).values_list('name', 'id'),
+            ).values_list('name', flat=True),
         )
 
-        if requested_environments != set(environments.keys()):
+        if requested_environments != environments:
             raise ResourceDoesNotExist
 
-        # snuba requires ids for filter keys
-        return environments.values()
+        return list(environments)
 
     def get(self, request, organization):
         try:
diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index b0ba0a5b89..41d94af256 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -83,7 +83,7 @@ FIELD_LOOKUP = {
         'type': 'string',
     },
     'environment': {
-        'snuba_name': 'environment',
+        'snuba_name': 'tags[environment]',
         'type': 'string',
     },
     'platform': {
@@ -240,8 +240,20 @@ def get_snuba_query_args(query=None, params=None):
         if snuba_name in ('start', 'end'):
             kwargs[snuba_name] = value
 
-        # environment can also be passed as a condition
-        elif snuba_name in ('project_id', 'environment') and isinstance(value, (list, tuple)):
+        elif snuba_name == 'tags[environment]':
+            env_conditions = []
+            _envs = set(value if isinstance(value, (list, tuple)) else [value])
+            # the "no environment" environment is null in snuba
+            if '' in _envs:
+                _envs.remove('')
+                env_conditions.append(['tags[environment]', 'IS NULL', None])
+
+            if _envs:
+                env_conditions.append(['tags[environment]', 'IN', list(_envs)])
+
+            kwargs['conditions'].append(env_conditions)
+
+        elif snuba_name == 'project_id':
             kwargs['filter_keys'][snuba_name] = value
 
         elif snuba_name == 'message':
diff --git a/tests/snuba/api/endpoints/test_organization_events.py b/tests/snuba/api/endpoints/test_organization_events.py
index 560b64180b..dca364d488 100644
--- a/tests/snuba/api/endpoints/test_organization_events.py
+++ b/tests/snuba/api/endpoints/test_organization_events.py
@@ -261,6 +261,7 @@ class OrganizationEventsTest(APITestCase, SnubaTestCase):
         project = self.create_project(organization=org, teams=[team])
         environment = self.create_environment(project=project, name="production")
         environment2 = self.create_environment(project=project)
+        null_env = self.create_environment(project=project, name='')
         group = self.create_group(project=project)
 
         event_1 = self.create_event(
@@ -269,9 +270,12 @@ class OrganizationEventsTest(APITestCase, SnubaTestCase):
         event_2 = self.create_event(
             'b' * 32, group=group, datetime=self.min_ago, tags={'environment': environment.name}
         )
-        self.create_event(
+        event_3 = self.create_event(
             'c' * 32, group=group, datetime=self.min_ago, tags={'environment': environment2.name}
         )
+        event_4 = self.create_event(
+            'd' * 32, group=group, datetime=self.min_ago, tags={'environment': None}
+        )
 
         base_url = reverse(
             'sentry-api-0-organization-events',
@@ -288,6 +292,30 @@ class OrganizationEventsTest(APITestCase, SnubaTestCase):
         assert len(response.data) == 2
         self.assert_events_in_response(response, [event_1.event_id, event_2.event_id])
 
+        # test multiple as part of query param
+        url = '%s?%s' % (base_url, urlencode((
+            ('environment', environment.name),
+            ('environment', environment2.name),
+        )))
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 3
+        self.assert_events_in_response(
+            response, [event_1.event_id, event_2.event_id, event_3.event_id])
+
+        # test multiple as part of query param with no env
+        url = '%s?%s' % (base_url, urlencode((
+            ('environment', environment.name),
+            ('environment', null_env.name),
+        )))
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 3
+        self.assert_events_in_response(
+            response, [event_1.event_id, event_2.event_id, event_4.event_id])
+
         # test as part of search
         url = '%s?query=environment:%s' % (base_url, environment.name)
         response = self.client.get(url, format='json')
@@ -296,6 +324,14 @@ class OrganizationEventsTest(APITestCase, SnubaTestCase):
         assert len(response.data) == 2
         self.assert_events_in_response(response, [event_1.event_id, event_2.event_id])
 
+        # test as part of search - no environment
+        url = '%s?query=environment:""' % (base_url, )
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 1
+        self.assert_events_in_response(response, [event_4.event_id])
+
         # test nonexistent environment
         url = '%s?environment=notanenvironment' % (base_url,)
         response = self.client.get(url, format='json')
