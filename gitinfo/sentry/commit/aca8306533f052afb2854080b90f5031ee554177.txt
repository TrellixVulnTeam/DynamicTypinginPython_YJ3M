commit aca8306533f052afb2854080b90f5031ee554177
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Oct 16 12:06:17 2018 -0700

    fix(discover): Do not allow uniq aggregations on array fields (#10128)
    
    These requests will fail so do not allow the user to select them

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
index 767c1dee75..0bd464f833 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
@@ -6,6 +6,7 @@ import {t} from 'app/locale';
 
 import {getInternal, getExternal} from './utils';
 import {PlaceholderText} from '../styles';
+import {ARRAY_FIELD_PREFIXES} from '../data';
 
 export default class Aggregation extends React.Component {
   static propTypes = {
@@ -37,10 +38,12 @@ export default class Aggregation extends React.Component {
     ];
 
     if (input.startsWith('uniq')) {
-      optionList = this.props.columns.map(({name}) => ({
-        value: `uniq(${name})`,
-        label: `uniq(${name})`,
-      }));
+      optionList = this.props.columns
+        .filter(({name}) => !ARRAY_FIELD_PREFIXES.some(prefix => name.startsWith(prefix)))
+        .map(({name}) => ({
+          value: `uniq(${name})`,
+          label: `uniq(${name})`,
+        }));
     }
 
     if (input.startsWith('avg')) {
diff --git a/tests/js/spec/views/organizationDiscover/aggregations/aggregation.spec.jsx b/tests/js/spec/views/organizationDiscover/aggregations/aggregation.spec.jsx
index ae2596f20e..f8c9a03683 100644
--- a/tests/js/spec/views/organizationDiscover/aggregations/aggregation.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/aggregations/aggregation.spec.jsx
@@ -35,7 +35,11 @@ describe('Aggregation', function() {
   describe('filterOptions()', function() {
     let wrapper;
     beforeEach(function() {
-      const cols = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
+      const cols = [
+        {name: 'col1', type: 'string'},
+        {name: 'col2', type: 'number'},
+        {name: 'exception_stacks.type', type: 'string'},
+      ];
       wrapper = mount(
         <Aggregation value={[null, null, null]} onChange={jest.fn()} columns={cols} />
       );
@@ -49,7 +53,7 @@ describe('Aggregation', function() {
       expect(options.map(({value}) => value)).toEqual(['count', 'uniq', 'avg']);
     });
 
-    it('displays uniq options on input `uniq`', function() {
+    it('displays uniq options for non-array fields only', function() {
       wrapper.setState({inputValue: 'uniq'});
       const options = wrapper.instance().filterOptions();
       expect(options).toHaveLength(2);
