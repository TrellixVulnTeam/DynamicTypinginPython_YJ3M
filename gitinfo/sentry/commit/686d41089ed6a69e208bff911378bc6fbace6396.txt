commit 686d41089ed6a69e208bff911378bc6fbace6396
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Oct 11 09:36:56 2017 -0700

    fix(api): Fix wrong rate limit validation (#6290)
    
    * feat(react): Allow error messages to be suppressed
    
    * fix(workflow): Fix rate limit field errors not showing
    
    * fix(api): Fix wrong rate limit validation
    
    Was 24 minutes instead of 24 hours
    
    Fixes JAVASCRIPT-2FK
    
    * fix(ui): Fix rate limit inputs being hidden

diff --git a/src/sentry/api/endpoints/project_key_details.py b/src/sentry/api/endpoints/project_key_details.py
index 20da7613eb..508f091624 100644
--- a/src/sentry/api/endpoints/project_key_details.py
+++ b/src/sentry/api/endpoints/project_key_details.py
@@ -35,7 +35,7 @@ def update_key_scenario(runner):
 
 class RateLimitSerializer(serializers.Serializer):
     count = serializers.IntegerField(min_value=0, required=False)
-    window = serializers.IntegerField(min_value=0, max_value=60 * 24, required=False)
+    window = serializers.IntegerField(min_value=0, max_value=60 * 60 * 24, required=False)
 
 
 class KeySerializer(serializers.Serializer):
diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index 16bfe4b7fe..b52e43e842 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -17,6 +17,7 @@ export default class FormField extends React.Component {
     disabledReason: PropTypes.string,
     help: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),
     required: PropTypes.bool,
+    hideErrorMessage: PropTypes.bool,
 
     // the following should only be used without form context
     onChange: PropTypes.func,
@@ -25,6 +26,7 @@ export default class FormField extends React.Component {
   };
 
   static defaultProps = {
+    hideErrorMessage: false,
     disabled: false,
     required: false
   };
@@ -102,12 +104,22 @@ export default class FormField extends React.Component {
   }
 
   render() {
-    let {className, required, label, disabled, disabledReason, help, style} = this.props;
+    let {
+      className,
+      required,
+      label,
+      disabled,
+      disabledReason,
+      hideErrorMessage,
+      help,
+      style
+    } = this.props;
     let error = this.getError();
     let cx = classNames(className, this.getClassName(), {
       'has-error': !!error,
       required
     });
+    let shouldShowErrorMessage = error && !hideErrorMessage;
 
     return (
       <div style={style} className={cx}>
@@ -123,7 +135,7 @@ export default class FormField extends React.Component {
               <span className="icon-question" />
             </span>}
           {defined(help) && <p className="help-block">{help}</p>}
-          {error && <p className="error">{error}</p>}
+          {shouldShowErrorMessage && <p className="error">{error}</p>}
         </div>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/projectKeyDetails.jsx b/src/sentry/static/sentry/app/views/projectKeyDetails.jsx
index fb395ed935..629097a479 100644
--- a/src/sentry/static/sentry/app/views/projectKeyDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectKeyDetails.jsx
@@ -24,6 +24,14 @@ import {
 } from '../components/forms';
 import {t, tct} from '../locale';
 
+// Exporting this only so we can quickly and simply unit test it
+// Not moving this to utils because this is tightly coupled to the UI
+export const getRateLimitError = (obj, key) => {
+  if (!obj || !obj.rateLimit || !Array.isArray(obj.rateLimit)) return null;
+
+  return !!obj.rateLimit.find(errorObj => errorObj[key] && errorObj[key].length);
+};
+
 const KeyStats = React.createClass({
   mixins: [ApiMixin],
 
@@ -252,6 +260,9 @@ const KeySettings = React.createClass({
     let {errors, formData} = this.state;
     let hasChanges = !isEqual(this.props.initialData, formData);
     let {access, data, rateLimitsEnabled, organization, project} = this.props;
+    let rateLimitWindowError = getRateLimitError(errors, 'window');
+    let rateLimitCountError = getRateLimitError(errors, 'count');
+
     return (
       <form onSubmit={this.onSubmit} className="form-stacked">
         {this.state.state === FormState.ERROR &&
@@ -324,15 +335,16 @@ const KeySettings = React.createClass({
                 </p>
                 <div className="form-group rate-limit-group">
                   <label>{t('Rate Limit')}</label>
-                  <FlowLayout>
+                  <FlowLayout truncate={false}>
                     <div style={{width: 80}}>
                       <NumberField
+                        hideErrorMessage
                         key="rateLimit.count"
                         name="rateLimit.count"
                         min={0}
                         value={idx(formData, _ => _.rateLimit.count)}
                         required={false}
-                        error={errors.rateLimit}
+                        error={rateLimitCountError}
                         placeholder={t('count')}
                         onChange={this.onRateLimitChange.bind(this, 'count')}
                         className=""
@@ -344,12 +356,13 @@ const KeySettings = React.createClass({
                     <div style={{width: 150}}>
                       <Select2Field
                         width="100%"
+                        hideErrorMessage
                         key="rateLimit.window"
                         name="rateLimit.window"
                         choices={this.getRateLimitWindows()}
                         value={idx(formData, _ => _.rateLimit.window)}
                         required={false}
-                        error={errors.rateLimit}
+                        error={rateLimitWindowError}
                         placeholder={t('window')}
                         allowClear={true}
                         onChange={this.onRateLimitChange.bind(this, 'window')}
diff --git a/tests/js/spec/components/__snapshots__/customResolutionModal.spec.jsx.snap b/tests/js/spec/components/__snapshots__/customResolutionModal.spec.jsx.snap
index 95124b07fc..d6abe4ae28 100644
--- a/tests/js/spec/components/__snapshots__/customResolutionModal.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/customResolutionModal.spec.jsx.snap
@@ -52,6 +52,7 @@ exports[`CustomResolutionModal render() renders correctly 1`] = `
           escapeMarkup={false}
           formatResult={[Function]}
           formatSelection={[Function]}
+          hideErrorMessage={false}
           id="version"
           minimumInputLength={null}
           multiple={false}
diff --git a/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap
index 84075178f8..9a4ba440cb 100644
--- a/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap
@@ -5,6 +5,7 @@ exports[`GenericField render() renders text as TextInput 1`] = `
   disabled={false}
   formState="Ready"
   help={null}
+  hideErrorMessage={false}
   label="field label*"
   name="field-name"
   required={true}
@@ -21,6 +22,7 @@ exports[`GenericField render() renders text with choices as Select2TextInput 1`]
   escapeMarkup={true}
   formState="Ready"
   help={null}
+  hideErrorMessage={false}
   label="field label*"
   multiple={false}
   name="field-name"
diff --git a/tests/js/spec/utils/getRateLimitError.spec.jsx b/tests/js/spec/utils/getRateLimitError.spec.jsx
new file mode 100644
index 0000000000..1aa7edd95d
--- /dev/null
+++ b/tests/js/spec/utils/getRateLimitError.spec.jsx
@@ -0,0 +1,30 @@
+import {getRateLimitError} from 'app/views/projectKeyDetails';
+
+describe('getRateLimitError', function() {
+  const errorObj = {
+    rateLimit: [
+      {
+        foo: [],
+        window: ['Ensure this value is less than or equal to 1440.']
+      },
+      {
+        bar: [],
+        count: ['Ensure this value is greater than or equal to 3.'],
+        window: ['Ensure this value is less than or equal to 1440.']
+      }
+    ]
+  };
+
+  it('has no errors for keys: `foo` and `bar`', function() {
+    expect(getRateLimitError(errorObj, 'foo')).toBe(false);
+    expect(getRateLimitError(errorObj, 'bar')).toBe(false);
+  });
+
+  it('has an error for `window`', function() {
+    expect(getRateLimitError(errorObj, 'window')).toBe(true);
+  });
+
+  it('has an error for `count`', function() {
+    expect(getRateLimitError(errorObj, 'count')).toBe(true);
+  });
+});
diff --git a/tests/js/spec/views/__snapshots__/adminSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/adminSettings.spec.jsx.snap
index f00d995168..4771a470c2 100644
--- a/tests/js/spec/views/__snapshots__/adminSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/adminSettings.spec.jsx.snap
@@ -40,6 +40,7 @@ exports[`AdminSettings render() renders 1`] = `
         disabled={true}
         disabledReason="This setting is defined in config.yml and may not be changed via the web UI."
         help="The root web address which is used to communicate with the Sentry backend."
+        hideErrorMessage={false}
         label="Root URL"
         name="system.url-prefix"
         placeholder="https://sentry.example.com"
@@ -50,6 +51,7 @@ exports[`AdminSettings render() renders 1`] = `
         disabled={true}
         disabledReason="This setting is defined in config.yml and may not be changed via the web UI."
         help="The technical contact for this Sentry installation."
+        hideErrorMessage={false}
         label="Admin Email"
         name="system.admin-email"
         placeholder="admin@example.com"
@@ -60,6 +62,7 @@ exports[`AdminSettings render() renders 1`] = `
         disabled={true}
         disabledReason="This setting is defined in config.yml and may not be changed via the web UI."
         help="The support contact for this Sentry installation."
+        hideErrorMessage={false}
         label="Support Email"
         name="system.support-email"
         placeholder="support@example.com"
@@ -70,6 +73,7 @@ exports[`AdminSettings render() renders 1`] = `
         disabled={true}
         disabledReason="This setting is defined in config.yml and may not be changed via the web UI."
         help="The security contact for this Sentry installation."
+        hideErrorMessage={false}
         label="Security Email"
         name="system.security-email"
         placeholder="security@example.com"
@@ -79,6 +83,7 @@ exports[`AdminSettings render() renders 1`] = `
         disabled={true}
         disabledReason="This setting is defined in config.yml and may not be changed via the web UI."
         help="The maximum number of events the system should accept per minute. A value of 0 will disable the default rate limit."
+        hideErrorMessage={false}
         label="Rate Limit"
         name="system.rate-limit"
         placeholder="e.g. 500"
@@ -92,6 +97,7 @@ exports[`AdminSettings render() renders 1`] = `
         disabled={true}
         disabledReason="This setting is defined in config.yml and may not be changed via the web UI."
         help="Allow anyone to create an account and access this Sentry installation."
+        hideErrorMessage={false}
         label="Allow Registration"
         name="auth.allow-registration"
         required={true}
@@ -100,6 +106,7 @@ exports[`AdminSettings render() renders 1`] = `
         disabled={true}
         disabledReason="This setting is defined in config.yml and may not be changed via the web UI."
         help="The maximum number of times an authentication attempt may be made by a single IP address in a 60 second window."
+        hideErrorMessage={false}
         label="IP Rate Limit"
         name="auth.ip-rate-limit"
         placeholder="e.g. 10"
@@ -109,6 +116,7 @@ exports[`AdminSettings render() renders 1`] = `
         disabled={true}
         disabledReason="This setting is defined in config.yml and may not be changed via the web UI."
         help="The maximum number of times an authentication attempt may be made against a single account in a 60 second window."
+        hideErrorMessage={false}
         label="User Rate Limit"
         name="auth.user-rate-limit"
         placeholder="e.g. 10"
@@ -118,6 +126,7 @@ exports[`AdminSettings render() renders 1`] = `
         disabled={true}
         disabledReason="This setting is defined in config.yml and may not be changed via the web UI."
         help="The maximum number of organizations which may be created by a single account in a one hour window."
+        hideErrorMessage={false}
         label="Organization Creation Rate Limit"
         name="api.rate-limit.org-create"
         placeholder="e.g. 5"
@@ -146,6 +155,7 @@ exports[`AdminSettings render() renders 1`] = `
             </span>
           </span>
         }
+        hideErrorMessage={false}
         label="Anonymize Beacon"
         name="beacon.anonymous"
         required={false}
diff --git a/tests/js/spec/views/__snapshots__/apiNewToken.spec.jsx.snap b/tests/js/spec/views/__snapshots__/apiNewToken.spec.jsx.snap
index 227c644c51..5a2dab86ba 100644
--- a/tests/js/spec/views/__snapshots__/apiNewToken.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/apiNewToken.spec.jsx.snap
@@ -116,6 +116,7 @@ exports[`ApiNewToken render() renders 1`] = `
           ]
         }
         disabled={false}
+        hideErrorMessage={false}
         label="Scopes"
         name="scopes"
         required={true}
diff --git a/tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
index b6a55fa82f..0701afa57c 100644
--- a/tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
@@ -576,6 +576,7 @@ exports[`OrganizationApiKeyDetailsView renders 1`] = `
                           <TextField
                             className="split-layout-child"
                             disabled={false}
+                            hideErrorMessage={false}
                             label="Label"
                             name="label"
                             required={false}
@@ -617,6 +618,7 @@ exports[`OrganizationApiKeyDetailsView renders 1`] = `
                           <TextField
                             className="split-layout-child"
                             disabled={true}
+                            hideErrorMessage={false}
                             label="API Key"
                             name="key"
                             required={false}
@@ -721,6 +723,7 @@ exports[`OrganizationApiKeyDetailsView renders 1`] = `
                       }
                       className="api-key-details"
                       disabled={false}
+                      hideErrorMessage={false}
                       label="Scopes"
                       name="scope_list"
                       required={true}
@@ -925,6 +928,7 @@ exports[`OrganizationApiKeyDetailsView renders 1`] = `
                     <TextareaField
                       disabled={false}
                       help="Separate multiple entries with a newline"
+                      hideErrorMessage={false}
                       label="Allowed Domains"
                       name="allowed_origins"
                       placeholder="e.g. example.com or https://example.com"
diff --git a/tests/js/spec/views/__snapshots__/organizationCreate.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationCreate.spec.jsx.snap
index 372cb42c43..ace4b9f275 100644
--- a/tests/js/spec/views/__snapshots__/organizationCreate.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationCreate.spec.jsx.snap
@@ -29,6 +29,7 @@ exports[`OrganizationCreate render() renders correctly 1`] = `
     >
       <TextField
         disabled={false}
+        hideErrorMessage={false}
         label="Organization Name"
         name="name"
         placeholder="e.g. My Company"
diff --git a/tests/js/spec/views/__snapshots__/teamCreate.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamCreate.spec.jsx.snap
index 1411804c6d..e3aede9722 100644
--- a/tests/js/spec/views/__snapshots__/teamCreate.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/teamCreate.spec.jsx.snap
@@ -24,6 +24,7 @@ exports[`TeamCreate render() renders correctly 1`] = `
     >
       <TextField
         disabled={false}
+        hideErrorMessage={false}
         label="Team Name"
         name="name"
         placeholder="e.g. Operations, Web, Desktop"
diff --git a/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap
index 9c49eec514..c76b32803b 100644
--- a/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap
@@ -29,6 +29,7 @@ exports[`TeamSettings render() renders 1`] = `
       >
         <TextField
           disabled={false}
+          hideErrorMessage={false}
           label="Name"
           name="name"
           placeholder="e.g. API Team"
@@ -36,6 +37,7 @@ exports[`TeamSettings render() renders 1`] = `
         />
         <TextField
           disabled={false}
+          hideErrorMessage={false}
           label="Short name"
           name="slug"
           placeholder="e.g. api-team"
