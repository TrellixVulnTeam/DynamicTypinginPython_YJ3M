commit 31fedcc78089a88deee31cdce2b0f16e38a4ae50
Author: Billy Vong <billyvg@gmail.com>
Date:   Wed Aug 9 17:35:25 2017 -0700

    refactor(ui): create Button component + story

diff --git a/docs-ui/components/button.stories.js b/docs-ui/components/button.stories.js
new file mode 100644
index 0000000000..187fa2f952
--- /dev/null
+++ b/docs-ui/components/button.stories.js
@@ -0,0 +1,71 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import {action} from '@storybook/addon-actions';
+
+import Button from 'sentry-ui/buttons/button';
+
+const Item = ({children}) => <span style={{padding: 12}}>{children}</span>;
+
+// eslint-disable-next-line
+storiesOf('Buttons', module)
+  .add(
+    'priorities',
+    withInfo('Different button priorities')(() => (
+      <div>
+        <Item>
+          <Button to="/test" onClick={action('clicked default')}>
+            Default Button
+          </Button>
+        </Item>
+
+        <Item>
+          <Button primary onClick={action('click primary')}>
+            Primary Button
+          </Button>
+        </Item>
+
+        <Item>
+          <Button danger onClick={action('click danger')}>
+            Danger Button
+          </Button>
+        </Item>
+
+        <Item>
+          <Button to={''} disabled onClick={action('click disabled')}>
+            Disabled Button
+          </Button>
+        </Item>
+      </div>
+    ))
+  )
+  .add(
+    'sizes',
+    withInfo('Different buttons sizes')(() => (
+      <div>
+        <Item>
+          <Button xsmall>
+            Extra Small
+          </Button>
+        </Item>
+
+        <Item>
+          <Button small>
+            Small
+          </Button>
+        </Item>
+
+        <Item>
+          <Button>
+            Normal
+          </Button>
+        </Item>
+
+        <Item>
+          <Button large>
+            Large
+          </Button>
+        </Item>
+      </div>
+    ))
+  );
diff --git a/src/sentry/static/sentry/app/components/buttons/button.jsx b/src/sentry/static/sentry/app/components/buttons/button.jsx
new file mode 100644
index 0000000000..789818067c
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/buttons/button.jsx
@@ -0,0 +1,107 @@
+import React, {PropTypes} from 'react';
+import {Link} from 'react-router';
+import classNames from 'classnames';
+
+import '../../../less/components/button.less';
+
+const Button = React.createClass({
+  propTypes: {
+    primary: PropTypes.bool,
+    danger: PropTypes.bool,
+    disabled: PropTypes.bool,
+    small: PropTypes.bool,
+    xsmall: PropTypes.bool,
+    large: PropTypes.bool,
+    to: PropTypes.string,
+    href: PropTypes.string,
+    onClick: PropTypes.func
+  },
+
+  getDefaultProps() {
+    return {
+      disabled: false
+    };
+  },
+
+  // Intercept onClick and propagate
+  handleClick(...args) {
+    let {disabled, onClick} = this.props;
+    if (disabled) return;
+    if (typeof onClick !== 'function') return;
+
+    onClick(...args);
+  },
+
+  render() {
+    let {
+      primary,
+      danger,
+      small,
+      xsmall,
+      large,
+      to,
+      href,
+      children,
+      className,
+      disabled,
+
+      // destructure from `buttonProps`
+      // not necessary, but just in case someone re-orders props
+      // eslint-disable-next-line no-unused-vars
+      onClick,
+      ...buttonProps
+    } = this.props;
+
+    let cx = classNames(className, 'button', {
+      'button-primary': primary,
+      'button-danger': danger,
+      'button-default': !primary && !danger,
+      'button-sm': small,
+      'button-xs': xsmall,
+      'button-lg': large,
+      'button-disabled': disabled
+    });
+
+    // Buttons come in 3 flavors: Link, anchor, and regular buttons. Let's
+    // use props to determine which to serve up, so we don't have to think
+    // about it. As a bonus, let's ensure all buttons appear as a button
+    // control to screen readers. Note: you must still handle tabindex manually.
+
+    // Handle react-router Links
+    if (to) {
+      return (
+        <Link
+          to={to}
+          {...buttonProps}
+          onClick={this.handleClick}
+          className={cx}
+          role="button">
+          {children}
+        </Link>
+      );
+    }
+
+    // Handle traditional links
+    if (href) {
+      return (
+        <a
+          href={href}
+          {...buttonProps}
+          onClick={this.handleClick}
+          className={cx}
+          role="button">
+          {children}
+        </a>
+      );
+    }
+
+    // Otherwise, fall back to basic button element
+    return (
+      <button {...buttonProps} onClick={this.handleClick} className={cx} role="button">
+        {children}
+      </button>
+    );
+  }
+});
+
+export default Button;
diff --git a/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx b/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
index 364d9db541..1b17c8a295 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import {Link} from 'react-router';
 
 import OrganizationHomeSidebar from './homeSidebar';
 import OrganizationState from '../../mixins/organizationState';
@@ -7,6 +6,8 @@ import ProjectSelector from '../projectHeader/projectSelector';
 import TooltipMixin from '../../mixins/tooltip';
 import {t} from '../../locale';
 
+import Button from '../../components/buttons/button';
+
 const HomeContainer = React.createClass({
   mixins: [
     OrganizationState,
@@ -27,31 +28,33 @@ const HomeContainer = React.createClass({
           </div>
           <div className="align-right hidden-xs">
             {access.has('project:write')
-              ? <a
+              ? <Button
                   href={`/organizations/${org.slug}/projects/new/`}
-                  className="btn btn-primary"
+                  primary
                   style={{marginRight: 5}}>
                   {t('New Project')}
-                </a>
-              : <a
-                  className="btn btn-primary btn-disabled tip"
+                </Button>
+              : <Button
+                  primary
+                  disabled
+                  className="tip"
                   data-placement="bottom"
                   title={t('You do not have enough permission to create new projects')}
                   style={{marginRight: 5}}>
                   {t('New Project')}
-                </a>}
+                </Button>}
             {access.has('team:write')
-              ? <Link
-                  to={`/organizations/${org.slug}/teams/new/`}
-                  className="btn btn-primary">
+              ? <Button to={`/organizations/${org.slug}/teams/new/`} primary>
                   {t('New Team')}
-                </Link>
-              : <a
-                  className="btn btn-primary btn-disabled tip"
+                </Button>
+              : <Button
+                  primary
+                  disabled
+                  className="tip"
                   data-placement="bottom"
                   title={t('You do not have enough permission to create new teams')}>
                   {t('New Team')}
-                </a>}
+                </Button>}
           </div>
         </div>
         <div className="container">
diff --git a/src/sentry/static/sentry/less/components/button.less b/src/sentry/static/sentry/less/components/button.less
new file mode 100644
index 0000000000..8a00f8e59f
--- /dev/null
+++ b/src/sentry/static/sentry/less/components/button.less
@@ -0,0 +1,87 @@
+@import url("../palette.less");
+
+.button {
+  display: inline-block;
+  line-height: 1;
+  font-weight: 600;
+  border-radius: 3px;
+  box-shadow: 0 2px rgba(0,0,0, .05);
+  cursor: pointer;
+  font-size: 14px;
+  padding: 12px 16px;
+
+  &:active {
+    box-shadow: inset 0 2px rgba(0,0,0, .05);
+  }
+  &:focus {
+    outline: none;
+  }
+}
+
+// Priority concerns
+// - font color, background, and border
+
+.button-default {
+  color: @90;
+  background: #fff;
+  border: 1px solid @trim-dark;
+  &:hover, &:focus, &:active {
+    color: @100;
+    border-color: @trim-darkest;
+  }
+}
+
+.button-primary {
+  color: #fff;
+  background: @purple;
+  border: 1px solid @purple-darkest;
+  &:hover, &:focus, &:active {
+    color: #fff;
+    background: @purple-dark;
+    border-color: darken(@purple-darkest, 5);
+  }
+}
+
+.button-danger {
+  color: #fff;
+  background: @red;
+  border: 1px solid @red-dark;
+  &:hover, &:focus, &:active {
+    color: #fff;
+    background: @red-dark;
+    border-color: darken(@red-darkest, 5);
+  }
+}
+
+.button-disabled {
+  color: @50;
+  background: #fff;
+  border: 1px solid @trim;
+  cursor: not-allowed;
+  box-shadow: none;
+
+  &:hover, &:focus, &:active {
+    color: @50;
+    background: #fff;
+    border-color: @trim;
+  }
+}
+
+// Size Concerns
+// - Padding and font size
+
+.button-xs {
+  padding: 6px 10px;
+  font-size: 12px;
+}
+
+.button-sm {
+  padding: 8px 12px;
+  font-size: 12px;
+}
+
+.button-lg {
+  font-size: 16px;
+  padding: 14px 20px;
+}
+
diff --git a/src/sentry/static/sentry/less/palette.less b/src/sentry/static/sentry/less/palette.less
index b55b2178db..df69a8e83d 100644
--- a/src/sentry/static/sentry/less/palette.less
+++ b/src/sentry/static/sentry/less/palette.less
@@ -26,6 +26,7 @@
 @red:                 #e03e2f;
 @red-light:           lighten(@red, 10%);
 @red-dark:            darken(@red, 10%);
+@red-darkest:         darken(@red, 20%);
 
 @pink:                #F868BC;
 @pink-light:          lighten(@pink, 10%);
@@ -35,6 +36,7 @@
 @purple-light:        lighten(@purple, 10%);
 @purple-lightest:     lighten(@purple-light, 10);
 @purple-dark:         darken(@purple, 10%);
+@purple-darkest:      darken(@purple, 20%);
 
 @gray:                @70;
 @gray-light:          desaturate(@50, 5%);
@@ -57,8 +59,10 @@
 @link-color:                  @blue;
 @link-color-hover:            @blue-dark;
 @header-bg-color:             #342c3e;
+
 @trim:                        @gray-lightest;
 @trim-dark:                   darken(@gray-lightest, 4);
+@trim-darkest:                darken(@gray-lightest, 10);
 
 
 // Alerts (TODO): Derive these from palette
diff --git a/tests/js/spec/components/__snapshots__/button.spec.jsx.snap b/tests/js/spec/components/__snapshots__/button.spec.jsx.snap
new file mode 100644
index 0000000000..ba16bc50f9
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/button.spec.jsx.snap
@@ -0,0 +1,35 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Button renders 1`] = `
+<button
+  className="button button-primary button-lg"
+  onClick={[Function]}
+  role="button"
+>
+  Button
+</button>
+`;
+
+exports[`Button renders normal link 1`] = `
+<a
+  className="button button-default"
+  href="/some/relative/url"
+  onClick={[Function]}
+  role="button"
+>
+  Normal Link
+</a>
+`;
+
+exports[`Button renders react-router link 1`] = `
+<Link
+  className="button button-default"
+  onClick={[Function]}
+  onlyActiveOnIndex={false}
+  role="button"
+  style={Object {}}
+  to="/some/route"
+>
+  Router Link
+</Link>
+`;
diff --git a/tests/js/spec/components/button.spec.jsx b/tests/js/spec/components/button.spec.jsx
new file mode 100644
index 0000000000..307276a570
--- /dev/null
+++ b/tests/js/spec/components/button.spec.jsx
@@ -0,0 +1,36 @@
+import React from 'react';
+import {mount, shallow} from 'enzyme';
+import Button from 'app/components/buttons/button';
+
+describe('Button', function() {
+  it('renders', function() {
+    let component = shallow(<Button primary large>Button</Button>);
+    expect(component).toMatchSnapshot();
+  });
+
+  it('renders react-router link', function() {
+    let component = shallow(<Button to="/some/route">Router Link</Button>);
+    expect(component).toMatchSnapshot();
+  });
+
+  it('renders normal link', function() {
+    let component = shallow(<Button href="/some/relative/url">Normal Link</Button>);
+    expect(component).toMatchSnapshot();
+  });
+
+  it('calls `onClick` callback', function() {
+    let spy = jest.fn();
+    let component = mount(<Button onClick={spy} />);
+    component.simulate('click');
+
+    expect(spy).toHaveBeenCalled();
+  });
+
+  it('does not call `onClick` on disabled buttons', function() {
+    let spy = jest.fn();
+    let component = mount(<Button onClick={spy} disabled />);
+    component.simulate('click');
+
+    expect(spy).not.toHaveBeenCalled();
+  });
+});
