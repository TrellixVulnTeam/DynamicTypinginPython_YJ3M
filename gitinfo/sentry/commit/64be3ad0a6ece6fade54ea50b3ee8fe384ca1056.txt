commit 64be3ad0a6ece6fade54ea50b3ee8fe384ca1056
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Thu Jun 7 10:53:44 2018 -0700

    feat(integrations): Update create issue form when certain fields change (#8663)

diff --git a/src/sentry/integrations/jira/integration.py b/src/sentry/integrations/jira/integration.py
index 66dc341b34..ad16bef25d 100644
--- a/src/sentry/integrations/jira/integration.py
+++ b/src/sentry/integrations/jira/integration.py
@@ -249,6 +249,7 @@ class JiraIntegration(Integration, IssueSyncMixin):
                 'choices': [(p['id'], p['key']) for p in client.get_projects_list()],
                 'default': meta['id'],
                 'type': 'select',
+                'updatesForm': True,
             }
         ] + fields + [
             {
@@ -256,7 +257,8 @@ class JiraIntegration(Integration, IssueSyncMixin):
                 'label': 'Issue Type',
                 'default': issue_type or issue_type_meta['id'],
                 'type': 'select',
-                'choices': issue_type_choices
+                'choices': issue_type_choices,
+                'updatesForm': True,
             }
         ]
 
diff --git a/src/sentry/static/sentry/app/components/group/externalIssues.jsx b/src/sentry/static/sentry/app/components/group/externalIssues.jsx
index a025bd038b..ac93c6cf3d 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssues.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssues.jsx
@@ -51,6 +51,51 @@ class ExternalIssueForm extends AsyncComponent {
     });
   };
 
+  refetchConfig = () => {
+    let {dynamicFieldValues} = this.state;
+    let {action, group, integration} = this.props;
+    let endpoint = `/groups/${group.id}/integrations/${integration.id}/`;
+    let query = {
+      action,
+    };
+    Object.entries(dynamicFieldValues).map(([key, val]) => {
+      query[key] = encodeURIComponent(val);
+    });
+    this.api.request(endpoint, {
+      method: 'GET',
+      query,
+      success: (data, _, jqXHR) => {
+        this.handleRequestSuccess({stateKey: 'integrationDetails', data, jqXHR}, true);
+      },
+      error: error => {
+        this.handleError(error, ['integrationDetails', endpoint, null, null]);
+      },
+    });
+  };
+
+  onFieldChange = (label, value) => {
+    let {integrationDetails} = this.state;
+    let {action} = this.props;
+    let config = integrationDetails[`${action}IssueConfig`];
+    let dynamicFields = new Set(
+      config.filter(field => field.updatesForm).map(field => field.name)
+    );
+    if (dynamicFields.has(label)) {
+      let dynamicFieldValues = this.state.dynamicFieldValues || {};
+      dynamicFieldValues[label] = value;
+
+      this.setState(
+        {
+          dynamicFieldValues,
+          loading: true,
+          error: false,
+          remainingRequests: 1,
+        },
+        this.refetchConfig
+      );
+    }
+  };
+
   renderBody() {
     let {integrationDetails} = this.state;
     let {action, group, integration} = this.props;
@@ -67,6 +112,7 @@ class ExternalIssueForm extends AsyncComponent {
         apiMethod={action === 'create' ? 'POST' : 'PUT'}
         onSubmitSuccess={this.onSubmitSuccess}
         initialData={initialData}
+        onFieldChange={this.onFieldChange}
       >
         {config.map(field => {
           let props = {};
@@ -83,7 +129,7 @@ class ExternalIssueForm extends AsyncComponent {
               autoload: false,
             };
           }
-          return <FieldFromConfig key={field.name} field={field} {...props}/>;
+          return <FieldFromConfig key={field.name} field={field} {...props} />;
         })}
       </Form>
     );
diff --git a/tests/sentry/integrations/jira/test_integration.py b/tests/sentry/integrations/jira/test_integration.py
index 694297fb72..3e8ae11e49 100644
--- a/tests/sentry/integrations/jira/test_integration.py
+++ b/tests/sentry/integrations/jira/test_integration.py
@@ -332,6 +332,7 @@ class JiraIntegrationTest(APITestCase):
                 'type': 'select',
                 'name': 'project',
                 'label': 'Jira Project',
+                'updatesForm': True,
             }, {
                 'default': 'message',
                 'type': 'string',
@@ -351,7 +352,8 @@ class JiraIntegrationTest(APITestCase):
                 'choices': [('1', 'Bug')],
                 'type': 'select',
                 'name': 'issuetype',
-                'label': 'Issue Type'
+                'label': 'Issue Type',
+                'updatesForm': True,
             }]
 
     def test_get_link_issue_config(self):
