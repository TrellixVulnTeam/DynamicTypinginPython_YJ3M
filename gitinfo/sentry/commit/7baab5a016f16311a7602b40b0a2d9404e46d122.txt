commit 7baab5a016f16311a7602b40b0a2d9404e46d122
Author: Chris Fuller <chris@iprogramstuff.com>
Date:   Tue Aug 27 16:05:33 2019 -0400

    fix(ui): Handling 404 from Release endpoint (#14506)
    
    fix(ui): Handling 404 from Release endpoint

diff --git a/src/sentry/static/sentry/app/views/releases/detail/index.jsx b/src/sentry/static/sentry/app/views/releases/detail/index.jsx
index 1ac2fc1eb1..685c68bde6 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/index.jsx
@@ -6,10 +6,15 @@ import SentryTypes from 'app/sentryTypes';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
+import Alert from 'app/components/alert';
 import {URL_PARAM} from 'app/constants/globalSelectionHeader';
 import withOrganization from 'app/utils/withOrganization';
+import withGlobalSelection from 'app/utils/withGlobalSelection';
+import withProjects from 'app/utils/withProjects';
+
 import AsyncView from 'app/views/asyncView';
 import {PageContent} from 'app/styles/organization';
+import {t} from 'app/locale';
 
 import ReleaseHeader from './releaseHeader';
 
@@ -28,6 +33,15 @@ ReleaseDetailsContainer.propTypes = {
 class OrganizationReleaseDetails extends AsyncView {
   static propTypes = {
     organization: SentryTypes.Organization,
+    project: SentryTypes.Project,
+    /**
+     * Currently selected values(s)
+     */
+    selection: SentryTypes.GlobalSelection,
+    /**
+     * List of projects to display in project selector
+     */
+    projects: PropTypes.arrayOf(SentryTypes.Project).isRequired,
   };
 
   static childContextTypes = {
@@ -50,8 +64,17 @@ class OrganizationReleaseDetails extends AsyncView {
 
   getEndpoints() {
     const {orgId, version} = this.props.params;
+    const {project} = this.props.location.query;
+    const query = {};
+    if (project !== undefined) {
+      query.project = project;
+    }
     return [
-      ['release', `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`],
+      [
+        'release',
+        `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`,
+        {query},
+      ],
     ];
   }
 
@@ -81,6 +104,37 @@ class OrganizationReleaseDetails extends AsyncView {
       </PageContent>
     );
   }
+
+  renderError(error, disableLog = false, disableReport = false) {
+    const has404Errors = Object.values(this.state.errors).find(
+      resp => resp && resp.status === 404
+    );
+    if (has404Errors) {
+      // This catches a 404 coming from the release endpoint and displays a custom error message.
+      const {projects: all_projects} = this.props;
+      const {projects: selected_projects} = this.props.selection;
+
+      return (
+        <PageContent>
+          <Alert type="error" icon="icon-circle-exclamation">
+            {t(
+              'This release may not be in your selected project' +
+                (selected_projects.length > 1 ? 's' : '')
+            )}
+            :{' '}
+            {selected_projects
+              .map(p => {
+                return all_projects.find(pp => parseInt(pp.id, 10) === p).name;
+              })
+              .join(', ')}
+          </Alert>
+        </PageContent>
+      );
+    }
+    return super.renderError(error, disableLog, disableReport);
+  }
 }
 
-export default withOrganization(ReleaseDetailsContainer);
+export default withProjects(
+  withOrganization(withGlobalSelection(ReleaseDetailsContainer))
+);
diff --git a/src/sentry/static/sentry/app/views/releases/list/index.jsx b/src/sentry/static/sentry/app/views/releases/list/index.jsx
index 091e836429..e8e52dd72b 100644
--- a/src/sentry/static/sentry/app/views/releases/list/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/index.jsx
@@ -57,10 +57,8 @@ class OrganizationReleases extends AsyncView {
   }
 
   onSearch = query => {
-    const targetQueryParams = {};
-    if (query !== '') {
-      targetQueryParams.query = query;
-    }
+    const targetQueryParams = getQuery(this.props.location).query;
+    targetQueryParams.query = query;
 
     const {orgId} = this.props.params;
     browserHistory.push({
diff --git a/tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx b/tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx
index 56c9c83fcd..95f67cbc6b 100644
--- a/tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx
+++ b/tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx
@@ -41,6 +41,7 @@ describe('ReleaseDetails', function() {
     };
     const location = {
       pathname: '/',
+      query: {},
     };
 
     const wrapper = mount(
