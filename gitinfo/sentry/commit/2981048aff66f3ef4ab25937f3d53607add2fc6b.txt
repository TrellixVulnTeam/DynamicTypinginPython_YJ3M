commit 2981048aff66f3ef4ab25937f3d53607add2fc6b
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Apr 16 11:56:32 2015 -0700

    Fix various API behavior

diff --git a/src/sentry/api/endpoints/organization_member_team_details.py b/src/sentry/api/endpoints/organization_member_team_details.py
index a51485bad7..6bacb2e21c 100644
--- a/src/sentry/api/endpoints/organization_member_team_details.py
+++ b/src/sentry/api/endpoints/organization_member_team_details.py
@@ -74,10 +74,13 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
 
         serializer = OrganizationMemberTeamSerializer(data=request.DATA, partial=True)
         if not serializer.is_valid():
-            return Response(status=400)
+            return Response(serializer.errors, status=400)
 
         result = serializer.object
         if result.get('isActive') is not None:
             omt.is_active = result['isActive']
             omt.save()
-        return Response(status=204)
+        return Response({
+            'slug': team.slug,
+            'isActive': omt.is_active,
+        }, status=200)
diff --git a/tests/sentry/api/endpoints/test_organization_member_team_details.py b/tests/sentry/api/endpoints/test_organization_member_team_details.py
index e739959a5d..cc7e3cd5c4 100644
--- a/tests/sentry/api/endpoints/test_organization_member_team_details.py
+++ b/tests/sentry/api/endpoints/test_organization_member_team_details.py
@@ -25,7 +25,7 @@ class UpdateOrganizationMemberTeamTest(APITestCase):
 
         self.login_as(self.user)
 
-        resp = self.client.put(path, data={'isActive': '1'})
+        resp = self.client.put(path, data={'isActive': '0'})
 
         assert resp.status_code == 200
 
@@ -33,4 +33,33 @@ class UpdateOrganizationMemberTeamTest(APITestCase):
             team=team,
             organizationmember=member_om,
         )
-        assert omt.is_active
+        assert not omt.is_active
+
+    def test_can_change_status_as_team_member(self):
+        self.login_as(user=self.user)
+
+        organization = self.create_organization(name='foo', owner=self.user)
+        team = self.create_team(name='foo', organization=organization)
+        member_om = self.create_member(
+            organization=organization,
+            email='foo@example.com',
+            type=OrganizationMemberType.MEMBER,
+            has_global_access=False,
+            teams=[team],
+        )
+
+        path = reverse('sentry-api-0-organization-member-team-details', args=[
+            organization.slug, member_om.id, team.slug,
+        ])
+
+        self.login_as(self.user)
+
+        resp = self.client.put(path, data={'isActive': '0'})
+
+        assert resp.status_code == 200
+
+        omt = OrganizationMemberTeam.objects.get(
+            team=team,
+            organizationmember=member_om,
+        )
+        assert not omt.is_active
