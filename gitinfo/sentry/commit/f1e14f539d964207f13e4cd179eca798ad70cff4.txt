commit f1e14f539d964207f13e4cd179eca798ad70cff4
Author: ckj <chriskjennings@gmail.com>
Date:   Fri Feb 6 17:38:19 2015 -0500

    Style clear assignee

diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index 33e58fdf29..243356aaa8 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -6,7 +6,6 @@ var Reflux = require("reflux");
 var api = require("../api");
 var AggregateListStore = require("../stores/aggregateListStore");
 var DropdownLink = require("./dropdownLink");
-var Gravatar = require("./gravatar");
 var MenuItem = require("./menuItem");
 var PropTypes = require("../proptypes");
 
@@ -18,66 +17,35 @@ var AssigneeSelector = React.createClass({
     memberList: React.PropTypes.instanceOf(Array).isRequired,
   },
 
-  getInitialState() {
-    return {
-      filterQuery: ''
-    };
-  },
-
-  assignTo(member) {
+  assignTo: function(member) {
     api.assignTo({id: this.props.aggregate.id, email: member.email});
-    this.setState({filterQuery: ''});
   },
 
-  clearAssignTo() {
+  clearAssignTo: function() {
     api.assignTo({id: this.props.aggregate.id, email: ''});
-    this.setState({filterQuery: ''});
-  },
-
-  onChangeFilter() {
-    this.setState({
-      filterQuery: event.target.value
-    });
-  },
-
-  onDropdownOpen() {
-    this.refs.filter.getDOMNode().focus();
-  },
-
-  onDropdownClose() {
-    this.setState({
-      filterQuery: ''
-    });
   },
 
-  render() {
+  render: function() {
     var agg = this.props.aggregate;
+
     var loading = AggregateListStore.hasStatus(agg.id, 'assignTo');
 
     var className = "assignee-selector anchor-right";
     if (!agg.assignedTo) {
       className += " unassigned";
     }
-    var filterQuery = this.state.filterQuery;
-    var memberNodes = this.props.memberList.filter((item) => {
-      if (item.email.indexOf(filterQuery) !== -1) {
-        return true;
-      }
-      if (item.name && item.name.indexOf(filterQuery) !== -1) {
-        return true;
-      }
-      return false;
-    }).map((item) => {
-      return (
+
+    var memberNodes = [];
+    this.props.memberList.forEach(function(item){
+      memberNodes.push(
         <MenuItem key={item.id}
                   disabled={!loading}
                   onSelect={this.assignTo.bind(this, item)} >
-          <Gravatar email={item.email} className="avatar"
-                    size={16} />
+          <img src={item.avatarUrl} className="avatar" />
           {item.name || item.email}
         </MenuItem>
       );
-    });
+    }.bind(this));
 
     return (
       <div className={className}>
@@ -86,23 +54,19 @@ var AssigneeSelector = React.createClass({
         :
           <DropdownLink
             className="assignee-selector-toggle"
-            onOpen={this.onDropdownOpen}
-            onClose={this.onDropdownClose}
             title={agg.assignedTo ?
               <img src={agg.assignedTo.avatarUrl} className="avatar" />
               :
               <span className="icon-user" />
             }>
             <MenuItem noAnchor={true} key="filter">
-              <input type="text" className="form-control input-sm"
-                     ref="filter" placeholder="Filter people"
-                     onChange={this.onChangeFilter} />
+              <input type="text" className="form-control input-sm" placeholder="Filter people" />
             </MenuItem>
             {agg.assignedTo ?
-              <MenuItem key="clear"
+              <MenuItem className="clear-assignee" key="clear"
                         disabled={!loading}
                         onSelect={this.clearAssignTo}>
-                Clear Assignee
+                <span className="icon-close"/> Clear Assignee
               </MenuItem>
             : ''}
             {memberNodes}
diff --git a/src/sentry/static/sentry/less/sentry.less b/src/sentry/static/sentry/less/sentry.less
index dcf8ee4bff..a310eebc0c 100644
--- a/src/sentry/static/sentry/less/sentry.less
+++ b/src/sentry/static/sentry/less/sentry.less
@@ -1785,9 +1785,11 @@ a.icon-share {
     right: -14px !important;
     min-width: 180px;
     padding-top: 0;
+    padding-bottom: 3px;
     max-width: 250px;
     top: 30px;
     z-index: 100;
+    font-size: 13px;
 
     .form-control {
       border: 0;
@@ -1798,6 +1800,8 @@ a.icon-share {
       padding-bottom: 8px;
       margin-bottom: 6px;
       border-radius: 0;
+      font-size: 13px;
+      
       &:focus {
         box-shadow: none;
       }
@@ -1811,7 +1815,7 @@ a.icon-share {
     }
 
     li a {
-      padding: 4px 8px;
+      padding: 5px 8px;
       display: block;
       padding-left: 35px;
       position: relative;
@@ -1824,6 +1828,7 @@ a.icon-share {
         margin-right: 5px;
         position: absolute;
         left: 8px;
+        .square(20px);
       }
     }
   }
@@ -1837,6 +1842,22 @@ a.icon-share {
       font-size: 20px;
     }
   }
+
+  .clear-assignee a {
+    background: rgba(52, 60, 69, .03);
+    border-bottom: 1px solid rgba(52, 60, 69, .06);
+    margin-top: -6px;
+    margin-bottom: 2px;
+    padding: 4px 0 2px 35px !important;
+
+    .icon-close {
+      font-size: 16px;
+      position: absolute;
+      left: 10px;
+      top: 4px;
+      opacity: .3;
+    }
+  }
 }
 
 .inactive .group-list > li:hover {
