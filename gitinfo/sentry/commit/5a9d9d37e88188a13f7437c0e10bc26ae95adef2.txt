commit 5a9d9d37e88188a13f7437c0e10bc26ae95adef2
Author: Dena Mwangi <dena@getsentry.com>
Date:   Fri Oct 26 11:26:21 2018 -0700

    chore(experiments): Turn off SSO experiment (#10125)

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index a14476a490..d11f4e5a03 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -11,7 +11,6 @@ import GroupSimilarView from 'app/views/groupSimilar/groupSimilarView';
 import GroupTagValues from 'app/views/groupTagValues';
 import GroupTags from 'app/views/groupTags';
 import GroupUserFeedback from 'app/views/groupUserFeedback';
-import HookOrDefault from 'app/components/hookOrDefault';
 import HookStore from 'app/stores/hookStore';
 import LazyLoad from 'app/components/lazyLoad';
 import MyIssuesAssignedToMe from 'app/views/myIssues/assignedToMe';
@@ -21,7 +20,6 @@ import NewProject from 'app/views/projectInstall/newProject';
 import OnboardingConfigure from 'app/views/onboarding/configure/index';
 import OnboardingWizard from 'app/views/onboarding/index';
 import OrganizationActivity from 'app/views/organizationActivity';
-import OrganizationAuth from 'app/views/settings/organizationAuth/index';
 import OrganizationContext from 'app/views/organizationContext';
 import OrganizationCreate from 'app/views/organizationCreate';
 import OrganizationDashboard from 'app/views/organizationDashboard';
@@ -471,10 +469,9 @@ function routes() {
       <Route
         path="auth/"
         name="Auth Providers"
-        component={HookOrDefault({
-          hookName: 'component:org-auth-view',
-          defaultComponent: OrganizationAuth,
-        })}
+        componentPromise={() =>
+          import(/*webpackChunkName: OrganizationAuth*/ './views/settings/organizationAuth')}
+        component={errorHandler(LazyLoad)}
       />
 
       <Route path="members/" name="Members">
diff --git a/src/sentry/static/sentry/app/utils/logExperiment.jsx b/src/sentry/static/sentry/app/utils/logExperiment.jsx
deleted file mode 100644
index f4e2ae88dc..0000000000
--- a/src/sentry/static/sentry/app/utils/logExperiment.jsx
+++ /dev/null
@@ -1,26 +0,0 @@
-import HookStore from 'app/stores/hookStore';
-
-/**
- * @param {Object} experiments: Config
- * @param {String} param: assignment parameter, e.g. "color"
- */
-export default function logExperiment(
-  experiments,
-  experimentName,
-  unitName,
-  unitId,
-  param
-) {
-  let assignment = experiments[experimentName];
-  if (assignment === null || assignment === undefined) return;
-
-  let data = {
-    experiment_name: experimentName,
-    unit_name: unitName,
-    unit_id: unitId,
-    params: {
-      [param]: assignment,
-    },
-  };
-  HookStore.get('analytics:log-experiment').forEach(cb => cb(data));
-}
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx
index 72de3805c5..d78e224d5b 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsNavigation.jsx
@@ -4,14 +4,12 @@ import React from 'react';
 
 import SettingsNavigationGroup from 'app/views/settings/components/settingsNavigationGroup';
 import SentryTypes from 'app/sentryTypes';
-import logExperiment from 'app/utils/logExperiment';
 
 class SettingsNavigation extends React.Component {
   static propTypes = {
     hooks: PropTypes.array,
     hookConfigs: PropTypes.array,
     navigationObjects: PropTypes.arrayOf(SentryTypes.NavigationObject).isRequired,
-    organization: SentryTypes.Organization,
   };
 
   static defaultProps = {
@@ -19,20 +17,6 @@ class SettingsNavigation extends React.Component {
     hookConfigs: [],
   };
 
-  componentDidMount() {
-    let {organization} = this.props;
-    if (!organization || !organization.experiments) return;
-
-    // Experiment exposure is already assigned - this logs the exposure i.e. when the user gets to the settings page
-    logExperiment(
-      organization.experiments,
-      'SSOPaywallExperiment',
-      'org_id',
-      organization.id,
-      'exposed'
-    );
-  }
-
   render() {
     let {navigationObjects, hooks, hookConfigs, ...otherProps} = this.props;
     let navWithHooks = navigationObjects.concat(hookConfigs);
diff --git a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
index 2a330ef4a6..700c7dc838 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
@@ -40,9 +40,7 @@ const organizationNavigation = [
         path: `${pathPrefix}/auth/`,
         title: t('Auth'),
         show: ({organization, access, features}) =>
-          (features.has('sso-basic') ||
-            (organization.experiments &&
-              organization.experiments.SSOPaywallExperiment === 1)) &&
+          features.has('sso-basic') &&
           access.has('org:admin'),
         description: t('Configure single sign-on'),
       },
diff --git a/tests/js/spec/utils/logExperiment.spec.jsx b/tests/js/spec/utils/logExperiment.spec.jsx
deleted file mode 100644
index 44703d8b37..0000000000
--- a/tests/js/spec/utils/logExperiment.spec.jsx
+++ /dev/null
@@ -1,35 +0,0 @@
-import HookStore from 'app/stores/hookStore';
-import logExperiment from 'app/utils/logExperiment';
-
-describe('utils/logExperiment', function() {
-  let sandbox;
-  let myMockFn;
-
-  beforeEach(function() {
-    myMockFn = jest.fn();
-    sandbox = sinon.sandbox.create();
-    sandbox.stub(HookStore, 'get').returns([myMockFn]);
-  });
-
-  afterEach(function() {
-    sandbox.restore();
-  });
-
-  it('logs experiment for those with assignment', function() {
-    let experiments = {testExperimentName: 0};
-    logExperiment(experiments, 'testExperimentName', 'org_id', 1, 'exposed');
-    expect(myMockFn).toHaveBeenCalledWith({
-      experiment_name: 'testExperimentName',
-      unit_name: 'org_id',
-      unit_id: 1,
-      params: {
-        exposed: 0,
-      },
-    });
-  });
-
-  it('does not log experiment without assignment', function() {
-    logExperiment({}, 'testExperimentName', 'org_id', 1, 'exposed');
-    expect(myMockFn).toHaveBeenCalledTimes(0);
-  });
-});
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationSettingsNavigation.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationSettingsNavigation.spec.jsx.snap
deleted file mode 100644
index 3e2e1600e5..0000000000
--- a/tests/js/spec/views/settings/__snapshots__/organizationSettingsNavigation.spec.jsx.snap
+++ /dev/null
@@ -1,117 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`OrganizationSettingsNavigation renders 1`] = `
-<SettingsNavigation
-  access={
-    Set {
-      "org:read",
-      "org:write",
-      "org:admin",
-      "project:read",
-      "project:write",
-      "project:admin",
-      "team:read",
-      "team:write",
-      "team:admin",
-    }
-  }
-  features={Set {}}
-  hookConfigs={Array []}
-  hooks={Array []}
-  navigationObjects={
-    Array [
-      Object {
-        "items": Array [
-          Object {
-            "description": "Configure general settings for an organization",
-            "index": true,
-            "path": "/settings/:orgId/",
-            "show": [Function],
-            "title": "General Settings",
-          },
-          Object {
-            "description": "View and manage an organization's projects",
-            "path": "/settings/:orgId/projects/",
-            "title": "Projects",
-          },
-          Object {
-            "description": "Manage an organization's teams",
-            "path": "/settings/:orgId/teams/",
-            "title": "Teams",
-          },
-          Object {
-            "badge": [Function],
-            "description": "Manage user membership for an organization",
-            "path": "/settings/:orgId/members/",
-            "show": [Function],
-            "title": "Members",
-          },
-          Object {
-            "description": "Configure single sign-on",
-            "path": "/settings/:orgId/auth/",
-            "show": [Function],
-            "title": "Auth",
-          },
-          Object {
-            "path": "/settings/:orgId/api-keys/",
-            "show": [Function],
-            "title": "API Keys",
-          },
-          Object {
-            "description": "View the audit log for an organization",
-            "path": "/settings/:orgId/audit-log/",
-            "show": [Function],
-            "title": "Audit Log",
-          },
-          Object {
-            "description": "Configure rate limits for all projects in the organization",
-            "path": "/settings/:orgId/rate-limits/",
-            "show": [Function],
-            "title": "Rate Limits",
-          },
-          Object {
-            "description": "Manage repositories connected to the organization",
-            "path": "/settings/:orgId/repos/",
-            "show": [Function],
-            "title": "Repositories",
-          },
-          Object {
-            "description": "Manage integrations for an organization",
-            "path": "/settings/:orgId/integrations/",
-            "show": [Function],
-            "title": "Integrations",
-          },
-        ],
-        "name": "Organization",
-      },
-    ]
-  }
-  organization={
-    Object {
-      "access": Array [
-        "org:read",
-        "org:write",
-        "org:admin",
-        "project:read",
-        "project:write",
-        "project:admin",
-        "team:read",
-        "team:write",
-        "team:admin",
-      ],
-      "features": Array [],
-      "id": "3",
-      "name": "Organization Name",
-      "onboardingTasks": Array [],
-      "projects": Array [],
-      "scrapeJavaScript": true,
-      "slug": "org-slug",
-      "status": Object {
-        "id": "active",
-        "name": "active",
-      },
-      "teams": Array [],
-    }
-  }
-/>
-`;
diff --git a/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx b/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx
deleted file mode 100644
index 4ac5b81c69..0000000000
--- a/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx
+++ /dev/null
@@ -1,69 +0,0 @@
-import {mount, shallow} from 'enzyme';
-import React from 'react';
-
-import OrganizationSettingsNavigation from 'app/views/settings/organization/organizationSettingsNavigation.jsx';
-
-describe('OrganizationSettingsNavigation', function() {
-  it('renders', function() {
-    let wrapper = shallow(<OrganizationSettingsNavigation />, TestStubs.routerContext());
-
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  //These next three are related to the SSOPaywallExperiment and should be taken down when that is phased out
-  it('renders without auth nav item for control', function() {
-    let wrapper = mount(
-      <OrganizationSettingsNavigation />,
-      TestStubs.routerContext([
-        {
-          organization: TestStubs.Organization({
-            access: ['org:admin'],
-            experiments: {SSOPaywallExperiment: 0},
-          }),
-        },
-      ])
-    );
-
-    expect(
-      wrapper.find('SettingsNavItem').findWhere(el => el.prop('label') === 'Auth')
-    ).toHaveLength(0);
-  });
-
-  it('renders with auth nav item for treatment', function() {
-    let wrapper = mount(
-      <OrganizationSettingsNavigation />,
-      TestStubs.routerContext([
-        {
-          organization: TestStubs.Organization({
-            // features: ['sso-basic'],
-            access: ['org:admin'],
-            experiments: {SSOPaywallExperiment: 1},
-          }),
-        },
-      ])
-    );
-
-    expect(
-      wrapper.find('SettingsNavItem').findWhere(el => el.prop('label') === 'Auth')
-    ).toHaveLength(1);
-  });
-
-  it('renders with auth nav item for those not in experiment', function() {
-    let wrapper = mount(
-      <OrganizationSettingsNavigation />,
-      TestStubs.routerContext([
-        {
-          organization: TestStubs.Organization({
-            features: ['sso-basic'],
-            access: ['org:admin'],
-            experiments: {SSOPaywallExperiment: null},
-          }),
-        },
-      ])
-    );
-
-    expect(
-      wrapper.find('SettingsNavItem').findWhere(el => el.prop('label') === 'Auth')
-    ).toHaveLength(1);
-  });
-});
