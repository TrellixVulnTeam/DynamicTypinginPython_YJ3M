commit 9bad0d50b828cae291e6fbfd1629d740644faab2
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Feb 5 16:55:12 2019 -0800

    fix(issues): Fix group activity item component (#11923)
    
    Fixes a bug where the organization prop was not forwarded to the
    GroupActivityItem component causing this component to crash.
    
    Fixes JAVASCRIPT-52A

diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx
index 7f40a3bd7e..bb8aa2c537 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx
@@ -213,7 +213,8 @@ const GroupActivity = createReactClass({
 
   // TODO(dcramer): only re-render on group/activity change
   propTypes: {
-    group: PropTypes.object,
+    organization: SentryTypes.Organization.isRequired,
+    group: SentryTypes.Group,
   },
 
   mixins: [ApiMixin],
@@ -244,7 +245,7 @@ const GroupActivity = createReactClass({
   },
 
   render() {
-    const group = this.props.group;
+    const {organization, group} = this.props;
     const me = ConfigStore.get('user');
     const memberList = MemberListStore.getAll();
 
@@ -287,6 +288,7 @@ const GroupActivity = createReactClass({
             <div className="activity-item-content">
               <ErrorBoundary mini>
                 <GroupActivityItem
+                  organization={organization}
                   author={
                     <span key="author">
                       {avatar}
diff --git a/tests/js/spec/views/groupActivity/index.spec.jsx b/tests/js/spec/views/groupActivity/index.spec.jsx
index e61fb13779..6d15b503d0 100644
--- a/tests/js/spec/views/groupActivity/index.spec.jsx
+++ b/tests/js/spec/views/groupActivity/index.spec.jsx
@@ -23,14 +23,20 @@ describe('GroupActivity', function() {
   });
 
   it('renders a NoteInput', function() {
-    const wrapper = shallow(<GroupActivity group={{id: '1337', activity: []}} />, {
-      context: {
-        group: {id: '1337'},
-        project: TestStubs.Project(),
-        team: {id: '1'},
-        organization: {id: 'bar'},
-      },
-    });
+    const wrapper = shallow(
+      <GroupActivity
+        group={{id: '1337', activity: []}}
+        organization={TestStubs.Organization()}
+      />,
+      {
+        context: {
+          group: {id: '1337'},
+          project: TestStubs.Project(),
+          team: {id: '1'},
+          organization: {id: 'bar'},
+        },
+      }
+    );
     expect(wrapper.find(NoteInput)).toHaveLength(1);
   });
 
@@ -38,14 +44,20 @@ describe('GroupActivity', function() {
     let instance;
 
     beforeEach(function() {
-      instance = shallow(<GroupActivity group={{id: '1337', activity: []}} />, {
-        context: {
-          group: {id: '1337'},
-          project: TestStubs.Project(),
-          team: {id: '1'},
-          organization: {id: 'bar'},
-        },
-      }).instance();
+      instance = shallow(
+        <GroupActivity
+          group={{id: '1337', activity: []}}
+          organization={TestStubs.Organization()}
+        />,
+        {
+          context: {
+            group: {id: '1337'},
+            project: TestStubs.Project(),
+            team: {id: '1'},
+            organization: {id: 'bar'},
+          },
+        }
+      ).instance();
     });
 
     it('should do nothing if not present in GroupStore', function() {
