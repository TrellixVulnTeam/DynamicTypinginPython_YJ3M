commit 00e52e816dda0d0fc3b4dc46f72e1c2f13121b98
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Jun 7 23:49:07 2017 +0200

    rename create_files_from_macho_zip to create_files_from_dsym_zip

diff --git a/src/sentry/api/endpoints/dsym_files.py b/src/sentry/api/endpoints/dsym_files.py
index be3b14371d..fbdb12795e 100644
--- a/src/sentry/api/endpoints/dsym_files.py
+++ b/src/sentry/api/endpoints/dsym_files.py
@@ -8,7 +8,7 @@ from sentry.api.bases.project import ProjectEndpoint, ProjectReleasePermission
 from sentry.api.content_negotiation import ConditionalContentNegotiation
 from sentry.api.serializers import serialize
 from sentry.api.serializers.rest_framework import ListField
-from sentry.models import ProjectDSymFile, create_files_from_macho_zip, \
+from sentry.models import ProjectDSymFile, create_files_from_dsym_zip, \
     VersionDSymFile, DSymApp, DSYM_PLATFORMS
 
 ERR_FILE_EXISTS = 'A file matching this uuid already exists'
@@ -29,7 +29,7 @@ def upload_from_request(request, project=None):
     if 'file' not in request.FILES:
         return Response({'detail': 'Missing uploaded file'}, status=400)
     fileobj = request.FILES['file']
-    files = create_files_from_macho_zip(fileobj, project=project)
+    files = create_files_from_dsym_zip(fileobj, project=project)
     return Response(serialize(files, request.user), status=201)
 
 
diff --git a/src/sentry/models/dsymfile.py b/src/sentry/models/dsymfile.py
index 1527ade49d..db3971f19b 100644
--- a/src/sentry/models/dsymfile.py
+++ b/src/sentry/models/dsymfile.py
@@ -181,7 +181,7 @@ def _create_macho_dsym_from_uuid(project, cpu_name, uuid, fileobj,
                                  object_name):
     """This creates a mach dsym file from the given uuid and open file
     object to a dsym file.  This will not verify the uuid.  Use
-    `create_files_from_macho_zip` for doing everything.
+    `create_files_from_dsym_zip` for doing everything.
     """
     extra = {}
     extra['project'] = project
@@ -237,7 +237,7 @@ def _create_macho_dsym_from_uuid(project, cpu_name, uuid, fileobj,
     return rv
 
 
-def create_files_from_macho_zip(fileobj, project=None):
+def create_files_from_dsym_zip(fileobj, project=None):
     """Creates all missing dsym files from the given zip file.  This
     returns a list of all files created.
     """
