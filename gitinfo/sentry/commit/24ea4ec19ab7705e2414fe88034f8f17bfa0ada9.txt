commit 24ea4ec19ab7705e2414fe88034f8f17bfa0ada9
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 3 18:06:51 2015 -0800

    Add X-Hits header to project group list endpoint

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 2ff579c976..433d90c483 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -243,6 +243,7 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
             ]
 
         response = Response(context)
+        response['X-Hits'] = cursor_result.hits
         response['Link'] = ', '.join([
             self.build_cursor_link(request, 'previous', cursor_result.prev),
             self.build_cursor_link(request, 'next', cursor_result.next),
diff --git a/src/sentry/api/paginator.py b/src/sentry/api/paginator.py
index 524fb9d273..d0ed300253 100644
--- a/src/sentry/api/paginator.py
+++ b/src/sentry/api/paginator.py
@@ -81,7 +81,7 @@ class BasePaginator(object):
     def value_from_cursor(self, cursor):
         raise NotImplementedError
 
-    def get_result(self, limit=100, cursor=None):
+    def get_result(self, limit=100, cursor=None, count_hits=False):
         # cursors are:
         #   (identifier(integer), row offset, is_prev)
         if cursor is None:
@@ -94,6 +94,13 @@ class BasePaginator(object):
 
         queryset = self._get_results_from_qs(cursor_value, cursor.is_prev)
 
+        if count_hits:
+            hits = queryset.model.objects.filter(
+                id__in=self.queryset[:1000],
+            ).count()
+        else:
+            hits = None
+
         # this effectively gets us the before post, and the current (after) post
         # every time
         if cursor.is_prev:
@@ -109,6 +116,7 @@ class BasePaginator(object):
         return build_cursor(
             results=results,
             limit=limit,
+            hits=hits,
             cursor=cursor,
             key=self.get_item_key,
         )
diff --git a/src/sentry/search/django/backend.py b/src/sentry/search/django/backend.py
index ad53264e9c..920cbaba1c 100644
--- a/src/sentry/search/django/backend.py
+++ b/src/sentry/search/django/backend.py
@@ -136,6 +136,5 @@ class DjangoSearchBackend(SearchBackend):
             sort_clause = '-sort_value'
 
         queryset = queryset.order_by(sort_clause)
-
         paginator = paginator_cls(queryset, sort_clause)
-        return paginator.get_result(limit, cursor)
+        return paginator.get_result(limit, cursor, count_hits=True)
diff --git a/src/sentry/utils/cursors.py b/src/sentry/utils/cursors.py
index 6d996ed43e..e256715393 100644
--- a/src/sentry/utils/cursors.py
+++ b/src/sentry/utils/cursors.py
@@ -42,10 +42,11 @@ class Cursor(object):
 
 
 class CursorResult(Sequence):
-    def __init__(self, results, next, prev):
+    def __init__(self, results, next, prev, hits=None):
         self.results = results
         self.next = next
         self.prev = prev
+        self.hits = hits
 
     def __len__(self):
         return len(self.results)
@@ -80,7 +81,7 @@ class CursorResult(Sequence):
         )
 
 
-def build_cursor(results, key, limit=100, cursor=None):
+def build_cursor(results, key, limit=100, cursor=None, hits=None):
     if cursor is None:
         cursor = Cursor(0, 0, 0)
 
@@ -162,6 +163,7 @@ def build_cursor(results, key, limit=100, cursor=None):
     prev_cursor = Cursor(prev_value or 0, prev_offset, True, has_prev)
 
     return CursorResult(
+        hits=hits,
         results=results,
         next=next_cursor,
         prev=prev_cursor,
