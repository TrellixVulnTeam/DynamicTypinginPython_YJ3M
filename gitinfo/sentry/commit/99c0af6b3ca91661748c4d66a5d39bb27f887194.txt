commit 99c0af6b3ca91661748c4d66a5d39bb27f887194
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 11 19:20:15 2014 -0700

    Add slug validation to team details

diff --git a/src/sentry/api/endpoints/team_details.py b/src/sentry/api/endpoints/team_details.py
index 04aadd9119..d9d9f4df21 100644
--- a/src/sentry/api/endpoints/team_details.py
+++ b/src/sentry/api/endpoints/team_details.py
@@ -6,18 +6,24 @@ from sentry.api.base import Endpoint
 from sentry.api.decorators import sudo_required
 from sentry.api.permissions import assert_perm
 from sentry.api.serializers import serialize
-from sentry.constants import MEMBER_ADMIN
+from sentry.constants import MEMBER_ADMIN, RESERVED_TEAM_SLUGS
 from sentry.models import Team, TeamMember, TeamStatus
 from sentry.tasks.deletion import delete_team
 
 
 class TeamSerializer(serializers.ModelSerializer):
-    owner = serializers.Field(source='owner.username')
-
     class Meta:
         model = Team
         fields = ('name', 'slug')
 
+    def validate_slug(self, attrs, source):
+        value = attrs[source]
+        if value in RESERVED_TEAM_SLUGS:
+            raise serializers.ValidationError('You may not use "%s" as a slug.' % (value,))
+        elif Team.objects.filter(slug=value).exclude(id=self.object.id):
+            raise serializers.ValidationError('The slug "%s" is already in use.' % (value,))
+        return attrs
+
 
 class TeamAdminSerializer(TeamSerializer):
     owner = serializers.SlugRelatedField(slug_field='username', required=False)
diff --git a/tests/sentry/api/endpoints/test_team_details.py b/tests/sentry/api/endpoints/test_team_details.py
index 1eb0f35852..5f84caf5be 100644
--- a/tests/sentry/api/endpoints/test_team_details.py
+++ b/tests/sentry/api/endpoints/test_team_details.py
@@ -30,6 +30,16 @@ class TeamUpdateTest(APITestCase):
         assert team.name == 'hello world'
         assert team.slug == 'foobar'
 
+    def test_invalid_slug(self):
+        team = self.team  # force creation
+        self.login_as(user=self.user)
+        url = reverse('sentry-api-0-team-details', kwargs={'team_id': team.id})
+        resp = self.client.put(url, data={
+            'name': 'hello world',
+            'slug': 'admin',
+        })
+        assert resp.status_code == 400, resp.content
+
     def test_owner_can_change_owner(self):
         user = self.create_user('owner@example.com', is_superuser=False)
         new_user = self.create_user('new-owner@example.com')
