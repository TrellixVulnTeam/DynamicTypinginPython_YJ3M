commit 3858303f245c20ba6d7b307e331248fb99502185
Author: josh <josh@jrl.ninja>
Date:   Thu Jan 23 19:23:19 2020 +0000

    chore: remove unused social auth exception middleware (#16600)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index a744c462a3..f941b30e51 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -273,8 +273,6 @@ MIDDLEWARE_CLASSES = (
     "sentry.middleware.sudo.SudoMiddleware",
     "sentry.middleware.superuser.SuperuserMiddleware",
     "sentry.middleware.locale.SentryLocaleMiddleware",
-    # TODO(dcramer): kill this once we verify its safe
-    # 'sentry.middleware.social_auth.SentrySocialAuthExceptionMiddleware',
     "django.contrib.messages.middleware.MessageMiddleware",
 )
 
diff --git a/src/sentry/middleware/social_auth.py b/src/sentry/middleware/social_auth.py
deleted file mode 100644
index 74123240b1..0000000000
--- a/src/sentry/middleware/social_auth.py
+++ /dev/null
@@ -1,11 +0,0 @@
-from __future__ import absolute_import
-
-from social_auth.middleware import SocialAuthExceptionMiddleware
-
-from sentry.utils import auth
-from sentry.utils.http import absolute_uri
-
-
-class SentrySocialAuthExceptionMiddleware(SocialAuthExceptionMiddleware):
-    def get_redirect_uri(self, request, exception):
-        return absolute_uri(auth.get_login_url())
diff --git a/src/social_auth/middleware.py b/src/social_auth/middleware.py
deleted file mode 100644
index f81da9c40f..0000000000
--- a/src/social_auth/middleware.py
+++ /dev/null
@@ -1,59 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import absolute_import
-
-import six
-
-from django.conf import settings
-from django.contrib import messages
-from django.shortcuts import redirect
-
-from social_auth.exceptions import SocialAuthBaseException
-from social_auth.utils import backend_setting, get_backend_name
-
-
-class SocialAuthExceptionMiddleware(object):
-    """Middleware that handles Social Auth AuthExceptions by providing the user
-    with a message, logging an error, and redirecting to some next location.
-
-    By default, the exception message itself is sent to the user and they are
-    redirected to the location specified in the LOGIN_ERROR_URL setting.
-
-    This middleware can be extended by overriding the get_message or
-    get_redirect_uri methods, which each accept request and exception.
-    """
-
-    def process_exception(self, request, exception):
-        self.backend = self.get_backend(request, exception)
-        if self.raise_exception(request, exception):
-            return
-
-        if isinstance(exception, SocialAuthBaseException):
-            backend_name = get_backend_name(self.backend)
-            message = self.get_message(request, exception)
-            url = self.get_redirect_uri(request, exception)
-            tags = ["social-auth"]
-            if backend_name:
-                tags.append(backend_name)
-
-            messages.error(request, message, extra_tags=" ".join(tags))
-            return redirect(url)
-
-    def get_backend(self, request, exception):
-        if not hasattr(self, "backend"):
-            self.backend = getattr(request, "backend", None) or getattr(exception, "backend", None)
-        return self.backend
-
-    def raise_exception(self, request, exception):
-        backend = self.backend
-        return backend and backend_setting(backend, "SOCIAL_AUTH_RAISE_EXCEPTIONS")
-
-    def get_message(self, request, exception):
-        return six.text_type(exception)
-
-    def get_redirect_uri(self, request, exception):
-        if self.backend is not None:
-            return (
-                backend_setting(self.backend, "SOCIAL_AUTH_BACKEND_ERROR_URL")
-                or settings.LOGIN_ERROR_URL
-            )
-        return settings.LOGIN_ERROR_URL
