commit d5833c2f61706c10ac70028d3cea866c357445df
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Mon Dec 2 14:57:45 2019 -0500

    fix(discover2): Fix malformed query strings for linked trace events (#15889)

diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index bb4967c929..979a809d9f 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -144,6 +144,7 @@ class EventDetailsContent extends AsyncComponent<Props, State & AsyncComponent['
               organization={organization}
               event={event}
               projectId={this.projectId}
+              eventView={eventView}
             />
           </Main>
           <Side>
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
index 3d45588a2c..fafcbf203b 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
@@ -16,6 +16,7 @@ import {objectIsEmpty, toTitleCase} from 'app/utils';
 import {Event, Organization} from 'app/types';
 
 import LinkedEvents from './linkedEvents';
+import EventView from '../eventView';
 
 const OTHER_SECTIONS = {
   contexts: EventContexts,
@@ -37,6 +38,7 @@ type ActiveTabProps = {
   projectId: string;
   event: Event;
   activeTab: string;
+  eventView: EventView;
 };
 
 /**
@@ -44,7 +46,7 @@ type ActiveTabProps = {
  * Some but not all interface elements require a projectId.
  */
 const ActiveTab = (props: ActiveTabProps) => {
-  const {organization, projectId, event, activeTab} = props;
+  const {organization, projectId, event, activeTab, eventView} = props;
   if (!activeTab) {
     return null;
   }
@@ -67,7 +69,12 @@ const ActiveTab = (props: ActiveTabProps) => {
     return <Component event={event} isShare={false} hideGuide />;
   } else if (activeTab === 'linked') {
     return (
-      <LinkedEvents event={event} projectId={projectId} organization={organization} />
+      <LinkedEvents
+        event={event}
+        projectId={projectId}
+        organization={organization}
+        eventView={eventView}
+      />
     );
   } else {
     /*eslint no-console:0*/
@@ -95,6 +102,7 @@ type EventInterfacesProps = {
   event: Event;
   projectId: string;
   organization: Organization;
+  eventView: EventView;
 };
 type EventInterfacesState = {
   activeTab: string;
@@ -114,7 +122,7 @@ class EventInterfaces extends React.Component<
   handleTabChange = tab => this.setState({activeTab: tab});
 
   render() {
-    const {event, projectId, organization} = this.props;
+    const {event, projectId, organization, eventView} = this.props;
     const {activeTab} = this.state;
 
     return (
@@ -181,6 +189,7 @@ class EventInterfaces extends React.Component<
             activeTab={activeTab}
             projectId={projectId}
             organization={organization}
+            eventView={eventView}
           />
         </ErrorBoundary>
       </React.Fragment>
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx
index 0b234b89fa..4a6259ecec 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx
@@ -13,6 +13,7 @@ import withProjects from 'app/utils/withProjects';
 
 import {generateEventDetailsRoute, generateEventSlug} from './utils';
 import {SectionHeading} from '../styles';
+import EventView from '../eventView';
 
 type DiscoverResult = {
   id: string;
@@ -28,6 +29,7 @@ type Props = {
   projectId: string;
   projects: Project[];
   event: Event;
+  eventView: EventView;
 } & AsyncComponent['props'];
 
 type State = {
@@ -64,7 +66,7 @@ class LinkedEvents extends AsyncComponent<Props, State> {
   }
 
   renderBody() {
-    const {event, organization, projects} = this.props;
+    const {event, organization, projects, eventView} = this.props;
     const {linkedEvents} = this.state;
 
     const hasLinkedEvents =
@@ -80,7 +82,7 @@ class LinkedEvents extends AsyncComponent<Props, State> {
             const eventSlug = generateEventSlug(item);
             const eventUrl = {
               pathname: generateEventDetailsRoute({eventSlug, organization}),
-              query: location.search,
+              query: eventView.generateQueryStringObject(),
             };
             const project = projects.find(p => p.slug === item['project.name']);
 
