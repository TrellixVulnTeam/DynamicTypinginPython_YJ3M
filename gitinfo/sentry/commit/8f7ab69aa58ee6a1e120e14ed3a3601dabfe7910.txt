commit 8f7ab69aa58ee6a1e120e14ed3a3601dabfe7910
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Wed Aug 21 18:27:57 2019 -0400

    feat(ts): Add Client type to withAPI (#14475)

diff --git a/src/sentry/static/sentry/app/utils/withApi.tsx b/src/sentry/static/sentry/app/utils/withApi.tsx
index 660f973efd..4a38fa0c66 100644
--- a/src/sentry/static/sentry/app/utils/withApi.tsx
+++ b/src/sentry/static/sentry/app/utils/withApi.tsx
@@ -18,11 +18,10 @@ const withApi = <P extends object>(WrappedComponent: React.ComponentType<P>) =>
       this.api.clear();
     }
 
-    // TODO(ts): Update this when API client is typed
-    private api: any;
+    private api: Client;
 
     render() {
-      return <WrappedComponent api={this.api as any} {...this.props as P} />;
+      return <WrappedComponent api={this.api} {...this.props as P} />;
     }
   };
 };
diff --git a/src/sentry/static/sentry/app/views/settings/projectIncidentRules/ruleForm.tsx b/src/sentry/static/sentry/app/views/settings/projectIncidentRules/ruleForm.tsx
index 60522be919..4bc927e771 100644
--- a/src/sentry/static/sentry/app/views/settings/projectIncidentRules/ruleForm.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectIncidentRules/ruleForm.tsx
@@ -3,6 +3,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
+import {Client} from 'app/api';
 import {Config, EventsStatsData, Organization, Project} from 'app/types';
 import {PanelAlert} from 'app/components/panels';
 import {addErrorMessage} from 'app/actionCreators/indicator';
@@ -27,7 +28,7 @@ import {IncidentRule} from './types';
 import IncidentRulesChart from './chart';
 
 type Props = {
-  api: any;
+  api: Client;
   config: Config;
   data: EventsStatsData;
   organization: Organization;
@@ -404,7 +405,7 @@ class RuleForm extends React.Component<Props, State> {
 }
 
 type RuleFormContainerProps = {
-  api: any;
+  api: Client;
   config: Config;
   organization: Organization;
   project: Project;
