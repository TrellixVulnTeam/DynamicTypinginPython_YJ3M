commit 5fc536c780cd753fb77a994f052e0a8c1e5432d0
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed May 13 14:58:47 2020 -0700

    ref(ts): Remove use of `lodash.pick` in Global Selection Header (#18804)
    
    Removes use of lodash.pick as it causes isssues only in getsentry.

diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/initializeGlobalSelectionHeader.tsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/initializeGlobalSelectionHeader.tsx
index 570879e0ff..d7e99b2d0d 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/initializeGlobalSelectionHeader.tsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/initializeGlobalSelectionHeader.tsx
@@ -1,7 +1,6 @@
 import React from 'react';
 import * as ReactRouter from 'react-router';
 import isEqual from 'lodash/isEqual';
-import pick from 'lodash/pick';
 
 import {DATE_TIME_KEYS} from 'app/constants/globalSelectionHeader';
 import {
@@ -14,6 +13,11 @@ import {
 import {getStateFromQuery} from './utils';
 import GlobalSelectionHeader from './globalSelectionHeader';
 
+const getDateObjectFromQuery = query =>
+  Object.fromEntries(
+    Object.entries(query).filter(([key]) => DATE_TIME_KEYS.includes(key))
+  );
+
 type Props = {
   isDisabled: boolean;
   shouldEnforceSingleProject: boolean;
@@ -87,7 +91,8 @@ class InitializeGlobalSelectionHeader extends React.Component<Props> {
       });
 
       const newEnvironments = newQuery.environment || [];
-      const newDateObject = pick(newQuery, DATE_TIME_KEYS);
+      const newDateObject = getDateObjectFromQuery(newQuery);
+      const oldDateObject = getDateObjectFromQuery(oldQuery);
 
       /**
        * Do not pass router to these actionCreators, as we do not want to update
@@ -102,7 +107,7 @@ class InitializeGlobalSelectionHeader extends React.Component<Props> {
         updateEnvironments(newEnvironments);
       }
 
-      if (!isEqual(pick(oldQuery, DATE_TIME_KEYS), newDateObject)) {
+      if (!isEqual(oldDateObject, newDateObject)) {
         updateDateTime(newDateObject);
       }
     }
