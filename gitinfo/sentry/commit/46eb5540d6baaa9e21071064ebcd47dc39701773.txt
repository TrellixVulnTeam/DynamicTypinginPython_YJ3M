commit 46eb5540d6baaa9e21071064ebcd47dc39701773
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jan 8 14:08:58 2019 -0800

    feat(sidebar): Sidebar link preserves global selections in querystring (#11142)
    
    Sidebar links can preserve global selection values in the querystring
    when navigating from one section to another, preventing an additional
    redirect after navigating between pages with global selections.

diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 528ac6e12d..96712b9187 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -1,7 +1,6 @@
-import {isEqual} from 'lodash';
-import {withRouter} from 'react-router';
+import {isEqual, pick} from 'lodash';
+import {withRouter, browserHistory} from 'react-router';
 import {ThemeProvider} from 'emotion-theming';
-import $ from 'jquery';
 import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
@@ -19,6 +18,7 @@ import PreferencesStore from 'app/stores/preferencesStore';
 import theme from 'app/utils/theme';
 import space from 'app/styles/space';
 import withLatestContext from 'app/utils/withLatestContext';
+import {URL_PARAM} from 'app/components/organizations/globalSelectionHeader/constants';
 
 import Broadcasts from './broadcasts';
 import Incidents from './incidents';
@@ -153,6 +153,14 @@ class Sidebar extends React.Component {
     });
   };
 
+  // Keep the global selection querystring values in the path
+  navigateWithGlobalSelection = (pathname, evt) => {
+    evt.preventDefault();
+    const query = pick(this.props.location.query, Object.values(URL_PARAM));
+    browserHistory.push({pathname, query});
+    this.hidePanel();
+  };
+
   // Show slideout panel
   showPanel = panel => {
     this.setState({
@@ -226,14 +234,22 @@ class Sidebar extends React.Component {
                 <Feature features={['sentry10']}>
                   <SidebarItem
                     {...sidebarItemProps}
-                    onClick={this.hidePanel}
+                    onClick={(_id, evt) =>
+                      this.navigateWithGlobalSelection(
+                        `/organizations/${organization.slug}/releases/`,
+                        evt
+                      )}
                     icon={<InlineSvg src="icon-releases" />}
                     label={t('Releases')}
                     to={`/organizations/${organization.slug}/releases/`}
                   />
                   <SidebarItem
                     {...sidebarItemProps}
-                    onClick={this.hidePanel}
+                    onClick={(_id, evt) =>
+                      this.navigateWithGlobalSelection(
+                        `/organizations/${organization.slug}/user-feedback/`,
+                        evt
+                      )}
                     icon={<InlineSvg src="icon-support" />}
                     label={t('User Feedback')}
                     to={`/organizations/${organization.slug}/user-feedback/`}
@@ -242,7 +258,11 @@ class Sidebar extends React.Component {
                 <Feature features={['global-views']}>
                   <SidebarItem
                     {...sidebarItemProps}
-                    onClick={this.hidePanel}
+                    onClick={(_id, evt) =>
+                      this.navigateWithGlobalSelection(
+                        `/organizations/${organization.slug}/events/`,
+                        evt
+                      )}
                     icon={<InlineSvg src="icon-stack" />}
                     label={t('Events')}
                     to={`/organizations/${organization.slug}/events/`}
