commit b7728848a2f6709b6486f906c496b030f36e7a74
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Mon Jul 13 11:09:26 2020 +0200

    fix(ownership): Guard against null values (#19827)
    
    Fix SENTRY-H2K

diff --git a/src/sentry/ownership/grammar.py b/src/sentry/ownership/grammar.py
index 7d9ee386d3..373261998b 100644
--- a/src/sentry/ownership/grammar.py
+++ b/src/sentry/ownership/grammar.py
@@ -116,7 +116,7 @@ class Matcher(namedtuple("Matcher", "type pattern")):
 
     def test_tag(self, data):
         tag = self.type[5:]
-        for k, v in data.get("tags"):
+        for k, v in get_path(data, "tags", filter=True) or ():
             if k == tag and glob_match(v, self.pattern):
                 return True
         return False
diff --git a/tests/sentry/ownership/test_grammar.py b/tests/sentry/ownership/test_grammar.py
index 77be08914b..4d1467483d 100644
--- a/tests/sentry/ownership/test_grammar.py
+++ b/tests/sentry/ownership/test_grammar.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+import pytest
+
 from sentry.ownership.grammar import Rule, Matcher, Owner, parse_rules, dump_schema, load_schema
 
 fixture_data = """
@@ -117,3 +119,9 @@ def test_matcher_test_tags():
     assert Matcher("tags.foo", "foo_value").test(data)
     assert Matcher("tags.bar", "barval").test(data)
     assert not Matcher("tags.barz", "barval").test(data)
+
+
+@pytest.mark.parametrize("data", [{}, {"tags": None}, {"tags": [None]}])
+def test_matcher_test_tags_without_tag_data(data):
+    assert not Matcher("tags.foo", "foo_value").test(data)
+    assert not Matcher("tags.bar", "barval").test(data)
