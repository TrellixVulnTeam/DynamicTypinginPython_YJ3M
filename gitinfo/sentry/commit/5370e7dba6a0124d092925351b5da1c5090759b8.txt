commit 5370e7dba6a0124d092925351b5da1c5090759b8
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Wed Feb 26 21:37:12 2020 +0100

    fix(ui): fixed thread content panel info - mobile (#16745)

diff --git a/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx b/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx
index b218541046..3f17364b5e 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user/user.tsx
@@ -33,7 +33,7 @@ const User = ({data}: Props) => {
   }
 
   const getKeyValueData = (val: object) => {
-    Object.keys(val).map(key => [key, val[key]]);
+    return Object.keys(val).map(key => [key, val[key]]);
   };
 
   return (
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index 87b4f4f6dd..e56917c898 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -28,6 +28,7 @@ import InlineSvg from 'app/components/inlineSvg';
 import {combineStatus} from 'app/components/events/interfaces/debugmeta';
 import {Assembly} from 'app/components/events/interfaces/assembly';
 import {parseAssembly} from 'app/components/events/interfaces/utils';
+import {IconRefresh} from 'app/icons/iconRefresh';
 
 export function trimPackage(pkg) {
   const pieces = pkg.split(/^([a-z]:\\|\\\\)/i.test(pkg) ? '\\' : '/');
@@ -498,7 +499,7 @@ export class Frame extends React.Component {
           title={`Frame repeated ${timesRepeated} time${timesRepeated === 1 ? '' : 's'}`}
         >
           <RepeatedContent>
-            <span className="icon-refresh" />
+            <StyledIconRefresh />
             <span>{timesRepeated}</span>
           </RepeatedContent>
         </RepeatedFrames>
@@ -558,7 +559,7 @@ export class Frame extends React.Component {
               onToggle={onAddressToggle}
               maxLengthOfRelativeAddress={maxLengthOfRelativeAddress}
             />
-            <span className="symbol">
+            <Symbol className="symbol">
               <FunctionName frame={data} />{' '}
               {hint !== null ? (
                 <Tooltip title={hint}>
@@ -577,7 +578,7 @@ export class Frame extends React.Component {
                   </span>
                 </Tooltip>
               )}
-            </span>
+            </Symbol>
           </NativeLineContent>
           {this.renderExpander()}
         </DefaultLine>
@@ -645,14 +646,20 @@ const RepeatedContent = styled(VertCenterWrapper)`
   justify-content: center;
 `;
 
-const NativeLineContent = styled(RepeatedContent)`
+const NativeLineContent = styled(VertCenterWrapper)`
   flex: 1;
   overflow: hidden;
+  justify-content: center;
 
   & > span {
     display: block;
     padding: 0 5px;
   }
+
+  flex-direction: column;
+  @media (min-width: ${props => props.theme.breakpoints[2]}) {
+    flex-direction: row;
+  }
 `;
 
 const DefaultLine = styled(VertCenterWrapper)`
@@ -665,4 +672,15 @@ const HintStatus = styled(InlineSvg)`
   transform: translateY(-1px);
 `;
 
+const Symbol = styled('span')`
+  text-align: center;
+  @media (min-width: ${props => props.theme.breakpoints[2]}) {
+    text-align: left;
+  }
+`;
+
+const StyledIconRefresh = styled(IconRefresh)`
+  margin-right: ${space(0.25)};
+`;
+
 export default withSentryAppComponents(Frame, {componentType: 'stacktrace-link'});
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/packageLink.tsx b/src/sentry/static/sentry/app/components/events/interfaces/packageLink.tsx
index b67d2f7034..879bd447d2 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/packageLink.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/packageLink.tsx
@@ -54,25 +54,25 @@ const Package = styled('a')<Partial<Props>>`
   max-width: 100%;
   display: flex;
   align-items: center;
-  flex-basis: 137px;
   flex-grow: 0;
   flex-shrink: 0;
   padding: 0 0 0 ${space(0.5)};
   color: ${p => p.theme.foreground};
   cursor: ${p => (p.isClickable ? 'pointer' : 'default')};
-
   &:hover {
     color: ${p => p.theme.foreground};
-
     ${LinkChevron} {
       opacity: 1;
       transform: translateX(${space(0.5)});
     }
-
     &:hover ${PackageStatusIcon} {
       opacity: 1;
     }
   }
+  flex-basis: auto;
+  @media (min-width: ${props => props.theme.breakpoints[2]}) {
+    flex-basis: 137px;
+  }
 `;
 
 const PackageName = styled('span')`
