commit 1c48c2fa64a6a549a7c02d36df51ee425b09311d
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Nov 23 14:24:45 2016 -0800

    buffer: correct buffer.pending-size metric
    
    Instead of looking at a stat per-host, which is effectively useless,
    count the keys for the entire process_pending job, which is much more
    useful.

diff --git a/src/sentry/buffer/redis.py b/src/sentry/buffer/redis.py
index f4ae75c9df..ce1433280d 100644
--- a/src/sentry/buffer/redis.py
+++ b/src/sentry/buffer/redis.py
@@ -95,12 +95,12 @@ class RedisBuffer(Buffer):
             return
 
         try:
+            keycount = 0
             for host_id in six.iterkeys(self.cluster.hosts):
                 conn = self.cluster.get_local_client(host_id)
                 keys = conn.zrange(self.pending_key, 0, -1)
                 if not keys:
                     continue
-                keycount = 0
                 for key in keys:
                     keycount += 1
                     process_incr.apply_async(kwargs={
@@ -109,7 +109,7 @@ class RedisBuffer(Buffer):
                 pipe = conn.pipeline()
                 pipe.zrem(self.pending_key, *keys)
                 pipe.execute()
-                metrics.timing('buffer.pending-size', keycount)
+            metrics.timing('buffer.pending-size', keycount)
         finally:
             client.delete(lock_key)
 
