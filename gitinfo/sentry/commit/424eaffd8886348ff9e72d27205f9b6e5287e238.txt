commit 424eaffd8886348ff9e72d27205f9b6e5287e238
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 29 14:19:02 2015 -0700

    Add rule list endpoint
    
    Refs GH-1631

diff --git a/src/sentry/api/endpoints/project_rules.py b/src/sentry/api/endpoints/project_rules.py
new file mode 100644
index 0000000000..5ed035921d
--- /dev/null
+++ b/src/sentry/api/endpoints/project_rules.py
@@ -0,0 +1,27 @@
+from __future__ import absolute_import
+
+from sentry.api.bases.project import ProjectEndpoint
+from sentry.api.serializers import serialize
+from sentry.models import Rule
+
+
+class ProjectRulesEndpoint(ProjectEndpoint):
+    def get(self, request, project):
+        """
+        List a project's rules
+
+        Retrieve a list of rules for a given project.
+
+            {method} {path}
+
+        """
+        queryset = Rule.objects.filter(
+            project=project,
+        )
+
+        return self.paginate(
+            request=request,
+            queryset=queryset,
+            order_by='-id',
+            on_results=lambda x: serialize(x, request.user),
+        )
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 1ffd1aa8e3..2c0e68bc85 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -34,6 +34,7 @@ from .endpoints.project_keys import ProjectKeysEndpoint
 from .endpoints.project_key_details import ProjectKeyDetailsEndpoint
 from .endpoints.project_member_index import ProjectMemberIndexEndpoint
 from .endpoints.project_releases import ProjectReleasesEndpoint
+from .endpoints.project_rules import ProjectRulesEndpoint
 from .endpoints.project_searches import ProjectSearchesEndpoint
 from .endpoints.project_search_details import ProjectSearchDetailsEndpoint
 from .endpoints.project_stats import ProjectStatsEndpoint
@@ -147,6 +148,9 @@ urlpatterns = patterns(
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/releases/(?P<version>[^/]+)/files/(?P<file_id>\d+)/$',
         ReleaseFileDetailsEndpoint.as_view(),
         name='sentry-api-0-release-file-details'),
+    url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/rules/$',
+        ProjectRulesEndpoint.as_view(),
+        name='sentry-api-0-project-rules'),
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/searches/$',
         ProjectSearchesEndpoint.as_view(),
         name='sentry-api-0-project-searches'),
diff --git a/tests/sentry/api/endpoints/test_project_rules.py b/tests/sentry/api/endpoints/test_project_rules.py
new file mode 100644
index 0000000000..c20ec64447
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_project_rules.py
@@ -0,0 +1,26 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import Rule
+from sentry.testutils import APITestCase
+
+
+class ProjectRuleListTest(APITestCase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        team = self.create_team()
+        project1 = self.create_project(team=team, name='foo')
+        project2 = self.create_project(team=team, name='bar')
+
+        url = reverse('sentry-api-0-project-rules', kwargs={
+            'organization_slug': project1.organization.slug,
+            'project_slug': project1.slug,
+        })
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+
+        rule_count = Rule.objects.filter(project=project1).count()
+        assert len(response.data) == rule_count
