commit dd6547d85b4f3bcd3233e6fabac2e643456f49bf
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Feb 14 11:06:13 2015 -0800

    Kill livereload

diff --git a/src/sentry/management/commands/runserver.py b/src/sentry/management/commands/runserver.py
index fa91fe4238..a25d1aeb32 100644
--- a/src/sentry/management/commands/runserver.py
+++ b/src/sentry/management/commands/runserver.py
@@ -9,25 +9,16 @@ from django.core.management.color import color_style
 from django.core.management.commands.runserver import Command as RunserverCommand
 from optparse import make_option
 from subprocess import Popen
-from urllib2 import urlopen
 
 
 class Command(RunserverCommand):
     """
     A version of Django's runserver which bundles Sentry's development
-    tooling (such as static assets and live reload).
-
-    Live reload inspired by django-livereload.
+    tooling (such as static assets).
     """
     help = "Starts a lightweight Web server for development"
 
     option_list = RunserverCommand.option_list + (
-        make_option(
-            '--nolivereload', action='store_false', dest='use_livereload',
-            default=settings.DEBUG, help='Tells Sentry to NOT use LiveReload.'),
-        make_option(
-            '--livereload-port', action='store', dest='livereload_port',
-            default='35729', help='Port where LiveReload listen.'),
         make_option(
             '--nowatcher', action='store_false', dest='use_watcher',
             default=settings.DEBUG,
@@ -38,19 +29,6 @@ class Command(RunserverCommand):
 
     gulp_bin = os.path.join(cwd, 'node_modules', '.bin', 'gulp')
 
-    def livereload_request(self, verbosity, **options):
-        """
-        Performs the LiveReload request.
-        """
-        host = 'localhost:%s' % options['livereload_port']
-        try:
-            urlopen('http://%s/changed?files=.' % host)
-            if self.verbosity:
-                sys.stdout.write(self.style.HTTP_INFO('>> Sending LiveReload request\n'))
-        except IOError as e:
-            sys.stdout.write(self.style.ERROR('>> LiveReload failed: %s\n' % (e,)))
-            pass
-
     def run_watcher(self, verbosity, **options):
         if self.verbosity:
             self.stdout.write(self.style.HTTP_INFO('>> Running [gulp watch]'))
@@ -64,12 +42,6 @@ class Command(RunserverCommand):
             self.stdout.write(self.style.HTTP_INFO('>> Launching webserver..'))
         return Popen(sys.argv + ['--nowatcher'], env=os.environ, cwd=self.cwd)
 
-    def get_handler(self, *args, **options):
-        handler = super(Command, self).get_handler(*args, **options)
-        if options['use_livereload']:
-            self.livereload_request(**options)
-        return handler
-
     def run(self, *args, **options):
         self.style = color_style()
         self.verbosity = int(options['verbosity'])
