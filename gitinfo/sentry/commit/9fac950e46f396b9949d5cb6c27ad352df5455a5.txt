commit 9fac950e46f396b9949d5cb6c27ad352df5455a5
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Apr 22 09:29:10 2019 -0700

    feat(analytics): Add events for searches, autocomplete, and selecting saved searches (#12833)
    
    Fixes SEN-345

diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
index 69c47ce8fb..3cb3f82f25 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
@@ -194,7 +194,16 @@ class SmartSearchBar extends React.Component {
   };
 
   onSubmit = evt => {
+    const {organization, savedSearchType} = this.props;
     evt.preventDefault();
+
+    analytics('search.searched', {
+      org_id: organization.id,
+      query: removeSpace(this.state.query),
+      source: savedSearchType === 0 ? 'issues' : 'events',
+      search_source: 'main_search',
+    });
+
     this.doSearch();
   };
 
@@ -622,6 +631,13 @@ class SmartSearchBar extends React.Component {
 
   onAutoComplete = (replaceText, item) => {
     if (item.type === 'recent-search') {
+      analytics('search.searched', {
+        org_id: this.props.organization.id,
+        query: replaceText,
+        source: this.props.savedSearchType === 0 ? 'issues' : 'events',
+        search_source: 'recent_search',
+      });
+
       this.setState({query: replaceText}, () => {
         // Propagate onSearch and save to recent searches
         this.doSearch();
diff --git a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
index 2cf9530906..543920db62 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
@@ -374,6 +374,17 @@ const OrganizationStream = createReactClass({
     }
   },
 
+  onStreamSidebarSearch(query) {
+    analytics('search.searched', {
+      org_id: this.props.organization.id,
+      query,
+      source: 'issues',
+      search_source: 'search_builder',
+    });
+
+    this.onSearch(query);
+  },
+
   onSearch(query) {
     if (query === this.state.query) {
       // if query is the same, just re-fetch data
@@ -699,7 +710,7 @@ const OrganizationStream = createReactClass({
           loading={this.state.tagsLoading}
           tags={this.state.tags}
           query={query}
-          onQueryChange={this.onSearch}
+          onQueryChange={this.onStreamSidebarSearch}
           orgId={organization.slug}
           tagValueLoader={this.tagValueLoader}
         />
diff --git a/src/sentry/static/sentry/app/views/stream/filters.jsx b/src/sentry/static/sentry/app/views/stream/filters.jsx
index 291fc4f446..1a5d30a42c 100644
--- a/src/sentry/static/sentry/app/views/stream/filters.jsx
+++ b/src/sentry/static/sentry/app/views/stream/filters.jsx
@@ -2,17 +2,18 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
-import Feature from 'app/components/acl/feature';
-import SentryTypes from 'app/sentryTypes';
-import QueryCount from 'app/components/queryCount';
 import {PageHeader} from 'app/styles/organization';
-import PageHeading from 'app/components/pageHeading';
+import {analytics} from 'app/utils/analytics';
 import {t} from 'app/locale';
+import Feature from 'app/components/acl/feature';
+import PageHeading from 'app/components/pageHeading';
+import QueryCount from 'app/components/queryCount';
+import SentryTypes from 'app/sentryTypes';
 
+import OrganizationSavedSearchSelector from './organizationSavedSearchSelector';
+import SavedSearchSelector from './savedSearchSelector';
 import SearchBar from './searchBar';
 import SortOptions from './sortOptions';
-import SavedSearchSelector from './savedSearchSelector';
-import OrganizationSavedSearchSelector from './organizationSavedSearchSelector';
 
 class StreamFilters extends React.Component {
   static propTypes = {
@@ -52,6 +53,19 @@ class StreamFilters extends React.Component {
     onSidebarToggle: function() {},
   };
 
+  handleOrganizationSavedSearchSelect = savedSearch => {
+    analytics('organization_saved_search.selected', {
+      org_id: this.props.organization.id,
+      query: savedSearch.query,
+      search_type: 'issues',
+      id: savedSearch.id ? parseInt(savedSearch.id, 10) : -1,
+    });
+
+    if (this.props.onSavedSearchSelect) {
+      this.props.onSavedSearchSelect(savedSearch);
+    }
+  };
+
   render() {
     const {
       organization,
@@ -107,7 +121,7 @@ class StreamFilters extends React.Component {
               key={query}
               organization={organization}
               savedSearchList={savedSearchList}
-              onSavedSearchSelect={onSavedSearchSelect}
+              onSavedSearchSelect={this.handleOrganizationSavedSearchSelect}
               onSavedSearchDelete={onSavedSearchDelete}
               query={query}
             />
