commit 11c1f2102e344cf632fd63daf787becb9adbdd75
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Aug 20 13:48:19 2015 -0700

    Alternative stacktrace trimming strategy
    
    Change stacktrace truncation to simply remove heavy data pieces (vars, surrounding context) rather than removing frames.
    
    Fixes GH-1809

diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 556f89bd13..e4dc0f2324 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -114,21 +114,24 @@ def remove_filename_outliers(filename):
     return _filename_version_re.sub('<version>/', filename)
 
 
-def trim_frames(stacktrace, max_frames=settings.SENTRY_MAX_STACKTRACE_FRAMES):
-    # TODO: this doesnt account for cases where the client has already omitted
-    # frames
+def slim_frame_data(stacktrace, frame_allowance=settings.SENTRY_MAX_STACKTRACE_FRAMES):
+    """
+    Removes various excess metadata from middle frames which go beyond
+    ``max_frames``.
+    """
     frames = stacktrace['frames']
     frames_len = len(frames)
 
-    if frames_len <= max_frames:
+    if frames_len <= frame_allowance:
         return
 
-    half_max = max_frames / 2
-
-    stacktrace['frames_omitted'] = (half_max, frames_len - half_max)
+    half_max = frame_allowance / 2
 
     for n in xrange(half_max, frames_len - half_max):
-        del frames[half_max]
+        # remove heavy components
+        frames[half_max].pop('vars', None)
+        frames[half_max].pop('pre_context', None)
+        frames[half_max].pop('post_context', None)
 
 
 def validate_bool(value, required=True):
@@ -430,7 +433,7 @@ class Stacktrace(Interface):
     def to_python(cls, data):
         assert data.get('frames')
 
-        trim_frames(data)
+        slim_frame_data(data)
 
         kwargs = {
             'frames': [
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index 052eb03e76..f56e6ae9ce 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -7,7 +7,7 @@ import mock
 from exam import fixture
 
 from sentry.interfaces.stacktrace import (
-    Frame, Stacktrace, get_context, trim_frames
+    Frame, Stacktrace, get_context, slim_frame_data
 )
 from sentry.models import Event
 from sentry.testutils import TestCase
@@ -342,24 +342,40 @@ class StacktraceTest(TestCase):
         self.assertEquals(result, 'Stacktrace (most recent call last):\n\n  File "foo", line 3, in biz\n    def foo(r):\n  File "bar", line 5, in baz\n    return None')
 
 
-class TrimFramesTest(TestCase):
+class SlimFrameDataTest(TestCase):
     def test_under_max(self):
         value = {'frames': [{'filename': 'foo'}]}
-        trim_frames(value)
+        slim_frame_data(value)
         assert len(value['frames']) == 1
         assert value.get('frames_omitted') is None
 
     def test_over_max(self):
         values = []
         for n in xrange(5):
-            values.append({'filename': 'frame %d' % n})
+            values.append({
+                'filename': 'frame %d' % n,
+                'vars': {},
+                'pre_context': [],
+                'post_context': [],
+            })
         value = {'frames': values}
-        trim_frames(value, max_frames=4)
+        slim_frame_data(value, 4)
 
-        assert len(value['frames']) == 4
+        assert len(value['frames']) == 5
 
         for value, num in zip(values[:2], xrange(2)):
             assert value['filename'] == 'frame %d' % num
+            assert value['vars'] is not None
+            assert value['pre_context'] is not None
+            assert value['post_context'] is not None
 
-        for value, num in zip(values[2:], xrange(3, 5)):
+        assert values[2]['filename'] == 'frame 2'
+        assert 'vars' not in values[2]
+        assert 'pre_context' not in values[2]
+        assert 'post_context' not in values[2]
+
+        for value, num in zip(values[3:], xrange(3, 5)):
             assert value['filename'] == 'frame %d' % num
+            assert value['vars'] is not None
+            assert value['pre_context'] is not None
+            assert value['post_context'] is not None
