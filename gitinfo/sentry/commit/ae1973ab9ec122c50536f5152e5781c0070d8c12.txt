commit ae1973ab9ec122c50536f5152e5781c0070d8c12
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Mar 24 17:09:30 2016 -0700

    Changes to Breadcrumbs interface
    
    - Remove delta
    - Change items to values (to support lists)

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 5cfca48949..b3efd0ee5a 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -519,8 +519,9 @@ class ClientApiHelper(object):
                 continue
 
             if type(value) != dict:
-                # HACK(dcramer): the exception interface supports a list as the
-                # value. We should change this in a new protocol version.
+                # HACK(dcramer): the exception/breadcrumbs interface supports a
+                # list as the value. We should change this in a new protocol
+                # version.
                 if type(value) in (list, tuple):
                     value = {'values': value}
                 else:
diff --git a/src/sentry/interfaces/breadcrumbs.py b/src/sentry/interfaces/breadcrumbs.py
index 62f0f4e73c..050d239e52 100644
--- a/src/sentry/interfaces/breadcrumbs.py
+++ b/src/sentry/interfaces/breadcrumbs.py
@@ -144,6 +144,7 @@ class Breadcrumbs(Interface):
 
     >>> [{
     >>>     "type": "message",
+    >>>     // timestamp can be ISO format or a unix timestamp (as float)
     >>>     "timestamp": "2016-01-17T12:30:00",
     >>>     "data": {
     >>>         "message": "My raw message with interpreted strings like %s",
@@ -155,19 +156,18 @@ class Breadcrumbs(Interface):
 
     @classmethod
     def to_python(cls, data):
-        items = []
-        for crumb in data.get('items') or ():
+        values = []
+        for crumb in data.get('values') or ():
             ty = crumb.get('type') or 'message'
             ts = parse_new_timestamp(crumb.get('timestamp'))
             if ts is None:
-                raise ValueError('fucked up')
-            items.append({
+                raise InterfaceValidationError('Unable to determine timestamp for crumb')
+            values.append({
                 'type': ty,
                 'timestamp': ts,
-                'dt': crumb.get('dt'),
                 'data': validate_payload_for_type(crumb.get('data'), ty),
             })
-        return cls(items=items)
+        return cls(values=values)
 
     def get_path(self):
         return 'sentry.interfaces.Breadcrumbs'
@@ -177,5 +177,5 @@ class Breadcrumbs(Interface):
 
     def get_api_context(self, is_public=False):
         return {
-            'items': self.items,
+            'values': self.values,
         }
diff --git a/tests/sentry/interfaces/test_breadcrumbs.py b/tests/sentry/interfaces/test_breadcrumbs.py
new file mode 100644
index 0000000000..07a674745a
--- /dev/null
+++ b/tests/sentry/interfaces/test_breadcrumbs.py
@@ -0,0 +1,27 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from datetime import datetime
+from django.utils import timezone
+
+from sentry.interfaces.breadcrumbs import Breadcrumbs
+from sentry.testutils import TestCase
+
+
+class BreadcrumbsTest(TestCase):
+    def test_path(self):
+        assert Breadcrumbs().get_path() == 'sentry.interfaces.Breadcrumbs'
+
+    def test_simple(self):
+        result = Breadcrumbs.to_python(dict(values=[{
+            'type': 'message',
+            'timestamp': 1458857193.973275,
+            'data': {
+                'message': 'Whats up dawg?',
+            },
+        }]))
+        assert len(result.values) == 1
+        assert result.values[0]['type'] == 'message'
+        assert result.values[0]['timestamp'] == datetime(2016, 3, 24, 22, 6, 33, 973275, tzinfo=timezone.utc)
+        assert result.values[0]['data'] == {'message': 'Whats up dawg?'}
