commit 920ec2f5ccb06aed6a0d25b07f47236c551c5b66
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Aug 30 11:42:24 2018 -0700

    feat(discover): Default orderby value applied should be descending (#9567)

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
index 2745a1a8ca..968d90eb75 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
@@ -148,7 +148,7 @@ export default function createQueryBuilder(initial = {}, organization) {
     // If orderby value becomes invalid, update it to the first valid aggregation
     if (hasInvalidOrderbyField) {
       if (validAggregations.length > 0) {
-        query.orderby = validAggregations[0][2];
+        query.orderby = `-${validAggregations[0][2]}`;
       } else {
         query.orderby = '-timestamp';
       }
diff --git a/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx b/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
index c40abeb126..25c9a812b7 100644
--- a/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
@@ -149,12 +149,12 @@ describe('Query Builder', function() {
       queryBuilder.updateField('aggregations', [['count()', null, 'count']]);
 
       const query = queryBuilder.getInternal();
-      expect(query.orderby).toBe('count');
+      expect(query.orderby).toBe('-count');
     });
 
     it('updates orderby if there is no aggregation and value is not a valid field', function() {
       queryBuilder.updateField('aggregations', [['count()', null, 'count']]);
-      expect(queryBuilder.getInternal().orderby).toBe('count');
+      expect(queryBuilder.getInternal().orderby).toBe('-count');
       queryBuilder.updateField('aggregations', []);
       expect(queryBuilder.getInternal().orderby).toBe('-timestamp');
     });
