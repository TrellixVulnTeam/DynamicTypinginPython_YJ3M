commit 15de774d4d4fb37ead685e59967edb424f381051
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Dec 14 23:56:58 2016 +0100

    Change detection logic for frameworks to be based on garbage symbols

diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 4a1bc5e801..64a0ffd587 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -347,6 +347,7 @@ def preprocess_apple_crash_event(data):
 def resolve_frame_symbols(data):
     debug_meta = data['debug_meta']
     debug_images = debug_meta['images']
+    is_debug_build = debug_meta.get('is_debug_build')
     sdk_info = get_sdk_from_event(data)
 
     stacktraces = find_all_stacktraces(data)
@@ -361,7 +362,8 @@ def resolve_frame_symbols(data):
     referenced_images = find_stacktrace_referenced_images(
         debug_images, [x[0] for x in stacktraces])
     sym = Symbolizer(project, debug_images,
-                     referenced_images=referenced_images)
+                     referenced_images=referenced_images,
+                     is_debug_build=is_debug_build)
 
     frame = None
     idx = -1
@@ -402,6 +404,7 @@ def resolve_frame_symbols(data):
                         'object_name': frame.get('package'),
                         'object_addr': frame['image_addr'],
                         'instruction_addr': frame['instruction_addr'],
+                        'symbol_name': frame.get('function'),
                         'symbol_addr': frame['symbol_addr'],
                     }
                     new_frame = dict(frame)
diff --git a/src/sentry/lang/native/symbolizer.py b/src/sentry/lang/native/symbolizer.py
index be72b6d086..3dd2f918a0 100644
--- a/src/sentry/lang/native/symbolizer.py
+++ b/src/sentry/lang/native/symbolizer.py
@@ -28,6 +28,10 @@ _known_app_bundled_frameworks_re = re.compile(r'''(?x)
 SIM_PATH = '/Developer/CoreSimulator/Devices/'
 SIM_APP_PATH = '/Containers/Bundle/Application/'
 
+KNOWN_GARBAGE_SYMBOLS = set([
+    '_mh_execute_header',
+])
+
 
 @implements_to_string
 class SymbolicationFailed(Exception):
@@ -119,10 +123,12 @@ def make_symbolizer(project, binary_images, referenced_images=None):
 
 class Symbolizer(object):
 
-    def __init__(self, project, binary_images, referenced_images=None):
+    def __init__(self, project, binary_images, referenced_images=None,
+                 is_debug_build=None):
         self.symsynd_symbolizer = make_symbolizer(
             project, binary_images, referenced_images=referenced_images)
         self.images = dict((img['image_addr'], img) for img in binary_images)
+        self.is_debug_build = is_debug_build
 
     def __enter__(self):
         return self.symsynd_symbolizer.driver.__enter__()
@@ -154,14 +160,20 @@ class Symbolizer(object):
             return False
         return True
 
+    def _is_app_bundled_framework(self, frame, img):
+        fn = self._get_frame_package(frame, img)
+        return _known_app_bundled_frameworks_re.search(fn) is not None
+
     def _is_app_frame(self, frame, img):
         if not self._is_app_bundled_frame(frame, img):
             return False
         return not self._is_app_bundled_framework(frame, img)
 
-    def _is_app_bundled_framework(self, frame, img):
-        fn = self._get_frame_package(frame, img)
-        return _known_app_bundled_frameworks_re.search(fn) is not None
+    def _is_optional_app_bundled_framework(self, frame, img):
+        if not self._is_app_bundled_framework(frame, img):
+            return False
+        symbol_name = frame.get('symbol_name')
+        return symbol_name and symbol_name not in KNOWN_GARBAGE_SYMBOLS
 
     def _is_simulator_frame(self, frame, img):
         fn = self._get_frame_package(frame, img)
@@ -173,8 +185,12 @@ class Symbolizer(object):
 
     def symbolize_app_frame(self, frame, img):
         if frame['object_addr'] not in self.symsynd_symbolizer.images:
+            if self._is_optional_app_bundled_framework(frame, img):
+                type = 'missing-optionally-bundled-dsym'
+            else:
+                type = 'missing-dsym'
             raise SymbolicationFailed(
-                type='missing-dsym',
+                type=type,
                 image=img
             )
 
