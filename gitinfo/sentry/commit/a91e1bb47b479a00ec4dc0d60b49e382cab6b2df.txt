commit a91e1bb47b479a00ec4dc0d60b49e382cab6b2df
Author: NisanthanNanthakumar <nisanthan.nanthakumar@sentry.io>
Date:   Mon Mar 23 11:29:51 2020 -0700

    feat(IntegrationDirectory): Add category tags (#17804)
    
    Objective
    We are adding the categories to the right side of the row in the home page of the integration directory.

diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index ae59a67f97..4f255419a6 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -709,6 +709,7 @@ export type SentryApp = {
     id: number;
     slug: string;
   };
+  featureData: IntegrationFeature[];
 };
 
 export type Integration = {
diff --git a/src/sentry/static/sentry/app/utils/integrationUtil.tsx b/src/sentry/static/sentry/app/utils/integrationUtil.tsx
index 1c4fa0d902..05cd7ef86d 100644
--- a/src/sentry/static/sentry/app/utils/integrationUtil.tsx
+++ b/src/sentry/static/sentry/app/utils/integrationUtil.tsx
@@ -8,6 +8,7 @@ import {
   SentryAppInstallation,
   IntegrationInstallationStatus,
   SentryAppStatus,
+  IntegrationFeature,
 } from 'app/types';
 import {Hooks} from 'app/types/hooks';
 import HookStore from 'app/stores/hookStore';
@@ -208,3 +209,27 @@ export const getSentryAppInstallStatus = (install: SentryAppInstallation | undef
   }
   return 'Not Installed';
 };
+
+export const getCategories = (features: IntegrationFeature[]): string[] => {
+  const transform = features.map(({featureGate}) => {
+    const feature = featureGate
+      .replace(/integrations/g, '')
+      .replace(/-/g, ' ')
+      .trim();
+    switch (feature) {
+      case 'actionable notification':
+        return 'notification action';
+      case 'issue basic':
+      case 'issue sync':
+        return 'project management';
+      case 'commits':
+        return 'source code management';
+      case 'chat unfurl':
+        return 'chat';
+      default:
+        return feature;
+    }
+  });
+
+  return [...new Set(transform)];
+};
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/abstractIntegrationDetailedView.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/abstractIntegrationDetailedView.tsx
index 417b11911b..5bda69ac32 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/abstractIntegrationDetailedView.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/abstractIntegrationDetailedView.tsx
@@ -1,4 +1,3 @@
-import uniq from 'lodash/uniq';
 import React from 'react';
 import styled from '@emotion/styled';
 import {RouteComponentProps} from 'react-router/lib/Router';
@@ -20,6 +19,7 @@ import {
   getIntegrationFeatureGate,
   trackIntegrationEvent,
   SingleIntegrationEvent,
+  getCategories,
 } from 'app/utils/integrationUtil';
 import Alert, {Props as AlertProps} from 'app/components/alert';
 import ExternalLink from 'app/components/links/externalLink';
@@ -231,11 +231,7 @@ class AbstractIntegrationDetailedView<
   }
 
   cleanTags() {
-    return uniq(
-      this.featureData.map(feature =>
-        feature.featureGate.replace(/integrations/g, '').replace(/-/g, ' ')
-      )
-    );
+    return getCategories(this.featureData);
   }
 
   renderAddInstallButton(hideButtonIfDisabled = false) {
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
index 880ad6d7b2..fa7e2e18d8 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
@@ -17,6 +17,7 @@ import {
   trackIntegrationEvent,
   getSentryAppInstallStatus,
   getSortIntegrationsByWeightActive,
+  getCategories,
 } from 'app/utils/integrationUtil';
 import {t, tct} from 'app/locale';
 import AsyncComponent from 'app/components/asyncComponent';
@@ -307,6 +308,7 @@ export class OrganizationIntegrations extends AsyncComponent<
         status={integrations.length ? 'Installed' : 'Not Installed'}
         publishStatus="published"
         configurations={integrations.length}
+        categories={getCategories(provider.metadata.features)}
       />
     );
   };
@@ -331,6 +333,7 @@ export class OrganizationIntegrations extends AsyncComponent<
         status={plugin.projectList.length ? 'Installed' : 'Not Installed'}
         publishStatus="published"
         configurations={plugin.projectList.length}
+        categories={getCategories(plugin.featureDescriptions)}
       />
     );
   };
@@ -339,6 +342,9 @@ export class OrganizationIntegrations extends AsyncComponent<
   renderSentryApp = (app: SentryApp) => {
     const {organization} = this.props;
     const status = getSentryAppInstallStatus(this.getAppInstall(app));
+    const categories = ['internal', 'unpublished'].includes(app.status)
+      ? [app.status]
+      : getCategories(app.featureData);
 
     return (
       <IntegrationRow
@@ -351,6 +357,7 @@ export class OrganizationIntegrations extends AsyncComponent<
         status={status}
         publishStatus={app.status}
         configurations={0}
+        categories={categories}
       />
     );
   };
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRow.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRow.tsx
index 6beebc6dcb..8fb66ab9a4 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRow.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRow.tsx
@@ -18,6 +18,7 @@ type Props = {
   status: IntegrationInstallationStatus;
   publishStatus: 'unpublished' | 'published' | 'internal';
   configurations: number;
+  categories?: string[];
 };
 
 const urlMap = {
@@ -35,6 +36,7 @@ const IntegrationRow = (props: Props) => {
     status,
     publishStatus,
     configurations,
+    categories,
   } = props;
 
   const baseUrl =
@@ -64,6 +66,15 @@ const IntegrationRow = (props: Props) => {
             {renderDetails()}
           </IntegrationDetails>
         </Container>
+        <InternalContainer>
+          {categories?.map(category => (
+            <CategoryTag
+              key={category}
+              category={category}
+              priority={category === publishStatus}
+            />
+          ))}
+        </InternalContainer>
       </FlexContainer>
     </PanelItem>
   );
@@ -75,6 +86,10 @@ const FlexContainer = styled('div')`
   padding: ${space(2)};
 `;
 
+const InternalContainer = styled(FlexContainer)`
+  padding: 0 ${space(2)};
+`;
+
 const Container = styled('div')`
   flex: 1;
   padding: 0 16px;
@@ -120,4 +135,21 @@ const PublishStatus = styled(({status, ...props}: PublishStatusProps) => (
   }
 `;
 
+const CategoryTag = styled(
+  ({priority, category, ...p}: {category: string; priority: boolean; theme?: any}) => (
+    <div {...p}>{category}</div>
+  )
+)`
+  display: flex;
+  flex-direction: row;
+  padding: 1px 10px;
+  background: ${p => (p.priority ? p.theme.purpleLightest : p.theme.offWhite2)};
+  border-radius: 20px;
+  font-size: ${space(1.5)};
+  margin-right: ${space(1)};
+  line-height: ${space(3)};
+  text-align: center;
+  color: ${p => (p.priority ? p.theme.white : p.theme.gray4)};
+`;
+
 export default IntegrationRow;
diff --git a/tests/js/sentry-test/fixtures/integrationListDirectory.js b/tests/js/sentry-test/fixtures/integrationListDirectory.js
index 724a63bb23..17606f8949 100644
--- a/tests/js/sentry-test/fixtures/integrationListDirectory.js
+++ b/tests/js/sentry-test/fixtures/integrationListDirectory.js
@@ -78,6 +78,7 @@ export function OrgOwnedApps() {
       uuid: 'a806ab10-9608-4a4f-8dd9-ca6d6c09f9f5',
       verifyInstall: false,
       webhookUrl: 'https://myheadbandwasher.com',
+      featureData: [],
     },
     {
       allowedOrigins: [],
@@ -99,6 +100,13 @@ export function OrgOwnedApps() {
       uuid: 'a59c8fcc-2f27-49f8-af9e-02661fc3e8d7',
       verifyInstall: false,
       webhookUrl: 'https://lacroix.com',
+      featureData: [
+        {
+          description:
+            'La Croix can **utilize the Sentry API** to pull data or update resources in Sentry (with permissions granted, of course).',
+          featureGate: 'integrations-api',
+        },
+      ],
     },
     {
       allowedOrigins: [],
@@ -118,6 +126,13 @@ export function OrgOwnedApps() {
       uuid: '5d547ecb-7eb8-4ed2-853b-40256177d526',
       verifyInstall: false,
       webhookUrl: 'http://localhost:7000',
+      featureData: [
+        {
+          description:
+            'Clickup can **utilize the Sentry API** to pull data or update resources in Sentry (with permissions granted, of course).',
+          featureGate: 'integrations-api',
+        },
+      ],
     },
   ];
 }
@@ -142,6 +157,13 @@ export function PublishedApps() {
       uuid: '5d547ecb-7eb8-4ed2-853b-40256177d526',
       verifyInstall: false,
       webhookUrl: 'http://localhost:7000',
+      featureData: [
+        {
+          description:
+            'Clickup can **utilize the Sentry API** to pull data or update resources in Sentry (with permissions granted, of course).',
+          featureGate: 'integrations-api',
+        },
+      ],
     },
   ];
 }
@@ -206,11 +228,17 @@ export function PluginListConfig() {
       isTestable: true,
       isHidden: true,
       hasConfiguration: true,
-      features: [],
       shortName: 'PagerDuty',
       id: 'pagerduty',
       assets: [],
-      featureDescriptions: [],
+      featureDescriptions: [
+        {
+          description:
+            'Configure rule based PagerDuty alerts to automatically be triggered in a specific\n            service - or in multiple services!',
+          featureGate: 'alert-rule',
+        },
+      ],
+      features: ['alert-rule'],
       name: 'PagerDuty',
       author: {url: 'https://github.com/getsentry/sentry', name: 'Sentry Team'},
       contexts: [],
