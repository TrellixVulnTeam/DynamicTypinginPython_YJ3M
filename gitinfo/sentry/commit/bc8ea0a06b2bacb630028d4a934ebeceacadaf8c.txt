commit bc8ea0a06b2bacb630028d4a934ebeceacadaf8c
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Wed Dec 11 10:23:46 2019 -0800

    ref(apm): Use absolute start/end datetime ranges when fetching transactions (#16055)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
index f24e253d46..432b92fc50 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
@@ -221,10 +221,16 @@ class SpanBar extends React.Component<SpanBarProps, SpanBarState> {
       return null;
     }
 
-    const {span, orgId, isRoot, eventView} = this.props;
+    const {span, orgId, isRoot, eventView, trace} = this.props;
 
     return (
-      <SpanDetail span={span} orgId={orgId} isRoot={!!isRoot} eventView={eventView} />
+      <SpanDetail
+        span={span}
+        orgId={orgId}
+        isRoot={!!isRoot}
+        eventView={eventView}
+        trace={trace}
+      />
     );
   };
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
index 329a22de3e..25a7bde9a4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
@@ -2,8 +2,10 @@ import React from 'react';
 import styled from 'react-emotion';
 import get from 'lodash/get';
 import map from 'lodash/map';
+import moment from 'moment';
 
 import {t} from 'app/locale';
+import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 import DateTime from 'app/components/dateTime';
 import Pills from 'app/components/pills';
 import Pill from 'app/components/pill';
@@ -18,7 +20,7 @@ import {
 import EventView from 'app/views/eventsV2/eventView';
 import {generateDiscoverResultsRoute} from 'app/views/eventsV2/results';
 
-import {SpanType} from './types';
+import {SpanType, ParsedTraceType} from './types';
 
 type TransactionResult = {
   'project.name': string;
@@ -32,6 +34,7 @@ type Props = {
   span: Readonly<SpanType>;
   isRoot: boolean;
   eventView: EventView;
+  trace: Readonly<ParsedTraceType>;
 };
 
 type State = {
@@ -66,14 +69,27 @@ class SpanDetail extends React.Component<Props, State> {
   }
 
   fetchSpanDescendents(spanID: string): Promise<any> {
-    const {api, orgId, span} = this.props;
+    const {api, orgId, span, trace} = this.props;
 
     const url = `/organizations/${orgId}/eventsv2/`;
 
+    const {start, end} = getParams({
+      start: moment
+        .unix(trace.traceStartTimestamp)
+        .subtract(12, 'hours')
+        .format('YYYY-MM-DDTHH:mm:ss.SSS'),
+      end: moment
+        .unix(trace.traceEndTimestamp)
+        .add(12, 'hours')
+        .format('YYYY-MM-DDTHH:mm:ss.SSS'),
+    });
+
     const query = {
       field: ['transaction', 'id', 'trace.span'],
       sort: ['-id'],
       query: `event.type:transaction trace:${span.trace_id} trace.parent_span:${spanID}`,
+      start,
+      end,
     };
 
     return api.requestPromise(url, {
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx
index 7b2feb9ba0..47e603c133 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx
@@ -1,6 +1,9 @@
 import React from 'react';
 import styled from 'react-emotion';
+import get from 'lodash/get';
+import moment from 'moment';
 
+import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 import {Organization, Event, Project} from 'app/types';
 import AsyncComponent from 'app/components/asyncComponent';
 import DateTime from 'app/components/dateTime';
@@ -43,6 +46,17 @@ class LinkedEvents extends AsyncComponent<Props, State> {
 
     const trace = event.tags.find(tag => tag.key === 'trace');
     if (trace) {
+      const {start, end} = getParams({
+        start: moment
+          .unix(get(event, 'startTimestamp', 0))
+          .subtract(12, 'hours')
+          .format('YYYY-MM-DDTHH:mm:ss.SSS'),
+        end: moment
+          .unix(get(event, 'endTimestamp', 0))
+          .add(12, 'hours')
+          .format('YYYY-MM-DDTHH:mm:ss.SSS'),
+      });
+
       endpoints.push([
         'linkedEvents',
         `/organizations/${organization.slug}/eventsv2/`,
@@ -58,6 +72,8 @@ class LinkedEvents extends AsyncComponent<Props, State> {
             ],
             sort: ['-timestamp'],
             query: `trace:${trace.value}`,
+            start,
+            end,
           },
         },
       ]);
