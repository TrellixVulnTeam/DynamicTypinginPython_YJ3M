commit 5fb72084ef6c7beb4c70703f166cb4f11ae60cdd
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Apr 16 15:12:20 2018 -0700

    ref(ui): Project Alerts hierarchy and crumbs (#7999)
    
    * Add routes hierarchy so it reflects in breadcrumbs
    * Move related components into "views/settings/projectAlerts" dir
    * RuleEditor: Add "Cancel" button + align to right
    * fix redirect after creating a new alert rule
    * change "ProjectAlertRules" to AsyncView (else project crumb causes bad state)
    * fix project crumb to not keep edit rule context

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 7956e40868..9983a21c9e 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -56,9 +56,9 @@ import OrganizationGeneralSettingsView from './views/settings/organization/gener
 import OrganizationStats from './views/organizationStats';
 import OrganizationTeams from './views/organizationTeams';
 import OrganizationTeamsProjectsView from './views/organizationTeamsProjects';
-import ProjectAlertRules from './views/projectAlertRules';
-import ProjectAlertRuleDetails from './views/projectAlertRuleDetails';
-import ProjectAlertSettings from './views/projectAlertSettings';
+import ProjectAlertRules from './views/settings/projectAlerts/projectAlertRules';
+import ProjectAlertRuleDetails from './views/settings/projectAlerts/projectAlertRuleDetails';
+import ProjectAlertSettings from './views/settings/projectAlerts/projectAlertSettings';
 import ProjectEnvironments from './views/projectEnvironments';
 import ProjectTags from './views/projectTags';
 import ProjectChooser from './views/projectChooser';
@@ -248,22 +248,20 @@ const projectSettingsRoutes = (
         import(/*webpackChunkName: "ProjectTeams"*/ './views/settings/project/projectTeams')}
       component={errorHandler(LazyLoad)}
     />
-    <Route name="Alerts" path="alerts/" component={errorHandler(ProjectAlertSettings)} />
-    <Route
-      path="alerts/rules/"
-      name="Alert Rules"
-      component={errorHandler(ProjectAlertRules)}
-    />
-    <Route
-      path="alerts/rules/new/"
-      name="New Alert Rule"
-      component={errorHandler(ProjectAlertRuleDetails)}
-    />
-    <Route
-      path="alerts/rules/:ruleId/"
-      name="Edit Alert Rule"
-      component={errorHandler(ProjectAlertRuleDetails)}
-    />
+
+    <Route name="Alerts" path="alerts/">
+      <IndexRoute component={errorHandler(ProjectAlertSettings)} />
+      <Route path="rules/" name="Rules" component={null}>
+        <IndexRoute component={errorHandler(ProjectAlertRules)} />
+        <Route path="new/" name="New" component={errorHandler(ProjectAlertRuleDetails)} />
+        <Route
+          path=":ruleId/"
+          name="Edit"
+          component={errorHandler(ProjectAlertRuleDetails)}
+        />
+      </Route>
+    </Route>
+
     <Route
       name="Environments"
       path="environments/"
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
index c2223472be..d2ecbe0f18 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
@@ -76,10 +76,15 @@ class ProjectCrumb extends React.Component {
           </ProjectName>
         }
         onSelect={item => {
+          let lastRoute = routes[routes.length - 1];
+          // We have to make an exception for "Project Alerts Rule Edit" route
+          // Since these models are project specific, we need to traverse up a route when switching projects
+          let stepBack = lastRoute.path === ':ruleId/' ? -1 : undefined;
           browserHistory.push(
             recreateRoute('', {
               routes,
               params: {...params, projectId: item.value},
+              stepBack,
             })
           );
         }}
diff --git a/src/sentry/static/sentry/app/views/projectAlertRuleDetails.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRuleDetails.jsx
similarity index 86%
rename from src/sentry/static/sentry/app/views/projectAlertRuleDetails.jsx
rename to src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRuleDetails.jsx
index ca220612ac..ca44acc7c6 100644
--- a/src/sentry/static/sentry/app/views/projectAlertRuleDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRuleDetails.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
-import SentryTypes from '../proptypes';
-import AsyncView from './asyncView';
+import SentryTypes from '../../../proptypes';
+import AsyncView from '../../asyncView';
 import RuleEditor from './ruleEditor';
 
 class ProjectAlertRuleDetails extends AsyncView {
@@ -27,6 +27,7 @@ class ProjectAlertRuleDetails extends AsyncView {
         actions={actions}
         conditions={conditions}
         params={this.props.params}
+        routes={this.props.routes}
       />
     );
   }
diff --git a/src/sentry/static/sentry/app/views/projectAlertRules.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx
similarity index 73%
rename from src/sentry/static/sentry/app/views/projectAlertRules.jsx
rename to src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx
index 578e51c7df..c15503a545 100644
--- a/src/sentry/static/sentry/app/views/projectAlertRules.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx
@@ -4,26 +4,24 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 import styled from 'react-emotion';
 
-import {t, tct} from '../locale';
-import ApiMixin from '../mixins/apiMixin';
-import Button from '../components/buttons/button';
-import Confirm from '../components/confirm';
-import Duration from '../components/duration';
+import {Panel, PanelBody, PanelHeader} from '../../../components/panels';
 import {
   addSuccessMessage,
   addErrorMessage,
   addLoadingMessage,
   removeIndicator,
-} from '../actionCreators/indicator';
-
-import ListLink from '../components/listLink';
-import LoadingError from '../components/loadingError';
-import LoadingIndicator from '../components/loadingIndicator';
-import {Panel, PanelBody, PanelHeader} from '../components/panels';
-import EmptyStateWarning from '../components/emptyStateWarning';
-import SettingsPageHeader from './settings/components/settingsPageHeader';
-import recreateRoute from '../utils/recreateRoute';
-import EnvironmentStore from '../stores/environmentStore';
+} from '../../../actionCreators/indicator';
+import {t, tct} from '../../../locale';
+import ApiMixin from '../../../mixins/apiMixin';
+import AsyncView from '../../asyncView';
+import Button from '../../../components/buttons/button';
+import Confirm from '../../../components/confirm';
+import Duration from '../../../components/duration';
+import EmptyStateWarning from '../../../components/emptyStateWarning';
+import EnvironmentStore from '../../../stores/environmentStore';
+import ListLink from '../../../components/listLink';
+import SettingsPageHeader from '../components/settingsPageHeader';
+import recreateRoute from '../../../utils/recreateRoute';
 
 const TextColorLink = styled(Link)`
   color: ${p => p.theme.gray3};
@@ -174,68 +172,21 @@ const RuleRow = createReactClass({
   },
 });
 
-const ProjectAlertRules = createReactClass({
-  displayName: 'ProjectAlertRules',
-  propTypes: {
+class ProjectAlertRules extends AsyncView {
+  static propTypes = {
     routes: PropTypes.array.isRequired,
-  },
-  mixins: [ApiMixin],
-
-  getInitialState() {
-    return {
-      loading: true,
-      error: false,
-      ruleList: [],
-    };
-  },
-
-  componentDidMount() {
-    this.fetchData();
-  },
+  };
 
-  fetchData() {
+  getEndpoints() {
     let {orgId, projectId} = this.props.params;
-    this.api.request(`/projects/${orgId}/${projectId}/rules/`, {
-      success: data => {
-        this.setState({
-          error: false,
-          loading: false,
-          ruleList: data,
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-          loading: false,
-        });
-      },
-    });
-  },
+    return [['ruleList', `/projects/${orgId}/${projectId}/rules/`]];
+  }
 
-  onDeleteRule(rule) {
+  handleDeleteRule = rule => {
     this.setState({
       ruleList: this.state.ruleList.filter(r => r.id !== rule.id),
     });
-  },
-
-  renderBody() {
-    let body;
-
-    if (this.state.loading) body = this.renderLoading();
-    else if (this.state.error) body = <LoadingError onRetry={this.fetchData} />;
-    else if (this.state.ruleList.length) body = this.renderResults();
-    else body = this.renderEmpty();
-
-    return body;
-  },
-
-  renderLoading() {
-    return (
-      <div className="box">
-        <LoadingIndicator />
-      </div>
-    );
-  },
+  };
 
   renderEmpty() {
     return (
@@ -245,7 +196,7 @@ const ProjectAlertRules = createReactClass({
         </EmptyStateWarning>
       </Panel>
     );
-  },
+  }
 
   renderResults() {
     let {orgId, projectId} = this.props.params;
@@ -260,17 +211,19 @@ const ProjectAlertRules = createReactClass({
               projectId={projectId}
               params={this.props.params}
               routes={this.props.routes}
-              onDelete={this.onDeleteRule.bind(this, rule)}
+              onDelete={this.handleDeleteRule.bind(this, rule)}
             />
           );
         })}
       </div>
     );
-  },
+  }
+
+  renderBody() {
+    let {ruleList} = this.state;
 
-  render() {
     return (
-      <div>
+      <React.Fragment>
         <SettingsPageHeader
           title={t('Alerts')}
           action={
@@ -285,21 +238,18 @@ const ProjectAlertRules = createReactClass({
           }
           tabs={
             <ul className="nav nav-tabs" style={{borderBottom: '1px solid #ddd'}}>
-              <ListLink
-                to={recreateRoute('alerts/', {...this.props, stepBack: -1})}
-                index={true}
-              >
+              <ListLink to={recreateRoute('alerts', {...this.props, stepBack: -4})}>
                 {t('Settings')}
               </ListLink>
               <ListLink to={recreateRoute('', this.props)}>{t('Rules')}</ListLink>
             </ul>
           }
         />
-
-        {this.renderBody()}
-      </div>
+        {!!ruleList.length && this.renderResults()}
+        {!ruleList.length && this.renderEmpty()}
+      </React.Fragment>
     );
-  },
-});
+  }
+}
 
 export default ProjectAlertRules;
diff --git a/src/sentry/static/sentry/app/views/projectAlertSettings.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertSettings.jsx
similarity index 83%
rename from src/sentry/static/sentry/app/views/projectAlertSettings.jsx
rename to src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertSettings.jsx
index a71e9cafbf..667c004fcf 100644
--- a/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertSettings.jsx
@@ -1,18 +1,18 @@
 import React from 'react';
 
-import {t} from '../locale';
-import AlertLink from '../components/alertLink';
-import AsyncView from './asyncView';
-import Button from '../components/buttons/button';
-import Form from './settings/components/forms/form';
-import JsonForm from './settings/components/forms/jsonForm';
-import ListLink from '../components/listLink';
-import {PanelAlert} from '../components/panels';
-import PluginList from '../components/pluginList';
-import SentryTypes from '../proptypes';
-import SettingsPageHeader from './settings/components/settingsPageHeader';
-import {fields} from '../data/forms/projectAlerts';
-import recreateRoute from '../utils/recreateRoute';
+import {t} from '../../../locale';
+import AlertLink from '../../../components/alertLink';
+import AsyncView from '../../asyncView';
+import Button from '../../../components/buttons/button';
+import Form from '../components/forms/form';
+import JsonForm from '../components/forms/jsonForm';
+import ListLink from '../../../components/listLink';
+import {PanelAlert} from '../../../components/panels';
+import PluginList from '../../../components/pluginList';
+import SentryTypes from '../../../proptypes';
+import SettingsPageHeader from '../components/settingsPageHeader';
+import {fields} from '../../../data/forms/projectAlerts';
+import recreateRoute from '../../../utils/recreateRoute';
 
 export default class ProjectAlertSettings extends AsyncView {
   static propTypes = {
@@ -67,7 +67,7 @@ export default class ProjectAlertSettings extends AsyncView {
     let {organization} = this.props;
 
     return (
-      <div>
+      <React.Fragment>
         <SettingsPageHeader
           title={t('Alerts')}
           action={
@@ -135,7 +135,7 @@ export default class ProjectAlertSettings extends AsyncView {
           onEnablePlugin={this.handleEnablePlugin}
           onDisablePlugin={this.handleDisablePlugin}
         />
-      </div>
+      </React.Fragment>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
similarity index 87%
rename from src/sentry/static/sentry/app/views/ruleEditor/index.jsx
rename to src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
index e2303842a4..384592de4c 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
@@ -5,20 +5,22 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 import styled from 'react-emotion';
 
-import {Select2Field, TextField} from '../../components/forms';
-import Button from '../../components/buttons/button';
+import {ALL_ENVIRONMENTS_KEY} from '../../../../constants';
+import {Panel, PanelBody, PanelHeader} from '../../../../components/panels';
+import {Select2Field, TextField} from '../../../../components/forms';
 import {
   addErrorMessage,
   addSuccessMessage,
   addMessage,
-} from '../../actionCreators/indicator';
-import {t} from '../../locale';
-import ApiMixin from '../../mixins/apiMixin';
-import EnvironmentStore from '../../stores/environmentStore';
-import LoadingIndicator from '../../components/loadingIndicator';
-import {Panel, PanelBody, PanelHeader} from '../../components/panels';
+} from '../../../../actionCreators/indicator';
+import {t} from '../../../../locale';
+import ApiMixin from '../../../../mixins/apiMixin';
+import Button from '../../../../components/buttons/button';
+import EnvironmentStore from '../../../../stores/environmentStore';
+import LoadingIndicator from '../../../../components/loadingIndicator';
 import RuleNodeList from './ruleNodeList';
-import {ALL_ENVIRONMENTS_KEY} from '../../constants';
+import recreateRoute from '../../../../utils/recreateRoute';
+import space from '../../../../styles/space';
 
 const FREQUENCY_CHOICES = [
   ['5', t('5 minutes')],
@@ -121,7 +123,7 @@ const RuleEditor = createReactClass({
         // Redirect to correct ID if /new
         if (isNew) {
           browserHistory.replace(
-            `/${organization.slug}/${project.slug}/settings/alerts/rules/${resp.id}/`
+            recreateRoute(`${resp.id}/`, {...this.props, stepBack: -1})
           );
         }
         addSuccessMessage(isNew ? t('Created alert rule') : t('Updated alert rule'));
@@ -305,11 +307,14 @@ const RuleEditor = createReactClass({
               )}
             </AlertRuleRow>
 
-            <div className="actions">
+            <ActionBar>
+              <CancelButton to={recreateRoute('', {...this.props, stepBack: -1})}>
+                {t('Cancel')}
+              </CancelButton>
               <Button priority="primary" disabled={loading}>
                 {t('Save Rule')}
               </Button>
-            </div>
+            </ActionBar>
           </PanelBody>
         </Panel>
       </form>
@@ -318,3 +323,15 @@ const RuleEditor = createReactClass({
 });
 
 export default RuleEditor;
+
+const CancelButton = styled(Button)`
+  margin-right: ${space(1)};
+`;
+
+const ActionBar = styled('div')`
+  display: flex;
+  justify-content: flex-end;
+  padding: ${space(2)};
+  border-top: 1px solid ${p => p.theme.borderLight};
+  margin: 0 -20px -20px;
+`;
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx
similarity index 95%
rename from src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
rename to src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx
index 2baa9c7310..3e226468aa 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx
@@ -1,8 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
-import Button from '../../components/buttons/button';
-import {Select2Field, NumberField, TextField} from '../../components/forms';
+import Button from '../../../../components/buttons/button';
+import {Select2Field, NumberField, TextField} from '../../../../components/forms';
 
 class RuleNode extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx
similarity index 96%
rename from src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
rename to src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx
index 92ef57bb48..4bc6f9e826 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx
@@ -2,7 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
-import SelectInput from '../../components/selectInput';
+import SelectInput from '../../../../components/selectInput';
 import RuleNode from './ruleNode';
 
 class RuleNodeList extends React.Component {
diff --git a/src/sentry/static/sentry/less/project-settings.less b/src/sentry/static/sentry/less/project-settings.less
index ce1d81155f..e3faf9a791 100644
--- a/src/sentry/static/sentry/less/project-settings.less
+++ b/src/sentry/static/sentry/less/project-settings.less
@@ -168,12 +168,6 @@
       }
     }
   }
-
-  .actions {
-    padding: 20px;
-    border-top: 1px solid lighten(@trim, 4);
-    margin: 0 -20px -20px;
-  }
 }
 
 /**
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
index 2955e2c40c..0f05414402 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
@@ -9,6 +9,58 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
       "ruleId": "1",
     }
   }
+  routes={
+    Array [
+      Object {
+        "path": "/",
+      },
+      Object {
+        "indexRoute": Object {},
+        "name": "Settings",
+        "newnew": true,
+        "path": "/settings/",
+      },
+      Object {
+        "name": "Organization",
+        "path": ":orgId/",
+      },
+      Object {
+        "name": "Project",
+        "path": ":projectId/",
+      },
+      Object {},
+      Object {
+        "indexRoute": Object {
+          "name": "General",
+        },
+      },
+      Object {
+        "indexRoute": Object {},
+        "name": "Alerts",
+        "path": "alerts/",
+      },
+      Object {
+        "childRoutes": Array [
+          Object {
+            "name": "New",
+            "path": "new/",
+          },
+          Object {
+            "name": "Edit",
+            "path": ":ruleId/",
+          },
+        ],
+        "component": null,
+        "indexRoute": Object {},
+        "name": "Rules",
+        "path": "rules/",
+      },
+      Object {
+        "name": "Edit",
+        "path": ":ruleId/",
+      },
+    ]
+  }
 >
   <SideEffect(DocumentTitle)
     title="Sentry"
@@ -79,6 +131,58 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
             "teams": Array [],
           }
         }
+        routes={
+          Array [
+            Object {
+              "path": "/",
+            },
+            Object {
+              "indexRoute": Object {},
+              "name": "Settings",
+              "newnew": true,
+              "path": "/settings/",
+            },
+            Object {
+              "name": "Organization",
+              "path": ":orgId/",
+            },
+            Object {
+              "name": "Project",
+              "path": ":projectId/",
+            },
+            Object {},
+            Object {
+              "indexRoute": Object {
+                "name": "General",
+              },
+            },
+            Object {
+              "indexRoute": Object {},
+              "name": "Alerts",
+              "path": "alerts/",
+            },
+            Object {
+              "childRoutes": Array [
+                Object {
+                  "name": "New",
+                  "path": "new/",
+                },
+                Object {
+                  "name": "Edit",
+                  "path": ":ruleId/",
+                },
+              ],
+              "component": null,
+              "indexRoute": Object {},
+              "name": "Rules",
+              "path": "rules/",
+            },
+            Object {
+              "name": "Edit",
+              "path": ":ruleId/",
+            },
+          ]
+        }
       >
         <form
           onSubmit={[Function]}
@@ -162,7 +266,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                     <hr />
                     <AlertRuleRow>
                       <h6
-                        className="css-1pc4igl-AlertRuleRow css-70hiur0"
+                        className="css-1pc4igl-AlertRuleRow css-1qt54040"
                       >
                         Every time 
                         <Select2Field
@@ -280,7 +384,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                       >
                         <RuleNodes>
                           <div
-                            className="css-wlwbnk-RuleNodes css-mr9tnj0"
+                            className="css-wlwbnk-RuleNodes css-e8p6eg0"
                           >
                             <RuleNode
                               data={
@@ -302,11 +406,11 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                             >
                               <RuleNodeRow>
                                 <div
-                                  className="css-1poe0fr-RuleNodeRow css-i92rqo0"
+                                  className="css-1poe0fr-RuleNodeRow css-1f92yv60"
                                 >
                                   <RuleNodeForm>
                                     <div
-                                      className="css-7h5qyd-RuleNodeForm css-i92rqo1"
+                                      className="css-7h5qyd-RuleNodeForm css-1f92yv61"
                                     >
                                       <input
                                         name="id"
@@ -318,7 +422,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                   </RuleNodeForm>
                                   <RuleNodeControls>
                                     <div
-                                      className="css-1d10zz4-RuleNodeControls css-i92rqo2"
+                                      className="css-1d10zz4-RuleNodeControls css-1f92yv62"
                                     >
                                       <Button
                                         disabled={false}
@@ -520,7 +624,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                       <div>
                         <RuleNodes>
                           <div
-                            className="css-wlwbnk-RuleNodes css-mr9tnj0"
+                            className="css-wlwbnk-RuleNodes css-e8p6eg0"
                           >
                             <RuleNode
                               data={
@@ -542,11 +646,11 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                             >
                               <RuleNodeRow>
                                 <div
-                                  className="css-1poe0fr-RuleNodeRow css-i92rqo0"
+                                  className="css-1poe0fr-RuleNodeRow css-1f92yv60"
                                 >
                                   <RuleNodeForm>
                                     <div
-                                      className="css-7h5qyd-RuleNodeForm css-i92rqo1"
+                                      className="css-7h5qyd-RuleNodeForm css-1f92yv61"
                                     >
                                       <input
                                         name="id"
@@ -558,7 +662,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                   </RuleNodeForm>
                                   <RuleNodeControls>
                                     <div
-                                      className="css-1d10zz4-RuleNodeControls css-i92rqo2"
+                                      className="css-1d10zz4-RuleNodeControls css-1f92yv62"
                                     >
                                       <Button
                                         disabled={false}
@@ -647,7 +751,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                     <hr />
                     <AlertRuleRow>
                       <h6
-                        className="css-1pc4igl-AlertRuleRow css-70hiur0"
+                        className="css-1pc4igl-AlertRuleRow css-1qt54040"
                       >
                         Perform these actions at most once every 
                         <Select2Field
@@ -797,38 +901,84 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                          for an issue.
                       </h6>
                     </AlertRuleRow>
-                    <div
-                      className="actions"
-                    >
-                      <Button
-                        disabled={false}
-                        priority="primary"
+                    <ActionBar>
+                      <div
+                        className="css-wq91e7-ActionBar css-1qt54042"
                       >
-                        <button
-                          className="button button-primary"
+                        <CancelButton
+                          to="/settings/org-slug/project-slug/alerts/rules/"
+                        >
+                          <Button
+                            className="css-1yc33o1-CancelButton css-1qt54041"
+                            disabled={false}
+                            to="/settings/org-slug/project-slug/alerts/rules/"
+                          >
+                            <Link
+                              className="css-1yc33o1-CancelButton css-1qt54041 button button-default"
+                              disabled={false}
+                              onClick={[Function]}
+                              onlyActiveOnIndex={false}
+                              role="button"
+                              style={Object {}}
+                              to="/settings/org-slug/project-slug/alerts/rules/"
+                            >
+                              <a
+                                className="css-1yc33o1-CancelButton css-1qt54041 button button-default"
+                                disabled={false}
+                                onClick={[Function]}
+                                role="button"
+                                style={Object {}}
+                              >
+                                <Flex
+                                  align="center"
+                                  className="button-label"
+                                >
+                                  <Base
+                                    align="center"
+                                    className="button-label css-5ipae5"
+                                  >
+                                    <div
+                                      className="button-label css-5ipae5"
+                                      is={null}
+                                    >
+                                      Cancel
+                                    </div>
+                                  </Base>
+                                </Flex>
+                              </a>
+                            </Link>
+                          </Button>
+                        </CancelButton>
+                        <Button
                           disabled={false}
-                          onClick={[Function]}
-                          role="button"
+                          priority="primary"
                         >
-                          <Flex
-                            align="center"
-                            className="button-label"
+                          <button
+                            className="button button-primary"
+                            disabled={false}
+                            onClick={[Function]}
+                            role="button"
                           >
-                            <Base
+                            <Flex
                               align="center"
-                              className="button-label css-5ipae5"
+                              className="button-label"
                             >
-                              <div
+                              <Base
+                                align="center"
                                 className="button-label css-5ipae5"
-                                is={null}
                               >
-                                Save Rule
-                              </div>
-                            </Base>
-                          </Flex>
-                        </button>
-                      </Button>
-                    </div>
+                                <div
+                                  className="button-label css-5ipae5"
+                                  is={null}
+                                >
+                                  Save Rule
+                                </div>
+                              </Base>
+                            </Flex>
+                          </button>
+                        </Button>
+                      </div>
+                    </ActionBar>
                   </div>
                 </PanelBody>
               </div>
@@ -849,6 +999,58 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
       "projectId": "project-slug",
     }
   }
+  routes={
+    Array [
+      Object {
+        "path": "/",
+      },
+      Object {
+        "indexRoute": Object {},
+        "name": "Settings",
+        "newnew": true,
+        "path": "/settings/",
+      },
+      Object {
+        "name": "Organization",
+        "path": ":orgId/",
+      },
+      Object {
+        "name": "Project",
+        "path": ":projectId/",
+      },
+      Object {},
+      Object {
+        "indexRoute": Object {
+          "name": "General",
+        },
+      },
+      Object {
+        "indexRoute": Object {},
+        "name": "Alerts",
+        "path": "alerts/",
+      },
+      Object {
+        "childRoutes": Array [
+          Object {
+            "name": "New",
+            "path": "new/",
+          },
+          Object {
+            "name": "Edit",
+            "path": ":ruleId/",
+          },
+        ],
+        "component": null,
+        "indexRoute": Object {},
+        "name": "Rules",
+        "path": "rules/",
+      },
+      Object {
+        "name": "Edit",
+        "path": ":ruleId/",
+      },
+    ]
+  }
 >
   <SideEffect(DocumentTitle)
     title="Sentry"
@@ -918,6 +1120,58 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
             "teams": Array [],
           }
         }
+        routes={
+          Array [
+            Object {
+              "path": "/",
+            },
+            Object {
+              "indexRoute": Object {},
+              "name": "Settings",
+              "newnew": true,
+              "path": "/settings/",
+            },
+            Object {
+              "name": "Organization",
+              "path": ":orgId/",
+            },
+            Object {
+              "name": "Project",
+              "path": ":projectId/",
+            },
+            Object {},
+            Object {
+              "indexRoute": Object {
+                "name": "General",
+              },
+            },
+            Object {
+              "indexRoute": Object {},
+              "name": "Alerts",
+              "path": "alerts/",
+            },
+            Object {
+              "childRoutes": Array [
+                Object {
+                  "name": "New",
+                  "path": "new/",
+                },
+                Object {
+                  "name": "Edit",
+                  "path": ":ruleId/",
+                },
+              ],
+              "component": null,
+              "indexRoute": Object {},
+              "name": "Rules",
+              "path": "rules/",
+            },
+            Object {
+              "name": "Edit",
+              "path": ":ruleId/",
+            },
+          ]
+        }
       >
         <form
           onSubmit={[Function]}
@@ -1001,7 +1255,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                     <hr />
                     <AlertRuleRow>
                       <h6
-                        className="css-1pc4igl-AlertRuleRow css-70hiur0"
+                        className="css-1pc4igl-AlertRuleRow css-1qt54040"
                       >
                         Every time 
                         <Select2Field
@@ -1113,7 +1367,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                       >
                         <RuleNodes>
                           <div
-                            className="css-wlwbnk-RuleNodes css-mr9tnj0"
+                            className="css-wlwbnk-RuleNodes css-e8p6eg0"
                           />
                         </RuleNodes>
                         <fieldset>
@@ -1267,7 +1521,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                       <div>
                         <RuleNodes>
                           <div
-                            className="css-wlwbnk-RuleNodes css-mr9tnj0"
+                            className="css-wlwbnk-RuleNodes css-e8p6eg0"
                           />
                         </RuleNodes>
                         <fieldset>
@@ -1315,7 +1569,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                     <hr />
                     <AlertRuleRow>
                       <h6
-                        className="css-1pc4igl-AlertRuleRow css-70hiur0"
+                        className="css-1pc4igl-AlertRuleRow css-1qt54040"
                       >
                         Perform these actions at most once every 
                         <Select2Field
@@ -1466,38 +1720,84 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                          for an issue.
                       </h6>
                     </AlertRuleRow>
-                    <div
-                      className="actions"
-                    >
-                      <Button
-                        disabled={false}
-                        priority="primary"
+                    <ActionBar>
+                      <div
+                        className="css-wq91e7-ActionBar css-1qt54042"
                       >
-                        <button
-                          className="button button-primary"
+                        <CancelButton
+                          to="/settings/org-slug/project-slug/alerts/rules/"
+                        >
+                          <Button
+                            className="css-1yc33o1-CancelButton css-1qt54041"
+                            disabled={false}
+                            to="/settings/org-slug/project-slug/alerts/rules/"
+                          >
+                            <Link
+                              className="css-1yc33o1-CancelButton css-1qt54041 button button-default"
+                              disabled={false}
+                              onClick={[Function]}
+                              onlyActiveOnIndex={false}
+                              role="button"
+                              style={Object {}}
+                              to="/settings/org-slug/project-slug/alerts/rules/"
+                            >
+                              <a
+                                className="css-1yc33o1-CancelButton css-1qt54041 button button-default"
+                                disabled={false}
+                                onClick={[Function]}
+                                role="button"
+                                style={Object {}}
+                              >
+                                <Flex
+                                  align="center"
+                                  className="button-label"
+                                >
+                                  <Base
+                                    align="center"
+                                    className="button-label css-5ipae5"
+                                  >
+                                    <div
+                                      className="button-label css-5ipae5"
+                                      is={null}
+                                    >
+                                      Cancel
+                                    </div>
+                                  </Base>
+                                </Flex>
+                              </a>
+                            </Link>
+                          </Button>
+                        </CancelButton>
+                        <Button
                           disabled={false}
-                          onClick={[Function]}
-                          role="button"
+                          priority="primary"
                         >
-                          <Flex
-                            align="center"
-                            className="button-label"
+                          <button
+                            className="button button-primary"
+                            disabled={false}
+                            onClick={[Function]}
+                            role="button"
                           >
-                            <Base
+                            <Flex
                               align="center"
-                              className="button-label css-5ipae5"
+                              className="button-label"
                             >
-                              <div
+                              <Base
+                                align="center"
                                 className="button-label css-5ipae5"
-                                is={null}
                               >
-                                Save Rule
-                              </div>
-                            </Base>
-                          </Flex>
-                        </button>
-                      </Button>
-                    </div>
+                                <div
+                                  className="button-label css-5ipae5"
+                                  is={null}
+                                >
+                                  Save Rule
+                                </div>
+                              </Base>
+                            </Flex>
+                          </button>
+                        </Button>
+                      </div>
+                    </ActionBar>
                   </div>
                 </PanelBody>
               </div>
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap
index afc59a2fda..66c0e0584c 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap
@@ -10,47 +10,24 @@ exports[`projectAlertRules renders 1`] = `
   }
   routes={Array []}
 >
-  <div>
-    <SettingsPageHeading
-      action={
-        <Button
-          disabled={false}
-          icon="icon-circle-add"
-          priority="primary"
-          size="small"
-          to="new/"
-        >
-          New Alert Rule
-        </Button>
-      }
-      tabs={
-        <ul
-          className="nav nav-tabs"
-          style={
-            Object {
-              "borderBottom": "1px solid #ddd",
-            }
-          }
-        >
-          <ListLink
-            activeClassName="active"
-            index={true}
-            to="alerts/"
-          >
-            Settings
-          </ListLink>
-          <ListLink
-            activeClassName="active"
-            index={false}
-            to=""
-          >
-            Rules
-          </ListLink>
-        </ul>
-      }
-      title="Alerts"
+  <SideEffect(DocumentTitle)
+    title="Sentry"
+  >
+    <DocumentTitle
+      title="Sentry"
     >
-      <Wrapper
+      <SettingsPageHeading
+        action={
+          <Button
+            disabled={false}
+            icon="icon-circle-add"
+            priority="primary"
+            size="small"
+            to="new/"
+          >
+            New Alert Rule
+          </Button>
+        }
         tabs={
           <ul
             className="nav nav-tabs"
@@ -62,8 +39,8 @@ exports[`projectAlertRules renders 1`] = `
           >
             <ListLink
               activeClassName="active"
-              index={true}
-              to="alerts/"
+              index={false}
+              to="alerts"
             >
               Settings
             </ListLink>
@@ -76,282 +53,297 @@ exports[`projectAlertRules renders 1`] = `
             </ListLink>
           </ul>
         }
+        title="Alerts"
       >
-        <div
-          className="css-foidy-Wrapper css-17jmgia0"
+        <Wrapper
+          tabs={
+            <ul
+              className="nav nav-tabs"
+              style={
+                Object {
+                  "borderBottom": "1px solid #ddd",
+                }
+              }
+            >
+              <ListLink
+                activeClassName="active"
+                index={false}
+                to="alerts"
+              >
+                Settings
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                to=""
+              >
+                Rules
+              </ListLink>
+            </ul>
+          }
         >
-          <Flex
-            align="center"
+          <div
+            className="css-foidy-Wrapper css-17jmgia0"
           >
-            <Base
+            <Flex
               align="center"
-              className="css-5ipae5"
             >
-              <div
+              <Base
+                align="center"
                 className="css-5ipae5"
-                is={null}
               >
-                <Title>
-                  <div
-                    className="css-zmdcxu-Title css-17jmgia1"
-                  >
-                    Alerts
-                  </div>
-                </Title>
-                <div>
-                  <Button
-                    disabled={false}
-                    icon="icon-circle-add"
-                    priority="primary"
-                    size="small"
-                    to="new/"
-                  >
-                    <Link
-                      className="button button-primary button-sm"
+                <div
+                  className="css-5ipae5"
+                  is={null}
+                >
+                  <Title>
+                    <div
+                      className="css-zmdcxu-Title css-17jmgia1"
+                    >
+                      Alerts
+                    </div>
+                  </Title>
+                  <div>
+                    <Button
                       disabled={false}
-                      onClick={[Function]}
-                      onlyActiveOnIndex={false}
-                      role="button"
-                      style={Object {}}
+                      icon="icon-circle-add"
+                      priority="primary"
+                      size="small"
                       to="new/"
                     >
-                      <a
+                      <Link
                         className="button button-primary button-sm"
                         disabled={false}
                         onClick={[Function]}
+                        onlyActiveOnIndex={false}
                         role="button"
                         style={Object {}}
+                        to="new/"
                       >
-                        <Flex
-                          align="center"
-                          className="button-label"
+                        <a
+                          className="button button-primary button-sm"
+                          disabled={false}
+                          onClick={[Function]}
+                          role="button"
+                          style={Object {}}
                         >
-                          <Base
+                          <Flex
                             align="center"
-                            className="button-label css-5ipae5"
+                            className="button-label"
                           >
-                            <div
+                            <Base
+                              align="center"
                               className="button-label css-5ipae5"
-                              is={null}
                             >
-                              <Icon
-                                size="small"
+                              <div
+                                className="button-label css-5ipae5"
+                                is={null}
                               >
-                                <Base
-                                  className="css-11bwulm-Icon css-1vxxnb60"
+                                <Icon
                                   size="small"
                                 >
-                                  <div
+                                  <Base
                                     className="css-11bwulm-Icon css-1vxxnb60"
-                                    is={null}
                                     size="small"
                                   >
-                                    <StyledInlineSvg
-                                      size="12px"
-                                      src="icon-circle-add"
+                                    <div
+                                      className="css-11bwulm-Icon css-1vxxnb60"
+                                      is={null}
+                                      size="small"
                                     >
-                                      <InlineSvg
-                                        className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
+                                      <StyledInlineSvg
                                         size="12px"
                                         src="icon-circle-add"
                                       >
-                                        <StyledSvg
+                                        <InlineSvg
                                           className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
-                                          height="12px"
-                                          viewBox={Object {}}
-                                          width="12px"
+                                          size="12px"
+                                          src="icon-circle-add"
                                         >
-                                          <svg
-                                            className="css-1vxxnb61 css-1rlza0i-StyledSvg css-adkcw30"
+                                          <StyledSvg
+                                            className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
                                             height="12px"
                                             viewBox={Object {}}
                                             width="12px"
                                           >
-                                            <use
-                                              href="#test"
-                                              xlinkHref="#test"
-                                            />
-                                          </svg>
-                                        </StyledSvg>
-                                      </InlineSvg>
-                                    </StyledInlineSvg>
-                                  </div>
-                                </Base>
-                              </Icon>
-                              New Alert Rule
-                            </div>
-                          </Base>
-                        </Flex>
-                      </a>
-                    </Link>
-                  </Button>
+                                            <svg
+                                              className="css-1vxxnb61 css-1rlza0i-StyledSvg css-adkcw30"
+                                              height="12px"
+                                              viewBox={Object {}}
+                                              width="12px"
+                                            >
+                                              <use
+                                                href="#test"
+                                                xlinkHref="#test"
+                                              />
+                                            </svg>
+                                          </StyledSvg>
+                                        </InlineSvg>
+                                      </StyledInlineSvg>
+                                    </div>
+                                  </Base>
+                                </Icon>
+                                New Alert Rule
+                              </div>
+                            </Base>
+                          </Flex>
+                        </a>
+                      </Link>
+                    </Button>
+                  </div>
                 </div>
-              </div>
-            </Base>
-          </Flex>
-          <div>
-            <ul
-              className="nav nav-tabs"
-              style={
-                Object {
-                  "borderBottom": "1px solid #ddd",
+              </Base>
+            </Flex>
+            <div>
+              <ul
+                className="nav nav-tabs"
+                style={
+                  Object {
+                    "borderBottom": "1px solid #ddd",
+                  }
                 }
-              }
-            >
-              <ListLink
-                activeClassName="active"
-                index={true}
-                to="alerts/"
               >
-                <li
-                  className=""
+                <ListLink
+                  activeClassName="active"
+                  index={false}
+                  to="alerts"
                 >
-                  <Link
-                    onlyActiveOnIndex={true}
-                    style={Object {}}
-                    to="alerts/"
+                  <li
+                    className=""
                   >
-                    <a
-                      onClick={[Function]}
+                    <Link
+                      onlyActiveOnIndex={false}
                       style={Object {}}
+                      to="alerts"
                     >
-                      Settings
-                    </a>
-                  </Link>
-                </li>
-              </ListLink>
-              <ListLink
-                activeClassName="active"
-                index={false}
-                to=""
-              >
-                <li
-                  className=""
+                      <a
+                        onClick={[Function]}
+                        style={Object {}}
+                      >
+                        Settings
+                      </a>
+                    </Link>
+                  </li>
+                </ListLink>
+                <ListLink
+                  activeClassName="active"
+                  index={false}
+                  to=""
                 >
-                  <Link
-                    onlyActiveOnIndex={false}
-                    style={Object {}}
-                    to=""
+                  <li
+                    className=""
                   >
-                    <a
+                    <Link
+                      onlyActiveOnIndex={false}
                       style={Object {}}
+                      to=""
                     >
-                      Rules
-                    </a>
-                  </Link>
-                </li>
-              </ListLink>
-            </ul>
+                      <a
+                        style={Object {}}
+                      >
+                        Rules
+                      </a>
+                    </Link>
+                  </li>
+                </ListLink>
+              </ul>
+            </div>
           </div>
-        </div>
-      </Wrapper>
-    </SettingsPageHeading>
-    <div
-      className="rules-list"
-    >
-      <RuleRow
-        data={
-          Object {
-            "actions": Array [
-              Object {
-                "id": "sentry.rules.actions.notify1",
-                "name": "Send a notification to all services",
-              },
-            ],
-            "conditions": Array [
-              Object {
-                "id": "sentry.rules.conditions.1",
-                "name": "An alert is first seen",
-              },
-            ],
-            "environment": "staging",
-            "id": "1",
-            "name": "My alert rule",
+        </Wrapper>
+      </SettingsPageHeading>
+      <div
+        className="rules-list"
+      >
+        <RuleRow
+          data={
+            Object {
+              "actions": Array [
+                Object {
+                  "id": "sentry.rules.actions.notify1",
+                  "name": "Send a notification to all services",
+                },
+              ],
+              "conditions": Array [
+                Object {
+                  "id": "sentry.rules.conditions.1",
+                  "name": "An alert is first seen",
+                },
+              ],
+              "environment": "staging",
+              "id": "1",
+              "name": "My alert rule",
+            }
           }
-        }
-        key="1"
-        onDelete={[Function]}
-        orgId="org1"
-        params={
-          Object {
-            "orgId": "org1",
-            "projectId": "project1",
+          key="1"
+          onDelete={[Function]}
+          orgId="org1"
+          params={
+            Object {
+              "orgId": "org1",
+              "projectId": "project1",
+            }
           }
-        }
-        projectId="project1"
-        routes={Array []}
-      >
-        <Panel>
-          <StyledPanel>
-            <div
-              className="css-wfa8ap-StyledPanel css-5bw71w0"
-            >
-              <PanelHeader
-                align="center"
-                className="css-1lx593h"
-                justify="space-between"
+          projectId="project1"
+          routes={Array []}
+        >
+          <Panel>
+            <StyledPanel>
+              <div
+                className="css-wfa8ap-StyledPanel css-5bw71w0"
               >
-                <StyledPanelHeader
+                <PanelHeader
                   align="center"
                   className="css-1lx593h"
                   justify="space-between"
                 >
-                  <Component
+                  <StyledPanelHeader
                     align="center"
-                    className="css-18dfj8-StyledPanelHeader css-1t1cqk30"
+                    className="css-1lx593h"
                     justify="space-between"
                   >
-                    <Flex
+                    <Component
                       align="center"
                       className="css-18dfj8-StyledPanelHeader css-1t1cqk30"
                       justify="space-between"
                     >
-                      <Base
+                      <Flex
                         align="center"
-                        className="css-1t1cqk30 css-mmen68"
+                        className="css-18dfj8-StyledPanelHeader css-1t1cqk30"
                         justify="space-between"
                       >
-                        <div
+                        <Base
+                          align="center"
                           className="css-1t1cqk30 css-mmen68"
-                          is={null}
+                          justify="space-between"
                         >
-                          <TextColorLink
-                            to="1/"
+                          <div
+                            className="css-1t1cqk30 css-mmen68"
+                            is={null}
                           >
-                            <Link
-                              className="css-1763h46-TextColorLink css-fislzb0"
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
+                            <TextColorLink
                               to="1/"
                             >
-                              <a
-                                className="css-1763h46-TextColorLink css-fislzb0"
-                                onClick={[Function]}
+                              <Link
+                                className="css-1763h46-TextColorLink css-ksblzz0"
+                                onlyActiveOnIndex={false}
                                 style={Object {}}
+                                to="1/"
                               >
-                                My alert rule
-                                 - 
-                                All Environments
-                              </a>
-                            </Link>
-                          </TextColorLink>
-                          <div>
-                            <Button
-                              disabled={false}
-                              size="small"
-                              style={
-                                Object {
-                                  "marginRight": 5,
-                                }
-                              }
-                              to="1/"
-                            >
-                              <Link
-                                className="button button-default button-sm"
+                                <a
+                                  className="css-1763h46-TextColorLink css-ksblzz0"
+                                  onClick={[Function]}
+                                  style={Object {}}
+                                >
+                                  My alert rule
+                                   - 
+                                  All Environments
+                                </a>
+                              </Link>
+                            </TextColorLink>
+                            <div>
+                              <Button
                                 disabled={false}
-                                onClick={[Function]}
-                                onlyActiveOnIndex={false}
-                                role="button"
+                                size="small"
                                 style={
                                   Object {
                                     "marginRight": 5,
@@ -359,104 +351,93 @@ exports[`projectAlertRules renders 1`] = `
                                 }
                                 to="1/"
                               >
-                                <a
+                                <Link
                                   className="button button-default button-sm"
                                   disabled={false}
                                   onClick={[Function]}
+                                  onlyActiveOnIndex={false}
                                   role="button"
                                   style={
                                     Object {
                                       "marginRight": 5,
                                     }
                                   }
+                                  to="1/"
                                 >
-                                  <Flex
-                                    align="center"
-                                    className="button-label"
+                                  <a
+                                    className="button button-default button-sm"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                    role="button"
+                                    style={
+                                      Object {
+                                        "marginRight": 5,
+                                      }
+                                    }
                                   >
-                                    <Base
+                                    <Flex
                                       align="center"
-                                      className="button-label css-5ipae5"
+                                      className="button-label"
                                     >
-                                      <div
+                                      <Base
+                                        align="center"
                                         className="button-label css-5ipae5"
-                                        is={null}
                                       >
-                                        Edit Rule
-                                      </div>
-                                    </Base>
-                                  </Flex>
-                                </a>
-                              </Link>
-                            </Button>
-                            <Confirm
-                              cancelText="Cancel"
-                              confirmText="Confirm"
-                              message="Are you sure you want to remove this rule?"
-                              onConfirm={[Function]}
-                              priority="primary"
-                            >
-                              <Button
-                                disabled={false}
-                                onClick={[Function]}
-                                size="small"
+                                        <div
+                                          className="button-label css-5ipae5"
+                                          is={null}
+                                        >
+                                          Edit Rule
+                                        </div>
+                                      </Base>
+                                    </Flex>
+                                  </a>
+                                </Link>
+                              </Button>
+                              <Confirm
+                                cancelText="Cancel"
+                                confirmText="Confirm"
+                                message="Are you sure you want to remove this rule?"
+                                onConfirm={[Function]}
+                                priority="primary"
                               >
-                                <button
-                                  className="button button-default button-sm"
+                                <Button
                                   disabled={false}
                                   onClick={[Function]}
-                                  role="button"
+                                  size="small"
                                 >
-                                  <Flex
-                                    align="center"
-                                    className="button-label"
+                                  <button
+                                    className="button button-default button-sm"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                    role="button"
                                   >
-                                    <Base
+                                    <Flex
                                       align="center"
-                                      className="button-label css-5ipae5"
+                                      className="button-label"
                                     >
-                                      <div
+                                      <Base
+                                        align="center"
                                         className="button-label css-5ipae5"
-                                        is={null}
                                       >
-                                        <span
-                                          className="icon-trash"
-                                        />
-                                      </div>
-                                    </Base>
-                                  </Flex>
-                                </button>
-                              </Button>
-                              <Modal
-                                animation={false}
-                                autoFocus={true}
-                                backdrop={true}
-                                bsClass="modal"
-                                dialogComponentClass={[Function]}
-                                enforceFocus={true}
-                                keyboard={true}
-                                manager={
-                                  ModalManager {
-                                    "add": [Function],
-                                    "containers": Array [],
-                                    "data": Array [],
-                                    "handleContainerOverflow": true,
-                                    "hideSiblingNodes": true,
-                                    "isTopModal": [Function],
-                                    "modals": Array [],
-                                    "remove": [Function],
-                                  }
-                                }
-                                onHide={[Function]}
-                                renderBackdrop={[Function]}
-                                restoreFocus={true}
-                                show={false}
-                              >
+                                        <div
+                                          className="button-label css-5ipae5"
+                                          is={null}
+                                        >
+                                          <span
+                                            className="icon-trash"
+                                          />
+                                        </div>
+                                      </Base>
+                                    </Flex>
+                                  </button>
+                                </Button>
                                 <Modal
+                                  animation={false}
                                   autoFocus={true}
                                   backdrop={true}
-                                  backdropClassName="modal-backdrop"
-                                  containerClassName="modal-open"
+                                  bsClass="modal"
+                                  dialogComponentClass={[Function]}
                                   enforceFocus={true}
                                   keyboard={true}
                                   manager={
@@ -471,114 +452,139 @@ exports[`projectAlertRules renders 1`] = `
                                       "remove": [Function],
                                     }
                                   }
-                                  onEntering={[Function]}
-                                  onExited={[Function]}
                                   onHide={[Function]}
                                   renderBackdrop={[Function]}
                                   restoreFocus={true}
                                   show={false}
-                                />
-                              </Modal>
-                            </Confirm>
+                                >
+                                  <Modal
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    backdropClassName="modal-backdrop"
+                                    containerClassName="modal-open"
+                                    enforceFocus={true}
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "add": [Function],
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "isTopModal": [Function],
+                                        "modals": Array [],
+                                        "remove": [Function],
+                                      }
+                                    }
+                                    onEntering={[Function]}
+                                    onExited={[Function]}
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  />
+                                </Modal>
+                              </Confirm>
+                            </div>
                           </div>
-                        </div>
-                      </Base>
-                    </Flex>
-                  </Component>
-                </StyledPanelHeader>
-              </PanelHeader>
-              <PanelBody
-                direction="column"
-                disablePadding={true}
-                flex={false}
-              >
-                <div
-                  className=""
+                        </Base>
+                      </Flex>
+                    </Component>
+                  </StyledPanelHeader>
+                </PanelHeader>
+                <PanelBody
+                  direction="column"
+                  disablePadding={true}
+                  flex={false}
                 >
-                  <RuleDescriptionRow>
-                    <div
-                      className="css-16pvk6d-RuleDescriptionRow css-fislzb1"
-                    >
-                      <RuleDescriptionColumn>
-                        <div
-                          className="css-ta36pl-RuleDescriptionColumn css-fislzb2"
-                        >
-                          <Condition>
-                            <div
-                              className="css-1d9hhun-Condition css-fislzb3"
-                            >
-                              <h6>
-                                When 
-                                <strong />
-                                 of these conditions are met:
-                              </h6>
-                              <table
-                                className="conditions-list table"
+                  <div
+                    className=""
+                  >
+                    <RuleDescriptionRow>
+                      <div
+                        className="css-16pvk6d-RuleDescriptionRow css-ksblzz1"
+                      >
+                        <RuleDescriptionColumn>
+                          <div
+                            className="css-ta36pl-RuleDescriptionColumn css-ksblzz2"
+                          >
+                            <Condition>
+                              <div
+                                className="css-1d9hhun-Condition css-ksblzz3"
                               >
-                                <tbody>
-                                  <tr
-                                    key="0"
-                                  >
-                                    <td>
-                                      An alert is first seen
-                                    </td>
-                                  </tr>
-                                </tbody>
-                              </table>
-                            </div>
-                          </Condition>
-                        </div>
-                      </RuleDescriptionColumn>
-                      <RuleDescriptionColumn>
-                        <div
-                          className="css-ta36pl-RuleDescriptionColumn css-fislzb2"
-                        >
-                          <Condition>
-                            <div
-                              className="css-1d9hhun-Condition css-fislzb3"
-                            >
-                              <h6>
-                                Take these actions at most
-                                 
-                                <strong>
-                                  once every 
-                                  <Duration
-                                    seconds={NaN}
-                                  >
-                                    <span>
-                                      NaN ms
-                                    </span>
-                                  </Duration>
-                                </strong>
-                                 
-                                for an issue:
-                              </h6>
-                              <table
-                                className="actions-list table"
+                                <h6>
+                                  When 
+                                  <strong />
+                                   of these conditions are met:
+                                </h6>
+                                <table
+                                  className="conditions-list table"
+                                >
+                                  <tbody>
+                                    <tr
+                                      key="0"
+                                    >
+                                      <td>
+                                        An alert is first seen
+                                      </td>
+                                    </tr>
+                                  </tbody>
+                                </table>
+                              </div>
+                            </Condition>
+                          </div>
+                        </RuleDescriptionColumn>
+                        <RuleDescriptionColumn>
+                          <div
+                            className="css-ta36pl-RuleDescriptionColumn css-ksblzz2"
+                          >
+                            <Condition>
+                              <div
+                                className="css-1d9hhun-Condition css-ksblzz3"
                               >
-                                <tbody>
-                                  <tr
-                                    key="0"
-                                  >
-                                    <td>
-                                      Send a notification to all services
-                                    </td>
-                                  </tr>
-                                </tbody>
-                              </table>
-                            </div>
-                          </Condition>
-                        </div>
-                      </RuleDescriptionColumn>
-                    </div>
-                  </RuleDescriptionRow>
-                </div>
-              </PanelBody>
-            </div>
-          </StyledPanel>
-        </Panel>
-      </RuleRow>
-    </div>
-  </div>
+                                <h6>
+                                  Take these actions at most
+                                   
+                                  <strong>
+                                    once every 
+                                    <Duration
+                                      seconds={NaN}
+                                    >
+                                      <span>
+                                        NaN ms
+                                      </span>
+                                    </Duration>
+                                  </strong>
+                                   
+                                  for an issue:
+                                </h6>
+                                <table
+                                  className="actions-list table"
+                                >
+                                  <tbody>
+                                    <tr
+                                      key="0"
+                                    >
+                                      <td>
+                                        Send a notification to all services
+                                      </td>
+                                    </tr>
+                                  </tbody>
+                                </table>
+                              </div>
+                            </Condition>
+                          </div>
+                        </RuleDescriptionColumn>
+                      </div>
+                    </RuleDescriptionRow>
+                  </div>
+                </PanelBody>
+              </div>
+            </StyledPanel>
+          </Panel>
+        </RuleRow>
+      </div>
+    </DocumentTitle>
+  </SideEffect(DocumentTitle)>
 </ProjectAlertRules>
 `;
diff --git a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
index 01885c3ff3..b2efdecb5a 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
@@ -4,7 +4,7 @@ exports[`ProjectAlertSettings render() renders 1`] = `
 <SideEffect(DocumentTitle)
   title="Project Alert Settings - Sentry"
 >
-  <div>
+  <React.Fragment>
     <SettingsPageHeading
       action={
         <Button
@@ -185,6 +185,6 @@ exports[`ProjectAlertSettings render() renders 1`] = `
         }
       }
     />
-  </div>
+  </React.Fragment>
 </SideEffect(DocumentTitle)>
 `;
diff --git a/tests/js/spec/views/projectAlertRuleDetails.spec.jsx b/tests/js/spec/views/projectAlertRuleDetails.spec.jsx
index 0eafb0f9b6..a6485e51ab 100644
--- a/tests/js/spec/views/projectAlertRuleDetails.spec.jsx
+++ b/tests/js/spec/views/projectAlertRuleDetails.spec.jsx
@@ -2,12 +2,49 @@ import React from 'react';
 import {mount} from 'enzyme';
 import {browserHistory} from 'react-router';
 
-import ProjectAlertRuleDetails from 'app/views/projectAlertRuleDetails';
+import ProjectAlertRuleDetails from 'app/views/settings/projectAlerts/projectAlertRuleDetails';
 import EnvironmentStore from 'app/stores/environmentStore';
 
 jest.mock('jquery');
 
 describe('ProjectAlertRuleDetails', function() {
+  let projectAlertRuleDetailsRoutes = [
+    {
+      path: '/',
+    },
+    {
+      newnew: true,
+      path: '/settings/',
+      name: 'Settings',
+      indexRoute: {},
+    },
+    {
+      name: 'Organization',
+      path: ':orgId/',
+    },
+    {
+      name: 'Project',
+      path: ':projectId/',
+    },
+    {},
+    {
+      indexRoute: {name: 'General'},
+    },
+    {
+      name: 'Alerts',
+      path: 'alerts/',
+      indexRoute: {},
+    },
+    {
+      path: 'rules/',
+      name: 'Rules',
+      component: null,
+      indexRoute: {},
+      childRoutes: [{path: 'new/', name: 'New'}, {path: ':ruleId/', name: 'Edit'}],
+    },
+    {path: ':ruleId/', name: 'Edit'},
+  ];
+
   beforeEach(function() {
     browserHistory.replace = jest.fn();
     MockApiClient.addMockResponse({
@@ -38,6 +75,7 @@ describe('ProjectAlertRuleDetails', function() {
 
       wrapper = mount(
         <ProjectAlertRuleDetails
+          routes={projectAlertRuleDetailsRoutes}
           params={{orgId: 'org-slug', projectId: 'project-slug'}}
         />,
         {
@@ -78,7 +116,7 @@ describe('ProjectAlertRuleDetails', function() {
       });
 
       it('updates URL', function() {
-        let url = '/org-slug/project-slug/settings/alerts/rules/1/';
+        let url = '/settings/org-slug/project-slug/alerts/rules/1/';
         expect(browserHistory.replace).toHaveBeenCalledWith(url);
       });
     });
@@ -96,6 +134,7 @@ describe('ProjectAlertRuleDetails', function() {
 
       wrapper = mount(
         <ProjectAlertRuleDetails
+          routes={projectAlertRuleDetailsRoutes}
           params={{orgId: 'org-slug', projectId: 'project-slug', ruleId: '1'}}
         />,
         {
diff --git a/tests/js/spec/views/projectAlertRules.spec.jsx b/tests/js/spec/views/projectAlertRules.spec.jsx
index 8f1aa28cac..6ed3f165bf 100644
--- a/tests/js/spec/views/projectAlertRules.spec.jsx
+++ b/tests/js/spec/views/projectAlertRules.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import ProjectAlertRules from 'app/views/projectAlertRules';
+import ProjectAlertRules from 'app/views/settings/projectAlerts/projectAlertRules';
 
 describe('projectAlertRules', function() {
   let deleteMock;
diff --git a/tests/js/spec/views/projectAlertSettings.spec.jsx b/tests/js/spec/views/projectAlertSettings.spec.jsx
index 513f6d22e8..24f17512e0 100644
--- a/tests/js/spec/views/projectAlertSettings.spec.jsx
+++ b/tests/js/spec/views/projectAlertSettings.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
-import ProjectAlertSettings from 'app/views/projectAlertSettings';
+import ProjectAlertSettings from 'app/views/settings/projectAlerts/projectAlertSettings';
 
 describe('ProjectAlertSettings', function() {
   let org;
