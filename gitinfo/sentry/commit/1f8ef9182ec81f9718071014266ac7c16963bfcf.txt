commit 1f8ef9182ec81f9718071014266ac7c16963bfcf
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Sep 11 18:51:39 2014 -0700

    Move bookmark/resolve actions into group details

diff --git a/src/sentry/api/endpoints/group_bookmark.py b/src/sentry/api/endpoints/group_bookmark.py
deleted file mode 100644
index db1b2a07e0..0000000000
--- a/src/sentry/api/endpoints/group_bookmark.py
+++ /dev/null
@@ -1,24 +0,0 @@
-from sentry.api.base import Endpoint
-from sentry.api.permissions import assert_perm
-from sentry.models import Group, GroupBookmark
-
-from rest_framework.response import Response
-
-
-class GroupBookmarkEndpoint(Endpoint):
-    def post(self, request, group_id):
-        group = Group.objects.get(
-            id=group_id,
-        )
-
-        assert_perm(group, request.user, request.auth)
-
-        bookmark = GroupBookmark(
-            project=group.project,
-            group=group,
-            user=request.user,
-        )
-
-        bookmark.save()
-
-        return Response()
diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index 6fcd6566a5..7c74da97bc 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -1,9 +1,28 @@
+from __future__ import absolute_import, print_function
+
+from django.utils import timezone
+from rest_framework import serializers
 from rest_framework.response import Response
 
 from sentry.api.base import Endpoint
 from sentry.api.permissions import assert_perm
 from sentry.api.serializers import serialize
-from sentry.models import Activity, Group, GroupSeen
+from sentry.db.models.query import create_or_update
+from sentry.constants import STATUS_RESOLVED, STATUS_UNRESOLVED, STATUS_MUTED
+from sentry.models import Activity, Group, GroupBookmark, GroupSeen
+
+STATUS_CHOICES = {
+    'resolved': STATUS_RESOLVED,
+    'unresolved': STATUS_UNRESOLVED,
+    'muted': STATUS_MUTED,
+}
+
+
+class GroupSerializer(serializers.Serializer):
+    status = serializers.ChoiceField(choices=zip(
+        STATUS_CHOICES.keys(), STATUS_CHOICES.keys()
+    ))
+    isBookmarked = serializers.BooleanField()
 
 
 class GroupDetailsEndpoint(Endpoint):
@@ -61,3 +80,54 @@ class GroupDetailsEndpoint(Endpoint):
         })
 
         return Response(data)
+
+    def post(self, request, group_id):
+        group = Group.objects.get(
+            id=group_id,
+        )
+
+        assert_perm(group, request.user, request.auth)
+
+        serializer = GroupSerializer(data=request.DATA, partial=True)
+        if not serializer.is_valid():
+            return Response(status=400)
+
+        result = serializer.object
+        if result.get('status') == 'resolved':
+            now = timezone.now()
+
+            group.resolved_at = now
+            group.status = STATUS_RESOLVED
+
+            happened = Group.objects.filter(
+                id=group.id,
+            ).exclude(status=STATUS_RESOLVED).update(
+                status=STATUS_RESOLVED,
+                resolved_at=now,
+            )
+
+            if happened:
+                create_or_update(
+                    Activity,
+                    project=group.project,
+                    group=group,
+                    type=Activity.SET_RESOLVED,
+                    user=request.user,
+                )
+        elif result.get('status'):
+            group.status = STATUS_CHOICES[result['status']]
+            group.save()
+
+        if result.get('isBookmarked'):
+            GroupBookmark.objects.get_or_create(
+                project=group.project,
+                group=group,
+                user=request.user,
+            )
+        elif result.get('isBookmarked') is False:
+            GroupBookmark.objects.filter(
+                group=group,
+                user=request.user,
+            ).delete()
+
+        return Response(serialize(group, request.user))
diff --git a/src/sentry/api/endpoints/group_resolve.py b/src/sentry/api/endpoints/group_resolve.py
deleted file mode 100644
index 66f8edc8f5..0000000000
--- a/src/sentry/api/endpoints/group_resolve.py
+++ /dev/null
@@ -1,39 +0,0 @@
-from django.utils import timezone
-from rest_framework.response import Response
-
-from sentry.api.base import Endpoint
-from sentry.api.permissions import assert_perm
-from sentry.db.models import create_or_update
-from sentry.constants import STATUS_RESOLVED
-from sentry.models import Group, Activity
-
-
-class GroupResolveEndpoint(Endpoint):
-    def post(self, request, group_id):
-        group = Group.objects.get(
-            id=group_id,
-        )
-
-        assert_perm(group, request.user, request.auth)
-
-        now = timezone.now()
-
-        group.resolved_at = now
-
-        happened = Group.objects.filter(
-            id=group.id,
-        ).exclude(status=STATUS_RESOLVED).update(
-            status=STATUS_RESOLVED,
-            resolved_at=now,
-        )
-
-        if happened:
-            create_or_update(
-                Activity,
-                project=group.project,
-                group=group,
-                type=Activity.SET_RESOLVED,
-                user=request.user,
-            )
-
-        return Response()
diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 033ff21f0d..6b282f1eef 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -1,3 +1,5 @@
+from __future__ import absolute_import, print_function
+
 from collections import defaultdict
 from datetime import timedelta
 from django.core.urlresolvers import reverse
@@ -106,11 +108,7 @@ class GroupSerializer(Serializer):
             'lastSeen': obj.last_seen,
             'timeSpent': obj.avg_time_spent,
             'canResolve': user.is_authenticated(),
-            'status': {
-                'id': status,
-                'name': status_label,
-            },
-            'isResolved': obj.get_status() == STATUS_RESOLVED,
+            'status': status_label,
             'isPublic': obj.is_public,
             # 'score': getattr(obj, 'sort_value', 0),
             'project': {
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 25d3d104a2..bc1434d189 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -1,3 +1,5 @@
+from __future__ import absolute_import, print_function
+
 from django.conf.urls import patterns, url
 
 from .endpoints.auth_index import AuthIndexEndpoint
@@ -5,8 +7,6 @@ from .endpoints.catchall import CatchallEndpoint
 from .endpoints.event_details import EventDetailsEndpoint
 from .endpoints.group_assign import GroupAssignEndpoint
 from .endpoints.group_details import GroupDetailsEndpoint
-from .endpoints.group_resolve import GroupResolveEndpoint
-from .endpoints.group_bookmark import GroupBookmarkEndpoint
 from .endpoints.group_markseen import GroupMarkSeenEndpoint
 from .endpoints.group_delete import GroupDeleteEndpoint
 from .endpoints.group_events import GroupEventsEndpoint
@@ -97,12 +97,6 @@ urlpatterns = patterns(
     url(r'^groups/(?P<group_id>\d+)/assign/$',
         GroupAssignEndpoint.as_view(),
         name='sentry-api-0-group-assign'),
-    url(r'^groups/(?P<group_id>\d+)/resolve/$',
-        GroupResolveEndpoint.as_view(),
-        name='sentry-api-0-group-resolve'),
-    url(r'^groups/(?P<group_id>\d+)/bookmark/$',
-        GroupBookmarkEndpoint.as_view(),
-        name='sentry-api-0-group-bookmark'),
     url(r'^groups/(?P<group_id>\d+)/markseen/$',
         GroupMarkSeenEndpoint.as_view(),
         name='sentry-api-0-group-markseen'),
diff --git a/tests/sentry/api/endpoints/test_group_bookmark.py b/tests/sentry/api/endpoints/test_group_bookmark.py
deleted file mode 100644
index ecb714ba92..0000000000
--- a/tests/sentry/api/endpoints/test_group_bookmark.py
+++ /dev/null
@@ -1,22 +0,0 @@
-from django.core.urlresolvers import reverse
-
-from sentry.models import GroupBookmark
-from sentry.testutils import APITestCase
-
-
-class GroupBookmarkTest(APITestCase):
-    def test_simple(self):
-        self.login_as(user=self.user)
-
-        group = self.create_group()
-
-        url = reverse('sentry-api-0-group-bookmark', kwargs={
-            'group_id': group.id
-        })
-        response = self.client.post(url, format='json')
-
-        assert response.status_code == 200, response.content
-
-        # ensure we've created the bookmark
-        assert GroupBookmark.objects.filter(
-            group=group, user=self.user).exists()
diff --git a/tests/sentry/api/endpoints/test_group_details.py b/tests/sentry/api/endpoints/test_group_details.py
index eb513eb0d8..1c3513a9b0 100644
--- a/tests/sentry/api/endpoints/test_group_details.py
+++ b/tests/sentry/api/endpoints/test_group_details.py
@@ -1,4 +1,9 @@
+from __future__ import absolute_import, print_function
+
 from django.core.urlresolvers import reverse
+
+from sentry.constants import STATUS_RESOLVED
+from sentry.models import Group, GroupBookmark
 from sentry.testutils import APITestCase
 
 
@@ -15,3 +20,40 @@ class GroupDetailsTest(APITestCase):
 
         assert response.status_code == 200, response.content
         assert response.data['id'] == str(group.id)
+
+    def test_resolve(self):
+        self.login_as(user=self.user)
+
+        group = self.create_group()
+
+        url = reverse('sentry-api-0-group-details', kwargs={
+            'group_id': group.id,
+        })
+        response = self.client.post(url, data={
+            'status': 'resolved',
+        }, format='json')
+        assert response.status_code == 200, response.content
+
+        group = Group.objects.get(
+            id=group.id,
+            project=group.project.id,
+        )
+        assert group.status == STATUS_RESOLVED
+
+    def test_bookmark(self):
+        self.login_as(user=self.user)
+
+        group = self.create_group()
+
+        url = reverse('sentry-api-0-group-details', kwargs={
+            'group_id': group.id
+        })
+        response = self.client.post(url, data={
+            'isBookmarked': '1',
+        }, format='json')
+
+        assert response.status_code == 200, response.content
+
+        # ensure we've created the bookmark
+        assert GroupBookmark.objects.filter(
+            group=group, user=self.user).exists()
diff --git a/tests/sentry/api/endpoints/test_group_resolve.py b/tests/sentry/api/endpoints/test_group_resolve.py
deleted file mode 100644
index 54eb6b2c48..0000000000
--- a/tests/sentry/api/endpoints/test_group_resolve.py
+++ /dev/null
@@ -1,23 +0,0 @@
-from django.core.urlresolvers import reverse
-from sentry.constants import STATUS_RESOLVED
-from sentry.models import Group
-from sentry.testutils import APITestCase
-
-
-class GroupResolveTest(APITestCase):
-    def test_simple(self):
-        self.login_as(user=self.user)
-
-        group = self.create_group()
-
-        url = reverse('sentry-api-0-group-resolve', kwargs={
-            'group_id': group.id,
-        })
-        response = self.client.post(url, format='json')
-        assert response.status_code == 200, response.content
-
-        group = Group.objects.get(
-            id=group.id,
-            project=group.project.id,
-        )
-        assert group.status == STATUS_RESOLVED
