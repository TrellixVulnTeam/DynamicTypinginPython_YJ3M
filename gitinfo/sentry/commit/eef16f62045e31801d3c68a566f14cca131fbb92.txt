commit eef16f62045e31801d3c68a566f14cca131fbb92
Author: Mark Story <mark@sentry.io>
Date:   Tue Sep 10 12:52:57 2019 -0400

    fix(discover2) Add loading state (#14646)
    
    Add a loading state to the table so it doesn't appear laggy
    
    Fixes SEN-1020

diff --git a/src/sentry/static/sentry/app/components/loading/loadingContainer.jsx b/src/sentry/static/sentry/app/components/loading/loadingContainer.jsx
index c9aef1f951..9166b7ef2f 100644
--- a/src/sentry/static/sentry/app/components/loading/loadingContainer.jsx
+++ b/src/sentry/static/sentry/app/components/loading/loadingContainer.jsx
@@ -5,12 +5,12 @@ import styled from 'react-emotion';
 import LoadingIndicator from 'app/components/loadingIndicator';
 
 export default function LoadingContainer(props) {
-  const {children, isReloading, isLoading} = props;
+  const {className, children, isReloading, isLoading} = props;
 
   const isLoadingOrReloading = isLoading || isReloading;
 
   return (
-    <Container>
+    <Container className={className}>
       {isLoadingOrReloading && (
         <div>
           <LoadingMask isReloading={isReloading} />
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table.tsx b/src/sentry/static/sentry/app/views/eventsV2/table.tsx
index 97897c5953..e66e902e0a 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table.tsx
@@ -11,9 +11,9 @@ import {Client} from 'app/api';
 import {Organization} from 'app/types';
 import Pagination from 'app/components/pagination';
 import Panel from 'app/components/panels/panel';
-import {PanelBody} from 'app/components/panels';
 import LoadingContainer from 'app/components/loading/loadingContainer';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
+import Placeholder from 'app/components/placeholder';
 import {t} from 'app/locale';
 
 import {DEFAULT_EVENT_VIEW_V1} from './data';
@@ -94,6 +94,8 @@ class Table extends React.PureComponent<Props, State> {
 
     const url = `/organizations/${organization.slug}/eventsv2/`;
 
+    this.setState({loading: true});
+
     this.props.api.request(url, {
       query: this.state.eventView.getEventsAPIPayload(location),
       success: (dataPayload, __textStatus, jqxhr) => {
@@ -148,16 +150,6 @@ type TableViewProps = {
  * Renders the table headers and rows for the result set.
  */
 class TableView extends React.Component<TableViewProps> {
-  renderLoading = () => {
-    return (
-      <Panel>
-        <PanelBody style={{minHeight: '240px'}}>
-          <LoadingContainer isLoading={true} />
-        </PanelBody>
-      </Panel>
-    );
-  };
-
   renderHeader = () => {
     const {eventView, location, dataPayload} = this.props;
 
@@ -193,8 +185,15 @@ class TableView extends React.Component<TableViewProps> {
   };
 
   renderContent = (): React.ReactNode => {
-    const {dataPayload, eventView, organization, location} = this.props;
+    const {isLoading, dataPayload, eventView, organization, location} = this.props;
 
+    if (isLoading && !dataPayload) {
+      return (
+        <PanelGridInfo numOfCols={eventView.numOfColumns()}>
+          <Placeholder height="240px" width="100%" />
+        </PanelGridInfo>
+      );
+    }
     if (!(dataPayload && dataPayload.data && dataPayload.data.length > 0)) {
       return (
         <PanelGridInfo numOfCols={eventView.numOfColumns()}>
@@ -239,9 +238,16 @@ class TableView extends React.Component<TableViewProps> {
   };
 
   renderTable() {
+    const {isLoading, dataPayload} = this.props;
     return (
       <React.Fragment>
         {this.renderHeader()}
+        {isLoading && (
+          <FloatingLoadingContainer
+            isLoading={true}
+            isReloading={isLoading && !!dataPayload}
+          />
+        )}
         {this.renderContent()}
       </React.Fragment>
     );
@@ -260,11 +266,8 @@ class TableView extends React.Component<TableViewProps> {
   }
 
   render() {
-    const {isLoading, error, eventView} = this.props;
+    const {error, eventView} = this.props;
 
-    if (isLoading) {
-      return this.renderLoading();
-    }
     if (error) {
       return this.renderError();
     }
@@ -359,4 +362,12 @@ const Container = styled('div')`
   overflow: hidden;
 `;
 
+const FloatingLoadingContainer = styled(LoadingContainer)`
+  position: absolute;
+  top: 0;
+  left: 0;
+  right: 0;
+  bottom: 0;
+`;
+
 export default withApi<Props>(Table);
