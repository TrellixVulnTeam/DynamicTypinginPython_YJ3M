commit 159f8deabad784e7c61e169b848d73acbd011c8c
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 30 03:33:08 2012 -0800

    Refactoring administration pages

diff --git a/bootstrap/sentry.less b/bootstrap/sentry.less
index 23010b9207..41b480fc4c 100644
--- a/bootstrap/sentry.less
+++ b/bootstrap/sentry.less
@@ -84,7 +84,7 @@ p {
   }
 
   .navbar-search {
-    margin: 12px 0 0 20px;
+    margin: 10px 0 0 20px;
     .pull-left;
 
     .search-query {
@@ -107,15 +107,15 @@ p {
       }
 
       :-moz-placeholder {
-          color: #b4bdc5;
-          text-shadow: 0 1px 3px rgba(0,0,0, .45);
-          line-height: 1.2;
-        }
-        ::-webkit-input-placeholder {
-          color: #b4bdc5;
-          text-shadow: 0 1px 3px rgba(0,0,0, .45);
-          line-height: 1.2;
-        }
+        color: #b4bdc5;
+        text-shadow: 0 1px 3px rgba(0,0,0, .45);
+        line-height: 1.2;
+      }
+      ::-webkit-input-placeholder {
+        color: #b4bdc5;
+        text-shadow: 0 1px 3px rgba(0,0,0, .45);
+        line-height: 1.2;
+      }
     }
   }
 
diff --git a/sentry/conf/urls.py b/sentry/conf/urls.py
index 85a6452ca6..aba57e4b4f 100644
--- a/sentry/conf/urls.py
+++ b/sentry/conf/urls.py
@@ -10,10 +10,11 @@ These are additional urls used by the Sentry-provided web server
 
 import os
 
-from django.contrib import admin
-
 from sentry.web.urls import *
+from sentry.web.frontend import generic
+from django.conf.urls.defaults import *
 
+from django.contrib import admin
 
 admin.autodiscover()
 admin_media_dir = os.path.join(os.path.dirname(admin.__file__), 'media')
diff --git a/sentry/plugins/base.py b/sentry/plugins/base.py
index 11c186e74a..65892ed073 100644
--- a/sentry/plugins/base.py
+++ b/sentry/plugins/base.py
@@ -30,13 +30,13 @@ class Response(object):
 class PluginManager(InstanceManager):
     def for_project(self):
         for plugin in self.all():
-            if not plugin.project_conf_form:
+            if not plugin.has_project_conf():
                 continue
             yield plugin
 
     def for_site(self):
         for plugin in self.all():
-            if not plugin.site_conf_form:
+            if not plugin.has_site_conf():
                 continue
             yield plugin
 
@@ -108,6 +108,12 @@ class IPlugin(object):
     def get_conf_title(self):
         return self.conf_title or self.get_title()
 
+    def has_site_conf(self):
+        return self.site_conf_form is not None
+
+    def has_project_conf(self):
+        return self.site_project_form is not None
+
     def get_title(self):
         return self.title
 
diff --git a/sentry/plugins/sentry_bugzilla/models.py b/sentry/plugins/sentry_bugzilla/models.py
index 3d26f750ac..4a574bc154 100644
--- a/sentry/plugins/sentry_bugzilla/models.py
+++ b/sentry/plugins/sentry_bugzilla/models.py
@@ -24,7 +24,7 @@ class BugzillaSubmitForm(forms.Form):
 
 class CreateBugzillaIssue(Plugin):
     title = 'Create Bugzilla Issue'
-    slug = 'create-bugzilla-issue'
+    slug = 'bugzilla'
 
     conf_title = 'Bugzilla'
     conf_key = 'bugzilla'
diff --git a/sentry/static/styles/global.css b/sentry/static/styles/global.css
index 42a4774f3c..202130e621 100644
--- a/sentry/static/styles/global.css
+++ b/sentry/static/styles/global.css
@@ -2104,7 +2104,7 @@ p {
   text-indent: -1000em;
 }
 .navbar .navbar-search {
-  margin: 12px 0 0 20px;
+  margin: 10px 0 0 20px;
   float: left;
 }
 .navbar .navbar-search .search-query {
diff --git a/sentry/static/styles/global.min.css b/sentry/static/styles/global.min.css
index 9e331135cc..060c273697 100644
--- a/sentry/static/styles/global.min.css
+++ b/sentry/static/styles/global.min.css
@@ -345,7 +345,7 @@ p{font-family:"proxima-nova","helvetica neue",helvetica,sans-serif;font-size:14p
 .navbar .navbar-inner:after{clear:both;}
 .navbar .navbar-inner .container{padding:0 20px;}
 .navbar #logo{float:left;display:block;width:73px;height:25px;margin:15px 0 0;background:url(../images/dashboard/logo.png) top left no-repeat;text-indent:-1000em;}
-.navbar .navbar-search{margin:12px 0 0 20px;float:left;}.navbar .navbar-search .search-query{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;background-color:rgba(0, 0, 0, 0.22);background-image:-moz-linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-image:-ms-linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-image:-webkit-gradient(linear, 0 0, 0 100%, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.1)));background-image:-webkit-linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-image:-o-linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-image:linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='rgba(0, 0, 0, 0.3)', endColorstr='rgba(0, 0, 0, 0.1)', GradientType=0);padding:5px 8px;-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.15);-moz-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.15);box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.15);text-shadow:0 1px 3px rgba(0, 0, 0, 0.45);color:#fff;width:240px;}.navbar .navbar-search .search-query :-moz-placeholder{color:#b4bdc5;}
+.navbar .navbar-search{margin:10px 0 0 20px;float:left;}.navbar .navbar-search .search-query{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;background-color:rgba(0, 0, 0, 0.22);background-image:-moz-linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-image:-ms-linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-image:-webkit-gradient(linear, 0 0, 0 100%, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.1)));background-image:-webkit-linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-image:-o-linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-image:linear-gradient(top, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='rgba(0, 0, 0, 0.3)', endColorstr='rgba(0, 0, 0, 0.1)', GradientType=0);padding:5px 8px;-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.15);-moz-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.15);box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.15);text-shadow:0 1px 3px rgba(0, 0, 0, 0.45);color:#fff;width:240px;}.navbar .navbar-search .search-query :-moz-placeholder{color:#b4bdc5;}
 .navbar .navbar-search .search-query::-webkit-input-placeholder{color:#b4bdc5;}
 .navbar .navbar-search .search-query:focus{border:1px solid #111;padding:5px 8px;-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.15);-moz-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.15);box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.15);color:#fff;text-shadow:0 1px 3px rgba(0, 0, 0, 0.45);}
 .navbar .navbar-search .search-query :-moz-placeholder{color:#b4bdc5;text-shadow:0 1px 3px rgba(0, 0, 0, 0.45);line-height:1.2;}
diff --git a/sentry/templates/sentry/admin/base.html b/sentry/templates/sentry/admin/base.html
new file mode 100644
index 0000000000..fa9f3344c2
--- /dev/null
+++ b/sentry/templates/sentry/admin/base.html
@@ -0,0 +1,38 @@
+{% extends "sentry/layout.html" %}
+
+{% load i18n %}
+
+{% block title %}{% trans "Admin" %} | {{ block.super }}{% endblock %}
+
+{% block page_header %}
+    <ul class="breadcrumb">
+        <li><a href="#">Admin</a></li>
+        {% block breadcrumb %}{% endblock %}
+    </ul>
+{% endblock %}
+
+{% block sidebar %}
+<!--     <h6>Overview</h6>
+    <ul class="nav tabs stacked">
+        <li><a href="#">Projects</a></li>
+        <li><a href="#">Users</a></li>
+        <li><a href="#">Data Use</a></li>
+    </ul>
+ -->
+    <h6>Plugins</h6>
+    <ul class="nav tabs stacked">
+        {% for plugin in PLUGINS.for_site %}
+            <li><a href="{% url sentry-admin-configure-plugin plugin.slug %}">{{ plugin.get_conf_title }}</a></li>
+        {% endfor %}
+    </ul>
+    <h6>Utilities</h6>
+    <ul class="nav tabs stacked">
+        <li><a href="{% url sentry-admin-status %}">Server Status</a></li>
+    </ul>
+{% endblock %}
+
+{% block main %}
+    <section class="body">
+        {% block inner %}{% endblock %}
+    </section>
+{% endblock %}
diff --git a/sentry/templates/sentry/admin/plugins/configure.html b/sentry/templates/sentry/admin/plugins/configure.html
new file mode 100644
index 0000000000..02dd8edd91
--- /dev/null
+++ b/sentry/templates/sentry/admin/plugins/configure.html
@@ -0,0 +1,15 @@
+{% extends "sentry/admin/base.html" %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}Configure {{ title }} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    <li class="divider">/</li>
+    <li><a href="{% url sentry-admin-configure-plugin plugin.slug %}">Configure {{ title }}</a></li>
+{% endblock %}
+
+{% block inner %}
+    {{ view }}
+{% endblock %}
diff --git a/sentry/templates/sentry/admin/status.html b/sentry/templates/sentry/admin/status.html
new file mode 100644
index 0000000000..d3d51c1e69
--- /dev/null
+++ b/sentry/templates/sentry/admin/status.html
@@ -0,0 +1,208 @@
+{% extends "sentry/admin/base.html" %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}{% trans "Server Status" %} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    <li class="divider">/</li>
+    <li><a href="{% url sentry-admin-status %}">Server Status</a></li>
+{% endblock %}
+
+{% block inner %}
+    <ul class="nav tabs" data-tabs="tabs">
+        <li class="active"><a href="#main" data-toggle="tab">{% trans "Environment" %}</a></li>
+        <li><a href="#packages" data-toggle="tab">{% trans "Packages" %}</a></li>
+        <li><a href="#workers" data-toggle="tab">{% trans "Workers" %}</a></li>
+        <li><a href="#statistics" data-toggle="tab">{% trans "Statistics" %}</a></li>
+    </ul>
+    <div class="tab-content">
+        <div id="main" class="active tab-pane">
+            <div class="page-header">
+                <h2>{% trans "Environment" %}</h2>
+            </div>
+            {% if environment %}
+                <table class="table vars table-bordered table-zebra">
+                    <colgroup>
+                        <col style="width:220px">
+                    </colgroup>
+                    <tbody>
+                        <tr>
+                            <th>{% trans "Server Version" %}</th>
+                            <td>{% sentry_version %}</td>
+                        </tr>
+                        <tr>
+                            <th>{% trans "Python Version" %}</th>
+                            <td>{{ python_version }}</td>
+                        </tr>
+                        <tr>
+                            <th>{% trans "Configuration File" %}</th>
+                            <td>{{ environment.config }}</td>
+                        </tr>
+                        <tr>
+                            <th>{% trans "Uptime" %}</th>
+                            <td>{{ environment.start_date|timesince }} (since {{ environment.start_date|date }})</td>
+                        </tr>
+                    </tbody>
+                </table>
+            {% else %}
+                <p>{% trans "Environment not found (are you using the builtin Sentry webserver?)." %}</p>
+            {% endif %}
+
+            <div class="page-header">
+                <h2>{% trans "Configuration" %}{% if environment.config %} <small>{{ environment.config }}</small>{% endif %}</h2>
+            </div>
+            <table class="table vars table-bordered table-zebra">
+                <colgroup>
+                    <col style="width:220px">
+                </colgroup>
+                <tbody>
+                    {% for key, value in config %}
+                        <tr>
+                            <th>{{ key }}</th>
+                            <td class="code"><pre>{{ value|pprint }}</pre></td>
+                        </tr>
+                    {% endfor %}
+                </tbody>
+            </table>
+        </div>
+        <div id="packages" class="tab-pane">
+            <div class="page-header">
+                <h2>{% trans "Extensions" %}</h2>
+            </div>
+            {% if extensions %}
+                <table class="table vars table-bordered table-zebra">
+                    <colgroup>
+                        <col style="width:220px">
+                    </colgroup>
+                    <tbody>
+                        {% for key, value in extensions %}
+                            <tr>
+                                <th>{{ key }}</th>
+                                <td>{{ value }}</td>
+                            </tr>
+                        {% endfor %}
+                    </tbody>
+                </table>
+            {% else %}
+                <p>{% trans "No extensions registered." %}</p>
+            {% endif %}
+            <div class="page-header">
+                <h2>{% trans "Views" %}</h2>
+            </div>
+            {% if views %}
+                <table class="table vars table-bordered table-zebra">
+                    <colgroup>
+                        <col style="width:220px">
+                    </colgroup>
+                    <tbody>
+                        {% for key, value in views %}
+                            <tr>
+                                <th>{{ key }}</th>
+                                <td>{{ value }}</td>
+                            </tr>
+                        {% endfor %}
+                    </tbody>
+                </table>
+            {% else %}
+                <p>{% trans "No views registered." %}</p>
+            {% endif %}
+            <div class="page-header">
+                <h2>{% trans "Processors" %}</h2>
+            </div>
+            {% if processors %}
+                <table class="table vars table-bordered table-zebra">
+                    <colgroup>
+                        <col style="width:220px">
+                    </colgroup>
+                    <tbody>
+                        {% for key, value in processors %}
+                            <tr>
+                                <th>{{ key }}</th>
+                                <td>{{ value }}</td>
+                            </tr>
+                        {% endfor %}
+                    </tbody>
+                </table>
+            {% else %}
+                <p>{% trans "No event processors registered." %}</p>
+            {% endif %}
+            <div class="page-header">
+                <h2>{% trans "Modules" %}</h2>
+            </div>
+            <table class="table vars table-bordered table-zebra">
+                <colgroup>
+                    <col style="width:220px">
+                </colgroup>
+                <tbody>
+                    {% for key, value in modules %}
+                        <tr>
+                            <th>{{ key }}</th>
+                            <td>{{ value }}</td>
+                        </tr>
+                    {% endfor %}
+                </tbody>
+            </table>
+        </div>
+        {% if worker_status %}
+            <div id="workers" class="tab-pane">
+                <div class="page-header">
+                    <h2>{% trans "Background Processes" %}</h2>
+                </div>
+                {% if background_procs %}
+                    <table class="table vars table-bordered table-zebra">
+                        <colgroup>
+                            <col style="width:220px">
+                        </colgroup>
+                        <tbody>
+                        </tbody>
+                    </table>
+                {% else %}
+                    <p>{% trans "No information available." %}</p>
+                {% endif %}
+                <div class="page-header">
+                    <h2>{% trans "Pending Tasks" %}</h2>
+                </div>
+                <table class="table vars table-bordered table-zebra">
+                    <colgroup>
+                        <col>
+                        <col style="width:150px">
+                    </colgroup>
+                    <thead>
+                        <tr>
+                            <th>{% trans "Queue" %}</th>
+                            <th>{% trans "Pending Tasks" %}</th>
+                        </tr>
+                    </thead>
+                    <tbody>
+                        {% for queue, num_pending in pending_tasks %}
+                            <tr>
+                                <td>{{ queue }}</td>
+                                <td>{{ num_pending }}</td>
+                            </tr>
+                        {% endfor %}
+                    </tbody>
+                </table>
+            </div>
+        {% endif %}
+        <div id="statistics" class="tab-pane">
+            <div class="page-header">
+                <h2>{% trans "Statistics" %}</h2>
+            </div>
+            <table class="table vars table-bordered table-zebra">
+                <colgroup>
+                    <col style="width:220px">
+                </colgroup>
+                <tbody>
+                    {% for key, value in statistics %}
+                        <tr>
+                            <td>{{ key }}</td>
+                            <td>{{ value }}</td>
+                        </tr>
+                    {% endfor %}
+                </tbody>
+            </table>
+        </div>
+    </div>
+{% endblock %}
diff --git a/sentry/templates/sentry/header.html b/sentry/templates/sentry/header.html
index 7326f50d4a..3dbaa90f02 100644
--- a/sentry/templates/sentry/header.html
+++ b/sentry/templates/sentry/header.html
@@ -10,16 +10,18 @@
                         <input type="hidden" name="sort" value="{% if sort %}{{ sort }}{% endif %}"/>
                         <input type="text" name="q" value="{% if query %}{{ query }}{% endif %}" placeholder="{% if HAS_SEARCH %}search query or message id{% else %}message id{% endif %}" class="search-query pull-left" />
                     </form>
+                {% else %}
+                    <form class="navbar-search pull-right" id="search">
+                        <input type="hidden" name="sort" value="{% if sort %}{{ sort }}{% endif %}"/>
+                        <input type="text" name="q" value="{% if query %}{{ query }}{% endif %}" placeholder="select a project to enable search" class="search-query pull-left disabled" disabled="disabled" />
+                    </form>
                 {% endif %}
 
                 <ul class="nav">
-                    <li><a href="{% url sentry %}">{% trans "Dashboard" %}</a></li>
                     {% if project %}
+                        <li><a href="{% url sentry %}">{% trans "Dashboard" %}</a></li>
                         <li><a href="{% url sentry-events project.pk %}">{% trans "Stream" %}</a></li>
                     {% endif %}
-                    {% if user.is_staff %}
-                        <li><a href="{% url sentry-status %}">{% trans "Status" %}</a></li>
-                    {% endif %}
                 </ul>
                 <ul class="nav pull-right">
                     {% if request.user.is_authenticated %}
@@ -37,6 +39,10 @@
                             <a href="#" class="dropdown-toggle">{% trans "Account" %} <b class="caret"></b></a>
                             <ul class="dropdown-menu">
                                 <li><a href="{% url sentry-project-list %}">{% trans "Manage Projects" %}</a></li>
+                                {% if request.user.is_staff %}
+                                    <li class="divider"></li>
+                                    <li><a href="{% url sentry-admin-status %}">{% trans "Admin" %}</a></li>
+                                {% endif %}
                                 <li class="divider"></li>
                                 <li><a href="{% url sentry-logout %}">{% trans "Logout" %}</a></li>
                             </ul>
diff --git a/sentry/templates/sentry/status.html b/sentry/templates/sentry/status.html
deleted file mode 100644
index 72301192d1..0000000000
--- a/sentry/templates/sentry/status.html
+++ /dev/null
@@ -1,219 +0,0 @@
-{% extends "sentry/layout.html" %}
-
-{% load i18n %}
-{% load sentry_helpers %}
-
-{% block title %}{% trans "Status" %} | {{ block.super }}{% endblock %}
-
-{% block heading %}{% trans "Status" %}{% endblock %}
-
-{% block content %}
-    <div class="span12">
-        <ul class="nav tabs" data-tabs="tabs">
-            <li class="active"><a href="#main" data-toggle="tab">{% trans "Environment" %}</a></li>
-            <li><a href="#packages" data-toggle="tab">{% trans "Packages" %}</a></li>
-            <li><a href="#workers" data-toggle="tab">{% trans "Workers" %}</a></li>
-            <li><a href="#statistics" data-toggle="tab">{% trans "Statistics" %}</a></li>
-            {% for conf in site_configs %}
-                <li><a href="#config_{{ conf.slug }}" data-toggle="tab">{{ conf.site_conf_title }}</a></li>
-            {% endfor %}
-        </ul>
-        <div class="tab-content">
-            <div id="main" class="active tab-pane">
-                <div class="page-header">
-                    <h2>{% trans "Environment" %}</h2>
-                </div>
-                {% if environment %}
-                    <table class="table vars table-bordered table-zebra">
-                        <colgroup>
-                            <col style="width:220px">
-                        </colgroup>
-                        <tbody>
-                            <tr>
-                                <th>{% trans "Server Version" %}</th>
-                                <td>{% sentry_version %}</td>
-                            </tr>
-                            <tr>
-                                <th>{% trans "Python Version" %}</th>
-                                <td>{{ python_version }}</td>
-                            </tr>
-                            <tr>
-                                <th>{% trans "Configuration File" %}</th>
-                                <td>{{ environment.config }}</td>
-                            </tr>
-                            <tr>
-                                <th>{% trans "Uptime" %}</th>
-                                <td>{{ environment.start_date|timesince }} (since {{ environment.start_date|date }})</td>
-                            </tr>
-                        </tbody>
-                    </table>
-                {% else %}
-                    <p>{% trans "Environment not found (are you using the builtin Sentry webserver?)." %}</p>
-                {% endif %}
-
-                <div class="page-header">
-                    <h2>{% trans "Configuration" %}{% if environment.config %} <small>{{ environment.config }}</small>{% endif %}</h2>
-                </div>
-                <table class="table vars table-bordered table-zebra">
-                    <colgroup>
-                        <col style="width:220px">
-                    </colgroup>
-                    <tbody>
-                        {% for key, value in config %}
-                            <tr>
-                                <th>{{ key }}</th>
-                                <td class="code"><pre>{{ value|pprint }}</pre></td>
-                            </tr>
-                        {% endfor %}
-                    </tbody>
-                </table>
-            </div>
-            <div id="packages" class="tab-pane">
-                <div class="page-header">
-                    <h2>{% trans "Extensions" %}</h2>
-                </div>
-                {% if extensions %}
-                    <table class="table vars table-bordered table-zebra">
-                        <colgroup>
-                            <col style="width:220px">
-                        </colgroup>
-                        <tbody>
-                            {% for key, value in extensions %}
-                                <tr>
-                                    <th>{{ key }}</th>
-                                    <td>{{ value }}</td>
-                                </tr>
-                            {% endfor %}
-                        </tbody>
-                    </table>
-                {% else %}
-                    <p>{% trans "No extensions registered." %}</p>
-                {% endif %}
-                <div class="page-header">
-                    <h2>{% trans "Views" %}</h2>
-                </div>
-                {% if views %}
-                    <table class="table vars table-bordered table-zebra">
-                        <colgroup>
-                            <col style="width:220px">
-                        </colgroup>
-                        <tbody>
-                            {% for key, value in views %}
-                                <tr>
-                                    <th>{{ key }}</th>
-                                    <td>{{ value }}</td>
-                                </tr>
-                            {% endfor %}
-                        </tbody>
-                    </table>
-                {% else %}
-                    <p>{% trans "No views registered." %}</p>
-                {% endif %}
-                <div class="page-header">
-                    <h2>{% trans "Processors" %}</h2>
-                </div>
-                {% if processors %}
-                    <table class="table vars table-bordered table-zebra">
-                        <colgroup>
-                            <col style="width:220px">
-                        </colgroup>
-                        <tbody>
-                            {% for key, value in processors %}
-                                <tr>
-                                    <th>{{ key }}</th>
-                                    <td>{{ value }}</td>
-                                </tr>
-                            {% endfor %}
-                        </tbody>
-                    </table>
-                {% else %}
-                    <p>{% trans "No event processors registered." %}</p>
-                {% endif %}
-                <div class="page-header">
-                    <h2>{% trans "Modules" %}</h2>
-                </div>
-                <table class="table vars table-bordered table-zebra">
-                    <colgroup>
-                        <col style="width:220px">
-                    </colgroup>
-                    <tbody>
-                        {% for key, value in modules %}
-                            <tr>
-                                <th>{{ key }}</th>
-                                <td>{{ value }}</td>
-                            </tr>
-                        {% endfor %}
-                    </tbody>
-                </table>
-            </div>
-            {% if worker_status %}
-                <div id="workers" class="tab-pane">
-                    <div class="page-header">
-                        <h2>{% trans "Background Processes" %}</h2>
-                    </div>
-                    {% if background_procs %}
-                        <table class="table vars table-bordered table-zebra">
-                            <colgroup>
-                                <col style="width:220px">
-                            </colgroup>
-                            <tbody>
-                            </tbody>
-                        </table>
-                    {% else %}
-                        <p>{% trans "No information available." %}</p>
-                    {% endif %}
-                    <div class="page-header">
-                        <h2>{% trans "Pending Tasks" %}</h2>
-                    </div>
-                    <table class="table vars table-bordered table-zebra">
-                        <colgroup>
-                            <col>
-                            <col style="width:150px">
-                        </colgroup>
-                        <thead>
-                            <tr>
-                                <th>{% trans "Queue" %}</th>
-                                <th>{% trans "Pending Tasks" %}</th>
-                            </tr>
-                        </thead>
-                        <tbody>
-                            {% for queue, num_pending in pending_tasks %}
-                                <tr>
-                                    <td>{{ queue }}</td>
-                                    <td>{{ num_pending }}</td>
-                                </tr>
-                            {% endfor %}
-                        </tbody>
-                    </table>
-                </div>
-            {% endif %}
-            <div id="statistics" class="tab-pane">
-                <div class="page-header">
-                    <h2>{% trans "Statistics" %}</h2>
-                </div>
-                <table class="table vars table-bordered table-zebra">
-                    <colgroup>
-                        <col style="width:220px">
-                    </colgroup>
-                    <tbody>
-                        {% for key, value in statistics %}
-                            <tr>
-                                <td>{{ key }}</td>
-                                <td>{{ value }}</td>
-                            </tr>
-                        {% endfor %}
-                    </tbody>
-                </table>
-            </div>
-            {% for conf in site_configs %}
-                <div id="config_{{ conf.slug }}" class="tab-pane">
-                    <div class="page-header">
-                        <h2>{{ conf.site_config_title|default:conf.title }} configuration</h2>
-                    </div>
-                    <br/>
-                    {{ conf.view|safe }}
-                </div>
-            {% endfor %}
-        </div>
-    </div>
-{% endblock %}
diff --git a/sentry/web/decorators.py b/sentry/web/decorators.py
index 10d1e4640e..f3998e998f 100644
--- a/sentry/web/decorators.py
+++ b/sentry/web/decorators.py
@@ -64,6 +64,18 @@ def login_required(func):
     return wrapped
 
 
+def requires_admin(func):
+    def wrapped(request, *args, **kwargs):
+        if not request.user.is_authenticated():
+            return HttpResponseRedirect(get_login_url())
+        if not request.user.is_staff:
+            return render_to_response('sentry/missing_permissions.html', status=400)
+        return func(request, *args, **kwargs)
+    wrapped.__doc__ = func.__doc__
+    wrapped.__name__ = func.__name__
+    return wrapped
+
+
 def permission_required(perm):
     def wrapped(func):
         def _wrapped(request, *args, **kwargs):
diff --git a/sentry/web/frontend/admin.py b/sentry/web/frontend/admin.py
new file mode 100644
index 0000000000..393ae0b448
--- /dev/null
+++ b/sentry/web/frontend/admin.py
@@ -0,0 +1,92 @@
+"""
+sentry.web.frontend.generic
+~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+import datetime
+import pkg_resources
+import sys
+
+from django.core.urlresolvers import reverse
+from django.db.models import Sum
+from django.http import HttpResponseRedirect
+from djkombu.models import Queue
+
+from sentry import environment
+from sentry.conf import settings
+from sentry.models import Project, MessageCountByMinute
+from sentry.plugins import plugins
+from sentry.web.decorators import requires_admin
+from sentry.web.helpers import render_to_response, plugin_config
+
+
+def configure_plugin(request, slug):
+    plugin = plugins.get(slug)
+    if not plugin.has_site_conf():
+        return HttpResponseRedirect(reverse('sentry'))
+
+    action, view = plugin_config(plugin, None, request)
+    if action == 'redirect':
+        return HttpResponseRedirect(request.path)
+
+    return render_to_response('sentry/admin/plugins/configure.html', {
+        'plugin': plugin,
+        'title': plugin.get_conf_title(),
+        'slug': plugin.slug,
+        'view': view,
+    }, request)
+
+
+@requires_admin
+def status(request):
+    from sentry.views import View
+
+    if not request.user.is_staff:
+        return HttpResponseRedirect(reverse('sentry'))
+
+    config = []
+    for k in sorted(dir(settings)):
+        if k == 'KEY':
+            continue
+        if k.startswith('_'):
+            continue
+        if k.upper() != k:
+            continue
+        config.append((k, getattr(settings, k)))
+
+    worker_status = (settings.QUEUE['transport'] == 'djkombu.transport.DatabaseTransport')
+    if worker_status:
+        pending_tasks = list(Queue.objects.filter(
+            messages__visible=True,
+        ).annotate(num=Sum('messages__id')).values_list('name', 'num'))
+        # fetch queues which had no pending tasks
+        pending_tasks.extend((q, 0) for q in Queue.objects.exclude(
+            name__in=[p[0] for p in pending_tasks],
+        ).values_list('name', flat=True))
+    else:
+        pending_tasks = None
+
+    statistics = (
+        ('Projects', Project.objects.count()),
+        ('Projects (24h)', Project.objects.filter(
+            date_added__gte=datetime.datetime.now() - datetime.timedelta(hours=24),
+        ).count()),
+        ('Events', MessageCountByMinute.objects.aggregate(x=Sum('times_seen'))['x'] or 0),
+        ('Events (24h)', MessageCountByMinute.objects.filter(
+            date__gte=datetime.datetime.now() - datetime.timedelta(hours=24),
+        ).aggregate(x=Sum('times_seen'))['x'] or 0)
+    )
+
+    return render_to_response('sentry/admin/status.html', {
+        'config': config,
+        'environment': environment,
+        'python_version': sys.version,
+        'modules': sorted([(p.project_name, p.version) for p in pkg_resources.working_set]),
+        'extensions': [(p.get_title(), '%s.%s' % (p.__module__, p.__class__.__name__)) for p in plugins.all()],
+        'views': [(x.__class__.__name__, x.__module__) for x in View.objects.all()],
+        'pending_tasks': pending_tasks,
+        'worker_status': worker_status,
+        'statistics': statistics,
+    }, request)
diff --git a/sentry/web/frontend/generic.py b/sentry/web/frontend/generic.py
index 1966a23c0a..013f4e36a7 100644
--- a/sentry/web/frontend/generic.py
+++ b/sentry/web/frontend/generic.py
@@ -5,23 +5,14 @@ sentry.web.frontend.generic
 :copyright: (c) 2010 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
-import datetime
-import pkg_resources
-import sys
-
 from django.core.urlresolvers import reverse
-from django.db.models import Sum
 from django.http import HttpResponseRedirect, Http404, HttpResponseNotModified, \
   HttpResponse
-from djkombu.models import Queue
 
-from sentry import environment
 from sentry.conf import settings
-from sentry.models import Project, MessageCountByMinute
-from sentry.plugins import plugins
 from sentry.web.decorators import login_required
 from sentry.web.helpers import get_project_list, render_to_response, \
-  get_login_url, plugin_config
+  get_login_url
 
 
 @login_required
@@ -34,75 +25,6 @@ def dashboard(request):
     return render_to_response('sentry/dashboard.html', request=request)
 
 
-@login_required
-def status(request):
-    from sentry.views import View
-
-    if not request.user.is_staff:
-        return HttpResponseRedirect(reverse('sentry'))
-
-    # Deal with the plugins
-    site_configs = []
-    for plugin in plugins.for_site():
-        action, view = plugin_config(plugin, None, request)
-        if action == 'redirect':
-            return HttpResponseRedirect(request.path)
-        item = {
-            'plugin': plugin,
-            'title': plugin.get_title(),
-            'slug': plugin.slug,
-            'site_conf_title': plugin.get_conf_title(),
-            'view': view,
-        }
-        site_configs.append(item)
-
-    config = []
-    for k in sorted(dir(settings)):
-        if k == 'KEY':
-            continue
-        if k.startswith('_'):
-            continue
-        if k.upper() != k:
-            continue
-        config.append((k, getattr(settings, k)))
-
-    worker_status = (settings.QUEUE['transport'] == 'djkombu.transport.DatabaseTransport')
-    if worker_status:
-        pending_tasks = list(Queue.objects.filter(
-            messages__visible=True,
-        ).annotate(num=Sum('messages__id')).values_list('name', 'num'))
-        # fetch queues which had no pending tasks
-        pending_tasks.extend((q, 0) for q in Queue.objects.exclude(
-            name__in=[p[0] for p in pending_tasks],
-        ).values_list('name', flat=True))
-    else:
-        pending_tasks = None
-
-    statistics = (
-        ('Projects', Project.objects.count()),
-        ('Projects (24h)', Project.objects.filter(
-            date_added__gte=datetime.datetime.now() - datetime.timedelta(hours=24),
-        ).count()),
-        ('Events', MessageCountByMinute.objects.aggregate(x=Sum('times_seen'))['x'] or 0),
-        ('Events (24h)', MessageCountByMinute.objects.filter(
-            date__gte=datetime.datetime.now() - datetime.timedelta(hours=24),
-        ).aggregate(x=Sum('times_seen'))['x'] or 0)
-    )
-
-    return render_to_response('sentry/status.html', {
-        'config': config,
-        'environment': environment,
-        'python_version': sys.version,
-        'modules': sorted([(p.project_name, p.version) for p in pkg_resources.working_set]),
-        'extensions': [(p.get_title(), '%s.%s' % (p.__module__, p.__class__.__name__)) for p in plugins.all()],
-        'views': [(x.__class__.__name__, x.__module__) for x in View.objects.all()],
-        'pending_tasks': pending_tasks,
-        'worker_status': worker_status,
-        'site_configs': site_configs,
-        'statistics': statistics,
-    }, request)
-
-
 def static_media(request, path, root=None):
     """
     Serve static files below a given point in the directory structure.
diff --git a/sentry/web/helpers.py b/sentry/web/helpers.py
index 0e64369380..832fb7c671 100644
--- a/sentry/web/helpers.py
+++ b/sentry/web/helpers.py
@@ -13,6 +13,7 @@ from django.core.urlresolvers import reverse, resolve
 from django.http import HttpResponse
 from django.template import loader, RequestContext, Context
 from django.utils.datastructures import SortedDict
+from django.utils.safestring import mark_safe
 
 from sentry.conf import settings
 from sentry.models import ProjectMember, Project, View, \
@@ -157,7 +158,7 @@ def plugin_config(plugin, project, request):
         return ('redirect', None)
 
     from django.template.loader import render_to_string
-    return ('display', render_to_string(template, {
+    return ('display', mark_safe(render_to_string(template, {
             'form': form,
             'request': request,
-        }, context_instance=RequestContext(request)))
+        }, context_instance=RequestContext(request))))
diff --git a/sentry/web/urls.py b/sentry/web/urls.py
index a8dc8c8368..8b8fdd7a14 100644
--- a/sentry/web/urls.py
+++ b/sentry/web/urls.py
@@ -10,7 +10,10 @@ from django.conf.urls.defaults import *
 from django.views.defaults import page_not_found
 
 from sentry.web import api
-from sentry.web.frontend import accounts, generic, groups, events, projects
+from sentry.web.frontend import accounts, generic, groups, events, \
+  projects, admin
+
+__all__ = ('handler404', 'handler500', 'urlpatterns')
 
 
 def init_plugins():
@@ -73,7 +76,8 @@ urlpatterns = patterns('',
     # Global
 
     url(r'^$', generic.dashboard, name='sentry'),
-    url(r'^status/$', generic.status, name='sentry-status'),
+    url(r'^admin/status/$', admin.status, name='sentry-admin-status'),
+    url(r'^admin/plugins/(?P<slug>[\w_-]+)/$', admin.configure_plugin, name='sentry-admin-configure-plugin'),
 
     # API / JS
 
diff --git a/tests/web/tests.py b/tests/web/tests.py
index aaef86f30b..6e3b7b911f 100644
--- a/tests/web/tests.py
+++ b/tests/web/tests.py
@@ -102,9 +102,9 @@ class SentryViewsTest(TestCase):
 
     def test_status(self):
         self.client.login(username='admin', password='admin')
-        resp = self.client.get(reverse('sentry-status'), follow=True)
+        resp = self.client.get(reverse('sentry-admin-status'), follow=True)
         self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/status.html')
+        self.assertTemplateUsed(resp, 'sentry/admin/status.html')
 
     def test_event_list(self):
         self.client.login(username='admin', password='admin')
