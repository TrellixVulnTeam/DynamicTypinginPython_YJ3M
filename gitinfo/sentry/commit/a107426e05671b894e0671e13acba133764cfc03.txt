commit a107426e05671b894e0671e13acba133764cfc03
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 26 17:46:44 2015 -0700

    Add annotations to api response

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index f6e9b5ad2a..e53ee94312 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -13,8 +13,8 @@ from sentry.api.serializers import serialize
 from sentry.constants import STATUS_CHOICES
 from sentry.db.models.query import create_or_update
 from sentry.models import (
-    Activity, Group, GroupAssignee, GroupBookmark, GroupMeta, GroupSeen,
-    GroupStatus, GroupTagValue
+    Activity, Group, GroupAssignee, GroupBookmark, GroupSeen, GroupStatus,
+    GroupTagValue
 )
 from sentry.plugins import plugins
 from sentry.utils.safe import safe_execute
@@ -94,8 +94,6 @@ class GroupDetailsEndpoint(GroupEndpoint):
             {method} {path}
 
         """
-        GroupMeta.objects.populate_cache([group])
-
         data = serialize(group, request.user)
 
         # TODO: these probably should be another endpoint
diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index d2ad7ff886..0d5c0f15cf 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -16,7 +16,7 @@ from sentry.constants import (
 )
 from sentry.db.models.query import create_or_update
 from sentry.models import (
-    Activity, Group, GroupBookmark, GroupMeta, GroupSeen, GroupStatus, TagKey
+    Activity, Group, GroupBookmark, GroupSeen, GroupStatus, TagKey
 )
 from sentry.search.utils import parse_query
 from sentry.tasks.deletion import delete_group
@@ -126,8 +126,6 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
 
         context = list(cursor_result)
 
-        GroupMeta.objects.populate_cache(context)
-
         response = Response(serialize(context, request.user, StreamGroupSerializer))
         response['Link'] = ', '.join([
             self.build_cursor_link(request, 'previous', cursor_result.prev),
diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 88e1938c6a..da0fa401ca 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -9,15 +9,21 @@ from sentry.api.serializers import Serializer, register, serialize
 from sentry.app import tsdb
 from sentry.constants import TAG_LABELS
 from sentry.models import (
-    Group, GroupAssignee, GroupBookmark, GroupTagKey, GroupSeen, GroupStatus
+    Group, GroupAssignee, GroupBookmark, GroupMeta, GroupTagKey, GroupSeen,
+    GroupStatus
 )
 from sentry.utils.db import attach_foreignkey
 from sentry.utils.http import absolute_uri
+from sentry.utils.safe import safe_execute
 
 
 @register(Group)
 class GroupSerializer(Serializer):
     def get_attrs(self, item_list, user):
+        from sentry.plugins import plugins
+
+        GroupMeta.objects.populate_cache(item_list)
+
         attach_foreignkey(item_list, Group.project, ['team'])
 
         if user.is_authenticated() and item_list:
@@ -63,11 +69,18 @@ class GroupSerializer(Serializer):
                     'count': value,
                 }
 
+            annotations = []
+            for plugin in plugins.for_project(project=item.project, version=1):
+                safe_execute(plugin.tags, None, item, annotations)
+            for plugin in plugins.for_project(project=item.project, version=2):
+                annotations.extend(safe_execute(plugin.get_annotations, item) or ())
+
             result[item] = {
                 'assigned_to': serialize(assignees.get(item.id)),
                 'is_bookmarked': item.id in bookmarks,
                 'has_seen': seen_groups.get(item.id, active_date) > active_date,
                 'tags': tags,
+                'annotations': annotations,
             }
         return result
 
@@ -107,6 +120,7 @@ class GroupSerializer(Serializer):
             'isBookmarked': attrs['is_bookmarked'],
             'hasSeen': attrs['has_seen'],
             'tags': attrs['tags'],
+            'annotations': attrs['annotations'],
         }
         return d
 
diff --git a/src/sentry/plugins/base/v2.py b/src/sentry/plugins/base/v2.py
index 29da1cc733..cf02026002 100644
--- a/src/sentry/plugins/base/v2.py
+++ b/src/sentry/plugins/base/v2.py
@@ -237,7 +237,7 @@ class IPlugin2(local):
         """
         return []
 
-    def get_annotations(self, request, group, **kwargs):
+    def get_annotations(self, group, **kwargs):
         """
         Return a list of annotations to append to this aggregate.
 
@@ -246,7 +246,7 @@ class IPlugin2(local):
         The properties of each tag must match the constructor for
         :class:`sentry.plugins.Annotation`
 
-        >>> def get_annotations(self, request, group, **kwargs):
+        >>> def get_annotations(self, group, **kwargs):
         >>>     task_id = GroupMeta.objects.get_value(group, 'myplugin:tid')
         >>>     if not task_id:
         >>>         return []
