commit b48e9dc20320977b729cd996e28180cf3b762c96
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Mar 27 12:12:57 2020 -0700

    test(js): Throw on unmocked API endpoints (#17934)
    
    * test(js): Throw on unmocked API endpoints
    
    This will cause jest to error when there are unmocked API endpoints, previously we were just using `console.warn`. Throwing inside of the mocked request function does not work as expected since our components generally do error handling, so we need to throw in the next execution loop to get around this. We also change the stack so that jest shows where in the tests we are calling the unmocked endpoint.
    
    * fix ts errors

diff --git a/src/sentry/static/sentry/app/__mocks__/api.tsx b/src/sentry/static/sentry/app/__mocks__/api.tsx
index c6d85b7212..4bd02d5541 100644
--- a/src/sentry/static/sentry/app/__mocks__/api.tsx
+++ b/src/sentry/static/sentry/app/__mocks__/api.tsx
@@ -122,12 +122,19 @@ class Client {
         `No mocked response found for request:\n\t${options.method || 'GET'} ${url}`
       );
 
+      // Mutate stack to drop frames since test file so that we know where in the test
+      // this needs to be mocked
+      const lines = err.stack?.split('\n');
+      const startIndex = lines?.findIndex(line => line.includes('tests/js/spec'));
+      err.stack = ['\n', lines?.[0], ...lines?.slice(startIndex)].join('\n');
+
       // Throwing an error here does not do what we want it to do....
       // Because we are mocking an API client, we generally catch errors to show
       // user-friendly error messages, this means in tests this error gets gobbled
-      // up and developer frustration ensues.
-      console.warn(err.message); // eslint-disable-line no-console
-      throw err;
+      // up and developer frustration ensues. Use `setTimeout` to get around this
+      setTimeout(() => {
+        throw err;
+      });
     } else {
       // has mocked response
 
diff --git a/tests/js/spec/components/modals/commandPaletteModal.spec.jsx b/tests/js/spec/components/modals/commandPaletteModal.spec.jsx
index ac1de33d5b..d2c6879943 100644
--- a/tests/js/spec/components/modals/commandPaletteModal.spec.jsx
+++ b/tests/js/spec/components/modals/commandPaletteModal.spec.jsx
@@ -45,7 +45,10 @@ describe('Command Palette Modal', function() {
       url: '/organizations/org-slug/config/integrations/',
       body: [],
     });
-
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/plugins/configs/',
+      body: [],
+    });
     MockApiClient.addMockResponse({
       url: '/internal/health/',
       body: {
diff --git a/tests/js/spec/components/search/sources/apiSource.spec.jsx b/tests/js/spec/components/search/sources/apiSource.spec.jsx
index 44fe88b57c..1e22475722 100644
--- a/tests/js/spec/components/search/sources/apiSource.spec.jsx
+++ b/tests/js/spec/components/search/sources/apiSource.spec.jsx
@@ -57,6 +57,10 @@ describe('ApiSource', function() {
       query: {plugins: '_all'},
       body: [],
     });
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/plugins/configs/',
+      body: [],
+    });
     MockApiClient.addMockResponse({
       url: '/organizations/org-slug/config/integrations/',
       body: [],
diff --git a/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx b/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx
index d79867fc24..46f5731d73 100644
--- a/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx
+++ b/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx
@@ -47,7 +47,10 @@ describe('SettingsSearch', function() {
       query: 'foo',
       body: [],
     });
-
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/plugins/configs/',
+      body: [],
+    });
     MockApiClient.addMockResponse({
       url: '/organizations/org-slug/config/integrations/',
       query: 'foo',
