commit 583ddf3e049060e6ed0d6fde25b69d126f858b73
Author: josh <josh@jrl.ninja>
Date:   Mon Feb 24 18:20:57 2020 +0000

    chore: bump pyyaml to 5.3 (#16923)

diff --git a/requirements-base.txt b/requirements-base.txt
index c37643b06b..f4d93dce18 100644
--- a/requirements-base.txt
+++ b/requirements-base.txt
@@ -41,7 +41,7 @@ python-dateutil>=2.0.0,<3.0.0
 python-memcached>=1.53,<2.0.0
 python3-saml>=1.4.0,<1.5
 python-u2flib-server>=5.0.0,<6.0.0
-PyYAML>=3.11,<3.12
+PyYAML>=5.3,<5.4
 qrcode>=5.2.2,<6.0.0
 querystring_parser>=1.2.3,<2.0.0
 rb>=1.7.0,<2.0.0
diff --git a/src/sentry/utils/yaml.py b/src/sentry/utils/yaml.py
index caebf53751..affdd04bbd 100644
--- a/src/sentry/utils/yaml.py
+++ b/src/sentry/utils/yaml.py
@@ -1,20 +1,12 @@
 from __future__ import absolute_import
 
 from functools import partial
-from yaml import load as _load, dump as _dump
+from yaml import load as _load
 
 try:
     # Try to load bindings with libyaml if available
-    from yaml import (
-        CLoader as Loader,
-        CDumper as Dumper,
-        CSafeLoader as SafeLoader,
-        CSafeDumper as SafeDumper,
-    )
+    from yaml import CSafeLoader as SafeLoader
 except ImportError:
-    from yaml import Loader, Dumper, SafeLoader, SafeDumper
+    from yaml import SafeLoader
 
-load = partial(_load, Loader=Loader)
-dump = partial(_dump, Dumper=Dumper)
 safe_load = partial(_load, Loader=SafeLoader)
-safe_dump = partial(_dump, Dumper=SafeDumper)
diff --git a/tests/sentry/utils/test_types.py b/tests/sentry/utils/test_types.py
index 92a1435988..c490cc7395 100644
--- a/tests/sentry/utils/test_types.py
+++ b/tests/sentry/utils/test_types.py
@@ -70,6 +70,7 @@ class OptionsTypesTest(TestCase):
         assert Dict({}) == {}
         assert Dict({"foo": "bar"}) == {"foo": "bar"}
         assert Dict("{foo: bar}") == {"foo": "bar"}
+
         assert Dict() == {}
         with self.assertRaises(InvalidTypeError):
             assert Dict("[]")
@@ -78,8 +79,8 @@ class OptionsTypesTest(TestCase):
         with self.assertRaises(InvalidTypeError):
             assert Dict("")
         with self.assertRaises(InvalidTypeError):
-            # malformed yaml/json
-            assert Dict("{foo:bar}")
+            # malformed yaml/json (a plain scalar, "b: ar", cannot contain ": ")
+            assert Dict("{foo: b: ar}")
 
     def test_sequence(self):
         assert Sequence(()) == ()
