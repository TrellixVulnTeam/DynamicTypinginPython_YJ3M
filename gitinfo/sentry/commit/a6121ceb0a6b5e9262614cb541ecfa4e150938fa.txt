commit a6121ceb0a6b5e9262614cb541ecfa4e150938fa
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Apr 8 05:24:32 2015 -0500

    Add UI for toggling SSO requirement

diff --git a/src/sentry/templates/sentry/organization-auth-provider-settings.html b/src/sentry/templates/sentry/organization-auth-provider-settings.html
index 315d3303c5..4db058a3ba 100644
--- a/src/sentry/templates/sentry/organization-auth-provider-settings.html
+++ b/src/sentry/templates/sentry/organization-auth-provider-settings.html
@@ -1,5 +1,6 @@
 {% extends "sentry/bases/organization.html" %}
 
+{% load crispy_forms_tags %}
 {% load i18n %}
 
 {% block org_auth_settings_nav %}active{% endblock %}
@@ -40,6 +41,19 @@
 
         <hr>
 
+        <h3>General Settings</h3>
+
+        {{ form|as_crispy_errors }}
+
+        <button class="btn btn-primary pull-right" name="op"
+                value="settings" style="margin-left: 20px">Save Settings</button>
+
+        {% for field in form %}
+          {{ field|as_crispy_field }}
+        {% endfor %}
+
+        <hr>
+
         <h3>Disable {{ provider_name }} Authentication</h3>
 
         <button class="btn btn-danger pull-right" name="op"
diff --git a/src/sentry/web/frontend/organization_auth_settings.py b/src/sentry/web/frontend/organization_auth_settings.py
index a1110ed7da..bbca456cea 100644
--- a/src/sentry/web/frontend/organization_auth_settings.py
+++ b/src/sentry/web/frontend/organization_auth_settings.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from django import forms
 from django.contrib import messages
 from django.core.urlresolvers import reverse
 from django.db import transaction
@@ -26,6 +27,14 @@ OK_PROVIDER_DISABLED = _('SSO authentication has been disabled.')
 OK_REMINDERS_SENT = _('A reminder email has been sent to members who have not yet linked their accounts.')
 
 
+class AuthProviderSettingsForm(forms.Form):
+    require_link = forms.BooleanField(
+        label=_('Require SSO'),
+        help_text=_('Require members use a valid linked SSO account to access this organization'),
+        required=False,
+    )
+
+
 class OrganizationAuthSettingsView(OrganizationView):
     required_access = OrganizationMemberType.OWNER
 
@@ -67,6 +76,7 @@ class OrganizationAuthSettingsView(OrganizationView):
 
     def handle_existing_provider(self, request, organization, auth_provider):
         provider = auth_provider.get_provider()
+
         if request.method == 'POST':
             op = request.POST.get('op')
             if op == 'disable':
@@ -92,6 +102,17 @@ class OrganizationAuthSettingsView(OrganizationView):
                                    args=[organization.slug])
                 return self.redirect(next_uri)
 
+        form = AuthProviderSettingsForm(
+            data=request.POST if request.POST.get('op') == 'settings' else None,
+            initial={
+                'require_link': not auth_provider.flags.allow_unlinked,
+            },
+        )
+
+        if form.is_valid():
+            auth_provider.flags.allow_unlinked = not form.cleaned_data['require_link']
+            auth_provider.save()
+
         view = provider.get_configure_view()
         response = view(request, organization, auth_provider)
         if isinstance(response, HttpResponse):
@@ -109,6 +130,7 @@ class OrganizationAuthSettingsView(OrganizationView):
         ).count()
 
         context = {
+            'form': form,
             'pending_links_count': pending_links_count,
             'login_url': absolute_uri(reverse('sentry-organization-home', args=[organization.slug])),
             'auth_provider': auth_provider,
