commit cd11dce7ed3acba690176fbc3e72786756ee77bf
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 12 18:10:50 2015 -0800

    Remove use of react-bootstrap on BarChart

diff --git a/src/sentry/static/sentry/app/components/Tooltip.jsx b/src/sentry/static/sentry/app/components/Tooltip.jsx
deleted file mode 100644
index 2a83b388aa..0000000000
--- a/src/sentry/static/sentry/app/components/Tooltip.jsx
+++ /dev/null
@@ -1,56 +0,0 @@
-var React = require('react');
-var joinClasses = require('react-bootstrap/utils/joinClasses');
-var classSet = require('react-bootstrap/utils/classSet');
-var BootstrapMixin = require('react-bootstrap/BootstrapMixin');
-
-
-var Tooltip = React.createClass({
-  mixins: [BootstrapMixin],
-
-  propTypes: {
-    placement: React.PropTypes.oneOf(['top','right', 'bottom', 'left']),
-    positionLeft: React.PropTypes.number,
-    positionTop: React.PropTypes.number,
-    modifiedLeft: React.PropTypes.number,
-    arrowOffsetLeft: React.PropTypes.number,
-    arrowOffsetTop: React.PropTypes.number
-  },
-
-  getDefaultProps: function () {
-    return {
-      placement: 'right'
-    };
-  },
-
-  render: function () {
-    var classes = {
-      tooltip: true,
-      in: this.props.positionLeft !== null || this.props.positionTop !== null
-    };
-    classes[this.props.placement] = true;
-
-    var style = {
-      left: this.props.positionLeft,
-      top: this.props.positionTop
-    };
-
-    var arrowStyle = {
-      // TODO(dcramer): figure out where this magical # is from and compute it
-      // in a correct way
-      marginLeft: this.props.modifiedLeft - 6,
-      left: this.props.arrowOffsetLeft,
-      top: this.props.arrowOffsetTop
-    };
-
-    return (
-        <div {...this.props} className={joinClasses(this.props.className, classSet(classes))} style={style}>
-          <div className="tooltip-arrow" style={arrowStyle} />
-          <div className="tooltip-inner">
-            {this.props.children}
-          </div>
-        </div>
-      );
-  }
-});
-
-module.exports = Tooltip;
diff --git a/src/sentry/static/sentry/app/components/barChart.jsx b/src/sentry/static/sentry/app/components/barChart.jsx
index 707945ddd7..7ea2536462 100644
--- a/src/sentry/static/sentry/app/components/barChart.jsx
+++ b/src/sentry/static/sentry/app/components/barChart.jsx
@@ -1,8 +1,7 @@
 /*** @jsx React.DOM */
 var React = require("react");
 
-var OverlayTrigger = require("./OverlayTrigger");
-var Tooltip = require("./Tooltip");
+var TooltipTrigger = require("./tooltipTrigger");
 
 var BarChart = React.createClass({
   propTypes: {
@@ -95,20 +94,15 @@ var BarChart = React.createClass({
         title += <div>({point.label})</div>;
       }
 
-      var tooltip = (
-        <Tooltip>
-          {title}
-        </Tooltip>
-      );
-
       return (
-        <OverlayTrigger overlay={tooltip}
-                        placement={this.props.placement}
-                        key={point.x}>
+        <TooltipTrigger
+            placement={this.props.placement}
+            key={point.x}
+            title={title}>
           <a style={{width: pointWidth}}>
             <span style={{height: pct}}>{point.y}</span>
           </a>
-        </OverlayTrigger>
+        </TooltipTrigger>
       );
     });
 
diff --git a/src/sentry/static/sentry/app/components/overlayTrigger.jsx b/src/sentry/static/sentry/app/components/overlayTrigger.jsx
deleted file mode 100644
index 6f27bf61cb..0000000000
--- a/src/sentry/static/sentry/app/components/overlayTrigger.jsx
+++ /dev/null
@@ -1,244 +0,0 @@
-var React = require('react');
-var OverlayMixin = require('react-bootstrap/OverlayMixin');
-var domUtils = require('react-bootstrap/utils/domUtils');
-var cloneWithProps = require('react-bootstrap/utils/cloneWithProps');
-
-var createChainedFunction = require('react-bootstrap/utils/createChainedFunction');
-var assign = require('react-bootstrap/utils/Object.assign');
-
-/**
- * Check if value one is inside or equal to the of value
- *
- * @param {string} one
- * @param {string|array} of
- * @returns {boolean}
- */
-function isOneOf(one, of) {
-  if (Array.isArray(of)) {
-    return of.indexOf(one) >= 0;
-  }
-  return one === of;
-}
-
-var OverlayTrigger = React.createClass({
-  mixins: [OverlayMixin],
-
-  propTypes: {
-    trigger: React.PropTypes.oneOfType([
-      React.PropTypes.oneOf(['manual', 'click', 'hover', 'focus']),
-      React.PropTypes.arrayOf(React.PropTypes.oneOf(['click', 'hover', 'focus']))
-    ]),
-    placement: React.PropTypes.oneOf(['top','right', 'bottom', 'left']),
-    delay: React.PropTypes.number,
-    delayShow: React.PropTypes.number,
-    delayHide: React.PropTypes.number,
-    defaultOverlayShown: React.PropTypes.bool,
-    overlay: React.PropTypes.node.isRequired
-  },
-
-  getDefaultProps: function () {
-    return {
-      placement: 'right',
-      trigger: ['hover', 'focus']
-    };
-  },
-
-  getInitialState: function () {
-    return {
-      isOverlayShown: this.props.defaultOverlayShown === null ?
-        false : this.props.defaultOverlayShown,
-      modifiedLeft: null,
-      overlayLeft: null,
-      overlayTop: null
-    };
-  },
-
-  show: function () {
-    this.setState({
-      isOverlayShown: true
-    }, function() {
-      this.updateOverlayPosition();
-    });
-  },
-
-  hide: function () {
-    this.setState({
-      isOverlayShown: false
-    });
-  },
-
-  toggle: function () {
-    if (this.state.isOverlayShown) {
-      this.hide();
-    } else {
-      this.show();
-    }
-  },
-
-  renderOverlay: function () {
-    if (!this.state.isOverlayShown) {
-      return <span />;
-    }
-
-    return cloneWithProps(
-      this.props.overlay,
-      {
-        onRequestHide: this.hide,
-        placement: this.props.placement,
-        positionLeft: this.state.overlayLeft,
-        positionTop: this.state.overlayTop,
-        modifiedLeft: this.state.modifiedLeft
-      }
-    );
-  },
-
-  render: function () {
-    if (this.props.trigger === 'manual') {
-      return React.Children.only(this.props.children);
-    }
-
-    var props = {};
-
-    if (isOneOf('click', this.props.trigger)) {
-      props.onClick = createChainedFunction(this.toggle, this.props.onClick);
-    }
-
-    if (isOneOf('hover', this.props.trigger)) {
-      props.onMouseOver = createChainedFunction(this.handleDelayedShow, this.props.onMouseOver);
-      props.onMouseOut = createChainedFunction(this.handleDelayedHide, this.props.onMouseOut);
-    }
-
-    if (isOneOf('focus', this.props.trigger)) {
-      props.onFocus = createChainedFunction(this.handleDelayedShow, this.props.onFocus);
-      props.onBlur = createChainedFunction(this.handleDelayedHide, this.props.onBlur);
-    }
-
-    return cloneWithProps(
-      React.Children.only(this.props.children),
-      props
-    );
-  },
-
-  componentWillUnmount: function() {
-    clearTimeout(this._hoverDelay);
-  },
-
-  componentDidMount: function() {
-    this.updateOverlayPosition();
-  },
-
-  handleDelayedShow: function () {
-    if (this._hoverDelay !== null) {
-      clearTimeout(this._hoverDelay);
-      this._hoverDelay = null;
-      return;
-    }
-
-    var delay = this.props.delayShow !== null ?
-      this.props.delayShow : this.props.delay;
-
-    if (!delay) {
-      this.show();
-      return;
-    }
-
-    this._hoverDelay = setTimeout(function() {
-      this._hoverDelay = null;
-      this.show();
-    }.bind(this), delay);
-  },
-
-  handleDelayedHide: function () {
-    if (this._hoverDelay !== null) {
-      clearTimeout(this._hoverDelay);
-      this._hoverDelay = null;
-      return;
-    }
-
-    var delay = this.props.delayHide !== null ?
-      this.props.delayHide : this.props.delay;
-
-    if (!delay) {
-      this.hide();
-      return;
-    }
-
-    this._hoverDelay = setTimeout(function() {
-      this._hoverDelay = null;
-      this.hide();
-    }.bind(this), delay);
-  },
-
-  updateOverlayPosition: function () {
-    if (!this.isMounted()) {
-      return;
-    }
-
-    var pos = this.calcOverlayPosition();
-
-    var overlayNode = this.getOverlayDOMNode();
-    var overlayHeight = overlayNode.offsetHeight;
-    var overlayWidth = overlayNode.offsetWidth;
-
-    // keep the overlay on screen
-    if (pos.left + overlayWidth + 5 > window.innerWidth) {
-      adjustedLeft = window.innerWidth - overlayWidth - 5;
-    } else {
-      adjustedLeft = pos.left;
-    }
-
-    this.setState({
-      overlayLeft: adjustedLeft,
-      overlayTop: pos.top,
-      modifiedLeft: pos.left - adjustedLeft
-    });
-  },
-
-  calcOverlayPosition: function () {
-    var childOffset = this.getPosition();
-
-    var overlayNode = this.getOverlayDOMNode();
-    var overlayHeight = overlayNode.offsetHeight;
-    var overlayWidth = overlayNode.offsetWidth;
-
-    switch (this.props.placement) {
-      case 'right':
-        return {
-          top: childOffset.top + childOffset.height / 2 - overlayHeight / 2,
-          left: childOffset.left + childOffset.width
-        };
-      case 'left':
-        return {
-          top: childOffset.top + childOffset.height / 2 - overlayHeight / 2,
-          left: childOffset.left - overlayWidth
-        };
-      case 'top':
-        return {
-          top: childOffset.top - overlayHeight,
-          left: childOffset.left + childOffset.width / 2 - overlayWidth / 2
-        };
-      case 'bottom':
-        return {
-          top: childOffset.top + childOffset.height,
-          left: childOffset.left + childOffset.width / 2 - overlayWidth / 2
-        };
-      default:
-        throw new Error('calcOverlayPosition(): No such placement of "' + this.props.placement + '" found.');
-    }
-  },
-
-  getPosition: function () {
-    var node = this.getDOMNode();
-    var container = this.getContainerDOMNode();
-
-    var offset = container.tagName == 'BODY' ?
-      domUtils.getOffset(node) : domUtils.getPosition(node, container);
-
-    return assign({}, offset, {
-      height: node.offsetHeight,
-      width: node.offsetWidth
-    });
-  }
-});
-
-module.exports = OverlayTrigger;
diff --git a/src/sentry/static/sentry/app/components/tooltipTrigger.jsx b/src/sentry/static/sentry/app/components/tooltipTrigger.jsx
new file mode 100644
index 0000000000..4f387ad375
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/tooltipTrigger.jsx
@@ -0,0 +1,37 @@
+/*** @jsx React.DOM */
+var React = require("react");
+
+var $ = require("jquery");
+require("bootstrap/js/tooltip");
+
+var TooltipTrigger = React.createClass({
+  propTypes: {
+    title: React.PropTypes.node.isRequired,
+    placement: React.PropTypes.string
+  },
+
+  getDefaultProps() {
+    return {
+      placement: 'left'
+    };
+  },
+
+  componentDidMount() {
+    // These can be configured via options; this is just a demo
+    $(this.getDOMNode()).tooltip({
+      placement: this.props.placement,
+      title: React.renderToString(this.props.title),
+      html: true
+    });
+  },
+
+  componentWillUnmount() {
+    var node = $(this.getDOMNode());
+    node.tooltip('destroy');
+    node.unbind('show.bs.tooltip', 'shown.bs.tooltip', 'hide.bs.tooltip', 'hidden.bs.tooltip');
+  },
+
+  render() {
+    return this.props.children;
+  }
+});
diff --git a/webpack.config.js b/webpack.config.js
index 4f93e40189..5acdda072e 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -9,6 +9,8 @@ module.exports = {
   entry: {
     "app": "app",
     "vendor": [
+      "bootstrap/js/dropdown",
+      "bootstrap/js/tooltip",
       "crypto-js/md5",
       "jquery",
       "moment",
