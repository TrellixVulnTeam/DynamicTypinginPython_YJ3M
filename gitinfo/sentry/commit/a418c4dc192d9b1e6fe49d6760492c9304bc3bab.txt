commit a418c4dc192d9b1e6fe49d6760492c9304bc3bab
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Aug 13 23:40:40 2015 -0700

    Add basic rendering of Ruby raw stacks

diff --git a/src/sentry/static/sentry/app/components/interfaces/rawStacktraceContent.jsx b/src/sentry/static/sentry/app/components/interfaces/rawStacktraceContent.jsx
index 7e1cd879b5..6075877c27 100644
--- a/src/sentry/static/sentry/app/components/interfaces/rawStacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/interfaces/rawStacktraceContent.jsx
@@ -12,6 +12,10 @@ var RawStacktraceContent = React.createClass({
     switch (this.props.platform) {
       case "javascript":
         return this.getJavaScriptFrame(frame);
+      case "ruby":
+        return this.getRubyFrame(frame);
+      case "python":
+        return this.getPythonFrame(frame);
       default:
         return this.getDefaultFrame(frame);
     }
@@ -39,7 +43,28 @@ var RawStacktraceContent = React.createClass({
     return result;
   },
 
-  getDefaultFrame(frame) {
+  getRubyFrame(frame) {
+    var result = '  from ';
+    if (defined(frame.filename)) {
+      result += frame.filename;
+    } else if (defined(frame.module)) {
+      result += '(' + frame.module + ')';
+    } else {
+      result += '?';
+    }
+    if (defined(frame.lineNo) && frame.lineNo >= 0) {
+      result += ':' + frame.lineNo;
+    }
+    if (defined(frame.colNo) && frame.colNo >= 0) {
+      result += ':' + frame.colNo;
+    }
+    if (defined(frame.function)) {
+      result += ':in `' + frame.function + '\'';
+    }
+    return result;
+  },
+
+  getPythonFrame(frame) {
     var result = '';
     if (defined(frame.filename)) {
       result += '  File "' + frame.filename + '"';
@@ -67,6 +92,10 @@ var RawStacktraceContent = React.createClass({
     return result;
   },
 
+  getDefaultFrame(frame) {
+    return this.getPythonFrame(frame);
+  },
+
   render() {
     var data = this.props.data;
     var firstFrameOmitted, lastFrameOmitted;
