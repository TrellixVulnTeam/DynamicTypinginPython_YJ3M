commit 1e65325e5ed5196e35ed05d1d53a39d7ce64f7a3
Author: Stephen Cefali <scefali@sentry.io>
Date:   Fri Nov 1 10:23:18 2019 -0700

    Fix/sentry plugins tests failing (#15385)

diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 9ff3a8d685..5d95363eba 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -663,6 +663,19 @@ class PluginTestCase(TestCase):
             self.addCleanup(plugins.unregister, self.plugin)
 
     def assertAppInstalled(self, name, path):
+        for ep in iter_entry_points("sentry.apps"):
+            if ep.name == name:
+                ep_path = ep.module_name
+                if ep_path == path:
+                    return
+                self.fail(
+                    "Found app in entry_points, but wrong class. Got %r, expected %r"
+                    % (ep_path, path)
+                )
+        self.fail("Missing app from entry_points: %r" % (name,))
+
+    # TODO (Steve): remove function
+    def assertNewAppInstalled(self, name, path):
         for ep in iter_entry_points("sentry.new_apps"):
             if ep.name == name:
                 ep_path = ep.module_name
@@ -676,7 +689,20 @@ class PluginTestCase(TestCase):
 
     def assertPluginInstalled(self, name, plugin):
         path = type(plugin).__module__ + ":" + type(plugin).__name__
-        # TODO (Steve): change new_plugins to plugins
+        for ep in iter_entry_points("sentry.plugins"):
+            if ep.name == name:
+                ep_path = ep.module_name + ":" + ".".join(ep.attrs)
+                if ep_path == path:
+                    return
+                self.fail(
+                    "Found plugin in entry_points, but wrong class. Got %r, expected %r"
+                    % (ep_path, path)
+                )
+        self.fail("Missing plugin from entry_points: %r" % (name,))
+
+    # TODO (Steve): remove function
+    def assertNewPluginInstalled(self, name, plugin):
+        path = type(plugin).__module__ + ":" + type(plugin).__name__
         for ep in iter_entry_points("sentry.new_plugins"):
             if ep.name == name:
                 ep_path = ep.module_name + ":" + ".".join(ep.attrs)
diff --git a/tests/sentry_plugins/amazon_sqs/test_plugin.py b/tests/sentry_plugins/amazon_sqs/test_plugin.py
index c4ac78a415..67f131f4dc 100644
--- a/tests/sentry_plugins/amazon_sqs/test_plugin.py
+++ b/tests/sentry_plugins/amazon_sqs/test_plugin.py
@@ -19,7 +19,7 @@ class AmazonSQSPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "amazon-sqs"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("amazon_sqs", self.plugin)
+        self.assertNewPluginInstalled("amazon_sqs", self.plugin)
 
     def run_test(self):
         self.plugin.set_option("access_key", "access-key", self.project)
diff --git a/tests/sentry_plugins/asana/test_plugin.py b/tests/sentry_plugins/asana/test_plugin.py
index bfe1723a5f..f5a818ef2a 100644
--- a/tests/sentry_plugins/asana/test_plugin.py
+++ b/tests/sentry_plugins/asana/test_plugin.py
@@ -26,7 +26,7 @@ class AsanaPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "asana"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("asana", self.plugin)
+        self.assertNewPluginInstalled("asana", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/bitbucket/test_plugin.py b/tests/sentry_plugins/bitbucket/test_plugin.py
index 2aaea1a11f..c5c1361d9f 100644
--- a/tests/sentry_plugins/bitbucket/test_plugin.py
+++ b/tests/sentry_plugins/bitbucket/test_plugin.py
@@ -26,7 +26,7 @@ class BitbucketPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "bitbucket"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("bitbucket", self.plugin)
+        self.assertNewPluginInstalled("bitbucket", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/clubhouse/test_plugin.py b/tests/sentry_plugins/clubhouse/test_plugin.py
index b842f304a5..01d6660682 100644
--- a/tests/sentry_plugins/clubhouse/test_plugin.py
+++ b/tests/sentry_plugins/clubhouse/test_plugin.py
@@ -24,7 +24,7 @@ class ClubhousePluginTest(PluginTestCase):
         assert self.plugin.conf_key == "clubhouse"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("clubhouse", self.plugin)
+        self.assertNewPluginInstalled("clubhouse", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/github/test_plugin.py b/tests/sentry_plugins/github/test_plugin.py
index b8cf0851f4..1854daa655 100644
--- a/tests/sentry_plugins/github/test_plugin.py
+++ b/tests/sentry_plugins/github/test_plugin.py
@@ -26,7 +26,7 @@ class GitHubPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "github"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("github", self.plugin)
+        self.assertNewPluginInstalled("github", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/gitlab/test_plugin.py b/tests/sentry_plugins/gitlab/test_plugin.py
index f8b29782bc..38a582acf5 100644
--- a/tests/sentry_plugins/gitlab/test_plugin.py
+++ b/tests/sentry_plugins/gitlab/test_plugin.py
@@ -24,7 +24,7 @@ class GitLabPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "gitlab"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("gitlab", self.plugin)
+        self.assertNewPluginInstalled("gitlab", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/jira_ac/test_plugin.py b/tests/sentry_plugins/jira_ac/test_plugin.py
index 7b326c66e3..56bc138803 100644
--- a/tests/sentry_plugins/jira_ac/test_plugin.py
+++ b/tests/sentry_plugins/jira_ac/test_plugin.py
@@ -20,5 +20,5 @@ class JiraPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "jira-ac"
 
     def test_entry_point(self):
-        self.assertAppInstalled("jira_ac", "new_sentry_plugins.jira_ac")
-        self.assertPluginInstalled("jira_ac", self.plugin)
+        self.assertNewAppInstalled("jira_ac", "new_sentry_plugins.jira_ac")
+        self.assertNewPluginInstalled("jira_ac", self.plugin)
diff --git a/tests/sentry_plugins/pagerduty/test_plugin.py b/tests/sentry_plugins/pagerduty/test_plugin.py
index 5dd169680b..9a7e816e9d 100644
--- a/tests/sentry_plugins/pagerduty/test_plugin.py
+++ b/tests/sentry_plugins/pagerduty/test_plugin.py
@@ -32,7 +32,7 @@ class PagerDutyPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "pagerduty"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("pagerduty", self.plugin)
+        self.assertNewPluginInstalled("pagerduty", self.plugin)
 
     def test_is_configured(self):
         assert self.plugin.is_configured(self.project) is False
diff --git a/tests/sentry_plugins/phabricator/test_plugin.py b/tests/sentry_plugins/phabricator/test_plugin.py
index 4bb93064e9..f97be2b438 100644
--- a/tests/sentry_plugins/phabricator/test_plugin.py
+++ b/tests/sentry_plugins/phabricator/test_plugin.py
@@ -22,7 +22,7 @@ class PhabricatorPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "phabricator"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("phabricator", self.plugin)
+        self.assertNewPluginInstalled("phabricator", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/pivotal/test_pivotal_plugin.py b/tests/sentry_plugins/pivotal/test_pivotal_plugin.py
index 7d2f6e4deb..e868ded260 100644
--- a/tests/sentry_plugins/pivotal/test_pivotal_plugin.py
+++ b/tests/sentry_plugins/pivotal/test_pivotal_plugin.py
@@ -17,7 +17,7 @@ class PivotalPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "pivotal"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("pivotal", self.plugin)
+        self.assertNewPluginInstalled("pivotal", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/pushover/test_plugin.py b/tests/sentry_plugins/pushover/test_plugin.py
index aea4acf552..1f177e68d0 100644
--- a/tests/sentry_plugins/pushover/test_plugin.py
+++ b/tests/sentry_plugins/pushover/test_plugin.py
@@ -24,7 +24,7 @@ class PushoverPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "pushover"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("pushover", self.plugin)
+        self.assertNewPluginInstalled("pushover", self.plugin)
 
     def test_is_configured(self):
         assert self.plugin.is_configured(self.project) is False
diff --git a/tests/sentry_plugins/segment/test_plugin.py b/tests/sentry_plugins/segment/test_plugin.py
index a3c22f4ef2..9a17a6f578 100644
--- a/tests/sentry_plugins/segment/test_plugin.py
+++ b/tests/sentry_plugins/segment/test_plugin.py
@@ -18,7 +18,7 @@ class SegmentPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "segment"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("segment", self.plugin)
+        self.assertNewPluginInstalled("segment", self.plugin)
 
     @responses.activate
     def test_simple_notification(self):
diff --git a/tests/sentry_plugins/sessionstack/test_plugin.py b/tests/sentry_plugins/sessionstack/test_plugin.py
index 8d21347766..ff741a80e3 100644
--- a/tests/sentry_plugins/sessionstack/test_plugin.py
+++ b/tests/sentry_plugins/sessionstack/test_plugin.py
@@ -26,7 +26,7 @@ class SessionStackPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "sessionstack"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("sessionstack", self.plugin)
+        self.assertNewPluginInstalled("sessionstack", self.plugin)
 
     @responses.activate
     def test_config_validation(self):
diff --git a/tests/sentry_plugins/slack/test_plugin.py b/tests/sentry_plugins/slack/test_plugin.py
index 79d42985cb..5d37820134 100644
--- a/tests/sentry_plugins/slack/test_plugin.py
+++ b/tests/sentry_plugins/slack/test_plugin.py
@@ -21,7 +21,7 @@ class SlackPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "slack"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("slack", self.plugin)
+        self.assertNewPluginInstalled("slack", self.plugin)
 
     @responses.activate
     def test_simple_notification(self):
diff --git a/tests/sentry_plugins/splunk/test_plugin.py b/tests/sentry_plugins/splunk/test_plugin.py
index 36f684b0b0..a5fe0c9f46 100644
--- a/tests/sentry_plugins/splunk/test_plugin.py
+++ b/tests/sentry_plugins/splunk/test_plugin.py
@@ -18,7 +18,7 @@ class SplunkPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "splunk"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("splunk", self.plugin)
+        self.assertNewPluginInstalled("splunk", self.plugin)
 
     @responses.activate
     def test_simple_notification(self):
diff --git a/tests/sentry_plugins/victorops/test_plugin.py b/tests/sentry_plugins/victorops/test_plugin.py
index 4d9980bf41..bf9c101cc7 100644
--- a/tests/sentry_plugins/victorops/test_plugin.py
+++ b/tests/sentry_plugins/victorops/test_plugin.py
@@ -37,7 +37,7 @@ class VictorOpsPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "victorops"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("victorops", self.plugin)
+        self.assertNewPluginInstalled("victorops", self.plugin)
 
     def test_is_configured(self):
         assert self.plugin.is_configured(self.project) is False
diff --git a/tests/sentry_plugins/vsts/test_plugin.py b/tests/sentry_plugins/vsts/test_plugin.py
index dc3fdd3c12..dc66c68091 100644
--- a/tests/sentry_plugins/vsts/test_plugin.py
+++ b/tests/sentry_plugins/vsts/test_plugin.py
@@ -72,7 +72,7 @@ class VstsPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "vsts"
 
     def test_entry_point(self):
-        self.assertPluginInstalled("vsts", self.plugin)
+        self.assertNewPluginInstalled("vsts", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
