commit a81dfa063618b556352c1025a72fc0568a3f635e
Author: Colleen O'Rourke <colleen@sentry.io>
Date:   Thu Feb 13 12:51:14 2020 -0800

    ref(pagerduty): Drop sentry_pagerdutyserviceproject table (#17025)

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index 8d9e29c69c..d3ff9838f4 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0037_auto_20200213_0140
+sentry: 0038_auto_20200213_1904
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/migrations/0038_auto_20200213_1904.py b/src/sentry/migrations/0038_auto_20200213_1904.py
new file mode 100644
index 0000000000..f07069c482
--- /dev/null
+++ b/src/sentry/migrations/0038_auto_20200213_1904.py
@@ -0,0 +1,49 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.28 on 2020-02-13 19:04
+from __future__ import unicode_literals
+
+from django.db import migrations
+import sentry.db.models.fields.bounded
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+
+    dependencies = [
+        ('sentry', '0037_auto_20200213_0140'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='exporteddata',
+            name='query_type',
+            field=sentry.db.models.fields.bounded.BoundedPositiveIntegerField(choices=[(0, b'DISCOVER_V2'), (1, b'BILLING_REPORT'), (2, b'ISSUE_BY_TAG')]),
+        ),
+        migrations.SeparateDatabaseAndState(
+                    database_operations=[
+                        migrations.RunSQL(
+                            """
+                            DROP TABLE "sentry_pagerdutyserviceproject";
+                            """,
+                            reverse_sql="",
+                        )
+                    ],
+                    state_operations=[],
+                )
+    ]
