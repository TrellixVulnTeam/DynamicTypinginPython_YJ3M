commit 8eaf92d6553013bc1d4c6832bd65e7bd2a457a5c
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jan 19 21:27:32 2013 -0800

    send_fake_data now randomizes the timestamp

diff --git a/src/sentry/management/commands/send_fake_data.py b/src/sentry/management/commands/send_fake_data.py
index c42099497c..a46bfb4905 100644
--- a/src/sentry/management/commands/send_fake_data.py
+++ b/src/sentry/management/commands/send_fake_data.py
@@ -6,6 +6,7 @@ sentry.management.commands.send_fake_data
 :copyright: (c) 2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+import datetime
 import itertools
 import random
 import time
@@ -17,12 +18,16 @@ def funcs():
     exceptions = itertools.cycle([SyntaxError('foo must come before bar'), ValueError('baz is not a valid choice'), TypeError('NoneType cannot be coerced to bar')])
     loggers = itertools.cycle(['root', 'foo', 'foo.bar'])
     emails = itertools.cycle(['foo@example.com', 'bar@example.com', 'baz@example.com'])
+    timestamps = range(24 * 60 * 60)
+    random.shuffle(timestamps)
+    timestamps = itertools.cycle(timestamps)
 
     # def query(client):
     #     duration = random.randint(0, 10000) / 1000.0
     #     return client.capture('Query', query=queries.next(), engine=engine.next(), time_spent=duration, data={'logger': loggers.next(), 'site': 'sql'})
 
     def exception(client):
+        timestamp = datetime.datetime.utcnow() - datetime.timedelta(seconds=timestamps.next())
         try:
             raise exceptions.next()
         except Exception:
@@ -34,7 +39,7 @@ def funcs():
                     'id': email,
                     'email': email,
                 }
-            })
+            }, date=timestamp)
 
     return [exception]
 
