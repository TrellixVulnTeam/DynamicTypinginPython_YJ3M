commit a46e74523a61ffe39946c1361389b854a599a9bd
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Sep 13 10:42:13 2018 -0700

    fix(integrations): Ensure we migrate all eligible bitbucket repos

diff --git a/src/sentry/integrations/bitbucket/client.py b/src/sentry/integrations/bitbucket/client.py
index 1e94222a66..54ebab3964 100644
--- a/src/sentry/integrations/bitbucket/client.py
+++ b/src/sentry/integrations/bitbucket/client.py
@@ -131,6 +131,13 @@ class BitbucketApiClient(ApiClient):
             data=data
         )
 
+    def get_hooks(self, repo):
+        return self.get(
+            path=BitbucketAPIPath.repository_hooks.format(
+                repo=repo,
+            ),
+        )
+
     def delete_hook(self, repo, hook_id):
         return self.delete(path=BitbucketAPIPath.repository_hook.format(
             repo=repo,
diff --git a/src/sentry/integrations/bitbucket/integration.py b/src/sentry/integrations/bitbucket/integration.py
index fe2560ae15..4cef5194a7 100644
--- a/src/sentry/integrations/bitbucket/integration.py
+++ b/src/sentry/integrations/bitbucket/integration.py
@@ -2,13 +2,14 @@ from __future__ import absolute_import
 
 from sentry.integrations import IntegrationInstallation, IntegrationFeatures, IntegrationProvider, IntegrationMetadata
 from sentry.integrations.atlassian_connect import AtlassianConnectValidationError, get_integration_from_request
-from sentry.integrations.migrate import PluginMigrator
 from sentry.integrations.repositories import RepositoryMixin
 from sentry.pipeline import NestedPipelineView, PipelineView
 from sentry.identity.pipeline import IdentityProviderPipeline
 from django.utils.translation import ugettext_lazy as _
 
+from sentry.integrations.exceptions import ApiError
 from sentry.models import Repository
+from sentry.tasks.integrations import migrate_repo
 from sentry.utils.http import absolute_uri
 
 from .repository import BitbucketRepositoryProvider
@@ -74,6 +75,14 @@ class BitbucketIntegration(IntegrationInstallation, BitbucketIssueBasicMixin, Re
             'name': i['full_name']
         } for i in resp.get('values', [])]
 
+    def has_repo_access(self, repo):
+        client = self.get_client()
+        try:
+            client.get_hooks(repo.config['name'])
+        except ApiError:
+            return False
+        return True
+
     def get_unmigratable_repositories(self):
         repos = Repository.objects.filter(
             organization_id=self.organization_id,
@@ -114,22 +123,17 @@ class BitbucketIntegrationProvider(IntegrationProvider):
         return [identity_pipeline_view, VerifyInstallation()]
 
     def post_install(self, integration, organization):
-        repos = Repository.objects.filter(
+        repo_ids = Repository.objects.filter(
             organization_id=organization.id,
             provider='bitbucket',
-        )
-
-        unmigrateable_repos = self \
-            .get_installation(integration, organization.id) \
-            .get_unmigratable_repositories()
-
-        for repo in filter(lambda r: r not in unmigrateable_repos, repos):
-            repo.update(
-                integration_id=integration.id,
-                provider='integrations:bitbucket',
-            )
-
-        PluginMigrator(integration, organization).call()
+        ).values_list('id', flat=True)
+
+        for repo_id in repo_ids:
+            migrate_repo.apply_async(kwargs={
+                'repo_id': repo_id,
+                'integration_id': integration.id,
+                'organization_id': organization.id,
+            })
 
     def build_integration(self, state):
         if state.get('publicKey'):
diff --git a/tests/sentry/integrations/bitbucket/test_installed.py b/tests/sentry/integrations/bitbucket/test_installed.py
index ef7c56c9ac..b7080a84fe 100644
--- a/tests/sentry/integrations/bitbucket/test_installed.py
+++ b/tests/sentry/integrations/bitbucket/test_installed.py
@@ -102,6 +102,7 @@ class BitbucketInstalledEndpointTest(APITestCase):
             url='https://bitbucket.org/sentryuser/repo',
             provider='bitbucket',
             external_id='123456',
+            config={'name': 'sentryuser/repo'},
         )
 
         inaccessible_repo = Repository.objects.create(
@@ -110,6 +111,7 @@ class BitbucketInstalledEndpointTest(APITestCase):
             url='https://bitbucket.org/otheruser/otherrepo',
             provider='bitbucket',
             external_id='654321',
+            config={'name': 'otheruser/otherrepo'},
         )
 
         self.client.post(
@@ -124,26 +126,31 @@ class BitbucketInstalledEndpointTest(APITestCase):
 
         responses.add(
             responses.GET,
-            u'https://api.bitbucket.org/2.0/repositories/{}'.format(self.username),
+            u'https://api.bitbucket.org/2.0/repositories/{}/hooks'.format(accessible_repo.name),
             json={
                 'values': [{
-                    'full_name': 'sentryuser/repo',
+                    'description': 'sentry-bitbucket-repo-hook',
                 }],
             },
         )
 
-        BitbucketIntegrationProvider().post_install(
-            integration,
-            self.organization,
-        )
+        with self.tasks():
+            BitbucketIntegrationProvider().post_install(
+                integration,
+                self.organization,
+            )
+
+            assert Repository.objects.get(
+                id=accessible_repo.id
+            ).integration_id == integration.id
 
-        assert Repository.objects.get(
-            id=accessible_repo.id
-        ).integration_id == integration.id
+            assert Repository.objects.get(
+                id=accessible_repo.id
+            ).provider == 'integrations:bitbucket'
 
-        assert Repository.objects.get(
-            id=inaccessible_repo.id
-        ).integration_id is None
+            assert Repository.objects.get(
+                id=inaccessible_repo.id
+            ).integration_id is None
 
     @responses.activate
     def test_disable_plugin_when_fully_migrated(self):
@@ -161,6 +168,7 @@ class BitbucketInstalledEndpointTest(APITestCase):
             url='https://bitbucket.org/sentryuser/repo',
             provider='bitbucket',
             external_id='123456',
+            config={'name': 'sentryuser/repo'},
         )
 
         self.client.post(
@@ -175,22 +183,23 @@ class BitbucketInstalledEndpointTest(APITestCase):
 
         responses.add(
             responses.GET,
-            u'https://api.bitbucket.org/2.0/repositories/{}'.format(self.username),
+            u'https://api.bitbucket.org/2.0/repositories/sentryuser/repo/hooks',
             json={
                 'values': [{
-                    'full_name': 'sentryuser/repo',
+                    'description': 'sentry-bitbucket-repo-hook',
                 }],
             },
         )
 
         assert 'bitbucket' in [p.slug for p in plugins.for_project(project)]
 
-        BitbucketIntegrationProvider().post_install(
-            integration,
-            self.organization,
-        )
+        with self.tasks():
+            BitbucketIntegrationProvider().post_install(
+                integration,
+                self.organization,
+            )
 
-        assert 'bitbucket' not in [p.slug for p in plugins.for_project(project)]
+            assert 'bitbucket' not in [p.slug for p in plugins.for_project(project)]
 
     def test_installed_without_public_key(self):
         integration = Integration.objects.get_or_create(
