commit a5ae8b859d539b0b3d5c2ccdece444e6b15e0005
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Aug 3 18:02:03 2017 -0700

    chore: use jest serializer for enzyme-to-json (#5797)
    
    * Use jest serializer for enzyme-to-json

diff --git a/package.json b/package.json
index 18c5e1e770..bb8b644c7b 100644
--- a/package.json
+++ b/package.json
@@ -81,6 +81,7 @@
     "lint": "node_modules/.bin/eslint tests/js src/sentry/static/sentry/app --ext .jsx"
   },
   "jest": {
+    "snapshotSerializers": ["enzyme-to-json/serializer"],
     "modulePaths": [
       "<rootDir>/src/sentry/static/sentry"
     ],
diff --git a/tests/js/spec/components/customResolutionModal.spec.jsx b/tests/js/spec/components/customResolutionModal.spec.jsx
index 8a54cef05e..aca4ac1a6f 100644
--- a/tests/js/spec/components/customResolutionModal.spec.jsx
+++ b/tests/js/spec/components/customResolutionModal.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import CustomResolutionModal from 'app/components/customResolutionModal';
 
@@ -15,7 +14,7 @@ describe('CustomResolutionModal', function() {
           onSelected={() => false}
         />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/detailedError.spec.jsx b/tests/js/spec/components/detailedError.spec.jsx
index 5d39be5c7e..a92673af57 100644
--- a/tests/js/spec/components/detailedError.spec.jsx
+++ b/tests/js/spec/components/detailedError.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import DetailedError from 'app/components/errors/detailedError';
 
@@ -10,7 +9,7 @@ describe('DetailedError', function() {
       <DetailedError heading="Error heading" message={<div>Message</div>} />
     );
 
-    expect(toJson(wrapper)).toMatchSnapshot();
+    expect(wrapper).toMatchSnapshot();
   });
 
   it('renders with "Retry" button', function() {
@@ -22,7 +21,7 @@ describe('DetailedError', function() {
       />
     );
 
-    expect(toJson(wrapper)).toMatchSnapshot();
+    expect(wrapper).toMatchSnapshot();
   });
 
   it('can hide support links', function() {
@@ -35,7 +34,7 @@ describe('DetailedError', function() {
       />
     );
 
-    expect(toJson(wrapper)).toMatchSnapshot();
+    expect(wrapper).toMatchSnapshot();
   });
 
   it('hides footer when no "Retry" and no support links', function() {
@@ -47,6 +46,6 @@ describe('DetailedError', function() {
       />
     );
 
-    expect(toJson(wrapper)).toMatchSnapshot();
+    expect(wrapper).toMatchSnapshot();
   });
 });
diff --git a/tests/js/spec/components/forms/booleanField.spec.jsx b/tests/js/spec/components/forms/booleanField.spec.jsx
index 1dda8b136b..467843a6fc 100644
--- a/tests/js/spec/components/forms/booleanField.spec.jsx
+++ b/tests/js/spec/components/forms/booleanField.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {BooleanField} from 'app/components/forms';
 
@@ -8,7 +7,7 @@ describe('BooleanField', function() {
   describe('render()', function() {
     it('renders without form context', function() {
       let wrapper = shallow(<BooleanField name="fieldName" />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with form context', function() {
@@ -22,7 +21,7 @@ describe('BooleanField', function() {
           }
         }
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/forms/emailField.spec.jsx b/tests/js/spec/components/forms/emailField.spec.jsx
index b8394592e4..54a3163955 100644
--- a/tests/js/spec/components/forms/emailField.spec.jsx
+++ b/tests/js/spec/components/forms/emailField.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {EmailField} from 'app/components/forms';
 
@@ -8,12 +7,12 @@ describe('EmailField', function() {
   describe('render()', function() {
     it('renders', function() {
       let wrapper = shallow(<EmailField name="fieldName" />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with value', function() {
       let wrapper = shallow(<EmailField name="fieldName" value="foo@example.com" />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with form context', function() {
@@ -27,7 +26,7 @@ describe('EmailField', function() {
           }
         }
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/forms/form.spec.jsx b/tests/js/spec/components/forms/form.spec.jsx
index 60b443d333..b4c2a21b49 100644
--- a/tests/js/spec/components/forms/form.spec.jsx
+++ b/tests/js/spec/components/forms/form.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {Form} from 'app/components/forms';
 
@@ -8,7 +7,7 @@ describe('Form', function() {
   describe('render()', function() {
     it('renders with children', function() {
       let wrapper = shallow(<Form onSubmit={() => {}}><hr /></Form>);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx b/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx
index ff8e9a3672..caa62f5d41 100644
--- a/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx
+++ b/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {MultipleCheckboxField} from 'app/components/forms';
 
@@ -14,7 +13,7 @@ describe('MultipleCheckboxField', function() {
           value={['1']}
         />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with form context', function() {
@@ -31,7 +30,7 @@ describe('MultipleCheckboxField', function() {
           }
         }
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/forms/numberField.spec.jsx b/tests/js/spec/components/forms/numberField.spec.jsx
index 261a615d48..421dfe2940 100644
--- a/tests/js/spec/components/forms/numberField.spec.jsx
+++ b/tests/js/spec/components/forms/numberField.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {NumberField} from 'app/components/forms';
 
@@ -8,17 +7,17 @@ describe('NumberField', function() {
   describe('render()', function() {
     it('renders', function() {
       let wrapper = shallow(<NumberField name="fieldName" />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with optional attributes', function() {
       let wrapper = shallow(<NumberField name="fieldName" min={0} max={100} />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with value', function() {
       let wrapper = shallow(<NumberField name="fieldName" value={5} />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with form context', function() {
@@ -32,7 +31,7 @@ describe('NumberField', function() {
           }
         }
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/forms/passwordField.spec.jsx b/tests/js/spec/components/forms/passwordField.spec.jsx
index 99468ca121..89a8cbeb30 100644
--- a/tests/js/spec/components/forms/passwordField.spec.jsx
+++ b/tests/js/spec/components/forms/passwordField.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {PasswordField} from 'app/components/forms';
 
@@ -8,12 +7,12 @@ describe('PasswordField', function() {
   describe('render()', function() {
     it('renders', function() {
       let wrapper = shallow(<PasswordField name="fieldName" />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with value', function() {
       let wrapper = shallow(<PasswordField name="fieldName" value="foobar" />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with form context', function() {
@@ -27,7 +26,7 @@ describe('PasswordField', function() {
           }
         }
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/forms/rangeField.spec.jsx b/tests/js/spec/components/forms/rangeField.spec.jsx
index 4aaae78181..464f1f2cb2 100644
--- a/tests/js/spec/components/forms/rangeField.spec.jsx
+++ b/tests/js/spec/components/forms/rangeField.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {RangeField} from 'app/components/forms';
 
@@ -8,7 +7,7 @@ describe('RangeField', function() {
   describe('render()', function() {
     it('renders', function() {
       let wrapper = shallow(<RangeField name="fieldName" />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with optional attributes', function() {
@@ -22,12 +21,12 @@ describe('RangeField', function() {
           allowedValues={[1, 2, 3]}
         />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with value', function() {
       let wrapper = shallow(<RangeField name="fieldName" value={2} />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with form context', function() {
@@ -41,7 +40,7 @@ describe('RangeField', function() {
           }
         }
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/forms/textField.spec.jsx b/tests/js/spec/components/forms/textField.spec.jsx
index 27721c10ab..80606014e3 100644
--- a/tests/js/spec/components/forms/textField.spec.jsx
+++ b/tests/js/spec/components/forms/textField.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {TextField} from 'app/components/forms';
 
@@ -8,7 +7,7 @@ describe('TextField', function() {
   describe('render()', function() {
     it('renders without form context', function() {
       let wrapper = shallow(<TextField name="fieldName" />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('renders with form context', function() {
@@ -22,7 +21,7 @@ describe('TextField', function() {
           }
         }
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/mutedBox.spec.jsx b/tests/js/spec/components/mutedBox.spec.jsx
index 7f8684e07c..ccdeb0bef3 100644
--- a/tests/js/spec/components/mutedBox.spec.jsx
+++ b/tests/js/spec/components/mutedBox.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import MutedBox from 'app/components/mutedBox';
 
@@ -10,31 +9,31 @@ describe('MutedBox', function() {
       let wrapper = shallow(
         <MutedBox statusDetails={{ignoreUntil: '2017-06-21T19:45:10Z'}} />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
     it('handles ignoreCount', function() {
       let wrapper = shallow(<MutedBox statusDetails={{ignoreUserCount: 100}} />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
     it('handles ignoreCount with ignoreWindow', function() {
       let wrapper = shallow(
         <MutedBox statusDetails={{ignoreCount: 100, ignoreWindow: 1}} />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
     it('handles ignoreUserCount', function() {
       let wrapper = shallow(<MutedBox statusDetails={{ignoreUserCount: 100}} />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
     it('handles ignoreUserCount with ignoreUserWindow', function() {
       let wrapper = shallow(
         <MutedBox statusDetails={{ignoreUserCount: 100, ignoreUserWindow: 1}} />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
     it('handles default', function() {
       let wrapper = shallow(<MutedBox statusDetails={{}} />);
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/projectHeader/projectSelector.spec.jsx b/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
index af33536577..4b8a2eceef 100644
--- a/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
+++ b/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {mount, shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import ProjectSelector from 'app/components/projectHeader/projectSelector';
 
@@ -43,7 +42,7 @@ describe('ProjectSelector', function() {
           context: {router: TestStubs.router()}
         }
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('should show empty message and create project button, when no projects and has "project:write" access', function() {
@@ -61,14 +60,14 @@ describe('ProjectSelector', function() {
           context: {router: TestStubs.router()}
         }
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('lists projects and has filter', function() {
       let wrapper = shallow(<ProjectSelector organization={mockOrg} projectId="" />, {
         context: {router: TestStubs.router()}
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('can filter projects by team name/project name', function() {
@@ -79,7 +78,7 @@ describe('ProjectSelector', function() {
       input.value = 'TEST';
       input.simulate('change', {target: input});
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('can filter projects by project name', function() {
@@ -89,7 +88,7 @@ describe('ProjectSelector', function() {
       input.value = 'another';
       input.simulate('change', {target: input});
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('shows empty filter message when filtering has no results', function() {
@@ -99,7 +98,7 @@ describe('ProjectSelector', function() {
       input.value = 'Foo';
       input.simulate('change', {target: input});
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/components/queryCount.spec.js b/tests/js/spec/components/queryCount.spec.js
index 6571971131..fb6f7c1e84 100644
--- a/tests/js/spec/components/queryCount.spec.js
+++ b/tests/js/spec/components/queryCount.spec.js
@@ -1,30 +1,29 @@
 import React from 'react';
 import {shallow} from 'enzyme';
 import QueryCount from 'app/components/queryCount';
-import toJson from 'enzyme-to-json';
 
 describe('QueryCount', function() {
   it('displays count when no max', function() {
     const wrapper = shallow(<QueryCount count={5} />);
-    expect(toJson(wrapper)).toMatchSnapshot();
+    expect(wrapper).toMatchSnapshot();
   });
   it('displays count when count < max', function() {
     const wrapper = shallow(<QueryCount count={5} max={500} />);
-    expect(toJson(wrapper)).toMatchSnapshot();
+    expect(wrapper).toMatchSnapshot();
   });
 
   it('does not render if count is 0', function() {
     const wrapper = shallow(<QueryCount count={0} />);
-    expect(toJson(wrapper)).toMatchSnapshot();
+    expect(wrapper).toMatchSnapshot();
   });
 
   it('can render when count is 0 when `hideIfEmpty` is false', function() {
     const wrapper = shallow(<QueryCount count={0} hideIfEmpty={false} />);
-    expect(toJson(wrapper)).toMatchSnapshot();
+    expect(wrapper).toMatchSnapshot();
   });
 
   it('displays max count if count >= max', function() {
     const wrapper = shallow(<QueryCount count={500} max={500} />);
-    expect(toJson(wrapper)).toMatchSnapshot();
+    expect(wrapper).toMatchSnapshot();
   });
 });
diff --git a/tests/js/spec/components/resolutionBox.spec.jsx b/tests/js/spec/components/resolutionBox.spec.jsx
index fa0adf4152..3d0505ed7b 100644
--- a/tests/js/spec/components/resolutionBox.spec.jsx
+++ b/tests/js/spec/components/resolutionBox.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import ResolutionBox from 'app/components/resolutionBox';
 
@@ -13,7 +12,7 @@ describe('ResolutionBox', function() {
           params={{orgId: 'org', projectId: 'project'}}
         />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
     it('handles inNextRelease with actor', function() {
       let wrapper = shallow(
@@ -25,7 +24,7 @@ describe('ResolutionBox', function() {
           params={{orgId: 'org', projectId: 'project'}}
         />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
     it('handles inRelease', function() {
       let wrapper = shallow(
@@ -36,7 +35,7 @@ describe('ResolutionBox', function() {
           params={{orgId: 'org', projectId: 'project'}}
         />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
     it('handles inRelease with actor', function() {
       let wrapper = shallow(
@@ -48,13 +47,13 @@ describe('ResolutionBox', function() {
           params={{orgId: 'org', projectId: 'project'}}
         />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
     it('handles default', function() {
       let wrapper = shallow(
         <ResolutionBox statusDetails={{}} params={{orgId: 'org', projectId: 'project'}} />
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/adminSettings.spec.jsx b/tests/js/spec/views/adminSettings.spec.jsx
index bc59f4f8c6..11c91d5abd 100644
--- a/tests/js/spec/views/adminSettings.spec.jsx
+++ b/tests/js/spec/views/adminSettings.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import AdminSettings from 'app/views/adminSettings';
 
@@ -121,7 +120,7 @@ describe('AdminSettings', function() {
           router: TestStubs.router()
         }
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/apiNewToken.spec.jsx b/tests/js/spec/views/apiNewToken.spec.jsx
index d52b778f5e..96b0f2d5fc 100644
--- a/tests/js/spec/views/apiNewToken.spec.jsx
+++ b/tests/js/spec/views/apiNewToken.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import ApiNewToken from 'app/views/apiNewToken';
 
@@ -12,7 +11,7 @@ describe('ApiNewToken', function() {
           router: TestStubs.router()
         }
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/groupDetails/actions.spec.jsx b/tests/js/spec/views/groupDetails/actions.spec.jsx
index d204d1da01..b220df305f 100644
--- a/tests/js/spec/views/groupDetails/actions.spec.jsx
+++ b/tests/js/spec/views/groupDetails/actions.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import GroupActions from 'app/views/groupDetails/actions';
 import ConfigStore from 'app/stores/configStore';
@@ -39,7 +38,7 @@ describe('GroupActions', function() {
           }
         }
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/onboarding/configure/index.spec.jsx b/tests/js/spec/views/onboarding/configure/index.spec.jsx
index 60931bbb82..fe4efd97ac 100644
--- a/tests/js/spec/views/onboarding/configure/index.spec.jsx
+++ b/tests/js/spec/views/onboarding/configure/index.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow, mount} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {Client} from 'app/api';
 import Configure from 'app/views/onboarding/configure';
@@ -45,7 +44,7 @@ describe('Configure should render correctly', function() {
       );
 
       wrapper.update();
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
       expect(handleSubmitStub.callCount).toEqual(0);
     });
 
@@ -75,7 +74,7 @@ describe('Configure should render correctly', function() {
         }
       });
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
       expect(handleSubmitStub.callCount).toEqual(1);
     });
 
@@ -106,7 +105,7 @@ describe('Configure should render correctly', function() {
         },
         childContextTypes: {organization: PropTypes.Organization}
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
       expect(this.stubbedApiRequest.callCount).toEqual(4);
     });
   });
diff --git a/tests/js/spec/views/onboarding/index.spec.jsx b/tests/js/spec/views/onboarding/index.spec.jsx
index 03ed950190..ccd4397c5c 100644
--- a/tests/js/spec/views/onboarding/index.spec.jsx
+++ b/tests/js/spec/views/onboarding/index.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow, mount} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {Client} from 'app/api';
 import OnboardingWizard from 'app/views/onboarding/';
@@ -36,7 +35,7 @@ describe('OnboardingWizard', function() {
       let wrapper = shallow(<OnboardingWizard {...props} />, {
         organization: {id: '1337', slug: 'testOrg'}
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('should fill in project name if its empty when platform is chosen', function() {
@@ -79,7 +78,7 @@ describe('OnboardingWizard', function() {
       node.props().onClick();
       expect(wrapper.state().projectName).toBe('another');
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/onboarding/progress.spec.jsx b/tests/js/spec/views/onboarding/progress.spec.jsx
index 9cab3434f3..6e403aa386 100644
--- a/tests/js/spec/views/onboarding/progress.spec.jsx
+++ b/tests/js/spec/views/onboarding/progress.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import ProgressNodes from 'app/views/onboarding/progress';
 
@@ -29,7 +28,7 @@ describe('ProgressNodes', function() {
 
       expect(wrapper.find('.done')).toHaveLength(2);
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('should render step 1 if has projectId', function() {
@@ -50,7 +49,7 @@ describe('ProgressNodes', function() {
 
       expect(wrapper.find('.done')).toHaveLength(4);
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/onboarding/project/index.spec.jsx b/tests/js/spec/views/onboarding/project/index.spec.jsx
index 9efda5133f..9ea5d3a259 100644
--- a/tests/js/spec/views/onboarding/project/index.spec.jsx
+++ b/tests/js/spec/views/onboarding/project/index.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow, mount} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {Client} from 'app/api';
 import Project from 'app/views/onboarding/project';
@@ -40,7 +39,7 @@ describe('Project', function() {
       let wrapper = shallow(<Project {...props} />, {
         organization: {id: '1337', slug: 'testOrg'}
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('should set required class on empty submit', function() {
@@ -67,7 +66,7 @@ describe('Project', function() {
       submit.simulate('click');
       expect(wrapper.state().projectRequired).toBe(false);
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
index fe8238dae8..09d279cf5c 100644
--- a/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
+++ b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow, mount} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import {Client} from 'app/api';
 import PlatformPicker from 'app/views/onboarding/project/platformpicker';
@@ -42,7 +41,7 @@ describe('PlatformPicker', function() {
       expect(filteredPlatforms).not.toContain('java');
       expect(filteredPlatforms).toContain(categoryLists.Mobile[0]);
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('should render renderPlatformList with Python when filtered with py', function() {
@@ -60,7 +59,7 @@ describe('PlatformPicker', function() {
       expect(filteredPlatforms).not.toContain('java');
       expect(filteredPlatforms).toContain('python-flask');
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('should render renderPlatformList with community SDKs message if platform not found', function() {
@@ -73,7 +72,7 @@ describe('PlatformPicker', function() {
 
       expect(wrapper.text()).toContain('Not finding your platform?');
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
 
     it('should update State.tab onClick when particular tab is clicked', function() {
@@ -99,7 +98,7 @@ describe('PlatformPicker', function() {
       expect(wrapper.state().tab).not.toBe('Popular');
       expect(wrapper.state().tab).toBe('All');
 
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/organizationCreate.spec.jsx b/tests/js/spec/views/organizationCreate.spec.jsx
index f3cbae030a..e66ac8278b 100644
--- a/tests/js/spec/views/organizationCreate.spec.jsx
+++ b/tests/js/spec/views/organizationCreate.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import OrganizationCreate from 'app/views/organizationCreate';
 
@@ -10,7 +9,7 @@ describe('OrganizationCreate', function() {
       let wrapper = shallow(<OrganizationCreate />, {
         context: {router: TestStubs.router()}
       });
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/projectAlertSettings.spec.jsx b/tests/js/spec/views/projectAlertSettings.spec.jsx
index 9953c2a463..ffa596f633 100644
--- a/tests/js/spec/views/projectAlertSettings.spec.jsx
+++ b/tests/js/spec/views/projectAlertSettings.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import ProjectAlertSettings from 'app/views/projectAlertSettings';
 
@@ -34,7 +33,7 @@ describe('ProjectAlertSettings', function() {
           }
         }
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/teamCreate.spec.jsx b/tests/js/spec/views/teamCreate.spec.jsx
index 1f38e1c106..f6e30920f9 100644
--- a/tests/js/spec/views/teamCreate.spec.jsx
+++ b/tests/js/spec/views/teamCreate.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import TeamCreate from 'app/views/teamCreate';
 
@@ -17,7 +16,7 @@ describe('TeamCreate', function() {
           context: {router: TestStubs.router()}
         }
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
diff --git a/tests/js/spec/views/teamSettings.spec.jsx b/tests/js/spec/views/teamSettings.spec.jsx
index 930533c7bc..d10e384a68 100644
--- a/tests/js/spec/views/teamSettings.spec.jsx
+++ b/tests/js/spec/views/teamSettings.spec.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {shallow} from 'enzyme';
-import toJson from 'enzyme-to-json';
 
 import TeamSettings from 'app/views/teamSettings';
 
@@ -20,7 +19,7 @@ describe('TeamSettings', function() {
           }
         }
       );
-      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(wrapper).toMatchSnapshot();
     });
   });
 });
