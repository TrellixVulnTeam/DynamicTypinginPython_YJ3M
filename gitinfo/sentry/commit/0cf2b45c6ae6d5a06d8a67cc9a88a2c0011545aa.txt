commit 0cf2b45c6ae6d5a06d8a67cc9a88a2c0011545aa
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Nov 20 13:23:15 2015 -0800

    Capture snooze duration on activity events

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 3dd97010b5..63353480e1 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -368,8 +368,13 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
             if group_list and happened:
                 if new_status == GroupStatus.UNRESOLVED:
                     activity_type = Activity.SET_UNRESOLVED
+                    activity_data = {}
                 elif new_status == GroupStatus.MUTED:
                     activity_type = Activity.SET_MUTED
+                    activity_data = {
+                        'snoozeUntil': result['snoozeUntil'],
+                        'snoozeDuration': result['snoozeDuration'],
+                    }
 
                 for group in group_list:
                     group.status = new_status
@@ -378,6 +383,7 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
                         group=group,
                         type=activity_type,
                         user=acting_user,
+                        data=activity_data,
                     )
                     activity.send_notification()
 
diff --git a/src/sentry/static/sentry/app/components/duration.jsx b/src/sentry/static/sentry/app/components/duration.jsx
new file mode 100644
index 0000000000..b2de4be66b
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/duration.jsx
@@ -0,0 +1,35 @@
+import React from 'react';
+
+const Duration = React.createClass({
+  propTypes: {
+    seconds: React.PropTypes.number.isRequired
+  },
+
+  getDuration() {
+    let value = Math.abs(this.props.seconds * 1000);
+    let result = '';
+
+    if (value >= 7200000) {
+      result = Math.round(value / 3600000);
+      result = (result !== 1 ? result + ' hours' : result + 'hour');
+    } else if (value >= 120000) {
+      result = Math.round(value / 60000);
+      result = (result !== 1 ? result + ' minutes' : result + 'minute');
+    } else if (value >= 1000) {
+      result = Math.round(value / 1000);
+      result = (result !== 1 ? result + ' seconds' : result + 'second');
+    } else {
+      result = Math.round(value) + ' ms';
+    }
+
+    return result;
+  },
+
+  render() {
+    return (
+      <span className={this.props.className}>{this.getDuration()}</span>
+    );
+  }
+});
+
+export default Duration;
diff --git a/src/sentry/static/sentry/app/views/groupActivity/index.jsx b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
index 33b21589f9..d177be5745 100644
--- a/src/sentry/static/sentry/app/views/groupActivity/index.jsx
+++ b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
@@ -1,4 +1,6 @@
 import React from 'react';
+
+import Duration from '../../components/duration';
 import Gravatar from '../../components/gravatar';
 import GroupState from '../../mixins/groupState';
 import MemberListStore from '../../stores/memberListStore';
@@ -19,6 +21,9 @@ let formatActivity = function(item) {
     case 'set_unresolved':
       return 'marked this event as unresolved';
     case 'set_muted':
+      if (data.snoozeDuration) {
+        return <span>snoozed this issue for <Duration seconds={data.snoozeDuration * 60} /></span>;
+      }
       return 'marked this event as muted';
     case 'set_public':
       return 'made this event public';
