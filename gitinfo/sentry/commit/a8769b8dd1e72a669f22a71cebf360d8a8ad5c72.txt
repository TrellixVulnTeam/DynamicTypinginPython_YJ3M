commit a8769b8dd1e72a669f22a71cebf360d8a8ad5c72
Author: Eric Feng <erichfeng@gmail.com>
Date:   Wed Jan 20 15:08:50 2016 -0800

    adding onboarding tasks to org details endpoint

diff --git a/src/sentry/api/serializers/models/organization.py b/src/sentry/api/serializers/models/organization.py
index f7792217e9..3c4bf18785 100644
--- a/src/sentry/api/serializers/models/organization.py
+++ b/src/sentry/api/serializers/models/organization.py
@@ -4,7 +4,13 @@ from sentry.app import quotas
 from sentry.api.serializers import Serializer, register, serialize
 from sentry.auth import access
 from sentry.models import (
-    Organization, OrganizationAccessRequest, OrganizationOption, Team,
+    OnboardingTask,
+    OnboardingTaskStatus,
+    Organization,
+    OrganizationAccessRequest,
+    OrganizationOnboardingTask,
+    OrganizationOption,
+    Team,
     TeamStatus
 )
 
@@ -19,6 +25,14 @@ class OrganizationSerializer(Serializer):
             'dateCreated': obj.date_added,
         }
 
+class OnboardingTasksSerializer(Serializer):
+    def serialize(self, obj, attrs, user):
+        return {
+            'task': dict(OrganizationOnboardingTask.TASK_CHOICES).get(obj.task),
+            'status': dict(OrganizationOnboardingTask.STATUS_CHOICES).get(obj.status),
+            'user': obj.user.name,
+            'date_completed': obj.date_completed,
+        }
 
 class DetailedOrganizationSerializer(OrganizationSerializer):
     def serialize(self, obj, attrs, user):
@@ -31,6 +45,10 @@ class DetailedOrganizationSerializer(OrganizationSerializer):
             status=TeamStatus.VISIBLE,
         ))
 
+        onboarding_tasks = list(OrganizationOnboardingTask.objects.filter(
+            organization=obj,
+        ))
+
         feature_list = []
         if features.has('organizations:sso', obj, actor=user):
             feature_list.append('sso')
@@ -60,4 +78,5 @@ class DetailedOrganizationSerializer(OrganizationSerializer):
         context['pendingAccessRequests'] = OrganizationAccessRequest.objects.filter(
             team__organization=obj,
         ).count()
+        context['onboardingTasks'] = serialize(onboarding_tasks, user, OnboardingTasksSerializer())
         return context
