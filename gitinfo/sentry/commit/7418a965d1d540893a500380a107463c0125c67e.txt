commit 7418a965d1d540893a500380a107463c0125c67e
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Oct 14 14:27:12 2010 -0700

    Refactor use of get_filters and move index registration into sentry/models (fixes GH-26)

diff --git a/sentry/models.py b/sentry/models.py
index 105ef9fd73..1da529312f 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -16,7 +16,7 @@ from django.utils.encoding import smart_unicode
 from django.utils.translation import ugettext_lazy as _
 
 from sentry import conf
-from sentry.helpers import cached_property, construct_checksum, get_db_engine, transform
+from sentry.helpers import cached_property, construct_checksum, get_db_engine, transform, get_filters
 from sentry.manager import GroupedMessageManager, SentryManager
 from sentry.reporter import FakeRequest
 
@@ -26,6 +26,8 @@ for r in _reqs:
         raise ImproperlyConfigured("Put '%s' in your "
             "INSTALLED_APPS setting in order to use the sentry application." % r)
 
+from indexer.models import Index
+
 try:
     from idmapper.models import SharedMemoryModel as Model
 except ImportError:
@@ -283,6 +285,19 @@ class FilterValue(models.Model):
     class Meta:
         unique_together = (('key', 'value'),)
 
+### Helper methods
+
+def register_indexes():
+    """
+    Grabs all required indexes from filters and registers them.
+    """
+    logger = logging.getLogger('sentry.setup')
+    for filter_ in get_filters():
+        if filter_.column.startswith('data__'):
+            Index.objects.register_model(Message, filter_.column, index_to='group')
+            logger.debug('Registered index for for %s' % filter_.column)
+register_indexes()
+
 # XXX: Django sucks and we can't listen to our specific app
 # post_syncdb.connect(GroupedMessage.create_sort_index, sender=__name__)
 post_syncdb.connect(GroupedMessage.create_sort_index, sender=sys.modules[__name__])
\ No newline at end of file
diff --git a/sentry/views.py b/sentry/views.py
index 78992cabfa..7aae11918c 100644
--- a/sentry/views.py
+++ b/sentry/views.py
@@ -18,34 +18,12 @@ from django.utils.safestring import mark_safe
 from django.views.decorators.csrf import csrf_protect, csrf_exempt
 
 from sentry import conf
+from sentry.helpers import get_filters
 from sentry.models import GroupedMessage, Message
 from sentry.plugins import GroupActionProvider
 from sentry.templatetags.sentry_helpers import with_priority
 from sentry.reporter import ImprovedExceptionReporter
 
-from indexer.models import Index
-
-_FILTER_CACHE = None
-def get_filters():
-    global _FILTER_CACHE
-    
-    if _FILTER_CACHE is None:
-        filters = []
-        for filter_ in conf.FILTERS:
-            module_name, class_name = filter_.rsplit('.', 1)
-            try:
-                module = __import__(module_name, {}, {}, class_name)
-                filter_ = getattr(module, class_name)
-            except Exception:
-                logging.exception('Unable to import %s' % (filter_,))
-                continue
-            if filter_.column.startswith('data__'):
-                Index.objects.register_model(Message, filter_.column, index_to='group')
-            filters.append(filter_)
-        _FILTER_CACHE = filters
-    for f in _FILTER_CACHE:
-        yield f
-
 def login_required(func):
     def wrapped(request, *args, **kwargs):
         if not conf.PUBLIC:
