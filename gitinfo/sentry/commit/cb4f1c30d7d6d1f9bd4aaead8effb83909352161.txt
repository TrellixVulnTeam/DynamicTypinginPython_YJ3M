commit cb4f1c30d7d6d1f9bd4aaead8effb83909352161
Author: David Wang <davidw1339@gmail.com>
Date:   Wed Sep 25 11:18:20 2019 -0700

    feat(ui): Added performance marks into organizationContext (#14820)
    
    Added a measurement with metric from app/utils/analytics. It will record the time it takes for the organizationDetails endpoint to finish and refresh the state of the app. The measurement comes with additional data such as the current frontend route (url) and organization id. This should help us measure performance improvements by switching from "detailed" organizationDetails to "lightweight" organizationDetails.
    
    Refs SEN-1058

diff --git a/src/sentry/static/sentry/app/views/organizationContext.jsx b/src/sentry/static/sentry/app/views/organizationContext.jsx
index acd79b68b9..a9c4c4af02 100644
--- a/src/sentry/static/sentry/app/views/organizationContext.jsx
+++ b/src/sentry/static/sentry/app/views/organizationContext.jsx
@@ -25,6 +25,8 @@ import Sidebar from 'app/components/sidebar';
 import TeamStore from 'app/stores/teamStore';
 import space from 'app/styles/space';
 import withOrganizations from 'app/utils/withOrganizations';
+import {metric} from 'app/utils/analytics';
+import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
 
 const ERROR_TYPES = {
   ORG_NOT_FOUND: 'ORG_NOT_FOUND',
@@ -121,6 +123,7 @@ const OrganizationContext = createReactClass({
       return;
     }
 
+    metric.mark('organization-details-fetch-start');
     const promises = [
       this.props.api.requestPromise(this.getOrganizationDetailsEndpoint()),
       fetchOrganizationEnvironments(this.props.api, this.getOrganizationSlug()),
@@ -155,14 +158,26 @@ const OrganizationContext = createReactClass({
           GlobalSelectionStore.loadInitialData(data, this.props.location.query);
         }
         OrganizationEnvironmentsStore.loadInitialData(environments);
-
-        this.setState({
-          organization: data,
-          loading: false,
-          error: false,
-          errorType: null,
-          hooks,
-        });
+        this.setState(
+          {
+            organization: data,
+            loading: false,
+            error: false,
+            errorType: null,
+            hooks,
+          },
+          () => {
+            // Take a measurement for when organization details are done loading and the new state is applied
+            metric.measure({
+              name: 'app.component.perf',
+              start: 'organization-details-fetch-start',
+              data: {
+                route: getRouteStringFromRoutes(this.props.routes),
+                organization_id: parseInt(data.id, 10),
+              },
+            });
+          }
+        );
       })
       .catch(err => {
         let errorType = null;
