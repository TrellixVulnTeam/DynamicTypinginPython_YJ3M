commit 09a15155429c11183c42b8fe57e6a73cc36ff8b1
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed May 16 11:13:32 2018 -0700

    ref(js): Remove old Organization Teams views (#8449)
    
    * Move all Organization Teams views into `app/views/settings`
    * Remove old views
    * LazyLoad in routes instead of intermediary components
    * remove unused `getSettingsComponent`
    * redirect old org teams links to new settings, update acceptance tests + add new ones

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index b165bbee4a..028098275b 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -53,7 +53,6 @@ import OrganizationRoot from 'app/views/organizationRoot';
 import OrganizationRepositoriesView from 'app/views/organizationRepositoriesView';
 import OrganizationGeneralSettingsView from 'app/views/settings/organization/general/organizationGeneralSettingsView';
 import OrganizationStats from 'app/views/organizationStats';
-import OrganizationTeams from 'app/views/organizationTeams';
 import ProjectEnvironments from 'app/views/projectEnvironments';
 import ProjectTags from 'app/views/projectTags';
 import ProjectChooser from 'app/views/projectChooser';
@@ -83,10 +82,6 @@ import RouteNotFound from 'app/views/routeNotFound';
 import SettingsProjectProvider from 'app/views/settings/components/settingsProjectProvider';
 import SettingsWrapper from 'app/views/settings/components/settingsWrapper';
 import Stream from 'app/views/stream';
-import TeamDetails from 'app/views/teamDetails';
-import TeamMembers from 'app/views/teamMembers';
-import TeamSettings from 'app/views/teamSettings';
-import TeamProjects from 'app/views/settings/team/teamProjects';
 import errorHandler from 'app/utils/errorHandler';
 
 function appendTrailingSlash(nextState, replace) {
@@ -533,33 +528,40 @@ function routes() {
       <Route path="settings/" component={errorHandler(OrganizationGeneralSettingsView)} />
 
       <Route name="Teams" path="teams/">
-        <IndexRoute component={errorHandler(OrganizationTeams)} />
-
-        <Route
-          path="all-teams/"
-          name="All Teams"
-          allTeams
-          component={errorHandler(OrganizationTeams)}
+        <IndexRoute
+          componentPromise={() =>
+            import(/*webpackChunkName: OrganizationTeams*/ './views/settings/organizationTeams')}
+          component={errorHandler(LazyLoad)}
         />
 
         <Route
-          name="Your Teams"
-          path="your-teams/"
-          component={errorHandler(OrganizationTeams)}
-        />
-
-        <Route name="Team" path=":teamId/" component={errorHandler(TeamDetails)}>
+          name="Team"
+          path=":teamId/"
+          componentPromise={() =>
+            import(/*webpackChunkName: TeamDetails*/ './views/settings/organizationTeams/teamDetails')}
+          component={errorHandler(LazyLoad)}
+        >
           <IndexRedirect to="members/" />
-          <Route path="members/" name="Members" component={errorHandler(TeamMembers)} />
+          <Route
+            path="members/"
+            name="Members"
+            componentPromise={() =>
+              import(/*webpackChunkName: TeamMembers*/ './views/settings/organizationTeams/teamMembers')}
+            component={errorHandler(LazyLoad)}
+          />
           <Route
             path="projects/"
             name="Projects"
-            component={errorHandler(TeamProjects)}
+            componentPromise={() =>
+              import(/*webpackChunkName: TeamProjects*/ './views/settings/organizationTeams/teamProjects')}
+            component={errorHandler(LazyLoad)}
           />
           <Route
             path="settings/"
             name="settings"
-            component={errorHandler(TeamSettings)}
+            componentPromise={() =>
+              import(/*webpackChunkName: TeamSettings*/ './views/settings/organizationTeams/teamSettings')}
+            component={errorHandler(LazyLoad)}
           />
         </Route>
       </Route>
@@ -689,6 +691,22 @@ function routes() {
           <Route path="/organizations/:orgId/" component={OrganizationHomeContainer}>
             <Redirect from="projects/" to="/:orgId/" />
             {hooksOrgRoutes}
+            <Redirect path="teams/" to="/settings/:orgId/teams/" />
+            <Redirect path="teams/your-teams/" to="/settings/:orgId/teams/" />
+            <Redirect path="teams/all-teams/" to="/settings/:orgId/teams/" />
+            <Redirect path="teams/:teamId/" to="/settings/:orgId/teams/:teamId/" />
+            <Redirect
+              path="teams/:teamId/members/"
+              to="/settings/:orgId/teams/:teamId/members/"
+            />
+            <Redirect
+              path="teams/:teamId/projects/"
+              to="/settings/:orgId/teams/:teamId/projects/"
+            />
+            <Redirect
+              path="teams/:teamId/settings/"
+              to="/settings/:orgId/teams/:teamId/settings/"
+            />
             {orgSettingsRoutes}
             <Route path="stats/" component={errorHandler(OrganizationStats)} />
           </Route>
diff --git a/src/sentry/static/sentry/app/utils/getSettingsComponent.jsx b/src/sentry/static/sentry/app/utils/getSettingsComponent.jsx
deleted file mode 100644
index 27fdb6fb23..0000000000
--- a/src/sentry/static/sentry/app/utils/getSettingsComponent.jsx
+++ /dev/null
@@ -1,13 +0,0 @@
-// Load components based on route properties
-//
-// This is for new/old settings pages
-//
-// @return Promise<React.Component>
-export default function getSettingsComponent(newComponent, oldComponent, routes) {
-  // Use property on Route to see if it should be apart of new settings
-  if (routes && routes.length > 0 && routes[1] && routes[1].newnew) {
-    return newComponent().then(mod => mod.default);
-  }
-
-  return oldComponent().then(mod => mod.default);
-}
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
deleted file mode 100644
index b3b5c82fe3..0000000000
--- a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
+++ /dev/null
@@ -1,52 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {Link} from 'react-router';
-
-import SentryTypes from 'app/proptypes';
-
-import AllTeamsRow from 'app/views/organizationTeams/allTeamsRow';
-import {tct} from 'app/locale';
-
-class AllTeamsList extends React.Component {
-  static propTypes = {
-    access: PropTypes.object,
-    organization: SentryTypes.Organization,
-    teamList: PropTypes.arrayOf(SentryTypes.Team),
-    openMembership: PropTypes.bool,
-  };
-
-  render() {
-    let {access, organization, openMembership} = this.props;
-    let teamNodes = this.props.teamList.map((team, teamIdx) => {
-      return (
-        <AllTeamsRow
-          access={access}
-          team={team}
-          organization={organization}
-          openMembership={openMembership}
-          key={team.slug}
-        />
-      );
-    });
-
-    if (teamNodes.length !== 0) {
-      return (
-        <div className="panel panel-default">
-          <table className="table">
-            <tbody>{teamNodes}</tbody>
-          </table>
-        </div>
-      );
-    }
-
-    return tct(
-      "You don't have any teams for this organization yet. Get started by [link:creating your first team].",
-      {
-        root: <p />,
-        link: <Link to={`/organizations/${organization.slug}/teams/new/`} />,
-      }
-    );
-  }
-}
-
-export default AllTeamsList;
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx
deleted file mode 100644
index a932bbd8db..0000000000
--- a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx
+++ /dev/null
@@ -1,137 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import {Link} from 'react-router';
-
-import ApiMixin from 'app/mixins/apiMixin';
-import IndicatorStore from 'app/stores/indicatorStore';
-import {joinTeam, leaveTeam} from 'app/actionCreators/teams';
-import {t} from 'app/locale';
-
-// TODO(dcramer): this isnt great UX
-
-const AllTeamsRow = createReactClass({
-  displayName: 'AllTeamsRow',
-
-  propTypes: {
-    access: PropTypes.object.isRequired,
-    organization: PropTypes.object.isRequired,
-    team: PropTypes.object.isRequired,
-    openMembership: PropTypes.bool.isRequired,
-  },
-
-  mixins: [ApiMixin],
-
-  getInitialState() {
-    return {
-      loading: false,
-      error: false,
-    };
-  },
-
-  joinTeam() {
-    this.setState({
-      loading: true,
-    });
-
-    joinTeam(
-      this.api,
-      {
-        orgId: this.props.organization.slug,
-        teamId: this.props.team.slug,
-      },
-      {
-        success: () => {
-          this.setState({
-            loading: false,
-            error: false,
-          });
-        },
-        error: () => {
-          this.setState({
-            loading: false,
-            error: true,
-          });
-          IndicatorStore.add(
-            t('There was an error while trying to join the team.'),
-            'error'
-          );
-        },
-      }
-    );
-  },
-
-  leaveTeam() {
-    this.setState({
-      loading: true,
-    });
-
-    leaveTeam(
-      this.api,
-      {
-        orgId: this.props.organization.slug,
-        teamId: this.props.team.slug,
-      },
-      {
-        success: () => {
-          this.setState({
-            loading: false,
-            error: false,
-          });
-        },
-        error: () => {
-          this.setState({
-            loading: false,
-            error: true,
-          });
-          IndicatorStore.add(
-            t('There was an error while trying to leave the team.'),
-            'error'
-          );
-        },
-      }
-    );
-  },
-
-  render() {
-    let {access, team, openMembership} = this.props;
-    let orgId = this.props.organization.slug;
-    return (
-      <tr>
-        <td>
-          <h5>#{team.slug}</h5>
-        </td>
-        <td className="actions align-right">
-          {this.state.loading ? (
-            <a className="btn btn-default btn-sm btn-loading btn-disabled">...</a>
-          ) : team.isMember ? (
-            <a className="leave-team btn btn-default btn-sm" onClick={this.leaveTeam}>
-              {t('Leave Team')}
-            </a>
-          ) : team.isPending ? (
-            <a className="btn btn-default btn-sm btn-disabled">{t('Request Pending')}</a>
-          ) : openMembership ? (
-            <a className="btn btn-default btn-sm" onClick={this.joinTeam}>
-              {t('Join Team')}
-            </a>
-          ) : (
-            <a className="btn btn-default btn-sm" onClick={this.joinTeam}>
-              {t('Request Access')}
-            </a>
-          )}
-          {access.has('team:write') && (
-            <Link
-              className="btn btn-default btn-sm"
-              to={`/organizations/${orgId}/teams/${team.slug}/settings/`}
-              style={{marginLeft: 5}}
-            >
-              {t('Team Settings')}
-            </Link>
-          )}
-        </td>
-      </tr>
-    );
-  },
-});
-
-export default AllTeamsRow;
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
deleted file mode 100644
index 147867fa27..0000000000
--- a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
+++ /dev/null
@@ -1,236 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import {Link} from 'react-router';
-import LazyLoad from 'react-lazyload';
-
-import ApiMixin from 'app/mixins/apiMixin';
-import {update as projectUpdate} from 'app/actionCreators/projects';
-import {leaveTeam} from 'app/actionCreators/teams';
-import IndicatorStore from 'app/stores/indicatorStore';
-import BarChart from 'app/components/barChart';
-import ProjectLabel from 'app/components/projectLabel';
-import SentryTypes from 'app/proptypes';
-import TooltipMixin from 'app/mixins/tooltip';
-import {sortArray} from 'app/utils';
-import {t, tct} from 'app/locale';
-
-const ExpandedTeamList = createReactClass({
-  displayName: 'ExpandedTeamList',
-
-  propTypes: {
-    access: PropTypes.object.isRequired,
-    organization: SentryTypes.Organization.isRequired,
-    teamList: PropTypes.arrayOf(SentryTypes.Team).isRequired,
-    projectList: PropTypes.arrayOf(SentryTypes.Project).isRequired,
-    hasTeams: PropTypes.bool,
-  },
-
-  mixins: [
-    ApiMixin,
-    TooltipMixin(function() {
-      return {
-        selector: '.tip',
-        title: function(instance) {
-          return this.getAttribute('data-isbookmarked') === 'true'
-            ? 'Remove from bookmarks'
-            : 'Add to bookmarks';
-        },
-      };
-    }),
-  ],
-
-  leaveTeam(team) {
-    // TODO(dcramer): handle loading indicator
-    leaveTeam(
-      this.api,
-      {
-        orgId: this.props.organization.slug,
-        teamId: team.slug,
-      },
-      {
-        error: () => {
-          IndicatorStore.add(
-            t('There was an error while trying to leave the team.'),
-            'error'
-          );
-        },
-      }
-    );
-  },
-
-  urlPrefix() {
-    let org = this.props.organization;
-    return `/organizations/${org.slug}`;
-  },
-
-  getProjectsForTeam(team) {
-    return sortArray(
-      this.props.projectList.filter(p => !!p.teams.find(t1 => t1.slug == team.slug)),
-      function(o) {
-        return o.name;
-      }
-    );
-  },
-
-  renderProjectList(team, projects) {
-    return <tbody>{projects.map(this.renderProject)}</tbody>;
-  },
-
-  renderNoProjects(team) {
-    return (
-      <tbody>
-        <tr>
-          <td>
-            <p className="project-list-empty">
-              {tct(
-                'There are no projects in this team. Get started by [link:creating your first project].',
-                {
-                  link: (
-                    <a href={this.urlPrefix() + '/projects/new/?team=' + team.slug} />
-                  ),
-                }
-              )}
-            </p>
-          </td>
-        </tr>
-      </tbody>
-    );
-  },
-
-  renderTeamNode(team, urlPrefix) {
-    // TODO: make this cleaner
-    let access = this.props.access;
-    let projects = this.getProjectsForTeam(team);
-    let orgId = this.props.organization.slug;
-    return (
-      <div className="box" key={team.slug}>
-        <div className="box-header">
-          <div className="pull-right actions hidden-xs">
-            <a className="leave-team" onClick={this.leaveTeam.bind(this, team)}>
-              {t('Leave Team')}
-            </a>
-            {access.has('team:write') && (
-              <Link
-                className="team-settings"
-                to={`/organizations/${orgId}/teams/${team.slug}/settings/`}
-              >
-                {t('Team Settings')}
-              </Link>
-            )}
-          </div>
-          <h3>#{team.slug}</h3>
-        </div>
-        <div className="box-content">
-          <table className="table table-no-top-border m-b-0">
-            {projects.length
-              ? this.renderProjectList(team, projects)
-              : this.renderNoProjects(team)}
-          </table>
-        </div>
-      </div>
-    );
-  },
-
-  toggleBookmark(project) {
-    projectUpdate(this.api, {
-      orgId: this.props.organization.slug,
-      projectId: project.slug,
-      data: {
-        isBookmarked: !project.isBookmarked,
-      },
-    });
-  },
-
-  renderProject(project) {
-    let org = this.props.organization;
-    let chartData =
-      project.stats &&
-      project.stats.map(point => {
-        return {x: point[0], y: point[1]};
-      });
-
-    return (
-      <tr key={project.id} className={project.isBookmarked ? 'isBookmarked' : null}>
-        <td>
-          <h5>
-            <a
-              onClick={this.toggleBookmark.bind(this, project)}
-              className="tip"
-              data-isbookmarked={project.isBookmarked}
-            >
-              {project.isBookmarked ? (
-                <span className="icon-star-solid bookmark" />
-              ) : (
-                <span className="icon-star-outline bookmark" />
-              )}
-            </a>
-            <Link to={`/${org.slug}/${project.slug}/`}>
-              <ProjectLabel project={project} organization={this.props.organization} />
-            </Link>
-          </h5>
-        </td>
-        <td className="align-right project-chart">
-          {chartData && (
-            <LazyLoad>
-              <BarChart points={chartData} label="events" />
-            </LazyLoad>
-          )}
-        </td>
-      </tr>
-    );
-  },
-
-  renderEmpty() {
-    if (this.props.hasTeams) {
-      return (
-        <p>
-          {this.props.access.has('project:write')
-            ? tct(
-                'You are not a member of any teams. [joinLink:Join an existing team] or [createLink:create a new one].',
-                {
-                  joinLink: (
-                    <Link
-                      to={`/organizations/${this.props.organization
-                        .slug}/teams/all-teams/`}
-                    />
-                  ),
-                  createLink: <Link to={this.urlPrefix() + '/teams/new/'} />,
-                }
-              )
-            : tct('You are not a member of any teams. [joinLink:Join a team].', {
-                joinLink: (
-                  <Link
-                    to={`/organizations/${this.props.organization.slug}/teams/all-teams/`}
-                  />
-                ),
-              })}
-        </p>
-      );
-    }
-    return (
-      <p>
-        {tct(
-          'You dont have any teams for this organization yet. Get started by [link:creating your first team].',
-          {
-            link: <Link to={this.urlPrefix() + '/teams/new/'} />,
-          }
-        )}
-      </p>
-    );
-  },
-
-  renderTeamNodes() {
-    return this.props.teamList.map(team => {
-      return this.renderTeamNode(team);
-    });
-  },
-
-  render() {
-    let hasTeams = this.props.teamList.length > 0;
-
-    return <div>{hasTeams ? this.renderTeamNodes() : this.renderEmpty()}</div>;
-  },
-});
-
-export default ExpandedTeamList;
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/organizationStatOverview.jsx b/src/sentry/static/sentry/app/views/organizationTeams/organizationStatOverview.jsx
deleted file mode 100644
index 18ea5b1a18..0000000000
--- a/src/sentry/static/sentry/app/views/organizationTeams/organizationStatOverview.jsx
+++ /dev/null
@@ -1,100 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import {Link} from 'react-router';
-import classNames from 'classnames';
-
-import ApiMixin from 'app/mixins/apiMixin';
-import OrganizationState from 'app/mixins/organizationState';
-
-import {defined} from 'app/utils';
-import {t} from 'app/locale';
-
-const OrganizationStatOverview = createReactClass({
-  displayName: 'OrganizationStatOverview',
-
-  propTypes: {
-    orgId: PropTypes.string,
-  },
-
-  contextTypes: {
-    location: PropTypes.object,
-  },
-
-  mixins: [ApiMixin, OrganizationState],
-
-  getInitialState() {
-    return {
-      totalRejected: null,
-      epm: null,
-    };
-  },
-
-  componentWillMount() {
-    this.fetchData();
-  },
-
-  getOrganizationStatsEndpoint() {
-    return '/organizations/' + this.props.orgId + '/stats/';
-  },
-
-  fetchData() {
-    let statsEndpoint = this.getOrganizationStatsEndpoint();
-    this.api.request(statsEndpoint, {
-      query: {
-        since: new Date().getTime() / 1000 - 3600 * 24,
-        stat: 'rejected',
-      },
-      success: data => {
-        let totalRejected = 0;
-        data.forEach(point => {
-          totalRejected += point[1];
-        });
-        this.setState({totalRejected});
-      },
-    });
-    this.api.request(statsEndpoint, {
-      query: {
-        since: new Date().getTime() / 1000 - 3600 * 3,
-        resolution: '1h',
-        stat: 'received',
-      },
-      success: data => {
-        let received = [0, 0];
-        data.forEach(point => {
-          if (point[1] > 0) {
-            received[0] += point[1];
-            received[1] += 1;
-          }
-        });
-        let epm = received[1] ? parseInt(received[0] / received[1] / 60, 10) : 0;
-        this.setState({epm});
-      },
-    });
-  },
-
-  render() {
-    if (!defined(this.state.epm) || !defined(this.state.totalRejected)) return null;
-
-    let access = this.getAccess();
-
-    let rejectedClasses = ['count'];
-    if (this.state.totalRejected > 0) rejectedClasses.push('rejected');
-
-    return (
-      <div className={this.props.className}>
-        <h6 className="nav-header">{t('Events Per Minute')}</h6>
-        <p className="count">{this.state.epm}</p>
-        <h6 className="nav-header">{t('Rejected in last 24h')}</h6>
-        <p className={classNames(rejectedClasses)}>{this.state.totalRejected}</p>
-        {access.has('org:read') && (
-          <Link to={`/organizations/${this.props.orgId}/stats/`} className="stats-link">
-            {t('View all stats')}
-          </Link>
-        )}
-      </div>
-    );
-  },
-});
-
-export default OrganizationStatOverview;
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/organizationTeamsView.jsx b/src/sentry/static/sentry/app/views/organizationTeams/organizationTeamsView.jsx
deleted file mode 100644
index de4b99c117..0000000000
--- a/src/sentry/static/sentry/app/views/organizationTeams/organizationTeamsView.jsx
+++ /dev/null
@@ -1,100 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import SentryTypes from 'app/proptypes';
-import {t} from 'app/locale';
-import ExpandedTeamList from 'app/views/organizationTeams/expandedTeamList';
-import AllTeamsList from 'app/views/organizationTeams/allTeamsList';
-import ListLink from 'app/components/listLink';
-import OrganizationStatOverview from 'app/views/organizationTeams/organizationStatOverview';
-import recreateRoute from 'app/utils/recreateRoute';
-
-class OrganizationTeamsView extends React.Component {
-  static propTypes = {
-    allTeams: PropTypes.arrayOf(SentryTypes.Team),
-    activeTeams: PropTypes.arrayOf(SentryTypes.Team),
-    projectList: PropTypes.arrayOf(SentryTypes.Project),
-    projectStats: PropTypes.array,
-    organization: SentryTypes.Organization,
-    access: PropTypes.object,
-    features: PropTypes.object,
-    route: PropTypes.object,
-    routes: PropTypes.array,
-    params: PropTypes.object,
-  };
-
-  static contextTypes = {
-    location: PropTypes.object.isRequired,
-  };
-
-  render() {
-    let {
-      allTeams,
-      activeTeams,
-      projectList,
-      projectStats,
-      organization,
-      access,
-      features,
-      route,
-      routes,
-      params,
-    } = this.props;
-    let org = organization;
-
-    if (!organization) return null;
-
-    let urlPrefix = recreateRoute('', {routes, params, stepBack: -2});
-
-    return (
-      <div className="row">
-        <div className="col-md-9">
-          <div className="team-list">
-            <ul className="nav nav-tabs border-bottom">
-              <ListLink
-                to={`${urlPrefix}teams/your-teams/`}
-                isActive={loc => {
-                  let pathname = this.context.location.pathname;
-                  return pathname === `${urlPrefix}teams/` || pathname === loc.pathname;
-                }}
-              >
-                {t('Your Teams')}
-              </ListLink>
-              <ListLink to={`${urlPrefix}teams/all-teams/`}>
-                {t('All Teams')}{' '}
-                <span className="badge badge-soft">{allTeams.length}</span>
-              </ListLink>
-            </ul>
-            {route.allTeams /* should be AllTeamsList */ ? (
-              <AllTeamsList
-                urlPrefix={urlPrefix}
-                organization={org}
-                teamList={allTeams}
-                access={access}
-                openMembership={
-                  features.has('open-membership') || access.has('org:write')
-                }
-              />
-            ) : (
-              <ExpandedTeamList
-                urlPrefix={urlPrefix}
-                organization={org}
-                teamList={activeTeams}
-                projectList={projectList}
-                projectStats={projectStats}
-                hasTeams={allTeams.length !== 0}
-                access={access}
-              />
-            )}
-          </div>
-        </div>
-        <OrganizationStatOverview
-          orgId={this.props.params.orgId}
-          className="col-md-3 stats-column"
-        />
-      </div>
-    );
-  }
-}
-
-export default OrganizationTeamsView;
diff --git a/src/sentry/static/sentry/app/views/settings/team/allTeamsList.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsList.jsx
similarity index 96%
rename from src/sentry/static/sentry/app/views/settings/team/allTeamsList.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsList.jsx
index 41e380846b..4b6c688477 100644
--- a/src/sentry/static/sentry/app/views/settings/team/allTeamsList.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsList.jsx
@@ -4,11 +4,12 @@ import React from 'react';
 
 import {openCreateTeamModal} from 'app/actionCreators/modal';
 import {tct} from 'app/locale';
-import AllTeamsRow from 'app/views/settings/team/allTeamsRow';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import SentryTypes from 'app/proptypes';
 import TextBlock from 'app/views/settings/components/text/textBlock';
 
+import AllTeamsRow from './allTeamsRow';
+
 class AllTeamsList extends React.Component {
   static propTypes = {
     urlPrefix: PropTypes.string,
diff --git a/src/sentry/static/sentry/app/views/settings/team/allTeamsRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/team/allTeamsRow.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsRow.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx
similarity index 75%
rename from src/sentry/static/sentry/app/views/organizationTeams/index.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx
index d99a32234d..25807c4032 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/index.jsx
@@ -6,14 +6,13 @@ import Reflux from 'reflux';
 import {loadStats} from 'app/actionCreators/projects';
 import {sortArray} from 'app/utils';
 import ApiMixin from 'app/mixins/apiMixin';
-import LoadingIndicator from 'app/components/loadingIndicator';
 import OrganizationState from 'app/mixins/organizationState';
 import ProjectsStore from 'app/stores/projectsStore';
 import TeamStore from 'app/stores/teamStore';
-import getSettingsComponent from 'app/utils/getSettingsComponent';
+import OrganizationTeams from './organizationTeams';
 
-const OrganizationTeams = createReactClass({
-  displayName: 'OrganizationTeams',
+const OrganizationTeamsContainer = createReactClass({
+  displayName: 'OrganizationTeamsContainer',
 
   propTypes: {
     routes: PropTypes.arrayOf(PropTypes.object),
@@ -28,7 +27,6 @@ const OrganizationTeams = createReactClass({
 
   getInitialState() {
     return {
-      Component: null,
       teamList: sortArray(TeamStore.getAll(), function(o) {
         return o && o.name;
       }),
@@ -41,16 +39,6 @@ const OrganizationTeams = createReactClass({
 
   componentDidMount() {
     this.fetchStats();
-
-    getSettingsComponent(
-      () =>
-        import(/* webpackChunkName: "organizationTeamsView" */ '../settings/team/organizationTeamsView'),
-      () =>
-        import(/* webpackChunkName: "organizationTeamsView.old" */ './organizationTeamsView'),
-      this.props.routes
-    ).then(Component => {
-      this.setState({Component});
-    });
   },
 
   fetchStats() {
@@ -86,7 +74,6 @@ const OrganizationTeams = createReactClass({
 
   render() {
     if (!this.context.organization) return null;
-    if (!this.state.Component) return <LoadingIndicator />;
 
     let access = this.getAccess();
     let features = this.getFeatures();
@@ -96,7 +83,7 @@ const OrganizationTeams = createReactClass({
     let activeTeams = this.state.teamList.filter(team => team.isMember);
 
     return (
-      <this.state.Component
+      <OrganizationTeams
         {...this.props}
         access={access}
         features={features}
@@ -109,4 +96,4 @@ const OrganizationTeams = createReactClass({
   },
 });
 
-export default OrganizationTeams;
+export default OrganizationTeamsContainer;
diff --git a/src/sentry/static/sentry/app/views/settings/team/organizationTeamsView.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/organizationTeams.jsx
similarity index 94%
rename from src/sentry/static/sentry/app/views/settings/team/organizationTeamsView.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationTeams/organizationTeams.jsx
index d9b1aad905..943dca04d0 100644
--- a/src/sentry/static/sentry/app/views/settings/team/organizationTeamsView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/organizationTeams.jsx
@@ -4,14 +4,15 @@ import React from 'react';
 import {getOrganizationState} from 'app/mixins/organizationState';
 import {openCreateTeamModal} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
-import AllTeamsList from 'app/views/settings/team/allTeamsList';
 import Button from 'app/components/buttons/button';
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import SentryTypes from 'app/proptypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import recreateRoute from 'app/utils/recreateRoute';
 
-class OrganizationTeamsView extends React.Component {
+import AllTeamsList from './allTeamsList';
+
+class OrganizationTeams extends React.Component {
   static propTypes = {
     allTeams: PropTypes.arrayOf(SentryTypes.Team),
     activeTeams: PropTypes.arrayOf(SentryTypes.Team),
@@ -100,4 +101,4 @@ class OrganizationTeamsView extends React.Component {
   }
 }
 
-export default OrganizationTeamsView;
+export default OrganizationTeams;
diff --git a/src/sentry/static/sentry/app/views/teamDetails.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/teamDetails.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationTeams/teamDetails.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamProjects.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/team/teamProjects.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamSettings/index.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationTeams/teamSettings/index.jsx
index 0b182e7a49..e6ea5ac05d 100644
--- a/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamSettings/index.jsx
@@ -13,9 +13,10 @@ import Field from 'app/views/settings/components/forms/field';
 import Form from 'app/views/settings/components/forms/form';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
 import SentryTypes from 'app/proptypes';
-import TeamModel from 'app/views/settings/team/model';
 import teamSettingsFields from 'app/data/forms/teamSettingsFields';
 
+import TeamModel from './model';
+
 export default class TeamSettings extends AsyncView {
   static propTypes = {
     ...AsyncView.propTypes,
diff --git a/src/sentry/static/sentry/app/views/settings/team/model.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamSettings/model.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/team/model.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationTeams/teamSettings/model.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/team/organizationStatOverview.jsx b/src/sentry/static/sentry/app/views/settings/team/organizationStatOverview.jsx
deleted file mode 100644
index 0da062b09f..0000000000
--- a/src/sentry/static/sentry/app/views/settings/team/organizationStatOverview.jsx
+++ /dev/null
@@ -1,99 +0,0 @@
-import {Link} from 'react-router';
-import PropTypes from 'prop-types';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import classNames from 'classnames';
-
-import {defined} from 'app/utils';
-import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
-import OrganizationState from 'app/mixins/organizationState';
-
-const OrganizationStatOverview = createReactClass({
-  displayName: 'OrganizationStatOverview',
-
-  propTypes: {
-    orgId: PropTypes.string,
-  },
-
-  contextTypes: {
-    location: PropTypes.object,
-  },
-
-  mixins: [ApiMixin, OrganizationState],
-
-  getInitialState() {
-    return {
-      totalRejected: null,
-      epm: null,
-    };
-  },
-
-  componentWillMount() {
-    this.fetchData();
-  },
-
-  getOrganizationStatsEndpoint() {
-    return '/organizations/' + this.props.orgId + '/stats/';
-  },
-
-  fetchData() {
-    let statsEndpoint = this.getOrganizationStatsEndpoint();
-    this.api.request(statsEndpoint, {
-      query: {
-        since: Date.now() / 1000 - 3600 * 24,
-        stat: 'rejected',
-      },
-      success: data => {
-        let totalRejected = 0;
-        data.forEach(point => {
-          totalRejected += point[1];
-        });
-        this.setState({totalRejected});
-      },
-    });
-    this.api.request(statsEndpoint, {
-      query: {
-        since: Date.now() / 1000 - 3600 * 3,
-        resolution: '1h',
-        stat: 'received',
-      },
-      success: data => {
-        let received = [0, 0];
-        data.forEach(point => {
-          if (point[1] > 0) {
-            received[0] += point[1];
-            received[1] += 1;
-          }
-        });
-        let epm = received[1] ? parseInt(received[0] / received[1] / 60, 10) : 0;
-        this.setState({epm});
-      },
-    });
-  },
-
-  render() {
-    if (!defined(this.state.epm) || !defined(this.state.totalRejected)) return null;
-
-    let access = this.getAccess();
-
-    let rejectedClasses = ['count'];
-    if (this.state.totalRejected > 0) rejectedClasses.push('rejected');
-
-    return (
-      <div className={this.props.className}>
-        <h6 className="nav-header">{t('Events Per Minute')}</h6>
-        <p className="count">{this.state.epm}</p>
-        <h6 className="nav-header">{t('Rejected in last 24h')}</h6>
-        <p className={classNames(rejectedClasses)}>{this.state.totalRejected}</p>
-        {access.has('org:read') && (
-          <Link to={`/settings/${this.props.orgId}/stats/`} className="stats-link">
-            {t('View all stats')}
-          </Link>
-        )}
-      </div>
-    );
-  },
-});
-
-export default OrganizationStatOverview;
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamMembers.old.jsx b/src/sentry/static/sentry/app/views/settings/team/teamMembers.old.jsx
deleted file mode 100644
index 585f49aeab..0000000000
--- a/src/sentry/static/sentry/app/views/settings/team/teamMembers.old.jsx
+++ /dev/null
@@ -1,126 +0,0 @@
-import {Link} from 'react-router';
-import React from 'react';
-
-import createReactClass from 'create-react-class';
-
-import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
-import Avatar from 'app/components/avatar';
-import LoadingError from 'app/components/loadingError';
-import LoadingIndicator from 'app/components/loadingIndicator';
-import OrganizationState from 'app/mixins/organizationState';
-
-const TeamMembers = createReactClass({
-  displayName: 'TeamMembers',
-  mixins: [ApiMixin, OrganizationState],
-
-  getInitialState() {
-    return {
-      loading: true,
-      error: false,
-      memberList: null,
-    };
-  },
-
-  componentWillMount() {
-    this.fetchData();
-  },
-
-  componentWillReceiveProps(nextProps) {
-    let params = this.props.params;
-    if (
-      nextProps.params.teamId !== params.teamId ||
-      nextProps.params.orgId !== params.orgId
-    ) {
-      this.setState(
-        {
-          loading: true,
-          error: false,
-        },
-        this.fetchData
-      );
-    }
-  },
-
-  fetchData() {
-    let params = this.props.params;
-
-    this.api.request(`/teams/${params.orgId}/${params.teamId}/members/`, {
-      success: data => {
-        this.setState({
-          memberList: data,
-          loading: false,
-          error: false,
-        });
-      },
-      error: () => {
-        this.setState({
-          loading: false,
-          error: true,
-        });
-      },
-    });
-  },
-
-  render() {
-    if (this.state.loading) return <LoadingIndicator />;
-    else if (this.state.error) return <LoadingError onRetry={this.fetchData} />;
-
-    let {orgId} = this.props.params;
-    let memberPrefix = `/organizations/${orgId}/members`;
-    let access = this.getAccess();
-
-    return (
-      <div>
-        <div style={{marginBottom: 20}} className="clearfix">
-          {access.has('org:write') ? (
-            <Link
-              className="btn btn-primary btn-sm pull-right"
-              to={`${memberPrefix}/new/`}
-            >
-              <span className="icon-plus" /> {t('Invite Member')}
-            </Link>
-          ) : (
-            <a
-              className="btn btn-primary btn-sm btn-disabled tip pull-right"
-              title={t('You do not have enough permission to add new members')}
-            >
-              <span className="icon-plus" /> {t('Invite Member')}
-            </a>
-          )}
-        </div>
-
-        <table className="table member-list">
-          <colgroup>
-            <col />
-            <col width="150" />
-          </colgroup>
-          <thead>
-            <tr>
-              <th>{t('Member')}</th>
-              <th>{t('Role')}</th>
-            </tr>
-          </thead>
-          <tbody>
-            {this.state.memberList.map((member, i) => {
-              return (
-                <tr key={i}>
-                  <td className="table-user-info">
-                    <Avatar user={member} size={36} />
-                    <h5>
-                      <Link to={`${memberPrefix}/${member.id}/`}>{member.email}</Link>
-                    </h5>
-                    {member.email}
-                  </td>
-                  <td>{member.roleName}</td>
-                </tr>
-              );
-            })}
-          </tbody>
-        </table>
-      </div>
-    );
-  },
-});
-
-export default TeamMembers;
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamSettings.old.jsx b/src/sentry/static/sentry/app/views/settings/team/teamSettings.old.jsx
deleted file mode 100644
index 13891f5bf8..0000000000
--- a/src/sentry/static/sentry/app/views/settings/team/teamSettings.old.jsx
+++ /dev/null
@@ -1,57 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import AsyncView from 'app/views/asyncView';
-import {ApiForm, TextField} from 'app/components/forms';
-import {t} from 'app/locale';
-
-export default class TeamSettings extends AsyncView {
-  static propTypes = {
-    ...AsyncView.propTypes,
-    team: PropTypes.object.isRequired,
-    onTeamChange: PropTypes.func.isRequired,
-  };
-
-  getTitle() {
-    return 'Team Settings';
-  }
-
-  getEndpoints() {
-    return [];
-  }
-
-  renderBody() {
-    let {orgId, teamId} = this.props.params;
-    let team = this.props.team;
-
-    return (
-      <div className="box">
-        <div className="box-content with-padding">
-          <ApiForm
-            apiMethod="PUT"
-            apiEndpoint={`/teams/${orgId}/${teamId}/`}
-            initialData={{
-              name: team.name,
-              slug: team.slug,
-            }}
-            onSubmitSuccess={this.props.onTeamChange}
-            requireChanges={true}
-          >
-            <TextField
-              name="name"
-              label={t('Name')}
-              placeholder={t('e.g. API Team')}
-              required={true}
-            />
-            <TextField
-              name="slug"
-              label={t('Short name')}
-              placeholder={t('e.g. api-team')}
-              required={true}
-            />
-          </ApiForm>
-        </div>
-      </div>
-    );
-  }
-}
diff --git a/src/sentry/static/sentry/app/views/teamMembers.jsx b/src/sentry/static/sentry/app/views/teamMembers.jsx
deleted file mode 100644
index da5dcfe95d..0000000000
--- a/src/sentry/static/sentry/app/views/teamMembers.jsx
+++ /dev/null
@@ -1,29 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import LazyLoad from 'app/components/lazyLoad';
-import getSettingsComponent from 'app/utils/getSettingsComponent';
-
-class TeamMembers extends React.Component {
-  static propTypes = {
-    routes: PropTypes.array,
-  };
-
-  render() {
-    return (
-      <LazyLoad
-        component={() =>
-          getSettingsComponent(
-            () =>
-              import(/*webpackChunkName: "teamMembers"*/ './settings/team/teamMembers'),
-            () =>
-              import(/*webpackChunkName: "teamMembers.old"*/ './settings/team/teamMembers.old'),
-            this.props.routes
-          )}
-        {...this.props}
-      />
-    );
-  }
-}
-
-export default TeamMembers;
diff --git a/src/sentry/static/sentry/app/views/teamSettings.jsx b/src/sentry/static/sentry/app/views/teamSettings.jsx
deleted file mode 100644
index f40246dd57..0000000000
--- a/src/sentry/static/sentry/app/views/teamSettings.jsx
+++ /dev/null
@@ -1,29 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import LazyLoad from 'app/components/lazyLoad';
-import getSettingsComponent from 'app/utils/getSettingsComponent';
-
-class TeamSettings extends React.Component {
-  static propTypes = {
-    routes: PropTypes.array,
-  };
-
-  render() {
-    return (
-      <LazyLoad
-        component={() =>
-          getSettingsComponent(
-            () =>
-              import(/*webpackChunkName: "teamSettings"*/ './settings/team/teamSettings'),
-            () =>
-              import(/*webpackChunkName: "teamSettings.old"*/ './settings/team/teamSettings.old'),
-            this.props.routes
-          )}
-        {...this.props}
-      />
-    );
-  }
-}
-
-export default TeamSettings;
diff --git a/tests/acceptance/test_project_list.py b/tests/acceptance/test_teams_list.py
similarity index 52%
rename from tests/acceptance/test_project_list.py
rename to tests/acceptance/test_teams_list.py
index 7a74ccc075..41954365b3 100644
--- a/tests/acceptance/test_project_list.py
+++ b/tests/acceptance/test_teams_list.py
@@ -5,9 +5,9 @@ from django.utils import timezone
 from sentry.testutils import AcceptanceTestCase
 
 
-class ProjectListTest(AcceptanceTestCase):
+class TeamsListTest(AcceptanceTestCase):
     def setUp(self):
-        super(ProjectListTest, self).setUp()
+        super(TeamsListTest, self).setUp()
         self.user = self.create_user('foo@example.com')
         self.org = self.create_organization(
             name='Rowdy Tiger',
@@ -26,15 +26,27 @@ class ProjectListTest(AcceptanceTestCase):
             teams=[self.team],
         )
         self.login_as(self.user)
+        # this should redirect to /settings/{}/teams/
         self.path = '/organizations/{}/teams/'.format(self.org.slug)
 
     def test_simple(self):
         self.project.update(first_event=timezone.now())
         self.browser.get(self.path)
-        # dashboard is a bit complex to load since it has many subcomponents
-        # so we bank on the core container and the activity container being
-        # enough of a check
-        self.browser.wait_until('.organization-home')
         self.browser.wait_until_not('.loading-indicator')
-        self.browser.wait_until('.stats-column .count')
-        self.browser.snapshot('organization project list')
+        self.browser.wait_until('.team-list')
+        self.browser.snapshot('organization teams list')
+
+        # team details link
+        self.browser.click('.team-list a[href]:first-child')
+        self.browser.wait_until_not('.loading-indicator')
+        self.browser.snapshot('organization team - members list')
+
+        # Click projects tab
+        self.browser.click('.nav-tabs li:nth-child(1) a')
+        self.browser.wait_until_not('.loading-indicator')
+        self.browser.snapshot('organization team - projects list')
+
+        # Click projects tab
+        self.browser.click('.nav-tabs li:nth-child(2) a')
+        self.browser.wait_until_not('.loading-indicator')
+        self.browser.snapshot('organization team - settings')
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index 8d76f0f7bf..b48e96c4f3 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -235,19 +235,19 @@ exports[`OrganizationTeamProjects Should render 1`] = `
               key="2"
             >
               <PanelItem
-                className="css-qjeif8-StyledPanelItem er5mk5i1"
+                className="css-qjeif8-StyledPanelItem eqsa6vb1"
                 p={2}
               >
                 <StyledPanelItem
-                  className="css-qjeif8-StyledPanelItem er5mk5i1"
+                  className="css-qjeif8-StyledPanelItem eqsa6vb1"
                   p={2}
                 >
                   <Base
-                    className="er5mk5i1 css-avuc83-StyledPanelItem-StyledPanelItem eo8n7lk0"
+                    className="eqsa6vb1 css-avuc83-StyledPanelItem-StyledPanelItem eo8n7lk0"
                     p={2}
                   >
                     <div
-                      className="er5mk5i1 css-avuc83-StyledPanelItem-StyledPanelItem eo8n7lk0"
+                      className="eqsa6vb1 css-avuc83-StyledPanelItem-StyledPanelItem eo8n7lk0"
                       is={null}
                     >
                       <ProjectItem
@@ -540,20 +540,20 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                         >
                                           <RemoveIcon>
                                             <Component
-                                              className="css-1e2j5j0-RemoveIcon er5mk5i0"
+                                              className="css-1e2j5j0-RemoveIcon eqsa6vb0"
                                             >
                                               <InlineSvg
-                                                className="css-1e2j5j0-RemoveIcon er5mk5i0"
+                                                className="css-1e2j5j0-RemoveIcon eqsa6vb0"
                                                 src="icon-circle-subtract"
                                               >
                                                 <StyledSvg
-                                                  className="css-1e2j5j0-RemoveIcon er5mk5i0"
+                                                  className="css-1e2j5j0-RemoveIcon eqsa6vb0"
                                                   height="1em"
                                                   viewBox={Object {}}
                                                   width="1em"
                                                 >
                                                   <svg
-                                                    className="er5mk5i0 css-10g0ex9-StyledSvg-RemoveIcon e2idor0"
+                                                    className="eqsa6vb0 css-10g0ex9-StyledSvg-RemoveIcon e2idor0"
                                                     height="1em"
                                                     viewBox={Object {}}
                                                     width="1em"
diff --git a/tests/js/spec/views/__snapshots__/teamSettings.old.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamSettings.old.spec.jsx.snap
deleted file mode 100644
index fb87c7964a..0000000000
--- a/tests/js/spec/views/__snapshots__/teamSettings.old.spec.jsx.snap
+++ /dev/null
@@ -1,55 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`TeamSettings (Old) render() renders 1`] = `
-<SideEffect(DocumentTitle)
-  title="Team Settings - Sentry"
->
-  <div
-    className="box"
-  >
-    <div
-      className="box-content with-padding"
-    >
-      <ApiForm
-        apiEndpoint="/teams/org/team-slug/"
-        apiMethod="PUT"
-        cancelLabel="Cancel"
-        className="form-stacked"
-        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
-        footerClass="form-actions align-right"
-        hideErrors={false}
-        initialData={
-          Object {
-            "name": "Team Name",
-            "slug": "team-slug",
-          }
-        }
-        onSubmitSuccess={[Function]}
-        requireChanges={true}
-        resetOnError={false}
-        submitDisabled={false}
-        submitErrorMessage="There was an error saving your changes."
-        submitLabel="Save Changes"
-        submitLoadingMessage="Saving changes.."
-      >
-        <TextField
-          disabled={false}
-          hideErrorMessage={false}
-          label="Name"
-          name="name"
-          placeholder="e.g. API Team"
-          required={true}
-        />
-        <TextField
-          disabled={false}
-          hideErrorMessage={false}
-          label="Short name"
-          name="slug"
-          placeholder="e.g. api-team"
-          required={true}
-        />
-      </ApiForm>
-    </div>
-  </div>
-</SideEffect(DocumentTitle)>
-`;
diff --git a/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap
deleted file mode 100644
index a740372cbb..0000000000
--- a/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap
+++ /dev/null
@@ -1,109 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`TeamSettings render() renders 1`] = `
-<SideEffect(DocumentTitle)
-  title="Team Settings - Sentry"
->
-  <div
-    className="box"
-  >
-    <div
-      className="box-content with-padding"
-    >
-      <ApiForm
-        apiEndpoint="/teams/org/team-slug/"
-        apiMethod="PUT"
-        cancelLabel="Cancel"
-        className="form-stacked"
-        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
-        footerClass="form-actions align-right"
-        hideErrors={false}
-        initialData={
-          Object {
-            "name": "Team Name",
-            "slug": "team-slug",
-          }
-        }
-        onSubmitSuccess={[Function]}
-        requireChanges={true}
-        resetOnError={false}
-        submitDisabled={false}
-        submitErrorMessage="There was an error saving your changes."
-        submitLabel="Save Changes"
-        submitLoadingMessage="Saving changes.."
-      >
-        <TextField
-          disabled={false}
-          hideErrorMessage={false}
-          label="Name"
-          name="name"
-          placeholder="e.g. API Team"
-          required={true}
-        />
-        <TextField
-          disabled={false}
-          hideErrorMessage={false}
-          label="Short name"
-          name="slug"
-          placeholder="e.g. api-team"
-          required={true}
-        />
-      </ApiForm>
-    </div>
-  </div>
-</SideEffect(DocumentTitle)>
-`;
-
-exports[`TeamSettings render() renders with remove team 1`] = `
-<SideEffect(DocumentTitle)
-  title="Team Settings - Sentry"
->
-  <div
-    className="box"
-  >
-    <div
-      className="box-content with-padding"
-    >
-      <ApiForm
-        apiEndpoint="/teams/org/team-slug/"
-        apiMethod="PUT"
-        cancelLabel="Cancel"
-        className="form-stacked"
-        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
-        footerClass="form-actions align-right"
-        hideErrors={false}
-        initialData={
-          Object {
-            "name": "Team Name",
-            "slug": "team-slug",
-          }
-        }
-        onSubmitSuccess={[Function]}
-        requireChanges={true}
-        resetOnError={false}
-        submitDisabled={false}
-        submitErrorMessage="There was an error saving your changes."
-        submitLabel="Save Changes"
-        submitLoadingMessage="Saving changes.."
-      >
-        <TextField
-          disabled={false}
-          hideErrorMessage={false}
-          label="Name"
-          name="name"
-          placeholder="e.g. API Team"
-          required={true}
-        />
-        <TextField
-          disabled={false}
-          hideErrorMessage={false}
-          label="Short name"
-          name="slug"
-          placeholder="e.g. api-team"
-          required={true}
-        />
-      </ApiForm>
-    </div>
-  </div>
-</SideEffect(DocumentTitle)>
-`;
diff --git a/tests/js/spec/views/organizationTeamProjects.spec.jsx b/tests/js/spec/views/organizationTeamProjects.spec.jsx
index 1d1d9c2074..c07a4a444f 100644
--- a/tests/js/spec/views/organizationTeamProjects.spec.jsx
+++ b/tests/js/spec/views/organizationTeamProjects.spec.jsx
@@ -5,7 +5,7 @@ import {Client} from 'app/api';
 import TeamStore from 'app/stores/teamStore';
 import ProjectsStore from 'app/stores/projectsStore';
 
-import OrganizationTeamProjects from 'app/views/settings/team/teamProjects';
+import OrganizationTeamProjects from 'app/views/settings/organizationTeams/teamProjects';
 
 describe('OrganizationTeamProjects', function() {
   let project;
diff --git a/tests/js/spec/views/organizationTeams.spec.jsx b/tests/js/spec/views/organizationTeams.spec.jsx
index e825c59250..9de1f48cb9 100644
--- a/tests/js/spec/views/organizationTeams.spec.jsx
+++ b/tests/js/spec/views/organizationTeams.spec.jsx
@@ -1,9 +1,7 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount} from 'enzyme';
 
-import {Client} from 'app/api';
-import OrganizationTeams from 'app/views/organizationTeams';
-import OrganizationTeamsView from 'app/views/settings/team/organizationTeamsView';
+import OrganizationTeams from 'app/views/settings/organizationTeams/organizationTeams';
 import {openCreateTeamModal} from 'app/actionCreators/modal';
 import recreateRoute from 'app/utils/recreateRoute';
 
@@ -16,62 +14,37 @@ jest.mock('app/actionCreators/modal', () => ({
 describe('OrganizationTeams', function() {
   let org = TestStubs.Organization();
   let project = TestStubs.Project();
-  let sandbox;
-  let stubbedApiRequest;
-
   beforeEach(function() {
-    sandbox = sinon.sandbox.create();
-
-    stubbedApiRequest = sandbox.stub(Client.prototype, 'request');
-  });
-
-  afterEach(function() {
-    sandbox.restore();
-  });
-
-  describe('fetchStats()', function() {
-    it('should make a request to the organizations endpoint', function() {
-      let organizationTeams = shallow(<OrganizationTeams params={{orgId: '123'}} />, {
-        organization: {id: '1337'},
-      }).instance();
-
-      // NOTE: creation of OrganizationTeams causes a bunch of API requests to fire ...
-      //       reset the request stub so that we can get an accurate count
-      stubbedApiRequest.reset();
-
-      organizationTeams.fetchStats();
-
-      expect(stubbedApiRequest.callCount).toEqual(1);
-      expect(stubbedApiRequest.getCall(0).args[0]).toEqual('/organizations/123/stats/');
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/stats/',
+      body: [],
     });
   });
 
-  describe('New Settings', function() {
-    it('opens "create team modal" when creating a new team from header', function() {
-      let wrapper = mount(
-        <OrganizationTeamsView
-          params={{orgId: org.slug, projectId: project.slug}}
-          routes={[]}
-          allTeams={[TestStubs.Team()]}
-          access={new Set(['org:write'])}
-          features={new Set([])}
-          activeTeams={[]}
-          organization={org}
-        />,
-        TestStubs.routerContext()
-      );
-
-      // Click "Create Team" in Panel Header
-      wrapper.find('SettingsPageHeading Button').simulate('click');
-
-      // action creator to open "create team modal" is called
-      expect(openCreateTeamModal).toHaveBeenCalledWith(
-        expect.objectContaining({
-          organization: expect.objectContaining({
-            slug: org.slug,
-          }),
-        })
-      );
-    });
+  it('opens "create team modal" when creating a new team from header', function() {
+    let wrapper = mount(
+      <OrganizationTeams
+        params={{orgId: org.slug, projectId: project.slug}}
+        routes={[]}
+        allTeams={[TestStubs.Team()]}
+        access={new Set(['org:write'])}
+        features={new Set([])}
+        activeTeams={[]}
+        organization={org}
+      />,
+      TestStubs.routerContext()
+    );
+
+    // Click "Create Team" in Panel Header
+    wrapper.find('SettingsPageHeading Button').simulate('click');
+
+    // action creator to open "create team modal" is called
+    expect(openCreateTeamModal).toHaveBeenCalledWith(
+      expect.objectContaining({
+        organization: expect.objectContaining({
+          slug: org.slug,
+        }),
+      })
+    );
   });
 });
diff --git a/tests/js/spec/views/teamMembers.spec.jsx b/tests/js/spec/views/teamMembers.spec.jsx
index 42c67860c0..2d4a193e56 100644
--- a/tests/js/spec/views/teamMembers.spec.jsx
+++ b/tests/js/spec/views/teamMembers.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {shallow, mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import TeamMembers from 'app/views/settings/team/teamMembers';
+import TeamMembers from 'app/views/settings/organizationTeams/teamMembers';
 
 describe('TeamMembers', function() {
   let routerContext = TestStubs.routerContext();
diff --git a/tests/js/spec/views/teamSettings.old.spec.jsx b/tests/js/spec/views/teamSettings.old.spec.jsx
deleted file mode 100644
index 771bea0c21..0000000000
--- a/tests/js/spec/views/teamSettings.old.spec.jsx
+++ /dev/null
@@ -1,36 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {shallow} from 'enzyme';
-
-import TeamSettings from 'app/views/settings/team/teamSettings.old';
-
-const childContextTypes = {
-  organization: PropTypes.object,
-  router: PropTypes.object,
-  location: PropTypes.object,
-};
-
-describe('TeamSettings (Old)', function() {
-  describe('render()', function() {
-    it('renders', function() {
-      let team = TestStubs.Team();
-      let wrapper = shallow(
-        <TeamSettings
-          routes={[]}
-          params={{orgId: 'org', teamId: team.slug}}
-          team={team}
-          onTeamChange={() => {}}
-        />,
-        {
-          context: {
-            router: TestStubs.router(),
-          },
-          childContextTypes,
-        }
-      );
-
-      wrapper.update();
-      expect(wrapper).toMatchSnapshot();
-    });
-  });
-});
diff --git a/tests/js/spec/views/teamSettings.spec.jsx b/tests/js/spec/views/teamSettings.spec.jsx
index 7da47414f0..fef4ef4dab 100644
--- a/tests/js/spec/views/teamSettings.spec.jsx
+++ b/tests/js/spec/views/teamSettings.spec.jsx
@@ -1,62 +1,10 @@
-import PropTypes from 'prop-types';
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount} from 'enzyme';
 
-import TeamSettings from 'app/views/settings/team/teamSettings.old';
 import TeamStore from 'app/stores/teamStore';
-import NewTeamSettings from 'app/views/settings/team/teamSettings';
+import TeamSettings from 'app/views/settings/organizationTeams/teamSettings';
 
-const childContextTypes = {
-  organization: PropTypes.object,
-  router: PropTypes.object,
-  location: PropTypes.object,
-};
-
-// #NEW-SETTINGS
 describe('TeamSettings', function() {
-  describe('render()', function() {
-    let wrapper;
-    beforeEach(function() {
-      let team = TestStubs.Team();
-      wrapper = shallow(
-        <TeamSettings
-          routes={[]}
-          params={{orgId: 'org', teamId: team.slug}}
-          team={team}
-          onTeamChange={() => {}}
-        />,
-        {
-          context: {
-            router: TestStubs.router(),
-            organization: {
-              id: '1337',
-              access: [],
-            },
-          },
-          childContextTypes,
-        }
-      );
-    });
-
-    it('renders', function() {
-      wrapper.update();
-      expect(wrapper).toMatchSnapshot();
-    });
-
-    it('renders with remove team', function() {
-      wrapper.setContext({
-        organization: {
-          id: '1337',
-          access: ['team:admin'],
-        },
-      });
-      wrapper.update();
-      expect(wrapper).toMatchSnapshot();
-    });
-  });
-});
-
-describe('NewTeamSettings', function() {
   beforeEach(function() {
     MockApiClient.clearMockResponses();
     sinon.stub(window.location, 'assign');
@@ -76,7 +24,7 @@ describe('NewTeamSettings', function() {
     let {router} = mountOptions.context;
 
     let wrapper = mount(
-      <NewTeamSettings
+      <TeamSettings
         routes={[]}
         router={router}
         params={{orgId: 'org', teamId: team.slug}}
@@ -124,7 +72,7 @@ describe('NewTeamSettings', function() {
     let team = TestStubs.Team();
 
     let wrapper = mount(
-      <NewTeamSettings
+      <TeamSettings
         routes={[]}
         params={{orgId: 'org', teamId: team.slug}}
         team={team}
@@ -157,7 +105,7 @@ describe('NewTeamSettings', function() {
     ]);
 
     let wrapper = mount(
-      <NewTeamSettings
+      <TeamSettings
         router={{push: routerPushMock}}
         routes={[]}
         params={{orgId: 'org', teamId: team.slug}}
