commit 65f0894eaeccd256bb4a93f3069029aea6ddd20c
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Mon Jul 3 16:10:41 2017 -0500

    Move API call into project filters

diff --git a/src/sentry/static/sentry/app/components/groupTombstones.jsx b/src/sentry/static/sentry/app/components/groupTombstones.jsx
index 3d6a550d2f..780e9033b0 100644
--- a/src/sentry/static/sentry/app/components/groupTombstones.jsx
+++ b/src/sentry/static/sentry/app/components/groupTombstones.jsx
@@ -2,7 +2,6 @@ import React from 'react';
 
 import AlertActions from '../actions/alertActions';
 
-import LoadingIndicator from '../components/loadingIndicator';
 import LoadingError from '../components/loadingError';
 import LinkWithConfirmation from '../components/linkWithConfirmation';
 
@@ -13,42 +12,13 @@ import {t} from '../locale';
 const GroupTombstones = React.createClass({
   propTypes: {
     orgId: React.PropTypes.string.isRequired,
-    projectId: React.PropTypes.string.isRequired
+    projectId: React.PropTypes.string.isRequired,
+    tombstones: React.PropTypes.array.isRequired,
+    tombstoneError: React.PropTypes.bool.isRequired
   },
 
   mixins: [ApiMixin],
 
-  getInitialState() {
-    return {
-      loading: true,
-      tombstones: []
-    };
-  },
-
-  componentDidMount() {
-    this.fetchData();
-  },
-
-  fetchData() {
-    let {orgId, projectId} = this.props;
-
-    let path = `/projects/${orgId}/${projectId}/tombstone/`;
-    this.api.request(path, {
-      method: 'GET',
-      success: (data, _, jqXHR) => {
-        this.setState({
-          tombstones: data,
-          loading: false
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true
-        });
-      }
-    });
-  },
-
   undiscard(tombstoneId) {
     // TODO (kt): update this when you scope the API endpoint to the project
     let path = `/tombstone/${tombstoneId}/`;
@@ -75,11 +45,9 @@ const GroupTombstones = React.createClass({
   },
 
   render() {
-    if (this.state.loading) return <LoadingIndicator />;
-
-    if (this.state.error) return <LoadingError />;
+    if (this.props.tombstoneError) return <LoadingError />;
 
-    let {tombstones} = this.state;
+    let {tombstones} = this.props;
     return (
       <div>
         <div className="row" style={{paddingTop: 10}}>
diff --git a/src/sentry/static/sentry/app/views/projectFilters.jsx b/src/sentry/static/sentry/app/views/projectFilters.jsx
index eb53a12fe0..c0b5ea2b73 100644
--- a/src/sentry/static/sentry/app/views/projectFilters.jsx
+++ b/src/sentry/static/sentry/app/views/projectFilters.jsx
@@ -342,7 +342,9 @@ const ProjectFilters = React.createClass({
       processedStats: false,
       projectOptions: {},
       blankStats: false,
-      activeSection: 'data-filters'
+      activeSection: 'data-filters',
+      tombstones: [],
+      tombstoneError: false
     };
   },
 
@@ -411,6 +413,20 @@ const ProjectFilters = React.createClass({
         });
       }
     });
+
+    this.api.request(`/projects/${orgId}/${projectId}/tombstone/`, {
+      method: 'GET',
+      success: data => {
+        this.setState({
+          tombstones: data
+        });
+      },
+      error: () => {
+        this.setState({
+          tombstoneError: true
+        });
+      }
+    });
   },
 
   processStatsData() {
@@ -521,7 +537,14 @@ const ProjectFilters = React.createClass({
         </div>
       );
     } else {
-      return <GroupTombstones orgId={orgId} projectId={projectId} />;
+      return (
+        <GroupTombstones
+          orgId={orgId}
+          projectId={projectId}
+          tombstones={this.state.tombstones}
+          tombstoneError={this.state.tombstoneError}
+        />
+      );
     }
   },
 
@@ -556,12 +579,14 @@ const ProjectFilters = React.createClass({
         <div className="sub-header flex flex-container flex-vertically-centered">
           <div className="p-t-1">
             <ul className="nav nav-tabs">
-              <li className={navSection == 'data-filters' ? 'active ' : ''}>
+              <li
+                className={`col-xs-5  ${navSection == 'data-filters' ? 'active ' : ''}`}>
                 <a onClick={() => this.setProjectNavSection('data-filters')}>
                   {t('Data Filters')}
                 </a>
               </li>
-              <li className={navSection == 'discarded-groups' ? 'active ' : ''}>
+              <li
+                className={`col-xs-5 align-right ${navSection == 'discarded-groups' ? 'active ' : ''}`}>
                 <a onClick={() => this.setProjectNavSection('discarded-groups')}>
                   {t('Discarded Groups')}
                 </a>
