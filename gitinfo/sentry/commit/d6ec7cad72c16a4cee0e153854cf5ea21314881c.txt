commit d6ec7cad72c16a4cee0e153854cf5ea21314881c
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Sep 20 02:03:41 2013 -0700

    Add group list sort tests

diff --git a/tests/sentry/web/frontend/groups/tests.py b/tests/sentry/web/frontend/groups/tests.py
index 49ad0d2d33..c7054223de 100644
--- a/tests/sentry/web/frontend/groups/tests.py
+++ b/tests/sentry/web/frontend/groups/tests.py
@@ -4,9 +4,12 @@ from __future__ import absolute_import
 
 import json
 
+from datetime import timedelta
 from django.core.urlresolvers import reverse
+from django.utils import timezone
+from exam import before
 
-from sentry.models import GroupSeen
+from sentry.models import GroupSeen, Group
 from sentry.constants import MAX_JSON_RESULTS
 from sentry.testutils import TestCase, fixture
 
@@ -45,6 +48,27 @@ class GroupListTest(TestCase):
             'project_id': self.project.slug,
         })
 
+    @before
+    def create_a_couple_events(self):
+        later = timezone.now()
+        now = later - timedelta(hours=1)
+        past = now - timedelta(hours=1)
+
+        self.group1 = Group.objects.create(
+            project=self.project,
+            checksum='a' * 32,
+            last_seen=now,
+            first_seen=now,
+            times_seen=5,
+        )
+        self.group2 = Group.objects.create(
+            project=self.project,
+            checksum='b' * 32,
+            last_seen=later,
+            first_seen=past,
+            times_seen=50,
+        )
+
     def test_does_render(self):
         self.login()
         resp = self.client.get(self.path)
@@ -56,6 +80,28 @@ class GroupListTest(TestCase):
         assert resp.context['project'] == self.project
         assert resp.context['team'] == self.team
 
+    def test_date_sort(self):
+        self.login()
+        resp = self.client.get(self.path + '?sort=date')
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
+        assert list(resp.context['event_list']) == [self.group2, self.group1]
+
+    def test_new_sort(self):
+        self.login()
+        resp = self.client.get(self.path + '?sort=new')
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
+        print self.group1.score, self.group2.score
+        assert list(resp.context['event_list']) == [self.group1, self.group2]
+
+    def test_freq_sort(self):
+        self.login()
+        resp = self.client.get(self.path + '?sort=freq')
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
+        assert list(resp.context['event_list']) == [self.group2, self.group1]
+
 
 class GroupEventListTest(TestCase):
     @fixture
