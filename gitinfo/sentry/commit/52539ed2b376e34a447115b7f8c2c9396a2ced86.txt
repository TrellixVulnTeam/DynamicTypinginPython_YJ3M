commit 52539ed2b376e34a447115b7f8c2c9396a2ced86
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Sep 28 13:56:18 2018 -0700

    feat(discover): Add a read-only query component (#9938)
    
    This will be used for saved queries in Discover

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index ad2f1d830b..7f6f084203 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -13,8 +13,8 @@ import TimeRangeSelector from 'app/components/organizations/timeRangeSelector';
 import Result from './result';
 import Intro from './intro';
 import EarlyAdopterMessage from './earlyAdopterMessage';
-import QueryFields from './sidebar/queryFields';
-import SavedQueries from './sidebar/savedQueries';
+import QueryEdit from './sidebar/queryEdit';
+import SavedQueryList from './sidebar/savedQueryList';
 
 import {getQueryStringFromQuery, getQueryFromQueryString} from './utils';
 import {isValidCondition} from './conditions/utils';
@@ -202,15 +202,15 @@ export default class OrganizationDiscover extends React.Component {
           <PageTitle>{t('Discover')}</PageTitle>
           {this.renderSidebarNav()}
           {view === 'query' && (
-            <QueryFields
+            <QueryEdit
               queryBuilder={queryBuilder}
               isFetchingQuery={isFetchingQuery}
-              updateField={this.updateField}
-              runQuery={this.runQuery}
+              onUpdateField={this.updateField}
+              onRunQuery={this.runQuery}
               reset={this.reset}
             />
           )}
-          {view === 'saved' && <SavedQueries organization={organization} />}
+          {view === 'saved' && <SavedQueryList organization={organization} />}
         </Sidebar>
         <Body direction="column" flex="1">
           <TopBar>
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/queryFields.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/queryEdit.jsx
similarity index 83%
rename from src/sentry/static/sentry/app/views/organizationDiscover/sidebar/queryFields.jsx
rename to src/sentry/static/sentry/app/views/organizationDiscover/sidebar/queryEdit.jsx
index cf2a0fa291..5567918f5f 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/queryFields.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/queryEdit.jsx
@@ -12,12 +12,12 @@ import Conditions from '../conditions';
 import {getOrderByOptions} from '../utils';
 import {Fieldset, PlaceholderText, SidebarLabel, ButtonSpinner} from '../styles';
 
-export default class QueryFields extends React.Component {
+export default class QueryEdit extends React.Component {
   static propTypes = {
     queryBuilder: PropTypes.object.isRequired,
     isFetchingQuery: PropTypes.bool.isRequired,
-    updateField: PropTypes.func.isRequired,
-    runQuery: PropTypes.func.isRequired,
+    onUpdateField: PropTypes.func.isRequired,
+    onRunQuery: PropTypes.func.isRequired,
     reset: PropTypes.func.isRequired,
   };
 
@@ -32,7 +32,7 @@ export default class QueryFields extends React.Component {
   };
 
   render() {
-    const {queryBuilder, isFetchingQuery, updateField, runQuery, reset} = this.props;
+    const {queryBuilder, isFetchingQuery, onUpdateField, onRunQuery, reset} = this.props;
 
     const currentQuery = queryBuilder.getInternal();
     const columns = queryBuilder.getColumns();
@@ -56,7 +56,7 @@ export default class QueryFields extends React.Component {
             placeholder={this.getSummarizePlaceholder()}
             options={fieldOptions}
             value={currentQuery.fields}
-            onChange={val => updateField('fields', val.map(({value}) => value))}
+            onChange={val => onUpdateField('fields', val.map(({value}) => value))}
             clearable={true}
           />
         </Fieldset>
@@ -64,14 +64,14 @@ export default class QueryFields extends React.Component {
           <Aggregations
             value={currentQuery.aggregations}
             columns={columns}
-            onChange={val => updateField('aggregations', val)}
+            onChange={val => onUpdateField('aggregations', val)}
           />
         </Fieldset>
         <Fieldset>
           <Conditions
             value={currentQuery.conditions}
             columns={columnsForConditions}
-            onChange={val => updateField('conditions', val)}
+            onChange={val => onUpdateField('conditions', val)}
           />
         </Fieldset>
         <Fieldset>
@@ -84,7 +84,7 @@ export default class QueryFields extends React.Component {
             placeholder={<PlaceholderText>{t('Order by...')}</PlaceholderText>}
             options={getOrderByOptions(queryBuilder)}
             value={currentQuery.orderby}
-            onChange={val => updateField('orderby', val.value)}
+            onChange={val => onUpdateField('orderby', val.value)}
           />
         </Fieldset>
         <Fieldset>
@@ -93,14 +93,14 @@ export default class QueryFields extends React.Component {
             label={<SidebarLabel>{t('Limit')}</SidebarLabel>}
             placeholder="#"
             value={currentQuery.limit}
-            onChange={val => updateField('limit', typeof val === 'number' ? val : null)}
+            onChange={val => onUpdateField('limit', typeof val === 'number' ? val : null)}
           />
         </Fieldset>
         <Fieldset>
           <Flex>
             <Button
               size="xsmall"
-              onClick={runQuery}
+              onClick={onRunQuery}
               priority="primary"
               busy={isFetchingQuery}
             >
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/queryRead.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/queryRead.jsx
new file mode 100644
index 0000000000..7aa5fe54c2
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/queryRead.jsx
@@ -0,0 +1,93 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import {Flex} from 'grid-emotion';
+
+import {t} from 'app/locale';
+import Button from 'app/components/button';
+import * as conditionsUtils from '../conditions/utils';
+import * as aggregationsUtils from '../aggregations/utils';
+
+import {Fieldset, PlaceholderText, SidebarLabel, ButtonSpinner} from '../styles';
+
+export default class QueryRead extends React.Component {
+  static propTypes = {
+    queryBuilder: PropTypes.object.isRequired,
+    isFetchingQuery: PropTypes.bool.isRequired,
+    onRunQuery: PropTypes.func.isRequired,
+  };
+
+  renderAggregations(aggregations) {
+    if (!aggregations.length) {
+      return <PlaceholderText>{t('No aggregations selected')}</PlaceholderText>;
+    }
+
+    return aggregations.map((aggregation, index) => (
+      <PlaceholderText key={index}>
+        {aggregationsUtils.getInternal(aggregation)}
+      </PlaceholderText>
+    ));
+  }
+
+  renderConditions(conditions) {
+    if (!conditions.length) {
+      return <PlaceholderText>{t('No conditions selected')}</PlaceholderText>;
+    }
+
+    return conditions.map((condition, index) => (
+      <PlaceholderText key={index}>
+        {conditionsUtils.getInternal(condition)}
+      </PlaceholderText>
+    ));
+  }
+
+  render() {
+    const {queryBuilder, onRunQuery, isFetchingQuery} = this.props;
+
+    const currentQuery = queryBuilder.getInternal();
+
+    return (
+      <React.Fragment>
+        <Fieldset>
+          <SidebarLabel className="control-label">{t('Summarize')}</SidebarLabel>
+          <PlaceholderText>
+            {currentQuery.fields.join(', ') || t('No fields selected')}
+          </PlaceholderText>
+        </Fieldset>
+        <Fieldset>
+          <SidebarLabel className="control-label">{t('Aggregations')}</SidebarLabel>
+          {this.renderAggregations(currentQuery.aggregations)}
+        </Fieldset>
+        <Fieldset>
+          <SidebarLabel className="control-label">{t('Conditions')}</SidebarLabel>
+          {this.renderConditions(currentQuery.conditions)}
+        </Fieldset>
+        <Fieldset>
+          <SidebarLabel className="control-label">{t('Order by')}</SidebarLabel>
+          <PlaceholderText>
+            {currentQuery.orderBy || t('No orderby value selected')}
+          </PlaceholderText>
+        </Fieldset>
+        <Fieldset>
+          <SidebarLabel className="control-label">{t('Limit')}</SidebarLabel>
+          <PlaceholderText>
+            {currentQuery.limit || t('No limit provided')}
+          </PlaceholderText>
+        </Fieldset>
+
+        <Fieldset>
+          <Flex>
+            <Button
+              size="xsmall"
+              onClick={onRunQuery}
+              priority="primary"
+              busy={isFetchingQuery}
+            >
+              {t('Run')}
+              {isFetchingQuery && <ButtonSpinner />}
+            </Button>
+          </Flex>
+        </Fieldset>
+      </React.Fragment>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueries.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueries.jsx
rename to src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
index e55ffec21c..dc3618143a 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
@@ -61,6 +61,16 @@ export const SidebarTabs = styled(props => <NavTabs {...props} underlined={true}
   margin: 0;
 `;
 
+export const SavedQueryName = styled(Flex)`
+  justify-content: space-between;
+  align-items: center;
+  font-size: ${p => p.theme.fontSizeMedium};
+  padding: ${space(1.5)} ${space(4)};
+  color: ${p => p.theme.gray4};
+  font-weight: 600;
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+`;
+
 export const PlaceholderText = styled.div`
   color: ${p => p.theme.gray6};
   font-size: 15px;
