commit 4213a0ee971138d950d7b3f3cc321ce0d90a21f2
Author: Chris Fuller <cfuller@sentry.io>
Date:   Fri Feb 28 16:37:00 2020 -0500

    feat(workflow): Adding IncidentTrigger pre_save receiver (#17363)
    
    * Adding presave hook to update IncidentTrigger's date_modified.

diff --git a/src/sentry/incidents/receivers.py b/src/sentry/incidents/receivers.py
index 31b6595d99..2b08ab990c 100644
--- a/src/sentry/incidents/receivers.py
+++ b/src/sentry/incidents/receivers.py
@@ -1,11 +1,15 @@
 from __future__ import absolute_import
 
-from django.db.models.signals import post_save
+import pytz
+
+from django.db.models.signals import post_save, pre_save
 from django.dispatch import receiver
 
-from sentry.incidents.models import AlertRule
+from sentry.incidents.models import AlertRule, IncidentTrigger
 from sentry.models.project import Project
 
+from datetime import datetime
+
 
 @receiver(post_save, sender=Project, weak=False)
 def add_project_to_include_all_rules(instance, created, **kwargs):
@@ -19,3 +23,8 @@ def add_project_to_include_all_rules(instance, created, **kwargs):
     )
     for alert_rule in alert_rules:
         subscribe_projects_to_alert_rule(alert_rule, [instance])
+
+
+@receiver(pre_save, sender=IncidentTrigger)
+def pre_save_incident_trigger(instance, sender, *args, **kwargs):
+    instance.date_modified = datetime.utcnow().replace(tzinfo=pytz.utc)
diff --git a/tests/sentry/incidents/test_receivers.py b/tests/sentry/incidents/test_receivers.py
index 6c409e2ab4..5f328228ab 100644
--- a/tests/sentry/incidents/test_receivers.py
+++ b/tests/sentry/incidents/test_receivers.py
@@ -1,7 +1,16 @@
 from __future__ import absolute_import
-
+from datetime import datetime
+import pytz
 from sentry.snuba.models import QuerySubscription
 from sentry.testutils import TestCase
+from sentry.models import Organization
+from sentry.incidents.models import (
+    IncidentStatus,
+    TriggerStatus,
+    AlertRuleTrigger,
+    Incident,
+    IncidentTrigger,
+)
 
 
 class AddProjectToIncludeAllRulesTest(TestCase):
@@ -28,3 +37,37 @@ class AddProjectToIncludeAllRulesTest(TestCase):
         assert not QuerySubscription.objects.filter(
             project=new_project, alert_rules=alert_rule
         ).exists()
+
+
+class PreSaveIncidentTriggerTest(TestCase):
+    def test_update_date_modified(self):
+        org = Organization.objects.create(name="chris' test org")
+        alert_rule = self.create_alert_rule(include_all_projects=False)
+        alert_rule.query = "event.type:error"
+        trigger = AlertRuleTrigger.objects.create(
+            alert_rule=alert_rule,
+            label="warning",
+            threshold_type=0,
+            alert_threshold=100,
+            resolve_threshold=50,
+        )
+        incident = Incident.objects.create(
+            organization=org,
+            detection_uuid=None,
+            status=IncidentStatus.WARNING.value,
+            type=2,
+            title="a custom incident title",
+            query="event.type:error",
+            aggregation=0,
+            date_started=datetime.utcnow().replace(tzinfo=pytz.utc),
+            date_detected=datetime.utcnow().replace(tzinfo=pytz.utc),
+            alert_rule=alert_rule,
+        )
+        incident_trigger = IncidentTrigger.objects.create(
+            incident=incident, alert_rule_trigger=trigger, status=TriggerStatus.ACTIVE.value
+        )
+        date_modified = incident_trigger.date_modified
+        incident_trigger.status = TriggerStatus.RESOLVED.value
+        incident_trigger.save()
+        incident_trigger.refresh_from_db()
+        assert date_modified < incident_trigger.date_modified
