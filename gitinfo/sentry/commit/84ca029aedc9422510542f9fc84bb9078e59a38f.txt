commit 84ca029aedc9422510542f9fc84bb9078e59a38f
Author: William Mak <william@wmak.io>
Date:   Wed Dec 11 11:52:36 2019 -0500

    fix(environments): Hide environments with name='none' (#15840)
    
    * fix(environments): Hide environments with name='none'
    
    - This will hide existing Enviroments with the name none since there's
      now a blacklist for environment names. Introduced in
      getsentry/semaphore#320
    - Fixes SEN-1218
    - Fixes ISSUES-614
    
    * ref: switching to the slower and safer way
    
    * ref: Using RangeQuerySetWrapper
    
    - Also marking as dangerous.
    
    * ref: Moving migration # forward by 1
    
    * ref: Function spelling
    
    * ref: Moving back to the EnvironmentProject query
    
    - Based on Matt's comment and running `explain analyze` on this query I
      think we're okay to move back to this
    - Also now that this is only running on about 30 rows, removing the
      `RangeQuerySetWrapper` and setting this migration as not dangerous.
    
    * fix: Marking as safe

diff --git a/src/sentry/migrations/0023_hide_environment_none_20191126.py b/src/sentry/migrations/0023_hide_environment_none_20191126.py
new file mode 100644
index 0000000000..a5a00ec908
--- /dev/null
+++ b/src/sentry/migrations/0023_hide_environment_none_20191126.py
@@ -0,0 +1,41 @@
+# -*- coding: utf-8 -*-
+from __future__ import unicode_literals
+
+from django.db import migrations, models
+
+def hide_environment_none(apps, schema_editor):
+    """
+    Hide environments that are named none, since they're blacklisted and no longer can be created.
+
+    We should iterate over each environment row individually in python instead so that we don't lock the DB up. This is
+    far slower but much safer
+    """
+    EnvironmentProject = apps.get_model("sentry", "EnvironmentProject")
+    for project in EnvironmentProject.objects.filter(environment__name='none'):
+        project.is_hidden = True
+        project.save()
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Adding indexes to large tables. These indexes should be created concurrently,
+    #   unfortunately we can't run migrations outside of a transaction until Django
+    #   1.10. So until then these should be run manually.
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+
+    dependencies = [
+        ("sentry", "0022_merge"),
+    ]
+
+    operations = [
+        migrations.RunPython(hide_environment_none, migrations.RunPython.noop)
+    ]
