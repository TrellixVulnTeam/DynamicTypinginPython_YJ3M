commit 19b9f496564aefa65222cbe90b9917fe6808d31d
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jul 20 14:19:54 2013 -0700

    Add an option to disable notifications on newly created projects (fixes GH-945)

diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 52a5832a28..09d5201000 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -49,11 +49,15 @@ class NotificationPlugin(Plugin):
     def get_sendable_users(self, project):
         conf_key = self.get_conf_key()
 
-        disabled = set(UserOption.objects.filter(
-            project=project,
-            key='%s:alert' % conf_key,
-            value=0,
-        ).values_list('user', flat=True))
+        alert_settings = dict(
+            (o.user_id, o.value)
+            for o in UserOption.objects.filter(
+                project=project,
+                key='%s:alert' % conf_key,
+            )
+        )
+
+        disabled = set(u for u, v in alert_settings.iteritems() if v == 0)
 
         # fetch team members
         member_set = set(project.team.member_set.filter(
@@ -66,6 +70,16 @@ class NotificationPlugin(Plugin):
             members__is_active=True,
         ).exclude(members__in=disabled).values_list('members', flat=True))
 
+        # determine members default settings
+        members_to_check = set(u for u in member_set if u not in alert_settings)
+        if members_to_check:
+            disabled = set(UserOption.objects.filter(
+                key='subscribe_by_default',
+                value=0,
+                user__in=members_to_check,
+            ).values_list('user', flat=True))
+            member_set = filter(lambda x: x not in disabled, member_set)
+
         return member_set
 
     def should_notify(self, group, event):
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index f63c4b1370..f2329c0eb8 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -43,6 +43,10 @@ class RegistrationForm(forms.ModelForm):
 
 class NotificationSettingsForm(forms.Form):
     alert_email = forms.EmailField(help_text=_('Designate an alternative email address to send email notifications to.'), required=False)
+    subscribe_by_default = forms.ChoiceField(choices=(
+        (1, _('Automatically subscribe to notifications for new projects')),
+        (0, _('Do not subscribe to notifications for new projects')),
+    ), required=False)
 
     def __init__(self, user, *args, **kwargs):
         self.user = user
@@ -53,6 +57,12 @@ class NotificationSettingsForm(forms.Form):
             key='alert_email',
             default=user.email,
         )
+        self.fields['subscribe_by_default'].initial = UserOption.objects.get_value(
+            user=self.user,
+            project=None,
+            key='subscribe_by_default',
+            default=1,
+        )
 
     def get_title(self):
         return "General"
@@ -64,6 +74,12 @@ class NotificationSettingsForm(forms.Form):
             key='alert_email',
             value=self.cleaned_data['alert_email'],
         )
+        UserOption.objects.set_value(
+            user=self.user,
+            project=None,
+            key='subscribe_by_default',
+            value=self.cleaned_data['subscribe_by_default'],
+        )
 
 
 class AccountSettingsForm(forms.Form):
@@ -169,7 +185,8 @@ class ProjectEmailOptionsForm(forms.Form):
         is_enabled = UserOption.objects.get_value(
             user, project, 'mail:alert', None)
         if is_enabled is None:
-            is_enabled = True
+            is_enabled = UserOption.objects.get_value(
+                user, None, 'subscribe_by_default', 1) == 1
         else:
             is_enabled = bool(is_enabled)
 
