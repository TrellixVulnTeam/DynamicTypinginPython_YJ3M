commit 423749adf84c60907627b1d9c7acd6306185f948
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Apr 9 10:06:10 2015 -0400

    Various cleanup

diff --git a/src/sentry/utils/pytest.py b/src/sentry/utils/pytest.py
index 6a0e87b2bf..deb6659e42 100644
--- a/src/sentry/utils/pytest.py
+++ b/src/sentry/utils/pytest.py
@@ -66,8 +66,6 @@ def pytest_configure(config):
 
     # disable error reporting by default
     settings.SENTRY_REDIS_OPTIONS = {'hosts': {0: {'db': 9}}}
-    settings.BROKER_BACKEND = 'memory'
-    settings.BROKER_URL = None
 
     settings.SENTRY_ALLOW_ORIGIN = '*'
 
@@ -77,6 +75,8 @@ def pytest_configure(config):
     settings.RECAPTCHA_PUBLIC_KEY = 'a' * 40
     settings.RECAPTCHA_PRIVATE_KEY = 'b' * 40
 
+    settings.BROKER_BACKEND = 'memory'
+    settings.BROKER_URL = None
     settings.CELERY_ALWAYS_EAGER = False
     settings.CELERY_EAGER_PROPAGATES_EXCEPTIONS = True
 
@@ -112,6 +112,5 @@ def pytest_runtest_teardown(item):
     client = StrictRedis(db=9)
     client.flushdb()
 
-    # TODO(dcramer): does not work at all
     from celery.task.control import discard_all
     discard_all()
diff --git a/tests/integration/tests.py b/tests/integration/tests.py
index 7552093a08..673d286062 100644
--- a/tests/integration/tests.py
+++ b/tests/integration/tests.py
@@ -117,7 +117,7 @@ class RavenIntegrationTest(TransactionTestCase):
                 self.pk.public_key, self.pk.secret_key, self.pk.project_id)
         )
 
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             client.capture('Message', message='foo')
 
         send_remote.assert_called_once()
@@ -215,7 +215,7 @@ class SentryRemoteTest(TestCase):
         key = self.projectkey.public_key
         secret = self.projectkey.secret_key
 
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             resp = self.client.post(
                 self.path, message,
                 content_type='application/octet-stream',
@@ -246,7 +246,7 @@ class SentryRemoteTest(TestCase):
         key = self.projectkey.public_key
         secret = self.projectkey.secret_key
 
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             resp = self.client.post(
                 self.path, fp.getvalue(),
                 content_type='application/octet-stream',
diff --git a/tests/sentry/api/endpoints/test_group_details.py b/tests/sentry/api/endpoints/test_group_details.py
index a518486072..e8f590edc6 100644
--- a/tests/sentry/api/endpoints/test_group_details.py
+++ b/tests/sentry/api/endpoints/test_group_details.py
@@ -163,7 +163,7 @@ class GroupDeleteTest(APITestCase):
         url = reverse('sentry-api-0-group-details', kwargs={
             'group_id': group.id
         })
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             response = self.client.delete(url, format='json')
 
         assert response.status_code == 202, response.content
diff --git a/tests/sentry/api/endpoints/test_group_stats.py b/tests/sentry/api/endpoints/test_group_stats.py
index 59855a57ef..0ea6944e66 100644
--- a/tests/sentry/api/endpoints/test_group_stats.py
+++ b/tests/sentry/api/endpoints/test_group_stats.py
@@ -11,14 +11,25 @@ class GroupStatsTest(APITestCase):
         group1 = self.create_group()
         group2 = self.create_group()
 
-        tsdb.incr(tsdb.models.group, group1.id, count=3)
-        tsdb.incr(tsdb.models.group, group2.id, count=5)
+        import logging
+        logging.getLogger().addHandler(logging.StreamHandler())
+        logging.getLogger().setLevel(logging.DEBUG)
 
         url = reverse('sentry-api-0-group-stats', kwargs={
             'group_id': group1.id,
         })
         response = self.client.get(url, format='json')
 
+        assert response.status_code == 200, response.content
+        for point in response.data:
+            assert point[1] == 0
+        assert len(response.data) == 24
+
+        tsdb.incr(tsdb.models.group, group1.id, count=3)
+        tsdb.incr(tsdb.models.group, group2.id, count=5)
+
+        response = self.client.get(url, format='json')
+
         assert response.status_code == 200, response.content
         assert response.data[-1][1] == 3, response.data
         for point in response.data[:-1]:
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index 31889de610..b9223683b8 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -293,7 +293,7 @@ class GroupDeleteTest(APITestCase):
             group4=group4,
         )
 
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             response = self.client.delete(url, format='json')
         assert response.status_code == 204
 
diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index 13a40fcca6..13defadc92 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -20,7 +20,7 @@ class SentryManagerTest(TestCase):
         event = Group.objects.from_kwargs(1, message='rrr')
         group = event.group
 
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             Group.objects.add_tags(group, tags=(('foo', 'bar'), ('foo', 'baz'), ('biz', 'boz')))
 
         results = list(GroupTagValue.objects.filter(
diff --git a/tests/sentry/models/activity/tests.py b/tests/sentry/models/activity/tests.py
index dff8afaac4..5d5b112b92 100644
--- a/tests/sentry/models/activity/tests.py
+++ b/tests/sentry/models/activity/tests.py
@@ -21,7 +21,7 @@ class SendNotificationTest(TestCase):
 
         self.project.team.organization.member_set.create(user=user_foo)
 
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             activity.send_notification()
 
         assert len(mail.outbox) == 1
diff --git a/tests/sentry/models/tests.py b/tests/sentry/models/tests.py
index 27a090c84b..0119718786 100644
--- a/tests/sentry/models/tests.py
+++ b/tests/sentry/models/tests.py
@@ -82,7 +82,7 @@ class LostPasswordTest(TestCase):
         )
 
     def test_send_recover_mail(self):
-        with self.settings(SENTRY_URL_PREFIX='http://testserver', CELERY_ALWAYS_EAGER=True):
+        with self.settings(SENTRY_URL_PREFIX='http://testserver'), self.tasks():
             self.password_hash.send_recover_mail()
 
         assert len(mail.outbox) == 1
diff --git a/tests/sentry/smtp/tests.py b/tests/sentry/smtp/tests.py
index 6cb3e3735c..e2eb37277f 100644
--- a/tests/sentry/smtp/tests.py
+++ b/tests/sentry/smtp/tests.py
@@ -18,19 +18,19 @@ class SentrySMTPTest(TestCase):
         self.assertEqual(email_to_group_id(self.mailto), self.group.pk)
 
     def test_process_message(self):
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             self.assertEqual(self.server.process_message('', self.user.email, [self.mailto], fixture), STATUS[200])
         self.assertEqual(Activity.objects.filter(type=Activity.NOTE)[0].data, {'text': 'sup'})
 
     def test_process_message_no_recipients(self):
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             self.assertEqual(self.server.process_message('', self.user.email, [], fixture), STATUS[550])
 
     def test_process_message_too_long(self):
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             self.assertEqual(self.server.process_message('', self.user.email, [self.mailto], fixture * 100), STATUS[552])
         self.assertEqual(Activity.objects.count(), 0)
 
     def test_process_message_invalid_email(self):
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             self.assertEqual(self.server.process_message('', self.user.email, ['lol@localhost'], fixture), STATUS[550])
diff --git a/tests/sentry/tasks/test_deletion.py b/tests/sentry/tasks/test_deletion.py
index 563b14a55d..f37aa9d8e0 100644
--- a/tests/sentry/tasks/test_deletion.py
+++ b/tests/sentry/tasks/test_deletion.py
@@ -13,7 +13,7 @@ class DeleteTeamTest(TestCase):
         project1 = self.create_project(team=team, name='test1', slug='test1')
         project2 = self.create_project(team=team, name='test2', slug='test2')
 
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             delete_team(object_id=team.id)
 
         assert not Team.objects.filter(id=team.id).exists()
@@ -30,7 +30,7 @@ class DeleteTagKeyTest(TestCase):
         GroupTagKey.objects.create(key='foo', group=group, project=project)
         GroupTagValue.objects.create(key='foo', value='bar', group=group, project=project)
 
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             delete_tag_key(object_id=tk.id)
 
             assert not GroupTagValue.objects.filter(key=tk.key, project=project).exists()
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index d1423d0b9b..e5828a6aff 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -100,7 +100,7 @@ class EventManagerTest(TransactionTestCase):
             message='foo bar', event_id='b' * 32,
             checksum='a' * 32,
         ))
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             event2 = manager.save(1)
 
         group = Group.objects.get(id=event.group_id)
@@ -116,7 +116,7 @@ class EventManagerTest(TransactionTestCase):
             event_id='a' * 32, checksum='a' * 32,
             timestamp=1403007314,
         ))
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             event = manager.save(1)
 
         group = Group.objects.get(id=event.group_id)
@@ -144,7 +144,7 @@ class EventManagerTest(TransactionTestCase):
             event_id='a' * 32, checksum='a' * 32,
             timestamp=1403007314,
         ))
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             event = manager.save(1)
 
         group = Group.objects.get(id=event.group_id)
@@ -169,7 +169,7 @@ class EventManagerTest(TransactionTestCase):
             event_id='a' * 32, checksum='a' * 32,
             timestamp=1403007314,
         ))
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             event = manager.save(1)
 
         mock_is_resolved.return_value = True
@@ -177,7 +177,7 @@ class EventManagerTest(TransactionTestCase):
             event_id='b' * 32, checksum='a' * 32,
             timestamp=1403007414,
         ))
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             event2 = manager.save(1)
         assert event.group_id == event2.group_id
 
diff --git a/tests/sentry/utils/test_raven.py b/tests/sentry/utils/test_raven.py
index 889a287ed1..fea1f85f18 100644
--- a/tests/sentry/utils/test_raven.py
+++ b/tests/sentry/utils/test_raven.py
@@ -13,7 +13,7 @@ class SentryInternalClientTest(TestCase):
     def test_simple(self):
         assert client.__class__ is SentryInternalClient
 
-        with self.settings(CELERY_ALWAYS_EAGER=True):
+        with self.tasks():
             client.captureMessage('internal client test')
 
         event = Event.objects.get()
