commit ca356ff53b4f4123a14190805c84b5209afc94a7
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Thu Sep 6 16:35:32 2018 -0500

    feat(snuba): Restrict Snuba query to group first_seen/last_seen (#9149)

diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index 2a92d7962c..621679ae00 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -79,8 +79,8 @@ def raw_query(start, end, groupby=None, conditions=None, filter_keys=None,
 
     # convert to naive UTC datetimes, as Snuba only deals in UTC
     # and this avoids offset-naive and offset-aware issues
-    start = start if not start.tzinfo else start.astimezone(pytz.utc).replace(tzinfo=None)
-    end = end if not end.tzinfo else end.astimezone(pytz.utc).replace(tzinfo=None)
+    start = naiveify_datetime(start)
+    end = naiveify_datetime(end)
 
     groupby = groupby or []
     conditions = conditions or []
@@ -133,6 +133,8 @@ def raw_query(start, end, groupby=None, conditions=None, filter_keys=None,
     with timer('get_project_issues'):
         issues = get_project_issues(project_ids, filter_keys.get('issue')) if get_issues else None
 
+    start, end = shrink_time_window(issues, start, end)
+
     request = {k: v for k, v in six.iteritems({
         'from_date': start.isoformat(),
         'to_date': end.isoformat(),
@@ -373,7 +375,7 @@ def get_project_issues(project_ids, issue_ids=None):
     Get a list of issues and associated fingerprint hashes for a list of
     project ids. If issue_ids is set, then return only those issues.
 
-    Returns a list: [(issue_id: [hash1, hash2, ...]), ...]
+    Returns a list: [(group_id, project_id, [(hash1, tomestone_date), ...]), ...]
     """
     if issue_ids:
         issue_ids = issue_ids[:MAX_ISSUES]
@@ -448,3 +450,17 @@ def insert_raw(data):
             )
     except urllib3.exceptions.HTTPError as err:
         raise SnubaError(err)
+
+
+def shrink_time_window(issues, start, end):
+    if issues and len(issues) == 1:
+        group_id = issues[0][0]
+        group = Group.objects.get(pk=group_id)
+        start = max(start, naiveify_datetime(group.first_seen) - timedelta(minutes=5))
+        end = min(end, naiveify_datetime(group.last_seen) + timedelta(minutes=5))
+
+    return start, end
+
+
+def naiveify_datetime(dt):
+    return dt if not dt.tzinfo else dt.astimezone(pytz.utc).replace(tzinfo=None)
diff --git a/tests/snuba/test_util.py b/tests/snuba/test_util.py
index 6e8bf21cc4..a905ab3a6b 100644
--- a/tests/snuba/test_util.py
+++ b/tests/snuba/test_util.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+from datetime import datetime, timedelta
+
 from sentry.testutils import TestCase
 from sentry.utils import snuba
 
@@ -42,3 +44,31 @@ class SnubaUtilTest(TestCase):
             ],
         ]
         assert set(snuba.all_referenced_columns(conditions)) == set(['a', 'b', 'c', 'd'])
+
+    def test_shrink_timeframe(self):
+        now = datetime.now()
+        year_ago = now - timedelta(days=365)
+        year_ahead = now + timedelta(days=365)
+
+        issues = None
+        assert snuba.shrink_time_window(issues, year_ago, year_ahead) == (year_ago, year_ahead)
+
+        issues = []
+        assert snuba.shrink_time_window(issues, year_ago, year_ahead) == (year_ago, year_ahead)
+
+        group1 = self.create_group()
+        group1.first_seen = now - timedelta(hours=1)
+        group1.last_seen = now
+        group1.save()
+        group2 = self.create_group()
+
+        # issues is a list like [(gid, pid, [(hash, tombstone_date), ...]), ...]
+        issues = [(group1.id, group1.project_id, [('a' * 32, None)])]
+        assert snuba.shrink_time_window(issues, year_ago, year_ahead) == \
+            (now - timedelta(hours=1, minutes=5), now + timedelta(minutes=5))
+
+        issues = [
+            (group1.id, group1.project_id, [('a' * 32, None)]),
+            (group2.id, group2.project_id, [('b' * 32, None)]),
+        ]
+        assert snuba.shrink_time_window(issues, year_ago, year_ahead) == (year_ago, year_ahead)
diff --git a/tests/snuba/tsdb/test_tsdb_backend.py b/tests/snuba/tsdb/test_tsdb_backend.py
index 02e1a2ec2e..08984cefe7 100644
--- a/tests/snuba/tsdb/test_tsdb_backend.py
+++ b/tests/snuba/tsdb/test_tsdb_backend.py
@@ -133,6 +133,14 @@ class SnubaTSDBTest(TestCase):
 
         assert requests.post(settings.SENTRY_SNUBA + '/tests/insert', data=data).status_code == 200
 
+        # snuba trims query windows based on first_seen/last_seen, so these need to be correct-ish
+        self.proj1group1.first_seen = self.now
+        self.proj1group1.last_seen = self.now + timedelta(seconds=14400)
+        self.proj1group1.save()
+        self.proj1group2.first_seen = self.now
+        self.proj1group2.last_seen = self.now + timedelta(seconds=14400)
+        self.proj1group2.save()
+
     def test_range_groups(self):
         dts = [self.now + timedelta(hours=i) for i in range(4)]
         assert self.db.get_range(
