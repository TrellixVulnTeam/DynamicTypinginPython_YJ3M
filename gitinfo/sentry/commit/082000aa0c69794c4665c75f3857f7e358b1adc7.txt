commit 082000aa0c69794c4665c75f3857f7e358b1adc7
Author: Leander Rodrigues <leandergrodrigues@gmail.com>
Date:   Tue Apr 21 17:01:33 2020 -0400

    fix(async-csv): Finishing touches on some async-csv bugs (#18349)
    
    
    - Add a hard limit on export sizes
    - Increase results per iteration to 10k
    - Add unique response for 200s
    - Show better error handling on download page

diff --git a/src/sentry/data_export/base.py b/src/sentry/data_export/base.py
index 98b2e2e66d..9664243181 100644
--- a/src/sentry/data_export/base.py
+++ b/src/sentry/data_export/base.py
@@ -4,7 +4,7 @@ import six
 from datetime import timedelta
 from enum import Enum
 
-SNUBA_MAX_RESULTS = 1000
+SNUBA_MAX_RESULTS = 10000
 DEFAULT_EXPIRATION = timedelta(weeks=4)
 
 
diff --git a/src/sentry/data_export/tasks.py b/src/sentry/data_export/tasks.py
index f3cd0dec5e..6e76e04424 100644
--- a/src/sentry/data_export/tasks.py
+++ b/src/sentry/data_export/tasks.py
@@ -22,7 +22,7 @@ logger = logging.getLogger(__name__)
 
 
 @instrumented_task(name="sentry.data_export.tasks.assemble_download", queue="data_export")
-def assemble_download(data_export_id, limit=None, environment_id=None):
+def assemble_download(data_export_id, limit=1000000, environment_id=None):
     # Get the ExportedData object
     try:
         logger.info("dataexport.start", extra={"data_export_id": data_export_id})
diff --git a/src/sentry/static/sentry/app/components/dataExport.tsx b/src/sentry/static/sentry/app/components/dataExport.tsx
index b4c08bb04e..5523f784a6 100644
--- a/src/sentry/static/sentry/app/components/dataExport.tsx
+++ b/src/sentry/static/sentry/app/components/dataExport.tsx
@@ -54,32 +54,38 @@ class DataExport extends React.Component<Props, State> {
     this.setState(this.initialState);
   };
 
-  startDataExport = async () => {
+  startDataExport = () => {
     const {
       api,
       organization: {slug},
       payload: {queryType, queryInfo},
     } = this.props;
-    try {
-      const {id: dataExportId} = await api.requestPromise(
-        `/organizations/${slug}/data-export/`,
-        {
-          method: 'POST',
-          data: {
-            query_type: queryType,
-            query_info: queryInfo,
-          },
-        }
-      );
-      addSuccessMessage(
-        t("Sit tight. We'll shoot you an email when your data is ready for download.")
-      );
-      this.setState({inProgress: true, dataExportId});
-    } catch (_err) {
-      addErrorMessage(
-        t("We tried our hardest, but we couldn't export your data. Give it another go.")
-      );
-    }
+
+    api
+      .requestPromise(`/organizations/${slug}/data-export/`, {
+        includeAllArgs: true,
+        method: 'POST',
+        data: {
+          query_type: queryType,
+          query_info: queryInfo,
+        },
+      })
+      .then(([data, _, response]) => {
+        const {id: dataExportId} = data;
+        addSuccessMessage(
+          response?.status === 201
+            ? t(
+                "Sit tight. We'll shoot you an email when your data is ready for download."
+              )
+            : t("It looks like we're already working on it. Sit tight, we'll email you.")
+        );
+        this.setState({inProgress: true, dataExportId});
+      })
+      .catch(_err => {
+        addErrorMessage(
+          t("We tried our hardest, but we couldn't export your data. Give it another go.")
+        );
+      });
   };
 
   render() {
diff --git a/src/sentry/static/sentry/app/views/dataExport/dataDownload.tsx b/src/sentry/static/sentry/app/views/dataExport/dataDownload.tsx
index 83ec0c1a1b..22d1816ff8 100644
--- a/src/sentry/static/sentry/app/views/dataExport/dataDownload.tsx
+++ b/src/sentry/static/sentry/app/views/dataExport/dataDownload.tsx
@@ -166,6 +166,7 @@ class DataDownload extends AsyncView<Props, State> {
     const {
       errors: {download: err},
     } = this.state;
+    const errDetail = err?.responseJSON?.detail;
     return (
       <Layout>
         <main>
@@ -174,9 +175,11 @@ class DataDownload extends AsyncView<Props, State> {
               {err.status} - {err.statusText}
             </h3>
           </Header>
-          <Body>
-            <p>{err.responseJSON.detail}</p>
-          </Body>
+          {errDetail && (
+            <Body>
+              <p>{errDetail}</p>
+            </Body>
+          )}
         </main>
       </Layout>
     );
