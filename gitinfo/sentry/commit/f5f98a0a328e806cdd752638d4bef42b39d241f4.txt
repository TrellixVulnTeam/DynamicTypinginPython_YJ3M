commit f5f98a0a328e806cdd752638d4bef42b39d241f4
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Jan 13 15:41:45 2016 -0800

    Attempt to fix encoding issue in generated config files
    
    Fixes GH-2546

diff --git a/src/sentry/runner/commands/init.py b/src/sentry/runner/commands/init.py
index 3acdce9df2..55aa2529f4 100644
--- a/src/sentry/runner/commands/init.py
+++ b/src/sentry/runner/commands/init.py
@@ -39,11 +39,11 @@ def init(ctx, directory):
     if os.path.isfile(yaml):
         click.confirm("File already exists at '%s', overwrite?" % click.format_filename(yaml), abort=True)
 
-    with click.open_file(yaml, 'wb') as fp:
+    with click.open_file(yaml, 'w') as fp:
         fp.write(yaml_contents)
 
     if os.path.isfile(py):
         click.confirm("File already exists at '%s', overwrite?" % click.format_filename(py), abort=True)
 
-    with click.open_file(py, 'wb') as fp:
+    with click.open_file(py, 'w') as fp:
         fp.write(py_contents)
diff --git a/src/sentry/runner/settings.py b/src/sentry/runner/settings.py
index 9e1b5a1575..d22b8088e8 100644
--- a/src/sentry/runner/settings.py
+++ b/src/sentry/runner/settings.py
@@ -14,7 +14,7 @@ import click
 DEFAULT_SETTINGS_MODULE = 'sentry.conf.server'
 DEFAULT_SETTINGS_CONF = 'config.yml'
 DEFAULT_SETTINGS_OVERRIDE = 'sentry.conf.py'
-PY_CONFIG_TEMPLATE = """
+PY_CONFIG_TEMPLATE = u"""
 # This file is just Python, with a touch of Django which means
 # you can inherit and tweak settings to your hearts content.
 from sentry.conf.server import *
@@ -198,7 +198,7 @@ SERVER_EMAIL = 'root@localhost'
 # route to forward to /api/hooks/mailgun/inbound/
 MAILGUN_API_KEY = ''
 """
-YAML_CONFIG_TEMPLATE = """\
+YAML_CONFIG_TEMPLATE = u"""\
 # While a lot of configuration in Sentry can be changed via the UI, for all
 # new-style config (as of 8.0) you can also declare values here in this file
 # to enforce defaults or to ensure they cannot be changed via the UI. For more
@@ -212,7 +212,7 @@ system.secret-key: '%(secret_key)s'
 
 def generate_secret_key():
     from django.utils.crypto import get_random_string
-    chars = 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)'
+    chars = u'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)'
     return get_random_string(50, chars)
 
 
