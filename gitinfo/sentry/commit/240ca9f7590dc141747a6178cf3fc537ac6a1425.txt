commit 240ca9f7590dc141747a6178cf3fc537ac6a1425
Author: James Cunningham <cunninghamjt09@gmail.com>
Date:   Mon Jun 20 17:13:00 2016 -0700

    Configure celery to stop hijacking loggers. (#3533)
    
    * Configure celery to stop hijacking loggers.
    
    * Add ability to populate strings inside structlog handler.
    
    * Remove apparently unnecessary options.
    
    * Add in a TypeError.
    
    * Add a KeyError.

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index d7a7d0b558..41caf01489 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -378,6 +378,8 @@ CELERY_DEFAULT_EXCHANGE = "default"
 CELERY_DEFAULT_EXCHANGE_TYPE = "direct"
 CELERY_DEFAULT_ROUTING_KEY = "default"
 CELERY_CREATE_MISSING_QUEUES = True
+CELERY_REDIRECT_STDOUTS = False
+CELERYD_HIJACK_ROOT_LOGGER = False
 CELERY_IMPORTS = (
     'sentry.tasks.auth',
     'sentry.tasks.auto_resolve_issues',
@@ -515,7 +517,7 @@ LOGGING = {
             'class': 'django.utils.log.NullHandler',
         },
         'console': {
-            'level': 'WARNING',
+            'level': 'INFO',
             'class': 'sentry.logging.handlers.StructLogHandler',
         },
         'sentry': {
@@ -561,6 +563,12 @@ LOGGING = {
             'handlers': ['console'],
             'propagate': False,
         },
+        'multiprocessing': {
+            'handlers': ['console'],
+        },
+        'celery': {
+            'level': 'INFO',
+        },
         'static_compiler': {
             'level': 'INFO',
         },
diff --git a/src/sentry/logging/handlers.py b/src/sentry/logging/handlers.py
index 037ab7f444..1a138b0713 100644
--- a/src/sentry/logging/handlers.py
+++ b/src/sentry/logging/handlers.py
@@ -19,6 +19,18 @@ class StructLogHandler(logging.StreamHandler):
         }
         if record.exc_info:
             kwargs['exc_info'] = record.exc_info
+
+        if '%' in record.msg and record.args:
+            try:
+                populated = record.msg % record.args
+            except (TypeError, KeyError):
+                if isinstance(record.args, dict):
+                    kwargs.update(record.args)
+                else:
+                    kwargs['args'] = record.args
+            else:
+                record.msg = populated
+
         # HACK(JTCunning): Calling structlog.log instead of the corresponding level
         # methods steps on the toes of django client loggers and their testing components.
         log = getattr(logger, logging.getLevelName(record.levelno).lower(), None)
