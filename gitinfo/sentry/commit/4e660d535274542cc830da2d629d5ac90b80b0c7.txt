commit 4e660d535274542cc830da2d629d5ac90b80b0c7
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Wed Jan 29 10:29:39 2020 -0500

    fix(discover2): Fixes for Discover2 tables with 1 column (#16674)
    
    Fixes for Discover2 tables with 1 column:
    
    - re-enable edit hover state whenever table is in edit state
    - hide the delete column button

diff --git a/src/sentry/static/sentry/app/components/gridEditable/gridHeadCell.tsx b/src/sentry/static/sentry/app/components/gridEditable/gridHeadCell.tsx
index 4cc84f0250..e2fd27c6b7 100644
--- a/src/sentry/static/sentry/app/components/gridEditable/gridHeadCell.tsx
+++ b/src/sentry/static/sentry/app/components/gridEditable/gridHeadCell.tsx
@@ -17,6 +17,7 @@ export type GridHeadCellProps<Column> = {
   isLast: boolean;
 
   isEditing: boolean;
+  isDeletable: boolean;
 
   indexColumnOrder: number;
   column: Column;
@@ -49,6 +50,7 @@ class GridHeadCell<Column extends GridColumnHeader> extends React.Component<
 > {
   static defaultProps = {
     isEditing: false,
+    isDeletable: true,
   };
 
   state = {
@@ -79,12 +81,18 @@ class GridHeadCell<Column extends GridColumnHeader> extends React.Component<
 
   renderButtonHoverDraggable() {
     const {isHovering} = this.state;
-    const {isEditing, isColumnDragging} = this.props;
+    const {isEditing, isDeletable, isColumnDragging} = this.props;
 
     if (!isEditing || !isHovering || isColumnDragging) {
       return null;
     }
 
+    const deleteButton = isDeletable ? (
+      <GridHeadCellButtonHoverButton onClick={this.deleteColumn}>
+        <InlineSvg src="icon-trash" />
+      </GridHeadCellButtonHoverButton>
+    ) : null;
+
     return (
       <React.Fragment>
         {/* Ensure that background is always at the top. The background must be
@@ -100,9 +108,7 @@ class GridHeadCell<Column extends GridColumnHeader> extends React.Component<
             <GridHeadCellButtonHoverButton onClick={this.toggleModal}>
               <InlineSvg src="icon-edit-pencil" />
             </GridHeadCellButtonHoverButton>
-            <GridHeadCellButtonHoverButton onClick={this.deleteColumn}>
-              <InlineSvg src="icon-trash" />
-            </GridHeadCellButtonHoverButton>
+            {deleteButton}
           </div>
 
           <GridHeadCellButtonHoverDraggable
diff --git a/src/sentry/static/sentry/app/components/gridEditable/index.tsx b/src/sentry/static/sentry/app/components/gridEditable/index.tsx
index 72b580172c..3a3e56600a 100644
--- a/src/sentry/static/sentry/app/components/gridEditable/index.tsx
+++ b/src/sentry/static/sentry/app/components/gridEditable/index.tsx
@@ -444,7 +444,6 @@ class GridEditable<
 
     // Ensure that the last column cannot be removed
     const numColumn = columnOrder.length;
-    const enableEdit = isEditing && numColumn > 1;
 
     const prependColumns = grid.renderPrependColumns
       ? grid.renderPrependColumns(true)
@@ -463,7 +462,8 @@ class GridEditable<
             isLast={columnOrder.length - 1 === i}
             key={`${i}.${column.key}`}
             isColumnDragging={this.props.isColumnDragging}
-            isEditing={enableEdit}
+            isEditing={isEditing}
+            isDeletable={numColumn > 1}
             indexColumnOrder={i}
             column={column}
             gridHeadCellButtonProps={this.props.gridHeadCellButtonProps || {}}
