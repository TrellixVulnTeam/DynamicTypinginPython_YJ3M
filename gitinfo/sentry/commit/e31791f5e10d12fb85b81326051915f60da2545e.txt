commit e31791f5e10d12fb85b81326051915f60da2545e
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Dec 22 15:56:52 2015 -0600

    Ensure refresh_token is maintained in OAuth providers

diff --git a/src/sentry/auth/helper.py b/src/sentry/auth/helper.py
index 9bcbf26975..82a9f1a492 100644
--- a/src/sentry/auth/helper.py
+++ b/src/sentry/auth/helper.py
@@ -209,7 +209,10 @@ class AuthHelper(object):
             now = timezone.now()
             auth_identity.update(
                 user=user,
-                data=identity.get('data', {}),
+                data=self.update_identity(
+                    new_data=identity.get('data', {}),
+                    current_data=auth_identity.data,
+                ),
                 last_verified=now,
                 last_synced=now,
             )
@@ -393,7 +396,10 @@ class AuthHelper(object):
         # TODO(dcramer): this is very similar to attach
         now = timezone.now()
         auth_identity.update(
-            data=identity.get('data', {}),
+            data=self.provider.update_identity(
+                new_data=identity.get('data', {}),
+                current_data=auth_identity.data,
+            ),
             last_verified=now,
             last_synced=now,
         )
diff --git a/src/sentry/auth/provider.py b/src/sentry/auth/provider.py
index b2b9f3cd57..f36497afcf 100644
--- a/src/sentry/auth/provider.py
+++ b/src/sentry/auth/provider.py
@@ -63,6 +63,17 @@ class Provider(object):
         """
         raise NotImplementedError
 
+    def update_identity(self, new_data, current_data):
+        """
+        When re-authenticating with a provider, the identity data may need to
+        be mutated based on the previous state. An example of this is Google,
+        which will not return a `refresh_token` unless the user explicitly
+        goes through an approval process.
+
+        Return the new state which should be used for an identity.
+        """
+        return new_data
+
     def refresh_identity(self, auth_identity):
         """
         Updates the AuthIdentity with any changes from upstream. The primary
diff --git a/src/sentry/auth/providers/oauth2.py b/src/sentry/auth/providers/oauth2.py
index 02f73944be..8a1266ba8c 100644
--- a/src/sentry/auth/providers/oauth2.py
+++ b/src/sentry/auth/providers/oauth2.py
@@ -176,6 +176,13 @@ class OAuth2Provider(Provider):
         # }
         raise NotImplementedError
 
+    def update_identity(self, new_data, current_data):
+        # we want to maintain things like refresh_token that might not
+        # exist on a refreshed state
+        if 'refresh_token' in current_data:
+            new_data.setdefault('refresh_token', current_data['refresh_token'])
+        return new_data
+
     def refresh_identity(self, auth_identity):
         refresh_token = auth_identity.data.get('refresh_token')
 
