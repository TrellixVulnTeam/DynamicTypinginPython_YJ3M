commit 9864622d4c96add98fa03d846df9397c8ff3ffea
Author: Eric Feng <ehfeng@users.noreply.github.com>
Date:   Mon Aug 14 16:08:22 2017 -0700

    adding tests for all our the sample event platfroms (#5878)

diff --git a/tests/sentry/api/endpoints/test_project_create_sample.py b/tests/sentry/api/endpoints/test_project_create_sample.py
index 896ffbf160..89581e77fd 100644
--- a/tests/sentry/api/endpoints/test_project_create_sample.py
+++ b/tests/sentry/api/endpoints/test_project_create_sample.py
@@ -7,10 +7,12 @@ from sentry.testutils import APITestCase
 
 
 class ProjectCreateSampleTest(APITestCase):
-    def test_simple(self):
+    def setUp(self):
         self.login_as(user=self.user)
-        team = self.create_team()
-        project = self.create_project(team=team, name='foo')
+        self.team = self.create_team()
+
+    def test_simple(self):
+        project = self.create_project(team=self.team, name='foo')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
@@ -25,9 +27,112 @@ class ProjectCreateSampleTest(APITestCase):
         assert 'groupID' in json.loads(response.content)
 
     def test_project_platform(self):
-        self.login_as(user=self.user)
-        team = self.create_team()
-        project = self.create_project(team=team, name='foo', platform='javascript-react')
+        project = self.create_project(team=self.team, name='foo', platform='javascript-react')
+
+        url = reverse(
+            'sentry-api-0-project-create-sample',
+            kwargs={
+                'organization_slug': project.organization.slug,
+                'project_slug': project.slug,
+            }
+        )
+        response = self.client.post(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert 'groupID' in json.loads(response.content)
+
+    def test_cocoa(self):
+        project = self.create_project(team=self.team, name='foo', platform='cocoa')
+
+        url = reverse(
+            'sentry-api-0-project-create-sample',
+            kwargs={
+                'organization_slug': project.organization.slug,
+                'project_slug': project.slug,
+            }
+        )
+        response = self.client.post(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert 'groupID' in json.loads(response.content)
+
+    def test_java(self):
+        project = self.create_project(team=self.team, name='foo', platform='java')
+
+        url = reverse(
+            'sentry-api-0-project-create-sample',
+            kwargs={
+                'organization_slug': project.organization.slug,
+                'project_slug': project.slug,
+            }
+        )
+        response = self.client.post(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert 'groupID' in json.loads(response.content)
+
+    def test_javascript(self):
+        project = self.create_project(team=self.team, name='foo', platform='javascript')
+
+        url = reverse(
+            'sentry-api-0-project-create-sample',
+            kwargs={
+                'organization_slug': project.organization.slug,
+                'project_slug': project.slug,
+            }
+        )
+        response = self.client.post(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert 'groupID' in json.loads(response.content)
+
+    def test_php(self):
+        project = self.create_project(team=self.team, name='foo', platform='php')
+
+        url = reverse(
+            'sentry-api-0-project-create-sample',
+            kwargs={
+                'organization_slug': project.organization.slug,
+                'project_slug': project.slug,
+            }
+        )
+        response = self.client.post(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert 'groupID' in json.loads(response.content)
+
+    def test_python(self):
+        project = self.create_project(team=self.team, name='foo', platform='python')
+
+        url = reverse(
+            'sentry-api-0-project-create-sample',
+            kwargs={
+                'organization_slug': project.organization.slug,
+                'project_slug': project.slug,
+            }
+        )
+        response = self.client.post(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert 'groupID' in json.loads(response.content)
+
+    def test_reactnative(self):
+        project = self.create_project(team=self.team, name='foo', platform='react-native')
+
+        url = reverse(
+            'sentry-api-0-project-create-sample',
+            kwargs={
+                'organization_slug': project.organization.slug,
+                'project_slug': project.slug,
+            }
+        )
+        response = self.client.post(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert 'groupID' in json.loads(response.content)
+
+    def test_ruby(self):
+        project = self.create_project(team=self.team, name='foo', platform='ruby')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
