commit a316cc242130a32473b608529ca7f1d216cc40bd
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Sep 11 12:19:48 2018 -0700

    fix(analytics): Scrub potentially sensitive data (#9699)
    
    Scrub any string that might appear in a condition on the off chance it contains any sensitive/customer data

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/analytics.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/analytics.jsx
index ef8f9880d6..3c73243506 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/analytics.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/analytics.jsx
@@ -1,11 +1,18 @@
 import analytics from 'app/utils/analytics';
 
+/**
+ * Takes an organization and query and tracks in Redash as discover.query.
+ * Scrubs strings in conditions in case they contain sensitive customer data.
+ *
+ * @param {Object} organization Current organization
+ * @param {Object} query Query that is sent to Snuba
+ * @returns {Void}
+ */
 export function trackQuery(organization, query) {
   const data = {
     org_id: parseInt(organization.id, 10),
     projects: query.projects,
     fields: query.fields,
-    conditions: query.conditions,
     aggregations: query.aggregations,
     orderby: query.orderby,
   };
@@ -14,5 +21,13 @@ export function trackQuery(organization, query) {
     data.limit = query.limit;
   }
 
+  data.conditions = query.conditions.map(condition => {
+    return [
+      condition[0],
+      condition[1],
+      typeof condition[2] === 'string' ? '[REDACTED]' : condition[2],
+    ];
+  });
+
   analytics('discover.query', data);
 }
diff --git a/tests/js/spec/views/organizationDiscover/analytics.spec.jsx b/tests/js/spec/views/organizationDiscover/analytics.spec.jsx
new file mode 100644
index 0000000000..dc1bde32b1
--- /dev/null
+++ b/tests/js/spec/views/organizationDiscover/analytics.spec.jsx
@@ -0,0 +1,27 @@
+import {trackQuery} from 'app/views/organizationDiscover/analytics';
+import analytics from 'app/utils/analytics';
+
+jest.mock('app/utils/analytics', () => jest.fn(fn => fn));
+
+describe('Analytics', function() {
+  beforeEach(function() {
+    const query = {
+      fields: ['col1'],
+      projects: [1],
+      conditions: [['customer', '=', 'test@test.com'], ['some_count', '=', 5]],
+    };
+
+    trackQuery(TestStubs.Organization(), query);
+  });
+
+  it('scrubs only conditions with strings', function() {
+    const conditions = [['customer', '=', '[REDACTED]'], ['some_count', '=', 5]];
+
+    expect(analytics).toHaveBeenCalledWith(
+      'discover.query',
+      expect.objectContaining({
+        conditions,
+      })
+    );
+  });
+});
