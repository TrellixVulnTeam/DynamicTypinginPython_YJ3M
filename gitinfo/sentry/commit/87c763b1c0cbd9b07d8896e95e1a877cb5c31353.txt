commit 87c763b1c0cbd9b07d8896e95e1a877cb5c31353
Author: David Cramer <dcramer@gmail.com>
Date:   Thu May 26 15:34:21 2011 -0700

    Pulled tests out of Sentry namespace (fixes #116)

diff --git a/CHANGES b/CHANGES
index d376f4b858..d32f651ee5 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,3 +1,7 @@
+1.8.5
+
+* Pulled test suite out of the Sentry namespace to avoid conflicts in projects.
+
 1.8.4.2
 
 * Added missing invalid_message_id template.
diff --git a/example_project/urls.py b/example_project/urls.py
index bfd8c55500..7e85f284ec 100644
--- a/example_project/urls.py
+++ b/example_project/urls.py
@@ -1,5 +1,5 @@
 from django.conf.urls.defaults import *
 
 urlpatterns = patterns('',
-    url(r'^', include('sentry.tests.urls')),
+    url(r'^', include('sentry.web.urls')),
 )
diff --git a/runtests.py b/runtests.py
index 8280635638..dd37677516 100644
--- a/runtests.py
+++ b/runtests.py
@@ -42,8 +42,7 @@ if not settings.configured:
             'sentry.plugins.sentry_urls',
             'sentry.plugins.sentry_redmine',
 
-            # No fucking idea why I have to do this
-            'sentry.tests',
+            'tests',
         ],
         ROOT_URLCONF='',
         DEBUG=False,
@@ -74,7 +73,7 @@ def runtests(*test_args, **kwargs):
         patch_for_test_db_setup()
 
     if not test_args:
-        test_args = ['sentry']
+        test_args = ['tests']
     parent = dirname(abspath(__file__))
     sys.path.insert(0, parent)
     failures = run_tests(test_args, verbosity=kwargs.get('verbosity', 1), interactive=kwargs.get('interactive', False), failfast=kwargs.get('failfast'))
diff --git a/sentry/plugins/sentry_redmine/tests/__init__.py b/sentry/plugins/sentry_redmine/tests/__init__.py
index 0f8067975f..40e7ba8d64 100644
--- a/sentry/plugins/sentry_redmine/tests/__init__.py
+++ b/sentry/plugins/sentry_redmine/tests/__init__.py
@@ -20,7 +20,7 @@ from sentry.plugins.sentry_redmine.models import CreateRedmineIssue, RedmineIssu
 
 class CreateIssueTest(TestCase):
     fixtures = ['sentry/plugins/sentry_redmine/tests/fixtures/regression.json']
-    urls = 'sentry.urls'
+    urls = 'sentry.web.urls'
 
     def setUp(self):
         self.user = User(username="admin", email="admin@localhost", is_staff=True, is_superuser=True)
diff --git a/sentry/tests/__init__.py b/sentry/tests/__init__.py
deleted file mode 100644
index 37977bdb8b..0000000000
--- a/sentry/tests/__init__.py
+++ /dev/null
@@ -1,2 +0,0 @@
-from sentry.tests.tests import *
-from sentry.tests.models import *
\ No newline at end of file
diff --git a/sentry/tests/urls.py b/sentry/tests/urls.py
deleted file mode 100644
index 8348491f02..0000000000
--- a/sentry/tests/urls.py
+++ /dev/null
@@ -1,14 +0,0 @@
-from django.conf.urls.defaults import *
-from django.contrib import admin
-
-admin.autodiscover()
-
-urlpatterns = patterns('',
-    url(r'^admin/', include(admin.site.urls)),
-    url(r'^trigger-500$', 'sentry.tests.views.raise_exc', name='sentry-raise-exc'),
-    url(r'^trigger-500-decorated$', 'sentry.tests.views.decorated_raise_exc', name='sentry-raise-exc-decor'),
-    url(r'^trigger-500-django$', 'sentry.tests.views.django_exc', name='sentry-django-exc'),
-    url(r'^trigger-500-template$', 'sentry.tests.views.template_exc', name='sentry-template-exc'),
-    url(r'^trigger-500-log-request$', 'sentry.tests.views.logging_request_exc', name='sentry-log-request-exc'),
-    url(r'', include('sentry.web.urls')),
-)
\ No newline at end of file
diff --git a/setup.py b/setup.py
index fb1deedb7b..c227c01714 100644
--- a/setup.py
+++ b/setup.py
@@ -1,11 +1,11 @@
 #!/usr/bin/env python
 
 try:
-    from setuptools import setup, find_packages
+    from setuptools import setup, find_packages, Command
 except ImportError:
     from ez_setup import use_setuptools
     use_setuptools()
-    from setuptools import setup, find_packages
+    from setuptools import setup, find_packages, Command
 
 tests_require = [
     'Django>=1.2,<1.4',
@@ -39,7 +39,7 @@ except ImportError:
 
 setup(
     name='django-sentry',
-    version='1.8.4.2',
+    version='1.8.5',
     author='David Cramer',
     author_email='dcramer@gmail.com',
     url='http://github.com/dcramer/django-sentry',
diff --git a/tests/__init__.py b/tests/__init__.py
new file mode 100644
index 0000000000..e72ffef189
--- /dev/null
+++ b/tests/__init__.py
@@ -0,0 +1 @@
+VERSION = 1.0
\ No newline at end of file
diff --git a/sentry/tests/fixtures/bad_data.json b/tests/fixtures/bad_data.json
similarity index 100%
rename from sentry/tests/fixtures/bad_data.json
rename to tests/fixtures/bad_data.json
diff --git a/sentry/tests/fixtures/cleanup.json b/tests/fixtures/cleanup.json
similarity index 100%
rename from sentry/tests/fixtures/cleanup.json
rename to tests/fixtures/cleanup.json
diff --git a/sentry/tests/fixtures/feeds.json b/tests/fixtures/feeds.json
similarity index 100%
rename from sentry/tests/fixtures/feeds.json
rename to tests/fixtures/feeds.json
diff --git a/sentry/tests/fixtures/mail.json b/tests/fixtures/mail.json
similarity index 100%
rename from sentry/tests/fixtures/mail.json
rename to tests/fixtures/mail.json
diff --git a/sentry/tests/fixtures/views.json b/tests/fixtures/views.json
similarity index 100%
rename from sentry/tests/fixtures/views.json
rename to tests/fixtures/views.json
diff --git a/sentry/tests/middleware.py b/tests/middleware.py
similarity index 100%
rename from sentry/tests/middleware.py
rename to tests/middleware.py
diff --git a/sentry/tests/models.py b/tests/models.py
similarity index 100%
rename from sentry/tests/models.py
rename to tests/models.py
diff --git a/sentry/tests/templates/404.html b/tests/templates/404.html
similarity index 100%
rename from sentry/tests/templates/404.html
rename to tests/templates/404.html
diff --git a/sentry/tests/templates/sentry-tests/error.html b/tests/templates/sentry-tests/error.html
similarity index 100%
rename from sentry/tests/templates/sentry-tests/error.html
rename to tests/templates/sentry-tests/error.html
diff --git a/sentry/tests/tests.py b/tests/tests.py
similarity index 95%
rename from sentry/tests/tests.py
rename to tests/tests.py
index abb6f8f74d..77628136db 100644
--- a/sentry/tests/tests.py
+++ b/tests/tests.py
@@ -30,9 +30,9 @@ from sentry.conf import settings
 from sentry.models import Message, GroupedMessage
 from sentry.utils import json
 from sentry.utils import transform, get_signature, get_auth_header
-from sentry.tests.utils import TestServerThread, conditional_on_module
 
 from models import TestModel, DuplicateKeyModel
+from utils import TestServerThread, conditional_on_module
 
 # class NullHandler(logging.Handler):
 #     def emit(self, record):
@@ -54,7 +54,7 @@ logger.setLevel(logging.DEBUG)
 class BaseTestCase(TestCase):
     ## Helper methods for posting
 
-    urls = 'sentry.tests.urls'
+    urls = 'tests.urls'
 
     def _postWithKey(self, data):
         resp = self.client.post(reverse('sentry-store'), {
@@ -411,11 +411,11 @@ class SentryTestCase(BaseTestCase):
         self.assertEquals(last.class_name, 'Exception')
         self.assertEquals(last.level, logging.ERROR)
         self.assertEquals(last.message, 'view exception')
-        self.assertEquals(last.view, 'sentry.tests.views.raise_exc')
+        self.assertEquals(last.view, 'tests.views.raise_exc')
 
     def testRequestMiddlwareException(self):
         orig = list(django_settings.MIDDLEWARE_CLASSES)
-        django_settings.MIDDLEWARE_CLASSES = orig + ['sentry.tests.middleware.BrokenRequestMiddleware',]
+        django_settings.MIDDLEWARE_CLASSES = orig + ['tests.middleware.BrokenRequestMiddleware',]
         
         self.assertRaises(ImportError, self.client.get, reverse('sentry'))
         self.assertEquals(Message.objects.count(), 1)
@@ -425,14 +425,14 @@ class SentryTestCase(BaseTestCase):
         self.assertEquals(last.class_name, 'ImportError')
         self.assertEquals(last.level, logging.ERROR)
         self.assertEquals(last.message, 'request')
-        self.assertEquals(last.view, 'sentry.tests.middleware.process_request')
+        self.assertEquals(last.view, 'tests.middleware.process_request')
         
         django_settings.MIDDLEWARE_CLASSES = orig
 
     # XXX: Django doesn't handle response middleware exceptions (yet)
     # def testResponseMiddlwareException(self):
     #     orig = list(django_settings.MIDDLEWARE_CLASSES)
-    #     django_settings.MIDDLEWARE_CLASSES = orig + ['sentry.tests.middleware.BrokenResponseMiddleware',]
+    #     django_settings.MIDDLEWARE_CLASSES = orig + ['tests.middleware.BrokenResponseMiddleware',]
     #     
     #     self.assertRaises(ImportError, self.client.get, reverse('sentry'))
     #     self.assertEquals(Message.objects.count(), 1)
@@ -442,13 +442,13 @@ class SentryTestCase(BaseTestCase):
     #     self.assertEquals(last.class_name, 'ImportError')
     #     self.assertEquals(last.level, logging.ERROR)
     #     self.assertEquals(last.message, 'response')
-    #     self.assertEquals(last.view, 'sentry.tests.middleware.process_response')
+    #     self.assertEquals(last.view, 'tests.middleware.process_response')
     #     
     #     django_settings.MIDDLEWARE_CLASSES = orig
 
     def testViewMiddlewareException(self):
         orig = list(django_settings.MIDDLEWARE_CLASSES)
-        django_settings.MIDDLEWARE_CLASSES = orig + ['sentry.tests.middleware.BrokenViewMiddleware',]
+        django_settings.MIDDLEWARE_CLASSES = orig + ['tests.middleware.BrokenViewMiddleware',]
         
         self.assertRaises(ImportError, self.client.get, reverse('sentry'))
         self.assertEquals(Message.objects.count(), 1)
@@ -458,7 +458,7 @@ class SentryTestCase(BaseTestCase):
         self.assertEquals(last.class_name, 'ImportError')
         self.assertEquals(last.level, logging.ERROR)
         self.assertEquals(last.message, 'view')
-        self.assertEquals(last.view, 'sentry.tests.middleware.process_view')
+        self.assertEquals(last.view, 'tests.middleware.process_view')
         
         django_settings.MIDDLEWARE_CLASSES = orig
 
@@ -479,7 +479,7 @@ class SentryTestCase(BaseTestCase):
         self.assertEquals(last.message, 'view exception')
         self.assertEquals(last.server_name, 'foo')
         self.assertEquals(last.site, 'bar')
-        self.assertEquals(last.view, 'sentry.tests.views.raise_exc')
+        self.assertEquals(last.view, 'tests.views.raise_exc')
         
         settings.NAME = orig_name
         settings.SITE = orig_site
@@ -490,28 +490,28 @@ class SentryTestCase(BaseTestCase):
         
         last = Message.objects.get()
         
-        self.assertEquals(last.view, 'sentry.tests.tests.testExclusionViewPath')
+        self.assertEquals(last.view, 'tests.tests.testExclusionViewPath')
 
     def testBestGuessView(self):
-        settings.EXCLUDE_PATHS = ['sentry.tests.tests']
+        settings.EXCLUDE_PATHS = ['tests.tests']
         
         try: Message.objects.get(pk=1341324)
         except: get_client().create_from_exception()
         
         last = Message.objects.get()
         
-        self.assertEquals(last.view, 'sentry.tests.tests.testBestGuessView')
+        self.assertEquals(last.view, 'tests.tests.testBestGuessView')
         
         settings.EXCLUDE_PATHS = []
 
     def testExcludeModulesView(self):
-        settings.EXCLUDE_PATHS = ['sentry.tests.views.decorated_raise_exc']
+        settings.EXCLUDE_PATHS = ['tests.views.decorated_raise_exc']
         
         self.assertRaises(Exception, self.client.get, reverse('sentry-raise-exc-decor'))
         
         last = Message.objects.get()
         
-        self.assertEquals(last.view, 'sentry.tests.views.raise_exc')
+        self.assertEquals(last.view, 'tests.views.raise_exc')
         
         settings.EXCLUDE_PATHS = []
 
@@ -546,7 +546,7 @@ class SentryTestCase(BaseTestCase):
         
         last = Message.objects.get()
         
-        self.assertEquals(last.view, 'sentry.tests.views.logging_request_exc')
+        self.assertEquals(last.view, 'tests.views.logging_request_exc')
         self.assertEquals(last.data['META']['REMOTE_ADDR'], '127.0.0.1')
 
     def testSampleDataInGroup(self):
@@ -555,7 +555,7 @@ class SentryTestCase(BaseTestCase):
         
         last = GroupedMessage.objects.get()
         
-        self.assertEquals(last.view, 'sentry.tests.views.logging_request_exc')
+        self.assertEquals(last.view, 'tests.views.logging_request_exc')
         self.assertEquals(last.data['url'], 'http://testserver' + reverse('sentry-log-request-exc'))
         
     def testCreateFromRecordNoneExcInfo(self):
@@ -621,13 +621,21 @@ class SentryTestCase(BaseTestCase):
 
         self.assertEquals(Message.objects.count(), 1)
         self.assertEquals(GroupedMessage.objects.count(), 1)
+
         last = Message.objects.get()
+        self.assertTrue('versions' in last.data['__sentry__'], last.data['__sentry__'])
+        self.assertTrue('sentry' in last.data['__sentry__']['versions'], last.data['__sentry__'])
         self.assertEquals(last.data['__sentry__']['versions']['sentry'], sentry.VERSION)
-        self.assertEquals(last.data['__sentry__']['version'], sentry.VERSION)
-        self.assertEquals(last.data['__sentry__']['module'], 'sentry')
+        self.assertTrue('module' in last.data['__sentry__'], last.data['__sentry__'])
+        self.assertEquals(last.data['__sentry__']['module'], 'tests')
+        self.assertTrue('version' in last.data['__sentry__'], last.data['__sentry__'])
+        self.assertEquals(last.data['__sentry__']['version'], '1.0')
+
         last = GroupedMessage.objects.get()
-        self.assertEquals(last.data['version'], sentry.VERSION)
-        self.assertEquals(last.data['module'], 'sentry')
+        self.assertTrue('module' in last.data)
+        self.assertEquals(last.data['module'], 'tests')
+        self.assertTrue('version' in last.data)
+        self.assertEquals(last.data['version'], '1.0')
 
     def test404Middleware(self):
         existing = django_settings.MIDDLEWARE_CLASSES
@@ -779,7 +787,7 @@ class SentryTestCase(BaseTestCase):
         self.assertEquals(last.data['tuple'][-1], '(450 more elements)')
 
 class SentryViewsTest(BaseTestCase):
-    fixtures = ['sentry/tests/fixtures/views.json']
+    fixtures = ['tests/fixtures/views.json']
     
     def setUp(self):
         settings.DATABASE_USING = None
@@ -999,10 +1007,10 @@ class SentryRemoteTest(BaseTestCase):
     #     
     #     last = Message.objects.get()
     #     
-    #     self.assertEquals(last.view, 'sentry.tests.tests.testFunctionException')
+    #     self.assertEquals(last.view, 'tests.tests.testFunctionException')
 
 class SentryRemoteServerTest(TransactionTestCase):
-    urls = 'sentry.tests.urls'
+    urls = 'tests.urls'
     
     def setUp(self):
         self.server_thread = None
@@ -1081,7 +1089,7 @@ class SentryRemoteServerTest(TransactionTestCase):
         self.assertEquals(group.last_seen, timestamp)
 
 class SentryFeedsTest(BaseTestCase):
-    fixtures = ['sentry/tests/fixtures/feeds.json']
+    fixtures = ['tests/fixtures/feeds.json']
     
     def testMessageFeed(self):
         response = self.client.get(reverse('sentry-feed-messages'))
@@ -1102,7 +1110,7 @@ class SentryFeedsTest(BaseTestCase):
         self.assertTrue('<title>(1) TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType</title>' in response.content)
 
 class SentryMailTest(BaseTestCase):
-    fixtures = ['sentry/tests/fixtures/mail.json']
+    fixtures = ['tests/fixtures/mail.json']
     
     def setUp(self):
         settings.ADMINS = ('%s@localhost' % getpass.getuser(),)
@@ -1296,7 +1304,7 @@ class SentryClientTest(BaseTestCase):
     #     settings.CLIENT = 'sentry.client.base.SentryClient'
 
 class SentryCommandTest(BaseTestCase):
-    fixtures = ['sentry/tests/fixtures/cleanup.json']
+    fixtures = ['tests/fixtures/cleanup.json']
     
     def test_cleanup(self):
         from sentry.scripts.runner import cleanup
diff --git a/tests/urls.py b/tests/urls.py
new file mode 100644
index 0000000000..148e585026
--- /dev/null
+++ b/tests/urls.py
@@ -0,0 +1,14 @@
+from django.conf.urls.defaults import *
+from django.contrib import admin
+
+admin.autodiscover()
+
+urlpatterns = patterns('',
+    url(r'^admin/', include(admin.site.urls)),
+    url(r'^trigger-500$', 'tests.views.raise_exc', name='sentry-raise-exc'),
+    url(r'^trigger-500-decorated$', 'tests.views.decorated_raise_exc', name='sentry-raise-exc-decor'),
+    url(r'^trigger-500-django$', 'tests.views.django_exc', name='sentry-django-exc'),
+    url(r'^trigger-500-template$', 'tests.views.template_exc', name='sentry-template-exc'),
+    url(r'^trigger-500-log-request$', 'tests.views.logging_request_exc', name='sentry-log-request-exc'),
+    url(r'', include('sentry.web.urls')),
+)
\ No newline at end of file
diff --git a/sentry/tests/utils.py b/tests/utils.py
similarity index 100%
rename from sentry/tests/utils.py
rename to tests/utils.py
diff --git a/sentry/tests/views.py b/tests/views.py
similarity index 100%
rename from sentry/tests/views.py
rename to tests/views.py
