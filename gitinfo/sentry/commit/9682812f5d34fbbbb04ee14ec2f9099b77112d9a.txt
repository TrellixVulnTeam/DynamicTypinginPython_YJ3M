commit 9682812f5d34fbbbb04ee14ec2f9099b77112d9a
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Fri Apr 17 11:25:11 2020 -0700

    feat(alerts): Disable Add alert button from members (#18327)

diff --git a/src/sentry/static/sentry/app/views/alerts/list/index.tsx b/src/sentry/static/sentry/app/views/alerts/list/index.tsx
index 7bc7e84585..07e95374ee 100644
--- a/src/sentry/static/sentry/app/views/alerts/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/list/index.tsx
@@ -25,6 +25,7 @@ import Pagination from 'app/components/pagination';
 import Projects from 'app/utils/projects';
 import space from 'app/styles/space';
 import withOrganization from 'app/utils/withOrganization';
+import Access from 'app/components/acl/access';
 
 import {Incident} from '../types';
 import {TableLayout, TitleAndSparkLine} from './styles';
@@ -229,7 +230,7 @@ class IncidentsListContainer extends React.Component<Props> {
   };
 
   render() {
-    const {params, location} = this.props;
+    const {params, location, organization} = this.props;
     const {pathname, query} = location;
     const {orgId} = params;
 
@@ -249,15 +250,25 @@ class IncidentsListContainer extends React.Component<Props> {
             </StyledPageHeading>
 
             <Actions>
-              <Button
-                onClick={this.handleAddAlertRule}
-                priority="primary"
-                href="#"
-                size="small"
-                icon={<IconAdd circle size="xs" />}
-              >
-                {t('Add Alert Rule')}
-              </Button>
+              <Access organization={organization} access={['project:write']}>
+                {({hasAccess}) => (
+                  <Button
+                    disabled={!hasAccess}
+                    title={
+                      !hasAccess
+                        ? t('You do not have permission to add alert rules.')
+                        : undefined
+                    }
+                    onClick={this.handleAddAlertRule}
+                    priority="primary"
+                    href="#"
+                    size="small"
+                    icon={<IconAdd circle size="xs" />}
+                  >
+                    {t('Add Alert Rule')}
+                  </Button>
+                )}
+              </Access>
 
               <Button
                 onClick={this.handleNavigateToSettings}
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/settings.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/settings.jsx
index b055a5e181..acb80a90e8 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/settings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/settings.jsx
@@ -14,7 +14,6 @@ import PermissionAlert from 'app/views/settings/project/permissionAlert';
 import PluginList from 'app/components/pluginList';
 import SentryTypes from 'app/sentryTypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import Tooltip from 'app/components/tooltip';
 import routeTitleGen from 'app/utils/routeTitle';
 
 class ProjectAlertSettings extends AsyncView {
@@ -85,20 +84,20 @@ class ProjectAlertSettings extends AsyncView {
         <SettingsPageHeader
           title={t('Alerts Settings')}
           action={
-            <Tooltip
-              disabled={canEditRule}
-              title={t('You do not have permission to edit alert rules.')}
+            <Button
+              to={`${basePath}new/`}
+              disabled={!canEditRule}
+              title={
+                !canEditRule
+                  ? t('You do not have permission to edit alert rules.')
+                  : undefined
+              }
+              priority="primary"
+              size="small"
+              icon={<IconAdd size="xs" circle />}
             >
-              <Button
-                to={`${basePath}new/`}
-                disabled={!canEditRule}
-                priority="primary"
-                size="small"
-                icon={<IconAdd size="xs" circle />}
-              >
-                {t('New Alert Rule')}
-              </Button>
-            </Tooltip>
+              {t('New Alert Rule')}
+            </Button>
           }
         />
         <PermissionAlert />
diff --git a/tests/js/spec/views/alerts/list/index.spec.jsx b/tests/js/spec/views/alerts/list/index.spec.jsx
index 46dd17813f..6c5529c1eb 100644
--- a/tests/js/spec/views/alerts/list/index.spec.jsx
+++ b/tests/js/spec/views/alerts/list/index.spec.jsx
@@ -5,7 +5,7 @@ import {initializeOrg} from 'sentry-test/initializeOrg';
 import IncidentsList from 'app/views/alerts/list';
 
 describe('IncidentsList', function() {
-  const {routerContext} = initializeOrg();
+  const {routerContext, organization} = initializeOrg();
   let mock;
   let projectMock;
   let wrapper;
@@ -15,7 +15,7 @@ describe('IncidentsList', function() {
   const createWrapper = async props => {
     wrapper = mountWithTheme(
       <IncidentsList
-        params={{orgId: 'org-slug'}}
+        params={{orgId: organization.slug}}
         location={{query: {}, search: ''}}
         {...props}
       />,
@@ -183,4 +183,23 @@ describe('IncidentsList', function() {
       expect.objectContaining({query: expect.objectContaining({status: 'all'})})
     );
   });
+
+  it('disables the new alert button for members', async function() {
+    const noAccessOrg = {
+      ...organization,
+      access: [],
+    };
+
+    wrapper = await createWrapper({organization: noAccessOrg});
+
+    const addButton = wrapper.find('button[aria-label="Add Alert Rule"]');
+    expect(addButton.props()['aria-disabled']).toBe(true);
+
+    // Enabled with access
+    wrapper = await createWrapper();
+
+    // NOTE: A link when not disabled
+    const addLink = wrapper.find('a[aria-label="Add Alert Rule"]');
+    expect(addLink.props()['aria-disabled']).toBe(false);
+  });
 });
