commit 5ce1f6cfd18c54937103b55b27d39781f120204b
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Aug 19 16:24:13 2015 -0700

    Add lastSeen to group.seenBy

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index f88ba77a57..6b3163fa37 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -59,13 +59,10 @@ class GroupDetailsEndpoint(GroupEndpoint):
         return activity[:num]
 
     def _get_seen_by(self, request, group):
-        seen_by = sorted([
-            (gs.user, gs.last_seen)
-            for gs in GroupSeen.objects.filter(
-                group=group
-            ).select_related('user')
-        ], key=lambda ls: ls[1], reverse=True)
-        return [s[0] for s in seen_by]
+        seen_by = list(GroupSeen.objects.filter(
+            group=group
+        ).select_related('user').order_by('-last_seen'))
+        return serialize(seen_by, request.user)
 
     def _get_actions(self, request, group):
         project = group.project
@@ -116,7 +113,7 @@ class GroupDetailsEndpoint(GroupEndpoint):
             try:
                 first_release = GroupTagValue.objects.filter(
                     group=group,
-                    key='sentry:release',
+                    key__in=('sentry:release', 'release'),
                 ).order_by('first_seen')[0]
             except IndexError:
                 first_release = None
@@ -130,7 +127,7 @@ class GroupDetailsEndpoint(GroupEndpoint):
             try:
                 last_release = GroupTagValue.objects.filter(
                     group=group,
-                    key='sentry:release',
+                    key__in=('sentry:release', 'release'),
                 ).order_by('-last_seen')[0]
             except IndexError:
                 last_release = None
@@ -164,7 +161,7 @@ class GroupDetailsEndpoint(GroupEndpoint):
             'firstRelease': first_release,
             'lastRelease': last_release,
             'activity': serialize(activity, request.user),
-            'seenBy': serialize(seen_by, request.user),
+            'seenBy': seen_by,
             'pluginActions': action_list,
             'userReportCount': UserReport.objects.filter(group=group).count(),
             'stats': {
diff --git a/src/sentry/api/serializers/models/groupseen.py b/src/sentry/api/serializers/models/groupseen.py
new file mode 100644
index 0000000000..bc17327348
--- /dev/null
+++ b/src/sentry/api/serializers/models/groupseen.py
@@ -0,0 +1,26 @@
+from __future__ import absolute_import
+
+from sentry.api.serializers import Serializer, register, serialize
+from sentry.models import GroupSeen
+
+
+@register(GroupSeen)
+class GroupSeenSerializer(Serializer):
+    def get_attrs(self, item_list, user):
+        user_list = [i.user for i in item_list]
+        user_map = {
+            u: d
+            for u, d in zip(user_list, serialize(user_list, user))
+        }
+
+        result = {}
+        for item in item_list:
+            result[item] = {
+                'user': user_map[item.user],
+            }
+        return result
+
+    def serialize(self, obj, attrs, user):
+        data = attrs['user']
+        data['lastSeen'] = obj.last_seen
+        return data
