commit ecea22d8f9ced86490838282a19963d3570e66af
Author: Mark Story <mark@sentry.io>
Date:   Thu Jun 11 14:11:05 2020 -0400

    feat(perf-views) Add metrics for new interactions (#19288)
    
    Add new analytics events for interactions in discover and performance
    views.
    
    Refs getsentry/reload#170

diff --git a/src/sentry/static/sentry/app/views/eventsV2/results.tsx b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
index 25215c7128..2a120b968c 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/results.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
@@ -135,6 +135,12 @@ class Results extends React.Component<Props, State> {
   }
 
   handleChangeShowTags = () => {
+    const {organization} = this.props;
+    trackAnalyticsEvent({
+      eventKey: 'discover_v2.results.toggle_tag_facets',
+      eventName: 'Discoverv2: Toggle Tag Facets',
+      organization_id: parseInt(organization.id, 10),
+    });
     this.setState(state => {
       const newValue = !state.showTags;
       localStorage.setItem(SHOW_TAGS_STORAGE_KEY, newValue ? '1' : '0');
diff --git a/src/sentry/static/sentry/app/views/performance/charts/footer.tsx b/src/sentry/static/sentry/app/views/performance/charts/footer.tsx
index 5d893dcdfd..5c4a65da70 100644
--- a/src/sentry/static/sentry/app/views/performance/charts/footer.tsx
+++ b/src/sentry/static/sentry/app/views/performance/charts/footer.tsx
@@ -14,6 +14,7 @@ import {
 } from 'app/components/charts/styles';
 import {fetchTotalCount} from 'app/actionCreators/events';
 import OptionSelector from 'app/components/charts/optionSelector';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 import EventView, {isAPIPayloadSimilar} from 'app/utils/discover/eventView';
 
 import {AXIS_OPTIONS} from '../constants';
@@ -64,7 +65,13 @@ class ChartFooter extends React.Component<Props, State> {
   };
 
   handleSelectorChange(key: string, value: string) {
-    const {location} = this.props;
+    const {location, organization} = this.props;
+    trackAnalyticsEvent({
+      eventKey: 'performance_views.overview.change_chart',
+      eventName: 'Performance Views: Change Overview Chart',
+      organization_id: parseInt(organization.id, 10),
+      metric: value,
+    });
 
     browserHistory.push({
       pathname: location.pathname,
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/relatedIssues.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/relatedIssues.tsx
index c7e6174882..ce927ca487 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/relatedIssues.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/relatedIssues.tsx
@@ -13,6 +13,7 @@ import {Panel, PanelBody} from 'app/components/panels';
 import space from 'app/styles/space';
 import {OrganizationSummary} from 'app/types';
 import GroupList from 'app/components/issues/groupList';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {stringifyQueryObject} from 'app/utils/tokenizeSearch';
 
 type Props = {
@@ -48,6 +49,15 @@ class RelatedIssues extends React.Component<Props> {
     };
   }
 
+  handleOpenClick = () => {
+    const {organization} = this.props;
+    trackAnalyticsEvent({
+      eventKey: 'performance_views.summary.open_issues',
+      eventName: 'Performance Views: Open issues from transaction summary',
+      organization_id: parseInt(organization.id, 10),
+    });
+  };
+
   renderEmptyMessage = () => {
     const {statsPeriod} = this.props;
 
@@ -81,7 +91,12 @@ class RelatedIssues extends React.Component<Props> {
       <React.Fragment>
         <ControlsWrapper>
           <SectionHeading>{t('Related Issues')}</SectionHeading>
-          <Button data-test-id="issues-open" size="small" to={issueSearch}>
+          <Button
+            data-test-id="issues-open"
+            size="small"
+            to={issueSearch}
+            onClick={this.handleOpenClick}
+          >
             {t('Open in Issues')}
           </Button>
         </ControlsWrapper>
