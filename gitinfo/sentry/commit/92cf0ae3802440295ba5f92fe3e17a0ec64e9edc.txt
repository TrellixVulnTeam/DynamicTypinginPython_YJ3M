commit 92cf0ae3802440295ba5f92fe3e17a0ec64e9edc
Author: Matej Minar <matej.minar@sentry.io>
Date:   Fri Mar 20 18:52:22 2020 +0100

    feat(ui): Unify look of empty messages in releases v2, more personalized (#17817)

diff --git a/src/sentry/static/sentry/app/components/emptyStateWarning.tsx b/src/sentry/static/sentry/app/components/emptyStateWarning.tsx
index a10d83ca24..649bc4f034 100644
--- a/src/sentry/static/sentry/app/components/emptyStateWarning.tsx
+++ b/src/sentry/static/sentry/app/components/emptyStateWarning.tsx
@@ -11,19 +11,20 @@ import space from 'app/styles/space';
 type Props = {
   small?: boolean;
   children?: React.ReactNode;
+  withIcon?: boolean;
 };
 
-const EmptyStateWarning = ({small = false, children}: Props) =>
+const EmptyStateWarning = ({small = false, withIcon = true, children}: Props) =>
   small ? (
     <EmptyMessage>
       <SmallMessage>
-        <StyledIconWarning color={theme.gray2} size="lg" />
+        {withIcon && <StyledIconWarning color={theme.gray2} size="lg" />}
         {children}
       </SmallMessage>
     </EmptyMessage>
   ) : (
     <EmptyStreamWrapper data-test-id="empty-state">
-      <HeroIcon src="icon-circle-exclamation" size="54" />
+      {withIcon && <HeroIcon src="icon-circle-exclamation" size="54" />}
       {children}
     </EmptyStreamWrapper>
   );
diff --git a/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx b/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx
index d91480d715..208e758e82 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx
@@ -30,6 +30,7 @@ const GroupList = createReactClass({
     withChart: PropTypes.bool,
     orgId: PropTypes.string.isRequired,
     endpointPath: PropTypes.string,
+    renderEmptyMessage: PropTypes.func,
   },
 
   contextTypes: {
@@ -160,7 +161,7 @@ const GroupList = createReactClass({
   },
 
   render() {
-    const {orgId, canSelectGroups, withChart} = this.props;
+    const {orgId, canSelectGroups, withChart, renderEmptyMessage} = this.props;
     const {loading, error, groups, memberList, pageLinks} = this.state;
 
     if (loading) {
@@ -168,6 +169,9 @@ const GroupList = createReactClass({
     } else if (error) {
       return <LoadingError onRetry={this.fetchData} />;
     } else if (groups.length === 0) {
+      if (typeof renderEmptyMessage === 'function') {
+        return renderEmptyMessage();
+      }
       return (
         <Panel>
           <PanelBody>
diff --git a/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx b/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx
index 48c6ce9b96..76c73b1133 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx
@@ -28,6 +28,7 @@ class ReleaseArtifacts extends React.Component {
     organization: SentryTypes.Organization,
     api: PropTypes.object,
     projectId: PropTypes.string,
+    smallEmptyMessage: PropTypes.string,
   };
 
   constructor() {
@@ -110,9 +111,11 @@ class ReleaseArtifacts extends React.Component {
     } else if (this.state.fileList.length === 0) {
       return (
         <Panel>
-          <EmptyStateWarning>
-            <p>{t('There are no artifacts uploaded for this release.')}</p>
-          </EmptyStateWarning>
+          <PanelBody>
+            <EmptyStateWarning small={this.props.smallEmptyMessage}>
+              <p>{t('There are no artifacts uploaded for this release.')}</p>
+            </EmptyStateWarning>
+          </PanelBody>
         </Panel>
       );
     }
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
index 88b90cfc8b..a746a2c8eb 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
@@ -29,6 +29,7 @@ const ReleaseArtifacts = ({params, location}: Props) => (
           params={params}
           location={location}
           projectId={project.slug}
+          smallEmptyMessage
         />
       </ContentBox>
     )}
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
index 36078298a1..2bb032e037 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
@@ -129,9 +129,13 @@ class ReleaseCommits extends AsyncComponent<Props, State> {
             )}
           </React.Fragment>
         ) : (
-          <EmptyStateWarning small>
-            {t('There are no commits associated with this release.')}
-          </EmptyStateWarning>
+          <Panel>
+            <PanelBody>
+              <EmptyStateWarning small>
+                {t('There are no commits associated with this release.')}
+              </EmptyStateWarning>
+            </PanelBody>
+          </Panel>
         )}
       </ContentBox>
     );
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
index 98712f6e46..b9062e437e 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
@@ -8,6 +8,7 @@ import {t} from 'app/locale';
 import space from 'app/styles/space';
 import {CommitFile, Repository} from 'app/types';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
+import {Panel, PanelBody} from 'app/components/panels';
 
 import {getFilesByRepository} from '../utils';
 import ReleaseNoCommitData from '../releaseNoCommitData';
@@ -54,7 +55,13 @@ class FilesChanged extends AsyncComponent<Props, State> {
             />
           ))
         ) : (
-          <EmptyStateWarning small>{t('There are no changed files.')}</EmptyStateWarning>
+          <Panel>
+            <PanelBody>
+              <EmptyStateWarning small>
+                {t('There are no changed files.')}
+              </EmptyStateWarning>
+            </PanelBody>
+          </Panel>
         )}
       </ContentBox>
     );
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/issues.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/issues.tsx
index 1b7a0b24cb..cdb63602a6 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/issues.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/issues.tsx
@@ -1,30 +1,41 @@
 import React from 'react';
 import styled from '@emotion/styled';
 
-import {t} from 'app/locale';
+import {t, tct} from 'app/locale';
 import DropdownControl, {DropdownItem} from 'app/components/dropdownControl';
 import Button from 'app/components/button';
 import GroupList from 'app/views/releases/detail/groupList';
 import space from 'app/styles/space';
-import {Panel} from 'app/components/panels';
+import {Panel, PanelBody} from 'app/components/panels';
 import EventView from 'app/views/eventsV2/eventView';
 import {formatVersion} from 'app/utils/formatters';
+import EmptyStateWarning from 'app/components/emptyStateWarning';
+import {DEFAULT_RELATIVE_PERIODS} from 'app/constants';
+import withGlobalSelection from 'app/utils/withGlobalSelection';
+import {GlobalSelection} from 'app/types';
 import Feature from 'app/components/acl/feature';
 
+enum IssuesType {
+  NEW = 'new',
+  RESOLVED = 'resolved',
+  ALL = 'all',
+}
+
 type Props = {
   orgId: string;
   version: string;
+  selection: GlobalSelection;
   projectId: number;
 };
 
 type State = {
-  issuesType: string;
+  issuesType: IssuesType;
 };
 
 class Issues extends React.Component<Props, State> {
   // TODO(releasesV2): we may want to put this in the URL, for now it stays just in state (issues stream is still subject to change)
-  state = {
-    issuesType: 'new',
+  state: State = {
+    issuesType: IssuesType.NEW,
   };
 
   getDiscoverUrl() {
@@ -49,14 +60,14 @@ class Issues extends React.Component<Props, State> {
     const {issuesType} = this.state;
 
     switch (issuesType) {
-      case 'all':
+      case IssuesType.ALL:
         return {path: `/organizations/${orgId}/issues/`, query: `release:"${version}"`};
-      case 'resolved':
+      case IssuesType.RESOLVED:
         return {
           path: `/organizations/${orgId}/releases/${version}/resolved/`,
           query: '',
         };
-      case 'new':
+      case IssuesType.NEW:
       default:
         return {
           path: `/organizations/${orgId}/issues/`,
@@ -65,7 +76,7 @@ class Issues extends React.Component<Props, State> {
     }
   }
 
-  handleIssuesTypeSelection = (issuesType: string) => {
+  handleIssuesTypeSelection = (issuesType: IssuesType) => {
     this.setState({issuesType});
   };
 
@@ -78,6 +89,35 @@ class Issues extends React.Component<Props, State> {
     );
   }
 
+  renderEmptyMessage = () => {
+    const {selection} = this.props;
+    const {issuesType} = this.state;
+
+    const selectedTimePeriod = DEFAULT_RELATIVE_PERIODS[selection.datetime.period];
+    const displayedPeriod = selectedTimePeriod
+      ? selectedTimePeriod.toLowerCase()
+      : t('given timeframe');
+
+    return (
+      <Panel>
+        <PanelBody>
+          <EmptyStateWarning small withIcon={false}>
+            {issuesType === IssuesType.NEW &&
+              tct('No new issues in this release for the [timePeriod].', {
+                timePeriod: displayedPeriod,
+              })}
+            {issuesType === IssuesType.RESOLVED &&
+              t('No resolved issues in this release.')}
+            {issuesType === IssuesType.ALL &&
+              tct('No issues in this release for the [timePeriod].', {
+                timePeriod: displayedPeriod,
+              })}
+          </EmptyStateWarning>
+        </PanelBody>
+      </Panel>
+    );
+  };
+
   render() {
     const {issuesType} = this.state;
     const {orgId} = this.props;
@@ -120,6 +160,7 @@ class Issues extends React.Component<Props, State> {
             query={query}
             canSelectGroups={false}
             withChart={false}
+            renderEmptyMessage={this.renderEmptyMessage}
           />
         </TableWrapper>
       </React.Fragment>
@@ -147,4 +188,4 @@ const LabelText = styled('em')`
   color: ${p => p.theme.gray2};
 `;
 
-export default Issues;
+export default withGlobalSelection(Issues);
