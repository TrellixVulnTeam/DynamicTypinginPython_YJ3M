commit bf44dc059e9cac042688e8eafd0c166e7aa63e40
Author: evanh <evanh@users.noreply.github.com>
Date:   Mon Jun 1 14:20:04 2020 -0400

    fix(perf) Fix histograms with huge durations (#19053)
    
    If there's a sufficiently large duration, then we were formatting in scientific
    notation which broke the query. Make a change to avoid that.

diff --git a/src/sentry/snuba/discover.py b/src/sentry/snuba/discover.py
index e2b923d5a6..8e8ab0d9a3 100644
--- a/src/sentry/snuba/discover.py
+++ b/src/sentry/snuba/discover.py
@@ -216,9 +216,9 @@ def find_histogram_buckets(field, params, conditions):
 
     # Determine the first bucket that will show up in our results so that we can
     # zerofill correctly.
-    offset = floor(bucket_min / bucket_size) * bucket_size
+    offset = int(floor(bucket_min / bucket_size) * bucket_size)
 
-    return "histogram({}, {:g}, {:g}, {:g})".format(column, num_buckets, bucket_size, offset)
+    return "histogram({}, {:g}, {:.0f}, {:.0f})".format(column, num_buckets, bucket_size, offset)
 
 
 def zerofill_histogram(results, column_meta, orderby, sentry_function_alias, snuba_function_alias):
diff --git a/tests/sentry/snuba/test_discover.py b/tests/sentry/snuba/test_discover.py
index 219845ceb3..d4d5a81ac4 100644
--- a/tests/sentry/snuba/test_discover.py
+++ b/tests/sentry/snuba/test_discover.py
@@ -1574,6 +1574,34 @@ class QueryTransformTest(TestCase):
         assert results["data"][0]["histogram_transaction_duration_10"] == 869
         assert results["data"][0]["count"] == 1
 
+    @patch("sentry.snuba.discover.raw_query")
+    def test_histogram_enormous_max(self, mock_query):
+        mock_query.side_effect = [
+            {"data": [{"max_transaction.duration": 64733000000, "min_transaction.duration": 1}]},
+            {
+                "meta": [
+                    {"name": "histogram_transaction_duration_10_6473300000_0"},
+                    {"name": "count"},
+                ],
+                "data": [
+                    {"histogram_transaction_duration_10_6473300000_0": 64733000000, "count": 1}
+                ],
+            },
+        ]
+
+        results = discover.query(
+            selected_columns=["histogram(transaction.duration, 10)", "count()"],
+            query="",
+            params={"project_id": [self.project.id]},
+            orderby="histogram_transaction_duration_10",
+            auto_fields=True,
+            use_aggregate_conditions=False,
+        )
+
+        assert len(results["data"]) == 11
+        assert results["data"][-1]["histogram_transaction_duration_10"] == 64733000000
+        assert results["data"][-1]["count"] == 1
+
 
 class TimeseriesQueryTest(SnubaTestCase, TestCase):
     def setUp(self):
