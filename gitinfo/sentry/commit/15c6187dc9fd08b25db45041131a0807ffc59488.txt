commit 15c6187dc9fd08b25db45041131a0807ffc59488
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 5 14:44:04 2015 -0800

    Change stats period to 48h

diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 0cfaf477b2..57948c0ef5 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -47,7 +47,7 @@ class GroupSerializer(Serializer):
             model=tsdb.models.group,
             keys=group_ids,
             end=now,
-            start=now - timedelta(days=1),
+            start=now - timedelta(days=2),
             rollup=3600,
         )
         daily_stats = tsdb.get_range(
@@ -122,7 +122,7 @@ class GroupSerializer(Serializer):
                 'slug': obj.project.slug,
             },
             'stats': {
-                '24h': attrs['hourly_stats'],
+                '48h': attrs['hourly_stats'],
                 '30d': attrs['daily_stats'],
             },
             'assignedTo': attrs['assigned_to'],
diff --git a/src/sentry/static/sentry/app/views/aggregate.jsx b/src/sentry/static/sentry/app/views/aggregate.jsx
index c1c8fd14c5..bca49ce76d 100644
--- a/src/sentry/static/sentry/app/views/aggregate.jsx
+++ b/src/sentry/static/sentry/app/views/aggregate.jsx
@@ -32,7 +32,7 @@ var AggregateDetails = React.createClass({
   getInitialState() {
     return {
       aggregate: null,
-      statsPeriod: '24h'
+      statsPeriod: '48h'
     };
   },
 
diff --git a/src/sentry/static/sentry/app/views/aggregate/chart.jsx b/src/sentry/static/sentry/app/views/aggregate/chart.jsx
index 9fd1dccbb4..43915e148c 100644
--- a/src/sentry/static/sentry/app/views/aggregate/chart.jsx
+++ b/src/sentry/static/sentry/app/views/aggregate/chart.jsx
@@ -12,7 +12,8 @@ var AggregateChart = React.createClass({
 
   render: function() {
     var aggregate = this.props.aggregate;
-    var points = aggregate.stats[this.props.statsPeriod].map(function(point){
+    var stats = aggregate.stats[this.props.statsPeriod];
+    var points = stats.map((point) => {
       return {x: point[0], y: point[1]};
     });
 
diff --git a/src/sentry/static/sentry/app/views/stream/aggregate.jsx b/src/sentry/static/sentry/app/views/stream/aggregate.jsx
index 92ac9ed859..12873a6b31 100644
--- a/src/sentry/static/sentry/app/views/stream/aggregate.jsx
+++ b/src/sentry/static/sentry/app/views/stream/aggregate.jsx
@@ -42,12 +42,20 @@ var StreamAggregate = React.createClass({
   },
 
   render() {
-    var data = this.props.data,
-        userCount = 0;
-
+    var data = this.props.data;
+    var userCount = 0;
     var params = this.getParams();
+    var points;
+
+    switch(this.props.statsPeriod) {
+      case '24h':
+        points = data.stats['48h'].slice(-24);
+        break;
+      default:
+        points = data.stats[this.props.statsPeriod];
+    }
 
-    var chartData = data.stats[this.props.statsPeriod].map(function(point){
+    var chartData = points.map((point) => {
       return {x: point[0], y: point[1]};
     });
 
