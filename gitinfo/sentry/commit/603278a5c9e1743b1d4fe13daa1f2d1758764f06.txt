commit 603278a5c9e1743b1d4fe13daa1f2d1758764f06
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Mon May 1 10:21:26 2017 -0700

    enable releases by default, show overview page to everone (#5309)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index d2254863cd..6faad552cd 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -740,10 +740,10 @@ SENTRY_FEATURES = {
     'auth:register': True,
     'organizations:api-keys': False,
     'organizations:create': True,
-    'organizations:repos': False,
+    'organizations:repos': True,
     'organizations:sso': True,
     'organizations:callsigns': True,
-    'organizations:release-commits': False,
+    'organizations:release-commits': True,
     'projects:global-events': False,
     'projects:plugins': True,
     'projects:dsym': False,
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index cdefdd3877..ccd0483afd 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -206,27 +206,12 @@ function routes() {
           <Route path="dashboard/" component={errorHandler(ProjectDashboard)} />
           <Route path="events/" component={errorHandler(ProjectEvents)} />
           <Route path="releases/" component={errorHandler(ProjectReleases)} />
-          {/* TODO(jess): take this out when we release releases to everyone */}
           <Route
             name="releaseDetails"
             path="releases/:version/"
-            component={errorHandler(ReleaseDetails)}
-            getIndexRoute={(partialNextState, cb) => {
-              let client = new this.api.Client();
-              let orgId = partialNextState.params.orgId;
-              client.request(`/organizations/${orgId}/`, {
-                method: 'GET',
-                success: (data, _, jqXHR) => {
-                  if (new Set(data.features).has('release-commits')) {
-                    cb(null, {component: errorHandler(ReleaseOverview)});
-                  } else {
-                    cb(null, {component: errorHandler(ReleaseNewEvents)});
-                  }
-                }
-              });
-            }}>
+            component={errorHandler(ReleaseDetails)}>
+            <IndexRoute component={errorHandler(ReleaseOverview)} />
             <Route path="new-events/" component={errorHandler(ReleaseNewEvents)} />
-            <Route path="overview/" component={errorHandler(ReleaseOverview)} />
             <Route path="all-events/" component={errorHandler(ReleaseAllEvents)} />
             <Route path="artifacts/" component={errorHandler(ReleaseArtifacts)} />
             <Route path="commits/" component={errorHandler(ReleaseCommits)} />
diff --git a/src/sentry/static/sentry/app/views/releaseDetails.jsx b/src/sentry/static/sentry/app/views/releaseDetails.jsx
index d14ff5189e..56d55ffc45 100644
--- a/src/sentry/static/sentry/app/views/releaseDetails.jsx
+++ b/src/sentry/static/sentry/app/views/releaseDetails.jsx
@@ -97,8 +97,6 @@ const ReleaseDetails = React.createClass({
 
     let release = this.state.release;
     let {orgId, projectId} = this.props.params;
-    let hasReleases = new Set(this.context.organization.features).has('release-commits');
-    let basePath = `/${orgId}/${projectId}/releases/${encodeURIComponent(release.version)}/`;
     return (
       <DocumentTitle title={this.getTitle()}>
         <div>
@@ -156,29 +154,17 @@ const ReleaseDetails = React.createClass({
               </div>
             </div>
             <ul className="nav nav-tabs">
-              {hasReleases &&
-                <ListLink
-                  to={`/${orgId}/${projectId}/releases/${encodeURIComponent(release.version)}/overview/`}
-                  isActive={loc => {
-                    // react-router isActive will return true for any route that is part of the active route
-                    // e.g. parent routes. To avoid matching on sub-routes, insist on strict path equality.
-                    return (
-                      (hasReleases && this.props.location.pathname === basePath) ||
-                      loc.pathname === this.props.location.pathname
-                    );
-                  }}>
-                  {t('Overview')}
-                </ListLink>}
               <ListLink
-                to={`/${orgId}/${projectId}/releases/${encodeURIComponent(release.version)}/new-events/`}
+                to={`/${orgId}/${projectId}/releases/${encodeURIComponent(release.version)}/`}
                 isActive={loc => {
                   // react-router isActive will return true for any route that is part of the active route
                   // e.g. parent routes. To avoid matching on sub-routes, insist on strict path equality.
-                  return (
-                    (!hasReleases && this.props.location.pathname === basePath) ||
-                    loc.pathname === this.props.location.pathname
-                  );
+                  return loc.pathname === this.props.location.pathname;
                 }}>
+                {t('Overview')}
+              </ListLink>
+              <ListLink
+                to={`/${orgId}/${projectId}/releases/${encodeURIComponent(release.version)}/new-events/`}>
                 {t('New Issues')}
               </ListLink>
               <ListLink
