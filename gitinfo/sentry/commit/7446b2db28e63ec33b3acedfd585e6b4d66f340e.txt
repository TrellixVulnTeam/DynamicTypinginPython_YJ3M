commit 7446b2db28e63ec33b3acedfd585e6b4d66f340e
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Tue Feb 27 14:41:33 2018 -0800

    fix(projects): Remove uses of team_id so we can remove that column (#7380)

diff --git a/bin/load-mocks b/bin/load-mocks
index 95af1c041a..1b0829b9a6 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -345,7 +345,6 @@ def main(num_events=1, extra_events=False):
         for project_name in project_names:
             print('  > Mocking project {}'.format(project_name))
             project, _ = Project.objects.get_or_create(
-                team=team,
                 name=project_name,
                 defaults={
                     'organization': org,
diff --git a/src/sentry/admin.py b/src/sentry/admin.py
index d037643575..cacbf2f4a8 100644
--- a/src/sentry/admin.py
+++ b/src/sentry/admin.py
@@ -56,9 +56,9 @@ class ProjectAdmin(admin.ModelAdmin):
     list_display = ('name', 'slug', 'organization', 'status', 'date_added')
     list_filter = ('status', 'public')
     search_fields = (
-        'name', 'organization__slug', 'organization__name', 'team__slug', 'team__name', 'slug'
+        'name', 'organization__slug', 'organization__name', 'slug'
     )
-    raw_id_fields = ('team', 'organization')
+    raw_id_fields = ('organization',)
     readonly_fields = ('first_event', 'date_added')
 
 
@@ -76,7 +76,7 @@ class OrganizationProjectInline(admin.TabularInline):
     model = Project
     extra = 1
     fields = ('name', 'slug', 'status', 'date_added')
-    raw_id_fields = ('organization', 'team')
+    raw_id_fields = ('organization',)
 
 
 class OrganizationTeamInline(admin.TabularInline):
@@ -138,7 +138,7 @@ class TeamProjectInline(admin.TabularInline):
     model = Project
     extra = 1
     fields = ('name', 'slug')
-    raw_id_fields = ('organization', 'team')
+    raw_id_fields = ('organization',)
 
 
 class TeamAdmin(admin.ModelAdmin):
diff --git a/src/sentry/api/endpoints/organization_projects.py b/src/sentry/api/endpoints/organization_projects.py
index 661e87a21b..4bf005f7f5 100644
--- a/src/sentry/api/endpoints/organization_projects.py
+++ b/src/sentry/api/endpoints/organization_projects.py
@@ -77,7 +77,7 @@ class OrganizationProjectsEndpoint(OrganizationEndpoint):
             team_list = list(request.access.teams)
             queryset = Project.objects.filter(
                 teams__in=team_list,
-            ).prefetch_related('team')
+            ).prefetch_related('teams')
 
         return self.paginate(
             request=request,
diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index b96e6912e3..9e752b72ea 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -243,6 +243,7 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
             changed = True
 
         old_team_id = None
+        new_team = None
         if result.get('team'):
             team_list = [
                 t for t in Team.objects.get_for_user(
@@ -264,7 +265,7 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
             except IndexError:
                 pass
 
-            project.team = team_list[0]
+            new_team = team_list[0]
             changed = True
 
         if result.get('platform'):
@@ -277,7 +278,7 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
                 ProjectTeam.objects.filter(
                     project=project,
                     team_id=old_team_id,
-                ).update(team=project.team)
+                ).update(team=new_team)
 
         if result.get('isBookmarked'):
             try:
diff --git a/src/sentry/api/endpoints/team_project_index.py b/src/sentry/api/endpoints/team_project_index.py
index 2dea644900..ef38fa02b6 100644
--- a/src/sentry/api/endpoints/team_project_index.py
+++ b/src/sentry/api/endpoints/team_project_index.py
@@ -107,7 +107,6 @@ class TeamProjectIndexEndpoint(TeamEndpoint):
                         name=result['name'],
                         slug=result.get('slug'),
                         organization=team.organization,
-                        team=team,
                         platform=result.get('platform')
                     )
             except IntegrityError:
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index bd17b9974a..a6d04cff5b 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -283,30 +283,29 @@ class Project(Model):
         return is_enabled
 
     def transfer_to(self, team):
+        # NOTE: this will only work properly if the new team is in a different
+        # org than the existing one, which is currently the only use case in
+        # production
         # TODO(jess): refactor this to make it an org transfer only
         from sentry.models import ProjectTeam, ReleaseProject, EnvironmentProject
 
         organization = team.organization
-        from_team_id = self.team_id
 
         old_org_id = self.organization_id
         org_changed = old_org_id != organization.id
 
         self.organization = organization
-        self.team = team
 
         try:
             with transaction.atomic():
                 self.update(
                     organization=organization,
-                    team=team,
                 )
         except IntegrityError:
             slugify_instance(self, self.name, organization=organization)
             self.update(
                 slug=self.slug,
                 organization=organization,
-                team=team,
             )
 
         # Both environments and releases are bound at an organization level.
@@ -323,12 +322,10 @@ class Project(Model):
                 model.objects.filter(
                     project_id=self.id,
                 ).delete()
-
-        ProjectTeam.objects.filter(project=self, team_id=from_team_id).update(team=team)
-        # this is getting really gross, but make sure there aren't lingering associations
-        # with old orgs or teams
-        if org_changed:
+            # this is getting really gross, but make sure there aren't lingering associations
+            # with old orgs or teams
             ProjectTeam.objects.filter(project=self, team__organization_id=old_org_id).delete()
+
         # ensure this actually exists in case from team was null
         self.add_team(team)
 
diff --git a/src/sentry/models/team.py b/src/sentry/models/team.py
index a3c86c3942..3a4ae9631f 100644
--- a/src/sentry/models/team.py
+++ b/src/sentry/models/team.py
@@ -217,7 +217,6 @@ class Team(Model):
         Project.objects.filter(
             id__in=project_ids,
         ).update(
-            team=new_team,
             organization=organization,
         )
 
diff --git a/src/sentry/receivers/core.py b/src/sentry/receivers/core.py
index 6c520f7d54..166df48fc4 100644
--- a/src/sentry/receivers/core.py
+++ b/src/sentry/receivers/core.py
@@ -89,7 +89,6 @@ def create_default_project(id, name, slug, verbosity=2, **kwargs):
         public=False,
         name=name,
         slug=slug,
-        team=team,
         organization=team.organization,
         **kwargs
     )
diff --git a/src/sentry/utils/apidocs.py b/src/sentry/utils/apidocs.py
index 1165264c30..9db4c846ec 100644
--- a/src/sentry/utils/apidocs.py
+++ b/src/sentry/utils/apidocs.py
@@ -287,7 +287,7 @@ class MockUtils(object):
     def create_project(self, name, teams, org):
         from sentry.models import Project
         project = Project.objects.get_or_create(
-            team=teams[0], name=name, defaults={
+            name=name, defaults={
                 'organization': org,
             }
         )[0]
diff --git a/src/sentry/utils/audit.py b/src/sentry/utils/audit.py
index ce5a927a76..687a92cc0e 100644
--- a/src/sentry/utils/audit.py
+++ b/src/sentry/utils/audit.py
@@ -61,7 +61,7 @@ def create_org_delete_log(entry):
 def create_project_delete_log(entry):
     delete_log = DeletedProject()
 
-    project = Project.objects.select_related('team').get(id=entry.target_object)
+    project = Project.objects.get(id=entry.target_object)
     delete_log.name = project.name
     delete_log.slug = project.slug
     delete_log.date_created = project.date_added
diff --git a/src/sentry/web/frontend/debug/debug_new_release_email.py b/src/sentry/web/frontend/debug/debug_new_release_email.py
index 0b41c99ae1..11662821f4 100644
--- a/src/sentry/web/frontend/debug/debug_new_release_email.py
+++ b/src/sentry/web/frontend/debug/debug_new_release_email.py
@@ -6,7 +6,7 @@ import pytz
 from django.views.generic import View
 
 from sentry.models import (
-    Commit, CommitAuthor, Deploy, GroupSubscriptionReason, Organization, Project, Release, Team,
+    Commit, CommitAuthor, Deploy, GroupSubscriptionReason, Organization, Project, Release,
     User
 )
 from sentry.utils.http import absolute_uri
@@ -21,31 +21,22 @@ class DebugNewReleaseEmailView(View):
             slug='organization',
             name='My Company',
         )
-        team = Team(
-            id=1,
-            slug='team',
-            name='My Team',
-            organization=org,
-        )
         projects = [
             Project(
                 id=1,
                 organization=org,
-                team=team,
                 slug='project',
                 name='My Project',
             ),
             Project(
                 id=2,
                 organization=org,
-                team=team,
                 slug='another-project',
                 name='Another Project',
             ),
             Project(
                 id=3,
                 organization=org,
-                team=team,
                 slug='yet-another-project',
                 name='Yet Another Project',
             ),
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index 89f1840b55..9b0bf83b0c 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -172,16 +172,9 @@ class ActivityMailDebugView(View):
             slug='organization',
             name='My Company',
         )
-        team = Team(
-            id=1,
-            slug='team',
-            name='My Team',
-            organization=org,
-        )
         project = Project(
             id=1,
             organization=org,
-            team=team,
             slug='project',
             name='My Project',
         )
@@ -222,17 +215,10 @@ def alert(request):
         slug='example',
         name='Example',
     )
-    team = Team(
-        id=1,
-        slug='example',
-        name='Example',
-        organization=org,
-    )
     project = Project(
         id=1,
         slug='example',
         name='Example',
-        team=team,
         organization=org,
     )
 
@@ -302,18 +288,10 @@ def digest(request):
         name='Example Organization',
     )
 
-    team = Team(
-        id=1,
-        slug='example',
-        name='Example Team',
-        organization=org,
-    )
-
     project = Project(
         id=1,
         slug='example',
         name='Example Project',
-        team=team,
         organization=org,
     )
 
@@ -419,13 +397,6 @@ def report(request):
         name='Example',
     )
 
-    team = Team(
-        id=1,
-        slug='example',
-        name='Example',
-        organization=organization,
-    )
-
     projects = []
     for i in xrange(0, random.randint(1, 8)):
         name = ' '.join(random.sample(loremipsum.words, random.randint(1, 4)))
@@ -433,7 +404,6 @@ def report(request):
             Project(
                 id=i,
                 organization=organization,
-                team=team,
                 slug=slugify(name),
                 name=name,
                 date_added=start - timedelta(days=random.randint(0, 120)),
diff --git a/tests/acceptance/test_create_project.py b/tests/acceptance/test_create_project.py
index 47d04c4081..a524cd5b4b 100644
--- a/tests/acceptance/test_create_project.py
+++ b/tests/acceptance/test_create_project.py
@@ -36,7 +36,7 @@ class CreateProjectTest(AcceptanceTestCase):
         project = Project.objects.get(organization=self.org)
         assert project.name == 'Java'
         assert project.platform == 'java'
-        assert project.team_id == self.team.id
+        assert project.teams.first() == self.team
         self.browser.snapshot(name='docs redirect')
 
     def test_no_teams(self):
diff --git a/tests/sentry/api/endpoints/test_team_project_index.py b/tests/sentry/api/endpoints/test_team_project_index.py
index 90c4e91bf7..ae756531ce 100644
--- a/tests/sentry/api/endpoints/test_team_project_index.py
+++ b/tests/sentry/api/endpoints/test_team_project_index.py
@@ -54,7 +54,6 @@ class TeamProjectCreateTest(APITestCase):
         project = Project.objects.get(id=resp.data['id'])
         assert project.name == 'hello world'
         assert project.slug == 'foobar'
-        assert project.team == team
         assert project.teams.first() == team
 
         resp = self.client.post(
diff --git a/tests/sentry/buffer/base/tests.py b/tests/sentry/buffer/base/tests.py
index 6c47075b20..bbda5674f8 100644
--- a/tests/sentry/buffer/base/tests.py
+++ b/tests/sentry/buffer/base/tests.py
@@ -55,7 +55,8 @@ class BufferTest(TestCase):
     def test_increments_when_null(self):
         org = Organization.objects.create(slug='test-org')
         team = Team.objects.create(organization=org, slug='test-team')
-        project = Project.objects.create(organization=org, slug='test-project', team=team)
+        project = Project.objects.create(organization=org, slug='test-project')
+        project.add_team(team)
         release = Release.objects.create(organization=org, version='abcdefg')
         release_project = ReleaseProject.objects.create(project=project, release=release)
         assert release_project.new_groups == 0
diff --git a/tests/sentry/models/test_project.py b/tests/sentry/models/test_project.py
index 4fb4841917..1397b61cac 100644
--- a/tests/sentry/models/test_project.py
+++ b/tests/sentry/models/test_project.py
@@ -46,7 +46,6 @@ class ProjectTest(TestCase):
 
         project = Project.objects.get(id=project.id)
 
-        assert project.team_id == to_team.id
         assert project.teams.count() == 1
         assert project.teams.first() == to_team
         assert project.organization_id == to_org.id
@@ -66,7 +65,6 @@ class ProjectTest(TestCase):
 
         project = Project.objects.get(id=project.id)
 
-        assert project.team_id == to_team.id
         assert project.teams.count() == 1
         assert project.teams.first() == to_team
         assert project.organization_id == to_org.id
diff --git a/tests/sentry/models/test_team.py b/tests/sentry/models/test_team.py
index 082537e702..66b80fab65 100644
--- a/tests/sentry/models/test_team.py
+++ b/tests/sentry/models/test_team.py
@@ -129,7 +129,6 @@ class TransferTest(TestCase):
         team.transfer_to(org2)
 
         project = Project.objects.get(id=project.id)
-        assert project.team == team2
         assert ProjectTeam.objects.filter(project=project, team=team2).exists()
 
         assert not Team.objects.filter(id=team.id).exists()
diff --git a/tests/sentry/receivers/test_core.py b/tests/sentry/receivers/test_core.py
index 662c78b74b..94c1f59f3d 100644
--- a/tests/sentry/receivers/test_core.py
+++ b/tests/sentry/receivers/test_core.py
@@ -22,7 +22,7 @@ class CreateDefaultProjectsTest(TestCase):
         assert project.public is False
         assert project.name == 'Internal'
         assert project.slug == 'internal'
-        team = project.team
+        team = project.teams.first()
         assert team.slug == 'sentry'
 
         pk = ProjectKey.objects.get(project=project)
@@ -43,7 +43,7 @@ class CreateDefaultProjectsTest(TestCase):
         assert project.public is False
         assert project.name == 'Internal'
         assert project.slug == 'internal'
-        team = project.team
+        team = project.teams.first()
         assert team.slug == 'sentry'
 
         pk = ProjectKey.objects.get(project=project)
diff --git a/tests/sentry/utils/audit/tests.py b/tests/sentry/utils/audit/tests.py
index d1733f0486..94a868c5a8 100644
--- a/tests/sentry/utils/audit/tests.py
+++ b/tests/sentry/utils/audit/tests.py
@@ -20,7 +20,7 @@ class CreateAuditEntryTest(TestCase):
         self.req = FakeHttpRequest(self.user)
         self.org = self.create_organization(owner=self.user)
         self.team = self.create_team(organization=self.org)
-        self.project = self.create_project(team=self.team, platform='java')
+        self.project = self.create_project(teams=[self.team], platform='java')
 
     def assert_no_delete_log_created(self):
         assert not DeletedOrganization.objects.filter(slug=self.org.slug).exists()
diff --git a/tests/sentry/web/frontend/test_accept_project_transfer.py b/tests/sentry/web/frontend/test_accept_project_transfer.py
index 24cec9ac26..699fd28466 100644
--- a/tests/sentry/web/frontend/test_accept_project_transfer.py
+++ b/tests/sentry/web/frontend/test_accept_project_transfer.py
@@ -85,7 +85,7 @@ class AcceptTransferProjectTest(TestCase):
 
         p = Project.objects.get(id=self.project.id)
         assert p.organization_id == self.to_organization.id
-        assert p.team_id == self.to_team.id
+        assert p.teams.first() == self.to_team
 
     def test_non_owner_cannot_transfer_project(self):
         rando_user = self.create_user(email='blipp@bloop.com', is_superuser=False)
