commit d9dabba9ef9d3de4434d718462645cff334739f7
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Thu Jan 10 10:43:13 2019 -0800

    feat(project-selector): settings link (#11114)
    
    * settings link in projectSelector
    
    * resolve alignment issues when bookmarked and switch to inlinesvg
    
    * fix organization prop type
    
    * fix event bubbling bug and remove from non-multi dropdowns
    
    * optimize star svg

diff --git a/src/sentry/static/sentry/app/components/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectSelector.jsx
index 6fee85c95e..15f6f801ac 100644
--- a/src/sentry/static/sentry/app/components/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectSelector.jsx
@@ -1,11 +1,13 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
+import {Link} from 'react-router';
 
 import {sortArray} from 'app/utils';
 import {t} from 'app/locale';
 import Button from 'app/components/button';
 import CheckboxFancy from 'app/components/checkboxFancy';
+import InlineSvg from 'app/components/inlineSvg';
 import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
 import Highlight from 'app/components/highlight';
 import IdBadge from 'app/components/idBadge';
@@ -214,6 +216,7 @@ class ProjectSelector extends React.Component {
           label: ({inputValue}) => (
             <ProjectSelectorItem
               project={project}
+              organization={this.props.organization}
               multi={multi}
               inputValue={inputValue}
               isChecked={
@@ -242,6 +245,7 @@ class ProjectSelector extends React.Component {
 class ProjectSelectorItem extends React.PureComponent {
   static propTypes = {
     project: SentryTypes.Project,
+    organization: PropTypes.object.isRequired,
     multi: PropTypes.bool,
     inputValue: PropTypes.string,
     isChecked: PropTypes.bool,
@@ -259,7 +263,8 @@ class ProjectSelectorItem extends React.PureComponent {
   };
 
   render() {
-    const {project, multi, inputValue, isChecked} = this.props;
+    const {project, multi, inputValue, isChecked, organization} = this.props;
+
     return (
       <ProjectRow>
         <BadgeAndBookmark>
@@ -271,7 +276,15 @@ class ProjectSelectorItem extends React.PureComponent {
               avatarProps={{consistentWidth: true}}
             />
           </BadgeWrapper>
-          {project.isBookmarked && <BookmarkIcon multi={multi} />}
+          {project.isBookmarked && <BookmarkIcon src="icon-star-small-filled" />}
+          {multi && (
+            <SettingsIconLink
+              to={`/settings/${organization.slug}/${project.slug}/`}
+              onClick={e => e.stopPropagation()}
+            >
+              <InlineSvg src="icon-settings" />
+            </SettingsIconLink>
+          )}
         </BadgeAndBookmark>
 
         {multi && (
@@ -284,30 +297,42 @@ class ProjectSelectorItem extends React.PureComponent {
   }
 }
 
-const FlexY = styled('div')`
+const BookmarkIcon = styled(InlineSvg)`
+  margin-left: ${space(0.5)};
+  color: ${p => p.theme.yellowOrange};
+  margin-top: -2px; /* trivial alignment bump */
+`;
+
+const SettingsIconLink = styled(Link)`
+  color: ${p => p.theme.gray2};
   display: flex;
-  align-items: center;
-  justify-content: space-between;
+  padding: ${space(0.5)};
+  opacity: 0;
+  transform: translateX(-${space(0.5)});
+  transition: 0.2s all;
+
+  &:hover {
+    color: ${p => p.theme.gray4};
+  }
 `;
 
-const ProjectRow = styled(FlexY)`
+const ProjectRow = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
   font-size: 14px;
   font-weight: 400;
+  padding-left: ${space(1)};
 
   /* thanks bootstrap? */
   input[type='checkbox'] {
     margin: 0;
   }
-`;
 
-const BookmarkIcon = styled(({multi, ...props}) => (
-  <div {...props}>
-    <span className="icon-star-solid bookmark" />
-  </div>
-))`
-  display: flex;
-  font-size: 12px;
-  ${p => p.multi && `margin-left: ${space(0.5)}`};
+  &:hover ${SettingsIconLink} {
+    opacity: 1;
+    transform: translateX(0);
+  }
 `;
 
 const CreateProjectButton = styled(Button)`
@@ -322,10 +347,12 @@ const BadgeWrapper = styled('div')`
   white-space: nowrap;
   overflow: hidden;
 `;
+
 const BadgeAndBookmark = styled('div')`
   display: flex;
   flex: 1;
   overflow: hidden;
+  align-items: center;
 `;
 
 const IdBadgeMenuItem = styled(IdBadge)`
@@ -334,8 +361,8 @@ const IdBadgeMenuItem = styled(IdBadge)`
 `;
 
 const MultiSelectWrapper = styled('div')`
-  margin: -8px;
-  padding: 8px;
+  margin: -${space(1)};
+  padding: ${space(1)};
 `;
 
 const MultiSelect = styled(CheckboxFancy)`
diff --git a/src/sentry/static/sentry/app/icons/icon-star-small-filled.svg b/src/sentry/static/sentry/app/icons/icon-star-small-filled.svg
new file mode 100644
index 0000000000..5fb56dcbcf
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-star-small-filled.svg
@@ -0,0 +1 @@
+<svg width="12" height="12" xmlns="http://www.w3.org/2000/svg"><path d="M6.386.233l1.419 3.77 3.832.233c.164.016.276.113.335.292.06.179.023.33-.111.455L8.9 7.563l.938 3.839a.389.389 0 0 1-.162.426c-.145.105-.292.118-.441.04l-3.23-2.03-3.262 2.112c-.15.078-.296.065-.442-.04a.389.389 0 0 1-.162-.426l.939-3.84-2.961-2.59a.588.588 0 0 1-.095-.514c.048-.187.17-.288.363-.304l3.822-.233 1.43-3.77A.385.385 0 0 1 6.01 0c.175 0 .3.078.375.233z" fill="currentColor" fill-rule="evenodd"/></svg>
