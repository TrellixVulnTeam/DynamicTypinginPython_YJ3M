commit 7a158409042ad5a511d84098248a48ab79569950
Author: Mark Story <mark@sentry.io>
Date:   Fri Feb 14 11:44:27 2020 -0500

    fix(discover) Track query failures in sentry (#17032)
    
    Capture the failures when queries fail to execute. We are no capturing
    a few kinds of errors:
    
    * Retention errors as we cannot help fix those.
    * Query syntax errors as those are invalid data from
      customers, and we can't fix those.
    * Rate limits and memory exceeded errors would also be captured in
      snuba.

diff --git a/src/sentry/api/endpoints/organization_events.py b/src/sentry/api/endpoints/organization_events.py
index ee1246b3fc..d86d87ac4d 100644
--- a/src/sentry/api/endpoints/organization_events.py
+++ b/src/sentry/api/endpoints/organization_events.py
@@ -2,6 +2,8 @@ from __future__ import absolute_import
 
 import logging
 import six
+import sentry_sdk
+
 from functools import partial
 from django.utils.http import urlquote
 from rest_framework.response import Response
@@ -159,21 +161,13 @@ class OrganizationEventsV2Endpoint(OrganizationEventsEndpointBase):
             )
         except discover.InvalidSearchQuery as error:
             raise ParseError(detail=six.text_type(error))
-        except (snuba.SnubaError, snuba.QueryOutsideRetentionError) as error:
-            logger.info(
-                "organization.events.snuba-error",
-                extra={
-                    "organization_id": organization.id,
-                    "user_id": request.user.id,
-                    "error": six.text_type(error),
-                },
-            )
+        except snuba.QueryOutsideRetentionError:
+            raise ParseError(detail="Invalid date range. Please try a more recent date range.")
+        except snuba.QueryIllegalTypeOfArgument:
+            raise ParseError(detail="Invalid query. Argument to function is wrong type.")
+        except snuba.SnubaError as error:
             message = "Internal error. Please try again."
-            if isinstance(error, snuba.QueryIllegalTypeOfArgument):
-                message = "Invalid query. Argument to function is wrong type."
-            elif isinstance(error, snuba.QueryOutsideRetentionError):
-                message = "Invalid date range. Please try a more recent date range."
-            elif isinstance(
+            if isinstance(
                 error,
                 (
                     snuba.RateLimitExceeded,
@@ -190,7 +184,8 @@ class OrganizationEventsV2Endpoint(OrganizationEventsEndpointBase):
                     snuba.SchemaValidationError,
                 ),
             ):
-                message = "Invalid query."
+                sentry_sdk.capture_exception(error)
+                message = "Internal error. Your query failed to run."
 
             raise ParseError(detail=message)
 
diff --git a/tests/snuba/api/endpoints/test_organization_events_v2.py b/tests/snuba/api/endpoints/test_organization_events_v2.py
index c6a64c6cc8..4ffd8c8204 100644
--- a/tests/snuba/api/endpoints/test_organization_events_v2.py
+++ b/tests/snuba/api/endpoints/test_organization_events_v2.py
@@ -112,7 +112,7 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
             )
 
         assert response.status_code == 400, response.content
-        assert response.data["detail"] == "Invalid query."
+        assert response.data["detail"] == "Internal error. Your query failed to run."
 
         mock_query.side_effect = QueryIllegalTypeOfArgument("test")
         with self.feature("organizations:discover-basic"):
