commit 01460dac84ca561da54ffb14303440a70e2b7cec
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu May 31 12:25:14 2018 -0700

    chore: Remove old dashboard and feature flag (#8569)
    
    Not removing the old sidebar completely just yet, it seems to be still used by getsentry views

diff --git a/docs-ui/components/stackedBarChart.stories.js b/docs-ui/components/stackedBarChart.stories.js
index b73c8e2091..6fb7773320 100644
--- a/docs-ui/components/stackedBarChart.stories.js
+++ b/docs-ui/components/stackedBarChart.stories.js
@@ -24,7 +24,7 @@ storiesOf('StackedBarChart', module).add(
             label: 'blacklisted',
           },
         ]}
-        className="dashboard-barchart standard-barchart"
+        className="standard-barchart"
         height="100%"
         label="events"
         barClasses={['received', 'blacklisted', 'rejected']}
diff --git a/src/sentry/api/serializers/models/organization.py b/src/sentry/api/serializers/models/organization.py
index 9b16e9bb9c..7497ecf1c7 100644
--- a/src/sentry/api/serializers/models/organization.py
+++ b/src/sentry/api/serializers/models/organization.py
@@ -125,8 +125,6 @@ class DetailedOrganizationSerializer(OrganizationSerializer):
             feature_list.append('code-owners')
         if features.has('organizations:unreleased-changes', obj, actor=user):
             feature_list.append('unreleased-changes')
-        if features.has('organizations:dashboard', obj, actor=user):
-            feature_list.append('dashboard')
         if features.has('organizations:relay', obj, actor=user):
             feature_list.append('relay')
 
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 7443b6b04a..1e27aecb52 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -761,7 +761,6 @@ SENTRY_FEATURES = {
     'organizations:new-teams': True,
     'organizations:code-owners': True,
     'organizations:unreleased-changes': False,
-    'organizations:dashboard': True,
     'organizations:suggested-commits': True,
     'organizations:relay': False,
     'projects:global-events': False,
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 5f36874da9..a3937251b6 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -27,7 +27,6 @@ default_manager.add('organizations:unreleased-changes', OrganizationFeature)  #
 default_manager.add('organizations:relay', OrganizationFeature)  # NOQA
 default_manager.add('projects:similarity-view', ProjectFeature)  # NOQA
 default_manager.add('organizations:environments', OrganizationFeature)  # NOQA
-default_manager.add('organizations:dashboard', OrganizationFeature)  # NOQA
 default_manager.add('projects:global-events', ProjectFeature)  # NOQA
 default_manager.add('projects:plugins', ProjectPluginFeature)  # NOQA
 default_manager.add('projects:data-forwarding', ProjectFeature)  # NOQA
diff --git a/src/sentry/static/sentry/app/components/events/eventsPerHour.jsx b/src/sentry/static/sentry/app/components/events/eventsPerHour.jsx
deleted file mode 100644
index 680981a4e1..0000000000
--- a/src/sentry/static/sentry/app/components/events/eventsPerHour.jsx
+++ /dev/null
@@ -1,121 +0,0 @@
-import React from 'react';
-
-import createReactClass from 'create-react-class';
-
-import {Link} from 'react-router';
-
-import ApiMixin from 'app/mixins/apiMixin';
-import StackedBarChart from 'app/components/stackedBarChart';
-import LoadingError from 'app/components/loadingError';
-import OrganizationState from 'app/mixins/organizationState';
-
-import {t} from 'app/locale';
-
-const EventsPerHour = createReactClass({
-  displayName: 'EventsPerHour',
-  mixins: [ApiMixin, OrganizationState],
-
-  getInitialState() {
-    let until = Math.floor(new Date().getTime() / 1000);
-    let since = until - 3600 * 24;
-
-    return {
-      rawOrgData: {},
-      formattedData: null,
-      querySince: since,
-      queryUntil: until,
-      error: false,
-    };
-  },
-
-  componentDidMount() {
-    this.fetchData();
-  },
-
-  // Use this so there's a standard order for y values and bar classes
-  STAT_OPTS: ['received', 'rejected', 'blacklisted'],
-
-  fetchData() {
-    let statEndpoint = this.getEndpoint();
-
-    let query = {
-      since: this.state.querySince,
-      until: this.state.queryUntil,
-      resolution: '1h',
-    };
-
-    $.when
-      .apply(
-        $,
-        this.STAT_OPTS.map(stat => {
-          let deferred = $.Deferred();
-          this.api.request(statEndpoint, {
-            query: Object.assign({stat}, query),
-            success: deferred.resolve.bind(deferred),
-            error: deferred.reject.bind(deferred),
-          });
-          return deferred;
-        })
-      )
-      .done(
-        function() {
-          let rawOrgData = {};
-          for (let i = 0; i < this.STAT_OPTS.length; i++) {
-            rawOrgData[this.STAT_OPTS[i]] = arguments[i][0];
-          }
-          this.setState({
-            rawOrgData,
-            formattedData: this.formatData(rawOrgData),
-          });
-        }.bind(this)
-      )
-      .fail(
-        function() {
-          this.setState({error: true});
-        }.bind(this)
-      );
-  },
-
-  getEndpoint() {
-    return `/organizations/${this.props.params.orgId}/stats/`;
-  },
-
-  formatData(rawData) {
-    return this.STAT_OPTS.map(stat => {
-      return {
-        data: rawData[stat].map(([x, y]) => {
-          return {x, y};
-        }),
-        label: stat,
-      };
-    });
-  },
-
-  render() {
-    if (this.state.error) {
-      return <LoadingError />;
-    }
-
-    if (!this.state.formattedData) {
-      return null;
-    }
-    let org = this.getOrganization();
-
-    return (
-      <div>
-        <Link className="btn-sidebar-header" to={`/organizations/${org.slug}/stats/`}>
-          {t('View Stats')}
-        </Link>
-        <h6 className="nav-header">{t('Events Per Hour')}</h6>
-        <StackedBarChart
-          series={this.state.formattedData}
-          className="dashboard-barchart standard-barchart"
-          label="events"
-          barClasses={this.STAT_OPTS}
-        />
-      </div>
-    );
-  },
-});
-
-export default EventsPerHour;
diff --git a/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx b/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
index d8360cff47..2e19c981a5 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
@@ -1,13 +1,8 @@
 import React from 'react';
 import createReactClass from 'create-react-class';
 
-import {t} from 'app/locale';
-import Button from 'app/components/buttons/button';
-import OrganizationHomeSidebar from 'app/components/organizations/homeSidebar';
 import OrganizationState from 'app/mixins/organizationState';
-import ProjectSelector from 'app/components/projectHeader/projectSelector';
 import ProjectNav from 'app/views/organizationDashboard/projectNav';
-import Tooltip from 'app/components/tooltip';
 
 const HomeContainer = createReactClass({
   displayName: 'HomeContainer',
@@ -15,73 +10,10 @@ const HomeContainer = createReactClass({
   mixins: [OrganizationState],
 
   render() {
-    let org = this.getOrganization();
-    let access = this.getAccess();
-    let hasNewDashboardFeature = this.getFeatures().has('dashboard');
-
     return (
       <div className={`${this.props.className || ''} organization-home`}>
-        {!hasNewDashboardFeature ? (
-          <React.Fragment>
-            <div className="sub-header flex flex-container flex-vertically-centered">
-              <div>
-                <ProjectSelector organization={org} />
-              </div>
-              <div className="align-right hidden-xs">
-                {access.has('project:write') ? (
-                  <Button
-                    to={`/organizations/${org.slug}/projects/new/`}
-                    priority="primary"
-                    style={{marginRight: 5}}
-                  >
-                    {t('New Project')}
-                  </Button>
-                ) : (
-                  <Tooltip
-                    title={t('You do not have enough permission to create new projects')}
-                    tooltipOptions={{placement: 'bottom'}}
-                  >
-                    <Button
-                      priority="primary"
-                      disabled
-                      data-placement="bottom"
-                      style={{marginRight: 5}}
-                    >
-                      {t('New Project')}
-                    </Button>
-                  </Tooltip>
-                )}
-                {access.has('team:write') ? (
-                  <Button to={`/organizations/${org.slug}/teams/new/`} priority="primary">
-                    {t('New Team')}
-                  </Button>
-                ) : (
-                  <Tooltip
-                    title={t('You do not have enough permission to create new teams')}
-                    tooltipOptions={{placement: 'bottom'}}
-                  >
-                    <Button priority="primary" disabled>
-                      {t('New Team')}
-                    </Button>
-                  </Tooltip>
-                )}
-              </div>
-            </div>
-            <div className="container">
-              <div className="content row">
-                <div className="col-md-2 org-sidebar">
-                  <OrganizationHomeSidebar />
-                </div>
-                <div className="col-md-10">{this.props.children}</div>
-              </div>
-            </div>
-          </React.Fragment>
-        ) : (
-          <React.Fragment>
-            <ProjectNav />
-            <div className="container">{this.props.children}</div>
-          </React.Fragment>
-        )}
+        <ProjectNav />
+        <div className="container">{this.props.children}</div>
       </div>
     );
   },
diff --git a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
deleted file mode 100644
index 6730b38c07..0000000000
--- a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
+++ /dev/null
@@ -1,152 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import createReactClass from 'create-react-class';
-import ListLink from 'app/components/listLink';
-import OrganizationState from 'app/mixins/organizationState';
-import HookStore from 'app/stores/hookStore';
-import {t} from 'app/locale';
-
-const OrgSettingsMenu = ({access, org, features}) => {
-  // Everything requires `org:write` or more permission except
-  // "Members" which requires `member:read`
-  if (!access.has('org:write') && !access.has('member:read')) return null;
-
-  let hasNewSettings = features.has('new-settings');
-  let pathPrefix = `${hasNewSettings ? '/settings' : '/organizations'}/${org.slug}`;
-
-  return (
-    <div>
-      <h6 className="nav-header with-divider">{t('Manage')}</h6>
-      <ul className="nav nav-stacked">
-        {access.has('org:read') &&
-          access.has('member:read') && (
-            <ListLink to={`${pathPrefix}/members/`}>
-              {t('Members')}&nbsp;
-              {access.has('org:write') &&
-                org.pendingAccessRequests > 0 && (
-                  <span className="badge" style={{marginLeft: 5}}>
-                    {org.pendingAccessRequests}
-                  </span>
-                )}
-            </ListLink>
-          )}
-        {features.has('sso') &&
-          access.has('org:admin') && (
-            <ListLink to={`${pathPrefix}/auth/`}>{t('Auth')}</ListLink>
-          )}
-
-        {access.has('org:admin') &&
-          features.has('api-keys') && (
-            <ListLink to={`${pathPrefix}/api-keys/`}>{t('API Keys')}</ListLink>
-          )}
-
-        {access.has('org:write') && (
-          <ListLink to={`${pathPrefix}/audit-log/`}>{t('Audit Log')}</ListLink>
-        )}
-        {access.has('org:write') && (
-          <ListLink to={`${pathPrefix}/rate-limits/`}>{t('Rate Limits')}</ListLink>
-        )}
-        {features.has('repos') &&
-          access.has('org:write') && (
-            <ListLink to={`${pathPrefix}/repos/`}>{t('Repositories')}</ListLink>
-          )}
-        {access.has('org:write') && (
-          <ListLink index to={`${pathPrefix}/`}>
-            {t('Settings')}
-          </ListLink>
-        )}
-      </ul>
-    </div>
-  );
-};
-
-OrgSettingsMenu.propTypes = {
-  access: PropTypes.object,
-  features: PropTypes.object,
-  org: PropTypes.object,
-};
-
-const HomeSidebar = createReactClass({
-  displayName: 'HomeSidebar',
-
-  contextTypes: {
-    location: PropTypes.object,
-  },
-
-  mixins: [OrganizationState],
-
-  getInitialState() {
-    // Allow injection via getsentry et all
-    let org = this.getOrganization();
-    let hooks = [];
-    HookStore.get('organization:sidebar').forEach(cb => {
-      hooks.push(cb(org));
-    });
-
-    return {
-      hooks,
-    };
-  },
-
-  render() {
-    let access = this.getAccess();
-    let features = this.getFeatures();
-    let org = this.getOrganization();
-
-    let hasNewSettings = features.has('new-settings');
-    let pathPrefix = `${hasNewSettings ? '/settings' : '/organizations'}/${org.slug}`;
-    let orgId = org.slug;
-
-    return (
-      <div>
-        <h6 className="nav-header">{t('Organization')}</h6>
-        <ul className="nav nav-stacked">
-          <ListLink
-            to={`/${orgId}/`}
-            isActive={() => {
-              // return true if path matches /organizations/slug-name/teams/ OR /organizations/slug-name/all-teams/
-              return /^\/[^\/]+\/$/.test(this.context.location.pathname);
-            }}
-          >
-            {t('Dashboard')}
-          </ListLink>
-
-          {!features.has('new-teams') && (
-            <ListLink to={`${pathPrefix}/teams/`}>{t('Projects & Teams')}</ListLink>
-          )}
-
-          {features.has('new-teams') && (
-            <ListLink to={`/organizations/${orgId}/projects/`}>
-              {t('Projects & Teams')}
-            </ListLink>
-          )}
-
-          {access.has('org:read') && (
-            <ListLink to={`/organizations/${orgId}/stats/`}>{t('Stats')}</ListLink>
-          )}
-        </ul>
-        <div>
-          <h6 className="nav-header with-divider">{t('Issues')}</h6>
-          <ul className="nav nav-stacked">
-            <ListLink to={`/organizations/${orgId}/issues/assigned/`}>
-              {t('Assigned to Me')}
-            </ListLink>
-            <ListLink to={`/organizations/${orgId}/issues/bookmarks/`}>
-              {t('Bookmarks')}
-            </ListLink>
-            <ListLink to={`/organizations/${orgId}/issues/history/`}>
-              {t('History')}
-            </ListLink>
-          </ul>
-        </div>
-
-        <OrgSettingsMenu access={access} features={features} org={org} />
-
-        {this.state.hooks}
-      </div>
-    );
-  },
-});
-
-export default HomeSidebar;
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index a73e492156..87b8168fc2 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -341,17 +341,10 @@ const ProjectSelector = createReactClass({
     const dropdownClassNames = classNames('project-dropdown', {
       'is-empty': !hasProjects,
     });
-    const hasNewDashboardFeature = features.has('dashboard');
 
     return (
       <div className="project-select">
         <h3>
-          {!hasNewDashboardFeature && (
-            <Link to={`/${org.slug}/`} className="home-crumb">
-              <span className="icon-home" />
-            </Link>
-          )}
-
           {this.state.activeProject ? (
             this.getLinkNode(this.state.activeTeam, this.state.activeProject)
           ) : (
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/activity.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/activity.jsx
deleted file mode 100644
index 8df2ae8b8e..0000000000
--- a/src/sentry/static/sentry/app/views/organizationDashboard/activity.jsx
+++ /dev/null
@@ -1,48 +0,0 @@
-import React from 'react';
-import {Link} from 'react-router';
-
-import ActivityFeed from 'app/components/activity/feed';
-import {t} from 'app/locale';
-
-export default class Activity extends React.Component {
-  getEndpoint = () => {
-    return `/organizations/${this.props.params.orgId}/activity/`;
-  };
-
-  refresh = () => {
-    this.refs.activityFeed.remountComponent();
-  };
-
-  getViewMoreLink() {
-    return `/organizations/${this.props.params.orgId}/activity/`;
-  }
-
-  render() {
-    return (
-      <div>
-        <div className="pull-right">
-          <Link className="btn btn-sm btn-default" to={this.getViewMoreLink()}>
-            {t('View more')}
-          </Link>
-          <a
-            className="btn btn-sm btn-default"
-            style={{marginLeft: 5}}
-            onClick={this.refresh}
-          >
-            <span className="icon icon-refresh" />
-          </a>
-        </div>
-        <h4>{t('Recent activity')}</h4>
-        <ActivityFeed
-          ref="activityFeed"
-          endpoint={this.getEndpoint()}
-          query={{
-            per_page: 10,
-          }}
-          pagination={false}
-          {...this.props}
-        />
-      </div>
-    );
-  }
-}
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/assignedIssues.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/assignedIssues.jsx
deleted file mode 100644
index a37702ef7d..0000000000
--- a/src/sentry/static/sentry/app/views/organizationDashboard/assignedIssues.jsx
+++ /dev/null
@@ -1,70 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {Link} from 'react-router';
-
-import {Panel, PanelBody, PanelItem} from 'app/components/panels';
-import IssueList from 'app/components/issueList';
-import {t} from 'app/locale';
-
-export default class AssignedIssues extends React.Component {
-  static propTypes = {
-    statsPeriod: PropTypes.string,
-    pageSize: PropTypes.number,
-  };
-
-  getEndpoint = () => {
-    return `/organizations/${this.props.params.orgId}/members/me/issues/assigned/?`;
-  };
-
-  getViewMoreLink = () => {
-    return `/organizations/${this.props.params.orgId}/issues/assigned/`;
-  };
-
-  renderEmpty = () => {
-    return (
-      <Panel>
-        <PanelBody>
-          <PanelItem justify="center">
-            {t('No issues have been assigned to you.')}
-          </PanelItem>
-        </PanelBody>
-      </Panel>
-    );
-  };
-
-  refresh = () => {
-    this.refs.issueList.remountComponent();
-  };
-
-  render() {
-    return (
-      <div>
-        <div className="pull-right">
-          <Link className="btn btn-sm btn-default" to={this.getViewMoreLink()}>
-            {t('View more')}
-          </Link>
-          <a
-            className="btn btn-sm btn-default"
-            style={{marginLeft: 5}}
-            onClick={this.refresh}
-          >
-            <span className="icon icon-refresh" />
-          </a>
-        </div>
-        <h4>Assigned to me</h4>
-        <IssueList
-          endpoint={this.getEndpoint()}
-          query={{
-            statsPeriod: this.props.statsPeriod,
-            per_page: this.props.pageSize,
-            status: 'unresolved',
-          }}
-          pagination={false}
-          renderEmpty={this.renderEmpty}
-          ref="issueList"
-          {...this.props}
-        />
-      </div>
-    );
-  }
-}
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
index 19fce682d2..0acc2162fe 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
@@ -16,7 +16,6 @@ import withTeams from 'app/utils/withTeams';
 import withProjects from 'app/utils/withProjects';
 import {t} from 'app/locale';
 
-import OldDashboard from './oldDashboard';
 import ProjectNav from './projectNav';
 import TeamSection from './teamSection';
 import EmptyState from './emptyState';
@@ -98,18 +97,12 @@ const OrganizationDashboard = createReactClass({
   mixins: [OrganizationState],
 
   render() {
-    const hasNewDashboardFeature = this.getFeatures().has('dashboard');
-
-    if (hasNewDashboardFeature) {
-      return (
-        <Flex flex="1" direction="column">
-          <ProjectNav />
-          <Dashboard organization={this.context.organization} {...this.props} />
-        </Flex>
-      );
-    } else {
-      return <OldDashboard {...this.props} />;
-    }
+    return (
+      <Flex flex="1" direction="column">
+        <ProjectNav />
+        <Dashboard organization={this.context.organization} {...this.props} />
+      </Flex>
+    );
   },
 });
 
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/oldDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/oldDashboard.jsx
deleted file mode 100644
index 603a3efb3e..0000000000
--- a/src/sentry/static/sentry/app/views/organizationDashboard/oldDashboard.jsx
+++ /dev/null
@@ -1,110 +0,0 @@
-import React from 'react';
-import createReactClass from 'create-react-class';
-import Reflux from 'reflux';
-
-import ApiMixin from 'app/mixins/apiMixin';
-import {loadStats} from 'app/actionCreators/projects';
-
-import GroupStore from 'app/stores/groupStore';
-import ProjectsStore from 'app/stores/projectsStore';
-import TeamStore from 'app/stores/teamStore';
-
-import EventsPerHour from 'app/components/events/eventsPerHour';
-import OrganizationHomeContainer from 'app/components/organizations/homeContainer';
-import OrganizationState from 'app/mixins/organizationState';
-import UnreleasedChanges from 'app/views/organizationDashboard/unreleasedChanges';
-import Resources from 'app/views/organizationDashboard/resources';
-import Activity from 'app/views/organizationDashboard/activity';
-import ProjectList from 'app/views/organizationDashboard/projectList';
-import ProjectListOld from 'app/views/organizationDashboard/projectListOld';
-import NewIssues from 'app/views/organizationDashboard/newIssues';
-import AssignedIssues from 'app/views/organizationDashboard/assignedIssues';
-
-const OrganizationDashboard = createReactClass({
-  displayName: 'OrganizationDashboard',
-  mixins: [
-    ApiMixin,
-    Reflux.listenTo(TeamStore, 'onTeamListChange'),
-    Reflux.listenTo(ProjectsStore, 'onProjectListChange'),
-    OrganizationState,
-  ],
-
-  getDefaultProps() {
-    return {
-      statsPeriod: '24h',
-      pageSize: 5,
-    };
-  },
-
-  getInitialState() {
-    return {
-      teams: TeamStore.getAll(),
-      projects: ProjectsStore.getAll(),
-    };
-  },
-
-  componentWillMount() {
-    loadStats(this.api, {
-      orgId: this.props.params.orgId,
-      query: {
-        since: new Date().getTime() / 1000 - 3600 * 24,
-        stat: 'generated',
-        group: 'project',
-      },
-    });
-  },
-
-  componentWillUnmount() {
-    GroupStore.reset();
-  },
-
-  onTeamListChange() {
-    this.setState({
-      teams: TeamStore.getAll(),
-    });
-  },
-
-  onProjectListChange() {
-    this.setState({
-      projects: ProjectsStore.getAll(),
-    });
-  },
-
-  render() {
-    let org = this.getOrganization();
-    let projects = org.projects;
-    let showResources = false;
-    if (projects.length == 1 && !projects[0].firstEvent) {
-      showResources = true;
-    }
-    let features = new Set(org.features);
-
-    return (
-      <OrganizationHomeContainer>
-        <div className="row">
-          <div className="col-md-8">
-            {features.has('unreleased-changes') && <UnreleasedChanges {...this.props} />}
-            {showResources && <Resources org={org} project={projects[0]} />}
-            {!showResources && (
-              <div>
-                <AssignedIssues {...this.props} />
-                <NewIssues {...this.props} />
-                <Activity {...this.props} />
-              </div>
-            )}
-          </div>
-          <div className="col-md-4">
-            <EventsPerHour {...this.props} />
-            {features.has('new-teams') ? (
-              <ProjectList {...this.props} projects={this.state.projects} />
-            ) : (
-              <ProjectListOld {...this.props} projects={this.state.projects} />
-            )}
-          </div>
-        </div>
-      </OrganizationHomeContainer>
-    );
-  },
-});
-
-export default OrganizationDashboard;
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/projectList.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/projectList.jsx
deleted file mode 100644
index 12457cc251..0000000000
--- a/src/sentry/static/sentry/app/views/organizationDashboard/projectList.jsx
+++ /dev/null
@@ -1,89 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import {Link} from 'react-router';
-
-import OrganizationState from 'app/mixins/organizationState';
-
-import ProjectSparkline from 'app/views/organizationDashboard/projectSparkline';
-import {sortArray} from 'app/utils';
-import {t, tct} from 'app/locale';
-
-const ProjectList = createReactClass({
-  displayName: 'ProjectList',
-
-  propTypes: {
-    projects: PropTypes.array,
-    maxProjects: PropTypes.number,
-  },
-
-  mixins: [OrganizationState],
-
-  getDefaultProps() {
-    return {
-      maxProjects: 8,
-    };
-  },
-
-  render() {
-    let org = this.getOrganization();
-    let {maxProjects} = this.props;
-
-    let projects = this.props.projects.filter(p => {
-      return p.isMember;
-    });
-    projects = sortArray(projects, item => {
-      return [!item.isBookmarked, item.name];
-    });
-
-    // project list is
-    // a) all bookmarked projects
-    // b) if bookmarked projcets < maxProjects, then fill with sorted projects until maxProjects
-
-    let bookmarkedProjects = projects.filter(p => p.isBookmarked);
-    if (bookmarkedProjects.length < maxProjects) {
-      projects = bookmarkedProjects.concat(
-        projects.slice(bookmarkedProjects.length, maxProjects)
-      );
-    } else {
-      projects = bookmarkedProjects;
-    }
-
-    return (
-      <div className="organization-dashboard-projects">
-        <Link className="btn-sidebar-header" to={`/organizations/${org.slug}/teams/`}>
-          {t('View All')}
-        </Link>
-        <h6 className="nav-header">{t('Projects')}</h6>
-        {bookmarkedProjects.length === 0 && (
-          <div className="alert alert-info" style={{marginBottom: 10}}>
-            {tct('Bookmark your most used [projects:projects] to have them appear here', {
-              projects: <Link to={`/organizations/${org.slug}/teams/`} />,
-            })}
-          </div>
-        )}
-        <ul className="nav nav-stacked">
-          {projects.map(project => {
-            return (
-              <li key={project.id} style={{clear: 'both'}}>
-                <div className="pull-right sparkline">
-                  {project.stats && <ProjectSparkline data={project.stats} />}
-                </div>
-                <Link to={`/${org.slug}/${project.slug}/`}>
-                  <h4 style={{margin: '25px 0px'}}>
-                    {project.isBookmarked && (
-                      <span className="bookmark icon-star-solid" />
-                    )}
-                    {project.slug}
-                  </h4>
-                </Link>
-              </li>
-            );
-          })}
-        </ul>
-      </div>
-    );
-  },
-});
-
-export default ProjectList;
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/projectListOld.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/projectListOld.jsx
deleted file mode 100644
index 97ba8e23a6..0000000000
--- a/src/sentry/static/sentry/app/views/organizationDashboard/projectListOld.jsx
+++ /dev/null
@@ -1,86 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import {Link} from 'react-router';
-
-import ProjectSparkline from 'app/views/organizationDashboard/projectSparkline';
-import OrganizationState from 'app/mixins/organizationState';
-import {sortArray} from 'app/utils';
-import {t, tct} from 'app/locale';
-
-const ProjectListOld = createReactClass({
-  displayName: 'ProjectListOld',
-
-  propTypes: {
-    projects: PropTypes.array,
-    maxProjects: PropTypes.number,
-  },
-
-  mixins: [OrganizationState],
-
-  getDefaultProps() {
-    return {
-      maxProjects: 8,
-    };
-  },
-
-  render() {
-    let org = this.getOrganization();
-    let {maxProjects, projects} = this.props;
-
-    projects = sortArray(projects, item => {
-      return [!item.isBookmarked, item.team && item.team.name, item.name];
-    });
-
-    // project list is
-    // a) all bookmarked projects
-    // b) if bookmarked projcets < maxProjects, then fill with sorted projects until maxProjects
-
-    let bookmarkedProjects = projects.filter(p => p.isBookmarked);
-    if (bookmarkedProjects.length < maxProjects) {
-      projects = bookmarkedProjects.concat(
-        projects.slice(bookmarkedProjects.length, maxProjects)
-      );
-    } else {
-      projects = bookmarkedProjects;
-    }
-
-    return (
-      <div className="organization-dashboard-projects">
-        <Link className="btn-sidebar-header" to={`/organizations/${org.slug}/teams/`}>
-          {t('View All')}
-        </Link>
-        <h6 className="nav-header">{t('Projects')}</h6>
-        {bookmarkedProjects.length === 0 && (
-          <div className="alert alert-info" style={{marginBottom: 10}}>
-            {tct('Bookmark your most used [projects:projects] to have them appear here', {
-              projects: <Link to={`/organizations/${org.slug}/teams/`} />,
-            })}
-          </div>
-        )}
-        <ul className="nav nav-stacked">
-          {projects.map(project => {
-            return (
-              <li key={project.id}>
-                <div className="pull-right sparkline">
-                  {project.stats && <ProjectSparkline data={project.stats} />}
-                </div>
-                <Link to={`/${org.slug}/${project.slug}/`}>
-                  <h4>
-                    {project.isBookmarked && (
-                      <span className="bookmark icon-star-solid" />
-                    )}
-                    {project.name}
-                  </h4>
-                  <h5>{project.team ? project.team.name : <span>&nbsp;</span>}</h5>
-                </Link>
-              </li>
-            );
-          })}
-        </ul>
-      </div>
-    );
-  },
-});
-
-export default ProjectListOld;
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/unreleasedChanges.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/unreleasedChanges.jsx
deleted file mode 100644
index 2412e30eb0..0000000000
--- a/src/sentry/static/sentry/app/views/organizationDashboard/unreleasedChanges.jsx
+++ /dev/null
@@ -1,99 +0,0 @@
-import React from 'react';
-import AsyncComponent from 'app/components/asyncComponent';
-import TimeSince from 'app/components/timeSince';
-import CommitLink from 'app/components/commitLink';
-import EmptyStateWarning from 'app/components/emptyStateWarning';
-import {Panel} from 'app/components/panels';
-
-import {t} from 'app/locale';
-
-export default class UnreleasedChanges extends AsyncComponent {
-  getEndpoints() {
-    return [
-      [
-        'unreleasedCommits',
-        `/organizations/${this.props.params.orgId}/members/me/unreleased-commits/`,
-      ],
-    ];
-  }
-
-  renderMessage = message => {
-    if (!message) {
-      return t('No message provided');
-    }
-
-    let firstLine = message.split(/\n/)[0];
-
-    return firstLine;
-  };
-
-  emptyState() {
-    return (
-      <Panel>
-        <EmptyStateWarning>
-          <p>
-            {t("We couldn't find any unreleased commits associated with your account.")}
-          </p>
-        </EmptyStateWarning>
-      </Panel>
-    );
-  }
-
-  missingEmails() {
-    return (
-      <Panel>
-        <EmptyStateWarning>
-          <p>{t("We couldn't find any commits associated with your account.")}</p>
-          <p>
-            <small>
-              {t(
-                'Have you added (and verified) the email address associated with your activity?'
-              )}
-            </small>
-          </p>
-        </EmptyStateWarning>
-      </Panel>
-    );
-  }
-
-  renderBody() {
-    let {unreleasedCommits} = this.state;
-    let {commits, errors, repositories} = unreleasedCommits;
-
-    if (errors && errors.missing_emails) return this.missingEmails();
-    if (!commits.length) return this.emptyState();
-    return (
-      <div className="panel panel-default">
-        <ul className="list-group list-group-lg commit-list">
-          {commits.map(commit => {
-            let repo = repositories[commit.repositoryID];
-            return (
-              <li className="list-group-item" key={commit.id}>
-                <div className="row row-center-vertically">
-                  <div className="col-xs-10">
-                    <h5 className="truncate">{this.renderMessage(commit.message)}</h5>
-                    <p>
-                      {repo.name} &mdash; <TimeSince date={commit.dateCreated} />
-                    </p>
-                  </div>
-                  <div className="col-xs-2 hidden-xs align-right">
-                    <CommitLink commitId={commit.id} repository={repo} />
-                  </div>
-                </div>
-              </li>
-            );
-          })}
-        </ul>
-      </div>
-    );
-  }
-
-  render() {
-    return (
-      <div>
-        <h4>{t('Unreleased Changes')}</h4>
-        {this.renderComponent()}
-      </div>
-    );
-  }
-}
diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
index bcef450ff4..06be318b53 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -9,7 +9,6 @@ import OrganizationContext from 'app/views/organizationContext';
 import NarrowLayout from 'app/components/narrowLayout';
 import Footer from 'app/components/footer';
 import LazyLoad from 'app/components/lazyLoad';
-import OldSidebar from 'app/components/sidebar.old'; // #NEW-SETTINGS
 import {t, tct} from 'app/locale';
 
 class DeletionInProgress extends Component {
@@ -127,8 +126,6 @@ class OrganizationDetailsBody extends Component {
 
   render() {
     let {organization} = this.context;
-    let hasNewDashboardFeatures =
-      organization && organization.features.indexOf('dashboard') > -1;
 
     if (organization.status)
       if (organization.status.id === 'pending_deletion') {
@@ -138,18 +135,15 @@ class OrganizationDetailsBody extends Component {
       }
     return (
       <React.Fragment>
-        {hasNewDashboardFeatures ? (
-          <LazyLoad
-            component={() =>
-              import(/*webpackChunkName: "NewSidebar"*/ 'app/components/sidebar').then(
-                mod => mod.default
-              )}
-            {...this.props}
-            organization={organization}
-          />
-        ) : (
-          <OldSidebar />
-        )}
+        <LazyLoad
+          component={() =>
+            import(/*webpackChunkName: "NewSidebar"*/ 'app/components/sidebar').then(
+              mod => mod.default
+            )}
+          {...this.props}
+          organization={organization}
+        />
+
         <ErrorBoundary>{this.props.children}</ErrorBoundary>
         <Footer />
       </React.Fragment>
diff --git a/src/sentry/static/sentry/less/layout.less b/src/sentry/static/sentry/less/layout.less
index e81a3383a8..3eaad0a590 100644
--- a/src/sentry/static/sentry/less/layout.less
+++ b/src/sentry/static/sentry/less/layout.less
@@ -420,7 +420,6 @@ footer {
   header {
     display: none;
   }
-  .org-sidebar,
   .toolbar {
     display: none;
   }
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index c131e346bf..e0c64fa85e 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -44,27 +44,6 @@
     }
   }
 
-  .dashboard-barchart {
-    height: 100px;
-    margin-bottom: 30px;
-
-    a {
-      > span {
-        left: 2px;
-        right: 2px;
-        background: @purple-light;
-
-        &.rejected {
-          background: @red-light;
-        }
-
-        &.blacklisted {
-          background: @gray;
-        }
-      }
-    }
-  }
-
   .count {
     font-size: 36px;
     color: @gray-dark;
@@ -191,41 +170,6 @@
   }
 }
 
-/**
-* Dashboard
-* ============================================================================
-*/
-.organization-dashboard-projects {
-  h4 {
-    font-size: 16px;
-    margin-bottom: 5px;
-  }
-  h5 {
-    font-size: 14px;
-    color: @gray-light;
-  }
-
-  .sparkline {
-    width: 100px;
-  }
-}
-
-.btn-sidebar-header {
-  float: right;
-  font-size: 12px;
-  color: @gray;
-  font-weight: bold;
-  line-height: 1em;
-}
-
-.org-sidebar {
-  .nav-stacked {
-    li.active a:after {
-      left: -30px;
-    }
-  }
-}
-
 /**
 * Team list
 * ============================================================================
diff --git a/tests/js/spec/components/eventsPerHour.spec.jsx b/tests/js/spec/components/eventsPerHour.spec.jsx
deleted file mode 100644
index 79bec34613..0000000000
--- a/tests/js/spec/components/eventsPerHour.spec.jsx
+++ /dev/null
@@ -1,30 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-import EventsPerHour from 'app/components/events/eventsPerHour';
-
-describe('EventsPerHour', function() {
-  const data = {
-    received: [[1461099600, 31734], [1461103200, 36790]],
-    blacklisted: [[1461099600, 0], [1461103200, 0]],
-    rejected: [[1461099600, 2867], [1461103200, 2742]],
-  };
-
-  it('should work', function() {
-    sinon.stub(EventsPerHour.prototype, 'fetchData');
-    let eventsPerHour = shallow(<EventsPerHour />).instance();
-    expect(eventsPerHour.formatData(data)).toEqual([
-      {
-        data: [{x: 1461099600, y: 31734}, {x: 1461103200, y: 36790}],
-        label: 'received',
-      },
-      {
-        data: [{x: 1461099600, y: 2867}, {x: 1461103200, y: 2742}],
-        label: 'rejected',
-      },
-      {
-        data: [{x: 1461099600, y: 0}, {x: 1461103200, y: 0}],
-        label: 'blacklisted',
-      },
-    ]);
-  });
-});
diff --git a/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap b/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap
index e3e976ea91..1d4c86892e 100644
--- a/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap
+++ b/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap
@@ -74,19 +74,6 @@ exports[`ProjectSelector render() can filter projects by project name 1`] = `
     className="project-select"
   >
     <h3>
-      <Link
-        className="home-crumb"
-        to="/org/"
-      >
-        <a
-          className="home-crumb"
-          href="/org/"
-        >
-          <span
-            className="icon-home"
-          />
-        </a>
-      </Link>
       <span
         onClick={[Function]}
         role="button"
@@ -267,19 +254,6 @@ exports[`ProjectSelector render() can filter projects by team name/project name
     className="project-select"
   >
     <h3>
-      <Link
-        className="home-crumb"
-        to="/org/"
-      >
-        <a
-          className="home-crumb"
-          href="/org/"
-        >
-          <span
-            className="icon-home"
-          />
-        </a>
-      </Link>
       <span
         onClick={[Function]}
         role="button"
@@ -413,14 +387,6 @@ exports[`ProjectSelector render() lists projects and has filter 1`] = `
   className="project-select"
 >
   <h3>
-    <Link
-      className="home-crumb"
-      to="/org/"
-    >
-      <span
-        className="icon-home"
-      />
-    </Link>
     <span
       onClick={[Function]}
       role="button"
@@ -488,14 +454,6 @@ exports[`ProjectSelector render() should show empty message and create project b
   className="project-select"
 >
   <h3>
-    <Link
-      className="home-crumb"
-      to="/org-slug/"
-    >
-      <span
-        className="icon-home"
-      />
-    </Link>
     <span
       onClick={[Function]}
       role="button"
@@ -555,14 +513,6 @@ exports[`ProjectSelector render() should show empty message with no projects but
   className="project-select"
 >
   <h3>
-    <Link
-      className="home-crumb"
-      to="/org-slug/"
-    >
-      <span
-        className="icon-home"
-      />
-    </Link>
     <span
       onClick={[Function]}
       role="button"
@@ -675,19 +625,6 @@ exports[`ProjectSelector render() shows empty filter message when filtering has
     className="project-select"
   >
     <h3>
-      <Link
-        className="home-crumb"
-        to="/org/"
-      >
-        <a
-          className="home-crumb"
-          href="/org/"
-        >
-          <span
-            className="icon-home"
-          />
-        </a>
-      </Link>
       <span
         onClick={[Function]}
         role="button"
diff --git a/tests/js/spec/views/organizationDashboard/__snapshots__/projectList.spec.jsx.snap b/tests/js/spec/views/organizationDashboard/__snapshots__/projectList.spec.jsx.snap
deleted file mode 100644
index 440ca49871..0000000000
--- a/tests/js/spec/views/organizationDashboard/__snapshots__/projectList.spec.jsx.snap
+++ /dev/null
@@ -1,87 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`ProjectList render() renders 1`] = `
-<div
-  className="organization-dashboard-projects"
->
-  <Link
-    className="btn-sidebar-header"
-    onlyActiveOnIndex={false}
-    style={Object {}}
-    to="/organizations/org-slug/teams/"
-  >
-    View All
-  </Link>
-  <h6
-    className="nav-header"
-  >
-    Projects
-  </h6>
-  <div
-    className="alert alert-info"
-    style={
-      Object {
-        "marginBottom": 10,
-      }
-    }
-  >
-    <span
-      key="5"
-    >
-      <span
-        key="0"
-      >
-        Bookmark your most used 
-      </span>
-      <Link
-        key="2"
-        onlyActiveOnIndex={false}
-        style={Object {}}
-        to="/organizations/org-slug/teams/"
-      >
-        <span
-          key="1"
-        >
-          projects
-        </span>
-      </Link>
-      <span
-        key="3"
-      >
-         to have them appear here
-      </span>
-    </span>
-  </div>
-  <ul
-    className="nav nav-stacked"
-  >
-    <li
-      key="2"
-      style={
-        Object {
-          "clear": "both",
-        }
-      }
-    >
-      <div
-        className="pull-right sparkline"
-      />
-      <Link
-        onlyActiveOnIndex={false}
-        style={Object {}}
-        to="/org-slug/project-slug/"
-      >
-        <h4
-          style={
-            Object {
-              "margin": "25px 0px",
-            }
-          }
-        >
-          project-slug
-        </h4>
-      </Link>
-    </li>
-  </ul>
-</div>
-`;
diff --git a/tests/js/spec/views/organizationDashboard/projectList.spec.jsx b/tests/js/spec/views/organizationDashboard/projectList.spec.jsx
deleted file mode 100644
index 85905d83af..0000000000
--- a/tests/js/spec/views/organizationDashboard/projectList.spec.jsx
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-
-import ProjectList from 'app/views/organizationDashboard/projectList';
-
-describe('ProjectList', function() {
-  describe('render()', function() {
-    it('renders', function() {
-      let wrapper = shallow(
-        <ProjectList projects={[TestStubs.Project({isMember: true})]} />,
-        {
-          context: {
-            router: TestStubs.router(),
-            organization: TestStubs.Organization(),
-          },
-        }
-      );
-      expect(wrapper).toMatchSnapshot();
-    });
-  });
-});
