commit 4df8ee2a42ea42c059fb3d3a9a37b0d54dc288d9
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Feb 9 13:53:09 2013 -0800

    Some initial tests for access group views

diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index d093648b74..8b9516693a 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -115,7 +115,10 @@ def remove_team(request, team):
     if not can_remove_team(request.user, team):
         return HttpResponseRedirect(reverse('sentry'))
 
-    form = RemoveTeamForm(request.POST or None)
+    if request.method == 'POST':
+        form = RemoveTeamForm(request.POST)
+    else:
+        form = RemoveTeamForm()
 
     if form.is_valid():
         team.delete()
@@ -546,7 +549,10 @@ def remove_access_group(request, team, group_id):
     except AccessGroup.DoesNotExist:
         return HttpResponseRedirect(reverse('sentry-manage-access-groups', args=[team.slug]))
 
-    form = RemoveAccessGroupForm(request.POST or None)
+    if request.method == 'POST':
+        form = RemoveAccessGroupForm(request.POST)
+    else:
+        form = RemoveAccessGroupForm()
 
     if form.is_valid():
         group.delete()
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index 0643718e4c..db397821f7 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -8,8 +8,8 @@ from django.contrib.auth.models import User
 from django.core.urlresolvers import reverse
 
 from sentry.constants import MEMBER_OWNER, MEMBER_USER
-from sentry.models import Team, TeamMember, PendingTeamMember
-from sentry.testutils import TestCase, fixture, before, with_settings
+from sentry.models import Team, TeamMember, PendingTeamMember, AccessGroup
+from sentry.testutils import TestCase, fixture, before
 
 
 class BaseTeamTest(TestCase):
@@ -296,3 +296,53 @@ class AcceptInviteTest(BaseTeamTest):
         resp = self.client.post(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
         self.assertTemplateUsed(resp, 'sentry/teams/members/accept_invite_unauthenticated.html')
         self.assertEquals(resp.status_code, 200)
+
+
+class BaseAccessGroupTest(BaseTeamTest):
+    @before
+    def create_group(self):
+        self.group = AccessGroup.objects.create(team=self.team, name='Test')
+
+
+class ManageAccessGroupsTest(BaseAccessGroupTest):
+    @fixture
+    def path(self):
+        return reverse('sentry-manage-access-groups', args=[self.team.slug])
+
+    def test_does_render_with_context(self):
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/teams/groups/list.html')
+        assert list(resp.context['group_list']) == [self.group]
+
+
+class AccessGroupDetailsTest(BaseAccessGroupTest):
+    @fixture
+    def path(self):
+        return reverse('sentry-edit-access-group', args=[self.team.slug, self.group.id])
+
+    def test_does_render_with_context(self):
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/teams/groups/details.html')
+        assert 'form' in resp.context
+        assert resp.context['group'] == self.group
+
+
+class RemoveAccessGroupTest(BaseAccessGroupTest):
+    @fixture
+    def path(self):
+        return reverse('sentry-remove-access-group', args=[self.team.slug, self.group.id])
+
+    def test_does_render_with_context(self):
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/teams/groups/remove.html')
+        assert 'form' in resp.context
+        assert resp.context['group'] == self.group
+
+    def test_does_delete(self):
+        resp = self.client.post(self.path, {})
+        assert resp.status_code == 302
+        assert resp['Location'] == 'http://testserver' + reverse('sentry-manage-access-groups', args=[self.team.slug])
+        assert not AccessGroup.objects.filter(id=self.group.id).exists()
