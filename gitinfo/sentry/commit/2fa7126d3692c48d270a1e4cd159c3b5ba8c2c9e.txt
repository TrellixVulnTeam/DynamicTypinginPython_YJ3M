commit 2fa7126d3692c48d270a1e4cd159c3b5ba8c2c9e
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jan 26 16:08:05 2013 -0800

    Correct dashboard tests

diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index d66e8642d1..23c838cd30 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -126,43 +126,71 @@ class RemoveProjectKeyTest(TestCase):
 class DashboardTest(TestCase):
     @fixture
     def path(self):
-        return reverse('sentry', args=[self.project.id])
+        return reverse('sentry', args=[self.team.slug])
 
     def test_requires_authentication(self):
         self.assertRequiresAuthentication(self.path)
 
-    def test_redirects_to_getting_started_if_no_groups(self):
+    @mock.patch('sentry.web.frontend.groups.can_create_projects')
+    def test_redirects_to_create_project_if_none_and_can_create_projects(self, can_create_projects):
         self.login_as(self.user)
 
-        manager = ManagerMock(Group.objects)
+        can_create_projects.return_value = True
 
-        with mock.patch('sentry.models.Group.objects', manager):
+        manager = ManagerMock(Project.objects)
+
+        with mock.patch('sentry.models.Project.objects', manager):
             resp = self.client.get(self.path)
 
+        can_create_projects.assert_called_once_with(self.user, team=self.team)
+
         manager.assert_chain_calls(
-            mock.call.filter(project=self.project),
+            mock.call.filter(team=self.team),
         )
-        manager.exists.assert_called_once_with()
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver' + reverse('sentry-get-started', args=[self.team.slug, self.project.slug])
+        assert resp['Location'] == 'http://testserver' + reverse('sentry-new-project', args=[self.team.slug])
 
-    @mock.patch('sentry.models.Group.objects', ManagerMock(Group.objects, Group()))
-    def test_redirects_to_stream_if_has_groups(self):
+    @mock.patch('sentry.web.frontend.groups.can_create_projects')
+    def test_does_not_reidrect_if_missing_project_permission(self, can_create_projects):
         self.login_as(self.user)
 
-        manager = ManagerMock(Group.objects, Group())
+        can_create_projects.return_value = False
+
+        manager = ManagerMock(Project.objects)
 
-        with mock.patch('sentry.models.Group.objects', manager):
+        with mock.patch('sentry.models.Project.objects', manager):
             resp = self.client.get(self.path)
 
+        can_create_projects.assert_called_once_with(self.user, team=self.team)
+
         manager.assert_chain_calls(
-            mock.call.filter(project=self.project),
+            mock.call.filter(team=self.team),
         )
-        manager.exists.assert_called_once_with()
 
-        assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver' + reverse('sentry-stream', args=[self.team.slug, self.project.slug])
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/dashboard.html')
+
+    @mock.patch('sentry.web.frontend.groups.can_create_projects')
+    def test_does_not_redirect_if_has_projects(self, can_create_projects):
+        self.login_as(self.user)
+
+        manager = ManagerMock(Project.objects, self.project)
+
+        with mock.patch('sentry.models.Project.objects', manager):
+            resp = self.client.get(self.path)
+
+        assert not can_create_projects.called
+
+        manager.assert_chain_calls(
+            mock.call.filter(team=self.team),
+        )
+
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/dashboard.html')
+        assert resp.context['team'] == self.team
+        assert resp.context['project_list'] == [self.project]
+        assert resp.context['SECTION'] == 'events'
 
 
 class GetStartedTest(TestCase):
diff --git a/tests/sentry/web/frontend/tests.py b/tests/sentry/web/frontend/tests.py
index ca4d96e0ef..3fd62c49ff 100644
--- a/tests/sentry/web/frontend/tests.py
+++ b/tests/sentry/web/frontend/tests.py
@@ -202,7 +202,7 @@ class GroupEventDetailsTest(BaseViewTest):
         self.login()
         resp = self.client.get(self.path)
         assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/groups/event.html')
+        self.assertTemplateUsed(resp, 'sentry/groups/details.html')
         assert 'group' in resp.context
         assert 'project' in resp.context
         assert 'team' in resp.context
