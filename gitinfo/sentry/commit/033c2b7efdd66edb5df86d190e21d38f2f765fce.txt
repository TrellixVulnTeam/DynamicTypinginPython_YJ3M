commit 033c2b7efdd66edb5df86d190e21d38f2f765fce
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Mar 14 01:13:18 2017 +0100

    Stop using safe_urlopen in symbolserver code

diff --git a/src/sentry/http.py b/src/sentry/http.py
index bbbae135c8..b47bc9d95c 100644
--- a/src/sentry/http.py
+++ b/src/sentry/http.py
@@ -146,13 +146,7 @@ class BlacklistAdapter(HTTPAdapter):
         return super(BlacklistAdapter, self).send(request, *args, **kwargs)
 
 
-class SafeSession(requests.Session):
-
-    def __init__(self):
-        requests.Session.__init__(self)
-        self.headers.update({'User-Agent': USER_AGENT})
-        self.mount('https://', BlacklistAdapter())
-        self.mount('http://', BlacklistAdapter())
+class Session(requests.Session):
 
     def request(self, *args, **kwargs):
         kwargs.setdefault('timeout', 30)
@@ -172,6 +166,15 @@ class SafeSession(requests.Session):
         return response
 
 
+class SafeSession(Session):
+
+    def __init__(self):
+        requests.Session.__init__(self)
+        self.headers.update({'User-Agent': USER_AGENT})
+        self.mount('https://', BlacklistAdapter())
+        self.mount('http://', BlacklistAdapter())
+
+
 build_session = SafeSession
 
 
diff --git a/src/sentry/lang/native/systemsymbols.py b/src/sentry/lang/native/systemsymbols.py
index b07e6c23f3..737578c1b0 100644
--- a/src/sentry/lang/native/systemsymbols.py
+++ b/src/sentry/lang/native/systemsymbols.py
@@ -6,7 +6,7 @@ from django.conf import settings
 
 from requests.exceptions import RequestException
 
-from sentry.http import safe_urlopen
+from sentry.http import Session
 from sentry.lang.native.utils import sdk_info_to_sdk_id
 
 
@@ -24,6 +24,8 @@ def lookup_system_symbols(symbols, sdk_info=None, cpu_name=None):
     if not settings.SYMBOL_SERVER_ENABLED:
         return
 
+    url = '%s/lookup' % settings.SYMBOL_SERVER_URL.rstrip('/')
+    sess = Session()
     symbol_query = {
         'sdk_id': sdk_info_to_sdk_id(sdk_info),
         'cpu_name': cpu_name,
@@ -31,15 +33,16 @@ def lookup_system_symbols(symbols, sdk_info=None, cpu_name=None):
     }
 
     attempts = 0
-    while 1:
-        try:
-            rv = safe_urlopen('%s/lookup' % settings.SYMBOL_SERVER_URL.rstrip('/'),
-                              method='POST', json=symbol_query)
-            rv.raise_for_status()
-            return rv.json()['symbols']
-        except (IOError, RequestException):
-            attempts += 1
-            if attempts > MAX_ATTEMPTS:
-                logger.error('Failed to contact system symbol server',
-                             exc_info=True)
-                return
+
+    with sess:
+        while 1:
+            try:
+                rv = sess.post(url, json=symbol_query)
+                rv.raise_for_status()
+                return rv.json()['symbols']
+            except (IOError, RequestException):
+                attempts += 1
+                if attempts > MAX_ATTEMPTS:
+                    logger.error('Failed to contact system symbol server',
+                                 exc_info=True)
+                    return
