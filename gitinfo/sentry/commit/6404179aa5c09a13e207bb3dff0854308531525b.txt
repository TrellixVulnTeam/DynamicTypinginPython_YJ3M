commit 6404179aa5c09a13e207bb3dff0854308531525b
Author: Eric Feng <erichfeng@gmail.com>
Date:   Wed Feb 24 16:30:24 2016 -0800

    fixing SECOND_PLATFORM test by firing first project signal first

diff --git a/tests/sentry/receivers/test_onboarding.py b/tests/sentry/receivers/test_onboarding.py
index dd55aba4f1..7df7ae76ba 100644
--- a/tests/sentry/receivers/test_onboarding.py
+++ b/tests/sentry/receivers/test_onboarding.py
@@ -121,6 +121,7 @@ class OrganizationOnboardingTaskTest(TestCase):
 
     def test_first_event_received(self):
         project = self.create_project(first_event=timezone.now())
+        project_created.send(project=project, user=self.user, sender=type(project))
         group = self.create_group(project=project, platform='javascript', message='javascript error message')
         first_event_received.send(project=project, group=group, sender=type(project))
 
@@ -130,26 +131,28 @@ class OrganizationOnboardingTaskTest(TestCase):
             status=OnboardingTaskStatus.COMPLETE,
         )
         assert task is not None
-        assert 'platform' in task.data['platform']
+        assert 'platform' in task.data
+        assert task.data['platform'] == 'javascript'
 
         second_project = self.create_project(first_event=timezone.now())
         project_created.send(project=second_project, user=self.user, sender=type(second_project))
         second_task = OrganizationOnboardingTask.objects.get(
-            organization=project.organization,
+            organization=second_project.organization,
             task=OnboardingTask.SECOND_PLATFORM,
             status=OnboardingTaskStatus.PENDING,
         )
         assert second_task is not None
 
         second_group = self.create_group(project=second_project, platform='python', message='python error message')
-        first_event_received.send(project=second_project, group=self.group, sender=type(second_project))
+        first_event_received.send(project=second_project, group=second_group, sender=type(second_project))
         second_task = OrganizationOnboardingTask.objects.get(
-            organization=project.organization,
+            organization=second_project.organization,
             task=OnboardingTask.SECOND_PLATFORM,
             status=OnboardingTaskStatus.COMPLETE,
         )
         assert second_task is not None
         assert 'platform' in second_task.data
+        assert second_task.data['platform'] == 'python'
         assert task.data['platform'] != second_task.data['platform']
 
     def test_member_invited(self):
