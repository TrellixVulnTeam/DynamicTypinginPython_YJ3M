commit c8960e59d24671e6947a2a2f5171fefd6e301f30
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu May 16 09:09:40 2019 -0700

    feat(ui): Add DatePickerField (#13205)
    
    * feat(ui): Add DatePickerField
    
    This is an input field with a calendar icon that when clicked, opens a calendar and allows the user to chooser a single date.
    
    * format to show date only
    
    * validate date input, fix dupe code

diff --git a/docs-ui/components/form.stories.js b/docs-ui/components/form.stories.js
index 16052ce8b0..79fecb7364 100644
--- a/docs-ui/components/form.stories.js
+++ b/docs-ui/components/form.stories.js
@@ -12,6 +12,7 @@ import {action} from '@storybook/addon-actions';
 import {boolean} from '@storybook/addon-knobs';
 import {storiesOf} from '@storybook/react';
 import {withInfo} from '@storybook/addon-info';
+import DatePickerField from 'app/views/settings/components/forms/datePickerField';
 import Form from 'app/views/settings/components/forms/form';
 import FormField from 'app/views/settings/components/forms/formField';
 import NewBooleanField from 'app/views/settings/components/forms/booleanField';
@@ -222,6 +223,17 @@ storiesOf('Forms|Fields', module)
       </Form>
     ))
   )
+  .add(
+    'DatePickerField',
+    withInfo({
+      text: 'Date picker field with a popup calendar picker (for a single date)',
+      propTablesExclude: [Form],
+    })(() => (
+      <Form>
+        <DatePickerField name="field" label="Date Picker Field" />
+      </Form>
+    ))
+  )
   .add(
     'RadioField',
     withInfo({
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/datePickerField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/datePickerField.jsx
new file mode 100644
index 0000000000..9f8fe32338
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/datePickerField.jsx
@@ -0,0 +1,102 @@
+import 'react-date-range/dist/styles.css';
+import 'react-date-range/dist/theme/default.css';
+
+import {Calendar} from 'react-date-range';
+import React from 'react';
+import moment from 'moment';
+import styled from 'react-emotion';
+
+import {inputStyles} from 'app/styles/input';
+import DropdownMenu from 'app/components/dropdownMenu';
+import InlineSvg from 'app/components/inlineSvg';
+import space from 'app/styles/space';
+
+import InputField from './inputField';
+
+export default class DatePickerField extends React.Component {
+  onChange = (onChange, onBlur, date) => {
+    onChange(date, {});
+    onBlur(date, {});
+  };
+
+  render() {
+    return (
+      <InputField
+        {...this.props}
+        field={({onChange, onBlur, value, disabled, name, id, ...props}) => {
+          const dateObj = new Date(value);
+          const inputValue = !isNaN(dateObj.getTime()) ? dateObj : new Date();
+          const dateString = moment(inputValue).format('LL');
+
+          return (
+            <DropdownMenu>
+              {({isOpen, getRootProps, getActorProps, getMenuProps}) => (
+                <DatePickerWrapper {...getRootProps({isStyled: true})}>
+                  <InputWrapper
+                    name={id}
+                    id={id}
+                    {...getActorProps({isStyled: true})}
+                    isOpen={isOpen}
+                  >
+                    <StyledInput readOnly value={dateString} />
+                    <CalendarIcon>
+                      <InlineSvg src="icon-calendar" />
+                    </CalendarIcon>
+                  </InputWrapper>
+
+                  {isOpen && (
+                    <CalendarMenu {...getMenuProps({isStyled: true})}>
+                      <Calendar
+                        disabled={disabled}
+                        date={inputValue}
+                        onChange={date => this.onChange(onChange, onBlur, date)}
+                      />
+                    </CalendarMenu>
+                  )}
+                </DatePickerWrapper>
+              )}
+            </DropdownMenu>
+          );
+        }}
+      />
+    );
+  }
+}
+
+const DatePickerWrapper = styled('div')``;
+const InputWrapper = styled('div')`
+  ${inputStyles}
+  cursor: text;
+  display: flex;
+  z-index: ${p => p.theme.zIndex.dropdownAutocomplete.actor};
+  ${p => p.isOpen && 'border-bottom-left-radius: 0'}
+`;
+
+const StyledInput = styled('input')`
+  border: none;
+  outline: none;
+  flex: 1;
+`;
+
+const CalendarMenu = styled('div')`
+  display: flex;
+  background: white;
+  position: absolute;
+  left: 0;
+  border: 1px solid ${p => p.theme.borderDark};
+  border-top: none;
+  z-index: ${p => p.theme.zIndex.dropdownAutocomplete.menu};
+  margin-top: -1px;
+
+  .rdrMonthAndYearWrapper {
+    height: 50px;
+    padding-top: 0;
+  }
+`;
+
+const CalendarIcon = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  padding: ${space(1)};
+`;
