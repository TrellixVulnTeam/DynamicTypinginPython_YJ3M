commit e955eacf5997108b4901238264fb63d60d700cac
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Feb 15 12:06:09 2018 -0800

    fix(translation): Fix a few translations (#7230)

diff --git a/src/sentry/static/sentry/app/components/confirm.jsx b/src/sentry/static/sentry/app/components/confirm.jsx
index 8e3198cd2c..08800925bb 100644
--- a/src/sentry/static/sentry/app/components/confirm.jsx
+++ b/src/sentry/static/sentry/app/components/confirm.jsx
@@ -3,6 +3,7 @@ import PropTypes from 'prop-types';
 import Modal from 'react-bootstrap/lib/Modal';
 
 import Button from './buttons/button';
+import {t} from '../locale';
 
 class Confirm extends React.PureComponent {
   static propTypes = {
@@ -18,8 +19,8 @@ class Confirm extends React.PureComponent {
 
   static defaultProps = {
     priority: 'primary',
-    cancelText: 'Cancel',
-    confirmText: 'Confirm',
+    cancelText: t('Cancel'),
+    confirmText: t('Confirm'),
   };
 
   constructor(...args) {
diff --git a/src/sentry/static/sentry/app/components/customResolutionModal.jsx b/src/sentry/static/sentry/app/components/customResolutionModal.jsx
index e5cc2fbb20..b0244eb267 100644
--- a/src/sentry/static/sentry/app/components/customResolutionModal.jsx
+++ b/src/sentry/static/sentry/app/components/customResolutionModal.jsx
@@ -49,12 +49,12 @@ export default class CustomResolutionModal extends React.Component {
     return (
       <Modal show={this.props.show} animation={false} onHide={this.props.onCanceled}>
         <div className="modal-header">
-          <h4>Resolved In</h4>
+          <h4>{t('Resolved In')}</h4>
         </div>
         <div className="modal-body">
           <form className="m-b-1">
             <div className="control-group m-b-1">
-              <h6 className="nav-header">Version</h6>
+              <h6 className="nav-header">{t('Version')}</h6>
               <Select2FieldAutocomplete
                 name="version"
                 onChange={v => this.onChange(v)}
diff --git a/src/sentry/static/sentry/app/components/events/sdk.jsx b/src/sentry/static/sentry/app/components/events/sdk.jsx
index ece81e2fb8..0ef271f45c 100644
--- a/src/sentry/static/sentry/app/components/events/sdk.jsx
+++ b/src/sentry/static/sentry/app/components/events/sdk.jsx
@@ -25,20 +25,20 @@ class EventSdk extends React.Component {
         <table className="table key-value">
           <tbody>
             <tr key="name">
-              <td className="key">Name</td>
+              <td className="key">{t('Name')}</td>
               <td className="value">
                 <pre>{data.name}</pre>
               </td>
             </tr>
             <tr key="version">
-              <td className="key">Version</td>
+              <td className="key">{t('Version')}</td>
               <td className="value">
                 <pre>{data.version}</pre>
               </td>
             </tr>
             {data.clientIP && (
               <tr key="clientIP">
-                <td className="key">Client IP</td>
+                <td className="key">{t('Client IP')}</td>
                 <td className="value">
                   <pre>{data.clientIP}</pre>
                 </td>
diff --git a/src/sentry/static/sentry/app/components/group/releaseChart.jsx b/src/sentry/static/sentry/app/components/group/releaseChart.jsx
index 82d5d8ab93..815aed9941 100644
--- a/src/sentry/static/sentry/app/components/group/releaseChart.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseChart.jsx
@@ -149,7 +149,7 @@ const GroupReleaseChart = createReactClass({
         <StackedBarChart
           points={points}
           height={40}
-          label="events"
+          label={t('events')}
           markers={markers}
           barClasses={['release', 'environment', 'inactive']}
           tooltip={this.renderTooltip}
diff --git a/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx b/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
index 7e16728948..c06fc43973 100644
--- a/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
@@ -118,7 +118,7 @@ const Broadcasts = createReactClass({
         <a
           className="broadcasts-toggle"
           onClick={this.onShowPanel}
-          title="Updates from Sentry"
+          title={t('Updates from Sentry')}
         >
           <span className="icon icon-globe" />
           {this.getUnseenIds() > 0 && <span className="activity-indicator" />}
diff --git a/src/sentry/static/sentry/app/views/apiApplicationDetails.jsx b/src/sentry/static/sentry/app/views/apiApplicationDetails.jsx
index 7c51dec8d5..ef691db322 100644
--- a/src/sentry/static/sentry/app/views/apiApplicationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/apiApplicationDetails.jsx
@@ -143,7 +143,7 @@ const ApiApplicationDetails = createReactClass({
       <DocumentTitle title={this.getTitle()}>
         <div>
           <form onSubmit={this.onSubmit} className="form-stacked">
-            <h4>Application Details</h4>
+            <h4>{t('Application Details')}</h4>
             {this.state.state === FormState.ERROR && (
               <div className="alert alert-error alert-block">
                 {t(
@@ -168,7 +168,7 @@ const ApiApplicationDetails = createReactClass({
                 label={t('Homepage')}
                 placeholder={t('e.g. http://example.com')}
                 value={this.state.formData.homepageUrl}
-                help="An optional link to your website's homepage"
+                help={t("An optional link to your website's homepage")}
                 required={false}
                 error={errors.homepageUrl}
                 onChange={this.onFieldChange.bind(this, 'homepageUrl')}
@@ -179,7 +179,7 @@ const ApiApplicationDetails = createReactClass({
                 label={t('Privacy Policy')}
                 placeholder={t('e.g. http://example.com/privacy')}
                 value={this.state.formData.privacyUrl}
-                help="An optional link to your Privacy Policy"
+                help={t('An optional link to your Privacy Policy')}
                 required={false}
                 error={errors.privacyUrl}
                 onChange={this.onFieldChange.bind(this, 'privacyUrl')}
@@ -190,14 +190,14 @@ const ApiApplicationDetails = createReactClass({
                 label={t('Terms of Service')}
                 placeholder={t('e.g. http://example.com/terms')}
                 value={this.state.formData.termsUrl}
-                help="An optional link to your Terms of Service"
+                help={t('An optional link to your Terms of Service')}
                 required={false}
                 error={errors.termsUrl}
                 onChange={this.onFieldChange.bind(this, 'termsUrl')}
               />
             </fieldset>
             <fieldset>
-              <legend>Credentials</legend>
+              <legend>{t('Credentials')}</legend>
               <div className="control-group">
                 <label htmlFor="api-key">Client ID</label>
                 <div className="form-control disabled">
@@ -214,27 +214,27 @@ const ApiApplicationDetails = createReactClass({
                   )}
                 </div>
                 <p className="help-block">
-                  Your secret is only available briefly after application creation. Make
-                  sure to save this value!
+                  {t(`Your secret is only available briefly after application creation. Make
+                  sure to save this value!`)}
                 </p>
               </div>
 
               <div className="control-group">
-                <label htmlFor="api-key">Authorization URL</label>
+                <label htmlFor="api-key">{t('Authorization URL')}</label>
                 <div className="form-control disabled">
                   <AutoSelectText>{`${urlPrefix}/oauth/authorize/`}</AutoSelectText>
                 </div>
               </div>
 
               <div className="control-group">
-                <label htmlFor="api-key">Token URL</label>
+                <label htmlFor="api-key">{t('Token URL')}</label>
                 <div className="form-control disabled">
                   <AutoSelectText>{`${urlPrefix}/oauth/token/`}</AutoSelectText>
                 </div>
               </div>
             </fieldset>
             <fieldset>
-              <legend>Security</legend>
+              <legend>{t('Security')}</legend>
               <TextareaField
                 key="redirectUris"
                 name="redirectUris"
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
index 009f20e179..28a339e49e 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
@@ -84,8 +84,8 @@ class OnboardingProject extends React.Component {
               <input
                 type="text"
                 name="name"
-                label="Project Name"
-                placeholder="Project name"
+                label={t('Project Name')}
+                placeholder={t('Project name')}
                 autoComplete="off"
                 value={this.props.name}
                 onChange={e => this.props.setName(e.target.value)}
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
index a7dfe68de3..5a8cc1398b 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
@@ -3,11 +3,11 @@ import React from 'react';
 import classnames from 'classnames';
 
 import ListLink from '../../../components/listLink';
-import {flattenedPlatforms, categoryLists} from '../utils';
+import {flattenedPlatforms, categoryList} from '../utils';
 import PlatformCard from './platformCard';
 import {t} from '../../../locale';
 
-const categoryList = Object.keys(categoryLists).concat('All');
+const allCategories = categoryList.concat({id: 'all', name: t('All')});
 
 class PlatformPicker extends React.Component {
   static propTypes = {
@@ -21,17 +21,18 @@ class PlatformPicker extends React.Component {
   constructor(...args) {
     super(...args);
     this.state = {
-      tab: categoryList[0],
+      tab: allCategories[0].id,
       filter: (this.props.platform || '').split('-')[0],
     };
   }
 
   renderPlatformList = () => {
     let {tab} = this.state;
+    const currentCategory = categoryList.find(({id}) => id === tab);
 
-    const tabSubset = flattenedPlatforms.filter(
-      platform => tab === 'All' || categoryLists[tab].includes(platform.id)
-    );
+    const tabSubset = flattenedPlatforms.filter(platform => {
+      return tab === 'all' || currentCategory.platforms.includes(platform.id);
+    });
 
     let subsetMatch = ({id}) => id.includes(this.state.filter.toLowerCase());
 
@@ -87,24 +88,24 @@ class PlatformPicker extends React.Component {
                 type="text"
                 value={this.state.filter}
                 className="platform-filter"
-                label="Filter"
+                label={t('Filter')}
                 placeholder="Filter"
                 onChange={e => this.setState({filter: e.target.value})}
               />
             </div>
           </li>
-          {categoryList.map(categoryName => {
+          {allCategories.map(({id, name}) => {
             return (
               <ListLink
-                key={categoryName}
+                key={id}
                 onClick={e => {
-                  this.setState({tab: categoryName, filter: ''});
+                  this.setState({tab: id, filter: ''});
                   e.preventDefault();
                 }}
                 to={''}
-                isActive={() => categoryName === (filter ? 'All' : this.state.tab)}
+                isActive={() => id === (filter ? 'all' : this.state.tab)}
               >
-                {categoryName}
+                {name}
               </ListLink>
             );
           })}
diff --git a/src/sentry/static/sentry/app/views/onboarding/utils.js b/src/sentry/static/sentry/app/views/onboarding/utils.js
index db755abd9f..8c783a2d9c 100644
--- a/src/sentry/static/sentry/app/views/onboarding/utils.js
+++ b/src/sentry/static/sentry/app/views/onboarding/utils.js
@@ -1,8 +1,9 @@
 // import {platforms} from '../../../../../integration-docs/_platforms.json';
 // eslint-disable-next-line import/extensions
 import {platforms} from 'integration-docs-platforms';
+import {t} from '../../locale';
 
-const Popular = [
+const popular = [
   'javascript',
   'javascript-react',
   'python-django',
@@ -22,7 +23,7 @@ const Popular = [
   'javascript-angular',
 ];
 
-const Frontend = [
+const frontend = [
   'javascript',
   'javascript-react',
   'javascript-angular',
@@ -32,9 +33,9 @@ const Frontend = [
   'javascript-vue',
 ];
 
-const Mobile = ['objc', 'swift', 'java-android', 'cocoa'];
+const mobile = ['objc', 'swift', 'java-android', 'cocoa'];
 
-const Backend = [
+const backend = [
   'go',
   'go-http',
   'java-appengine',
@@ -64,15 +65,15 @@ const Backend = [
   'ruby',
   'ruby-rails',
   'ruby-rack',
-  'exilir',
+  'elixir',
 ];
 
-const categoryLists = {
-  Popular,
-  Frontend,
-  Mobile,
-  Backend,
-};
+const categoryList = [
+  {id: 'popular', name: t('Popular'), platforms: popular},
+  {id: 'frontend', name: t('Frontend'), platforms: frontend},
+  {id: 'mobile', name: t('Mobile'), platforms: mobile},
+  {id: 'backend', name: t('Backend'), platforms: backend},
+];
 
 const additional = platforms.concat({
   integrations: [
@@ -80,11 +81,11 @@ const additional = platforms.concat({
       link: 'https://docs.getsentry.com/hosted/clients/',
       type: 'language',
       id: 'other',
-      name: 'Other',
+      name: t('Other'),
     },
   ],
   id: 'other',
-  name: 'Other',
+  name: t('Other'),
 });
 
 const flattenedPlatforms = [].concat(
@@ -99,9 +100,9 @@ const flattenedPlatforms = [].concat(
 const onboardingSteps = {organization: 0, project: 1, configure: 2};
 
 const stepDescriptions = {
-  organization: 'Create an organization in Sentry',
-  project: 'Tell us about your project',
-  configure: 'Configure your application and send an event',
+  organization: t('Create an organization in Sentry'),
+  project: t('Tell us about your project'),
+  configure: t('Configure your application and send an event'),
 };
 
 function getPlatformName(platform) {
@@ -113,6 +114,6 @@ export {
   onboardingSteps,
   stepDescriptions,
   flattenedPlatforms,
-  categoryLists,
+  categoryList,
   getPlatformName,
 };
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
index 0dc2b47cc0..5e5e5bd7c2 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
@@ -18,7 +18,7 @@ import IssueList from '../components/issueList';
 import OrganizationHomeContainer from '../components/organizations/homeContainer';
 import OrganizationState from '../mixins/organizationState';
 
-import {t} from '../locale';
+import {t, tct} from '../locale';
 import {sortArray} from '../utils';
 
 class AssignedIssues extends React.Component {
@@ -192,14 +192,14 @@ const ProjectList = createReactClass({
     return (
       <div className="organization-dashboard-projects">
         <Link className="btn-sidebar-header" to={`/organizations/${org.slug}/teams/`}>
-          View All
+          {t('View All')}
         </Link>
-        <h6 className="nav-header">Projects</h6>
+        <h6 className="nav-header">{t('Projects')}</h6>
         {bookmarkedProjects.length === 0 && (
           <div className="alert alert-info" style={{marginBottom: 10}}>
-            Bookmark your most used{' '}
-            <Link to={`/organizations/${org.slug}/teams/`}>projects</Link> to have them
-            appear here.
+            {tct('Bookmark your most used [projects] to have them appear here', {
+              projects: <Link to={`/organizations/${org.slug}/teams/`} />,
+            })}
           </div>
         )}
         <ul className="nav nav-stacked">
@@ -248,7 +248,7 @@ class Activity extends React.Component {
             <span className="icon icon-refresh" />
           </a>
         </div>
-        <h4>Recent activity</h4>
+        <h4>{t('Recent activity')}</h4>
         <ActivityFeed
           ref="activityFeed"
           endpoint={this.getEndpoint()}
diff --git a/src/sentry/static/sentry/app/views/projectEvents/index.jsx b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
index 06b1f1297b..ef1e69dfc3 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
@@ -201,7 +201,7 @@ const ProjectEvents = createReactClass({
           <div className="col-sm-5 release-search">
             <SearchBar
               defaultQuery=""
-              placeholder="Search event message"
+              placeholder={t('Search event message')}
               query={this.state.query}
               onSearch={this.onSearch}
             />
diff --git a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
index 87495d6a5d..350bf7d760 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
@@ -92,7 +92,7 @@ class ProjectInstallOverview extends React.Component {
           {tct(
             `
              For a complete list of
-             client integrations, please visit see [docLink:our in-depth documentation].
+             client integrations, please see [docLink:our in-depth documentation].
           `,
             {
               docLink: <a href="https://docs.sentry.io" />,
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsSearch.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsSearch.jsx
index 0e8d4024f1..b0ab40eb19 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsSearch.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsSearch.jsx
@@ -158,7 +158,7 @@ class SettingsSearch extends React.Component {
                 <SearchInput
                   {...getInputProps({
                     type: 'text',
-                    placeholder: 'Search settings',
+                    placeholder: t('Search settings'),
                   })}
                 />
               </SearchInputWrapper>
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index 5759c60aa2..726812af69 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -372,9 +372,9 @@ const StreamActions = createReactClass({
 
             <div className="btn-group">
               <Tooltip
-                title={`${this.props.realtimeActive
-                  ? 'Pause'
-                  : 'Enable'} real-time updates`}
+                title={tct('[action] real-time updates', {
+                  action: this.props.realtimeActive ? t('Pause') : t('Enable'),
+                })}
               >
                 <a
                   className="btn btn-default btn-sm hidden-xs realtime-control"
diff --git a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
index b74b29eaa4..d175fbc2ed 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
@@ -113,7 +113,7 @@ exports[`CreateProject render() should deal with incorrect platform name if its
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Popular"
+                key="popular"
                 onClick={[Function]}
                 to=""
               >
@@ -139,7 +139,7 @@ exports[`CreateProject render() should deal with incorrect platform name if its
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Frontend"
+                key="frontend"
                 onClick={[Function]}
                 to=""
               >
@@ -165,7 +165,7 @@ exports[`CreateProject render() should deal with incorrect platform name if its
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Mobile"
+                key="mobile"
                 onClick={[Function]}
                 to=""
               >
@@ -191,7 +191,7 @@ exports[`CreateProject render() should deal with incorrect platform name if its
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Backend"
+                key="backend"
                 onClick={[Function]}
                 to=""
               >
@@ -217,7 +217,7 @@ exports[`CreateProject render() should deal with incorrect platform name if its
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="All"
+                key="all"
                 onClick={[Function]}
                 to=""
               >
@@ -889,7 +889,7 @@ exports[`CreateProject render() should fill in platform name if its provided by
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Popular"
+                key="popular"
                 onClick={[Function]}
                 to=""
               >
@@ -915,7 +915,7 @@ exports[`CreateProject render() should fill in platform name if its provided by
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Frontend"
+                key="frontend"
                 onClick={[Function]}
                 to=""
               >
@@ -941,7 +941,7 @@ exports[`CreateProject render() should fill in platform name if its provided by
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Mobile"
+                key="mobile"
                 onClick={[Function]}
                 to=""
               >
@@ -967,7 +967,7 @@ exports[`CreateProject render() should fill in platform name if its provided by
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Backend"
+                key="backend"
                 onClick={[Function]}
                 to=""
               >
@@ -993,7 +993,7 @@ exports[`CreateProject render() should fill in platform name if its provided by
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="All"
+                key="all"
                 onClick={[Function]}
                 to=""
               >
@@ -1262,7 +1262,7 @@ exports[`CreateProject render() should fill in project name if its empty when pl
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Popular"
+                key="popular"
                 onClick={[Function]}
                 to=""
               >
@@ -1288,7 +1288,7 @@ exports[`CreateProject render() should fill in project name if its empty when pl
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Frontend"
+                key="frontend"
                 onClick={[Function]}
                 to=""
               >
@@ -1314,7 +1314,7 @@ exports[`CreateProject render() should fill in project name if its empty when pl
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Mobile"
+                key="mobile"
                 onClick={[Function]}
                 to=""
               >
@@ -1340,7 +1340,7 @@ exports[`CreateProject render() should fill in project name if its empty when pl
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="Backend"
+                key="backend"
                 onClick={[Function]}
                 to=""
               >
@@ -1366,7 +1366,7 @@ exports[`CreateProject render() should fill in project name if its empty when pl
                 activeClassName="active"
                 index={false}
                 isActive={[Function]}
-                key="All"
+                key="all"
                 onClick={[Function]}
                 to=""
               >
diff --git a/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
index dc22815981..5b2307fcdd 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
@@ -177,7 +177,7 @@ exports[`OnboardingWizard render() should render and respond to click events 1`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="Popular"
+                    key="popular"
                     onClick={[Function]}
                     to=""
                   >
@@ -203,7 +203,7 @@ exports[`OnboardingWizard render() should render and respond to click events 1`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="Frontend"
+                    key="frontend"
                     onClick={[Function]}
                     to=""
                   >
@@ -229,7 +229,7 @@ exports[`OnboardingWizard render() should render and respond to click events 1`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="Mobile"
+                    key="mobile"
                     onClick={[Function]}
                     to=""
                   >
@@ -255,7 +255,7 @@ exports[`OnboardingWizard render() should render and respond to click events 1`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="Backend"
+                    key="backend"
                     onClick={[Function]}
                     to=""
                   >
@@ -281,7 +281,7 @@ exports[`OnboardingWizard render() should render and respond to click events 1`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="All"
+                    key="all"
                     onClick={[Function]}
                     to=""
                   >
@@ -1031,7 +1031,7 @@ exports[`OnboardingWizard render() should render and respond to click events 2`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="Popular"
+                    key="popular"
                     onClick={[Function]}
                     to=""
                   >
@@ -1057,7 +1057,7 @@ exports[`OnboardingWizard render() should render and respond to click events 2`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="Frontend"
+                    key="frontend"
                     onClick={[Function]}
                     to=""
                   >
@@ -1083,7 +1083,7 @@ exports[`OnboardingWizard render() should render and respond to click events 2`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="Mobile"
+                    key="mobile"
                     onClick={[Function]}
                     to=""
                   >
@@ -1109,7 +1109,7 @@ exports[`OnboardingWizard render() should render and respond to click events 2`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="Backend"
+                    key="backend"
                     onClick={[Function]}
                     to=""
                   >
@@ -1135,7 +1135,7 @@ exports[`OnboardingWizard render() should render and respond to click events 2`]
                     activeClassName="active"
                     index={false}
                     isActive={[Function]}
-                    key="All"
+                    key="all"
                     onClick={[Function]}
                     to=""
                   >
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
index a7408de575..af55802db4 100644
--- a/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
@@ -165,7 +165,7 @@ exports[`Project render() should set required class on empty submit 1`] = `
             activeClassName="active"
             index={false}
             isActive={[Function]}
-            key="Popular"
+            key="popular"
             onClick={[Function]}
             to=""
           >
@@ -191,7 +191,7 @@ exports[`Project render() should set required class on empty submit 1`] = `
             activeClassName="active"
             index={false}
             isActive={[Function]}
-            key="Frontend"
+            key="frontend"
             onClick={[Function]}
             to=""
           >
@@ -217,7 +217,7 @@ exports[`Project render() should set required class on empty submit 1`] = `
             activeClassName="active"
             index={false}
             isActive={[Function]}
-            key="Mobile"
+            key="mobile"
             onClick={[Function]}
             to=""
           >
@@ -243,7 +243,7 @@ exports[`Project render() should set required class on empty submit 1`] = `
             activeClassName="active"
             index={false}
             isActive={[Function]}
-            key="Backend"
+            key="backend"
             onClick={[Function]}
             to=""
           >
@@ -269,7 +269,7 @@ exports[`Project render() should set required class on empty submit 1`] = `
             activeClassName="active"
             index={false}
             isActive={[Function]}
-            key="All"
+            key="all"
             onClick={[Function]}
             to=""
           >
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
index a76065856f..24fdad7a2c 100644
--- a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
@@ -35,7 +35,7 @@ exports[`PlatformPicker render() should only render Mobile platforms under Mobil
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Popular"
+      key="popular"
       onClick={[Function]}
       to=""
     >
@@ -45,7 +45,7 @@ exports[`PlatformPicker render() should only render Mobile platforms under Mobil
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Frontend"
+      key="frontend"
       onClick={[Function]}
       to=""
     >
@@ -55,7 +55,7 @@ exports[`PlatformPicker render() should only render Mobile platforms under Mobil
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Mobile"
+      key="mobile"
       onClick={[Function]}
       to=""
     >
@@ -65,7 +65,7 @@ exports[`PlatformPicker render() should only render Mobile platforms under Mobil
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Backend"
+      key="backend"
       onClick={[Function]}
       to=""
     >
@@ -75,7 +75,7 @@ exports[`PlatformPicker render() should only render Mobile platforms under Mobil
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="All"
+      key="all"
       onClick={[Function]}
       to=""
     >
@@ -148,7 +148,7 @@ exports[`PlatformPicker render() should render renderPlatformList with Python wh
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Popular"
+      key="popular"
       onClick={[Function]}
       to=""
     >
@@ -158,7 +158,7 @@ exports[`PlatformPicker render() should render renderPlatformList with Python wh
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Frontend"
+      key="frontend"
       onClick={[Function]}
       to=""
     >
@@ -168,7 +168,7 @@ exports[`PlatformPicker render() should render renderPlatformList with Python wh
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Mobile"
+      key="mobile"
       onClick={[Function]}
       to=""
     >
@@ -178,7 +178,7 @@ exports[`PlatformPicker render() should render renderPlatformList with Python wh
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Backend"
+      key="backend"
       onClick={[Function]}
       to=""
     >
@@ -188,7 +188,7 @@ exports[`PlatformPicker render() should render renderPlatformList with Python wh
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="All"
+      key="all"
       onClick={[Function]}
       to=""
     >
@@ -291,7 +291,7 @@ exports[`PlatformPicker render() should render renderPlatformList with community
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Popular"
+      key="popular"
       onClick={[Function]}
       to=""
     >
@@ -301,7 +301,7 @@ exports[`PlatformPicker render() should render renderPlatformList with community
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Frontend"
+      key="frontend"
       onClick={[Function]}
       to=""
     >
@@ -311,7 +311,7 @@ exports[`PlatformPicker render() should render renderPlatformList with community
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Mobile"
+      key="mobile"
       onClick={[Function]}
       to=""
     >
@@ -321,7 +321,7 @@ exports[`PlatformPicker render() should render renderPlatformList with community
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="Backend"
+      key="backend"
       onClick={[Function]}
       to=""
     >
@@ -331,7 +331,7 @@ exports[`PlatformPicker render() should render renderPlatformList with community
       activeClassName="active"
       index={false}
       isActive={[Function]}
-      key="All"
+      key="all"
       onClick={[Function]}
       to=""
     >
@@ -390,7 +390,7 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
         activeClassName="active"
         index={false}
         isActive={[Function]}
-        key="Popular"
+        key="popular"
         onClick={[Function]}
         to=""
       >
@@ -416,7 +416,7 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
         activeClassName="active"
         index={false}
         isActive={[Function]}
-        key="Frontend"
+        key="frontend"
         onClick={[Function]}
         to=""
       >
@@ -442,7 +442,7 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
         activeClassName="active"
         index={false}
         isActive={[Function]}
-        key="Mobile"
+        key="mobile"
         onClick={[Function]}
         to=""
       >
@@ -468,7 +468,7 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
         activeClassName="active"
         index={false}
         isActive={[Function]}
-        key="Backend"
+        key="backend"
         onClick={[Function]}
         to=""
       >
@@ -494,7 +494,7 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
         activeClassName="active"
         index={false}
         isActive={[Function]}
-        key="All"
+        key="all"
         onClick={[Function]}
         to=""
       >
diff --git a/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
index 876c2771cf..d7a8bae6fa 100644
--- a/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
+++ b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
@@ -4,7 +4,6 @@ import {shallow, mount} from 'enzyme';
 
 import {Client} from 'app/api';
 import PlatformPicker from 'app/views/onboarding/project/platformpicker';
-import {categoryLists} from 'app/views/onboarding/utils';
 import sinon from 'sinon';
 
 describe('PlatformPicker', function() {
@@ -32,13 +31,13 @@ describe('PlatformPicker', function() {
       };
 
       let wrapper = shallow(<PlatformPicker {...props} />);
-      wrapper.setState({tab: 'Mobile'});
+      wrapper.setState({tab: 'mobile'});
       let filteredPlatforms = wrapper
         .find('PlatformCard')
         .map(node => node.prop('platform'));
 
       expect(filteredPlatforms).not.toContain('java');
-      expect(filteredPlatforms).toContain(categoryLists.Mobile[0]);
+      expect(filteredPlatforms).toContain('swift');
 
       expect(wrapper).toMatchSnapshot();
     });
@@ -50,7 +49,7 @@ describe('PlatformPicker', function() {
 
       let wrapper = shallow(<PlatformPicker {...props} />);
 
-      wrapper.setState({tab: 'All', filter: 'py'});
+      wrapper.setState({tab: 'all', filter: 'py'});
 
       let filteredPlatforms = wrapper
         .find('PlatformCard')
@@ -92,13 +91,13 @@ describe('PlatformPicker', function() {
         .find('ListLink')
         .last()
         .find('a');
-      expect(wrapper.state().tab).toBe('Popular');
-      expect(wrapper.state().tab).not.toBe('All');
+      expect(wrapper.state().tab).toBe('popular');
+      expect(wrapper.state().tab).not.toBe('all');
 
       testListLink.simulate('click');
 
-      expect(wrapper.state().tab).not.toBe('Popular');
-      expect(wrapper.state().tab).toBe('All');
+      expect(wrapper.state().tab).not.toBe('popular');
+      expect(wrapper.state().tab).toBe('all');
 
       expect(wrapper).toMatchSnapshot();
     });
