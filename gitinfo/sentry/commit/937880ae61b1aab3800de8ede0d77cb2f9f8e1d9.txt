commit 937880ae61b1aab3800de8ede0d77cb2f9f8e1d9
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Mar 25 17:57:13 2012 -0700

    Allow plugins to hook create_event permission

diff --git a/docs/developer/plugins/permissions.rst b/docs/developer/plugins/permissions.rst
index ab15072a58..d19852a796 100644
--- a/docs/developer/plugins/permissions.rst
+++ b/docs/developer/plugins/permissions.rst
@@ -57,4 +57,13 @@ This page attempts to describe those permissions, and the contextual objects alo
 
          ::
 
-            >>> has_perm('remove_project_member', user, member)
\ No newline at end of file
+            >>> has_perm('remove_project_member', user, member)
+
+
+.. data:: create_event
+
+         Controls whether a user can create an event on a project (via the API).
+
+         ::
+
+            >>> has_perm('create_event', user, project)
\ No newline at end of file
diff --git a/sentry/coreapi.py b/sentry/coreapi.py
index a387114d55..e6c4ec11d3 100644
--- a/sentry/coreapi.py
+++ b/sentry/coreapi.py
@@ -21,6 +21,7 @@ from django.utils.encoding import smart_str
 from sentry.conf import settings
 # from sentry.exceptions import InvalidData, InvalidInterface
 from sentry.models import ProjectMember
+from sentry.plugins import plugins
 from sentry.tasks.store import store_event
 from sentry.utils import is_float, json
 from sentry.utils.auth import get_signature, parse_auth_header
@@ -84,6 +85,10 @@ def project_from_auth_vars(auth_vars, data):
 
         project = pm.project
         secret_key = pm.secret_key
+
+        result = plugins.first('has_perm', pm.user, 'create_event', pm.project)
+        if result is False:
+            raise APIUnauthorized()
     else:
         project = None
         secret_key = settings.KEY
@@ -123,6 +128,10 @@ def project_from_api_key_and_id(api_key, project_id):
     if not pm.is_active or pm.user and not pm.user.is_active:
         raise APIUnauthorized('Account is not active')
 
+    result = plugins.first('has_perm', pm.user, 'create_event', pm.project)
+    if result is False:
+        raise APIUnauthorized()
+
     return pm.project
 
 
@@ -145,6 +154,10 @@ def project_from_id(request):
     if not pm.is_active:
         raise APIUnauthorized()
 
+    result = plugins.first('has_perm', request.user, 'create_event', pm.project)
+    if result is False:
+        raise APIUnauthorized()
+
     return pm.project
 
 
