commit 5f8274b99e0dd2eb5374c5c29d10de0bc30c7c99
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Aug 16 15:26:32 2018 -0700

    ref(ui): Remove duplicated styles from org header dropdown sections (#9349)
    
    Use a common `<HeaderItem>` component instead.

diff --git a/src/sentry/static/sentry/app/components/organizations/headerItem.jsx b/src/sentry/static/sentry/app/components/organizations/headerItem.jsx
new file mode 100644
index 0000000000..bdd8a7113c
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/organizations/headerItem.jsx
@@ -0,0 +1,54 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import styled from 'react-emotion';
+import {Flex} from 'grid-emotion';
+
+import space from 'app/styles/space';
+
+class HeaderItem extends React.Component {
+  static propTypes = {
+    label: PropTypes.node,
+    align: PropTypes.oneOf(['right', 'left']),
+
+    /**
+     * className for <Label> component
+     */
+    labelClassName: PropTypes.string,
+  };
+
+  static defaultProps = {
+    align: 'right',
+  };
+
+  render() {
+    const {className, labelClassName, label, align, children} = this.props;
+
+    return (
+      <StyledHeaderItem align={align} className={className}>
+        <Label className={labelClassName}>{label}</Label>
+        {children}
+      </StyledHeaderItem>
+    );
+  }
+}
+
+export default HeaderItem;
+
+const StyledHeaderItem = styled(props => (
+  <Flex direction="column" justify="center" {...props} />
+))`
+  text-align: ${p => p.align};
+
+  .dropdown-actor-title {
+    font-size: 15px;
+    height: auto;
+    color: ${p => p.theme.button.default.colorActive};
+  }
+`;
+
+const Label = styled('label')`
+  font-weight: 400;
+  font-size: 13px;
+  color: ${p => p.theme.gray6};
+  margin-bottom: ${space(1)};
+`;
diff --git a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
index 2c55dab1d4..595f840a58 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
@@ -1,7 +1,6 @@
-import {Flex, Box} from 'grid-emotion';
+import {Box} from 'grid-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
-import styled from 'react-emotion';
 
 import {fetchOrganizationEnvironments} from 'app/actionCreators/environments';
 import {t} from 'app/locale';
@@ -12,6 +11,8 @@ import MultiSelectField from 'app/components/forms/multiSelectField';
 import SentryTypes from 'app/sentryTypes';
 import withApi from 'app/utils/withApi';
 
+import HeaderItem from './headerItem';
+
 /**
  * Environment Selector
  */
@@ -39,8 +40,7 @@ class MultipleEnvironmentSelector extends React.Component {
     const summary = value && value.length ? `${value.join(', ')}` : t('All Environments');
 
     return (
-      <Flex direction="column" justify="center" className={className}>
-        <label>{t('Environment')}</label>
+      <HeaderItem label={t('Environment')} className={className}>
         <DropdownLink
           title={summary}
           alwaysRenderMenu={false}
@@ -70,27 +70,12 @@ class MultipleEnvironmentSelector extends React.Component {
             </FetchOrganizationEnvironments>
           </Box>
         </DropdownLink>
-      </Flex>
+      </HeaderItem>
     );
   }
 }
 
-const StyledMultipleEnvironmentSelector = styled(withApi(MultipleEnvironmentSelector))`
-  text-align: right;
-  label {
-    font-weight: 400;
-    font-size: 13px;
-    color: #afa3bb;
-    margin-bottom: 12px;
-  }
-  .dropdown-actor-title {
-    font-size: 15px;
-    height: auto;
-    color: ${p => p.theme.button.default.colorActive};
-  }
-`;
-
-export default StyledMultipleEnvironmentSelector;
+export default withApi(MultipleEnvironmentSelector);
 
 const FetchOrganizationEnvironments = withApi(
   class FetchOrganizationEnvironments extends React.Component {
diff --git a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
index 4245b5fc6d..c0b26c5558 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
@@ -1,15 +1,16 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import moment from 'moment';
-import styled from 'react-emotion';
-import {Flex, Box} from 'grid-emotion';
+import {Box} from 'grid-emotion';
 
 import DropdownLink from 'app/components/dropdownLink';
 import Button from 'app/components/buttons/button';
 import MultiSelectField from 'app/components/forms/multiSelectField';
 import {t} from 'app/locale';
 
-class MultipleProjectSelector extends React.Component {
+import HeaderItem from './headerItem';
+
+export default class MultipleProjectSelector extends React.Component {
   static propTypes = {
     value: PropTypes.array,
     projects: PropTypes.array,
@@ -41,8 +42,7 @@ class MultipleProjectSelector extends React.Component {
     });
 
     return (
-      <Flex direction="column" justify="center" className={className}>
-        <label>{t('Projects')}</label>
+      <HeaderItem className={className} label={t('Projects')}>
         <DropdownLink title={summary} keepMenuOpen={true} anchorRight={true}>
           <Box p={2}>
             searched project list
@@ -55,22 +55,7 @@ class MultipleProjectSelector extends React.Component {
             <Button onClick={onUpdate}>{t('Update')}</Button>
           </Box>
         </DropdownLink>
-      </Flex>
+      </HeaderItem>
     );
   }
 }
-
-export default styled(MultipleProjectSelector)`
-  text-align: right;
-  label {
-    font-weight: 400;
-    font-size: 13px;
-    color: ${p => p.theme.gray6};
-    margin-bottom: 12px;
-  }
-  .dropdown-actor-title {
-    font-size: 15px;
-    height: auto;
-    color: ${p => p.theme.button.default.colorActive};
-  }
-`;
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
index 4ac2381de5..f114f812d1 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
@@ -1,11 +1,11 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import moment from 'moment';
-import styled from 'react-emotion';
 import {Flex} from 'grid-emotion';
 
-import DropdownLink from 'app/components/dropdownLink';
 import Button from 'app/components/buttons/button';
+import HeaderItem from 'app/components/organizations/headerItem';
+import DropdownLink from 'app/components/dropdownLink';
 import DynamicWrapper from 'app/components/dynamicWrapper';
 import {t} from 'app/locale';
 
@@ -85,8 +85,7 @@ class TimeRangeSelector extends React.Component {
       : `${ALLOWED_RELATIVE_DATES[relative]}`;
 
     return (
-      <Flex direction="column" justify="center" className={className}>
-        <Label>{t('Time range')}</Label>
+      <HeaderItem className={className} label={t('Time Range')}>
         <DropdownLink
           title={<DynamicWrapper value={summary} fixed="start to end" />}
           keepMenuOpen={true}
@@ -109,26 +108,9 @@ class TimeRangeSelector extends React.Component {
             </div>
           </Flex>
         </DropdownLink>
-      </Flex>
+      </HeaderItem>
     );
   }
 }
 
-const StyledTimeRangeSelector = styled(TimeRangeSelector)`
-  text-align: right;
-
-  .dropdown-actor-title {
-    font-size: 15px;
-    height: auto;
-    color: ${p => p.theme.button.default.colorActive};
-  }
-`;
-
-const Label = styled('label')`
-  font-weight: 400;
-  font-size: 13px;
-  color: ${p => p.theme.gray6};
-  margin-bottom: 12px;
-`;
-
-export default StyledTimeRangeSelector;
+export default TimeRangeSelector;
