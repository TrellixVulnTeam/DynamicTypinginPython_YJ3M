commit ad962f206081622558da31e1ecc895405dfd2a54
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Thu Jul 26 15:41:36 2018 -0700

    feat(integrations): Handle VSTS Permissions error (#9170)
    
    * Added permissions error information
    
    * got the thing working, but the code isn't wonderful.
    
    * Removed provider error
    
    * removed error from pipeline.
    
    * Changed the error checking to be less brittle.
    
    * Reraised error that is not matching.
    
    * Added filter to the query. re-raised error.

diff --git a/src/sentry/integrations/pipeline.py b/src/sentry/integrations/pipeline.py
index 933706892c..0629666545 100644
--- a/src/sentry/integrations/pipeline.py
+++ b/src/sentry/integrations/pipeline.py
@@ -12,7 +12,7 @@ from sentry.constants import ObjectStatus
 from sentry.models import Identity, IdentityProvider, IdentityStatus, Integration
 from sentry.pipeline import Pipeline
 from sentry.utils import json
-
+from sentry.integrations.exceptions import IntegrationError
 from . import default_manager
 
 DIALOG_RESPONSE = """
@@ -50,7 +50,11 @@ class IntegrationPipeline(Pipeline):
     provider_manager = default_manager
 
     def finish_pipeline(self):
-        data = self.provider.build_integration(self.state.data)
+        try:
+            data = self.provider.build_integration(self.state.data)
+        except IntegrationError as e:
+            return self.error(e.message)
+
         response = self._finish_pipeline(data)
         self.clear_session()
         return response
diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index 3cc273801f..73a16894d8 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -8,7 +8,7 @@ from django.utils.translation import ugettext as _
 from sentry import http
 from sentry.models import Integration as IntegrationModel, IntegrationExternalProject
 from sentry.integrations import Integration, IntegrationFeatures, IntegrationProvider, IntegrationMetadata
-from sentry.integrations.exceptions import ApiError
+from sentry.integrations.exceptions import ApiError, IntegrationError
 from sentry.integrations.repositories import RepositoryMixin
 from sentry.integrations.vsts.issues import VstsIssueSync
 from sentry.pipeline import NestedPipelineView
@@ -228,9 +228,8 @@ class VstsIntegrationProvider(IntegrationProvider):
             },
         }
 
-        try:
-            IntegrationModel.objects.get(provider='vsts', external_id=account['AccountId'])
-        except IntegrationModel.DoesNotExist:
+        if not IntegrationModel.objects.filter(
+                provider='vsts', external_id=account['AccountId']).exists():
             subscription_id, subscription_secret = self.create_subscription(
                 instance, account['AccountId'], oauth_data)
             integration['metadata']['subscription'] = {
@@ -242,8 +241,16 @@ class VstsIntegrationProvider(IntegrationProvider):
 
     def create_subscription(self, instance, account_id, oauth_data):
         webhook = WorkItemWebhook()
-        subscription, shared_secret = webhook.create_subscription(
-            instance, oauth_data, self.oauth_redirect_url, account_id)
+        try:
+            subscription, shared_secret = webhook.create_subscription(
+                instance, oauth_data, self.oauth_redirect_url, account_id)
+        except ApiError as e:
+            if e.code != 400 or 'permission' not in e.message:
+                raise e
+            raise IntegrationError(
+                'You do not have sufficent account access to create an integration.\nPlease check with the owner of this account.'
+            )
+
         subscription_id = subscription['publisherInputs']['tfsSubscriptionId']
         return subscription_id, shared_secret
 
