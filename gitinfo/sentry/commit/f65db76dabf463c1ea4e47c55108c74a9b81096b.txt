commit f65db76dabf463c1ea4e47c55108c74a9b81096b
Author: Dan Fuller <dfuller@sentry.io>
Date:   Tue May 28 14:28:07 2019 -0700

    fix(api): Fix bug when creating incident comments while logged in as another user.
    
    Fixes SENTRY-AXJ

diff --git a/src/sentry/api/endpoints/organization_incident_comment_index.py b/src/sentry/api/endpoints/organization_incident_comment_index.py
index 7fce3bc5d1..fe989280e7 100644
--- a/src/sentry/api/endpoints/organization_incident_comment_index.py
+++ b/src/sentry/api/endpoints/organization_incident_comment_index.py
@@ -22,8 +22,7 @@ class OrganizationIncidentCommentIndexEndpoint(IncidentEndpoint):
             activity = create_incident_activity(
                 incident,
                 IncidentActivityType.COMMENT,
-                # XXX: Serialization fails if user is a `SimpleLazyObject`
-                user=request.user._wrapped,
+                user=request.user,
                 comment=serializer.object['comment']
             )
             return Response(serialize(activity, request.user), status=201)
diff --git a/src/sentry/api/serializers/models/incidentactivity.py b/src/sentry/api/serializers/models/incidentactivity.py
index 186b7a9b93..93d54749ee 100644
--- a/src/sentry/api/serializers/models/incidentactivity.py
+++ b/src/sentry/api/serializers/models/incidentactivity.py
@@ -8,6 +8,7 @@ from sentry.api.serializers import (
 )
 from sentry.utils.snuba import SnubaTSResult
 from sentry.api.serializers import serialize
+from sentry.api.serializers.models.user import UserSerializer
 from sentry.api.serializers.snuba import SnubaTSResultSerializer
 from sentry.incidents.models import IncidentActivity
 from sentry.utils.db import attach_foreignkey
@@ -19,9 +20,11 @@ class IncidentActivitySerializer(Serializer):
         attach_foreignkey(item_list, IncidentActivity.incident, related=('organization',))
         attach_foreignkey(item_list, IncidentActivity.event_stats_snapshot)
         attach_foreignkey(item_list, IncidentActivity.user)
+        user_serializer = UserSerializer()
         serialized_users = serialize(
             set(item.user for item in item_list if item.user_id),
             user=user,
+            serializer=user_serializer,
         )
         user_lookup = {user['id']: user for user in serialized_users}
         return {item: {'user': user_lookup.get(six.text_type(item.user_id))} for item in item_list}
