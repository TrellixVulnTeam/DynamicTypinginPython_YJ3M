commit dd4b6dc19ac522f126d99506feb82fc3e0367ffb
Author: David Cramer <dcramer@gmail.com>
Date:   Sat May 12 13:33:49 2012 -0500

    Revert countdown behavior until Celery is fixed

diff --git a/sentry/buffer/base.py b/sentry/buffer/base.py
index fae9d6d2bb..5d85ffdb93 100644
--- a/sentry/buffer/base.py
+++ b/sentry/buffer/base.py
@@ -36,7 +36,7 @@ class Buffer(object):
             'columns': columns,
             'filters': filters,
             'extra': extra,
-        }, countdown=5)
+        })
 
     def process(self, model, columns, filters, extra=None):
         update_kwargs = dict((c, F(c) + v) for c, v in columns.iteritems())
diff --git a/setup.py b/setup.py
index 095f2413d9..84d0b36527 100755
--- a/setup.py
+++ b/setup.py
@@ -64,7 +64,7 @@ install_requires = [
 
 setup(
     name='sentry',
-    version='4.2.4',
+    version='4.2.5',
     author='David Cramer',
     author_email='dcramer@gmail.com',
     url='http://github.com/dcramer/sentry',
diff --git a/tests/sentry/buffer/base/tests.py b/tests/sentry/buffer/base/tests.py
index 28588d9cd4..c7b6d57cec 100644
--- a/tests/sentry/buffer/base/tests.py
+++ b/tests/sentry/buffer/base/tests.py
@@ -22,7 +22,7 @@ class BufferTest(TestCase):
         filters = {'pk': 1}
         self.buf.incr(model, columns, filters)
         kwargs = dict(model=model, columns=columns, filters=filters, extra=None)
-        maybe_async.assert_called_once_with(process_incr, kwargs=kwargs, countdown=5)
+        maybe_async.assert_called_once_with(process_incr, kwargs=kwargs)
 
     def test_process_saves_data(self):
         group = Group.objects.create(project=Project(id=1))
diff --git a/tests/sentry/buffer/redis/tests.py b/tests/sentry/buffer/redis/tests.py
index 11adb84408..6f1e543789 100644
--- a/tests/sentry/buffer/redis/tests.py
+++ b/tests/sentry/buffer/redis/tests.py
@@ -45,7 +45,7 @@ class RedisBufferTest(TestCase):
         filters = {'pk': 1}
         self.buf.incr(model, columns, filters)
         kwargs = dict(model=model, columns=columns, filters=filters, extra=None)
-        maybe_async.assert_called_once_with(process_incr, kwargs=kwargs, countdown=5)
+        maybe_async.assert_called_once_with(process_incr, kwargs=kwargs)
 
     @mock.patch('sentry.buffer.redis.RedisBuffer._make_extra_key', mock.Mock(return_value='extra'))
     @mock.patch('sentry.buffer.redis.RedisBuffer._make_key', mock.Mock(return_value='foo'))
