commit 489c06b925e381f5f149eb09ecbd5a99def9a3dd
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Nov 23 18:22:13 2015 -0800

    Pass entire request for internal API requests

diff --git a/src/sentry/api/client.py b/src/sentry/api/client.py
index 02b0b0dbd8..5a4b2c16b1 100644
--- a/src/sentry/api/client.py
+++ b/src/sentry/api/client.py
@@ -22,10 +22,12 @@ class ApiClient(object):
 
     ApiError = ApiError
 
-    def request(self, method, path, user, auth=None, params=None, data=None,
-                is_sudo=False):
+    def request(self, method, path, user=None, auth=None, params=None, data=None,
+                is_sudo=False, request=None):
         full_path = self.prefix + path
 
+        assert not (request and (user or auth)), 'use either request or auth'
+
         resolver_match = resolve(full_path)
         callback, callback_args, callback_kwargs = resolver_match
 
@@ -33,11 +35,20 @@ class ApiClient(object):
             # we encode to ensure compatibility
             data = json.loads(json.dumps(data))
 
+        if request:
+            user = request.user
+            auth = request.auth
+
         rf = APIRequestFactory()
         mock_request = getattr(rf, method.lower())(full_path, data)
         mock_request.auth = auth
         mock_request.user = user
         mock_request.is_sudo = lambda: is_sudo
+
+        if request:
+            # superuser checks require access to IP
+            mock_request.META['REMOTE_ADDR'] = request.META['REMOTE_ADDR']
+
         force_authenticate(mock_request, user, auth)
 
         if params:
diff --git a/src/sentry/api/endpoints/auth_index.py b/src/sentry/api/endpoints/auth_index.py
index 4d1b3a7c15..44177175ad 100644
--- a/src/sentry/api/endpoints/auth_index.py
+++ b/src/sentry/api/endpoints/auth_index.py
@@ -48,7 +48,7 @@ class AuthIndexEndpoint(Endpoint):
         # Must use the real request object that Django knows about
         login(request._request, request.user)
 
-        return client.get('/users/me/', request.user, request.auth)
+        return client.get('/users/me/', request=request)
 
     def delete(self, request, *args, **kwargs):
         """
diff --git a/src/sentry/api/endpoints/group_events_latest.py b/src/sentry/api/endpoints/group_events_latest.py
index f6b571e87f..1fd05e33d8 100644
--- a/src/sentry/api/endpoints/group_events_latest.py
+++ b/src/sentry/api/endpoints/group_events_latest.py
@@ -37,6 +37,6 @@ class GroupEventsLatestEndpoint(GroupEndpoint):
             return Response({'detail': 'No events found for group'}, status=404)
 
         try:
-            return client.get('/events/{}/'.format(event.id), request.user, request.auth)
+            return client.get('/events/{}/'.format(event.id), request=request)
         except client.ApiError as e:
             return Response(e.body, status=e.status_code)
diff --git a/src/sentry/api/endpoints/group_events_oldest.py b/src/sentry/api/endpoints/group_events_oldest.py
index da17292e4c..effb8db850 100644
--- a/src/sentry/api/endpoints/group_events_oldest.py
+++ b/src/sentry/api/endpoints/group_events_oldest.py
@@ -37,6 +37,6 @@ class GroupEventsOldestEndpoint(GroupEndpoint):
             return Response({'detail': 'No events found for group'}, status=404)
 
         try:
-            return client.get('/events/{}/'.format(event.id), request.user, request.auth)
+            return client.get('/events/{}/'.format(event.id), request=request)
         except client.ApiError as e:
             return Response(e.body, status=e.status_code)
