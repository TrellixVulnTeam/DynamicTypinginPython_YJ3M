commit d58870f8bf7ff2559b6184f5438d30d88acb51f5
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Jan 4 11:38:46 2018 -0800

    feat: Add basic fine tuning page UI (#6865)

diff --git a/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx b/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx
index 6fc0813d35..8b420f56f6 100644
--- a/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/accountNotificationSettings.jsx
@@ -11,7 +11,7 @@ const forms = [
     ],
     fineTuning: {
       text: 'Fine tune alerts by project',
-      path: 'alerts/',
+      path: 'project-alerts/',
     },
   },
 
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 8db323e81a..03bde450a6 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -5,6 +5,7 @@ import AccountAuthorizations from './views/accountAuthorizations';
 import AccountLayout from './views/accountLayout';
 import AccountSettingsLayout from './views/settings/account/accountSettingsLayout';
 import AccountNotifications from './views/settings/account/accountNotifications';
+import AccountNotificationFineTuning from './views/settings/account/accountNotificationFineTuning';
 import AccountEmails from './views/settings/account/accountEmails';
 import AccountAvatar from './views/settings/account/avatar';
 
@@ -118,12 +119,15 @@ function appendTrailingSlash(nextState, replaceState) {
 
 const accountSettingsRoutes = [
   <IndexRedirect key="account-settings-index" to="notifications/" />,
-  <Route
-    key="notifications/"
-    path="notifications/"
-    name="Notifications"
-    component={errorHandler(AccountNotifications)}
-  />,
+  <Route key="notifications/" path="notifications/" name="Notifications">
+    <IndexRoute component={errorHandler(AccountNotifications)} />,
+    <Route
+      key="project-alerts/"
+      path="project-alerts/"
+      name="Fine Tune Alerts"
+      component={errorHandler(AccountNotificationFineTuning)}
+    />,
+  </Route>,
   <Route
     key="emails/"
     path="emails/"
diff --git a/src/sentry/static/sentry/app/stores/projectsStore.jsx b/src/sentry/static/sentry/app/stores/projectsStore.jsx
index 6ec8422cce..388dce8eb2 100644
--- a/src/sentry/static/sentry/app/stores/projectsStore.jsx
+++ b/src/sentry/static/sentry/app/stores/projectsStore.jsx
@@ -52,6 +52,21 @@ const ProjectsStore = Reflux.createStore({
     return this.items;
   },
 
+  getAllGroupedByOrganization() {
+    return this.items.reduce((acc, project) => {
+      const orgSlug = project.organization.slug;
+      if (acc[orgSlug]) {
+        acc[orgSlug].projects.push(project);
+      } else {
+        acc[orgSlug] = {
+          organization: project.organization,
+          projects: [project],
+        };
+      }
+      return acc;
+    }, {});
+  },
+
   getById(id) {
     return this.items.find(project => project.id === id);
   },
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
new file mode 100644
index 0000000000..f4387e68cb
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
@@ -0,0 +1,83 @@
+import React from 'react';
+
+import AsyncView from '../../asyncView';
+import ApiForm from '../components/forms/apiForm';
+
+import Select2Field from '../components/forms/select2Field';
+import Panel from '../components/panel';
+import PanelBody from '../components/panelBody';
+import PanelHeader from '../components/panelHeader';
+
+import ProjectsStore from '../../../stores/projectsStore';
+
+const ACCOUNT_NOTIFICATION_FIELDS = {
+  'project-alerts/': {
+    name: 'subscribeByDefault',
+    type: 'select',
+    choices: [['default', 'Default'], ['on', 'On'], ['off', 'Off']],
+  },
+};
+
+export default class AccountNotificationDetails extends AsyncView {
+  getEndpoints() {
+    return [['notifications', '/users/me/notifications/'], ['projects', '/projects/']];
+  }
+
+  getFieldData(fieldName, projectList) {
+    ProjectsStore.loadInitialData(projectList);
+
+    const projectsByOrg = ProjectsStore.getAllGroupedByOrganization();
+
+    const fieldConfig = ACCOUNT_NOTIFICATION_FIELDS[fieldName];
+
+    // Display as select box in this view regardless of the type specified in the config
+    return Object.values(projectsByOrg).map(org => {
+      return {
+        name: org.organization.name,
+        projects: org.projects.map(project => {
+          return {
+            ...fieldConfig,
+            name: project.slug,
+            label: project.name,
+          };
+        }),
+      };
+    });
+  }
+
+  renderBody() {
+    const {path} = this.props.route;
+    const data = this.getFieldData(path, this.state.projects);
+
+    return (
+      <div>
+        <ApiForm apiMethod="PUT" apiEndpoint={'/users/me/notifications/'}>
+          <Panel>
+            <PanelHeader>
+              <div className="text-light">{this.props.route.name}</div>
+            </PanelHeader>
+
+            {data.map(org => {
+              return (
+                <div key={org.name}>
+                  <PanelHeader>{org.name}</PanelHeader>
+                  {org.projects.map((project, idx) => {
+                    return (
+                      <PanelBody key={idx}>
+                        <Select2Field
+                          name={project.name}
+                          choices={project.choices}
+                          label={project.label}
+                        />
+                      </PanelBody>
+                    );
+                  })}
+                </div>
+              );
+            })}
+          </Panel>
+        </ApiForm>
+      </div>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx
index af5ec3a14c..e89b32f320 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx
@@ -17,7 +17,7 @@ export default class FieldFromConfig extends React.Component {
   static propTypes = {
     field: PropTypes.shape({
       name: PropTypes.string,
-      type: PropTypes.oneOf(['string', 'array', 'boolean', 'radio']),
+      type: PropTypes.oneOf(['string', 'array', 'boolean', 'radio', 'select']),
       required: PropTypes.bool,
       multiline: PropTypes.bool,
       label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
