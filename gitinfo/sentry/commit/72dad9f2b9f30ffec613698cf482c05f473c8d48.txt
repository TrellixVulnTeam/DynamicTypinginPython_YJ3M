commit 72dad9f2b9f30ffec613698cf482c05f473c8d48
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jan 2 11:55:30 2018 -0800

    chore: pushState -> push (#6853)
    
    Deprecate pushState, required for React Router 3

diff --git a/src/sentry/static/sentry/app/components/group/releaseStats.jsx b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
index cec05862a1..0e87dd10f0 100644
--- a/src/sentry/static/sentry/app/components/group/releaseStats.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
@@ -137,7 +137,10 @@ const GroupReleaseStats = React.createClass({
     let queryParams = Object.assign({}, this.props.location.query);
     queryParams.environment = env;
 
-    browserHistory.pushState(null, this.props.location.pathname, queryParams);
+    browserHistory.push({
+      pathname: this.props.location.pathname,
+      query: queryParams,
+    });
   },
 
   render() {
diff --git a/src/sentry/static/sentry/app/components/pagination.jsx b/src/sentry/static/sentry/app/components/pagination.jsx
index 99d9ef6654..1ee1f5cbfe 100644
--- a/src/sentry/static/sentry/app/components/pagination.jsx
+++ b/src/sentry/static/sentry/app/components/pagination.jsx
@@ -18,9 +18,10 @@ export default class Pagination extends React.Component {
 
   static defaultProps = {
     onCursor: (cursor, path, query) => {
-      browserHistory.pushState(null, path, {
-        ...query,
-        cursor,
+      query.cursor = cursor;
+      browserHistory.push({
+        pathname: path,
+        query,
       });
     },
   };
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index a5eb65a27b..e862b429c4 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -148,7 +148,7 @@ const ProjectSelector = React.createClass({
       if (this.state.currentIndex > -1) {
         let url = this.getProjectUrlProps(projects[this.state.currentIndex][1]);
         if (url.to) {
-          browserHistory.pushState(null, url.to);
+          browserHistory.push(url.to);
         } else if (url.href) {
           window.location = url.href;
         }
diff --git a/src/sentry/static/sentry/app/components/resultGrid.jsx b/src/sentry/static/sentry/app/components/resultGrid.jsx
index a598cdd9f4..07577307ea 100644
--- a/src/sentry/static/sentry/app/components/resultGrid.jsx
+++ b/src/sentry/static/sentry/app/components/resultGrid.jsx
@@ -261,7 +261,10 @@ const ResultGrid = React.createClass({
 
     e.preventDefault();
 
-    browserHistory.pushState(null, this.props.path, targetQueryParams);
+    browserHistory.push({
+      pathname: this.props.path,
+      query: targetQueryParams,
+    });
   },
 
   onQueryChange(evt) {
diff --git a/src/sentry/static/sentry/app/views/apiNewToken.jsx b/src/sentry/static/sentry/app/views/apiNewToken.jsx
index bacfb470a9..66ecfcc7b8 100644
--- a/src/sentry/static/sentry/app/views/apiNewToken.jsx
+++ b/src/sentry/static/sentry/app/views/apiNewToken.jsx
@@ -16,11 +16,11 @@ export default class ApiNewToken extends AsyncView {
   }
 
   onCancel() {
-    browserHistory.pushState(null, '/api/');
+    browserHistory.push('/api/');
   }
 
   onSubmitSuccess() {
-    browserHistory.pushState(null, '/api/');
+    browserHistory.push('/api/');
   }
 
   renderBody() {
diff --git a/src/sentry/static/sentry/app/views/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails.jsx
index 4f9ecdb50d..d204389f88 100644
--- a/src/sentry/static/sentry/app/views/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails.jsx
@@ -83,8 +83,7 @@ const GroupDetails = React.createClass({
         // https://github.com/reactjs/react-router/blob/v2.0.1/modules/index.js#L25
         if (this.props.params.groupId != data.id) {
           let location = this.props.location;
-          return void browserHistory.pushState(
-            null,
+          return void browserHistory.push(
             location.pathname.replace(
               `/issues/${this.props.params.groupId}/`,
               `/issues/${data.id}/`
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index f901124156..c98e551999 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -121,7 +121,7 @@ const GroupDetailsActions = React.createClass({
         complete: () => {
           IndicatorStore.remove(loadingIndicator);
 
-          browserHistory.pushState(null, `/${org.slug}/${project.slug}/`);
+          browserHistory.push(`/${org.slug}/${project.slug}/`);
         },
       }
     );
@@ -198,7 +198,7 @@ const GroupDetailsActions = React.createClass({
       data: {discard: true},
       success: response => {
         GroupActions.discardSuccess(id, group.id, response);
-        browserHistory.pushState(null, `/${org.slug}/${project.slug}/`);
+        browserHistory.push(`/${org.slug}/${project.slug}/`);
       },
       error: error => {
         GroupActions.discardError(id, group.id, error);
diff --git a/src/sentry/static/sentry/app/views/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupEvents.jsx
index a952759a47..74a84c3abe 100644
--- a/src/sentry/static/sentry/app/views/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/groupEvents.jsx
@@ -48,11 +48,10 @@ const GroupEvents = React.createClass({
     if (query !== '') targetQueryParams.query = query;
 
     let {groupId, orgId, projectId} = this.props.params;
-    browserHistory.pushState(
-      null,
-      `/${orgId}/${projectId}/issues/${groupId}/events/`,
-      targetQueryParams
-    );
+    browserHistory.push({
+      pathname: `/${orgId}/${projectId}/issues/${groupId}/events/`,
+      query: targetQueryParams,
+    });
   },
 
   getEndpoint() {
diff --git a/src/sentry/static/sentry/app/views/projectEvents/index.jsx b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
index 83045fd59e..903dc78680 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
@@ -59,7 +59,10 @@ const ProjectEvents = React.createClass({
     if (query !== '') targetQueryParams.query = query;
 
     let {orgId, projectId} = this.props.params;
-    browserHistory.pushState(null, `/${orgId}/${projectId}/events/`, targetQueryParams);
+    browserHistory.push({
+      pathname: `/${orgId}/${projectId}/events/`,
+      query: targetQueryParams,
+    });
   },
 
   fetchData() {
diff --git a/src/sentry/static/sentry/app/views/projectKeyDetails.jsx b/src/sentry/static/sentry/app/views/projectKeyDetails.jsx
index 35a979b24c..35754516ca 100644
--- a/src/sentry/static/sentry/app/views/projectKeyDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectKeyDetails.jsx
@@ -559,7 +559,7 @@ export default React.createClass({
 
   handleRemove(data) {
     let {orgId, projectId} = this.props.params;
-    browserHistory.pushState(null, `/${orgId}/${projectId}/settings/keys/`);
+    browserHistory.push(`/${orgId}/${projectId}/settings/keys/`);
   },
 
   handleSave(data) {
diff --git a/src/sentry/static/sentry/app/views/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
index b2d154581f..39ae1714e1 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
@@ -60,7 +60,10 @@ const ProjectReleases = React.createClass({
     if (query !== '') targetQueryParams.query = query;
 
     let {orgId, projectId} = this.props.params;
-    browserHistory.pushState(null, `/${orgId}/${projectId}/releases/`, targetQueryParams);
+    browserHistory.push({
+      pathname: `/${orgId}/${projectId}/releases/`,
+      query: targetQueryParams,
+    });
   },
 
   fetchData() {
diff --git a/src/sentry/static/sentry/app/views/projectUserReports.jsx b/src/sentry/static/sentry/app/views/projectUserReports.jsx
index 59013a6510..c0e05c4376 100644
--- a/src/sentry/static/sentry/app/views/projectUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReports.jsx
@@ -71,11 +71,10 @@ const ProjectUserReports = React.createClass({
       targetQueryParams.status = this.state.status;
 
     let {orgId, projectId} = this.props.params;
-    browserHistory.pushState(
-      null,
-      `/${orgId}/${projectId}/user-feedback/`,
-      targetQueryParams
-    );
+    browserHistory.push({
+      pathname: `/${orgId}/${projectId}/user-feedback/`,
+      query: targetQueryParams,
+    });
   },
 
   fetchData() {
diff --git a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
index 6872e33319..53fca266e0 100644
--- a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
+++ b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
@@ -72,7 +72,7 @@ const SetCallsignsAction = React.createClass({
       method: 'PUT',
       data: {slugs: this.state.slugs},
       success: data => {
-        browserHistory.pushState('refresh', `/${orgId}/`);
+        browserHistory.push({state: 'refresh', pathname: `/${orgId}/`});
       },
       error: error => {
         /*eslint no-console:0*/
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index 0dd8417748..6bee6d1ada 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -265,7 +265,7 @@ const Stream = React.createClass({
     this.setState({
       savedSearchList,
     });
-    browserHistory.pushState(null, `/${orgId}/${projectId}/searches/${data.id}/`);
+    browserHistory.push(`/${orgId}/${projectId}/searches/${data.id}/`);
   },
 
   getQueryState(props) {
@@ -372,14 +372,12 @@ const Stream = React.createClass({
         // different projects.
         if (jqXHR.getResponseHeader('X-Sentry-Direct-Hit') === '1') {
           if (data[0].matchingEventId) {
-            return void browserHistory.pushState(
-              null,
+            return void browserHistory.push(
               `/${this.props.params.orgId}/${data[0].project.slug}/issues/${data[0]
                 .id}/events/${data[0].matchingEventId}/`
             );
           }
-          return void browserHistory.pushState(
-            null,
+          return void browserHistory.push(
             `/${this.props.params.orgId}/${data[0].project.slug}/issues/${data[0].id}/`
           );
         }
@@ -544,7 +542,10 @@ const Stream = React.createClass({
       ? `/${params.orgId}/${params.projectId}/searches/${this.state.searchId}/`
       : `/${params.orgId}/${params.projectId}/`;
 
-    browserHistory.pushState(null, path, queryParams);
+    browserHistory.push({
+      pathname: path,
+      query: queryParams,
+    });
   },
 
   createSampleEvent() {
@@ -553,8 +554,7 @@ const Stream = React.createClass({
     this.api.request(url, {
       method: 'POST',
       success: data => {
-        browserHistory.pushState(
-          null,
+        browserHistory.push(
           `/${params.orgId}/${params.projectId}/issues/${data.groupID}/`
         );
       },
diff --git a/src/sentry/static/sentry/app/views/teamDetails.jsx b/src/sentry/static/sentry/app/views/teamDetails.jsx
index a6d664b7e9..d5c863acd3 100644
--- a/src/sentry/static/sentry/app/views/teamDetails.jsx
+++ b/src/sentry/static/sentry/app/views/teamDetails.jsx
@@ -67,10 +67,7 @@ const TeamDetails = React.createClass({
     let team = this.state.team;
     if (data.slug !== team.slug) {
       let orgId = this.props.params.orgId;
-      browserHistory.pushState(
-        null,
-        `/organizations/${orgId}/teams/${data.slug}/settings/`
-      );
+      browserHistory.push(`/organizations/${orgId}/teams/${data.slug}/settings/`);
     } else {
       this.setState({
         team: {
diff --git a/tests/js/spec/views/projectReleases.spec.jsx b/tests/js/spec/views/projectReleases.spec.jsx
index 5d6e0d6957..ce6f696f51 100644
--- a/tests/js/spec/views/projectReleases.spec.jsx
+++ b/tests/js/spec/views/projectReleases.spec.jsx
@@ -19,7 +19,7 @@ describe('ProjectReleases', function() {
 
     sandbox.stub(Client.prototype, 'request');
     stubReactComponents(sandbox, [SearchBar, Pagination]);
-    sandbox.stub(browserHistory, 'pushState');
+    sandbox.stub(browserHistory, 'push');
 
     props = {
       setProjectNavSection: function() {},
@@ -51,11 +51,9 @@ describe('ProjectReleases', function() {
     it('should change query string with new search parameter', function() {
       projectReleases.instance().onSearch('searchquery');
 
-      expect(browserHistory.pushState.calledOnce).toBeTruthy();
-      expect(browserHistory.pushState.args[0]).toEqual([
-        null,
-        '/123/456/releases/',
-        {query: 'searchquery'},
+      expect(browserHistory.push.calledOnce).toBeTruthy();
+      expect(browserHistory.push.args[0]).toEqual([
+        {pathname: '/123/456/releases/', query: {query: 'searchquery'}},
       ]);
     });
   });
