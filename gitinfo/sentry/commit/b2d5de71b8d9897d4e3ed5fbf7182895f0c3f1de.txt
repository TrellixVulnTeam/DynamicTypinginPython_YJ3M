commit b2d5de71b8d9897d4e3ed5fbf7182895f0c3f1de
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 24 15:38:52 2016 -0700

    Fix issues with context tags + tests

diff --git a/src/sentry/interfaces/contexts.py b/src/sentry/interfaces/contexts.py
index 2f1e2f11bf..07254961fa 100644
--- a/src/sentry/interfaces/contexts.py
+++ b/src/sentry/interfaces/contexts.py
@@ -29,7 +29,7 @@ def contexttype(name):
 
 
 class ContextType(object):
-    indexed_fields = []
+    indexed_fields = None
 
     def __init__(self, alias, data):
         self.alias = alias
@@ -39,16 +39,17 @@ class ContextType(object):
         return self.data
 
     def iter_tags(self):
-        for field, f_string in self.indexed_fields.iteritems():
-            try:
-                value = f_string.format(**self.data).strip()
-            except KeyError:
-                continue
-            if value:
-                if not field:
-                    yield (self.alias, value)
-                else:
-                    yield ('%s.%s' % (self.alias, field), value)
+        if self.indexed_fields:
+            for field, f_string in self.indexed_fields.iteritems():
+                try:
+                    value = f_string.format(**self.data).strip()
+                except KeyError:
+                    continue
+                if value:
+                    if not field:
+                        yield (self.alias, value)
+                    else:
+                        yield ('%s.%s' % (self.alias, field), value)
 
 
 # TODO(dcramer): contexts need to document/describe expected (optional) fields
diff --git a/tests/sentry/interfaces/test_contexts.py b/tests/sentry/interfaces/test_contexts.py
index c5674f1f2e..b513eb8fc1 100644
--- a/tests/sentry/interfaces/test_contexts.py
+++ b/tests/sentry/interfaces/test_contexts.py
@@ -17,8 +17,8 @@ class ContextsTest(TestCase):
             },
         })
         assert sorted(ctx.iter_tags()) == [
+            ('os', 'Windows 95'),
             ('os.name', 'Windows'),
-            ('os.version', '95'),
         ]
         assert ctx.to_json() == {
             'os': {
@@ -37,9 +37,8 @@ class ContextsTest(TestCase):
             },
         })
         assert sorted(ctx.iter_tags()) == [
-            ('runtime.build', 'BLAH'),
+            ('runtime', 'Java 1.2.3'),
             ('runtime.name', 'Java'),
-            ('runtime.version', '1.2.3'),
         ]
         assert ctx.to_json() == {
             'runtime': {
@@ -61,10 +60,7 @@ class ContextsTest(TestCase):
             },
         })
         assert sorted(ctx.iter_tags()) == [
-            ('device.arch', 'arm64'),
             ('device.model', 'iPad'),
-            ('device.model_id', '1234AB'),
-            ('device.name', 'My iPad'),
         ]
         assert ctx.to_json() == {
             'device': {
@@ -90,10 +86,7 @@ class ContextsTest(TestCase):
             },
         })
         assert sorted(ctx.iter_tags()) == [
-            ('my_device.arch', 'arm64'),
-            ('my_device.model', 'iPad'),
-            ('my_device.model_id', '1234AB'),
-            ('my_device.name', 'My iPad')
+            ('my_device', 'My iPad')
         ]
         assert ctx.to_json() == {
             'my_device': {
