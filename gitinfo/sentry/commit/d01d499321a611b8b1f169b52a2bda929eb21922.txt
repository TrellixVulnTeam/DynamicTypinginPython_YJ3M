commit d01d499321a611b8b1f169b52a2bda929eb21922
Author: Matej Minar <matej.minar@sentry.io>
Date:   Fri May 15 08:36:51 2020 +0200

    feat(ui): Add deployBadge component, release deploys widget (#18829)
    
    * feat(ui): Add deployBadge component, release deploys
    
    * feat(ui): Remove margin from deployBadge
    
    * ref(ui): Improve deployBadge styles

diff --git a/docs-ui/components/deployBadge.stories.js b/docs-ui/components/deployBadge.stories.js
new file mode 100644
index 0000000000..2632d42aa2
--- /dev/null
+++ b/docs-ui/components/deployBadge.stories.js
@@ -0,0 +1,35 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+
+import DeployBadge from 'app/components/deployBadge';
+
+const deploy = {
+  name: '85fedddce5a61a58b160fa6b3d6a1a8451e94eb9 to prod',
+  url: null,
+  environment: 'production',
+  dateStarted: null,
+  dateFinished: '2020-05-11T18:12:00.025928Z',
+  id: '6348842',
+};
+
+storiesOf('UI|DeployBadge', module).add(
+  'default',
+  withInfo('Used to display deploy in a "badge"')(() => (
+    <div>
+      <div>
+        <DeployBadge deploy={deploy} orgSlug="sentry" version="1.2.3" />
+      </div>
+      <div>
+        <DeployBadge
+          deploy={{...deploy, environment: 'verylongenvironment'}}
+          orgSlug="sentry"
+          version="1.2.3"
+        />
+      </div>
+      <div>
+        <DeployBadge deploy={deploy} />
+      </div>
+    </div>
+  ))
+);
diff --git a/src/sentry/static/sentry/app/components/deployBadge.tsx b/src/sentry/static/sentry/app/components/deployBadge.tsx
new file mode 100644
index 0000000000..4d82f4fd46
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/deployBadge.tsx
@@ -0,0 +1,73 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {t} from 'app/locale';
+import space from 'app/styles/space';
+import {Deploy} from 'app/types';
+import Tag from 'app/views/settings/components/tag';
+import Link from 'app/components/links/link';
+import {IconOpen} from 'app/icons';
+import {stringifyQueryObject} from 'app/utils/tokenizeSearch';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
+
+type Props = {
+  deploy: Deploy;
+  orgSlug?: string;
+  version?: string;
+  className?: string;
+};
+
+const DeployBadge = ({deploy, orgSlug, version, className}: Props) => {
+  const shouldLinkToIssues = !!orgSlug && !!version;
+
+  const badge = (
+    <Badge className={className}>
+      <Label>{deploy.environment}</Label>
+      {shouldLinkToIssues && <Icon size="xs" />}
+    </Badge>
+  );
+
+  if (!shouldLinkToIssues) {
+    return badge;
+  }
+
+  return (
+    <Link
+      to={{
+        pathname: `/organizations/${orgSlug}/issues/`,
+        query: {
+          project: null,
+          environment: deploy.environment,
+          query: stringifyQueryObject({
+            query: [],
+            release: [version!],
+          }),
+        },
+      }}
+      title={t('Open in Issues')}
+    >
+      {badge}
+    </Link>
+  );
+};
+
+const Badge = styled(Tag)`
+  background-color: ${p => p.theme.gray4};
+  color: ${p => p.theme.white};
+  font-size: ${p => p.theme.fontSizeSmall};
+  align-items: center;
+  height: 20px;
+`;
+
+const Label = styled('span')`
+  max-width: 100px;
+  line-height: 20px;
+  ${overflowEllipsis}
+`;
+
+const Icon = styled(IconOpen)`
+  margin-left: ${space(0.5)};
+  flex-shrink: 0;
+`;
+
+export default DeployBadge;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
index 33cf016281..e034cec041 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
@@ -26,6 +26,7 @@ import PickProjectToContinue from './pickProjectToContinue';
 type ReleaseContext = {
   release: Release;
   project: ReleaseProject;
+  deploys: Deploy[];
   releaseProjects: ReleaseProject[];
 };
 const ReleaseContext = React.createContext<ReleaseContext>({} as ReleaseContext);
@@ -121,12 +122,11 @@ class ReleasesV2Detail extends AsyncView<Props, State> {
             location={location}
             orgId={organization.slug}
             release={release}
-            deploys={deploys || []}
             project={project}
           />
 
           <ContentBox>
-            <ReleaseContext.Provider value={{release, project, releaseProjects}}>
+            <ReleaseContext.Provider value={{release, project, deploys, releaseProjects}}>
               {this.props.children}
             </ReleaseContext.Provider>
           </ContentBox>
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/commitAuthorBreakdown.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/commitAuthorBreakdown.tsx
index 410d07b4e4..d93480c05b 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/commitAuthorBreakdown.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/commitAuthorBreakdown.tsx
@@ -158,7 +158,7 @@ const StyledUserAvatar = styled(UserAvatar)`
 
 const AuthorName = styled('div')`
   font-weight: 600;
-  color: ${p => p.theme.gray3};
+  color: ${p => p.theme.gray4};
   padding-right: ${space(0.5)};
   ${overflowEllipsis};
 `;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/deploys.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/deploys.tsx
new file mode 100644
index 0000000000..3796cc803f
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/deploys.tsx
@@ -0,0 +1,49 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {t} from 'app/locale';
+import space from 'app/styles/space';
+import {Deploy} from 'app/types';
+import TimeSince from 'app/components/timeSince';
+import DeployBadge from 'app/components/deployBadge';
+import TextOverflow from 'app/components/textOverflow';
+
+import {SectionHeading, Wrapper} from './styles';
+
+type Props = {
+  version: string;
+  orgSlug: string;
+  deploys: Deploy[];
+};
+
+const Deploys = ({version, orgSlug, deploys}: Props) => {
+  return (
+    <Wrapper>
+      <SectionHeading>{t('Deploys')}</SectionHeading>
+
+      {deploys.map(deploy => (
+        <Row key={deploy.id}>
+          <StyledDeployBadge deploy={deploy} orgSlug={orgSlug} version={version} />
+          <TextOverflow>
+            <TimeSince date={deploy.dateFinished} />
+          </TextOverflow>
+        </Row>
+      ))}
+    </Wrapper>
+  );
+};
+
+const Row = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
+  margin-bottom: ${space(1)};
+  font-size: ${p => p.theme.fontSizeMedium};
+  color: ${p => p.theme.gray4};
+`;
+
+const StyledDeployBadge = styled(DeployBadge)`
+  margin-right: ${space(1)};
+`;
+
+export default Deploys;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
index 9ef9dab6f6..c8adae1f58 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
@@ -19,6 +19,7 @@ import CommitAuthorBreakdown from './commitAuthorBreakdown';
 import ProjectReleaseDetails from './projectReleaseDetails';
 import OtherProjects from './otherProjects';
 import TotalCrashFreeUsers from './totalCrashFreeUsers';
+import Deploys from './deploys';
 import ReleaseStatsRequest from './releaseStatsRequest';
 import {YAxis} from './chart/releaseChartControls';
 import SwitchReleasesButton from '../../utils/switchReleasesButton';
@@ -74,7 +75,7 @@ class ReleaseOverview extends AsyncView<Props> {
 
     return (
       <ReleaseContext.Consumer>
-        {({release, project, releaseProjects}) => {
+        {({release, project, deploys, releaseProjects}) => {
           const {commitCount, version} = release;
           const {hasHealthData} = project.healthData || {};
           const hasDiscover = organization.features.includes('discover-basic');
@@ -138,6 +139,13 @@ class ReleaseOverview extends AsyncView<Props> {
                         crashFreeTimeBreakdown={crashFreeTimeBreakdown}
                       />
                     )}
+                    {deploys.length > 0 && (
+                      <Deploys
+                        version={version}
+                        orgSlug={organization.slug}
+                        deploys={deploys}
+                      />
+                    )}
                   </Sidebar>
 
                   <SwitchReleasesButton version="1" orgId={organization.id} />
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/projectReleaseDetails.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/projectReleaseDetails.tsx
index 57ab1c000e..5284ef57f1 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/projectReleaseDetails.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/projectReleaseDetails.tsx
@@ -7,7 +7,6 @@ import {Release} from 'app/types';
 import Version from 'app/components/version';
 import TimeSince from 'app/components/timeSince';
 import DateTime from 'app/components/dateTime';
-import Tooltip from 'app/components/tooltip';
 
 import {SectionHeading, Wrapper} from './styles';
 
@@ -16,7 +15,7 @@ type Props = {
 };
 
 const ProjectReleaseDetails = ({release}: Props) => {
-  const {version, dateCreated, firstEvent, lastEvent, lastDeploy} = release;
+  const {version, dateCreated, firstEvent, lastEvent} = release;
 
   return (
     <Wrapper>
@@ -30,17 +29,6 @@ const ProjectReleaseDetails = ({release}: Props) => {
             </TagValue>
           </StyledTr>
 
-          {lastDeploy?.dateFinished && (
-            <StyledTr>
-              <TagKey>{t('Last Deploy')}</TagKey>
-              <TagValue>
-                <Tooltip title={lastDeploy.environment}>
-                  <DateTime date={lastDeploy.dateFinished} seconds={false} />
-                </Tooltip>
-              </TagValue>
-            </StyledTr>
-          )}
-
           <StyledTr>
             <TagKey>{t('Version')}</TagKey>
             <TagValue>
@@ -76,7 +64,7 @@ const StyledTr = styled('tr')`
 `;
 
 const TagKey = styled('td')`
-  color: ${p => p.theme.gray3};
+  color: ${p => p.theme.gray4};
   padding: ${space(0.5)} ${space(1)};
   font-size: ${p => p.theme.fontSizeMedium};
   white-space: nowrap;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
index 1c9a4ec8c7..8778774ac7 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
@@ -4,20 +4,19 @@ import styled from '@emotion/styled';
 
 import space from 'app/styles/space';
 import {t} from 'app/locale';
-import Link from 'app/components/links/link';
 import ListLink from 'app/components/links/listLink';
 import ExternalLink from 'app/components/links/externalLink';
 import NavTabs from 'app/components/navTabs';
-import {Release, Deploy, ReleaseProject} from 'app/types';
+import {Release, ReleaseProject} from 'app/types';
 import Version from 'app/components/version';
 import Clipboard from 'app/components/clipboard';
 import {IconCopy, IconOpen} from 'app/icons';
 import Tooltip from 'app/components/tooltip';
-import Tag from 'app/views/settings/components/tag';
 import Count from 'app/components/count';
 import TimeSince from 'app/components/timeSince';
 import {formatVersion, formatAbbreviatedNumber} from 'app/utils/formatters';
 import Breadcrumbs from 'app/components/breadcrumbs';
+import DeployBadge from 'app/components/deployBadge';
 import Badge from 'app/components/badge';
 
 import ReleaseStat from './releaseStat';
@@ -27,12 +26,11 @@ type Props = {
   location: Location;
   orgId: string;
   release: Release;
-  deploys: Deploy[];
   project: ReleaseProject;
 };
 
-const ReleaseHeader = ({location, orgId, release, deploys, project}: Props) => {
-  const {version, newGroups, url} = release;
+const ReleaseHeader = ({location, orgId, release, project}: Props) => {
+  const {version, newGroups, url, lastDeploy, dateCreated} = release;
   const {hasHealthData, sessionsCrashed} = project.healthData;
 
   const releasePath = `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`;
@@ -67,27 +65,14 @@ const ReleaseHeader = ({location, orgId, release, deploys, project}: Props) => {
         />
 
         <StatsWrapper>
-          {deploys.length > 0 && (
-            <ReleaseStat label={t('Deploys')}>
-              <DeploysWrapper>
-                {deploys.map(deploy => (
-                  <Tooltip
-                    title={<TimeSince date={deploy.dateFinished} />}
-                    key={deploy.id}
-                  >
-                    <Link
-                      title={t('View in stream')}
-                      to={`/organizations/${orgId}/issues/?query=release:${encodeURIComponent(
-                        version
-                      )}&environment=${encodeURIComponent(deploy.environment)}`}
-                    >
-                      <StyledBadge>{deploy.environment}</StyledBadge>
-                    </Link>
-                  </Tooltip>
-                ))}
-              </DeploysWrapper>
-            </ReleaseStat>
-          )}
+          <ReleaseStat
+            label={lastDeploy?.dateFinished ? t('Last Deploy') : t('Date Created')}
+          >
+            <DeploysWrapper>
+              <TimeSince date={lastDeploy?.dateFinished || dateCreated} />
+              {lastDeploy?.dateFinished && <StyledDeployBadge deploy={lastDeploy} />}
+            </DeploysWrapper>
+          </ReleaseStat>
           {hasHealthData && (
             <ReleaseStat label={t('Crashes')}>
               <Count value={sessionsCrashed} />
@@ -169,18 +154,12 @@ const StatsWrapper = styled('div')`
 `;
 
 const DeploysWrapper = styled('div')`
-  display: flex;
-  margin-top: ${space(0.5)};
-  @media (max-width: ${p => p.theme.breakpoints[0]}) {
-    flex-wrap: wrap;
-  }
+  white-space: nowrap;
 `;
 
-const StyledBadge = styled(Tag)`
-  background-color: ${p => p.theme.gray4};
-  font-size: ${p => p.theme.fontSizeSmall};
-  color: ${p => p.theme.white};
-  margin-left: ${space(0.5)};
+const StyledDeployBadge = styled(DeployBadge)`
+  margin-left: ${space(1)};
+  bottom: ${space(0.25)};
 `;
 
 const ReleaseName = styled('div')`
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
index 0523c683c8..0c24a00f15 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
@@ -13,7 +13,7 @@ import {t, tn} from 'app/locale';
 import {AvatarListWrapper} from 'app/components/avatar/avatarList';
 import TextOverflow from 'app/components/textOverflow';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
-import Tag from 'app/views/settings/components/tag';
+import DeployBadge from 'app/components/deployBadge';
 import Link from 'app/components/links/link';
 import Feature from 'app/components/acl/feature';
 import Tooltip from 'app/components/tooltip';
@@ -73,9 +73,7 @@ const ReleaseCard = ({release, orgSlug, location, reloading}: Props) => {
 
             <CreatedColumn>
               <TextOverflow>
-                {lastDeploy?.dateFinished && (
-                  <DeployEnv>{lastDeploy.environment}</DeployEnv>
-                )}
+                {lastDeploy?.dateFinished && <StyledDeployBadge deploy={lastDeploy} />}
                 <TimeSince date={lastDeploy?.dateFinished || dateCreated} />
               </TextOverflow>
             </CreatedColumn>
@@ -198,17 +196,10 @@ const VersionWrapper = styled('div')`
   display: inline-block;
 `;
 
-const DeployEnv = styled(Tag)`
-  background-color: ${p => p.theme.gray4};
-  color: ${p => p.theme.white};
-  font-size: ${p => p.theme.fontSizeSmall};
-  margin-right: ${space(1)};
+const StyledDeployBadge = styled(DeployBadge)`
   position: relative;
   bottom: ${space(0.25)};
-  display: inline-block;
-  max-width: 100px;
-  overflow: hidden;
-  text-overflow: ellipsis;
+  margin-right: ${space(1)};
   @media (max-width: ${p => p.theme.breakpoints[0]}) {
     display: none;
   }
diff --git a/tests/js/spec/components/deployBadge.spec.jsx b/tests/js/spec/components/deployBadge.spec.jsx
new file mode 100644
index 0000000000..7e77101ed9
--- /dev/null
+++ b/tests/js/spec/components/deployBadge.spec.jsx
@@ -0,0 +1,35 @@
+import React from 'react';
+
+import {shallow} from 'sentry-test/enzyme';
+import DeployBadge from 'app/components/deployBadge';
+
+const deploy = {
+  name: '85fedddce5a61a58b160fa6b3d6a1a8451e94eb9 to prod',
+  url: null,
+  environment: 'production',
+  dateStarted: null,
+  dateFinished: '2020-05-11T18:12:00.025928Z',
+  id: '6348842',
+};
+
+describe('DeployBadge', function() {
+  it('renders', function() {
+    const wrapper = shallow(<DeployBadge deploy={deploy} />);
+
+    expect(wrapper.find('Badge').text()).toEqual('production');
+    expect(wrapper.find('Icon').length).toEqual(0);
+  });
+
+  it('renders with icon and link', function() {
+    const wrapper = shallow(
+      <DeployBadge deploy={deploy} orgSlug="sentry" version="1.2.3" />
+    );
+
+    expect(wrapper.find('Link').props('to').to).toEqual({
+      pathname: '/organizations/sentry/issues/',
+      query: {project: null, environment: 'production', query: 'release:1.2.3'},
+    });
+    expect(wrapper.find('Badge').text()).toEqual('production');
+    expect(wrapper.find('Icon').length).toEqual(1);
+  });
+});
