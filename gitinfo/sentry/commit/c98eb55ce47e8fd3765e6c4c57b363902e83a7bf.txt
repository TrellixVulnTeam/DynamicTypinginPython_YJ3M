commit c98eb55ce47e8fd3765e6c4c57b363902e83a7bf
Author: Alex Gaynor <alex.gaynor@gmail.com>
Date:   Sat May 17 18:55:10 2014 -0700

    Switch to py3 friendly print

diff --git a/src/sentry/management/commands/repair.py b/src/sentry/management/commands/repair.py
index d4c947022f..1f637f3c65 100644
--- a/src/sentry/management/commands/repair.py
+++ b/src/sentry/management/commands/repair.py
@@ -5,7 +5,10 @@ sentry.management.commands.repair
 :copyright: (c) 2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+from __future__ import print_function
+
 from django.core.management.base import BaseCommand
+
 from optparse import make_option
 
 
@@ -27,14 +30,14 @@ class Command(BaseCommand):
             owner = None
 
         if owner:
-            print "Assigning ownerless projects to %s" % owner.username
+            print("Assigning ownerless projects to %s" % owner.username)
             # Assign unowned projects
             for project in Project.objects.filter(owner__isnull=True):
                 update(project, owner=owner)
-                print "* Changed owner of %s" % project
+                print("* Changed owner of %s" % project)
 
         # Create teams for any projects that are missing them
-        print "Creating missing teams on projects"
+        print("Creating missing teams on projects")
         for project in Project.objects.filter(team__isnull=True, owner__isnull=False):
             team = Team(
                 name=project.name,
@@ -54,10 +57,10 @@ class Command(BaseCommand):
             team.save()
 
             update(project, team=team)
-            print "* Created team %s for %s" % (team, project)
+            print("* Created team %s for %s" % (team, project))
 
         # Create missing project keys
-        print "Creating missing project keys"
+        print("Creating missing project keys")
         for team in Team.objects.all():
             for member in team.member_set.select_related('user'):
                 for project in team.project_set.all():
@@ -70,4 +73,4 @@ class Command(BaseCommand):
                         pass
                     else:
                         if created:
-                            print "* Created key for %s on %s" % (member.user.username, project)
+                            print("* Created key for %s on %s" % (member.user.username, project))
diff --git a/src/sentry/management/commands/start.py b/src/sentry/management/commands/start.py
index 85b39eb004..266583eaa3 100644
--- a/src/sentry/management/commands/start.py
+++ b/src/sentry/management/commands/start.py
@@ -5,11 +5,14 @@ sentry.management.commands.start
 :copyright: (c) 2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+from __future__ import print_function
+
+import sys
+from optparse import make_option
+
 from django.core.management import call_command
 from django.core.management.base import BaseCommand, CommandError
 
-from optparse import make_option
-import sys
 
 
 class Command(BaseCommand):
@@ -60,7 +63,7 @@ class Command(BaseCommand):
 
         if upgrade:
             # Ensure we perform an upgrade before starting any service
-            print "Performing upgrade before service startup..."
+            print("Performing upgrade before service startup...")
             call_command('upgrade', verbosity=0, noinput=options.get('noinput'))
 
         try:
@@ -80,5 +83,5 @@ class Command(BaseCommand):
         # a parse error is thrown
         sys.argv = sys.argv[:1]
 
-        print "Running service: %r" % service_name
+        print("Running service: %r" % service_name)
         service.run()
diff --git a/src/sentry/migrations/0083_migrate_dupe_groups.py b/src/sentry/migrations/0083_migrate_dupe_groups.py
index ab8ba65110..706d6de504 100644
--- a/src/sentry/migrations/0083_migrate_dupe_groups.py
+++ b/src/sentry/migrations/0083_migrate_dupe_groups.py
@@ -1,8 +1,8 @@
 # -*- coding: utf-8 -*-
-import datetime
-from south.db import db
+from __future__ import print_function
+
 from south.v2 import DataMigration
-from django.db import models
+
 
 class Migration(DataMigration):
 
@@ -25,7 +25,7 @@ class Migration(DataMigration):
             if not matches:
                 continue
 
-            print "Merging duplicate events for %r" % (group,)
+            print("Merging duplicate events for %r" % (group,))
 
             updates = defaultdict(int)
             updates.update({
diff --git a/src/sentry/models/lostpasswordhash.py b/src/sentry/models/lostpasswordhash.py
index 885fc6d073..8603b36472 100644
--- a/src/sentry/models/lostpasswordhash.py
+++ b/src/sentry/models/lostpasswordhash.py
@@ -64,6 +64,6 @@ class LostPasswordHash(Model):
 
         try:
             msg.send([self.user.email])
-        except Exception, e:
+        except Exception as e:
             logger = logging.getLogger('sentry.mail.errors')
             logger.exception(e)
diff --git a/src/sentry/processors/console.py b/src/sentry/processors/console.py
index b2ec1d1306..2811222442 100644
--- a/src/sentry/processors/console.py
+++ b/src/sentry/processors/console.py
@@ -5,12 +5,13 @@ sentry.processors.console
 :copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+from __future__ import print_function
 
 from .base import Processor
 
 
 class ConsoleProcessor(Processor):
     def post_process(self, event, **kwargs):
-        print 'Received an event:'
-        print '  ID:', event.event_id
-        print '  Project:', event.project.name
+        print('Received an event:')
+        print('  ID:', event.event_id)
+        print('  Project:', event.project.name)
diff --git a/src/sentry/receivers/core.py b/src/sentry/receivers/core.py
index e7352a3f4f..bee7ed0e10 100644
--- a/src/sentry/receivers/core.py
+++ b/src/sentry/receivers/core.py
@@ -1,3 +1,5 @@
+from __future__ import print_function
+
 from django.conf import settings
 from django.contrib.auth.signals import user_logged_in
 from django.db.models.signals import post_syncdb, post_save, pre_delete
@@ -40,7 +42,7 @@ def create_default_project(created_models, verbosity=2, **kwargs):
         create_team_and_keys_for_project(project, created=True)
 
     if verbosity > 0:
-        print 'Created internal Sentry project (slug=%s, id=%s)' % (project.slug, project.id)
+        print('Created internal Sentry project (slug=%s, id=%s)' % (project.slug, project.id))
 
 
 def set_sentry_version(latest=None, **kwargs):
diff --git a/src/sentry/utils/runner.py b/src/sentry/utils/runner.py
index 749ab25dff..d84ba47f55 100644
--- a/src/sentry/utils/runner.py
+++ b/src/sentry/utils/runner.py
@@ -6,7 +6,7 @@ sentry.utils.runner
 :copyright: (c) 2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
-from __future__ import absolute_import
+from __future__ import absolute_import, print_function
 
 from logan.runner import run_app, configure_app
 
@@ -354,7 +354,7 @@ def configure(config_path=None):
 
 def main():
     if USE_GEVENT:
-        print "Configuring Sentry with gevent bindings"
+        print("Configuring Sentry with gevent bindings")
         initialize_gevent()
 
     run_app(
