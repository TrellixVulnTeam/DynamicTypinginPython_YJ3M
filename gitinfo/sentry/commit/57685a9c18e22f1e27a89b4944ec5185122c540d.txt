commit 57685a9c18e22f1e27a89b4944ec5185122c540d
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Jan 2 10:58:17 2019 -0800

    feat(user-feedback): Organization user feedback (#11128)
    
    Add global selection header to org user feedback page, allowing
    filtering on projects, environments and date range.

diff --git a/src/sentry/static/sentry/app/views/userFeedback/container.jsx b/src/sentry/static/sentry/app/views/userFeedback/container.jsx
index 3e65cc528f..605b88b569 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/container.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/container.jsx
@@ -1,31 +1,40 @@
 import React from 'react';
+import {Link} from 'react-router';
+import styled from 'react-emotion';
 import PropTypes from 'prop-types';
+import {omit} from 'lodash';
 import {t} from 'app/locale';
 import Pagination from 'app/components/pagination';
 import {Panel, PanelBody} from 'app/components/panels';
 
-import {Link} from 'react-router';
-
 export default class UserFeedbackContainer extends React.Component {
   static propTypes = {
     location: PropTypes.object.isRequired,
+    params: PropTypes.object.isRequired,
     pageLinks: PropTypes.string.isRequired,
     status: PropTypes.string.isRequired,
   };
 
   render() {
-    const {location: {pathname}, pageLinks, children, status} = this.props;
+    const {location: {pathname, query}, params, pageLinks, children, status} = this.props;
+
+    const unresolvedQuery = omit(query, 'status');
+    const allIssuesQuery = {...query, status: ''};
 
     return (
       <div>
         <div className="row release-list-header">
           <div className="col-sm-9">
-            <h3>{t('User Feedback')}</h3>
+            {params.projectId ? (
+              <h3>{t('User Feedback')}</h3>
+            ) : (
+              <Header>{t('User Feedback')}</Header>
+            )}
           </div>
           <div className="col-sm-3" style={{textAlign: 'right'}}>
             <div className="btn-group">
               <Link
-                to={pathname}
+                to={{pathname, query: unresolvedQuery}}
                 className={
                   'btn btn-sm btn-default' + (status === 'unresolved' ? ' active' : '')
                 }
@@ -33,7 +42,7 @@ export default class UserFeedbackContainer extends React.Component {
                 {t('Unresolved')}
               </Link>
               <Link
-                to={{pathname, query: {status: ''}}}
+                to={{pathname, query: allIssuesQuery}}
                 className={'btn btn-sm btn-default' + (status === '' ? ' active' : '')}
               >
                 {t('All Issues')}
@@ -49,3 +58,7 @@ export default class UserFeedbackContainer extends React.Component {
     );
   }
 }
+
+const Header = styled('h4')`
+  font-weight: normal;
+`;
diff --git a/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
index f93c44fb56..06110fcd4e 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
@@ -1,89 +1,42 @@
 import React from 'react';
-// import PropTypes from 'prop-types';
 import styled from 'react-emotion';
-import {isEqual} from 'lodash';
 
 import {t} from 'app/locale';
 import withOrganization from 'app/utils/withOrganization';
-import withGlobalSelection from 'app/utils/withGlobalSelection';
 import SentryTypes from 'app/sentryTypes';
 import Feature from 'app/components/acl/feature';
 import Alert from 'app/components/alert';
-import LoadingError from 'app/components/loadingError';
-import LoadingIndicator from 'app/components/loadingIndicator';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import CompactIssue from 'app/components/compactIssue';
 import EventUserFeedback from 'app/components/events/userFeedback';
 import space from 'app/styles/space';
+import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
+import AsyncView from 'app/views/asyncView';
 
 import UserFeedbackContainer from './container';
-import {fetchUserFeedback, getQuery} from './utils';
+import {getQuery} from './utils';
 
-class OrganizationUserFeedback extends React.Component {
+class OrganizationUserFeedback extends AsyncView {
   static propTypes = {
     organization: SentryTypes.Organization,
-    // selection: PropTypes.object,
   };
 
-  constructor(props) {
-    super(props);
-    this.state = {reportList: [], loading: true, error: false, pageLinks: ''};
+  getEndpoints() {
+    const {organization, location: {search}} = this.props;
+
+    return [
+      [
+        'reportList',
+        `/organizations/${organization.slug}/user-feedback/`,
+        {
+          query: getQuery(search),
+        },
+      ],
+    ];
   }
 
-  componentDidMount() {
-    this.fetchData();
-  }
-
-  componentDidUpdate(prevProps) {
-    if (
-      !isEqual(getQuery(prevProps.location.search), getQuery(this.props.location.search))
-    ) {
-      this.fetchData();
-    }
-  }
-
-  fetchData = () => {
-    this.setState({loading: true, error: false});
-
-    const query = getQuery(this.props.location.search);
-
-    fetchUserFeedback(this.props.organization, query)
-      .then(([reportList, _, jqXHR]) => {
-        this.setState({
-          reportList,
-          loading: false,
-          pageLinks: jqXHR.getResponseHeader('Link'),
-        });
-      })
-      .catch(() => this.setState({error: true, loading: false}));
-  };
-
-  renderNoAccess() {
-    return <Alert type="warning">{t("You don't have access to this feature")}</Alert>;
-  }
-
-  renderEmpty() {
-    return (
-      <EmptyStateWarning>
-        <p>{t('Sorry, no results match your serch query.')}</p>
-      </EmptyStateWarning>
-    );
-  }
-
-  renderList() {
-    if (this.state.loading) {
-      return <LoadingIndicator />;
-    }
-
-    if (this.state.error) {
-      return <LoadingError onRetry={this.fetchData} />;
-    }
-
-    if (this.state.reportList.length === 0) {
-      return this.renderEmpty();
-    }
-
-    return this.renderResults();
+  getTitle() {
+    return `${t('User Feedback')} - ${this.props.organization.slug}`;
   }
 
   renderResults() {
@@ -113,24 +66,58 @@ class OrganizationUserFeedback extends React.Component {
     return children;
   }
 
-  render() {
-    const {status} = getQuery(this.props.location.search);
+  renderList() {
+    if (this.state.reportList.length === 0) {
+      return this.renderEmpty();
+    }
+
+    return this.renderResults();
+  }
+
+  renderEmpty() {
+    return (
+      <EmptyStateWarning>
+        <p>{t('Sorry, no results match your search query.')}</p>
+      </EmptyStateWarning>
+    );
+  }
+
+  renderNoAccess() {
     return (
       <Content>
-        <Feature
-          features={['organizations:sentry10']}
-          organization={this.props.organization}
-          renderDisabled={this.renderNoAccess}
-        >
+        <Alert type="warning">{t("You don't have access to this feature")}</Alert>
+      </Content>
+    );
+  }
+
+  renderBody() {
+    const {organization, location, params} = this.props;
+    const {status} = getQuery(location.search);
+    const {reportList, reportListPageLinks} = this.state;
+
+    return (
+      <Feature
+        features={['organizations:sentry10']}
+        organization={organization}
+        renderDisabled={this.renderNoAccess}
+      >
+        <GlobalSelectionHeader
+          organization={organization}
+          projects={organization.projects.filter(project => project.isMember)}
+          showAbsolute={true}
+          showRelative={true}
+        />
+        <Content>
           <UserFeedbackContainer
-            location={this.props.location}
-            pageLinks={this.state.pageLinks}
+            pageLinks={reportListPageLinks}
             status={status}
+            location={location}
+            params={params}
           >
-            {this.renderList()}
+            {reportList.length ? this.renderResults() : this.renderEmpty()}
           </UserFeedbackContainer>
-        </Feature>
-      </Content>
+        </Content>
+      </Feature>
     );
   }
 }
@@ -144,4 +131,5 @@ const Content = styled('div')`
   margin-bottom: -20px; /* <footer> has margin-top: 20px; */
 `;
 
-export default withOrganization(withGlobalSelection(OrganizationUserFeedback));
+export {OrganizationUserFeedback};
+export default withOrganization(OrganizationUserFeedback);
diff --git a/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx b/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
index 7bd078c8ab..f11a9b927e 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
@@ -201,11 +201,14 @@ const ProjectUserFeedback = createReactClass({
   },
 
   render() {
+    const {location, params} = this.props;
+
     return (
       <UserFeedbackContainer
-        location={this.props.location}
         pageLinks={this.state.pageLinks}
         status={this.state.status}
+        location={location}
+        params={params}
       >
         {this.renderStreamBody()}
       </UserFeedbackContainer>
diff --git a/src/sentry/static/sentry/app/views/userFeedback/utils.jsx b/src/sentry/static/sentry/app/views/userFeedback/utils.jsx
index 59d79c1dd5..4a25b70bc2 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/utils.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/utils.jsx
@@ -1,38 +1,12 @@
-import {Client} from 'app/api';
+import {pick} from 'lodash';
 import qs from 'query-string';
 
-const DEFAULT_STATUS = 'unresolved';
+import {URL_PARAM} from 'app/components/organizations/globalSelectionHeader/constants';
 
-/**
- * Fetch user feedback for organization filtered by the query provided.
- * Either statsPeriod or start, end and utc values should be provided.
- *
- * @param {Object} organization
- * @param {Object} query
- * @param {Number[]} query.projects
- * @param {String[]} query.environments
- * @param {String} [query.statsPeriod]
- * @param {String} [query.start]
- * @param {String} [query.end]
- * @param {Boolean} [query.utc]
- * @returns {Promise<Array>}
- */
-export function fetchUserFeedback(organization, query = {}) {
-  const api = new Client();
-
-  return api.requestPromise(`/organizations/${organization.slug}/user-feedback/`, {
-    includeAllArgs: true,
-    query: {
-      per_page: 50,
-      ...query,
-    },
-  });
-}
+const DEFAULT_STATUS = 'unresolved';
 
 /**
  * Get query for API given the current location.search string
- * We are using qs.parse since location.query re-uses the same object making it
- * incorrectly seem like the query string has not changed
  *
  * @param {String} search
  * @returns {Object}
@@ -41,9 +15,11 @@ export function getQuery(search) {
   const query = qs.parse(search);
 
   const status = typeof query.status !== 'undefined' ? query.status : DEFAULT_STATUS;
-  const cursor = query.cursor;
 
-  const queryParams = {status, cursor};
+  const queryParams = {
+    status,
+    ...pick(query, ['cursor', ...Object.values(URL_PARAM)]),
+  };
 
   return queryParams;
 }
diff --git a/tests/js/fixtures/userFeedback.js b/tests/js/fixtures/userFeedback.js
index b984f7ec84..f922274ebc 100644
--- a/tests/js/fixtures/userFeedback.js
+++ b/tests/js/fixtures/userFeedback.js
@@ -1,4 +1,5 @@
 import {Group} from './group';
+import {Event} from './event';
 
 export function UserFeedback(params = {}) {
   return {
@@ -6,7 +7,9 @@ export function UserFeedback(params = {}) {
     name: 'Lyn',
     email: 'lyn@sentry.io',
     comments: 'Something bad happened',
+    dateCreated: '2018-12-20T00:00:00.000Z',
     issue: Group(),
+    event: Event(),
     ...params,
   };
 }
diff --git a/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
new file mode 100644
index 0000000000..7edde05901
--- /dev/null
+++ b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
@@ -0,0 +1,2282 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`OrganizationUserFeedback renders 1`] = `
+<OrganizationUserFeedback
+  location={
+    Object {
+      "query": Object {},
+      "search": "",
+    }
+  }
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [
+        "sentry10",
+      ],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
+  params={
+    Object {
+      "orgId": "org-slug",
+    }
+  }
+>
+  <SideEffect(DocumentTitle)
+    title="User Feedback - org-slug - Sentry"
+  >
+    <DocumentTitle
+      title="User Feedback - org-slug - Sentry"
+    >
+      <FeatureContainer
+        features={
+          Array [
+            "organizations:sentry10",
+          ]
+        }
+        organization={
+          Object {
+            "access": Array [
+              "org:read",
+              "org:write",
+              "org:admin",
+              "project:read",
+              "project:write",
+              "project:admin",
+              "team:read",
+              "team:write",
+              "team:admin",
+            ],
+            "features": Array [
+              "sentry10",
+            ],
+            "id": "3",
+            "name": "Organization Name",
+            "onboardingTasks": Array [],
+            "projects": Array [],
+            "scrapeJavaScript": true,
+            "slug": "org-slug",
+            "status": Object {
+              "id": "active",
+              "name": "active",
+            },
+            "teams": Array [],
+          }
+        }
+        renderDisabled={[Function]}
+      >
+        <Feature
+          configFeatures={Array []}
+          features={
+            Array [
+              "organizations:sentry10",
+            ]
+          }
+          organization={
+            Object {
+              "access": Array [
+                "org:read",
+                "org:write",
+                "org:admin",
+                "project:read",
+                "project:write",
+                "project:admin",
+                "team:read",
+                "team:write",
+                "team:admin",
+              ],
+              "features": Array [
+                "sentry10",
+              ],
+              "id": "3",
+              "name": "Organization Name",
+              "onboardingTasks": Array [],
+              "projects": Array [],
+              "scrapeJavaScript": true,
+              "slug": "org-slug",
+              "status": Object {
+                "id": "active",
+                "name": "active",
+              },
+              "teams": Array [],
+            }
+          }
+          project={
+            Object {
+              "hasAccess": true,
+              "id": "2",
+              "isBookmarked": false,
+              "isMember": true,
+              "name": "Project Name",
+              "slug": "project-slug",
+              "teams": Array [],
+            }
+          }
+          renderDisabled={[Function]}
+          requireAll={true}
+        >
+          <withRouter(withGlobalSelection(GlobalSelectionHeader))
+            organization={
+              Object {
+                "access": Array [
+                  "org:read",
+                  "org:write",
+                  "org:admin",
+                  "project:read",
+                  "project:write",
+                  "project:admin",
+                  "team:read",
+                  "team:write",
+                  "team:admin",
+                ],
+                "features": Array [
+                  "sentry10",
+                ],
+                "id": "3",
+                "name": "Organization Name",
+                "onboardingTasks": Array [],
+                "projects": Array [],
+                "scrapeJavaScript": true,
+                "slug": "org-slug",
+                "status": Object {
+                  "id": "active",
+                  "name": "active",
+                },
+                "teams": Array [],
+              }
+            }
+            projects={Array []}
+            showAbsolute={true}
+            showRelative={true}
+          >
+            <withGlobalSelection(GlobalSelectionHeader)
+              location={
+                Object {
+                  "query": Object {},
+                }
+              }
+              organization={
+                Object {
+                  "access": Array [
+                    "org:read",
+                    "org:write",
+                    "org:admin",
+                    "project:read",
+                    "project:write",
+                    "project:admin",
+                    "team:read",
+                    "team:write",
+                    "team:admin",
+                  ],
+                  "features": Array [
+                    "sentry10",
+                  ],
+                  "id": "3",
+                  "name": "Organization Name",
+                  "onboardingTasks": Array [],
+                  "projects": Array [],
+                  "scrapeJavaScript": true,
+                  "slug": "org-slug",
+                  "status": Object {
+                    "id": "active",
+                    "name": "active",
+                  },
+                  "teams": Array [],
+                }
+              }
+              projects={Array []}
+              router={
+                Object {
+                  "createHref": [MockFunction] {
+                    "calls": Array [
+                      Array [
+                        Object {
+                          "pathname": undefined,
+                          "query": Object {},
+                        },
+                      ],
+                      Array [
+                        Object {
+                          "pathname": undefined,
+                          "query": Object {
+                            "status": "",
+                          },
+                        },
+                      ],
+                      Array [
+                        "/org-slug/project-slug/issues/1/",
+                      ],
+                      Array [
+                        "/org-slug/project-slug/",
+                      ],
+                      Array [
+                        "/org-slug/project-slug/issues/1/activity/",
+                      ],
+                      Array [
+                        "/org-slug/project-slug/issues/1/events/1",
+                      ],
+                    ],
+                    "results": Array [
+                      Object {
+                        "isThrow": false,
+                        "value": undefined,
+                      },
+                      Object {
+                        "isThrow": false,
+                        "value": undefined,
+                      },
+                      Object {
+                        "isThrow": false,
+                        "value": undefined,
+                      },
+                      Object {
+                        "isThrow": false,
+                        "value": undefined,
+                      },
+                      Object {
+                        "isThrow": false,
+                        "value": undefined,
+                      },
+                      Object {
+                        "isThrow": false,
+                        "value": undefined,
+                      },
+                    ],
+                  },
+                  "go": [MockFunction],
+                  "goBack": [MockFunction],
+                  "goForward": [MockFunction],
+                  "isActive": [MockFunction],
+                  "listen": [MockFunction],
+                  "location": Object {
+                    "query": Object {},
+                  },
+                  "push": [MockFunction] {
+                    "calls": Array [
+                      Array [
+                        Object {
+                          "pathname": undefined,
+                          "query": Object {
+                            "environment": Array [],
+                            "project": Array [],
+                            "statsPeriod": "14d",
+                            "utc": "true",
+                          },
+                        },
+                      ],
+                    ],
+                    "results": Array [
+                      Object {
+                        "isThrow": false,
+                        "value": undefined,
+                      },
+                    ],
+                  },
+                  "replace": [MockFunction],
+                  "setRouteLeaveHook": [MockFunction],
+                }
+              }
+              showAbsolute={true}
+              showRelative={true}
+            >
+              <GlobalSelectionHeader
+                hasCustomRouting={false}
+                location={
+                  Object {
+                    "query": Object {},
+                  }
+                }
+                organization={
+                  Object {
+                    "access": Array [
+                      "org:read",
+                      "org:write",
+                      "org:admin",
+                      "project:read",
+                      "project:write",
+                      "project:admin",
+                      "team:read",
+                      "team:write",
+                      "team:admin",
+                    ],
+                    "features": Array [
+                      "sentry10",
+                    ],
+                    "id": "3",
+                    "name": "Organization Name",
+                    "onboardingTasks": Array [],
+                    "projects": Array [],
+                    "scrapeJavaScript": true,
+                    "slug": "org-slug",
+                    "status": Object {
+                      "id": "active",
+                      "name": "active",
+                    },
+                    "teams": Array [],
+                  }
+                }
+                projects={Array []}
+                resetParamsOnChange={Array []}
+                router={
+                  Object {
+                    "createHref": [MockFunction] {
+                      "calls": Array [
+                        Array [
+                          Object {
+                            "pathname": undefined,
+                            "query": Object {},
+                          },
+                        ],
+                        Array [
+                          Object {
+                            "pathname": undefined,
+                            "query": Object {
+                              "status": "",
+                            },
+                          },
+                        ],
+                        Array [
+                          "/org-slug/project-slug/issues/1/",
+                        ],
+                        Array [
+                          "/org-slug/project-slug/",
+                        ],
+                        Array [
+                          "/org-slug/project-slug/issues/1/activity/",
+                        ],
+                        Array [
+                          "/org-slug/project-slug/issues/1/events/1",
+                        ],
+                      ],
+                      "results": Array [
+                        Object {
+                          "isThrow": false,
+                          "value": undefined,
+                        },
+                        Object {
+                          "isThrow": false,
+                          "value": undefined,
+                        },
+                        Object {
+                          "isThrow": false,
+                          "value": undefined,
+                        },
+                        Object {
+                          "isThrow": false,
+                          "value": undefined,
+                        },
+                        Object {
+                          "isThrow": false,
+                          "value": undefined,
+                        },
+                        Object {
+                          "isThrow": false,
+                          "value": undefined,
+                        },
+                      ],
+                    },
+                    "go": [MockFunction],
+                    "goBack": [MockFunction],
+                    "goForward": [MockFunction],
+                    "isActive": [MockFunction],
+                    "listen": [MockFunction],
+                    "location": Object {
+                      "query": Object {},
+                    },
+                    "push": [MockFunction] {
+                      "calls": Array [
+                        Array [
+                          Object {
+                            "pathname": undefined,
+                            "query": Object {
+                              "environment": Array [],
+                              "project": Array [],
+                              "statsPeriod": "14d",
+                              "utc": "true",
+                            },
+                          },
+                        ],
+                      ],
+                      "results": Array [
+                        Object {
+                          "isThrow": false,
+                          "value": undefined,
+                        },
+                      ],
+                    },
+                    "replace": [MockFunction],
+                    "setRouteLeaveHook": [MockFunction],
+                  }
+                }
+                selection={
+                  Object {
+                    "datetime": Object {
+                      "end": null,
+                      "period": "14d",
+                      "start": null,
+                      "utc": true,
+                    },
+                    "environments": Array [],
+                    "projects": Array [],
+                  }
+                }
+                showAbsolute={true}
+                showEnvironmentSelector={true}
+                showRelative={true}
+              >
+                <Header>
+                  <Base
+                    className="css-1xc47v8-Header e10yv9i90"
+                  >
+                    <div
+                      className="css-1xc47v8-Header e10yv9i90"
+                      is={null}
+                    >
+                      <HeaderItemPosition>
+                        <div
+                          className="css-5udiwc-HeaderItemPosition e165b9e40"
+                        >
+                          <MultipleProjectSelector
+                            onChange={[Function]}
+                            onUpdate={[Function]}
+                            organization={
+                              Object {
+                                "access": Array [
+                                  "org:read",
+                                  "org:write",
+                                  "org:admin",
+                                  "project:read",
+                                  "project:write",
+                                  "project:admin",
+                                  "team:read",
+                                  "team:write",
+                                  "team:admin",
+                                ],
+                                "features": Array [
+                                  "sentry10",
+                                ],
+                                "id": "3",
+                                "name": "Organization Name",
+                                "onboardingTasks": Array [],
+                                "projects": Array [],
+                                "scrapeJavaScript": true,
+                                "slug": "org-slug",
+                                "status": Object {
+                                  "id": "active",
+                                  "name": "active",
+                                },
+                                "teams": Array [],
+                              }
+                            }
+                            projects={Array []}
+                            value={Array []}
+                          >
+                            <StyledProjectSelector
+                              multi={true}
+                              onChange={[Function]}
+                              onClose={[Function]}
+                              onMultiSelect={[Function]}
+                              onSelect={[Function]}
+                              onUpdate={[Function]}
+                              organization={
+                                Object {
+                                  "access": Array [
+                                    "org:read",
+                                    "org:write",
+                                    "org:admin",
+                                    "project:read",
+                                    "project:write",
+                                    "project:admin",
+                                    "team:read",
+                                    "team:write",
+                                    "team:admin",
+                                  ],
+                                  "features": Array [
+                                    "sentry10",
+                                  ],
+                                  "id": "3",
+                                  "name": "Organization Name",
+                                  "onboardingTasks": Array [],
+                                  "projects": Array [],
+                                  "scrapeJavaScript": true,
+                                  "slug": "org-slug",
+                                  "status": Object {
+                                    "id": "active",
+                                    "name": "active",
+                                  },
+                                  "teams": Array [],
+                                }
+                              }
+                              projects={Array []}
+                              rootClassName="css-h5t9nh-rootContainerStyles"
+                              selectedProjects={Array []}
+                              value={Array []}
+                            >
+                              <ProjectSelector
+                                className="css-iw79rr-StyledProjectSelector ewlipse0"
+                                multi={true}
+                                onChange={[Function]}
+                                onClose={[Function]}
+                                onMultiSelect={[Function]}
+                                onSelect={[Function]}
+                                onUpdate={[Function]}
+                                organization={
+                                  Object {
+                                    "access": Array [
+                                      "org:read",
+                                      "org:write",
+                                      "org:admin",
+                                      "project:read",
+                                      "project:write",
+                                      "project:admin",
+                                      "team:read",
+                                      "team:write",
+                                      "team:admin",
+                                    ],
+                                    "features": Array [
+                                      "sentry10",
+                                    ],
+                                    "id": "3",
+                                    "name": "Organization Name",
+                                    "onboardingTasks": Array [],
+                                    "projects": Array [],
+                                    "scrapeJavaScript": true,
+                                    "slug": "org-slug",
+                                    "status": Object {
+                                      "id": "active",
+                                      "name": "active",
+                                    },
+                                    "teams": Array [],
+                                  }
+                                }
+                                projectId={null}
+                                projects={Array []}
+                                rootClassName="css-h5t9nh-rootContainerStyles"
+                                selectedProjects={Array []}
+                                value={Array []}
+                              >
+                                <DropdownAutoComplete
+                                  alignMenu="left"
+                                  blendCorner={false}
+                                  className="ewlipse0 css-11ijjr3-StyledProjectSelector"
+                                  closeOnSelect={true}
+                                  emptyHidesInput={true}
+                                  emptyMessage="You have no projects"
+                                  inputProps={
+                                    Object {
+                                      "style": Object {
+                                        "padding": 8,
+                                        "paddingLeft": 14,
+                                      },
+                                    }
+                                  }
+                                  items={Array []}
+                                  maxHeight={500}
+                                  menuFooter={[Function]}
+                                  noResultsMessage="No projects found"
+                                  onClose={[Function]}
+                                  onSelect={[Function]}
+                                  rootClassName="css-h5t9nh-rootContainerStyles"
+                                  searchPlaceholder="Filter projects"
+                                  virtualizedHeight={40}
+                                  zIndex={1001}
+                                >
+                                  <DropdownAutoCompleteMenu
+                                    alignMenu="left"
+                                    blendCorner={false}
+                                    className="ewlipse0 css-11ijjr3-StyledProjectSelector"
+                                    closeOnSelect={true}
+                                    emptyHidesInput={true}
+                                    emptyMessage="You have no projects"
+                                    inputProps={
+                                      Object {
+                                        "style": Object {
+                                          "padding": 8,
+                                          "paddingLeft": 14,
+                                        },
+                                      }
+                                    }
+                                    items={Array []}
+                                    maxHeight={500}
+                                    menuFooter={[Function]}
+                                    noResultsMessage="No projects found"
+                                    onClose={[Function]}
+                                    onSelect={[Function]}
+                                    rootClassName="css-h5t9nh-rootContainerStyles"
+                                    searchPlaceholder="Filter projects"
+                                    virtualizedHeight={40}
+                                    zIndex={1001}
+                                  >
+                                    <AutoComplete
+                                      closeOnSelect={true}
+                                      disabled={false}
+                                      inputIsActor={false}
+                                      itemToString={[Function]}
+                                      onClose={[Function]}
+                                      onSelect={[Function]}
+                                      resetInputOnClose={true}
+                                      shouldSelectWithEnter={true}
+                                      shouldSelectWithTab={false}
+                                      virtualizedHeight={40}
+                                      zIndex={1001}
+                                    >
+                                      <DropdownMenu
+                                        closeOnEscape={true}
+                                        isOpen={false}
+                                        keepMenuOpen={false}
+                                        onClickOutside={[Function]}
+                                      >
+                                        <AutoCompleteRoot
+                                          className="css-h5t9nh-rootContainerStyles"
+                                        >
+                                          <Component
+                                            className="css-1ppsre-AutoCompleteRoot-rootContainerStyles ejumqxq0"
+                                          >
+                                            <div
+                                              className="css-1ppsre-AutoCompleteRoot-rootContainerStyles ejumqxq0"
+                                            >
+                                              <Actor
+                                                innerRef={[Function]}
+                                                isOpen={false}
+                                                onClick={[Function]}
+                                                onKeyDown={[Function]}
+                                                onMouseEnter={[Function]}
+                                                onMouseLeave={[Function]}
+                                                role="button"
+                                                style={
+                                                  Object {
+                                                    "outline": "none",
+                                                  }
+                                                }
+                                                tabIndex={-1}
+                                              >
+                                                <div
+                                                  className="css-17fe80j-Actor e53us8t0"
+                                                  onClick={[Function]}
+                                                  onKeyDown={[Function]}
+                                                  onMouseEnter={[Function]}
+                                                  onMouseLeave={[Function]}
+                                                  role="button"
+                                                  style={
+                                                    Object {
+                                                      "outline": "none",
+                                                    }
+                                                  }
+                                                  tabIndex={-1}
+                                                >
+                                                  <StyledHeaderItem
+                                                    active={false}
+                                                    hasChanges={false}
+                                                    hasSelected={false}
+                                                    icon={
+                                                      <StyledInlineSvg
+                                                        src="icon-project"
+                                                      />
+                                                    }
+                                                    isOpen={false}
+                                                    onClear={[Function]}
+                                                    onClick={[Function]}
+                                                    onKeyDown={[Function]}
+                                                    onMouseEnter={[Function]}
+                                                    onMouseLeave={[Function]}
+                                                    onSubmit={[Function]}
+                                                    style={
+                                                      Object {
+                                                        "outline": "none",
+                                                      }
+                                                    }
+                                                    tabIndex={-1}
+                                                  >
+                                                    <ForwardRef
+                                                      active={false}
+                                                      className="css-22y332-StyledHeaderItem ewlipse1"
+                                                      hasChanges={false}
+                                                      hasSelected={false}
+                                                      icon={
+                                                        <StyledInlineSvg
+                                                          src="icon-project"
+                                                        />
+                                                      }
+                                                      isOpen={false}
+                                                      onClear={[Function]}
+                                                      onClick={[Function]}
+                                                      onKeyDown={[Function]}
+                                                      onMouseEnter={[Function]}
+                                                      onMouseLeave={[Function]}
+                                                      onSubmit={[Function]}
+                                                      style={
+                                                        Object {
+                                                          "outline": "none",
+                                                        }
+                                                      }
+                                                      tabIndex={-1}
+                                                    >
+                                                      <HeaderItem
+                                                        active={false}
+                                                        allowClear={true}
+                                                        className="css-22y332-StyledHeaderItem ewlipse1"
+                                                        hasChanges={false}
+                                                        hasSelected={false}
+                                                        icon={
+                                                          <StyledInlineSvg
+                                                            src="icon-project"
+                                                          />
+                                                        }
+                                                        innerRef={null}
+                                                        isOpen={false}
+                                                        onClear={[Function]}
+                                                        onClick={[Function]}
+                                                        onKeyDown={[Function]}
+                                                        onMouseEnter={[Function]}
+                                                        onMouseLeave={[Function]}
+                                                        onSubmit={[Function]}
+                                                        style={
+                                                          Object {
+                                                            "outline": "none",
+                                                          }
+                                                        }
+                                                        tabIndex={-1}
+                                                      >
+                                                        <StyledHeaderItem
+                                                          active={false}
+                                                          className="css-22y332-StyledHeaderItem ewlipse1"
+                                                          hasSelected={false}
+                                                          innerRef={null}
+                                                          isOpen={false}
+                                                          onClick={[Function]}
+                                                          onKeyDown={[Function]}
+                                                          onMouseEnter={[Function]}
+                                                          onMouseLeave={[Function]}
+                                                          style={
+                                                            Object {
+                                                              "outline": "none",
+                                                            }
+                                                          }
+                                                          tabIndex={-1}
+                                                        >
+                                                          <div
+                                                            className="ewlipse1 css-1v6igws-StyledHeaderItem-StyledHeaderItem enk2k7v0"
+                                                            onClick={[Function]}
+                                                            onKeyDown={[Function]}
+                                                            onMouseEnter={[Function]}
+                                                            onMouseLeave={[Function]}
+                                                            style={
+                                                              Object {
+                                                                "outline": "none",
+                                                              }
+                                                            }
+                                                            tabIndex={-1}
+                                                          >
+                                                            <IconContainer
+                                                              hasSelected={false}
+                                                            >
+                                                              <span
+                                                                className="css-1af7peg-IconContainer enk2k7v2"
+                                                              >
+                                                                <StyledInlineSvg
+                                                                  src="icon-project"
+                                                                >
+                                                                  <InlineSvg
+                                                                    className="css-1ibtmti-StyledInlineSvg ewlipse2"
+                                                                    src="icon-project"
+                                                                  >
+                                                                    <StyledSvg
+                                                                      className="css-1ibtmti-StyledInlineSvg ewlipse2"
+                                                                      height="1em"
+                                                                      viewBox={Object {}}
+                                                                      width="1em"
+                                                                    >
+                                                                      <svg
+                                                                        className="ewlipse2 css-1ux8cow-StyledSvg-StyledInlineSvg e2idor0"
+                                                                        height="1em"
+                                                                        viewBox={Object {}}
+                                                                        width="1em"
+                                                                      >
+                                                                        <use
+                                                                          href="#test"
+                                                                          xlinkHref="#test"
+                                                                        />
+                                                                      </svg>
+                                                                    </StyledSvg>
+                                                                  </InlineSvg>
+                                                                </StyledInlineSvg>
+                                                              </span>
+                                                            </IconContainer>
+                                                            <Content>
+                                                              <div
+                                                                className="css-1yquznf-Content enk2k7v1"
+                                                              >
+                                                                All Projects
+                                                              </div>
+                                                            </Content>
+                                                            <StyledChevron
+                                                              hasChanges={false}
+                                                              isOpen={false}
+                                                              onClick={[Function]}
+                                                            >
+                                                              <div
+                                                                className="css-ft4nwy-StyledChevron enk2k7v4"
+                                                                onClick={[Function]}
+                                                              >
+                                                                <InlineSvg
+                                                                  src="icon-chevron-down"
+                                                                >
+                                                                  <StyledSvg
+                                                                    height="1em"
+                                                                    viewBox={Object {}}
+                                                                    width="1em"
+                                                                  >
+                                                                    <svg
+                                                                      className="css-ryh69w-StyledSvg e2idor0"
+                                                                      height="1em"
+                                                                      viewBox={Object {}}
+                                                                      width="1em"
+                                                                    >
+                                                                      <use
+                                                                        href="#test"
+                                                                        xlinkHref="#test"
+                                                                      />
+                                                                    </svg>
+                                                                  </StyledSvg>
+                                                                </InlineSvg>
+                                                              </div>
+                                                            </StyledChevron>
+                                                          </div>
+                                                        </StyledHeaderItem>
+                                                      </HeaderItem>
+                                                    </ForwardRef>
+                                                  </StyledHeaderItem>
+                                                </div>
+                                              </Actor>
+                                            </div>
+                                          </Component>
+                                        </AutoCompleteRoot>
+                                      </DropdownMenu>
+                                    </AutoComplete>
+                                  </DropdownAutoCompleteMenu>
+                                </DropdownAutoComplete>
+                              </ProjectSelector>
+                            </StyledProjectSelector>
+                          </MultipleProjectSelector>
+                        </div>
+                      </HeaderItemPosition>
+                      <HeaderSeparator>
+                        <Base
+                          className="css-zkrb0n-HeaderSeparator elp5f3l0"
+                        >
+                          <div
+                            className="css-zkrb0n-HeaderSeparator elp5f3l0"
+                            is={null}
+                          />
+                        </Base>
+                      </HeaderSeparator>
+                      <HeaderItemPosition>
+                        <div
+                          className="css-5udiwc-HeaderItemPosition e165b9e40"
+                        >
+                          <withApi(MultipleEnvironmentSelector)
+                            onChange={[Function]}
+                            onUpdate={[Function]}
+                            organization={
+                              Object {
+                                "access": Array [
+                                  "org:read",
+                                  "org:write",
+                                  "org:admin",
+                                  "project:read",
+                                  "project:write",
+                                  "project:admin",
+                                  "team:read",
+                                  "team:write",
+                                  "team:admin",
+                                ],
+                                "features": Array [
+                                  "sentry10",
+                                ],
+                                "id": "3",
+                                "name": "Organization Name",
+                                "onboardingTasks": Array [],
+                                "projects": Array [],
+                                "scrapeJavaScript": true,
+                                "slug": "org-slug",
+                                "status": Object {
+                                  "id": "active",
+                                  "name": "active",
+                                },
+                                "teams": Array [],
+                              }
+                            }
+                            value={Array []}
+                          >
+                            <MultipleEnvironmentSelector
+                              api={Client {}}
+                              onChange={[Function]}
+                              onUpdate={[Function]}
+                              organization={
+                                Object {
+                                  "access": Array [
+                                    "org:read",
+                                    "org:write",
+                                    "org:admin",
+                                    "project:read",
+                                    "project:write",
+                                    "project:admin",
+                                    "team:read",
+                                    "team:write",
+                                    "team:admin",
+                                  ],
+                                  "features": Array [
+                                    "sentry10",
+                                  ],
+                                  "id": "3",
+                                  "name": "Organization Name",
+                                  "onboardingTasks": Array [],
+                                  "projects": Array [],
+                                  "scrapeJavaScript": true,
+                                  "slug": "org-slug",
+                                  "status": Object {
+                                    "id": "active",
+                                    "name": "active",
+                                  },
+                                  "teams": Array [],
+                                }
+                              }
+                              value={Array []}
+                            >
+                              <withApi(FetchOrganizationEnvironments)
+                                organization={
+                                  Object {
+                                    "access": Array [
+                                      "org:read",
+                                      "org:write",
+                                      "org:admin",
+                                      "project:read",
+                                      "project:write",
+                                      "project:admin",
+                                      "team:read",
+                                      "team:write",
+                                      "team:admin",
+                                    ],
+                                    "features": Array [
+                                      "sentry10",
+                                    ],
+                                    "id": "3",
+                                    "name": "Organization Name",
+                                    "onboardingTasks": Array [],
+                                    "projects": Array [],
+                                    "scrapeJavaScript": true,
+                                    "slug": "org-slug",
+                                    "status": Object {
+                                      "id": "active",
+                                      "name": "active",
+                                    },
+                                    "teams": Array [],
+                                  }
+                                }
+                              >
+                                <FetchOrganizationEnvironments
+                                  api={Client {}}
+                                  organization={
+                                    Object {
+                                      "access": Array [
+                                        "org:read",
+                                        "org:write",
+                                        "org:admin",
+                                        "project:read",
+                                        "project:write",
+                                        "project:admin",
+                                        "team:read",
+                                        "team:write",
+                                        "team:admin",
+                                      ],
+                                      "features": Array [
+                                        "sentry10",
+                                      ],
+                                      "id": "3",
+                                      "name": "Organization Name",
+                                      "onboardingTasks": Array [],
+                                      "projects": Array [],
+                                      "scrapeJavaScript": true,
+                                      "slug": "org-slug",
+                                      "status": Object {
+                                        "id": "active",
+                                        "name": "active",
+                                      },
+                                      "teams": Array [],
+                                    }
+                                  }
+                                >
+                                  <StyledDropdownAutoComplete
+                                    alignMenu="left"
+                                    blendCorner={false}
+                                    closeOnSelect={true}
+                                    emptyHidesInput={true}
+                                    emptyMessage={<LoadingIndicator />}
+                                    inputProps={
+                                      Object {
+                                        "style": Object {
+                                          "padding": 8,
+                                          "paddingLeft": 14,
+                                        },
+                                      }
+                                    }
+                                    items={Array []}
+                                    maxHeight={500}
+                                    menuProps={
+                                      Object {
+                                        "style": Object {
+                                          "position": "relative",
+                                        },
+                                      }
+                                    }
+                                    noResultsMessage="No environments found"
+                                    onClose={[Function]}
+                                    onSelect={[Function]}
+                                    rootClassName="css-1utm1zz-rootClassName"
+                                    searchPlaceholder="Filter environments"
+                                    virtualizedHeight={40}
+                                    zIndex={1001}
+                                  >
+                                    <DropdownAutoComplete
+                                      alignMenu="left"
+                                      blendCorner={false}
+                                      className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
+                                      closeOnSelect={true}
+                                      emptyHidesInput={true}
+                                      emptyMessage={<LoadingIndicator />}
+                                      inputProps={
+                                        Object {
+                                          "style": Object {
+                                            "padding": 8,
+                                            "paddingLeft": 14,
+                                          },
+                                        }
+                                      }
+                                      items={Array []}
+                                      maxHeight={500}
+                                      menuProps={
+                                        Object {
+                                          "style": Object {
+                                            "position": "relative",
+                                          },
+                                        }
+                                      }
+                                      noResultsMessage="No environments found"
+                                      onClose={[Function]}
+                                      onSelect={[Function]}
+                                      rootClassName="css-1utm1zz-rootClassName"
+                                      searchPlaceholder="Filter environments"
+                                      virtualizedHeight={40}
+                                      zIndex={1001}
+                                    >
+                                      <DropdownAutoCompleteMenu
+                                        alignMenu="left"
+                                        blendCorner={false}
+                                        className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
+                                        closeOnSelect={true}
+                                        emptyHidesInput={true}
+                                        emptyMessage={<LoadingIndicator />}
+                                        inputProps={
+                                          Object {
+                                            "style": Object {
+                                              "padding": 8,
+                                              "paddingLeft": 14,
+                                            },
+                                          }
+                                        }
+                                        items={Array []}
+                                        maxHeight={500}
+                                        menuProps={
+                                          Object {
+                                            "style": Object {
+                                              "position": "relative",
+                                            },
+                                          }
+                                        }
+                                        noResultsMessage="No environments found"
+                                        onClose={[Function]}
+                                        onSelect={[Function]}
+                                        rootClassName="css-1utm1zz-rootClassName"
+                                        searchPlaceholder="Filter environments"
+                                        virtualizedHeight={40}
+                                        zIndex={1001}
+                                      >
+                                        <AutoComplete
+                                          closeOnSelect={true}
+                                          disabled={false}
+                                          inputIsActor={false}
+                                          itemToString={[Function]}
+                                          onClose={[Function]}
+                                          onSelect={[Function]}
+                                          resetInputOnClose={true}
+                                          shouldSelectWithEnter={true}
+                                          shouldSelectWithTab={false}
+                                          virtualizedHeight={40}
+                                          zIndex={1001}
+                                        >
+                                          <DropdownMenu
+                                            closeOnEscape={true}
+                                            isOpen={false}
+                                            keepMenuOpen={false}
+                                            onClickOutside={[Function]}
+                                          >
+                                            <AutoCompleteRoot
+                                              className="css-1utm1zz-rootClassName"
+                                            >
+                                              <Component
+                                                className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
+                                              >
+                                                <div
+                                                  className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
+                                                >
+                                                  <Actor
+                                                    innerRef={[Function]}
+                                                    isOpen={false}
+                                                    onClick={[Function]}
+                                                    onKeyDown={[Function]}
+                                                    onMouseEnter={[Function]}
+                                                    onMouseLeave={[Function]}
+                                                    role="button"
+                                                    style={
+                                                      Object {
+                                                        "outline": "none",
+                                                      }
+                                                    }
+                                                    tabIndex={-1}
+                                                  >
+                                                    <div
+                                                      className="css-17fe80j-Actor e53us8t0"
+                                                      onClick={[Function]}
+                                                      onKeyDown={[Function]}
+                                                      onMouseEnter={[Function]}
+                                                      onMouseLeave={[Function]}
+                                                      role="button"
+                                                      style={
+                                                        Object {
+                                                          "outline": "none",
+                                                        }
+                                                      }
+                                                      tabIndex={-1}
+                                                    >
+                                                      <StyledHeaderItem
+                                                        hasChanges={false}
+                                                        hasSelected={false}
+                                                        icon={
+                                                          <StyledInlineSvg
+                                                            src="icon-window"
+                                                          />
+                                                        }
+                                                        innerRef={[Function]}
+                                                        isOpen={false}
+                                                        onClear={[Function]}
+                                                        onClick={[Function]}
+                                                        onKeyDown={[Function]}
+                                                        onMouseEnter={[Function]}
+                                                        onMouseLeave={[Function]}
+                                                        onSubmit={[Function]}
+                                                        style={
+                                                          Object {
+                                                            "outline": "none",
+                                                          }
+                                                        }
+                                                        tabIndex={-1}
+                                                      >
+                                                        <ForwardRef
+                                                          className="css-22y332-StyledHeaderItem e1gsuvme0"
+                                                          hasChanges={false}
+                                                          hasSelected={false}
+                                                          icon={
+                                                            <StyledInlineSvg
+                                                              src="icon-window"
+                                                            />
+                                                          }
+                                                          isOpen={false}
+                                                          onClear={[Function]}
+                                                          onClick={[Function]}
+                                                          onKeyDown={[Function]}
+                                                          onMouseEnter={[Function]}
+                                                          onMouseLeave={[Function]}
+                                                          onSubmit={[Function]}
+                                                          style={
+                                                            Object {
+                                                              "outline": "none",
+                                                            }
+                                                          }
+                                                          tabIndex={-1}
+                                                        >
+                                                          <HeaderItem
+                                                            allowClear={true}
+                                                            className="css-22y332-StyledHeaderItem e1gsuvme0"
+                                                            hasChanges={false}
+                                                            hasSelected={false}
+                                                            icon={
+                                                              <StyledInlineSvg
+                                                                src="icon-window"
+                                                              />
+                                                            }
+                                                            innerRef={[Function]}
+                                                            isOpen={false}
+                                                            onClear={[Function]}
+                                                            onClick={[Function]}
+                                                            onKeyDown={[Function]}
+                                                            onMouseEnter={[Function]}
+                                                            onMouseLeave={[Function]}
+                                                            onSubmit={[Function]}
+                                                            style={
+                                                              Object {
+                                                                "outline": "none",
+                                                              }
+                                                            }
+                                                            tabIndex={-1}
+                                                          >
+                                                            <StyledHeaderItem
+                                                              className="css-22y332-StyledHeaderItem e1gsuvme0"
+                                                              hasSelected={false}
+                                                              innerRef={[Function]}
+                                                              isOpen={false}
+                                                              onClick={[Function]}
+                                                              onKeyDown={[Function]}
+                                                              onMouseEnter={[Function]}
+                                                              onMouseLeave={[Function]}
+                                                              style={
+                                                                Object {
+                                                                  "outline": "none",
+                                                                }
+                                                              }
+                                                              tabIndex={-1}
+                                                            >
+                                                              <div
+                                                                className="e1gsuvme0 css-1v6igws-StyledHeaderItem-StyledHeaderItem enk2k7v0"
+                                                                onClick={[Function]}
+                                                                onKeyDown={[Function]}
+                                                                onMouseEnter={[Function]}
+                                                                onMouseLeave={[Function]}
+                                                                style={
+                                                                  Object {
+                                                                    "outline": "none",
+                                                                  }
+                                                                }
+                                                                tabIndex={-1}
+                                                              >
+                                                                <IconContainer
+                                                                  hasSelected={false}
+                                                                >
+                                                                  <span
+                                                                    className="css-1af7peg-IconContainer enk2k7v2"
+                                                                  >
+                                                                    <StyledInlineSvg
+                                                                      src="icon-window"
+                                                                    >
+                                                                      <InlineSvg
+                                                                        className="css-1ctth4-StyledInlineSvg e1gsuvme1"
+                                                                        src="icon-window"
+                                                                      >
+                                                                        <StyledSvg
+                                                                          className="css-1ctth4-StyledInlineSvg e1gsuvme1"
+                                                                          height="1em"
+                                                                          viewBox={Object {}}
+                                                                          width="1em"
+                                                                        >
+                                                                          <svg
+                                                                            className="e1gsuvme1 css-1vh2z4q-StyledSvg-StyledInlineSvg e2idor0"
+                                                                            height="1em"
+                                                                            viewBox={Object {}}
+                                                                            width="1em"
+                                                                          >
+                                                                            <use
+                                                                              href="#test"
+                                                                              xlinkHref="#test"
+                                                                            />
+                                                                          </svg>
+                                                                        </StyledSvg>
+                                                                      </InlineSvg>
+                                                                    </StyledInlineSvg>
+                                                                  </span>
+                                                                </IconContainer>
+                                                                <Content>
+                                                                  <div
+                                                                    className="css-1yquznf-Content enk2k7v1"
+                                                                  >
+                                                                    All Environments
+                                                                  </div>
+                                                                </Content>
+                                                                <StyledChevron
+                                                                  hasChanges={false}
+                                                                  isOpen={false}
+                                                                  onClick={[Function]}
+                                                                >
+                                                                  <div
+                                                                    className="css-ft4nwy-StyledChevron enk2k7v4"
+                                                                    onClick={[Function]}
+                                                                  >
+                                                                    <InlineSvg
+                                                                      src="icon-chevron-down"
+                                                                    >
+                                                                      <StyledSvg
+                                                                        height="1em"
+                                                                        viewBox={Object {}}
+                                                                        width="1em"
+                                                                      >
+                                                                        <svg
+                                                                          className="css-ryh69w-StyledSvg e2idor0"
+                                                                          height="1em"
+                                                                          viewBox={Object {}}
+                                                                          width="1em"
+                                                                        >
+                                                                          <use
+                                                                            href="#test"
+                                                                            xlinkHref="#test"
+                                                                          />
+                                                                        </svg>
+                                                                      </StyledSvg>
+                                                                    </InlineSvg>
+                                                                  </div>
+                                                                </StyledChevron>
+                                                              </div>
+                                                            </StyledHeaderItem>
+                                                          </HeaderItem>
+                                                        </ForwardRef>
+                                                      </StyledHeaderItem>
+                                                    </div>
+                                                  </Actor>
+                                                </div>
+                                              </Component>
+                                            </AutoCompleteRoot>
+                                          </DropdownMenu>
+                                        </AutoComplete>
+                                      </DropdownAutoCompleteMenu>
+                                    </DropdownAutoComplete>
+                                  </StyledDropdownAutoComplete>
+                                </FetchOrganizationEnvironments>
+                              </withApi(FetchOrganizationEnvironments)>
+                            </MultipleEnvironmentSelector>
+                          </withApi(MultipleEnvironmentSelector)>
+                        </div>
+                      </HeaderItemPosition>
+                      <HeaderSeparator>
+                        <Base
+                          className="css-zkrb0n-HeaderSeparator elp5f3l0"
+                        >
+                          <div
+                            className="css-zkrb0n-HeaderSeparator elp5f3l0"
+                            is={null}
+                          />
+                        </Base>
+                      </HeaderSeparator>
+                      <HeaderItemPosition>
+                        <div
+                          className="css-5udiwc-HeaderItemPosition e165b9e40"
+                        >
+                          <TimeRangeSelector
+                            end={null}
+                            key="period:14d-start:null-end:null-utc:true"
+                            onChange={[Function]}
+                            onUpdate={[Function]}
+                            relative="14d"
+                            showAbsolute={true}
+                            showRelative={true}
+                            start={null}
+                            utc={true}
+                          >
+                            <DropdownMenu
+                              closeOnEscape={true}
+                              isOpen={false}
+                              keepMenuOpen={true}
+                              onClose={[Function]}
+                              onOpen={[Function]}
+                            >
+                              <TimeRangeRoot>
+                                <div
+                                  className="css-1lz3nth-TimeRangeRoot e1u8612l0"
+                                >
+                                  <StyledHeaderItem
+                                    allowClear={false}
+                                    hasChanges={false}
+                                    hasSelected={true}
+                                    icon={
+                                      <StyledInlineSvg
+                                        src="icon-calendar"
+                                      />
+                                    }
+                                    innerRef={[Function]}
+                                    isOpen={false}
+                                    onClick={[Function]}
+                                    onKeyDown={[Function]}
+                                    onMouseEnter={[Function]}
+                                    onMouseLeave={[Function]}
+                                    onSubmit={[Function]}
+                                    style={
+                                      Object {
+                                        "outline": "none",
+                                      }
+                                    }
+                                    tabIndex={-1}
+                                  >
+                                    <ForwardRef
+                                      allowClear={false}
+                                      className="css-22y332-StyledHeaderItem e1u8612l1"
+                                      hasChanges={false}
+                                      hasSelected={true}
+                                      icon={
+                                        <StyledInlineSvg
+                                          src="icon-calendar"
+                                        />
+                                      }
+                                      isOpen={false}
+                                      onClick={[Function]}
+                                      onKeyDown={[Function]}
+                                      onMouseEnter={[Function]}
+                                      onMouseLeave={[Function]}
+                                      onSubmit={[Function]}
+                                      style={
+                                        Object {
+                                          "outline": "none",
+                                        }
+                                      }
+                                      tabIndex={-1}
+                                    >
+                                      <HeaderItem
+                                        allowClear={false}
+                                        className="css-22y332-StyledHeaderItem e1u8612l1"
+                                        hasChanges={false}
+                                        hasSelected={true}
+                                        icon={
+                                          <StyledInlineSvg
+                                            src="icon-calendar"
+                                          />
+                                        }
+                                        innerRef={[Function]}
+                                        isOpen={false}
+                                        onClick={[Function]}
+                                        onKeyDown={[Function]}
+                                        onMouseEnter={[Function]}
+                                        onMouseLeave={[Function]}
+                                        onSubmit={[Function]}
+                                        style={
+                                          Object {
+                                            "outline": "none",
+                                          }
+                                        }
+                                        tabIndex={-1}
+                                      >
+                                        <StyledHeaderItem
+                                          className="css-22y332-StyledHeaderItem e1u8612l1"
+                                          hasSelected={true}
+                                          innerRef={[Function]}
+                                          isOpen={false}
+                                          onClick={[Function]}
+                                          onKeyDown={[Function]}
+                                          onMouseEnter={[Function]}
+                                          onMouseLeave={[Function]}
+                                          style={
+                                            Object {
+                                              "outline": "none",
+                                            }
+                                          }
+                                          tabIndex={-1}
+                                        >
+                                          <div
+                                            className="e1u8612l1 css-xvcre7-StyledHeaderItem-StyledHeaderItem enk2k7v0"
+                                            onClick={[Function]}
+                                            onKeyDown={[Function]}
+                                            onMouseEnter={[Function]}
+                                            onMouseLeave={[Function]}
+                                            style={
+                                              Object {
+                                                "outline": "none",
+                                              }
+                                            }
+                                            tabIndex={-1}
+                                          >
+                                            <IconContainer
+                                              hasSelected={true}
+                                            >
+                                              <span
+                                                className="css-mzutvw-IconContainer enk2k7v2"
+                                              >
+                                                <StyledInlineSvg
+                                                  src="icon-calendar"
+                                                >
+                                                  <InlineSvg
+                                                    className="css-1ctth4-StyledInlineSvg e1u8612l2"
+                                                    src="icon-calendar"
+                                                  >
+                                                    <StyledSvg
+                                                      className="css-1ctth4-StyledInlineSvg e1u8612l2"
+                                                      height="1em"
+                                                      viewBox={Object {}}
+                                                      width="1em"
+                                                    >
+                                                      <svg
+                                                        className="e1u8612l2 css-1vh2z4q-StyledSvg-StyledInlineSvg e2idor0"
+                                                        height="1em"
+                                                        viewBox={Object {}}
+                                                        width="1em"
+                                                      >
+                                                        <use
+                                                          href="#test"
+                                                          xlinkHref="#test"
+                                                        />
+                                                      </svg>
+                                                    </StyledSvg>
+                                                  </InlineSvg>
+                                                </StyledInlineSvg>
+                                              </span>
+                                            </IconContainer>
+                                            <Content>
+                                              <div
+                                                className="css-1yquznf-Content enk2k7v1"
+                                              >
+                                                Last 14 days
+                                              </div>
+                                            </Content>
+                                            <StyledChevron
+                                              hasChanges={false}
+                                              isOpen={false}
+                                              onClick={[Function]}
+                                            >
+                                              <div
+                                                className="css-ft4nwy-StyledChevron enk2k7v4"
+                                                onClick={[Function]}
+                                              >
+                                                <InlineSvg
+                                                  src="icon-chevron-down"
+                                                >
+                                                  <StyledSvg
+                                                    height="1em"
+                                                    viewBox={Object {}}
+                                                    width="1em"
+                                                  >
+                                                    <svg
+                                                      className="css-ryh69w-StyledSvg e2idor0"
+                                                      height="1em"
+                                                      viewBox={Object {}}
+                                                      width="1em"
+                                                    >
+                                                      <use
+                                                        href="#test"
+                                                        xlinkHref="#test"
+                                                      />
+                                                    </svg>
+                                                  </StyledSvg>
+                                                </InlineSvg>
+                                              </div>
+                                            </StyledChevron>
+                                          </div>
+                                        </StyledHeaderItem>
+                                      </HeaderItem>
+                                    </ForwardRef>
+                                  </StyledHeaderItem>
+                                </div>
+                              </TimeRangeRoot>
+                            </DropdownMenu>
+                          </TimeRangeSelector>
+                        </div>
+                      </HeaderItemPosition>
+                    </div>
+                  </Base>
+                </Header>
+              </GlobalSelectionHeader>
+            </withGlobalSelection(GlobalSelectionHeader)>
+          </withRouter(withGlobalSelection(GlobalSelectionHeader))>
+          <Content>
+            <div
+              className="css-1wsl7kd-Content euo9in30"
+            >
+              <UserFeedbackContainer
+                location={
+                  Object {
+                    "query": Object {},
+                    "search": "",
+                  }
+                }
+                pageLinks="<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:0:1>; rel=\\"previous\\"; results=\\"false\\"; cursor=\\"0:0:1\\", <https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:100:0>; rel=\\"next\\"; results=\\"true\\"; cursor=\\"0:100:0\\""
+                params={
+                  Object {
+                    "orgId": "org-slug",
+                  }
+                }
+                status="unresolved"
+              >
+                <div>
+                  <div
+                    className="row release-list-header"
+                  >
+                    <div
+                      className="col-sm-9"
+                    >
+                      <Header>
+                        <h4
+                          className="css-149epof-Header en9t8ev0"
+                        >
+                          User Feedback
+                        </h4>
+                      </Header>
+                    </div>
+                    <div
+                      className="col-sm-3"
+                      style={
+                        Object {
+                          "textAlign": "right",
+                        }
+                      }
+                    >
+                      <div
+                        className="btn-group"
+                      >
+                        <Link
+                          className="btn btn-sm btn-default active"
+                          onlyActiveOnIndex={false}
+                          style={Object {}}
+                          to={
+                            Object {
+                              "pathname": undefined,
+                              "query": Object {},
+                            }
+                          }
+                        >
+                          <a
+                            className="btn btn-sm btn-default active"
+                            onClick={[Function]}
+                            style={Object {}}
+                          >
+                            Unresolved
+                          </a>
+                        </Link>
+                        <Link
+                          className="btn btn-sm btn-default"
+                          onlyActiveOnIndex={false}
+                          style={Object {}}
+                          to={
+                            Object {
+                              "pathname": undefined,
+                              "query": Object {
+                                "status": "",
+                              },
+                            }
+                          }
+                        >
+                          <a
+                            className="btn btn-sm btn-default"
+                            onClick={[Function]}
+                            style={Object {}}
+                          >
+                            All Issues
+                          </a>
+                        </Link>
+                      </div>
+                    </div>
+                  </div>
+                  <Panel>
+                    <Component
+                      className="css-yahxlu-Panel e1laxa7d0"
+                    >
+                      <div
+                        className="css-yahxlu-Panel e1laxa7d0"
+                      >
+                        <PanelBody
+                          className="issue-list"
+                          direction="column"
+                          disablePadding={true}
+                          flex={false}
+                        >
+                          <div
+                            className="css-9vq8an-textStyles issue-list"
+                          >
+                            <CompactIssue
+                              data={
+                                Object {
+                                  "assignedTo": null,
+                                  "id": "1",
+                                  "project": Object {
+                                    "id": "2",
+                                    "slug": "project-slug",
+                                  },
+                                  "stats": Object {
+                                    "24h": Array [
+                                      Array [
+                                        1517281200,
+                                        2,
+                                      ],
+                                      Array [
+                                        1517310000,
+                                        1,
+                                      ],
+                                    ],
+                                    "30d": Array [
+                                      Array [
+                                        1514764800,
+                                        1,
+                                      ],
+                                      Array [
+                                        1515024000,
+                                        122,
+                                      ],
+                                    ],
+                                  },
+                                  "tags": Array [],
+                                }
+                              }
+                              id="1"
+                              key="123"
+                              orgId="org-slug"
+                              projectId="project-slug"
+                            >
+                              <PanelItem
+                                className="issue level-undefined"
+                                direction="column"
+                                p={2}
+                                style={
+                                  Object {
+                                    "paddingBottom": "6px",
+                                    "paddingTop": "12px",
+                                  }
+                                }
+                              >
+                                <Base
+                                  className="issue level-undefined css-1cf8lr1-PanelItem eo8n7lk0"
+                                  direction="column"
+                                  p={2}
+                                  style={
+                                    Object {
+                                      "paddingBottom": "6px",
+                                      "paddingTop": "12px",
+                                    }
+                                  }
+                                >
+                                  <div
+                                    className="issue level-undefined css-1cf8lr1-PanelItem eo8n7lk0"
+                                    is={null}
+                                    style={
+                                      Object {
+                                        "paddingBottom": "6px",
+                                        "paddingTop": "12px",
+                                      }
+                                    }
+                                  >
+                                    <CompactIssueHeader
+                                      data={
+                                        Object {
+                                          "assignedTo": null,
+                                          "id": "1",
+                                          "project": Object {
+                                            "id": "2",
+                                            "slug": "project-slug",
+                                          },
+                                          "stats": Object {
+                                            "24h": Array [
+                                              Array [
+                                                1517281200,
+                                                2,
+                                              ],
+                                              Array [
+                                                1517310000,
+                                                1,
+                                              ],
+                                            ],
+                                            "30d": Array [
+                                              Array [
+                                                1514764800,
+                                                1,
+                                              ],
+                                              Array [
+                                                1515024000,
+                                                122,
+                                              ],
+                                            ],
+                                          },
+                                          "tags": Array [],
+                                        }
+                                      }
+                                      orgId="org-slug"
+                                      projectId="project-slug"
+                                    >
+                                      <Flex
+                                        align="center"
+                                      >
+                                        <Base
+                                          align="center"
+                                          className="css-5ipae5"
+                                        >
+                                          <div
+                                            className="css-5ipae5"
+                                            is={null}
+                                          >
+                                            <Box
+                                              mr={1}
+                                            >
+                                              <Base
+                                                className="css-xgysgc"
+                                                mr={1}
+                                              >
+                                                <div
+                                                  className="css-xgysgc"
+                                                  is={null}
+                                                >
+                                                  <span
+                                                    className="error-level truncate"
+                                                  />
+                                                </div>
+                                              </Base>
+                                            </Box>
+                                            <h3
+                                              className="truncate"
+                                            >
+                                              <ProjectLink
+                                                to="/org-slug/project-slug/issues/1/"
+                                              >
+                                                <Link
+                                                  onlyActiveOnIndex={false}
+                                                  style={Object {}}
+                                                  to="/org-slug/project-slug/issues/1/"
+                                                >
+                                                  <a
+                                                    onClick={[Function]}
+                                                    style={Object {}}
+                                                  >
+                                                    <span
+                                                      className="icon icon-soundoff"
+                                                    />
+                                                    <span
+                                                      className="icon icon-star-solid"
+                                                    />
+                                                    <span />
+                                                  </a>
+                                                </Link>
+                                              </ProjectLink>
+                                            </h3>
+                                          </div>
+                                        </Base>
+                                      </Flex>
+                                      <div
+                                        className="event-extra"
+                                      >
+                                        <span
+                                          className="project-name"
+                                        >
+                                          <ProjectLink
+                                            to="/org-slug/project-slug/"
+                                          >
+                                            <Link
+                                              onlyActiveOnIndex={false}
+                                              style={Object {}}
+                                              to="/org-slug/project-slug/"
+                                            >
+                                              <a
+                                                onClick={[Function]}
+                                                style={Object {}}
+                                              >
+                                                project-slug
+                                              </a>
+                                            </Link>
+                                          </ProjectLink>
+                                        </span>
+                                        <span>
+                                          <Link
+                                            className="comments"
+                                            to="/org-slug/project-slug/issues/1/activity/"
+                                          >
+                                            <Link
+                                              className="comments"
+                                              onlyActiveOnIndex={false}
+                                              style={Object {}}
+                                              to="/org-slug/project-slug/issues/1/activity/"
+                                            >
+                                              <a
+                                                className="comments"
+                                                onClick={[Function]}
+                                                style={Object {}}
+                                              >
+                                                <span
+                                                  className="icon icon-comments"
+                                                  style={Object {}}
+                                                />
+                                                <span
+                                                  className="tag-count"
+                                                />
+                                              </a>
+                                            </Link>
+                                          </Link>
+                                        </span>
+                                        <span
+                                          className="culprit"
+                                        />
+                                      </div>
+                                    </CompactIssueHeader>
+                                    <EventUserFeedback
+                                      issueId="1"
+                                      orgId="org-slug"
+                                      projectId="project-slug"
+                                      report={
+                                        Object {
+                                          "comments": "Something bad happened",
+                                          "dateCreated": "2018-12-20T00:00:00.000Z",
+                                          "email": "lyn@sentry.io",
+                                          "event": Object {
+                                            "eventID": "12345678901234567890123456789012",
+                                            "groupID": "1",
+                                            "id": "1",
+                                            "message": "ApiException",
+                                          },
+                                          "id": "123",
+                                          "issue": Object {
+                                            "assignedTo": null,
+                                            "id": "1",
+                                            "project": Object {
+                                              "id": "2",
+                                              "slug": "project-slug",
+                                            },
+                                            "stats": Object {
+                                              "24h": Array [
+                                                Array [
+                                                  1517281200,
+                                                  2,
+                                                ],
+                                                Array [
+                                                  1517310000,
+                                                  1,
+                                                ],
+                                              ],
+                                              "30d": Array [
+                                                Array [
+                                                  1514764800,
+                                                  1,
+                                                ],
+                                                Array [
+                                                  1515024000,
+                                                  122,
+                                                ],
+                                              ],
+                                            },
+                                            "tags": Array [],
+                                          },
+                                          "name": "Lyn",
+                                        }
+                                      }
+                                    >
+                                      <div
+                                        className="user-report"
+                                      >
+                                        <div
+                                          className="activity-container"
+                                        >
+                                          <ul
+                                            className="activity"
+                                          >
+                                            <li
+                                              className="activity-note"
+                                            >
+                                              <Avatar
+                                                className="avatar"
+                                                hasTooltip={false}
+                                                size={38}
+                                                user={
+                                                  Object {
+                                                    "comments": "Something bad happened",
+                                                    "dateCreated": "2018-12-20T00:00:00.000Z",
+                                                    "email": "lyn@sentry.io",
+                                                    "event": Object {
+                                                      "eventID": "12345678901234567890123456789012",
+                                                      "groupID": "1",
+                                                      "id": "1",
+                                                      "message": "ApiException",
+                                                    },
+                                                    "id": "123",
+                                                    "issue": Object {
+                                                      "assignedTo": null,
+                                                      "id": "1",
+                                                      "project": Object {
+                                                        "id": "2",
+                                                        "slug": "project-slug",
+                                                      },
+                                                      "stats": Object {
+                                                        "24h": Array [
+                                                          Array [
+                                                            1517281200,
+                                                            2,
+                                                          ],
+                                                          Array [
+                                                            1517310000,
+                                                            1,
+                                                          ],
+                                                        ],
+                                                        "30d": Array [
+                                                          Array [
+                                                            1514764800,
+                                                            1,
+                                                          ],
+                                                          Array [
+                                                            1515024000,
+                                                            122,
+                                                          ],
+                                                        ],
+                                                      },
+                                                      "tags": Array [],
+                                                    },
+                                                    "name": "Lyn",
+                                                  }
+                                                }
+                                              >
+                                                <UserAvatar
+                                                  className="avatar"
+                                                  gravatar={false}
+                                                  hasTooltip={false}
+                                                  size={38}
+                                                  user={
+                                                    Object {
+                                                      "comments": "Something bad happened",
+                                                      "dateCreated": "2018-12-20T00:00:00.000Z",
+                                                      "email": "lyn@sentry.io",
+                                                      "event": Object {
+                                                        "eventID": "12345678901234567890123456789012",
+                                                        "groupID": "1",
+                                                        "id": "1",
+                                                        "message": "ApiException",
+                                                      },
+                                                      "id": "123",
+                                                      "issue": Object {
+                                                        "assignedTo": null,
+                                                        "id": "1",
+                                                        "project": Object {
+                                                          "id": "2",
+                                                          "slug": "project-slug",
+                                                        },
+                                                        "stats": Object {
+                                                          "24h": Array [
+                                                            Array [
+                                                              1517281200,
+                                                              2,
+                                                            ],
+                                                            Array [
+                                                              1517310000,
+                                                              1,
+                                                            ],
+                                                          ],
+                                                          "30d": Array [
+                                                            Array [
+                                                              1514764800,
+                                                              1,
+                                                            ],
+                                                            Array [
+                                                              1515024000,
+                                                              122,
+                                                            ],
+                                                          ],
+                                                        },
+                                                        "tags": Array [],
+                                                      },
+                                                      "name": "Lyn",
+                                                    }
+                                                  }
+                                                >
+                                                  <BaseAvatar
+                                                    className="avatar"
+                                                    gravatarId="lyn@sentry.io"
+                                                    hasTooltip={false}
+                                                    letterId="lyn@sentry.io"
+                                                    round={true}
+                                                    size={38}
+                                                    style={Object {}}
+                                                    title="Lyn"
+                                                    tooltip="Lyn (lyn@sentry.io)"
+                                                    type="letter_avatar"
+                                                    uploadPath="avatar"
+                                                  >
+                                                    <Tooltip
+                                                      disabled={true}
+                                                      title="Lyn (lyn@sentry.io)"
+                                                    >
+                                                      <StyledBaseAvatar
+                                                        className="avatar avatar"
+                                                        loaded={true}
+                                                        round={true}
+                                                        style={
+                                                          Object {
+                                                            "height": "38px",
+                                                            "width": "38px",
+                                                          }
+                                                        }
+                                                      >
+                                                        <span
+                                                          className="avatar avatar css-3f9bmx-StyledBaseAvatar e1z0ohzl0"
+                                                          style={
+                                                            Object {
+                                                              "height": "38px",
+                                                              "width": "38px",
+                                                            }
+                                                          }
+                                                        >
+                                                          <LetterAvatar
+                                                            displayName="Lyn"
+                                                            identifier="lyn@sentry.io"
+                                                            round={true}
+                                                          >
+                                                            <Svg
+                                                              round={true}
+                                                              viewBox="0 0 120 120"
+                                                            >
+                                                              <svg
+                                                                className="css-1r4mnb9-Svg e1knxa8x0"
+                                                                viewBox="0 0 120 120"
+                                                              >
+                                                                <rect
+                                                                  fill="#57b1be"
+                                                                  height="120"
+                                                                  rx="15"
+                                                                  ry="15"
+                                                                  width="120"
+                                                                  x="0"
+                                                                  y="0"
+                                                                />
+                                                                <text
+                                                                  fill="#FFFFFF"
+                                                                  fontSize="65"
+                                                                  style={
+                                                                    Object {
+                                                                      "dominantBaseline": "central",
+                                                                    }
+                                                                  }
+                                                                  textAnchor="middle"
+                                                                  x="50%"
+                                                                  y="50%"
+                                                                >
+                                                                  L
+                                                                </text>
+                                                              </svg>
+                                                            </Svg>
+                                                          </LetterAvatar>
+                                                        </span>
+                                                      </StyledBaseAvatar>
+                                                    </Tooltip>
+                                                  </BaseAvatar>
+                                                </UserAvatar>
+                                              </Avatar>
+                                              <div
+                                                className="activity-bubble"
+                                              >
+                                                <div>
+                                                  <TimeSince
+                                                    date="2018-12-20T00:00:00.000Z"
+                                                    suffix="ago"
+                                                  >
+                                                    <time
+                                                      dateTime="2018-12-20T00:00:00.000Z"
+                                                      title="December 20, 2018 12:00 AM UTC"
+                                                    >
+                                                      in a year
+                                                    </time>
+                                                  </TimeSince>
+                                                  <div
+                                                    className="activity-author"
+                                                  >
+                                                    Lyn
+                                                    <small>
+                                                      lyn@sentry.io
+                                                    </small>
+                                                    <small>
+                                                      <Link
+                                                        to="/org-slug/project-slug/issues/1/events/1"
+                                                      >
+                                                        <Link
+                                                          onlyActiveOnIndex={false}
+                                                          style={Object {}}
+                                                          to="/org-slug/project-slug/issues/1/events/1"
+                                                        >
+                                                          <a
+                                                            onClick={[Function]}
+                                                            style={Object {}}
+                                                          >
+                                                            View event
+                                                          </a>
+                                                        </Link>
+                                                      </Link>
+                                                    </small>
+                                                  </div>
+                                                  <p
+                                                    dangerouslySetInnerHTML={
+                                                      Object {
+                                                        "__html": "Something bad happened",
+                                                      }
+                                                    }
+                                                  />
+                                                </div>
+                                              </div>
+                                            </li>
+                                          </ul>
+                                        </div>
+                                      </div>
+                                    </EventUserFeedback>
+                                  </div>
+                                </Base>
+                              </PanelItem>
+                            </CompactIssue>
+                          </div>
+                        </PanelBody>
+                      </div>
+                    </Component>
+                  </Panel>
+                  <Pagination
+                    className="stream-pagination"
+                    onCursor={[Function]}
+                    pageLinks="<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:0:1>; rel=\\"previous\\"; results=\\"false\\"; cursor=\\"0:0:1\\", <https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:100:0>; rel=\\"next\\"; results=\\"true\\"; cursor=\\"0:100:0\\""
+                  >
+                    <div
+                      className="clearfix stream-pagination"
+                    >
+                      <div
+                        className="btn-group pull-right"
+                      >
+                        <a
+                          className="btn btn-default btn-lg prev disabled"
+                          disabled={true}
+                          onClick={[Function]}
+                        >
+                          <span
+                            className="icon-arrow-left"
+                            title="Previous"
+                          />
+                        </a>
+                        <a
+                          className="btn btn-default btn-lg next"
+                          disabled={false}
+                          onClick={[Function]}
+                        >
+                          <span
+                            className="icon-arrow-right"
+                            title="Next"
+                          />
+                        </a>
+                      </div>
+                    </div>
+                  </Pagination>
+                </div>
+              </UserFeedbackContainer>
+            </div>
+          </Content>
+        </Feature>
+      </FeatureContainer>
+    </DocumentTitle>
+  </SideEffect(DocumentTitle)>
+</OrganizationUserFeedback>
+`;
diff --git a/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap b/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
index 76ba5f9a8e..dcfa7e49bc 100644
--- a/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
+++ b/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
@@ -8,6 +8,12 @@ exports[`projectUserFeedback renders 1`] = `
     }
   }
   pageLinks="<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:0:1>; rel=\\"previous\\"; results=\\"false\\"; cursor=\\"0:0:1\\", <https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:100:0>; rel=\\"next\\"; results=\\"true\\"; cursor=\\"0:100:0\\""
+  params={
+    Object {
+      "orgId": "org-slug",
+      "projectId": "project-slug",
+    }
+  }
   status="unresolved"
 >
   <CompactIssue
@@ -56,7 +62,14 @@ exports[`projectUserFeedback renders 1`] = `
       report={
         Object {
           "comments": "Something bad happened",
+          "dateCreated": "2018-12-20T00:00:00.000Z",
           "email": "lyn@sentry.io",
+          "event": Object {
+            "eventID": "12345678901234567890123456789012",
+            "groupID": "1",
+            "id": "1",
+            "message": "ApiException",
+          },
           "id": "123",
           "issue": Object {
             "assignedTo": null,
diff --git a/tests/js/spec/views/userFeedback/organizationUserFeedback.spec.jsx b/tests/js/spec/views/userFeedback/organizationUserFeedback.spec.jsx
new file mode 100644
index 0000000000..944b8585fe
--- /dev/null
+++ b/tests/js/spec/views/userFeedback/organizationUserFeedback.spec.jsx
@@ -0,0 +1,56 @@
+import React from 'react';
+
+import {mount} from 'enzyme';
+import {OrganizationUserFeedback} from 'app/views/userFeedback/organizationUserFeedback';
+
+describe('OrganizationUserFeedback', function() {
+  beforeEach(function() {
+    const pageLinks =
+      '<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:0:1>; rel="previous"; results="false"; cursor="0:0:1", ' +
+      '<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:100:0>; rel="next"; results="true"; cursor="0:100:0"';
+
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/user-feedback/',
+      body: [TestStubs.UserFeedback()],
+      headers: {Link: pageLinks},
+    });
+
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/environments/',
+      body: TestStubs.Environments(),
+    });
+  });
+
+  it('renders', function() {
+    const params = {
+      organization: TestStubs.Organization({features: ['sentry10']}),
+      location: {query: {}, search: ''},
+      params: {
+        orgId: 'org-slug',
+      },
+    };
+    const wrapper = mount(
+      <OrganizationUserFeedback {...params} />,
+      TestStubs.routerContext()
+    );
+
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('no access', function() {
+    const params = {
+      organization: TestStubs.Organization(),
+      location: {query: {}, search: ''},
+      params: {
+        orgId: 'org-slug',
+      },
+    };
+
+    const wrapper = mount(
+      <OrganizationUserFeedback {...params} />,
+      TestStubs.routerContext()
+    );
+
+    expect(wrapper.text()).toBe("You don't have access to this feature");
+  });
+});
