commit 504870f71b168479ef16a5c188e0514624d921fb
Author: Mark Story <mark@mark-story.com>
Date:   Wed Feb 6 13:29:13 2019 -0500

    fix(issues) Fix missing/wrong assignees on issue details (#11932)
    
    In an organization issue context we need to fetch the project members as
    the issue details view is not within the ProjectContext. I've refactored
    out the code to fetch project members into an action creator as well.
    
    Fixes APP-1090

diff --git a/src/sentry/static/sentry/app/actionCreators/members.jsx b/src/sentry/static/sentry/app/actionCreators/members.jsx
index e66c32aad6..33eb6ff51d 100644
--- a/src/sentry/static/sentry/app/actionCreators/members.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/members.jsx
@@ -14,6 +14,16 @@ export function fetchOrgMembers(api, orgId) {
   });
 }
 
+export function fetchProjectMembers(api, orgId, projectId) {
+  const url = `/projects/${orgId}/${projectId}/members/`;
+  return api.requestPromise(url, {method: 'GET'}).then(members => {
+    members = members.filter(m => m.user).map(m => m.user);
+    MemberListStore.loadInitialData(members);
+
+    return members;
+  });
+}
+
 /**
  * Convert a list of members with user & project data
  * into a object that maps project slugs : users in that project.
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
index bb18677fa5..24edbd4e8f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 import {Link} from 'react-router';
 import ApiMixin from 'app/mixins/apiMixin';
+import {fetchProjectMembers} from 'app/actionCreators/members';
 import AssigneeSelector from 'app/components/assigneeSelector';
 import Count from 'app/components/count';
 import IndicatorStore from 'app/stores/indicatorStore';
@@ -35,6 +36,20 @@ const GroupHeader = createReactClass({
 
   mixins: [ApiMixin, OrganizationState],
 
+  getInitialState() {
+    return {memberList: null};
+  },
+
+  componentDidMount() {
+    const {organization} = this.context;
+    const {group} = this.props;
+    fetchProjectMembers(
+      this.api,
+      organization.slug,
+      group.project.slug
+    ).then(memberList => this.setState({memberList}));
+  },
+
   onToggleMute() {
     const group = this.props.group;
     const org = this.context.organization;
@@ -90,6 +105,7 @@ const GroupHeader = createReactClass({
       className += ' isResolved';
     }
 
+    const {memberList} = this.state;
     const groupId = group.id;
     const orgId = this.context.organization.slug;
     const message = this.getMessage();
@@ -174,7 +190,7 @@ const GroupHeader = createReactClass({
               </div>
               <div className="assigned-to m-l-1">
                 <h6 className="nav-header">{t('Assignee')}</h6>
-                <AssigneeSelector id={group.id} />
+                <AssigneeSelector id={group.id} memberList={memberList} />
               </div>
             </div>
           </div>
diff --git a/src/sentry/static/sentry/app/views/projects/projectContext.jsx b/src/sentry/static/sentry/app/views/projects/projectContext.jsx
index d1eb427072..08c94aa9f2 100644
--- a/src/sentry/static/sentry/app/views/projects/projectContext.jsx
+++ b/src/sentry/static/sentry/app/views/projects/projectContext.jsx
@@ -6,6 +6,7 @@ import Reflux from 'reflux';
 import createReactClass from 'create-react-class';
 
 import {loadEnvironments} from 'app/actionCreators/environments';
+import {fetchProjectMembers} from 'app/actionCreators/members';
 import {setActiveProject} from 'app/actionCreators/projects';
 import {t} from 'app/locale';
 import ApiMixin from 'app/mixins/apiMixin';
@@ -182,12 +183,7 @@ const ProjectContext = createReactClass({
         }
       );
 
-      // TODO(dcramer): move member list to organization level
-      this.api.request(this.getMemberListEndpoint(), {
-        success: data => {
-          MemberListStore.loadInitialData(data.filter(m => m.user).map(m => m.user));
-        },
-      });
+      fetchProjectMembers(this.api, orgId, projectId);
     } else if (activeProject && !activeProject.isMember) {
       this.setState({
         loading: false,
@@ -213,11 +209,6 @@ const ProjectContext = createReactClass({
     return `/projects/${orgId}/${projectId}/environments/`;
   },
 
-  getMemberListEndpoint() {
-    const {orgId, projectId} = this.props;
-    return `/projects/${orgId}/${projectId}/members/`;
-  },
-
   setProjectNavSection(section) {
     this.setState({
       projectNavSection: section,
