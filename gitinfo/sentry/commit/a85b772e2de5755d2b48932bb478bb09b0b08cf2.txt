commit a85b772e2de5755d2b48932bb478bb09b0b08cf2
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 2 23:48:29 2012 -0800

    Some additional test cleanup and structure

diff --git a/tests/client/__init__.py b/tests/client/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/client/tests.py b/tests/client/tests.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/tasks/__init__.py b/tests/tasks/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/tasks/cleanup/__init__.py b/tests/tasks/cleanup/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/tasks/cleanup/tests.py b/tests/tasks/cleanup/tests.py
new file mode 100644
index 0000000000..ba5b731ab1
--- /dev/null
+++ b/tests/tasks/cleanup/tests.py
@@ -0,0 +1,85 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import, with_statement
+
+import logging
+
+from sentry.models import Event, Group, MessageCountByMinute, \
+  MessageFilterValue
+from tests.testcases import TestCase
+
+
+class SentryCleanupTest(TestCase):
+    fixtures = ['tests/fixtures/cleanup.json']
+
+    def test_simple(self):
+        from sentry.queue.tasks.cleanup import cleanup
+
+        cleanup(days=1)
+
+        self.assertEquals(Event.objects.count(), 0)
+        self.assertEquals(Group.objects.count(), 0)
+        self.assertEquals(MessageCountByMinute.objects.count(), 0)
+        self.assertEquals(MessageFilterValue.objects.count(), 0)
+
+    def test_logger(self):
+        from sentry.queue.tasks.cleanup import cleanup
+
+        cleanup(days=1, logger='sentry')
+
+        self.assertEquals(Event.objects.count(), 8)
+        for message in Event.objects.all():
+            self.assertNotEquals(message.logger, 'sentry')
+        self.assertEquals(Group.objects.count(), 3)
+        for message in Group.objects.all():
+            self.assertNotEquals(message.logger, 'sentry')
+
+        cleanup(days=1, logger='awesome')
+
+        self.assertEquals(Event.objects.count(), 4)
+        for message in Event.objects.all():
+            self.assertNotEquals(message.logger, 'awesome')
+        self.assertEquals(Group.objects.count(), 2)
+        for message in Group.objects.all():
+            self.assertNotEquals(message.logger, 'awesome')
+
+        cleanup(days=1, logger='root')
+
+        self.assertEquals(Event.objects.count(), 0)
+        self.assertEquals(Group.objects.count(), 0)
+        self.assertEquals(MessageCountByMinute.objects.count(), 0)
+        self.assertEquals(MessageFilterValue.objects.count(), 0)
+
+    def test_server_name(self):
+        from sentry.queue.tasks.cleanup import cleanup
+
+        cleanup(days=1, server='dcramer.local')
+
+        self.assertEquals(Event.objects.count(), 2)
+        for message in Event.objects.all():
+            self.assertNotEquals(message.server_name, 'dcramer.local')
+        self.assertEquals(Group.objects.count(), 1)
+
+        cleanup(days=1, server='node.local')
+
+        self.assertEquals(Event.objects.count(), 0)
+        self.assertEquals(Group.objects.count(), 0)
+        self.assertEquals(MessageCountByMinute.objects.count(), 0)
+        self.assertEquals(MessageFilterValue.objects.count(), 0)
+
+    def test_level(self):
+        from sentry.queue.tasks.cleanup import cleanup
+
+        cleanup(days=1, level=logging.ERROR)
+
+        self.assertEquals(Event.objects.count(), 1)
+        for message in Event.objects.all():
+            self.assertNotEquals(message.level, logging.ERROR)
+        self.assertEquals(Group.objects.count(), 1)
+
+        cleanup(days=1, level=logging.DEBUG)
+
+        self.assertEquals(Event.objects.count(), 0)
+        self.assertEquals(Group.objects.count(), 0)
+        self.assertEquals(MessageCountByMinute.objects.count(), 0)
+        self.assertEquals(MessageFilterValue.objects.count(), 0)
diff --git a/tests/tests.py b/tests/tests.py
index f536e57b0f..7579c93729 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -11,12 +11,11 @@ from django.contrib.auth.models import User
 from django.core import mail
 from django.core.urlresolvers import reverse
 
-from sentry import processors
 from sentry.conf import settings
 from sentry.exceptions import InvalidInterface, InvalidData
 from sentry.interfaces import Interface
-from sentry.models import Event, Group, MessageCountByMinute, \
-  MessageFilterValue, Project, ProjectMember
+from sentry.models import Event, Group, \
+  Project, ProjectMember
 from sentry.web.helpers import get_login_url
 from sentry.utils import MockDjangoRequest
 from sentry.utils.auth import get_auth_header
@@ -366,82 +365,6 @@ class SentryHelpersTest(TestCase):
         django_settings.DATABASE_ENGINE = _engine
 
 
-class SentryCleanupTest(TestCase):
-    fixtures = ['tests/fixtures/cleanup.json']
-
-    def test_simple(self):
-        from sentry.queue.tasks.cleanup import cleanup
-
-        cleanup(days=1)
-
-        self.assertEquals(Event.objects.count(), 0)
-        self.assertEquals(Group.objects.count(), 0)
-        self.assertEquals(MessageCountByMinute.objects.count(), 0)
-        self.assertEquals(MessageFilterValue.objects.count(), 0)
-
-    def test_logger(self):
-        from sentry.queue.tasks.cleanup import cleanup
-
-        cleanup(days=1, logger='sentry')
-
-        self.assertEquals(Event.objects.count(), 8)
-        for message in Event.objects.all():
-            self.assertNotEquals(message.logger, 'sentry')
-        self.assertEquals(Group.objects.count(), 3)
-        for message in Group.objects.all():
-            self.assertNotEquals(message.logger, 'sentry')
-
-        cleanup(days=1, logger='awesome')
-
-        self.assertEquals(Event.objects.count(), 4)
-        for message in Event.objects.all():
-            self.assertNotEquals(message.logger, 'awesome')
-        self.assertEquals(Group.objects.count(), 2)
-        for message in Group.objects.all():
-            self.assertNotEquals(message.logger, 'awesome')
-
-        cleanup(days=1, logger='root')
-
-        self.assertEquals(Event.objects.count(), 0)
-        self.assertEquals(Group.objects.count(), 0)
-        self.assertEquals(MessageCountByMinute.objects.count(), 0)
-        self.assertEquals(MessageFilterValue.objects.count(), 0)
-
-    def test_server_name(self):
-        from sentry.queue.tasks.cleanup import cleanup
-
-        cleanup(days=1, server='dcramer.local')
-
-        self.assertEquals(Event.objects.count(), 2)
-        for message in Event.objects.all():
-            self.assertNotEquals(message.server_name, 'dcramer.local')
-        self.assertEquals(Group.objects.count(), 1)
-
-        cleanup(days=1, server='node.local')
-
-        self.assertEquals(Event.objects.count(), 0)
-        self.assertEquals(Group.objects.count(), 0)
-        self.assertEquals(MessageCountByMinute.objects.count(), 0)
-        self.assertEquals(MessageFilterValue.objects.count(), 0)
-
-    def test_level(self):
-        from sentry.queue.tasks.cleanup import cleanup
-
-        cleanup(days=1, level=logging.ERROR)
-
-        self.assertEquals(Event.objects.count(), 1)
-        for message in Event.objects.all():
-            self.assertNotEquals(message.level, logging.ERROR)
-        self.assertEquals(Group.objects.count(), 1)
-
-        cleanup(days=1, level=logging.DEBUG)
-
-        self.assertEquals(Event.objects.count(), 0)
-        self.assertEquals(Group.objects.count(), 0)
-        self.assertEquals(MessageCountByMinute.objects.count(), 0)
-        self.assertEquals(MessageFilterValue.objects.count(), 0)
-
-
 class SentrySearchTest(TestCase):
     def test_checksum_query(self):
         checksum = 'a' * 32
diff --git a/tests/utils/__init__.py b/tests/utils/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/utils/instancemanager/__init__.py b/tests/utils/instancemanager/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/utils/instancemanager/tests.py b/tests/utils/instancemanager/tests.py
new file mode 100644
index 0000000000..e69de29bb2
