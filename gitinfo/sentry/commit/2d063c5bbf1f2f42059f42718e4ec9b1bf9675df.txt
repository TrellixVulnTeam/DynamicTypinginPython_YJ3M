commit 2d063c5bbf1f2f42059f42718e4ec9b1bf9675df
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Aug 27 01:10:11 2013 -0700

    Correct sequence hack by doing a second update call when things dont go as expected

diff --git a/conftest.py b/conftest.py
index 66d6b59ccb..dc72a1dfa3 100644
--- a/conftest.py
+++ b/conftest.py
@@ -67,36 +67,3 @@ def pytest_configure(config):
     # enable draft features
     settings.SENTRY_ENABLE_EXPLORE_CODE = True
     settings.SENTRY_ENABLE_EXPLORE_USERS = True
-
-
-_HAS_FIXED_SEQUENCES = False
-
-
-def pytest_runtest_call(item):
-    # HACK: sequences arent reset for postgres
-    global _HAS_FIXED_SEQUENCES
-
-    if not _HAS_FIXED_SEQUENCES:
-        import os
-
-        os.environ['DJANGO_COLORS'] = 'nocolor'
-
-        from django.core.management import call_command
-        from django.conf import settings
-        from django.db import connection
-        from django.db.models.loading import get_app
-        from StringIO import StringIO
-
-        commands = StringIO()
-        cursor = connection.cursor()
-
-        for app in settings.INSTALLED_APPS:
-            label = app.split('.')[-1]
-            if get_app(label, emptyOK=True):
-                call_command('sqlsequencereset', label, stdout=commands)
-
-        value = commands.getvalue()
-        if value:
-            cursor.execute(value)
-
-        _HAS_FIXED_SEQUENCES = True
diff --git a/src/sentry/models.py b/src/sentry/models.py
index d5753d95b3..0e3a34f49f 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -44,7 +44,7 @@ from sentry.manager import (
     UserOptionManager, TagKeyManager, TeamManager, UserManager)
 from sentry.signals import buffer_incr_complete, regression_signal
 from sentry.utils.cache import memoize
-from sentry.utils.db import has_trending, reset_sequences
+from sentry.utils.db import has_trending
 from sentry.utils.http import absolute_uri
 from sentry.utils.models import (
     Model, GzippedDictField, BoundedIntegerField, BoundedPositiveIntegerField,
@@ -1210,14 +1210,15 @@ def create_default_project(created_models, verbosity=2, **kwargs):
         user = None
 
     project = Project.objects.create(
-        id=settings.SENTRY_PROJECT,
         public=False,
         name='Sentry (Internal)',
         slug='sentry',
         owner=user,
     )
-
-    reset_sequences('sentry')
+    # HACK: manually update the ID after insert due to Postgres
+    # sequence issues
+    if project.id != settings.SENTRY_PROJECT:
+        project.update(id=settings.SENTRY_PROJECT)
 
     if verbosity > 0:
         print 'Created internal Sentry project (slug=%s, id=%s)' % (project.slug, project.id)
diff --git a/src/sentry/utils/db.py b/src/sentry/utils/db.py
index cea9ecc75d..bf253fe9a9 100644
--- a/src/sentry/utils/db.py
+++ b/src/sentry/utils/db.py
@@ -138,22 +138,3 @@ def attach_foreignkey(objects, field, related=[], database=None):
 
 def table_exists(name, using=DEFAULT_DB_ALIAS):
     return name in connections[using].introspection.table_names()
-
-
-def reset_sequences(app='sentry'):
-    import os
-
-    os.environ['DJANGO_COLORS'] = 'nocolor'
-
-    from django.core.management import call_command
-    from django.db import connection
-    from StringIO import StringIO
-
-    commands = StringIO()
-    call_command('sqlsequencereset', app, stdout=commands)
-
-    output = commands.getvalue()
-    if not output:
-        return
-    cursor = connection.cursor()
-    cursor.execute(output)
