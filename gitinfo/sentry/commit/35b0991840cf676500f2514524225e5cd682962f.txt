commit 35b0991840cf676500f2514524225e5cd682962f
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Mar 9 21:51:48 2015 -0700

    Various work on org sidebar / members

diff --git a/src/sentry/api/serializers/models/organization_member.py b/src/sentry/api/serializers/models/organization_member.py
index bf9498747a..a80836ae30 100644
--- a/src/sentry/api/serializers/models/organization_member.py
+++ b/src/sentry/api/serializers/models/organization_member.py
@@ -11,7 +11,7 @@ class OrganizationMemberSerializer(Serializer):
         d = {
             'id': str(obj.id),
             'email': obj.email or obj.user.email,
-            'access': obj.get_type_display(),
+            'roleName': obj.get_type_display(),
             'pending': obj.is_pending,
             'flags': {
                 'sso:linked': getattr(obj.flags, 'sso:linked'),
diff --git a/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx b/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx
new file mode 100644
index 0000000000..07779deb9c
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/organizationHomeSidebar.jsx
@@ -0,0 +1,24 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+
+var ListLink = require("../components/listLink");
+var OrganizationState = require("../mixins/organizationState");
+
+var OrganizationHomeSidebar = React.createClass({
+  mixins: [OrganizationState],
+
+  render() {
+    var org = this.getOrganization();
+    var orgParams = {orgId: org.slug};
+
+    return (
+      <ul className="nav nav-stacked">
+        <ListLink to="organizationTeams" params={orgParams}>Teams</ListLink>
+        <ListLink to="organizationMembers" params={orgParams}>Members</ListLink>
+      </ul>
+    );
+  }
+});
+
+module.exports = OrganizationHomeSidebar;
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index a559ebe53d..1e13c9d504 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -12,6 +12,7 @@ var GroupTags = require("./views/groupTags");
 var GroupTagValues = require("./views/groupTagValues");
 var GroupOverview = require("./views/groupOverview");
 var OrganizationDetails = require("./views/organizationDetails");
+var OrganizationMembers = require("./views/organizationMembers");
 var OrganizationTeams = require("./views/organizationTeams");
 var ProjectDetails = require("./views/projectDetails");
 var PropTypes = require("./proptypes");
@@ -23,6 +24,7 @@ var routes = (
   <Route name="app" path="/" handler={App}>
     <Route name="organizationDetails" path="/:orgId/" handler={OrganizationDetails}>
       <DefaultRoute name="organizationTeams" handler={OrganizationTeams} />
+      <Route name="organizationMembers" path="members/" handler={OrganizationMembers} />
       <Route name="teamDetails" path="teams/:teamId/" handler={TeamDetails}>
         <DefaultRoute name="teamDashboard" handler={TeamDashboard} />
       </Route>
diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
index fa3c13a4b4..e5428fbabb 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -1,7 +1,6 @@
 /*** @jsx React.DOM */
 
 var React = require("react");
-var Reflux = require("reflux");
 var Router = require("react-router");
 
 var api = require("../api");
diff --git a/src/sentry/static/sentry/app/views/organizationMembers.jsx b/src/sentry/static/sentry/app/views/organizationMembers.jsx
new file mode 100644
index 0000000000..e575742aa4
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationMembers.jsx
@@ -0,0 +1,136 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+var Router = require("react-router");
+
+var api = require("../api");
+var BreadcrumbMixin = require("../mixins/breadcrumbMixin");
+var Gravatar = require("../components/gravatar");
+var LoadingError = require("../components/loadingError");
+var LoadingIndicator = require("../components/loadingIndicator");
+var OrganizationState = require("../mixins/organizationState");
+var RouteMixin = require("../mixins/routeMixin");
+
+var OrganizationMembers = React.createClass({
+  mixins: [
+    BreadcrumbMixin,
+    OrganizationState,
+    RouteMixin,
+    Router.State
+  ],
+
+  crumbReservations: 1,
+
+  getInitialState() {
+    return {
+      loading: false,
+      error: false,
+      memberList: null
+    };
+  },
+
+  componentWillMount() {
+    this.fetchData();
+  },
+
+  routeDidChange(nextPath, nextParams) {
+    if (nextParams.orgId != this.getParams().orgId) {
+      this.fetchData();
+    }
+  },
+
+  fetchData() {
+    this.setBreadcrumbs([
+      {name: 'Members', to: 'organizationMembers'}
+    ]);
+
+    this.setState({
+      loading: true,
+      error: false
+    });
+
+    api.request(this.getOrganizationMembersEndpoint(), {
+      success: (data) => {
+        this.setState({
+          memberList: data,
+          loading: false
+        });
+      },
+      error: () => {
+        this.setState({
+          error: true,
+          loading: false
+        });
+      }
+    });
+  },
+
+  getOrganizationMembersEndpoint() {
+    var params = this.getParams();
+    return '/organizations/' + params.orgId + '/members/';
+  },
+
+  render() {
+    if (this.state.loading) {
+      return <LoadingIndicator />;
+    } else if (this.state.error) {
+      return <LoadingError onRetry={this.fetchData} />;
+    }
+
+    return (
+      <div>
+        <h3>Members</h3>
+        <p>Members of your organization gain slightly elevated permissions over individual team members. For example, organization administrators can create new teams as well as manage all organization settings (including the list of admins).</p>
+        <br />
+        <table className="table simple-list table-bordered member-list">
+          <colgroup>
+            <col width="30%"/>
+            <col width="25%" />
+            <col width="20%"/>
+            <col width="20%"/>
+            <col width="5%"/>
+          </colgroup>
+          <thead>
+            <tr>
+              <th>Member</th>
+              <th>&nbsp;</th>
+              <th>Role</th>
+              <th>Teams</th>
+              <th className="squash">&nbsp;</th>
+            </tr>
+          </thead>
+          <tbody>
+            {this.state.memberList.map((member) => {
+              return (
+                <tr>
+                  <td className="user-info">
+                    <Gravatar email={member.email} size={80} className="avatar" />
+                    <strong><a href="#">{member.name}</a></strong>
+                    <br />
+                    <small>{member.email}</small>
+                    <br />
+                  </td>
+                  <td className="status">
+                    <strong>Missing SSO Link</strong>
+                    <a className="resend-invite btn btn-small btn-primary">Resend invite</a>
+                  </td>
+                  <td>{member.roleName}</td>
+                  <td>
+                    <span className="tip" title="Access to all teams">&infin;</span>
+                  </td>
+                  <td className="align-right squash">
+                    <a className="btn btn-default btn-sm remove-member">
+                      <span className="icon icon-trash"></span> Remove
+                    </a>
+                  </td>
+                </tr>
+              );
+            })}
+          </tbody>
+        </table>
+      </div>
+    );
+  }
+});
+
+module.exports = OrganizationMembers;
diff --git a/src/sentry/static/sentry/app/views/organizationTeams.jsx b/src/sentry/static/sentry/app/views/organizationTeams.jsx
index 3aff8eeb50..064cb18e1a 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams.jsx
@@ -2,6 +2,7 @@
 
 var React = require("react");
 
+var OrganizationHomeSidebar = require("../components/organizationHomeSidebar");
 var OrganizationState = require("../mixins/organizationState");
 
 var OrganizationTeams = React.createClass({
@@ -21,6 +22,7 @@ var OrganizationTeams = React.createClass({
 
     return (
       <div>
+        <OrganizationHomeSidebar />
         <h3>Teams</h3>
         {org.teams.map((team, teamIdx) => {
           var teamRouteParams = {
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index ecf7a72725..982bea59a9 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -45,7 +45,6 @@ from sentry.web.frontend.help_platform_index import HelpPlatformIndexView
 from sentry.web.frontend.mailgun_inbound_webhook import MailgunInboundWebhookView
 from sentry.web.frontend.organization_audit_log import OrganizationAuditLogView
 from sentry.web.frontend.organization_auth_settings import OrganizationAuthSettingsView
-from sentry.web.frontend.organization_members import OrganizationMembersView
 from sentry.web.frontend.organization_member_settings import OrganizationMemberSettingsView
 from sentry.web.frontend.organization_stats import OrganizationStatsView
 from sentry.web.frontend.organization_settings import OrganizationSettingsView
@@ -163,7 +162,7 @@ urlpatterns += patterns('',
         name='sentry-organization-auth-settings'),
     url(r'^organizations/(?P<organization_slug>[\w_-]+)/audit-log/$', OrganizationAuditLogView.as_view(),
         name='sentry-organization-audit-log'),
-    url(r'^organizations/(?P<organization_slug>[\w_-]+)/members/$', OrganizationMembersView.as_view(),
+    url(r'^organizations/(?P<organization_slug>[\w_-]+)/members/$', ReactPageView.as_view(),
         name='sentry-organization-members'),
     url(r'^organizations/(?P<organization_slug>[\w_-]+)/members/new/$', CreateOrganizationMemberView.as_view(),
         name='sentry-create-organization-member'),
