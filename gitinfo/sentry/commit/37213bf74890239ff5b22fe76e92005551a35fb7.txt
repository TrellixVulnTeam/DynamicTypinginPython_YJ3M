commit 37213bf74890239ff5b22fe76e92005551a35fb7
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Mar 20 11:17:13 2019 -0700

    feat(saved-search): Request searches with `use_org_level=1` if flag is active (#12460)

diff --git a/src/sentry/static/sentry/app/actionCreators/savedSearches.jsx b/src/sentry/static/sentry/app/actionCreators/savedSearches.jsx
index 8985d6ae8e..89c14c55e4 100644
--- a/src/sentry/static/sentry/app/actionCreators/savedSearches.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/savedSearches.jsx
@@ -1,7 +1,19 @@
-export function fetchSavedSearches(api, orgId, projectId = null) {
-  const url = projectId
-    ? `/projects/${orgId}/${projectId}/searches/`
-    : `/organizations/${orgId}/searches/`;
+export function fetchSavedSearches(api, orgId, useOrgSavedSearches = false) {
+  const url = `/organizations/${orgId}/searches/`;
+
+  const data = {};
+  if (useOrgSavedSearches) {
+    data.use_org_level = '1';
+  }
+
+  return api.requestPromise(url, {
+    method: 'GET',
+    data,
+  });
+}
+
+export function fetchProjectSavedSearches(api, orgId, projectId) {
+  const url = `/projects/${orgId}/${projectId}/searches/`;
   return api.requestPromise(url, {
     method: 'GET',
   });
diff --git a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
index 0fe7b55ba2..e1d48b69fc 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
@@ -217,6 +217,10 @@ const OrganizationStream = createReactClass({
     return new Set(this.props.organization.access);
   },
 
+  getFeatures() {
+    return new Set(this.props.organization.features);
+  },
+
   /**
    * Get the projects that are selected in the global filters
    */
@@ -459,7 +463,7 @@ const OrganizationStream = createReactClass({
       // If the saved search is project-less and the user doesn't have
       // global-views we retain their current project filter
       // so that the backend doesn't reject their request.
-      const hasMultipleProjectSelection = organization.features.includes('global-views');
+      const hasMultipleProjectSelection = this.getFeatures().has('global-views');
       if (!savedSearch.projectId && !hasMultipleProjectSelection) {
         query.project = this.props.selection.projects;
       }
@@ -556,7 +560,9 @@ const OrganizationStream = createReactClass({
       return acc;
     }, {});
 
-    fetchSavedSearches(this.api, orgId).then(
+    const useOrgSavedSearches = this.getFeatures().has('org-saved-searches');
+
+    fetchSavedSearches(this.api, orgId, useOrgSavedSearches).then(
       data => {
         // Add in project slugs so that we can display them in the picker bars.
         const savedSearchList = data.map(search => {
@@ -636,8 +642,7 @@ const OrganizationStream = createReactClass({
     const projects = this.getGlobalSearchProjects();
 
     if (selectedProject) {
-      const features = new Set(selectedProject.features);
-      hasReleases = features.has('releases');
+      hasReleases = this.getFeatures().has('releases');
       latestRelease = selectedProject.latestRelease;
       projectId = selectedProject.slug;
     } else if (projects.length == 1) {
diff --git a/src/sentry/static/sentry/app/views/stream/stream.jsx b/src/sentry/static/sentry/app/views/stream/stream.jsx
index 81b096ccee..437fa4db3b 100644
--- a/src/sentry/static/sentry/app/views/stream/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream/stream.jsx
@@ -20,7 +20,7 @@ import ApiMixin from 'app/mixins/apiMixin';
 import ConfigStore from 'app/stores/configStore';
 import EnvironmentStore from 'app/stores/environmentStore';
 import ErrorRobot from 'app/components/errorRobot';
-import {fetchSavedSearches} from 'app/actionCreators/savedSearches';
+import {fetchProjectSavedSearches} from 'app/actionCreators/savedSearches';
 import {fetchTagValues} from 'app/actionCreators/tags';
 import GroupStore from 'app/stores/groupStore';
 import LoadingError from 'app/components/loadingError';
@@ -179,7 +179,7 @@ const Stream = createReactClass({
     const {orgId, projectId} = this.props.params;
     const {searchId} = this.state;
 
-    fetchSavedSearches(this.api, orgId, projectId).then(
+    fetchProjectSavedSearches(this.api, orgId, projectId).then(
       data => {
         const newState = {
           isDefaultSearch: false,
