commit 5faf50d62e82921602ca5457d3aa59b9834bf0ae
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 24 13:56:04 2016 -0700

    Only expand first exception
    
    @getsentry/ui

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
index 73fdb9085f..3e2c3d1f41 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
@@ -33,6 +33,7 @@ const ExceptionContent = React.createClass({
           {defined(exc.stacktrace) &&
             <StacktraceContent
                 data={this.props.type === 'original' ? exc.stacktrace : exc.rawStacktrace}
+                expandFirstFrame={excIdx === 0}
                 includeSystemFrames={stackView === 'full'}
                 platform={this.props.platform}
                 newestFirst={newestFirst} />
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
index 6c9565aa93..b17b2c82a0 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
@@ -9,6 +9,7 @@ const StacktraceContent = React.createClass({
   propTypes: {
     data: React.PropTypes.object.isRequired,
     includeSystemFrames: React.PropTypes.bool,
+    expandFirstFrame: React.PropTypes.bool,
     platform: React.PropTypes.string,
     newestFirst: React.PropTypes.bool
   },
@@ -16,7 +17,8 @@ const StacktraceContent = React.createClass({
 
   getDefaultProps() {
     return {
-      includeSystemFrames: true
+      includeSystemFrames: true,
+      expandFirstFrame: true,
     };
   },
 
@@ -62,18 +64,16 @@ const StacktraceContent = React.createClass({
       lastFrameIdx = data.frames.length - 1;
     }
 
-    // use old frames if we do not have an org (share view) or
-    // we don't have the feature
-    let FrameComponent = Frame;
+    let expandFirstFrame = this.props.expandFirstFrame;
     let frames = [];
     data.frames.forEach((frame, frameIdx) => {
       let nextFrame = data.frames[frameIdx + 1];
       if (this.frameIsVisible(frame, nextFrame)) {
         frames.push(
-          <FrameComponent
+          <Frame
             key={frameIdx}
             data={frame}
-            isExpanded={lastFrameIdx === frameIdx}
+            isExpanded={expandFirstFrame && lastFrameIdx === frameIdx}
             emptySourceNotation={lastFrameIdx === frameIdx && frameIdx === 0}
             nextFrameInApp={nextFrame && nextFrame.inApp}
             platform={this.props.platform} />
