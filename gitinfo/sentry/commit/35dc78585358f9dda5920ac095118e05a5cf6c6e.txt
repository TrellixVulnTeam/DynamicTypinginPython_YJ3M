commit 35dc78585358f9dda5920ac095118e05a5cf6c6e
Author: Mark Story <mark@mark-story.com>
Date:   Thu Nov 15 10:28:23 2018 -0500

    feat(integrations) Add provider method for external id generation (#10591)
    
    Right now the web ui relies on name == identifier to determine if
    a repository has been connected or not. This only works for a github and
    bitbucket, other integrations/plugins have other identifiers that they
    use in their API calls. Exposing this method allows us to expose the
    provider's ID system to our webui so it can do safer filtering
    operations.
    
    Refs #10563

diff --git a/src/sentry/api/endpoints/organization_integration_repos.py b/src/sentry/api/endpoints/organization_integration_repos.py
index c2f5c3b784..5a79e687bc 100644
--- a/src/sentry/api/endpoints/organization_integration_repos.py
+++ b/src/sentry/api/endpoints/organization_integration_repos.py
@@ -15,7 +15,16 @@ class OrganizationIntegrationReposEndpoint(OrganizationEndpoint):
     permission_classes = (OrganizationIntegrationsPermission, )
 
     def get(self, request, organization, integration_id):
+        """
+        Get the list of repositories available in an integration
+        ````````````````````````````````````````````````````````
 
+        Gets all repositories that an integration makes available,
+        and indicates whether or not you can search repositories
+        by name.
+
+        :qparam string search: Name fragment to search repositories by.
+        """
         try:
             integration = Integration.objects.get(id=integration_id, organizations=organization)
         except Integration.DoesNotExist:
diff --git a/src/sentry/api/serializers/models/repository.py b/src/sentry/api/serializers/models/repository.py
index 2646cb030d..1d50262a9f 100644
--- a/src/sentry/api/serializers/models/repository.py
+++ b/src/sentry/api/serializers/models/repository.py
@@ -9,14 +9,17 @@ from sentry.models import Repository
 @register(Repository)
 class RepositorySerializer(Serializer):
     def serialize(self, obj, attrs, user):
+        external_slug = None
         integration_id = None
         if obj.integration_id:
             integration_id = six.text_type(obj.integration_id)
         if obj.provider:
+            repo_provider = obj.get_provider()
             provider = {
                 'id': obj.provider,
-                'name': obj.get_provider().name,
+                'name': repo_provider.name,
             }
+            external_slug = repo_provider.repository_external_slug(obj)
         else:
             provider = {
                 'id': 'unknown',
@@ -30,4 +33,5 @@ class RepositorySerializer(Serializer):
             'status': obj.get_status_display(),
             'dateCreated': obj.date_added,
             'integrationId': integration_id,
+            'externalSlug': external_slug
         }
diff --git a/src/sentry/integrations/bitbucket/repository.py b/src/sentry/integrations/bitbucket/repository.py
index 3a4b6c13a5..52f70d3999 100644
--- a/src/sentry/integrations/bitbucket/repository.py
+++ b/src/sentry/integrations/bitbucket/repository.py
@@ -126,3 +126,6 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
                 installation.raise_error(e)
             else:
                 return self._format_commits(repo, res)
+
+    def repository_external_slug(self, repo):
+        return repo.name
diff --git a/src/sentry/integrations/github/repository.py b/src/sentry/integrations/github/repository.py
index 141061df6a..eaca97bd75 100644
--- a/src/sentry/integrations/github/repository.py
+++ b/src/sentry/integrations/github/repository.py
@@ -142,4 +142,7 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
         return changes
 
     def pull_request_url(self, repo, pull_request):
-        return u'{}/pulls/{}'.format(repo.url, pull_request.key)
+        return u'{}/pull/{}'.format(repo.url, pull_request.key)
+
+    def repository_external_slug(self, repo):
+        return repo.name
diff --git a/src/sentry/integrations/gitlab/repository.py b/src/sentry/integrations/gitlab/repository.py
index 93e215172f..4881c02c53 100644
--- a/src/sentry/integrations/gitlab/repository.py
+++ b/src/sentry/integrations/gitlab/repository.py
@@ -154,3 +154,6 @@ class GitlabRepositoryProvider(providers.IntegrationRepositoryProvider):
 
     def pull_request_url(self, repo, pull_request):
         return u'{}/merge_requests/{}'.format(repo.url, pull_request.key)
+
+    def repository_external_slug(self, repo):
+        return repo.config['project_id']
diff --git a/src/sentry/integrations/repositories.py b/src/sentry/integrations/repositories.py
index 21e01ae67c..90b30fc07a 100644
--- a/src/sentry/integrations/repositories.py
+++ b/src/sentry/integrations/repositories.py
@@ -20,6 +20,10 @@ class RepositoryMixin(object):
             'name': display_name,
             'identifier': external_repo_id,
         }]
+
+        The shape of the `identifier` should match the data
+        returned by the integration's
+        IntegrationRepositoryProvider.repository_external_slug()
         """
         raise NotImplementedError
 
diff --git a/src/sentry/integrations/vsts/repository.py b/src/sentry/integrations/vsts/repository.py
index e58b9383ef..b0d690d6d3 100644
--- a/src/sentry/integrations/vsts/repository.py
+++ b/src/sentry/integrations/vsts/repository.py
@@ -118,3 +118,6 @@ class VstsRepositoryProvider(providers.IntegrationRepositoryProvider):
                 'patch_set': c.get('patch_set'),
             } for c in commit_list
         ]
+
+    def repository_external_slug(self, repo):
+        return repo.external_id
diff --git a/src/sentry/plugins/providers/dummy/repository.py b/src/sentry/plugins/providers/dummy/repository.py
index 11ec5e3d88..146f257650 100644
--- a/src/sentry/plugins/providers/dummy/repository.py
+++ b/src/sentry/plugins/providers/dummy/repository.py
@@ -37,3 +37,6 @@ class DummyRepositoryProvider(RepositoryProvider):
                 'repository': repo.name,
             }
         ]
+
+    def repository_external_slug(self, repo):
+        return repo.external_id
diff --git a/src/sentry/plugins/providers/integration_repository.py b/src/sentry/plugins/providers/integration_repository.py
index 1fba7fa475..5a6fed8fa1 100644
--- a/src/sentry/plugins/providers/integration_repository.py
+++ b/src/sentry/plugins/providers/integration_repository.py
@@ -143,6 +143,14 @@ class IntegrationRepositoryProvider(object):
         """
         return None
 
+    def repository_external_slug(self, repo):
+        """
+        Generate the public facing 'external_slug' for a repository
+        The shape of this id must match the `identifier` returned by
+        the integration's Integration.get_repositories() method
+        """
+        return repo.name
+
     @staticmethod
     def should_ignore_commit(message):
         return '#skipsentry' in message
diff --git a/src/sentry/plugins/providers/repository.py b/src/sentry/plugins/providers/repository.py
index 82e5914b35..efc18f0943 100644
--- a/src/sentry/plugins/providers/repository.py
+++ b/src/sentry/plugins/providers/repository.py
@@ -127,6 +127,20 @@ class RepositoryProvider(ProviderMixin):
     def compare_commits(self, repo, start_sha, end_sha, actor=None):
         raise NotImplementedError
 
+    def pull_request_url(self, repo, pull_request):
+        """
+        Generate a URL to a pull request on the repository provider.
+        """
+        return None
+
+    def repository_external_slug(self, repo):
+        """
+        Generate the public facing 'external_slug' for a repository
+        The shape of this id must match the `identifier` returned by
+        the Plugin's get repositories method
+        """
+        return None
+
     @staticmethod
     def should_ignore_commit(message):
         return '#skipsentry' in message
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
index 7be40ebe4b..92eff4e3f8 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
@@ -98,10 +98,10 @@ export default class IntegrationRepos extends AsyncComponent {
     this.setState({adding: true});
 
     let migratableRepo = itemList.filter(item => {
-      if (!(selection.value && item.name)) {
+      if (!(selection.value && item.externalSlug)) {
         return false;
       }
-      return selection.value.toLowerCase() === item.name.toLowerCase();
+      return selection.value == item.externalSlug;
     })[0];
 
     let promise;
@@ -133,7 +133,7 @@ export default class IntegrationRepos extends AsyncComponent {
       );
     }
     const repositories = new Set(
-      this.state.itemList.filter(item => item.integrationId).map(i => i.name)
+      this.state.itemList.filter(item => item.integrationId).map(i => i.externalSlug)
     );
     let repositoryOptions = (this.state.integrationRepos.repos || []).filter(
       repo => !repositories.has(repo.identifier)
diff --git a/tests/js/fixtures/repository.js b/tests/js/fixtures/repository.js
index 664d94d10b..8ac779eec7 100644
--- a/tests/js/fixtures/repository.js
+++ b/tests/js/fixtures/repository.js
@@ -5,6 +5,7 @@ export function Repository(params = {}) {
     provider: 'github',
     url: 'https://github.com/example/repo-name',
     status: 'active',
+    externalSlug: 'example/repo-name',
     ...params,
   };
 }
diff --git a/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx b/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx
index 597134feea..08f65d08e5 100644
--- a/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx
+++ b/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx
@@ -104,6 +104,7 @@ describe('IntegrationRepos', function() {
         body: [
           TestStubs.Repository({
             integrationId: null,
+            externalSlug: 'example/repo-name',
             provider: {
               id: 'integrations:github',
               name: 'GitHub',
@@ -136,17 +137,17 @@ describe('IntegrationRepos', function() {
       );
     });
 
-    it('compares case-insensitive', () => {
+    it('uses externalSlug not name for comparison', () => {
       Client.addMockResponse({
         url: `/organizations/${org.slug}/repos/`,
         method: 'GET',
-        body: [TestStubs.Repository({name: 'Example/repo-name'})],
+        body: [TestStubs.Repository({name: 'repo-name', externalSlug: 9876})],
       });
       const getItems = Client.addMockResponse({
         url: `/organizations/${org.slug}/integrations/${integration.id}/repos/`,
         method: 'GET',
         body: {
-          repos: [{identifier: 'example/repo-name', name: 'repo-name'}],
+          repos: [{identifier: 9876, name: 'repo-name'}],
         },
       });
       const updateRepo = Client.addMockResponse({
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap
index f951ba121e..6e82934de0 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap
@@ -35,6 +35,7 @@ exports[`OrganizationRepositories renders with a repository 1`] = `
           orgId="org-slug"
           repository={
             Object {
+              "externalSlug": "example/repo-name",
               "id": "4",
               "name": "example/repo-name",
               "provider": "github",
diff --git a/tests/sentry/api/endpoints/test_organization_repositories.py b/tests/sentry/api/endpoints/test_organization_repositories.py
index 1607adff55..f950a5e657 100644
--- a/tests/sentry/api/endpoints/test_organization_repositories.py
+++ b/tests/sentry/api/endpoints/test_organization_repositories.py
@@ -35,6 +35,28 @@ class OrganizationRepositoriesListTest(APITestCase):
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(repo.id)
+        assert response.data[0]['externalSlug'] is None
+
+    def test_get_integration_repository(self):
+        repo = Repository.objects.create(
+            name='getsentry/example',
+            organization_id=self.org.id,
+            external_id=12345,
+            provider='dummy',
+            config={'name': 'getsentry/example'}
+        )
+
+        response = self.client.get(self.url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 1
+        first_row = response.data[0]
+        assert first_row['id'] == six.text_type(repo.id)
+        assert first_row['provider'] == {
+            'id': 'dummy',
+            'name': 'Example'
+        }
+        assert first_row['externalSlug'] == six.text_type(repo.external_id)
 
     def test_status_unmigratable(self):
         self.url = self.url + '?status=unmigratable'
diff --git a/tests/sentry/api/serializers/test_pull_request.py b/tests/sentry/api/serializers/test_pull_request.py
index 91865265b7..89eb22426f 100644
--- a/tests/sentry/api/serializers/test_pull_request.py
+++ b/tests/sentry/api/serializers/test_pull_request.py
@@ -105,7 +105,7 @@ class PullRequestSerializerTest(TestCase):
 
         result = serialize(pull_request, user)
 
-        assert result['externalUrl'] == 'https://github.com/test/test/pulls/9'
+        assert result['externalUrl'] == 'https://github.com/test/test/pull/9'
         assert result['message'] == 'waddap'
         assert result['title'] == 'cool pr'
         assert result['repository']['name'] == 'test/test'
diff --git a/tests/sentry/integrations/bitbucket/test_repository.py b/tests/sentry/integrations/bitbucket/test_repository.py
index bf1cf860ef..be361668a7 100644
--- a/tests/sentry/integrations/bitbucket/test_repository.py
+++ b/tests/sentry/integrations/bitbucket/test_repository.py
@@ -124,3 +124,7 @@ class BitbucketRepositoryProviderTest(TestCase):
                 'webhook_id': webhook_id,
             }
         }
+
+    def test_repository_external_slug(self):
+        result = self.provider.repository_external_slug(self.repo)
+        assert result == self.repo.name
diff --git a/tests/sentry/integrations/github/test_repository.py b/tests/sentry/integrations/github/test_repository.py
index 5fe7bfe0d1..dc183cd6a1 100644
--- a/tests/sentry/integrations/github/test_repository.py
+++ b/tests/sentry/integrations/github/test_repository.py
@@ -42,7 +42,7 @@ class GitHubAppsProviderTest(PluginTestCase):
             external_id='654321',
         )
         return Repository.objects.create(
-            name='example-repo',
+            name='getsentry/example-repo',
             provider='integrations:github',
             organization_id=organization.id,
             integration_id=integration.id,
@@ -155,4 +155,8 @@ class GitHubAppsProviderTest(PluginTestCase):
     def test_pull_request_url(self):
         pull = PullRequest(key=99)
         result = self.provider.pull_request_url(self.repository, pull)
-        assert result == 'https://github.com/getsentry/example-repo/pulls/99'
+        assert result == 'https://github.com/getsentry/example-repo/pull/99'
+
+    def test_repository_external_slug(self):
+        result = self.provider.repository_external_slug(self.repository)
+        assert result == self.repository.config['name']
diff --git a/tests/sentry/integrations/gitlab/test_repository.py b/tests/sentry/integrations/gitlab/test_repository.py
index 4b773c7b13..8f24229b22 100644
--- a/tests/sentry/integrations/gitlab/test_repository.py
+++ b/tests/sentry/integrations/gitlab/test_repository.py
@@ -307,3 +307,11 @@ class GitLabRepositoryProviderTest(PluginTestCase):
         pull = PullRequest(key=99)
         result = self.provider.pull_request_url(repo, pull)
         assert result == 'https://example.gitlab.com/getsentry/projects/example-repo/merge_requests/99'
+
+    @responses.activate
+    def test_repository_external_slug(self):
+        response = self.create_repository(self.default_repository_config,
+                                          self.integration.id)
+        repo = Repository.objects.get(pk=response.data['id'])
+        result = self.provider.repository_external_slug(repo)
+        assert result == repo.config['project_id']
diff --git a/tests/sentry/integrations/vsts/test_repository.py b/tests/sentry/integrations/vsts/test_repository.py
index 23ffd128fb..ee6cc1ed9e 100644
--- a/tests/sentry/integrations/vsts/test_repository.py
+++ b/tests/sentry/integrations/vsts/test_repository.py
@@ -117,3 +117,11 @@ class VisualStudioRepositoryProviderTest(TestCase):
             },
             'integration_id': integration.id,
         }
+
+    def test_repository_external_slug(self):
+        repo = Repository(
+            name='MyFirstProject',
+            url='https://mbittker.visualstudio.com/_git/MyFirstProject/',
+            external_id=self.vsts_external_id)
+        result = self.provider.repository_external_slug(repo)
+        assert result == repo.external_id
