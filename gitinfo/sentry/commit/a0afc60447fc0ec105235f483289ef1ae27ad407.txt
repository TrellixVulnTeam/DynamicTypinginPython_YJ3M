commit a0afc60447fc0ec105235f483289ef1ae27ad407
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Feb 6 17:50:50 2019 -0800

    feat(metrics): Track project selector metrics for sentry 10

diff --git a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
index 0667842712..cec2975a2f 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
@@ -3,6 +3,8 @@ import React from 'react';
 import styled, {css} from 'react-emotion';
 
 import SentryTypes from 'app/sentryTypes';
+import {analytics} from 'app/utils/analytics';
+import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
 import {t} from 'app/locale';
 import ProjectSelector from 'app/components/projectSelector';
 import InlineSvg from 'app/components/inlineSvg';
@@ -28,6 +30,10 @@ export default class MultipleProjectSelector extends React.PureComponent {
     multi: true,
   };
 
+  static contextTypes = {
+    router: PropTypes.object,
+  };
+
   constructor() {
     super();
     this.state = {
@@ -57,6 +63,11 @@ export default class MultipleProjectSelector extends React.PureComponent {
    * Should perform an "update" callback
    */
   handleQuickSelect = (selected, checked, e) => {
+    analytics('projectselector.direct_selection', {
+      path: getRouteStringFromRoutes(this.context.router.routes),
+      org_id: parseInt(this.props.organization.id, 10),
+    });
+
     this.props.onChange([parseInt(selected.id, 10)]);
     this.doUpdate();
   };
@@ -69,6 +80,15 @@ export default class MultipleProjectSelector extends React.PureComponent {
   handleClose = props => {
     // Only update if there are changes
     if (!this.state.hasChanges) return;
+
+    const {value, multi} = this.props;
+    analytics('projectselector.update', {
+      count: value.length,
+      path: getRouteStringFromRoutes(this.context.router.routes),
+      org_id: parseInt(this.props.organization.id, 10),
+      multi,
+    });
+
     this.doUpdate();
   };
 
@@ -78,6 +98,11 @@ export default class MultipleProjectSelector extends React.PureComponent {
    * Should perform an "update" callback
    */
   handleClear = () => {
+    analytics('projectselector.clear', {
+      path: getRouteStringFromRoutes(this.context.router.routes),
+      org_id: parseInt(this.props.organization.id, 10),
+    });
+
     this.props.onChange([]);
 
     // Update on clear
@@ -88,7 +113,13 @@ export default class MultipleProjectSelector extends React.PureComponent {
    * Handler for selecting multiple items, should NOT call update
    */
   handleMultiSelect = (selected, checked, e) => {
-    const {onChange} = this.props;
+    const {onChange, value} = this.props;
+
+    analytics('projectselector.toggle', {
+      action: selected.length > value.length ? 'added' : 'removed',
+      path: getRouteStringFromRoutes(this.context.router.routes),
+      org_id: parseInt(this.props.organization.id, 10),
+    });
     onChange(selected.map(({id}) => parseInt(id, 10)));
     this.setState({hasChanges: true});
   };
