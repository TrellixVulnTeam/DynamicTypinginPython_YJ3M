commit 01c3d1069f04b4d78e3840465301e54b8e36485b
Author: Mark Story <mark@sentry.io>
Date:   Wed Jun 24 12:16:17 2020 -0400

    ref(ui) Start using thirds layout module (#19489)
    
    The responsive flow for actions buttons was not great before, as top
    right buttons would stack between the breadcrumbs and heading. With
    this approach all buttons stack under the header 'content'. The tradeoff
    with this approach is that we won't have breadcrumbs and buttons
    automatically consume the same amount of vertical space. Using a grid
    layout could solve this but creates other positioning problems. Based on
    recent design revisions to discover & performance the bottom aligned
    button is on the way out. If it comes back we can introduce another
    container that makes vertically separating buttons regions easier.
    
    * Update discover results to use thirds layout components.
    * Improve breakpoint for header actions.
    * Update discover results & details to new layout module.
    * Update performance views to use new layout components.
    * Update releases v2 to use thirds for its layout.
    * Fix overflow in headings.
    * Fix title overflows, mobile viewports and extract Title component.

diff --git a/docs-ui/components/layout-thirds.stories.js b/docs-ui/components/layout-thirds.stories.js
index 24bbf00a17..46eb6fbc2d 100644
--- a/docs-ui/components/layout-thirds.stories.js
+++ b/docs-ui/components/layout-thirds.stories.js
@@ -30,7 +30,9 @@ storiesOf('Layouts|Thirds', module)
     withInfo('Two column layout with header & sidebar')(() => (
       <Container>
         <Layout.Header>
-          <Heading>Some heading content</Heading>
+          <Layout.HeaderContent>
+            <Layout.Title>Some heading content</Layout.Title>
+          </Layout.HeaderContent>
         </Layout.Header>
         <Layout.Body>
           <Layout.Main>
@@ -46,20 +48,20 @@ storiesOf('Layouts|Thirds', module)
   )
   .add(
     '66/33 with header controls',
-    withInfo('Two column layout with header controls')(() => (
+    withInfo('Two column layout with header actions')(() => (
       <Container>
         <Layout.Header>
           <Layout.HeaderContent>
             <Breadcrumbs crumbs={crumbs} />
-            <Button>Top button</Button>
+            <Layout.Title>Some heading content</Layout.Title>
           </Layout.HeaderContent>
-          <Layout.HeaderContent>
-            <Heading>Some heading content</Heading>
+          <Layout.HeaderActions>
             <ButtonBar gap={1}>
-              <Button size="small">clicker</Button>
-              <Button size="small">clicker</Button>
+              <Button>Save</Button>
+              <Button>Delete</Button>
+              <Button>Update</Button>
             </ButtonBar>
-          </Layout.HeaderContent>
+          </Layout.HeaderActions>
         </Layout.Header>
         <Layout.Body>
           <Layout.Main>
@@ -80,10 +82,13 @@ storiesOf('Layouts|Thirds', module)
         <Layout.Header>
           <Layout.HeaderContent>
             <Breadcrumbs crumbs={crumbs} />
-            <Button>Top button</Button>
+            <Layout.Title>Heading text</Layout.Title>
           </Layout.HeaderContent>
-          <Layout.HeaderContent>
-            <Heading>Heading text</Heading>
+          <Layout.HeaderActions>
+            <MarginedButtonBar gap={1}>
+              <Button size="small">Save</Button>
+              <Button size="small">Update</Button>
+            </MarginedButtonBar>
             <ButtonBar gap={1}>
               <Button size="small">rollup</Button>
               <Button size="small">modify</Button>
@@ -91,7 +96,7 @@ storiesOf('Layouts|Thirds', module)
               <Button size="small">update</Button>
               <Button size="small">delete</Button>
             </ButtonBar>
-          </Layout.HeaderContent>
+          </Layout.HeaderActions>
         </Layout.Header>
         <Layout.Body>
           <Layout.Main>
@@ -112,15 +117,14 @@ storiesOf('Layouts|Thirds', module)
         <Layout.Header>
           <Layout.HeaderContent>
             <Breadcrumbs crumbs={crumbs} />
-            <Button>Top button</Button>
+            <Layout.Title>Some heading content</Layout.Title>
           </Layout.HeaderContent>
-          <Layout.HeaderContent>
-            <Heading>Some heading content</Heading>
+          <Layout.HeaderActions>
             <ButtonBar gap={1}>
               <Button size="small">clicker</Button>
               <Button size="small">clicker</Button>
             </ButtonBar>
-          </Layout.HeaderContent>
+          </Layout.HeaderActions>
         </Layout.Header>
         <Layout.Body fullWidth>
           <Layout.Main fullWidth>
@@ -141,6 +145,6 @@ const Container = styled('div')`
   border: 1px solid ${p => p.theme.gray400};
 `;
 
-const Heading = styled('h2')`
-  margin: 0;
+const MarginedButtonBar = styled(ButtonBar)`
+  margin-bottom: ${space(1)};
 `;
diff --git a/src/sentry/static/sentry/app/components/layouts/thirds.tsx b/src/sentry/static/sentry/app/components/layouts/thirds.tsx
index 64a3dc5c5c..7b9b7be8ea 100644
--- a/src/sentry/static/sentry/app/components/layouts/thirds.tsx
+++ b/src/sentry/static/sentry/app/components/layouts/thirds.tsx
@@ -1,6 +1,7 @@
 import styled from '@emotion/styled';
 
 import space from 'app/styles/space';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
 
 /**
  * Base container for 66/33 containers.
@@ -29,29 +30,72 @@ export const Body = styled('div')`
  */
 export const HeaderContent = styled('div')`
   display: flex;
-  justify-content: space-between;
+  flex-direction: column;
+  justify-content: normal;
+  margin-bottom: ${space(2)};
+  overflow: hidden;
 
-  @media (max-width: ${p => p.theme.breakpoints[0]}) {
-    flex-direction: column;
-    justify-content: normal;
+  @media (max-width: ${p => p.theme.breakpoints[1]}) {
+    margin-bottom: ${space(1)};
+  }
+`;
+
+/**
+ * Container for action buttons and secondary information that
+ * flows on the top right of the header.
+ */
+export const HeaderActions = styled('div')`
+  display: flex;
+  flex-direction: column;
+  justify-content: normal;
+  min-width: max-content;
+
+  @media (max-width: ${p => p.theme.breakpoints[1]}) {
+    width: max-content;
+    margin-bottom: ${space(2)};
   }
 `;
 
 /**
- * Header container for breadcrumbs and toolbars.
+ * Heading container that includes margins.
+ */
+export const Title = styled('h2')`
+  font-size: ${p => p.theme.headerFontSize};
+  font-weight: normal;
+  line-height: 1.2;
+  color: ${p => p.theme.gray700};
+  margin-top: ${space(3)};
+  /* TODO(bootstrap) Remove important when bootstrap headings are removed */
+  margin-bottom: 0 !important;
+  min-height: 30px;
+  align-self: center;
+  ${overflowEllipsis};
+
+  @media (max-width: ${p => p.theme.breakpoints[1]}) {
+    margin-top: ${space(1)};
+  }
+`;
+
+/**
+ * Header container for header content and header actions.
+ *
+ * Uses a horizontal layout in wide viewports to put space between
+ * the headings and the actions container. In narrow viewports these elements
+ * are stacked vertically.
  */
 export const Header = styled('div')`
+  display: flex;
+  flex-direction: row;
+  flex-grow: 0;
+  justify-content: space-between;
+  padding: ${space(2)} ${space(4)} 0 ${space(4)};
+  margin: 0;
+
   background-color: transparent;
   border-bottom: 1px solid ${p => p.theme.borderDark};
-  padding: ${space(2)} ${space(4)};
-  margin: 0;
-  flex-grow: 0;
 
-  & > ${/* sc-selector */ HeaderContent} {
-    margin-bottom: ${space(1)};
-  }
-  & > ${/* sc-selector */ HeaderContent}:last-child {
-    margin: 0;
+  @media (max-width: ${p => p.theme.breakpoints[1]}) {
+    flex-direction: column;
   }
 `;
 
diff --git a/src/sentry/static/sentry/app/utils/discover/styles.tsx b/src/sentry/static/sentry/app/utils/discover/styles.tsx
index 853d95f7c4..cb317ec186 100644
--- a/src/sentry/static/sentry/app/utils/discover/styles.tsx
+++ b/src/sentry/static/sentry/app/utils/discover/styles.tsx
@@ -5,7 +5,6 @@ import DateTime from 'app/components/dateTime';
 import Link from 'app/components/links/link';
 import ShortId from 'app/components/shortId';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
-import space from 'app/styles/space';
 
 /**
  * Styled components used to render discover result sets.
@@ -35,57 +34,6 @@ export const OverflowLink = styled(Link)`
   ${overflowEllipsis};
 `;
 
-/* Layout containers for discover and performance views */
-export const ContentBox = styled('div')`
-  padding: ${space(2)} ${space(4)};
-  margin: 0;
-  background-color: ${p => p.theme.white};
-  flex-grow: 1;
-
-  @media (min-width: ${p => p.theme.breakpoints[1]}) {
-    display: grid;
-    grid-template-columns: 66% auto;
-    align-content: start;
-    grid-gap: ${space(3)};
-  }
-
-  @media (min-width: ${p => p.theme.breakpoints[2]}) {
-    grid-template-columns: minmax(100px, auto) 325px;
-  }
-`;
-
-export const Main = styled('div')`
-  grid-column: 1/2;
-  max-width: 100%;
-  overflow: hidden;
-`;
-
-export const Side = styled('div')`
-  grid-column: 2/3;
-`;
-
-export const HeaderBox = styled(ContentBox)`
-  border-bottom: 1px solid ${p => p.theme.borderDark};
-  grid-row-gap: ${space(1)};
-  background-color: transparent;
-  flex-grow: 0;
-`;
-
-export const HeaderTopControls = styled('div')`
-  display: flex;
-  justify-self: end;
-  grid-row: 1/2;
-  grid-column: 2/3;
-`;
-
-export const HeaderBottomControls = styled('div')`
-  display: flex;
-  justify-self: end;
-  justify-content: flex-end;
-  grid-row: 2/3;
-  grid-column: 2/3;
-`;
-
 export const StyledShortId = styled(ShortId)`
   justify-content: flex-start;
 `;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index 63463e3b4f..f85fe251fb 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -8,7 +8,6 @@ import {BorderlessEventEntries} from 'app/components/events/eventEntries';
 import * as SpanEntryContext from 'app/components/events/interfaces/spans/context';
 import {EventQuery} from 'app/actionCreators/events';
 import space from 'app/styles/space';
-import overflowEllipsis from 'app/styles/overflowEllipsis';
 import {t} from 'app/locale';
 import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {Client} from 'app/api';
@@ -27,14 +26,10 @@ import AsyncComponent from 'app/components/asyncComponent';
 import SentryDocumentTitle from 'app/components/sentryDocumentTitle';
 import Projects from 'app/utils/projects';
 import EventView from 'app/utils/discover/eventView';
-import {
-  ContentBox,
-  HeaderBox,
-  HeaderTopControls,
-  HeaderBottomControls,
-} from 'app/utils/discover/styles';
 import {transactionSummaryRouteWithQuery} from 'app/views/performance/transactionSummary/utils';
 import {eventDetailsRoute} from 'app/utils/discover/urls';
+import * as Layout from 'app/components/layouts/thirds';
+import ButtonBar from 'app/components/buttonBar';
 
 import {generateTitle, getExpandedResults} from '../utils';
 import LinkedIssue from './linkedIssue';
@@ -165,37 +160,39 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
 
     return (
       <React.Fragment>
-        <HeaderBox>
-          <DiscoverBreadcrumb
-            eventView={eventView}
-            event={event}
-            organization={organization}
-            location={location}
-          />
-          {transactionSummaryTarget && (
-            <Feature organization={organization} features={['performance-view']}>
-              {({hasFeature}) => (
-                <HeaderTopControls>
-                  <StyledButton
-                    disabled={!hasFeature}
-                    priority="primary"
-                    to={transactionSummaryTarget}
-                  >
-                    {t('Go to Summary')}
-                  </StyledButton>
-                </HeaderTopControls>
+        <Layout.Header>
+          <Layout.HeaderContent>
+            <DiscoverBreadcrumb
+              eventView={eventView}
+              event={event}
+              organization={organization}
+              location={location}
+            />
+            <EventHeader event={event} />
+          </Layout.HeaderContent>
+          <StyledHeaderActions>
+            <ButtonBar gap={1}>
+              <Button onClick={this.toggleSidebar}>
+                {isSidebarVisible ? 'Hide Details' : 'Show Details'}
+              </Button>
+              {transactionSummaryTarget && (
+                <Feature organization={organization} features={['performance-view']}>
+                  {({hasFeature}) => (
+                    <Button
+                      disabled={!hasFeature}
+                      priority="primary"
+                      to={transactionSummaryTarget}
+                    >
+                      {t('Go to Summary')}
+                    </Button>
+                  )}
+                </Feature>
               )}
-            </Feature>
-          )}
-          <EventHeader event={event} />
-          <HeaderBottomControls>
-            <StyledButton onClick={this.toggleSidebar}>
-              {isSidebarVisible ? t('Hide Details') : t('Show Details')}
-            </StyledButton>
-          </HeaderBottomControls>
-        </HeaderBox>
-        <ContentBox>
-          <div style={{gridColumn: isSidebarVisible ? '1/2' : '1/3'}}>
+            </ButtonBar>
+          </StyledHeaderActions>
+        </Layout.Header>
+        <Layout.Body>
+          <Layout.Main fullWidth={!isSidebarVisible}>
             <Projects orgId={organization.slug} slugs={[this.projectId]}>
               {({projects}) => (
                 <SpanEntryContext.Provider
@@ -225,24 +222,26 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
                 </SpanEntryContext.Provider>
               )}
             </Projects>
-          </div>
-          <div style={{gridColumn: '2/3', display: isSidebarVisible ? '' : 'none'}}>
-            <EventMetadata
-              event={event}
-              organization={organization}
-              projectId={this.projectId}
-            />
-            <OpsBreakdown event={event} />
-            {event.groupID && (
-              <LinkedIssue groupId={event.groupID} eventId={event.eventID} />
-            )}
-            <TagsTable
-              generateUrl={this.generateTagUrl}
-              event={event}
-              query={eventView.query}
-            />
-          </div>
-        </ContentBox>
+          </Layout.Main>
+          {isSidebarVisible && (
+            <Layout.Side>
+              <EventMetadata
+                event={event}
+                organization={organization}
+                projectId={this.projectId}
+              />
+              <OpsBreakdown event={event} />
+              {event.groupID && (
+                <LinkedIssue groupId={event.groupID} eventId={event.eventID} />
+              )}
+              <TagsTable
+                generateUrl={this.generateTagUrl}
+                event={event}
+                query={eventView.query}
+              />
+            </Layout.Side>
+          )}
+        </Layout.Body>
       </React.Fragment>
     );
   }
@@ -324,36 +323,25 @@ const EventHeader = (props: {event: Event}) => {
   const message = getMessage(props.event);
 
   return (
-    <StyledEventHeader data-test-id="event-header">
-      <StyledTitle>
+    <Layout.Title data-test-id="event-header">
+      <span>
         {title}
         {message && message.length > 0 ? ':' : null}
-      </StyledTitle>
-      <span>{getMessage(props.event)}</span>
-    </StyledEventHeader>
+      </span>
+      <EventSubheading>{getMessage(props.event)}</EventSubheading>
+    </Layout.Title>
   );
 };
 
-const StyledButton = styled(Button)`
-  display: none;
-
-  @media (min-width: ${p => p.theme.breakpoints[1]}) {
-    display: block;
+const StyledHeaderActions = styled(Layout.HeaderActions)`
+  @media (max-width: ${p => p.theme.breakpoints[1]}) {
+    display: none;
   }
 `;
 
-const StyledEventHeader = styled('div')`
-  font-size: ${p => p.theme.headerFontSize};
+const EventSubheading = styled('span')`
   color: ${p => p.theme.gray500};
-  grid-column: 1/2;
-  align-self: center;
-  ${overflowEllipsis};
-`;
-
-const StyledTitle = styled('span')`
-  color: ${p => p.theme.gray700};
-  margin-right: ${space(1)};
-  align-self: center;
+  margin-left: ${space(1)};
 `;
 
 export default withApi(EventDetailsContent);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
index 7dd3fc0cd1..3a68c5d99c 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
@@ -1,15 +1,14 @@
 import React from 'react';
-import styled from '@emotion/styled';
 import {browserHistory} from 'react-router';
 
 import {Client} from 'app/api';
 import {t} from 'app/locale';
-import overflowEllipsis from 'app/styles/overflowEllipsis';
 import {Organization, SavedQuery} from 'app/types';
 import withApi from 'app/utils/withApi';
 import {addErrorMessage} from 'app/actionCreators/indicator';
 import InlineInput from 'app/components/inputInline';
 import EventView from 'app/utils/discover/eventView';
+import {Title} from 'app/components/layouts/thirds';
 
 import {handleUpdateQueryName} from './savedQuery/utils';
 
@@ -75,7 +74,7 @@ class EventInputName extends React.Component<Props> {
     const {eventView} = this.props;
 
     return (
-      <StyledListHeader>
+      <Title>
         <InlineInput
           ref={this.refInput}
           name="discover2-query-name"
@@ -83,17 +82,9 @@ class EventInputName extends React.Component<Props> {
           value={eventView.name || NAME_DEFAULT}
           onBlur={this.onBlur}
         />
-      </StyledListHeader>
+      </Title>
     );
   }
 }
 
-const StyledListHeader = styled('div')`
-  font-size: ${p => p.theme.headerFontSize};
-  color: ${p => p.theme.gray700};
-  grid-column: 1/2;
-  min-height: 30px;
-  ${overflowEllipsis};
-`;
-
 export default withApi(EventInputName);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/results.tsx b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
index ca8e6f6052..210019c39a 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/results.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
@@ -23,10 +23,10 @@ import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
 import EventView, {isAPIPayloadSimilar} from 'app/utils/discover/eventView';
-import {ContentBox, Main, Side} from 'app/utils/discover/styles';
 import {generateQueryWithTag} from 'app/utils';
 import localStorage from 'app/utils/localStorage';
 import {decodeScalar} from 'app/utils/queryString';
+import * as Layout from 'app/components/layouts/thirds';
 
 import {DEFAULT_EVENT_VIEW} from './data';
 import Table from './table';
@@ -217,7 +217,7 @@ class Results extends React.Component<Props, State> {
     const {eventView, totalValues} = this.state;
 
     return (
-      <Side>
+      <Layout.Side>
         <Tags
           generateUrl={this.generateTagUrl}
           totalValues={totalValues}
@@ -225,7 +225,7 @@ class Results extends React.Component<Props, State> {
           organization={organization}
           location={location}
         />
-      </Side>
+      </Layout.Side>
     );
   }
 
@@ -272,8 +272,8 @@ class Results extends React.Component<Props, State> {
               location={location}
               eventView={eventView}
             />
-            <ContentBox>
-              <Top>
+            <Layout.Body>
+              <Top fullWidth>
                 {this.renderError(error)}
                 <StyledSearchBar
                   organization={organization}
@@ -292,7 +292,7 @@ class Results extends React.Component<Props, State> {
                   total={totalValues}
                 />
               </Top>
-              <StyledMain isCollapsed={!!showTags}>
+              <Layout.Main fullWidth={!showTags}>
                 <Table
                   organization={organization}
                   eventView={eventView}
@@ -302,9 +302,9 @@ class Results extends React.Component<Props, State> {
                   onChangeShowTags={this.handleChangeShowTags}
                   showTags={showTags}
                 />
-              </StyledMain>
+              </Layout.Main>
               {showTags ? this.renderTagsTable() : null}
-            </ContentBox>
+            </Layout.Body>
           </LightWeightNoProjectMessage>
         </StyledPageContent>
       </SentryDocumentTitle>
@@ -312,9 +312,6 @@ class Results extends React.Component<Props, State> {
   }
 }
 
-// These styled components are used in getsentry to create a paywall page.
-// Be careful changing their interfaces.
-
 export const StyledPageContent = styled(PageContent)`
   padding: 0;
 `;
@@ -323,15 +320,10 @@ export const StyledSearchBar = styled(SearchBar)`
   margin-bottom: ${space(2)};
 `;
 
-export const Top = styled('div')`
-  grid-column: 1/3;
+export const Top = styled(Layout.Main)`
   flex-grow: 0;
 `;
 
-export const StyledMain = styled(Main)<{isCollapsed: boolean}>`
-  grid-column: ${p => (p.isCollapsed ? '1/2' : '1/3')};
-`;
-
 function ResultsContainer(props: Props) {
   /**
    * Block `<Results>` from mounting until GSH is ready since there are API
diff --git a/src/sentry/static/sentry/app/views/eventsV2/resultsHeader.tsx b/src/sentry/static/sentry/app/views/eventsV2/resultsHeader.tsx
index e44bf8e59b..73c1bf90c0 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/resultsHeader.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/resultsHeader.tsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import {Location} from 'history';
-import styled from '@emotion/styled';
 
 import {Organization, SavedQuery} from 'app/types';
 import {fetchSavedQuery} from 'app/actionCreators/discoverSavedQueries';
@@ -11,7 +10,7 @@ import Hovercard from 'app/components/hovercard';
 import {t} from 'app/locale';
 import withApi from 'app/utils/withApi';
 import EventView from 'app/utils/discover/eventView';
-import {HeaderBox, HeaderTopControls} from 'app/utils/discover/styles';
+import * as Layout from 'app/components/layouts/thirds';
 
 import DiscoverBreadcrumb from './breadcrumb';
 import EventInputName from './eventInputName';
@@ -82,18 +81,20 @@ class ResultsHeader extends React.Component<Props, State> {
     );
 
     return (
-      <StyledHeaderBox>
-        <DiscoverBreadcrumb
-          eventView={eventView}
-          organization={organization}
-          location={location}
-        />
-        <EventInputName
-          savedQuery={savedQuery}
-          organization={organization}
-          eventView={eventView}
-        />
-        <HeaderTopControls>
+      <Layout.Header>
+        <Layout.HeaderContent>
+          <DiscoverBreadcrumb
+            eventView={eventView}
+            organization={organization}
+            location={location}
+          />
+          <EventInputName
+            savedQuery={savedQuery}
+            organization={organization}
+            eventView={eventView}
+          />
+        </Layout.HeaderContent>
+        <Layout.HeaderActions>
           <Feature
             organization={organization}
             features={['discover-query']}
@@ -112,22 +113,10 @@ class ResultsHeader extends React.Component<Props, State> {
               />
             )}
           </Feature>
-        </HeaderTopControls>
-      </StyledHeaderBox>
+        </Layout.HeaderActions>
+      </Layout.Header>
     );
   }
 }
 
 export default withApi(ResultsHeader);
-
-// TODO(scttcper): The buttons are taking up a lot of space on this page
-const StyledHeaderBox = styled(HeaderBox)`
-  /* On results page header, break to new line sooner */
-  @media (min-width: ${p => p.theme.breakpoints[1]}) {
-    display: block;
-  }
-  @media (min-width: ${p => p.theme.breakpoints[2]}) {
-    display: grid;
-    grid-template-columns: minmax(100px, auto) 475px;
-  }
-`;
diff --git a/src/sentry/static/sentry/app/views/performance/transactionDetails/content.tsx b/src/sentry/static/sentry/app/views/performance/transactionDetails/content.tsx
index 99bd03aea7..cb37767e33 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionDetails/content.tsx
@@ -1,7 +1,6 @@
 import React from 'react';
 import {Params} from 'react-router/lib/Router';
 import {Location} from 'history';
-import styled from '@emotion/styled';
 import PropTypes from 'prop-types';
 
 import {t} from 'app/locale';
@@ -21,7 +20,7 @@ import SentryDocumentTitle from 'app/components/sentryDocumentTitle';
 import OpsBreakdown from 'app/components/events/opsBreakdown';
 import TagsTable from 'app/components/tagsTable';
 import Projects from 'app/utils/projects';
-import {ContentBox, HeaderBox, HeaderBottomControls} from 'app/utils/discover/styles';
+import * as Layout from 'app/components/layouts/thirds';
 import Breadcrumb from 'app/views/performance/breadcrumb';
 import {decodeScalar, appendTagCondition} from 'app/utils/queryString';
 
@@ -123,22 +122,24 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
 
     return (
       <React.Fragment>
-        <HeaderBox>
-          <Breadcrumb
-            organization={organization}
-            location={location}
-            transactionName={transactionName}
-            eventSlug={eventSlug}
-          />
-          <StyledTitle data-test-id="event-header">{event.title}</StyledTitle>
-          <HeaderBottomControls>
-            <StyledButton size="small" onClick={this.toggleSidebar}>
+        <Layout.Header>
+          <Layout.HeaderContent>
+            <Breadcrumb
+              organization={organization}
+              location={location}
+              transactionName={transactionName}
+              eventSlug={eventSlug}
+            />
+            <Layout.Title data-test-id="event-header">{event.title}</Layout.Title>
+          </Layout.HeaderContent>
+          <Layout.HeaderActions>
+            <Button onClick={this.toggleSidebar}>
               {isSidebarVisible ? 'Hide Details' : 'Show Details'}
-            </StyledButton>
-          </HeaderBottomControls>
-        </HeaderBox>
-        <ContentBox>
-          <div style={{gridColumn: isSidebarVisible ? '1/2' : '1/3'}}>
+            </Button>
+          </Layout.HeaderActions>
+        </Layout.Header>
+        <Layout.Body>
+          <Layout.Main fullWidth={!isSidebarVisible}>
             <Projects orgId={organization.slug} slugs={[this.projectId]}>
               {({projects}) => (
                 <SpanEntryContext.Provider
@@ -165,17 +166,19 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
                 </SpanEntryContext.Provider>
               )}
             </Projects>
-          </div>
-          <div style={{gridColumn: '2/3', display: isSidebarVisible ? '' : 'none'}}>
-            <EventMetadata
-              event={event}
-              organization={organization}
-              projectId={this.projectId}
-            />
-            <OpsBreakdown event={event} />
-            <TagsTable event={event} query={query} generateUrl={this.generateTagUrl} />
-          </div>
-        </ContentBox>
+          </Layout.Main>
+          {isSidebarVisible && (
+            <Layout.Side>
+              <EventMetadata
+                event={event}
+                organization={organization}
+                projectId={this.projectId}
+              />
+              <OpsBreakdown event={event} />
+              <TagsTable event={event} query={query} generateUrl={this.generateTagUrl} />
+            </Layout.Side>
+          )}
+        </Layout.Body>
       </React.Fragment>
     );
   }
@@ -218,19 +221,4 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
   }
 }
 
-const StyledButton = styled(Button)`
-  display: none;
-
-  @media (min-width: ${p => p.theme.breakpoints[1]}) {
-    display: block;
-    width: 110px;
-  }
-`;
-
-const StyledTitle = styled('span')`
-  color: ${p => p.theme.gray700};
-  font-size: ${p => p.theme.headerFontSize};
-  grid-column: 1 / 2;
-`;
-
 export default withApi(EventDetailsContent);
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx
index 9cb776dc14..b89e49b2ff 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx
@@ -6,11 +6,10 @@ import omit from 'lodash/omit';
 
 import {Organization} from 'app/types';
 import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
-import overflowEllipsis from 'app/styles/overflowEllipsis';
 import space from 'app/styles/space';
 import {generateQueryWithTag} from 'app/utils';
 import EventView from 'app/utils/discover/eventView';
-import {ContentBox, HeaderBox, Main, Side} from 'app/utils/discover/styles';
+import * as Layout from 'app/components/layouts/thirds';
 import Tags from 'app/views/eventsV2/tags';
 import SearchBar from 'app/views/events/searchBar';
 import {decodeScalar} from 'app/utils/queryString';
@@ -77,21 +76,19 @@ class SummaryContent extends React.Component<Props> {
 
     return (
       <React.Fragment>
-        <HeaderBox>
-          <div>
+        <Layout.Header>
+          <Layout.HeaderContent>
             <Breadcrumb
               organization={organization}
               location={location}
               transactionName={transactionName}
             />
-          </div>
-          <KeyTransactionContainer>
-            {this.renderKeyTransactionButton()}
-          </KeyTransactionContainer>
-          <StyledTitleHeader>{transactionName}</StyledTitleHeader>
-        </HeaderBox>
-        <ContentBox>
-          <StyledMain>
+            <Layout.Title>{transactionName}</Layout.Title>
+          </Layout.HeaderContent>
+          <Layout.HeaderActions>{this.renderKeyTransactionButton()}</Layout.HeaderActions>
+        </Layout.Header>
+        <Layout.Body>
+          <Layout.Main>
             <StyledSearchBar
               organization={organization}
               projectIds={eventView.project}
@@ -119,8 +116,8 @@ class SummaryContent extends React.Component<Props> {
               end={eventView.end}
               statsPeriod={eventView.statsPeriod}
             />
-          </StyledMain>
-          <Side>
+          </Layout.Main>
+          <Layout.Side>
             <UserStats
               organization={organization}
               location={location}
@@ -134,32 +131,13 @@ class SummaryContent extends React.Component<Props> {
               organization={organization}
               location={location}
             />
-          </Side>
-        </ContentBox>
+          </Layout.Side>
+        </Layout.Body>
       </React.Fragment>
     );
   }
 }
 
-const StyledTitleHeader = styled('span')`
-  font-size: ${p => p.theme.headerFontSize};
-  color: ${p => p.theme.gray700};
-  grid-column: 1/2;
-  align-self: center;
-  min-height: 30px;
-  ${overflowEllipsis};
-`;
-
-// Allow overflow so chart tooltip and assignee dropdown display.
-const StyledMain = styled(Main)`
-  overflow: visible;
-`;
-
-const KeyTransactionContainer = styled('div')`
-  display: flex;
-  justify-content: flex-end;
-`;
-
 const StyledSearchBar = styled(SearchBar)`
   margin-bottom: ${space(1)};
 `;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
index eee7a6005e..02b0f17c31 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
@@ -10,6 +10,7 @@ import withOrganization from 'app/utils/withOrganization';
 import {Organization} from 'app/types';
 import AlertLink from 'app/components/alertLink';
 import Feature from 'app/components/acl/feature';
+import {Main} from 'app/components/layouts/thirds';
 
 import {ReleaseContext} from '..';
 
@@ -39,7 +40,7 @@ class ReleaseArtifacts extends AsyncView<Props> {
     const {params, location, organization} = this.props;
 
     return (
-      <React.Fragment>
+      <Main fullWidth>
         <Feature features={['artifacts-in-settings']}>
           {({hasFeature}) =>
             hasFeature ? (
@@ -63,7 +64,7 @@ class ReleaseArtifacts extends AsyncView<Props> {
             )
           }
         </Feature>
-      </React.Fragment>
+      </Main>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
index bb1b9a8ba1..cbb88724d7 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
@@ -15,6 +15,7 @@ import AsyncView from 'app/views/asyncView';
 import routeTitleGen from 'app/utils/routeTitle';
 import {formatVersion} from 'app/utils/formatters';
 import withOrganization from 'app/utils/withOrganization';
+import {Main} from 'app/components/layouts/thirds';
 
 import {getCommitsByRepository, CommitsByRepository} from '../utils';
 import ReleaseNoCommitData from '../releaseNoCommitData';
@@ -155,6 +156,10 @@ class ReleaseCommits extends AsyncView<Props, State> {
       </React.Fragment>
     );
   }
+
+  renderComponent() {
+    return <Main fullWidth>{super.renderComponent()}</Main>;
+  }
 }
 
 const RepoSwitcher = styled('div')`
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
index 50e088f103..c92bafb630 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
@@ -13,6 +13,7 @@ import withOrganization from 'app/utils/withOrganization';
 import routeTitleGen from 'app/utils/routeTitle';
 import {formatVersion} from 'app/utils/formatters';
 import {Panel, PanelBody} from 'app/components/panels';
+import {Main} from 'app/components/layouts/thirds';
 
 import {getFilesByRepository} from '../utils';
 import ReleaseNoCommitData from '../releaseNoCommitData';
@@ -63,7 +64,7 @@ class FilesChanged extends AsyncView<Props, State> {
     }
 
     return (
-      <ContentBox>
+      <React.Fragment>
         {fileList.length ? (
           Object.keys(filesByRepository).map(repository => (
             <RepositoryFileSummary
@@ -82,12 +83,16 @@ class FilesChanged extends AsyncView<Props, State> {
             </PanelBody>
           </Panel>
         )}
-      </ContentBox>
+      </React.Fragment>
     );
   }
+
+  renderComponent() {
+    return <StyledMain fullWidth>{super.renderComponent()}</StyledMain>;
+  }
 }
 
-const ContentBox = styled('div')`
+const StyledMain = styled(Main)`
   h5 {
     color: ${p => p.theme.gray600};
     font-size: ${p => p.theme.fontSizeMedium};
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
index 9b50eb4d10..2b1cae1f0d 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
@@ -26,6 +26,7 @@ import LoadingIndicator from 'app/components/loadingIndicator';
 import {IconInfo, IconWarning} from 'app/icons';
 import space from 'app/styles/space';
 import Alert from 'app/components/alert';
+import {Body} from 'app/components/layouts/thirds';
 
 import ReleaseHeader from './releaseHeader';
 import PickProjectToContinue from './pickProjectToContinue';
@@ -145,12 +146,11 @@ class ReleasesV2Detail extends AsyncView<Props, State> {
             project={project}
             releaseMeta={releaseMeta}
           />
-
-          <ContentBox>
+          <Body>
             <ReleaseContext.Provider value={{release, project, deploys, releaseMeta}}>
               {this.props.children}
             </ReleaseContext.Provider>
-          </ContentBox>
+          </Body>
         </StyledPageContent>
       </LightWeightNoProjectMessage>
     );
@@ -255,11 +255,5 @@ const ProjectsFooterMessage = styled('div')`
   grid-gap: ${space(1)};
 `;
 
-const ContentBox = styled('div')`
-  padding: ${space(4)};
-  flex: 1;
-  background-color: white;
-`;
-
 export {ReleasesV2DetailContainer, ReleaseContext};
 export default withGlobalSelection(withOrganization(ReleasesV2DetailContainer));
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
index d18f3e08c3..dab3440167 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import styled from '@emotion/styled';
 import {RouteComponentProps} from 'react-router/lib/Router';
 
 import {t} from 'app/locale';
@@ -7,11 +6,11 @@ import AsyncView from 'app/views/asyncView';
 import withOrganization from 'app/utils/withOrganization';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
 import {Organization, GlobalSelection} from 'app/types';
-import space from 'app/styles/space';
 import {Client} from 'app/api';
 import withApi from 'app/utils/withApi';
 import {formatVersion} from 'app/utils/formatters';
 import routeTitleGen from 'app/utils/routeTitle';
+import {Main, Side} from 'app/components/layouts/thirds';
 
 import ReleaseChart from './chart/';
 import Issues from './issues';
@@ -94,7 +93,7 @@ class ReleaseOverview extends AsyncView<Props> {
               hasDiscover={hasDiscover}
             >
               {({crashFreeTimeBreakdown, ...releaseStatsProps}) => (
-                <ContentBox>
+                <React.Fragment>
                   <Main>
                     {(hasDiscover || hasHealthData) && (
                       <ReleaseChart
@@ -119,7 +118,7 @@ class ReleaseOverview extends AsyncView<Props> {
                       location={location}
                     />
                   </Main>
-                  <Sidebar>
+                  <Side>
                     <ProjectReleaseDetails
                       release={release}
                       releaseMeta={releaseMeta}
@@ -153,10 +152,10 @@ class ReleaseOverview extends AsyncView<Props> {
                         deploys={deploys}
                       />
                     )}
-                  </Sidebar>
+                  </Side>
 
                   <SwitchReleasesButton version="1" orgId={organization.id} />
-                </ContentBox>
+                </React.Fragment>
               )}
             </ReleaseStatsRequest>
           );
@@ -166,19 +165,4 @@ class ReleaseOverview extends AsyncView<Props> {
   }
 }
 
-const ContentBox = styled('div')`
-  @media (min-width: ${p => p.theme.breakpoints[0]}) {
-    display: grid;
-    grid-column-gap: ${space(3)};
-    grid-template-columns: minmax(470px, 1fr) minmax(220px, 280px);
-  }
-`;
-
-const Main = styled('div')`
-  grid-column: 1 / 2;
-`;
-const Sidebar = styled('div')`
-  grid-column: 2 / 3;
-`;
-
 export default withApi(withGlobalSelection(withOrganization(ReleaseOverview)));
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
index eb7ce1a40b..4039bd821f 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
@@ -18,6 +18,7 @@ import {formatVersion, formatAbbreviatedNumber} from 'app/utils/formatters';
 import Breadcrumbs from 'app/components/breadcrumbs';
 import DeployBadge from 'app/components/deployBadge';
 import Badge from 'app/components/badge';
+import * as Layout from 'app/components/layouts/thirds';
 
 import ReleaseStat from './releaseStat';
 import ReleaseActions from './releaseActions';
@@ -68,8 +69,8 @@ const ReleaseHeader = ({location, orgId, release, project, releaseMeta}: Props)
   ];
 
   return (
-    <Header>
-      <Layout>
+    <StyledHeader>
+      <HeaderInfoContainer>
         <Breadcrumbs
           crumbs={[
             {
@@ -100,29 +101,31 @@ const ReleaseHeader = ({location, orgId, release, project, releaseMeta}: Props)
           </ReleaseStat>
           <ReleaseActions version={version} orgId={orgId} hasHealthData={hasHealthData} />
         </StatsWrapper>
-      </Layout>
+      </HeaderInfoContainer>
 
-      <ReleaseName>
-        <Version version={version} anchor={false} />
+      <Layout.HeaderContent>
+        <ReleaseName>
+          <Version version={version} anchor={false} />
 
-        <IconWrapper>
-          <Clipboard value={version}>
-            <Tooltip title={version} containerDisplayMode="flex">
-              <IconCopy size="xs" />
-            </Tooltip>
-          </Clipboard>
-        </IconWrapper>
-
-        {!!url && (
           <IconWrapper>
-            <Tooltip title={url}>
-              <ExternalLink href={url}>
-                <IconOpen size="xs" />
-              </ExternalLink>
-            </Tooltip>
+            <Clipboard value={version}>
+              <Tooltip title={version} containerDisplayMode="flex">
+                <IconCopy size="xs" />
+              </Tooltip>
+            </Clipboard>
           </IconWrapper>
-        )}
-      </ReleaseName>
+
+          {!!url && (
+            <IconWrapper>
+              <Tooltip title={url}>
+                <ExternalLink href={url}>
+                  <IconOpen size="xs" />
+                </ExternalLink>
+              </Tooltip>
+            </IconWrapper>
+          )}
+        </ReleaseName>
+      </Layout.HeaderContent>
 
       <StyledNavTabs>
         {tabs.map(tab => (
@@ -135,16 +138,15 @@ const ReleaseHeader = ({location, orgId, release, project, releaseMeta}: Props)
           </ListLink>
         ))}
       </StyledNavTabs>
-    </Header>
+    </StyledHeader>
   );
 };
 
-const Header = styled('div')`
-  padding: ${space(2)} ${space(4)} 0;
-  border-bottom: 1px solid ${p => p.theme.borderDark};
+const StyledHeader = styled(Layout.Header)`
+  flex-direction: column;
 `;
 
-const Layout = styled('div')`
+const HeaderInfoContainer = styled('div')`
   margin-bottom: ${space(1)};
   @media (min-width: ${p => p.theme.breakpoints[1]}) {
     display: grid;
@@ -182,7 +184,6 @@ const StyledDeployBadge = styled(DeployBadge)`
 const ReleaseName = styled('div')`
   font-size: ${p => p.theme.headerFontSize};
   color: ${p => p.theme.gray700};
-  margin-bottom: ${space(2)};
   display: flex;
   align-items: center;
 `;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseNoCommitData.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseNoCommitData.tsx
index 5584423327..06a93b4c58 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseNoCommitData.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseNoCommitData.tsx
@@ -14,7 +14,7 @@ type Props = {
 const ReleaseNoCommitData = ({orgId}: Props) => (
   <StyledWell centered>
     <IconCommit size="xl" />
-    <h5>{t('Releases are better with commit data!')}</h5>
+    <h4>{t('Releases are better with commit data!')}</h4>
     <p>
       {t(
         'Connect a repository to see commit info, files changed, and authors involved in future releases.'
