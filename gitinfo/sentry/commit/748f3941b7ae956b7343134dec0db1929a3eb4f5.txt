commit 748f3941b7ae956b7343134dec0db1929a3eb4f5
Author: Jess MacQueen <jess@getsentry.com>
Date:   Tue Sep 6 15:24:20 2016 -0700

    add a test for user organization issue search

diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 6f0a91db51..e40244198e 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -157,7 +157,7 @@ urlpatterns = patterns(
     url(r'^organizations/(?P<organization_slug>[^\/]+)/members/$',
         OrganizationMemberIndexEndpoint.as_view(),
         name='sentry-api-0-organization-member-index'),
-    url(r'^organizations/(?P<organization_slug>[^\/]+)/users/(?:issues|groups)/$',
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/users/issues/$',
         OrganizationUserIssuesSearchEndpoint.as_view(),
         name='sentry-api-0-organization-issue-search'),
     url(r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>[^\/]+)/$',
diff --git a/tests/sentry/api/endpoints/test_organization_user_issues_search.py b/tests/sentry/api/endpoints/test_organization_user_issues_search.py
new file mode 100644
index 0000000000..75f3aca0bc
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_organization_user_issues_search.py
@@ -0,0 +1,58 @@
+from __future__ import absolute_import
+
+from six.moves.urllib.parse import urlencode
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import EventUser, GroupTagValue, OrganizationMemberTeam
+from sentry.testutils import APITestCase
+
+
+class OrganizationUserIssuesSearchTest(APITestCase):
+    def test_simple(self):
+        org = self.create_organization(name='baz')
+        org.flags.allow_joinleave = False
+        org.save()
+        team = self.create_team(organization=org)
+        project1 = self.create_project(team=team)
+        project2 = self.create_project(team=team)
+        group1 = self.create_group(project=project1)
+        group2 = self.create_group(project=project2)
+
+        user = self.create_user()
+        member = self.create_member(user=user, organization=org)
+        self.login_as(user=user)
+
+        EventUser.objects.create(email='foo@example.com', project=project1)
+        EventUser.objects.create(email='foo@example.com', project=project2)
+
+        GroupTagValue.objects.create(key='sentry:user',
+                                     value='email:foo@example.com',
+                                     group=group1,
+                                     project=project1)
+        GroupTagValue.objects.create(key='sentry:user',
+                                     value='email:foo@example.com',
+                                     group=group2,
+                                     project=project2)
+
+        url = reverse('sentry-api-0-organization-issue-search', args=[org.slug])
+        url = '%s?%s' % (url, urlencode({'email': 'foo@example.com'}))
+
+        # User has no team/project access yet
+        response = self.client.get(url, format='json')
+        assert response.status_code == 200
+        assert len(response.data) == 0
+
+        OrganizationMemberTeam.objects.create(
+            team=team,
+            organizationmember=member,
+            is_active=True,
+        )
+
+        response = self.client.get(url, format='json')
+
+        # now user has team/project access
+        assert response.status_code == 200
+        assert len(response.data) == 2
+        assert response.data[0]['project']['slug'] == project2.slug
+        assert response.data[1]['project']['slug'] == project1.slug
