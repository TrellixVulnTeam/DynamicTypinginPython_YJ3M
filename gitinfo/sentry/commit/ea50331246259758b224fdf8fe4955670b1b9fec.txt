commit ea50331246259758b224fdf8fe4955670b1b9fec
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed May 18 20:21:10 2016 -0700

    Remove old/unused help_pages (#3264)

diff --git a/src/sentry/data/help_pages/membership.md b/src/sentry/data/help_pages/membership.md
deleted file mode 100644
index bda4c29151..0000000000
--- a/src/sentry/data/help_pages/membership.md
+++ /dev/null
@@ -1,23 +0,0 @@
-----
-title:Membership
-----
-
-## Roles
-
-The core component of membership revolves around roles. Currently there are three such roles in Sentry:
-
-- Owner
-- Admin
-- Member
-
-Additionally there's a "global team member" flag, which effectively indicates that the member should have access organization-wide for their specific role. This affects what they can do greatly.
-
-For example, an Owner role which does not have global access, but has access to a single team will be able effectively manage all things beyond membership for that team. That includes adding and removing projects, changing settings, etc.
-
-Now if you flip the global access for the given Owner role, they will be able to manage the entirety of the organization, which includes removing access to other owners.
-
-## Open Membership
-
-An organization-wide setting is available which allows open membership. Effectively this will allow any member of your organization to join and leave any team without requesting permission. This will fit most organizations well, and is generally what we recommend.
-
-Without open membership members will still be able to see all teams, but instead of being able to freely join them they'll have to request access. An access request can only be approved by an organization-wide admin (see Roles).
diff --git a/src/sentry/data/help_pages/organizations.md b/src/sentry/data/help_pages/organizations.md
deleted file mode 100644
index 558714cbe0..0000000000
--- a/src/sentry/data/help_pages/organizations.md
+++ /dev/null
@@ -1,33 +0,0 @@
-----
-title:Organizations
-----
-Organizations are the topmost organizational structure in Sentry.
-
-## Membership
-
-Membership is managed at the organizational level, but may cascade to teams. Specifically membership revolves around two things:
-
-* The membership type (the level of access).
-* The scope of the membership.
-
-The general rules for access are as follows:
-
-* Owner: Can perform severe/catastrophic operations (such as deleting the organization)
-* Admin: Can manage settings as well as create projects (or teams, if they're scoped to the organization)
-* Member: Can generally only view events
-
-Scoping is based on the selection of teams (team-level scoping) or if the membership is selected to apply across all teams (org-level scoping).
-
-## Billing and Quotas
-
-Billing is managed at the Organization level (previously this was at the user level). An Organization's quota is spread across all projects within it.
-
-This generally makes sense in the context of a personal vs a business account. You could be using a smaller plan on your personal account, and your company account could be on a much larger plan, as well as charging a different credit card.
-
-## Stats
-
-The stats page allows you to see usage across the organization. The important thing to note here is rejected events. Rejected events indicate the organization was beyond its subscription quota and those events were discarded.
-
-## Audit Log
-
-The Audit Log highlights activity across the organization. This will not include data before the audit log was enabled. Data will be recorded for nearly all changes to the organization, it's teams, or it's projects.
diff --git a/src/sentry/data/help_pages/quotas.md b/src/sentry/data/help_pages/quotas.md
deleted file mode 100644
index 39a59a6afd..0000000000
--- a/src/sentry/data/help_pages/quotas.md
+++ /dev/null
@@ -1,31 +0,0 @@
-----
-title:Rate Limits & Quotas
-----
-
-## Burst Quotas and Throttling
-
-Sentry enforces rate limits using a 60-second counter. For example, when you send an event at 18:51 it will be counted only for the duration of that minute.
-
-Most of the time when you're throttled, Sentry will return a 429. This error code means you've hit the 60 second burst protection. In rare cases, the server might flat out reject your request (connection refused). Both cases the throttling happens only for a short period of time (less than a minute), and the service will operate as expected once its lifted.
-
-## Message Truncation
-
-Sentry imposes hard limits on various components within a message. While the limits may change over time, and vary between attributes most individual attributes are capped at 512 bytes. Additionally, certain attributes also limit the maximum number of items.
-
-For example, ``extra`` data is limited to 100 items, and each item is capped at 512 bytes. Similar restrictions apply to context locals (within a stacktrace's frame), as well as any similar attributes.
-
-Generic attributes like the event's label also have limits, but are more flexible depending on their case. For example, the message attribute is limited to 1024 bytes.
-
-The following limitations will be automatically enforced:
-
-- Events greater than 100k are immediately dropped.
-- Stacktrace's with large frame counts will be trimmed (the middle frames are dropped).
-- Collections exceeding the max items will be trimmed down to the maximum size.
-- Individually values exceeding the maximum length will be trimmed down to the maximum size.
-
-## Optimizing What You Send
-
-Trying to keep within the bounds of your subscription? Try these useful tips for optimizing what you send to Sentry:
-
-- Only send information that you will act on. Generally these are errors, and sometimes warnings. You usually dont truly care about a user hitting a 404, or an action happening (such as you would see in DEBUG logging).
-- Add some safety measures for system failures. If you frequently have to worry about your cache server going down, make it a soft failure, or make it only send to Sentry 10% of the time.
diff --git a/src/sentry/data/help_pages/sampling.md b/src/sentry/data/help_pages/sampling.md
deleted file mode 100644
index 474c7ef485..0000000000
--- a/src/sentry/data/help_pages/sampling.md
+++ /dev/null
@@ -1,7 +0,0 @@
-----
-title:Data Sampling
-----
-
-Due to the large amount of data Sentry collects, it becomes impractical to store all data about every event. Instead, Sentry stores a single entity for every unique event (a group, as we call it), and will then only store a subset of the repeat events. We attempt to do this in an intelligent manner so that it becomes almost invisible to you.
-
-For example, when a new event comes in, it creates an aggregate. Several of the following events will also create individual entries under that aggregate. Once it we see a certain threshhold reached of the same event, we stop storing every entry, and instead store one in N events, as well as one event every N seconds. Additionally, we will always store the first event on a status change (e.g. you resolve an event and it happens again).
diff --git a/src/sentry/data/help_pages/single_sign_on.md b/src/sentry/data/help_pages/single_sign_on.md
deleted file mode 100644
index f85ead68b0..0000000000
--- a/src/sentry/data/help_pages/single_sign_on.md
+++ /dev/null
@@ -1,23 +0,0 @@
-----
-title:Single Sign-On
-----
-
-Single Sign-On (or SSO) allows you to manage your organization's entire membership via a third party provider.
-
-## Preface
-
-Before you get around to actually turning on SSO, you'll want to keep in mind that once it's activated, all existing users will need to link their account before they are able to continue using Sentry. Because of that we recommend coordinating with your team during off-peak hours. That said, it's super quick to link accounts, so we don't consider it a true hurdle.
-
-## Getting Started
-
-With that out of the way, head on over to your organization home. You'll see an "Auth" link in the sidebar. Start by hitting that, and then continue to the "Configure" link next to provider you wish to configure.
-
-Additionally we'll automatically send each pre-existing member an email with instructions on linking their account. This will happen automatically once SSO is successfully configured. Even if they dont click the link, the next time they try to hit any page within the organization we'll require them to link their account (with the same auth flow you just went through).
-
-## Default Membership
-
-Every member who creates a new account via SSO will be given global organization access with a member role. This means that they can access events from any team, but they won't be able to create new projects or administer current ones.
-
-## Security
-
-Our SSO implementation prioritizes security. We aggressively monitor linked accounts and will disable them within any reasonable sign that the account's access may have been revoked. Generally this will be transparent to you, but if the provider is functioning in an unexpected way you may experience more frequent re-authorization requests.
diff --git a/src/sentry/data/help_pages/tagging.md b/src/sentry/data/help_pages/tagging.md
deleted file mode 100644
index 9f5ea07efe..0000000000
--- a/src/sentry/data/help_pages/tagging.md
+++ /dev/null
@@ -1,31 +0,0 @@
-----
-title:Event Tagging
-----
-
-Sentry implements a system it calls tags. Tags are various key/value pairs that get assigned to an event, and can later be used as a breakdown or quick access to finding related events.
-
-Several common uses for tags include:
-
-- The hostname of the server
-- The version of your application (e.g. your git sha)
-- The version of your platform (e.g. iOS 5.0)
-
-Once you've starting sending tagged data, you'll see it show up in a few places:
-
-- The filters within the sidebar on the project stream page.
-- Summarized within an event on the sidebar.
-- The tags page on an aggregated event.
-
-We'll automatically index all tags for an event, as well as the frequency and the last time a value has been seen. Even more so, we keep track of the number of distinct tags, and can assist in you determining hotspots for various issues.
-
-Most clients generally support configuring tags at the global client level configuration, as well as on a per event basis.
-
-For example, in the JavaScript client:
-
-```
-Raven.captureMessage('hello world!', {tags: {
- 	version: 'my application version'
-}});
-```
-
-See your client's documentation for more information on sending tag metadata with events.
diff --git a/src/sentry/data/help_pages/teams_and_projects.md b/src/sentry/data/help_pages/teams_and_projects.md
deleted file mode 100644
index 2ea31a8e3c..0000000000
--- a/src/sentry/data/help_pages/teams_and_projects.md
+++ /dev/null
@@ -1,6 +0,0 @@
-----
-title:Teams & Projects
-----
-There are two ways to seperate things within Sentry. The first is a team. You can think of a team like an organization, and it's composed of many projects. You'll be able to add as many members to your team as you'd like (assuming you're on a paid account), and by default those members have access to all projects.
-
-Projects generally separate different services or roles within your application. For example, a web app might have different projects for its worker processes than it uses for its web processes. It might also split production and staging environments into different projects.
