commit 26fb952367b844dd8bdb3e02b5b3b8c046bdd7d9
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Mar 2 16:47:53 2015 -0800

    Some basic frame rendering

diff --git a/src/sentry/static/sentry/app/views/groupDetails/interfaces/exception.jsx b/src/sentry/static/sentry/app/views/groupDetails/interfaces/exception.jsx
index 87f2e42058..a3838ab11c 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/interfaces/exception.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/interfaces/exception.jsx
@@ -1,10 +1,72 @@
 /*** @jsx React.DOM */
 
 var React = require("react");
+var classSet = require("react/lib/cx");
 
 var GroupEventDataSection = require("../eventDataSection");
 var PropTypes = require("../../../proptypes");
 
+var Frame = React.createClass({
+  propTypes: {
+    data: React.PropTypes.object.isRequired
+  },
+
+  isDefined(item) {
+    return typeof item !== "undefined" && item !== null;
+  },
+
+  isUrl(filename) {
+    if (!filename) {
+      return false;
+    }
+    return filename.indexOf('http:') !== -1 || filename.indexOf('https:') !== -1;
+  },
+
+  render() {
+    var data = this.props.data;
+
+    var className = classSet({
+      "frame": true,
+      "system-frame": !data.in_app,
+      "frame-errors": data.errors,
+    });
+
+    var title = [];
+
+    if (this.isDefined(data.filename || data.module)) {
+      title.push(<code>{data.filename || data.module}</code>);
+      if (this.isUrl(data.abs_path)) {
+        title.push(<a href={data.abs_path} className="icon-share" />);
+      }
+      if (this.isDefined(data.function)) {
+        title.push(<span> in </span>);
+      }
+    }
+
+    if (this.isDefined(data.function)) {
+        title.push(<code>{data.function}</code>);
+    }
+
+    if (this.isDefined(data.lineno)) {
+      title.push(<span> at line </span>);
+      if (this.isDefined(data.colno)) {
+        title.push(<code>{data.lineno}:{data.colno}</code>);
+      } else {
+        title.push(<code>{data.lineno}</code>);
+      }
+    }
+
+    // TODO(dcramer): implement popover annotations
+    return (
+      <li className={className}>
+        <p>
+          {title}
+        </p>
+      </li>
+    );
+  }
+});
+
 var ExceptionInterface = React.createClass({
   propTypes: {
     group: PropTypes.Group.isRequired,
@@ -12,28 +74,27 @@ var ExceptionInterface = React.createClass({
     data: React.PropTypes.object.isRequired
   },
 
-  render: function(){
+  render() {
     var group = this.props.group;
     var evt = this.props.event;
     var data = this.props.data;
 
-    var children = [];
-    data.values.forEach(function(exc, excIdx){
-      // TODO(dcramer): This is basically completely wrong rendering atm
-
-      var frames = [];
-      exc.stacktrace.frames.forEach(function(frame){
+    var children = data.values.map((exc, excIdx) => {
+      var frames = exc.stacktrace.frames.map((frame, frameIdx) => {
+        return <Frame key={frameIdx} data={frame} />;
       });
 
-      children.push(
-        <div className="traceback" key={"exc-" + excIdx}>
+      return (
+        <div className="traceback" key={excIdx}>
           <h3>
             <span>{exc.type}</span>
           </h3>
           {exc.value &&
             <pre>{exc.value}</pre>
           }
-          {frames}
+          <ul>
+            {frames}
+          </ul>
         </div>
       );
     });
