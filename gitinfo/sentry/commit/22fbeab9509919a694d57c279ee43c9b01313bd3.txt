commit 22fbeab9509919a694d57c279ee43c9b01313bd3
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Tue Aug 21 14:55:58 2018 -0700

    feat(jira): Handle unauthenticated users in jira config (#9438)

diff --git a/src/sentry/integrations/jira/configure.py b/src/sentry/integrations/jira/configure.py
index dfc205c701..061c511038 100644
--- a/src/sentry/integrations/jira/configure.py
+++ b/src/sentry/integrations/jira/configure.py
@@ -1,10 +1,12 @@
 from __future__ import absolute_import
 
 from django import forms
+from django.core.urlresolvers import reverse
+from django.views.generic import View
 
 from sentry import roles
 from sentry.integrations.atlassian_connect import AtlassianConnectValidationError, get_integration_from_request
-from sentry.web.frontend.base import BaseView
+from sentry.utils.http import absolute_uri
 from sentry.web.helpers import render_to_response
 from sentry.models import OrganizationIntegration, OrganizationMember
 
@@ -24,7 +26,7 @@ class JiraConfigForm(forms.Form):
         self.fields['organizations'].choices = [(o.id, o.slug) for o in organizations]
 
 
-class JiraConfigureView(BaseView):
+class JiraConfigureView(View):
 
     def get_response(self, context):
         context['ac_js_src'] = '%(base_url)s%(context_path)s/atlassian-connect/all.js' % {
@@ -35,12 +37,24 @@ class JiraConfigureView(BaseView):
         res['X-Frame-Options'] = 'ALLOW-FROM %s' % self.request.GET['xdm_e']
         return res
 
+    def get(self, request, *args, **kwargs):
+        return self.handle(request)
+
+    def post(self, request, *args, **kwargs):
+        return self.handle(request)
+
     def handle(self, request):
         try:
             integration = get_integration_from_request(request, 'jira')
         except AtlassianConnectValidationError:
             return self.get_response({'error_message': 'Unable to verify installation.'})
 
+        if not request.user.is_authenticated():
+            return self.get_response({
+                'login_required': True,
+                'login_url': absolute_uri(reverse('sentry-login')),
+            })
+
         organizations = request.user.get_orgs().filter(
             id__in=OrganizationMember.objects.filter(
                 role__in=[r.id for r in roles.get_all() if r.is_global],
diff --git a/src/sentry/templates/sentry/integrations/jira-config.html b/src/sentry/templates/sentry/integrations/jira-config.html
index 1e7df66625..06c25efe8f 100644
--- a/src/sentry/templates/sentry/integrations/jira-config.html
+++ b/src/sentry/templates/sentry/integrations/jira-config.html
@@ -23,38 +23,65 @@
     .description {
       max-width: 400px;
     }
+
+    div.signin {
+      padding-top: 25px;
+    }
     </style>
 </head>
 <body>
   <h3>Sentry Integration Configuration</h3>
 
-  {% if completed %}
-  <div class="aui-message aui-message-success">
-    <p class="title">
-      <strong>Saved!</strong>
-    </p>
-    <p>
-      The Sentry Jira integration is now enabled for the selected
-      organizations. Return to your sentry organization to configure the Jira
-      integration for your organization.
-    </p>
-  </div>
-  {% endif %}
+  {% if login_required %}
+    <div class="aui-message aui-message-info">
+        <p>Please login to your Sentry account to access the Sentry Add-on configuration</p>
+    </div>
+    <div class="signin">
+      <a class="aui-button aui-button-default" href="{{ login_url }}" target="_blank">
+        Sign In to Sentry
+      </a>
+    </div>
+  {% else %}
+    {% if completed %}
+    <div class="aui-message aui-message-success">
+      <p class="title">
+        <strong>Saved!</strong>
+      </p>
+      <p>
+        The Sentry Jira integration is now enabled for the selected
+        organizations. Return to your sentry organization to configure the Jira
+        integration for your organization.
+      </p>
+    </div>
+    {% endif %}
 
-  <form class="aui top-label" action="" method="post">
-    {% csrf_token %}
-    {% for field in form %}
-      <div class="field-group top-label">
-        {{ field.errors }}
-        {{ field.label_tag }} {{ field }}
-        <div class="description">{{ field.help_text }}</div>
+    <form class="aui top-label" action="" method="post">
+      {% csrf_token %}
+      {% for field in form %}
+        <div class="field-group top-label">
+          {{ field.errors }}
+          {{ field.label_tag }} {{ field }}
+          <div class="description">{{ field.help_text }}</div>
+        </div>
+      {% endfor %}
+      <div class="field-group">
+        <button class="aui-button aui-button-primary" type="submit">
+            Save Settings
+        </button>
       </div>
-    {% endfor %}
-    <div class="field-group">
-      <button class="aui-button aui-button-primary" type="submit">
-          Save Settings
-      </button>
-    </div>
-  </form>
+    </form>
+  {% endif %}
 </body>
+{% if login_required %}
+  <script type="text/javascript">
+    (function() {
+      document.addEventListener('visibilitychange', function() {
+        // see if they've logged in while away from tab
+        if (!document.hidden) {
+          window.location.reload();
+        }
+      });
+    })();
+  </script>
+{% endif %}
 </html>
