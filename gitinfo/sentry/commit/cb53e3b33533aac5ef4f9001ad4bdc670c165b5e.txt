commit cb53e3b33533aac5ef4f9001ad4bdc670c165b5e
Author: Jan Michael Auer <account@jauer.org>
Date:   Mon Nov 26 13:01:54 2018 +0100

    fix(interfaces): Add schema validation for the Template interface (#10758)

diff --git a/src/sentry/data/samples/invalid-interfaces.json b/src/sentry/data/samples/invalid-interfaces.json
index df6f0d02a0..4376c3f807 100644
--- a/src/sentry/data/samples/invalid-interfaces.json
+++ b/src/sentry/data/samples/invalid-interfaces.json
@@ -98,6 +98,21 @@
         "integrations": "no list",
         "packages": "no list"
     },
+    "template": {
+        "lineno": 0,
+        "context_line": [
+            2,
+            "{% something %} "
+        ],
+        "pre_context": [
+            1,
+            "<!-- printing something --> "
+        ],
+        "post_context": [
+            3,
+            " "
+        ]
+    },
     "user": {
         "email": "B5849C8CC2779009ECA17792D1138D13",
         "ip_address": "F528764D624DB129B32C21FBCA0CB8D6"
diff --git a/src/sentry/interfaces/schemas.py b/src/sentry/interfaces/schemas.py
index 86bde774e1..8da3d28c80 100644
--- a/src/sentry/interfaces/schemas.py
+++ b/src/sentry/interfaces/schemas.py
@@ -252,7 +252,28 @@ GEO_INTERFACE_SCHEMA = {
     'additionalProperties': False,
 }
 
-TEMPLATE_INTERFACE_SCHEMA = {'type': 'object'}  # TODO fill this out
+TEMPLATE_INTERFACE_SCHEMA = {
+    'type': 'object',
+    'properties': {
+        'abs_path': {'type': 'string'},
+        'filename': {'type': 'string'},
+        'context_line': {'type': 'string'},
+        'lineno': {
+            'type': 'number',
+            'minimum': 1,
+        },
+        'pre_context': {
+            'type': 'array',
+            'items': {'type': 'string'}
+        },
+        'post_context': {
+            'type': 'array',
+            'items': {'type': 'string'}
+        },
+    },
+    'required': ['lineno', 'context_line'],
+    'additionalProperties': False,
+}
 MESSAGE_INTERFACE_SCHEMA = {'type': 'object'}
 
 TAGS_DICT_SCHEMA = {
diff --git a/src/sentry/interfaces/template.py b/src/sentry/interfaces/template.py
index 8c296f5790..d1cb372cc8 100644
--- a/src/sentry/interfaces/template.py
+++ b/src/sentry/interfaces/template.py
@@ -9,7 +9,8 @@ from __future__ import absolute_import
 
 __all__ = ('Template', )
 
-from sentry.interfaces.base import Interface
+from sentry.interfaces.base import Interface, InterfaceValidationError
+from sentry.interfaces.schemas import validate_and_default_interface
 from sentry.interfaces.stacktrace import get_context
 from sentry.utils.safe import trim
 
@@ -42,6 +43,10 @@ class Template(Interface):
 
     @classmethod
     def to_python(cls, data):
+        is_valid, errors = validate_and_default_interface(data, cls.path)
+        if not is_valid:
+            raise InterfaceValidationError("Invalid template")
+
         kwargs = {
             'abs_path': trim(data.get('abs_path', None), 256),
             'filename': trim(data.get('filename', None), 256),
diff --git a/tests/sentry/interfaces/test_template.py b/tests/sentry/interfaces/test_template.py
index 360ad6d02f..a22f9ad057 100644
--- a/tests/sentry/interfaces/test_template.py
+++ b/tests/sentry/interfaces/test_template.py
@@ -2,10 +2,11 @@
 
 from __future__ import absolute_import
 
-import mock
-
 from exam import fixture
+import mock
+import pytest
 
+from sentry.interfaces.base import InterfaceValidationError
 from sentry.interfaces.template import Template
 from sentry.models import Event
 from sentry.testutils import TestCase
@@ -28,12 +29,17 @@ class TemplateTest(TestCase):
         self.assertEquals(result['context_line'], 'hello world')
         self.assertEquals(result['lineno'], 1)
 
-    def test_null_values(self):
-        sink = {}
-
-        assert Template.to_python({}).to_json() == sink
-        assert Template.to_python({"lineno": None}).to_json() == sink
-        assert Template.to_python({"lineno": 0}).to_json() == {"lineno": 0}
+    def test_required_attributes(self):
+        with pytest.raises(InterfaceValidationError):
+            Template.to_python({})
+        with pytest.raises(InterfaceValidationError):
+            Template.to_python({"lineno": None, "context_line": ""})
+        with pytest.raises(InterfaceValidationError):
+            Template.to_python({"lineno": 0, "context_line": ""})
+        with pytest.raises(InterfaceValidationError):
+            Template.to_python({"lineno": 1})
+        with pytest.raises(InterfaceValidationError):
+            Template.to_python({"lineno": 1, "context_line": 42})
 
     def test_get_hash(self):
         result = self.interface.get_hash()
