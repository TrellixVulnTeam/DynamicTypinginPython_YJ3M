commit a9aaae6fe77b84a8d25105cf1e8800bc66486aee
Author: Stephen Cefali <scefali@sentry.io>
Date:   Mon Jul 15 12:56:02 2019 -0700

    add handler on delete to ignore request exceptions (#13984)

diff --git a/src/sentry/mediators/sentry_app_installations/destroyer.py b/src/sentry/mediators/sentry_app_installations/destroyer.py
index b11328bbe9..6b61472964 100644
--- a/src/sentry/mediators/sentry_app_installations/destroyer.py
+++ b/src/sentry/mediators/sentry_app_installations/destroyer.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+
+from requests.exceptions import RequestException
 from sentry import analytics
 from sentry.mediators import Mediator, Param
 from sentry.mediators import service_hooks
@@ -14,6 +16,13 @@ class Destroyer(Mediator):
     request = Param('rest_framework.request.Request', required=False)
     notify = Param(bool, default=True)
 
+    @property
+    def _logging_context(self):
+        return {
+            'install_id': self.install.id,
+            'install_uuid': self.install.uuid
+        }
+
     def call(self):
         self._destroy_grant()
         self._destroy_service_hooks()
@@ -34,11 +43,15 @@ class Destroyer(Mediator):
 
     def _destroy_installation(self):
         if self.notify:
-            InstallationNotifier.run(
-                install=self.install,
-                user=self.user,
-                action='deleted',
-            )
+            try:
+                InstallationNotifier.run(
+                    install=self.install,
+                    user=self.user,
+                    action='deleted',
+                )
+            # if the error is from a request exception, log the error and continue
+            except RequestException as exc:
+                self.log(error=exc)
         self.install.delete()
 
     def audit(self):
diff --git a/tests/sentry/mediators/sentry_app_installations/test_destroyer.py b/tests/sentry/mediators/sentry_app_installations/test_destroyer.py
index 4ae4f00e93..cc959efbd9 100644
--- a/tests/sentry/mediators/sentry_app_installations/test_destroyer.py
+++ b/tests/sentry/mediators/sentry_app_installations/test_destroyer.py
@@ -4,6 +4,7 @@ import responses
 
 from django.db import connection
 from mock import patch
+from requests.exceptions import RequestException
 
 from sentry.mediators.sentry_app_installations import Creator, Destroyer
 from sentry.models import AuditLogEntry, AuditLogEntryEvent, ApiGrant, SentryAppInstallation, ServiceHook
@@ -125,6 +126,34 @@ class TestDestroyer(TestCase):
 
         assert c.fetchone()[0] == 1
 
+    @responses.activate
+    def test_deletes_on_request_exception(self):
+        install = self.install
+
+        responses.add(
+            responses.POST,
+            'https://example.com/webhook',
+            body=RequestException('Request exception'))
+
+        self.destroyer.call()
+
+        assert not SentryAppInstallation.objects.filter(pk=install.id).exists()
+
+    @responses.activate
+    def test_fail_on_other_error(self):
+        install = self.install
+        try:
+            responses.add(
+                responses.POST,
+                'https://example.com/webhook',
+                body=Exception('Other error'))
+
+            self.destroyer.call()
+        except Exception:
+            assert SentryAppInstallation.objects.filter(pk=install.id).exists()
+        else:
+            assert False, 'Should fail on other error'
+
     @responses.activate
     @patch('sentry.analytics.record')
     def test_records_analytics(self, record):
