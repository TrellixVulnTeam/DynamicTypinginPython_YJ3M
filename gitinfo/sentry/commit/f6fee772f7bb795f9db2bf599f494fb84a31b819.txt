commit f6fee772f7bb795f9db2bf599f494fb84a31b819
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed Dec 2 11:34:49 2015 -0800

    Fix Client.prototype.clear; add test

diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index e9accbeb40..179b60e08d 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -51,8 +51,8 @@ export class Client {
   }
 
   clear() {
-    for (let request of this.activeRequests) {
-      request.cancel();
+    for (let id in this.activeRequests) {
+      this.activeRequests[id].cancel();
     }
   }
 
diff --git a/tests/js/spec/api.spec.jsx b/tests/js/spec/api.spec.jsx
new file mode 100644
index 0000000000..b41e50a6f7
--- /dev/null
+++ b/tests/js/spec/api.spec.jsx
@@ -0,0 +1,31 @@
+import {Client, Request} from 'app/api';
+
+describe('api', function () {
+  beforeEach(function () {
+    this.sandbox = sinon.sandbox.create();
+    this.api = new Client();
+  });
+
+  describe('Client', function () {
+    describe('cancel()', function () {
+      it('should abort any open XHR requests', function () {
+        let req1 = new Request({
+          abort: sinon.stub()
+        });
+        let req2 = new Request({
+          abort: sinon.stub()
+        });
+
+        this.api.activeRequests = {
+          1: req1,
+          2: req2
+        };
+
+        this.api.clear();
+
+        expect(req1.xhr.abort.calledOnce).to.be.ok;
+        expect(req2.xhr.abort.calledOnce).to.be.ok;
+      });
+    });
+  });
+});
