commit f0dff12de3e3b36f92f2ba4d2f390eef8c846e48
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Dec 16 14:21:52 2015 -0800

    Remove index/upgrade capabilities from search (backend obsolete)

diff --git a/CHANGES b/CHANGES
index 54889cb986..7ba6186db8 100644
--- a/CHANGES
+++ b/CHANGES
@@ -78,6 +78,7 @@ General
 - Membership permissions have been overhauled and have been flattened into a single tiered
   role. Additionally owners will no longer be automatically added to new teams.
 - ``NotificationPlugin`` now requires ``is_configured`` to be declared.
+- ``sentry.search`` should no longer be extended (``index`` and ``upgrade`` have been removed)
 
 Client API
 ~~~~~~~~~~
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 5a7fdf7632..b994e7834a 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -33,7 +33,6 @@ from sentry.models import (
 from sentry.plugins import plugins
 from sentry.signals import regression_signal
 from sentry.utils.logging import suppress_exceptions
-from sentry.tasks.index import index_event
 from sentry.tasks.merge import merge_group
 from sentry.tasks.post_process import post_process_group
 from sentry.utils.db import get_db_engine
@@ -529,8 +528,6 @@ class EventManager(object):
         else:
             self.logger.info('Raw event passed; skipping post process for event_id=%s', event_id)
 
-        index_event.delay(event)
-
         # TODO: move this to the queue
         if is_regression and not raw:
             regression_signal.send_robust(sender=Group, instance=group)
diff --git a/src/sentry/search/base.py b/src/sentry/search/base.py
index 23beeab26f..4213a42b80 100644
--- a/src/sentry/search/base.py
+++ b/src/sentry/search/base.py
@@ -21,9 +21,6 @@ class SearchBackend(object):
         Raise ``InvalidConfiguration`` if there is a configuration error.
         """
 
-    def index(self, event):
-        raise NotImplementedError
-
     def query(self, project, query=None, status=None, tags=None,
               bookmarked_by=None, assigned_to=None, first_release=None,
               sort_by='date', date_filter='last_seen', date_from=None,
@@ -36,6 +33,3 @@ class SearchBackend(object):
         CursorResult.
         """
         raise NotImplementedError
-
-    def upgrade(self):
-        pass
diff --git a/src/sentry/search/django/backend.py b/src/sentry/search/django/backend.py
index ad53264e9c..760455a8b5 100644
--- a/src/sentry/search/django/backend.py
+++ b/src/sentry/search/django/backend.py
@@ -20,9 +20,6 @@ from sentry.utils.db import get_db_engine
 
 
 class DjangoSearchBackend(SearchBackend):
-    def index(self, event):
-        pass
-
     def query(self, project, query=None, status=None, tags=None,
               bookmarked_by=None, assigned_to=None, first_release=None,
               sort_by='date', date_filter='last_seen', date_from=None,
diff --git a/src/sentry/tasks/index.py b/src/sentry/tasks/index.py
deleted file mode 100644
index 381c5225d4..0000000000
--- a/src/sentry/tasks/index.py
+++ /dev/null
@@ -1,18 +0,0 @@
-"""
-sentry.tasks.index
-~~~~~~~~~~~~~~~~~~
-
-:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
-:license: BSD, see LICENSE for more details.
-"""
-
-from __future__ import absolute_import
-
-from sentry.tasks.base import instrumented_task
-
-
-@instrumented_task(name='sentry.tasks.index.index_event', queue='search')
-def index_event(event, **kwargs):
-    from sentry import app
-
-    app.search.index(event)
diff --git a/tests/sentry/search/django/tests.py b/tests/sentry/search/django/tests.py
index e3e9c4f35f..36d929530a 100644
--- a/tests/sentry/search/django/tests.py
+++ b/tests/sentry/search/django/tests.py
@@ -75,9 +75,6 @@ class DjangoSearchBackendTest(TestCase):
             project=self.group2.project,
         )
 
-        self.backend.index(self.event1)
-        self.backend.index(self.event2)
-
     def test_query(self):
         results = self.backend.query(self.project1, query='foo')
         assert len(results) == 1
