commit 703b4370466a9117878c8c90d6a079a94b23e04e
Author: Max Bittker <maxbittker@gmail.com>
Date:   Wed Jan 17 11:39:24 2018 -0800

    chore(core frontend): Refresh CRC codemod (#6971)
    
    * crc codemod refresh
    
    * update layout.html

diff --git a/src/sentry/static/sentry/app/components/avatarSettings.jsx b/src/sentry/static/sentry/app/components/avatarSettings.jsx
index 63123e2f7c..3f1cae75c8 100644
--- a/src/sentry/static/sentry/app/components/avatarSettings.jsx
+++ b/src/sentry/static/sentry/app/components/avatarSettings.jsx
@@ -1,6 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
+import createReactClass from 'create-react-class';
+
 import AlertActions from '../actions/alertActions';
 import ApiMixin from '../mixins/apiMixin';
 import AvatarCropper from '../components/avatarCropper';
@@ -9,7 +11,9 @@ import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import {t} from '../locale';
 
-const AvatarSettings = React.createClass({
+const AvatarSettings = createReactClass({
+  displayName: 'AvatarSettings',
+
   propTypes: {
     userId: PropTypes.number,
   },
diff --git a/src/sentry/static/sentry/app/components/issueDiff.jsx b/src/sentry/static/sentry/app/components/issueDiff.jsx
index 1d1482fb05..b51fea6520 100644
--- a/src/sentry/static/sentry/app/components/issueDiff.jsx
+++ b/src/sentry/static/sentry/app/components/issueDiff.jsx
@@ -1,4 +1,5 @@
-import React, {PropTypes} from 'react';
+import React from 'react';
+import PropTypes from 'prop-types';
 import createReactClass from 'create-react-class';
 import classNames from 'classnames';
 
diff --git a/src/sentry/static/sentry/app/components/modals/sudoModal.jsx b/src/sentry/static/sentry/app/components/modals/sudoModal.jsx
index a8255dae5d..0b8b26bab8 100644
--- a/src/sentry/static/sentry/app/components/modals/sudoModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/sudoModal.jsx
@@ -1,6 +1,7 @@
 import {browserHistory} from 'react-router';
 import Modal from 'react-bootstrap/lib/Modal';
 import React from 'react';
+import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
 import classNames from 'classnames';
 
@@ -13,7 +14,8 @@ import SudoActions from '../../actions/sudoActions';
 import SudoModalStore from '../../stores/sudoModalStore';
 import U2fContainer from '../u2fContainer';
 
-const SudoModal = React.createClass({
+const SudoModal = createReactClass({
+  displayName: 'SudoModal',
   mixins: [ApiMixin, Reflux.connect(SudoModalStore, 'modalProps')],
 
   getInitialState() {
diff --git a/src/sentry/static/sentry/app/utils/withPlugins.jsx b/src/sentry/static/sentry/app/utils/withPlugins.jsx
index 19952e0f9d..76c6451752 100644
--- a/src/sentry/static/sentry/app/utils/withPlugins.jsx
+++ b/src/sentry/static/sentry/app/utils/withPlugins.jsx
@@ -1,17 +1,23 @@
 import React from 'react';
+import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
 
 import {fetchPlugins} from '../actionCreators/plugins';
 import PluginsStore from '../stores/pluginsStore';
 import ProjectState from '../mixins/projectState';
+import SentryTypes from '../proptypes';
 
 /**
  * Higher order component that fetches list of plugins and
  * passes PluginsStore to component as `plugins`
  */
 const withPlugins = WrappedComponent =>
-  React.createClass({
+  createReactClass({
     displayName: 'withPlugins',
+    propTypes: {
+      organization: SentryTypes.Organization,
+      project: SentryTypes.Project,
+    },
     mixins: [ProjectState, Reflux.connect(PluginsStore, 'store')],
     componentDidMount() {
       let organization = this.props.organization || this.getOrganization();
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index b8d0ad8ea5..9b18e9afb4 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -79,7 +79,7 @@
         $(function(){
           var SidebarWrapper = createReactClass({
             propTypes: {
-              organization: React.PropTypes.any.isRequired
+              organization: PropTypes.any.isRequired
             },
             getChildContext: function () {
               return {
@@ -92,7 +92,7 @@
             }
           });
           SidebarWrapper.childContextTypes = {
-            organization: React.PropTypes.any
+            organization: PropTypes.any
           };
           ReactDOM.render(React.createFactory(SidebarWrapper)({
             organization: {% serialize_detailed_org organization %},
