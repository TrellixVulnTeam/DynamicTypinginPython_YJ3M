commit cd2590fff8337ef452a2f600b86e92e0a52f719c
Author: Nola Chen <chen.no@husky.neu.edu>
Date:   Fri Nov 15 12:44:05 2019 -0800

    feat(app-platform): UI tweaks to request log  (#15531)
    
    * Display status codes as tags
    
    * Add potential link to timestamp
    
    * add 300s as warning tags

diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.tsx
index 82ea15f2de..5ef3c5bbd9 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.tsx
@@ -1,6 +1,8 @@
 import React from 'react';
 import styled from 'react-emotion';
 
+import moment from 'moment-timezone';
+
 import AsyncView from 'app/views/asyncView';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import LineChart from 'app/components/charts/lineChart';
@@ -16,11 +18,37 @@ import BarChart from 'app/components/charts/barChart';
 import DateTime from 'app/components/dateTime';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import Link from 'app/components/links/link';
+import Tag from 'app/views/settings/components/tag';
 
 import space from 'app/styles/space';
 import {SentryApp, SentryAppWebhookRequest} from 'app/types';
 import {t} from 'app/locale';
 
+const ResponseCode = ({code}: {code: number}) => {
+  let priority = 'error';
+  if (code <= 399 && code >= 300) {
+    priority = 'warning';
+  } else if (code <= 299 && code >= 100) {
+    priority = 'success';
+  }
+
+  return (
+    <div>
+      <Tag priority={priority}>{code === 0 ? 'timeout' : code}</Tag>
+    </div>
+  );
+};
+
+const TimestampLink = ({date, link}: {date: moment.MomentInput; link?: string}) => {
+  return link ? (
+    <Link to={link}>
+      <DateTime date={date} />
+    </Link>
+  ) : (
+    <DateTime date={date} />
+  );
+};
+
 type Props = AsyncView['props'];
 
 type State = AsyncView['state'] & {
@@ -154,8 +182,8 @@ export default class SentryApplicationDashboard extends AsyncView<Props, State>
               requests.map((request, idx) => (
                 <PanelItem key={idx}>
                   <TableLayout>
-                    <DateTime date={request.date} />
-                    <div>{request.responseCode}</div>
+                    <TimestampLink date={request.date} />
+                    <ResponseCode code={request.responseCode} />
                     {app.status !== 'internal' && request.organization && (
                       <div>{request.organization.name}</div>
                     )}
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.spec.jsx
index 4ccf1c2972..b872fcc1c1 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {Client} from 'app/api';
-import {mount} from 'sentry-test/enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import SentryApplicationDashboard from 'app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard';
 
 describe('Sentry Application Dashboard', function() {
@@ -63,7 +63,7 @@ describe('Sentry Application Dashboard', function() {
         body: sentryApp,
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDashboard params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
@@ -120,7 +120,7 @@ describe('Sentry Application Dashboard', function() {
         body: [],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDashboard params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
@@ -203,7 +203,7 @@ describe('Sentry Application Dashboard', function() {
         body: sentryApp,
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDashboard params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
@@ -233,7 +233,7 @@ describe('Sentry Application Dashboard', function() {
         body: [],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDashboard params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
