commit ae684acd613c5dca87685f047dc768bf2c05e0b6
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Oct 11 15:16:17 2018 -0700

    fix(discover): Fix loading query fields (#10087)
    
    This fixes a bug that caused the query to not be displayed upon initial
    creation. This occurred since the view variable was not updated on
    redirection to the saved query url.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index fedc16610a..87459e6697 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -81,6 +81,7 @@ export default class OrganizationDiscover extends React.Component {
     const {resultManager} = this.state;
 
     if (savedQuery && savedQuery !== this.props.savedQuery) {
+      this.setState({view: 'saved'});
       this.runQuery();
     }
 
diff --git a/tests/js/spec/views/organizationDiscover/discover.spec.jsx b/tests/js/spec/views/organizationDiscover/discover.spec.jsx
index a9c1d39953..103c52a8b4 100644
--- a/tests/js/spec/views/organizationDiscover/discover.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/discover.spec.jsx
@@ -61,6 +61,29 @@ describe('Discover', function() {
     });
   });
 
+  describe('componentWillRecieveProps()', function() {
+    it('handles navigating to saved query', function() {
+      const wrapper = mount(
+        <Discover
+          queryBuilder={queryBuilder}
+          organization={organization}
+          params={{}}
+          updateSavedQueryData={() => {}}
+          location={{search: ''}}
+        />,
+        TestStubs.routerContext([{organization}])
+      );
+      expect(wrapper.find('QueryEdit')).toHaveLength(1);
+      expect(wrapper.find('QueryRead')).toHaveLength(0);
+      wrapper.setProps({
+        savedQuery: TestStubs.DiscoverSavedQuery(),
+      });
+      wrapper.update();
+      expect(wrapper.find('QueryEdit')).toHaveLength(0);
+      expect(wrapper.find('QueryRead')).toHaveLength(1);
+    });
+  });
+
   describe('runQuery()', function() {
     const mockResponse = {timing: {}, data: [], meta: []};
     let wrapper;
