commit 7def47b7d9b549133ff53658b51cf2aba856fc71
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 11 19:19:38 2013 -0800

    Ignore filename in hash when its based on a URL

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index a63342ceda..fd42bd2a10 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -353,10 +353,13 @@ class Stacktrace(Interface):
 
     def get_frame_hash(self, frame):
         output = []
+        filename = frame.get('filename')
+        abs_path = frame.get('abs_path') or filename
         if frame.get('module'):
             output.append(frame['module'])
-        elif frame.get('filename'):
-            output.append(frame['filename'])
+        # We only include the filename
+        elif filename and not abs_path.startswith(('http:', 'https:')):
+            output.append(filename)
 
         if frame.get('context_line'):
             output.append(frame['context_line'])
diff --git a/tests/sentry/interfaces/stacktrace/tests.py b/tests/sentry/interfaces/stacktrace/tests.py
index 0a10debece..a76f2c6cb5 100644
--- a/tests/sentry/interfaces/stacktrace/tests.py
+++ b/tests/sentry/interfaces/stacktrace/tests.py
@@ -76,6 +76,31 @@ class StacktraceTest(TestCase):
         result = interface.get_hash()
         self.assertEquals(result, ['foo.py', 1])
 
+    def test_get_hash_ignores_filename_if_http(self):
+        interface = Stacktrace(frames=[{
+            'context_line': 'hello world',
+            'filename': 'http://foo.com/foo.py',
+        }])
+        result = interface.get_hash()
+        self.assertEquals(result, ['hello world'])
+
+    def test_get_hash_ignores_filename_if_https(self):
+        interface = Stacktrace(frames=[{
+            'context_line': 'hello world',
+            'filename': 'https://foo.com/foo.py',
+        }])
+        result = interface.get_hash()
+        self.assertEquals(result, ['hello world'])
+
+    def test_get_hash_ignores_filename_if_abs_path_is_http(self):
+        interface = Stacktrace(frames=[{
+            'context_line': 'hello world',
+            'abs_path': 'https://foo.com/foo.py',
+            'filename': 'foo.py',
+        }])
+        result = interface.get_hash()
+        self.assertEquals(result, ['hello world'])
+
     def test_get_hash_uses_module_over_filename(self):
         interface = Stacktrace(frames=[{
             'lineno': 1,
