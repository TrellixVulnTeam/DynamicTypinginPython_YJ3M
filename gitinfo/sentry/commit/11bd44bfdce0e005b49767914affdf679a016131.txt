commit 11bd44bfdce0e005b49767914affdf679a016131
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Mar 1 18:47:37 2016 +0100

    Refactored dsym endpoints to reuse code

diff --git a/src/sentry/api/endpoints/dsym_files.py b/src/sentry/api/endpoints/dsym_files.py
index 73fa8fb591..5f373c5329 100644
--- a/src/sentry/api/endpoints/dsym_files.py
+++ b/src/sentry/api/endpoints/dsym_files.py
@@ -15,6 +15,14 @@ from sentry.models import ProjectDSymFile, create_files_from_macho_zip
 ERR_FILE_EXISTS = 'A file matching this uuid already exists'
 
 
+def upload_from_request(request, project=None):
+    if 'file' not in request.FILES:
+        return Response({'detail': 'Missing uploaded file'}, status=400)
+    fileobj = request.FILES['file']
+    files = create_files_from_macho_zip(fileobj, project=project)
+    return Response(serialize(files, request.user), status=201)
+
+
 class ConditionalContentNegotiation(DefaultContentNegotiation):
     """
     Overrides the parsers on POST to support file uploads.
@@ -79,22 +87,18 @@ class DSymFilesEndpoint(ProjectEndpoint):
         :param file file: the multipart encoded file.
         :auth: required
         """
-        if 'file' not in request.FILES:
-            return Response({'detail': 'Missing uploaded file'}, status=400)
+        return upload_from_request(request, project=project)
 
-        fileobj = request.FILES['file']
 
-        files = create_files_from_macho_zip(fileobj, project)
+class GlobalDSymFilesEndpoint(Endpoint):
+    permission_classes = (SystemPermission,)
 
-        return Response(serialize(files, request.user), status=201)
+    def post(self, request):
+        return upload_from_request(request, project=None)
 
 
-class GlobalDSymFilesEndpoint(Endpoint):
+class UnknownDSymFilesEndpoint(Endpoint):
     permission_classes = (SystemPermission,)
 
     def post(self, request):
-        if 'file' not in request.FILES:
-            return Response({'detail': 'Missing uploaded file'}, status=400)
-        fileobj = request.FILES['file']
-        files = create_files_from_macho_zip(fileobj)
-        return Response(serialize(files, request.user), status=201)
+        return upload_from_request(request, project=None)
