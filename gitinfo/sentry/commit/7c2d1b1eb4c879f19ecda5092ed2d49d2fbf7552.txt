commit 7c2d1b1eb4c879f19ecda5092ed2d49d2fbf7552
Author: Jess MacQueen <jess@getsentry.com>
Date:   Fri Apr 15 16:13:06 2016 -0700

    make BarChart component support stacked bar charts

diff --git a/src/sentry/static/sentry/app/components/barChart.jsx b/src/sentry/static/sentry/app/components/barChart.jsx
index 01f801d08a..051019b50b 100644
--- a/src/sentry/static/sentry/app/components/barChart.jsx
+++ b/src/sentry/static/sentry/app/components/barChart.jsx
@@ -7,7 +7,7 @@ const BarChart = React.createClass({
   propTypes: {
     points: React.PropTypes.arrayOf(React.PropTypes.shape({
       x: React.PropTypes.number.isRequired,
-      y: React.PropTypes.number.isRequired,
+      y: React.PropTypes.array.isRequired,
       label: React.PropTypes.string
     })),
     interval: React.PropTypes.string,
@@ -144,8 +144,12 @@ const BarChart = React.createClass({
   maxPointValue() {
     let maxval = 10;
     this.props.points.forEach((point) => {
-      if (point.y > maxval) {
-        maxval = point.y;
+      let totalY = 0;
+      point.y.forEach((y) => {
+        totalY += y;
+      });
+      if (totalY > maxval) {
+        maxval = totalY;
       }
     });
     return maxval;
@@ -174,9 +178,13 @@ const BarChart = React.createClass({
   renderTooltip(pointIdx) {
     let point = this.props.points[pointIdx];
     let timeLabel = this.getTimeLabel(point);
+    let totalY = 0;
+    for (let i = 0; i < point.y.length; i++) {
+      totalY += point.y[i];
+    }
     let title = (
       '<div style="width:130px">' +
-        point.y + ' ' + this.props.label + '<br/>' +
+        totalY + ' ' + this.props.label + '<br/>' +
         timeLabel +
       '</div>'
     );
@@ -188,15 +196,27 @@ const BarChart = React.createClass({
 
   renderChartColumn(pointIdx, maxval, pointWidth) {
     let point = this.props.points[pointIdx];
-    let pct = this.floatFormat(point.y / maxval * 99, 2) + '%';
-
+    let totalY = 0;
+    for (let i = 0; i < point.y.length; i++) {
+      totalY += point.y[i];
+    }
+    let totalPct = totalY / maxval;
+    let prevPct = 0;
+    let pts = point.y.map((y, i) => {
+        let pct = totalY && this.floatFormat((y / totalY) * totalPct * 99, 2);
+        let pt = (
+          <span key={i} style={{height: pct + '%', bottom: prevPct + '%'}}>{y}</span>
+        );
+        prevPct += pct;
+        return pt;
+     });
     return (
       <a key={point.x}
          className="chart-column tip"
          data-point-index={pointIdx}
          style={{width: pointWidth}}
        >
-        <span style={{height: pct}}>{point.y}</span>
+       {pts}
       </a>
     );
   },
diff --git a/src/sentry/static/sentry/app/components/group/chart.jsx b/src/sentry/static/sentry/app/components/group/chart.jsx
index bd9eaa3002..61aec883d4 100644
--- a/src/sentry/static/sentry/app/components/group/chart.jsx
+++ b/src/sentry/static/sentry/app/components/group/chart.jsx
@@ -21,7 +21,7 @@ const GroupChart = React.createClass({
     let stats = group.stats[this.props.statsPeriod];
     if (!stats || !stats.length) return null;
     let points = stats.map((point) => {
-      return {x: point[0], y: point[1]};
+      return {x: point[0], y: [point[1]]};
     });
     let className = 'bar-chart group-chart ' + (this.props.className || '');
 
diff --git a/src/sentry/static/sentry/app/components/stream/groupChart.jsx b/src/sentry/static/sentry/app/components/stream/groupChart.jsx
index 427dfc3c19..217dbe7dab 100644
--- a/src/sentry/static/sentry/app/components/stream/groupChart.jsx
+++ b/src/sentry/static/sentry/app/components/stream/groupChart.jsx
@@ -60,7 +60,7 @@ const GroupChart = React.createClass({
       return null;
 
     let chartData = this.state.stats.map((point) => {
-      return {x: point[0], y: point[1]};
+      return {x: point[0], y: [point[1]]};
     });
 
     return (
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
index f7d4aaacb2..97959a575c 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
@@ -9,8 +9,10 @@ import {loadStats} from '../actionCreators/projects';
 import GroupStore from '../stores/groupStore';
 import TeamStore from '../stores/teamStore';
 
+import BarChart from '../components/barChart';
 import ActivityFeed from '../components/activity/feed';
 import IssueList from '../components/issueList';
+import LoadingError from '../components/loadingError';
 import OrganizationHomeContainer from '../components/organizations/homeContainer';
 import OrganizationState from '../mixins/organizationState';
 
@@ -207,22 +209,93 @@ const Activity = React.createClass({
   },
 });
 
-const EPM = React.createClass({
+const EPH = React.createClass({
 
-  mixins: [OrganizationState],
+  mixins: [ApiMixin, OrganizationState],
+
+  getInitialState() {
+    let until = Math.floor(new Date().getTime() / 1000);
+    let since = until - 3600 * 24;
+
+    return {
+      rawOrgData: {received: null, rejected: null, blacklisted: null},
+      formattedData: null,
+      querySince: since,
+      queryUntil: until,
+      error: false
+    };
+  },
+
+  componentDidMount() {
+    this.fetchData();
+  },
+
+  STAT_OPTS: ['received', 'rejected', 'blacklisted'],
+
+  fetchData() {
+    let statEndpoint = this.getEndpoint();
+
+    let query = {
+      since: this.state.querySince,
+      until: this.state.queryUntil,
+      resolution: '1h',
+    };
+
+    $.when.apply($, this.STAT_OPTS.map(stat => {
+        let deferred = $.Deferred();
+        this.api.request(statEndpoint, {
+          query: Object.assign({stat: stat}, query),
+          success: deferred.resolve.bind(deferred),
+          error: deferred.reject.bind(deferred)
+        });
+        return deferred;
+      }
+    )).done(function() {
+      let rawOrgData = {};
+      for (let i = 0; i < this.STAT_OPTS.length; i++) {
+        rawOrgData[this.STAT_OPTS[i]] = arguments[i][0];
+      }
+      this.setState({
+        rawOrgData: rawOrgData,
+        formattedData: this.formatData(rawOrgData)
+      });
+    }.bind(this)).fail(function() {
+      this.setState({error: true});
+    }.bind(this));
+  },
 
   getEndpoint() {
-    return `/organizations/${this.props.params.orgId}/activity/`;
+    return `/organizations/${this.props.params.orgId}/stats/`;
+  },
+
+  formatData(rawData) {
+    // TODO: make sure stats data is zero filled otherwise this will be wrong
+    let chartData = [];
+    for (let i = 0; i < rawData.received.length; i++) {
+      let point = {x: rawData.received[i][0], y: []};
+      for (let statType in rawData) {
+        point.y.push(rawData[statType][i][1]);
+      }
+      chartData.push(point);
+    }
+    return chartData;
   },
 
   render() {
+    if (this.state.error) {
+      return <LoadingError />;
+    }
+
+    if (!this.state.formattedData) {
+      return null;
+    }
     let org = this.getOrganization();
 
     return (
       <div>
-        <Link className="btn-sidebar-header" to={`/organizations/${org.slug}/stats/`}>View Stats</Link>
-        <h6 className="nav-header">Events Per Minute</h6>
-
+        <Link className="btn-sidebar-header" to={`/organizations/${org.slug}/stats/`}>{t('View Stats')}</Link>
+        <h6 className="nav-header">{t('Events Per Hour')}</h6>
+          <BarChart points={this.state.formattedData} className="sparkline" />
       </div>
     );
   },
@@ -279,7 +352,7 @@ const OrganizationDashboard = React.createClass({
             <Activity {...this.props} />
           </div>
           <div className="col-md-4">
-            <EPM />
+            <EPH {...this.props}/>
             <hr />
             <ProjectList {...this.props} teams={this.state.teams} />
           </div>
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
index a004260b30..37937e4de6 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
@@ -118,7 +118,7 @@ const ExpandedTeamList = React.createClass({
   renderProject(project) {
     let org = this.props.organization;
     let chartData = project.stats && project.stats.map(point => {
-      return {x: point[0], y: point[1]};
+      return {x: point[0], y: [point[1]]};
     });
 
     return (
diff --git a/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx b/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
index 9515505e87..99cef25de9 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
@@ -82,7 +82,7 @@ const ProjectChart = React.createClass({
 
   renderChart() {
     let points = this.state.stats.map((point) => {
-      return {x: point[0], y: point[1]};
+      return {x: point[0], y: [point[1]]};
     });
     let startX = (new Date().getTime() / 1000) - 3600 * 24 * 7;
     let markers = this.state.releaseList.filter((release) => {
diff --git a/tests/js/spec/components/barChart.spec.jsx b/tests/js/spec/components/barChart.spec.jsx
index aff628b342..9941f2b90a 100644
--- a/tests/js/spec/components/barChart.spec.jsx
+++ b/tests/js/spec/components/barChart.spec.jsx
@@ -15,9 +15,9 @@ describe('BarChart', function() {
 
     it('renders with points data', function () {
       let points = [
-        {x: 1439766000, y: 10},
-        {x: 1439769600, y: 20},
-        {x: 1439773200, y: 30},
+        {x: 1439766000, y: [10]},
+        {x: 1439769600, y: [20]},
+        {x: 1439773200, y: [30]},
       ];
 
       let comp = TestUtils.renderIntoDocument(<BarChart points={points}/>);
@@ -31,9 +31,9 @@ describe('BarChart', function() {
 
     it('renders with points and markers', function () {
       let points = [
-        {x: 1439769600, y: 10},
-        {x: 1439773200, y: 20},
-        {x: 1439776800, y: 30}
+        {x: 1439769600, y: [10]},
+        {x: 1439773200, y: [20]},
+        {x: 1439776800, y: [30]}
       ];
       let markers = [
         {x: 1439769600, className: 'first-seen', label: 'first seen'}, // matches first point
@@ -55,7 +55,7 @@ describe('BarChart', function() {
 
     it('renders with points and markers, when first and last seen are same data point', function () {
       let points = [
-        {x: 1439776800, y: 30}
+        {x: 1439776800, y: [30]}
       ];
       let markers = [
         {x: 1439776800, className: 'first-seen', label: 'first seen'},
