commit f080c8206e026fb7295fbbd293713ece57c920ab
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 5 13:59:38 2015 -0800

    Slightly less shitty breadcrumb implementation

diff --git a/src/sentry/static/sentry/app/components/breadcrumbs.jsx b/src/sentry/static/sentry/app/components/breadcrumbs.jsx
index d7246b7ef2..25cac09866 100644
--- a/src/sentry/static/sentry/app/components/breadcrumbs.jsx
+++ b/src/sentry/static/sentry/app/components/breadcrumbs.jsx
@@ -7,7 +7,7 @@ var BreadcrumbStore = require('../stores/breadcrumbStore');
 
 var Breadcrumbs = React.createClass({
   mixins: [
-    Reflux.listenTo(BreadcrumbStore, "onBreadcrumbChange", "onBreadcrumbChange"),
+    Reflux.listenTo(BreadcrumbStore, "onBreadcrumbChange", "onBreadcrumbChange")
   ],
 
   getInitialState() {
diff --git a/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx b/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
index 63f1e92884..267042fef5 100644
--- a/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
+++ b/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
@@ -2,7 +2,43 @@
 
 var BreadcrumbStore = require("../stores/breadcrumbStore");
 
+var React = require("react");
+
 module.exports = {
+  // Require both Router.State and Router.Navigation contexts
+  // We do this to avoid potentially duplicating mixins
+  contextTypes: {
+    // Router.State
+    getCurrentPath: React.PropTypes.func.isRequired,
+    getCurrentRoutes: React.PropTypes.func.isRequired,
+    getCurrentPathname: React.PropTypes.func.isRequired,
+    getCurrentParams: React.PropTypes.func.isRequired,
+    getCurrentQuery: React.PropTypes.func.isRequired,
+    isActive: React.PropTypes.func.isRequired,
+
+    // Router.Navigation
+    makePath: React.PropTypes.func.isRequired,
+    makeHref: React.PropTypes.func.isRequired,
+    transitionTo: React.PropTypes.func.isRequired,
+    replaceWith: React.PropTypes.func.isRequired,
+    goBack: React.PropTypes.func.isRequired
+  },
+
+  goToRoute(node) {
+    return this.context.transitionTo(node.to, node.params, node.query);
+  },
+
+  breadcrumbFromNode(node) {
+    if (typeof node.params === 'undefined') {
+      node.params = this.context.getCurrentParams();
+    }
+
+    return (
+      <a onClick={this.goToRoute.bind(this, node)}>
+        {node.name}
+      </a>
+    );
+  },
 
   componentWillMount() {
     this.crumbs = this.getInitialBreadcrumbs();
@@ -10,7 +46,7 @@ module.exports = {
 
   componentDidMount() {
     this.crumbs.forEach((node) => {
-      BreadcrumbStore.push(node);
+      BreadcrumbStore.push(this.breadcrumbFromNode(node));
     });
   },
 
@@ -24,7 +60,7 @@ module.exports = {
     this.componentWillUnmount();
     this.crumbs = nodes;
     this.crumbs.forEach((node) => {
-      BreadcrumbStore.push(node);
+      BreadcrumbStore.push(this.breadcrumbFromNode(node));
     });
   },
 
diff --git a/src/sentry/static/sentry/app/views/aggregate.jsx b/src/sentry/static/sentry/app/views/aggregate.jsx
index c9555e7858..1a44fe304b 100644
--- a/src/sentry/static/sentry/app/views/aggregate.jsx
+++ b/src/sentry/static/sentry/app/views/aggregate.jsx
@@ -14,7 +14,6 @@ var AggregateDetails = React.createClass({
   mixins: [
     BreadcrumbMixin,
     Reflux.listenTo(AggregateListStore, "onAggListChange"),
-    Router.Navigation,
     Router.State
   ],
 
@@ -43,9 +42,7 @@ var AggregateDetails = React.createClass({
         AggregateListStore.loadInitialData([data]);
 
         this.setBreadcrumbs([
-          <a onClick={this.transitionTo.bind(this, "aggregateDetails", this.getParams(), {})}>
-            {data.title}
-          </a>
+          {name: data.title, to: 'aggregateDetails'}
         ]);
       }.bind(this)
     });
diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
index 3e3b4a320f..73c84e1994 100644
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectDetails.jsx
@@ -12,7 +12,6 @@ var ProjectDetails = React.createClass({
   mixins: [
     BreadcrumbMixin,
     Reflux.connect(MemberListStore, "memberList"),
-    Router.Navigation,
     Router.State
   ],
 
@@ -37,9 +36,7 @@ var ProjectDetails = React.createClass({
         });
 
         this.setBreadcrumbs([
-          <a onClick={this.transitionTo.bind(this, "projectDetails", this.getParams(), {})}>
-            {data.name}
-          </a>
+          {name: data.name, to: 'projectDetails'}
         ]);
       }
     });
