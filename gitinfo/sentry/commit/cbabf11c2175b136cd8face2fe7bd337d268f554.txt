commit cbabf11c2175b136cd8face2fe7bd337d268f554
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Nov 25 13:47:10 2012 -0800

    More work on registration flows

diff --git a/src/sentry/templates/sentry/login.html b/src/sentry/templates/sentry/login.html
index 8b18b82f21..8e3a197f50 100644
--- a/src/sentry/templates/sentry/login.html
+++ b/src/sentry/templates/sentry/login.html
@@ -30,7 +30,6 @@
                         <legend>{% trans "Login with your Sentry account" %}</legend>
                     </fieldset>
                     {% csrf_token %}
-                    <input type="hidden" name="next" value="{{ next }}" />
 
                     {% for field in form %}
                         {% include "sentry/partial/_form_field.html" %}
diff --git a/src/sentry/templates/sentry/register.html b/src/sentry/templates/sentry/register.html
index 60bdf3fb32..5cbab651d7 100644
--- a/src/sentry/templates/sentry/register.html
+++ b/src/sentry/templates/sentry/register.html
@@ -2,17 +2,13 @@
 
 {% load i18n %}
 
-{% block title %}{% trans "Login" %} | {{ block.super }}{% endblock %}
+{% block title %}{% trans "Register" %} | {{ block.super }}{% endblock %}
 
 {% block page_header_block %}{% endblock %}
 {% block bodyclass %}{% endblock %}
 
 {% block main %}
     <section class="body">
-       {% if next %}
-            <p class="alert alert-info">{% trans "Please login to continue." %}</p>
-        {% endif %}
-
         {% if form.non_field_errors %}
             <div class="alert alert-block alert-error">
                 <ul>
@@ -27,24 +23,23 @@
             <div class="span6">
                 <form class="form-stacked" action="" method="post">
                     <fieldset>
-                        <legend>Login with your Sentry account</legend>
+                        <legend>{% trans "Create a new account" %}</legend>
                     </fieldset>
                     {% csrf_token %}
-                    <input type="hidden" name="next" value="{{ next }}" />
 
                     {% for field in form %}
                         {% include "sentry/partial/_form_field.html" %}
                     {% endfor %}
 
                     <fieldset class="form-actions">
-                        <button type="submit" class="btn btn-primary">{% trans "Login" %}</button>
+                        <button type="submit" class="btn btn-primary">{% trans "Register" %}</button>
                     </fieldset>
                 </form>
             </div>
             {% if AUTH_PROVIDERS and SOCIAL_AUTH_CREATE_USERS %}
                 <div class="span6">
                     <fieldset>
-                        <legend>Register using another service</legend>
+                        <legend>{% trans "Register using another service" %}</legend>
                     </fieldset>
                     {% url sentry-account-settings-identities as identities_link %}
                     <p>{% blocktrans with identities_link as link %}If you already have an account, you can associate a social identity in the
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index 256accbf1d..bdea4f9f54 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -174,10 +174,13 @@ def accept_invite(request, member_id, token):
 
     if not request.user.is_authenticated():
         # Show login or register form
+        request.session['_next'] = request.get_full_path()
+        request.session['can_register'] = True
+
         context = {
             'team': team,
         }
-        return render_to_response('sentry/teams/members/accept_invite.html', context, request)
+        return render_to_response('sentry/teams/members/accept_invite_unauthenticated.html', context, request)
 
     if team.member_set.filter(
             user=request.user,
diff --git a/tests/sentry/web/frontend/accounts/tests.py b/tests/sentry/web/frontend/accounts/tests.py
index cad7330608..73d7724c5f 100644
--- a/tests/sentry/web/frontend/accounts/tests.py
+++ b/tests/sentry/web/frontend/accounts/tests.py
@@ -21,6 +21,11 @@ class LoginTest(TestCase):
     def path(self):
         return reverse('sentry-login')
 
+    def test_renders_correct_template(self):
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 200)
+        self.assertTemplateUsed('sentry/login.html')
+
     def test_invalid_password(self):
         # load it once for test cookie
         self.client.get(self.path)
@@ -31,9 +36,9 @@ class LoginTest(TestCase):
         })
         self.assertEquals(resp.status_code, 200)
         self.assertEquals(resp.context['form'].errors['__all__'],
-            u'Please enter a correct username and password. Note that both fields are case-sensitive.')
+            [u'Please enter a correct username and password. Note that both fields are case-sensitive.'])
 
-    def test_auth(self):
+    def test_valid_credentials(self):
         # load it once for test cookie
         self.client.get(self.path)
 
@@ -49,6 +54,11 @@ class RegisterTest(TestCase):
     def path(self):
         return reverse('sentry-register')
 
+    def test_renders_correct_template(self):
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 200)
+        self.assertTemplateUsed('sentry/register.html')
+
     def test_with_required_params(self):
         resp = self.client.post(self.path, {
             'username': 'test',
