commit e874243d31dfa359cbaf67d50b6283903728f1de
Author: Ben Vinegar <ben@benv.ca>
Date:   Mon Dec 7 12:40:53 2015 -0800

    Can now bookmark issues in bulk

diff --git a/src/sentry/static/sentry/app/views/stream/actionLink.jsx b/src/sentry/static/sentry/app/views/stream/actionLink.jsx
index 234e41de87..ab3ea3be49 100644
--- a/src/sentry/static/sentry/app/views/stream/actionLink.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actionLink.jsx
@@ -12,7 +12,6 @@ const ActionLink = React.createClass({
     buttonTitle: React.PropTypes.string,
     confirmLabel: React.PropTypes.any,
     disabled: React.PropTypes.bool,
-    neverConfirm: React.PropTypes.bool,
     onAction: React.PropTypes.func.isRequired,
     onlyIfBulk: React.PropTypes.bool,
     selectAllActive: React.PropTypes.bool.isRequired // "select all" checkbox
@@ -30,7 +29,6 @@ const ActionLink = React.createClass({
     return {
       buttonTitle: null, // title="..." (optional)
       onlyIfBulk: false,
-      neverConfirm: false,
       disabled: false
     };
   },
@@ -70,12 +68,8 @@ const ActionLink = React.createClass({
     // By default, should confirm ...
     let shouldConfirm = true;
 
-    // Unless `neverConfirm` is true, then return false
-    if (this.props.neverConfirm === true) {
-      shouldConfirm = false;
-
     // Unless `onlyIfBulk` is true, then return false if all items are not selected
-    } else if (this.props.onlyIfBulk === true && (!this.props.selectAllActive || numSelectedItems === 1)) {
+    if (this.props.onlyIfBulk === true && (!this.props.selectAllActive || numSelectedItems === 1)) {
       shouldConfirm = false;
     }
 
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index 035ef2bfd6..5bbeebdc65 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -157,7 +157,7 @@ const StreamActions = React.createClass({
                   this.state.allInQuerySelected
                     ? t('Are you sure you want to resolve all issues matching this search query?')
                     : (count) =>
-                        tn('Are you sure you want to resolve these %d issue?',
+                        tn('Are you sure you want to resolve this %d issue?',
                            'Are you sure you want to resolve these %d issues?',
                            count)
                  }
@@ -176,15 +176,24 @@ const StreamActions = React.createClass({
               </ActionLink>
               <ActionLink
                  className="btn btn-default btn-sm action-bookmark"
-                 disabled={!this.state.anySelected || this.state.allInQuerySelected}
+                 disabled={!this.state.anySelected}
                  onAction={this.onUpdate.bind(this, {isBookmarked: true})}
-                 neverConfirm={true}
                  buttonTitle={t('Bookmark')}
+                 confirmationQuestion={
+                  this.state.allInQuerySelected
+                    ? t('Are you sure you want to bookmark all issues matching this search query?')
+                    : (count) =>
+                        tn('Are you sure you want to bookmark this %d issue?',
+                           'Are you sure you want to bookmark these %d issues?',
+                           count)
+                 }
                  confirmLabel={
-                    (count) =>
-                      tn('Bookmark %d selected issue',
-                         'Bookmark %d selected issues',
-                          count)
+                  this.state.allInQuerySelected
+                    ? t('Bookmark all issues')
+                    : (count) =>
+                        tn('Bookmark %d selected issue',
+                           'Bookmark %d selected issues',
+                            count)
                  }
                  tooltip={t('Add to Bookmarks')}
                  onlyIfBulk={true}
@@ -255,7 +264,7 @@ const StreamActions = React.createClass({
                       this.state.allInQuerySelected
                         ? t('Are you sure you want to unresolve all issues matching this search query?')
                         : (count) =>
-                          tn('Are you sure you want to unresolve these %d issue?',
+                          tn('Are you sure you want to unresolve this %d issue?',
                              'Are you sure you want to unresolve these %d issues?',
                              count)
                     }
@@ -282,7 +291,7 @@ const StreamActions = React.createClass({
                       this.state.allInQuerySelected
                         ? t('Are you sure you want to mute all issues matching this search query?')
                         : (count) =>
-                             tn('Are you sure you want to mute these %d issue?',
+                             tn('Are you sure you want to mute this %d issue?',
                                 'Are you sure you want to mute these %d issues?',
                                 count)
                     }
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index 43c439e006..6dd883e6b5 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -161,7 +161,7 @@
 }
 
 .stream-select-all-notice {
-  background: @headerBgColor;
+  background: @header-bg-color;
   border: 1px solid #E7D796;
   margin: 0 0 -1px;
   position: relative;
diff --git a/tests/js/spec/views/stream/actionLink.spec.jsx b/tests/js/spec/views/stream/actionLink.spec.jsx
index 68dc143f19..6911f07c13 100644
--- a/tests/js/spec/views/stream/actionLink.spec.jsx
+++ b/tests/js/spec/views/stream/actionLink.spec.jsx
@@ -30,17 +30,6 @@ describe('ActionLink', function() {
       expect(actionLink.shouldConfirm(25)).to.be.true;
     });
 
-    it('should return false when props.neverConfirm is true', function () {
-      let actionLink = TestUtils.renderIntoDocument(
-        <ActionLink neverConfirm={true} onAction={function(){}} selectAllActive={false}/>
-      );
-
-      expect(actionLink.shouldConfirm(0)).to.be.false;
-      expect(actionLink.shouldConfirm(1)).to.be.false;
-      expect(actionLink.shouldConfirm(25)).to.be.false;
-    });
-
-
     it('should return (mostly) true when props.onlyIfBulk is true and all are selected', function () {
       let actionLink = TestUtils.renderIntoDocument(
         <ActionLink onlyIfBulk={true} selectAllActive={true} onAction={function(){}}/>
