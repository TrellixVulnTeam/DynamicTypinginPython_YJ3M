commit 1d01f73ac45162fbc936a354f195581c4973c2e4
Author: Mark Story <mark@sentry.io>
Date:   Tue Jul 2 10:40:51 2019 -0400

    fix(bitbucket) Fix errors when username is missing in bitbucket data (#13779)
    
    My previous attempt to fix this problem was incorrect. The replacement
    for `username` is `uuid` when privacy modes are enabled. This change
    will allow users who have hidden their username to complete the
    bitbucket setup process.
    
    Fixes SENTRY-AXP

diff --git a/src/sentry/integrations/bitbucket/integration.py b/src/sentry/integrations/bitbucket/integration.py
index bd25df3d8b..a276d57fb2 100644
--- a/src/sentry/integrations/bitbucket/integration.py
+++ b/src/sentry/integrations/bitbucket/integration.py
@@ -173,7 +173,7 @@ class BitbucketIntegrationProvider(IntegrationProvider):
             return {
                 'provider': self.key,
                 'external_id': state['clientKey'],
-                'name': principal_data['username'],
+                'name': principal_data.get('username', principal_data['uuid']),
                 'metadata': {
                     'public_key': state['publicKey'],
                     'shared_secret': state['sharedSecret'],
diff --git a/tests/sentry/integrations/bitbucket/test_installed.py b/tests/sentry/integrations/bitbucket/test_installed.py
index a2a786bca7..5c04c9137c 100644
--- a/tests/sentry/integrations/bitbucket/test_installed.py
+++ b/tests/sentry/integrations/bitbucket/test_installed.py
@@ -94,6 +94,22 @@ class BitbucketInstalledEndpointTest(APITestCase):
         assert integration.name == self.username
         assert integration.metadata == self.metadata
 
+    def test_installed_without_username(self):
+        # Remove username to simulate privacy mode.
+        del self.data_from_bitbucket['principal']['username']
+
+        response = self.client.post(
+            self.path,
+            data=self.data_from_bitbucket
+        )
+        assert response.status_code == 200
+        integration = Integration.objects.get(
+            provider=self.provider,
+            external_id=self.client_key
+        )
+        assert integration.name == self.user_data['uuid']
+        assert integration.metadata == self.metadata
+
     @responses.activate
     def test_plugin_migration(self):
         accessible_repo = Repository.objects.create(
