commit 91bbe216e9be4575fc321230bd73b73ec5186acc
Author: Jan Michael Auer <account@jauer.org>
Date:   Tue Apr 3 10:30:19 2018 +0200

    ref(minidump): Remove the minidump feature flag (#7803)
    
    * ref(minidump): Remove the minidump feature flag
    
    * ref(minidump): Restore the feature and default to true

diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index abc1637f68..01f57edc65 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -150,7 +150,7 @@ class ProjectSerializer(Serializer):
         feature_list = []
         for feature in (
             'global-events', 'data-forwarding', 'rate-limits', 'discard-groups', 'similarity-view',
-            'custom-inbound-filters', 'minidump',
+            'custom-inbound-filters',
         ):
             if features.has('projects:' + feature, obj, actor=user):
                 feature_list.append(feature)
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 05c1a4b975..9cdef68335 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -765,7 +765,7 @@ SENTRY_FEATURES = {
     'projects:rate-limits': True,
     'projects:discard-groups': False,
     'projects:custom-inbound-filters': False,
-    'projects:minidump': False,
+    'projects:minidump': True,
 }
 
 # Default time zone for localization in the UI.
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectKeys/index.jsx b/src/sentry/static/sentry/app/views/settings/project/projectKeys/index.jsx
index 38fcc21c99..cd381cf605 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectKeys/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectKeys/index.jsx
@@ -37,7 +37,6 @@ const KeyRow = createReactClass({
     projectId: PropTypes.string.isRequired,
     data: PropTypes.object.isRequired,
     access: PropTypes.object.isRequired,
-    features: PropTypes.object.isRequired,
     onToggle: PropTypes.func.isRequired,
     onRemove: PropTypes.func.isRequired,
   },
@@ -114,7 +113,7 @@ const KeyRow = createReactClass({
   },
 
   render() {
-    let {access, features, data} = this.props;
+    let {access, data} = this.props;
     let editUrl = recreateRoute(`${data.id}/`, this.props);
     let controls = [
       <Button key="edit" to={editUrl} size="small">
@@ -175,11 +174,7 @@ const KeyRow = createReactClass({
           btnText={t('Expand')}
         >
           <PanelBody>
-            <ProjectKeyCredentials
-              projectId={`${data.projectId}`}
-              data={data}
-              features={features}
-            />
+            <ProjectKeyCredentials projectId={`${data.projectId}`} data={data} />
           </PanelBody>
         </ClippedBox>
       </ClientKeyItemPanel>
@@ -262,7 +257,6 @@ export default class ProjectKeys extends AsyncView {
     let {routes, params} = this.props;
     let {orgId, projectId} = params;
     let access = getOrganizationState(this.context.organization).getAccess();
-    let features = new Set(this.context.project.features);
 
     return (
       <div>
@@ -270,7 +264,6 @@ export default class ProjectKeys extends AsyncView {
           {this.state.keyList.map(key => {
             return (
               <KeyRow
-                features={features}
                 api={this.api}
                 routes={routes}
                 params={params}
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyCredentials.jsx b/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyCredentials.jsx
index 3bfc57a8ce..f4695b46b9 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyCredentials.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyCredentials.jsx
@@ -12,7 +12,6 @@ class ProjectKeyCredentials extends React.Component {
   static propTypes = {
     projectId: PropTypes.string.isRequired,
     data: SentryTypes.ProjectKey,
-    features: PropTypes.object,
 
     showDsn: PropTypes.bool,
     showDsnPublic: PropTypes.bool,
@@ -35,7 +34,6 @@ class ProjectKeyCredentials extends React.Component {
 
   render() {
     let {
-      features,
       projectId,
       data,
       showDsn,
@@ -116,30 +114,29 @@ class ProjectKeyCredentials extends React.Component {
           </Field>
         )}
 
-        {showMinidump &&
-          features.has('minidump') && (
-            <Field
-              label={t('Minidump Endpoint')}
-              help={tct(
-                'Use this endpoint to upload minidump crash reports, for example with Electron, Crashpad or Breakpad.',
-                {
-                  /* TODO: add a link to minidump docs */
-                }
-              )}
-              inline={false}
-              flexibleControlStateSize
-            >
-              <TextCopyInput>
-                {getDynamicText({
-                  value: data.dsn.minidump,
-                  fixed: data.dsn.minidump.replace(
-                    new RegExp(`\/${projectId}$`),
-                    '/<<projectId>>'
-                  ),
-                })}
-              </TextCopyInput>
-            </Field>
-          )}
+        {showMinidump && (
+          <Field
+            label={t('Minidump Endpoint')}
+            help={tct(
+              'Use this endpoint to upload minidump crash reports, for example with Electron, Crashpad or Breakpad.',
+              {
+                /* TODO: add a link to minidump docs */
+              }
+            )}
+            inline={false}
+            flexibleControlStateSize
+          >
+            <TextCopyInput>
+              {getDynamicText({
+                value: data.dsn.minidump,
+                fixed: data.dsn.minidump.replace(
+                  new RegExp(`\/${projectId}$`),
+                  '/<<projectId>>'
+                ),
+              })}
+            </TextCopyInput>
+          </Field>
+        )}
 
         {showPublicKey && (
           <Field label={t('Public Key')} inline={true} flexibleControlStateSize>
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx b/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx
index bda54b5101..b9015d3bde 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx
@@ -288,7 +288,6 @@ const KeySettings = createReactClass({
     organization: PropTypes.object.isRequired,
     project: PropTypes.object.isRequired,
     access: PropTypes.object.isRequired,
-    features: PropTypes.object.isRequired,
     data: SentryTypes.ProjectKey.isRequired,
     onRemove: PropTypes.func.isRequired,
     rateLimitsEnabled: PropTypes.bool,
@@ -327,7 +326,7 @@ const KeySettings = createReactClass({
 
   render() {
     let {keyId, orgId, projectId} = this.props.params;
-    let {access, features, data, rateLimitsEnabled, organization, project} = this.props;
+    let {access, data, rateLimitsEnabled, organization, project} = this.props;
     let apiEndpoint = `/projects/${orgId}/${projectId}/keys/${keyId}/`;
 
     return (
@@ -383,7 +382,6 @@ const KeySettings = createReactClass({
             <ProjectKeyCredentials
               projectId={`${data.projectId}`}
               data={data}
-              features={features}
               showPublicKey
               showSecretKey
               showProjectId
@@ -460,7 +458,6 @@ export default class ProjectKeyDetails extends AsyncView {
           organization={organization}
           project={project}
           access={access}
-          features={features}
           params={params}
           rateLimitsEnabled={hasRateLimitsEnabled}
           data={data}
