commit 0f60cbdfb711ac858535b96ee3bdb93891ad80d1
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jul 20 19:41:02 2015 +0200

    Handle write failures to User.last_login

diff --git a/src/sentry/receivers/auth.py b/src/sentry/receivers/auth.py
new file mode 100644
index 0000000000..5c7103909c
--- /dev/null
+++ b/src/sentry/receivers/auth.py
@@ -0,0 +1,48 @@
+from __future__ import absolute_import
+
+import logging
+
+from django.contrib.auth.models import update_last_login
+from django.contrib.auth.signals import user_logged_in
+from django.db.utils import DatabaseError
+
+from sentry.models import UserOption
+
+
+# Set user language if set
+def set_language_on_logon(request, user, **kwargs):
+    language = UserOption.objects.get_value(
+        user=user,
+        project=None,
+        key='language',
+        default=None,
+    )
+    if language and hasattr(request, 'session'):
+        request.session['django_language'] = language
+
+
+def safe_update_last_login(sender, user, **kwargs):
+    """
+    Identical to Django's built-in handler except that we gracefully
+    handle database failures.
+
+    tl;dr logging in should not fail when a db is read-only
+    """
+    try:
+        update_last_login(sender, user, **kwargs)
+    except DatabaseError as exc:
+        logging.warn(unicode(exc), exc_info=True)
+
+
+user_logged_in.disconnect(update_last_login)
+user_logged_in.connect(
+    safe_update_last_login,
+    dispatch_uid="safe_update_last_login",
+    weak=False,
+)
+
+user_logged_in.connect(
+    set_language_on_logon,
+    dispatch_uid="set_language_on_logon",
+    weak=False
+)
diff --git a/src/sentry/receivers/core.py b/src/sentry/receivers/core.py
index 2d4536728a..0060e04320 100644
--- a/src/sentry/receivers/core.py
+++ b/src/sentry/receivers/core.py
@@ -3,7 +3,6 @@ from __future__ import absolute_import, print_function
 import logging
 
 from django.conf import settings
-from django.contrib.auth.signals import user_logged_in
 from django.db import connections
 from django.db.utils import OperationalError
 from django.db.models.signals import post_syncdb, post_save
@@ -13,7 +12,7 @@ from pkg_resources import parse_version as Version
 from sentry import options
 from sentry.models import (
     Organization, OrganizationMemberType, Project, User, Team, ProjectKey,
-    UserOption, TagKey, TagValue, GroupTagValue, GroupTagKey, Activity,
+    TagKey, TagValue, GroupTagValue, GroupTagKey, Activity,
     Alert
 )
 from sentry.signals import buffer_incr_complete, regression_signal
@@ -156,18 +155,6 @@ def create_org_member_for_owner(instance, created, **kwargs):
     )
 
 
-# Set user language if set
-def set_language_on_logon(request, user, **kwargs):
-    language = UserOption.objects.get_value(
-        user=user,
-        project=None,
-        key='language',
-        default=None,
-    )
-    if language and hasattr(request, 'session'):
-        request.session['django_language'] = language
-
-
 @buffer_incr_complete.connect(sender=TagValue, weak=False)
 def record_project_tag_count(filters, created, **kwargs):
     from sentry import app
@@ -251,11 +238,6 @@ post_save.connect(
     dispatch_uid="create_org_member_for_owner",
     weak=False,
 )
-user_logged_in.connect(
-    set_language_on_logon,
-    dispatch_uid="set_language_on_logon",
-    weak=False
-)
 post_save.connect(
     on_alert_creation,
     sender=Alert,
