commit a19192a4048da18a6be4d882fa872f8b6ff13992
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 3 10:15:18 2015 +0100

    Various fixes for project selector

diff --git a/src/sentry/static/sentry/app/components/breadcrumbs.jsx b/src/sentry/static/sentry/app/components/breadcrumbs.jsx
index 6667a6f0a1..7d97375752 100644
--- a/src/sentry/static/sentry/app/components/breadcrumbs.jsx
+++ b/src/sentry/static/sentry/app/components/breadcrumbs.jsx
@@ -10,6 +10,10 @@ var Breadcrumbs = React.createClass({
     Reflux.listenTo(BreadcrumbStore, "onBreadcrumbChange", "onBreadcrumbChange")
   ],
 
+  contextTypes: {
+    router: React.PropTypes.func.isRequired
+  },
+
   getInitialState() {
     return {
       nodes: BreadcrumbStore.getNodes()
diff --git a/src/sentry/static/sentry/app/components/dropdownLink.jsx b/src/sentry/static/sentry/app/components/dropdownLink.jsx
index 99a8b6c433..2da23440fd 100644
--- a/src/sentry/static/sentry/app/components/dropdownLink.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownLink.jsx
@@ -22,8 +22,12 @@ var DropdownLink = React.createClass({
   },
 
   componentDidMount() {
-    // These can be configured via options; this is just a demo
-    $(this.getDOMNode()).find('.dropdown-toggle').dropdown();
+    var $container = $(this.refs.container.getDOMNode());
+    var $menu = $(this.refs.menu.getDOMNode());
+    $container.on('shown.bs.dropdown', () => {
+      $menu.find('input[type=text]').focus();
+    });
+    $(this.refs.toggle.getDOMNode()).dropdown();
   },
 
   render() {
@@ -38,7 +42,8 @@ var DropdownLink = React.createClass({
     });
 
     return (
-      <span className={joinClasses(this.props.topLevelClasses, topLevelClasses)}>
+      <span className={joinClasses(this.props.topLevelClasses, topLevelClasses)}
+            ref="container">
         <a className={joinClasses(this.props.className, className)} ref="toggle"
            data-toggle="dropdown">
           {this.props.title}
diff --git a/src/sentry/static/sentry/app/components/menuItem.jsx b/src/sentry/static/sentry/app/components/menuItem.jsx
index f296e68ba7..6ce50ffe2d 100644
--- a/src/sentry/static/sentry/app/components/menuItem.jsx
+++ b/src/sentry/static/sentry/app/components/menuItem.jsx
@@ -23,6 +23,10 @@ var MenuItem = React.createClass({
     query:     React.PropTypes.object,
   },
 
+  contextTypes: {
+    router: React.PropTypes.func
+  },
+
   handleClick(e) {
     if (this.props.onSelect) {
       e.preventDefault();
@@ -51,7 +55,7 @@ var MenuItem = React.createClass({
     );
   },
 
-  render: function () {
+  render() {
     var classes = {
       "dropdown-header": this.props.header,
       "divider": this.props.divider,
diff --git a/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx b/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
index 0b428f7474..83ef5d5a6c 100644
--- a/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
+++ b/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
@@ -32,6 +32,7 @@ module.exports = {
   },
 
   breadcrumbFromNode(node) {
+    if (node.name === undefined) return node;
     if (typeof node.params === 'undefined') {
       node.params = this.context.router.getCurrentParams();
     }
diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
index d4e9f9a8b7..82247c5548 100644
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectDetails.jsx
@@ -6,6 +6,7 @@ var Router = require("react-router");
 
 var api = require("../api");
 var BreadcrumbMixin = require("../mixins/breadcrumbMixin");
+var ConfigStore = require("../stores/configStore");
 var DropdownLink = require("../components/dropdownLink");
 var MemberListStore = require("../stores/memberListStore");
 var MenuItem = require("../components/menuItem");
@@ -16,6 +17,16 @@ var RouteMixin = require("../mixins/routeMixin");
 var PropTypes = require("../proptypes");
 
 var ProjectSelector = React.createClass({
+  childContextTypes: {
+    router: React.PropTypes.func
+  },
+
+  getChildContext() {
+    return {
+      router: this.props.router
+    };
+  },
+
   render() {
     var projectId = this.props.projectId;
     var org = this.props.organization;
@@ -29,22 +40,34 @@ var ProjectSelector = React.createClass({
         projectList.push([team, project]);
       });
     });
-
+    var urlPrefix = ConfigStore.get('urlPrefix');
     var title = <span>{activeTeam.name} / {activeProject.name}</span>;
 
     return (
       <DropdownLink title={title} className="project-dropdown">
-        <li className="project-filter">
+        <li className="project-filter" key="filter">
           <input type="text" placeholder="Filter projects" />
         </li>
         <li className="team-name">Captain Planet</li>
         {projectList.map((item) => {
+          var team = item[0];
+          var project = item[1];
+          var projectRouteParams = {
+            orgId: org.slug,
+            projectId: project.slug
+          };
           return (
-            <MenuItem key={item[1].slug}>{item[0].name} / {item[1].name}</MenuItem>
+            <MenuItem key={project.slug} to="projectDetails"
+                      params={projectRouteParams}>
+              {team.name} / {project.name}
+            </MenuItem>
           );
         })}
-        <li className="new-project">
-          <a className="btn btn-primary"><span className="icon-plus"></span> Create Project</a>
+        <li className="new-project" key="new-project">
+          <a className="btn btn-primary"
+             href={urlPrefix + '/organizations/' + org.slug + '/projects/new/'}>
+            <span className="icon-plus" /> Create Project
+          </a>
         </li>
       </DropdownLink>
     );
@@ -132,9 +155,7 @@ var ProjectDetails = React.createClass({
       });
 
       this.setBreadcrumbs([
-        {
-          name: <ProjectSelector organization={org} projectId={projectSlug} />
-        }
+        <ProjectSelector organization={org} projectId={projectSlug} router={this.context.router} />
       ]);
     }
   },
