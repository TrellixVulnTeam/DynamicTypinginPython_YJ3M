commit 594aac20847d0b66e4e54836d26b6466d2f312e7
Author: Matte Noble <me@mattenoble.com>
Date:   Fri Mar 1 09:44:02 2019 -0800

    feat(app-platform): Org Sentry App Components (#12244)
    
    Endpoint to return a list of SentryAppComponents, gathered from the
    Sentry Apps installed to the Org in question.
    
    This is a shortcut for: "give me all the installations for this Org",
    "now give me each of those install's Sentry App", "now give me each of
    those Sentry App's Components".

diff --git a/src/sentry/api/endpoints/sentry_app_components.py b/src/sentry/api/endpoints/sentry_app_components.py
index 83c6d18f2a..9647f142a3 100644
--- a/src/sentry/api/endpoints/sentry_app_components.py
+++ b/src/sentry/api/endpoints/sentry_app_components.py
@@ -1,9 +1,10 @@
 from __future__ import absolute_import
 
-from sentry.api.bases import SentryAppBaseEndpoint
+from sentry.api.bases import OrganizationEndpoint, SentryAppBaseEndpoint
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.features.helpers import requires_feature
+from sentry.models import SentryAppComponent, SentryApp
 
 
 class SentryAppComponentsEndpoint(SentryAppBaseEndpoint):
@@ -15,3 +16,18 @@ class SentryAppComponentsEndpoint(SentryAppBaseEndpoint):
             paginator_cls=OffsetPaginator,
             on_results=lambda x: serialize(x, request.user),
         )
+
+
+class OrganizationSentryAppComponentsEndpoint(OrganizationEndpoint):
+    @requires_feature('organizations:sentry-apps')
+    def get(self, request, organization):
+        return self.paginate(
+            request=request,
+            queryset=SentryAppComponent.objects.filter(
+                sentry_app_id__in=SentryApp.objects.filter(
+                    installations__in=organization.sentry_app_installations.all(),
+                )
+            ),
+            paginator_cls=OffsetPaginator,
+            on_results=lambda x: serialize(x, request.user),
+        )
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 3c8e0beced..e3cdfe5532 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -174,7 +174,8 @@ from .endpoints.release_deploys import ReleaseDeploysEndpoint
 from .endpoints.debug_files import DebugFilesEndpoint, DifAssembleEndpoint, \
     UnknownDebugFilesEndpoint, AssociateDSymFilesEndpoint
 from .endpoints.sentry_apps import SentryAppsEndpoint
-from .endpoints.sentry_app_components import SentryAppComponentsEndpoint
+from .endpoints.sentry_app_components import SentryAppComponentsEndpoint, \
+    OrganizationSentryAppComponentsEndpoint
 from .endpoints.sentry_app_details import SentryAppDetailsEndpoint
 from .endpoints.sentry_app_authorizations import SentryAppAuthorizationsEndpoint
 from .endpoints.shared_group_details import SharedGroupDetailsEndpoint
@@ -1222,10 +1223,15 @@ urlpatterns = patterns(
         name='sentry-api-0-sentry-app-details'
     ),
     url(
-        r'^/sentry-apps/(?P<sentry_app_slug>[^\/]+)/components/$',
+        r'^sentry-apps/(?P<sentry_app_slug>[^\/]+)/components/$',
         SentryAppComponentsEndpoint.as_view(),
         name='sentry-api-0-sentry-app-components'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/sentry-app-components/$',
+        OrganizationSentryAppComponentsEndpoint.as_view(),
+        name='sentry-api-0-org-sentry-app-components'
+    ),
     url(
         r'^sentry-app-installations/(?P<uuid>[^\/]+)/authorizations/$',
         SentryAppAuthorizationsEndpoint.as_view(),
diff --git a/tests/sentry/api/endpoints/test_sentry_app_components.py b/tests/sentry/api/endpoints/test_sentry_app_components.py
index 60d1dd50b2..d4e38649d7 100644
--- a/tests/sentry/api/endpoints/test_sentry_app_components.py
+++ b/tests/sentry/api/endpoints/test_sentry_app_components.py
@@ -44,3 +44,69 @@ class SentryAppComponentsTest(APITestCase):
             'schema': self.component.schema,
             'sentryAppId': self.sentry_app.id,
         }
+
+
+class OrganizationSentryAppComponentsTest(APITestCase):
+    def setUp(self):
+        self.user = self.create_user()
+        self.org = self.create_organization(owner=self.user)
+
+        self.sentry_app1 = self.create_sentry_app(
+            schema=json.dumps({
+                'elements': [self.create_issue_link_schema()],
+            })
+        )
+
+        self.sentry_app2 = self.create_sentry_app(
+            schema=json.dumps({
+                'elements': [self.create_issue_link_schema()],
+            })
+        )
+
+        self.sentry_app3 = self.create_sentry_app(
+            schema=json.dumps({
+                'elements': [self.create_issue_link_schema()],
+            })
+        )
+
+        self.create_sentry_app_installation(
+            slug=self.sentry_app1.slug,
+            organization=self.org,
+        )
+
+        self.create_sentry_app_installation(
+            slug=self.sentry_app2.slug,
+            organization=self.org,
+        )
+
+        self.component1 = self.sentry_app1.components.first()
+        self.component2 = self.sentry_app2.components.first()
+        self.component3 = self.sentry_app3.components.first()
+
+        self.url = reverse(
+            'sentry-api-0-org-sentry-app-components',
+            args=[self.org.slug],
+        )
+
+        self.login_as(user=self.user)
+
+    @with_feature('organizations:sentry-apps')
+    def test_retrieves_all_components_for_installed_apps(self):
+        response = self.client.get(self.url, format='json')
+
+        assert response.status_code == 200
+        assert self.component3.uuid not in [d['uuid'] for d in response.data]
+        assert response.data == [
+            {
+                'uuid': six.binary_type(self.component1.uuid),
+                'type': 'issue-link',
+                'schema': self.component1.schema,
+                'sentryAppId': self.sentry_app1.id,
+            },
+            {
+                'uuid': six.binary_type(self.component2.uuid),
+                'type': 'issue-link',
+                'schema': self.component2.schema,
+                'sentryAppId': self.sentry_app2.id,
+            },
+        ]
