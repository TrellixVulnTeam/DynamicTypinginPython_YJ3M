commit 9d54eb60c620fa4d1b8cfd2b936c1ced70384c17
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Mar 23 16:35:57 2020 -0700

    feat(onboarding): Put new sidebar wizard behind experiment (#17839)

diff --git a/src/sentry/static/sentry/app/components/onboardingWizard/taskConfig.tsx b/src/sentry/static/sentry/app/components/onboardingWizard/taskConfig.tsx
index 47de22305a..0d9f754dfc 100644
--- a/src/sentry/static/sentry/app/components/onboardingWizard/taskConfig.tsx
+++ b/src/sentry/static/sentry/app/components/onboardingWizard/taskConfig.tsx
@@ -178,7 +178,7 @@ export function getOnboardingTasks(
       requisites: [OnboardingTaskKey.FIRST_PROJECT],
       actionType: 'app',
       location: `/settings/${organization.slug}/projects/:projectId/alerts/`,
-      display: false,
+      display: organization?.experiments?.OnboardingSidebarV2Experiment === 1,
     },
   ];
 }
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 3d9af82632..6e962318e8 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -38,6 +38,7 @@ import localStorage from 'app/utils/localStorage';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
 import withOrganization from 'app/utils/withOrganization';
+import {logExperiment} from 'app/utils/analytics';
 
 import {getSidebarPanelContainer} from './sidebarPanel';
 import Broadcasts from './broadcasts';
@@ -78,6 +79,15 @@ class Sidebar extends React.Component {
 
     this.hashChangeHandler();
     this.doCollapse(this.props.collapsed);
+
+    const {organization} = this.props;
+    logExperiment({
+      organization,
+      key: 'OnboardingSidebarV2Experiment',
+      unitName: 'org_id',
+      unitId: parseInt(organization?.id, 10),
+      param: 'exposed',
+    });
   }
 
   UNSAFE_componentWillReceiveProps(nextProps) {
@@ -540,18 +550,19 @@ class Sidebar extends React.Component {
 
         {hasOrganization && (
           <SidebarSectionGroup>
-            {localStorage.getItem('NEW_ONBOARDING_SIDEBAR') && !horizontal && (
-              <SidebarSection noMargin noPadding>
-                <OnboardingStatus
-                  org={organization}
-                  currentPanel={currentPanel}
-                  onShowPanel={() => this.togglePanel('todos')}
-                  showPanel={showPanel}
-                  hidePanel={this.hidePanel}
-                  collapsed={collapsed}
-                />
-              </SidebarSection>
-            )}
+            {organization.experiments?.OnboardingSidebarV2Experiment === 1 &&
+              !horizontal && (
+                <SidebarSection noMargin noPadding>
+                  <OnboardingStatus
+                    org={organization}
+                    currentPanel={currentPanel}
+                    onShowPanel={() => this.togglePanel('todos')}
+                    showPanel={showPanel}
+                    hidePanel={this.hidePanel}
+                    collapsed={collapsed}
+                  />
+                </SidebarSection>
+              )}
 
             <SidebarSection>
               {HookStore.get('sidebar:bottom-items').length > 0 &&
@@ -584,18 +595,19 @@ class Sidebar extends React.Component {
               />
             </SidebarSection>
 
-            {!localStorage.getItem('NEW_ONBOARDING_SIDEBAR') && !horizontal && (
-              <SidebarSection noMargin>
-                <LegacyOnboardingStatus
-                  org={organization}
-                  currentPanel={currentPanel}
-                  onShowPanel={() => this.togglePanel('todos')}
-                  showPanel={showPanel}
-                  hidePanel={this.hidePanel}
-                  collapsed={collapsed}
-                />
-              </SidebarSection>
-            )}
+            {organization.experiments?.OnboardingSidebarV2Experiment !== 1 &&
+              !horizontal && (
+                <SidebarSection noMargin>
+                  <LegacyOnboardingStatus
+                    org={organization}
+                    currentPanel={currentPanel}
+                    onShowPanel={() => this.togglePanel('todos')}
+                    showPanel={showPanel}
+                    hidePanel={this.hidePanel}
+                    collapsed={collapsed}
+                  />
+                </SidebarSection>
+              )}
 
             {!horizontal && (
               <SidebarSection>
diff --git a/src/sentry/static/sentry/app/components/sidebar/legacyOnboardingStatus.tsx b/src/sentry/static/sentry/app/components/sidebar/legacyOnboardingStatus.tsx
index c23a437d03..3f0f46fcc2 100644
--- a/src/sentry/static/sentry/app/components/sidebar/legacyOnboardingStatus.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/legacyOnboardingStatus.tsx
@@ -16,14 +16,6 @@ type Props = CommonSidebarProps & {
   org: Organization;
 };
 
-function recordAnalytics(currentPanel: string, orgId: string) {
-  const data =
-    currentPanel === 'todos'
-      ? {eventKey: 'onboarding.wizard_opened', eventName: 'Onboarding Wizard Opened'}
-      : {eventKey: 'onboarding.wizard_closed', eventName: 'Onboarding Wizard Closed'};
-  trackAnalyticsEvent({...data, organization_id: orgId});
-}
-
 class LegacyOnboardingStatus extends React.Component<Props> {
   static propTypes = {
     org: PropTypes.object.isRequired,
@@ -34,26 +26,19 @@ class LegacyOnboardingStatus extends React.Component<Props> {
     collapsed: PropTypes.bool,
   };
 
-  componentDidUpdate(prevProps: Props) {
-    const {currentPanel, org} = this.props;
-    if (
-      currentPanel !== prevProps.currentPanel &&
-      (currentPanel || prevProps.currentPanel === 'todos')
-    ) {
-      recordAnalytics(currentPanel, org.id);
-    }
-  }
+  handleShowPanel = () => {
+    const {org, onShowPanel} = this.props;
+
+    trackAnalyticsEvent({
+      eventKey: 'onboarding.wizard_opened',
+      eventName: 'Onboarding Wizard Opened',
+      organization_id: org.id,
+    });
+    onShowPanel();
+  };
 
   render() {
-    const {
-      collapsed,
-      org,
-      currentPanel,
-      orientation,
-      hidePanel,
-      showPanel,
-      onShowPanel,
-    } = this.props;
+    const {collapsed, org, currentPanel, orientation, hidePanel, showPanel} = this.props;
 
     if (!(org.features && org.features.includes('onboarding'))) {
       return null;
@@ -83,7 +68,7 @@ class LegacyOnboardingStatus extends React.Component<Props> {
       <React.Fragment>
         <Tooltip title={tooltipTitle} containerDisplayMode="block">
           <OnboardingProgressBar
-            onClick={onShowPanel}
+            onClick={this.handleShowPanel}
             isActive={currentPanel === 'todos'}
             isCollapsed={collapsed}
             progress={Math.round((doneTasks.length / allDisplayedTasks.length) * 100)}
diff --git a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx
index 383e85581d..6043157d67 100644
--- a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx
@@ -21,14 +21,6 @@ type Props = CommonSidebarProps & {
   org: Organization;
 };
 
-function recordAnalytics(currentPanel: string, orgId: string) {
-  const data =
-    currentPanel === 'todos'
-      ? {eventKey: 'onboarding.wizard_opened', eventName: 'Onboarding Wizard Opened'}
-      : {eventKey: 'onboarding.wizard_closed', eventName: 'Onboarding Wizard Closed'};
-  trackAnalyticsEvent({...data, organization_id: orgId});
-}
-
 const isDone = (task: OnboardingTaskStatus) =>
   task.status === 'complete' || task.status === 'skipped';
 
@@ -38,26 +30,19 @@ const progressTextCss = () => css`
 `;
 
 class OnboardingStatus extends React.Component<Props> {
-  componentDidUpdate(prevProps: Props) {
-    const {currentPanel, org} = this.props;
-    if (
-      currentPanel !== prevProps.currentPanel &&
-      (currentPanel || prevProps.currentPanel === 'todos')
-    ) {
-      recordAnalytics(currentPanel, org.id);
-    }
-  }
+  handleShowPanel = () => {
+    const {org, onShowPanel} = this.props;
+
+    trackAnalyticsEvent({
+      eventKey: 'onboarding.wizard_opened',
+      eventName: 'Onboarding Wizard Opened',
+      organization_id: org.id,
+    });
+    onShowPanel();
+  };
 
   render() {
-    const {
-      collapsed,
-      org,
-      currentPanel,
-      orientation,
-      hidePanel,
-      showPanel,
-      onShowPanel,
-    } = this.props;
+    const {collapsed, org, currentPanel, orientation, hidePanel, showPanel} = this.props;
 
     if (!(org.features && org.features.includes('onboarding'))) {
       return null;
@@ -84,7 +69,7 @@ class OnboardingStatus extends React.Component<Props> {
 
     return (
       <React.Fragment>
-        <Container onClick={onShowPanel} isActive={isActive}>
+        <Container onClick={this.handleShowPanel} isActive={isActive}>
           <ProgressRing
             animateText
             textCss={progressTextCss}
diff --git a/src/sentry/static/sentry/app/data/experimentConfig.tsx b/src/sentry/static/sentry/app/data/experimentConfig.tsx
index 5b1493f634..873d9e6e88 100644
--- a/src/sentry/static/sentry/app/data/experimentConfig.tsx
+++ b/src/sentry/static/sentry/app/data/experimentConfig.tsx
@@ -31,6 +31,12 @@ export const experimentList = [
     parameter: 'variant',
     assignments: ['1', '0', -1],
   },
+  {
+    key: 'OnboardingSidebarV2Experiment',
+    type: 'organization',
+    parameter: 'exposed',
+    assignments: [1, 0, -1],
+  },
   {
     key: 'AssistantGuideExperiment',
     type: 'user',
