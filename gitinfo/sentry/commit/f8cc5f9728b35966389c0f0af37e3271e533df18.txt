commit f8cc5f9728b35966389c0f0af37e3271e533df18
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jun 28 16:43:44 2015 -0700

    Add events.time-to-process metric

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 927b6c0443..e7f6980f15 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -20,6 +20,7 @@ from datetime import datetime, timedelta
 from django.utils.crypto import constant_time_compare
 from django.utils.encoding import smart_str
 from gzip import GzipFile
+from time import time
 
 from sentry.app import env
 from sentry.cache import default_cache
@@ -399,4 +400,4 @@ def ensure_has_ip(data, ip_address):
 def insert_data_to_database(data):
     cache_key = 'e:{1}:{0}'.format(data['project'], data['event_id'])
     default_cache.set(cache_key, data, timeout=3600)
-    preprocess_event.delay(cache_key=cache_key)
+    preprocess_event.delay(cache_key=cache_key, start_time=time())
diff --git a/src/sentry/tasks/store.py b/src/sentry/tasks/store.py
index 888cbd0af7..4a0557f7a9 100644
--- a/src/sentry/tasks/store.py
+++ b/src/sentry/tasks/store.py
@@ -9,8 +9,11 @@ sentry.tasks.store
 from __future__ import absolute_import
 
 from celery.utils.log import get_task_logger
+from time import time
+
 from sentry.cache import default_cache
 from sentry.tasks.base import instrumented_task
+from sentry.utils import metrics
 from sentry.utils.safe import safe_execute
 
 logger = get_task_logger(__name__)
@@ -19,7 +22,7 @@ logger = get_task_logger(__name__)
 @instrumented_task(
     name='sentry.tasks.store.preprocess_event',
     queue='events')
-def preprocess_event(cache_key=None, data=None, **kwargs):
+def preprocess_event(cache_key=None, data=None, start_time=None, **kwargs):
     from sentry.plugins import plugins
 
     if cache_key:
@@ -47,13 +50,13 @@ def preprocess_event(cache_key=None, data=None, **kwargs):
 
     if cache_key:
         data = None
-    save_event.delay(cache_key=cache_key, data=data)
+    save_event.delay(cache_key=cache_key, data=data, start_time=start_time)
 
 
 @instrumented_task(
     name='sentry.tasks.store.save_event',
     queue='events')
-def save_event(cache_key=None, data=None, **kwargs):
+def save_event(cache_key=None, data=None, start_time=None, **kwargs):
     """
     Saves an event to the database.
     """
@@ -73,3 +76,5 @@ def save_event(cache_key=None, data=None, **kwargs):
     finally:
         if cache_key:
             default_cache.delete(cache_key)
+        if start_time:
+            metrics.timing('events.time-to-process', time() - start_time)
