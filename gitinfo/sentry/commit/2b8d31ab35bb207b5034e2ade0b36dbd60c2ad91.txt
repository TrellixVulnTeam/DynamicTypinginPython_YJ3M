commit 2b8d31ab35bb207b5034e2ade0b36dbd60c2ad91
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Nov 6 10:14:08 2019 -0800

    feat(ui): Add render prop for `<Form>` (#15383)
    
    This allows `children` to be a render prop so that we can pass the form `model` to children components
    
    Also expose the form model in the `onSubmit` callback.

diff --git a/src/sentry/static/sentry/app/components/modals/createIncidentModal.jsx b/src/sentry/static/sentry/app/components/modals/createIncidentModal.jsx
index bdc4d0331f..45cb7a4ee3 100644
--- a/src/sentry/static/sentry/app/components/modals/createIncidentModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/createIncidentModal.jsx
@@ -20,10 +20,10 @@ class CreateIncidentModal extends React.Component {
     organization: SentryTypes.Organization.isRequired,
   };
 
-  handleSubmit = async (data, onSuccess, onError, _e, setFormSavingState) => {
+  handleSubmit = async (data, onSuccess, onError, _e, model) => {
     const {api, organization, issues} = this.props;
 
-    setFormSavingState();
+    model.setFormSaving();
 
     try {
       const incident = await createIncident(api, organization, data.title, issues);
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/form.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/form.tsx
index 04f61f143d..592fd85986 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/form.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/form.tsx
@@ -14,11 +14,21 @@ import Panel from 'app/components/panels/panel';
 
 type Data = {};
 
+type RenderProps = {
+  model: FormModel;
+};
+
+type RenderFunc = (props: RenderProps) => React.ReactNode;
+
+// Type guard for render func.
+function isRenderFunc(func: React.ReactNode | Function): func is RenderFunc {
+  return typeof func === 'function';
+}
+
 type Props = {
   apiMethod: APIRequestMethod;
   apiEndpoint: string;
-  children: React.ReactNode;
-
+  children: React.ReactNode | RenderFunc;
   className?: string;
   cancelLabel?: string;
   submitDisabled?: boolean;
@@ -45,7 +55,7 @@ type Props = {
     onSubmitSuccess: (data: Data) => void,
     onSubmitError: (error: any) => void,
     e: React.FormEvent,
-    setFormSaving: FormModel['setFormSaving']
+    model: FormModel
   ) => void;
 } & Pick<FormOptions, 'onSubmitSuccess' | 'onSubmitError' | 'onFieldChange'>;
 
@@ -55,7 +65,7 @@ type Context = {
 };
 
 export default class Form extends React.Component<Props> {
-  static propTypes = {
+  static propTypes: any = {
     cancelLabel: PropTypes.string,
     onCancel: PropTypes.func,
     onSubmit: PropTypes.func,
@@ -151,7 +161,7 @@ export default class Form extends React.Component<Props> {
         this.onSubmitSuccess,
         this.onSubmitError,
         e,
-        this.model.setFormSaving.bind(this.model)
+        this.model
       );
     } else {
       this.model.saveForm();
@@ -201,7 +211,7 @@ export default class Form extends React.Component<Props> {
         className={className}
         data-test-id={this.props['data-test-id']}
       >
-        <div>{children}</div>
+        <div>{isRenderFunc(children) ? children({model: this.model}) : children}</div>
 
         {shouldShowFooter && (
           <StyledFooter
