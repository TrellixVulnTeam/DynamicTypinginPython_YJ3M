commit f5e51b7e982c6c9e167c175946e97afb856ab08d
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 26 04:38:28 2011 -0800

    Added exceptions over the last 24 hours as a semi transparent graph to the index header

diff --git a/bootstrap/lib/sentry.less b/bootstrap/lib/sentry.less
index 0123f51a43..f33391920b 100644
--- a/bootstrap/lib/sentry.less
+++ b/bootstrap/lib/sentry.less
@@ -1,3 +1,5 @@
+// Options
+
 .options {
   .tabs;
   height: @baseline * 2;
@@ -27,6 +29,8 @@
   cursor: default;
 }
 
+// Tweaks to Topbar
+
 .topbar {
   input {
     // Placeholder text gets special styles; can't be bundled together though for some reason
@@ -60,4 +64,16 @@
       text-shadow: none;
     }
   }
+}
+
+// Sparkline (page header)
+
+.page-header {
+  position: relative;
+}
+.sparkline {
+  left: 0;
+  position: absolute;
+  width: 100%;
+  .opacity(60);
 }
\ No newline at end of file
diff --git a/sentry/models.py b/sentry/models.py
index 0d0ab3a313..5d6daaa27c 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -29,7 +29,7 @@ from sentry.conf import settings
 from sentry.utils import cached_property, \
                          MockDjangoRequest
 from sentry.utils.models import Model, GzippedDictField
-from sentry.utils.manager import GroupManager
+from sentry.utils.manager import GroupManager, ProjectManager
 from sentry.templatetags.sentry_helpers import truncatechars
 
 __all__ = ('Event', 'Group')
@@ -63,6 +63,8 @@ class Project(Model):
     public = models.BooleanField(default=False)
     date_added = models.DateTimeField(default=datetime.now)
 
+    objects = ProjectManager()
+
 
 class ProjectMember(Model):
     project = models.ForeignKey(Project, related_name="member_set")
diff --git a/sentry/static/styles/bootstrap.css b/sentry/static/styles/bootstrap.css
index 54ec0a5234..e5df7a0145 100644
--- a/sentry/static/styles/bootstrap.css
+++ b/sentry/static/styles/bootstrap.css
@@ -6,7 +6,7 @@
  * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Designed and built with all the love in the world @twitter by @mdo and @fat.
- * Date: Mon Dec 26 01:56:30 PST 2011
+ * Date: Mon Dec 26 04:35:56 PST 2011
  */
 /* Reset.less
  * Props to Eric Meyer (meyerweb.com) for his CSS reset file. We're using an adapted version here	that cuts out some of the reset HTML elements we will never need here (i.e., dfn, samp, etc).
@@ -2593,3 +2593,15 @@ button.btn::-moz-focus-inner, input[type=submit].btn::-moz-focus-inner {
   color: #bfbfbf;
   text-shadow: none;
 }
+.page-header {
+  position: relative;
+}
+.sparkline {
+  left: 0;
+  position: absolute;
+  width: 100%;
+  filter: alpha(opacity=60);
+  -khtml-opacity: 0.6;
+  -moz-opacity: 0.6;
+  opacity: 0.6;
+}
diff --git a/sentry/static/styles/bootstrap.min.css b/sentry/static/styles/bootstrap.min.css
index bbe0d314a6..6ad6c666c5 100644
--- a/sentry/static/styles/bootstrap.min.css
+++ b/sentry/static/styles/bootstrap.min.css
@@ -371,3 +371,5 @@ button.btn::-moz-focus-inner,input[type=submit].btn::-moz-focus-inner{padding:0;
 .topbar input::-webkit-input-placeholder{color:#404040;}
 .topbar input:hover{background-color:#444;background-color:rgba(255, 255, 255, 0.3);color:#404040;}
 .topbar input:focus,.topbar input.focused{background-color:#444;background-color:rgba(255, 255, 255, 0.3);font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:normal;font-weight:13px;line-height:1;padding:4px 9px;color:#ffffff;color:rgba(255, 255, 255, 0.75);border:1px solid #111;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.25);-moz-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.25);box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0px rgba(255, 255, 255, 0.25);-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none;color:#bfbfbf;text-shadow:none;}
+.page-header{position:relative;}
+.sparkline{left:0;position:absolute;width:100%;filter:alpha(opacity=60);-khtml-opacity:0.6;-moz-opacity:0.6;opacity:0.6;}
diff --git a/sentry/templates/sentry/groups/details.html b/sentry/templates/sentry/groups/details.html
index e5a86616fb..6334d4d03a 100644
--- a/sentry/templates/sentry/groups/details.html
+++ b/sentry/templates/sentry/groups/details.html
@@ -5,6 +5,15 @@
 
 {% block title %}{{ group.error }} | {{ block.super }}{% endblock %}
 
+{% block meta %}
+    {{ block.super }}
+    <script>
+    Sentry.config({
+        apiUrl: '{% url sentry-ajax project.id %}'
+    });
+    </script>
+{% endblock %}
+
 {% block heading %}
     {% trans "Event Details" %} <small>{{ group.error|truncatechars:100 }}</small>
 {% endblock %}
diff --git a/sentry/templates/sentry/groups/group_list.html b/sentry/templates/sentry/groups/group_list.html
index 29f97016f2..8d47fd92c8 100644
--- a/sentry/templates/sentry/groups/group_list.html
+++ b/sentry/templates/sentry/groups/group_list.html
@@ -15,15 +15,14 @@
     </script>
 {% endblock %}
 
+{% block page_header %}
+    <div class="sparkline" id="sparkline"></div>
+    {{ block.super }}
+{% endblock %}
 
 {% block heading %}{% trans "Events <small>Aggregated</small>" %}{% endblock %}
 
 {% block sidebar %}
-    {% if chart_url %}
-        <h2>{% trans "Last 24 Hours" %}</h2>
-        <img src="{{ chart_url }}" class="chart" alt="chart"/>
-    {% endif %}
-
     {% for filter in filters %}
         <div class="sidebar-module sidebar-module-{{ filter.column }}">
             {% if filter.show_label %}
@@ -82,3 +81,57 @@
         </ul>
     {% endif %}
 {% endblock %}
+
+{% block content_after %}
+    <script type="text/javascript">
+    $(document).ready(function() {
+        $.ajax({
+            url: Sentry.options.apiUrl,
+            type: 'get',
+            dataType: 'json',
+            data: {
+                op: 'chart',
+                days: 1
+            },
+            success: function(data){
+                if (!data.length) {
+                    $('#sparkline').html('No data currently available.');
+                    return;
+                }
+
+                var start = new Date().getTime() - data.length * 3600000;
+                var pairs = [];
+                // for (var i=0; i<1000; i++) {
+                //     pairs.push([start + (3600 * 1000) * i, Math.random()*1000]);
+                // }
+                for (var i=0; i<data.length; i++) {
+                    pairs.push([start + (3600 * 1000) * i, data[i]]);
+                }
+                $('#sparkline').height($('.page-header').height());
+                $.plot($("#sparkline"), [
+                    {
+                        data: pairs,
+                        color: '#3079d0',
+                        shadowSize: 0,
+                        lines: {
+                            lineWidth: 1,
+                            show: true,
+                            fill: true
+                        },
+                    }
+                ], {
+                    xaxis: {
+                       mode: "time"
+                    },
+                    grid: {
+                        show: false,
+                        backgroundColor: '#eeeeee'
+                    },
+                    lines: { show: false }
+
+                });
+            }
+        });
+    });
+    </script>
+{% endblock %}
\ No newline at end of file
diff --git a/sentry/templates/sentry/layout.html b/sentry/templates/sentry/layout.html
index 75b9c9fa73..78132237ba 100644
--- a/sentry/templates/sentry/layout.html
+++ b/sentry/templates/sentry/layout.html
@@ -72,7 +72,9 @@
             <div class="container">
                 <div class="content">
                     <div class="page-header">
-                        <h1>{% block heading %}Sentry <small>Supporting text or tagline</small>{% endblock %}</h1>
+                        {% block page_header %}
+                            <h1>{% block heading %}Sentry <small>Supporting text or tagline</small>{% endblock %}</h1>
+                        {% endblock %}
                     </div>
                     <div class="row">
                     {% block content_before %}
diff --git a/sentry/utils/manager.py b/sentry/utils/manager.py
index 7c524841e2..d9877a22bc 100644
--- a/sentry/utils/manager.py
+++ b/sentry/utils/manager.py
@@ -86,7 +86,54 @@ class ModuleProxyCache(dict):
         return handler
 
 
-class GroupManager(models.Manager):
+class ChartMixin(object):
+    def _get_date_trunc(self, col, db='default'):
+        conn = connections[db]
+
+        engine = get_db_engine(db)
+        # TODO: does extract work for sqlite?
+        if engine.startswith('oracle'):
+            method = conn.ops.date_trunc_sql('hh24', col)
+        else:
+            method = conn.ops.date_trunc_sql('hour', col)
+
+        return method
+
+    def get_chart_data(self, instance, max_days=90):
+        if hasattr(instance, '_state'):
+            db = instance._state.db
+        else:
+            db = 'default'
+
+        if not has_charts(db):
+            return []
+
+        hours = max_days * 24
+        today = datetime.datetime.now().replace(microsecond=0, second=0, minute=0)
+        min_date = today - datetime.timedelta(hours=hours)
+
+        method = self._get_date_trunc('date', db)
+
+        chart_qs = list(instance.messagecountbyminute_set\
+                          .filter(date__gte=min_date)\
+                          .extra(select={'grouper': method}).values('grouper')\
+                          .annotate(num=Sum('times_seen')).values_list('grouper', 'num')\
+                          .order_by('grouper'))
+
+        if not chart_qs:
+            return []
+
+        rows = dict(chart_qs)
+
+        #just skip zeroes
+        first_seen = hours
+        while not rows.get(today - datetime.timedelta(hours=first_seen)) and first_seen > 24:
+            first_seen -= 1
+
+        return [rows.get(today - datetime.timedelta(hours=d), 0) for d in xrange(first_seen, -1, -1)]
+
+
+class GroupManager(models.Manager, ChartMixin):
     use_for_related_fields = True
 
     def __init__(self, *args, **kwargs):
@@ -337,54 +384,9 @@ class GroupManager(models.Manager):
 
             return instance
 
-    def _get_date_trunc(self, col, db='default'):
-        conn = connections[db]
-
-        engine = get_db_engine(db)
-        # TODO: does extract work for sqlite?
-        if engine.startswith('oracle'):
-            method = conn.ops.date_trunc_sql('hh24', col)
-        else:
-            method = conn.ops.date_trunc_sql('hour', col)
-
-        return method
-
     def get_by_natural_key(self, logger, culprit, checksum):
         return self.get(logger=logger, view=culprit, checksum=checksum)
 
-    def get_chart_data(self, group, max_days=90):
-        if hasattr(group, '_state'):
-            db = group._state.db
-        else:
-            db = 'default'
-
-        if not has_charts(db):
-            return []
-
-        hours = max_days * 24
-        today = datetime.datetime.now().replace(microsecond=0, second=0, minute=0)
-        min_date = today - datetime.timedelta(hours=hours)
-
-        method = self._get_date_trunc('date', db)
-
-        chart_qs = list(group.messagecountbyminute_set.all()\
-                          .filter(date__gte=min_date)\
-                          .extra(select={'grouper': method}).values('grouper')\
-                          .annotate(num=Sum('times_seen')).values_list('grouper', 'num')\
-                          .order_by('grouper'))
-
-        if not chart_qs:
-            return []
-
-        rows = dict(chart_qs)
-
-        #just skip zeroes
-        first_seen = hours
-        while not rows.get(today - datetime.timedelta(hours=first_seen)) and first_seen > 24:
-            first_seen -= 1
-
-        return [rows.get(today - datetime.timedelta(hours=d), 0) for d in xrange(first_seen, -1, -1)]
-
     def get_accelerated(self, queryset=None, minutes=15):
         # mintues should
         from sentry.models import MessageCountByMinute
@@ -431,3 +433,7 @@ class RawQuerySet(object):
         query = self.query + limit_clause
 
         return self.queryset.raw(query, self.params)
+
+
+class ProjectManager(models.Manager, ChartMixin):
+    pass
diff --git a/sentry/web/forms.py b/sentry/web/forms.py
index 5c3ea11dc2..8ff29d1a46 100644
--- a/sentry/web/forms.py
+++ b/sentry/web/forms.py
@@ -97,7 +97,6 @@ class EditProjectForm(forms.ModelForm):
 
 
 class ProjectMemberForm(forms.ModelForm):
-    project = forms.ModelChoiceField(queryset=Project.objects.all(), widget=forms.HiddenInput())
     user = UserField()
     permissions = forms.MultipleChoiceField(choices=PERMISSIONS, widget=BitFieldCheckboxSelectMultiple(), required=False)
     is_superuser = forms.BooleanField(required=False)
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index 2ec6963310..de8d325425 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -20,7 +20,7 @@ from django.utils.safestring import mark_safe
 from django.views.decorators.csrf import csrf_exempt
 
 from sentry.conf import settings
-from sentry.models import Group, Event
+from sentry.models import Group, Event, Project
 from sentry.plugins import GroupActionProvider
 from sentry.templatetags.sentry_helpers import with_priority
 from sentry.utils import get_filters, json
@@ -137,18 +137,20 @@ def ajax_handler(request, project):
 
     def chart(request, project):
         gid = request.REQUEST.get('gid')
-        if not gid:
-            return HttpResponseForbidden()
+        days = int(request.REQUEST.get('days', '90'))
 
-        try:
-            group = Group.objects.get(pk=gid)
-        except Group.DoesNotExist:
-            return HttpResponseForbidden()
+        if gid:
+            try:
+                group = Group.objects.get(pk=gid)
+            except Group.DoesNotExist:
+                return HttpResponseForbidden()
 
-        if group.project and group.project.pk not in get_project_list(request.user, 'read_message'):
-            return HttpResponseForbidden()
+            if group.project and group.project.pk not in get_project_list(request.user, 'read_message'):
+                return HttpResponseForbidden()
 
-        data = Group.objects.get_chart_data(group)
+            data = Group.objects.get_chart_data(group, max_days=days)
+        else:
+            data = Project.objects.get_chart_data(project, max_days=days)
 
         response = HttpResponse(json.dumps(data))
         response['Content-Type'] = 'application/json'
