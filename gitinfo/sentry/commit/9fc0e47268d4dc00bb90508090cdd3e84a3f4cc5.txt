commit 9fc0e47268d4dc00bb90508090cdd3e84a3f4cc5
Author: Bartosz Hernas <b@hern.as>
Date:   Mon Nov 11 22:39:13 2019 +0100

    fix: Jane Doe changed to Orville Wright (#15518)
    
    * Changed Jane Doe, which sounds really morbid for UK native speaker to something more neutral
    
    * Changed Orville Wright to Jane Bloggs
    
    * Revert translation changes
    
    * Fix tests

diff --git a/bin/load-mocks b/bin/load-mocks
index 020448f5b0..b7ce58ed41 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -652,7 +652,7 @@ def main(num_events=1, extra_events=False):
                     project=project,
                     event_id=event3.event_id,
                     group=event3.group,
-                    name="Jane Doe",
+                    name="Jane Bloggs",
                     email="jane@example.com",
                     comments=make_sentence(),
                 )
diff --git a/docs-ui/components/avatar.stories.js b/docs-ui/components/avatar.stories.js
index 8705a9d71e..b383c458ee 100644
--- a/docs-ui/components/avatar.stories.js
+++ b/docs-ui/components/avatar.stories.js
@@ -7,8 +7,8 @@ import Avatar from 'app/components/avatar';
 
 const USER = {
   id: 1,
-  name: 'Jane Doe',
-  email: 'janedoe@example.com',
+  name: 'Jane Bloggs',
+  email: 'janebloggs@example.com',
 };
 
 // eslint-disable-next-line
diff --git a/docs-ui/components/seenByList.stories.js b/docs-ui/components/seenByList.stories.js
index c56454febb..7c03412133 100644
--- a/docs-ui/components/seenByList.stories.js
+++ b/docs-ui/components/seenByList.stories.js
@@ -7,8 +7,8 @@ import SeenByList from 'app/components/seenByList';
 
 const USER = {
   id: 1,
-  name: 'Jane Doe',
-  email: 'janedoe@example.com',
+  name: 'Jane Bloggs',
+  email: 'janebloggs@example.com',
 };
 
 // eslint-disable-next-line
diff --git a/src/sentry/static/sentry/app/views/auth/registerForm.jsx b/src/sentry/static/sentry/app/views/auth/registerForm.jsx
index 635cee0e84..4da770c4c9 100644
--- a/src/sentry/static/sentry/app/views/auth/registerForm.jsx
+++ b/src/sentry/static/sentry/app/views/auth/registerForm.jsx
@@ -95,7 +95,7 @@ class RegisterForm extends React.Component {
       >
         <TextField
           name="name"
-          placeholder={t('Jane Doe')}
+          placeholder={t('Jane Bloggs')}
           maxlength={30}
           label={t('Name')}
           error={errors.name}
diff --git a/src/sentry/testutils/factories.py b/src/sentry/testutils/factories.py
index 163d1a9991..7000494270 100644
--- a/src/sentry/testutils/factories.py
+++ b/src/sentry/testutils/factories.py
@@ -877,7 +877,7 @@ class Factories(object):
             group=group,
             event_id=event_id or "a" * 32,
             project=project or group.project,
-            name="Jane Doe",
+            name="Jane Bloggs",
             email="jane@example.com",
             comments="the application crashed",
             **kwargs
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index 24530aa943..e6569dbe6a 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -157,7 +157,7 @@ class PasswordlessRegistrationForm(forms.ModelForm):
     name = forms.CharField(
         label=_("Name"),
         max_length=30,
-        widget=forms.TextInput(attrs={"placeholder": "Jane Doe"}),
+        widget=forms.TextInput(attrs={"placeholder": "Jane Bloggs"}),
         required=True,
     )
     username = AllowedEmailField(
diff --git a/src/sentry/web/frontend/error_page_embed.py b/src/sentry/web/frontend/error_page_embed.py
index 35b3e098de..f385062b32 100644
--- a/src/sentry/web/frontend/error_page_embed.py
+++ b/src/sentry/web/frontend/error_page_embed.py
@@ -52,7 +52,7 @@ DEFAULT_OPTIONS = {
 
 class UserReportForm(forms.ModelForm):
     name = forms.CharField(
-        max_length=128, widget=forms.TextInput(attrs={"placeholder": _("Jane Doe")})
+        max_length=128, widget=forms.TextInput(attrs={"placeholder": _("Jane Bloggs")})
     )
     email = forms.EmailField(
         max_length=75,
diff --git a/tests/fixtures/integration-docs/php-laravel.json b/tests/fixtures/integration-docs/php-laravel.json
index c9c647b97f..5b5650b5bf 100644
--- a/tests/fixtures/integration-docs/php-laravel.json
+++ b/tests/fixtures/integration-docs/php-laravel.json
@@ -1,5 +1,5 @@
 {
-  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>There are various ways to install the PHP integration for Sentry.  The\nrecommended way is to use <a class=\"reference external\" href=\"http://getcomposer.org/\">Composer</a>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require &quot;sentry/sentry&quot;\n</pre></div>\n</div>\n<p>Alternatively you can manually install it:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Download and extract the latest <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-php/archive/master.zip\">sentry-php</a> archive\nto your PHP project.</p>\n</li>\n<li><p class=\"first\">Require the autoloader in your application:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">require_once</span> <span style=\"color: #e8535a\">&#39;/path/to/Raven/library/Raven/Autoloader.php&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">Raven_Autoloader</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">register</span><span style=\"color: #111111\">();</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n\n\n<div class=\"section\" id=\"laravel-5-x\">\n<h2>Laravel 5.x</h2>\n<p>Install the <code class=\"docutils literal\"><span class=\"pre\">sentry/sentry-laravel</span></code> package:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require sentry/sentry-laravel\n</pre></div>\n</div>\n<p>If you&#8217;re on Laravel 5.4 or earlier, you&#8217;ll need to add the following to your <code class=\"docutils literal\"><span class=\"pre\">config/app.php</span></code> (for Laravel 5.5+ these will be auto-discovered by Laravel):</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #e8535a\">&#39;providers&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span>\n    <span style=\"color: #34c08b; font-style: italic\">// ...</span>\n    <span style=\"color: #111111\">Sentry\\SentryLaravel\\SentryLaravelServiceProvider</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">class</span><span style=\"color: #111111\">,</span>\n<span style=\"color: #111111\">)</span>\n\n<span style=\"color: #e8535a\">&#39;aliases&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span>\n    <span style=\"color: #34c08b; font-style: italic\">// ...</span>\n    <span style=\"color: #e8535a\">&#39;Sentry&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">Sentry\\SentryLaravel\\SentryFacade</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">class</span><span style=\"color: #111111\">,</span>\n<span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n<p>Add Sentry reporting to <code class=\"docutils literal\"><span class=\"pre\">App/Exceptions/Handler.php</span></code>:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">report(Exception</span> <span style=\"color: #111111\">$exception)</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">(app()</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">bound</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">shouldReport</span><span style=\"color: #111111\">($exception))</span> <span style=\"color: #111111\">{</span>\n        <span style=\"color: #111111\">app(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">captureException</span><span style=\"color: #111111\">($exception);</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #2eb0f7\">parent</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">report</span><span style=\"color: #111111\">($exception);</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Create the Sentry configuration file (<code class=\"docutils literal\"><span class=\"pre\">config/sentry.php</span></code>):</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ php artisan vendor:publish --provider<span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;Sentry\\SentryLaravel\\SentryLaravelServiceProvider&quot;</span>\n</pre></div>\n</div>\n<p>Add your DSN to <code class=\"docutils literal\"><span class=\"pre\">.env</span></code>:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">SENTRY_DSN</span><span style=\"color: #4b4f5c\">=</span>___DSN___\n</pre></div>\n</div>\n<p>Finally, if you wish to wire up User Feedback, you can do so by creating a custom\nerror view in <cite>resources/views/errors/500.blade.php</cite>.</p>\n<p>For Laravel 5 up to 5.4 you need to open up <code class=\"docutils literal\"><span class=\"pre\">App/Exceptions/Handler.php</span></code> and extend the\n<code class=\"docutils literal\"><span class=\"pre\">render</span></code> method to make sure the 500 error is rendered as a view correctly, in 5.5+ this\nstep is not required anymore an you can skip ahead to the next one:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #4b4f5c\">&lt;?</span><span style=\"color: #111111\">php</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">Handler</span> <span style=\"color: #2eb0f7\">extends</span> <span style=\"color: #111111\">ExceptionHandler</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">report(Exception</span> <span style=\"color: #111111\">$exception)</span>\n    <span style=\"color: #111111\">{</span>\n        <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">(app()</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">bound</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">shouldReport</span><span style=\"color: #111111\">($exception))</span> <span style=\"color: #111111\">{</span>\n            <span style=\"color: #111111\">app(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">captureException</span><span style=\"color: #111111\">($exception);</span>\n        <span style=\"color: #111111\">}</span>\n\n        <span style=\"color: #2eb0f7\">parent</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">report</span><span style=\"color: #111111\">($exception);</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">render($request,</span> <span style=\"color: #111111\">Exception</span> <span style=\"color: #111111\">$exception)</span>\n    <span style=\"color: #111111\">{</span>\n        <span style=\"color: #34c08b; font-style: italic\">// Convert all non-http exceptions to a proper 500 http exception</span>\n        <span style=\"color: #34c08b; font-style: italic\">// if we don&#39;t do this exceptions are shown as a default template</span>\n        <span style=\"color: #34c08b; font-style: italic\">// instead of our own view in resources/views/errors/500.blade.php</span>\n        <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">($this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">shouldReport</span><span style=\"color: #111111\">($exception)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #4b4f5c\">!</span><span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">isHttpException</span><span style=\"color: #111111\">($exception)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #4b4f5c\">!</span><span style=\"color: #111111\">config(</span><span style=\"color: #e8535a\">&#39;app.debug&#39;</span><span style=\"color: #111111\">))</span> <span style=\"color: #111111\">{</span>\n            <span style=\"color: #111111\">$exception</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">HttpException(</span><span style=\"color: #45c2c9\">500</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">&#39;Whoops!&#39;</span><span style=\"color: #111111\">);</span>\n        <span style=\"color: #111111\">}</span>\n\n        <span style=\"color: #2eb0f7\">return</span> <span style=\"color: #2eb0f7\">parent</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">render</span><span style=\"color: #111111\">($request,</span> <span style=\"color: #111111\">$exception);</span>\n    <span style=\"color: #111111\">}</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Next, create <code class=\"docutils literal\"><span class=\"pre\">resources/views/errors/500.blade.php</span></code>, and embed the feedback code:</p>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>&lt;div class=&quot;content&quot;&gt;\n    &lt;div class=&quot;title&quot;&gt;Something went wrong.&lt;/div&gt;\n\n    @if(app()-&gt;bound(&#39;sentry&#39;) &amp;&amp; !empty(Sentry::getLastEventID()))\n        &lt;div class=&quot;subtitle&quot;&gt;Error ID: {{ Sentry::getLastEventID() }}&lt;/div&gt;\n\n        &lt;!-- Sentry JS SDK 2.1.+ required --&gt;\n        &lt;script src=&quot;https://cdn.ravenjs.com/3.3.0/raven.min.js&quot;&gt;&lt;/script&gt;\n\n        &lt;script&gt;\n            Raven.showReportDialog({\n                eventId: &#39;{{ Sentry::getLastEventID() }}&#39;,\n                // use the public DSN (dont include your secret!)\n                dsn: &#39;https://e9ebbd88548a441288393c457ec90441@sentry.io/3235&#39;,\n                user: {\n                    &#39;name&#39;: &#39;Jane Doe&#39;,\n                    &#39;email&#39;: &#39;jane.doe@example.com&#39;,\n                }\n            });\n        &lt;/script&gt;\n    @endif\n&lt;/div&gt;\n</pre></div>\n</div>\n<p>That&#8217;s it!</p>\n</div>\n", 
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>There are various ways to install the PHP integration for Sentry.  The\nrecommended way is to use <a class=\"reference external\" href=\"http://getcomposer.org/\">Composer</a>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require &quot;sentry/sentry&quot;\n</pre></div>\n</div>\n<p>Alternatively you can manually install it:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Download and extract the latest <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-php/archive/master.zip\">sentry-php</a> archive\nto your PHP project.</p>\n</li>\n<li><p class=\"first\">Require the autoloader in your application:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">require_once</span> <span style=\"color: #e8535a\">&#39;/path/to/Raven/library/Raven/Autoloader.php&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">Raven_Autoloader</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">register</span><span style=\"color: #111111\">();</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n\n\n<div class=\"section\" id=\"laravel-5-x\">\n<h2>Laravel 5.x</h2>\n<p>Install the <code class=\"docutils literal\"><span class=\"pre\">sentry/sentry-laravel</span></code> package:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require sentry/sentry-laravel\n</pre></div>\n</div>\n<p>If you&#8217;re on Laravel 5.4 or earlier, you&#8217;ll need to add the following to your <code class=\"docutils literal\"><span class=\"pre\">config/app.php</span></code> (for Laravel 5.5+ these will be auto-discovered by Laravel):</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #e8535a\">&#39;providers&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span>\n    <span style=\"color: #34c08b; font-style: italic\">// ...</span>\n    <span style=\"color: #111111\">Sentry\\SentryLaravel\\SentryLaravelServiceProvider</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">class</span><span style=\"color: #111111\">,</span>\n<span style=\"color: #111111\">)</span>\n\n<span style=\"color: #e8535a\">&#39;aliases&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span>\n    <span style=\"color: #34c08b; font-style: italic\">// ...</span>\n    <span style=\"color: #e8535a\">&#39;Sentry&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">Sentry\\SentryLaravel\\SentryFacade</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">class</span><span style=\"color: #111111\">,</span>\n<span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n<p>Add Sentry reporting to <code class=\"docutils literal\"><span class=\"pre\">App/Exceptions/Handler.php</span></code>:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">report(Exception</span> <span style=\"color: #111111\">$exception)</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">(app()</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">bound</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">shouldReport</span><span style=\"color: #111111\">($exception))</span> <span style=\"color: #111111\">{</span>\n        <span style=\"color: #111111\">app(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">captureException</span><span style=\"color: #111111\">($exception);</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #2eb0f7\">parent</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">report</span><span style=\"color: #111111\">($exception);</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Create the Sentry configuration file (<code class=\"docutils literal\"><span class=\"pre\">config/sentry.php</span></code>):</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ php artisan vendor:publish --provider<span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;Sentry\\SentryLaravel\\SentryLaravelServiceProvider&quot;</span>\n</pre></div>\n</div>\n<p>Add your DSN to <code class=\"docutils literal\"><span class=\"pre\">.env</span></code>:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">SENTRY_DSN</span><span style=\"color: #4b4f5c\">=</span>___DSN___\n</pre></div>\n</div>\n<p>Finally, if you wish to wire up User Feedback, you can do so by creating a custom\nerror view in <cite>resources/views/errors/500.blade.php</cite>.</p>\n<p>For Laravel 5 up to 5.4 you need to open up <code class=\"docutils literal\"><span class=\"pre\">App/Exceptions/Handler.php</span></code> and extend the\n<code class=\"docutils literal\"><span class=\"pre\">render</span></code> method to make sure the 500 error is rendered as a view correctly, in 5.5+ this\nstep is not required anymore an you can skip ahead to the next one:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #4b4f5c\">&lt;?</span><span style=\"color: #111111\">php</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">Handler</span> <span style=\"color: #2eb0f7\">extends</span> <span style=\"color: #111111\">ExceptionHandler</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">report(Exception</span> <span style=\"color: #111111\">$exception)</span>\n    <span style=\"color: #111111\">{</span>\n        <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">(app()</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">bound</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">shouldReport</span><span style=\"color: #111111\">($exception))</span> <span style=\"color: #111111\">{</span>\n            <span style=\"color: #111111\">app(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">captureException</span><span style=\"color: #111111\">($exception);</span>\n        <span style=\"color: #111111\">}</span>\n\n        <span style=\"color: #2eb0f7\">parent</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">report</span><span style=\"color: #111111\">($exception);</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">render($request,</span> <span style=\"color: #111111\">Exception</span> <span style=\"color: #111111\">$exception)</span>\n    <span style=\"color: #111111\">{</span>\n        <span style=\"color: #34c08b; font-style: italic\">// Convert all non-http exceptions to a proper 500 http exception</span>\n        <span style=\"color: #34c08b; font-style: italic\">// if we don&#39;t do this exceptions are shown as a default template</span>\n        <span style=\"color: #34c08b; font-style: italic\">// instead of our own view in resources/views/errors/500.blade.php</span>\n        <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">($this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">shouldReport</span><span style=\"color: #111111\">($exception)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #4b4f5c\">!</span><span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">isHttpException</span><span style=\"color: #111111\">($exception)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #4b4f5c\">!</span><span style=\"color: #111111\">config(</span><span style=\"color: #e8535a\">&#39;app.debug&#39;</span><span style=\"color: #111111\">))</span> <span style=\"color: #111111\">{</span>\n            <span style=\"color: #111111\">$exception</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">HttpException(</span><span style=\"color: #45c2c9\">500</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">&#39;Whoops!&#39;</span><span style=\"color: #111111\">);</span>\n        <span style=\"color: #111111\">}</span>\n\n        <span style=\"color: #2eb0f7\">return</span> <span style=\"color: #2eb0f7\">parent</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">render</span><span style=\"color: #111111\">($request,</span> <span style=\"color: #111111\">$exception);</span>\n    <span style=\"color: #111111\">}</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Next, create <code class=\"docutils literal\"><span class=\"pre\">resources/views/errors/500.blade.php</span></code>, and embed the feedback code:</p>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>&lt;div class=&quot;content&quot;&gt;\n    &lt;div class=&quot;title&quot;&gt;Something went wrong.&lt;/div&gt;\n\n    @if(app()-&gt;bound(&#39;sentry&#39;) &amp;&amp; !empty(Sentry::getLastEventID()))\n        &lt;div class=&quot;subtitle&quot;&gt;Error ID: {{ Sentry::getLastEventID() }}&lt;/div&gt;\n\n        &lt;!-- Sentry JS SDK 2.1.+ required --&gt;\n        &lt;script src=&quot;https://cdn.ravenjs.com/3.3.0/raven.min.js&quot;&gt;&lt;/script&gt;\n\n        &lt;script&gt;\n            Raven.showReportDialog({\n                eventId: &#39;{{ Sentry::getLastEventID() }}&#39;,\n                // use the public DSN (dont include your secret!)\n                dsn: &#39;https://e9ebbd88548a441288393c457ec90441@sentry.io/3235&#39;,\n                user: {\n                    &#39;name&#39;: &#39;Jane Bloggs&#39;,\n                    &#39;email&#39;: &#39;jane.doe@example.com&#39;,\n                }\n            });\n        &lt;/script&gt;\n    @endif\n&lt;/div&gt;\n</pre></div>\n</div>\n<p>That&#8217;s it!</p>\n</div>\n", 
   "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/", 
   "id": "php-laravel", 
   "name": "Laravel"
diff --git a/tests/js/spec/components/assigneeSelector.spec.jsx b/tests/js/spec/components/assigneeSelector.spec.jsx
index f90a2f2356..46e03d8b7e 100644
--- a/tests/js/spec/components/assigneeSelector.spec.jsx
+++ b/tests/js/spec/components/assigneeSelector.spec.jsx
@@ -30,8 +30,8 @@ describe('AssigneeSelector', function() {
   beforeEach(function() {
     USER_1 = TestStubs.User({
       id: '1',
-      name: 'Jane Doe',
-      email: 'janedoe@example.com',
+      name: 'Jane Bloggs',
+      email: 'janebloggs@example.com',
     });
     USER_2 = TestStubs.User({
       id: '2',
diff --git a/tests/js/spec/components/avatar.spec.jsx b/tests/js/spec/components/avatar.spec.jsx
index 97dcdd8b14..a1c35d965f 100644
--- a/tests/js/spec/components/avatar.spec.jsx
+++ b/tests/js/spec/components/avatar.spec.jsx
@@ -13,8 +13,8 @@ jest.mock('app/stores/configStore', () => {
 describe('Avatar', function() {
   const USER = {
     id: '1',
-    name: 'Jane Doe',
-    email: 'janedoe@example.com',
+    name: 'Jane Bloggs',
+    email: 'janebloggs@example.com',
   };
 
   describe('render()', function() {
diff --git a/tests/js/spec/components/avatar/__snapshots__/actorAvatar.spec.jsx.snap b/tests/js/spec/components/avatar/__snapshots__/actorAvatar.spec.jsx.snap
index 537fa688f4..69a239d59b 100644
--- a/tests/js/spec/components/avatar/__snapshots__/actorAvatar.spec.jsx.snap
+++ b/tests/js/spec/components/avatar/__snapshots__/actorAvatar.spec.jsx.snap
@@ -23,9 +23,9 @@ exports[`Avatar render() should show a gravatar when actor type is a user 1`] =
   hasTooltip={true}
   user={
     Object {
-      "email": "janedoe@example.com",
+      "email": "janebloggs@example.com",
       "id": "1",
-      "name": "Jane Doe",
+      "name": "Jane Bloggs",
     }
   }
 />
diff --git a/tests/js/spec/components/avatar/actorAvatar.spec.jsx b/tests/js/spec/components/avatar/actorAvatar.spec.jsx
index fac82436e4..42324107d2 100644
--- a/tests/js/spec/components/avatar/actorAvatar.spec.jsx
+++ b/tests/js/spec/components/avatar/actorAvatar.spec.jsx
@@ -7,8 +7,8 @@ import TeamStore from 'app/stores/teamStore';
 describe('Avatar', function() {
   const USER = {
     id: '1',
-    name: 'Jane Doe',
-    email: 'janedoe@example.com',
+    name: 'Jane Bloggs',
+    email: 'janebloggs@example.com',
   };
   const TEAM_1 = {
     id: '3',
@@ -33,7 +33,7 @@ describe('Avatar', function() {
         <ActorAvatar
           actor={{
             id: '1',
-            name: 'Jane Doe',
+            name: 'Jane Bloggs',
             type: 'user',
           }}
         />
diff --git a/tests/js/spec/components/letterAvatar.spec.jsx b/tests/js/spec/components/letterAvatar.spec.jsx
index 044978d0d3..d0fa8b548a 100644
--- a/tests/js/spec/components/letterAvatar.spec.jsx
+++ b/tests/js/spec/components/letterAvatar.spec.jsx
@@ -5,8 +5,8 @@ import LetterAvatar from 'app/components/letterAvatar';
 
 describe('LetterAvatar', function() {
   const USER_1 = {
-    identifier: 'janedoe@example.com',
-    displayName: 'Jane Doe',
+    identifier: 'janebloggs@example.com',
+    displayName: 'Jane Bloggs',
   };
   const USER_2 = {
     identifier: 'johnsmith@example.com',
@@ -25,26 +25,26 @@ describe('LetterAvatar', function() {
     displayName: '',
   };
   const USER_6 = {
-    identifier: 'janedoe@example.com',
-    displayName: 'Jane Doe ',
+    identifier: 'janebloggs@example.com',
+    displayName: 'Jane Bloggs ',
   };
   const USER_7 = {
-    identifier: 'janedoe@example.com',
+    identifier: 'janebloggs@example.com',
     displayName: ' ',
   };
   const USER_8 = {
-    identifier: 'janedoe@example.com',
+    identifier: 'janebloggs@example.com',
     displayName: '\u2603super \u2603duper',
   };
   const USER_9 = {
-    identifier: 'janedoe@example.com',
-    displayName: 'jane austen doe',
+    identifier: 'janebloggs@example.com',
+    displayName: 'jane austen bloggs',
   };
 
   describe('display name', function() {
     it('should get initials based on name', function() {
       const letterAvatar = mount(<LetterAvatar {...USER_1} />);
-      expect(letterAvatar.text()).toEqual('JD');
+      expect(letterAvatar.text()).toEqual('JB');
     });
 
     it('should get initials based on email', function() {
@@ -69,7 +69,7 @@ describe('LetterAvatar', function() {
 
     it('should get initials based on name even if there are trailing spaces', function() {
       const letterAvatar = mount(<LetterAvatar {...USER_6} />);
-      expect(letterAvatar.text()).toEqual('JD');
+      expect(letterAvatar.text()).toEqual('JB');
     });
 
     it('should not slice multibyte characters in half', function() {
@@ -79,14 +79,14 @@ describe('LetterAvatar', function() {
 
     it('should pick most last name', function() {
       const letterAvatar = mount(<LetterAvatar {...USER_9} />);
-      expect(letterAvatar.text()).toEqual('JD');
+      expect(letterAvatar.text()).toEqual('JB');
     });
   });
 
   describe('color', function() {
     it('should return a color based on email', function() {
       const letterAvatar = mount(<LetterAvatar {...USER_1} />);
-      expect(letterAvatar.find('rect').props().fill).toEqual('#f868bc');
+      expect(letterAvatar.find('rect').props().fill).toEqual('#4e3fb4');
     });
 
     it('should return a color based on username', function() {
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index 948e5c64fd..47daff48bb 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -6,7 +6,7 @@ exports[`RuleBuilder renders 1`] = `
     [MockFunction] {
       "calls": Array [
         Array [
-          "path:some/path/* janedoe@example.com",
+          "path:some/path/* janebloggs@example.com",
         ],
       ],
       "results": Array [
@@ -724,7 +724,7 @@ exports[`RuleBuilder renders 1`] = `
                                 Object {
                                   "actor": Object {
                                     "id": "1",
-                                    "name": "Jane Doe",
+                                    "name": "Jane Bloggs",
                                     "type": "user",
                                   },
                                   "label": <IdBadge
@@ -733,27 +733,27 @@ exports[`RuleBuilder renders 1`] = `
                                     useLink={false}
                                     user={
                                       Object {
-                                        "email": "janedoe@example.com",
+                                        "email": "janebloggs@example.com",
                                         "flags": Object {
                                           "newsletter_consent_prompt": false,
                                         },
                                         "hasPasswordAuth": true,
                                         "id": "1",
                                         "isAuthenticated": true,
-                                        "name": "Jane Doe",
+                                        "name": "Jane Bloggs",
                                         "options": Object {
                                           "timezone": "UTC",
                                         },
                                         "user": Object {
-                                          "email": "janedoe@example.com",
+                                          "email": "janebloggs@example.com",
                                           "id": "1",
-                                          "name": "Jane Doe",
+                                          "name": "Jane Bloggs",
                                         },
                                         "username": "foo@example.com",
                                       }
                                     }
                                   />,
-                                  "searchKey": "janedoe@example.com jane doe",
+                                  "searchKey": "janebloggs@example.com jane bloggs",
                                   "value": "user:1",
                                 },
                                 Object {
@@ -1819,7 +1819,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                   Object {
                     "actor": Object {
                       "id": "1",
-                      "name": "Jane Doe",
+                      "name": "Jane Bloggs",
                       "type": "user",
                     },
                     "label": <IdBadge
@@ -1828,27 +1828,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                       useLink={false}
                       user={
                         Object {
-                          "email": "janedoe@example.com",
+                          "email": "janebloggs@example.com",
                           "flags": Object {
                             "newsletter_consent_prompt": false,
                           },
                           "hasPasswordAuth": true,
                           "id": "1",
                           "isAuthenticated": true,
-                          "name": "Jane Doe",
+                          "name": "Jane Bloggs",
                           "options": Object {
                             "timezone": "UTC",
                           },
                           "user": Object {
-                            "email": "janedoe@example.com",
+                            "email": "janebloggs@example.com",
                             "id": "1",
-                            "name": "Jane Doe",
+                            "name": "Jane Bloggs",
                           },
                           "username": "foo@example.com",
                         }
                       }
                     />,
-                    "searchKey": "janedoe@example.com jane doe",
+                    "searchKey": "janebloggs@example.com jane bloggs",
                     "value": "user:1",
                   },
                 ]
@@ -1870,7 +1870,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                     Object {
                       "actor": Object {
                         "id": "1",
-                        "name": "Jane Doe",
+                        "name": "Jane Bloggs",
                         "type": "user",
                       },
                       "label": <IdBadge
@@ -1879,27 +1879,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                         useLink={false}
                         user={
                           Object {
-                            "email": "janedoe@example.com",
+                            "email": "janebloggs@example.com",
                             "flags": Object {
                               "newsletter_consent_prompt": false,
                             },
                             "hasPasswordAuth": true,
                             "id": "1",
                             "isAuthenticated": true,
-                            "name": "Jane Doe",
+                            "name": "Jane Bloggs",
                             "options": Object {
                               "timezone": "UTC",
                             },
                             "user": Object {
-                              "email": "janedoe@example.com",
+                              "email": "janebloggs@example.com",
                               "id": "1",
-                              "name": "Jane Doe",
+                              "name": "Jane Bloggs",
                             },
                             "username": "foo@example.com",
                           }
                         }
                       />,
-                      "searchKey": "janedoe@example.com jane doe",
+                      "searchKey": "janebloggs@example.com jane bloggs",
                       "value": "user:1",
                     },
                   ]
@@ -1925,7 +1925,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                       Object {
                         "actor": Object {
                           "id": "1",
-                          "name": "Jane Doe",
+                          "name": "Jane Bloggs",
                           "type": "user",
                         },
                         "label": <IdBadge
@@ -1934,27 +1934,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           useLink={false}
                           user={
                             Object {
-                              "email": "janedoe@example.com",
+                              "email": "janebloggs@example.com",
                               "flags": Object {
                                 "newsletter_consent_prompt": false,
                               },
                               "hasPasswordAuth": true,
                               "id": "1",
                               "isAuthenticated": true,
-                              "name": "Jane Doe",
+                              "name": "Jane Bloggs",
                               "options": Object {
                                 "timezone": "UTC",
                               },
                               "user": Object {
-                                "email": "janedoe@example.com",
+                                "email": "janebloggs@example.com",
                                 "id": "1",
-                                "name": "Jane Doe",
+                                "name": "Jane Bloggs",
                               },
                               "username": "foo@example.com",
                             }
                           }
                         />,
-                        "searchKey": "janedoe@example.com jane doe",
+                        "searchKey": "janebloggs@example.com jane bloggs",
                         "value": "user:1",
                       },
                     ]
@@ -1984,7 +1984,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                         Object {
                           "actor": Object {
                             "id": "1",
-                            "name": "Jane Doe",
+                            "name": "Jane Bloggs",
                             "type": "user",
                           },
                           "label": <IdBadge
@@ -1993,27 +1993,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                             useLink={false}
                             user={
                               Object {
-                                "email": "janedoe@example.com",
+                                "email": "janebloggs@example.com",
                                 "flags": Object {
                                   "newsletter_consent_prompt": false,
                                 },
                                 "hasPasswordAuth": true,
                                 "id": "1",
                                 "isAuthenticated": true,
-                                "name": "Jane Doe",
+                                "name": "Jane Bloggs",
                                 "options": Object {
                                   "timezone": "UTC",
                                 },
                                 "user": Object {
-                                  "email": "janedoe@example.com",
+                                  "email": "janebloggs@example.com",
                                   "id": "1",
-                                  "name": "Jane Doe",
+                                  "name": "Jane Bloggs",
                                 },
                                 "username": "foo@example.com",
                               }
                             }
                           />,
-                          "searchKey": "janedoe@example.com jane doe",
+                          "searchKey": "janebloggs@example.com jane bloggs",
                           "value": "user:1",
                         },
                       ]
@@ -2043,7 +2043,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           Object {
                             "actor": Object {
                               "id": "1",
-                              "name": "Jane Doe",
+                              "name": "Jane Bloggs",
                               "type": "user",
                             },
                             "label": <IdBadge
@@ -2052,27 +2052,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                               useLink={false}
                               user={
                                 Object {
-                                  "email": "janedoe@example.com",
+                                  "email": "janebloggs@example.com",
                                   "flags": Object {
                                     "newsletter_consent_prompt": false,
                                   },
                                   "hasPasswordAuth": true,
                                   "id": "1",
                                   "isAuthenticated": true,
-                                  "name": "Jane Doe",
+                                  "name": "Jane Bloggs",
                                   "options": Object {
                                     "timezone": "UTC",
                                   },
                                   "user": Object {
-                                    "email": "janedoe@example.com",
+                                    "email": "janebloggs@example.com",
                                     "id": "1",
-                                    "name": "Jane Doe",
+                                    "name": "Jane Bloggs",
                                   },
                                   "username": "foo@example.com",
                                 }
                               }
                             />,
-                            "searchKey": "janedoe@example.com jane doe",
+                            "searchKey": "janebloggs@example.com jane bloggs",
                             "value": "user:1",
                           },
                         ]
@@ -2102,7 +2102,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                             Object {
                               "actor": Object {
                                 "id": "1",
-                                "name": "Jane Doe",
+                                "name": "Jane Bloggs",
                                 "type": "user",
                               },
                               "label": <IdBadge
@@ -2111,27 +2111,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                 useLink={false}
                                 user={
                                   Object {
-                                    "email": "janedoe@example.com",
+                                    "email": "janebloggs@example.com",
                                     "flags": Object {
                                       "newsletter_consent_prompt": false,
                                     },
                                     "hasPasswordAuth": true,
                                     "id": "1",
                                     "isAuthenticated": true,
-                                    "name": "Jane Doe",
+                                    "name": "Jane Bloggs",
                                     "options": Object {
                                       "timezone": "UTC",
                                     },
                                     "user": Object {
-                                      "email": "janedoe@example.com",
+                                      "email": "janebloggs@example.com",
                                       "id": "1",
-                                      "name": "Jane Doe",
+                                      "name": "Jane Bloggs",
                                     },
                                     "username": "foo@example.com",
                                   }
                                 }
                               />,
-                              "searchKey": "janedoe@example.com jane doe",
+                              "searchKey": "janebloggs@example.com jane bloggs",
                               "value": "user:1",
                             },
                           ]
@@ -2165,7 +2165,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                               Object {
                                 "actor": Object {
                                   "id": "1",
-                                  "name": "Jane Doe",
+                                  "name": "Jane Bloggs",
                                   "type": "user",
                                 },
                                 "label": <IdBadge
@@ -2174,27 +2174,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                   useLink={false}
                                   user={
                                     Object {
-                                      "email": "janedoe@example.com",
+                                      "email": "janebloggs@example.com",
                                       "flags": Object {
                                         "newsletter_consent_prompt": false,
                                       },
                                       "hasPasswordAuth": true,
                                       "id": "1",
                                       "isAuthenticated": true,
-                                      "name": "Jane Doe",
+                                      "name": "Jane Bloggs",
                                       "options": Object {
                                         "timezone": "UTC",
                                       },
                                       "user": Object {
-                                        "email": "janedoe@example.com",
+                                        "email": "janebloggs@example.com",
                                         "id": "1",
-                                        "name": "Jane Doe",
+                                        "name": "Jane Bloggs",
                                       },
                                       "username": "foo@example.com",
                                     }
                                   }
                                 />,
-                                "searchKey": "janedoe@example.com jane doe",
+                                "searchKey": "janebloggs@example.com jane bloggs",
                                 "value": "user:1",
                               },
                             ]
@@ -2248,7 +2248,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                 Object {
                                   "actor": Object {
                                     "id": "1",
-                                    "name": "Jane Doe",
+                                    "name": "Jane Bloggs",
                                     "type": "user",
                                   },
                                   "label": <IdBadge
@@ -2257,27 +2257,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                     useLink={false}
                                     user={
                                       Object {
-                                        "email": "janedoe@example.com",
+                                        "email": "janebloggs@example.com",
                                         "flags": Object {
                                           "newsletter_consent_prompt": false,
                                         },
                                         "hasPasswordAuth": true,
                                         "id": "1",
                                         "isAuthenticated": true,
-                                        "name": "Jane Doe",
+                                        "name": "Jane Bloggs",
                                         "options": Object {
                                           "timezone": "UTC",
                                         },
                                         "user": Object {
-                                          "email": "janedoe@example.com",
+                                          "email": "janebloggs@example.com",
                                           "id": "1",
-                                          "name": "Jane Doe",
+                                          "name": "Jane Bloggs",
                                         },
                                         "username": "foo@example.com",
                                       }
                                     }
                                   />,
-                                  "searchKey": "janedoe@example.com jane doe",
+                                  "searchKey": "janebloggs@example.com jane bloggs",
                                   "value": "user:1",
                                 },
                                 Object {
@@ -2398,7 +2398,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                 Object {
                                   "actor": Object {
                                     "id": "1",
-                                    "name": "Jane Doe",
+                                    "name": "Jane Bloggs",
                                     "type": "user",
                                   },
                                   "label": <IdBadge
@@ -2407,27 +2407,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                     useLink={false}
                                     user={
                                       Object {
-                                        "email": "janedoe@example.com",
+                                        "email": "janebloggs@example.com",
                                         "flags": Object {
                                           "newsletter_consent_prompt": false,
                                         },
                                         "hasPasswordAuth": true,
                                         "id": "1",
                                         "isAuthenticated": true,
-                                        "name": "Jane Doe",
+                                        "name": "Jane Bloggs",
                                         "options": Object {
                                           "timezone": "UTC",
                                         },
                                         "user": Object {
-                                          "email": "janedoe@example.com",
+                                          "email": "janebloggs@example.com",
                                           "id": "1",
-                                          "name": "Jane Doe",
+                                          "name": "Jane Bloggs",
                                         },
                                         "username": "foo@example.com",
                                       }
                                     }
                                   />,
-                                  "searchKey": "janedoe@example.com jane doe",
+                                  "searchKey": "janebloggs@example.com jane bloggs",
                                   "value": "user:1",
                                 },
                               ]
@@ -2462,7 +2462,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                       Object {
                                         "actor": Object {
                                           "id": "1",
-                                          "name": "Jane Doe",
+                                          "name": "Jane Bloggs",
                                           "type": "user",
                                         },
                                         "label": <IdBadge
@@ -2471,27 +2471,27 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                           useLink={false}
                                           user={
                                             Object {
-                                              "email": "janedoe@example.com",
+                                              "email": "janebloggs@example.com",
                                               "flags": Object {
                                                 "newsletter_consent_prompt": false,
                                               },
                                               "hasPasswordAuth": true,
                                               "id": "1",
                                               "isAuthenticated": true,
-                                              "name": "Jane Doe",
+                                              "name": "Jane Bloggs",
                                               "options": Object {
                                                 "timezone": "UTC",
                                               },
                                               "user": Object {
-                                                "email": "janedoe@example.com",
+                                                "email": "janebloggs@example.com",
                                                 "id": "1",
-                                                "name": "Jane Doe",
+                                                "name": "Jane Bloggs",
                                               },
                                               "username": "foo@example.com",
                                             }
                                           }
                                         />,
-                                        "searchKey": "janedoe@example.com jane doe",
+                                        "searchKey": "janebloggs@example.com jane bloggs",
                                         "value": "user:1",
                                       }
                                     }
@@ -2503,7 +2503,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                         actor={
                                           Object {
                                             "id": "1",
-                                            "name": "Jane Doe",
+                                            "name": "Jane Bloggs",
                                             "type": "user",
                                           }
                                         }
@@ -2514,21 +2514,21 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                           size={28}
                                           user={
                                             Object {
-                                              "email": "janedoe@example.com",
+                                              "email": "janebloggs@example.com",
                                               "flags": Object {
                                                 "newsletter_consent_prompt": false,
                                               },
                                               "hasPasswordAuth": true,
                                               "id": "1",
                                               "isAuthenticated": true,
-                                              "name": "Jane Doe",
+                                              "name": "Jane Bloggs",
                                               "options": Object {
                                                 "timezone": "UTC",
                                               },
                                               "user": Object {
-                                                "email": "janedoe@example.com",
+                                                "email": "janebloggs@example.com",
                                                 "id": "1",
-                                                "name": "Jane Doe",
+                                                "name": "Jane Bloggs",
                                               },
                                               "username": "foo@example.com",
                                             }
@@ -2540,35 +2540,35 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                             size={28}
                                             user={
                                               Object {
-                                                "email": "janedoe@example.com",
+                                                "email": "janebloggs@example.com",
                                                 "flags": Object {
                                                   "newsletter_consent_prompt": false,
                                                 },
                                                 "hasPasswordAuth": true,
                                                 "id": "1",
                                                 "isAuthenticated": true,
-                                                "name": "Jane Doe",
+                                                "name": "Jane Bloggs",
                                                 "options": Object {
                                                   "timezone": "UTC",
                                                 },
                                                 "user": Object {
-                                                  "email": "janedoe@example.com",
+                                                  "email": "janebloggs@example.com",
                                                   "id": "1",
-                                                  "name": "Jane Doe",
+                                                  "name": "Jane Bloggs",
                                                 },
                                                 "username": "foo@example.com",
                                               }
                                             }
                                           >
                                             <BaseAvatar
-                                              gravatarId="janedoe@example.com"
+                                              gravatarId="janebloggs@example.com"
                                               hasTooltip={true}
-                                              letterId="janedoe@example.com"
+                                              letterId="janebloggs@example.com"
                                               round={true}
                                               size={28}
                                               style={Object {}}
-                                              title="Jane Doe"
-                                              tooltip="Jane Doe (janedoe@example.com)"
+                                              title="Jane Bloggs"
+                                              tooltip="Jane Bloggs (janebloggs@example.com)"
                                               type="letter_avatar"
                                               uploadId=""
                                               uploadPath="avatar"
@@ -2577,7 +2577,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                                 containerDisplayMode="inline-block"
                                                 disabled={false}
                                                 position="top"
-                                                title="Jane Doe (janedoe@example.com)"
+                                                title="Jane Bloggs (janebloggs@example.com)"
                                               >
                                                 <Manager>
                                                   <Reference>
@@ -2622,14 +2622,14 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                                               }
                                                             >
                                                               <LetterAvatar
-                                                                displayName="Jane Doe"
-                                                                identifier="janedoe@example.com"
+                                                                displayName="Jane Bloggs"
+                                                                identifier="janebloggs@example.com"
                                                                 round={true}
                                                               >
                                                                 <Component
                                                                   className="css-vyy37i-LetterAvatar e12lgfev0"
-                                                                  displayName="Jane Doe"
-                                                                  identifier="janedoe@example.com"
+                                                                  displayName="Jane Bloggs"
+                                                                  identifier="janebloggs@example.com"
                                                                   round={true}
                                                                 >
                                                                   <svg
@@ -2637,7 +2637,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                                                     viewBox="0 0 120 120"
                                                                   >
                                                                     <rect
-                                                                      fill="#f868bc"
+                                                                      fill="#4e3fb4"
                                                                       height="120"
                                                                       rx="15"
                                                                       ry="15"
@@ -2657,7 +2657,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                                                       x="50%"
                                                                       y="50%"
                                                                     >
-                                                                      JD
+                                                                      JB
                                                                     </text>
                                                                   </svg>
                                                                 </Component>
diff --git a/tests/js/spec/views/ruleBuilder.spec.jsx b/tests/js/spec/views/ruleBuilder.spec.jsx
index bf793f241e..264df6f84f 100644
--- a/tests/js/spec/views/ruleBuilder.spec.jsx
+++ b/tests/js/spec/views/ruleBuilder.spec.jsx
@@ -15,12 +15,12 @@ describe('RuleBuilder', function() {
   let handleAdd;
   const USER_1 = TestStubs.User({
     id: '1',
-    name: 'Jane Doe',
-    email: 'janedoe@example.com',
+    name: 'Jane Bloggs',
+    email: 'janebloggs@example.com',
     user: {
       id: '1',
-      name: 'Jane Doe',
-      email: 'janedoe@example.com',
+      name: 'Jane Bloggs',
+      email: 'janebloggs@example.com',
     },
   });
   const USER_2 = TestStubs.User({
@@ -146,7 +146,7 @@ describe('RuleBuilder', function() {
         .prop('user').id
     ).toBe('2');
 
-    // Enter to select Jane Doe
+    // Enter to select Jane Bloggs
     wrapper.find('SelectOwners .Select-control').simulate('keyDown', {keyCode: 13});
 
     const ruleCandidate = wrapper.find('RuleCandidate').first();
diff --git a/tests/sentry/deletions/test_event.py b/tests/sentry/deletions/test_event.py
index 004955428c..83353b51b2 100644
--- a/tests/sentry/deletions/test_event.py
+++ b/tests/sentry/deletions/test_event.py
@@ -20,7 +20,7 @@ class DeleteEventTest(TestCase):
             name="hello.png",
         )
         UserReport.objects.create(
-            event_id=event.event_id, project_id=event.project_id, name="Jane Doe"
+            event_id=event.event_id, project_id=event.project_id, name="Jane Bloggs"
         )
         assert nodestore.get(node_id) is not None
         deletion = ScheduledDeletion.schedule(event, days=0)
diff --git a/tests/sentry/lang/native/test_unreal.py b/tests/sentry/lang/native/test_unreal.py
index 3e88cf79bf..6a0d9cc284 100644
--- a/tests/sentry/lang/native/test_unreal.py
+++ b/tests/sentry/lang/native/test_unreal.py
@@ -81,7 +81,7 @@ class UnrealIntegrationTest(TestCase):
         assert event["user"]["username"] == expected_username
 
     def test_merge_unreal_context_event_without_user_description(self):
-        expected_username = "Jane Doe"
+        expected_username = "Jane Bloggs"
         context = {"runtime_properties": {"username": expected_username}}
         event = {"event_id": MOCK_EVENT_ID}
         merge_unreal_context_event(context, event, self.project)
diff --git a/tests/sentry/utils/test_letter_avatar.py b/tests/sentry/utils/test_letter_avatar.py
index 2b1d2c7686..2bfdaa6014 100644
--- a/tests/sentry/utils/test_letter_avatar.py
+++ b/tests/sentry/utils/test_letter_avatar.py
@@ -5,9 +5,9 @@ from sentry.utils.avatar import get_letter_avatar
 
 def test_letter_avatar():
     # Test name as display name and email as identifier
-    letter_avatar = get_letter_avatar("Jane Doe", "janedoe@example.com")
-    assert "JD" in letter_avatar
-    assert "#f868bc" in letter_avatar  # pink
+    letter_avatar = get_letter_avatar("Jane Bloggs", "janebloggs@example.com")
+    assert "JB" in letter_avatar
+    assert "#4e3fb4" in letter_avatar  # purple_dark
     assert "svg" in letter_avatar
 
     # Test email as display name and id as identifier
@@ -26,9 +26,9 @@ def test_letter_avatar():
     assert "#57be8c" in letter_avatar  # green
 
     # Test name as display name and email as identifier for html
-    letter_avatar = get_letter_avatar("Jane Doe", "janedoe@example.com", use_svg=False)
-    assert "JD" in letter_avatar
-    assert "#f868bc" in letter_avatar  # pink
+    letter_avatar = get_letter_avatar("Jane Bloggs", "janebloggs@example.com", use_svg=False)
+    assert "JB" in letter_avatar
+    assert "#4e3fb4" in letter_avatar  # purple_dark
     assert "span" in letter_avatar
 
     # Test email as display name and id as identifier for html
diff --git a/tests/sentry/web/frontend/test_error_page_embed.py b/tests/sentry/web/frontend/test_error_page_embed.py
index 56bbf3d2a1..d0268a938d 100644
--- a/tests/sentry/web/frontend/test_error_page_embed.py
+++ b/tests/sentry/web/frontend/test_error_page_embed.py
@@ -93,14 +93,14 @@ class ErrorPageEmbedTest(TestCase):
     def test_submission(self):
         resp = self.client.post(
             self.path_with_qs,
-            {"name": "Jane Doe", "email": "jane@example.com", "comments": "This is an example!"},
+            {"name": "Jane Bloggs", "email": "jane@example.com", "comments": "This is an example!"},
             HTTP_REFERER="http://example.com",
             HTTP_ACCEPT="application/json",
         )
         assert resp.status_code == 200, resp.content
 
         report = UserReport.objects.get()
-        assert report.name == "Jane Doe"
+        assert report.name == "Jane Bloggs"
         assert report.email == "jane@example.com"
         assert report.comments == "This is an example!"
         assert report.event_id == self.event_id
@@ -133,7 +133,7 @@ class ErrorPageEmbedTest(TestCase):
 
         resp = self.client.post(
             path,
-            {"name": "Jane Doe", "email": "jane@example.com", "comments": "This is an example!"},
+            {"name": "Jane Bloggs", "email": "jane@example.com", "comments": "This is an example!"},
             HTTP_REFERER="http://example.com",
             HTTP_ACCEPT="application/json",
         )
@@ -179,7 +179,7 @@ class ErrorPageEmbedEnvironmentTest(TestCase):
         self.login_as(user=self.user)
         response = self.client.post(
             self.path,
-            {"name": "Jane Doe", "email": "jane@example.com", "comments": "This is an example!"},
+            {"name": "Jane Bloggs", "email": "jane@example.com", "comments": "This is an example!"},
             HTTP_REFERER="http://example.com",
         )
 
@@ -190,7 +190,7 @@ class ErrorPageEmbedEnvironmentTest(TestCase):
         self.login_as(user=self.user)
         response = self.client.post(
             self.path,
-            {"name": "Jane Doe", "email": "jane@example.com", "comments": "This is an example!"},
+            {"name": "Jane Bloggs", "email": "jane@example.com", "comments": "This is an example!"},
             HTTP_REFERER="http://example.com",
         )
         self.make_event(environment=self.environment.name, event_id=self.event_id)
