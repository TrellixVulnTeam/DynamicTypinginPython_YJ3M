commit abde5bc5caa3e421afc9bb494dc26f6cff6676cf
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Mar 12 12:55:34 2020 -0700

    chore(ts): Convert actionCreators/account (#17611)

diff --git a/src/sentry/static/sentry/app/actionCreators/account.jsx b/src/sentry/static/sentry/app/actionCreators/account.jsx
deleted file mode 100644
index 33ff108b52..0000000000
--- a/src/sentry/static/sentry/app/actionCreators/account.jsx
+++ /dev/null
@@ -1,37 +0,0 @@
-import {Client} from 'app/api';
-import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
-import ConfigStore from 'app/stores/configStore';
-
-export function disconnectIdentity(identity) {
-  const api = new Client();
-  const request = api.requestPromise(`/users/me/social-identities/${identity.id}/`, {
-    method: 'DELETE',
-  });
-
-  request
-    .then(() => {
-      addSuccessMessage(`Disconnected ${identity.providerLabel}`);
-    })
-    .catch(() => {
-      addErrorMessage('Error disconnecting identity');
-    });
-
-  return request;
-}
-
-export function updateUser(user) {
-  // Ideally we'd fire an action but this is gonna get refactored soon anyway
-  ConfigStore.set('user', user);
-}
-
-export function logout(api) {
-  return api.requestPromise('/auth/', {
-    method: 'DELETE',
-  });
-}
-
-export function removeAuthenticator(api, userId, authId) {
-  return api.requestPromise(`/users/${userId}/authenticators/${authId}/`, {
-    method: 'DELETE',
-  });
-}
diff --git a/src/sentry/static/sentry/app/actionCreators/account.tsx b/src/sentry/static/sentry/app/actionCreators/account.tsx
new file mode 100644
index 0000000000..7051594cd8
--- /dev/null
+++ b/src/sentry/static/sentry/app/actionCreators/account.tsx
@@ -0,0 +1,37 @@
+import {Client} from 'app/api';
+import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
+import ConfigStore from 'app/stores/configStore';
+import {User} from 'app/types';
+
+type Identity = {
+  id: string;
+  providerLabel: string;
+};
+
+export async function disconnectIdentity(identity: Identity) {
+  const api = new Client();
+
+  try {
+    await api.requestPromise(`/users/me/social-identities/${identity.id}/`, {
+      method: 'DELETE',
+    });
+    addSuccessMessage(`Disconnected ${identity.providerLabel}`);
+  } catch {
+    addErrorMessage('Error disconnecting identity');
+  }
+}
+
+export function updateUser(user: User) {
+  // Ideally we'd fire an action but this is gonna get refactored soon anyway
+  ConfigStore.set('user', user);
+}
+
+export function logout(api: Client) {
+  return api.requestPromise('/auth/', {method: 'DELETE'});
+}
+
+export function removeAuthenticator(api: Client, userId: string, authId: string) {
+  return api.requestPromise(`/users/${userId}/authenticators/${authId}/`, {
+    method: 'DELETE',
+  });
+}
