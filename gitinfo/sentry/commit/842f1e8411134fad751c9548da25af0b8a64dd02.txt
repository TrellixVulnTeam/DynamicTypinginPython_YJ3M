commit 842f1e8411134fad751c9548da25af0b8a64dd02
Author: David Cramer <cramer@dropbox.com>
Date:   Wed Jun 11 13:07:47 2014 -0700

    Correctly handle recovery of users with invalid passwords

diff --git a/src/sentry/utils/auth.py b/src/sentry/utils/auth.py
index 50d600236c..45855c2cc1 100644
--- a/src/sentry/utils/auth.py
+++ b/src/sentry/utils/auth.py
@@ -22,12 +22,15 @@ def get_auth_providers():
     ]
 
 
-def find_users(username):
+def find_users(username, with_valid_password=True):
     """
     Return a list of users that match a username
     and falling back to email
     """
-    qs = User.objects.exclude(password='!')
+    qs = User.objects
+    if with_valid_password:
+        qs = qs.exclude(password='!')
+
     try:
         # First, assume username is an iexact match for username
         user = qs.get(username__iexact=username)
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index dc5f99d06e..05bdf565e5 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -160,7 +160,7 @@ class RecoverPasswordForm(CaptchaForm):
     def clean_user(self):
         value = self.cleaned_data.get('user')
         if value:
-            users = find_users(value)
+            users = find_users(value, with_valid_password=False)
             if not users:
                 raise forms.ValidationError(_("We were unable to find a matching user."))
             if len(users) > 1:
