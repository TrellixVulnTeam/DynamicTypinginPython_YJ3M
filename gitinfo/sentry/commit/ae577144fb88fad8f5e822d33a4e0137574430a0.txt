commit ae577144fb88fad8f5e822d33a4e0137574430a0
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 14 19:05:47 2014 +0100

    Add sentry.flash (alert messages)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index f6ac99acfb..0828f04be6 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -429,6 +429,7 @@ SENTRY_STATIC_BUNDLES = {
 
                 "sentry/app/modules/charts.js",
                 "sentry/app/modules/collection.js",
+                "sentry/app/modules/flash.js",
                 "sentry/app/modules/forms.js",
 
                 "sentry/app/controllers/default.js",
diff --git a/src/sentry/static/sentry/app.js b/src/sentry/static/sentry/app.js
index a92b1aa6ad..27cefc7758 100644
--- a/src/sentry/static/sentry/app.js
+++ b/src/sentry/static/sentry/app.js
@@ -3,6 +3,7 @@ var SentryApp = angular.module('sentry', [
 
   'sentry.charts',
   'sentry.collection',
+  'sentry.flash',
   'sentry.forms',
 
   'sentry.directives.assigneeSelector',
diff --git a/src/sentry/static/sentry/app/modules/flash.js b/src/sentry/static/sentry/app/modules/flash.js
new file mode 100644
index 0000000000..e7412c03a8
--- /dev/null
+++ b/src/sentry/static/sentry/app/modules/flash.js
@@ -0,0 +1,84 @@
+(function(){
+  'use strict';
+
+  angular.module('sentry.flash', [])
+    .factory('flash', [
+      '$rootScope', '$timeout',
+      function($rootScope, $timeout){
+        var messages = [],
+            reset;
+
+        var cleanup = function() {
+          $timeout.cancel(reset);
+          reset = $timeout(function() {
+            messages = [];
+          });
+        };
+
+        var emit = function() {
+          $rootScope.$emit('flash:message', messages, cleanup);
+        };
+
+        $rootScope.$on('$routeChangeSuccess', emit);
+
+        var getLevelTypeName = function(level) {
+          if (level == 'error') {
+            return 'danger';
+          } else {
+            return level;
+          }
+        };
+
+        var asMessage = function(level, text) {
+          if (text === undefined) {
+            text = level;
+            level = 'success';
+          }
+          return {
+            type: getLevelTypeName(level),
+            text: text
+          };
+        };
+
+        var asArrayOfMessages = function(level, text) {
+          if (level instanceof Array) return level.map(function(message) {
+            return message.text ? message : asMessage(message);
+          });
+          return [asMessage(level, text)];
+        };
+
+        return function(level, text) {
+          emit(messages = asArrayOfMessages(level, text));
+        };
+      }
+    ])
+    .directive('flashMessages', function() {
+      return {
+        restrict: 'E',
+        replace: true,
+        template:
+          '<ol class="alert-list" id="flash-messages">' +
+            '<li ng-repeat="m in messages" class="alert alert-{{m.type}} alert-dismissable">' +
+              '<div class="container">' +
+                '<button type="button" class="close" ng-click=close($index)>&times;</button>' +
+                '{{m.text}}' +
+              '</div>' +
+            '</li>' +
+          '</ol>',
+        controller: function($scope, $rootScope) {
+          $scope.close = function(index){
+            $scope.messages.splice(index, 1);
+          };
+
+          $rootScope.$on('flash:message', function(_, messages, done) {
+            $scope.messages = messages;
+            done();
+          });
+
+          $rootScope.$on('$stateChangeSuccess', function(_u1, _u2, $stateParams){
+            $scope.messages = [];
+          });
+        }
+      };
+    });
+}());
diff --git a/src/sentry/templates/sentry/partial/alerts.html b/src/sentry/templates/sentry/partial/alerts.html
index 48a1ae2e25..c808bb5f6a 100644
--- a/src/sentry/templates/sentry/partial/alerts.html
+++ b/src/sentry/templates/sentry/partial/alerts.html
@@ -1,4 +1,5 @@
 {% load sentry_helpers %}
+<flash-messages></flash-messages>
 {% if messages %}
 <div id="messages">
     {% for message in messages %}
