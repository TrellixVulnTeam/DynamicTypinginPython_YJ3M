commit 1a3e684693fd25e2df8b7ff8ae85c5ca7e1e03b6
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Mar 19 16:31:09 2018 -0700

    fix(environments): Prevent user reports fetching twice when env changes (#7695)

diff --git a/src/sentry/static/sentry/app/views/projectUserReports.jsx b/src/sentry/static/sentry/app/views/projectUserReports.jsx
index 4cd0a710da..5e164525fa 100644
--- a/src/sentry/static/sentry/app/views/projectUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReports.jsx
@@ -1,8 +1,9 @@
-import jQuery from 'jquery';
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import {browserHistory, Link} from 'react-router';
+import qs from 'query-string';
+import {omit, isEqual} from 'lodash';
 import SentryTypes from '../proptypes';
 import ApiMixin from '../mixins/apiMixin';
 import GroupStore from '../stores/groupStore';
@@ -52,7 +53,11 @@ const ProjectUserReports = createReactClass({
   },
 
   componentWillReceiveProps(nextProps) {
-    if (nextProps.location.search !== this.props.location.search) {
+    // Ignore changes to environment term since this is handled separately
+    const nextSearchTerm = omit(qs.parse(nextProps.location.search), 'environment');
+    const thisSearchTerm = omit(qs.parse(this.props.location.search), 'environment');
+
+    if (!isEqual(nextSearchTerm, thisSearchTerm)) {
       this.setState(this.getQueryStringState(nextProps), this.fetchData);
     }
 
@@ -96,11 +101,20 @@ const ProjectUserReports = createReactClass({
       error: false,
     });
 
-    const query = this.state.environment
-      ? {environment: this.state.environment.name}
-      : null;
+    let params = this.props.params;
+
+    let query = {
+      ...this.props.location.query,
+      limit: 50,
+      query: this.state.query,
+      status: this.state.status,
+    };
+
+    if (this.state.environment) {
+      query.environment = this.state.environment.name;
+    }
 
-    this.api.request(this.getEndpoint(), {
+    this.api.request(`/projects/${params.orgId}/${params.projectId}/user-reports/`, {
       query,
       success: (data, _, jqXHR) => {
         let issues = data.map(r => r.issue);
@@ -121,20 +135,6 @@ const ProjectUserReports = createReactClass({
     });
   },
 
-  getEndpoint() {
-    let params = this.props.params;
-    let queryParams = {
-      ...this.props.location.query,
-      limit: 50,
-      query: this.state.query,
-      status: this.state.status,
-    };
-
-    return `/projects/${params.orgId}/${params.projectId}/user-reports/?${jQuery.param(
-      queryParams
-    )}`;
-  },
-
   getUserReportsUrl() {
     let params = this.props.params;
 
