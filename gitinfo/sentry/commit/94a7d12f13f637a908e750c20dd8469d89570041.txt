commit 94a7d12f13f637a908e750c20dd8469d89570041
Author: Dan Fuller <dfuller@sentry.io>
Date:   Wed Jul 31 16:52:14 2019 -0700

    feat(api): Include alert rule in detailed incident serializer, if an alert rule exists.
    
    This includes details about the alert rule that created an incident in `DetailedIncidentSerializer`,
    or null if no alert rule was involved.

diff --git a/src/sentry/api/serializers/models/incident.py b/src/sentry/api/serializers/models/incident.py
index bb27680784..a81478d3bf 100644
--- a/src/sentry/api/serializers/models/incident.py
+++ b/src/sentry/api/serializers/models/incident.py
@@ -18,6 +18,7 @@ from sentry.incidents.models import (
     IncidentSeen,
     IncidentSubscription,
 )
+from sentry.utils.db import attach_foreignkey
 
 
 @register(Incident)
@@ -67,6 +68,7 @@ class DetailedIncidentSerializer(IncidentSerializer):
             user=user,
             **kwargs
         )
+        attach_foreignkey(item_list, Incident.alert_rule)
         subscribed_incidents = set()
         if user.is_authenticated():
             subscribed_incidents = set(IncidentSubscription.objects.filter(
@@ -111,5 +113,6 @@ class DetailedIncidentSerializer(IncidentSerializer):
         context['seenBy'] = seen_list['seen_by']
         context['hasSeen'] = seen_list['has_seen']
         context['groups'] = attrs['groups']
+        context['alertRule'] = serialize(obj.alert_rule, user)
 
         return context
diff --git a/tests/sentry/api/serializers/test_incident.py b/tests/sentry/api/serializers/test_incident.py
index 560a720b82..338dd3f22e 100644
--- a/tests/sentry/api/serializers/test_incident.py
+++ b/tests/sentry/api/serializers/test_incident.py
@@ -10,8 +10,15 @@ from freezegun import freeze_time
 
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.incident import DetailedIncidentSerializer
-from sentry.incidents.logic import subscribe_to_incident
-from sentry.incidents.models import IncidentGroup
+from sentry.incidents.logic import (
+    create_alert_rule,
+    subscribe_to_incident,
+)
+from sentry.incidents.models import (
+    AlertRuleAggregations,
+    AlertRuleThresholdType,
+    IncidentGroup,
+)
 from sentry.testutils import TestCase
 
 
@@ -57,3 +64,28 @@ class DetailedIncidentSerializerTest(TestCase):
         IncidentGroup.objects.create(incident=incident, group=self.group)
         result = serialize(incident, serializer=serializer)
         assert result['groups'] == [six.text_type(self.group.id)]
+
+    def test_no_alert_rule(self):
+        incident = self.create_incident()
+        serializer = DetailedIncidentSerializer()
+        result = serialize(incident, serializer=serializer)
+        assert result['alertRule'] is None
+
+    def test_alert_rule(self):
+        incident = self.create_incident()
+        alert_rule = create_alert_rule(
+            self.project,
+            'hi',
+            AlertRuleThresholdType.ABOVE,
+            'test query',
+            [AlertRuleAggregations.TOTAL],
+            10,
+            1000,
+            400,
+            1,
+        )
+        incident.update(alert_rule=alert_rule)
+
+        serializer = DetailedIncidentSerializer()
+        result = serialize(incident, serializer=serializer)
+        assert result['alertRule'] == serialize(alert_rule)
