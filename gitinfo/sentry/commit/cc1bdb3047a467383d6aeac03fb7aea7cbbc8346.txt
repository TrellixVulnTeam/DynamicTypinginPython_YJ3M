commit cc1bdb3047a467383d6aeac03fb7aea7cbbc8346
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Nov 7 10:48:55 2018 -0800

    ref(discard-delete): Use Feature component w/ hook (#10325)
    
    Refactors the discard and delete action in groupActions to use the
    Feature component.
    
    The renderDisabled render prop is expected to be overridden by a hook
    registered in the HookStore for sentry.io SASS upsells.

diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 0a54a92b0d..f69b625e2d 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -1,29 +1,31 @@
 import {browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
+import FeatureDisabled from 'app/components/acl/featureDisabled';
+import {openModal} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
 import ApiMixin from 'app/mixins/apiMixin';
+import Button from 'app/components/button';
 import DropdownLink from 'app/components/dropdownLink';
+import Feature from 'app/components/acl/feature';
 import GroupActions from 'app/actions/groupActions';
 import GroupState from 'app/mixins/groupState';
+import GuideAnchor from 'app/components/assistant/guideAnchor';
 import HookStore from 'app/stores/hookStore';
+import IgnoreActions from 'app/components/actions/ignore';
 import IndicatorStore from 'app/stores/indicatorStore';
 import IssuePluginActions from 'app/components/group/issuePluginActions';
-import GuideAnchor from 'app/components/assistant/guideAnchor';
 import LinkWithConfirmation from 'app/components/linkWithConfirmation';
 import MenuItem from 'app/components/menuItem';
-import ShareIssue from 'app/components/shareIssue';
-
 import ResolveActions from 'app/components/actions/resolve';
-import IgnoreActions from 'app/components/actions/ignore';
+import ShareIssue from 'app/components/shareIssue';
+import space from 'app/styles/space';
 
 class DeleteActions extends React.Component {
   static propTypes = {
     organization: PropTypes.object.isRequired,
-    project: PropTypes.object.isRequired,
     onDelete: PropTypes.func.isRequired,
     onDiscard: PropTypes.func.isRequired,
   };
@@ -35,37 +37,50 @@ class DeleteActions extends React.Component {
     };
   }
 
-  renderDisabledDiscard = () => {
-    let {project, organization} = this.props;
-    return this.state.hooksDisabled.map(hook => hook(organization, project));
-  };
+  renderDiscardDisabled = ({children, ...props}) =>
+    children({
+      ...props,
+      renderDisabled: ({features}) => (
+        <FeatureDisabled alert featureName="Discard and Delete" feature={features[0]} />
+      ),
+    });
 
-  renderDiscard = () => {
-    return (
-      <DropdownLink caret={true} className="group-delete btn btn-default btn-sm">
-        <li>
-          <LinkWithConfirmation
-            title={t('Discard')}
-            message={t(
+  renderDiscardModal = ({Body, closeModal}) => (
+    <Feature
+      features={['discard-groups']}
+      organization={this.props.organization}
+      renderDisabled={this.renderDiscardDisabled}
+    >
+      {({hasFeature, renderDisabled, ...props}) => (
+        <React.Fragment>
+          <Body>
+            {!hasFeature && renderDisabled({hasFeature, ...props})}
+            {t(
               'Discarding this event will result in the deletion ' +
                 'of most data associated with this issue and future ' +
                 'events being discarded before reaching your stream. ' +
                 'Are you sure you wish to continue?'
             )}
-            onConfirm={this.props.onDiscard}
-          >
-            <GuideAnchor type="text" target="delete_discard" />
-            <span>{t('Delete and discard future events')}</span>
-          </LinkWithConfirmation>
-        </li>
-      </DropdownLink>
-    );
-  };
+          </Body>
+          <div className="modal-footer">
+            <Button onClick={closeModal}>{t('Cancel')}</Button>
+            <Button
+              style={{marginLeft: space(1)}}
+              priority="primary"
+              onClick={this.props.onDiscard}
+              disabled={!hasFeature}
+            >
+              {t('Discard Future Events')}
+            </Button>
+          </div>
+        </React.Fragment>
+      )}
+    </Feature>
+  );
 
-  render() {
-    let features = new Set(this.props.project.features);
-    let hasDiscard = features.has('discard-groups');
+  openDiscardModal = () => openModal(this.renderDiscardModal);
 
+  render() {
     return (
       <div className="btn-group">
         <LinkWithConfirmation
@@ -79,7 +94,12 @@ class DeleteActions extends React.Component {
           <span className="icon-trash" />
           <GuideAnchor type="text" target="ignore_delete_discard" />
         </LinkWithConfirmation>
-        {hasDiscard ? this.renderDiscard() : this.renderDisabledDiscard()}
+        <DropdownLink caret={true} className="group-delete btn btn-default btn-sm">
+          <MenuItem onClick={this.openDiscardModal}>
+            <GuideAnchor type="text" target="delete_discard" />
+            <span>{t('Delete and discard future events')}</span>
+          </MenuItem>
+        </DropdownLink>
       </div>
     );
   }
@@ -248,7 +268,6 @@ const GroupDetailsActions = createReactClass({
           </a>
         </div>
         <DeleteActions
-          project={project}
           organization={org}
           onDelete={this.onDelete}
           onDiscard={this.onDiscard}
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
index b21f882a19..758aede8f6 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
@@ -61,43 +61,6 @@ exports[`GroupActions render() renders correctly 1`] = `
         "teams": Array [],
       }
     }
-    project={
-      Object {
-        "allowedDomains": Array [
-          "example.com",
-          "https://example.com",
-        ],
-        "dataScrubber": false,
-        "dataScrubberDefaults": false,
-        "digestsMaxDelay": 60,
-        "digestsMinDelay": 5,
-        "features": Array [],
-        "hasAccess": true,
-        "id": "2448",
-        "isBookmarked": false,
-        "isMember": true,
-        "name": "project name",
-        "resolveAge": 48,
-        "safeFields": Array [
-          "business-email",
-          "company",
-        ],
-        "scrapeJavaScript": true,
-        "scrubIPAddresses": false,
-        "securityToken": "security-token",
-        "securityTokenHeader": "x-security-header",
-        "sensitiveFields": Array [
-          "creditcard",
-          "ssn",
-        ],
-        "slug": "project",
-        "storeCrashReports": false,
-        "subjectPrefix": "[my-org]",
-        "subjectTemplate": "[$project] \${tag:level}: $title",
-        "teams": Array [],
-        "verifySSL": true,
-      }
-    }
   />
 </div>
 `;
