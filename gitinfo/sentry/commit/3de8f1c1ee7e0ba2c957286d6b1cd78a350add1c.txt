commit 3de8f1c1ee7e0ba2c957286d6b1cd78a350add1c
Author: Jan Michael Auer <jan.auer@sentry.io>
Date:   Thu Apr 23 17:08:06 2020 +0200

    feat(filters): Add an IE11 inbound data filter (#18434)
    
    Adds an inbound data filter setting for IE11, which is executed by
    Relay.

diff --git a/src/sentry/message_filters.py b/src/sentry/message_filters.py
index bd42d2ceec..b60b7e940b 100644
--- a/src/sentry/message_filters.py
+++ b/src/sentry/message_filters.py
@@ -377,6 +377,7 @@ class _LegacyBrowserFilterSerializer(serializers.Serializer):
             "ie_pre_9",
             "ie9",
             "ie10",
+            "ie11",
             "opera_pre_15",
             "android_pre_4",
             "safari_pre_6",
@@ -474,6 +475,10 @@ def _filter_opera_mini_pre_8(browser):
     return False
 
 
+def _filter_ie11(browser):
+    return _filter_ie_internal(browser, lambda major_ver: major_ver == 11)
+
+
 def _filter_ie10(browser):
     return _filter_ie_internal(browser, lambda major_ver: major_ver == 10)
 
@@ -507,6 +512,7 @@ _legacy_browsers_sub_filters = {
     "opera_mini_pre_8": _filter_opera_mini_pre_8,
     "ie9": _filter_ie9,
     "ie10": _filter_ie10,
+    "ie11": _filter_ie11,
     "ie_pre_9": _filter_ie_pre_9,
 }
 
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersSettings.jsx b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersSettings.jsx
index 4d7ea3566f..a3e6308341 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersSettings.jsx
@@ -39,6 +39,11 @@ const LEGACY_BROWSER_SUBFILTERS = {
     helpText: 'Version 10',
     title: 'Internet Explorer',
   },
+  ie11: {
+    icon: 'internet-explorer',
+    helpText: 'Version 11',
+    title: 'Internet Explorer',
+  },
   safari_pre_6: {
     icon: 'safari',
     helpText: 'Version 5 and lower',
diff --git a/tests/js/spec/views/projectFilters.spec.jsx b/tests/js/spec/views/projectFilters.spec.jsx
index fd3851dec3..0c896782be 100644
--- a/tests/js/spec/views/projectFilters.spec.jsx
+++ b/tests/js/spec/views/projectFilters.spec.jsx
@@ -132,7 +132,7 @@ describe('ProjectFilters', function() {
     expect(Array.from(mock.mock.calls[0][1].data.subfilters)).toEqual([
       'ie_pre_9',
       'ie9',
-      'opera_pre_15',
+      'safari_pre_6',
     ]);
 
     // Toggle filter off
@@ -143,8 +143,8 @@ describe('ProjectFilters', function() {
     expect(Array.from(mock.mock.calls[1][1].data.subfilters)).toEqual([
       'ie_pre_9',
       'ie9',
-      'opera_pre_15',
       'safari_pre_6',
+      'ie11',
     ]);
 
     mock.mockReset();
@@ -160,8 +160,8 @@ describe('ProjectFilters', function() {
       .simulate('click');
 
     expect(Array.from(mock.mock.calls[1][1].data.subfilters)).toEqual([
-      'opera_pre_15',
       'safari_pre_6',
+      'ie11',
     ]);
   });
 
@@ -178,6 +178,7 @@ describe('ProjectFilters', function() {
       'ie_pre_9',
       'ie9',
       'ie10',
+      'ie11',
       'safari_pre_6',
       'opera_pre_15',
       'opera_mini_pre_8',
