commit 3d5af440a3b5a273c7bfe40b768c54a120c4215c
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Tue Aug 15 13:22:17 2017 -0700

    Parse full BitBucket repo urls (#5879)

diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 49dc0c30b5..6765ec9b58 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -222,7 +222,9 @@ export function formatBytes(bytes) {
 }
 
 export function getShortVersion(version) {
-  let match = version.match(/^(?:[a-zA-Z][a-zA-Z0-9-]+)(?:\.[a-zA-Z][a-zA-Z0-9-]+)+-(.*)$/);
+  let match = version.match(
+    /^(?:[a-zA-Z][a-zA-Z0-9-]+)(?:\.[a-zA-Z][a-zA-Z0-9-]+)+-(.*)$/
+  );
   if (match) {
     version = match[1];
   }
@@ -232,15 +234,14 @@ export function getShortVersion(version) {
   return version;
 }
 
-export function parseGitHubRepo(repo) {
-  if (repo) {
-    let re = /github\.com\/([^\/]+\/[^\/]+)/i;
+export function parseRepo(repo) {
+  if (!repo) {
+    return repo;
+  } else {
+    let re = /(?:github\.com|bitbucket\.org)\/([^\/]+\/[^\/]+)/i;
     let match = repo.match(re);
-    let parsedRepo;
-    match ? (parsedRepo = match[1]) : (parsedRepo = repo);
+    let parsedRepo = match ? match[1] : repo;
     return parsedRepo;
-  } else {
-    return repo;
   }
 }
 
diff --git a/src/sentry/static/sentry/app/views/organizationRepositories.jsx b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
index 0d1c9ccd94..c2246e44f7 100644
--- a/src/sentry/static/sentry/app/views/organizationRepositories.jsx
+++ b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
@@ -10,7 +10,7 @@ import MenuItem from '../components/menuItem';
 import OrganizationHomeContainer from '../components/organizations/homeContainer';
 import PluginComponentBase from '../components/bases/pluginComponentBase';
 import {t, tct} from '../locale';
-import {sortArray, parseGitHubRepo} from '../utils';
+import {sortArray, parseRepo} from '../utils';
 
 const UNKNOWN_ERROR = {
   error_type: 'unknown'
@@ -51,9 +51,8 @@ class AddRepositoryLink extends PluginComponentBase {
 
   onSubmit() {
     // TODO(dcramer): set form saving state
-    let repoName = this.props.provider.id === 'github'
-      ? {name: parseGitHubRepo(this.state.formData.name)}
-      : this.state.formData;
+    let repoName = {name: parseRepo(this.state.formData.name)};
+
     this.setState(
       {
         state: FormState.SAVING
@@ -94,7 +93,9 @@ class AddRepositoryLink extends PluginComponentBase {
       <form onSubmit={this.formSubmit}>
         {errors.__all__ &&
           <div className="alert alert-error alert-block" key="_errors">
-            <p>{errors.__all__}</p>
+            <p>
+              {errors.__all__}
+            </p>
           </div>}
         {provider.config.map(field => {
           return (
@@ -157,7 +158,9 @@ class AddRepositoryLink extends PluginComponentBase {
     return (
       <Modal show={this.state.isModalOpen} animation={false}>
         <div className="modal-header">
-          <h4>{t('Add Repository')}</h4>
+          <h4>
+            {t('Add Repository')}
+          </h4>
         </div>
         <div className="modal-body">
           {this.renderBody()}
@@ -348,7 +351,9 @@ const OrganizationRepositories = React.createClass({
             })}
           </DropdownLink>
         </div>
-        <h3 className="m-b-2">{t('Repositories')}</h3>
+        <h3 className="m-b-2">
+          {t('Repositories')}
+        </h3>
         {itemList.length > 0 &&
           <div className="m-b-2">
             <p>
@@ -371,22 +376,29 @@ const OrganizationRepositories = React.createClass({
                     return (
                       <tr key={repo.id}>
                         <td>
-                          <strong>{repo.name}</strong>
+                          <strong>
+                            {repo.name}
+                          </strong>
                           {repo.status !== 'visible' &&
-                            <small> — {this.getStatusLabel(repo)}</small>}
+                            <small>
+                              {' '}— {this.getStatusLabel(repo)}
+                            </small>}
                           {repo.status === 'pending_deletion' &&
                             <small>
-                              {' '}
-                              (
+                              {' '}(
                               <a onClick={this.cancelDelete.bind(this, repo)}>
                                 {t('Cancel')}
                               </a>
                               )
                             </small>}
                           <br />
-                          <small>{repo.provider.name}</small>
+                          <small>
+                            {repo.provider.name}
+                          </small>
                           {repo.url &&
-                            <small> — <a href={repo.url}>{repo.url}</a></small>}
+                            <small>
+                              {' '}— <a href={repo.url}>{repo.url}</a>
+                            </small>}
                         </td>
                         <td style={{width: 60}}>
                           {repo.status === 'visible'
@@ -410,7 +422,9 @@ const OrganizationRepositories = React.createClass({
             </div>
           : <div className="well blankslate align-center p-x-2 p-y-1">
               <div className="icon icon-lg icon-git-commit" />
-              <h3>{t('Sentry is better with commit data')}</h3>
+              <h3>
+                {t('Sentry is better with commit data')}
+              </h3>
               <p>
                 {t(
                   'Adding one or more repositories will enable enhanced releases and the ability to resolve Sentry Issues via git message.'
diff --git a/tests/js/spec/utils/utils.spec.jsx b/tests/js/spec/utils/utils.spec.jsx
index 6fe5ec54fc..d38d83487f 100644
--- a/tests/js/spec/utils/utils.spec.jsx
+++ b/tests/js/spec/utils/utils.spec.jsx
@@ -1,4 +1,4 @@
-import {valueIsEqual, extractMultilineFields, parseGitHubRepo} from 'app/utils';
+import {valueIsEqual, extractMultilineFields, parseRepo} from 'app/utils';
 
 describe('utils.valueIsEqual', function() {
   it('should return true when objects are deeply equal', function() {
@@ -129,29 +129,36 @@ five`
   });
 });
 
-describe('utils.parseGitHubRepo', function() {
+describe('utils.parseRepo', function() {
   it('should work for simple github url', function() {
-    expect(parseGitHubRepo('github.com/example/example')).toEqual('example/example');
+    expect(parseRepo('github.com/example/example')).toEqual('example/example');
   });
   it('should work for full github url', function() {
-    expect(parseGitHubRepo('https://github.com/example/example')).toEqual(
-      'example/example'
-    );
+    expect(parseRepo('https://github.com/example/example')).toEqual('example/example');
+  });
+  it('should work for trailing slash', function() {
+    expect(parseRepo('https://github.com/example/example/')).toEqual('example/example');
+  });
+  it('should work for simple BitBucket url', function() {
+    expect(parseRepo('bitbucket.org/example/example')).toEqual('example/example');
+  });
+  it('should work for full BitBucket url', function() {
+    expect(parseRepo('https://bitbucket.org/example/example')).toEqual('example/example');
   });
   it('should work for trailing slash', function() {
-    expect(parseGitHubRepo('https://github.com/example/example/')).toEqual(
+    expect(parseRepo('https://bitbucket.org/example/example/')).toEqual(
       'example/example'
     );
   });
   it('should work for repo only', function() {
-    expect(parseGitHubRepo('example/example')).toEqual('example/example');
+    expect(parseRepo('example/example')).toEqual('example/example');
   });
   it('should parse repo from url with extra info', function() {
-    expect(parseGitHubRepo('github.com/example/example/commits/adsadsa')).toEqual(
+    expect(parseRepo('github.com/example/example/commits/adsadsa')).toEqual(
       'example/example'
     );
     it('should work for nothing passed', function() {
-      expect(parseGitHubRepo().toEqual());
+      expect(parseRepo().toEqual());
     });
   });
 });
