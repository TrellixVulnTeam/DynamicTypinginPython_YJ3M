commit e39fbcc78975bbff9d1728903cc464d3e7168bea
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Dec 13 17:03:02 2017 -0800

    test: Add tests for project settings component

diff --git a/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
index 1afcb91f66..062f8cef17 100644
--- a/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
@@ -76,7 +76,8 @@ export default class ProjectGeneralSettings extends AsyncView {
     let {orgId, projectId} = this.props.params;
 
     let project = this.state.data;
-    let isProjectAdmin = getOrganizationState(this.props.organization)
+
+    let isProjectAdmin = getOrganizationState(this.context.organization)
       .getAccess()
       .has('project:admin');
 
@@ -113,7 +114,7 @@ export default class ProjectGeneralSettings extends AsyncView {
     let {orgId, projectId} = this.props.params;
 
     let project = this.state.data;
-    let isProjectAdmin = getOrganizationState(this.props.organization)
+    let isProjectAdmin = getOrganizationState(this.context.organization)
       .getAccess()
       .has('project:admin');
 
diff --git a/tests/js/spec/views/__snapshots__/projectGeneralSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectGeneralSettings.spec.jsx.snap
new file mode 100644
index 0000000000..c0dc85421a
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/projectGeneralSettings.spec.jsx.snap
@@ -0,0 +1,409 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`projectGeneralSettings renders 1`] = `
+<DocumentTitle
+  title="Sentry"
+>
+  <div>
+    <h2>
+      Project Settings
+    </h2>
+    <ApiForm
+      apiEndpoint="/projects/org-slug/project-slug/"
+      apiMethod="PUT"
+      cancelLabel="Cancel"
+      className="form-stacked"
+      footerClass="form-actions align-right"
+      initialData={
+        Object {
+          "allowedDomains": undefined,
+          "dataScrubber": undefined,
+          "dataScrubberDefaults": undefined,
+          "defaultEnvironment": undefined,
+          "name": "Project Name",
+          "resolveAge": undefined,
+          "safeFields": undefined,
+          "scrapeJavaScript": undefined,
+          "scrubIPAddresses": undefined,
+          "securityHeader": undefined,
+          "securityToken": undefined,
+          "securityTokenHeader": undefined,
+          "sensitiveFields": undefined,
+          "slug": "project-slug",
+          "subjectPrefix": undefined,
+          "team": undefined,
+          "verifySSL": undefined,
+        }
+      }
+      onSubmitSuccess={[Function]}
+      requireChanges={false}
+      submitDisabled={false}
+      submitLabel="Save Changes"
+    >
+      <div
+        className="box"
+      >
+        <div
+          className="box-header"
+        >
+          <h3>
+            Project Details
+          </h3>
+        </div>
+        <div
+          className="box-content with-padding"
+        >
+          <TextField
+            disabled={false}
+            hideErrorMessage={false}
+            label="Project Name"
+            name="name"
+            placeholder="e.g. My Service Name"
+            required={true}
+          />
+          <TextField
+            disabled={false}
+            help="A unique ID used to identify this project."
+            hideErrorMessage={false}
+            label="Short name"
+            name="slug"
+            required={true}
+          />
+        </div>
+      </div>
+      <div
+        className="box"
+      >
+        <div
+          className="box-header"
+        >
+          <h3>
+            Email
+          </h3>
+        </div>
+        <div
+          className="box-content with-padding"
+        >
+          <TextField
+            disabled={false}
+            help="Choose a custom prefix for emails from this project."
+            hideErrorMessage={false}
+            label="Subject prefix"
+            name="subjectPrefix"
+            required={false}
+          />
+        </div>
+      </div>
+      <div
+        className="box"
+      >
+        <div
+          className="box-header"
+        >
+          <h3>
+            Event Settings
+          </h3>
+        </div>
+        <div
+          className="box-content with-padding"
+        >
+          <TextField
+            disabled={false}
+            help="The default selected environment when viewing issues."
+            hideErrorMessage={false}
+            label="Default environment"
+            name="defaultEnvironment"
+            placeholder="e.g. production"
+            required={false}
+          />
+          <RangeField
+            allowedValues={
+              Array [
+                0,
+                1,
+                2,
+                3,
+                4,
+                5,
+                6,
+                7,
+                8,
+                9,
+                10,
+                11,
+                12,
+                15,
+                18,
+                21,
+                24,
+                30,
+                36,
+                48,
+                72,
+                96,
+                120,
+                144,
+                168,
+                192,
+                216,
+                240,
+                264,
+                288,
+                312,
+                336,
+                360,
+                384,
+                408,
+                432,
+                456,
+                480,
+                504,
+                528,
+                552,
+                576,
+                600,
+                624,
+                648,
+                672,
+                696,
+                720,
+              ]
+            }
+            disabled={false}
+            formatLabel={[Function]}
+            help="Automatically resolve an issue if it hasn't been seen for this amount of time."
+            hideErrorMessage={false}
+            label="Auto resolve"
+            max={720}
+            min={0}
+            name="resolveAge"
+            required={false}
+            snap={true}
+            step={1}
+          />
+          <p>
+            <small>
+              <strong>
+                Note: Enabling auto resolve will immediately resolve anything that has not been seen within this period of time. There is no undo!
+              </strong>
+            </small>
+          </p>
+        </div>
+      </div>
+      <div
+        className="box"
+      >
+        <div
+          className="box-header"
+        >
+          <h3>
+            Data Privacy
+          </h3>
+        </div>
+        <div
+          className="box-content with-padding"
+        >
+          <BooleanField
+            disabled={false}
+            disabledReason="This option is enforced by your organization's settings and cannot be customized per-project."
+            help="Enable server-side data scrubbing."
+            hideErrorMessage={false}
+            label="Data scrubber"
+            name="dataScrubber"
+            required={false}
+            value={null}
+          />
+          <BooleanField
+            disabled={false}
+            disabledReason="This option is enforced by your organization's settings and cannot be customized per-project."
+            help="Apply default scrubbers to prevent things like passwords and credit cards from being stored."
+            hideErrorMessage={false}
+            label="Use default scrubbers"
+            name="dataScrubberDefaults"
+            required={false}
+            value={null}
+          />
+          <ListAsTextareaField
+            disabled={false}
+            help="Additional field names to match against when scrubbing data. Separate multiple entries with a newline."
+            hideErrorMessage={false}
+            label="Additional sensitive fields"
+            name="sensitiveFields"
+            placeholder="e.g. email"
+            required={false}
+          />
+          <ListAsTextareaField
+            disabled={false}
+            help="Field names which data scrubbers should ignore. Separate multiple entries with a newline."
+            hideErrorMessage={false}
+            label="Safe fields"
+            name="safeFields"
+            placeholder="e.g. email"
+            required={false}
+          />
+          <BooleanField
+            disabled={false}
+            disabledReason="This option is enforced by your organization's settings and cannot be customized per-project."
+            help="Prevent IP addresses from being stored for new events."
+            hideErrorMessage={false}
+            label="Don't store IP Addresses"
+            name="scrubIPAddresses"
+            required={false}
+            value={null}
+          />
+        </div>
+      </div>
+      <div
+        className="box"
+      >
+        <div
+          className="box-header"
+        >
+          <h3>
+            Client Security
+          </h3>
+        </div>
+        <div
+          className="box-content with-padding"
+        >
+          <p>
+            <span>
+              <span>
+                Configure origin URLs which Sentry should accept events from. This is used for communication with clients like 
+              </span>
+              <a
+                href="https://github.com/getsentry/raven-js"
+              >
+                raven-js
+              </a>
+              <span>
+                .
+              </span>
+            </span>
+             
+            <span>
+              <span>
+                This will restrict requests based on the 
+              </span>
+              <code>
+                Origin
+              </code>
+              <span>
+                 and 
+              </span>
+              <code>
+                Referer
+              </code>
+              <span>
+                 headers.
+              </span>
+            </span>
+          </p>
+          <ListAsTextareaField
+            disabled={false}
+            help="Separate multiple entries with a newline. Cannot be empty."
+            hideErrorMessage={false}
+            label="Allowed domains"
+            name="allowedDomains"
+            placeholder="e.g. https://example.com or example.com"
+            required={false}
+          />
+          <BooleanField
+            disabled={false}
+            help="Allow Sentry to scrape missing JavaScript source context when possible."
+            hideErrorMessage={false}
+            label="Enable JavaScript source fetching"
+            name="scrapeJavaScript"
+            required={false}
+          />
+          <TextField
+            disabled={false}
+            help="Outbound requests matching Allowed Domains will have the header \\"{token_header}: {token}\\" appended."
+            hideErrorMessage={false}
+            label="Security token"
+            name="securityToken"
+            required={false}
+          />
+          <TextField
+            disabled={false}
+            help="Outbound requests matching Allowed Domains will have the header \\"{token_header}: {token}\\" appended."
+            hideErrorMessage={false}
+            label="Security token header"
+            name="securityTokenHeader"
+            placeholder="e.g. X-Sentry-Token"
+            required={false}
+          />
+          <BooleanField
+            disabled={false}
+            help="Outbound requests will verify TLS (sometimes known as SSL) connections."
+            hideErrorMessage={false}
+            label="Verify TLS/SSL"
+            name="verifySSL"
+            required={false}
+          />
+        </div>
+      </div>
+      <div
+        className="box"
+      >
+        <div
+          className="box-header"
+        >
+          <h3>
+            Remove Project
+          </h3>
+        </div>
+        <div
+          className="box-content with-padding"
+        >
+          <p>
+            <a
+              className="btn btn-danger pull-right"
+              href="/org-slug/project-slug/settings/remove/"
+            >
+              Remove Project
+            </a>
+            Remove the 
+            <strong>
+              project-slug
+            </strong>
+             project and all related data.
+            <br />
+            Careful, this action cannot be undone.
+          </p>
+        </div>
+      </div>
+      <div
+        className="box"
+      >
+        <div
+          className="box-header"
+        >
+          <h3>
+            Transfer Project
+          </h3>
+        </div>
+        <div
+          className="box-content with-padding"
+        >
+          <p>
+            <a
+              className="btn btn-danger pull-right"
+              href="/org-slug/project-slug/settings/transfer/"
+            >
+              Transfer Project
+            </a>
+            Transfer the 
+            <strong>
+              project-slug
+            </strong>
+             project and all related data.
+            <br />
+            Careful, this action cannot be undone.
+          </p>
+        </div>
+      </div>
+    </ApiForm>
+  </div>
+</DocumentTitle>
+`;
diff --git a/tests/js/spec/views/projectGeneralSettings.spec.jsx b/tests/js/spec/views/projectGeneralSettings.spec.jsx
new file mode 100644
index 0000000000..f900487713
--- /dev/null
+++ b/tests/js/spec/views/projectGeneralSettings.spec.jsx
@@ -0,0 +1,85 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+
+import {Client} from 'app/api';
+
+import ProjectGeneralSettings from 'app/views/projectGeneralSettings';
+
+describe('projectGeneralSettings', function() {
+  let org = TestStubs.Organization();
+  let project = TestStubs.Project();
+
+  beforeEach(function() {
+    Client.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/`,
+      method: 'GET',
+      body: project,
+    });
+  });
+
+  it('renders', function() {
+    let component = shallow(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
+      {
+        context: {
+          organization: org,
+        },
+      }
+    );
+    expect(component).toMatchSnapshot();
+  });
+
+  it('disables field with an org override', function() {
+    let component = shallow(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
+      {
+        context: {
+          organization: {
+            ...org,
+            dataScrubber: true,
+          },
+        },
+      }
+    );
+
+    expect(component.find('[name="dataScrubber"]').prop('disabled')).toBe(true);
+  });
+
+  it('project admins can transfer or remove project', function() {
+    let component = shallow(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
+      {
+        context: {
+          organization: org,
+        },
+      }
+    );
+
+    let removeBtn = component.find('a.btn.btn-danger').first();
+    let transferBtn = component.find('a.btn.btn-danger').at(1);
+
+    expect(removeBtn.text()).toBe('Remove Project');
+    expect(transferBtn.text()).toBe('Transfer Project');
+  });
+
+  it('displays transfer/remove message for non-admins', function() {
+    let component = shallow(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
+      {
+        context: {
+          organization: {
+            ...org,
+            access: ['org: read'],
+          },
+        },
+      }
+    );
+
+    expect(component.html()).toContain(
+      'You do not have the required permission to remove this project.'
+    );
+    expect(component.html()).toContain(
+      'You do not have the required permission to transfer this project.'
+    );
+  });
+});
