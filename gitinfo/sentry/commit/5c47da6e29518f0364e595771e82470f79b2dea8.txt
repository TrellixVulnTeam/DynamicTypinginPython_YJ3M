commit 5c47da6e29518f0364e595771e82470f79b2dea8
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jan 19 16:27:07 2013 -0800

    Small refactorings for backbone components

diff --git a/src/sentry/static/sentry/scripts/app.js b/src/sentry/static/sentry/scripts/app.js
index 5013aa727c..8e3dc03d6d 100644
--- a/src/sentry/static/sentry/scripts/app.js
+++ b/src/sentry/static/sentry/scripts/app.js
@@ -68,7 +68,7 @@
                 pollUrl: uri,
                 stream: this.options.stream,
                 realtime: this.options.realtime,
-                model: app.Group
+                model: app.models.Group
             });
         },
 
@@ -93,7 +93,7 @@
                 realtime: ($.cookie('pausestream') ? false : true),
                 canStream: this.options.canStream,
                 pollUrl: app.config.urlPrefix + '/api/' + app.config.projectId + '/poll/',
-                model: app.Group
+                model: app.models.Group
             });
 
             this.control = $('a[data-action=pause]');
@@ -147,7 +147,7 @@
                 className: 'group-list',
                 id: 'event_list',
                 members: [data.group],
-                model: app.Group
+                model: app.models.Group
             });
 
             $('#chart').height('200px');
diff --git a/src/sentry/static/sentry/scripts/collections.js b/src/sentry/static/sentry/scripts/collections.js
index 4d49344a81..5d79c40481 100644
--- a/src/sentry/static/sentry/scripts/collections.js
+++ b/src/sentry/static/sentry/scripts/collections.js
@@ -2,7 +2,6 @@
     "use strict";
 
     app.ScoredList = Backbone.Collection.extend({
-        model: app.Group,
         comparator: function(member){
             return -member.get('score');
         }
diff --git a/src/sentry/static/sentry/scripts/models.js b/src/sentry/static/sentry/scripts/models.js
index 546edc0b8f..59a8c3fded 100644
--- a/src/sentry/static/sentry/scripts/models.js
+++ b/src/sentry/static/sentry/scripts/models.js
@@ -1,7 +1,9 @@
 (function(app, Backbone){
     "use strict";
 
-    app.Group = Backbone.Model.extend({
+    app.models = {};
+
+    app.models.Group = Backbone.Model.extend({
 
         defaults: {
             tags: [],
diff --git a/src/sentry/static/sentry/scripts/views.js b/src/sentry/static/sentry/scripts/views.js
index 331bd59738..a476e0d625 100644
--- a/src/sentry/static/sentry/scripts/views.js
+++ b/src/sentry/static/sentry/scripts/views.js
@@ -137,6 +137,7 @@
 
         emptyMessage: '<p>There is nothing to show here.</p>',
         loadingMessage: '<p>Loading...</p>',
+        model: app.models.Group,
 
         defaults: {
             maxItems: 50
@@ -163,6 +164,7 @@
             this.options = $.extend(this.defaults, this.options, data);
 
             this.collection = new app.ScoredList();
+
             this.collection.add(data.members || []);
             this.collection.on('add', this.renderMemberInContainer);
             this.collection.on('remove', this.unrenderMember);
@@ -313,13 +315,14 @@
             if (_.isUndefined(data))
                 data = {};
 
-            data.model = app.Group;
+            data.model = app.models.Group;
             
             app.OrderedElementsView.prototype.initialize.call(this, data);
 
             this.options = $.extend(this.defaults, this.options, data);
 
             this.queue = new app.ScoredList();
+
             this.cursor = null;
 
             this.poll();
diff --git a/tests/js/spec/OrderedElementsViewSpec.js b/tests/js/spec/OrderedElementsViewSpec.js
index 46cb102344..59365569b9 100644
--- a/tests/js/spec/OrderedElementsViewSpec.js
+++ b/tests/js/spec/OrderedElementsViewSpec.js
@@ -1,7 +1,7 @@
 function make_group(data) {
   data = data || {};
 
-  return new app.Group({
+  return new app.models.Group({
     id: data.id || 1,
     score: data.score || 5,
     count: 1,
