commit ce2b561375ceeb083d20db17a2a652b44065e8ee
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Nov 23 03:14:52 2014 -0800

    Update search_users to restrict to organization members

diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 9f865e98e7..5ecf8be6f8 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -845,7 +845,7 @@ def search_users(request, team):
     results = list(User.objects.filter(
         Q(email__istartswith=query) | Q(first_name__istartswith=query) | Q(username__istartswith=query),
     ).filter(
-        Q(team_memberships=team) | Q(accessgroup__team=team),
+        sentry_orgmember_set__organization=team.organization,
     ).distinct().order_by('first_name', 'email').values('id', 'username', 'first_name', 'email')[:limit])
 
     response = HttpResponse(json.dumps({
diff --git a/tests/sentry/web/api/tests.py b/tests/sentry/web/api/tests.py
index b455c7ced3..a9691d3b0b 100644
--- a/tests/sentry/web/api/tests.py
+++ b/tests/sentry/web/api/tests.py
@@ -7,7 +7,7 @@ import mock
 from django.core.urlresolvers import reverse
 from exam import before, fixture
 
-from sentry.models import AccessGroup, OrganizationMember, User
+from sentry.models import OrganizationMember, User
 from sentry.testutils import TestCase
 from sentry.utils import json
 
@@ -155,25 +155,6 @@ class SearchUsersTest(TestCase):
             'query': 'bob',
         }
 
-    def test_finds_users_from_access_group_members(self):
-        otheruser = User.objects.create(first_name='Bob Ross', username='bobross', email='bob@example.com')
-        group = AccessGroup.objects.create(team=self.team, name='Test')
-        group.members.add(otheruser)
-
-        resp = self.client.get(self.path, {'query': 'bob'})
-
-        assert resp.status_code == 200
-        assert resp['Content-Type'] == 'application/json'
-        assert json.loads(resp.content) == {
-            'results': [{
-                'id': otheruser.id,
-                'first_name': otheruser.first_name,
-                'username': otheruser.username,
-                'email': otheruser.email,
-            }],
-            'query': 'bob',
-        }
-
     def test_does_not_include_users_who_are_not_members(self):
         User.objects.create(first_name='Bob Ross', username='bobross', email='bob@example.com')
 
