commit f7b40e6ea7220f8af087816021f6e9d40b82e83b
Author: Mathijs de Bruin <mathijs@mathijsfietst.nl>
Date:   Mon Dec 13 11:45:59 2010 +0100

    Added explicit verbose logging of client-side HTTP errors as it is VERY hard to figure out how to get to the body and url in the extra data otherwise.

diff --git a/sentry/client/base.py b/sentry/client/base.py
index 08daf7c752..3cdf0ee455 100644
--- a/sentry/client/base.py
+++ b/sentry/client/base.py
@@ -61,10 +61,11 @@ class SentryClient(object):
                 try:
                     urlread(url, post=data, timeout=conf.REMOTE_TIMEOUT)
                 except urllib2.HTTPError, e:
-                    logger.error('Unable to reach Sentry log server: %s' % (e,), exc_info=sys.exc_info(), extra={'body': e.read(), 'remote_url': url})
+		    body = e.read()
+                    logger.error('Unable to reach Sentry log server: %s (body: %s, url: %s)' % (e, body, url), exc_info=sys.exc_info(), extra={'body': body, 'remote_url': url})
                     logger.log(kwargs.pop('level', None) or logging.ERROR, kwargs.pop('message', None))
 		except urllib2.URLError, e:
-                    logger.error('Unable to reach Sentry log server: %s' % (e,), exc_info=sys.exc_info(), extra={'remote_url': url})
+                    logger.error('Unable to reach Sentry log server: %s (url: %s)' % (e, url), exc_info=sys.exc_info(), extra={'remote_url': url})
                     logger.log(kwargs.pop('level', None) or logging.ERROR, kwargs.pop('message', None))
         else:
             from sentry.models import GroupedMessage
