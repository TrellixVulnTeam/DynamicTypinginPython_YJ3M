commit ceac7ac05726ddc82c4abf19b35c3eb8165d5930
Author: Mark Story <mark@sentry.io>
Date:   Thu Sep 6 15:12:50 2018 -0400

    feat(security) Add 'all' parameter to logout
    
    Sending this parameter will rotate the session nonce and invalidate all
    sessions at once. This is a useful feature that allows users to kick out
    bad folks should their account get compromised.

diff --git a/src/sentry/api/endpoints/auth_index.py b/src/sentry/api/endpoints/auth_index.py
index d6cb7d80dc..b5485f0294 100644
--- a/src/sentry/api/endpoints/auth_index.py
+++ b/src/sentry/api/endpoints/auth_index.py
@@ -149,8 +149,13 @@ class AuthIndexEndpoint(Endpoint):
         Logout the Authenticated User
         `````````````````````````````
 
-        Deauthenticate the currently active session.
+        Deauthenticate the currently active session. Can also deactivate
+        all sessions for a user if the ``all`` parameter is sent.
         """
+        if request.DATA.get('all'):
+            # Rotate the session nonce to invalidate all other sessions.
+            request.user.refresh_session_nonce()
+            request.user.save()
         logout(request._request)
         request.user = AnonymousUser()
         return Response(status=status.HTTP_204_NO_CONTENT)
diff --git a/tests/sentry/api/endpoints/test_auth_index.py b/tests/sentry/api/endpoints/test_auth_index.py
index 6ef3ccdab2..4da12862c3 100644
--- a/tests/sentry/api/endpoints/test_auth_index.py
+++ b/tests/sentry/api/endpoints/test_auth_index.py
@@ -77,6 +77,15 @@ class AuthLogoutEndpointTest(APITestCase):
         assert response.status_code == 204
         assert list(self.client.session.keys()) == []
 
+    def test_logged_in__invalidate_all_sessions(self):
+        user = self.create_user('foo@example.com')
+        self.login_as(user)
+        response = self.client.delete(self.path, data={'all': 1})
+        assert response.status_code == 204
+        assert list(self.client.session.keys()) == []
+        updated = type(user).objects.get(pk=user.id)
+        assert updated.session_nonce != user.session_nonce
+
     def test_logged_out(self):
         response = self.client.delete(self.path)
         assert response.status_code == 204
