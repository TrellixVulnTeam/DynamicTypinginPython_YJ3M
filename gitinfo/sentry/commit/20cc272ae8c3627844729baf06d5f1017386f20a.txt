commit 20cc272ae8c3627844729baf06d5f1017386f20a
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Nov 19 23:46:39 2012 -0800

    Update lastSeen when it changes

diff --git a/src/sentry/static/sentry/coffee/templates.coffee b/src/sentry/static/sentry/coffee/templates.coffee
index ca31696b46..ea7a390bf5 100644
--- a/src/sentry/static/sentry/coffee/templates.coffee
+++ b/src/sentry/static/sentry/coffee/templates.coffee
@@ -16,7 +16,7 @@ app.templates.group = '
                 <%= message %>
             </p>
             <div class="meta">
-                <span class="last-seen pretty-date" title="<%= lastSeen %>"><%= Sentry.prettyDate(lastSeen) %></span>
+                <span class="last-seen title="<%= lastSeen %>"><%= app.prettyDate(lastSeen) %></span>
                 <% if (timeSpent) { %>
                     <span class="time-spent"><%= app.utils.round(timeSpent) %>ms</span>
                 <% } %>
diff --git a/src/sentry/static/sentry/coffee/views.coffee b/src/sentry/static/sentry/coffee/views.coffee
index b9a155ead0..49ae9d477d 100644
--- a/src/sentry/static/sentry/coffee/views.coffee
+++ b/src/sentry/static/sentry/coffee/views.coffee
@@ -207,6 +207,7 @@ jQuery ->
         initialize: ->
             _.bindAll(@)
             @model.on('change:count', @updateCount)
+            @model.on('change:lastSeen', @updateLastSeen)
             @model.on('change:isBookmarked', @render)
             @model.on('change:isResolved', @render)
 
@@ -261,6 +262,9 @@ jQuery ->
         getLevelClassName: (obj) ->
             'level-' + obj.get('levelName')
 
+        updateLastSeen: (obj) ->
+            @$el.find('.last-seen').text(app.prettyDate(obj.get('lastSeen')))
+
         updateCount: (obj) ->
             new_count = app.formatNumber(obj.get('count'))
             counter = @$el.find('.count')
@@ -317,3 +321,51 @@ jQuery ->
                     return '' + o + y
                 return '' + @floatFormat(number / x, 1) + y
         return number
+
+    app.prettyDate = (date_str) ->
+        # we need to zero out at CST
+        time = Date.parse(date_str)
+        now = new Date()
+        now_utc = Date.UTC(
+            now.getUTCFullYear(),
+            now.getUTCMonth(),
+            now.getUTCDate(),
+            now.getUTCHours(),
+            now.getUTCMinutes(),
+            now.getUTCSeconds()
+        )
+
+        seconds = (now_utc - time) / 1000
+        token = 'ago'
+        time_formats = [
+          [60, 'just now', 'just now'], # 60
+          [120, '1 minute ago', '1 minute from now'], # 60*2
+          [3600, 'minutes', 60], # 60*60, 60
+          [7200, '1 hour ago', '1 hour from now'], # 60*60*2
+          [86400, 'hours', 3600], # 60*60*24, 60*60
+          [172800, 'yesterday', 'tomorrow'], # 60*60*24*2
+          [604800, 'days', 86400], # 60*60*24*7, 60*60*24
+          [1209600, 'last week', 'next week'], # 60*60*24*7*4*2
+          [2419200, 'weeks', 604800], # 60*60*24*7*4, 60*60*24*7
+          [4838400, 'last month', 'next month'], # 60*60*24*7*4*2
+          [29030400, 'months', 2419200], # 60*60*24*7*4*12, 60*60*24*7*4
+          [58060800, 'last year', 'next year'], # 60*60*24*7*4*12*2
+          [2903040000, 'years', 29030400], # 60*60*24*7*4*12*100, 60*60*24*7*4*12
+          [5806080000, 'last century', 'next century'], # 60*60*24*7*4*12*100*2
+          [58060800000, 'centuries', 2903040000] # 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100
+        ]
+        list_choice = 1
+
+        if seconds < 0
+            seconds = Math.abs(seconds)
+            token = 'from now'
+            list_choice = 2
+
+        for format in time_formats
+            if seconds < format[0]
+                if (typeof format[2] == 'string')
+                    return format[list_choice]
+                else
+                    return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token
+
+        return time
\ No newline at end of file
diff --git a/src/sentry/static/sentry/scripts/site.js b/src/sentry/static/sentry/scripts/site.js
index 7183189727..62662b3bc4 100644
--- a/src/sentry/static/sentry/scripts/site.js
+++ b/src/sentry/static/sentry/scripts/site.js
@@ -341,7 +341,7 @@
                 <%= message %>\
             </p>\
             <div class="meta">\
-                <span class="last-seen pretty-date" title="<%= lastSeen %>"><%= Sentry.prettyDate(lastSeen) %></span>\
+                <span class="last-seen title="<%= lastSeen %>"><%= app.prettyDate(lastSeen) %></span>\
                 <% if (timeSpent) { %>\
                     <span class="time-spent"><%= app.utils.round(timeSpent) %>ms</span>\
                 <% } %>\
@@ -681,6 +681,7 @@
       GroupView.prototype.initialize = function() {
         _.bindAll(this);
         this.model.on('change:count', this.updateCount);
+        this.model.on('change:lastSeen', this.updateLastSeen);
         this.model.on('change:isBookmarked', this.render);
         return this.model.on('change:isResolved', this.render);
       };
@@ -760,6 +761,10 @@
         return 'level-' + obj.get('levelName');
       };
 
+      GroupView.prototype.updateLastSeen = function(obj) {
+        return this.$el.find('.last-seen').text(app.prettyDate(obj.get('lastSeen')));
+      };
+
       GroupView.prototype.updateCount = function(obj) {
         var counter, digit, new_count, replacement;
         new_count = app.formatNumber(obj.get('count'));
@@ -799,7 +804,7 @@
       multi = 10 * places;
       return parseInt(number * multi, 10) / multi;
     };
-    return app.formatNumber = function(number) {
+    app.formatNumber = function(number) {
       var b, o, p, x, y, z, _i, _len;
       number = parseInt(number, 10);
       z = [[1000000000, 'b'], [1000000, 'm'], [1000, 'k']];
@@ -818,6 +823,32 @@
       }
       return number;
     };
+    return app.prettyDate = function(date_str) {
+      var format, list_choice, now, now_utc, seconds, time, time_formats, token, _i, _len;
+      time = Date.parse(date_str);
+      now = new Date();
+      now_utc = Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds());
+      seconds = (now_utc - time) / 1000;
+      token = 'ago';
+      time_formats = [[60, 'just now', 'just now'], [120, '1 minute ago', '1 minute from now'], [3600, 'minutes', 60], [7200, '1 hour ago', '1 hour from now'], [86400, 'hours', 3600], [172800, 'yesterday', 'tomorrow'], [604800, 'days', 86400], [1209600, 'last week', 'next week'], [2419200, 'weeks', 604800], [4838400, 'last month', 'next month'], [29030400, 'months', 2419200], [58060800, 'last year', 'next year'], [2903040000, 'years', 29030400], [5806080000, 'last century', 'next century'], [58060800000, 'centuries', 2903040000]];
+      list_choice = 1;
+      if (seconds < 0) {
+        seconds = Math.abs(seconds);
+        token = 'from now';
+        list_choice = 2;
+      }
+      for (_i = 0, _len = time_formats.length; _i < _len; _i++) {
+        format = time_formats[_i];
+        if (seconds < format[0]) {
+          if (typeof format[2] === 'string') {
+            return format[list_choice];
+          } else {
+            return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;
+          }
+        }
+      }
+      return time;
+    };
   });
 
 }).call(this);
