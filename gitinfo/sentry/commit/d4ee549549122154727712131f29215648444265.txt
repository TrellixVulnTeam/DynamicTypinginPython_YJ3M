commit d4ee549549122154727712131f29215648444265
Author: Andrew Watts <andrewwatts@gmail.com>
Date:   Thu Dec 23 15:16:47 2010 -0800

    Issue #51: chart displaying dates into the future
    
    The pointStart value was hardcoded to 30 hours in the past.
    If there is more than 30 hours of data, those points appeared in
    the future.  The hardcoded value was removed by using
    chart_data.points|length in the template.
    
    This introduced another potential bug where the chart's
    x-axis range varies among group detail pages.  This is also
    handled with this changeset by padding the points for every hour
    as calculated from max_days parameter to the template filter
    chart_data.

diff --git a/sentry/templates/sentry/group/details.html b/sentry/templates/sentry/group/details.html
index f440131b31..279ba5a765 100644
--- a/sentry/templates/sentry/group/details.html
+++ b/sentry/templates/sentry/group/details.html
@@ -112,7 +112,7 @@
                                 }
                             },
                             series: [{
-                                pointStart: new Date() - 30 * 3600000,
+                                pointStart: new Date() - {{ chart_data.points|length }} * 3600000,
                                 pointInterval: 3600 * 1000,
                                 type: 'area',
                                 data: {{ chart_data.points|to_json }}
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index d5b8362e5a..17050c03a8 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -57,7 +57,7 @@ def chart_data(group, max_days=90):
     method = conn.ops.date_trunc_sql('hour', 'datetime')
 
     chart_qs = list(group.message_set.all()\
-                      .filter(datetime__gte=datetime.datetime.now() - datetime.timedelta(hours=hours))\
+                      .filter(datetime__gte=today - datetime.timedelta(hours=hours))\
                       .extra(select={'grouper': method}).values('grouper')\
                       .annotate(num=Count('id')).values_list('grouper', 'num')\
                       .order_by('grouper'))
@@ -65,23 +65,11 @@ def chart_data(group, max_days=90):
     if not chart_qs:
         return {}
 
-    min_date = chart_qs[0][0]
-    if min_date and min_date < datetime.datetime.now() - datetime.timedelta(days=1):
-        stop_hours = (datetime.datetime.now() - min_date).days * 24
-        start_hours = (datetime.datetime.now() - chart_qs[-1][0]).days * 24
-    else:
-        stop_hours = 24
-        start_hours = 0
-    
     rows = dict(chart_qs)
-    if rows:
-        max_y = max(rows.values())
-    else:
-        max_y = 1
     
     return {
-        'points': [rows.get(today-datetime.timedelta(hours=d), 0) for d in xrange(start_hours, stop_hours)][::-1],
-        'categories': [str(today-datetime.timedelta(hours=d)) for d in xrange(start_hours, stop_hours)][::-1],
+        'points': [rows.get(today-datetime.timedelta(hours=d), 0) for d in xrange(hours, 0, -1)],
+        'categories': [str(today-datetime.timedelta(hours=d)) for d in xrange(hours, 0, -1)],
     }
 
 @register.filter
