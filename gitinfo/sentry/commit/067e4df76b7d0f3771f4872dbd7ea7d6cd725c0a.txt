commit 067e4df76b7d0f3771f4872dbd7ea7d6cd725c0a
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Sep 13 13:19:42 2018 -0700

    feat(health): Change loading indicators in Health (#9730)
    
    Use a lightweight "panel" square as an indicator instead. Also update `HealthRequest` component to be more careful before fetching data

diff --git a/src/sentry/static/sentry/app/views/organizationHealth/loadingPanel.jsx b/src/sentry/static/sentry/app/views/organizationHealth/loadingPanel.jsx
new file mode 100644
index 0000000000..0471e30e99
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationHealth/loadingPanel.jsx
@@ -0,0 +1,27 @@
+import React from 'react';
+import styled from 'react-emotion';
+
+import HealthPanelChart from 'app/views/organizationHealth/styles/healthPanelChart';
+
+const LoadingMask = styled('div')`
+  background-color: ${p => p.theme.offWhite};
+  border-radius: ${p => p.theme.borderRadius};
+  position: absolute;
+  top: 0;
+  bottom: 0;
+  left: 0;
+  right: 0;
+`;
+
+const LoadingPanel = styled(props => (
+  <HealthPanelChart {...props}>
+    <LoadingMask />
+  </HealthPanelChart>
+))`
+  flex: 1;
+  height: 200px;
+  position: relative;
+  border-color: transparent;
+`;
+
+export default LoadingPanel;
diff --git a/src/sentry/static/sentry/app/views/organizationHealth/util/healthRequest.jsx b/src/sentry/static/sentry/app/views/organizationHealth/util/healthRequest.jsx
index f7f0febae1..aab02a116a 100644
--- a/src/sentry/static/sentry/app/views/organizationHealth/util/healthRequest.jsx
+++ b/src/sentry/static/sentry/app/views/organizationHealth/util/healthRequest.jsx
@@ -1,9 +1,9 @@
-import {isEqual} from 'lodash';
+import {isEqual, omitBy} from 'lodash';
 import PropTypes from 'prop-types';
 import React from 'react';
 
 import {doHealthRequest} from 'app/actionCreators/health';
-import LoadingIndicator from 'app/components/loadingIndicator';
+import LoadingPanel from 'app/views/organizationHealth/loadingPanel';
 import SentryTypes from 'app/sentryTypes';
 import withApi from 'app/utils/withApi';
 import withLatestContext from 'app/utils/withLatestContext';
@@ -112,6 +112,7 @@ class HealthRequestWithParams extends React.Component {
   constructor(props) {
     super(props);
     this.state = {
+      reloading: false,
       tagData: null,
       timeseriesData: null,
     };
@@ -122,7 +123,24 @@ class HealthRequestWithParams extends React.Component {
   }
 
   componentDidUpdate(prevProps) {
-    if (isEqual(prevProps, this.props)) return;
+    const propNamesToIgnore = [
+      'api',
+      'children',
+      'getCategory',
+      'organization',
+      'organizations',
+      'project',
+    ];
+
+    const prevPropsToCheck = omitBy(prevProps, (value, key) =>
+      propNamesToIgnore.includes(key)
+    );
+
+    const propsToCheck = omitBy(this.props, (value, key) =>
+      propNamesToIgnore.includes(key)
+    );
+
+    if (isEqual(prevPropsToCheck, propsToCheck)) return;
 
     this.fetchData();
   }
@@ -130,6 +148,10 @@ class HealthRequestWithParams extends React.Component {
   fetchData = async () => {
     const {tag} = this.props;
 
+    this.setState(state => ({
+      reloading: state.tagData !== null && state.timeseriesData !== null,
+    }));
+
     // If `includeTop` is defined and > 0, we need to fetch the top tags ordered by count
     // And then if we need timeseries, we'll pass the specific tag values into the timeseries query
     // to fetch only the counts for those tag values.
@@ -151,6 +173,7 @@ class HealthRequestWithParams extends React.Component {
     });
 
     this.setState({
+      reloading: false,
       tagData,
       timeseriesData,
     });
@@ -349,13 +372,13 @@ class HealthRequestWithParams extends React.Component {
   render() {
     const {children, tag, showLoading, ...props} = this.props;
 
-    const {tagData, timeseriesData} = this.state;
+    const {tagData, timeseriesData, reloading} = this.state;
 
     // Is "loading" if data is null
-    const loading = tagData === null && timeseriesData === null;
+    const loading = reloading || (tagData === null || timeseriesData === null);
 
     if (showLoading && loading) {
-      return <LoadingIndicator />;
+      return <LoadingPanel />;
     }
 
     const {
