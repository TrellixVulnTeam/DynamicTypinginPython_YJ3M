commit b059e60e48e8fb6514853eeda99c7f0f09abeb23
Author: James Cunningham <cunninghamjt09@gmail.com>
Date:   Tue Oct 8 13:56:08 2019 -0700

    fix(cache): Don't cache authz results when there is no actor. (#14993)
    
    * un-revert caching changes.
    
    * only cache on a valid authn identifier
    
    * use same logic for setting as for getting
    
    * add caching concerns to docstring

diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index 28c53ed4d8..148bf63cf1 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -2,6 +2,8 @@ from __future__ import absolute_import
 
 from rest_framework.exceptions import PermissionDenied, ParseError
 
+from django.core.cache import cache
+
 from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.helpers.environments import get_environments
@@ -17,6 +19,7 @@ from sentry.models import (
     ReleaseProject,
 )
 from sentry.utils import auth
+from sentry.utils.hashlib import hash_values
 from sentry.utils.sdk import configure_scope
 
 
@@ -293,7 +296,24 @@ class OrganizationReleasesBaseEndpoint(OrganizationEndpoint):
         """
         Does the given request have permission to access this release, based
         on the projects to which the release is attached?
+
+        If the given request has an actor (user or ApiKey), cache the results
+        for a minute on the unique combination of actor,org,release.
         """
-        return ReleaseProject.objects.filter(
-            release=release, project__in=self.get_projects(request, organization)
-        ).exists()
+        actor_id = None
+        has_perms = None
+        if getattr(request, "user", None) and request.user.id:
+            actor_id = "user:%s" % request.user.id
+        if getattr(request, "auth", None) and request.auth.id:
+            actor_id = "apikey:%s" % request.auth.id
+        if actor_id is not None:
+            key = "release_perms:1:%s" % hash_values([actor_id, organization.id, release.id])
+            has_perms = cache.get(key)
+        if has_perms is None:
+            has_perms = ReleaseProject.objects.filter(
+                release=release, project__in=self.get_projects(request, organization)
+            ).exists()
+            if actor_id is not None:
+                cache.set(key, has_perms, 60)
+
+        return has_perms
