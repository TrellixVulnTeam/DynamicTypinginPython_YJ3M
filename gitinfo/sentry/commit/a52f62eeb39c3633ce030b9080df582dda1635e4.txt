commit a52f62eeb39c3633ce030b9080df582dda1635e4
Author: Mark Story <mark@mark-story.com>
Date:   Wed Dec 5 09:54:21 2018 -0500

    fix(ui) Fix broken multi-select widgets inside form containers (#10913)
    
    When inside a Form container array values are wrapped by mobx into
    observable arrays. The react-select component does not know how to
    handle this type and behaves poorly. By peeking at the observable value
    we can get the right behavior.
    
    Fixes APP-856

diff --git a/docs-ui/components/form.stories.js b/docs-ui/components/form.stories.js
index 4884c79bfc..d34ec09de9 100644
--- a/docs-ui/components/form.stories.js
+++ b/docs-ui/components/form.stories.js
@@ -17,6 +17,7 @@ import RangeSlider from 'app/views/settings/components/forms/controls/rangeSlide
 import Form from 'app/views/settings/components/forms/form';
 import FormField from 'app/views/settings/components/forms/formField';
 import TextField from 'app/views/settings/components/forms/textField';
+import SelectField from 'app/views/settings/components/forms/selectField';
 import Switch from 'app/components/switch';
 
 class UndoButton extends React.Component {
@@ -153,6 +154,45 @@ storiesOf('Forms|Fields', module)
       </Form>
     ))
   )
+  .add(
+    'SelectField',
+    withInfo({
+      text: 'Select Field',
+      propTablesExclude: [Form],
+    })(() => (
+      <Form>
+        <SelectField
+          name="select"
+          label="Select Field"
+          choices={[
+            ['choice_one', 'Choice One'],
+            ['choice_two', 'Choice Two'],
+            ['choice_three', 'Choice Three'],
+          ]}
+        />
+      </Form>
+    ))
+  )
+  .add(
+    'SelectField multiple',
+    withInfo({
+      text: 'Select Control w/ multiple',
+      propTablesExclude: [Form],
+    })(() => (
+      <Form>
+        <SelectField
+          name="select"
+          label="Multi Select"
+          multiple={true}
+          choices={[
+            ['choice_one', 'Choice One'],
+            ['choice_two', 'Choice Two'],
+            ['choice_three', 'Choice Three'],
+          ]}
+        />
+      </Form>
+    ))
+  )
   .add(
     'Non-inline field',
     withInfo({
diff --git a/src/sentry/integrations/jira/integration.py b/src/sentry/integrations/jira/integration.py
index 078f0ea9b4..ebb3d82c86 100644
--- a/src/sentry/integrations/jira/integration.py
+++ b/src/sentry/integrations/jira/integration.py
@@ -367,7 +367,7 @@ class JiraIntegration(IntegrationInstallation, IssueSyncMixin):
                 {
                     'multiple': True,
                     'choices': self.make_choices(field_meta.get('allowedValues')),
-                    'default': []
+                    'default': ''
                 }
             )
 
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/selectField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/selectField.jsx
index feb1d24693..da57d9bb41 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/selectField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/selectField.jsx
@@ -61,11 +61,21 @@ export default class SelectField extends React.Component {
         {...otherProps}
         alignRight={this.props.small}
         field={({onChange, onBlur, disabled, required, ...props}) => {
-          let choices = getChoices(props);
-
-          // XXX: We remove the required property here since applying it to the
+          // We remove the required property here since applying it to the
           // DOM causes the native tooltip to render in strange places.
+          let choices = getChoices(props);
 
+          // Check if value quacks like mobx and get the raw array.
+          // Inside Form containers `value` can be a mobx observable
+          // which doesn't play nice with downstream code.
+          let val = props.value;
+          if (
+            multiple &&
+            Array.isArray(val) === false &&
+            typeof val.peek === 'function'
+          ) {
+            val = val.peek();
+          }
           return (
             <SelectControl
               {...props}
@@ -73,7 +83,7 @@ export default class SelectField extends React.Component {
               multiple={multiple}
               disabled={disabled}
               onChange={this.handleChange.bind(this, onBlur, onChange)}
-              value={props.value}
+              value={val}
               options={choices.map(([value, label]) => ({
                 value,
                 label,
