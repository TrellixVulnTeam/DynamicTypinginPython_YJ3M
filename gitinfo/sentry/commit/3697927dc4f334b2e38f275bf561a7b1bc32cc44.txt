commit 3697927dc4f334b2e38f275bf561a7b1bc32cc44
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Mar 31 12:52:48 2016 -0700

    Merge tag counts when merging groups
    
    Fixes GH-2804

diff --git a/src/sentry/tasks/merge.py b/src/sentry/tasks/merge.py
index bc3a48cb48..786e5cfb80 100644
--- a/src/sentry/tasks/merge.py
+++ b/src/sentry/tasks/merge.py
@@ -159,7 +159,9 @@ def merge_objects(models, group, new_group, limit=1000,
         if logger is not None:
             logger.info('Merging %r objects where %r into %r', model, group,
                         new_group)
-        has_group = 'group' in model._meta.get_all_field_names()
+        all_fields = model._meta.get_all_field_names()
+        has_group = 'group' in all_fields
+        has_values_seen = 'values_seen' in all_fields
         if has_group:
             queryset = model.objects.filter(group=group)
         else:
@@ -179,7 +181,23 @@ def merge_objects(models, group, new_group, limit=1000,
                 delete = True
             else:
                 delete = False
+
             if delete:
+                # Before deleting, we want to merge in counts
+                if has_values_seen:
+                    try:
+                        with transaction.atomic(using=router.db_for_write(model)):
+                            if has_group:
+                                model.objects.filter(
+                                    group=new_group,
+                                ).update(values_seen=F('values_seen') + obj.values_seen)
+                            else:
+                                model.objects.filter(
+                                    group_id=new_group.id,
+                                ).update(values_seen=F('values_seen') + obj.values_seen)
+                    except DataError:
+                        # it's possible to hit an out of range value for counters
+                        pass
                 obj.delete()
             has_more = True
 
diff --git a/tests/sentry/tasks/test_merge.py b/tests/sentry/tasks/test_merge.py
index 4fadf85c90..10a584390a 100644
--- a/tests/sentry/tasks/test_merge.py
+++ b/tests/sentry/tasks/test_merge.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 
 from sentry.tasks.merge import merge_group, rehash_group_events
-from sentry.models import Event, Group, GroupRedirect
+from sentry.models import Event, Group, GroupRedirect, GroupTagKey
 from sentry.testutils import TestCase
 
 
@@ -51,6 +51,28 @@ class MergeGroupTest(TestCase):
             group_id=groups[2].id,
         ).count() == 2
 
+    def test_merge_updates_tag_values_seen(self):
+        project = self.create_project()
+        groups = [self.create_group(project) for _ in xrange(0, 2)]
+
+        for group in groups:
+            GroupTagKey.objects.create(
+                project=project,
+                group=group,
+                key='sentry:user',
+                values_seen=1,
+            )
+
+        with self.tasks():
+            merge_group(groups[0].id, groups[1].id)
+
+        assert not Group.objects.filter(id=groups[0].id).exists()
+        assert not GroupTagKey.objects.filter(group_id=groups[0].id).exists()
+
+        assert GroupTagKey.objects.get(
+            group_id=groups[1].id, key='sentry:user',
+        ).values_seen == 2
+
 
 class RehashGroupEventsTest(TestCase):
     def test_simple(self):
