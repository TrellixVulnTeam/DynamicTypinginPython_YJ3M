commit 3454b1967c1471ac494730059b8b7c86c1b03b85
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Tue Feb 28 11:13:30 2017 -0800

    Clarify variable names

diff --git a/src/sentry/static/sentry/app/components/fileChange.jsx b/src/sentry/static/sentry/app/components/fileChange.jsx
index a486151d4f..03808f5c81 100644
--- a/src/sentry/static/sentry/app/components/fileChange.jsx
+++ b/src/sentry/static/sentry/app/components/fileChange.jsx
@@ -26,7 +26,6 @@ const FileChange = React.createClass({
 
   render() {
     let {filename, authors, types} = this.props;
-    authors = Array.from(authors);
     types = Array.from(types);
     return (
       <li className="list-group-item list-group-item-sm ">
diff --git a/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx b/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
index e112efc20b..57323980cf 100644
--- a/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
+++ b/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
@@ -6,7 +6,7 @@ import {Sparklines, SparklinesLine} from 'react-sparklines';
 
 import ApiMixin from '../mixins/apiMixin';
 
-const releaseProjectStatSparkline = React.createClass({
+const ReleaseProjectStatSparkline = React.createClass({
   propTypes: {
     orgId: React.PropTypes.string,
     projectId: React.PropTypes.string,
@@ -60,4 +60,4 @@ const releaseProjectStatSparkline = React.createClass({
   }
 });
 
-export default releaseProjectStatSparkline;
+export default ReleaseProjectStatSparkline;
diff --git a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
index cc13ea085b..13f419fd81 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
@@ -85,7 +85,7 @@ const ReleaseOverview = React.createClass({
     // convert list of individual file changes (can be
     // multiple changes to a single file) into a per-file
     // summary
-    let fileInfo = fileList.reduce(function (summary, fileChange) {
+    let fileChangeSummary = fileList.reduce(function (summary, fileChange) {
       let {author, type, filename} = fileChange;
       if (!summary.hasOwnProperty(filename)) {
         summary[filename] = {
@@ -99,20 +99,20 @@ const ReleaseOverview = React.createClass({
       return summary;
     }, {});
 
-    let fileCount = Object.keys(fileInfo).length;
+    let fileCount = Object.keys(fileChangeSummary).length;
     return (
       <div>
         <div className="row" style={{paddingTop: 10}}>
           <div className="col-sm-8">
             <h5>{fileCount} Files Changed</h5>
             <ul className="list-group list-group-striped m-b-2">
-              {Object.keys(fileInfo).map(file => {
+              {Object.keys(fileChangeSummary).map(filename => {
                 return (
                   <FileChange
-                    key={fileInfo[file].id}
-                    filename={file}
-                    authors={Object.values(fileInfo[file].authors)}
-                    types={fileInfo[file].types}
+                    key={fileChangeSummary[filename].id}
+                    filename={filename}
+                    authors={Object.values(fileChangeSummary[filename].authors)}
+                    types={fileChangeSummary[filename].types}
                     />
                 );
               })}
