commit 04fabac67c0863b050feab7a0e83162fbd910053
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Thu Nov 7 11:43:53 2019 -0800

    Add invite modal to assignee selector (#15448)

diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.tsx b/src/sentry/static/sentry/app/components/assigneeSelector.tsx
index cd4c3692eb..4a8040e0f1 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.tsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.tsx
@@ -3,11 +3,13 @@ import React from 'react';
 import Reflux from 'reflux';
 import createReactClass from 'create-react-class';
 import styled from 'react-emotion';
+import {browserHistory} from 'react-router';
 
 import SentryTypes from 'app/sentryTypes';
 import {Member, User} from 'app/types';
 
 import {assignToUser, assignToActor, clearAssignment} from 'app/actionCreators/group';
+import {openInviteMembersModal} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
 import {valueIsEqual, buildUserId, buildTeamId} from 'app/utils';
 import ActorAvatar from 'app/components/avatar/actorAvatar';
@@ -175,6 +177,17 @@ const AssigneeSelectorComponent = createReactClass<Props, State>({
     e.stopPropagation();
   },
 
+  hasInviteRequestExperiment() {
+    const {organization} = this.context;
+
+    if (!organization || !organization.experiments) {
+      return false;
+    }
+
+    const variant = organization.experiments.ImprovedInvitesExperiment;
+    return variant === 'all' || variant === 'invite_request';
+  },
+
   renderNewMemberNodes() {
     const {size} = this.props;
     const members = putSessionUserFirst(this.memberList());
@@ -243,6 +256,8 @@ const AssigneeSelectorComponent = createReactClass<Props, State>({
     const canInvite = ConfigStore.get('invitesEnabled');
     const hasOrgWrite = organization.access.includes('org:write');
     const memberList = this.memberList();
+    const hasExperiment = this.hasInviteRequestExperiment();
+    const showInviteMemberButton = (canInvite && hasOrgWrite) || hasExperiment;
 
     return (
       <div className={className}>
@@ -283,14 +298,19 @@ const AssigneeSelectorComponent = createReactClass<Props, State>({
               )
             }
             menuFooter={
-              canInvite &&
-              hasOrgWrite && (
+              showInviteMemberButton && (
                 <InviteMemberLink
                   data-test-id="invite-member"
                   disabled={loading}
-                  to={`/settings/${
-                    this.context.organization.slug
-                  }/members/new/?referrer=assignee_selector`}
+                  onClick={() =>
+                    hasExperiment
+                      ? openInviteMembersModal({source: 'assignee_selector'})
+                      : browserHistory.push(
+                          `/settings/${
+                            organization.slug
+                          }/members/new/?referrer=assignee_selector`
+                        )
+                  }
                 >
                   <MenuItemWrapper>
                     <IconContainer>
diff --git a/tests/js/spec/components/assigneeSelector.spec.jsx b/tests/js/spec/components/assigneeSelector.spec.jsx
index b99ed630fd..f90a2f2356 100644
--- a/tests/js/spec/components/assigneeSelector.spec.jsx
+++ b/tests/js/spec/components/assigneeSelector.spec.jsx
@@ -4,6 +4,7 @@ import {
   AssigneeSelectorComponent,
   putSessionUserFirst,
 } from 'app/components/assigneeSelector';
+import {browserHistory} from 'react-router';
 import {Client} from 'app/api';
 import {mountWithTheme} from 'sentry-test/enzyme';
 import ConfigStore from 'app/stores/configStore';
@@ -11,6 +12,11 @@ import GroupStore from 'app/stores/groupStore';
 import MemberListStore from 'app/stores/memberListStore';
 import ProjectsStore from 'app/stores/projectsStore';
 import TeamStore from 'app/stores/teamStore';
+import {openInviteMembersModal} from 'app/actionCreators/modal';
+
+jest.mock('app/actionCreators/modal', () => ({
+  openInviteMembersModal: jest.fn(),
+}));
 
 describe('AssigneeSelector', function() {
   let assigneeSelector;
@@ -261,7 +267,7 @@ describe('AssigneeSelector', function() {
   });
 
   it('shows invite member button', async function() {
-    const routerContext = TestStubs.routerContext();
+    const organization = TestStubs.Organization();
 
     openMenu();
     MemberListStore.loadInitialData([USER_1, USER_2]);
@@ -275,14 +281,17 @@ describe('AssigneeSelector', function() {
     jest.spyOn(ConfigStore, 'get').mockImplementation(() => true);
     assigneeSelector = mountWithTheme(
       <AssigneeSelectorComponent id={GROUP_1.id} />,
-      routerContext
+      TestStubs.routerContext([{organization}])
     );
     await tick();
     assigneeSelector.update();
     openMenu();
-    expect(
-      assigneeSelector.find('InviteMemberLink[data-test-id="invite-member"]')
-    ).toHaveLength(1);
+    assigneeSelector
+      .find('InviteMemberLink[data-test-id="invite-member"]')
+      .simulate('click');
+    expect(browserHistory.push).toHaveBeenCalledWith(
+      `/settings/${organization.slug}/members/new/?referrer=assignee_selector`
+    );
     ConfigStore.get.mockRestore();
   });
 
@@ -304,6 +313,24 @@ describe('AssigneeSelector', function() {
     ConfigStore.get.mockRestore();
   });
 
+  it('can invite member with invite request experiment', async function() {
+    const organization = TestStubs.Organization({
+      experiments: {ImprovedInvitesExperiment: 'invite_request'},
+    });
+
+    assigneeSelector.unmount();
+    assigneeSelector = mountWithTheme(
+      <AssigneeSelectorComponent id={GROUP_1.id} />,
+      TestStubs.routerContext([{organization}])
+    );
+    openMenu();
+    assigneeSelector.update();
+    assigneeSelector
+      .find('InviteMemberLink[data-test-id="invite-member"]')
+      .simulate('click');
+    expect(openInviteMembersModal).toHaveBeenCalled();
+  });
+
   it('filters user by email and selects with keyboard', async function() {
     openMenu();
     MemberListStore.loadInitialData([USER_1, USER_2]);
