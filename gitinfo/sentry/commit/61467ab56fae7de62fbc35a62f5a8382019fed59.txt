commit 61467ab56fae7de62fbc35a62f5a8382019fed59
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 1 23:50:48 2013 -0700

    lol big ideas

diff --git a/src/sentry/tasks/check_alerts.py b/src/sentry/tasks/check_alerts.py
index 8bd7f337ba..ecff16b35a 100644
--- a/src/sentry/tasks/check_alerts.py
+++ b/src/sentry/tasks/check_alerts.py
@@ -2,32 +2,6 @@
 sentry.tasks.check_alerts
 ~~~~~~~~~~~~~~~~~~~~~~~~~
 
-- Store a sorted set per project
-- Each sorted set contains the number of events seen in the interval (1 minute)
-  - An additional set contains the number of unique events seen
-- Every minute we iterate this sorted set (we can exploit the queue just like buffers to avoid crons)
-  - We clear the results immediately to no-op any concurrent tasks that might try to run
-  - The task fires off a set of subtasks that individually check each project
-    - Each project's value is compared to the historic value in the last N minutes (15m for redis counters or
-      a period of time using the SQL counters)
-    - We only alert if an alert has not been seen on this condition in the last N minutes
-
-Notes:
-
-- Nydus optimizes out multiple writes/gets, so its not as expensive as it looks
-- If there are not enough data points in history, alerts are never sent (as they could be false positives)
-
-Last Notified will be tracked by using a new Alert model, which has the following properties:
-
-- users alerted
-- datetime
-- type
-- ident
-
-Type and ident would be similar to how Activity works.
-
-Alert expiration threshold MUST be > MINUTE_NORMALIZATION.
-
 :copyright: (c) 2010-2013 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
