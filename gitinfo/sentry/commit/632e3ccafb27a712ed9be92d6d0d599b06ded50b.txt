commit 632e3ccafb27a712ed9be92d6d0d599b06ded50b
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Thu Oct 11 14:00:44 2018 -0500

    tests(eventstream): Add tests for new message types (#10084)

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 14db806bca..d4d281bb2a 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -951,6 +951,9 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint, EnvironmentMixin):
         if not group_list:
             return
 
+        # deterministic sort for sanity, and for very large deletions we'll
+        # delete the "smaller" groups first
+        group_list.sort(key=lambda g: (g.times_seen, g.id))
         group_ids = [g.id for g in group_list]
 
         Group.objects.filter(
diff --git a/src/sentry/tasks/merge.py b/src/sentry/tasks/merge.py
index 3e2edfb81a..9164d121bd 100644
--- a/src/sentry/tasks/merge.py
+++ b/src/sentry/tasks/merge.py
@@ -113,7 +113,6 @@ def merge_group(
         transaction_id=transaction_id,
     )
 
-    last_task = False
     if has_more:
         merge_group.delay(
             from_object_id=from_object_id,
@@ -123,8 +122,6 @@ def merge_group(
             eventstream_state=eventstream_state,
         )
         return
-    else:
-        last_task = True
 
     features.merge(new_group, [group], allow_unsafe=True)
 
@@ -195,7 +192,7 @@ def merge_group(
     except DataError:
         pass
 
-    if last_task and eventstream_state:
+    if eventstream_state:
         eventstream.end_merge(eventstream_state)
 
 
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index 15af6e50c9..0cd3b2ac42 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -7,7 +7,7 @@ from uuid import uuid4
 import six
 from django.utils import timezone
 from exam import fixture
-from mock import patch
+from mock import patch, Mock
 
 from sentry import tagstore
 from sentry.models import (
@@ -1383,7 +1383,11 @@ class GroupUpdateTest(APITestCase):
 
     @patch('sentry.api.endpoints.project_group_index.uuid4')
     @patch('sentry.api.endpoints.project_group_index.merge_group')
-    def test_merge(self, merge_group, mock_uuid4):
+    @patch('sentry.api.endpoints.project_group_index.eventstream')
+    def test_merge(self, mock_eventstream, merge_group, mock_uuid4):
+        eventstream_state = object()
+        mock_eventstream.start_merge = Mock(return_value=eventstream_state)
+
         class uuid(object):
             hex = 'abc123'
 
@@ -1414,18 +1418,21 @@ class GroupUpdateTest(APITestCase):
             ]
         )
 
+        mock_eventstream.start_merge.assert_called_once_with(
+            group1.project_id, [group3.id, group1.id], group2.id)
+
         assert len(merge_group.mock_calls) == 2
         merge_group.delay.assert_any_call(
             from_object_id=group1.id,
             to_object_id=group2.id,
             transaction_id='abc123',
-            eventstream_state=None,
+            eventstream_state=eventstream_state,
         )
         merge_group.delay.assert_any_call(
             from_object_id=group3.id,
             to_object_id=group2.id,
             transaction_id='abc123',
-            eventstream_state=None,
+            eventstream_state=eventstream_state,
         )
 
     def test_assign(self):
@@ -1588,7 +1595,12 @@ class GroupDeleteTest(APITestCase):
             self.project.slug,
         )
 
-    def test_delete_by_id(self):
+    @patch('sentry.api.endpoints.project_group_index.eventstream')
+    @patch('sentry.eventstream')
+    def test_delete_by_id(self, mock_eventstream_task, mock_eventstream_api):
+        eventstream_state = object()
+        mock_eventstream_api.start_delete_groups = Mock(return_value=eventstream_state)
+
         group1 = self.create_group(checksum='a' * 32, status=GroupStatus.RESOLVED)
         group2 = self.create_group(checksum='b' * 32, status=GroupStatus.UNRESOLVED)
         group3 = self.create_group(checksum='c' * 32, status=GroupStatus.IGNORED)
@@ -1621,6 +1633,9 @@ class GroupDeleteTest(APITestCase):
 
         response = self.client.delete(url, format='json')
 
+        mock_eventstream_api.start_delete_groups.assert_called_once_with(
+            group1.project_id, [group1.id, group2.id])
+
         assert response.status_code == 204
 
         assert Group.objects.get(id=group1.id).status == GroupStatus.PENDING_DELETION
@@ -1643,6 +1658,8 @@ class GroupDeleteTest(APITestCase):
         with self.tasks():
             response = self.client.delete(url, format='json')
 
+        mock_eventstream_task.end_delete_groups.assert_called_once_with(eventstream_state)
+
         assert response.status_code == 204
 
         assert not Group.objects.filter(id=group1.id).exists()
diff --git a/tests/sentry/tasks/test_merge.py b/tests/sentry/tasks/test_merge.py
index 2372abaa88..55f6a83685 100644
--- a/tests/sentry/tasks/test_merge.py
+++ b/tests/sentry/tasks/test_merge.py
@@ -17,6 +17,18 @@ index = _make_index_backend(redis.clusters.get('default').get_local_client(0))
 
 @patch('sentry.similarity.features.index', new=index)
 class MergeGroupTest(TestCase):
+    @patch('sentry.tasks.merge.eventstream')
+    def test_merge_calls_eventstream(self, mock_eventstream):
+        group1 = self.create_group(self.project)
+        group2 = self.create_group(self.project)
+
+        eventstream_state = object()
+
+        with self.tasks():
+            merge_group(group1.id, group2.id, eventstream_state=eventstream_state)
+
+        mock_eventstream.end_merge.assert_called_once_with(eventstream_state)
+
     def test_merge_group_environments(self):
         group1 = self.create_group(self.project)
 
diff --git a/tests/sentry/tasks/test_unmerge.py b/tests/sentry/tasks/test_unmerge.py
index 985a9cb00f..25fd6a9882 100644
--- a/tests/sentry/tasks/test_unmerge.py
+++ b/tests/sentry/tasks/test_unmerge.py
@@ -11,7 +11,7 @@ from datetime import datetime, timedelta
 import pytz
 from django.conf import settings
 from django.utils import timezone
-from mock import patch
+from mock import patch, Mock
 
 from sentry import tagstore
 from sentry.tagstore.models import GroupTagValue
@@ -186,7 +186,11 @@ class UnmergeTestCase(TestCase):
             'first_release': None,
         }
 
-    def test_unmerge(self):
+    @patch('sentry.tasks.unmerge.eventstream')
+    def test_unmerge(self, mock_eventstream):
+        eventstream_state = object()
+        mock_eventstream.start_unmerge = Mock(return_value=eventstream_state)
+
         def shift(i):
             return timedelta(seconds=1 << i)
 
@@ -361,6 +365,12 @@ class UnmergeTestCase(TestCase):
             id=source_activity.data['destination_id'],
         )
 
+        mock_eventstream.start_unmerge.assert_called_once_with(
+            source.project_id, [events.keys()[1]], source.id, destination.id
+        )
+
+        mock_eventstream.end_unmerge.assert_called_once_with(eventstream_state)
+
         assert list(
             Group.objects.filter(id=destination.id).values_list(
                 'times_seen',
