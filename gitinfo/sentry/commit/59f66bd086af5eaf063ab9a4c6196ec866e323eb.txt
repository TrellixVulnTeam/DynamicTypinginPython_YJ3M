commit 59f66bd086af5eaf063ab9a4c6196ec866e323eb
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 12 20:44:16 2013 -0700

    "Correct" create_default_project test by adding awful code

diff --git a/src/sentry/models.py b/src/sentry/models.py
index 173fa94ddc..bb0fd61155 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -1180,39 +1180,34 @@ class AlertRelatedGroup(Model):
 
 
 def create_default_project(created_models, verbosity=2, **kwargs):
-    if Project in created_models:
-        if Project.objects.filter(id=settings.SENTRY_PROJECT).exists():
-            return
+    if Project not in created_models:
+        return
+    if Project.objects.filter(id=settings.SENTRY_PROJECT).exists():
+        return
 
-        try:
-            user = User.objects.filter(is_superuser=True)[0]
-        except IndexError:
-            user = None
-
-        project = Project.objects.create(
-            public=False,
-            name='Sentry (Internal)',
-            slug='sentry',
-            owner=user,
-        )
-        # default key (used by sentry-js client, etc)
-        ProjectKey.objects.create(
-            project=project,
-        )
+    try:
+        user = User.objects.filter(is_superuser=True)[0]
+    except IndexError:
+        user = None
 
-        if verbosity > 0:
-            print 'Created internal Sentry project (slug=%s, id=%s)' % (project.slug, project.id)
+    project = Project.objects.create(
+        public=False,
+        name='Sentry (Internal)',
+        slug='sentry',
+        owner=user,
+    )
+    if project.id != settings.SENTRY_PROJECT:
+        # HACK: the database is not correctly advancing our auto incr ID
+        # so lets do a wasteful query to update instead of doing it on insert
+        update(project, id=settings.SENTRY_PROJECT)
+
+    # default key (used by sentry-js client, etc)
+    ProjectKey.objects.create(
+        project=project,
+    )
 
-        # Iterate all groups to update their relations
-        for model in (Group, Event, TagKey, TagValue, GroupTag,
-                      GroupCountByMinute):
-            if verbosity > 0:
-                print ('Backfilling project ids for %s.. ' % model),
-            model.objects.filter(project__isnull=True).update(
-                project=project,
-            )
-            if verbosity > 0:
-                print 'done!'
+    if verbosity > 0:
+        print 'Created internal Sentry project (slug=%s, id=%s)' % (project.slug, project.id)
 
 
 def set_sentry_version(latest=None, **kwargs):
diff --git a/tests/sentry/models/tests.py b/tests/sentry/models/tests.py
index 87db8eb760..36062e2c44 100644
--- a/tests/sentry/models/tests.py
+++ b/tests/sentry/models/tests.py
@@ -151,16 +151,16 @@ class GroupIsOverResolveAgeTest(TestCase):
 
 class CreateDefaultProjectTest(TestCase):
     def test_simple(self):
-        Team.objects.filter(project__id=settings.SENTRY_PROJECT).delete()
-        Project.objects.filter(id=settings.SENTRY_PROJECT).delete()
         user, _ = User.objects.get_or_create(is_superuser=True, defaults={
             'username': 'test'
         })
+        Team.objects.filter(project__id=settings.SENTRY_PROJECT).delete()
+        Project.objects.filter(id=settings.SENTRY_PROJECT).delete()
 
         create_default_project(created_models=[Project])
 
         project = Project.objects.filter(id=settings.SENTRY_PROJECT)
-        assert project.exists()
+        assert project.exists() is True
         project = project.get()
         assert project.owner == user
         assert project.public is False
