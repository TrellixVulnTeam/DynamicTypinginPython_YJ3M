commit aad22b08f4abbe84dd8c12decf9f2806033ad463
Author: Ryan Skonnord <ryan.skonnord@sentry.io>
Date:   Mon Jun 1 10:42:04 2020 -0700

    perf(serializers): Add spans to GroupSerializerBase.serialize (#19096)
    
    perf(serializers): Add spans to GroupSerializerBase.serialize

diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index eb251cb2b4..6a807ec7d8 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -11,6 +11,8 @@ from django.conf import settings
 from django.db.models import Min, Q
 from django.utils import timezone
 
+import sentry_sdk
+
 from sentry import tagstore, tsdb
 from sentry.app import env
 from sentry.api.serializers import Serializer, register, serialize
@@ -333,7 +335,7 @@ class GroupSerializerBase(Serializer):
             result[item].update(seen_stats.get(item, {}))
         return result
 
-    def serialize(self, obj, attrs, user):
+    def _get_status(self, attrs, obj):
         status = obj.status
         status_details = {}
         if attrs["ignore_until"]:
@@ -382,7 +384,9 @@ class GroupSerializerBase(Serializer):
             status_label = "pending_merge"
         else:
             status_label = "unresolved"
+        return status_details, status_label
 
+    def _get_permalink(self, obj, user):
         # If user is not logged in and member of the organization,
         # do not return the permalink which contains private information i.e. org name.
         request = env.request
@@ -406,10 +410,11 @@ class GroupSerializerBase(Serializer):
             or (user.is_authenticated() and user.get_orgs().filter(id=obj.organization.id).exists())
             or is_valid_sentryapp
         ):
-            permalink = obj.get_absolute_url()
+            return obj.get_absolute_url()
         else:
-            permalink = None
+            return None
 
+    def _get_subscription(self, attrs):
         subscription_details = None
         if attrs["subscription"] is not disabled:
             is_subscribed, subscription = attrs["subscription"]
@@ -420,7 +425,15 @@ class GroupSerializerBase(Serializer):
         else:
             is_subscribed = False
             subscription_details = {"disabled": True}
+        return is_subscribed, subscription_details
 
+    def serialize(self, obj, attrs, user):
+        with sentry_sdk.start_span(op="GroupSerializerBase.serialize.status"):
+            status_details, status_label = self._get_status(attrs, obj)
+        with sentry_sdk.start_span(op="GroupSerializerBase.serialize.permalink"):
+            permalink = self._get_permalink(obj, user)
+        with sentry_sdk.start_span(op="GroupSerializerBase.serialize.subscription"):
+            is_subscribed, subscription_details = self._get_subscription(attrs)
         share_id = attrs["share_id"]
 
         return {
