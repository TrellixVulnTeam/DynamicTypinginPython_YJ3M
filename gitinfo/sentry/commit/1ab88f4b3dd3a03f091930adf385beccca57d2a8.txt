commit 1ab88f4b3dd3a03f091930adf385beccca57d2a8
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 4 14:50:58 2010 -0700

    #6 truncate urls when storing in the character column and store the original in JSON

diff --git a/djangodblog/manager.py b/djangodblog/manager.py
index d11c688434..a9ede497b3 100644
--- a/djangodblog/manager.py
+++ b/djangodblog/manager.py
@@ -38,10 +38,15 @@ class DBLogManager(models.Manager):
     def _create(self, **defaults):
         from models import Error, ErrorBatch
         
+        URL_MAX_LENGTH = Error._meta.get_field_by_name('url')[0].max_length
+        
         server_name = socket.gethostname()
         class_name  = defaults.pop('class_name', None)
         
         data = defaults.pop('data', {})
+        if defaults.get('url'):
+            data['url'] = defaults['url']
+            defaults['url'] = defaults['url'][:URL_MAX_LENGTH]
 
         try:
             instance = Error.objects.create(
diff --git a/djangodblog/models.py b/djangodblog/models.py
index 769aa4ac98..5687b79a76 100644
--- a/djangodblog/models.py
+++ b/djangodblog/models.py
@@ -62,9 +62,14 @@ class ErrorBatch(Model):
         if len(url) > 60:
             url = url[:60] + '...'
         return url
-    shortened_url.short_description = "URL"
+    shortened_url.short_description = 'URL'
     shortened_url.admin_order_field = 'url'
-
+    
+    def full_url(self):
+        return self.data.get('url') or self.url
+    full_url.short_description = 'URL'
+    full_url.admin_order_field = 'url'
+    
     def error(self):
         message = smart_unicode(self.message)
         if len(message) > 100:
@@ -105,8 +110,13 @@ class Error(Model):
         if len(url) > 60:
             url = url[:60] + '...'
         return url
-    shortened_url.short_description = "URL"
+    shortened_url.short_description = 'URL'
     shortened_url.admin_order_field = 'url'
+    
+    def full_url(self):
+        return self.data.get('url') or self.url
+    full_url.short_description = 'URL'
+    full_url.admin_order_field = 'url'
 
     def error(self):
         message = smart_unicode(self.message)
diff --git a/djangodblog/templates/admin/djangodblog/error/change_form.html b/djangodblog/templates/admin/djangodblog/error/change_form.html
index 7eb2105726..ab5797553f 100644
--- a/djangodblog/templates/admin/djangodblog/error/change_form.html
+++ b/djangodblog/templates/admin/djangodblog/error/change_form.html
@@ -51,7 +51,7 @@
 		<tbody>
 			<tr>
 				<th>URL:</th>
-				<td><a href="{{ instance.url }}">{{ instance.url }}</a></td>
+				<td>{% if instance.url %}<a href="{{ instance.full_url }}">{{ instance.full_url }}</a>{% else %}<em>Not available</em>{% endif %}</td>
 				<th>Level:</th>
 				<td><a href="../?level={{ instance.level }}">{{ instance.get_level_display }}</a> (<a href="../?logger={{ instance.logger }}">{{ instance.logger }}</a>, <a href="../?logger={{ instance.logger }}&amp;level={{ instance.level }}">{{ instance.logger }}:{{ instance.get_level_display }}</a>)</td>
 			</tr>
diff --git a/djangodblog/templates/admin/djangodblog/errorbatch/change_form.html b/djangodblog/templates/admin/djangodblog/errorbatch/change_form.html
index 3586b3a749..e1098b5881 100644
--- a/djangodblog/templates/admin/djangodblog/errorbatch/change_form.html
+++ b/djangodblog/templates/admin/djangodblog/errorbatch/change_form.html
@@ -43,7 +43,7 @@
 		<tbody>
 			<tr>
 				<th>URL:</th>
-				<td><a href="{{ instance.url }}">{{ instance.url }}</a></td>
+				<td>{% if instance.url %}<a href="{{ instance.full_url }}">{{ instance.full_url }}</a>{% else %}<em>Not available</em>{% endif %}</td>
 				<th>Level:</th>
 				<td><a href="../?level={{ instance.level }}">{{ instance.get_level_display }}</a> (<a href="../?logger={{ instance.logger }}">{{ instance.logger }}</a>, <a href="../?logger={{ instance.logger }}&amp;level={{ instance.level }}">{{ instance.logger }}:{{ instance.get_level_display }}</a>)</td>
 			</tr>
diff --git a/djangodblog/tests.py b/djangodblog/tests.py
index 39eab9b153..3020e5084a 100644
--- a/djangodblog/tests.py
+++ b/djangodblog/tests.py
@@ -279,4 +279,10 @@ class DBLogTestCase(TestCase):
             logging.info('test', exc_info=sys.exc_info())
         self.assertEquals(Error.objects.count(), cnt+5)
         
-        self.tearDownHandler()
\ No newline at end of file
+        self.tearDownHandler()
+    
+    def testLongURLs(self):
+        # Fix: #6 solves URLs > 200 characters
+        error = Error.objects.create_from_text('hello world', url='a'*210)
+        self.assertEquals(error.url, 'a'*200)
+        self.assertEquals(error.data['url'], 'a'*210)
\ No newline at end of file
