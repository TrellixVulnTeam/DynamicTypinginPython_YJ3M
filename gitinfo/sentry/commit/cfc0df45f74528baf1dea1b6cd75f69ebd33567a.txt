commit cfc0df45f74528baf1dea1b6cd75f69ebd33567a
Author: Mark Story <mark@sentry.io>
Date:   Tue Feb 18 10:13:17 2020 -0500

    ref(ts) Convert localStorage and redirect to typescript. (#17066)

diff --git a/src/sentry/static/sentry/app/utils/__mocks__/localStorage.jsx b/src/sentry/static/sentry/app/utils/__mocks__/localStorage.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/utils/__mocks__/localStorage.jsx
rename to src/sentry/static/sentry/app/utils/__mocks__/localStorage.tsx
diff --git a/src/sentry/static/sentry/app/utils/localStorage.jsx b/src/sentry/static/sentry/app/utils/localStorage.jsx
deleted file mode 100644
index 97464283ed..0000000000
--- a/src/sentry/static/sentry/app/utils/localStorage.jsx
+++ /dev/null
@@ -1,27 +0,0 @@
-let functions = {};
-
-const localStorage = window.localStorage;
-
-try {
-  const mod = 'sentry';
-  localStorage.setItem(mod, mod);
-  localStorage.removeItem(mod);
-
-  functions = {
-    setItem: localStorage.setItem.bind(localStorage),
-    getItem: localStorage.getItem.bind(localStorage),
-  };
-} catch (e) {
-  functions = {
-    setItem() {
-      return;
-    },
-    // Returns null if key doesn't exist:
-    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/getItem
-    getItem() {
-      return null;
-    },
-  };
-}
-
-export default functions;
diff --git a/src/sentry/static/sentry/app/utils/localStorage.tsx b/src/sentry/static/sentry/app/utils/localStorage.tsx
new file mode 100644
index 0000000000..cdb74525a1
--- /dev/null
+++ b/src/sentry/static/sentry/app/utils/localStorage.tsx
@@ -0,0 +1,38 @@
+interface LocalStorage {
+  setItem(key: string, value: string): void;
+  getItem(key: string): string | null;
+  removeItem(key: string): void;
+}
+
+function createLocalStorage(): LocalStorage {
+  const localStorage = window.localStorage;
+  try {
+    const mod = 'sentry';
+    localStorage.setItem(mod, mod);
+    localStorage.removeItem(mod);
+
+    return {
+      setItem: localStorage.setItem.bind(localStorage),
+      getItem: localStorage.getItem.bind(localStorage),
+      removeItem: localStorage.removeItem.bind(localStorage),
+    } as LocalStorage;
+  } catch (e) {
+    return {
+      setItem() {
+        return;
+      },
+      // Returns null if key doesn't exist:
+      // https://developer.mozilla.org/en-US/docs/Web/API/Storage/getItem
+      getItem() {
+        return null;
+      },
+      removeItem() {
+        return null;
+      },
+    } as LocalStorage;
+  }
+}
+
+const functions = createLocalStorage();
+
+export default functions;
diff --git a/src/sentry/static/sentry/app/utils/redirect.jsx b/src/sentry/static/sentry/app/utils/redirect.tsx
similarity index 69%
rename from src/sentry/static/sentry/app/utils/redirect.jsx
rename to src/sentry/static/sentry/app/utils/redirect.tsx
index e42776a142..59497375ac 100644
--- a/src/sentry/static/sentry/app/utils/redirect.jsx
+++ b/src/sentry/static/sentry/app/utils/redirect.tsx
@@ -1,9 +1,16 @@
 import React from 'react';
 import PropTypes from 'prop-types';
+import {LocationDescriptor} from 'history';
+import * as ReactRouter from 'react-router';
+
+type Props = {
+  router: ReactRouter.InjectedRouter;
+  to: LocationDescriptor;
+};
 
 // This is react-router v4 <Redirect to="path/" /> component to allow things
 // to be declarative.
-class Redirect extends React.Component {
+class Redirect extends React.Component<Props> {
   static propTypes = {
     router: PropTypes.shape({
       replace: PropTypes.func.isRequired,
