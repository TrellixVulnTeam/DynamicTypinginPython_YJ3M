commit 77342c8ad88d0628c1d1a3647bd5c8a2bceacfd7
Author: Mark Story <mark@sentry.io>
Date:   Fri Sep 13 11:22:28 2019 -0400

    feat(discover2) Add filtering to the discover query menu (#14674)
    
    Improve the styling and add filtering to the discover saved query menu.
    
    * Add delete buttons to sidebar menu.
    * Add text highlighting to autocomplete.
    * Add edit button and tweak presentation.
    * Less padding on xxsmall buttons.
    
    Refs SEN-969
    Refs SEN-952

diff --git a/src/sentry/static/sentry/app/components/button.tsx b/src/sentry/static/sentry/app/components/button.tsx
index b8e292fc94..3e69f091dd 100644
--- a/src/sentry/static/sentry/app/components/button.tsx
+++ b/src/sentry/static/sentry/app/components/button.tsx
@@ -316,7 +316,7 @@ const getLabelPadding = ({size, priority, borderless}: StyledButtonProps) => {
     case 'zero':
       return '0';
     case 'xxsmall':
-      return borderless ? '2px 4px' : '4px 6px';
+      return borderless ? '1px 2px' : '2px 4px';
     case 'xsmall':
       return borderless ? '4px 6px' : '6px 10px';
     case 'small':
diff --git a/src/sentry/static/sentry/app/components/buttonBar.tsx b/src/sentry/static/sentry/app/components/buttonBar.tsx
new file mode 100644
index 0000000000..7574cc4f20
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/buttonBar.tsx
@@ -0,0 +1,9 @@
+import styled from 'react-emotion';
+
+const ButtonBar = styled('div')`
+  display: flex;
+  justify-content: flex-end;
+  align-items: center;
+`;
+
+export default ButtonBar;
diff --git a/src/sentry/static/sentry/app/components/sidebar/discover2Item.tsx b/src/sentry/static/sentry/app/components/sidebar/discover2Item.tsx
index bfc973d97f..c38d0e3291 100644
--- a/src/sentry/static/sentry/app/components/sidebar/discover2Item.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/discover2Item.tsx
@@ -1,15 +1,24 @@
 import React from 'react';
 import styled from 'react-emotion';
+import {browserHistory} from 'react-router';
 
 import {Client} from 'app/api';
+import AutoComplete from 'app/components/autoComplete';
+import Button from 'app/components/button';
+import ButtonBar from 'app/components/buttonBar';
 import Feature from 'app/components/acl/feature';
-import {fetchSavedQueries} from 'app/actionCreators/discoverSavedQueries';
-import Link from 'app/components/links/link';
+import {
+  fetchSavedQueries,
+  deleteSavedQuery,
+} from 'app/actionCreators/discoverSavedQueries';
+import Highlight from 'app/components/highlight';
+import InlineSvg from 'app/components/inlineSvg';
 import {t} from 'app/locale';
 import {Organization} from 'app/types';
 import {SavedQuery} from 'app/views/discover/types';
 import EventView from 'app/views/eventsV2/eventView';
 
+import {domId} from 'app/utils/domId';
 import space from 'app/styles/space';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import withApi from 'app/utils/withApi';
@@ -25,18 +34,23 @@ type Props = React.ComponentProps<SidebarItem> & {
 
 type State = {
   isOpen: boolean;
+  search: string;
 };
 
 class Discover2Item extends React.Component<Props, State> {
   state = {
+    search: '',
     isOpen: false,
   };
 
   componentDidMount() {
     const {api, organization} = this.props;
     fetchSavedQueries(api, organization.slug);
+    this.menuId = domId('discover-menu');
   }
 
+  private menuId: string = '';
+
   handleEnter = () => {
     this.setState({isOpen: true});
   };
@@ -45,22 +59,73 @@ class Discover2Item extends React.Component<Props, State> {
     this.setState({isOpen: false});
   };
 
-  renderSavedQueries() {
-    const {savedQueries, organization} = this.props;
+  handleSelect = item => {
+    const {organization} = this.props;
+    const target = {
+      pathname: `/organizations/${organization.slug}/eventsv2/`,
+      query: EventView.fromSavedQuery(item).generateQueryStringObject(),
+    };
+    browserHistory.push(target);
+  };
+
+  handleEdit = (event, item) => {
+    event.preventDefault();
+    event.stopPropagation();
+    const {organization} = this.props;
+    const target = {
+      pathname: `/organizations/${organization.slug}/eventsv2/`,
+      query: {...EventView.fromSavedQuery(item).generateQueryStringObject(), edit: true},
+    };
+    browserHistory.push(target);
+  };
+
+  handleDelete = (event: React.MouseEvent<Element>, item: SavedQuery) => {
+    const {organization, api} = this.props;
+    event.preventDefault();
+    event.stopPropagation();
+    deleteSavedQuery(api, organization.slug, item.id);
+  };
+
+  renderSavedQueries({inputValue, getItemProps, highlightedIndex}) {
+    const {savedQueries} = this.props;
     if (!savedQueries || savedQueries.length === 0) {
       return <span>No saved queries</span>;
     }
-    return savedQueries.map(item => {
-      const target = {
-        pathname: `/organizations/${organization.slug}/eventsv2/`,
-        query: EventView.fromSavedQuery(item).generateQueryStringObject(),
-      };
-      return (
-        <MenuItem aria-role="menuitem" to={target} key={item.id}>
-          {item.name}
-        </MenuItem>
-      );
-    });
+    const lowerInputValue = inputValue.toLowerCase();
+    return savedQueries
+      .filter(item => {
+        return lowerInputValue.length
+          ? item.name.toLowerCase().indexOf(lowerInputValue) > -1
+          : true;
+      })
+      .map((item, index) => {
+        return (
+          <MenuItem
+            {...getItemProps({item, index})}
+            active={highlightedIndex === index}
+            role="menuitem"
+            key={item.id}
+          >
+            <QueryName>
+              <Highlight text={inputValue}>{item.name}</Highlight>
+            </QueryName>
+            <ButtonBar>
+              <MenuItemButton
+                borderless
+                size="xxsmall"
+                icon="icon-edit"
+                onClick={event => this.handleEdit(event, item)}
+              />
+              <MenuItemButton
+                borderless
+                size="xxsmall"
+                icon="icon-trash"
+                onClick={event => this.handleDelete(event, item)}
+              />
+            </ButtonBar>
+          </MenuItem>
+        );
+      });
   }
 
   render() {
@@ -69,6 +134,8 @@ class Discover2Item extends React.Component<Props, State> {
     const navProps = {
       'aria-label': t('Discover Saved Queries'),
       'aria-haspopup': true,
+      'aria-controls': this.menuId,
+      role: 'menubutton',
       onMouseLeave: this.handleLeave,
       onMouseEnter: this.handleEnter,
     };
@@ -77,6 +144,8 @@ class Discover2Item extends React.Component<Props, State> {
     }
 
     const sidebarItem = <SidebarItem {...sidebarItemProps} />;
+    const inputId = `${this.menuId}-input`;
+
     return (
       <Feature
         features={['discover-v2-query-builder']}
@@ -85,9 +154,38 @@ class Discover2Item extends React.Component<Props, State> {
       >
         <nav {...navProps}>
           {sidebarItem}
-          <Hitbox isOpen={isOpen}>
-            <Menu aria-role="menu">{this.renderSavedQueries()}</Menu>
-          </Hitbox>
+          <AutoComplete
+            inputIsActor={false}
+            itemToString={item => item.name}
+            isOpen={isOpen}
+            onSelect={this.handleSelect}
+            resetInputOnClose
+          >
+            {({getInputProps, getItemProps, inputValue, highlightedIndex}) => {
+              return (
+                <Hitbox role="menu" id={this.menuId} isOpen={isOpen}>
+                  <InputContainer>
+                    <StyledLabel for={inputId}>
+                      <InlineSvg src="icon-search" size="16" />
+                    </StyledLabel>
+                    <StyledInput
+                      type="text"
+                      id={inputId}
+                      placeholder={t('Filter searches')}
+                      {...getInputProps({})}
+                    />
+                  </InputContainer>
+                  <Menu>
+                    {this.renderSavedQueries({
+                      getItemProps,
+                      inputValue,
+                      highlightedIndex,
+                    })}
+                  </Menu>
+                </Hitbox>
+              );
+            }}
+          </AutoComplete>
         </nav>
       </Feature>
     );
@@ -107,26 +205,88 @@ const Hitbox = styled('div')<HitboxProps>`
   position: absolute;
   right: -330px;
   width: 350px;
-  height: 200px;
   padding-left: ${space(3)};
   transform: translateY(-30px);
+  box-shadow: ${p => p.theme.dropShadowHeavy};
 `;
 
 const Menu = styled('div')`
   height: 100%;
-  background: ${p => p.theme.gray4};
-  border-radius: 0 ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0;
-  border: 1px solid ${p => p.theme.sidebar.background};
+  border-bottom-right-radius: ${p => p.theme.borderRadius};
+  border: 1px solid ${p => p.theme.borderDark};
+  border-top: none;
+  max-height: 245px;
+  overflow: auto;
+  background-clip: border-box;
 `;
 
-const MenuItem = styled(Link)`
-  display: block;
-  padding: ${space(1)} ${space(2)};
-  color: ${p => p.theme.sidebar.color};
-  border-bottom: 1px solid ${p => p.theme.gray3};
+type MenuItemProps = {
+  active: boolean;
+};
+const MenuItem = styled('span')<MenuItemProps>`
+  display: flex;
+  flex-direction: row;
+  justify-content: space-between;
+  align-items: center;
+  position: relative;
+  padding: ${space(1.5)} ${space(1)} ${space(1.5)} ${space(2)};
+  color: ${p => (p.active ? p.theme.gray3 : p.theme.gray2)};
+  background: ${p => (p.active ? p.theme.offWhiteLight : p.theme.offWhite)};
+  border-bottom: 1px solid ${p => p.theme.borderLight};
   &:focus,
   &:hover {
-    color: ${p => p.theme.gray1};
+    background: ${p => p.theme.offWhiteLight};
+    color: ${p => p.theme.gray3};
+    cursor: pointer;
   }
+`;
+
+const QueryName = styled('span')`
   ${overflowEllipsis};
+  line-height: 1.2;
+`;
+
+const StyledLabel = styled('label')<{for: string}>`
+  margin: 0;
+  color: ${p => p.theme.gray2};
+  padding: ${space(1.5)} ${space(1)} ${space(1.5)} ${space(2)};
+`;
+
+const MenuItemButton = styled(Button)`
+  color: ${p => p.theme.gray3};
+  margin-left: ${space(0.5)};
+`;
+
+const InputContainer = styled('div')`
+  display: flex;
+  align-items: center;
+  background: ${p => p.theme.white};
+  border-top-right-radius: ${p => p.theme.borderRadius};
+  border: 1px solid ${p => p.theme.borderDark};
+  border-bottom: 0;
+
+  /* Border triangle */
+  &::before {
+    content: '';
+    margin: auto;
+    display: block;
+    position: absolute;
+    left: 11px;
+    top: 11px;
+    width: 5px;
+    height: 10px;
+    border-style: solid;
+    border-width: 10px 10px 10px 0;
+    border-color: transparent #fff transparent transparent;
+  }
+`;
+
+const StyledInput = styled('input')`
+  color: ${p => p.theme.gray2};
+  flex-grow: 1;
+  height: 38px;
+  line-height: 38px;
+  background: none;
+  outline: none;
+  border: none;
 `;
diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
index c80873d6a5..1cc6dc6958 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
@@ -25,6 +25,7 @@ import {
 import {fetchReleases} from 'app/actionCreators/releases';
 import {t} from 'app/locale';
 import Button from 'app/components/button';
+import ButtonBar from 'app/components/buttonBar';
 import CreateSavedSearchButton from 'app/views/issueList/createSavedSearchButton';
 import InlineSvg from 'app/components/inlineSvg';
 import DropdownLink from 'app/components/dropdownLink';
@@ -907,7 +908,7 @@ class SmartSearchBar extends React.Component {
         ) : (
           input
         )}
-        <ButtonBar>
+        <StyledButtonBar>
           {this.state.query !== '' && (
             <InputButton
               type="button"
@@ -1016,7 +1017,7 @@ class SmartSearchBar extends React.Component {
               )}
             </StyledDropdownLink>
           )}
-        </ButtonBar>
+        </StyledButtonBar>
       </Container>
     );
   }
@@ -1088,13 +1089,6 @@ const Container = styled('div')`
   }
 `;
 
-const ButtonBar = styled('div')`
-  display: flex;
-  justify-content: flex-end;
-  margin-right: ${space(1)};
-  align-items: center;
-`;
-
 const DropdownWrapper = styled('div')`
   display: ${p => (p.visible ? 'block' : 'none')};
 `;
@@ -1149,6 +1143,10 @@ const DropdownElement = styled('a')`
   ${getDropdownElementStyles}
 `;
 
+const StyledButtonBar = styled(ButtonBar)`
+  margin-right: ${space(1)};
+`;
+
 const MenuIcon = styled(InlineSvg)`
   margin-right: ${space(1)};
 `;
diff --git a/src/sentry/static/sentry/app/utils/theme.tsx b/src/sentry/static/sentry/app/utils/theme.tsx
index 9939b68244..b22b5b2543 100644
--- a/src/sentry/static/sentry/app/utils/theme.tsx
+++ b/src/sentry/static/sentry/app/utils/theme.tsx
@@ -5,9 +5,11 @@ import CHART_PALETTE from 'app/constants/chartPalette';
 const colors = {
   // Colors
   offWhite: '#FAF9FB',
+  offWhiteLight: '#F2F0F5',
   offWhite2: '#E7E1EC',
-  whiteDark: '#fbfbfc',
+
   white: '#FFFFFF',
+  whiteDark: '#fbfbfc',
   foreground: '#493E54',
 
   gray1: '#BDB4C7',
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
index 49881d24a4..c0d5b997fa 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
@@ -351,6 +351,7 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
                                       "headerSelectorRowHeight": 44,
                                       "offWhite": "#FAF9FB",
                                       "offWhite2": "#E7E1EC",
+                                      "offWhiteLight": "#F2F0F5",
                                       "orange": "#ec5e44",
                                       "orangeDark": "#D3452B",
                                       "orangeLight": "#FF785E",
@@ -624,6 +625,7 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
                                               "headerSelectorRowHeight": 44,
                                               "offWhite": "#FAF9FB",
                                               "offWhite2": "#E7E1EC",
+                                              "offWhiteLight": "#F2F0F5",
                                               "orange": "#ec5e44",
                                               "orangeDark": "#D3452B",
                                               "orangeLight": "#FF785E",
