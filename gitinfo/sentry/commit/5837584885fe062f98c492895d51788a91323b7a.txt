commit 5837584885fe062f98c492895d51788a91323b7a
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Jan 22 14:07:17 2018 -0800

    feat(ui): Move API Auth Tokens to new settings (#6958)

diff --git a/docs-ui/components/multipleCheckbox.stories.js b/docs-ui/components/multipleCheckbox.stories.js
new file mode 100644
index 0000000000..772cfe521f
--- /dev/null
+++ b/docs-ui/components/multipleCheckbox.stories.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import {action} from '@storybook/addon-actions';
+
+import MultipleCheckbox from 'application-root/views/settings/components/forms/controls/multipleCheckbox';
+
+storiesOf('Forms/Fields', module).add(
+  'MultipleCheckbox',
+  withInfo('Multiple Checkbox Control (controlled only atm)')(() => (
+    <MultipleCheckbox
+      choices={[['foo', 'Foo'], ['bar', 'Bar'], ['baz', 'Baz']]}
+      value={['bar']}
+      onChange={(v, e) => {
+        action('MultipleCheckbox change')(v, e);
+      }}
+    />
+  ))
+);
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index e0e415c34c..620e834784 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -175,6 +175,23 @@ const accountSettingsRoutes = [
   />,
 
   <Route key="api" path="api/" name="API">
+    <IndexRedirect to="auth-tokens/" />
+
+    <Route path="auth-tokens/" name="Auth Tokens">
+      <IndexRoute
+        componentPromise={() =>
+          import(/*webpackChunkName: "ApiTokensIndex"*/ './views/settings/account/apiTokens')}
+        component={errorHandler(LazyLoad)}
+      />
+      <Route
+        path="new-token/"
+        name="Create New Token"
+        componentPromise={() =>
+          import(/*webpackChunkName: "ApiTokenCreate"*/ './views/settings/account/apiNewToken')}
+        component={errorHandler(LazyLoad)}
+      />
+    </Route>
+
     <Route path="applications/" name="Applications">
       <IndexRoute
         componentPromise={() =>
diff --git a/src/sentry/static/sentry/app/views/settings/account/apiNewToken.jsx b/src/sentry/static/sentry/app/views/settings/account/apiNewToken.jsx
new file mode 100644
index 0000000000..d85041b643
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/account/apiNewToken.jsx
@@ -0,0 +1,84 @@
+import {browserHistory} from 'react-router';
+import DocumentTitle from 'react-document-title';
+import React from 'react';
+
+import {API_SCOPES, DEFAULT_API_SCOPES} from '../../../constants';
+import {t, tct} from '../../../locale';
+import ApiForm from '../components/forms/apiForm';
+import FormField from '../components/forms/formField';
+import MultipleCheckbox from '../components/forms/controls/multipleCheckbox';
+import Panel from '../components/panel';
+import PanelBody from '../components/panelBody';
+import PanelHeader from '../components/panelHeader';
+import SettingsPageHeader from '../components/settingsPageHeader';
+import TextBlock from '../components/text/textBlock';
+
+const SORTED_DEFAULT_API_SCOPES = DEFAULT_API_SCOPES.sort();
+const API_CHOICES = API_SCOPES.map(s => [s, s]);
+const API_INDEX_ROUTE = '/settings/account/api/auth-tokens';
+
+export default class ApiNewToken extends React.Component {
+  onCancel = () => {
+    browserHistory.push(API_INDEX_ROUTE);
+  };
+
+  onSubmitSuccess = () => {
+    browserHistory.push(API_INDEX_ROUTE);
+  };
+
+  render() {
+    return (
+      <DocumentTitle title="Create API Token">
+        <div>
+          <SettingsPageHeader title={t('Create New Token')} />
+          <TextBlock>
+            {t(
+              "Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API."
+            )}
+          </TextBlock>
+          <TextBlock>
+            {tct(
+              'For more information on how to use the web API, see our [link:documentation].',
+              {
+                link: <a href="https://docs.sentry.io/hosted/api/" />,
+              }
+            )}
+          </TextBlock>
+          <Panel>
+            <PanelHeader>{t('Create New Token')}</PanelHeader>
+            <ApiForm
+              apiMethod="POST"
+              apiEndpoint="/api-tokens/"
+              initialData={{scopes: SORTED_DEFAULT_API_SCOPES}}
+              onSubmitSuccess={this.onSubmitSuccess}
+              onCancel={this.onCancel}
+              footerStyle={{
+                marginTop: 0,
+                paddingRight: 20,
+              }}
+              submitLabel={t('Create Token')}
+            >
+              <PanelBody>
+                <FormField
+                  name="scopes"
+                  choices={API_CHOICES}
+                  label={t('Scopes')}
+                  inline={false}
+                  required
+                >
+                  {({value, onChange}) => (
+                    <MultipleCheckbox
+                      onChange={onChange}
+                      value={value.peek()}
+                      choices={API_CHOICES}
+                    />
+                  )}
+                </FormField>
+              </PanelBody>
+            </ApiForm>
+          </Panel>
+        </div>
+      </DocumentTitle>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/account/apiTokenRow.jsx b/src/sentry/static/sentry/app/views/settings/account/apiTokenRow.jsx
new file mode 100644
index 0000000000..acf50a9a09
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/account/apiTokenRow.jsx
@@ -0,0 +1,74 @@
+import {Box, Flex} from 'grid-emotion';
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import {t} from '../../../locale';
+import Button from '../../../components/buttons/button';
+import DateTime from '../../../components/dateTime';
+import Row from '../components/row';
+import TextCopyInput from '../components/forms/textCopyInput';
+
+const ScopeList = styled.div`
+  font-size: 0.9em;
+  color: #999;
+`;
+
+const Created = styled.div`
+  font-size: 0.9em;
+`;
+
+class ApiTokenRow extends React.Component {
+  static propTypes = {
+    token: PropTypes.object.isRequired,
+    onRemove: PropTypes.func.isRequired,
+  };
+
+  handleRemove = () => {
+    let {onRemove, token} = this.props;
+    onRemove(token);
+  };
+
+  render() {
+    let {token} = this.props;
+
+    return (
+      <Row justify="space-between" px={2} py={2}>
+        <Box flex="1">
+          <div style={{marginBottom: 5}}>
+            <small>
+              <TextCopyInput
+                flexValueContainer={false}
+                renderer={({value, ref}) => (
+                  <Flex align="center" ref={ref}>
+                    {value}
+                  </Flex>
+                )}
+              >
+                {token.token}
+              </TextCopyInput>
+            </small>
+          </div>
+          <div style={{marginBottom: 5}}>
+            <Created>
+              {t('Created')} <DateTime date={token.dateCreated} />
+            </Created>
+          </div>
+          <div>
+            <ScopeList>{token.scopes.join(', ')}</ScopeList>
+          </div>
+        </Box>
+
+        <Flex align="center">
+          <Box pl={2}>
+            <Button onClick={this.handleRemove}>
+              <span className="icon icon-trash" />
+            </Button>
+          </Box>
+        </Flex>
+      </Row>
+    );
+  }
+}
+
+export default ApiTokenRow;
diff --git a/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx b/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
new file mode 100644
index 0000000000..298599afa4
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
@@ -0,0 +1,132 @@
+import {Box, Flex} from 'grid-emotion';
+import React from 'react';
+
+import {t, tct} from '../../../locale';
+import ApiTokenRow from './apiTokenRow';
+import AsyncView from '../../asyncView';
+import Button from '../../../components/buttons/button';
+import EmptyMessage from '../components/emptyMessage';
+import IndicatorStore from '../../../stores/indicatorStore';
+import Panel from '../components/panel';
+import PanelBody from '../components/panelBody';
+import PanelHeader from '../components/panelHeader';
+import SettingsPageHeader from '../components/settingsPageHeader';
+import TextBlock from '../components/text/textBlock';
+
+class ApiTokens extends AsyncView {
+  getTitle() {
+    return 'API Tokens - Sentry';
+  }
+
+  getDefaultState() {
+    return {
+      loading: true,
+      error: false,
+      tokenList: [],
+    };
+  }
+
+  getEndpoints() {
+    return [['tokenList', '/api-tokens/']];
+  }
+
+  handleRemoveToken = token => {
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
+    let oldTokenList = this.state.tokenList;
+
+    this.setState(
+      state => ({
+        tokenList: state.tokenList.filter(tk => tk.token !== token.token),
+      }),
+      () =>
+        this.api.request('/api-tokens/', {
+          method: 'DELETE',
+          data: {token: token.token},
+          success: data => {
+            IndicatorStore.remove(loadingIndicator);
+            IndicatorStore.addSuccess(t('Removed token'));
+          },
+          error: () => {
+            IndicatorStore.remove(loadingIndicator);
+            IndicatorStore.addError(t('Unable to remove token. Please try again.'));
+            this.setState({
+              tokenList: oldTokenList,
+            });
+          },
+        })
+    );
+  };
+
+  renderBody() {
+    let {tokenList} = this.state;
+
+    let isEmpty = tokenList.length === 0;
+
+    let action = (
+      <Button
+        priority="primary"
+        size="small"
+        to="/settings/account/api/auth-tokens/new-token/"
+        className="ref-create-token"
+      >
+        {t('Create New Token')}
+      </Button>
+    );
+
+    return (
+      <div>
+        <SettingsPageHeader title="Auth Tokens" action={action} />
+        <TextBlock>
+          {t(
+            "Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API."
+          )}
+        </TextBlock>
+        <TextBlock>
+          {tct(
+            'For more information on how to use the web API, see our [link:documentation].',
+            {
+              link: <a href="https://docs.sentry.io/hosted/api/" />,
+            }
+          )}
+        </TextBlock>
+        <TextBlock>
+          <small>
+            psst. Looking for the <strong>DSN</strong> for an SDK? You'll find that under{' '}
+            <strong>[Project] » Settings » Client Keys</strong>
+            .
+          </small>
+        </TextBlock>
+        <Panel>
+          <PanelHeader disablePadding>
+            <Flex align="center">
+              <Box px={2} flex="1">
+                {t('Auth Token')}
+              </Box>
+            </Flex>
+          </PanelHeader>
+
+          <PanelBody>
+            {isEmpty && (
+              <EmptyMessage>
+                {t("You haven't created any authentication tokens yet.")}
+              </EmptyMessage>
+            )}
+
+            {!isEmpty &&
+              tokenList.map(token => {
+                return (
+                  <ApiTokenRow
+                    key={token.token}
+                    token={token}
+                    onRemove={this.handleRemoveToken}
+                  />
+                );
+              })}
+          </PanelBody>
+        </Panel>
+      </div>
+    );
+  }
+}
+
+export default ApiTokens;
diff --git a/src/sentry/static/sentry/app/views/settings/account/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/account/navigationConfiguration.jsx
index b88f1803f4..885aa06060 100644
--- a/src/sentry/static/sentry/app/views/settings/account/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/navigationConfiguration.jsx
@@ -39,6 +39,10 @@ const accountNavigation = [
         path: `${pathPrefix}/api/applications/`,
         title: t('Applications'),
       },
+      {
+        path: `${pathPrefix}/api/auth-tokens/`,
+        title: t('Auth Tokens'),
+      },
     ],
   },
 ];
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/controls/multipleCheckbox.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/controls/multipleCheckbox.jsx
new file mode 100644
index 0000000000..f4a054a5cc
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/controls/multipleCheckbox.jsx
@@ -0,0 +1,73 @@
+import {Box} from 'grid-emotion';
+
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import {defined} from '../../../../../utils';
+
+const MultipleCheckboxWrapper = styled.div`
+  display: flex;
+  flex-wrap: wrap;
+`;
+
+const Label = styled.label`
+  font-weight: normal;
+  white-space: nowrap;
+  margin-right: 10px;
+  margin-bottom: 10px;
+  width: 20%;
+`;
+
+const CheckboxLabel = styled.span`
+  margin-left: 3px;
+`;
+
+export default class MultipleCheckbox extends React.Component {
+  static propTypes = {
+    value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
+    onChange: PropTypes.func,
+    disabled: PropTypes.bool,
+    choices: PropTypes.array.isRequired,
+  };
+
+  onChange = (selectedValue, e) => {
+    let {value, onChange} = this.props;
+    let newValue;
+
+    if (typeof onChange !== 'function') return;
+
+    if (e.target.checked) {
+      newValue = value ? [...value, selectedValue] : [value];
+    } else {
+      newValue = value.filter(v => v !== selectedValue);
+    }
+
+    onChange(newValue, e);
+  };
+
+  render() {
+    let {disabled, choices, value} = this.props;
+
+    return (
+      <MultipleCheckboxWrapper>
+        {choices.map(([choiceValue, choiceLabel]) => {
+          return (
+            <Box key={choiceValue} w={[1, 1 / 2, 1 / 3, 1 / 4]}>
+              <Label>
+                <input
+                  type="checkbox"
+                  value={choiceValue}
+                  onChange={this.onChange.bind(this, choiceValue)}
+                  disabled={disabled}
+                  checked={defined(value) && value.indexOf(choiceValue) !== -1}
+                />
+                <CheckboxLabel>{choiceLabel}</CheckboxLabel>
+              </Label>
+            </Box>
+          );
+        })}
+      </MultipleCheckboxWrapper>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
index f62f5a51f9..e71405efad 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
@@ -16,6 +16,7 @@ export default class Form extends React.Component {
     submitDisabled: PropTypes.bool,
     submitLabel: PropTypes.string,
     footerClass: PropTypes.string,
+    footerStyle: PropTypes.object,
     extraButton: PropTypes.element,
     initialData: PropTypes.object,
     requireChanges: PropTypes.bool,
@@ -107,6 +108,7 @@ export default class Form extends React.Component {
       className,
       children,
       footerClass,
+      footerStyle,
       submitDisabled,
       submitLabel,
       cancelLabel,
@@ -122,7 +124,7 @@ export default class Form extends React.Component {
         {children}
 
         {shouldShowFooter && (
-          <div className={footerClass} style={{marginTop: 25}}>
+          <div className={footerClass} style={{marginTop: 25, ...footerStyle}}>
             <Observer>
               {() => (
                 <Button
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 749d47ac60..8c7b1c4a23 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -71,6 +71,14 @@ window.TestStubs = {
     };
   },
 
+  ApiToken: () => {
+    return {
+      token: 'apitoken123',
+      dateCreated: new Date('Thu Jan 11 2018 18:01:41 GMT-0800 (PST)'),
+      scopes: ['scope1', 'scope2'],
+    };
+  },
+
   AuthProviders: () => {
     return [['dummy', 'Dummy']];
   },
diff --git a/tests/js/spec/components/__snapshots__/multipleCheckbox.spec.js.snap b/tests/js/spec/components/__snapshots__/multipleCheckbox.spec.js.snap
new file mode 100644
index 0000000000..96a7116c2c
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/multipleCheckbox.spec.js.snap
@@ -0,0 +1,75 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`MultipleCheckbox renders 1`] = `
+<Styled(div)>
+  <Box
+    key="0"
+    w={
+      Array [
+        1,
+        0.5,
+        0.3333333333333333,
+        0.25,
+      ]
+    }
+  >
+    <Styled(label)>
+      <input
+        checked={false}
+        onChange={[Function]}
+        type="checkbox"
+        value={0}
+      />
+      <Styled(span)>
+        Choice A
+      </Styled(span)>
+    </Styled(label)>
+  </Box>
+  <Box
+    key="1"
+    w={
+      Array [
+        1,
+        0.5,
+        0.3333333333333333,
+        0.25,
+      ]
+    }
+  >
+    <Styled(label)>
+      <input
+        checked={true}
+        onChange={[Function]}
+        type="checkbox"
+        value={1}
+      />
+      <Styled(span)>
+        Choice B
+      </Styled(span)>
+    </Styled(label)>
+  </Box>
+  <Box
+    key="2"
+    w={
+      Array [
+        1,
+        0.5,
+        0.3333333333333333,
+        0.25,
+      ]
+    }
+  >
+    <Styled(label)>
+      <input
+        checked={false}
+        onChange={[Function]}
+        type="checkbox"
+        value={2}
+      />
+      <Styled(span)>
+        Choice C
+      </Styled(span)>
+    </Styled(label)>
+  </Box>
+</Styled(div)>
+`;
diff --git a/tests/js/spec/components/multipleCheckbox.spec.js b/tests/js/spec/components/multipleCheckbox.spec.js
new file mode 100644
index 0000000000..86e6504dba
--- /dev/null
+++ b/tests/js/spec/components/multipleCheckbox.spec.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+import MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';
+
+describe('MultipleCheckbox', function() {
+  it('renders', function() {
+    let wrapper = shallow(
+      <MultipleCheckbox
+        choices={[[0, 'Choice A'], [1, 'Choice B'], [2, 'Choice C']]}
+        value={[1]}
+      />
+    );
+
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('unselects a checked input', function() {
+    let onChange = jest.fn();
+    let wrapper = mount(
+      <MultipleCheckbox
+        choices={[[0, 'Choice A'], [1, 'Choice B'], [2, 'Choice C']]}
+        value={[1]}
+        onChange={onChange}
+      />
+    );
+
+    wrapper
+      .find('input')
+      .at(1)
+      .simulate('change', {target: {checked: false}});
+    expect(onChange).toHaveBeenCalledWith([], expect.anything());
+  });
+
+  it('selects an unchecked input', function() {
+    let onChange = jest.fn();
+    let wrapper = mount(
+      <MultipleCheckbox
+        choices={[[0, 'Choice A'], [1, 'Choice B'], [2, 'Choice C']]}
+        value={[1]}
+        onChange={onChange}
+      />
+    );
+
+    wrapper
+      .find('input')
+      .at(0)
+      .simulate('change', {target: {checked: true}});
+    expect(onChange).toHaveBeenCalledWith([1, 0], expect.anything());
+  });
+});
diff --git a/tests/js/spec/views/__snapshots__/apiTokenRow.spec.jsx.snap b/tests/js/spec/views/__snapshots__/apiTokenRow.spec.jsx.snap
new file mode 100644
index 0000000000..df53f99eec
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/apiTokenRow.spec.jsx.snap
@@ -0,0 +1,69 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ApiTokenRow renders 1`] = `
+<Row
+  justify="space-between"
+  p={2}
+  px={2}
+  py={2}
+>
+  <Box
+    flex="1"
+  >
+    <div
+      style={
+        Object {
+          "marginBottom": 5,
+        }
+      }
+    >
+      <small>
+        <TextCopyInput
+          flexValueContainer={false}
+          onCopy={[Function]}
+          renderer={[Function]}
+        >
+          apitoken123
+        </TextCopyInput>
+      </small>
+    </div>
+    <div
+      style={
+        Object {
+          "marginBottom": 5,
+        }
+      }
+    >
+      <Styled(div)>
+        Created
+         
+        <DateTime
+          date={2018-01-12T02:01:41.000Z}
+          seconds={true}
+        />
+      </Styled(div)>
+    </div>
+    <div>
+      <Styled(div)>
+        scope1, scope2
+      </Styled(div)>
+    </div>
+  </Box>
+  <Flex
+    align="center"
+  >
+    <Box
+      pl={2}
+    >
+      <Button
+        disabled={false}
+        onClick={[Function]}
+      >
+        <span
+          className="icon icon-trash"
+        />
+      </Button>
+    </Box>
+  </Flex>
+</Row>
+`;
diff --git a/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap b/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
new file mode 100644
index 0000000000..b406c52264
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
@@ -0,0 +1,690 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ApiTokens renders empty result 1`] = `
+<SideEffect(DocumentTitle)
+  title="API Tokens - Sentry"
+>
+  <div>
+    <SettingsPageHeading
+      action={
+        <Button
+          className="ref-create-token"
+          disabled={false}
+          priority="primary"
+          size="small"
+          to="/settings/account/api/auth-tokens/new-token/"
+        >
+          Create New Token
+        </Button>
+      }
+      title="Auth Tokens"
+    />
+    <Styled(div)>
+      Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.
+    </Styled(div)>
+    <Styled(div)>
+      <span
+        key="5"
+      >
+        <span
+          key="0"
+        >
+          For more information on how to use the web API, see our 
+        </span>
+        <a
+          href="https://docs.sentry.io/hosted/api/"
+          key="2"
+        >
+          <span
+            key="1"
+          >
+            documentation
+          </span>
+        </a>
+        <span
+          key="3"
+        >
+          .
+        </span>
+      </span>
+    </Styled(div)>
+    <Styled(div)>
+      <small>
+        psst. Looking for the 
+        <strong>
+          DSN
+        </strong>
+         for an SDK? You'll find that under
+         
+        <strong>
+          [Project] » Settings » Client Keys
+        </strong>
+        .
+      </small>
+    </Styled(div)>
+    <Styled(div)>
+      <PanelHeader
+        disablePadding={true}
+      >
+        <Flex
+          align="center"
+        >
+          <Box
+            flex="1"
+            px={2}
+          >
+            Auth Token
+          </Box>
+        </Flex>
+      </PanelHeader>
+      <Styled(div)>
+        <Styled(div)>
+          You haven't created any authentication tokens yet.
+        </Styled(div)>
+      </Styled(div)>
+    </Styled(div)>
+  </div>
+</SideEffect(DocumentTitle)>
+`;
+
+exports[`ApiTokens renders with result 1`] = `
+.glamor-4 {
+  font-size: 14px;
+  box-shadow: inset 0 -1px 0;
+  margin: -20px 0 30px;
+}
+
+.glamor-2 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-align-items: center;
+  -webkit-box-align: center;
+  -ms-flex-align: center;
+  align-items: center;
+}
+
+.glamor-0 {
+  font-size: 20px;
+  font-weight: bold;
+  margin: 20px 0;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-6 {
+  line-height: 1.5;
+  margin-bottom: 30px;
+}
+
+.glamor-49 {
+  background: #fff;
+  border: 1px solid;
+  margin-bottom: 30px;
+  position: relative;
+}
+
+.glamor-23 {
+  border-bottom: 1px solid;
+  border-radius: 0 0;
+  background: padding:15px 0;
+  text-transform: uppercase;
+  font-size: 13px;
+}
+
+.glamor-19 {
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-17 {
+  font-size: 12px;
+  font-weight: 600;
+  text-transform: uppercase;
+  margin-bottom: 20px;
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-12 {
+  box-sizing: border-box;
+  padding-left: 16px;
+  padding-right: 16px;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-43 {
+  box-sizing: border-box;
+  padding: 16px;
+  padding-left: 16px;
+  padding-right: 16px;
+  padding-top: 16px;
+  padding-bottom: 16px;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-box-pack: justify;
+  -webkit-justify-content: space-between;
+  -ms-flex-pack: justify;
+  justify-content: space-between;
+  border-bottom: 1px solid;
+}
+
+.glamor-43:last-child {
+  border: 0;
+}
+
+.glamor-37 {
+  box-sizing: border-box;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-31 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+}
+
+.glamor-29 {
+  -webkit-box-flex: 1;
+  -webkit-flex-grow: 1;
+  -ms-flex-positive: 1;
+  flex-grow: 1;
+  border: none;
+}
+
+.glamor-25 {
+  display: block;
+  width: 100%;
+  border: 1px solid;
+  border-radius: 2px;
+  padding: 0.5em;
+  -webkit-transition: border 0.2s ease;
+  transition: border 0.2s ease;
+  resize: vertical;
+  cursor: default;
+  border-right-width: 0;
+  border-top-right-radius: 0;
+  border-bottom-right-radius: 0;
+}
+
+.glamor-25:focus {
+  outline: none;
+  background: #fff;
+}
+
+.glamor-25:hover,
+.glamor-25:focus {
+  border: 1px solid;
+}
+
+.glamor-25:hover,
+.glamor-25:focus {
+  border-right-width: 0;
+}
+
+.glamor-25:hover,
+.glamor-25:focus {
+  border-right-width: 0;
+}
+
+.glamor-25:hover,
+.glamor-25:focus {
+  border-right-width: 0;
+}
+
+.glamor-25:hover,
+.glamor-25:focus {
+  border-right-width: 0;
+}
+
+.glamor-33 {
+  font-size: 0.9em;
+}
+
+.glamor-35 {
+  font-size: 0.9em;
+  color: #999;
+}
+
+.glamor-39 {
+  box-sizing: border-box;
+  padding-left: 16px;
+}
+
+<ApiTokens>
+  <SideEffect(DocumentTitle)
+    title="API Tokens - Sentry"
+  >
+    <DocumentTitle
+      title="API Tokens - Sentry"
+    >
+      <div>
+        <SettingsPageHeading
+          action={
+            <Button
+              className="ref-create-token"
+              disabled={false}
+              priority="primary"
+              size="small"
+              to="/settings/account/api/auth-tokens/new-token/"
+            >
+              Create New Token
+            </Button>
+          }
+          title="Auth Tokens"
+        >
+          <Styled(div)>
+            <div
+              className="glamor-4 glamor-5"
+            >
+              <Flex
+                align="center"
+              >
+                <Base
+                  align="center"
+                  className="glamor-2"
+                >
+                  <div
+                    className="glamor-2"
+                    is={null}
+                  >
+                    <Styled(div)>
+                      <div
+                        className="glamor-0 glamor-1"
+                      >
+                        Auth Tokens
+                      </div>
+                    </Styled(div)>
+                    <div>
+                      <Button
+                        className="ref-create-token"
+                        disabled={false}
+                        priority="primary"
+                        size="small"
+                        to="/settings/account/api/auth-tokens/new-token/"
+                      >
+                        <Link
+                          className="ref-create-token button button-primary button-sm"
+                          disabled={false}
+                          onClick={[Function]}
+                          onlyActiveOnIndex={false}
+                          role="button"
+                          style={Object {}}
+                          to="/settings/account/api/auth-tokens/new-token/"
+                        >
+                          <a
+                            className="ref-create-token button button-primary button-sm"
+                            disabled={false}
+                            onClick={[Function]}
+                            role="button"
+                            style={Object {}}
+                          >
+                            <FlowLayout
+                              truncate={false}
+                            >
+                              <div
+                                className="flow-layout"
+                              >
+                                <span
+                                  className="button-label"
+                                >
+                                  Create New Token
+                                </span>
+                              </div>
+                            </FlowLayout>
+                          </a>
+                        </Link>
+                      </Button>
+                    </div>
+                  </div>
+                </Base>
+              </Flex>
+            </div>
+          </Styled(div)>
+        </SettingsPageHeading>
+        <Styled(div)>
+          <div
+            className="glamor-6 glamor-7"
+          >
+            Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.
+          </div>
+        </Styled(div)>
+        <Styled(div)>
+          <div
+            className="glamor-6 glamor-7"
+          >
+            <span
+              key="5"
+            >
+              <span
+                key="0"
+              >
+                For more information on how to use the web API, see our 
+              </span>
+              <a
+                href="https://docs.sentry.io/hosted/api/"
+                key="2"
+              >
+                <span
+                  key="1"
+                >
+                  documentation
+                </span>
+              </a>
+              <span
+                key="3"
+              >
+                .
+              </span>
+            </span>
+          </div>
+        </Styled(div)>
+        <Styled(div)>
+          <div
+            className="glamor-6 glamor-7"
+          >
+            <small>
+              psst. Looking for the 
+              <strong>
+                DSN
+              </strong>
+               for an SDK? You'll find that under
+               
+              <strong>
+                [Project] » Settings » Client Keys
+              </strong>
+              .
+            </small>
+          </div>
+        </Styled(div)>
+        <Styled(div)>
+          <div
+            className="glamor-49 glamor-50"
+          >
+            <PanelHeader
+              disablePadding={true}
+            >
+              <Styled(div)
+                disablePadding={true}
+              >
+                <div
+                  className="glamor-23 glamor-24"
+                >
+                  <Styled(Component)>
+                    <Component
+                      className="glamor-19 glamor-16"
+                    >
+                      <Styled(div)
+                        className="glamor-19 glamor-16"
+                      >
+                        <div
+                          className="glamor-16 glamor-17 glamor-18"
+                        >
+                          <Flex
+                            align="center"
+                          >
+                            <Base
+                              align="center"
+                              className="glamor-2"
+                            >
+                              <div
+                                className="glamor-2"
+                                is={null}
+                              >
+                                <Box
+                                  flex="1"
+                                  px={2}
+                                >
+                                  <Base
+                                    className="glamor-12"
+                                    flex="1"
+                                    px={2}
+                                  >
+                                    <div
+                                      className="glamor-12"
+                                      is={null}
+                                    >
+                                      Auth Token
+                                    </div>
+                                  </Base>
+                                </Box>
+                              </div>
+                            </Base>
+                          </Flex>
+                        </div>
+                      </Styled(div)>
+                    </Component>
+                  </Styled(Component)>
+                </div>
+              </Styled(div)>
+            </PanelHeader>
+            <Styled(div)>
+              <div
+                className="glamor-47 glamor-48"
+              >
+                <ApiTokenRow
+                  key="apitoken123"
+                  onRemove={[Function]}
+                  token={
+                    Object {
+                      "dateCreated": 2018-01-12T02:01:41.000Z,
+                      "scopes": Array [
+                        "scope1",
+                        "scope2",
+                      ],
+                      "token": "apitoken123",
+                    }
+                  }
+                >
+                  <Row
+                    justify="space-between"
+                    p={2}
+                    px={2}
+                    py={2}
+                  >
+                    <Styled(Base)
+                      justify="space-between"
+                      p={2}
+                      px={2}
+                      py={2}
+                    >
+                      <Base
+                        className="glamor-43 glamor-44"
+                        justify="space-between"
+                        p={2}
+                        px={2}
+                        py={2}
+                      >
+                        <div
+                          className="glamor-43 glamor-44"
+                          is={null}
+                        >
+                          <Box
+                            flex="1"
+                          >
+                            <Base
+                              className="glamor-37"
+                              flex="1"
+                            >
+                              <div
+                                className="glamor-37"
+                                is={null}
+                              >
+                                <div
+                                  style={
+                                    Object {
+                                      "marginBottom": 5,
+                                    }
+                                  }
+                                >
+                                  <small>
+                                    <TextCopyInput
+                                      flexValueContainer={false}
+                                      onCopy={[Function]}
+                                      renderer={[Function]}
+                                    >
+                                      <Flex>
+                                        <Base
+                                          className="glamor-31"
+                                        >
+                                          <div
+                                            className="glamor-31"
+                                            is={null}
+                                          >
+                                            <Styled(div)>
+                                              <div
+                                                className="glamor-29 glamor-30"
+                                              >
+                                                <Styled(Component)
+                                                  onClick={[Function]}
+                                                  readOnly={true}
+                                                  value="apitoken123"
+                                                >
+                                                  <Component
+                                                    className="glamor-25 glamor-26"
+                                                    onClick={[Function]}
+                                                    readOnly={true}
+                                                    value="apitoken123"
+                                                  >
+                                                    <input
+                                                      className="glamor-25 glamor-26"
+                                                      onClick={[Function]}
+                                                      readOnly={true}
+                                                      value="apitoken123"
+                                                    />
+                                                  </Component>
+                                                </Styled(Component)>
+                                              </div>
+                                            </Styled(div)>
+                                            <Clipboard
+                                              errorMessage="Error copying to clipboard"
+                                              hideMessages={false}
+                                              hideUnsupported={true}
+                                              onClick={[Function]}
+                                              successMessage="Copied to clipboard"
+                                              value="apitoken123"
+                                            />
+                                          </div>
+                                        </Base>
+                                      </Flex>
+                                    </TextCopyInput>
+                                  </small>
+                                </div>
+                                <div
+                                  style={
+                                    Object {
+                                      "marginBottom": 5,
+                                    }
+                                  }
+                                >
+                                  <Styled(div)>
+                                    <div
+                                      className="glamor-33 glamor-34"
+                                    >
+                                      Created
+                                       
+                                      <DateTime
+                                        date={2018-01-12T02:01:41.000Z}
+                                        seconds={true}
+                                      >
+                                        <time>
+                                          Jan 12, 2018 2:01:41 AM UTC
+                                        </time>
+                                      </DateTime>
+                                    </div>
+                                  </Styled(div)>
+                                </div>
+                                <div>
+                                  <Styled(div)>
+                                    <div
+                                      className="glamor-35 glamor-36"
+                                    >
+                                      scope1, scope2
+                                    </div>
+                                  </Styled(div)>
+                                </div>
+                              </div>
+                            </Base>
+                          </Box>
+                          <Flex
+                            align="center"
+                          >
+                            <Base
+                              align="center"
+                              className="glamor-2"
+                            >
+                              <div
+                                className="glamor-2"
+                                is={null}
+                              >
+                                <Box
+                                  pl={2}
+                                >
+                                  <Base
+                                    className="glamor-39"
+                                    pl={2}
+                                  >
+                                    <div
+                                      className="glamor-39"
+                                      is={null}
+                                    >
+                                      <Button
+                                        disabled={false}
+                                        onClick={[Function]}
+                                      >
+                                        <button
+                                          className="button button-default"
+                                          disabled={false}
+                                          onClick={[Function]}
+                                          role="button"
+                                        >
+                                          <FlowLayout
+                                            truncate={false}
+                                          >
+                                            <div
+                                              className="flow-layout"
+                                            >
+                                              <span
+                                                className="button-label"
+                                              >
+                                                <span
+                                                  className="icon icon-trash"
+                                                />
+                                              </span>
+                                            </div>
+                                          </FlowLayout>
+                                        </button>
+                                      </Button>
+                                    </div>
+                                  </Base>
+                                </Box>
+                              </div>
+                            </Base>
+                          </Flex>
+                        </div>
+                      </Base>
+                    </Styled(Base)>
+                  </Row>
+                </ApiTokenRow>
+              </div>
+            </Styled(div)>
+          </div>
+        </Styled(div)>
+      </div>
+    </DocumentTitle>
+  </SideEffect(DocumentTitle)>
+</ApiTokens>
+`;
diff --git a/tests/js/spec/views/apiTokenRow.spec.jsx b/tests/js/spec/views/apiTokenRow.spec.jsx
new file mode 100644
index 0000000000..f6d26a2b69
--- /dev/null
+++ b/tests/js/spec/views/apiTokenRow.spec.jsx
@@ -0,0 +1,22 @@
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+import ApiTokenRow from 'app/views/settings/account/apiTokenRow';
+
+describe('ApiTokenRow', function() {
+  it('renders', function() {
+    let wrapper = shallow(
+      <ApiTokenRow onRemove={() => {}} token={TestStubs.ApiToken()} />
+    );
+
+    // Should be loading
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('calls onRemove callback when trash can is clicked', function() {
+    let cb = jest.fn();
+    let wrapper = mount(<ApiTokenRow onRemove={cb} token={TestStubs.ApiToken()} />);
+
+    wrapper.find('Button').simulate('click');
+    expect(cb).toHaveBeenCalled();
+  });
+});
diff --git a/tests/js/spec/views/apiTokens.spec.jsx b/tests/js/spec/views/apiTokens.spec.jsx
new file mode 100644
index 0000000000..db035519d0
--- /dev/null
+++ b/tests/js/spec/views/apiTokens.spec.jsx
@@ -0,0 +1,83 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+
+import {Client} from 'app/api';
+import ApiTokens from 'app/views/settings/account/apiTokens';
+
+describe('ApiTokens', function() {
+  beforeEach(function() {
+    Client.clearMockResponses();
+  });
+
+  it('renders empty result', function() {
+    Client.addMockResponse({
+      url: '/api-tokens/',
+    });
+
+    let wrapper = shallow(<ApiTokens />, {
+      childContextTypes: {
+        router: PropTypes.object,
+      },
+      context: {
+        router: TestStubs.router(),
+      },
+    });
+
+    // Should be loading
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('renders with result', function() {
+    Client.addMockResponse({
+      url: '/api-tokens/',
+      body: [TestStubs.ApiToken()],
+    });
+
+    let wrapper = mount(<ApiTokens />, {
+      childContextTypes: {
+        router: PropTypes.object,
+      },
+      context: {
+        router: TestStubs.router(),
+      },
+    });
+
+    // Should be loading
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('can delete token', function() {
+    Client.addMockResponse({
+      url: '/api-tokens/',
+      body: [TestStubs.ApiToken()],
+    });
+
+    let mock = Client.addMockResponse({
+      url: '/api-tokens/',
+      method: 'DELETE',
+    });
+
+    expect(mock).not.toHaveBeenCalled();
+
+    let wrapper = mount(<ApiTokens />, {
+      childContextTypes: {
+        router: PropTypes.object,
+      },
+      context: {
+        router: TestStubs.router(),
+      },
+    });
+
+    wrapper.find('.icon-trash').simulate('click');
+
+    // Should be loading
+    expect(mock).toHaveBeenCalledTimes(1);
+    expect(mock).toHaveBeenCalledWith(
+      '/api-tokens/',
+      expect.objectContaining({
+        method: 'DELETE',
+      })
+    );
+  });
+});
