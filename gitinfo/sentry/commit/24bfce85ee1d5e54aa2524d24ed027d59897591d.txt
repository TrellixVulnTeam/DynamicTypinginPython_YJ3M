commit 24bfce85ee1d5e54aa2524d24ed027d59897591d
Author: Mark Story <mark@sentry.io>
Date:   Tue May 21 11:18:35 2019 -0400

    fix(gitlab) Improve error message when adding a repository fails (#13268)
    
    Expose the error message we get from GitLab when adding a repository
    webhook fails.
    
    Fixes #13079

diff --git a/src/sentry/integrations/gitlab/integration.py b/src/sentry/integrations/gitlab/integration.py
index 152c2bee26..7098ec2671 100644
--- a/src/sentry/integrations/gitlab/integration.py
+++ b/src/sentry/integrations/gitlab/integration.py
@@ -103,6 +103,19 @@ class GitlabIntegration(IntegrationInstallation, GitlabIssueBasic, RepositoryMix
         client = self.get_client()
         return client.search_project_issues(project_id, query, iids)
 
+    def error_message_from_json(self, data):
+        """
+        Extract error messages from gitlab API errors.
+        Generic errors come in the `error` key while validation errors
+        are generally in `message`.
+
+        See https://docs.gitlab.com/ee/api/#data-validation-and-error-reporting
+        """
+        if 'message' in data:
+            return data['message']
+        if 'error' in data:
+            return data['error']
+
 
 class InstallationForm(forms.Form):
     url = forms.CharField(
diff --git a/tests/sentry/integrations/gitlab/test_repository.py b/tests/sentry/integrations/gitlab/test_repository.py
index 252e157b6c..4c1a811843 100644
--- a/tests/sentry/integrations/gitlab/test_repository.py
+++ b/tests/sentry/integrations/gitlab/test_repository.py
@@ -134,6 +134,30 @@ class GitLabRepositoryProviderTest(IntegrationRepositoryTestCase):
         assert response.status_code == 201
         self.assert_repository(self.default_repository_config)
 
+    @responses.activate
+    def test_create_repository_request_invalid_url(self):
+        responses.add(
+            responses.GET,
+            u'https://example.gitlab.com/api/v4/projects/%s' % self.gitlab_id,
+            status=200,
+            json=self.default_repository_config
+        )
+        responses.add(
+            responses.POST,
+            u'https://example.gitlab.com/api/v4/projects/%s/hooks' % self.gitlab_id,
+            status=422,
+            json={'error': 'Invalid url given'}
+        )
+        response = self.create_repository(
+            self.default_repository_config,
+            self.integration.id,
+            add_responses=False)
+        assert response.status_code == 400
+        self.assert_error_message(
+            response,
+            'validation',
+            'Error Communicating with GitLab (HTTP 422): Invalid url given')
+
     def test_create_repository_data_no_installation_id(self):
         response = self.create_repository(self.default_repository_config, None)
         assert response.status_code == 400
