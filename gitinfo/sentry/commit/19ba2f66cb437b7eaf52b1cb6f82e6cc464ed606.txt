commit 19ba2f66cb437b7eaf52b1cb6f82e6cc464ed606
Author: David Cramer <dcramer@gmail.com>
Date:   Sun May 10 18:55:33 2015 -0700

    Improvements to join/leave flows for membership
    
    - Always return team object when data has changed
    - Add isPending to team serializer

diff --git a/src/sentry/api/endpoints/organization_member_team_details.py b/src/sentry/api/endpoints/organization_member_team_details.py
index 5d6e610e31..2384fb1f6c 100644
--- a/src/sentry/api/endpoints/organization_member_team_details.py
+++ b/src/sentry/api/endpoints/organization_member_team_details.py
@@ -3,11 +3,12 @@ from __future__ import absolute_import
 from rest_framework import serializers
 from rest_framework.response import Response
 
-from sentry.api.serializers import serialize
 from sentry.api.bases.organization import (
     OrganizationEndpoint, OrganizationPermission
 )
 from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.api.serializers import serialize
+from sentry.api.serializers.models.team import TeamWithProjectsSerializer
 from sentry.models import (
     AuditLogEntry, AuditLogEntryEvent, OrganizationAccessRequest,
     OrganizationMember, OrganizationMemberTeam, Team
@@ -45,6 +46,19 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
 
         return False
 
+    def _get_member(self, request, organization, member_id):
+        if member_id == 'me':
+            queryset = OrganizationMember.objects.filter(
+                organization=organization,
+                user__id=request.user.id,
+            )
+        else:
+            queryset = OrganizationMember.objects.filter(
+                organization=organization,
+                id=member_id,
+            )
+        return queryset.select_related('user').get()
+
     def post(self, request, organization, member_id, team_slug):
         """
         Join a team
@@ -58,10 +72,7 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
         be generated and the returned status code will be 202.
         """
         try:
-            om = OrganizationMember.objects.filter(
-                organization=organization,
-                id=member_id,
-            ).select_related('user').get()
+            om = self._get_member(request, organization, member_id)
         except OrganizationMember.DoesNotExist:
             raise ResourceDoesNotExist
 
@@ -125,7 +136,8 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
             data=omt.get_audit_log_data(),
         )
 
-        return Response(serialize(team), status=201)
+        return Response(serialize(
+            team, request.user, TeamWithProjectsSerializer), status=201)
 
     def delete(self, request, organization, member_id, team_slug):
         """
@@ -134,10 +146,7 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
         Leave a team.
         """
         try:
-            om = OrganizationMember.objects.filter(
-                organization=organization,
-                id=member_id,
-            ).select_related('user').get()
+            om = self._get_member(request, organization, member_id)
         except OrganizationMember.DoesNotExist:
             raise ResourceDoesNotExist
 
@@ -160,7 +169,8 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
                 )
             except OrganizationMemberTeam.DoesNotExist:
                 # if the relationship doesnt exist, they're already a member
-                return Response(status=204)
+                return Response(serialize(
+                    team, request.user, TeamWithProjectsSerializer), status=200)
         else:
             try:
                 omt = OrganizationMemberTeam.objects.get(
@@ -189,4 +199,5 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
                 data=omt.get_audit_log_data(),
             )
 
-        return Response(status=204)
+        return Response(serialize(
+            team, request.user, TeamWithProjectsSerializer), status=200)
diff --git a/src/sentry/api/serializers/models/team.py b/src/sentry/api/serializers/models/team.py
index 3d156fb882..209db92838 100644
--- a/src/sentry/api/serializers/models/team.py
+++ b/src/sentry/api/serializers/models/team.py
@@ -5,7 +5,10 @@ import itertools
 from collections import defaultdict
 
 from sentry.api.serializers import Serializer, register, serialize
-from sentry.models import OrganizationMemberType, Project, ProjectStatus, Team
+from sentry.models import (
+    OrganizationAccessRequest, OrganizationMemberType, Project, ProjectStatus,
+    Team
+)
 
 
 @register(Team)
@@ -20,6 +23,17 @@ class TeamSerializer(Serializer):
                 user=user,
             )
         )
+
+        if user.is_authenticated():
+            access_requests = frozenset(
+                OrganizationAccessRequest.objects.filter(
+                    team__in=item_list,
+                    member__user=user,
+                ).values_list('team')
+            )
+        else:
+            access_requests = frozenset()
+
         result = {}
         for team in item_list:
             try:
@@ -29,6 +43,7 @@ class TeamSerializer(Serializer):
 
             result[team] = {
                 'access_type': access_type,
+                'pending_request': team.id in access_requests,
             }
         return result
 
@@ -39,6 +54,7 @@ class TeamSerializer(Serializer):
             'name': obj.name,
             'dateCreated': obj.date_added,
             'isMember': attrs['access_type'] is not None,
+            'isPending': attrs['pending_request'],
             'permission': {
                 'owner': attrs['access_type'] <= OrganizationMemberType.OWNER,
                 'admin': attrs['access_type'] <= OrganizationMemberType.ADMIN,
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index a2780eeb83..bd6d5bc3f0 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -79,10 +79,10 @@ urlpatterns = patterns(
     url(r'^organizations/(?P<organization_slug>[^\/]+)/members/$',
         OrganizationMemberIndexEndpoint.as_view(),
         name='sentry-api-0-organization-member-index'),
-    url(r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>\d+)/$',
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>[^\/]+)/$',
         OrganizationMemberDetailsEndpoint.as_view(),
         name='sentry-api-0-organization-member-details'),
-    url(r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>\d+)/teams/(?P<team_slug>[^\/]+)/$',
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>[^\/]+)/teams/(?P<team_slug>[^\/]+)/$',
         OrganizationMemberTeamDetailsEndpoint.as_view(),
         name='sentry-api-0-organization-member-team-details'),
     url(r'^organizations/(?P<organization_slug>[^\/]+)/projects/$',
diff --git a/tests/sentry/api/endpoints/test_organization_member_team_details.py b/tests/sentry/api/endpoints/test_organization_member_team_details.py
index c4da92e3d4..fe56c53367 100644
--- a/tests/sentry/api/endpoints/test_organization_member_team_details.py
+++ b/tests/sentry/api/endpoints/test_organization_member_team_details.py
@@ -179,7 +179,7 @@ class DeleteOrganizationMemberTeamTest(APITestCase):
 
         resp = self.client.delete(path)
 
-        assert resp.status_code == 204
+        assert resp.status_code == 200
 
         assert OrganizationMemberTeam.objects.filter(
             team=team,
@@ -213,7 +213,7 @@ class DeleteOrganizationMemberTeamTest(APITestCase):
 
         resp = self.client.delete(path)
 
-        assert resp.status_code == 204
+        assert resp.status_code == 200
 
         assert OrganizationMemberTeam.objects.filter(
             team=team,
@@ -243,7 +243,7 @@ class DeleteOrganizationMemberTeamTest(APITestCase):
 
         resp = self.client.delete(path)
 
-        assert resp.status_code == 204
+        assert resp.status_code == 200
 
         assert not OrganizationMemberTeam.objects.filter(
             team=team,
@@ -272,7 +272,7 @@ class DeleteOrganizationMemberTeamTest(APITestCase):
 
         resp = self.client.delete(path)
 
-        assert resp.status_code == 204
+        assert resp.status_code == 200
 
         assert not OrganizationMemberTeam.objects.filter(
             team=team,
