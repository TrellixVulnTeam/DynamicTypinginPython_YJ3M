commit c3ac44cc2f183ad8734e50c54a24e1d5b9eb426a
Author: Ben Vinegar <ben@benv.ca>
Date:   Sun Aug 30 15:18:09 2015 -0700

    More linting fixes

diff --git a/.eslintignore b/.eslintignore
new file mode 100644
index 0000000000..bb95f47270
--- /dev/null
+++ b/.eslintignore
@@ -0,0 +1,2 @@
+**/dist/**/*
+**/vendor/**/*
diff --git a/.eslintrc b/.eslintrc
index 1b4cfc24e4..235d3c7a80 100644
--- a/.eslintrc
+++ b/.eslintrc
@@ -115,7 +115,7 @@
      */
     "react/display-name": 0,         // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/display-name.md
     "react/jsx-quotes": [2, "double"], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-quotes.md
-    "react/no-multi-comp": 2,        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md
+    "react/no-multi-comp": 0,        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md
     "react/jsx-no-undef": 2,         // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-undef.md
     "react/jsx-no-duplicate-props": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-duplicate-props.md
     "react/jsx-uses-react": 2,       // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-react.md
diff --git a/package.json b/package.json
index e939862957..f374a779ab 100644
--- a/package.json
+++ b/package.json
@@ -43,7 +43,7 @@
   "proxyURL": "http://localhost:8000",
   "scripts": {
     "test": "node_modules/karma/bin/karma start tests/karma.conf.js --single-run",
-    "lint": "node_modules/.bin/eslint tests/js src/sentry/static/sentry/app/**/*.js*"
+    "lint": "node_modules/.bin/eslint tests/js src/sentry/static/sentry/app --ext .jsx"
   },
   "devDependencies": {
     "babel-core": "^5.6.15",
diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 3b109bdaf4..d884bd8ec4 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -34,6 +34,7 @@ class Client {
   }
 
   wrapCallback(id, func, cleanup) {
+    /*eslint consistent-return:0*/
     if (typeof func === "undefined") {
       return;
     }
@@ -223,4 +224,3 @@ class Client {
 }
 
 export default new Client();
-
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
index 555127980b..c449abc0e4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
@@ -91,6 +91,7 @@ var ExceptionInterface = React.createClass({
         newestFirst = false;
         break;
       case "default":
+      default:
         newestFirst = (platform !== "python");
     }
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index 1cdcbb0e6c..c4cf8b4adf 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -117,9 +117,9 @@ var Frame = React.createClass({
               key="errors">{data.errors.join(", ")}</li>
           }
           {data.context.map((line) => {
-            var className = "expandable";
+            var liClassName = "expandable";
             if (line[0] === data.lineNo) {
-              className += " active";
+              liClassName += " active";
             }
 
             var lineWs;
@@ -130,9 +130,13 @@ var Frame = React.createClass({
               lineWs = '';
               lineCode = '';
             }
-            return <li className={className} key={line[0]}><span className="ws">{
-              lineWs}</span><span className="contextline">{lineCode
-            }</span> <span className="icon-plus"></span></li>;
+            return (
+              <li className={liClassName} key={line[0]}>
+                <span className="ws">{
+                lineWs}</span><span className="contextline">{lineCode
+                }</span> <span className="icon-plus"></span>
+              </li>
+            );
           })}
           {!objectIsEmpty(data.vars) &&
             <FrameVariables data={data.vars} key="vars" />
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
index accb69fa0a..41d945c775 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
@@ -26,7 +26,8 @@ var StacktraceInterface = React.createClass({
       case "newestLast":
         newestFirst = false;
         break;
-      case "default":
+      case "default": // is "default" a valid value? or bad case statement
+      default:
         newestFirst = (platform === "python");
     }
 
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index d656923369..e1cddd600d 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -19,7 +19,6 @@ import ProjectDashboard from "./views/projectDashboard";
 import ProjectEvents from "./views/projectEvents";
 import ProjectDetails from "./views/projectDetails";
 import ProjectReleases from "./views/projectReleases";
-import PropTypes from "./proptypes";
 import ReleaseAllEvents from "./views/releaseAllEvents";
 import ReleaseArtifacts from "./views/releaseArtifacts";
 import ReleaseDetails from "./views/releaseDetails";
@@ -27,7 +26,6 @@ import ReleaseNewEvents from "./views/releaseNewEvents";
 import RouteNotFound from "./views/routeNotFound";
 import SharedGroupDetails from "./views/sharedGroupDetails";
 import Stream from "./views/stream";
-import TeamDetails from "./views/teamDetails";
 
 var routes = (
   <Route name="app" path="/" handler={App}>
@@ -64,4 +62,3 @@ var routes = (
 );
 
 export default routes;
-
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 8ee8332b79..795a2e6052 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -1,3 +1,4 @@
+/*eslint no-use-before-define:0*/
 var modelsEqual = function(obj1, obj2) {
   if (!obj1 && !obj2)
     return true;
@@ -8,33 +9,39 @@ var modelsEqual = function(obj1, obj2) {
   return obj1.id === obj2.id;
 };
 
-var compareArrays = function(arr1, arr2, compFunc) {
-  if (arr1 === arr2) {
+var arrayIsEqual = function(arr, other, deep) {
+  // if the other array is a falsy value, return
+  if (!arr && !other) {
     return true;
   }
-  if (!arr1) {
-    arr1 = [];
-  }
-  if (!arr2) {
-    arr2 = [];
+
+  if (!arr || !other) {
+    return false;
   }
 
-  if (arr1.length != arr2.length) {
+  // compare lengths - can save a lot of time
+  if (arr.length != other.length) {
     return false;
   }
 
-  for (var i = 0; i < Math.max(arr1.length, arr2.length); i++) {
-    if (!arr1[i]) {
-      return false;
-    }
-    if (!arr2[i]) {
-      return false;
+  for (var i = 0, l = Math.max(arr.length, other.length); i < l; i++) {
+    return valueIsEqual(arr[i], other[i], deep);
+  }
+};
+
+var valueIsEqual = function(value, other, deep) {
+  if (value === other) {
+    return true;
+  } else if (value instanceof Array || other instanceof Array) {
+    if (arrayIsEqual(value, other, deep)) {
+      return true;
     }
-    if (!compFunc(arr1[i], arr2[i])) {
-      return false;
+  } else if (value instanceof Object || other instanceof Object) {
+    if (objectMatchesSubset(value, other, deep)) {
+      return true;
     }
   }
-  return true;
+  return false;
 };
 
 var objectMatchesSubset = function(obj, other, deep){
@@ -57,39 +64,33 @@ var objectMatchesSubset = function(obj, other, deep){
   return true;
 };
 
-var valueIsEqual = function(value, other, deep) {
-  if (value === other) {
+var compareArrays = function(arr1, arr2, compFunc) {
+  if (arr1 === arr2) {
     return true;
-  } else if (value instanceof Array || other instanceof Array) {
-    if (arrayIsEqual(value, other, deep)) {
-      return true;
-    }
-  } else if (value instanceof Object || other instanceof Object) {
-    if (objectMatchesSubset(value, other, deep)) {
-      return true;
-    }
   }
-  return false;
-};
-
-var arrayIsEqual = function(arr, other, deep) {
-  // if the other array is a falsy value, return
-  if (!arr && !other) {
-    return true;
+  if (!arr1) {
+    arr1 = [];
   }
-
-  if (!arr || !other) {
-    return false;
+  if (!arr2) {
+    arr2 = [];
   }
 
-  // compare lengths - can save a lot of time
-  if (arr.length != other.length) {
+  if (arr1.length != arr2.length) {
     return false;
   }
 
-  for (var i = 0, l = Math.max(arr.length, other.length); i < l; i++) {
-    return valueIsEqual(arr[i], other[i], deep);
+  for (var i = 0; i < Math.max(arr1.length, arr2.length); i++) {
+    if (!arr1[i]) {
+      return false;
+    }
+    if (!arr2[i]) {
+      return false;
+    }
+    if (!compFunc(arr1[i], arr2[i])) {
+      return false;
+    }
   }
+  return true;
 };
 
 export default {
@@ -190,4 +191,3 @@ export default {
   StreamManager: require('./utils/streamManager'),
   CursorPoller: require('./utils/cursorPoller')
 };
-
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 283c336afa..c6f8cc64cb 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -1,5 +1,4 @@
 import React from "react";
-import Router from "react-router";
 import api from "../../api";
 import DropdownLink from "../../components/dropdownLink";
 import GroupState from "../../mixins/groupState";
@@ -133,4 +132,3 @@ var GroupActions = React.createClass({
 });
 
 export default GroupActions;
-
diff --git a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
index 65bfc5f076..ac7dea143d 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
@@ -1,5 +1,5 @@
+import Router from "react-router";
 import React from "react";
-import Sticky from 'react-sticky';
 import PropTypes from "../../proptypes";
 import utils from "../../utils";
 
@@ -81,4 +81,3 @@ var GroupEventToolbar  = React.createClass({
 });
 
 export default GroupEventToolbar ;
-
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index b1d0ef3af1..cf6c9986be 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -8,7 +8,6 @@ import GroupSeenBy from "./seenBy";
 import IndicatorStore from "../../stores/indicatorStore";
 import ListLink from "../../components/listLink";
 import ProjectState from "../../mixins/projectState";
-import PropTypes from "../../proptypes";
 
 var GroupHeader = React.createClass({
   mixins: [ProjectState],
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
index a46996fca4..c64563a199 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
@@ -5,6 +5,7 @@ import api from "../../api";
 import BarChart from "../../components/barChart";
 import ConfigStore from "../../stores/configStore";
 import PropTypes from "../../proptypes";
+import {sortArray} from "../../utils";
 
 var ExpandedTeamList = React.createClass({
   propTypes: {
diff --git a/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx b/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
index 9d20ab5c12..0a7501f297 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
@@ -1,5 +1,4 @@
 import React from "react";
-import Router from "react-router";
 import moment from "moment";
 import api from "../../api";
 import BarChart from "../../components/barChart";
diff --git a/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx b/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx
index a2b162c643..b472e69894 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard/eventList.jsx
@@ -125,6 +125,7 @@ var EventList = React.createClass({
         minutes = "60";
         break;
       case "24h":
+      default:
         minutes = "1440";
         break;
     }
diff --git a/src/sentry/static/sentry/app/views/projectEvents/actions.jsx b/src/sentry/static/sentry/app/views/projectEvents/actions.jsx
index d0adbb14c1..19d3832b26 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/actions.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/actions.jsx
@@ -1,5 +1,4 @@
 import React from "react";
-import Reflux from "reflux";
 
 var PureRenderMixin = require('react/addons').addons.PureRenderMixin;
 
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index dafedbd132..f57d54e388 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -2,7 +2,6 @@ import React from "react";
 import Reflux from "reflux";
 import api from "../../api";
 import ActionLink from "./actionLink";
-import GroupStore from "../../stores/groupStore";
 import DropdownLink from "../../components/dropdownLink";
 import IndicatorStore from "../../stores/indicatorStore";
 import MenuItem from "../../components/menuItem";
diff --git a/src/sentry/static/sentry/app/views/stream/dateSelector.jsx b/src/sentry/static/sentry/app/views/stream/dateSelector.jsx
index 24d8a7fd26..680dc2ee09 100644
--- a/src/sentry/static/sentry/app/views/stream/dateSelector.jsx
+++ b/src/sentry/static/sentry/app/views/stream/dateSelector.jsx
@@ -1,6 +1,5 @@
 var PureRenderMixin = require('react/addons').addons.PureRenderMixin;
 import React from "react";
-import moment from "moment";
 import DateTimeInput from "../../components/dateTimeInput";
 import DropdownLink from "../../components/dropdownLink";
 import MenuItem from "../../components/menuItem";
diff --git a/src/sentry/static/sentry/app/views/stream/filters.jsx b/src/sentry/static/sentry/app/views/stream/filters.jsx
index 914d3f9c01..b3e7dbd4d5 100644
--- a/src/sentry/static/sentry/app/views/stream/filters.jsx
+++ b/src/sentry/static/sentry/app/views/stream/filters.jsx
@@ -1,12 +1,8 @@
 import React from "react";
-import $ from "jquery";
-var PureRenderMixin = require('react/addons').addons.PureRenderMixin;
 
-import DateSelector from "./dateSelector";
 import FilterSelectLink from "./filterSelectLink";
 import SearchBar from "./searchBar";
 import SearchDropdown from "./searchDropdown";
-import utils from "../../utils";
 import SortOptions from "./sortOptions";
 
 var StreamFilters = React.createClass({
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 7b9931f498..888235ac60 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -1,8 +1,6 @@
 import React from "react";
 var PureRenderMixin = require('react/addons').addons.PureRenderMixin;
 
-import SearchDropdown from "./searchDropdown";
-
 var SearchBar = React.createClass({
   contextTypes: {
     router: React.PropTypes.func
diff --git a/src/sentry/static/sentry/app/views/stream/sortOptions.jsx b/src/sentry/static/sentry/app/views/stream/sortOptions.jsx
index 4e63622ed8..1edc8a0f4a 100644
--- a/src/sentry/static/sentry/app/views/stream/sortOptions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/sortOptions.jsx
@@ -36,6 +36,7 @@ var SortOptions = React.createClass({
       case 'freq':
         return 'Frequency';
       case 'date':
+      default:
         return 'Last Seen';
     }
   },
diff --git a/tests/js/helpers/stubContext.jsx b/tests/js/helpers/stubContext.jsx
index 71af873551..671ba8cc8d 100644
--- a/tests/js/helpers/stubContext.jsx
+++ b/tests/js/helpers/stubContext.jsx
@@ -50,4 +50,4 @@ function stubContext(BaseComponent, context) {
   return StubbedContextHandler;
 }
 
-module.exports = stubContext;
\ No newline at end of file
+export default stubContext;
