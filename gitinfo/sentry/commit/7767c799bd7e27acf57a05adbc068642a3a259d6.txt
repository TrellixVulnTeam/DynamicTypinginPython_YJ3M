commit 7767c799bd7e27acf57a05adbc068642a3a259d6
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Oct 13 22:53:32 2015 -0700

    Reject CSP reports with document-uri == 'about'
    
    I've witnessed these reports from Chrome 45/46, and these seem to
    be invalid. At least they seem useless and unactionable. document-uri
    is supposed to be a valid uri as well. I'm also trying to avoid
    actually validating that it's a uri since that's more expensive,
    we shouldn't be getting too much garbage since these are being sent
    from browsers.

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index de491e7fc0..e0767ee9e2 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -580,7 +580,11 @@ class CspApiHelper(ClientApiHelper):
     def validate_data(self, project, data):
         # All keys are sent with hyphens, so we want to conver to underscores
         report = dict(map(lambda v: (v[0].replace('-', '_'), v[1]), data.iteritems()))
-        inst = Csp.to_python(report)
+
+        try:
+            inst = Csp.to_python(report)
+        except Exception:
+            raise APIForbidden('Invalid CSP Report')
 
         # Construct a faux Http interface based on the little information we have
         headers = {}
diff --git a/src/sentry/interfaces/csp.py b/src/sentry/interfaces/csp.py
index 0153afc578..3e57d2a32d 100644
--- a/src/sentry/interfaces/csp.py
+++ b/src/sentry/interfaces/csp.py
@@ -11,7 +11,7 @@ from __future__ import absolute_import
 __all__ = ('Csp',)
 
 from urlparse import urlsplit
-from sentry.interfaces.base import Interface
+from sentry.interfaces.base import Interface, InterfaceValidationError
 from sentry.utils.safe import trim
 
 
@@ -50,11 +50,19 @@ class Csp(Interface):
     @classmethod
     def to_python(cls, data):
         kwargs = {k: trim(data.get(k, None), 1024) for k in REPORT_KEYS}
+
+        # Some reports from Chrome report blocked-uri as just 'about'.
+        # In this case, this is not actionable and is just noisy.
+        # Observed in Chrome 45 and 46.
+        if kwargs['blocked_uri'] == 'about':
+            raise InterfaceValidationError("blocked-uri must not be 'about'")
+
         # Inline script violations are confusing and don't say what uri blocked them
         # because they're inline. FireFox sends along "blocked-uri": "self", which is
         # vastly more useful, so we want to emulate that
         if kwargs['effective_directive'] == 'script-src' and not kwargs['blocked_uri']:
             kwargs['blocked_uri'] = 'self'
+
         return cls(**kwargs)
 
     def get_hash(self):
diff --git a/tests/sentry/interfaces/test_csp.py b/tests/sentry/interfaces/test_csp.py
index 2024aee0f6..a4e9b0fd00 100644
--- a/tests/sentry/interfaces/test_csp.py
+++ b/tests/sentry/interfaces/test_csp.py
@@ -5,6 +5,7 @@ from __future__ import absolute_import
 from mock import patch
 from exam import fixture
 
+from sentry.interfaces.base import InterfaceValidationError
 from sentry.interfaces.csp import Csp
 from sentry.testutils import TestCase
 
@@ -31,6 +32,10 @@ class CspTest(TestCase):
         assert result.violated_directive == 'style-src cdn.example.com'
         assert result.blocked_uri == 'http://example.com/lol.css'
 
+    def test_to_python_validation_errors(self):
+        with self.assertRaises(InterfaceValidationError):
+            Csp.to_python(dict(blocked_uri='about'))
+
     def test_coerce_blocked_uri_if_script_src(self):
         result = Csp.to_python(dict(
             effective_directive='script-src'
