commit 893c57d52c6db39b723ac1bf98c5c4868601c50e
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri May 13 12:38:01 2016 +0200

    Updated authenticator code and added opt validation that loops through interfaces.

diff --git a/src/sentry/models/authenticator.py b/src/sentry/models/authenticator.py
index 36de6e474c..8c8bd41a5c 100644
--- a/src/sentry/models/authenticator.py
+++ b/src/sentry/models/authenticator.py
@@ -30,6 +30,13 @@ class AuthenticatorManager(BaseManager):
     def user_has_2fa(self, user):
         return Authenticator.objects.filter(user=user).first() is not None
 
+    def validate_otp(self, user, otp):
+        for auth in self.get_for_user(user):
+            if auth.interface.validate_otp(otp):
+                auth.save()
+                return True
+        return False
+
     def create_totp(self, user):
         return Authenticator.objects.create(
             user=user,
@@ -89,7 +96,7 @@ class RecoveryCodeInterface(AuthenticatorInterface):
     def __init__(self, authenticator):
         AuthenticatorInterface.__init__(self, authenticator)
         self.codes = []
-        h = hmac.new(self.config['secret'], None, hashlib.sha1)
+        h = hmac.new(self.config['salt'], None, hashlib.sha1)
         for x in xrange(10):
             h.update('%s|' % x)
             self.codes.append(base64.b32encode(h.digest())[:8])
@@ -99,6 +106,8 @@ class RecoveryCodeInterface(AuthenticatorInterface):
         code = otp.strip().replace('-', '')
         for idx, ref_code in enumerate(self.codes):
             if code == ref_code:
+                if mask & (1 << idx):
+                    break
                 self.config['used'] = mask | (1 << idx)
                 return True
         return False
@@ -130,7 +139,7 @@ class Authenticator(BaseModel):
     id = BoundedAutoField(primary_key=True)
     user = FlexibleForeignKey('sentry.User', db_index=True)
     created_at = models.DateTimeField(_('created at'), default=timezone.now)
-    last_used_at = models.DateTimeField(_('last used at'))
+    last_used_at = models.DateTimeField(_('last used at'), null=True)
     type = BoundedPositiveIntegerField(choices=AUTHENTICATOR_CHOICES)
     config = UnicodePickledObjectField()
 
@@ -145,3 +154,9 @@ class Authenticator(BaseModel):
     @cached_property
     def interface(self):
         return AUTHENTICATOR_INTERFACES[self.type](self)
+
+    def __repr__(self):
+        return '<Authenticator user=%r interface=%r>' % (
+            self.user.email,
+            self.interface.interface_id,
+        )
diff --git a/src/sentry/south_migrations/0254_auto__add_authenticator.py b/src/sentry/south_migrations/0254_auto__add_authenticator.py
index c65ee965e2..e663a58633 100644
--- a/src/sentry/south_migrations/0254_auto__add_authenticator.py
+++ b/src/sentry/south_migrations/0254_auto__add_authenticator.py
@@ -12,13 +12,10 @@ class Migration(SchemaMigration):
         db.create_table('auth_authenticator', (
             ('id', self.gf('sentry.db.models.fields.bounded.BoundedAutoField')(primary_key=True)),
             ('user', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(to=orm['sentry.User'])),
-            ('name', self.gf('django.db.models.fields.CharField')(max_length=128)),
             ('created_at', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
-            ('last_used_at', self.gf('django.db.models.fields.DateTimeField')()),
-            ('type', self.gf('sentry.db.models.fields.bounded.BoundedPositiveIntegerField')(default=1)),
+            ('last_used_at', self.gf('django.db.models.fields.DateTimeField')(null=True)),
+            ('type', self.gf('sentry.db.models.fields.bounded.BoundedPositiveIntegerField')()),
             ('config', self.gf('sentry.db.models.fields.pickle.UnicodePickledObjectField')()),
-            ('recovery_codes_salt', self.gf('django.db.models.fields.CharField')(max_length=32)),
-            ('recovery_codes_mask', self.gf('sentry.db.models.fields.bounded.BoundedPositiveIntegerField')(default=0)),
         ))
         db.send_create_signal('sentry', ['Authenticator'])
 
@@ -70,11 +67,8 @@ class Migration(SchemaMigration):
             'config': ('sentry.db.models.fields.pickle.UnicodePickledObjectField', [], {}),
             'created_at': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
             'id': ('sentry.db.models.fields.bounded.BoundedAutoField', [], {'primary_key': 'True'}),
-            'last_used_at': ('django.db.models.fields.DateTimeField', [], {}),
-            'name': ('django.db.models.fields.CharField', [], {'max_length': '128'}),
-            'recovery_codes_mask': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {'default': '0'}),
-            'recovery_codes_salt': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
-            'type': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {'default': '1'}),
+            'last_used_at': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
+            'type': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {}),
             'user': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.User']"})
         },
         'sentry.authidentity': {
@@ -105,7 +99,7 @@ class Migration(SchemaMigration):
         'sentry.broadcast': {
             'Meta': {'object_name': 'Broadcast'},
             'date_added': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
-            'date_expires': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(2016, 5, 19, 0, 0)', 'null': 'True', 'blank': 'True'}),
+            'date_expires': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(2016, 5, 20, 0, 0)', 'null': 'True', 'blank': 'True'}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
             'is_active': ('django.db.models.fields.BooleanField', [], {'default': 'True', 'db_index': 'True'}),
             'link': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'}),
