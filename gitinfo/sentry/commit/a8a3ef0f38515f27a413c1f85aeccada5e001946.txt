commit a8a3ef0f38515f27a413c1f85aeccada5e001946
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jul 28 13:32:40 2015 -0700

    Remove SENTRY_ENABLE_EXPLORE_USERS

diff --git a/CHANGES b/CHANGES
index 4a6e618ff3..c47e53b307 100644
--- a/CHANGES
+++ b/CHANGES
@@ -15,6 +15,7 @@ Version 7.7.0
 - Upped TSDB's storage of 10s to 60m of data.
 - Added protocol version 7 to client spec.
   - Adds 'fingerprint' attribute.
+- The behavior of SENTRY_ENABLE_EXPLORE_USERS is now default and the setting has been removed.
 
 Version 7.6.2
 -------------
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index fc03d3c32d..e0dd6d159e 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -707,7 +707,6 @@ SENTRY_PUBLIC_ENDPOINT = None
 
 # Early draft features. Not slated or public release yet.
 SENTRY_ENABLE_EXPLORE_CODE = False
-SENTRY_ENABLE_EXPLORE_USERS = True
 
 # Prevent variables (e.g. context locals, http data, etc) from exceeding this
 # size in characters
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index 06186d0b71..9fe7ea2ca7 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -55,8 +55,7 @@ def post_process_group(event, is_new, is_regression, is_sample, **kwargs):
     if settings.SENTRY_ENABLE_EXPLORE_CODE:
         record_affected_code.delay(event=event)
 
-    if settings.SENTRY_ENABLE_EXPLORE_USERS:
-        record_affected_user.delay(event=event)
+    record_affected_user.delay(event=event)
 
     record_additional_tags(event=event)
 
@@ -102,10 +101,6 @@ def plugin_post_process_group(plugin_slug, event, **kwargs):
 def record_affected_user(event, **kwargs):
     from sentry.models import Group
 
-    if not settings.SENTRY_ENABLE_EXPLORE_USERS:
-        logger.info('Skipping sentry:user tag due to SENTRY_ENABLE_EXPLORE_USERS')
-        return
-
     user_ident = event.user_ident
     if not user_ident:
         logger.info('No user data found for event_id=%s', event.event_id)
diff --git a/src/sentry/utils/pytest.py b/src/sentry/utils/pytest.py
index c2500d9bc7..b3f3adb192 100644
--- a/src/sentry/utils/pytest.py
+++ b/src/sentry/utils/pytest.py
@@ -63,7 +63,6 @@ def pytest_configure(config):
 
     # enable draft features
     settings.SENTRY_ENABLE_EXPLORE_CODE = True
-    settings.SENTRY_ENABLE_EXPLORE_USERS = True
     settings.SENTRY_ENABLE_EMAIL_REPLIES = True
 
     # disable error reporting by default
diff --git a/tests/sentry/tasks/post_process/tests.py b/tests/sentry/tasks/post_process/tests.py
index 7fc36feccc..082d0bbd34 100644
--- a/tests/sentry/tasks/post_process/tests.py
+++ b/tests/sentry/tasks/post_process/tests.py
@@ -48,23 +48,12 @@ class PostProcessGroupTest(TestCase):
         group = self.create_group(project=self.project)
         event = self.create_event(group=group)
 
-        with self.settings(SENTRY_ENABLE_EXPLORE_USERS=False):
-            post_process_group(
-                event=event,
-                is_new=True,
-                is_regression=False,
-                is_sample=False,
-            )
-
-        assert not mock_record_affected_user.delay.called
-
-        with self.settings(SENTRY_ENABLE_EXPLORE_USERS=True):
-            post_process_group(
-                event=event,
-                is_new=True,
-                is_regression=False,
-                is_sample=False,
-            )
+        post_process_group(
+            event=event,
+            is_new=True,
+            is_regression=False,
+            is_sample=False,
+        )
 
         mock_record_affected_user.delay.assert_called_once_with(
             event=event,
