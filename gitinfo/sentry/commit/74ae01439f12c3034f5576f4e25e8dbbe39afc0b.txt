commit 74ae01439f12c3034f5576f4e25e8dbbe39afc0b
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Jul 20 01:10:42 2016 +0500

    Added test for data url redaction

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index 1995801e44..d8e1a08a35 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -283,7 +283,7 @@ def fetch_file(url, project=None, release=None, allow_scraping=True):
         if not allow_scraping or not url.startswith(('http:', 'https:')):
             error = {
                 'type': EventError.JS_MISSING_SOURCE,
-                'url': url,
+                'url': expose_url(url),
             }
             raise CannotFetchSource(error)
 
diff --git a/tests/sentry/lang/javascript/test_plugin.py b/tests/sentry/lang/javascript/test_plugin.py
index 5cd3a3755b..135467ca12 100644
--- a/tests/sentry/lang/javascript/test_plugin.py
+++ b/tests/sentry/lang/javascript/test_plugin.py
@@ -616,3 +616,30 @@ class JavascriptIntegrationTest(TestCase):
 
         event = Event.objects.get()
         assert event.data['errors'] == [{'url': u'http://example.com/unsupported.sourcemap.js', 'type': 'js_invalid_source'}]
+
+    def test_failed_sourcemap_expansion_data_url(self):
+        data = {
+            'message': 'hello',
+            'platform': 'javascript',
+            'sentry.interfaces.Exception': {
+                'values': [{
+                    'type': 'Error',
+                    'stacktrace': {
+                        'frames': [
+                            {
+                                'abs_path': 'data:application/javascript,base46,asfasf',
+                                'filename': 'indexed.min.js',
+                                'lineno': 1,
+                                'colno': 39,
+                            },
+                        ],
+                    },
+                }],
+            }
+        }
+
+        resp = self._postWithHeader(data)
+        assert resp.status_code, 200
+
+        event = Event.objects.get()
+        assert event.data['errors'] == [{'url': u'<data url>', 'type': 'js_no_source'}]
