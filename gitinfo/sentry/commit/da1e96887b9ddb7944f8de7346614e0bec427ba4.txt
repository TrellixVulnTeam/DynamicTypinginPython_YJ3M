commit da1e96887b9ddb7944f8de7346614e0bec427ba4
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jul 1 14:15:34 2016 -0700

    Improve subscription flows for workflow
    
    - Add unsubscribe signed links
    - Improve UI around configuring notification settings
    - Correct tests

diff --git a/src/sentry/plugins/sentry_mail/activity/base.py b/src/sentry/plugins/sentry_mail/activity/base.py
index b640bb4372..7506aa3bf3 100644
--- a/src/sentry/plugins/sentry_mail/activity/base.py
+++ b/src/sentry/plugins/sentry_mail/activity/base.py
@@ -233,11 +233,12 @@ class ActivityEmail(object):
         headers = self.get_headers()
 
         for user in users:
-            context['unsubscribe_link'] = generate_signed_link(
-                user.id,
-                'sentry-account-email-unsubscribe-project',
-                kwargs={'project_id': project.id},
-            )
+            if group:
+                context['unsubscribe_link'] = generate_signed_link(
+                    user.id,
+                    'sentry-account-email-unsubscribe-issue',
+                    kwargs={'issue_id': group.id},
+                )
 
             msg = MessageBuilder(
                 subject=subject,
diff --git a/src/sentry/templates/sentry/account/email_unsubscribe_project.html b/src/sentry/templates/sentry/account/email_unsubscribe_project.html
index acb9529c4c..d9a9e368ab 100644
--- a/src/sentry/templates/sentry/account/email_unsubscribe_project.html
+++ b/src/sentry/templates/sentry/account/email_unsubscribe_project.html
@@ -19,7 +19,7 @@
         </p>
 
         <fieldset class="form-actions">
-            <button type="submit" class="btn btn-primary">{% trans "Unsubscribe" %}</button>
+            <button type="submit" name="unsubscribe" class="btn btn-primary">{% trans "Unsubscribe" %}</button>
             <button type="submit" name="cancel" class="btn btn-default">{% trans "Cancel" %}</button>
         </fieldset>
     </form>
diff --git a/src/sentry/templates/sentry/account/notifications.html b/src/sentry/templates/sentry/account/notifications.html
index d7827b45ad..760dd23d95 100644
--- a/src/sentry/templates/sentry/account/notifications.html
+++ b/src/sentry/templates/sentry/account/notifications.html
@@ -25,63 +25,70 @@
     <form action="" method="post" class="">
         {% csrf_token %}
 
-        <p>{% blocktrans %}Notifications are generally sent when a new event is
-            seen, an already resolved event has changed to unresolved, or a
-            system-wide spike in events is detected.{% endblocktrans %}</p>
+        <h4>{% trans "General" %}</h4>
 
-        {% with settings_form as form %}
-            <fieldset>
-                <h4>{% trans "General" %}</legend></h4>
-                {% include "sentry/partial/form_base.html" %}
-            </fieldset>
-        {% endwith %}
-
-        {% if project_forms %}
-            <hr />
-            <h4>{% trans "Mail" %}</h4>
-            <p>{% blocktrans %}Choose which projects you wish to receive email notifications for, as well as an alternative email address to send to.{% endblocktrans %}</p>
-            <p><small>{% blocktrans %}Note: You will never receive notifications if a project has them disabled (via the Project settings){% endblocktrans %}</small></p>
-
-            {% for project, form in project_forms %}
-                {{ form|as_crispy_errors }}
-            {% endfor %}
-            {% for project, form in project_forms %}
-                {% ifchanged project.team %}
-                    {% if not forloop.first %}
-                        </table>
-                    {% endif %}
-                    <h5>{{ project.team.name }} <small>{{ project.organization.name }}</small></h5>
-
-                    <table class="table table-bordered table-striped" style="margin-bottom: 20px">
-                        <thead>
-                            <tr>
-                                <th style="width:31px">
-                                    <input type="checkbox" data-action="check-all-projects">
-                                </th>
-                                <th>{% trans "Project Name" %}</th>
-                                <th style="width:150px;overflow:hidden;text-align:right">
-                                    {% trans "Email Address" %}</th>
-                            </tr>
-                        </thead>
-                        <tbody>
-                {% endifchanged %}
-                <tr>
-                    <td>{{ form.alert }}</td>
-                    <td><label for="{{ form.alert.auto_id }}">{{ project.name }} <small>&mdash; {{ project.slug }}</small></label></td>
-                    <td style="text-align:right">
-                        <a href="javascript:void(0)" data-target="{{ form.email.auto_id }}" data-toggle="change-target-value">
-                            {% if form.email.value %}{{ form.email.value }}{% else %}<em>Default</em>{% endif %}
-                        </a>
-                        {{ form.email }}
-                    </td>
-                </tr>
-            {% endfor %}
-            </tbody></table>
-        {% endif %}
+        {{ settings_form.alert_email|as_crispy_field }}
+
+        <hr />
+
+        <h4>{% trans "Workflow" %}</h4>
+
+        <p>{% blocktrans %}Workflow notifications are separate from alerts, and are generated for things like comments and issue updates. You may subscribe (or unsubscribe) form individual issues on their respective pages.{% endblocktrans %}</p>
+
+        {{ settings_form.workflow_notifications|as_crispy_field }}
+
+        <hr />
+
+        <h4>{% trans "Alerts" %}</h4>
+
+        <p>Alerts are generated based on a project's rules, defined in <strong>[Project] &raquo; Settings</strong>.</p>
+
+        {{ settings_form.subscribe_by_default|as_crispy_field }}
+
+        {% for project, form in project_forms %}
+            {{ form|as_crispy_errors }}
+        {% endfor %}
+
+        {% for project, form in project_forms %}
+            {% ifchanged project.organization %}
+                {% if not forloop.first %}
+                    </table>
+                {% endif %}
+
+                <h5 style="margin-top: 20px; font-weight: normal">{{ project.organization.name }}</h5>
+
+                <table class="table table-bordered table-striped" style="margin-bottom: 20px">
+                    <thead>
+                        <tr>
+                          <th style="width:31px;"><input type="checkbox" data-toggle="alerts" /></th>
+                            <th>{% trans "Project" %}</th>
+                            <th style="width:150px;overflow:hidden;text-align:right">
+                                {% trans "Email Address" %}
+                            </th>
+                        </tr>
+                    </thead>
+                    <tbody>
+            {% endifchanged %}
+            <tr>
+              <td>{{ form.alert }}</td>
+                <td>
+                    <label for="{{ form.alert.auto_id }}">{{ project.organization.slug}}/{{ project.slug }}</label>
+                </td>
+                <td style="text-align:right">
+                    <a href="javascript:void(0)" data-target="{{ form.email.auto_id }}" data-toggle="change-target-value">
+                        {% if form.email.value %}{{ form.email.value }}{% else %}<em>Default</em>{% endif %}
+                    </a>
+                    {{ form.email }}
+                </td>
+            </tr>
+        {% endfor %}
+        </tbody></table>
+
+        <p><small>{% blocktrans %}Note: You will never receive notifications if a project has them disabled (via the Project settings){% endblocktrans %}</small></p>
 
         {% for form in ext_forms %}
             <fieldset>
-                <div><legend>{{ form.get_title }}</legend></div>
+                <h4>{{ form.get_title }}</h4>
                 {% with form.get_description as description %}
                     {% if description %}
                         {{ description|linebreaks }}
@@ -95,22 +102,28 @@
             <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
         </fieldset>
     </form>
+    <style>
+    #div_id_workflow_notifications label { display:none; }
+    #div_id_subscribe_by_default label { display:none; }
+    </style>
     <script>
     $(function(){
-        $('form a[data-toggle="change-target-value"]').click(function(){
-            var $this = $(this);
-            var $target = $('#' + $this.data('target'));
-            var result = window.prompt('Enter an email address', $target.val());
-            $target.val(result || '');
-            if (result) {
-                $this.text(result);
-            } else {
-                $this.html('<em>Default</em>');
-            }
-        });
-        $('input[data-action="check-all-projects"]').click(function(){
-            $(this).parents('table').find('tbody input[type=checkbox]').prop('checked', $(this).prop('checked'))
-        });
+      $('form a[data-toggle="change-target-value"]').click(function(){
+        var $this = $(this);
+        var $target = $('#' + $this.data('target'));
+        var result = window.prompt('Enter an email address', $target.val());
+        $target.val(result || '');
+        if (result) {
+          $this.text(result);
+        } else {
+          $this.html('<em>Default</em>');
+        }
+      });
+      $('form input[data-toggle="alerts"]').click(function(e){
+        $(this).parents('table')
+          .find('tbody input[type="checkbox"]')
+          .prop('checked', e.target.checked);
+      });
     });
     </script>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/activity/generic.txt b/src/sentry/templates/sentry/emails/activity/generic.txt
index 84a73db7b5..4af844a917 100644
--- a/src/sentry/templates/sentry/emails/activity/generic.txt
+++ b/src/sentry/templates/sentry/emails/activity/generic.txt
@@ -10,8 +10,9 @@
 {{ group.message_short }}
 
 {{ link }}
+{% if unsubscribe_link %}
 
-Unsubscribe: {{ unsubscribe_link }}
+Unsubscribe: {{ unsubscribe_link }}{% endif %}
 
 {% endautoescape %}
 {% endspaceless %}
diff --git a/src/sentry/templates/sentry/unsubscribe-issue-notifications.html b/src/sentry/templates/sentry/unsubscribe-issue-notifications.html
new file mode 100644
index 0000000000..64ae0c6e9d
--- /dev/null
+++ b/src/sentry/templates/sentry/unsubscribe-issue-notifications.html
@@ -0,0 +1,20 @@
+{% extends "sentry/bases/forceauth_modal.html" %}
+
+{% load crispy_forms_tags %}
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}{% trans "Unsubscribe" %}{% endblock %}
+
+{% block main %}
+    <form action="" method="post" class="">
+        {% csrf_token %}
+
+        <p>You are about to unsubscribe from notifications for the <a href="{{ issue_link }}">selected issue</a>.</p>
+
+        <fieldset class="form-actions">
+            <button type="submit" class="btn btn-primary">{% trans "Unsubscribe" %}</button>
+            <button type="submit" name="cancel" class="btn btn-default">{% trans "Cancel" %}</button>
+        </fieldset>
+    </form>
+{% endblock %}
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index dd88a7b10c..4d5ea57ba5 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -182,7 +182,7 @@ class ChangePasswordRecoverForm(forms.Form):
 
 
 class NotificationSettingsForm(forms.Form):
-    alert_email = forms.EmailField(help_text=_('Designate an alternative email address to send email notifications to.'), required=False)
+    alert_email = forms.EmailField(label=_('Email'), help_text=_('Designate an alternative email address to send email notifications to.'), required=False)
     subscribe_by_default = forms.ChoiceField(
         label=_('Alerts'),
         choices=(
@@ -193,8 +193,8 @@ class NotificationSettingsForm(forms.Form):
     workflow_notifications = forms.ChoiceField(
         label=_('Workflow Notifications'),
         choices=(
-            ('0', _('Get notified about changes for all issues')),
-            ('1', _('Only notify me when I\'m participating on an issue')),
+            ('0', _('Receive updates for all issues by default')),
+            ('1', _('Only notify me when I\'m participating or mentioned on an issue')),
         ), required=False,
         widget=forms.Select(attrs={'class': 'input-xxlarge'}))
 
@@ -375,6 +375,7 @@ class AppearanceSettingsForm(forms.Form):
 
 class ProjectEmailOptionsForm(forms.Form):
     alert = forms.BooleanField(required=False)
+    workflow = forms.BooleanField(required=False)
     email = forms.EmailField(required=False, widget=forms.HiddenInput())
 
     def __init__(self, project, user, *args, **kwargs):
@@ -383,9 +384,9 @@ class ProjectEmailOptionsForm(forms.Form):
 
         super(ProjectEmailOptionsForm, self).__init__(*args, **kwargs)
 
-        is_enabled = project.is_user_subscribed_to_mail_alerts(user)
+        has_alerts = project.is_user_subscribed_to_mail_alerts(user)
 
-        self.fields['alert'].initial = is_enabled
+        self.fields['alert'].initial = has_alerts
         self.fields['email'].initial = UserOption.objects.get_value(
             user, project, 'mail:email', None)
 
@@ -394,6 +395,7 @@ class ProjectEmailOptionsForm(forms.Form):
             self.user, self.project, 'mail:alert',
             int(self.cleaned_data['alert']),
         )
+
         if self.cleaned_data['email']:
             UserOption.objects.set_value(
                 self.user, self.project, 'mail:email',
diff --git a/src/sentry/web/frontend/unsubscribe_issue_notifications.py b/src/sentry/web/frontend/unsubscribe_issue_notifications.py
new file mode 100644
index 0000000000..008b824d63
--- /dev/null
+++ b/src/sentry/web/frontend/unsubscribe_issue_notifications.py
@@ -0,0 +1,56 @@
+from __future__ import absolute_import
+
+from django.db import transaction
+from django.http import Http404, HttpResponseRedirect
+from django.views.decorators.cache import never_cache
+from django.utils.decorators import method_decorator
+
+from sentry.models import Group, GroupSubscription, OrganizationMember
+from sentry.web.decorators import signed_auth_required
+from sentry.web.frontend.base import BaseView
+from sentry.utils.http import absolute_uri
+
+signed_auth_required_m = method_decorator(signed_auth_required)
+
+
+class UnsubscribeIssueNotificationsView(BaseView):
+    auth_required = False
+
+    @never_cache
+    @signed_auth_required_m
+    @transaction.atomic
+    def handle(self, request, issue_id):
+        if not getattr(request, 'user_from_signed_request', False):
+            raise Http404
+
+        try:
+            group = Group.objects.get_from_cache(id=issue_id)
+        except Group.DoesNotExist:
+            raise Http404
+
+        if not OrganizationMember.objects.filter(
+            user=request.user,
+            organization=group.project.organization,
+        ).exists():
+            raise Http404
+
+        issue_link = absolute_uri('/{}/{}/issues/{}/'.format(
+            group.project.organization.slug,
+            group.project.slug,
+            group.id,
+        ))
+
+        if request.method == 'POST':
+            if request.POST.get('op') == 'unsubscribe':
+                GroupSubscription.objects.create_or_update(
+                    group=group,
+                    project=group.project,
+                    user=request.user,
+                    is_active=False,
+                )
+            return HttpResponseRedirect(issue_link)
+
+        return self.respond('sentry/unsubscribe-issue-notifications.html', {
+            'issue': group,
+            'issue_link': issue_link
+        })
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 91fa8991a1..c99be68fb1 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -76,6 +76,8 @@ from sentry.web.frontend.remove_project_key import RemoveProjectKeyView
 from sentry.web.frontend.remove_team import RemoveTeamView
 from sentry.web.frontend.replay_event import ReplayEventView
 from sentry.web.frontend.sudo import SudoView
+from sentry.web.frontend.unsubscribe_issue_notifications import \
+    UnsubscribeIssueNotificationsView
 from sentry.web.frontend.user_avatar import UserAvatarPhotoView
 
 __all__ = ('urlpatterns',)
@@ -257,9 +259,18 @@ urlpatterns += patterns(
         name='sentry-account-settings-identities'),
     url(r'^account/settings/notifications/$', accounts.notification_settings,
         name='sentry-account-settings-notifications'),
+
+    # compatibility
     url(r'^account/settings/notifications/unsubscribe/(?P<project_id>\d+)/$',
+        accounts.email_unsubscribe_project),
+
+    url(r'^account/notifications/unsubscribe/(?P<project_id>\d+)/$',
         accounts.email_unsubscribe_project,
         name='sentry-account-email-unsubscribe-project'),
+    url(r'^account/notifications/unsubscribe/issue/(?P<issue_id>\d+)/$',
+        UnsubscribeIssueNotificationsView.as_view(),
+        name='sentry-account-email-unsubscribe-issue'),
+
     url(r'^account/remove/$', RemoveAccountView.as_view(),
         name='sentry-remove-account'),
     url(r'^account/settings/social/', include('sentry.social_auth.urls')),
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 1358b5e145..61099c24b0 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -20,7 +20,6 @@ from sentry.models import (
     Group,
     OrganizationMember,
     OrganizationMemberTeam,
-    Release,
     Rule,
 )
 from sentry.plugins import Notification
@@ -297,10 +296,6 @@ class MailPluginTest(TestCase):
 
         assert msg.subject.startswith('[Example prefix] [foo Bar]')
 
-    @mock.patch(
-        'sentry.models.ProjectOption.objects.get_value',
-        Mock(side_effect=lambda p, k, d: "[Example prefix] " if k == "mail:subject_prefix" else d)
-    )
     def test_assignment(self):
         activity = Activity.objects.create(
             project=self.project,
@@ -319,7 +314,7 @@ class MailPluginTest(TestCase):
 
         msg = mail.outbox[0]
 
-        assert msg.subject == 'Re: [Example prefix] [foo Bar] ERROR: Foo bar'
+        assert msg.subject == 'Re: [Sentry] [foo Bar] ERROR: Foo bar'
         assert msg.to == [self.user.email]
 
     def test_note(self):
@@ -346,32 +341,3 @@ class MailPluginTest(TestCase):
 
         assert msg.subject == 'Re: [Sentry] [foo Bar] ERROR: Foo bar'
         assert msg.to == [self.user.email]
-
-    def test_release(self):
-        user_foo = self.create_user('foo@example.com')
-
-        release = Release.objects.create(
-            project=self.project,
-            version='a' * 40,
-        )
-
-        activity = Activity.objects.create(
-            project=self.project,
-            type=Activity.RELEASE,
-            user=user_foo,
-            data={
-                'version': release.version,
-            },
-        )
-
-        self.project.team.organization.member_set.create(user=user_foo)
-
-        with self.tasks():
-            self.plugin.notify_about_activity(activity)
-
-        assert len(mail.outbox) == 1
-
-        msg = mail.outbox[0]
-
-        assert msg.subject == '[Sentry] Release %s' % (release.version,)
-        assert msg.to == [self.user.email]
diff --git a/tests/sentry/web/frontend/test_unsubscribe_issue_notifications.py b/tests/sentry/web/frontend/test_unsubscribe_issue_notifications.py
new file mode 100644
index 0000000000..2c61c2f5d0
--- /dev/null
+++ b/tests/sentry/web/frontend/test_unsubscribe_issue_notifications.py
@@ -0,0 +1,64 @@
+from __future__ import absolute_import
+
+from sentry.testutils import TestCase
+from sentry.models import GroupSubscription
+from sentry.utils.linksign import generate_signed_link
+
+
+class UnsubscribeIssueNotificationsTest(TestCase):
+    def test_renders(self):
+        group = self.create_group()
+
+        path = generate_signed_link(
+            user=self.user,
+            viewname='sentry-account-email-unsubscribe-issue',
+            args=[group.id],
+        )
+
+        resp = self.client.get(path)
+
+        assert resp.status_code == 200
+
+    def test_process(self):
+        group = self.create_group()
+
+        path = generate_signed_link(
+            user=self.user,
+            viewname='sentry-account-email-unsubscribe-issue',
+            args=[group.id],
+        )
+
+        resp = self.client.post(path, data={'op': 'unsubscribe'})
+
+        assert resp.status_code == 302
+        assert GroupSubscription.objects.filter(
+            user=self.user,
+            group=group,
+            is_active=False,
+        ).exists()
+
+    def test_no_access(self):
+        user = self.create_user('foo@example.com')
+        group = self.create_group()
+
+        path = generate_signed_link(
+            user=user,
+            viewname='sentry-account-email-unsubscribe-issue',
+            args=[group.id],
+        )
+
+        resp = self.client.get(path)
+
+        assert resp.status_code == 404
+
+    def test_invalid_issue(self):
+
+        path = generate_signed_link(
+            user=self.user,
+            viewname='sentry-account-email-unsubscribe-issue',
+            args=[13413434],
+        )
+
+        resp = self.client.get(path)
+
+        assert resp.status_code == 404
