commit 9722f4ba937cf4466dd67afe076f69a545a6055a
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Aug 1 16:59:28 2018 -0700

    feat(discover): Add loading indicator (#9275)
    
    Displays a loading indicator and disables button when a query is in
    flight

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index 3d09e8a46d..d316ec4d6e 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -23,7 +23,7 @@ import Intro from './intro';
 
 import {isValidCondition} from './conditions/utils';
 import {isValidAggregation} from './aggregations/utils';
-import {Fieldset, PlaceholderText} from './styles';
+import {Fieldset, PlaceholderText, ButtonSpinner} from './styles';
 
 import {getQueryStringFromQuery} from './utils';
 
@@ -39,6 +39,7 @@ export default class OrganizationDiscover extends React.Component {
       result: null,
       chartData: null,
       chartQuery: null,
+      isFetchingQuery: false,
     };
   }
 
@@ -67,10 +68,12 @@ export default class OrganizationDiscover extends React.Component {
       this.updateField('aggregations', filteredAggregations);
     }
 
+    this.setState({isFetchingQuery: true});
+
     queryBuilder.fetch().then(
       result => {
         const query = queryBuilder.getInternal();
-        this.setState({result});
+        this.setState({result, isFetchingQuery: false});
 
         browserHistory.push({
           pathname: `/organizations/${organization.slug}/discover/${getQueryStringFromQuery(
@@ -80,7 +83,7 @@ export default class OrganizationDiscover extends React.Component {
       },
       () => {
         addErrorMessage(t('An error occurred'));
-        this.setState({result: null});
+        this.setState({result: null, isFetchingQuery: false});
       }
     );
 
@@ -172,7 +175,7 @@ export default class OrganizationDiscover extends React.Component {
     });
   };
   render() {
-    const {result, chartData, chartQuery} = this.state;
+    const {result, chartData, chartQuery, isFetchingQuery} = this.state;
     const {queryBuilder} = this.props;
 
     const query = queryBuilder.getInternal();
@@ -260,8 +263,9 @@ export default class OrganizationDiscover extends React.Component {
 
             <Flex pt={1}>
               <Box mr={1}>
-                <Button onClick={this.runQuery} priority="primary">
+                <Button onClick={this.runQuery} priority="primary" busy={isFetchingQuery}>
                   {t('Run Query')}
+                  {isFetchingQuery && <ButtonSpinner />}
                 </Button>
               </Box>
               <Button onClick={this.reset}>{t('Reset')}</Button>
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
index 32224fbf4f..8befeb892c 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
@@ -1,5 +1,6 @@
 import styled from 'react-emotion';
 import {Flex} from 'grid-emotion';
+import {keyframes} from 'emotion';
 
 import space from 'app/styles/space';
 
@@ -24,3 +25,24 @@ export const AddText = styled.span`
   line-height: 16px;
   color: ${p => p.theme.gray1};
 `;
+
+const spin = keyframes`
+  0% {
+    transform: rotate(0deg);
+  }
+  100% {
+    transform: rotate(360deg);
+  }
+`;
+
+export const ButtonSpinner = styled.div`
+  animation: ${spin} 0.4s linear infinite;
+  width: 14px;
+  height: 14px;
+  border-radius: 14px;
+  border-top: 2px solid ${p => p.theme.borderLight};
+  border-right: 2px solid ${p => p.theme.borderLight};
+  border-bottom: 2px solid ${p => p.theme.borderLight};
+  border-left: 2px solid ${p => p.theme.purple};
+  margin-left: 4px;
+`;
