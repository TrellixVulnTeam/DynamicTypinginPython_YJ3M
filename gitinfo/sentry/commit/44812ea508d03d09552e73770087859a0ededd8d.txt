commit 44812ea508d03d09552e73770087859a0ededd8d
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 10 23:23:06 2015 -0800

    Add search and message to events tab

diff --git a/src/sentry/static/sentry/app/views/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupEvents.jsx
index c0aec6d74d..d4c13d9485 100644
--- a/src/sentry/static/sentry/app/views/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/groupEvents.jsx
@@ -1,14 +1,15 @@
 import React from 'react';
 import {History, Link} from 'react-router';
-import ApiMixin from '../mixins/apiMixin';
-
-import GroupState from '../mixins/groupState';
 
+import ApiMixin from '../mixins/apiMixin';
 import DateTime from '../components/dateTime';
 import Gravatar from '../components/gravatar';
+import GroupState from '../mixins/groupState';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import Pagination from '../components/pagination';
+import SearchBar from '../components/searchBar.jsx';
+import {t} from '../locale';
 
 const GroupEvents = React.createClass({
   mixins: [
@@ -18,11 +19,13 @@ const GroupEvents = React.createClass({
   ],
 
   getInitialState() {
+    let queryParams = this.props.location.query;
     return {
       eventList: [],
       loading: true,
       error: false,
       pageLinks: '',
+      query: queryParams.query || '',
     };
   },
 
@@ -30,13 +33,36 @@ const GroupEvents = React.createClass({
     this.fetchData();
   },
 
-  componentDidUpdate(prevProps) {
-    if (prevProps.params.groupId !== this.props.params.groupId ||
-      prevProps.location.search !== this.props.location.search) {
-      this.fetchData();
+  componentWillReceiveProps(nextProps) {
+    if (nextProps.params.groupId !== this.props.params.groupId ||
+        nextProps.location.search !== this.props.location.search) {
+      let queryParams = nextProps.location.query;
+      this.setState({
+        query: queryParams.query
+      }, this.fetchData);
     }
   },
 
+  onSearch(query) {
+    let targetQueryParams = {};
+    if (query !== '')
+      targetQueryParams.query = query;
+
+    let {groupId, orgId, projectId} = this.props.params;
+    this.history.pushState(null, `/${orgId}/${projectId}/issues/${groupId}/events/`, targetQueryParams);
+  },
+
+  getEndpoint() {
+    let params = this.props.params;
+    let queryParams = {
+      ...this.props.location.query,
+      limit: 50,
+      query: this.state.query
+    };
+
+    return `/issues/${params.groupId}/events/?${jQuery.param(queryParams)}`;
+  },
+
   fetchData() {
     let queryParams = this.props.location.query;
 
@@ -45,7 +71,7 @@ const GroupEvents = React.createClass({
       error: false
     });
 
-    this.api.request(`/issues/${this.getGroup().id}/events/`, {
+    this.api.request(this.getEndpoint(), {
       method: 'GET',
       data: queryParams,
       success: (data, _, jqXHR) => {
@@ -65,13 +91,29 @@ const GroupEvents = React.createClass({
     });
   },
 
-  render() {
-    if (this.state.loading) {
-      return <LoadingIndicator />;
-    } else if (this.state.error) {
-      return <LoadingError onRetry={this.fetchData} />;
-    }
+  getEventTitle(event) {
+    return event.message.split('\n')[0].substr(0, 100);
+  },
+
+  renderNoQueryResults() {
+    return (
+      <div className="box empty-stream">
+        <span className="icon icon-exclamation" />
+        <p>{t('Sorry, no events match your search query.')}</p>
+      </div>
+    );
+  },
 
+  renderEmpty() {
+    return (
+      <div className="box empty-stream">
+        <span className="icon icon-exclamation" />
+        <p>{t('There don\'t seem to be any events yet.')}</p>
+      </div>
+    );
+  },
+
+  renderResults() {
     let group = this.getGroup();
     let tagList = group.tags.filter((tag) => {
       return tag.key !== 'user';
@@ -100,7 +142,7 @@ const GroupEvents = React.createClass({
               <Link to={`/${orgId}/${projectId}/issues/${groupId}/events/${event.id}/`}>
                 <DateTime date={event.dateCreated} />
               </Link>
-              <small>{event.eventID}</small>
+              <small>{this.getEventTitle(event)}</small>
             </h5>
           </td>
           {tagList.map((tag) => {
@@ -132,7 +174,7 @@ const GroupEvents = React.createClass({
           <table className="table">
             <thead>
               <tr>
-                <th>ID</th>
+                <th>{t('Event')}</th>
                 {tagList.map((tag) => {
                   return (
                     <th key={tag.key}>
@@ -141,7 +183,7 @@ const GroupEvents = React.createClass({
                   );
                 })}
                 {hasUser &&
-                  <th>User</th>
+                  <th>{t('User')}</th>
                 }
               </tr>
             </thead>
@@ -153,6 +195,37 @@ const GroupEvents = React.createClass({
         <Pagination pageLinks={this.state.pageLinks}/>
       </div>
     );
+  },
+
+  renderBody() {
+    let body;
+
+    if (this.state.loading)
+      body = <LoadingIndicator />;
+    else if (this.state.error)
+      body = <LoadingError onRetry={this.fetchData} />;
+    else if (this.state.eventList.length > 0)
+      body = this.renderResults();
+    else if (this.state.query && this.state.query !== '')
+      body = this.renderNoQueryResults();
+    else
+      body = this.renderEmpty();
+
+    return body;
+  },
+
+  render() {
+    return (
+      <div>
+        <div style={{marginBottom: 20}}>
+          <SearchBar defaultQuery=""
+            placeholder="search event message"
+            query={this.state.query}
+            onSearch={this.onSearch} />
+        </div>
+        {this.renderBody()}
+      </div>
+    );
   }
 });
 
diff --git a/src/sentry/static/sentry/app/views/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
index 5f7bc9a943..4d0fb1bce1 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
@@ -121,7 +121,6 @@ const ProjectReleases = React.createClass({
     return body;
   },
 
-
   renderLoading() {
     return (
       <div className="box">
