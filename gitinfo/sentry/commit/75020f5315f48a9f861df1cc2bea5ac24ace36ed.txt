commit 75020f5315f48a9f861df1cc2bea5ac24ace36ed
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Jan 28 11:01:54 2016 -0800

    Assert that json payloads are dictionaries and not other valid json
    types

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 75ff5742d4..b4d9625d74 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -265,6 +265,7 @@ class ClientApiHelper(object):
     def safely_load_json_string(self, json_string):
         try:
             obj = json.loads(json_string)
+            assert isinstance(obj, dict)
         except Exception as e:
             # This error should be caught as it suggests that there's a
             # bug somewhere in the client's code.
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index b1d87e352a..d0f7d796ca 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -305,6 +305,20 @@ class ValidateDataTest(BaseAPITest):
         assert data.get('platform') == 'other'
 
 
+class SafelyLoadJSONStringTest(BaseAPITest):
+    def test_valid_payload(self):
+        data = self.helper.safely_load_json_string('{"foo": "bar"}')
+        assert data == {'foo': 'bar'}
+
+    def test_invalid_json(self):
+        with self.assertRaises(APIError):
+            self.helper.safely_load_json_string('{')
+
+    def test_unexpected_type(self):
+        with self.assertRaises(APIError):
+            self.helper.safely_load_json_string('1')
+
+
 class GetInterfaceTest(TestCase):
     def test_does_not_let_through_disallowed_name(self):
         with self.assertRaises(ValueError):
