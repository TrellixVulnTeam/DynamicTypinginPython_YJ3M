commit 8b94efe30b7d516ebaa842f6f2c41af3224c286a
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon May 7 09:13:05 2018 -0700

    fix(pagination): Fix pagination when searching in settings list views (#8309)

diff --git a/src/sentry/static/sentry/app/components/asyncComponent.jsx b/src/sentry/static/sentry/app/components/asyncComponent.jsx
index ea3c285acb..4801a6d2ad 100644
--- a/src/sentry/static/sentry/app/components/asyncComponent.jsx
+++ b/src/sentry/static/sentry/app/components/asyncComponent.jsx
@@ -110,15 +110,7 @@ class AsyncComponent extends React.Component {
         ...params,
         query,
         success: (data, _, jqXHR) => {
-          this.setState(prevState => {
-            return {
-              [stateKey]: data,
-              // TODO(billy): This currently fails if this request is retried by SudoModal
-              [`${stateKey}PageLinks`]: jqXHR && jqXHR.getResponseHeader('Link'),
-              remainingRequests: prevState.remainingRequests - 1,
-              loading: prevState.remainingRequests > 1,
-            };
-          });
+          this.handleRequestSuccess({stateKey, data, jqXHR}, true);
         },
         error: error => {
           // Allow endpoints to fail
@@ -132,6 +124,23 @@ class AsyncComponent extends React.Component {
     });
   };
 
+  handleRequestSuccess = ({stateKey, data, jqXHR}, initialRequest) => {
+    this.setState(prevState => {
+      let state = {
+        [stateKey]: data,
+        // TODO(billy): This currently fails if this request is retried by SudoModal
+        [`${stateKey}PageLinks`]: jqXHR && jqXHR.getResponseHeader('Link'),
+      };
+
+      if (initialRequest) {
+        state.remainingRequests = prevState.remainingRequests - 1;
+        state.loading = prevState.remainingRequests > 1;
+      }
+
+      return state;
+    });
+  };
+
   handleError(error, [stateKey]) {
     if (error && error.responseText) {
       Raven.captureBreadcrumb({
diff --git a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMembersView.jsx b/src/sentry/static/sentry/app/views/settings/organization/members/organizationMembersView.jsx
index e0041c8459..11e549e396 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMembersView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/members/organizationMembersView.jsx
@@ -221,8 +221,8 @@ class OrganizationMembersView extends AsyncView {
 
     this.api.request(`/organizations/${orgId}/members/?query=${searchQuery}`, {
       method: 'GET',
-      success: data => {
-        this.setState({members: data});
+      success: (data, _, jqXHR) => {
+        this.handleRequestSuccess({stateKey: 'members', data, jqXHR});
       },
     });
   }, 200);
diff --git a/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx b/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx
index f3742e80ae..8a5a9319f5 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx
@@ -82,8 +82,8 @@ export default class OrganizationProjectsView extends AsyncView {
 
     this.api.request(`/organizations/${orgId}/projects/?query=${searchQuery}`, {
       method: 'GET',
-      success: data => {
-        this.setState({projectList: data});
+      success: (data, _, jqXHR) => {
+        this.handleRequestSuccess({stateKey: 'projectList', data, jqXHR});
       },
     });
   }, 200);
diff --git a/tests/js/spec/views/projectPlugins/index.spec.jsx b/tests/js/spec/views/projectPlugins/index.spec.jsx
index 4bd8bdc426..082514da54 100644
--- a/tests/js/spec/views/projectPlugins/index.spec.jsx
+++ b/tests/js/spec/views/projectPlugins/index.spec.jsx
@@ -23,6 +23,11 @@ describe('ProjectPluginsContainer', function() {
       features: [],
     };
 
+    MockApiClient.addMockResponse({
+      url: `/organizations/${org.slug}/`,
+      method: 'GET',
+      body: org,
+    });
     MockApiClient.addMockResponse({
       url: `/organizations/${org.slug}/config/integrations/`,
       method: 'GET',
