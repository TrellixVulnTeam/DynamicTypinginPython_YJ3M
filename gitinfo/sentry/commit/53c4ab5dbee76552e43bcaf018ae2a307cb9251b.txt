commit 53c4ab5dbee76552e43bcaf018ae2a307cb9251b
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Sat Oct 10 12:03:59 2015 -0700

    Fix the function signature for task_revoked_handler
    
    task_revoked_handler expects a `sender` kwarg to be sent. This `sender`
    is the Task object, never a task_id. It also doesn't ever send `task`
    kwarg, so this was causing Celery to error internally when it dispatched
    it's signal, and since celery is awesome, it just gracefully exited
    without any traceback

diff --git a/src/sentry/receivers/stats.py b/src/sentry/receivers/stats.py
index 52951bff45..e53a93cc75 100644
--- a/src/sentry/receivers/stats.py
+++ b/src/sentry/receivers/stats.py
@@ -36,13 +36,12 @@ def record_task_signal(signal, name):
     )
 
 
-def task_revoked_handler(task, expired=False, **kwargs):
-    if not isinstance(task, basestring):
-        task = _get_task_name(task)
+# https://celery.readthedocs.org/en/latest/userguide/signals.html#task-revoked
+def task_revoked_handler(sender, expired=False, **kwargs):
     if expired:
-        metrics.incr('jobs.expired', instance=task)
+        metrics.incr('jobs.expired', instance=sender)
     else:
-        metrics.incr('jobs.revoked', instance=task)
+        metrics.incr('jobs.revoked', instance=sender)
 
 
 task_revoked.connect(
