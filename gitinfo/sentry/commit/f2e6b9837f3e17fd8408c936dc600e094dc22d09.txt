commit f2e6b9837f3e17fd8408c936dc600e094dc22d09
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jun 8 07:08:43 2015 -0700

    Handle null values for sourcesContent (refs GH-1551)

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index d0f71fc0bf..2ab3f35c81 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -587,7 +587,7 @@ class SourceProcessor(object):
             for source in sourcemap_idx.sources:
                 next_filename = urljoin(sourcemap_url, source)
                 if next_filename not in done_file_list:
-                    if sourcemap_idx.content:
+                    if source in sourcemap_idx.content:
                         cache.add(next_filename, sourcemap_idx.content[source])
                         done_file_list.add(next_filename)
                     else:
diff --git a/src/sentry/lang/javascript/sourcemaps.py b/src/sentry/lang/javascript/sourcemaps.py
index 96e7febae7..2917f3902d 100644
--- a/src/sentry/lang/javascript/sourcemaps.py
+++ b/src/sentry/lang/javascript/sourcemaps.py
@@ -116,7 +116,7 @@ def sourcemap_to_index(sourcemap):
     state_list = []
     key_list = []
     src_list = set()
-    content = None
+    content = {}
     sourceRoot = smap.get('sourceRoot')
 
     # turn /foo/bar into /foo/bar/ so urljoin doesnt strip the last path
@@ -124,15 +124,14 @@ def sourcemap_to_index(sourcemap):
         sourceRoot = sourceRoot + '/'
 
     if 'sourcesContent' in smap:
-        content = {}
         for idx, source in enumerate(smap['sources']):
-            # Apply the root to the source before shoving into the index
-            # so we can look it up correctly later
-            source = urljoin(sourceRoot, source)
+            # Ensure we handle null files that may be specified outside of
+            # sourcesContent
             if smap['sourcesContent'][idx]:
+                # Apply the root to the source before shoving into the index
+                # so we can look it up correctly later
+                source = urljoin(sourceRoot, source)
                 content[source] = smap['sourcesContent'][idx].splitlines()
-            else:
-                content[source] = []
 
     for state in parse_sourcemap(smap):
         state_list.append(state)
