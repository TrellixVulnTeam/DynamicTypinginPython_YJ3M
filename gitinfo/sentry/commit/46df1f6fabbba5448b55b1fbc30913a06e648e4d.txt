commit 46df1f6fabbba5448b55b1fbc30913a06e648e4d
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 8 12:34:21 2012 -0800

    Dont require context line or function in stacktraces

diff --git a/sentry/interfaces.py b/sentry/interfaces.py
index 995a19d65b..eef8651504 100644
--- a/sentry/interfaces.py
+++ b/sentry/interfaces.py
@@ -113,9 +113,9 @@ class Stacktrace(Interface):
         for frame in frames:
             # ensure we've got the correct required values
             assert 'filename' in frame
-            assert 'function' in frame
             assert 'lineno' in frame
-            assert 'context_line' in frame
+            # assert 'context_line' in frame
+            # assert 'function' in frame
 
     def serialize(self):
         return {
@@ -125,12 +125,17 @@ class Stacktrace(Interface):
     def to_html(self, event):
         frames = []
         for frame in self.frames:
-            context = get_context(frame['lineno'], frame['context_line'], frame.get('pre_context'), frame.get('post_context'))
+            if 'context_line' in frame:
+                context = get_context(frame['lineno'], frame['context_line'], frame.get('pre_context'), frame.get('post_context'))
+                start_lineno = context[0][0]
+            else:
+                context = []
+                start_lineno = None
             frames.append({
                 'abs_path': frame.get('abs_path'),
-                'filename': frame.get('filename'),
+                'filename': frame['filename'],
                 'function': frame.get('function'),
-                'start_lineno': context[0][0],
+                'start_lineno': start_lineno,
                 'lineno': frame.get('lineno'),
                 'context': context,
                 'vars': frame.get('vars') or {},
@@ -155,8 +160,12 @@ class Stacktrace(Interface):
             'Traceback (most recent call last):', '',
         ]
         for frame in self.frames:
-            result.append('  File "%(filename)s", line %(lineno)s, in %(function)s' % frame)
-            result.append('    %s' % frame['context_line'].strip())
+            if 'function' in frame:
+                result.append('  File "%(filename)s", line %(lineno)s, in %(function)s' % frame)
+            else:
+                result.append('  File "%(filename)s", line %(lineno)s' % frame)
+            if 'context_line' in frame:
+                result.append('    %s' % frame['context_line'].strip())
             result.append('')
 
         return '\n'.join(result)
diff --git a/sentry/templates/sentry/partial/interfaces/stacktrace.html b/sentry/templates/sentry/partial/interfaces/stacktrace.html
index 43843898ae..bda058b8a8 100644
--- a/sentry/templates/sentry/partial/interfaces/stacktrace.html
+++ b/sentry/templates/sentry/partial/interfaces/stacktrace.html
@@ -9,7 +9,11 @@
         <ul class="traceback">
             {% for frame in frames %}
                 <li class="frame">
-                    <p><code>{{ frame.filename }}</code> in <code>{{ frame.function }}</code></p>
+                    <p>
+                        <code>{{ frame.filename }}</code>
+                        {% if frame.function %} in <code>{{ frame.function }}</code>{% endif %}
+                        {% if not frame.context %} at line <code>{{ frame.lineno }}</code>{% endif %}
+                    </p>
 
                     {% if frame.context %}
                         <ol start="{{ frame.start_lineno }}" class="context expandable" id="c{{ forloop.counter0 }}">
