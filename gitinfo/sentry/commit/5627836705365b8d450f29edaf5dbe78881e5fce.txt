commit 5627836705365b8d450f29edaf5dbe78881e5fce
Author: Chris Fuller <cfuller@sentry.io>
Date:   Thu Apr 23 10:33:27 2020 -0400

    fix(workflow): Remove tracked superuser views (#18367)

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index 6fcb1e3db7..48db8926bb 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0068_project_default_flags
+sentry: 0069_remove_tracked_superusers
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/migrations/0069_remove_tracked_superusers.py b/src/sentry/migrations/0069_remove_tracked_superusers.py
new file mode 100644
index 0000000000..e206496f01
--- /dev/null
+++ b/src/sentry/migrations/0069_remove_tracked_superusers.py
@@ -0,0 +1,48 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.29 on 2020-04-20 20:03
+from __future__ import unicode_literals
+
+from django.db import migrations
+
+def remove_tracked_superuser_views(apps, schema_editor):
+    """
+    We recently added code to only track alert views of people in the org + member of associated alert projects.
+    This migration removes all of the views we've tracked before adding this change (i.e. superuser views of orgs we're not a part of).
+    """
+    IncidentSeen = apps.get_model("sentry", "IncidentSeen")
+    IncidentProject = apps.get_model("sentry", "IncidentProject")
+    tracked_views = IncidentSeen.objects.all().select_related("user", "incident")
+    for tracked_view in tracked_views:
+        tracked_user = tracked_view.user
+        tracked_incident = tracked_view.incident
+        is_org_member = tracked_incident.organization.has_access(tracked_user)
+        if not is_org_member:
+            tracked_view.delete()
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = False
+
+
+    dependencies = [
+        ('sentry', '0068_project_default_flags'),
+    ]
+
+    operations = [
+        migrations.RunPython(remove_tracked_superuser_views, reverse_code=migrations.RunPython.noop),
+    ]
