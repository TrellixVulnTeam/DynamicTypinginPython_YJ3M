commit 1b602b312a6eecbfbac80edc009f5c4d4f94ff50
Author: Jan Michael Auer <account@jauer.org>
Date:   Wed Apr 3 18:03:35 2019 +0200

    ref(symbolicator): Updates for newer symbolicator (#12628)
    
    Ensures that stacktraces have a stable order to be able to retry symbolication requests and handles a previously unhandled debug file status.

diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index c69bc0e02a..21ff8f39ea 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -265,6 +265,8 @@ class NativeStacktraceProcessor(StacktraceProcessor):
                 error = SymbolicationFailed(type=EventError.NATIVE_BAD_DSYM)
             elif status == 'too_large':
                 error = SymbolicationFailed(type=EventError.FETCH_TOO_LARGE)
+            elif status == 'fetching_failed':
+                error = SymbolicationFailed(type=EventError.FETCH_GENERIC_ERROR)
             elif status == 'other':
                 error = SymbolicationFailed(type=EventError.UNKNOWN_ERROR)
             else:
diff --git a/src/sentry/stacktraces.py b/src/sentry/stacktraces.py
index 83630b7d64..b3ff6104b5 100644
--- a/src/sentry/stacktraces.py
+++ b/src/sentry/stacktraces.py
@@ -5,7 +5,7 @@ import logging
 from datetime import datetime
 from django.utils import timezone
 
-from collections import namedtuple
+from collections import namedtuple, OrderedDict
 
 from sentry.models import Project, Release
 from sentry.utils.cache import cache
@@ -33,7 +33,11 @@ class ProcessableFrame(object):
         self.processable_frames = processable_frames
 
     def __repr__(self):
-        return '<ProcessableFrame %r #%r>' % (self.frame.get('function') or 'unknown', self.idx, )
+        return '<ProcessableFrame %r #%r at %r>' % (
+            self.frame.get('function') or 'unknown',
+            self.idx,
+            self.frame.get('instruction_addr'),
+        )
 
     def __contains__(self, key):
         return key in self.frame
@@ -319,9 +323,13 @@ def get_stacktrace_processing_task(infos, processors):
     processors that seem to not handle any frames.
     """
     by_processor = {}
-    by_stacktrace_info = {}
     to_lookup = {}
 
+    # by_stacktrace_info requires stable sorting as it is used in
+    # StacktraceProcessingTask.iter_processable_stacktraces. This is important
+    # to guarantee reproducible symbolicator requests.
+    by_stacktrace_info = OrderedDict()
+
     for info in infos:
         processable_frames = get_processable_frames(info, processors)
         for processable_frame in processable_frames:
