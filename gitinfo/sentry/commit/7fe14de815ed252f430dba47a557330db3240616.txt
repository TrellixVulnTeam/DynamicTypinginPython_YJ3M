commit 7fe14de815ed252f430dba47a557330db3240616
Author: evanh <evanh@users.noreply.github.com>
Date:   Thu Apr 30 16:24:46 2020 -0400

    fix(discover) Handle extra spaces in terms (#18509)
    
    If a user had random empty spaces it would cause the parser to break the query
    up into bizarre chunks. Correctly strip out extra empty spaces.

diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index 4acdb73666..3dde0825c3 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -96,12 +96,12 @@ event_search_grammar = Grammar(
     r"""
 search               = (boolean_term / paren_term / search_term)*
 boolean_term         = (paren_term / search_term) space? (boolean_operator space? (paren_term / search_term) space?)+
-paren_term           = space? open_paren space? (paren_term / boolean_term)+ space? closed_paren space?
+paren_term           = spaces open_paren space? (paren_term / boolean_term)+ space? closed_paren spaces
 search_term          = key_val_term / quoted_raw_search / raw_search
-key_val_term         = space? (tag_filter / time_filter / rel_time_filter / specific_time_filter / duration_filter
+key_val_term         = spaces (tag_filter / time_filter / rel_time_filter / specific_time_filter / duration_filter
                        / numeric_filter / aggregate_filter / aggregate_date_filter / has_filter
                        / is_filter / quoted_basic_filter / basic_filter)
-                       space?
+                       spaces
 raw_search           = (!key_val_term ~r"\ *([^\ ^\n ()]+)\ *" )*
 quoted_raw_search    = spaces quoted_value spaces
 
@@ -310,7 +310,7 @@ class SearchVisitor(NodeVisitor):
 
     def remove_space(self, children):
         def is_not_space(child):
-            return not (isinstance(child, Node) and child.text == " ")
+            return not (isinstance(child, Node) and child.text == " " * len(child.text))
 
         return filter(is_not_space, children)
 
@@ -370,7 +370,6 @@ class SearchVisitor(NodeVisitor):
         children = self.flatten(children)
         children = self.remove_optional_nodes(children)
         children = self.remove_space(children)
-
         return self.flatten(children[1])
 
     def visit_numeric_filter(self, node, children):
@@ -568,7 +567,12 @@ class SearchVisitor(NodeVisitor):
         children = self.flatten(children)
         children = self.remove_optional_nodes(children)
         children = self.remove_space(children)
-        (function_name, open_paren, args, close_paren) = children
+        if len(children) == 3:
+            (function_name, open_paren, close_paren) = children
+            args = ""
+        else:
+            (function_name, open_paren, args, close_paren) = children
+
         if isinstance(args, Node):
             args = ""
         elif isinstance(args, list):
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index 7d0dcc49db..75cb319cab 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -168,6 +168,22 @@ class ParseSearchQueryTest(unittest.TestCase):
             )
         ]
 
+    def test_empty_spaces_stripped_correctly(self):
+        assert parse_search_query(
+            "event.type:transaction   transaction:/organizations/:orgId/discover/results/"
+        ) == [
+            SearchFilter(
+                key=SearchKey(name="event.type"),
+                operator="=",
+                value=SearchValue(raw_value="transaction"),
+            ),
+            SearchFilter(
+                key=SearchKey(name="transaction"),
+                operator="=",
+                value=SearchValue(raw_value="/organizations/:orgId/discover/results/"),
+            ),
+        ]
+
     def test_timestamp(self):
         # test date format
         assert parse_search_query("timestamp>2015-05-18") == [
