commit 058c0b64ff00e06ad446928b8385ba64a8302556
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Feb 26 17:38:19 2016 +0100

    Added missing stored procedure back that was lost in a merge

diff --git a/src/sentry/migrations/0239_auto__add_counter__add_unique_counter_project_ident__add_field_group_s.py b/src/sentry/migrations/0239_auto__add_counter__add_unique_counter_project_ident__add_field_group_s.py
index c10e60c4d5..5492a8627c 100644
--- a/src/sentry/migrations/0239_auto__add_counter__add_unique_counter_project_ident__add_field_group_s.py
+++ b/src/sentry/migrations/0239_auto__add_counter__add_unique_counter_project_ident__add_field_group_s.py
@@ -3,6 +3,7 @@ from south.utils import datetime_utils as datetime
 from south.db import db
 from south.v2 import SchemaMigration
 from django.db import models
+from django.conf import settings
 
 
 class Migration(SchemaMigration):
@@ -36,6 +37,31 @@ class Migration(SchemaMigration):
         # Adding unique constraint on 'Project', fields ['organization', 'callsign']
         db.create_unique('sentry_project', ['organization_id', 'callsign'])
 
+        if 'postgres' in settings.DATABASES['default']['ENGINE']:
+            db.execute('''
+                create function sentry_increment_project_counter(
+                    project bigint, counter text, delta int) returns int as $$
+                declare
+                  new_val int;
+                begin
+                  loop
+                    update sentry_projectcounter set value = value + delta
+                     where project_id = project
+                       and ident = counter returning value into new_val;
+                    if found then
+                      return new_val;
+                    end if;
+                    begin
+                      insert into sentry_projectcounter(project_id, ident, value)
+                           values (project, counter, delta)
+                        returning value into new_val;
+                      return new_val;
+                    exception when unique_violation then
+                    end;
+                  end loop;
+                end
+                $$ language plpgsql;
+            ''')
 
     def backwards(self, orm):
         # Removing unique constraint on 'Project', fields ['organization', 'callsign']
@@ -564,4 +590,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['sentry']
\ No newline at end of file
+    complete_apps = ['sentry']
