commit bd2f2539e1b3b94829e71170f60b730dda774782
Author: Ted Kaemming <ted@kaemming.com>
Date:   Fri Dec 4 15:14:53 2015 -0800

    Soft break and hyphenate culprits in digest emails.
    
    Resolves GH-2395.

diff --git a/src/sentry/templates/sentry/emails/digests/body.html b/src/sentry/templates/sentry/emails/digests/body.html
index d57646ec60..6c23967098 100644
--- a/src/sentry/templates/sentry/emails/digests/body.html
+++ b/src/sentry/templates/sentry/emails/digests/body.html
@@ -33,7 +33,7 @@
                       {% url 'sentry-group' group.organization.slug group.project.slug group.id as group_link %}
                       <a href="{% absolute_uri group_link %}">{{ group.message_short }}</a>
                       <p>
-                        {{ group.title }}
+                        {{ group.title|soft_break:50 }}
                         <small>&mdash; {{ records.0.datetime|date:"N j, Y, P e" }}</small>
                       </p>
                   </td>
diff --git a/src/sentry/templatetags/sentry_helpers.py b/src/sentry/templatetags/sentry_helpers.py
index c9bd8bbbe1..ab2c46db6e 100644
--- a/src/sentry/templatetags/sentry_helpers.py
+++ b/src/sentry/templatetags/sentry_helpers.py
@@ -38,7 +38,10 @@ from sentry.models import Organization
 from sentry.utils import json, to_unicode
 from sentry.utils.avatar import get_gravatar_url
 from sentry.utils.javascript import to_json
-from sentry.utils.strings import truncatechars
+from sentry.utils.strings import (
+    soft_break,
+    truncatechars,
+)
 from templatetag_sugar.register import tag
 from templatetag_sugar.parser import Name, Variable, Constant, Optional
 
@@ -52,6 +55,7 @@ register = template.Library()
 truncatechars = register.filter(stringfilter(truncatechars))
 truncatechars.is_safe = True
 
+register.filter(soft_break)
 register.filter(to_json)
 
 
diff --git a/src/sentry/utils/strings.py b/src/sentry/utils/strings.py
index d113937311..27b2ad0b87 100644
--- a/src/sentry/utils/strings.py
+++ b/src/sentry/utils/strings.py
@@ -8,6 +8,7 @@ sentry.utils.strings
 from __future__ import absolute_import
 
 import base64
+import re
 import zlib
 
 from django.utils.encoding import smart_unicode
@@ -44,3 +45,33 @@ def strip(value):
     if not value:
         return ''
     return smart_unicode(value).strip()
+
+
+def soft_hyphenate(value, length, hyphen=u'\u00ad'):
+    return hyphen.join([value[i:(i + length)] for i in xrange(0, len(value), length)])
+
+
+def soft_break(value, length):
+    """
+    Encourages soft breaking of text values above a maximum length by adding
+    zero-width spaces after common delimeters, as well as soft-hyphenating long
+    identifiers.
+    """
+    delimiters = re.compile(r'([{}]+)'.format(''.join(map(re.escape, ',.$:/+?()<>[]{}'))))
+
+    def process(match):
+        results = []
+
+        value = match.group(0)
+        chunks = delimiters.split(value)
+        for i, chunk in enumerate(chunks):
+            if i % 2 == 1:  # check if this is this a delimiter
+                results.extend([chunk, u'\u200b'])
+            else:
+                # TODO: This could be more intelligent -- this could be a
+                # little weird if it soft hyphenated a number, for instance?
+                results.append(soft_hyphenate(chunk, length))
+
+        return u''.join(results).rstrip(u'\u200b')
+
+    return re.sub(r'\S{{{},}}'.format(length), process, value)
diff --git a/tests/sentry/utils/test_strings.py b/tests/sentry/utils/test_strings.py
new file mode 100644
index 0000000000..8b06d5dc53
--- /dev/null
+++ b/tests/sentry/utils/test_strings.py
@@ -0,0 +1,15 @@
+from sentry.utils.strings import soft_break
+
+
+ZWSP = u'\u200b'  # zero width space
+SHY = u'\u00ad'  # soft hyphen
+
+
+def test_soft_break():
+    assert soft_break('com.example.package.method(argument).anotherMethod(argument)', 15) == \
+        ZWSP.join(['com.', 'example.', 'package.', 'method(', 'argument).', 'anotherMethod(', 'argument)'])
+
+
+def test_soft_break_and_hyphenate():
+    assert soft_break('com.reallyreallyreally.long.path', 6) == \
+        ZWSP.join(['com.', SHY.join(['really'] * 3) + '.', 'long.', 'path'])
