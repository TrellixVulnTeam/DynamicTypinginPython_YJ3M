commit 64fd76aea40da33c35d473d7a775ac00c9c3c6d8
Author: Ben Vinegar <ben@benv.ca>
Date:   Tue Mar 8 15:59:27 2016 -0800

    Sort project selector by bookmarks

diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index 707df91eaa..3c029a1a7b 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -7,6 +7,7 @@ import ConfigStore from '../../stores/configStore';
 import ProjectLabel from '../../components/projectLabel';
 import DropdownLink from '../dropdownLink';
 import MenuItem from '../menuItem';
+import {sortArray} from '../../utils';
 import {t} from '../../locale';
 
 const ProjectSelector = React.createClass({
@@ -183,11 +184,11 @@ const ProjectSelector = React.createClass({
   render() {
     let org = this.props.organization;
     let filter = this.state.filter.toLowerCase();
-    let children = [];
     let activeTeam;
     let activeProject;
     let hasSingleTeam = org.teams.length === 1;
 
+    let projectList = [];
     org.teams.forEach((team) => {
       if (!team.isMember) {
         return;
@@ -201,10 +202,18 @@ const ProjectSelector = React.createClass({
         if (filter && fullName.indexOf(filter) === -1) {
           return;
         }
-        children.push(this.getProjectNode(team, project, this.state.filter, hasSingleTeam));
+        projectList.push([team, project]);
       });
     });
 
+    projectList = sortArray(projectList, ([team, project]) => {
+      return [!project.isBookmarked, team.name, project.name];
+    });
+
+    let children = projectList.map(([team, project]) => {
+      return this.getProjectNode(team, project, this.state.filter, hasSingleTeam);
+    });
+
     return (
       <div className="project-select" ref="container">
         {activeProject ?
