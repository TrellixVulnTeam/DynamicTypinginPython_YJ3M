commit 90a92e38bf5c8502a3b430d0c111b01d4695364c
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Jun 4 10:32:53 2019 -0700

    ref(ui): Remove most sentry10 feature gates (#13504)
    
    This removes the sentry10 feature gates that controls logic around what URL to link to and feature gates that do not involve cleaning up deprecated components that need to be cleaned up.

diff --git a/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx b/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
index 275a4b7c8b..ce96fc8c9d 100644
--- a/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
+++ b/src/sentry/static/sentry/app/components/charts/releaseSeries.jsx
@@ -104,11 +104,9 @@ class ReleaseSeries extends React.Component {
           name: release.shortVersion,
           value: release.shortVersion,
           onClick: () => {
-            if (organization.features.includes('sentry10')) {
-              router.push(
-                `/organizations/${organization.slug}/releases/${release.version}/`
-              );
-            }
+            router.push(
+              `/organizations/${organization.slug}/releases/${release.version}/`
+            );
           },
           label: {
             formatter: () => release.shortVersion,
diff --git a/src/sentry/static/sentry/app/components/compactIssue.jsx b/src/sentry/static/sentry/app/components/compactIssue.jsx
index 57685daaf8..560f69b181 100644
--- a/src/sentry/static/sentry/app/components/compactIssue.jsx
+++ b/src/sentry/static/sentry/app/components/compactIssue.jsx
@@ -11,7 +11,6 @@ import SnoozeAction from 'app/components/issues/snoozeAction';
 import GroupChart from 'app/components/stream/groupChart';
 import GroupStore from 'app/stores/groupStore';
 import Link from 'app/components/links/link';
-import ProjectLink from 'app/components/projectLink';
 import {t} from 'app/locale';
 import {PanelItem} from 'app/components/panels';
 import SentryTypes from 'app/sentryTypes';
@@ -68,13 +67,9 @@ class CompactIssueHeader extends React.Component {
   render() {
     const {data, organization, projectId, eventId} = this.props;
 
-    const hasNewRoutes = new Set(organization.features).has('sentry10');
-
     let styles = {};
 
-    const basePath = hasNewRoutes
-      ? `/organizations/${organization.slug}/issues/`
-      : `/${organization.slug}/${projectId}/issues/`;
+    const basePath = `/organizations/${organization.slug}/issues/`;
 
     const issueLink = eventId
       ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`
@@ -100,13 +95,7 @@ class CompactIssueHeader extends React.Component {
         </Flex>
         <div className="event-extra">
           <span className="project-name">
-            {hasNewRoutes ? (
-              <strong>{data.project.slug}</strong>
-            ) : (
-              <ProjectLink to={`/${organization.slug}/${projectId}/`}>
-                {data.project.slug}
-              </ProjectLink>
-            )}
+            <strong>{data.project.slug}</strong>
           </span>
           {data.numComments !== 0 && (
             <span>
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.jsx b/src/sentry/static/sentry/app/components/events/eventTags.jsx
index 625e5b819d..ea936c3eca 100644
--- a/src/sentry/static/sentry/app/components/events/eventTags.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventTags.jsx
@@ -16,8 +16,6 @@ import InlineSvg from 'app/components/inlineSvg';
 
 class EventTags extends React.Component {
   static propTypes = {
-    // organization is not provided in the shared issue view
-    organization: SentryTypes.Organization,
     group: SentryTypes.Group.isRequired,
     event: SentryTypes.Event.isRequired,
     orgId: PropTypes.string.isRequired,
@@ -31,19 +29,11 @@ class EventTags extends React.Component {
       return null;
     }
 
-    const {event, group, organization, orgId, projectId} = this.props;
+    const {event, group, orgId, projectId} = this.props;
 
-    // Just use the sentry 10 paths if we are in a shared view since we
-    // don't have the organization object to check the feature list
-    const hasSentry10 = !organization || new Set(organization.features).has('sentry10');
+    const streamPath = `/organizations/${orgId}/issues/`;
 
-    const streamPath = hasSentry10
-      ? `/organizations/${orgId}/issues/`
-      : `/${orgId}/${projectId}/`;
-
-    const releasesPath = hasSentry10
-      ? `/organizations/${orgId}/releases/`
-      : `/${orgId}/${projectId}/releases/`;
+    const releasesPath = `/organizations/${orgId}/releases/`;
 
     return (
       <EventDataSection
@@ -62,7 +52,7 @@ class EventTags extends React.Component {
                     pathname: streamPath,
                     query: {
                       query: `${tag.key}:"${tag.value}"`,
-                      ...(hasSentry10 && {project: group.project.id}),
+                      project: group.project.id,
                     },
                   }}
                 >
@@ -84,7 +74,7 @@ class EventTags extends React.Component {
                       to={{
                         pathname: `${releasesPath}${tag.value}/`,
                         query: {
-                          ...(hasSentry10 && {project: group.project.id}),
+                          project: group.project.id,
                         },
                       }}
                     >
diff --git a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
index 11e1a7374c..5ac5ec60e5 100644
--- a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
+++ b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
@@ -12,7 +12,6 @@ import AttachmentUrl from 'app/utils/attachmentUrl';
 
 class EventsTableRow extends React.Component {
   static propTypes = {
-    organization: SentryTypes.Organization.isRequired,
     hasUser: PropTypes.bool,
     orgId: PropTypes.string.isRequired,
     groupId: PropTypes.string.isRequired,
@@ -63,24 +62,13 @@ class EventsTableRow extends React.Component {
   }
 
   render() {
-    const {
-      organization,
-      className,
-      event,
-      orgId,
-      projectId,
-      groupId,
-      tagList,
-      hasUser,
-    } = this.props;
+    const {className, event, orgId, groupId, tagList, hasUser} = this.props;
     const tagMap = {};
     event.tags.forEach(tag => {
       tagMap[tag.key] = tag.value;
     });
 
-    const basePath = new Set(organization.features).has('sentry10')
-      ? `/organizations/${orgId}/issues/`
-      : `/${orgId}/${projectId}/issues/`;
+    const basePath = `/organizations/${orgId}/issues/`;
 
     return (
       <tr key={event.id} className={className}>
diff --git a/src/sentry/static/sentry/app/components/group/releaseStats.jsx b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
index c60ed8a8c0..371364b451 100644
--- a/src/sentry/static/sentry/app/components/group/releaseStats.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
@@ -33,16 +33,9 @@ const GroupReleaseStats = createReactClass({
 
   getInitialState() {
     const envList = OrganizationEnvironmentsStore.getActive();
-
-    let environments = [];
-    if (this.hasSentry10()) {
-      environments = envList.filter(env =>
-        GlobalSelectionStore.get().environments.includes(env.name)
-      );
-    } else {
-      const latestContextEnv = LatestContextStore.getInitialState().environment;
-      environments = latestContextEnv ? [latestContextEnv] : [];
-    }
+    const environments = envList.filter(env =>
+      GlobalSelectionStore.get().environments.includes(env.name)
+    );
 
     return {
       envList,
@@ -50,10 +43,6 @@ const GroupReleaseStats = createReactClass({
     };
   },
 
-  hasSentry10() {
-    return this.getFeatures().has('sentry10');
-  },
-
   onLatestContextChange(context) {
     this.setState({environments: context.environment ? [context.environment] : []});
   },
diff --git a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
index c1520c9d74..fbca1871e9 100644
--- a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
+++ b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
@@ -17,7 +17,6 @@ const GroupTagDistributionMeter = createReactClass({
     tag: PropTypes.string.isRequired,
     name: PropTypes.string,
     organization: SentryTypes.Organization.isRequired,
-    projectId: PropTypes.string.isRequired,
     environment: SentryTypes.Environment,
     totalValues: PropTypes.number,
     topValues: PropTypes.array,
@@ -75,14 +74,10 @@ const GroupTagDistributionMeter = createReactClass({
   },
 
   render() {
-    const {organization, projectId, group, tag, totalValues, topValues} = this.props;
+    const {organization, group, tag, totalValues, topValues} = this.props;
     const {loading, error} = this.state;
 
-    const hasSentry10 = new Set(organization.features).has('sentry10');
-
-    const url = hasSentry10
-      ? `/organizations/${organization.slug}/issues/${group.id}/tags/${tag}/`
-      : `/${organization.slug}/${projectId}/issues/${group.id}/tags/${tag}/`;
+    const url = `/organizations/${organization.slug}/issues/${group.id}/tags/${tag}/`;
 
     let segments = [];
 
diff --git a/src/sentry/static/sentry/app/components/issueLink.jsx b/src/sentry/static/sentry/app/components/issueLink.jsx
index e24412896a..4ba85c193a 100644
--- a/src/sentry/static/sentry/app/components/issueLink.jsx
+++ b/src/sentry/static/sentry/app/components/issueLink.jsx
@@ -3,7 +3,6 @@ import React from 'react';
 import classNames from 'classnames';
 import {Link} from 'react-router';
 
-import SentryTypes from 'app/sentryTypes';
 import Hovercard from 'app/components/hovercard';
 import Count from 'app/components/count';
 import EventOrGroupTitle from 'app/components/eventOrGroupTitle';
@@ -12,9 +11,7 @@ import {t} from 'app/locale';
 
 export default class IssueLink extends React.Component {
   static propTypes = {
-    organization: SentryTypes.Organization.isRequired,
     orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
     issue: PropTypes.object.isRequired,
     to: PropTypes.string.isRequired,
     card: PropTypes.bool,
@@ -37,7 +34,7 @@ export default class IssueLink extends React.Component {
   }
 
   renderBody() {
-    const {organization, issue, orgId, projectId} = this.props;
+    const {issue, orgId} = this.props;
     const message = this.getMessage(issue);
 
     const className = classNames(`type-${issue.type}`, `level-${issue.level}`, {
@@ -46,9 +43,7 @@ export default class IssueLink extends React.Component {
       isResolved: issue.status === 'resolved',
     });
 
-    const streamPath = new Set(organization.features).has('sentry10')
-      ? `/organizations/${orgId}/issues/`
-      : `/${orgId}/${projectId}/`;
+    const streamPath = `/organizations/${orgId}/issues/`;
 
     return (
       <div className={className}>
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index cee310e41d..08b2dcf63c 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -263,21 +263,19 @@ class Sidebar extends React.Component {
                         : `/${organization.slug}/`
                     }
                   />
-                  <Feature features={['sentry10']} organization={organization}>
-                    <SidebarItem
-                      {...sidebarItemProps}
-                      onClick={(_id, evt) =>
-                        this.navigateWithGlobalSelection(
-                          `/organizations/${organization.slug}/issues/`,
-                          evt
-                        )
-                      }
-                      icon={<InlineSvg src="icon-issues" />}
-                      label={t('Issues')}
-                      to={`/organizations/${organization.slug}/issues/`}
-                      id="issues"
-                    />
-                  </Feature>
+                  <SidebarItem
+                    {...sidebarItemProps}
+                    onClick={(_id, evt) =>
+                      this.navigateWithGlobalSelection(
+                        `/organizations/${organization.slug}/issues/`,
+                        evt
+                      )
+                    }
+                    icon={<InlineSvg src="icon-issues" />}
+                    label={t('Issues')}
+                    to={`/organizations/${organization.slug}/issues/`}
+                    id="issues"
+                  />
 
                   <Feature
                     features={['events', 'events-v2']}
@@ -316,56 +314,36 @@ class Sidebar extends React.Component {
                     />
                   </Feature>
 
-                  {hasSentry10 && (
-                    <React.Fragment>
-                      <SidebarItem
-                        {...sidebarItemProps}
-                        onClick={(_id, evt) =>
-                          this.navigateWithGlobalSelection(
-                            `/organizations/${organization.slug}/releases/`,
-                            evt
-                          )
-                        }
-                        icon={<InlineSvg src="icon-releases" />}
-                        label={t('Releases')}
-                        to={`/organizations/${organization.slug}/releases/`}
-                        id="releases"
-                      />
-                      <SidebarItem
-                        {...sidebarItemProps}
-                        onClick={(_id, evt) =>
-                          this.navigateWithGlobalSelection(
-                            `/organizations/${organization.slug}/user-feedback/`,
-                            evt
-                          )
-                        }
-                        icon={<InlineSvg src="icon-support" />}
-                        label={t('User Feedback')}
-                        to={`/organizations/${organization.slug}/user-feedback/`}
-                        id="user-feedback"
-                      />
-                    </React.Fragment>
-                  )}
-
-                  {!hasSentry10 && (
-                    <Feature features={['discover']} organization={organization}>
-                      <SidebarItem
-                        {...sidebarItemProps}
-                        onClick={this.hidePanel}
-                        icon={<InlineSvg src="icon-discover" />}
-                        label={t('Discover')}
-                        to={`/organizations/${organization.slug}/discover/`}
-                        id="discover"
-                      />
-                    </Feature>
-                  )}
+                  <SidebarItem
+                    {...sidebarItemProps}
+                    onClick={(_id, evt) =>
+                      this.navigateWithGlobalSelection(
+                        `/organizations/${organization.slug}/releases/`,
+                        evt
+                      )
+                    }
+                    icon={<InlineSvg src="icon-releases" />}
+                    label={t('Releases')}
+                    to={`/organizations/${organization.slug}/releases/`}
+                    id="releases"
+                  />
+                  <SidebarItem
+                    {...sidebarItemProps}
+                    onClick={(_id, evt) =>
+                      this.navigateWithGlobalSelection(
+                        `/organizations/${organization.slug}/user-feedback/`,
+                        evt
+                      )
+                    }
+                    icon={<InlineSvg src="icon-support" />}
+                    label={t('User Feedback')}
+                    to={`/organizations/${organization.slug}/user-feedback/`}
+                    id="user-feedback"
+                  />
                 </SidebarSection>
 
                 <SidebarSection>
-                  <Feature
-                    features={['sentry10', 'discover']}
-                    organization={organization}
-                  >
+                  <Feature features={['discover']} organization={organization}>
                     <SidebarItem
                       {...sidebarItemProps}
                       index
@@ -377,7 +355,7 @@ class Sidebar extends React.Component {
                     />
                   </Feature>
                   <Feature
-                    features={['sentry10', 'discover']}
+                    features={['discover']}
                     hookName="discover-sidebar-item"
                     organization={organization}
                   >
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx
index d6857bd531..4d6843b53a 100644
--- a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx
@@ -60,9 +60,7 @@ class SwitchOrganization extends React.Component {
                 >
                   <OrganizationList>
                     {organizations.map(organization => {
-                      const url = new Set(organization.features).has('sentry10')
-                        ? `/organizations/${organization.slug}/`
-                        : `/${organization.slug}/`;
+                      const url = `/organizations/${organization.slug}/`;
 
                       return (
                         <SidebarMenuItem key={organization.slug} to={url}>
diff --git a/src/sentry/static/sentry/app/components/version.jsx b/src/sentry/static/sentry/app/components/version.jsx
index 11395459df..e15c06f834 100644
--- a/src/sentry/static/sentry/app/components/version.jsx
+++ b/src/sentry/static/sentry/app/components/version.jsx
@@ -1,19 +1,15 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import SentryTypes from 'app/sentryTypes';
-import ProjectLink from 'app/components/projectLink';
 import Link from 'app/components/links/link';
 import {getShortVersion} from 'app/utils';
 import withOrganization from 'app/utils/withOrganization';
 
 class Version extends React.Component {
   static propTypes = {
-    organization: SentryTypes.Organization.isRequired,
     anchor: PropTypes.bool,
     version: PropTypes.string.isRequired,
     orgId: PropTypes.string,
-    projectId: PropTypes.string,
     showShortVersion: PropTypes.bool,
   };
 
@@ -23,33 +19,10 @@ class Version extends React.Component {
   };
 
   render() {
-    const {
-      organization,
-      orgId,
-      projectId,
-      showShortVersion,
-      version,
-      anchor,
-      className,
-    } = this.props;
+    const {orgId, showShortVersion, version, anchor, className} = this.props;
     const versionTitle = showShortVersion ? getShortVersion(version) : version;
 
-    const hasSentry10 = new Set(organization.features).has('sentry10');
-
     if (anchor) {
-      if (projectId && !hasSentry10) {
-        return (
-          // NOTE: version is encoded because it can contain slashes "/",
-          //       which can interfere with URL construction
-          <ProjectLink
-            to={`/${orgId}/${projectId}/releases/${encodeURIComponent(version)}/`}
-            className={className}
-          >
-            <span title={version}>{versionTitle}</span>
-          </ProjectLink>
-        );
-      }
-
       if (orgId) {
         return (
           <Link
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/eventToolbar.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/eventToolbar.jsx
index 7446993935..6f4612474b 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/eventToolbar.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/eventToolbar.jsx
@@ -38,9 +38,7 @@ const GroupEventToolbar = createReactClass({
   displayName: 'GroupEventToolbar',
 
   propTypes: {
-    organization: SentryTypes.Organization.isRequired,
     orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
     group: SentryTypes.Group.isRequired,
     event: SentryTypes.Event.isRequired,
     location: PropTypes.object.isRequired,
@@ -85,13 +83,10 @@ const GroupEventToolbar = createReactClass({
   render() {
     const evt = this.props.event;
 
-    const {organization, orgId, projectId, location} = this.props;
+    const {orgId, location} = this.props;
     const groupId = this.props.group.id;
 
-    const hasSentry10 = new Set(organization.features).has('sentry10');
-    const baseEventsPath = hasSentry10
-      ? `/organizations/${orgId}/issues/${groupId}/events/`
-      : `/${orgId}/${projectId}/issues/${groupId}/events/`;
+    const baseEventsPath = `/organizations/${orgId}/issues/${groupId}/events/`;
 
     const eventNavNodes = [
       evt.previousEventID ? (
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivityItem.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivityItem.jsx
index 2dceab449e..3fcd0144b6 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivityItem.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivityItem.jsx
@@ -6,13 +6,11 @@ import CommitLink from 'app/components/commitLink';
 import Duration from 'app/components/duration';
 import MemberListStore from 'app/stores/memberListStore';
 import PullRequestLink from 'app/components/pullRequestLink';
-import SentryTypes from 'app/sentryTypes';
 import TeamStore from 'app/stores/teamStore';
 import Version from 'app/components/version';
 
 class GroupActivityItem extends React.Component {
   static propTypes = {
-    organization: SentryTypes.Organization.isRequired,
     author: PropTypes.node,
     item: PropTypes.object,
     orgId: PropTypes.string,
@@ -20,14 +18,10 @@ class GroupActivityItem extends React.Component {
   };
 
   render() {
-    const {organization, author, item, orgId, projectId} = this.props;
+    const {author, item, orgId, projectId} = this.props;
     const {data} = item;
 
-    const hasSentry10 = new Set(organization.features).has('sentry10');
-
-    const issuesLink = hasSentry10
-      ? `/organizations/${orgId}/issues/`
-      : `/${orgId}/${projectId}/issues/`;
+    const issuesLink = `/organizations/${orgId}/issues/`;
 
     switch (item.type) {
       case 'note':
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
index db40a80d4c..23c9a5e202 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
@@ -10,7 +10,6 @@ import createReactClass from 'create-react-class';
 import {PageContent} from 'app/styles/organization';
 import {t} from 'app/locale';
 import withApi from 'app/utils/withApi';
-import Feature from 'app/components/acl/feature';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import GroupStore from 'app/stores/groupStore';
 import LoadingError from 'app/components/loadingError';
@@ -248,29 +247,22 @@ const GroupDetails = createReactClass({
     const isLoading = loading || !group;
 
     return (
-      <Feature features={['sentry10']}>
-        {({hasFeature: hasSentry10}) => {
-          const shouldShowGlobalHeader = hasSentry10 && showGlobalHeader;
-          return (
-            <React.Fragment>
-              {shouldShowGlobalHeader && (
-                <GlobalSelectionHeader
-                  organization={organization}
-                  forceProject={project}
-                  showDateSelector={false}
-                />
-              )}
-              {isLoading ? (
-                <PageContent>
-                  <LoadingIndicator />
-                </PageContent>
-              ) : (
-                this.renderContent(shouldShowGlobalHeader)
-              )}
-            </React.Fragment>
-          );
-        }}
-      </Feature>
+      <React.Fragment>
+        {showGlobalHeader && (
+          <GlobalSelectionHeader
+            organization={organization}
+            forceProject={project}
+            showDateSelector={false}
+          />
+        )}
+        {isLoading ? (
+          <PageContent>
+            <LoadingIndicator />
+          </PageContent>
+        ) : (
+          this.renderContent(showGlobalHeader)
+        )}
+      </React.Fragment>
     );
   },
 });
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
index 18594348e1..7db078e1df 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
@@ -22,7 +22,6 @@ const GroupTagValues = createReactClass({
 
   propTypes: {
     api: PropTypes.object,
-    organization: SentryTypes.Organization.isRequired,
     group: SentryTypes.Group.isRequired,
     query: PropTypes.object,
   },
@@ -101,9 +100,8 @@ const GroupTagValues = createReactClass({
     }
 
     const {
-      organization,
       group,
-      params: {orgId, projectId},
+      params: {orgId},
     } = this.props;
     const tagKey = this.state.tagKey;
 
@@ -112,9 +110,7 @@ const GroupTagValues = createReactClass({
       property('count')
     ).reverse();
 
-    const issuesPath = new Set(organization.features).has('sentry10')
-      ? `/organizations/${orgId}/issues/`
-      : `/${orgId}/${projectId}/`;
+    const issuesPath = `/organizations/${orgId}/issues/`;
 
     const children = sortedTagValueList.map((tagValue, tagValueIdx) => {
       const pct = percent(tagValue.count, tagKey.totalValues).toFixed(2);
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure.jsx b/src/sentry/static/sentry/app/views/onboarding/configure.jsx
index d36b2036e1..0a397e4e8a 100644
--- a/src/sentry/static/sentry/app/views/onboarding/configure.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/configure.jsx
@@ -55,14 +55,9 @@ class Configure extends React.Component {
   }
 
   redirectUrl() {
-    const {organization} = this.props;
-    const {orgId, projectId} = this.props.params;
-
-    const hasSentry10 = new Set(organization.features).has('sentry10');
+    const {orgId} = this.props.params;
 
-    const url = hasSentry10
-      ? `/organizations/${orgId}/issues/#welcome`
-      : `/${orgId}/${projectId}/#welcome`;
+    const url = `/organizations/${orgId}/issues/#welcome`;
     browserHistory.push(url);
   }
 
diff --git a/src/sentry/static/sentry/app/views/onboarding/createSampleEventButton.jsx b/src/sentry/static/sentry/app/views/onboarding/createSampleEventButton.jsx
index 5f15192017..f8be025694 100644
--- a/src/sentry/static/sentry/app/views/onboarding/createSampleEventButton.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/createSampleEventButton.jsx
@@ -42,7 +42,6 @@ class CreateSampleEventButton extends React.Component {
     // TODO(dena): swap out for action creator
     const {api, organization, project, source} = this.props;
     const url = `/projects/${organization.slug}/${project.slug}/create-sample/`;
-    const hasSentry10 = organization.features.includes('sentry10');
 
     analytics('sample_event.created', {
       org_id: parseInt(organization.id, 10),
@@ -54,9 +53,7 @@ class CreateSampleEventButton extends React.Component {
     try {
       const data = await api.requestPromise(url, {method: 'POST'});
 
-      const issueUrl = hasSentry10
-        ? `/organizations/${organization.slug}/issues/${data.groupID}/`
-        : `/${organization.slug}/${project.slug}/issues/${data.groupID}/`;
+      const issueUrl = `/organizations/${organization.slug}/issues/${data.groupID}/`;
       browserHistory.push(issueUrl);
     } catch (error) {
       Sentry.withScope(scope => {
diff --git a/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx b/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
index 9c0d20f6dc..d18518ec0f 100644
--- a/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
+++ b/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
@@ -52,21 +52,12 @@ class ActivityItem extends React.Component {
     }
   }
 
-  hasSentry10 = () => {
-    return new Set(this.props.organization.features).has('sentry10');
-  };
-
   formatProjectActivity = (author, item) => {
     const data = item.data;
     const orgId = this.props.organization.slug;
     const project = item.project;
     const issue = item.issue;
-
-    const hasSentry10 = this.hasSentry10();
-
-    const basePath = hasSentry10
-      ? `/organizations/${orgId}/issues/`
-      : `/${orgId}/${project.slug}/issues/`;
+    const basePath = `/organizations/${orgId}/issues/`;
 
     const issueLink = issue ? (
       <IssueLink
@@ -82,11 +73,7 @@ class ActivityItem extends React.Component {
 
     const versionLink = data.version ? (
       <VersionHoverCard orgId={orgId} projectId={project.slug} version={data.version}>
-        <Version
-          version={data.version}
-          orgId={orgId}
-          projectId={hasSentry10 ? null : project.slug}
-        />
+        <Version version={data.version} orgId={orgId} projectId={null} />
       </VersionHoverCard>
     ) : null;
 
@@ -315,7 +302,6 @@ class ActivityItem extends React.Component {
 
   render() {
     const item = this.props.item;
-    const orgId = this.props.organization.slug;
 
     let bubbleClassName = 'activity-item-bubble';
     if (this.state.clipped) {
@@ -335,15 +321,7 @@ class ActivityItem extends React.Component {
       avatar,
     };
 
-    const hasSentry10 = this.hasSentry10();
-
-    const projectLink = hasSentry10 ? (
-      <strong>{item.project.slug}</strong>
-    ) : (
-      <Link className="project" to={`/${orgId}/${item.project.slug}/`}>
-        {item.project.slug}
-      </Link>
-    );
+    const projectLink = <strong>{item.project.slug}</strong>;
 
     if (item.type === 'note') {
       const noteBody = marked(item.data.text);
diff --git a/src/sentry/static/sentry/app/views/organizationActivity/index.jsx b/src/sentry/static/sentry/app/views/organizationActivity/index.jsx
index fe0eac7be3..aaa696671f 100644
--- a/src/sentry/static/sentry/app/views/organizationActivity/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationActivity/index.jsx
@@ -4,7 +4,6 @@ import React from 'react';
 
 import {PageContent} from 'app/styles/organization';
 import {t} from 'app/locale';
-import OrganizationHomeContainer from 'app/components/organizations/homeContainer';
 import PageHeading from 'app/components/pageHeading';
 import SentryTypes from 'app/sentryTypes';
 import withOrganization from 'app/utils/withOrganization';
@@ -18,9 +17,8 @@ class OrganizationActivityContainer extends React.Component {
 
   render() {
     const {organization, params, location} = this.props;
-    const hasSentry10 = new Set(organization.features).has('sentry10');
 
-    return hasSentry10 ? (
+    return (
       <PageContent>
         <div className="organization-home">
           <OrganizationActivity
@@ -30,14 +28,6 @@ class OrganizationActivityContainer extends React.Component {
           />
         </div>
       </PageContent>
-    ) : (
-      <OrganizationHomeContainer>
-        <OrganizationActivity
-          organization={organization}
-          params={params}
-          location={location}
-        />
-      </OrganizationHomeContainer>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/organizationDashboardContainer.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/organizationDashboardContainer.jsx
index 2032cb63e2..9965a77338 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/organizationDashboardContainer.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/organizationDashboardContainer.jsx
@@ -19,7 +19,7 @@ class OrganizationDashboardContainer extends React.Component {
     const {organization, children} = this.props;
 
     return (
-      <Feature features={['sentry10', 'discover']} renderDisabled>
+      <Feature features={['discover']} renderDisabled>
         <GlobalSelectionHeader organization={organization} />
 
         <PageContent>
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
index 2619eb9d7f..0c1a31dd1e 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
@@ -86,18 +86,12 @@ class ResultTable extends React.Component {
     );
   };
 
-  hasSentry10 = () => {
-    return new Set(this.props.organization.features).has('sentry10');
-  };
-
   getEventLink = event => {
     const {slug, projects} = this.props.organization;
     const projectSlug = projects.find(project => project.id === `${event['project.id']}`)
       .slug;
 
-    const basePath = this.hasSentry10()
-      ? `/organizations/${slug}/projects/${projectSlug}/`
-      : `/${slug}/${projectSlug}/`;
+    const basePath = `/organizations/${slug}/projects/${projectSlug}/`;
 
     return (
       <Tooltip title={t('Open event')}>
@@ -109,13 +103,8 @@ class ResultTable extends React.Component {
   };
 
   getIssueLink = event => {
-    const {slug, projects} = this.props.organization;
-    const projectSlug = projects.find(project => project.id === `${event['project.id']}`)
-      .slug;
-
-    const basePath = this.hasSentry10()
-      ? `/organizations/${slug}/`
-      : `/${slug}/${projectSlug}/`;
+    const {slug} = this.props.organization;
+    const basePath = `/organizations/${slug}/`;
 
     return (
       <Tooltip title={t('Open issue')}>
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
index f5c92dddcb..9e379ad069 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
@@ -27,23 +27,9 @@ class EventsTableBody extends React.PureComponent {
     return events.map((event, eventIdx) => {
       const project = projectsMap.get(event.projectID);
       const trimmedMessage = event.title || event.message.split('\n')[0].substr(0, 100);
-
-      const hasSentry10 = new Set(organization.features).has('sentry10');
-
-      const eventLink = hasSentry10
-        ? `/organizations/${organization.slug}/projects/${project.slug}/events/${
-            event.eventID
-          }/`
-        : `/${organization.slug}/${project.slug}/events/${event.eventID}/`;
-
-      const idBadge = (
-        <IdBadge
-          project={project}
-          avatarSize={16}
-          displayName={<span>{project.slug}</span>}
-          avatarProps={{consistentWidth: true}}
-        />
-      );
+      const eventLink = `/organizations/${organization.slug}/projects/${
+        project.slug
+      }/events/${event.eventID}/`;
 
       return (
         <TableRow key={`${project.slug}-${event.eventID}`} first={eventIdx == 0}>
@@ -56,11 +42,12 @@ class EventsTableBody extends React.PureComponent {
           <TableData>{event['event.type']}</TableData>
 
           <TableData>
-            {hasSentry10 ? (
-              idBadge
-            ) : (
-              <Project to={`/${organization.slug}/${project.slug}/`}>{idBadge}</Project>
-            )}
+            <IdBadge
+              project={project}
+              avatarSize={16}
+              displayName={<span>{project.slug}</span>}
+              avatarProps={{consistentWidth: true}}
+            />
           </TableData>
 
           <TableData>
@@ -209,12 +196,6 @@ const EventTitle = styled(TableData)`
   ${overflowEllipsis};
 `;
 
-const Project = styled(Link)`
-  display: flex;
-  color: ${p => p.theme.gray4};
-  ${overflowEllipsis};
-`;
-
 const StyledDateTime = styled(DateTime)`
   color: ${p => p.theme.gray2};
   ${overflowEllipsis};
diff --git a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx
index dc0065ce21..7f874c0b97 100644
--- a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx
+++ b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx
@@ -61,20 +61,14 @@ class Deploy extends React.Component {
   render() {
     const {deploy, organization, project} = this.props;
 
-    const hasSentry10 = new Set(organization.features).has('sentry10');
-
     return (
       <DeployRow justify="space-between">
         <Environment>{deploy.environment}</Environment>
         <Version>
           <StyledLink
-            to={
-              hasSentry10
-                ? `/organizations/${organization.slug}/releases/${
-                    deploy.version
-                  }/?project=${project.id}`
-                : `/${organization.slug}/${project.slug}/releases/${deploy.version}/`
-            }
+            to={`/organizations/${organization.slug}/releases/${
+              deploy.version
+            }/?project=${project.id}`}
           >
             {getShortVersion(deploy.version)}
           </StyledLink>
diff --git a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx
index dcf5794e7f..98fb51e5c6 100644
--- a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx
@@ -10,7 +10,6 @@ import {sortProjects} from 'app/utils';
 import {t} from 'app/locale';
 import Button from 'app/components/button';
 import ConfigStore from 'app/stores/configStore';
-import Feature from 'app/components/acl/feature';
 import IdBadge from 'app/components/idBadge';
 import NoProjectMessage from 'app/components/noProjectMessage';
 import PageHeading from 'app/components/pageHeading';
@@ -23,7 +22,6 @@ import withOrganization from 'app/utils/withOrganization';
 import withProjects from 'app/utils/withProjects';
 import withTeams from 'app/utils/withTeams';
 
-import ProjectNav from './projectNav';
 import Resources from './resources';
 import TeamSection from './teamSection';
 
@@ -32,15 +30,14 @@ class Dashboard extends React.Component {
     routes: PropTypes.array,
     teams: PropTypes.array,
     projects: PropTypes.array,
-    hasSentry10: PropTypes.bool,
     organization: SentryTypes.Organization,
   };
 
   componentDidMount() {
-    const {organization, routes, hasSentry10} = this.props;
+    const {organization, routes} = this.props;
     const isOldRoute = getRouteStringFromRoutes(routes) === '/:orgId/';
 
-    if (hasSentry10 && isOldRoute) {
+    if (isOldRoute) {
       browserHistory.replace(`/organizations/${organization.slug}/`);
     }
   }
@@ -49,7 +46,7 @@ class Dashboard extends React.Component {
   }
 
   render() {
-    const {teams, projects, params, hasSentry10, organization} = this.props;
+    const {teams, projects, params, organization} = this.props;
     const sortedProjects = sortProjects(projects);
 
     const {isSuperuser} = ConfigStore.get('user');
@@ -69,7 +66,7 @@ class Dashboard extends React.Component {
 
     return (
       <React.Fragment>
-        {hasSentry10 && projects.length > 0 && (
+        {projects.length > 0 && (
           <ProjectsHeader>
             <PageHeading>Projects</PageHeading>
             <Button
@@ -87,17 +84,6 @@ class Dashboard extends React.Component {
             </Button>
           </ProjectsHeader>
         )}
-        {!hasSentry10 && favorites.length > 0 && (
-          <TeamSection
-            data-test-id="favorites"
-            orgId={params.orgId}
-            showBorder
-            team={null}
-            title={t('Bookmarked projects')}
-            projects={favorites}
-            access={access}
-          />
-        )}
 
         {teamSlugs.map((slug, index) => {
           const showBorder = index !== teamSlugs.length - 1;
@@ -134,14 +120,9 @@ class Dashboard extends React.Component {
 const OrganizationDashboard = createReactClass({
   render() {
     return (
-      <Feature features={['sentry10']}>
-        {({hasFeature}) => (
-          <Flex flex="1" direction="column">
-            {!hasFeature && <ProjectNav />}
-            <Dashboard hasSentry10={hasFeature} {...this.props} />
-          </Flex>
-        )}
-      </Feature>
+      <Flex flex="1" direction="column">
+        <Dashboard {...this.props} />
+      </Flex>
     );
   },
 });
diff --git a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectCard.jsx b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectCard.jsx
index 29dede053e..539a451d4c 100644
--- a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectCard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/projectCard.jsx
@@ -43,8 +43,6 @@ class ProjectCard extends React.Component {
     const {organization, project, hasProjectAccess, params} = this.props;
     const {id, firstEvent, stats, slug} = project;
 
-    const hasSentry10 = new Set(organization.features).has('sentry10');
-
     return (
       <ProjectCardWrapper data-test-id={slug} width={['100%', '50%', '33%', '25%']}>
         {stats ? (
@@ -55,13 +53,7 @@ class ProjectCard extends React.Component {
                 avatarSize={18}
                 displayName={
                   hasProjectAccess ? (
-                    <Link
-                      to={
-                        hasSentry10
-                          ? `/organizations/${params.orgId}/issues/?project=${id}`
-                          : `/${params.orgId}/${slug}/`
-                      }
-                    >
+                    <Link to={`/organizations/${params.orgId}/issues/?project=${id}`}>
                       <strong>{slug}</strong>
                     </Link>
                   ) : (
diff --git a/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx b/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx
index a7aa9c0d1a..1025f1f5ef 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx
@@ -15,7 +15,6 @@ import {
   ProjectTableLayout,
   ProjectTableDataElement,
 } from 'app/views/organizationStats/projectTableLayout';
-import ProjectNav from 'app/views/organizationProjectsDashboard/projectNav';
 import {PageContent} from 'app/styles/organization';
 
 class OrganizationStats extends React.Component {
@@ -147,14 +146,8 @@ class OrganizationStats extends React.Component {
   }
 
   render() {
-    const hasSentry10 = new Set(this.props.organization.features).has('sentry10');
     return (
       <React.Fragment>
-        {!hasSentry10 && (
-          <div style={{width: '100%'}}>
-            <ProjectNav />
-          </div>
-        )}
         <PageContent>{this.renderContent()}</PageContent>
       </React.Fragment>
     );
diff --git a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
index 3b24f87f2c..9361ba40dc 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
@@ -25,8 +25,6 @@ const ProjectTable = ({projectMap, projectTotals, orgTotal, organization}) => {
     return <div />;
   }
 
-  const hasSentry10 = new Set(organization.features).has('sentry10');
-
   return projectTotals
     .sort((a, b) => b.received - a.received)
     .map((item, index) => {
@@ -36,9 +34,7 @@ const ProjectTable = ({projectMap, projectTotals, orgTotal, organization}) => {
         return null;
       }
 
-      const projectLink = hasSentry10
-        ? `/settings/${organization.slug}/projects/${project.slug}/`
-        : `/${organization.slug}/${project.slug}/`;
+      const projectLink = `/settings/${organization.slug}/projects/${project.slug}/`;
 
       return (
         <StyledProjectTableLayout key={index}>
diff --git a/src/sentry/static/sentry/app/views/organizationStream/container.jsx b/src/sentry/static/sentry/app/views/organizationStream/container.jsx
index c3f576c9f6..3102283a2d 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/container.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/container.jsx
@@ -2,7 +2,6 @@ import React from 'react';
 import DocumentTitle from 'react-document-title';
 
 import {PageContent} from 'app/styles/organization';
-import Feature from 'app/components/acl/feature';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import NoProjectMessage from 'app/components/noProjectMessage';
 import SentryTypes from 'app/sentryTypes';
@@ -22,13 +21,13 @@ class OrganizationStreamContainer extends React.Component {
 
     return (
       <DocumentTitle title={this.getTitle()}>
-        <Feature features={['sentry10']} renderDisabled>
+        <React.Fragment>
           <GlobalSelectionHeader organization={organization} />
 
           <PageContent>
             <NoProjectMessage organization={organization}>{children}</NoProjectMessage>
           </PageContent>
-        </Feature>
+        </React.Fragment>
       </DocumentTitle>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx b/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx
index df0e1a0ffa..4c16256736 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/gettingStarted.jsx
@@ -3,7 +3,6 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import ProjectContext from 'app/views/projects/projectContext';
-import ProjectSelector from 'app/components/projectHeader/projectSelector';
 import space from 'app/styles/space';
 
 class GettingStartedBody extends React.Component {
@@ -13,18 +12,8 @@ class GettingStartedBody extends React.Component {
   };
 
   render() {
-    const {project, organization} = this.context;
-    const hasSentry10 = organization.features.includes('sentry10');
-
     return (
       <Container>
-        {!hasSentry10 && (
-          <div className="sub-header flex flex-container flex-vertically-centered">
-            <div className="p-t-1 p-b-1">
-              <ProjectSelector organization={organization} projectId={project.slug} />
-            </div>
-          </div>
-        )}
         <div className="container">
           <Content>{this.props.children}</Content>
         </div>
diff --git a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
index 20c11ff545..1083a9ccc5 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
@@ -3,20 +3,12 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import CreateProject from 'app/components/createProject';
-import ProjectSelector from 'app/components/projectHeader/projectSelector';
 import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
 import withOrganization from 'app/utils/withOrganization';
 
 const NewProject = ({organization}) => (
   <Container>
-    {!organization.features.includes('sentry10') && (
-      <div className="sub-header flex flex-container flex-vertically-centered">
-        <div className="p-t-1 p-b-1">
-          <ProjectSelector organization={organization} />
-        </div>
-      </div>
-    )}
     <div className="container">
       <Content>
         <DocumentTitle title="Sentry" />
diff --git a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
index 67c6902fc9..147fe2c2f0 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
@@ -24,10 +24,6 @@ class ProjectInstallOverview extends AsyncComponent {
     return window.location.href.indexOf('getting-started') > 0;
   }
 
-  get hasSentry10() {
-    return this.props.organization.features.includes('sentry10');
-  }
-
   getEndpoints() {
     const {orgId, projectId} = this.props.params;
     return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];
@@ -39,9 +35,7 @@ class ProjectInstallOverview extends AsyncComponent {
     let rootUrl = `${prefix}install`;
 
     if (this.isGettingStarted) {
-      rootUrl = this.hasSentry10
-        ? `/organizations/${orgId}/projects/${projectId}/getting-started`
-        : `/${orgId}/${projectId}/getting-started`;
+      rootUrl = `/organizations/${orgId}/projects/${projectId}/getting-started`;
     }
 
     browserHistory.push(`${rootUrl}/${platform}/`);
@@ -52,12 +46,10 @@ class ProjectInstallOverview extends AsyncComponent {
   };
 
   render() {
-    const {orgId, projectId} = this.props.params;
+    const {orgId} = this.props.params;
     const {keyList} = this.state;
 
-    const issueStreamLink = this.hasSentry10
-      ? `/organizations/${orgId}/issues/#welcome`
-      : `/${orgId}/${projectId}/#welcome`;
+    const issueStreamLink = `/organizations/${orgId}/issues/#welcome`;
 
     const dsn = keyList ? keyList[0].dsn : {};
 
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index 959b54454c..1ff9946596 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -20,7 +20,6 @@ import withProject from 'app/utils/withProject';
 class ProjectInstallPlatform extends React.Component {
   static propTypes = {
     api: PropTypes.object,
-    organization: SentryTypes.Organization.isRequired,
     project: SentryTypes.Project.isRequired,
   };
 
@@ -64,17 +63,14 @@ class ProjectInstallPlatform extends React.Component {
 
   redirectToNeutralDocs() {
     const {orgId, projectId} = this.props.params;
-    const {organization} = this.props;
 
-    const url = new Set(organization.features).has('sentry10')
-      ? `/organizations/${orgId}/projects/${projectId}/getting-started/`
-      : `/${orgId}/${projectId}/getting-started/`;
+    const url = `/organizations/${orgId}/projects/${projectId}/getting-started/`;
 
     browserHistory.push(url);
   }
 
   render() {
-    const {organization, project, params} = this.props;
+    const {project, params} = this.props;
     const {orgId, projectId} = params;
 
     const platform = platforms.find(p => p.id === params.platform);
@@ -83,15 +79,10 @@ class ProjectInstallPlatform extends React.Component {
       return <NotFound />;
     }
 
-    const hasSentry10 = new Set(organization.features).has('sentry10');
-
-    const issueStreamLink = hasSentry10
-      ? `/organizations/${orgId}/issues/?project=${project.id}#welcome`
-      : `/${orgId}/${projectId}/#welcome`;
-
-    const gettingStartedLink = hasSentry10
-      ? `/organizations/${orgId}/projects/${projectId}/getting-started/`
-      : `/${orgId}/${projectId}/getting-started/`;
+    const issueStreamLink = `/organizations/${orgId}/issues/?project=${
+      project.id
+    }#welcome`;
+    const gettingStartedLink = `/organizations/${orgId}/projects/${projectId}/getting-started/`;
 
     return (
       <Panel>
diff --git a/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx b/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
index 3bb317268c..787fe43807 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
@@ -3,9 +3,6 @@ import React from 'react';
 import {pick} from 'lodash';
 
 import SentryTypes from 'app/sentryTypes';
-import Feature from 'app/components/acl/feature';
-import {t} from 'app/locale';
-import Alert from 'app/components/alert';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
@@ -21,24 +18,12 @@ class OrganizationReleaseDetailsContainer extends React.Component {
     organization: SentryTypes.Organization,
   };
 
-  renderNoAccess() {
-    return (
-      <PageContent>
-        <Alert type="warning">{t("You don't have access to this feature")}</Alert>
-      </PageContent>
-    );
-  }
-
   render() {
     return (
-      <Feature
-        features={['organizations:sentry10']}
-        organization={this.props.organization}
-        renderDisabled={this.renderNoAccess}
-      >
+      <React.Fragment>
         <GlobalSelectionHeader organization={this.props.organization} />
         <OrganizationReleaseDetails {...this.props} />
-      </Feature>
+      </React.Fragment>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseProjectStatSparkline.jsx b/src/sentry/static/sentry/app/views/releases/detail/shared/releaseProjectStatSparkline.jsx
index 748ff45969..a78bf2ed6d 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseProjectStatSparkline.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/shared/releaseProjectStatSparkline.jsx
@@ -1,8 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {Link} from 'react-router';
 
-import SentryTypes from 'app/sentryTypes';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import LoadingError from 'app/components/loadingError';
 import {t, tn} from 'app/locale';
@@ -12,7 +10,6 @@ import withApi from 'app/utils/withApi';
 class ReleaseProjectStatSparkline extends React.Component {
   static propTypes = {
     api: PropTypes.object.isRequired,
-    organization: SentryTypes.Organization,
     orgId: PropTypes.string,
     project: PropTypes.object,
     version: PropTypes.string,
@@ -109,8 +106,6 @@ class ReleaseProjectStatSparkline extends React.Component {
   }
 
   render() {
-    const {organization, orgId, project, version} = this.props;
-
     if (this.state.loading) {
       return <LoadingIndicator />;
     }
@@ -121,8 +116,6 @@ class ReleaseProjectStatSparkline extends React.Component {
     const {Sparklines, SparklinesLine, stats} = this.state;
     const values = stats.map(tuple => tuple[1]);
 
-    const hasSentry10 = new Set(organization.features).has('sentry10');
-
     return (
       <li>
         <div className="sparkline pull-right" style={{width: 96}}>
@@ -130,13 +123,7 @@ class ReleaseProjectStatSparkline extends React.Component {
             <SparklinesLine style={{stroke: '#8f85d4', fill: 'none', strokeWidth: 3}} />
           </Sparklines>
         </div>
-        {hasSentry10 ? (
-          <div>{this.renderProjectSummary()}</div>
-        ) : (
-          <Link to={`/${orgId}/${project.slug}/releases/${encodeURIComponent(version)}/`}>
-            {this.renderProjectSummary()}
-          </Link>
-        )}
+        <div>{this.renderProjectSummary()}</div>
       </li>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
index 2319721e7b..2c943cb60a 100644
--- a/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
@@ -7,9 +7,7 @@ import SearchBar from 'app/components/searchBar';
 import {Panel, PanelBody} from 'app/components/panels';
 import Pagination from 'app/components/pagination';
 import LoadingIndicator from 'app/components/loadingIndicator';
-import Alert from 'app/components/alert';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
-import Feature from 'app/components/acl/feature';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import NoProjectMessage from 'app/components/noProjectMessage';
 import AsyncView from 'app/views/asyncView';
@@ -30,25 +28,13 @@ class OrganizationReleasesContainer extends React.Component {
     selection: SentryTypes.GlobalSelection.isRequired,
   };
 
-  renderNoAccess() {
-    return (
-      <PageContent>
-        <Alert type="warning">{t("You don't have access to this feature")}</Alert>
-      </PageContent>
-    );
-  }
-
   render() {
     const {organization} = this.props;
     return (
-      <Feature
-        features={['organizations:sentry10']}
-        organization={organization}
-        renderDisabled={this.renderNoAccess}
-      >
+      <React.Fragment>
         <GlobalSelectionHeader organization={organization} />
         <OrganizationReleases {...this.props} />
-      </Feature>
+      </React.Fragment>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
index 768f84f546..bbabb472fd 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsProjectItem.jsx
@@ -29,8 +29,6 @@ const ProjectItem = createReactClass({
   render() {
     const {project, organization} = this.props;
 
-    const hasNewRoutes = new Set(organization.features).has('sentry10');
-
     return (
       <Container key={project.id}>
         <BookmarkLink
@@ -39,13 +37,7 @@ const ProjectItem = createReactClass({
           isBookmarked={this.state.isBookmarked}
           onToggle={this.handleToggleBookmark}
         />
-        <Link
-          to={
-            hasNewRoutes
-              ? `/settings/${organization.slug}/projects/${project.slug}/`
-              : `/${organization.slug}/${project.slug}/`
-          }
-        >
+        <Link to={`/settings/${organization.slug}/projects/${project.slug}/`}>
           <ProjectLabel project={project} />
         </Link>
       </Container>
diff --git a/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
index 921e6e7e60..a67efc07ab 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
@@ -76,8 +76,6 @@ class OrganizationProjects extends AsyncView {
     const {organization} = this.props;
     const canCreateProjects = new Set(organization.access).has('project:admin');
 
-    const hasNewRoutes = new Set(organization.features).has('sentry10');
-
     const action = (
       <Button
         priority="primary"
@@ -121,17 +119,6 @@ class OrganizationProjects extends AsyncView {
                     stats={projectStats[project.id]}
                   />
                 </Box>
-                {!hasNewRoutes && (
-                  <Box p={2} align="right">
-                    <Button
-                      icon="icon-settings"
-                      size="small"
-                      to={`/settings/${organization.slug}/projects/${project.slug}/`}
-                    >
-                      {t('Settings')}
-                    </Button>
-                  </Box>
-                )}
               </PanelItem>
             ))}
             {projectList.length === 0 && (
diff --git a/src/sentry/static/sentry/app/views/stream/createSavedSearchButton.jsx b/src/sentry/static/sentry/app/views/stream/createSavedSearchButton.jsx
index 788b9e4faf..20afa3e395 100644
--- a/src/sentry/static/sentry/app/views/stream/createSavedSearchButton.jsx
+++ b/src/sentry/static/sentry/app/views/stream/createSavedSearchButton.jsx
@@ -6,7 +6,6 @@ import Modal from 'react-bootstrap/lib/Modal';
 import {t} from 'app/locale';
 import SentryTypes from 'app/sentryTypes';
 import Access from 'app/components/acl/access';
-import Feature from 'app/components/acl/feature';
 import Button from 'app/components/button';
 import {createSavedSearch} from 'app/actionCreators/savedSearches';
 import {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';
@@ -91,65 +90,63 @@ class CreateSavedSearchButton extends React.Component {
     const {organization, query} = this.props;
 
     return (
-      <Feature organization={organization} features={['sentry10']}>
-        <Access organization={organization} access={['org:write']}>
-          <StyledButton
-            title={t('Add to organization filter list')}
-            size="zero"
-            borderless
-            type="button"
-            onClick={this.onToggle}
-            data-test-id="save-current-search"
-            aria-label={t('Add to organization filter list')}
-            icon="icon-add-to-list"
-          />
-          <Modal show={isModalOpen} animation={false} onHide={this.onToggle}>
-            <form onSubmit={this.onSubmit}>
-              <div className="modal-header">
-                <h4>{t('Save Current Search')}</h4>
-              </div>
-
-              <div className="modal-body">
-                {this.state.error && (
-                  <div className="alert alert-error alert-block">{error}</div>
-                )}
-
-                <p>{t('All team members will now have access to this search.')}</p>
-                <TextField
-                  key="name"
-                  name="name"
-                  label={t('Name')}
-                  placeholder="e.g. My Search Results"
-                  required={true}
-                  onChange={this.handleChangeName}
-                />
-                <TextField
-                  key="query"
-                  name="query"
-                  label={t('Query')}
-                  value={query}
-                  required={true}
-                  onChange={this.handleChangeQuery}
-                />
-              </div>
-              <div className="modal-footer">
-                <Button
-                  priority="default"
-                  size="small"
-                  disabled={isSaving}
-                  onClick={this.onToggle}
-                  style={{marginRight: space(1)}}
-                >
-                  {t('Cancel')}
-                </Button>
-                <Button priority="primary" size="small" disabled={isSaving}>
-                  {t('Save')}
-                </Button>
-              </div>
-            </form>
-          </Modal>
-        </Access>
-      </Feature>
+      <Access organization={organization} access={['org:write']}>
+        <StyledButton
+          title={t('Add to organization filter list')}
+          size="zero"
+          borderless
+          type="button"
+          onClick={this.onToggle}
+          data-test-id="save-current-search"
+          aria-label={t('Add to organization filter list')}
+          icon="icon-add-to-list"
+        />
+        <Modal show={isModalOpen} animation={false} onHide={this.onToggle}>
+          <form onSubmit={this.onSubmit}>
+            <div className="modal-header">
+              <h4>{t('Save Current Search')}</h4>
+            </div>
+
+            <div className="modal-body">
+              {this.state.error && (
+                <div className="alert alert-error alert-block">{error}</div>
+              )}
+
+              <p>{t('All team members will now have access to this search.')}</p>
+              <TextField
+                key="name"
+                name="name"
+                label={t('Name')}
+                placeholder="e.g. My Search Results"
+                required={true}
+                onChange={this.handleChangeName}
+              />
+              <TextField
+                key="query"
+                name="query"
+                label={t('Query')}
+                value={query}
+                required={true}
+                onChange={this.handleChangeQuery}
+              />
+            </div>
+            <div className="modal-footer">
+              <Button
+                priority="default"
+                size="small"
+                disabled={isSaving}
+                onClick={this.onToggle}
+                style={{marginRight: space(1)}}
+              >
+                {t('Cancel')}
+              </Button>
+              <Button priority="primary" size="small" disabled={isSaving}>
+                {t('Save')}
+              </Button>
+            </div>
+          </form>
+        </Modal>
+      </Access>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 275b836a72..01d8f27e95 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -63,20 +63,7 @@ class SearchBar extends React.Component {
     this.fetchData();
   }
 
-  hasSentry10 = () => {
-    const {organization} = this.props;
-    return organization && organization.features.includes('sentry10');
-  };
-
   fetchData = async () => {
-    if (!this.hasSentry10()) {
-      this.setState({
-        defaultSearchItems: [SEARCH_ITEMS, []],
-      });
-
-      return;
-    }
-
     const resp = await this.getRecentSearches();
 
     this.setState({
@@ -117,11 +104,6 @@ class SearchBar extends React.Component {
   };
 
   handleSavedRecentSearch = () => {
-    // No need to refetch if recent searches feature is not enabled
-    if (!this.hasSentry10()) {
-      return;
-    }
-
     // Reset recent searches
     this.fetchData();
   };
@@ -133,7 +115,6 @@ class SearchBar extends React.Component {
       onSidebarToggle,
       ...props
     } = this.props;
-    const hasPinnedSearch = this.hasSentry10();
 
     return (
       <React.Fragment>
@@ -141,19 +122,14 @@ class SearchBar extends React.Component {
           onGetTagValues={this.getTagValues}
           defaultSearchItems={this.state.defaultSearchItems}
           maxSearchItems={5}
-          hasPinnedSearch={hasPinnedSearch}
+          hasPinnedSearch={true}
           savedSearchType={SEARCH_TYPES.ISSUE}
-          displayRecentSearches={this.hasSentry10()}
+          displayRecentSearches={true}
           onSavedRecentSearch={this.handleSavedRecentSearch}
           onSidebarToggle={onSidebarToggle}
           pinnedSearch={savedSearch && savedSearch.isPinned ? savedSearch : null}
           {...props}
         />
-        {!hasPinnedSearch && onSidebarToggle && (
-          <a className="btn btn-default toggle-stream-sidebar" onClick={onSidebarToggle}>
-            <span className="icon-filter" />
-          </a>
-        )}
       </React.Fragment>
     );
   }
diff --git a/tests/js/spec/components/eventsTable/__snapshots__/eventsTableRow.spec.jsx.snap b/tests/js/spec/components/eventsTable/__snapshots__/eventsTableRow.spec.jsx.snap
index 9ef95babef..d08cf26f0a 100644
--- a/tests/js/spec/components/eventsTable/__snapshots__/eventsTableRow.spec.jsx.snap
+++ b/tests/js/spec/components/eventsTable/__snapshots__/eventsTableRow.spec.jsx.snap
@@ -9,7 +9,7 @@ exports[`EventsTableRow renders 1`] = `
       <Link
         onlyActiveOnIndex={false}
         style={Object {}}
-        to="/orgId/projectId/issues/groupId/events/904/"
+        to="/organizations/orgId/issues/groupId/events/904/"
       >
         <DateTime
           date="2017-07-26T00:34:20Z"
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index 73bf34b43f..6b10cd38f4 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -551,12 +551,12 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                             </withApi(BookmarkStar)>
                           </BookmarkLink>
                           <Link
-                            to="/org-slug/project-slug/"
+                            to="/settings/org-slug/projects/project-slug/"
                           >
                             <Link
                               onlyActiveOnIndex={false}
                               style={Object {}}
-                              to="/org-slug/project-slug/"
+                              to="/settings/org-slug/projects/project-slug/"
                             >
                               <a
                                 onClick={[Function]}
@@ -939,12 +939,12 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                             </withApi(BookmarkStar)>
                           </BookmarkLink>
                           <Link
-                            to="/org-slug/project-slug-2/"
+                            to="/settings/org-slug/projects/project-slug-2/"
                           >
                             <Link
                               onlyActiveOnIndex={false}
                               style={Object {}}
-                              to="/org-slug/project-slug-2/"
+                              to="/settings/org-slug/projects/project-slug-2/"
                             >
                               <a
                                 onClick={[Function]}
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/organizationGroupEvents.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/organizationGroupEvents.spec.jsx.snap
index b75da47e27..bd02e438ad 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/organizationGroupEvents.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/organizationGroupEvents.spec.jsx.snap
@@ -15,7 +15,7 @@ Array [
         <Link
           onlyActiveOnIndex={false}
           style={Object {}}
-          to="/orgId/project-slug/issues/1/events/1/"
+          to="/organizations/orgId/issues/1/events/1/"
         >
           <a
             onClick={[Function]}
@@ -45,7 +45,7 @@ Array [
         <Link
           onlyActiveOnIndex={false}
           style={Object {}}
-          to="/orgId/project-slug/issues/1/events/98654/"
+          to="/organizations/orgId/issues/1/events/98654/"
         >
           <a
             onClick={[Function]}
diff --git a/tests/js/spec/views/groupDetails/groupEventDetails.spec.jsx b/tests/js/spec/views/groupDetails/groupEventDetails.spec.jsx
index 86dd958582..009c088309 100644
--- a/tests/js/spec/views/groupDetails/groupEventDetails.spec.jsx
+++ b/tests/js/spec/views/groupDetails/groupEventDetails.spec.jsx
@@ -174,20 +174,20 @@ describe('groupEventDetails', () => {
       .find('Link');
 
     expect(buttons.at(0).prop('to')).toEqual({
-      pathname: '/org-slug/project-slug/issues/1/events/oldest/',
+      pathname: '/organizations/org-slug/issues/1/events/oldest/',
       query: {environment: 'dev'},
     });
 
     expect(buttons.at(1).prop('to')).toEqual({
-      pathname: '/org-slug/project-slug/issues/1/events/prev-event-id/',
+      pathname: '/organizations/org-slug/issues/1/events/prev-event-id/',
       query: {environment: 'dev'},
     });
     expect(buttons.at(2).prop('to')).toEqual({
-      pathname: '/org-slug/project-slug/issues/1/events/next-event-id/',
+      pathname: '/organizations/org-slug/issues/1/events/next-event-id/',
       query: {environment: 'dev'},
     });
     expect(buttons.at(3).prop('to')).toEqual({
-      pathname: '/org-slug/project-slug/issues/1/events/latest/',
+      pathname: '/organizations/org-slug/issues/1/events/latest/',
       query: {environment: 'dev'},
     });
   });
diff --git a/tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx b/tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx
index 6255259e49..3b40e2b79f 100644
--- a/tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx
+++ b/tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx
@@ -5,11 +5,7 @@ import {mount} from 'enzyme';
 import GroupTagValues from 'app/views/groupDetails/shared/groupTagValues';
 
 describe('GroupTagValues', function() {
-  const {routerContext, router} = initializeOrg({
-    organization: {
-      features: ['sentry10'],
-    },
-  });
+  const {routerContext, router} = initializeOrg({});
   const group = TestStubs.Group();
   const tags = TestStubs.Tags();
 
diff --git a/tests/js/spec/views/onboarding/__snapshots__/configure.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/configure.spec.jsx.snap
index a51b94faa0..35edb4c537 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/configure.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/configure.spec.jsx.snap
@@ -499,14 +499,14 @@ exports[`Configure should render correctly render() should render platform docs
                                                       >
                                                         <Button
                                                           disabled={false}
-                                                          href="/testOrg/project-slug/getting-started/"
+                                                          href="/organizations/testOrg/projects/project-slug/getting-started/"
                                                           size="small"
                                                         >
                                                           <StyledButton
                                                             aria-disabled={false}
                                                             aria-label="< Back"
                                                             disabled={false}
-                                                            href="/testOrg/project-slug/getting-started/"
+                                                            href="/organizations/testOrg/projects/project-slug/getting-started/"
                                                             onClick={[Function]}
                                                             role="button"
                                                             size="small"
@@ -516,7 +516,7 @@ exports[`Configure should render correctly render() should render platform docs
                                                               aria-label="< Back"
                                                               className="css-1uhlusb-StyledButton-getColors e12ma6z0"
                                                               disabled={false}
-                                                              href="/testOrg/project-slug/getting-started/"
+                                                              href="/organizations/testOrg/projects/project-slug/getting-started/"
                                                               onClick={[Function]}
                                                               role="button"
                                                               size="small"
@@ -525,7 +525,7 @@ exports[`Configure should render correctly render() should render platform docs
                                                                 aria-disabled={false}
                                                                 aria-label="< Back"
                                                                 className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                                                href="/testOrg/project-slug/getting-started/"
+                                                                href="/organizations/testOrg/projects/project-slug/getting-started/"
                                                                 onClick={[Function]}
                                                                 role="button"
                                                                 size="small"
diff --git a/tests/js/spec/views/organizationDashboard/dashboard.spec.jsx b/tests/js/spec/views/organizationDashboard/dashboard.spec.jsx
index 0b394bbbbc..8088d85086 100644
--- a/tests/js/spec/views/organizationDashboard/dashboard.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/dashboard.spec.jsx
@@ -16,7 +16,7 @@ describe('OrganizationDashboard', function() {
   const {organization, router, routerContext} = initializeOrg({
     projects: [{isMember: true}, {isMember: true, slug: 'new-project', id: 3}],
     organization: {
-      features: ['sentry10', 'discover', 'global-views'],
+      features: ['discover', 'global-views'],
     },
     router: {
       location: {
diff --git a/tests/js/spec/views/organizationDashboard/discoverQuery.spec.jsx b/tests/js/spec/views/organizationDashboard/discoverQuery.spec.jsx
index 470dbba45f..7f3b3e1d4e 100644
--- a/tests/js/spec/views/organizationDashboard/discoverQuery.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/discoverQuery.spec.jsx
@@ -9,7 +9,7 @@ import DiscoverQuery from 'app/views/organizationDashboard/discoverQuery';
 describe('DiscoverQuery', function() {
   const {organization, router, routerContext} = initializeOrg({
     organization: {
-      features: ['sentry10', 'global-views'],
+      features: ['global-views'],
     },
     router: {
       location: {
diff --git a/tests/js/spec/views/organizationDashboard/overviewDashboard.spec.jsx b/tests/js/spec/views/organizationDashboard/overviewDashboard.spec.jsx
index ef4e4bfce6..1e6cde9464 100644
--- a/tests/js/spec/views/organizationDashboard/overviewDashboard.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/overviewDashboard.spec.jsx
@@ -16,7 +16,7 @@ describe('OverviewDashboard', function() {
   const {organization, router, routerContext} = initializeOrg({
     projects: [{isMember: true}, {isMember: true, slug: 'new-project', id: 3}],
     organization: {
-      features: ['sentry10', 'discover', 'global-views'],
+      features: ['discover', 'global-views'],
     },
     router: {
       location: {
diff --git a/tests/js/spec/views/organizationDashboard/widgetChart.spec.jsx b/tests/js/spec/views/organizationDashboard/widgetChart.spec.jsx
index 7037f44c06..b9e68aa33c 100644
--- a/tests/js/spec/views/organizationDashboard/widgetChart.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/widgetChart.spec.jsx
@@ -8,7 +8,7 @@ import WidgetChart from 'app/views/organizationDashboard/widgetChart';
 describe('WidgetChart', function() {
   const {organization, router, routerContext} = initializeOrg({
     organization: {
-      features: ['sentry10', 'global-views'],
+      features: ['global-views'],
     },
     router: {
       location: {
diff --git a/tests/js/spec/views/organizationProjectsDashboard/index.spec.jsx b/tests/js/spec/views/organizationProjectsDashboard/index.spec.jsx
index 58ecc33fef..7319f0532c 100644
--- a/tests/js/spec/views/organizationProjectsDashboard/index.spec.jsx
+++ b/tests/js/spec/views/organizationProjectsDashboard/index.spec.jsx
@@ -100,27 +100,7 @@ describe('OrganizationDashboard', function() {
           teams,
           firstEvent: true,
         }),
-      ];
 
-      const wrapper = shallow(
-        <Dashboard
-          teams={teams}
-          projects={projects}
-          organization={TestStubs.Organization()}
-          params={{orgId: 'org-slug'}}
-        />,
-        TestStubs.routerContext()
-      );
-      const emptyState = wrapper.find('NoProjectMessage');
-      const favorites = wrapper.find('TeamSection[data-test-id="favorites"]');
-      const teamSection = wrapper.find('TeamSection');
-      expect(emptyState).toHaveLength(0);
-      expect(favorites).toHaveLength(0);
-      expect(teamSection).toHaveLength(1);
-    });
-
-    it('renders favorited project in favorites section ', function() {
-      const projects = [
         TestStubs.Project({
           teams,
           isBookmarked: true,
@@ -137,8 +117,14 @@ describe('OrganizationDashboard', function() {
         />,
         TestStubs.routerContext()
       );
+      const emptyState = wrapper.find('NoProjectMessage');
       const favorites = wrapper.find('TeamSection[data-test-id="favorites"]');
-      expect(favorites).toHaveLength(1);
+      const teamSection = wrapper.find('TeamSection');
+      expect(emptyState).toHaveLength(0);
+      // Note: we have a project that is bookmarked but there is no Favorites section
+      // We removed this as part of sentry 10
+      expect(favorites).toHaveLength(0);
+      expect(teamSection).toHaveLength(1);
     });
 
     it('renders bookmarked projects first in team list', function() {
@@ -218,39 +204,6 @@ describe('OrganizationDashboard', function() {
       expect(projectCards.at(4).prop('data-test-id')).toBe('m');
       expect(projectCards.at(5).prop('data-test-id')).toBe('z');
     });
-
-    it('renders favorited projects if there is any, even if team list is empty', function() {
-      const projects = [
-        TestStubs.Project({
-          id: '1',
-          slug: 'm',
-          teams: [],
-          isBookmarked: true,
-          stats: [],
-          firstEvent: true,
-        }),
-      ];
-      MockApiClient.addMockResponse({
-        url: '/organizations/org-slug/projects/',
-        body: projects,
-      });
-
-      const wrapper = mount(
-        <Dashboard
-          teams={[]}
-          projects={projects}
-          organization={TestStubs.Organization()}
-          params={{orgId: 'org-slug'}}
-        />,
-        routerContext
-      );
-
-      expect(wrapper.find('TeamSection')).toHaveLength(1);
-      const projectCards = wrapper.find('ProjectCard');
-      expect(projectCards).toHaveLength(1);
-      const emptyState = wrapper.find('NoProjectMessage');
-      expect(emptyState).toHaveLength(0);
-    });
   });
 
   describe('ProjectsStatsStore', function() {
@@ -315,12 +268,13 @@ describe('OrganizationDashboard', function() {
         routerContext
       );
 
-      // Favorites = 3 + 6 for first team
-      expect(loadStatsSpy).toHaveBeenCalledTimes(9);
+      // Favorites = ~3~0 + 6 for first team
+      // Note: Favorites does not exist in sentry10
+      expect(loadStatsSpy).toHaveBeenCalledTimes(6);
       expect(mock).not.toHaveBeenCalled();
 
-      // Has 8 Loading Cards because 1 project has been loaded in store already
-      expect(wrapper.find('LoadingCard')).toHaveLength(8);
+      // Has 5 Loading Cards because 1 project has been loaded in store already
+      expect(wrapper.find('LoadingCard')).toHaveLength(5);
 
       // Advance timers so that batched request fires
       jest.advanceTimersByTime(51);
@@ -340,7 +294,7 @@ describe('OrganizationDashboard', function() {
       await tick();
       wrapper.update();
       expect(wrapper.find('LoadingCard')).toHaveLength(0);
-      expect(wrapper.find('Chart')).toHaveLength(9);
+      expect(wrapper.find('Chart')).toHaveLength(6);
 
       // Resets store when it unmounts
       wrapper.unmount();
diff --git a/tests/js/spec/views/organizationStream/createIncident.spec.jsx b/tests/js/spec/views/organizationStream/createIncident.spec.jsx
index 4ef1075719..1672329f4f 100644
--- a/tests/js/spec/views/organizationStream/createIncident.spec.jsx
+++ b/tests/js/spec/views/organizationStream/createIncident.spec.jsx
@@ -14,7 +14,7 @@ describe('OrganizationStream --> Create Incident', function() {
 
   const {project, router, routerContext} = initializeOrg({
     organization: {
-      features: ['sentry10', 'global-views', 'incidents'],
+      features: ['global-views', 'incidents'],
       access: ['releases'],
       slug: 'org-slug',
     },
diff --git a/tests/js/spec/views/organizationStream/overview.spec.jsx b/tests/js/spec/views/organizationStream/overview.spec.jsx
index 1e9277ed31..0b59b16b86 100644
--- a/tests/js/spec/views/organizationStream/overview.spec.jsx
+++ b/tests/js/spec/views/organizationStream/overview.spec.jsx
@@ -123,7 +123,7 @@ describe('OrganizationStream', function() {
   describe('withStores and feature flags', function() {
     const {router, routerContext} = initializeOrg({
       organization: {
-        features: ['sentry10', 'global-views'],
+        features: ['global-views'],
         slug: 'org-slug',
       },
       router: {
diff --git a/tests/js/spec/views/releases/list/organizationReleases.spec.jsx b/tests/js/spec/views/releases/list/organizationReleases.spec.jsx
index 6496d4c7bc..80eda8a4ad 100644
--- a/tests/js/spec/views/releases/list/organizationReleases.spec.jsx
+++ b/tests/js/spec/views/releases/list/organizationReleases.spec.jsx
@@ -11,7 +11,7 @@ describe('OrganizationReleases', function() {
   beforeEach(function() {
     organization = TestStubs.Organization({
       projects: [TestStubs.Project()],
-      features: ['sentry10', 'global-views'],
+      features: ['global-views'],
     });
 
     MockApiClient.addMockResponse({
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
index 56a9a5da70..a092003fd5 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
@@ -284,9 +284,6 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                       Array [
                                         "/organizations/org-slug/projects/new/",
                                       ],
-                                      Array [
-                                        "/org-slug/project-slug/",
-                                      ],
                                       Array [
                                         "/settings/org-slug/projects/project-slug/",
                                       ],
@@ -300,10 +297,6 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                         "type": "return",
                                         "value": undefined,
                                       },
-                                      Object {
-                                        "type": "return",
-                                        "value": undefined,
-                                      },
                                     ],
                                   },
                                   "go": [MockFunction],
@@ -610,12 +603,12 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                         </withApi(BookmarkStar)>
                                       </BookmarkLink>
                                       <Link
-                                        to="/org-slug/project-slug/"
+                                        to="/settings/org-slug/projects/project-slug/"
                                       >
                                         <Link
                                           onlyActiveOnIndex={false}
                                           style={Object {}}
-                                          to="/org-slug/project-slug/"
+                                          to="/settings/org-slug/projects/project-slug/"
                                         >
                                           <a
                                             onClick={[Function]}
@@ -699,131 +692,6 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                               </div>
                             </Base>
                           </Box>
-                          <Box
-                            align="right"
-                            p={2}
-                          >
-                            <Base
-                              align="right"
-                              className="css-9wjo0j"
-                              p={2}
-                            >
-                              <div
-                                className="css-9wjo0j"
-                                is={null}
-                              >
-                                <Button
-                                  disabled={false}
-                                  icon="icon-settings"
-                                  size="small"
-                                  to="/settings/org-slug/projects/project-slug/"
-                                >
-                                  <StyledButton
-                                    aria-disabled={false}
-                                    aria-label="Settings"
-                                    disabled={false}
-                                    onClick={[Function]}
-                                    role="button"
-                                    size="small"
-                                    to="/settings/org-slug/projects/project-slug/"
-                                  >
-                                    <ForwardRef
-                                      aria-disabled={false}
-                                      aria-label="Settings"
-                                      className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                      disabled={false}
-                                      onClick={[Function]}
-                                      role="button"
-                                      size="small"
-                                      to="/settings/org-slug/projects/project-slug/"
-                                    >
-                                      <Link
-                                        aria-disabled={false}
-                                        aria-label="Settings"
-                                        className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                        onClick={[Function]}
-                                        onlyActiveOnIndex={false}
-                                        role="button"
-                                        size="small"
-                                        style={Object {}}
-                                        to="/settings/org-slug/projects/project-slug/"
-                                      >
-                                        <a
-                                          aria-disabled={false}
-                                          aria-label="Settings"
-                                          className="css-1uhlusb-StyledButton-getColors e12ma6z0"
-                                          onClick={[Function]}
-                                          role="button"
-                                          size="small"
-                                          style={Object {}}
-                                        >
-                                          <ButtonLabel
-                                            size="small"
-                                          >
-                                            <Component
-                                              className="css-7ui8bl-ButtonLabel e12ma6z1"
-                                              size="small"
-                                            >
-                                              <span
-                                                className="css-7ui8bl-ButtonLabel e12ma6z1"
-                                              >
-                                                <Icon
-                                                  hasChildren={true}
-                                                  size="small"
-                                                >
-                                                  <Component
-                                                    className="css-1vdnsie-Icon e12ma6z2"
-                                                    hasChildren={true}
-                                                    size="small"
-                                                  >
-                                                    <span
-                                                      className="css-1vdnsie-Icon e12ma6z2"
-                                                      size="small"
-                                                    >
-                                                      <StyledInlineSvg
-                                                        size="12px"
-                                                        src="icon-settings"
-                                                      >
-                                                        <InlineSvg
-                                                          className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
-                                                          size="12px"
-                                                          src="icon-settings"
-                                                        >
-                                                          <StyledSvg
-                                                            className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
-                                                            height="12px"
-                                                            viewBox={Object {}}
-                                                            width="12px"
-                                                          >
-                                                            <svg
-                                                              className="e12ma6z3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
-                                                              height="12px"
-                                                              viewBox={Object {}}
-                                                              width="12px"
-                                                            >
-                                                              <use
-                                                                href="#test"
-                                                                xlinkHref="#test"
-                                                              />
-                                                            </svg>
-                                                          </StyledSvg>
-                                                        </InlineSvg>
-                                                      </StyledInlineSvg>
-                                                    </span>
-                                                  </Component>
-                                                </Icon>
-                                                Settings
-                                              </span>
-                                            </Component>
-                                          </ButtonLabel>
-                                        </a>
-                                      </Link>
-                                    </ForwardRef>
-                                  </StyledButton>
-                                </Button>
-                              </div>
-                            </Base>
-                          </Box>
                         </div>
                       </Base>
                     </PanelItem>
diff --git a/tests/js/spec/views/stream/createSavedSearchButton.spec.jsx b/tests/js/spec/views/stream/createSavedSearchButton.spec.jsx
index 0adf6dcc1d..f303bad043 100644
--- a/tests/js/spec/views/stream/createSavedSearchButton.spec.jsx
+++ b/tests/js/spec/views/stream/createSavedSearchButton.spec.jsx
@@ -8,7 +8,6 @@ describe('CreateSavedSearchButton', function() {
 
   beforeEach(function() {
     organization = TestStubs.Organization({
-      features: ['sentry10'],
       access: ['org:write'],
     });
     wrapper = mount(
@@ -80,25 +79,23 @@ describe('CreateSavedSearchButton', function() {
       );
     });
 
-    it('hides button if no feature', function() {
+    it('shows button by default', function() {
       const orgWithoutFeature = TestStubs.Organization({
-        features: [],
         access: ['org:write'],
       });
       wrapper.setProps({organization: orgWithoutFeature});
 
-      const button = wrapper.find('StyledButton');
-      expect(button).toHaveLength(0);
+      const button = wrapper.find('button[aria-label="Add to organization filter list"]');
+      expect(button).toHaveLength(1);
     });
 
     it('hides button if no access', function() {
       const orgWithoutAccess = TestStubs.Organization({
-        features: ['sentry10'],
         access: ['org:read'],
       });
       wrapper.setProps({organization: orgWithoutAccess});
 
-      const button = wrapper.find('StyledButton');
+      const button = wrapper.find('button[aria-label="Add to organization filter list"]');
       expect(button).toHaveLength(0);
     });
   });
diff --git a/tests/js/spec/views/stream/searchBar.spec.jsx b/tests/js/spec/views/stream/searchBar.spec.jsx
index a0a24a2871..9e1c0ed991 100644
--- a/tests/js/spec/views/stream/searchBar.spec.jsx
+++ b/tests/js/spec/views/stream/searchBar.spec.jsx
@@ -18,7 +18,9 @@ describe('SearchBar', function() {
     TagStore.onLoadTagsSuccess(TestStubs.Tags());
     supportedTags = TagStore.getAllTags();
 
-    options = TestStubs.routerContext([{organization: {id: '123', features: []}}]);
+    options = TestStubs.routerContext([
+      {organization: {id: '123', access: [], features: []}},
+    ]);
 
     tagValuePromise = Promise.resolve([]);
 
@@ -150,32 +152,13 @@ describe('SearchBar', function() {
         })
       );
     });
-    it('does not query for recent searches if `displayRecentSearches` is `false`', async function() {
-      const props = {
-        orgId: 'org-slug',
-        query: 'timesSeen:',
-        tagValueLoader: () => {},
-        recentSearchType: 0,
-        displayRecentSearches: false,
-        supportedTags,
-      };
-      jest.useRealTimers();
-      const wrapper = mount(<SearchBar {...props} />, options);
-
-      wrapper.find('input').simulate('change', {target: {value: 'is:'}});
 
-      await tick();
-      wrapper.update();
-
-      expect(recentSearchMock).not.toHaveBeenCalled();
-    });
-
-    it('queries for recent searches if `displayRecentSearches` is `true`', async function() {
+    it('queries for recent searches', async function() {
       const props = {
         orgId: 'org-slug',
         query: 'timesSeen:',
         tagValueLoader: () => {},
-        recentSearchType: 0,
+        savedSearchType: 0,
         displayRecentSearches: true,
         supportedTags,
       };
@@ -203,7 +186,7 @@ describe('SearchBar', function() {
         orgId: 'org-slug',
         query: 'timesSeen:',
         tagValueLoader: () => {},
-        recentSearchType: 0,
+        savedSearchType: 0,
         displayRecentSearches: true,
         supportedTags,
       };
@@ -238,7 +221,7 @@ describe('SearchBar', function() {
     let pinSearch;
     let unpinSearch;
     const {organization, routerContext} = initializeOrg({
-      organization: {features: ['sentry10']},
+      organization: {access: [], features: []},
     });
 
     beforeEach(function() {
@@ -260,7 +243,7 @@ describe('SearchBar', function() {
       });
     });
 
-    it('does not have pin icon without sentry10 featureflag', function() {
+    it('has pin icon', function() {
       const props = {
         orgId: organization.slug,
         query: 'url:"fu"',
@@ -271,13 +254,6 @@ describe('SearchBar', function() {
       };
       const searchBar = mount(<SearchBar {...props} />, routerContext);
       expect(searchBar.find('PinIcon')).toHaveLength(1);
-
-      searchBar.setProps({
-        organization: TestStubs.Organization({features: []}),
-      });
-
-      searchBar.update();
-      expect(searchBar.find('PinIcon')).toHaveLength(0);
     });
 
     it('pins a search from the searchbar', function() {
