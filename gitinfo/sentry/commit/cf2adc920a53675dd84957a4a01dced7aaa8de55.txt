commit cf2adc920a53675dd84957a4a01dced7aaa8de55
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Mon Oct 9 09:57:54 2017 -0500

    ref: Drop GroupTagValue sorts on times_seen (#6274)
    
    In preperation for "Tags 2.0" this removes some unused sorts on columns
    we hope to move into Redis (or elsewhere).
    
    GroupTagKeyValuesEndpoint 'freq' sort seems completely unused in the
    codebase. The only 'freq' sort that is used is against Groups
    themselves.
    
    get_unique_tags wasn't called anywhere.

diff --git a/src/sentry/api/endpoints/group_tagkey_values.py b/src/sentry/api/endpoints/group_tagkey_values.py
index 3ad6a12b35..862dd4c7b1 100644
--- a/src/sentry/api/endpoints/group_tagkey_values.py
+++ b/src/sentry/api/endpoints/group_tagkey_values.py
@@ -4,7 +4,7 @@ from sentry import tagstore
 from sentry.api.base import DocSection
 from sentry.api.bases.group import GroupEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
-from sentry.api.paginator import DateTimePaginator, OffsetPaginator, Paginator
+from sentry.api.paginator import DateTimePaginator, Paginator
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.tagvalue import UserTagValueSerializer
 from sentry.models import GroupTagValue, Group
@@ -55,9 +55,6 @@ class GroupTagKeyValuesEndpoint(GroupEndpoint):
         elif sort == 'age':
             order_by = '-first_seen'
             paginator_cls = DateTimePaginator
-        elif sort == 'freq':
-            order_by = '-times_seen'
-            paginator_cls = OffsetPaginator
         else:
             order_by = '-id'
             paginator_cls = Paginator
diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index a630e51d77..66d56091fd 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -324,23 +324,6 @@ class Group(Model):
                 self._oldest_event = None
         return self._oldest_event
 
-    def get_unique_tags(self, tag, since=None, order_by='-times_seen'):
-        # TODO(dcramer): this has zero test coverage and is a critical path
-        from sentry.models import GroupTagValue
-
-        queryset = GroupTagValue.objects.filter(
-            group=self,
-            key=tag,
-        )
-        if since:
-            queryset = queryset.filter(last_seen__gte=since)
-        return queryset.values_list(
-            'value',
-            'times_seen',
-            'first_seen',
-            'last_seen',
-        ).order_by(order_by)
-
     def get_tags(self):
         from sentry.models import GroupTagKey
         if not hasattr(self, '_tag_cache'):
