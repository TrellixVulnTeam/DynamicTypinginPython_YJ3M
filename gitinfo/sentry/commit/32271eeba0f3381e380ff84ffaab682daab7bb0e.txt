commit 32271eeba0f3381e380ff84ffaab682daab7bb0e
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 23 17:25:45 2016 -0800

    Add project list to org dashboard

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 9b98b99941..804c062f2f 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -133,7 +133,6 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
         return Response(data)
 
     @attach_scenarios([update_project_scenario])
-    @sudo_required
     def put(self, request, project):
         """
         Update a Project
diff --git a/src/sentry/static/sentry/app/stores/teamStore.jsx b/src/sentry/static/sentry/app/stores/teamStore.jsx
index 6c63ac5a37..9dcb96b7c8 100644
--- a/src/sentry/static/sentry/app/stores/teamStore.jsx
+++ b/src/sentry/static/sentry/app/stores/teamStore.jsx
@@ -14,7 +14,33 @@ const TeamStore = Reflux.createStore({
 
   loadInitialData(items) {
     this.items = items;
-    this.trigger(this.items, 'initial');
+    this.trigger(new Set(items.map(item => item.id)));
+  },
+
+  add(items) {
+    if (!items instanceof Array) {
+      items = [items];
+    }
+
+    let itemsById = {};
+    let itemIds = new Set();
+    items.forEach((item) => {
+      itemsById[item.id] = item;
+      itemIds.add(item.id);
+    });
+
+    items.forEach((item, idx) => {
+      if (itemsById[item.id]) {
+        this.items[idx] = jQuery.extend(true, {}, item, itemsById[item.id]);
+        delete itemsById[item.id];
+      }
+    });
+
+    for (let itemId in itemsById) {
+      this.items.push(itemsById[itemId]);
+    }
+
+    this.trigger(itemIds);
   },
 
   onUpdateSuccess(changeId, itemId, response) {
@@ -27,7 +53,7 @@ const TeamStore = Reflux.createStore({
     } else {
       $.extend(true, item, response);
     }
-    this.trigger(this.items, 'update');
+    this.trigger(new Set([itemId]));
   },
 
   getById(id) {
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
index 885ad4936f..e18efd7921 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
@@ -5,7 +5,9 @@ import ActivityFeed from '../components/activity/feed';
 import GroupStore from '../stores/groupStore';
 import IssueList from '../components/issueList';
 import OrganizationHomeContainer from '../components/organizations/homeContainer';
+import OrganizationState from '../mixins/organizationState';
 import {t} from '../locale';
+import {sortArray} from '../utils';
 
 const AssignedIssues = React.createClass({
   propTypes: {
@@ -62,6 +64,51 @@ const NewIssues = React.createClass({
   },
 });
 
+const ProjectList = React.createClass({
+  mixins: [OrganizationState],
+
+  getDefaultProps() {
+    return {
+      maxProjects: 5,
+    };
+  },
+
+  render() {
+    let org = this.getOrganization();
+    let maxProjects = this.props.maxProjects;
+    let projectList = [];
+    org.teams.forEach((team) => {
+      team.projects.forEach((project) => {
+        projectList.push(project);
+      });
+    });
+
+    projectList = sortArray(projectList, (item) => {
+      return [!item.isBookmarked, item.name];
+    });
+
+    return (
+      <div>
+        {projectList.length > maxProjects &&
+          <div className="pull-right">
+            <Link className="btn btn-sm btn-default"
+                  to={`/{$org.slug}/`}>View All</Link>
+          </div>
+        }
+        <h6 className="nav-header">Projects</h6>
+        <ul className="nav nav-stacked">
+          {projectList.slice(0, maxProjects).map((project) => {
+            return (
+              <li key={project.id}>
+                <Link to={`/${org.slug}/${project.slug}/`}>{project.name}</Link>
+              </li>
+            );
+          })}
+        </ul>
+      </div>
+    );
+  },
+});
 
 const Activity = React.createClass({
 
@@ -103,6 +150,7 @@ const OrganizationDashboard = React.createClass({
             <NewIssues {...this.props} />
           </div>
           <div className="col-md-4">
+            <ProjectList {...this.props} />
             <Activity {...this.props} />
           </div>
         </div>
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
index fbd52458a8..9a104eb864 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
@@ -94,6 +94,18 @@ const ExpandedTeamList = React.createClass({
     );
   },
 
+  toggleBookmark(project) {
+    let orgSlug = this.props.organization.slug;
+    // TODO(dcramer): we have no great way to populate changes to projects
+    // currently
+    this.api.request(`/projects/${orgSlug}/${project.slug}/`, {
+      method: 'PUT',
+      data: {
+        isBookmarked: !project.isBookmarked,
+      },
+    });
+  },
+
   renderProject(project) {
     let org = this.props.organization;
     let projectStats = this.props.projectStats;
@@ -105,7 +117,12 @@ const ExpandedTeamList = React.createClass({
     }
 
     return (
-      <tr key={project.id}>
+      <tr key={project.id} className={project.isBookmarked && 'isBookmarked'}>
+        <td>
+          <a onClick={this.toggleBookmark.bind(this, project)}>
+            <span className="icon-bookmark" />
+          </a>
+        </td>
         <td>
           <h5>
             <Link to={`/${org.slug}/${project.slug}/`}>
diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
index b8468c8b53..0684ad2aa8 100644
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectDetails.jsx
@@ -64,7 +64,9 @@ const ProjectDetails = React.createClass({
     this.setState(this.getInitialState(), this.fetchData);
   },
 
-  onTeamChange() {
+  onTeamChange(itemIds) {
+    if (!this.state.team) return;
+    if (!itemIds.has(this.state.team.id)) return;
     this.fetchData();
   },
 
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index 1241de614f..d0abba7441 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -245,6 +245,10 @@ table.project-list {
       width: 150px;
 
       &:first-child {
+        width: 16px;
+      }
+
+      &:nth-child(2) {
         width: auto;
       }
 
