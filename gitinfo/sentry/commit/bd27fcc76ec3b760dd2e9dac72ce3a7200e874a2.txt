commit bd27fcc76ec3b760dd2e9dac72ce3a7200e874a2
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Mar 5 19:27:16 2015 -0800

    Expand Release API
    
    - Add release file details endpoint
    - Switch IDs to use versions
    - Move under project scope

diff --git a/src/sentry/api/endpoints/release_details.py b/src/sentry/api/endpoints/release_details.py
index b839b45037..eaef4a33ea 100644
--- a/src/sentry/api/endpoints/release_details.py
+++ b/src/sentry/api/endpoints/release_details.py
@@ -2,18 +2,16 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
-from sentry.api.base import DocSection, Endpoint
-from sentry.api.bases.project import ProjectPermission
+from sentry.api.base import DocSection
+from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.serializers import serialize
 from sentry.models import Release
 
 
-class ReleaseDetailsEndpoint(Endpoint):
+class ReleaseDetailsEndpoint(ProjectEndpoint):
     doc_section = DocSection.RELEASES
 
-    permission_classes = (ProjectPermission,)
-
-    def get(self, request, release_id):
+    def get(self, request, project, version):
         """
         Retrieve a release
 
@@ -22,8 +20,9 @@ class ReleaseDetailsEndpoint(Endpoint):
             {method} {path}
 
         """
-        release = Release.objects.get(id=release_id)
-
-        self.check_object_permissions(request, release.project)
+        release = Release.objects.get(
+            project=project,
+            version=version,
+        )
 
         return Response(serialize(release, request.user))
diff --git a/src/sentry/api/endpoints/release_file_details.py b/src/sentry/api/endpoints/release_file_details.py
new file mode 100644
index 0000000000..dc8af875fa
--- /dev/null
+++ b/src/sentry/api/endpoints/release_file_details.py
@@ -0,0 +1,32 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.base import DocSection
+from sentry.api.bases.project import ProjectEndpoint
+from sentry.api.serializers import serialize
+from sentry.models import Release, ReleaseFile
+
+
+class ReleaseFileDetailsEndpoint(ProjectEndpoint):
+    doc_section = DocSection.RELEASES
+
+    def get(self, request, project, version, file_id):
+        """
+        Retrieve a file
+
+        Return details on an individual file within a release.
+
+            {method} {path}
+
+        """
+        release = Release.objects.get(
+            project=project,
+            version=version,
+        )
+        releasefile = ReleaseFile.objects.get(
+            release=release,
+            id=file_id,
+        )
+
+        return Response(serialize(releasefile, request.user))
diff --git a/src/sentry/api/endpoints/release_files.py b/src/sentry/api/endpoints/release_files.py
index 1cdab37ebc..0192060264 100644
--- a/src/sentry/api/endpoints/release_files.py
+++ b/src/sentry/api/endpoints/release_files.py
@@ -4,8 +4,8 @@ from rest_framework.negotiation import DefaultContentNegotiation
 from rest_framework.parsers import FormParser, MultiPartParser
 from rest_framework.response import Response
 
-from sentry.api.base import DocSection, Endpoint
-from sentry.api.bases.project import ProjectPermission
+from sentry.api.base import DocSection
+from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.serializers import serialize
 from sentry.models import File, Release, ReleaseFile
 
@@ -23,13 +23,12 @@ class ConditionalContentNegotiation(DefaultContentNegotiation):
         )
 
 
-class ReleaseFilesEndpoint(Endpoint):
+class ReleaseFilesEndpoint(ProjectEndpoint):
     doc_section = DocSection.RELEASES
 
     content_negotiation_class = ConditionalContentNegotiation
-    permission_classes = (ProjectPermission,)
 
-    def get(self, request, release_id):
+    def get(self, request, project, version):
         """
         List a release's files
 
@@ -38,9 +37,10 @@ class ReleaseFilesEndpoint(Endpoint):
             {method} {path}
 
         """
-        release = Release.objects.get(id=release_id)
-
-        self.check_object_permissions(request, release.project)
+        release = Release.objects.get(
+            project=project,
+            version=version,
+        )
 
         file_list = list(ReleaseFile.objects.filter(
             release=release,
@@ -48,7 +48,7 @@ class ReleaseFilesEndpoint(Endpoint):
 
         return Response(serialize(file_list, request.user))
 
-    def post(self, request, release_id):
+    def post(self, request, project, version):
         """
         Upload a new file
 
@@ -66,9 +66,10 @@ class ReleaseFilesEndpoint(Endpoint):
         file will be referenced as. For example, in the case of JavaScript you
         might specify the full web URI.
         """
-        release = Release.objects.get(id=release_id)
-
-        self.check_object_permissions(request, release.project)
+        release = Release.objects.get(
+            project=project,
+            version=version,
+        )
 
         if 'file' not in request.FILES:
             return Response(status=400)
diff --git a/src/sentry/api/serializers/models/release.py b/src/sentry/api/serializers/models/release.py
index 8e911eca9a..a6317a3471 100644
--- a/src/sentry/api/serializers/models/release.py
+++ b/src/sentry/api/serializers/models/release.py
@@ -8,7 +8,6 @@ from sentry.models import Release
 class ReleaseSerializer(Serializer):
     def serialize(self, obj, attrs, user):
         d = {
-            'id': str(obj.id),
             'version': obj.version,
             'dateCreated': obj.date_added,
         }
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index fddbd2dd28..523756d684 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -31,6 +31,7 @@ from .endpoints.project_tagkey_details import ProjectTagKeyDetailsEndpoint
 from .endpoints.project_tagkey_values import ProjectTagKeyValuesEndpoint
 from .endpoints.release_details import ReleaseDetailsEndpoint
 from .endpoints.release_files import ReleaseFilesEndpoint
+from .endpoints.release_file_details import ReleaseFileDetailsEndpoint
 from .endpoints.team_details import TeamDetailsEndpoint
 from .endpoints.team_groups_new import TeamGroupsNewEndpoint
 from .endpoints.team_groups_trending import TeamGroupsTrendingEndpoint
@@ -104,6 +105,15 @@ urlpatterns = patterns(
     url(r'^projects/(?P<project_id>\d+)/releases/$',
         ProjectReleasesEndpoint.as_view(),
         name='sentry-api-0-project-releases'),
+    url(r'^projects/(?P<project_id>\d+)/releases/(?P<version>[^/]+)/$',
+        ReleaseDetailsEndpoint.as_view(),
+        name='sentry-api-0-release-details'),
+    url(r'^projects/(?P<project_id>\d+)/releases/(?P<version>[^/]+)/files/$',
+        ReleaseFilesEndpoint.as_view(),
+        name='sentry-api-0-release-files'),
+    url(r'^projects/(?P<project_id>\d+)/releases/(?P<version>[^/]+)/files/(?P<file_id>\d+)/$',
+        ReleaseFileDetailsEndpoint.as_view(),
+        name='sentry-api-0-release-file-details'),
     url(r'^projects/(?P<project_id>\d+)/stats/$',
         ProjectStatsEndpoint.as_view(),
         name='sentry-api-0-project-stats'),
@@ -114,14 +124,6 @@ urlpatterns = patterns(
         ProjectTagKeyValuesEndpoint.as_view(),
         name='sentry-api-0-project-tagkey-values'),
 
-    # Releases
-    url(r'^releases/(?P<release_id>\d+)/$',
-        ReleaseDetailsEndpoint.as_view(),
-        name='sentry-api-0-release-details'),
-    url(r'^releases/(?P<release_id>\d+)/files/$',
-        ReleaseFilesEndpoint.as_view(),
-        name='sentry-api-0-release-files'),
-
     # Groups
     url(r'^groups/(?P<group_id>\d+)/$',
         GroupDetailsEndpoint.as_view(),
diff --git a/tests/sentry/api/endpoints/test_project_releases.py b/tests/sentry/api/endpoints/test_project_releases.py
index f327fc0e7f..29fc3910ff 100644
--- a/tests/sentry/api/endpoints/test_project_releases.py
+++ b/tests/sentry/api/endpoints/test_project_releases.py
@@ -37,8 +37,8 @@ class ProjectReleaseListTest(APITestCase):
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 2
-        assert response.data[0]['id'] == str(release2.id)
-        assert response.data[1]['id'] == str(release1.id)
+        assert response.data[0]['version'] == release2.version
+        assert response.data[1]['version'] == release1.version
 
 
 class ProjectReleaseCreateTest(APITestCase):
@@ -56,8 +56,9 @@ class ProjectReleaseCreateTest(APITestCase):
         })
 
         assert response.status_code == 201, response.content
-        assert response.data['id']
+        assert response.data['version']
 
-        release = Release.objects.get(id=response.data['id'])
-        assert release.version == 'abcdef'
-        assert release.project == project
+        assert Release.objects.filter(
+            project=project,
+            version=response.data['version'],
+        ).exists()
diff --git a/tests/sentry/api/endpoints/test_release_details.py b/tests/sentry/api/endpoints/test_release_details.py
index 567a1d00ff..53073723f1 100644
--- a/tests/sentry/api/endpoints/test_release_details.py
+++ b/tests/sentry/api/endpoints/test_release_details.py
@@ -17,9 +17,10 @@ class ReleaseDetailsTest(APITestCase):
         )
 
         url = reverse('sentry-api-0-release-details', kwargs={
-            'release_id': release.id,
+            'project_id': project.id,
+            'version': release.version,
         })
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
-        assert response.data['id'] == str(release.id)
+        assert response.data['version'] == release.version
diff --git a/tests/sentry/api/endpoints/test_release_file_details.py b/tests/sentry/api/endpoints/test_release_file_details.py
new file mode 100644
index 0000000000..7191d71368
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_release_file_details.py
@@ -0,0 +1,40 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import File, Release, ReleaseFile
+from sentry.testutils import APITestCase
+
+
+class ReleaseFileDetailsTest(APITestCase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project(name='foo')
+
+        release = Release.objects.create(
+            project=project,
+            version='1',
+        )
+
+        releasefile = ReleaseFile.objects.create(
+            project=project,
+            release=release,
+            file=File.objects.create(
+                path='http://example.com',
+                name='application.js',
+                type='source',
+            ),
+            name='http://example.com/application.js'
+        )
+
+        url = reverse('sentry-api-0-release-file-details', kwargs={
+            'project_id': project.id,
+            'version': release.version,
+            'file_id': releasefile.id,
+        })
+
+        response = self.client.get(url)
+
+        assert response.status_code == 200, response.content
+        assert response.data['id'] == str(releasefile.id)
diff --git a/tests/sentry/api/endpoints/test_release_files.py b/tests/sentry/api/endpoints/test_release_files.py
index 64e10882e9..23d287b0f4 100644
--- a/tests/sentry/api/endpoints/test_release_files.py
+++ b/tests/sentry/api/endpoints/test_release_files.py
@@ -28,7 +28,8 @@ class ReleaseFilesListTest(APITestCase):
         )
 
         url = reverse('sentry-api-0-release-files', kwargs={
-            'release_id': release.id,
+            'project_id': project.id,
+            'version': release.version,
         })
 
         self.login_as(user=self.user)
@@ -50,7 +51,8 @@ class ReleaseFileCreateTest(APITestCase):
         )
 
         url = reverse('sentry-api-0-release-files', kwargs={
-            'release_id': release.id,
+            'project_id': project.id,
+            'version': release.version,
         })
 
         self.login_as(user=self.user)
