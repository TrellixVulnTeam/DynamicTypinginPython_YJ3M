commit c5b837c74e51419a31fc37e70b35cb3f616f32ec
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Feb 15 16:10:58 2018 -0800

    feat(ui): Add password change forms + tests (#7211)

diff --git a/src/sentry/static/sentry/app/data/forms/accountPassword.jsx b/src/sentry/static/sentry/app/data/forms/accountPassword.jsx
new file mode 100644
index 0000000000..acf07b656d
--- /dev/null
+++ b/src/sentry/static/sentry/app/data/forms/accountPassword.jsx
@@ -0,0 +1,61 @@
+const getUserIsNotManaged = ({user}) => !user.isManaged;
+
+const formGroups = [
+  {
+    // Form "section"/"panel"
+    title: 'Password',
+    fields: [
+      {
+        name: 'password',
+        type: 'secret',
+
+        autoComplete: 'current-password',
+        label: 'Current Password',
+        placeholder: '',
+        help: 'Your current password',
+        visible: getUserIsNotManaged,
+        required: true,
+      },
+      {
+        name: 'passwordNew',
+        type: 'secret',
+
+        autoComplete: 'new-password',
+        label: 'New Password',
+        placeholder: '',
+        help: '',
+        required: true,
+        visible: getUserIsNotManaged,
+        validate: ({id, form}) => {
+          if (form[id] !== form.passwordVerify) {
+            return [[id, '']];
+          }
+
+          return [];
+        },
+      },
+      {
+        name: 'passwordVerify',
+        type: 'secret',
+
+        autoComplete: 'new-password',
+        label: 'Verify New Password',
+        placeholder: '',
+        help: 'Verify your new password',
+        required: true,
+        visible: getUserIsNotManaged,
+        validate: ({id, form}) => {
+          // If password is set, and passwords don't match, then return an error
+          if (form.passwordNew && form.passwordNew !== form[id]) {
+            return [[id, 'Passwords do not match']];
+          }
+
+          return [];
+        },
+      },
+    ],
+  },
+];
+
+export const route = '/settings/account/security/';
+export default formGroups;
diff --git a/src/sentry/static/sentry/app/views/inviteMember/inviteMember.jsx b/src/sentry/static/sentry/app/views/inviteMember/inviteMember.jsx
index 4d3d79e8f2..b1bbefe371 100644
--- a/src/sentry/static/sentry/app/views/inviteMember/inviteMember.jsx
+++ b/src/sentry/static/sentry/app/views/inviteMember/inviteMember.jsx
@@ -141,7 +141,7 @@ const InviteMember = createReactClass({
           role: selectedRole,
         },
         success: () => {
-          // TODO(billy): Use SettingsIndicator when these views only exist in Settings area
+          // TODO(billy): Use indicator when these views only exist in Settings area
           AlertActions.addAlert({
             message: `Added ${email}`,
             type: 'success',
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityDetails.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityDetails.jsx
index 97978bceb0..1259ee7608 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityDetails.jsx
@@ -106,6 +106,10 @@ class AccountSecurityDetails extends AsyncView {
     );
   };
 
+  handleRemoveU2fDevice = () => {
+    // TODO(billy): Implement me
+  };
+
   handleRegenerateBackupCodes = () => {
     this.setState({loading: true}, () =>
       this.api
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx
index 349651df20..ba7750772b 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx
@@ -217,7 +217,7 @@ class AccountSecurityEnroll extends AsyncView {
 
     let data = {
       ...this._form,
-      ...((dataModel && dataModel.toJSON()) || {}),
+      ...(dataModel || {}),
       secret: authenticator.secret,
     };
 
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx
index 43b5dbd9c4..ac9a137b08 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx
@@ -18,6 +18,7 @@ import PanelItem from '../../components/panelItem';
 import SettingsPageHeader from '../../components/settingsPageHeader';
 import TextBlock from '../../components/text/textBlock';
 import RemoveConfirm from './components/removeConfirm';
+import PasswordForm from '../passwordForm';
 
 const ENDPOINT = '/users/me/authenticators/';
 
@@ -59,6 +60,9 @@ class AccountSecurity extends AsyncView {
     return (
       <div>
         <SettingsPageHeader title="Security" />
+
+        <PasswordForm />
+
         <Panel>
           <PanelHeader>
             <Box>{t('Two Factor Authentication')}</Box>
diff --git a/src/sentry/static/sentry/app/views/settings/account/passwordForm.jsx b/src/sentry/static/sentry/app/views/settings/account/passwordForm.jsx
new file mode 100644
index 0000000000..eec844572e
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/account/passwordForm.jsx
@@ -0,0 +1,53 @@
+import React from 'react';
+
+import {addErrorMessage, addSuccessMessage} from '../../../actionCreators/indicator';
+import {t} from '../../../locale';
+import Form from '../components/forms/form';
+import Button from '../../../components/buttons/button';
+import ConfigStore from '../../../stores/configStore';
+import JsonForm from '../components/forms/jsonForm';
+import PanelItem from '../components/panelItem';
+import accountPasswordFields from '../../../data/forms/accountPassword';
+
+const ENDPOINT = '/users/me/password/';
+
+class PasswordForm extends React.Component {
+  handleSubmitSuccess = (change, model, id) => {
+    // Reset form on success
+    model.resetForm();
+    addSuccessMessage('Password has been changed');
+  };
+
+  handleSubmitError = (resp, model, id) => {
+    addErrorMessage('Error changing password');
+  };
+
+  render() {
+    let user = ConfigStore.get('user');
+    return (
+      <Form
+        apiMethod="PUT"
+        apiEndpoint={ENDPOINT}
+        initialData={{}}
+        onSubmitSuccess={this.handleSubmitSuccess}
+        onSubmitError={this.handleSubmitError}
+        hideFooter
+      >
+        <JsonForm
+          location={this.props.location}
+          forms={accountPasswordFields}
+          additionalFieldProps={{user}}
+          renderFooter={({title, fields}) => (
+            <PanelItem justify="flex-end">
+              <Button type="submit" priority="primary">
+                {t('Change password')}
+              </Button>
+            </PanelItem>
+          )}
+        />
+      </Form>
+    );
+  }
+}
+
+export default PasswordForm;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/apiForm.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/apiForm.jsx
index 73ece3fa5f..d7c1751045 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/apiForm.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/apiForm.jsx
@@ -29,13 +29,13 @@ export default class ApiForm extends React.Component {
     this.api.request(this.props.apiEndpoint, {
       method: this.props.apiMethod,
       data,
-      success: result => {
+      success: (...args) => {
         IndicatorStore.remove(loadingIndicator);
-        onSuccess(result);
+        onSuccess(...args);
       },
-      error: error => {
+      error: (...args) => {
         IndicatorStore.remove(loadingIndicator);
-        onError(error);
+        onError(...args);
       },
     });
   };
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
index adc16afdf0..f3f95ffad5 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
@@ -38,7 +38,6 @@ export default class Form extends React.Component {
     requireChanges: false,
     allowUndo: false,
     saveOnBlur: false,
-    onSubmit: () => {},
     onSubmitSuccess: () => {},
     onSubmitError: () => {},
   };
@@ -93,7 +92,11 @@ export default class Form extends React.Component {
       return;
     }
 
-    this.props.onSubmit(this.model.getData(), this.onSubmitSuccess, this.onSubmitError);
+    if (this.props.onSubmit) {
+      this.props.onSubmit(this.model.getData(), this.onSubmitSuccess, this.onSubmitError);
+    } else {
+      this.model.saveForm();
+    }
   };
 
   onSubmitSuccess = data => {
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
index d4fb0fe922..16b624301e 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
@@ -295,7 +295,9 @@ class FormField extends React.Component {
                         onKeyDown: this.handleKeyDown,
                         onChange: this.handleChange,
                         onBlur: this.handleBlur,
-                        value,
+                        // Fixes react warnings about input switching from controlled to uncontrolled
+                        // So force to empty string for null values
+                        value: value === null ? '' : value,
                         error,
                         disabled: isDisabled,
                       }}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/jsonForm.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/jsonForm.jsx
index ba6d1b8107..4735b95755 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/jsonForm.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/jsonForm.jsx
@@ -23,6 +23,7 @@ class JsonForm extends React.Component {
     ).isRequired,
     access: PropTypes.object,
     additionalFieldProps: PropTypes.object,
+    renderFooter: PropTypes.func,
   };
 
   static defaultProps = {
@@ -66,10 +67,11 @@ class JsonForm extends React.Component {
   }
 
   render() {
-    let {forms, access, additionalFieldProps, ...otherProps} = this.props;
+    let {forms, access, additionalFieldProps, renderFooter, ...otherProps} = this.props;
+    let shouldRenderFooter = typeof renderFooter === 'function';
 
     return (
-      <Box>
+      <Box {...otherProps}>
         {forms.map(({title, fields}) => {
           return (
             <Panel key={title} id={title}>
@@ -94,6 +96,7 @@ class JsonForm extends React.Component {
                     />
                   );
                 })}
+                {shouldRenderFooter && renderFooter({title, fields})}
               </PanelBody>
             </Panel>
           );
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/model.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/model.jsx
index 01e44badf8..85b31b7ae5 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/model.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/model.jsx
@@ -65,12 +65,16 @@ class FormModel {
   reset() {
     this.api.clear();
     this.api = null;
+    this.fieldDescriptor.clear();
+    this.resetForm();
+  }
+
+  resetForm() {
     this.fields.clear();
     this.errors.clear();
     this.fieldState.clear();
     this.snapshots = [];
     this.initialData = {};
-    this.fieldDescriptor.clear();
   }
 
   /**
@@ -167,6 +171,36 @@ class FormModel {
     return this.fields.get(id);
   }
 
+  getTransformedValue(id) {
+    let fieldDescriptor = this.fieldDescriptor.get(id);
+    let transformer =
+      typeof fieldDescriptor.getValue === 'function' ? fieldDescriptor.getValue : null;
+    let value = this.getValue(id);
+
+    return transformer ? transformer(value) : value;
+  }
+
+  /**
+   * Data represented in UI
+   */
+  getData() {
+    return this.fields.toJSON();
+  }
+
+  /**
+   * Form data that will be sent to API endpoint (i.e. after transforms)
+   */
+  getTransformedData() {
+    let form = this.getData();
+
+    return Object.keys(form)
+      .map(id => [id, this.getTransformedValue(id)])
+      .reduce((acc, [id, value]) => {
+        acc[id] = value;
+        return acc;
+      }, {});
+  }
+
   getError(id) {
     return this.errors.has(id) && this.errors.get(id);
   }
@@ -184,7 +218,7 @@ class FormModel {
 
     if (typeof validate === 'function') {
       // Returns "tuples" of [id, error string]
-      errors = validate({model: this, id, form: this.getData().toJSON()}) || [];
+      errors = validate({model: this, id, form: this.getData()}) || [];
     }
 
     errors
@@ -237,6 +271,54 @@ class FormModel {
     return true;
   }
 
+  /**
+   * Attempts to save entire form
+   */
+  @action
+  saveForm() {
+    // Represents state of current form
+    let form = this.getData();
+
+    let errors = [
+      // This only validates fields with values
+      ...(Object.keys(form).filter(id => !this.isValidField(id)) || []),
+      // Validate required fields
+      ...(Array.from(this.fieldDescriptor.keys()).filter(id => !this.isValidField(id)) ||
+        []),
+    ];
+
+    if (errors.length > 0) return null;
+
+    let saveSnapshot = this.createSnapshot();
+
+    let request = this.doApiRequest({
+      data: this.getTransformedData(),
+    });
+
+    request
+      .then(resp => {
+        // save snapshot
+        if (saveSnapshot) {
+          saveSnapshot();
+          saveSnapshot = null;
+        }
+
+        if (this.options.onSubmitSuccess) {
+          this.options.onSubmitSuccess(resp, this);
+        }
+      })
+      .catch((resp, ...args) => {
+        // should we revert field value to last known state?
+        saveSnapshot = null;
+        this.submitError(resp);
+        if (this.options.onSubmitError) {
+          this.options.onSubmitError(resp, this);
+        }
+      });
+
+    return request;
+  }
+
   /**
    * Saves a field with new value
    *
@@ -261,7 +343,6 @@ class FormModel {
 
     // shallow clone fields
     let saveSnapshot = this.createSnapshot();
-    let newValue = this.getValue(id);
 
     // Save field + value
     this.setSaving(id, true);
@@ -272,14 +353,10 @@ class FormModel {
     let getData =
       typeof fieldDescriptor.getData === 'function' ? fieldDescriptor.getData : a => a;
 
-    // Transform data before saving, this uses `getValue` defined when declaring the form
-    let serializer =
-      typeof fieldDescriptor.getValue === 'function' ? fieldDescriptor.getValue : a => a;
-
     let request = this.doApiRequest({
       data: getData(
-        {[id]: serializer(newValue)},
-        {model: this, id, form: this.getData().toJSON()}
+        {[id]: this.getTransformedValue(id)},
+        {model: this, id, form: this.getData()}
       ),
     });
 
@@ -401,15 +478,29 @@ class FormModel {
     this.setFieldState(id, FormState.SAVING, false);
   }
 
-  @action
-  getData() {
-    return this.fields;
-  }
-
   // TODO: More validations
   @action
   validate() {}
 
+  @action
+  handleErrorResponse({responseJSON: resp} = {}) {
+    if (!resp) return;
+
+    // Show resp msg from API endpoint if possible
+    Object.keys(resp).forEach(id => {
+      if (
+        id === 'non_field_errors' &&
+        Array.isArray(resp.non_field_errors) &&
+        resp.non_field_errors.length
+      ) {
+        addErrorMessage(resp.non_field_errors[0], 10000);
+      } else if (Array.isArray(resp[id]) && resp[id].length) {
+        // Just take first resp for now
+        this.setError(id, resp[id][0]);
+      }
+    });
+  }
+
   @action
   submitSuccess(data) {
     // update initial data
@@ -421,6 +512,7 @@ class FormModel {
   submitError(err) {
     this.formState = FormState.ERROR;
     this.formErrors = err.responseJSON;
+    this.handleErrorResponse(err);
   }
 }
 
diff --git a/src/sentry/static/sentry/app/views/settings/components/panelHeading.jsx b/src/sentry/static/sentry/app/views/settings/components/panelHeading.jsx
index 94ef8ca543..c5efe0bb25 100644
--- a/src/sentry/static/sentry/app/views/settings/components/panelHeading.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/panelHeading.jsx
@@ -1,9 +1,11 @@
 import styled from 'react-emotion';
 
-export default styled.div`
+const PanelHeading = styled.div`
   color: ${p => p.theme.gray3};
   font-size: 12px;
   font-weight: 600;
   text-transform: uppercase;
   margin-bottom: 20px;
 `;
+
+export default PanelHeading;
diff --git a/tests/js/spec/views/__snapshots__/accountEmails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/accountEmails.spec.jsx.snap
index 190dad1e86..6f109cb3b3 100644
--- a/tests/js/spec/views/__snapshots__/accountEmails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/accountEmails.spec.jsx.snap
@@ -48,7 +48,6 @@ exports[`AccountEmails renders with emails 1`] = `
       cancelLabel="Cancel"
       className="form-stacked"
       footerClass="form-actions align-right"
-      onSubmit={[Function]}
       onSubmitError={[Function]}
       onSubmitSuccess={[Function]}
       requireChanges={false}
diff --git a/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap b/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap
index fc00ce2c62..2885fb4cf5 100644
--- a/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap
@@ -265,7 +265,7 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                       <Component
                         className="glamor-19 glamor-16"
                       >
-                        <_default
+                        <PanelHeading
                           className="glamor-19 glamor-16"
                         >
                           <div
@@ -318,7 +318,7 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                               </Base>
                             </Flex>
                           </div>
-                        </_default>
+                        </PanelHeading>
                       </Component>
                     </StyledPanelHeading>
                   </div>
diff --git a/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap b/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
index 7ec6a1d89d..5f8c42b9ba 100644
--- a/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
@@ -437,7 +437,7 @@ exports[`ApiTokens renders with result 1`] = `
                       <Component
                         className="glamor-19 glamor-16"
                       >
-                        <_default
+                        <PanelHeading
                           className="glamor-19 glamor-16"
                         >
                           <div
@@ -475,7 +475,7 @@ exports[`ApiTokens renders with result 1`] = `
                               </Base>
                             </Flex>
                           </div>
-                        </_default>
+                        </PanelHeading>
                       </Component>
                     </StyledPanelHeading>
                   </div>
diff --git a/tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap
index 74ec51f3bd..1666486aa1 100644
--- a/tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap
@@ -343,7 +343,7 @@ exports[`OrganizationApiKeysList renders 1`] = `
                   <Component
                     className="glamor-23 glamor-20"
                   >
-                    <_default
+                    <PanelHeading
                       className="glamor-23 glamor-20"
                     >
                       <div
@@ -431,7 +431,7 @@ exports[`OrganizationApiKeysList renders 1`] = `
                           </Base>
                         </Flex>
                       </div>
-                    </_default>
+                    </PanelHeading>
                   </Component>
                 </StyledPanelHeading>
               </div>
diff --git a/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap
index 3163d1794d..aa106e7c9c 100644
--- a/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap
@@ -286,7 +286,7 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                       <Component
                         className="glamor-19 glamor-16"
                       >
-                        <_default
+                        <PanelHeading
                           className="glamor-19 glamor-16"
                         >
                           <div
@@ -375,7 +375,7 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                               </Base>
                             </Flex>
                           </div>
-                        </_default>
+                        </PanelHeading>
                       </Component>
                     </StyledPanelHeading>
                   </div>
@@ -1480,7 +1480,7 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                       <Component
                         className="glamor-19 glamor-16"
                       >
-                        <_default
+                        <PanelHeading
                           className="glamor-19 glamor-16"
                         >
                           <div
@@ -1569,7 +1569,7 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                               </Base>
                             </Flex>
                           </div>
-                        </_default>
+                        </PanelHeading>
                       </Component>
                     </StyledPanelHeading>
                   </div>
diff --git a/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
index 5ef7c1c90c..58f0718efe 100644
--- a/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
@@ -239,7 +239,7 @@ exports[`OrganizationProjectsView render() Should render the projects in the sto
                         <Component
                           className="glamor-9 glamor-6"
                         >
-                          <_default
+                          <PanelHeading
                             className="glamor-9 glamor-6"
                           >
                             <div
@@ -247,7 +247,7 @@ exports[`OrganizationProjectsView render() Should render the projects in the sto
                             >
                               Projects
                             </div>
-                          </_default>
+                          </PanelHeading>
                         </Component>
                       </StyledPanelHeading>
                     </div>
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index f3df9c8617..1eb12d6815 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -99,7 +99,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                   <Component
                     className="glamor-3 glamor-0"
                   >
-                    <_default
+                    <PanelHeading
                       className="glamor-3 glamor-0"
                     >
                       <div
@@ -107,7 +107,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                       >
                         Associated Projects
                       </div>
-                    </_default>
+                    </PanelHeading>
                   </Component>
                 </StyledPanelHeading>
               </div>
@@ -141,7 +141,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                   <Component
                     className="glamor-3 glamor-0"
                   >
-                    <_default
+                    <PanelHeading
                       className="glamor-3 glamor-0"
                     >
                       <div
@@ -149,7 +149,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                       >
                         Other Projects
                       </div>
-                    </_default>
+                    </PanelHeading>
                   </Component>
                 </StyledPanelHeading>
               </div>
diff --git a/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
index c546ff75e4..6d0ea8f396 100644
--- a/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
@@ -227,7 +227,7 @@ exports[`ProjectDebugSymbols renders 1`] = `
                   <Component
                     className="glamor-11 glamor-8"
                   >
-                    <_default
+                    <PanelHeading
                       className="glamor-11 glamor-8"
                     >
                       <div
@@ -245,7 +245,7 @@ exports[`ProjectDebugSymbols renders 1`] = `
                           )
                         </small>
                       </div>
-                    </_default>
+                    </PanelHeading>
                   </Component>
                 </StyledPanelHeading>
               </div>
diff --git a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
index c60d89d86b..c4d2c0de10 100644
--- a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
@@ -242,7 +242,7 @@ exports[`ProjectEnvironments render active renders empty message 1`] = `
                   <Component
                     className="glamor-9 glamor-6"
                   >
-                    <_default
+                    <PanelHeading
                       className="glamor-9 glamor-6"
                     >
                       <div
@@ -250,7 +250,7 @@ exports[`ProjectEnvironments render active renders empty message 1`] = `
                       >
                         Active Environments
                       </div>
-                    </_default>
+                    </PanelHeading>
                   </Component>
                 </StyledPanelHeading>
               </div>
@@ -521,7 +521,7 @@ exports[`ProjectEnvironments render active renders environment list 1`] = `
                   <Component
                     className="glamor-9 glamor-6"
                   >
-                    <_default
+                    <PanelHeading
                       className="glamor-9 glamor-6"
                     >
                       <div
@@ -529,7 +529,7 @@ exports[`ProjectEnvironments render active renders environment list 1`] = `
                       >
                         Active Environments
                       </div>
-                    </_default>
+                    </PanelHeading>
                   </Component>
                 </StyledPanelHeading>
               </div>
@@ -930,7 +930,7 @@ exports[`ProjectEnvironments render hidden renders empty message 1`] = `
                   <Component
                     className="glamor-9 glamor-6"
                   >
-                    <_default
+                    <PanelHeading
                       className="glamor-9 glamor-6"
                     >
                       <div
@@ -938,7 +938,7 @@ exports[`ProjectEnvironments render hidden renders empty message 1`] = `
                       >
                         Hidden
                       </div>
-                    </_default>
+                    </PanelHeading>
                   </Component>
                 </StyledPanelHeading>
               </div>
@@ -1209,7 +1209,7 @@ exports[`ProjectEnvironments render hidden renders environment list 1`] = `
                   <Component
                     className="glamor-9 glamor-6"
                   >
-                    <_default
+                    <PanelHeading
                       className="glamor-9 glamor-6"
                     >
                       <div
@@ -1217,7 +1217,7 @@ exports[`ProjectEnvironments render hidden renders environment list 1`] = `
                       >
                         Hidden
                       </div>
-                    </_default>
+                    </PanelHeading>
                   </Component>
                 </StyledPanelHeading>
               </div>
diff --git a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
index 06bca3f670..1dbf5a8f8f 100644
--- a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
@@ -447,7 +447,7 @@ exports[`ProjectPluginDetails renders 1`] = `
                               <Component
                                 className="glamor-17 glamor-14"
                               >
-                                <_default
+                                <PanelHeading
                                   className="glamor-17 glamor-14"
                                 >
                                   <div
@@ -514,7 +514,7 @@ exports[`ProjectPluginDetails renders 1`] = `
                                       </Base>
                                     </Flex>
                                   </div>
-                                </_default>
+                                </PanelHeading>
                               </Component>
                             </StyledPanelHeading>
                           </div>
diff --git a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
index 2d22e22cf8..1ea16a7178 100644
--- a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
@@ -209,7 +209,7 @@ exports[`ProjectSavedSearches renders 1`] = `
                   <Component
                     className="glamor-21 glamor-18"
                   >
-                    <_default
+                    <PanelHeading
                       className="glamor-21 glamor-18"
                     >
                       <div
@@ -315,7 +315,7 @@ exports[`ProjectSavedSearches renders 1`] = `
                           </Base>
                         </Flex>
                       </div>
-                    </_default>
+                    </PanelHeading>
                   </Component>
                 </StyledPanelHeading>
               </div>
diff --git a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
index 4d0c6d003c..02b2b90c9d 100644
--- a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
@@ -221,7 +221,7 @@ exports[`ProjectTags renders 1`] = `
                       <Component
                         className="glamor-15 glamor-12"
                       >
-                        <_default
+                        <PanelHeading
                           className="glamor-15 glamor-12"
                         >
                           <div
@@ -254,7 +254,7 @@ exports[`ProjectTags renders 1`] = `
                               </Base>
                             </Flex>
                           </div>
-                        </_default>
+                        </PanelHeading>
                       </Component>
                     </StyledPanelHeading>
                   </div>
diff --git a/tests/js/spec/views/accountSecurity.spec.jsx b/tests/js/spec/views/accountSecurity.spec.jsx
index 70c7c75c94..0d9cb022a9 100644
--- a/tests/js/spec/views/accountSecurity.spec.jsx
+++ b/tests/js/spec/views/accountSecurity.spec.jsx
@@ -135,4 +135,65 @@ describe('AccountSecurity', function() {
     ).toBe('View Codes');
     expect(wrapper.find('CircleIndicator').prop('enabled')).toBe(true);
   });
+
+  it('can change password', function() {
+    Client.addMockResponse({
+      url: ENDPOINT,
+      body: [TestStubs.Authenticators().Recovery({isEnrolled: false})],
+    });
+    let url = '/users/me/password/';
+    let mock = Client.addMockResponse({
+      url,
+      method: 'PUT',
+    });
+
+    let wrapper = mount(<AccountSecurity />, TestStubs.routerContext());
+
+    wrapper
+      .find('PasswordForm input[name="password"]')
+      .simulate('change', {target: {value: 'oldpassword'}});
+    wrapper
+      .find('PasswordForm input[name="passwordNew"]')
+      .simulate('change', {target: {value: 'newpassword'}});
+    wrapper
+      .find('PasswordForm input[name="passwordVerify"]')
+      .simulate('change', {target: {value: 'newpassword'}});
+    wrapper.find('PasswordForm form').simulate('submit');
+
+    expect(mock).toHaveBeenCalledWith(
+      url,
+      expect.objectContaining({
+        method: 'PUT',
+        data: {
+          password: 'oldpassword',
+          passwordNew: 'newpassword',
+          passwordVerify: 'newpassword',
+        },
+      })
+    );
+  });
+
+  it('requires current password to be entered', function() {
+    Client.addMockResponse({
+      url: ENDPOINT,
+      body: [TestStubs.Authenticators().Recovery({isEnrolled: false})],
+    });
+    let url = '/users/me/password/';
+    let mock = Client.addMockResponse({
+      url,
+      method: 'PUT',
+    });
+
+    let wrapper = mount(<AccountSecurity />, TestStubs.routerContext());
+
+    wrapper
+      .find('PasswordForm input[name="passwordNew"]')
+      .simulate('change', {target: {value: 'newpassword'}});
+    wrapper
+      .find('PasswordForm input[name="passwordVerify"]')
+      .simulate('change', {target: {value: 'newpassword'}});
+    wrapper.find('PasswordForm form').simulate('submit');
+
+    expect(mock).not.toHaveBeenCalled();
+  });
 });
diff --git a/tests/js/spec/views/passwordForm.spec.jsx b/tests/js/spec/views/passwordForm.spec.jsx
new file mode 100644
index 0000000000..e54317152e
--- /dev/null
+++ b/tests/js/spec/views/passwordForm.spec.jsx
@@ -0,0 +1,92 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import {Client} from 'app/api';
+import PasswordForm from 'app/views/settings/account/passwordForm';
+
+const ENDPOINT = '/users/me/password/';
+
+describe('PasswordForm', function() {
+  let wrapper;
+  let putMock;
+
+  beforeEach(function() {
+    Client.clearMockResponses();
+    putMock = Client.addMockResponse({
+      url: ENDPOINT,
+      method: 'PUT',
+    });
+    wrapper = mount(<PasswordForm />, {
+      context: {
+        router: {
+          ...TestStubs.router(),
+          params: {
+            authId: 15,
+          },
+        },
+      },
+    });
+  });
+
+  it('has 3 text inputs', function() {
+    expect(wrapper.find('input[type="password"]')).toHaveLength(3);
+  });
+
+  it('does not submit when any password field is empty', function() {
+    wrapper.find('input[name="password"]').simulate('change', {target: {value: 'test'}});
+    wrapper.find('form').simulate('submit');
+    expect(putMock).not.toHaveBeenCalled();
+
+    wrapper.find('input[name="password"]').simulate('change', {target: {value: ''}});
+    wrapper
+      .find('input[name="passwordNew"]')
+      .simulate('change', {target: {value: 'test'}});
+    wrapper
+      .find('input[name="passwordVerify"]')
+      .simulate('change', {target: {value: 'test'}});
+    wrapper.find('form').simulate('submit');
+    expect(putMock).not.toHaveBeenCalled();
+  });
+
+  it('does not submit when new passwords dont match', function() {
+    wrapper.find('input[name="password"]').simulate('change', {target: {value: 'test'}});
+    wrapper
+      .find('input[name="passwordNew"]')
+      .simulate('change', {target: {value: 'test'}});
+    wrapper
+      .find('input[name="passwordVerify"]')
+      .simulate('change', {target: {value: 'nottest'}});
+    wrapper.find('form').simulate('submit');
+    expect(putMock).not.toHaveBeenCalled();
+  });
+
+  it('calls API when all fields are validated and clears form on success', function(
+    done
+  ) {
+    wrapper.find('input[name="password"]').simulate('change', {target: {value: 'test'}});
+    wrapper
+      .find('input[name="passwordNew"]')
+      .simulate('change', {target: {value: 'nottest'}});
+    wrapper
+      .find('input[name="passwordVerify"]')
+      .simulate('change', {target: {value: 'nottest'}});
+    wrapper.find('form').simulate('submit');
+    expect(putMock).toHaveBeenCalledWith(
+      ENDPOINT,
+      expect.objectContaining({
+        method: 'PUT',
+        data: {
+          password: 'test',
+          passwordNew: 'nottest',
+          passwordVerify: 'nottest',
+        },
+      })
+    );
+
+    setTimeout(() => {
+      wrapper.update();
+      expect(wrapper.find('input[name="password"]').prop('value')).toBe('');
+      done();
+    }, 1);
+  });
+});
