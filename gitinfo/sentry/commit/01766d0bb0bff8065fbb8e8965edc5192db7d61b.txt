commit 01766d0bb0bff8065fbb8e8965edc5192db7d61b
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Jun 28 16:54:32 2016 +0200

    Add platform identifier to all frames

diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 84c9b1d7be..4eb97b5d8c 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -23,6 +23,7 @@ from sentry.interfaces.base import Interface, InterfaceValidationError
 from sentry.models import UserOption
 from sentry.utils.safe import trim, trim_dict
 from sentry.web.helpers import render_to_string
+from sentry.constants import VALID_PLATFORMS
 
 
 _ruby_anon_func = re.compile(r'_\d{2,}')
@@ -240,6 +241,8 @@ class Frame(Interface):
         if function == '?':
             function = None
 
+        platform = VALID_PLATFORMS.get(data.get('platform'))
+
         context_locals = data.get('vars') or {}
         if isinstance(context_locals, (list, tuple)):
             context_locals = dict(enumerate(context_locals))
@@ -279,6 +282,7 @@ class Frame(Interface):
         kwargs = {
             'abs_path': trim(abs_path, 256),
             'filename': trim(filename, 256),
+            'platform': platform,
             'module': trim(module, 256),
             'function': trim(function, 256),
             'package': trim(data.get('package'), 256),
@@ -446,6 +450,11 @@ class Frame(Interface):
         }).strip('\n')
 
     def get_culprit_string(self, platform=None):
+        # If this frame has a platform, we use it instead of the one that
+        # was passed in (as that one comes from the exception which might
+        # not necessarily be the same platform).
+        if self.platform is not None:
+            platform = self.platform
         if platform in ('objc', 'cocoa'):
             return '%s (%s)' % (
                 self.function or '?',
