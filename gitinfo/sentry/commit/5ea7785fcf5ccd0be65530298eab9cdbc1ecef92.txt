commit 5ea7785fcf5ccd0be65530298eab9cdbc1ecef92
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Oct 2 11:19:24 2018 -0700

    feat(ui): Use new forms for getsentry (#9415)
    
    Must go out with https://github.com/getsentry/getsentry/pull/2117

diff --git a/src/sentry/static/sentry/app/components/modals/createTeamModal.jsx b/src/sentry/static/sentry/app/components/modals/createTeamModal.jsx
index 977bdfa42a..75bdd2d6e4 100644
--- a/src/sentry/static/sentry/app/components/modals/createTeamModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/createTeamModal.jsx
@@ -44,7 +44,6 @@ class CreateTeamModal extends React.Component {
             {...props}
             onSubmit={this.handleSubmit}
             onSuccess={this.handleSuccess}
-            formProps={{footerClass: 'modal-footer'}}
           />
         </Body>
       </React.Fragment>
diff --git a/src/sentry/static/sentry/app/components/text.jsx b/src/sentry/static/sentry/app/components/text.jsx
index a0bafe96f2..d0ee5afab3 100644
--- a/src/sentry/static/sentry/app/components/text.jsx
+++ b/src/sentry/static/sentry/app/components/text.jsx
@@ -1,8 +1,21 @@
 import styled from 'react-emotion';
-import textStyles from '../styles/text';
+
+import space from 'app/styles/space';
+import textStyles from 'app/styles/text';
+import Panel from 'app/components/panels/panel';
 
 const Text = styled.div`
   ${textStyles};
+
+  /* stylelint-disable-next-line no-duplicate-selectors */
+  ${Panel} & {
+    padding-left: ${space(2)};
+    padding-right: ${space(2)};
+
+    &:first-child {
+      padding-top: ${space(2)};
+    }
+  }
 `;
 
 export default Text;
diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index 236b2c128f..aa5ff2bffc 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -83,16 +83,18 @@ export default {
     forms: {
       // we dont yet export all form field classes as they're not
       // all needed by sentry.io
-      ApiForm: require('app/components/forms/apiForm').default,
-      BooleanField: require('app/components/forms/booleanField').default,
-      DateTimeField: require('app/components/forms/dateTimeField').default,
-      EmailField: require('app/components/forms/emailField').default,
-      Form: require('app/components/forms/form').default,
-      RadioBooleanField: require('app/components/forms/radioBooleanField').default,
-      RangeField: require('app/components/forms/rangeField').default,
-      SelectField: require('app/components/forms/selectField').default,
-      TextField: require('app/components/forms/textField').default,
-      TextareaField: require('app/components/forms/textareaField').default,
+      ApiForm: require('app/views/settings/components/forms/apiForm').default,
+      BooleanField: require('app/views/settings/components/forms/booleanField').default,
+      DateTimeField: require('app/views/settings/components/forms/dateTimeField').default,
+      EmailField: require('app/views/settings/components/forms/emailField').default,
+      Form: require('app/views/settings/components/forms/form').default,
+      RadioBooleanField: require('app/views/settings/components/forms/radioBooleanField')
+        .default,
+      RadioGroupField: require('app/views/settings/components/forms/radioField').default,
+      RangeField: require('app/views/settings/components/forms/rangeField').default,
+      SelectField: require('app/views/settings/components/forms/selectField').default,
+      TextField: require('app/views/settings/components/forms/textField').default,
+      TextareaField: require('app/views/settings/components/forms/textareaField').default,
     },
     plugins: {
       add: plugins.add,
@@ -101,11 +103,14 @@ export default {
       DefaultIssuePlugin: plugins.DefaultIssuePlugin,
     },
 
+    Alert: require('app/components/alert').default,
     Alerts: require('app/components/alerts').default,
     AlertActions: require('app/actions/alertActions').default,
     AsyncComponent: require('app/components/asyncComponent').default,
     AsyncView: require('app/views/asyncView').default,
     Avatar: require('app/components/avatar').default,
+    addSuccessMessage: require('app/actionCreators/indicator').addSuccessMessage,
+    addErrorMessage: require('app/actionCreators/indicator').addErrorMessage,
     Button: require('app/components/button').default,
     mixins: {
       ApiMixin: require('app/mixins/apiMixin').default,
@@ -120,6 +125,7 @@ export default {
     DropdownLink: require('app/components/dropdownLink').default,
     DynamicWrapper: require('app/components/dynamicWrapper').default,
     ErrorBoundary: require('app/components/errorBoundary').default,
+    Field: require('app/views/settings/components/forms/field').default,
     Form: require('app/components/forms/form').default,
     FormState: require('app/components/forms/index').FormState,
     GuideAnchor: require('app/components/assistant/guideAnchor').default,
@@ -153,6 +159,7 @@ export default {
 
     Sidebar: require('app/components/sidebar').default,
     StackedBarChart: require('app/components/stackedBarChart').default,
+    Text: require('app/components/text').default,
     TextBlock: require('app/views/settings/components/text/textBlock').default,
     TimeSince: require('app/components/timeSince').default,
     TodoList: require('app/components/onboardingWizard/todos').default,
diff --git a/src/sentry/static/sentry/app/views/newsletterConsent.jsx b/src/sentry/static/sentry/app/views/newsletterConsent.jsx
index 1217c77127..a753fe7b57 100644
--- a/src/sentry/static/sentry/app/views/newsletterConsent.jsx
+++ b/src/sentry/static/sentry/app/views/newsletterConsent.jsx
@@ -39,6 +39,8 @@ export default createReactClass({
           submitLabel="Continue"
         >
           <RadioBooleanField
+            p={0}
+            inline={false}
             key="subscribed"
             name="subscribed"
             label="Email Updates"
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/controls/radioBoolean.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/controls/radioBoolean.jsx
new file mode 100644
index 0000000000..5230c40377
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/controls/radioBoolean.jsx
@@ -0,0 +1,90 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+class Option extends React.Component {
+  static propTypes = {
+    name: PropTypes.string,
+    label: PropTypes.node,
+    value: PropTypes.string,
+    checked: PropTypes.bool,
+    disabled: PropTypes.bool,
+    onChange: PropTypes.func,
+  };
+
+  handleChange = e => {
+    let {onChange} = this.props;
+    let value = e.target.value === 'true';
+
+    if (typeof onChange === 'function') {
+      onChange(value, e);
+    }
+  };
+  render() {
+    let {name, disabled, label, value, checked} = this.props;
+
+    return (
+      <div className="radio">
+        <label style={{fontWeight: 'normal'}}>
+          <input
+            type="radio"
+            value={value}
+            name={name}
+            checked={checked}
+            onChange={this.handleChange}
+            disabled={disabled}
+          />{' '}
+          {label}
+        </label>
+      </div>
+    );
+  }
+}
+
+export default class RadioBoolean extends React.Component {
+  static propTypes = {
+    disabled: PropTypes.bool,
+    name: PropTypes.string,
+    yesLabel: PropTypes.string.isRequired,
+    noLabel: PropTypes.string.isRequired,
+    value: PropTypes.bool,
+    yesFirst: PropTypes.bool,
+    onChange: PropTypes.func,
+  };
+
+  static defaultProps = {
+    yesLabel: 'Yes',
+    noLabel: 'No',
+    yesFirst: true,
+  };
+
+  render() {
+    let {disabled, yesFirst, yesLabel, noLabel, name, onChange, value} = this.props;
+    let yesOption = (
+      <Option
+        value="true"
+        checked={value === true}
+        name={name}
+        disabled={disabled}
+        label={yesLabel}
+        onChange={onChange}
+      />
+    );
+    let noOption = (
+      <Option
+        value="false"
+        checked={value === false}
+        name={name}
+        disabled={disabled}
+        label={noLabel}
+        onChange={onChange}
+      />
+    );
+
+    return (
+      <div>
+        {yesFirst ? yesOption : noOption}
+        {yesFirst ? noOption : yesOption}
+      </div>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/dateTimeField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/dateTimeField.jsx
new file mode 100644
index 0000000000..029ecad9d4
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/dateTimeField.jsx
@@ -0,0 +1,9 @@
+import React from 'react';
+
+import InputField from './inputField';
+
+export default class DateTimeField extends React.Component {
+  render() {
+    return <InputField {...this.props} type="datetime-local" />;
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/emailField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/emailField.jsx
new file mode 100644
index 0000000000..fdf4747154
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/emailField.jsx
@@ -0,0 +1,9 @@
+import React from 'react';
+
+import InputField from './inputField';
+
+export default class EmailField extends React.Component {
+  render() {
+    return <InputField {...this.props} type="email" />;
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx
index 5231e2f81d..2100a879c6 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx
@@ -62,6 +62,14 @@ const FieldWrapper = styled(p => <Flex {...p} />, {
   ${inlineStyle};
   ${highlightedStyle};
 
+  /* Better padding with form inside of a modal */
+  ${p =>
+    !p.hasControlState
+      ? `.modal-content & {
+      padding-right: 0;
+    }`
+      : ''};
+
   &:last-child {
     border-bottom: none;
     ${p => (p.stacked ? 'padding-bottom: 0' : '')};
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx
index 6b248c2972..f6dad1aba5 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx
@@ -1,14 +1,16 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import BooleanField from 'app/views/settings/components/forms/booleanField';
-import RangeField from 'app/views/settings/components/forms/rangeField';
-import SelectField from 'app/views/settings/components/forms/selectField';
-import TextField from 'app/views/settings/components/forms/textField';
-import TextareaField from 'app/views/settings/components/forms/textareaField';
-import RadioField from 'app/views/settings/components/forms/radioField';
-import InputField from 'app/views/settings/components/forms/inputField';
-import ChoiceMapper from 'app/views/settings/components/forms/choiceMapper';
+import BooleanField from './booleanField';
+import EmailField from './emailField';
+import NumberField from './numberField';
+import RangeField from './rangeField';
+import SelectField from './selectField';
+import TextField from './textField';
+import TextareaField from './textareaField';
+import RadioField from './radioField';
+import InputField from './inputField';
+import ChoiceMapper from './choiceMapper';
 
 export default class FieldFromConfig extends React.Component {
   static propTypes = {
@@ -73,7 +75,7 @@ export default class FieldFromConfig extends React.Component {
       case 'boolean':
         return <BooleanField {...props} />;
       case 'email':
-        return <InputField {...props} type="email" />;
+        return <EmailField {...props} />;
       case 'string':
       case 'text':
       case 'url':
@@ -86,7 +88,7 @@ export default class FieldFromConfig extends React.Component {
 
         return <TextField {...props} />;
       case 'number':
-        return <InputField {...props} type="number" />;
+        return <NumberField {...props} />;
       case 'textarea':
         return <TextareaField {...props} />;
       case 'choice':
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
index 04dec75f36..f12afccb51 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
@@ -1,10 +1,12 @@
 import {Observer} from 'mobx-react';
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from 'react-emotion';
 
 import {t} from 'app/locale';
 import Button from 'app/components/button';
 import FormModel from 'app/views/settings/components/forms/model';
+import Panel from 'app/components/panels/panel';
 
 export default class Form extends React.Component {
   static propTypes = {
@@ -42,7 +44,6 @@ export default class Form extends React.Component {
     submitLabel: t('Save Changes'),
     submitDisabled: false,
     submitPriority: 'primary',
-    footerClass: 'form-actions align-right',
     className: 'form-stacked',
     requireChanges: false,
     allowUndo: false,
@@ -152,7 +153,7 @@ export default class Form extends React.Component {
         <div>{children}</div>
 
         {shouldShowFooter && (
-          <div className={footerClass} style={{marginTop: 25, ...footerStyle}}>
+          <StyledFooter className={footerClass} style={footerStyle}>
             <Observer>
               {() => (
                 <Button
@@ -185,9 +186,37 @@ export default class Form extends React.Component {
               </Observer>
             )}
             {extraButton}
-          </div>
+          </StyledFooter>
         )}
       </form>
     );
   }
 }
+
+const StyledFooter = styled('div')`
+  text-align: right;
+  margin-top: 25px;
+  border-top: 1px solid #e9ebec;
+  background: none;
+  padding: 16px 0 0;
+  margin-bottom: 16px;
+
+  ${p =>
+    !p.saveOnBlur &&
+    `
+  ${Panel} & {
+    margin-top: 0;
+    padding-right: 36px;
+  }
+
+  /* Better padding with form inside of a modal */
+  .modal-content & {
+    padding-right: 30px;
+    margin-left: -30px;
+    margin-right: -30px;
+    margin-bottom: -30px;
+    margin-top: 16px;
+    padding-bottom: 16px;
+  }
+  `};
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
index 7f1f7879a7..67b1b3729d 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
@@ -364,7 +364,14 @@ class FormField extends React.Component {
 
     const makeField = extraProps => (
       <React.Fragment>
-        <Field id={id} name={name} className={className} {...props} {...extraProps}>
+        <Field
+          id={id}
+          name={name}
+          className={className}
+          flexibleControlStateSize={flexibleControlStateSize}
+          {...props}
+          {...extraProps}
+        >
           {({alignRight, inline, disabled, disabledReason}) => (
             <FieldControl
               disabled={disabled}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/numberField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/numberField.jsx
new file mode 100644
index 0000000000..4fcfce36e4
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/numberField.jsx
@@ -0,0 +1,9 @@
+import React from 'react';
+
+import InputField from './inputField';
+
+export default class NumberField extends React.Component {
+  render() {
+    return <InputField {...this.props} type="number" />;
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/radioBooleanField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/radioBooleanField.jsx
new file mode 100644
index 0000000000..c4ee78e941
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/radioBooleanField.jsx
@@ -0,0 +1,15 @@
+import React from 'react';
+
+import InputField from './inputField';
+import RadioBoolean from './controls/radioBoolean';
+
+export default class RadioBooleanField extends React.Component {
+  render() {
+    return (
+      <InputField
+        {...this.props}
+        field={({children, onKeyDown, ...fieldProps}) => <RadioBoolean {...fieldProps} />}
+      />
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/textareaField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/textareaField.jsx
index eb9a4f38e8..e5f6a533c5 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/textareaField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/textareaField.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import InputField from 'app/views/settings/components/forms/inputField';
 import Textarea from 'app/views/settings/components/forms/controls/textarea';
 
-export default class TextareaField extends InputField {
+export default class TextareaField extends React.Component {
   render() {
     return (
       <InputField
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 3079610645..06524ad335 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -13,6 +13,8 @@ import PropTypes from 'prop-types';
 import ConfigStore from 'app/stores/configStore';
 import theme from 'app/utils/theme';
 
+export * from './helpers/select';
+
 jest.mock('lodash/debounce', () => jest.fn(fn => fn));
 jest.mock('app/utils/recreateRoute');
 jest.mock('app/translations');
diff --git a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
index 74d0eff6bd..da28a06dab 100644
--- a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
@@ -84,16 +84,16 @@ exports[`ConfirmDelete renders 1`] = `
               inline={false}
             >
               <Component
-                className="css-8yn43f-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+                className="css-11ihpht-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
               >
                 <Flex
-                  className="css-8yn43f-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+                  className="css-11ihpht-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
                 >
                   <Base
-                    className="etqqcs20 css-9jf0ny-FieldWrapper-getPadding-borderStyle-inlineStyle"
+                    className="etqqcs20 css-1uohzo7-FieldWrapper-getPadding-borderStyle-inlineStyle"
                   >
                     <div
-                      className="etqqcs20 css-9jf0ny-FieldWrapper-getPadding-borderStyle-inlineStyle"
+                      className="etqqcs20 css-1uohzo7-FieldWrapper-getPadding-borderStyle-inlineStyle"
                       is={null}
                     >
                       <FieldDescription
diff --git a/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
index ed85314a8a..f90fcc2697 100644
--- a/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
@@ -5,7 +5,6 @@ exports[`FormField + model renders with Form 1`] = `
   allowUndo={false}
   cancelLabel="Cancel"
   className="form-stacked"
-  footerClass="form-actions align-right"
   model={
     FormModel {
       "api": Client {},
@@ -72,6 +71,7 @@ exports[`FormField + model renders with Form 1`] = `
               alignRight={false}
               disabled={false}
               field={[Function]}
+              flexibleControlStateSize={false}
               id="fieldName"
               inline={true}
               name="fieldName"
@@ -84,16 +84,16 @@ exports[`FormField + model renders with Form 1`] = `
                 inline={true}
               >
                 <Component
-                  className="css-e5jskw-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+                  className="css-gf4a1r-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
                 >
                   <Flex
-                    className="css-e5jskw-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+                    className="css-gf4a1r-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
                   >
                     <Base
-                      className="etqqcs20 css-11jhx2k-FieldWrapper-getPadding-borderStyle-inlineStyle"
+                      className="etqqcs20 css-12j1xki-FieldWrapper-getPadding-borderStyle-inlineStyle"
                     >
                       <div
-                        className="etqqcs20 css-11jhx2k-FieldWrapper-getPadding-borderStyle-inlineStyle"
+                        className="etqqcs20 css-12j1xki-FieldWrapper-getPadding-borderStyle-inlineStyle"
                         is={null}
                       >
                         <FieldControl
@@ -311,33 +311,19 @@ exports[`FormField + model renders with Form 1`] = `
         </InputField>
       </TextField>
     </div>
-    <div
-      className="form-actions align-right"
-      style={
-        Object {
-          "marginTop": 25,
-        }
-      }
-    >
-      <Observer>
-        <Button
-          data-test-id="form-submit"
-          disabled={false}
-          priority="primary"
-          type="submit"
-        >
-          <StyledButton
-            aria-label="Save Changes"
+    <StyledFooter>
+      <div
+        className="css-1nstjwf-StyledFooter e1jxgbzp0"
+      >
+        <Observer>
+          <Button
             data-test-id="form-submit"
             disabled={false}
-            onClick={[Function]}
             priority="primary"
-            role="button"
             type="submit"
           >
-            <Component
+            <StyledButton
               aria-label="Save Changes"
-              className="css-1msljz8-StyledButton-getColors eqrebog0"
               data-test-id="form-submit"
               disabled={false}
               onClick={[Function]}
@@ -345,7 +331,7 @@ exports[`FormField + model renders with Form 1`] = `
               role="button"
               type="submit"
             >
-              <button
+              <Component
                 aria-label="Save Changes"
                 className="css-1msljz8-StyledButton-getColors eqrebog0"
                 data-test-id="form-submit"
@@ -355,26 +341,37 @@ exports[`FormField + model renders with Form 1`] = `
                 role="button"
                 type="submit"
               >
-                <ButtonLabel
+                <button
+                  aria-label="Save Changes"
+                  className="css-1msljz8-StyledButton-getColors eqrebog0"
+                  data-test-id="form-submit"
+                  disabled={false}
+                  onClick={[Function]}
                   priority="primary"
+                  role="button"
+                  type="submit"
                 >
-                  <Component
-                    className="css-ga4b18-ButtonLabel eqrebog1"
+                  <ButtonLabel
                     priority="primary"
                   >
-                    <span
+                    <Component
                       className="css-ga4b18-ButtonLabel eqrebog1"
+                      priority="primary"
                     >
-                      Save Changes
-                    </span>
-                  </Component>
-                </ButtonLabel>
-              </button>
-            </Component>
-          </StyledButton>
-        </Button>
-      </Observer>
-    </div>
+                      <span
+                        className="css-ga4b18-ButtonLabel eqrebog1"
+                      >
+                        Save Changes
+                      </span>
+                    </Component>
+                  </ButtonLabel>
+                </button>
+              </Component>
+            </StyledButton>
+          </Button>
+        </Observer>
+      </div>
+    </StyledFooter>
   </form>
 </Form>
 `;
diff --git a/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap
index 10261b2252..ccb073b689 100644
--- a/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap
@@ -1,5 +1,293 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
+exports[`RadioBooleanField render() renders new field without form context 1`] = `
+<RadioBooleanField
+  name="fieldName"
+  noLabel="No"
+  yesLabel="Yes"
+>
+  <InputField
+    field={[Function]}
+    name="fieldName"
+    noLabel="No"
+    yesLabel="Yes"
+  >
+    <FormField
+      field={[Function]}
+      flexibleControlStateSize={false}
+      hideErrorMessage={false}
+      name="fieldName"
+      noLabel="No"
+      yesLabel="Yes"
+    >
+      <Field
+        alignRight={false}
+        disabled={false}
+        field={[Function]}
+        flexibleControlStateSize={false}
+        id="fieldName"
+        inline={true}
+        name="fieldName"
+        noLabel="No"
+        required={false}
+        visible={true}
+        yesLabel="Yes"
+      >
+        <FieldWrapper
+          hasControlState={true}
+          inline={true}
+        >
+          <Component
+            className="css-1tjxpxk-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+          >
+            <Flex
+              className="css-1tjxpxk-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+            >
+              <Base
+                className="etqqcs20 css-3fwyvi-FieldWrapper-getPadding-borderStyle-inlineStyle"
+              >
+                <div
+                  className="etqqcs20 css-3fwyvi-FieldWrapper-getPadding-borderStyle-inlineStyle"
+                  is={null}
+                >
+                  <FieldControl
+                    alignRight={false}
+                    controlState={
+                      <ControlState
+                        model={
+                          MockModel {
+                            "initialData": Object {
+                              "fieldName": undefined,
+                            },
+                            "props": Object {
+                              "children": [Function],
+                              "className": undefined,
+                              "field": [Function],
+                              "flexibleControlStateSize": false,
+                              "hideErrorMessage": false,
+                              "name": "fieldName",
+                              "noLabel": "No",
+                              "yesLabel": "Yes",
+                            },
+                          }
+                        }
+                        name="fieldName"
+                      />
+                    }
+                    disabled={false}
+                    errorState={
+                      <Observer>
+                        [Function]
+                      </Observer>
+                    }
+                    flexibleControlStateSize={false}
+                    inline={true}
+                  >
+                    <FieldControlErrorWrapper
+                      inline={true}
+                    >
+                      <Component
+                        className="css-1xbxyck-FieldControlErrorWrapper e78b1iv0"
+                        inline={true}
+                      >
+                        <Box
+                          className="css-1xbxyck-FieldControlErrorWrapper e78b1iv0"
+                        >
+                          <Base
+                            className="e78b1iv0 css-1kkovz0-FieldControlErrorWrapper"
+                          >
+                            <div
+                              className="e78b1iv0 css-1kkovz0-FieldControlErrorWrapper"
+                              is={null}
+                            >
+                              <FieldControlWrapper>
+                                <Component
+                                  className="css-1ke1xob-FieldControlWrapper e78b1iv2"
+                                >
+                                  <Flex
+                                    className="css-1ke1xob-FieldControlWrapper e78b1iv2"
+                                  >
+                                    <Base
+                                      className="e78b1iv2 css-w4o1g8-FieldControlWrapper"
+                                    >
+                                      <div
+                                        className="e78b1iv2 css-w4o1g8-FieldControlWrapper"
+                                        is={null}
+                                      >
+                                        <FieldControlStyled
+                                          alignRight={false}
+                                        >
+                                          <Component
+                                            alignRight={false}
+                                            className="css-1e3k5jy-FieldControlStyled e78b1iv1"
+                                          >
+                                            <Box
+                                              className="css-1e3k5jy-FieldControlStyled e78b1iv1"
+                                            >
+                                              <Base
+                                                className="e78b1iv1 css-1b7m0vu-FieldControlStyled"
+                                              >
+                                                <div
+                                                  className="e78b1iv1 css-1b7m0vu-FieldControlStyled"
+                                                  is={null}
+                                                >
+                                                  <Observer>
+                                                    <RadioBoolean
+                                                      disabled={false}
+                                                      field={[Function]}
+                                                      id="fieldName"
+                                                      initialData={
+                                                        Object {
+                                                          "fieldName": undefined,
+                                                        }
+                                                      }
+                                                      innerRef={[Function]}
+                                                      name="fieldName"
+                                                      noLabel="No"
+                                                      onBlur={[Function]}
+                                                      onChange={[Function]}
+                                                      yesFirst={true}
+                                                      yesLabel="Yes"
+                                                    >
+                                                      <div>
+                                                        <Option
+                                                          checked={false}
+                                                          disabled={false}
+                                                          label="Yes"
+                                                          name="fieldName"
+                                                          onChange={[Function]}
+                                                          value="true"
+                                                        >
+                                                          <div
+                                                            className="radio"
+                                                          >
+                                                            <label
+                                                              style={
+                                                                Object {
+                                                                  "fontWeight": "normal",
+                                                                }
+                                                              }
+                                                            >
+                                                              <input
+                                                                checked={false}
+                                                                disabled={false}
+                                                                name="fieldName"
+                                                                onChange={[Function]}
+                                                                type="radio"
+                                                                value="true"
+                                                              />
+                                                               
+                                                              Yes
+                                                            </label>
+                                                          </div>
+                                                        </Option>
+                                                        <Option
+                                                          checked={false}
+                                                          disabled={false}
+                                                          label="No"
+                                                          name="fieldName"
+                                                          onChange={[Function]}
+                                                          value="false"
+                                                        >
+                                                          <div
+                                                            className="radio"
+                                                          >
+                                                            <label
+                                                              style={
+                                                                Object {
+                                                                  "fontWeight": "normal",
+                                                                }
+                                                              }
+                                                            >
+                                                              <input
+                                                                checked={false}
+                                                                disabled={false}
+                                                                name="fieldName"
+                                                                onChange={[Function]}
+                                                                type="radio"
+                                                                value="false"
+                                                              />
+                                                               
+                                                              No
+                                                            </label>
+                                                          </div>
+                                                        </Option>
+                                                      </div>
+                                                    </RadioBoolean>
+                                                  </Observer>
+                                                </div>
+                                              </Base>
+                                            </Box>
+                                          </Component>
+                                        </FieldControlStyled>
+                                        <FieldControlState
+                                          flexibleControlStateSize={false}
+                                        >
+                                          <Component
+                                            className="css-1j6hng-FieldControlState e1rziqw00"
+                                            flexibleControlStateSize={false}
+                                          >
+                                            <Flex
+                                              className="css-1j6hng-FieldControlState e1rziqw00"
+                                            >
+                                              <Base
+                                                className="e1rziqw00 css-1fqbh7r-FieldControlState"
+                                              >
+                                                <div
+                                                  className="e1rziqw00 css-1fqbh7r-FieldControlState"
+                                                  is={null}
+                                                >
+                                                  <ControlState
+                                                    model={
+                                                      MockModel {
+                                                        "initialData": Object {
+                                                          "fieldName": undefined,
+                                                        },
+                                                        "props": Object {
+                                                          "children": [Function],
+                                                          "className": undefined,
+                                                          "field": [Function],
+                                                          "flexibleControlStateSize": false,
+                                                          "hideErrorMessage": false,
+                                                          "name": "fieldName",
+                                                          "noLabel": "No",
+                                                          "yesLabel": "Yes",
+                                                        },
+                                                      }
+                                                    }
+                                                    name="fieldName"
+                                                  >
+                                                    <Observer />
+                                                    <Observer />
+                                                  </ControlState>
+                                                </div>
+                                              </Base>
+                                            </Flex>
+                                          </Component>
+                                        </FieldControlState>
+                                      </div>
+                                    </Base>
+                                  </Flex>
+                                </Component>
+                              </FieldControlWrapper>
+                              <Observer />
+                            </div>
+                          </Base>
+                        </Box>
+                      </Component>
+                    </FieldControlErrorWrapper>
+                  </FieldControl>
+                </div>
+              </Base>
+            </Flex>
+          </Component>
+        </FieldWrapper>
+      </Field>
+    </FormField>
+  </InputField>
+</RadioBooleanField>
+`;
+
 exports[`RadioBooleanField render() renders with form context 1`] = `
 <div
   className="control-group"
diff --git a/tests/js/spec/components/forms/radioBooleanField.spec.jsx b/tests/js/spec/components/forms/radioBooleanField.spec.jsx
index 890b7dcd45..06a5b71a32 100644
--- a/tests/js/spec/components/forms/radioBooleanField.spec.jsx
+++ b/tests/js/spec/components/forms/radioBooleanField.spec.jsx
@@ -1,7 +1,8 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow, mount} from 'enzyme';
 
 import {RadioBooleanField} from 'app/components/forms';
+import NewRadioBooleanField from 'app/views/settings/components/forms/radioBooleanField';
 
 describe('RadioBooleanField', function() {
   describe('render()', function() {
@@ -28,5 +29,30 @@ describe('RadioBooleanField', function() {
       );
       expect(wrapper).toMatchSnapshot();
     });
+
+    it('renders new field without form context', function() {
+      let wrapper = mount(
+        <NewRadioBooleanField name="fieldName" yesLabel="Yes" noLabel="No" />
+      );
+      expect(wrapper).toMatchSnapshot();
+    });
+
+    it('can change values', function() {
+      let mock = jest.fn();
+      let wrapper = mount(
+        <NewRadioBooleanField
+          onChange={mock}
+          name="fieldName"
+          yesLabel="Yes"
+          noLabel="No"
+        />
+      );
+
+      wrapper.find('input[value="true"]').simulate('change');
+      expect(mock).toHaveBeenCalledWith(true, expect.anything());
+
+      wrapper.find('input[value="false"]').simulate('change');
+      expect(mock).toHaveBeenCalledWith(false, expect.anything());
+    });
   });
 });
diff --git a/tests/js/spec/views/__snapshots__/accountEmails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/accountEmails.spec.jsx.snap
index b3983d089a..aa84bb4aa0 100644
--- a/tests/js/spec/views/__snapshots__/accountEmails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/accountEmails.spec.jsx.snap
@@ -50,7 +50,6 @@ exports[`AccountEmails renders with emails 1`] = `
       apiMethod="POST"
       cancelLabel="Cancel"
       className="form-stacked"
-      footerClass="form-actions align-right"
       onSubmitError={[Function]}
       onSubmitSuccess={[Function]}
       requireChanges={false}
diff --git a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
index 7daec0674b..43690ee244 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
@@ -56,7 +56,6 @@ exports[`ProjectAlertSettings render() renders 1`] = `
     apiMethod="PUT"
     cancelLabel="Cancel"
     className="form-stacked"
-    footerClass="form-actions align-right"
     initialData={
       Object {
         "digestsMaxDelay": 60,
diff --git a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
index 531d428996..2c07f5962b 100644
--- a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
@@ -144,7 +144,6 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
       apiMethod="PUT"
       cancelLabel="Cancel"
       className="form-stacked"
-      footerClass="form-actions align-right"
       hideFooter={true}
       initialData={
         Object {
diff --git a/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectCspReports.spec.jsx.snap b/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectCspReports.spec.jsx.snap
index c57b32a5db..5462a9119e 100644
--- a/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectCspReports.spec.jsx.snap
+++ b/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectCspReports.spec.jsx.snap
@@ -24,7 +24,6 @@ exports[`ProjectCspReports renders 1`] = `
       apiMethod="PUT"
       cancelLabel="Cancel"
       className="form-stacked"
-      footerClass="form-actions align-right"
       initialData={Object {}}
       onSubmitError={[Function]}
       onSubmitSuccess={[Function]}
