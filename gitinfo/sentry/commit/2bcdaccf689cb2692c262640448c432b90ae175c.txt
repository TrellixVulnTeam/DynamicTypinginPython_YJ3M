commit 2bcdaccf689cb2692c262640448c432b90ae175c
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Fri Nov 30 11:09:17 2018 -0800

    fix(api): Prevent querying project_id column in org tag values endpoint (#10834)

diff --git a/src/sentry/api/endpoints/organization_tagkey_values.py b/src/sentry/api/endpoints/organization_tagkey_values.py
index c95273f382..5e7b2d5cf6 100644
--- a/src/sentry/api/endpoints/organization_tagkey_values.py
+++ b/src/sentry/api/endpoints/organization_tagkey_values.py
@@ -30,6 +30,7 @@ class OrganizationTagKeyValuesEndpoint(OrganizationEventsEndpointBase):
             filter_params['end'],
             query=request.GET.get('query'),
         )
+
         return self.paginate(
             request=request,
             paginator=paginator,
diff --git a/src/sentry/tagstore/base.py b/src/sentry/tagstore/base.py
index d6c4cde4f6..d81b270f54 100644
--- a/src/sentry/tagstore/base.py
+++ b/src/sentry/tagstore/base.py
@@ -320,7 +320,7 @@ class TagStorage(Service):
     def get_tag_value_paginator_for_projects(self, projects, environments, key, start, end,
                                              query=None, order_by='-last_seen'):
         """
-        >>> get_tag_value_paginator([1], [2], 'environment', query='prod')
+        >>> get_tag_value_paginator_for_projects([1], [2], 'environment', query='prod')
         """
         raise NotImplementedError
 
diff --git a/src/sentry/tagstore/snuba/backend.py b/src/sentry/tagstore/snuba/backend.py
index fb2d8f6b04..976484eb8f 100644
--- a/src/sentry/tagstore/snuba/backend.py
+++ b/src/sentry/tagstore/snuba/backend.py
@@ -30,6 +30,9 @@ from sentry.utils.dates import to_timestamp
 
 SEEN_COLUMN = 'timestamp'
 
+# columns we want to exclude from methods that return
+# all values for a given tag/column
+BLACKLISTED_COLUMNS = frozenset(['project_id'])
 
 tag_value_data_transformers = {
     'first_seen': parse_datetime,
@@ -502,6 +505,10 @@ class SnubaTagStorage(TagStorage):
         snuba_key = snuba.get_snuba_column_name(key)
 
         conditions = []
+
+        if snuba_key in BLACKLISTED_COLUMNS:
+            snuba_key = 'tags[%s]' % (key,)
+
         if query:
             conditions.append([snuba_key, 'LIKE', u'%{}%'.format(query)])
         else:
diff --git a/tests/snuba/api/endpoints/test_organization_tagkey_values.py b/tests/snuba/api/endpoints/test_organization_tagkey_values.py
index b820f17e90..4323e47f3b 100644
--- a/tests/snuba/api/endpoints/test_organization_tagkey_values.py
+++ b/tests/snuba/api/endpoints/test_organization_tagkey_values.py
@@ -144,3 +144,34 @@ class OrganizationTagKeyValuesTest(APITestCase, SnubaTestCase):
         assert response.status_code == 200, response.content
         assert [(val['value'], val['count'])
                 for val in response.data] == [('5.1.2', 1), ('4.1.2', 1), ('3.1.2', 2)]
+
+    def test_project_id(self):
+        user = self.create_user()
+        org = self.create_organization()
+        team = self.create_team(organization=org)
+        self.create_member(organization=org, user=user, teams=[team])
+        other_org = self.create_organization()
+
+        self.login_as(user=user)
+
+        project = self.create_project(organization=org, teams=[team])
+        group = self.create_group(project=project)
+
+        other_project = self.create_project(organization=other_org)
+        other_group = self.create_group(project=other_project)
+
+        self.create_event('a' * 32, group=group, datetime=self.day_ago)
+        self.create_event('b' * 32, group=group, datetime=self.min_ago)
+        self.create_event('c' * 32, group=other_group, datetime=self.day_ago)
+
+        url = reverse(
+            'sentry-api-0-organization-tagkey-values',
+            kwargs={
+                'organization_slug': org.slug,
+                'key': 'project.id',
+            }
+        )
+
+        response = self.client.get(url, format='json')
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 0
