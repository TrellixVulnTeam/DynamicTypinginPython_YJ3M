commit a8d9749021536007fc65e9bd0ee1bd933d687353
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 18 14:21:52 2015 -0800

    Add group tag values endpoint

diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index b5a38b5efb..4161832bbb 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -34,7 +34,6 @@ class DocSection(Enum):
     ORGANIZATIONS = 'Organizations'
     PROJECTS = 'Projects'
     RELEASES = 'Releases'
-    TAGS = 'Tags'
     TEAMS = 'Teams'
 
 
diff --git a/src/sentry/api/endpoints/group_tagkey_values.py b/src/sentry/api/endpoints/group_tagkey_values.py
new file mode 100644
index 0000000000..c0b5b6436f
--- /dev/null
+++ b/src/sentry/api/endpoints/group_tagkey_values.py
@@ -0,0 +1,41 @@
+from __future__ import absolute_import
+
+from sentry.api.base import DocSection
+from sentry.api.bases.group import GroupEndpoint
+from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.api.serializers import serialize
+from sentry.models import GroupTagValue, TagKey, TagKeyStatus
+
+
+class GroupTagKeyValuesEndpoint(GroupEndpoint):
+    doc_section = DocSection.EVENTS
+
+    def get(self, request, group, key):
+        """
+        List a tag's values
+
+        Return a list of values associated with this key.
+
+            {method} {path}
+
+        """
+        try:
+            tagkey = TagKey.objects.get(
+                project=group.project_id,
+                key=key,
+                status=TagKeyStatus.VISIBLE,
+            )
+        except TagKey.DoesNotExist:
+            raise ResourceDoesNotExist
+
+        queryset = GroupTagValue.objects.filter(
+            group=group,
+            key=key,
+        )
+
+        return self.paginate(
+            request=request,
+            queryset=queryset,
+            order_by='-id',
+            on_results=lambda x: serialize(x, request.user),
+        )
diff --git a/src/sentry/api/endpoints/project_tagkey_values.py b/src/sentry/api/endpoints/project_tagkey_values.py
index 619a1684fe..5b44783a96 100644
--- a/src/sentry/api/endpoints/project_tagkey_values.py
+++ b/src/sentry/api/endpoints/project_tagkey_values.py
@@ -8,7 +8,7 @@ from sentry.models import TagKey, TagKeyStatus, TagValue
 
 
 class ProjectTagKeyValuesEndpoint(ProjectEndpoint):
-    doc_section = DocSection.TAGS
+    doc_section = DocSection.PROJECTS
 
     def get(self, request, project, key):
         """
diff --git a/src/sentry/api/serializers/models/grouptagvalue.py b/src/sentry/api/serializers/models/grouptagvalue.py
new file mode 100644
index 0000000000..695ee22990
--- /dev/null
+++ b/src/sentry/api/serializers/models/grouptagvalue.py
@@ -0,0 +1,17 @@
+from __future__ import absolute_import
+
+from sentry.api.serializers import Serializer, register
+from sentry.models import GroupTagValue
+
+
+@register(GroupTagValue)
+class GroupTagValueSerializer(Serializer):
+    def serialize(self, obj, attrs, user):
+        d = {
+            'key': obj.key,
+            'value': obj.value,
+            'count': obj.times_seen,
+            'lastSeen': obj.last_seen,
+            'firstSeen': obj.first_seen,
+        }
+        return d
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 8dc4bdfd8d..fc6bbe0dad 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -12,6 +12,7 @@ from .endpoints.group_events_latest import GroupEventsLatestEndpoint
 from .endpoints.group_notes import GroupNotesEndpoint
 from .endpoints.group_stats import GroupStatsEndpoint
 from .endpoints.group_tags import GroupTagsEndpoint
+from .endpoints.group_tagkey_values import GroupTagKeyValuesEndpoint
 from .endpoints.index import IndexEndpoint
 from .endpoints.organization_member_details import OrganizationMemberDetailsEndpoint
 from .endpoints.organization_projects import OrganizationProjectsEndpoint
@@ -125,6 +126,9 @@ urlpatterns = patterns(
     url(r'^groups/(?P<group_id>\d+)/tags/$',
         GroupTagsEndpoint.as_view(),
         name='sentry-api-0-group-tags'),
+    url(r'^groups/(?P<group_id>\d+)/tags/(?P<key>[^/]+)/values/$',
+        GroupTagKeyValuesEndpoint.as_view(),
+        name='sentry-api-0-group-tagkey-values'),
 
     # Events
     url(r'^events/(?P<event_id>\d+)/$',
diff --git a/tests/sentry/api/endpoints/test_group_tagkey_values.py b/tests/sentry/api/endpoints/test_group_tagkey_values.py
new file mode 100644
index 0000000000..dbcf1662e9
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_group_tagkey_values.py
@@ -0,0 +1,28 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import GroupTagValue, TagKey
+from sentry.testutils import APITestCase
+
+
+class GroupTagKeyValuesTest(APITestCase):
+    def test_simple(self):
+        project = self.create_project()
+        group = self.create_group(project=project)
+        tagkey = TagKey.objects.create(project=project, key='foo')
+        grouptagvalue = GroupTagValue.objects.create(group=group, key='foo', value='bar')
+
+        self.login_as(user=self.user)
+
+        url = reverse('sentry-api-0-group-tagkey-values', kwargs={
+            'group_id': group.id,
+            'key': tagkey.key,
+        })
+
+        response = self.client.get(url)
+
+        assert response.status_code == 200
+        assert len(response.data) == 1
+
+        assert response.data[0]['value'] == 'bar'
