commit 05264596685b25244b7e798acf6a0fc9d81112d6
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 3 15:16:08 2015 -0800

    Add full integration test for JS expansion

diff --git a/tests/sentry/lang/javascript/fixtures/file.min.js b/tests/sentry/lang/javascript/fixtures/file.min.js
new file mode 100644
index 0000000000..12b9f811b2
--- /dev/null
+++ b/tests/sentry/lang/javascript/fixtures/file.min.js
@@ -0,0 +1,2 @@
+function add(a,b){"use strict";return a+b}function multiply(a,b){"use strict";return a*b}function divide(a,b){"use strict";try{return multiply(add(a,b),a,b)/c}catch(e){Raven.captureException(e)}}
+//@ sourceMappingURL=file.sourcemap.js
\ No newline at end of file
diff --git a/tests/sentry/lang/javascript/fixtures/file.sourcemap.js b/tests/sentry/lang/javascript/fixtures/file.sourcemap.js
new file mode 100644
index 0000000000..1bd0f6510c
--- /dev/null
+++ b/tests/sentry/lang/javascript/fixtures/file.sourcemap.js
@@ -0,0 +1 @@
+{"version":3,"file":"file.min.js","sources":["file1.js","file2.js"],"names":["add","a","b","multiply","divide","c","e","Raven","captureException"],"mappings":"AAAA,QAASA,KAAIC,EAAGC,GACf,YACA,OAAOD,GAAIC,ECFZ,QAASC,UAASF,EAAGC,GACpB,YACA,OAAOD,GAAIC,EAEZ,QAASE,QAAOH,EAAGC,GAClB,YACA,KACC,MAAOC,UAASH,IAAIC,EAAGC,GAAID,EAAGC,GAAKG,EAClC,MAAOC,GACRC,MAAMC,iBAAiBF"}
\ No newline at end of file
diff --git a/tests/sentry/lang/javascript/fixtures/file1.js b/tests/sentry/lang/javascript/fixtures/file1.js
new file mode 100644
index 0000000000..eed5827852
--- /dev/null
+++ b/tests/sentry/lang/javascript/fixtures/file1.js
@@ -0,0 +1,4 @@
+function add(a, b) {
+	"use strict";
+	return a + b;
+}
\ No newline at end of file
diff --git a/tests/sentry/lang/javascript/fixtures/file2.js b/tests/sentry/lang/javascript/fixtures/file2.js
new file mode 100644
index 0000000000..8b17435684
--- /dev/null
+++ b/tests/sentry/lang/javascript/fixtures/file2.js
@@ -0,0 +1,12 @@
+function multiply(a, b) {
+	"use strict";
+	return a * b;
+}
+function divide(a, b) {
+	"use strict";
+	try {
+		return multiply(add(a, b), a, b) / c;
+	} catch (e) {
+		Raven.captureException(e);
+	}
+}
diff --git a/tests/sentry/lang/javascript/test_plugin.py b/tests/sentry/lang/javascript/test_plugin.py
index 5bd4552297..7733c8dd16 100644
--- a/tests/sentry/lang/javascript/test_plugin.py
+++ b/tests/sentry/lang/javascript/test_plugin.py
@@ -1,11 +1,19 @@
 from __future__ import absolute_import
 
+import responses
+import os.path
+
 from mock import patch
 
 from sentry.models import Event
 from sentry.testutils import TestCase
 
-base64_sourcemap = 'data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlcyI6WyIvdGVzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zb2xlLmxvZyhcImhlbGxvLCBXb3JsZCFcIikiXX0='
+BASE64_SOURCEMAP = 'data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlcyI6WyIvdGVzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zb2xlLmxvZyhcImhlbGxvLCBXb3JsZCFcIikiXX0='
+
+
+def load_fixture(name):
+    with open(os.path.join(os.path.dirname(__file__), 'fixtures', name)) as fp:
+        return fp.read()
 
 
 class JavascriptIntegrationTest(TestCase):
@@ -82,7 +90,7 @@ class JavascriptIntegrationTest(TestCase):
             }
         }
 
-        mock_discover_sourcemap.return_value = base64_sourcemap
+        mock_discover_sourcemap.return_value = BASE64_SOURCEMAP
 
         mock_fetch_url.return_value.url = 'http://example.com/test.min.js'
         mock_fetch_url.return_value.body = '\n'.join('<generated source>')
@@ -101,3 +109,50 @@ class JavascriptIntegrationTest(TestCase):
         assert not frame.pre_context
         assert frame.context_line == 'console.log("hello, World!")'
         assert not frame.post_context
+
+    @responses.activate
+    def test_sourcemap_source_expansion(self):
+        responses.add(responses.GET, 'http://example.com/file.min.js',
+                      body=load_fixture('file.min.js'))
+        responses.add(responses.GET, 'http://example.com/file1.js',
+                      body=load_fixture('file1.js'))
+        responses.add(responses.GET, 'http://example.com/file2.js',
+                      body=load_fixture('file2.js'))
+        responses.add(responses.GET, 'http://example.com/file.sourcemap.js',
+                      body=load_fixture('file.sourcemap.js'))
+
+        data = {
+            'message': 'hello',
+            'platform': 'javascript',
+            'sentry.interfaces.Exception': {
+                'values': [{
+                    'type': 'Error',
+                    'stacktrace': {
+                        'frames': [
+                            {
+                                'abs_path': 'http://example.com/file.min.js',
+                                'filename': 'file.min.js',
+                                'lineno': 1,
+                                'colno': 39,
+                            },
+                        ],
+                    },
+                }],
+            }
+        }
+
+        resp = self._postWithHeader(data)
+        assert resp.status_code, 200
+
+        event = Event.objects.get()
+        exception = event.interfaces['sentry.interfaces.Exception']
+        frame_list = exception.values[0].stacktrace.frames
+
+        frame = frame_list[0]
+        assert not frame.errors
+        assert frame.pre_context == [
+            'function add(a, b) {',
+            '\t"use strict";',
+        ]
+        assert frame.context_line == '\treturn a + b;'
+        assert frame.post_context == ['}']
