commit 922ade4c2d6d7f9d459fc6093bdac5034d2a5e15
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Apr 2 21:30:47 2013 -0700

    Add on_alert to plugin hooks

diff --git a/src/sentry/models.py b/src/sentry/models.py
index 08867f3670..2839c60415 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -45,6 +45,7 @@ from sentry.signals import buffer_incr_complete, regression_signal
 from sentry.utils import MockDjangoRequest
 from sentry.utils.cache import memoize
 from sentry.utils.db import has_trending
+from sentry.utils.http import absolute_uri
 from sentry.utils.models import Model, GzippedDictField, update
 from sentry.utils.imports import import_string
 from sentry.utils.safe import safe_execute
@@ -1126,6 +1127,10 @@ class Alert(Model):
         return (self.status == STATUS_RESOLVED
                 or self.datetime < timezone.now() - timedelta(minutes=60))
 
+    def get_absolute_url(self):
+        return absolute_uri(reverse('sentry-alert-details', args=[
+            self.team.slug, self.project.slug, self.id]))
+
 
 class AlertRelatedGroup(Model):
     group = models.ForeignKey(Group)
@@ -1326,6 +1331,13 @@ def create_regression_activity(instance, **kwargs):
     )
 
 
+def on_alert_creation(instance, **kwargs):
+    from sentry.plugins import plugins
+
+    for plugin in plugins.for_project(instance.project):
+        safe_execute(plugin.on_alert, alert=instance)
+
+
 # Signal registration
 post_syncdb.connect(
     create_default_project,
@@ -1367,5 +1379,11 @@ user_logged_in.connect(
     dispatch_uid="set_language_on_logon",
     weak=False
 )
+post_save.connect(
+    on_alert_creation,
+    sender=Alert,
+    dispatch_uid="on_alert_creation",
+    weak=False,
+)
 
 add_introspection_rules([], ["^social_auth\.fields\.JSONField"])
diff --git a/src/sentry/plugins/base.py b/src/sentry/plugins/base.py
index e93ea5958a..32aa9e1420 100644
--- a/src/sentry/plugins/base.py
+++ b/src/sentry/plugins/base.py
@@ -449,6 +449,17 @@ class IPlugin(local):
         """
         return None
 
+    def on_alert(self, alert, **kwargs):
+        """
+        Called when a new alert is generated.
+
+        :param alert: an instance of ``Alert``
+
+        >>> def on_alert(self, alert, **kwargs):
+        >>>     print 'New alert!', alert.message
+        >>>     print alert.get_absolute_url()
+        """
+
     def post_process(self, group, event, is_new, is_sample, **kwargs):
         """
         Post processes an event after it has been saved.
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 576cad966f..f9a644e7a5 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -68,6 +68,12 @@ class NotificationUserOptionsForm(BaseNotificationUserOptionsForm):
             self.plugin.set_option('alert', int(slug in projects), user=user, project=project)
 
 
+class Message(object):
+    def __init__(self, short, long):
+        self.short = short
+        self.long = long
+
+
 class NotificationPlugin(Plugin):
     description = _('Notify project members when a new event is seen for the first time, or when an '
                     'already resolved event has changed back to unresolved.')
diff --git a/src/sentry/utils/http.py b/src/sentry/utils/http.py
index 14360d4854..3796ce6f97 100644
--- a/src/sentry/utils/http.py
+++ b/src/sentry/utils/http.py
@@ -9,7 +9,6 @@ import urllib
 from urlparse import urlparse, urljoin
 
 from sentry.conf import settings
-from sentry.plugins.helpers import get_option
 
 
 def absolute_uri(url=None):
@@ -56,6 +55,8 @@ def is_same_domain(url1, url2):
 
 
 def get_origins(project=None):
+    from sentry.plugins.helpers import get_option
+
     # TODO: we should cache this
     if settings.ALLOW_ORIGIN == '*':
         return frozenset(['*'])
