commit a7d569df4bfe8b373d98ec424cad2e2c9fb37828
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 6 16:57:43 2018 -0700

    Remove various dead code (primarily templatetags)

diff --git a/src/sentry/templates/sentry/emails/group_header.html b/src/sentry/templates/sentry/emails/group_header.html
index 981f65c9fc..7f4fe8f8bb 100644
--- a/src/sentry/templates/sentry/emails/group_header.html
+++ b/src/sentry/templates/sentry/emails/group_header.html
@@ -21,9 +21,6 @@
           <small>
             <span class="count">Seen <strong>{{ group.times_seen }}</strong> time{{ group.times_seen|pluralize }}.</span>
             <span class="last-seen pretty-date"> Last seen: {{ group.last_seen }} UTC</span>
-            {% if group.avg_time_spent %}
-              <span class="time-spent">{{ group.avg_time_spent|duration }}</span>
-            {% endif %}
             in <a href="{% absolute_uri project_link %}"><strong>{{ group.project.organization.slug }} / {{ group.project.slug }}</strong></a>
           </small>
         </p>
diff --git a/src/sentry/templates/sentry/login.html b/src/sentry/templates/sentry/login.html
index acf26ba0a2..12c4fbc94a 100644
--- a/src/sentry/templates/sentry/login.html
+++ b/src/sentry/templates/sentry/login.html
@@ -2,7 +2,6 @@
 
 {% load crispy_forms_tags %}
 {% load i18n %}
-{% load sentry_auth %}
 
 {% block title %}{% trans "Login" %} | {{ block.super }}{% endblock %}
 
diff --git a/src/sentry/templates/sentry/oauth-authorize.html b/src/sentry/templates/sentry/oauth-authorize.html
index 2a8821929e..1dd9ae05f4 100644
--- a/src/sentry/templates/sentry/oauth-authorize.html
+++ b/src/sentry/templates/sentry/oauth-authorize.html
@@ -2,7 +2,6 @@
 
 {% load crispy_forms_tags %}
 {% load i18n %}
-{% load sentry_auth %}
 {% load sentry_avatars %}
 
 {% block title %}{% trans "Authorize Application" %} | {{ block.super }}{% endblock %}
diff --git a/src/sentry/templates/sentry/oauth-error.html b/src/sentry/templates/sentry/oauth-error.html
index f71474cd89..3caeaccd32 100644
--- a/src/sentry/templates/sentry/oauth-error.html
+++ b/src/sentry/templates/sentry/oauth-error.html
@@ -2,7 +2,6 @@
 
 {% load crispy_forms_tags %}
 {% load i18n %}
-{% load sentry_auth %}
 
 {% block title %}{% trans "Authorization Error" %} | {{ block.super }}{% endblock %}
 
diff --git a/src/sentry/templates/sentry/partial/github_button.html b/src/sentry/templates/sentry/partial/github_button.html
deleted file mode 100644
index 66d52f0fcd..0000000000
--- a/src/sentry/templates/sentry/partial/github_button.html
+++ /dev/null
@@ -1,8 +0,0 @@
-<span class="github" data-user="{{ user }}" data-repo="{{ repo }}">
-	<span id="github-btn" class="github-btn">
-		<a id="gh-btn" href="https://github.com/{{ user }}/{{ repo }}" target="_blank" class="gh-btn">
-			<span class="gh-ico"></span>
-			<span id="gh-text" class="gh-text">{{ repo }}</span>
-		</a>
-	</span>
-</span>
diff --git a/src/sentry/templatetags/sentry_auth.py b/src/sentry/templatetags/sentry_auth.py
deleted file mode 100644
index fa4a26299c..0000000000
--- a/src/sentry/templatetags/sentry_auth.py
+++ /dev/null
@@ -1,11 +0,0 @@
-from __future__ import absolute_import, print_function
-
-from django.conf import settings
-from django import template
-
-register = template.Library()
-
-
-@register.filter
-def auth_provider_label(provider):
-    return settings.AUTH_PROVIDER_LABELS[provider]
diff --git a/src/sentry/templatetags/sentry_helpers.py b/src/sentry/templatetags/sentry_helpers.py
index 6c4416d50e..967ebcc240 100644
--- a/src/sentry/templatetags/sentry_helpers.py
+++ b/src/sentry/templatetags/sentry_helpers.py
@@ -13,18 +13,14 @@ from collections import namedtuple
 from datetime import timedelta
 from random import randint
 
-import pytz
 import six
 from django import template
-from django.conf import settings
 from django.template.defaultfilters import stringfilter
 from django.utils import timezone
 from django.utils.html import escape
 from django.utils.safestring import mark_safe
 from django.utils.translation import ugettext as _
 from pkg_resources import parse_version as Version
-from templatetag_sugar.parser import Constant, Name, Variable
-from templatetag_sugar.register import tag
 
 from sentry import options
 from sentry.api.serializers import serialize as serialize_func
@@ -156,27 +152,11 @@ def is_url(value):
     return True
 
 
-# seriously Django?
-@register.filter
-def subtract(value, amount):
-    return int(value) - int(amount)
-
-
 @register.filter
 def absolute_value(value):
     return abs(int(value) if isinstance(value, six.integer_types) else float(value))
 
 
-@register.filter
-def has_charts(group):
-    from sentry.utils.db import has_charts
-    if hasattr(group, '_state'):
-        db = group._state.db or 'default'
-    else:
-        db = 'default'
-    return has_charts(db)
-
-
 @register.filter
 def as_sorted(value):
     return sorted(value)
@@ -201,21 +181,6 @@ def small_count(v, precision=1):
     return v
 
 
-@register.filter
-def num_digits(value):
-    return len(six.text_type(value))
-
-
-@register.filter
-def to_str(data):
-    return six.text_type(data)
-
-
-@register.filter
-def is_none(value):
-    return value is None
-
-
 @register.simple_tag(takes_context=True)
 def serialize(context, value):
     value = serialize_func(value, context['request'].user)
@@ -286,62 +251,6 @@ def date(dt, arg=None):
     return date(dt, arg)
 
 
-@tag(
-    register, [
-        Constant('for'),
-        Variable('user'),
-        Constant('from'),
-        Variable('project'),
-        Constant('as'),
-        Name('asvar')
-    ]
-)
-def get_project_dsn(context, user, project, asvar):
-    from sentry.models import ProjectKey
-
-    if not user.is_authenticated():
-        context[asvar] = None
-        return ''
-
-    try:
-        key = ProjectKey.objects.filter(project=project)[0]
-    except ProjectKey.DoesNotExist:
-        context[asvar] = None
-    else:
-        context[asvar] = key.get_dsn()
-
-    return ''
-
-
-@register.filter
-def trim_schema(value):
-    return value.split('//', 1)[-1]
-
-
-@register.filter
-def with_metadata(group_list, request):
-    group_list = list(group_list)
-    if request.user.is_authenticated() and group_list:
-        project = group_list[0].project
-        bookmarks = set(
-            project.bookmark_set.filter(
-                user=request.user,
-                group__in=group_list,
-            ).values_list('group_id', flat=True)
-        )
-    else:
-        bookmarks = set()
-
-    # TODO(dcramer): this is obsolete and needs to pull from the tsdb backend
-    historical_data = {}
-
-    for g in group_list:
-        yield g, {
-            'is_bookmarked': g.pk in bookmarks,
-            'historical_data': ','.join(six.text_type(x[1]) for x in historical_data.get(g.id, [])),
-        }
-
-
 @register.simple_tag
 def percent(value, total, format=None):
     if not (value and total):
@@ -365,14 +274,6 @@ def split(value, delim=''):
     return value.split(delim)
 
 
-@register.inclusion_tag('sentry/partial/github_button.html')
-def github_button(user, repo):
-    return {
-        'user': user,
-        'repo': repo,
-    }
-
-
 @register.filter
 def urlquote(value, safe=''):
     return quote(value.encode('utf8'), safe)
@@ -383,23 +284,6 @@ def basename(value):
     return os.path.basename(value)
 
 
-@register.filter
-def user_display_name(user):
-    return user.name or user.username
-
-
-@register.simple_tag(takes_context=True)
-def localized_datetime(context, dt, format='DATETIME_FORMAT'):
-    request = context['request']
-    timezone = getattr(request, 'timezone', None)
-    if not timezone:
-        timezone = pytz.timezone(settings.SENTRY_DEFAULT_TIME_ZONE)
-
-    dt = dt.astimezone(timezone)
-
-    return date(dt, format)
-
-
 @register.filter
 def list_organizations(user):
     return Organization.objects.get_for_user(user)
@@ -414,16 +298,6 @@ def count_pending_access_requests(organization):
     ).count()
 
 
-@register.filter
-def format_userinfo(user):
-    parts = user.username.split('@')
-    if len(parts) == 1:
-        username = user.username
-    else:
-        username = parts[0].lower()
-    return mark_safe('<span title="%s">%s</span>' % (escape(user.username), escape(username), ))
-
-
 @register.filter
 def soft_break(value, length):
     return _soft_break(
