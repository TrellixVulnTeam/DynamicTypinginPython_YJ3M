commit d23f5ed43f30a6c8040cc96a787104be76bd7aea
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Apr 28 16:04:56 2015 -0700

    Remove various unused code

diff --git a/src/sentry/interfaces/base.py b/src/sentry/interfaces/base.py
index 2145e1214b..facd82c2da 100644
--- a/src/sentry/interfaces/base.py
+++ b/src/sentry/interfaces/base.py
@@ -105,9 +105,6 @@ class Interface(object):
     def get_score(self):
         return self.score
 
-    def to_html(self, event, is_public=False, **kwargs):
-        return ''
-
     def to_string(self, event, is_public=False, **kwargs):
         return ''
 
diff --git a/src/sentry/interfaces/exception.py b/src/sentry/interfaces/exception.py
index 5e9ba9cde1..e9f0bdc464 100644
--- a/src/sentry/interfaces/exception.py
+++ b/src/sentry/interfaces/exception.py
@@ -15,7 +15,6 @@ from django.conf import settings
 from sentry.interfaces.base import Interface
 from sentry.interfaces.stacktrace import Stacktrace, is_newest_frame_first
 from sentry.utils.safe import trim
-from sentry.web.helpers import render_to_string
 
 
 class SingleException(Interface):
@@ -318,18 +317,6 @@ class Exception(Interface):
             'last_exc_omitted': last_exc_omitted,
         }
 
-    def to_html(self, event, **kwargs):
-        if not self.values:
-            return ''
-
-        if len(self.values) == 1 and not self.values[0].stacktrace:
-            exception = self.values[0]
-            context = exception.get_context(event=event, **kwargs)
-            return render_to_string('sentry/partial/interfaces/exception.html', context)
-
-        context = self.get_context(event=event, **kwargs)
-        return render_to_string('sentry/partial/interfaces/chained_exception.html', context)
-
     def to_string(self, event, is_public=False, **kwargs):
         if not self.values:
             return ''
diff --git a/src/sentry/interfaces/http.py b/src/sentry/interfaces/http.py
index 34d98cdaa3..7fd8817f01 100644
--- a/src/sentry/interfaces/http.py
+++ b/src/sentry/interfaces/http.py
@@ -19,7 +19,7 @@ from urlparse import parse_qsl, urlsplit, urlunsplit
 
 from sentry.constants import HTTP_METHODS
 from sentry.interfaces.base import Interface
-from sentry.utils.safe import trim, trim_dict, safe_execute
+from sentry.utils.safe import trim, trim_dict
 from sentry.web.helpers import render_to_string
 
 
@@ -177,28 +177,6 @@ class Http(Interface):
             'query_string': self.query_string,
         })
 
-    def to_html(self, event, is_public=False, **kwargs):
-        context = {
-            'is_public': is_public,
-            'event': event,
-            'url': self.full_url,
-            'short_url': self.url,
-            'method': self.method,
-            'query_string': self.query_string,
-            'fragment': self.fragment,
-            'headers': self.headers,
-            'curl': safe_execute(self.to_curl),
-        }
-        if not is_public:
-            # It's kind of silly we store this twice
-            context.update({
-                'cookies': self.cookies,
-                'env': self.env,
-                'data': self.data,
-            })
-
-        return render_to_string('sentry/partial/interfaces/http.html', context)
-
     def to_curl(self):
         method = self.method.upper() if self.method else 'GET'
         if self.cookies:
diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 20291f16fa..50d4c3e35d 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -548,13 +548,6 @@ class Stacktrace(Interface):
             context['stacktrace'] = self.get_traceback(event, newest_first=newest_first)
         return context
 
-    def to_html(self, event, **kwargs):
-        context = self.get_context(
-            event=event,
-            **kwargs
-        )
-        return render_to_string('sentry/partial/interfaces/stacktrace.html', context)
-
     def to_string(self, event, is_public=False, **kwargs):
         return self.get_stacktrace(event, system_frames=False, max_frames=10)
 
diff --git a/src/sentry/interfaces/template.py b/src/sentry/interfaces/template.py
index 6b3a44a1ae..c0d2659ce2 100644
--- a/src/sentry/interfaces/template.py
+++ b/src/sentry/interfaces/template.py
@@ -12,7 +12,6 @@ __all__ = ('Template',)
 from sentry.interfaces.base import Interface
 from sentry.interfaces.stacktrace import get_context
 from sentry.utils.safe import trim
-from sentry.web.helpers import render_to_string
 
 
 class Template(Interface):
@@ -83,26 +82,6 @@ class Template(Interface):
 
         return '\n'.join(result)
 
-    def to_html(self, event, is_public=False, **kwargs):
-        context = get_context(
-            lineno=self.lineno,
-            context_line=self.context_line,
-            pre_context=self.pre_context,
-            post_context=self.post_context,
-            filename=self.filename,
-        )
-
-        return render_to_string('sentry/partial/interfaces/template.html', {
-            'event': event,
-            'abs_path': self.abs_path,
-            'filename': self.filename,
-            'lineno': int(self.lineno),
-            'start_lineno': context[0][0],
-            'context': context,
-            'template': self.get_traceback(event, context),
-            'is_public': is_public,
-        })
-
     def get_traceback(self, event, context):
         result = [
             event.message, '',
diff --git a/src/sentry/interfaces/user.py b/src/sentry/interfaces/user.py
index ce99e1ff37..fd8f548e92 100644
--- a/src/sentry/interfaces/user.py
+++ b/src/sentry/interfaces/user.py
@@ -82,17 +82,6 @@ class User(Interface):
             'user_data': self.data,
         }
 
-    def to_html(self, event, is_public=False, **kwargs):
-        if is_public:
-            return ''
-
-        context = self.get_context()
-        context.update({
-            'is_public': is_public,
-            'event': event,
-        })
-        return render_to_string('sentry/partial/interfaces/user.html', context)
-
     def to_email_html(self, event, **kwargs):
         context = self.get_context()
         return render_to_string('sentry/partial/interfaces/user_email.html', context)
diff --git a/src/sentry/templates/sentry/includes/event-details.html b/src/sentry/templates/sentry/includes/event-details.html
deleted file mode 100644
index b78512b3f7..0000000000
--- a/src/sentry/templates/sentry/includes/event-details.html
+++ /dev/null
@@ -1,122 +0,0 @@
-{% load i18n %}
-{% load sentry_activity %}
-{% load sentry_helpers %}
-
-{% with event|get_rendered_interfaces:request as interface_list %}
-
-    {% if group|has_charts %}
-        <div class="module">
-            <div id="chart" class="chart" data-api-url="{% url 'sentry-api-0-group-stats' group.id %}">
-                <div class="sparkline">
-                    <span class="loading">{% trans "Loading historical data..." %}</span>
-                    <noscript>{% trans "Get yourself some JavaScripts dood" %}</noscript>
-                </div>
-            </div>
-        </div>
-    {% endif %}
-
-    <div class="activity" id="activity">
-        <ul>
-            {% for item in activity %}
-                {% with item|render_activity as out %}
-                    {% if out %}
-                        <li class="item item-{{ item.get_type_display }}">{{ out }}</li>
-                    {% endif %}
-                {% endwith %}
-            {% endfor %}
-        </ul>
-        <a href="#add-note" class="add-note-btn"><i class="icon-comment"></i> Add Note</a>
-        <form class="add-note-form hide" method="POST" action=".">
-            {% csrf_token %}
-            <input type="hidden" name="o" value="note">
-            {{ add_note_form.text }}
-            <fieldset class="form-actions">
-                <button type="submit" class="btn btn-small btn-primary">{% trans "Add Note" %}</button>
-            </fieldset>
-        </form>
-    </div>
-
-    <div class="box event-browser">
-      <div class="event-controls">
-        <a class="btn btn-sm btn-default older {% if not prev_event %} disabled{% endif %}"
-           {% if prev_event %} href="{% url 'sentry-group-event' group.team.slug group.project.slug group.id prev_event.id %}"{% endif %}>
-            <span class="icon-arrow-left"></span>  {% trans "Older" %}</a>
-        <a class="btn btn-sm btn-default newer {% if not next_event %} disabled{% endif %}"
-           {% if next_event %} href="{% url 'sentry-group-event' group.team.slug group.project.slug group.id next_event.id %}"{% endif %}>
-            {% trans "Newer" %} <span class="icon-arrow-right"></span></a>
-           <p>Event id <strong>{{ event.event_id }}</strong> occurred <time title="{{ event.datetime }}">{% localized_datetime event.datetime %}</time></p>
-      </div>
-    </div>
-
-    {% if group.is_muted %}
-        <div class="alert alert-info">This event has been muted. You will not be notified of any changes and it will not show up in the default feed.</div>
-    {% endif %}
-
-    {% if event.has_two_part_message %}
-    <div class="box">
-      <div class="box-header">
-          <h3>{% trans "Full message" %}</h3>
-      </div>
-      <div class="box-content with-padding">
-        <pre id="full-message">{{ event.message }}</pre>
-      </div>
-    </div>
-    {% endif %}
-
-    {% if tags %}
-        <section class="entry box" id="tags">
-            <div class="box-header">
-                <h4>Tags</h4>
-            </div>
-            <div class="box-content">
-                <ul class="mini-tag-list">
-                    {% for tag_key, tag_value in tags %}
-                        <li>
-                            <strong>{{ tag_key }}</strong>
-                            <em>=</em>
-                            <span><a href="{% url 'sentry-stream' group.team.slug group.project.slug %}?{{ tag_key }}={{ tag_value }}">{{ tag_value }}</a> {% if tag_value|is_url %}<a href="{{ tag_value }}" class="icon-share"></a>{% endif %}</span>
-                        </li>
-                    {% endfor %}
-                </ul>
-            </div>
-        </section>
-    {% endif %}
-
-    {% for interface, interface_html in interface_list %}
-        <section class="entry box" id="{{ interface.get_slug }}">
-            {{ interface_html }}
-        </section>
-    {% endfor %}
-
-    {% if json_data %}
-        <section class="entry box" id="extra">
-            <div class="box-header">
-                <h4>{% trans "Additional Data" %}</h4>
-            </div>
-            <div class="box-content">
-                {% render_values json_data %}
-            </div>
-        </section>
-    {% endif %}
-
-    {% if version_data %}
-        <section class="entry box" id="versions">
-            <div class="box-header">
-                <h2>{% trans "Package Versions" %}</h2>
-            </div>
-            <div class="box-content">
-                <table class="table table-striped">
-                    <colgroup>
-                        <col style="width:130px">
-                    </colgroup>
-                    {% for k, v in version_data.iteritems|as_sorted %}
-                        <tr>
-                            <th class="key">{{ k }}</th>
-                            <td class="values"><code>{{ v }}</code></td>
-                        </tr>
-                    {% endfor %}
-                </table>
-            </div>
-        </section>
-    {% endif %}
-{% endwith %}
diff --git a/src/sentry/templates/sentry/partial/_event_details.html b/src/sentry/templates/sentry/partial/_event_details.html
deleted file mode 100644
index c0dc3b4153..0000000000
--- a/src/sentry/templates/sentry/partial/_event_details.html
+++ /dev/null
@@ -1,60 +0,0 @@
-{% load i18n %}
-{% load sentry_helpers %}
-
-{% if tags %}
-    <div id="tags" class="box">
-        <div class="box-header">
-            <h3>Tags</h3>
-        </div>
-        <div class="box-content with-padding">
-            <ul class="mini-tag-list">
-                {% for tag_key, tag_value in tags %}
-                    <li>
-                        <strong>{{ tag_key }}</strong>
-                        <em>=</em>
-                        <span><a href="{% url 'sentry-stream' group.organization.slug group.project.slug %}?{{ tag_key }}={{ tag_value }}">{{ tag_value }}</a> {% if tag_value|is_url %}<a href="{{ tag_value }}" class="icon-share"></a>{% endif %}</span>
-                    </li>
-                {% endfor %}
-            </ul>
-        </div>
-    </div>
-{% endif %}
-
-{% for interface, interface_html in interface_list %}
-    <div id="{{ interface.get_slug }}">
-        {{ interface_html }}
-    </div>
-{% endfor %}
-
-{% if json_data %}
-    <div id="extra" class="box">
-        <div class="box-header">
-            <h3>{% trans "Additional Data" %}</h3>
-        </div>
-        <div class="box-content with-padding">
-            {% render_values json_data %}
-        </div>
-    </div>
-{% endif %}
-
-{% if version_data %}
-    <div id="versions" class="box">
-        <div class="box-header">
-            <h3>{% trans "Package Versions" %}</h3>
-        </div>
-        <div class="box-content with-padding">
-            <table class="table vars">
-                <colgroup>
-                    <col style="width:80%">
-                    <col style="width:20%">
-                </colgroup>
-                {% for k, v in version_data.iteritems|as_sorted %}
-                    <tr>
-                        <th class="key">{{ k }}</th>
-                        <td class="values" style="text-align: right"><code>{{ v }}</code></td>
-                    </tr>
-                {% endfor %}
-            </table>
-        </div>
-    </div>
-{% endif %}
diff --git a/src/sentry/templates/sentry/partial/interfaces/chained_exception.html b/src/sentry/templates/sentry/partial/interfaces/chained_exception.html
deleted file mode 100644
index 881da70e1d..0000000000
--- a/src/sentry/templates/sentry/partial/interfaces/chained_exception.html
+++ /dev/null
@@ -1,64 +0,0 @@
-{% load i18n %}
-{% load sentry_helpers %}
-
-<div class="box">
-    <div class="box-header">
-        {% block comment %}
-            <a href="javascript:void(0)" data-container="#raw_stacktrace" data-title="Stacktrace" class="popup btn btn-default btn-sm pull-right">{% trans "Raw" %}</a>
-        {% endblock %}
-        {% if system_frames %}
-            <form class="pull-right" style="margin:8px 20px 0 0; white-space: nowrap">
-                <label class="checkbox"><input type="checkbox" id="show_hidden_frames"> Show {{ system_frames }} hidden frames</label>
-            </form>
-        {% endif %}
-        <h3>
-            {% trans "Exception" %}
-            {% if newest_first %}
-                ({% trans "most recent call first" %})
-            {% else %}
-                ({% trans "most recent call last" %})
-            {% endif %}
-        </h3>
-    </div>
-    <div class="box-content with-padding">
-        {% for exception in exceptions %}
-            <div class="traceback{% if not exception.is_root %} subtraceback{% endif %}">
-                {% if not exception.is_root %}
-                    <h3>Caused by <span title="{{ exception.fullname }}">{{ exception.exception_type }}</span></h3>
-                {% else %}
-                    <h3><span title="{{ exception.fullname }}">{{ exception.exception_type }}</span>{% if not newest_first %} <small>Root Cause</small>{% endif %}</h3>
-                {% endif %}
-                {% if exception.exception_value %}
-                    <pre>{{ exception.exception_value }}</pre>
-                {% endif %}
-                {% with exception.stacktrace.frames as frames %}
-                    {% with stack_id=exception.stack_id first_frame_omitted=exception.stacktrace.first_frame_omitted last_frame_omitted=exception.stacktrace.last_frame_omitted %}
-                        {% include "sentry/partial/interfaces/stacktrace_inner.html" %}
-                    {% endwith %}
-                {% endwith %}
-            </div>
-            {% if forloop.counter == first_exc_omitted %}
-            <div class="exc-omitted">
-                Exceptions {{ first_exc_omitted }} until {{ last_exc_omitted }} were omitted and not available.
-            </div>
-            {% endif %}
-        {% endfor %}
-    </div>
-</div>
-
-<div id="raw_stacktrace" style="display: none;">
-    <pre>{{ stacktrace }}</pre>
-</div>
-
-{% if system_frames %}
-    <script type="text/javascript">
-    $('#show_hidden_frames').change(function(e){
-        var $el = $(e.target);
-        if ($el.is(':checked')) {
-            $('.traceback li.system-frame').show();
-        } else {
-            $('.traceback li.system-frame').hide();
-        }
-    }).change();
-    </script>
-{% endif %}
diff --git a/src/sentry/templates/sentry/partial/interfaces/exception.html b/src/sentry/templates/sentry/partial/interfaces/exception.html
deleted file mode 100644
index 33eebeb2cd..0000000000
--- a/src/sentry/templates/sentry/partial/interfaces/exception.html
+++ /dev/null
@@ -1,29 +0,0 @@
-{% load i18n %}
-<div class="box">
-    <div class="box-header">
-        <h3>{% trans "Exception" %}</h3>
-    </div>
-    <div class="box-content with-padding">
-        <table class="table">
-            <colgroup>
-                <col style="width:120px;">
-            </colgroup>
-            <tr>
-                <th>{% trans "Type:" %}</th>
-                <td class="code"><pre>{{ exception_type|escape }}</pre></td>
-            </tr>
-            {% if exception_value %}
-            <tr>
-                <th>{% trans "Value:" %}</th>
-                <td class="code"><pre>{{ exception_value|escape }}</pre></td>
-            </tr>
-            {% endif %}
-            {% if last_frame %}
-                <tr>
-                    <th>{% trans "Location:" %}</th>
-                    <td>{% if last_frame.filename %}{{ last_frame.filename|escape }}{% elif last_frame.module %}{{ last_frame.module|escape }}{% endif %}{% if last_frame.function %} in {{ last_frame.function|escape }} {% endif %}{% if last_frame.lineno %}, line {{ last_frame.lineno }}{% endif %}{% if last_frame.colno %} (col {{ last_frame.colno }}{% endif %}</td>
-                </tr>
-            {% endif %}
-        </table>
-    </div>
-</div>
diff --git a/src/sentry/templates/sentry/partial/interfaces/http.html b/src/sentry/templates/sentry/partial/interfaces/http.html
deleted file mode 100644
index 7d1e3bd38f..0000000000
--- a/src/sentry/templates/sentry/partial/interfaces/http.html
+++ /dev/null
@@ -1,82 +0,0 @@
-{% load i18n %}
-{% load sentry_helpers %}
-
-<div class="box">
-    <div class="box-header">
-        <a href="javascript:void(0)" data-container="#copy_as_curl" data-title="Copy as cURL" class="popup btn btn-default btn-sm pull-right" style="margin-left: 5px">{% trans "Copy as cURL" %}</a>
-        {% if not is_public %}
-            <a href="{% url 'sentry-replay' event.organization.slug event.project.slug event.group_id event.id %}" class="btn btn-default btn-sm pull-right">{% trans "Replay this request" %}</a>
-        {% endif %}
-        <h3>{% trans "Request" %}</h3>
-    </div>
-    <div class="box-content with-padding">
-        <table class="table table-striped vars">
-            <colgroup>
-                <col style="width:130px;">
-            </colgroup>
-            <tbody>
-                <tr>
-                    <th>{% trans "URL:" %}</th>
-                    <td><a href="{{ url }}">{{ short_url }}</a></td>
-                </tr>
-                {% if method %}
-                    <tr>
-                        <th>{% trans "Method:" %}</th>
-                        <td>{{ method }}</td>
-                    </tr>
-                {% endif %}
-                {% if query_string %}
-                    <tr>
-                        <th>{% trans "Query:" %}</th>
-                        <td class="values">
-                            <pre>{{ query_string }}</pre>
-                        </td>
-                    </tr>
-                {% endif %}
-                {% if fragment %}
-                    <tr>
-                        <th>{% trans "Fragment:" %}</th>
-                        <td class="values">
-                            <pre>{{ fragment }}</pre>
-                        </td>
-                    </tr>
-                {% endif %}
-                {% if data %}
-                    <tr>
-                        <th>{% trans "Body:" %}</th>
-                        <td class="values">
-                            {% render_values data %}
-                        </td>
-                    </tr>
-                {% endif %}
-                {% if cookies %}
-                    <tr>
-                        <th>{% trans "Cookies:" %}</th>
-                        <td class="values">
-                            {% render_values cookies %}
-                        </td>
-                    </tr>
-                {% endif %}
-                {% if headers %}
-                    <tr>
-                        <th>{% trans "Headers:" %}</th>
-                        <td class="values">
-                            {% render_values headers %}
-                        </td>
-                    </tr>
-                {% endif %}
-                {% if env %}
-                    <tr>
-                        <th>{% trans "Environment:" %}</th>
-                        <td class="values">
-                            {% render_values env %}
-                        </td>
-                    </tr>
-                {% endif %}
-            </tbody>
-        </table>
-    </div>
-</div>
-<div id="copy_as_curl" style="display: none;">
-    <pre>{{ curl }}</pre>
-</div>
diff --git a/src/sentry/templates/sentry/partial/interfaces/stacktrace.html b/src/sentry/templates/sentry/partial/interfaces/stacktrace.html
deleted file mode 100644
index 3695161acf..0000000000
--- a/src/sentry/templates/sentry/partial/interfaces/stacktrace.html
+++ /dev/null
@@ -1,40 +0,0 @@
-{% load i18n %}
-{% load sentry_helpers %}
-
-<div class="box">
-    <div class="box-header">
-        <a href="javascript:void(0)" data-container="#raw_stacktrace" data-title="Stacktrace" class="popup btn btn-default btn-sm pull-right">{% trans "Raw" %}</a>
-        {% if system_frames %}
-            <form class="pull-right" style="margin:8px 20px 0 0; white-space: nowrap">
-                <label class="checkbox"><input type="checkbox" id="show_hidden_frames"> Show {{ system_frames }} hidden frames</label>
-            </form>
-        {% endif %}
-        <h3>
-            {% trans "Stacktrace" %}
-            {% if newest_first %}
-                ({% trans "most recent call first" %})
-            {% else %}
-                ({% trans "most recent call last" %})
-            {% endif %}
-        </h3>
-    </div>
-    <div class="box-content with-padding">
-        {% include "sentry/partial/interfaces/stacktrace_inner.html" %}
-    </div>
-</div>
-<div id="raw_stacktrace" style="display: none;">
-    <pre>{{ stacktrace }}</pre>
-</div>
-
-{% if system_frames %}
-    <script type="text/javascript">
-    $('#show_hidden_frames').change(function(e){
-        var $el = $(e.target);
-        if ($el.is(':checked')) {
-            $('.traceback li.system-frame').show();
-        } else {
-            $('.traceback li.system-frame').hide();
-        }
-    }).change();
-    </script>
-{% endif %}
diff --git a/src/sentry/templates/sentry/partial/interfaces/stacktrace_inner.html b/src/sentry/templates/sentry/partial/interfaces/stacktrace_inner.html
deleted file mode 100644
index ce15690d1a..0000000000
--- a/src/sentry/templates/sentry/partial/interfaces/stacktrace_inner.html
+++ /dev/null
@@ -1,119 +0,0 @@
-{% load i18n %}
-{% load sentry_helpers %}
-
-<ul class="list-unstyled traceback">
-    {% for frame in frames %}
-        <li class="frame{% if not frame.in_app %} system-frame{% endif %}{% if frame.errors %} frame-errors{% endif %} frame-{{ stack_id }}-{{ forloop.counter0 }}">
-            <p>
-                {% if frame.filename %}
-                    <code>{{ frame.filename }}</code>
-                    {% if frame.is_url %}
-                        <a href="{{ frame.abs_path }}" class="icon-share"></a>
-                    {% endif %}
-                    {% if frame.sourcemap %}
-                        <a class="annotation trigger-popover"
-                            data-placement="right"
-                            data-title="{% trans "Original Location" %}"
-                            data-content="<dl>
-                                <dt>{% trans "Filename" %}</dt>
-                                <dd>
-                                    {% if frame.orig_abs_path|is_url %}
-                                        <a href='{{ frame.orig_abs_path }}'>{{ frame.orig_filename }}</a>
-                                    {% else %}
-                                        {{ frame.orig_filename }}
-                                    {% endif %}
-                                </dd>
-                                <dt>{% trans "Line Number" %}</dt>
-                                <dd>{{ frame.orig_lineno|default_if_none:"n/a" }}</dd>
-                                <dt>{% trans "Column Number" %}</dt>
-                                <dd>{{ frame.orig_colno|default_if_none:"n/a" }}</dd>
-                                <dt>{% trans "Function" %}</dt>
-                                <dd>{{ frame.orig_function|default_if_none:"n/a" }}</dd>
-                                <dt>{% trans "Sourcemap" %}</dt>
-                                <dd><a href='{{ frame.sourcemap_url }}'>{{ frame.sourcemap }}</a></dd>
-                                {% if frame.errors %}
-                                  <dt>Error</dt>
-                                  <dd>{% for error in frame.errors %}{{ error }}<br />{% endfor %}</dd>
-                                {% endif %}
-                            </dl>">?</a>
-                    {% elif frame.abs_path and frame.abs_path != filename %}
-                        <a class="annotation trigger-popover"
-                            data-placement="right"
-                            data-title="{% trans "Original Location" %}"
-                            data-content="<dl>
-                                <dt>{% trans "Filename" %}</dt>
-                                <dd>
-                                    {% if frame.abs_path|is_url %}
-                                        <a href='{{ frame.abs_path }}'>{{ frame.abs_path }}</a>
-                                    {% else %}
-                                        {{ frame.abs_path }}
-                                    {% endif %}
-                                </dd>
-                                {% if not frame.lineno|is_none %}
-                                    <dt>{% trans "Line Number" %}</dt>
-                                    <dd>{{ frame.lineno }}</dd>
-                                {% endif %}
-                                {% if not frame.colno|is_none %}
-                                    <dt>{% trans "Column Number" %}</dt>
-                                    <dd>{{ frame.colno }}</dd>
-                                {% endif %}
-                                {% if frame.function %}
-                                    <dt>{% trans "Function" %}</dt>
-                                    <dd>{{ frame.function }}</dd>
-                                {% endif %}
-                                {% if frame.errors %}
-                                  <dt>Error</dt>
-                                  <dd>{% for error in frame.errors %}{{ error }}<br />{% endfor %}</dd>
-                                {% endif %}
-                            </dl>">?</a>
-                    {% endif %}
-                {% elif frame.module %}
-                    <code>{{ frame.module }}</code>
-                {% endif %}
-                {% if frame.function %}
-                     {% if frame.filename or frame.module %}in {% endif %}<code>{{ frame.function }}</code>
-                {% endif %}
-                {% if not frame.context and not frame.lineno|is_none %}
-                     at line <code>{{ frame.lineno }}{% if not frame.colno|is_none %}:{{ frame.colno }}{% endif %}</code>
-                {% endif %}
-                {% if system_frames and frame.in_app %}
-                    <span class="tag-app">(application)</span>
-                {% endif %}
-            </p>
-
-            {% if frame.context or frame.vars %}
-                <div class="commands">
-                    <a href="javascript:void(0)" onclick="$('.frame-{{ stack_id }}-{{ forloop.counter0 }}').toggleClass('expanded')" title="{% trans "Toggle Context" %}" rel="tooltip" class="tip">{% if frame.vars %}<i class="icon-info-sign"></i> {% endif %}{% if frame.context %}<i class="icon-tasks"></i> {% endif %}</a>
-                </div>
-            {% endif %}
-
-            {% if frame.context %}
-                <ol start="{{ frame.start_lineno }}" class="context">
-                  {% if frame.errors %}
-                    <li class="expandable error">
-                      {% for error in frame.errors %}{{ error }}<br />{% endfor %}
-                    </li>
-                  {% endif %}
-                {% for num, line in frame.context %}
-                    <li{% if num == frame.lineno %} class="active"{% else %} class="expandable"{% endif %} onclick="$('.frame-{{ stack_id }}-{{ forloop.parentloop.counter0 }}').toggleClass('expanded')">{{ line }}</li>
-                {% endfor %}
-                </ol>
-            {% elif not frame.context_line|is_none %}
-                <ol start="{{ frame.lineno }}" class="context">
-                    <li class="active">{{ frame.context_line }}</li>
-                </ol>
-            {% endif %}
-
-            {% if frame.vars %}
-                <div class="stack stack{{ forloop.counter0 }} expandable">
-                    {% render_values frame.vars %}
-                </div>
-            {% endif %}
-        </li>
-        {% if forloop.counter == first_frame_omitted %}
-        <li class="frames-omitted">
-            Frames {{ first_frame_omitted }} until {{ last_frame_omitted }} were omitted and not available.
-        </li>
-        {% endif %}
-    {% endfor %}
-</ul>
diff --git a/src/sentry/templates/sentry/partial/interfaces/template.html b/src/sentry/templates/sentry/partial/interfaces/template.html
deleted file mode 100644
index 51cd50f820..0000000000
--- a/src/sentry/templates/sentry/partial/interfaces/template.html
+++ /dev/null
@@ -1,26 +0,0 @@
-{% load i18n %}
-
-<div id="template" class="module">
-    <div class="page-header">
-        <a href="javascript:void(0)" data-container="#raw_template" data-title="Template" class="popup btn small pull-right">{% trans "Raw" %}</a>
-        <h2>{% trans "Template Error" %}</h2>
-    </div>
-    <div class="module-content expanded frame">
-        <p><code>{{ filename }}</code> at line <code>{{ lineno }}</code></p>
-        {% if context %}
-            <div class="commands">
-                <a href="javascript:void(0)" onclick="$('#template .module-content').toggleClass('expanded')" title="{% trans "Toggle Context" %}" rel="tooltip" class="tip"><i class="icon-th-list"></i></a>
-            </div>
-
-            <ol start="{{ start_lineno }}" class="context">
-                {% for num, line in context %}
-                    <li class="{% if num == lineno %} active{% else %} expandable{% endif %}" onclick="$('#template .module-content').toggleClass('expanded')">{{ line }}</li>
-                {% endfor %}
-            </ol>
-        {% endif %}
-    </div>
-</div>
-
-<div id="raw_template" style="display: none;">
-    <pre>{{ template }}</pre>
-</div>
diff --git a/src/sentry/templates/sentry/partial/interfaces/user.html b/src/sentry/templates/sentry/partial/interfaces/user.html
deleted file mode 100644
index bb857b9a73..0000000000
--- a/src/sentry/templates/sentry/partial/interfaces/user.html
+++ /dev/null
@@ -1,71 +0,0 @@
-{% load i18n %}
-{% load sentry_helpers %}
-
-<div id="request" class="box">
-  <div class="box-header">
-    <h3>{% trans "User" %}</h3>
-  </div>
-  <div class="box-content with-padding">
-    <div class="row">
-    {% if user_email %}
-      <div class="span1">
-        <div class="avatar">
-          <img src="{% gravatar_url user_email size 64 %}">
-        </div>
-      </div>
-    {% endif %}
-    <div class="span11">
-      <table class="table vars">
-        <colgroup>
-            <col style="width:130px;">
-        </colgroup>
-        <tbody>
-          {% if user_id %}
-          <tr>
-            <th>{% trans "ID:" %}</th>
-            <td class="code">{{ user_id }}</td>
-          </tr>
-          {% endif %}
-          {% if user_ip_address %}
-          <tr>
-            <th>{% trans "IP Address:" %}</th>
-            <td class="code">{{ user_ip_address }}</td>
-          </tr>
-          {% endif %}
-          {% if user_username %}
-          <tr>
-            <th>{% trans "ID:" %}</th>
-            <td class="code">{{ user_id }}</td>
-          </tr>
-          {% endif %}
-          {% if user_ip_address %}
-          <tr>
-            <th>{% trans "IP Address:" %}</th>
-            <td class="code">{{ user_ip_address }}</td>
-          </tr>
-          {% endif %}
-          {% if user_username %}
-            <tr>
-              <th>{% trans "Username:" %}</th>
-              <td class="code">{{ user_username }}</td>
-            </tr>
-          {% endif %}
-          {% if user_email %}
-            <tr>
-              <th>{% trans "Email:" %}</th>
-              <td class="code">{{ user_email }}</td>
-            </tr>
-          {% endif %}
-          {% if user_data %}
-            {% for key, value in user_data.iteritems %}
-              <tr>
-                <th>{{ key|titlize }}</th>
-                <td class="code">{{ value }}</td>
-              </tr>
-            {% endfor %}
-          {% endif %}
-        </tbody>
-      </table>
-    </div>
-  </div>
-</div>
diff --git a/src/sentry/templatetags/sentry_helpers.py b/src/sentry/templatetags/sentry_helpers.py
index 511a3b3ec0..4145c548dc 100644
--- a/src/sentry/templatetags/sentry_helpers.py
+++ b/src/sentry/templatetags/sentry_helpers.py
@@ -35,12 +35,10 @@ from sentry import options
 from sentry.api.serializers import serialize as serialize_func
 from sentry.constants import EVENTS_PER_PAGE
 from sentry.models import Organization
-from sentry.web.helpers import group_is_public
 from sentry.utils import json, to_unicode
 from sentry.utils.avatar import get_gravatar_url
 from sentry.utils.http import absolute_uri
 from sentry.utils.javascript import to_json
-from sentry.utils.safe import safe_execute
 from sentry.utils.strings import truncatechars
 from templatetag_sugar.register import tag
 from templatetag_sugar.parser import Name, Variable, Constant, Optional
@@ -254,37 +252,6 @@ def querystring(context, request, withoutvar, asvar=None):
     return result
 
 
-@register.inclusion_tag('sentry/partial/_form.html')
-def render_form(form):
-    return {'form': form}
-
-
-@register.filter
-def as_bookmarks(group_list, user):
-    group_list = list(group_list)
-    if user.is_authenticated() and group_list:
-        project = group_list[0].project
-        bookmarks = set(project.bookmark_set.filter(
-            user=user,
-            group__in=group_list,
-        ).values_list('group_id', flat=True))
-    else:
-        bookmarks = set()
-
-    for g in group_list:
-        yield g, g.pk in bookmarks
-
-
-@register.filter
-def is_bookmarked(group, user):
-    if user.is_authenticated():
-        return group.bookmark_set.filter(
-            user=user,
-            group=group,
-        ).exists()
-    return False
-
-
 @register.filter
 def date(dt, arg=None):
     from django.template.defaultfilters import date
@@ -378,18 +345,6 @@ def split(value, delim=''):
     return value.split(delim)
 
 
-@register.filter
-def get_rendered_interfaces(event, request):
-    interface_list = []
-    is_public = group_is_public(event.group, request.user)
-    for interface in event.interfaces.itervalues():
-        html = safe_execute(interface.to_html, event, is_public=is_public)
-        if not html:
-            continue
-        interface_list.append((interface, mark_safe(html)))
-    return sorted(interface_list, key=lambda x: x[0].get_display_score(), reverse=True)
-
-
 @register.inclusion_tag('sentry/partial/github_button.html')
 def github_button(user, repo):
     return {
@@ -398,46 +353,6 @@ def github_button(user, repo):
     }
 
 
-@register.inclusion_tag('sentry/partial/data_values.html')
-def render_values(value, threshold=5, collapse_to=3):
-    if isinstance(value, (list, tuple)):
-        value = dict(enumerate(value))
-        is_list, is_dict = bool(value), True
-    else:
-        is_list, is_dict = False, isinstance(value, dict)
-
-    context = {
-        'is_dict': is_dict,
-        'is_list': is_list,
-        'threshold': threshold,
-        'collapse_to': collapse_to,
-    }
-
-    if is_dict:
-        value = sorted(value.iteritems())
-        value_len = len(value)
-        over_threshold = value_len > threshold
-        if over_threshold:
-            context.update({
-                'over_threshold': over_threshold,
-                'hidden_values': value_len - collapse_to,
-                'value_before_expand': value[:collapse_to],
-                'value_after_expand': value[collapse_to:],
-            })
-        else:
-            context.update({
-                'over_threshold': over_threshold,
-                'hidden_values': 0,
-                'value_before_expand': value,
-                'value_after_expand': [],
-            })
-
-    else:
-        context['value'] = value
-
-    return context
-
-
 @tag(register, [Constant('from'), Variable('project'),
                 Constant('as'), Name('asvar')])
 def recent_alerts(context, project, asvar):
@@ -448,17 +363,6 @@ def recent_alerts(context, project, asvar):
     return ''
 
 
-@register.filter
-def reorder_teams(team_list, team=None):
-    pending = []
-    for t, p_list in team_list:
-        if t == team:
-            pending.insert(0, (t, p_list))
-        else:
-            pending.append((t, p_list))
-    return pending
-
-
 @register.filter
 def urlquote(value, safe=''):
     return quote(value.encode('utf8'), safe)
diff --git a/tests/sentry/interfaces/test_exception.py b/tests/sentry/interfaces/test_exception.py
index aa2178b4f0..a190154e72 100644
--- a/tests/sentry/interfaces/test_exception.py
+++ b/tests/sentry/interfaces/test_exception.py
@@ -77,11 +77,6 @@ ValueError: hello world
         all_values = sum([v.get_hash() for v in inst.values], [])
         assert inst.get_hash() == all_values
 
-    def test_to_html_render_call(self):
-        # stupid test to ensure that we dont straight up error
-        result = self.interface.to_html(self.event)
-        assert result
-
     def test_context_with_mixed_frames(self):
         inst = Exception.to_python(dict(values=[{
             'type': 'ValueError',
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index 6175bf075f..1c35befcc5 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -271,40 +271,6 @@ class StacktraceTest(TestCase):
         get_stacktrace.assert_called_once_with(event, newest_first=None)
         self.assertEquals(result, 'foo\n\nbar')
 
-    @mock.patch('sentry.interfaces.stacktrace.is_newest_frame_first', mock.Mock(return_value=False))
-    @mock.patch('sentry.interfaces.stacktrace.Stacktrace.get_traceback')
-    @mock.patch('sentry.interfaces.stacktrace.render_to_string')
-    @mock.patch('sentry.interfaces.stacktrace.Frame.get_context')
-    def test_to_html_render_call(self, get_frame_context, render_to_string, get_traceback):
-        event = mock.Mock(spec=Event())
-        get_traceback.return_value = 'bar'
-        interface = Stacktrace.to_python(dict(frames=[{'lineno': 1, 'filename': 'foo.py'}]))
-        result = interface.to_html(event)
-        get_traceback.assert_called_once_with(event, newest_first=False)
-        get_frame_context.assert_called_once_with(event=event, is_public=False)
-        render_to_string.assert_called_once_with('sentry/partial/interfaces/stacktrace.html', {
-            'event': event,
-            'frames': [get_frame_context.return_value],
-            'stacktrace': 'bar',
-            'stack_id': 'stacktrace_1',
-            'system_frames': 0,
-            'newest_first': False,
-            'is_public': False,
-            'first_frame_omitted': None,
-            'last_frame_omitted': None,
-        })
-        self.assertEquals(result, render_to_string.return_value)
-
-    @mock.patch('sentry.interfaces.stacktrace.is_newest_frame_first', mock.Mock(return_value=False))
-    @mock.patch('sentry.interfaces.stacktrace.Stacktrace.get_traceback')
-    def test_to_html_response(self, get_traceback):
-        event = mock.Mock(spec=Event())
-        event.message = 'foo'
-        get_traceback.return_value = 'bar'
-        interface = Stacktrace.to_python(dict(frames=[{'lineno': 1, 'filename': 'foo.py'}]))
-        result = interface.to_html(event)
-        get_traceback.assert_called_once_with(event, newest_first=False)
-
     @mock.patch('sentry.interfaces.stacktrace.is_newest_frame_first', mock.Mock(return_value=False))
     def test_get_stacktrace_with_only_filename(self):
         event = mock.Mock(spec=Event())
diff --git a/tests/sentry/interfaces/test_user.py b/tests/sentry/interfaces/test_user.py
index fed93b6b12..488eac8d0b 100644
--- a/tests/sentry/interfaces/test_user.py
+++ b/tests/sentry/interfaces/test_user.py
@@ -33,23 +33,6 @@ class UserTest(TestCase):
             'data': {'favorite_color': 'brown'}
         }
 
-    @mock.patch('sentry.interfaces.user.render_to_string')
-    def test_to_html(self, render_to_string):
-        self.interface.to_html(self.event)
-        render_to_string.assert_called_once_with('sentry/partial/interfaces/user.html', {
-            'is_public': False,
-            'event': self.event,
-            'user_ip_address': None,
-            'user_id': 1,
-            'user_username': None,
-            'user_email': 'lol@example.com',
-            'user_data': {'favorite_color': 'brown'},
-        })
-
-    def test_to_html_public(self):
-        result = self.interface.to_html(self.event, is_public=True)
-        assert result == ''
-
     def test_serialize_unserialize_behavior(self):
         result = type(self.interface).to_python(self.interface.to_json())
         assert result.to_json() == self.interface.to_json()
