commit 9b19e914fd2495030c2a4741ed9f0f5c853e51b4
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jul 16 15:15:42 2015 -0700

    Correctly handle app-less stacktraces

diff --git a/src/sentry/static/sentry/app/components/interfaces/exception.jsx b/src/sentry/static/sentry/app/components/interfaces/exception.jsx
index 8fd8cc988e..22edc4759d 100644
--- a/src/sentry/static/sentry/app/components/interfaces/exception.jsx
+++ b/src/sentry/static/sentry/app/components/interfaces/exception.jsx
@@ -50,7 +50,7 @@ var ExceptionInterface = React.createClass({
 
   getInitialState() {
     return {
-      stackView: "app"
+      stackView: (this.props.data.hasSystemFrames ? "app" : "full")
     };
   },
 
@@ -71,7 +71,9 @@ var ExceptionInterface = React.createClass({
         Exception
         <div className="btn-group">
           <a className="btn btn-sm">Stacktrace:</a>
-          <a className={(stackView === "app" ? "active" : "") + " btn btn-default btn-sm"} onClick={this.toggleStack.bind(this, "app")}>App</a>
+          {data.hasSystemFrames &&
+            <a className={(stackView === "app" ? "active" : "") + " btn btn-default btn-sm"} onClick={this.toggleStack.bind(this, "app")}>App</a>
+          }
           <a className={(stackView === "full" ? "active" : "") + " btn btn-default btn-sm"} onClick={this.toggleStack.bind(this, "full")}>Full</a>
           <a className={(stackView === "raw" ? "active" : "") + " btn btn-default btn-sm"} onClick={this.toggleStack.bind(this, "raw")}>Raw</a>
         </div>
diff --git a/src/sentry/static/sentry/app/components/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/components/interfaces/stacktraceContent.jsx
index 5ed25c853c..da7847dc9a 100644
--- a/src/sentry/static/sentry/app/components/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/interfaces/stacktraceContent.jsx
@@ -162,11 +162,10 @@ var StacktraceContent = React.createClass({
 
   render() {
     var data = this.props.data;
-    var frames = [];
     var firstFrameOmitted, lastFrameOmitted;
     var includeSystemFrames = this.props.includeSystemFrames;
 
-    if (data.frames_omitted) {
+    if (data.framesOmitted) {
       firstFrameOmitted = data.framesOmitted[0];
       lastFrameOmitted = data.framesOmitted[1];
     } else {
@@ -174,6 +173,7 @@ var StacktraceContent = React.createClass({
       lastFrameOmitted = null;
     }
 
+    var frames = [];
     data.frames.forEach((frame, frameIdx) => {
       if (includeSystemFrames || frame.inApp) {
         frames.push(<Frame key={frameIdx} data={frame} />);
