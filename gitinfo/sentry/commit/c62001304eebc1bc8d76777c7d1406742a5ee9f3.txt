commit c62001304eebc1bc8d76777c7d1406742a5ee9f3
Author: Eric Feng <erichfeng@gmail.com>
Date:   Tue Jan 19 17:44:26 2016 -0800

    adding hooks for onboarding

diff --git a/src/sentry/models/groupassignee.py b/src/sentry/models/groupassignee.py
index 8af69fb871..9528167cc6 100644
--- a/src/sentry/models/groupassignee.py
+++ b/src/sentry/models/groupassignee.py
@@ -19,6 +19,8 @@ from sentry.models.activity import Activity
 class GroupAssigneeManager(BaseManager):
 
     def assign(self, group, assigned_to, acting_user=None):
+        from sentry.models import OnboardingTask, OnboardingTaskStatus, OrganizationOnboardingTask
+
         now = timezone.now()
         assignee, created = GroupAssignee.objects.get_or_create(
             group=group,
@@ -54,6 +56,16 @@ class GroupAssigneeManager(BaseManager):
             )
             activity.send_notification()
 
+            OrganizationOnboardingTask.get_or_create(
+                organization=self.organization,
+                user=self.user,
+                task=OnboardingTask.INVITE_MEMBER,
+                status=OnboardingTaskStatus.COMPLETE,
+                values={
+                    'date_completed': timezone.now()
+                }
+            )
+
     def deassign(self, group, acting_user=None):
         affected = GroupAssignee.objects.filter(
             group=group,
diff --git a/src/sentry/models/organizationonboardingtask.py b/src/sentry/models/organizationonboardingtask.py
index f64b59d03c..beb3daacc5 100644
--- a/src/sentry/models/organizationonboardingtask.py
+++ b/src/sentry/models/organizationonboardingtask.py
@@ -8,22 +8,38 @@ sentry.models.organizationonboardingtask
 from django.conf import settings
 from django.db import models
 
-from sentry.db.models import FlexibleForeignKey, Model, sane_repr
+from sentry.db.models import (
+    BoundedPositiveIntegerField,
+    FlexibleForeignKey,
+    Model,
+    sane_repr
+)
 
 class OnboardingTask(object):
     FIRST_EVENT = 1
     INVITE_MEMBER = 2
     ISSUE_TRACKER = 3
     NOTIFICATION_SERVICE = 4
-    SECOND_PLATFORM = 5
-    USER_CONTEXT = 6
-    SOURCEMAPS = 7
-    RELEASE_TRACKING = 8
+    SECOND_PLATFORM = 5  # dependent on FIRST_EVENT
+    USER_CONTEXT = 6  # dependent on FIRST_EVENT
+    SOURCEMAPS = 7  # dependent on RELEASE_TRACKING
+    RELEASE_TRACKING = 8  # dependent on FIRST_EVENT
     USER_REPORTS = 9
-    SENTRY_UPDATES = 10
-    ISSUE_ASSIGNMENT = 11
+    ISSUE_ASSIGNMENT = 10  # dependent on INVITE_MEMBER
+    RELEASE_RESOLVED = 11  # dependent on RELEASE_TRACKING
+    SAVED_SEARCHES = 12
+    RULES = 13
+
 
 class OnboardingTaskStatus(object):
+    """
+    Pending is applicable for:
+    first event: user confirms that sdk has been installed
+    second platform: user confirms that sdk has been installed
+    user context: user has added user context to sdk
+    invite member: until the member has successfully joined org
+    issue tracker: tracker added, issue not yet created
+    """
     COMPLETE = 1
     PENDING = 2
     SKIPPED = 3
@@ -44,7 +60,9 @@ class OrganizationOnboardingTask(Model):
         (OnboardingTask.SOURCEMAPS, 'Upload sourcemaps'),  # Upload sourcemaps for compiled js code
         (OnboardingTask.RELEASE_TRACKING, 'Release tracking'),  # Add release data to Sentry events
         (OnboardingTask.USER_REPORTS, 'User reports'),  # Send user reports
-        (OnboardingTask.SENTRY_UPDATES, 'Sentry updates'),  # Monthly Sentry updates (new features, releases)
+        (OnboardingTask.RELEASE_RESOLVED, 'Resolved in next release'),
+        (OnboardingTask.SAVED_SEARCHES, 'Saved searches'),
+        (OnboardingTask.RULES, 'Rules'),
     )
     INTIAL_TASKS = ['FE', 'IM', 'UC', 'RT']
 
@@ -56,8 +74,8 @@ class OrganizationOnboardingTask(Model):
 
     organization = FlexibleForeignKey('sentry.Organization')
     user = FlexibleForeignKey(settings.AUTH_USER_MODEL, null=False)  # user that completed
-    task = models.BoundedPositiveIntegerField(choices=TASK_CHOICES)
-    status = models.BoundedPositiveIntegerField(choices=STATUS_CHOICES)
+    task = BoundedPositiveIntegerField(choices=TASK_CHOICES)
+    status = BoundedPositiveIntegerField(choices=STATUS_CHOICES)
     date_completed = models.DateTimeField()
 
     class Meta:
diff --git a/src/sentry/plugins/bases/issue.py b/src/sentry/plugins/bases/issue.py
index a52eee9381..8ea1b26e53 100644
--- a/src/sentry/plugins/bases/issue.py
+++ b/src/sentry/plugins/bases/issue.py
@@ -9,10 +9,17 @@ from __future__ import absolute_import
 
 from django import forms
 from django.conf import settings
+from django.utils import timezone
 from django.utils.html import format_html
 from social_auth.models import UserSocialAuth
 
-from sentry.models import GroupMeta, Activity
+from sentry.models import (
+    Activity,
+    GroupMeta,
+    OnboardingTask,
+    OnboardingTaskStatus,
+    OrganizationOnboardingTask,
+)
 from sentry.plugins import Plugin
 from sentry.utils.auth import get_auth_providers
 from sentry.utils.http import absolute_uri
@@ -168,6 +175,15 @@ class IssueTrackingPlugin(Plugin):
                     form_data=form.cleaned_data,
                     request=request,
                 )
+                OrganizationOnboardingTask.objects.create_or_update(
+                    organization=group.project.organization,
+                    user=request.user,
+                    task=OnboardingTask.ISSUE_TRACKER,
+                    values={
+                        'status': OnboardingTaskStatus.COMPLETE,
+                        'date_completed': timezone.now()
+                    }
+                )
             except forms.ValidationError as e:
                 form.errors['__all__'] = [u'Error creating issue: %s' % e]
 
diff --git a/src/sentry/web/frontend/project_issue_tracking.py b/src/sentry/web/frontend/project_issue_tracking.py
index 5f509f4866..9d49c4cbad 100644
--- a/src/sentry/web/frontend/project_issue_tracking.py
+++ b/src/sentry/web/frontend/project_issue_tracking.py
@@ -2,9 +2,11 @@ from __future__ import absolute_import
 
 from django.contrib import messages
 from django.http import HttpResponseRedirect, HttpResponse
+from django.utils import timezone
 from django.utils.safestring import mark_safe
 
 from sentry import constants
+from sentry.models import OnboardingTask, OnboardingTaskStatus, OrganizationOnboardingTask
 from sentry.plugins import plugins, IssueTrackingPlugin
 from sentry.web.frontend.base import ProjectView
 
@@ -21,6 +23,17 @@ class ProjectIssueTrackingView(ProjectView):
     def _handle_enable_plugin(self, request, project):
         plugin = plugins.get(request.POST['plugin'])
         plugin.enable(project)
+
+        OrganizationOnboardingTask.objects.get_or_create(
+            organization=organization,
+            user=request.user,
+            task=OnboardingTask.ISSUE_TRACKER,
+            defaults={
+                'status': OnboardingTaskStatus.PENDING,
+                'date_completed': timezone.now()
+            }
+        )
+
         messages.add_message(
             request, messages.SUCCESS,
             constants.OK_PLUGIN_ENABLED.format(name=plugin.get_title()),
diff --git a/src/sentry/web/frontend/project_notifications.py b/src/sentry/web/frontend/project_notifications.py
index f9445e4da4..85532ecfc4 100644
--- a/src/sentry/web/frontend/project_notifications.py
+++ b/src/sentry/web/frontend/project_notifications.py
@@ -3,12 +3,14 @@ from __future__ import absolute_import
 from django.conf import settings
 from django.contrib import messages
 from django.http import HttpResponseRedirect, HttpResponse
+from django.utils import timezone
 from django.utils.safestring import mark_safe
 from django.utils.translation import ugettext_lazy as _
 
 from sentry import constants
 from sentry.app import digests
 from sentry.digests import get_option_key as get_digest_option_key
+from sentry.models import OnboardingTask, OnboardingTaskStatus, OrganizationOnboardingTask
 from sentry.plugins import plugins, NotificationPlugin
 from sentry.web.forms.projects import (
     DigestSettingsForm,
@@ -31,6 +33,17 @@ class ProjectNotificationsView(ProjectView):
     def _handle_enable_plugin(self, request, project):
         plugin = plugins.get(request.POST['plugin'])
         plugin.enable(project)
+
+        OrganizationOnboardingTask.objects.get_or_create(
+            organization=project.organization,
+            user=request.user,
+            task=OnboardingTask.NOTIFICATION_SERVICE,
+            status=OnboardingTaskStatus.COMPLETE,
+            defaults={
+                'date_completed': timezone.now()
+            }
+        )
+
         messages.add_message(
             request, messages.SUCCESS,
             constants.OK_PLUGIN_ENABLED.format(name=plugin.get_title()),
