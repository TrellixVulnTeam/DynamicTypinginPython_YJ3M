commit 29d6adabcd48c4479205565b10cfea8be4c4ce5b
Author: Jan Michael Auer <account@jauer.org>
Date:   Tue Jan 2 09:26:25 2018 +0100

    feat(minidump): Generate symcaches for minidumps (#6834)

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 8ae1c4b46c..d7f7fbc97b 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -206,6 +206,7 @@ MAX_SYM = 256
 
 # Known dsym mimetypes
 KNOWN_DSYM_TYPES = {
+    'text/x-breakpad': 'breakpad',
     'application/x-mach-binary': 'macho',
     'text/x-proguard+plain': 'proguard',
 }
diff --git a/src/sentry/models/dsymfile.py b/src/sentry/models/dsymfile.py
index 92e3683759..5410431252 100644
--- a/src/sentry/models/dsymfile.py
+++ b/src/sentry/models/dsymfile.py
@@ -201,7 +201,7 @@ class ProjectDSymFile(Model):
     @property
     def supports_symcache(self):
         # Only one that supports it so far.
-        return self.dsym_type == 'macho'
+        return self.dsym_type in ('breakpad', 'macho')
 
     def delete(self, *args, **kwargs):
         super(ProjectDSymFile, self).delete(*args, **kwargs)
@@ -239,6 +239,8 @@ def _create_dsym_from_uuid(project, dsym_type, cpu_name, uuid, fileobj, basename
         object_name = 'proguard-mapping'
     elif dsym_type == 'macho':
         object_name = basename
+    elif dsym_type == 'breakpad':
+        object_name = basename[:-4] if basename.endswith('.sym') else basename
     else:
         raise TypeError('unknown dsym type %r' % (dsym_type, ))
 
