commit 74a85b60c51165213afaf69e77a5f7e27bbbc2fa
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 11 18:36:43 2016 -0800

    Expand router usage where appropriate

diff --git a/src/sentry/tasks/merge.py b/src/sentry/tasks/merge.py
index 897d58b786..15b6072233 100644
--- a/src/sentry/tasks/merge.py
+++ b/src/sentry/tasks/merge.py
@@ -9,7 +9,7 @@ sentry.tasks.merge
 from __future__ import absolute_import
 
 from celery.utils.log import get_task_logger
-from django.db import IntegrityError, transaction
+from django.db import IntegrityError, router, transaction
 from django.db.models import F
 
 from sentry.tasks.base import instrumented_task, retry
@@ -77,7 +77,7 @@ def merge_objects(models, group, new_group, limit=1000,
             logger.info('Merging %r objects where %r into %r', model, group,
                         new_group)
         for obj in model.objects.filter(group=group)[:limit]:
-            with transaction.atomic():
+            with transaction.atomic(using=router.db_for_write(model)):
                 try:
                     model.objects.filter(
                         id=obj.id
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index 52bfdde603..42228a40e6 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -9,7 +9,7 @@ sentry.tasks.post_process
 from __future__ import absolute_import, print_function
 
 from celery.utils.log import get_task_logger
-from django.db import IntegrityError, transaction
+from django.db import IntegrityError, router, transaction
 from raven.contrib.django.models import client as Raven
 
 from sentry.plugins import plugins
@@ -125,7 +125,7 @@ def record_affected_user(event, **kwargs):
         return
 
     try:
-        with transaction.atomic():
+        with transaction.atomic(using=router.db_for_write(EventUser)):
             euser.save()
     except IntegrityError:
         pass
diff --git a/src/sentry/utils/query.py b/src/sentry/utils/query.py
index bdf0896514..d1caaa6d6b 100644
--- a/src/sentry/utils/query.py
+++ b/src/sentry/utils/query.py
@@ -255,7 +255,7 @@ def merge_into(self, other, callback=lambda x: x, using='default'):
                 pre_save.send(created=True, **signal_kwargs)
 
             try:
-                with transaction.atomic():
+                with transaction.atomic(using=using):
                     model.objects.using(using).filter(pk=obj.pk).update(**update_kwargs)
             except IntegrityError:
                 # duplicate key exists, destroy the relations
