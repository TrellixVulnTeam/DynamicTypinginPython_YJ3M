commit 130ee25f5232d375f56f09e73fbcb365f98c8242
Author: David Wang <davidw1339@gmail.com>
Date:   Thu Oct 24 13:38:34 2019 -0700

    feat(ui): Show intermediate information in project settings view (#15250)
    
    The current settings>projects page (https://sentry.io/settings/sentry/projects/) is very slow even though it is paginated. Our larger customers spend up to 5-10 seconds waiting for a list of 100 projects to load. In that time they are met with only a spinning icon even though a lot more meaningful content can be shown (such as the search bar and lists of project names). Changed the page to first show a search bar, then a list of projects, then the stats for each project. This way a user can at least interact with the page without having to wait for all api requests to resolve.
    
    Refs SEN-1197

diff --git a/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
index af6206d08b..43b5102e20 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
@@ -4,16 +4,18 @@ import React from 'react';
 
 import {sortProjects} from 'app/utils';
 import {t} from 'app/locale';
+import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
-import AsyncView from 'app/views/asyncView';
+import LoadingIndicator from 'app/components/loadingIndicator';
 import Pagination from 'app/components/pagination';
 import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
+import Placeholder from 'app/components/placeholder';
 import ProjectListItem from 'app/views/settings/components/settingsProjectItem';
 import SentryTypes from 'app/sentryTypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import withOrganization from 'app/utils/withOrganization';
 import routeTitleGen from 'app/utils/routeTitle';
+import withOrganization from 'app/utils/withOrganization';
 
 import ProjectStatsGraph from './projectStatsGraph';
 
@@ -72,6 +74,10 @@ class OrganizationProjects extends AsyncView {
     return routeTitleGen(t('Projects'), organization.slug, false);
   }
 
+  renderLoading() {
+    return this.renderBody();
+  }
+
   renderBody() {
     const {projectList, projectListPageLinks, projectStats} = this.state;
     const {organization} = this.props;
@@ -108,21 +114,29 @@ class OrganizationProjects extends AsyncView {
             })}
           </PanelHeader>
           <PanelBody css={{width: '100%'}}>
-            {sortProjects(projectList).map((project, i) => (
-              <PanelItem p={0} key={project.id} align="center">
-                <Box p={2} flex="1">
-                  <ProjectListItem project={project} organization={organization} />
-                </Box>
-                <Box w={3 / 12} p={2}>
-                  <ProjectStatsGraph
-                    key={project.id}
-                    project={project}
-                    stats={projectStats[project.id]}
-                  />
-                </Box>
-              </PanelItem>
-            ))}
-            {projectList.length === 0 && (
+            {projectList ? (
+              sortProjects(projectList).map(project => (
+                <PanelItem p={0} key={project.id} align="center">
+                  <Box p={2} flex="1">
+                    <ProjectListItem project={project} organization={organization} />
+                  </Box>
+                  <Box w={3 / 12} p={2}>
+                    {projectStats ? (
+                      <ProjectStatsGraph
+                        key={project.id}
+                        project={project}
+                        stats={projectStats[project.id]}
+                      />
+                    ) : (
+                      <Placeholder height="25px" />
+                    )}
+                  </Box>
+                </PanelItem>
+              ))
+            ) : (
+              <LoadingIndicator />
+            )}
+            {projectList && projectList.length === 0 && (
               <EmptyMessage>{t('No projects found.')}</EmptyMessage>
             )}
           </PanelBody>
