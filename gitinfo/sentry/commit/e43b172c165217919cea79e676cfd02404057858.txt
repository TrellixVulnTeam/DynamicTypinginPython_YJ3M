commit e43b172c165217919cea79e676cfd02404057858
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jun 16 14:37:56 2015 -0700

    Ensure team membership is migrated correctly for global members

diff --git a/src/sentry/models/organization.py b/src/sentry/models/organization.py
index b6ace82416..4f8e8ab174 100644
--- a/src/sentry/models/organization.py
+++ b/src/sentry/models/organization.py
@@ -127,20 +127,32 @@ class Organization(Model):
         }
 
     def merge_to(from_org, to_org):
-        # TODO(dcramer): merging global members is not always desired as
-        # generally you only want to remain a member of the same teams you were
-        # previously (to avoid notifications etc)
         from sentry.models import (
-            ApiKey, AuditLogEntry, OrganizationMember, Project, Team
+            ApiKey, AuditLogEntry, OrganizationMember, OrganizationMemberTeam,
+            Project, Team
         )
 
-        for member in OrganizationMember.objects.filter(organization=from_org):
-            member_qs = OrganizationMember.objects.filter(
-                organization=to_org,
-                user=member.user,
-            )
-            if not member_qs.exists():
-                member.update(organization=to_org)
+        team_list = list(Team.objects.filter(
+            organization=to_org,
+        ))
+
+        for from_member in OrganizationMember.objects.filter(organization=from_org):
+            try:
+                to_member = OrganizationMember.objects.get(
+                    organization=to_org,
+                    user=from_member.user,
+                )
+            except OrganizationMember.DoesNotExist:
+                from_member.update(organization=to_org)
+                to_member = from_member
+
+            if to_member.has_global_access:
+                for team in team_list:
+                    OrganizationMemberTeam.objects.create(
+                        organizationmember=to_member,
+                        team=team,
+                        is_active=False,
+                    )
 
         for model in (Team, Project, ApiKey, AuditLogEntry):
             model.objects.filter(
diff --git a/tests/sentry/models/test_organization.py b/tests/sentry/models/test_organization.py
index b7a97b2dd0..9ee3611b2e 100644
--- a/tests/sentry/models/test_organization.py
+++ b/tests/sentry/models/test_organization.py
@@ -1,6 +1,8 @@
 from __future__ import absolute_import
 
-from sentry.models import OrganizationMember, OrganizationMemberType, Team
+from sentry.models import (
+    OrganizationMember, OrganizationMemberTeam, OrganizationMemberType, Team
+)
 from sentry.testutils import TestCase
 
 
@@ -9,6 +11,9 @@ class OrganizationTest(TestCase):
         from_owner = self.create_user('foo@example.com')
         from_org = self.create_organization(owner=from_owner)
         from_team = self.create_team(organization=from_org)
+        from_user = self.create_user('baz@example.com')
+        self.create_member(organization=from_org, user=from_user,
+                           has_global_access=True)
 
         to_owner = self.create_user('bar@example.com')
         to_org = self.create_organization(owner=to_owner)
@@ -25,3 +30,14 @@ class OrganizationTest(TestCase):
 
         team = Team.objects.get(id=from_team.id)
         assert team.organization == to_org
+
+        member = OrganizationMember.objects.get(
+            user=from_user,
+            organization=to_org,
+        )
+        assert member.has_global_access
+        assert OrganizationMemberTeam.objects.filter(
+            organizationmember=member,
+            team=to_team,
+            is_active=False,
+        ).exists()
