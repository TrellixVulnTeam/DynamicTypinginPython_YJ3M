commit 4da88fb7fe55b14572f266ada942d19141acad26
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Mar 26 16:58:08 2018 -0700

    fix(slack): Use response_url to notify on link success
    
    Using the chat.postEphemeral method doesn't guarantee that we can post
    into a channel (it may be private where the bot has not yet been added).
    Instead we can use the response_url given when the action was taken that
    prompted the user to link their account, which is tied to the channel
    they're linking from.
    
    Fixes SENTRY-66R

diff --git a/src/sentry/integrations/slack/action_endpoint.py b/src/sentry/integrations/slack/action_endpoint.py
index 0c350a8e42..9921b3d0fb 100644
--- a/src/sentry/integrations/slack/action_endpoint.py
+++ b/src/sentry/integrations/slack/action_endpoint.py
@@ -218,7 +218,8 @@ class SlackActionEndpoint(Endpoint):
                 integration,
                 group.organization,
                 user_id,
-                channel_id
+                channel_id,
+                data.get('response_url')
             )
 
             return self.respond({
diff --git a/src/sentry/integrations/slack/link_identity.py b/src/sentry/integrations/slack/link_identity.py
index ae204b36c1..2fd5dbb472 100644
--- a/src/sentry/integrations/slack/link_identity.py
+++ b/src/sentry/integrations/slack/link_identity.py
@@ -14,12 +14,13 @@ from sentry.web.helpers import render_to_response
 from .utils import logger
 
 
-def build_linking_url(integration, organization, slack_id, notify_channel_id):
+def build_linking_url(integration, organization, slack_id, channel_id, response_url):
     signed_params = sign(
         integration_id=integration.id,
         organization_id=organization.id,
         slack_id=slack_id,
-        notify_channel_id=notify_channel_id,
+        channel_id=channel_id,
+        response_url=response_url,
     )
 
     return absolute_uri(reverse('sentry-integration-slack-link-identity', kwargs={
@@ -73,15 +74,13 @@ class SlackLinkIdentitiyView(BaseView):
         )
 
         payload = {
-            'token': integration.metadata['access_token'],
-            'token': integration.metadata['access_token'],
-            'channel': params['notify_channel_id'],
-            'user': params['slack_id'],
+            'replace_original': False,
+            'response_type': 'ephemeral',
             'text': "Your Slack identity has been linked to your Sentry account. You're good to go!"
         }
 
         session = http.build_session()
-        req = session.post('https://slack.com/api/chat.postEphemeral', data=payload)
+        req = session.post(params['response_url'], json=payload)
         resp = req.json()
         if not resp.get('ok'):
             logger.error('slack.link-notify.response-error', extra={
@@ -89,6 +88,6 @@ class SlackLinkIdentitiyView(BaseView):
             })
 
         return render_to_response('sentry/slack-linked.html', request=request, context={
-            'channel_id': params['notify_channel_id'],
+            'channel_id': params['channel_id'],
             'team_id': integration.external_id,
         })
diff --git a/tests/sentry/integrations/slack/test_action_endpoint.py b/tests/sentry/integrations/slack/test_action_endpoint.py
index ee8e747d3b..c7071cd4e2 100644
--- a/tests/sentry/integrations/slack/test_action_endpoint.py
+++ b/tests/sentry/integrations/slack/test_action_endpoint.py
@@ -108,7 +108,13 @@ class StatusActionTest(BaseEventTest):
             'domain': 'example',
         })
 
-        associate_url = build_linking_url(self.integration, self.org, 'invalid-id', 'C065W1189')
+        associate_url = build_linking_url(
+            self.integration,
+            self.org,
+            'invalid-id',
+            'C065W1189',
+            self.response_url
+        )
 
         assert resp.status_code == 200, resp.content
         assert resp.data['response_type'] == 'ephemeral'
diff --git a/tests/sentry/integrations/slack/test_link_identity.py b/tests/sentry/integrations/slack/test_link_identity.py
index 1230c82a5a..fadd21ee5e 100644
--- a/tests/sentry/integrations/slack/test_link_identity.py
+++ b/tests/sentry/integrations/slack/test_link_identity.py
@@ -43,14 +43,16 @@ class SlackIntegrationLinkIdentityTest(TestCase):
             'integration_id': self.integration.id,
             'organization_id': self.org.id,
             'slack_id': 'new-slack-id',
-            'notify_channel_id': 'my-channel',
+            'channel_id': 'my-channel',
+            'response_url': 'http://example.slack.com/response_url',
         }
 
         linking_url = build_linking_url(
             self.integration,
             self.org,
             'new-slack-id',
-            'my-channel'
+            'my-channel',
+            'http://example.slack.com/response_url'
         )
 
         resp = self.client.get(linking_url)
@@ -60,7 +62,7 @@ class SlackIntegrationLinkIdentityTest(TestCase):
 
         responses.add(
             method=responses.POST,
-            url='https://slack.com/api/chat.postEphemeral',
+            url='http://example.slack.com/response_url',
             body='{"ok": true}',
             status=200,
             content_type='application/json',
