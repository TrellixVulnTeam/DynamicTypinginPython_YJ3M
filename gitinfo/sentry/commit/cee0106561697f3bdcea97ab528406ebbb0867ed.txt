commit cee0106561697f3bdcea97ab528406ebbb0867ed
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue May 7 11:29:27 2019 -0700

    feat(incidents): Add UI to subscribe to incidents (#13072)

diff --git a/src/sentry/static/sentry/app/sentryTypes.jsx b/src/sentry/static/sentry/app/sentryTypes.jsx
index e6aa08e2c2..2a8d1f343d 100644
--- a/src/sentry/static/sentry/app/sentryTypes.jsx
+++ b/src/sentry/static/sentry/app/sentryTypes.jsx
@@ -411,6 +411,7 @@ export const Incident = PropTypes.shape({
       likelihood: PropTypes.string,
     })
   ).isRequired,
+  isSubscribed: PropTypes.bool.isRequired,
 });
 
 export const GlobalSelection = PropTypes.shape({
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/header.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/details/header.jsx
index 7a8faf1cf1..d7876c8d5f 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/header.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIncidents/details/header.jsx
@@ -9,15 +9,17 @@ import Link from 'app/components/links/link';
 import InlineSvg from 'app/components/inlineSvg';
 import {PageHeader} from 'app/styles/organization';
 import space from 'app/styles/space';
+import SubscribeButton from 'app/components/subscribeButton';
 
 export default class IncidentHeader extends React.Component {
   static propTypes = {
-    params: PropTypes.object.isRequired,
     incident: SentryTypes.Incident,
+    params: PropTypes.object.isRequired,
+    onSubscriptionChange: PropTypes.func.isRequired,
   };
 
   render() {
-    const {incident, params} = this.props;
+    const {incident, params, onSubscriptionChange} = this.props;
 
     return (
       <Header>
@@ -43,6 +45,15 @@ export default class IncidentHeader extends React.Component {
               <ItemTitle>{t('Users affected')}</ItemTitle>
               <ItemValue>{incident.usersAffected}</ItemValue>
             </HeaderItem>
+            <HeaderItem>
+              <ItemTitle>{t('Notifications')}</ItemTitle>
+              <ItemValue>
+                <SubscribeButton
+                  isSubscribed={incident.isSubscribed}
+                  onClick={onSubscriptionChange}
+                />
+              </ItemValue>
+            </HeaderItem>
           </GroupedHeaderItems>
         )}
       </Header>
@@ -71,11 +82,14 @@ const ItemTitle = styled('h6')`
   text-transform: uppercase;
   color: ${p => p.theme.gray2};
   letter-spacing: 0.1px;
-  border-bottom: 1px dotted ${p => p.theme.gray2};
 `;
 
-const ItemValue = styled('span')`
+const ItemValue = styled('div')`
+  display: flex;
+  justify-content: flex-end;
+  align-items: center;
   font-size: ${p => p.theme.headerFontSize};
+  height: 34px;
 `;
 
 const Title = styled('div')`
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx
index 9f8f76ced3..f1c6548639 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx
@@ -1,14 +1,16 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 
+import {addErrorMessage} from 'app/actionCreators/indicator';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import LoadingError from 'app/components/loadingError';
 import {PageContent} from 'app/styles/organization';
 import withApi from 'app/utils/withApi';
+import {t} from 'app/locale';
 
 import IncidentHeader from './header';
 import Incidents from './incidents';
-import {fetchIncident} from '../utils';
+import {fetchIncident, updateSubscription} from '../utils';
 
 class OrganizationIncidentDetails extends React.Component {
   static propTypes = {
@@ -24,7 +26,7 @@ class OrganizationIncidentDetails extends React.Component {
     this.fetchData();
   }
 
-  fetchData() {
+  fetchData = () => {
     this.setState({isLoading: true, hasError: false});
     const {
       api,
@@ -38,13 +40,39 @@ class OrganizationIncidentDetails extends React.Component {
       .catch(() => {
         this.setState({isLoading: false, hasError: true});
       });
-  }
+  };
+
+  handleSubscriptionChange = () => {
+    const {
+      api,
+      params: {orgId, incidentId},
+    } = this.props;
+
+    const isSubscribed = !this.state.incident.isSubscribed;
+
+    updateSubscription(api, orgId, incidentId, isSubscribed)
+      .then(() => {
+        this.setState(state => ({
+          incident: {...state.incident, isSubscribed},
+        }));
+      })
+      .catch(() => {
+        addErrorMessage(
+          t('An error occurred, your subscription status was not changed.')
+        );
+      });
+  };
 
   render() {
     const {incident, isLoading, hasError} = this.state;
+
     return (
       <React.Fragment>
-        <IncidentHeader params={this.props.params} incident={incident} />
+        <IncidentHeader
+          params={this.props.params}
+          incident={incident}
+          onSubscriptionChange={this.handleSubscriptionChange}
+        />
         {incident && <Incidents incident={incident} />}
         {isLoading && (
           <PageContent>
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx
index b3b926110e..af5af3930d 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx
@@ -2,6 +2,15 @@ export function fetchIncident(api, orgId, incidentId) {
   return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/`);
 }
 
+export function updateSubscription(api, orgId, incidentId, isSubscribed) {
+  return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/`, {
+    method: 'PUT',
+    data: {
+      isSubscribed,
+    },
+  });
+}
+
 export function getStatus(status) {
   switch (status) {
     case 1:
diff --git a/tests/js/fixtures/incident.js b/tests/js/fixtures/incident.js
index 6b658b57ef..0e2fe6ea57 100644
--- a/tests/js/fixtures/incident.js
+++ b/tests/js/fixtures/incident.js
@@ -8,6 +8,7 @@ export function Incident(params) {
     suspects: [],
     eventCount: 100,
     usersAffected: 20,
+    isSubscribed: true,
     ...params,
   };
 }
