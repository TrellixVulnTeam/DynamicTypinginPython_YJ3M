commit b20ae998990ed27ea53dba63257c05fbff0dcb29
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Mon Jun 26 14:47:17 2017 -0700

    Create `GroupTombstoneDetailsEndpoint` to undiscard groups

diff --git a/src/sentry/api/endpoints/group_tombstone_details.py b/src/sentry/api/endpoints/group_tombstone_details.py
new file mode 100644
index 0000000000..4a456b723e
--- /dev/null
+++ b/src/sentry/api/endpoints/group_tombstone_details.py
@@ -0,0 +1,39 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.bases import Endpoint
+from sentry.api.bases.group import GroupPermission
+
+from sentry.models import (
+    GroupHash, GroupTombstone,
+)
+
+
+class GroupTombstoneDetailsEndpoint(Endpoint):
+    permission_classes = (GroupPermission,)
+
+    def delete(self, request, tombstone_id):
+        """
+        Remove a GroupTombstone
+        ```````````````
+
+        Undiscards a group such that new events in that group will be captured.
+        This does not restore any previous data.
+
+        :pparam string issue_id: the ID of the issue to delete.
+        :auth: required
+        """
+        GroupHash.objects.filter(
+            group_tombstone=tombstone_id,
+        ).update(
+            # will allow new events to be captured
+            group_tombstone=None,
+        )
+
+        try:
+            GroupTombstone.objects.get(id=tombstone_id).delete()
+        except GroupTombstone.DoesNotExist:
+            pass
+
+        return Response(status=202)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 7a67c945d3..add354c2fd 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -25,6 +25,7 @@ from .endpoints.group_stats import GroupStatsEndpoint
 from .endpoints.group_tags import GroupTagsEndpoint
 from .endpoints.group_tagkey_details import GroupTagKeyDetailsEndpoint
 from .endpoints.group_tagkey_values import GroupTagKeyValuesEndpoint
+from .endpoints.group_tombstone_details import GroupTombstoneDetailsEndpoint
 from .endpoints.group_user_reports import GroupUserReportsEndpoint
 from .endpoints.index import IndexEndpoint
 from .endpoints.internal_queue_tasks import InternalQueueTasksEndpoint
@@ -478,6 +479,11 @@ urlpatterns = patterns(
         SharedGroupDetailsEndpoint.as_view(),
         name='sentry-api-0-shared-group-details'),
 
+    # Tombstone
+    url(r'^tombstone/(?P<tombstone_id>\d+)/$',
+        GroupTombstoneDetailsEndpoint.as_view(),
+        name='sentry-api-0-group-tombstone-details'),
+
     # Events
     url(r'^events/(?P<event_id>\d+)/$',
         EventDetailsEndpoint.as_view(),
diff --git a/tests/sentry/api/endpoints/test_group_tombstone_details.py b/tests/sentry/api/endpoints/test_group_tombstone_details.py
new file mode 100644
index 0000000000..4ca4d16ee7
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_group_tombstone_details.py
@@ -0,0 +1,32 @@
+from __future__ import absolute_import, print_function
+
+from sentry.models import GroupHash, GroupTombstone
+from sentry.testutils import APITestCase
+
+
+class GroupTombstoneDetailsTest(APITestCase):
+
+    def test_delete(self):
+        self.login_as(user=self.user)
+
+        group = self.create_group()
+        tombstone = GroupTombstone.objects.create(
+            project_id=group.project_id,
+            level=group.level,
+            message=group.message,
+            culprit=group.culprit,
+            type=group.get_event_type(),
+        )
+        GroupHash.objects.create(
+            project=group.project,
+            hash='x' * 32,
+            group=group,
+            group_tombstone=tombstone
+        )
+        assert GroupHash.objects.filter(group_tombstone=tombstone).exists()
+
+        path = '/api/0/tombstone/{}/'.format(tombstone.id)
+        response = self.client.delete(path)
+
+        assert response.status_code == 202, response
+        assert not GroupHash.objects.filter(group_tombstone=tombstone).exists()
