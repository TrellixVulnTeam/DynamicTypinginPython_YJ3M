commit 52e60ac6d12560ed5a3e9a865cf03e2b388bd88b
Author: Ted Kaemming <ted@kaemming.com>
Date:   Mon Sep 14 11:00:53 2015 -0700

    Fix assertions in plugin tests.
    
    - Replaces `assert_called_once` calls with explicit call count
      assertion. The `assert_called_once` method doesn't actually exist on
      the `MagicMock` object, so it was being soaked up and effectively
      no-op'd.
    
    - Fixes rule tests that were broken by `assert_called_once` correction.
      These tests weren't actually running -- the mock was never being
      invoked, for a few reasons:
    
        - The `EventAction.after` method returns a generator, which was
          never being advanced.
        - The items yielded by `after` are futures (not promises, but a
          struct that represents the signature of a call to be invoked in
          some later execution context) and the future was never being run.
          (In this case, the `RuleProcessor.apply_rule` creates **another**
          future, which end up being executed in `post_process_group`.)
    
    - Fix `test_notify_event_service`. This uses a global registry that
      needs to be patched, as well as requires calling a few of methods on
      the plugin instance that were not previously mocked to ensure it is
      enabled before sending the notification.

diff --git a/tests/integration/tests.py b/tests/integration/tests.py
index f7d771c82d..f03e5c7e57 100644
--- a/tests/integration/tests.py
+++ b/tests/integration/tests.py
@@ -119,7 +119,7 @@ class RavenIntegrationTest(TransactionTestCase):
         with self.tasks():
             client.capture('Message', message='foo')
 
-        send_remote.assert_called_once()
+        assert send_remote.call_count is 1
         assert Group.objects.count() == 1
         group = Group.objects.get()
         assert group.event_set.count() == 1
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 44c53847e6..24e7850f7c 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -119,7 +119,7 @@ class MailPluginTest(TestCase):
         with self.settings(SENTRY_URL_PREFIX='http://example.com'):
             self.plugin.notify(notification)
 
-        _send_mail.assert_called_once()
+        assert _send_mail.call_count is 1
         args, kwargs = _send_mail.call_args
         self.assertEquals(kwargs.get('project'), self.project)
         self.assertEquals(kwargs.get('group'), group)
@@ -149,7 +149,7 @@ class MailPluginTest(TestCase):
         with self.settings(SENTRY_URL_PREFIX='http://example.com'):
             self.plugin.notify(notification)
 
-        _send_mail.assert_called_once()
+        assert _send_mail.call_count is 1
         args, kwargs = _send_mail.call_args
         assert kwargs.get('subject') == u"[{0} {1}] ERROR: hello world".format(
             self.team.name, self.project.name)
diff --git a/tests/sentry/rules/actions/test_notify_event.py b/tests/sentry/rules/actions/test_notify_event.py
index cdc80de45a..a548f6fadb 100644
--- a/tests/sentry/rules/actions/test_notify_event.py
+++ b/tests/sentry/rules/actions/test_notify_event.py
@@ -1,4 +1,4 @@
-from mock import patch
+from mock import MagicMock
 
 from sentry.testutils.cases import RuleTestCase
 from sentry.rules.actions.notify_event import NotifyEventAction
@@ -7,11 +7,15 @@ from sentry.rules.actions.notify_event import NotifyEventAction
 class NotifyEventActionTest(RuleTestCase):
     rule_cls = NotifyEventAction
 
-    @patch('sentry.plugins.sentry_mail.models.MailPlugin.notify')
-    def test_applies_correctly(self, mail_notify_users):
+    def test_applies_correctly(self):
         event = self.get_event()
 
+        plugin = MagicMock()
         rule = self.get_rule()
-        rule.after(event=event, state=self.get_state())
+        rule.get_plugins = lambda: (plugin,)
 
-        mail_notify_users.assert_called_once()
+        results = list(rule.after(event=event, state=self.get_state()))
+
+        assert len(results) is 1
+        assert plugin.should_notify.call_count is 1
+        assert results[0].callback is plugin.rule_notify
diff --git a/tests/sentry/rules/actions/test_notify_event_service.py b/tests/sentry/rules/actions/test_notify_event_service.py
index d85fa6b1c3..5b4ae8e1b9 100644
--- a/tests/sentry/rules/actions/test_notify_event_service.py
+++ b/tests/sentry/rules/actions/test_notify_event_service.py
@@ -1,4 +1,4 @@
-from mock import patch
+from mock import MagicMock, patch
 
 from sentry.testutils.cases import RuleTestCase
 from sentry.rules.actions.notify_event_service import NotifyEventServiceAction
@@ -7,13 +7,22 @@ from sentry.rules.actions.notify_event_service import NotifyEventServiceAction
 class NotifyEventServiceActionTest(RuleTestCase):
     rule_cls = NotifyEventServiceAction
 
-    @patch('sentry.plugins.sentry_mail.models.MailPlugin.notify')
-    def test_applies_correctly(self, mail_notify):
+    def test_applies_correctly(self):
         event = self.get_event()
 
+        plugin = MagicMock()
+        plugin.is_enabled.return_value = True
+        plugin.should_notify.return_value = True
+
         rule = self.get_rule({
             'service': 'mail',
         })
-        rule.after(event=event, state=self.get_state())
 
-        mail_notify.assert_called_once()
+        with patch('sentry.plugins.plugins.get') as get_plugin:
+            get_plugin.return_value = plugin
+
+            results = list(rule.after(event=event, state=self.get_state()))
+
+        assert len(results) is 1
+        assert plugin.should_notify.call_count is 1
+        assert results[0].callback is plugin.rule_notify
diff --git a/tests/sentry/tasks/test_store.py b/tests/sentry/tasks/test_store.py
index d5fed28251..e373bdf732 100644
--- a/tests/sentry/tasks/test_store.py
+++ b/tests/sentry/tasks/test_store.py
@@ -34,4 +34,4 @@ class PreprocessEventTest(PluginTestCase):
 
         preprocess_event(data=data)
 
-        mock_save_event.delay.assert_called_once()
+        assert mock_save_event.delay.call_count is 1
diff --git a/tests/sentry/web/frontend/test_release_webhook.py b/tests/sentry/web/frontend/test_release_webhook.py
index a28153527a..6288ea99c5 100644
--- a/tests/sentry/web/frontend/test_release_webhook.py
+++ b/tests/sentry/web/frontend/test_release_webhook.py
@@ -53,7 +53,7 @@ class ReleaseWebhookTest(TestCase):
         mock_plugin_get.assert_called_once_with('dummy')
         MockPlugin.get_release_hook.assert_called_once_with()
         MockReleaseHook.assert_called_once_with(self.project)
-        MockReleaseHook.return_value.handle.assert_called_once()
+        assert MockReleaseHook.return_value.handle.call_count is 1
 
     @patch('sentry.plugins.plugins.get')
     def test_disabled_plugin(self, mock_plugin_get):
