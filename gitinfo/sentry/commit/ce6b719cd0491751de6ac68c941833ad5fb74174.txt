commit ce6b719cd0491751de6ac68c941833ad5fb74174
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Aug 3 11:06:51 2018 -0700

    fix(ui): Change some captureMessage to captureException (#9296)
    
    Also for members, do not log to sentry if HTTP request failed with statusCode === 0

diff --git a/src/sentry/static/sentry/app/components/actorAvatar.jsx b/src/sentry/static/sentry/app/components/actorAvatar.jsx
index 986fde3c33..0899a7a21d 100644
--- a/src/sentry/static/sentry/app/components/actorAvatar.jsx
+++ b/src/sentry/static/sentry/app/components/actorAvatar.jsx
@@ -27,7 +27,7 @@ class ActorAvatar extends React.Component {
       return <Avatar team={team} hasTooltip {...props} />;
     }
 
-    sdk.captureException('Unknown avatar type', {
+    sdk.captureException(new Error('Unknown avatar type'), {
       extra: {actor},
     });
     return null;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
index 65294b4d03..f36b3d3aa4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
@@ -44,7 +44,7 @@ export function getCurlCommand(data) {
         if (isString(data.data)) {
           result += ' \\\n --data "' + escapeQuotes(data.data) + '"';
         } else {
-          sdk.captureMessage('Unknown event data', {
+          sdk.captureException(new Error('Unknown event data'), {
             extra: data,
           });
         }
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
index 58641404e6..88b23b7125 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
@@ -89,7 +89,7 @@ const InviteMember = createReactClass({
             },
           });
 
-          sdk.captureMessage('[members]: data fetch invalid response', {
+          sdk.captureException(new Error('[members]: data fetch invalid response'), {
             extra: {resp, state: this.state},
           });
         } else {
@@ -105,11 +105,13 @@ const InviteMember = createReactClass({
         if (error.status == 404 && isSuperuser) {
           // use the static list
           this.setState({roleList: STATIC_ROLE_LIST, loading: false});
-        } else {
-          sdk.captureMessage('[members]: data fetch error ', {
+        } else if (error.status !== 0) {
+          sdk.captureException(new Error('[members]: data fetch error'), {
             extra: {error, state: this.state},
           });
         }
+
+        addErrorMessage(t('Error with request, please reload'));
       },
     });
   },
@@ -179,7 +181,7 @@ const InviteMember = createReactClass({
       .then(() => this.redirectToMemberPage())
       .catch(error => {
         if (error && !error.email && !error.role) {
-          sdk.captureMessage('Unknown invite member api response', {
+          sdk.captureException(new Error('Unknown invite member api response'), {
             extra: {error, state: this.state},
           });
         }
