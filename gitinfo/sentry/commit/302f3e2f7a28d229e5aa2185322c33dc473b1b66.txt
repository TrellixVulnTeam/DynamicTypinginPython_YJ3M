commit 302f3e2f7a28d229e5aa2185322c33dc473b1b66
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Jan 28 13:55:04 2016 -0800

    Elevate --config to SENTRY_CONF immediately so subprocesses get it
    
    We conditionally handled --config and SENTRY_CONF for config discovery,
    and this ended up in conditions where SENTRY_CONF was expected to exist,
    but only the command line option was passed. In the case of a
    subprocess, it never inherited the --config options. This only surfaced
    when switching from gunicorn to uwsgi. The uwsgi process is executed and
    copies over the environ. Without this, the uwsgi process was never
    picking up the --config
    
    Fixes GH-2617

diff --git a/src/sentry/runner/__init__.py b/src/sentry/runner/__init__.py
index 31c64aef93..7f0413778d 100755
--- a/src/sentry/runner/__init__.py
+++ b/src/sentry/runner/__init__.py
@@ -37,7 +37,9 @@ def cli(ctx, config):
     environment variable or be explicitly provided through the
     `--config` parameter.
     """
-    ctx.obj['config'] = config
+    # Elevate --config option to SENTRY_CONF env var, and just assume this
+    # always will exist down the line
+    os.environ.setdefault('SENTRY_CONF', config)
 
 
 # TODO(mattrobenolt): Autodiscover commands?
@@ -99,7 +101,7 @@ def configure():
         ctx = click.get_current_context()
     except RuntimeError:
         ctx = None
-    _, py, yaml = discover_configs(ctx)
+    _, py, yaml = discover_configs()
 
     # TODO(mattrobenolt): Surface this also as a CLI option?
     skip_backend_validation = 'SENTRY_SKIP_BACKEND_VALIDATION' in os.environ
diff --git a/src/sentry/runner/commands/init.py b/src/sentry/runner/commands/init.py
index 55aa2529f4..98ece4d40b 100644
--- a/src/sentry/runner/commands/init.py
+++ b/src/sentry/runner/commands/init.py
@@ -18,9 +18,9 @@ def init(ctx, directory):
     "Initialize new configuration directory."
     from sentry.runner.settings import discover_configs, generate_settings
     if directory is not None:
-        ctx.obj['config'] = directory
+        os.environ['SENTRY_CONF'] = directory
 
-    directory, py, yaml = discover_configs(ctx)
+    directory, py, yaml = discover_configs()
 
     # In this case, the config is pointing directly to a file, so we
     # must maintain old behavior, and just abort
diff --git a/src/sentry/runner/settings.py b/src/sentry/runner/settings.py
index a25c24f737..fd58bf9a7d 100644
--- a/src/sentry/runner/settings.py
+++ b/src/sentry/runner/settings.py
@@ -242,20 +242,17 @@ def get_sentry_conf():
             return '~/.sentry'
 
 
-def discover_configs(ctx=None):
+def discover_configs():
     """
     Discover the locations of three configuration components:
      * Config directory (~/.sentry)
      * Optional python config file (~/.sentry/sentry.conf.py)
      * Optional yaml config (~/.sentry/config.yml)
     """
-    if ctx and 'config' in ctx.obj:
-        config = ctx.obj['config']
-    else:
-        try:
-            config = os.environ['SENTRY_CONF']
-        except KeyError:
-            config = '~/.sentry'
+    try:
+        config = os.environ['SENTRY_CONF']
+    except KeyError:
+        config = '~/.sentry'
 
     config = os.path.expanduser(config)
 
