commit 3d4c0b3c59c3600f0318aec8318fe945df318774
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Thu Nov 1 13:50:56 2018 -0700

    feat(integrations): GitLab Setup Guide. (#10373)
    
    * Added the config information page to the gitlab pipeline.
    
    * changed tests and fixed a typo.
    
    * Update src/sentry/templates/sentry/integrations/gitlab-config.html
    
    Co-Authored-By: lauryndbrown <lauryndbrown@gmail.com>
    
    * Update src/sentry/templates/sentry/integrations/gitlab-config.html
    
    Co-Authored-By: lauryndbrown <lauryndbrown@gmail.com>
    
    * Added other edits.
    
    * padding edits
    
    * revised css

diff --git a/src/sentry/integrations/gitlab/integration.py b/src/sentry/integrations/gitlab/integration.py
index 363861d49f..d090876fd5 100644
--- a/src/sentry/integrations/gitlab/integration.py
+++ b/src/sentry/integrations/gitlab/integration.py
@@ -179,6 +179,24 @@ class InstallationConfigView(PipelineView):
         )
 
 
+class InstallationGuideView(PipelineView):
+    def dispatch(self, request, pipeline):
+        if 'completed_installation_guide' in request.GET:
+            return pipeline.next_step()
+        return render_to_response(
+            template='sentry/integrations/gitlab-config.html',
+            context={
+                'next_url': '%s%s' % (absolute_uri('extensions/gitlab/setup/'), '?completed_installation_guide'),
+                'setup_values': [
+                    {'label': 'Name', 'value': 'Sentry'},
+                    {'label': 'Redirect URI', 'value': absolute_uri('/extensions/gitlab/setup/')},
+                    {'label': 'Scopes', 'value': 'api'}
+                ]
+            },
+            request=request,
+        )
+
+
 class GitlabIntegrationProvider(IntegrationProvider):
     key = 'gitlab'
     name = 'Gitlab'
@@ -249,7 +267,8 @@ class GitlabIntegrationProvider(IntegrationProvider):
             raise IntegrationError('The requested GitLab group could not be found.')
 
     def get_pipeline_views(self):
-        return [InstallationConfigView(), lambda: self._make_identity_pipeline_view()]
+        return [InstallationGuideView(), InstallationConfigView(),
+                lambda: self._make_identity_pipeline_view()]
 
     def build_integration(self, state):
         data = state['identity']['data']
diff --git a/src/sentry/templates/sentry/integrations/gitlab-config.html b/src/sentry/templates/sentry/integrations/gitlab-config.html
index f5ac18d1d4..27412a782a 100644
--- a/src/sentry/templates/sentry/integrations/gitlab-config.html
+++ b/src/sentry/templates/sentry/integrations/gitlab-config.html
@@ -3,6 +3,24 @@
 {% load sentry_assets %}
 {% load i18n %}
 
+{% block css %}
+  <link href="{% asset_url "sentry" "dist/sentry.css" %}" rel="stylesheet"/>
+  <style>
+    ol li {
+      padding:10px 0px;
+    }
+    .code-list {
+      padding: 10px;
+      background-color: #f7f8f9;
+      margin-top: 10px;
+      border-radius: 3px;
+    }
+    .code-list li {
+      font-size: 90%;
+    }
+  </style>
+{% endblock %}
+
 {% block wrapperclass %} narrow auth {% endblock %}
 {% block modal_header_signout %} {% endblock %}
 
@@ -10,21 +28,40 @@
 
 {% block main %}
 <h3>GitLab Configuration</h3>
+{% if form %}
+  <form action="" method="post" class="form-stacked">
+    {% csrf_token %}
+    <input type="hidden" name="provider" value="gitlab" />
 
-<form action="" method="post" class="form-stacked">
-  {% csrf_token %}
-  <input type="hidden" name="provider" value="gitlab" />
-
-  <p>{% trans "Configure GitLab to use with Sentry." %}</p>
+    <p>{% trans "Configure GitLab to use with Sentry." %}</p>
 
-  {{ form|as_crispy_errors }}
+    {{ form|as_crispy_errors }}
 
-  {% for field in form %}
-   {{ field|as_crispy_field }}
-  {% endfor %}
+    {% for field in form %}
+    {{ field|as_crispy_field }}
+    {% endfor %}
 
-  <fieldset class="form-actions">
-    <button type="submit" class="btn btn-primary" name="save_mappings" value="url">{% trans "Submit" %}</button>
-  </fieldset>
-</form>
+    <fieldset class="form-actions">
+      <button type="submit" class="btn btn-primary" name="save_mappings" value="url">{% trans "Submit" %}</button>
+    </fieldset>
+  </form>
+{% else %}
+  <p>To configure GitLab with Sentry, you will need to create a Sentry app in your GitLab instance.</p>
+  <ol>
+    <li>Navigate to the User Settings section of your GitLab instance.</li>
+    <li>In the sidebar, select 'Applications'.</li>
+    <li>In the resulting form, enter the following information:
+      <ul class="list-unstyled code-list">
+        {% for val in setup_values %}
+          <li class="p-a-0">{{ val.label }}: {{ val.value }}</li>
+        {% endfor %}
+      </ul>
+    </li>
+    <li>Click Save Application.</li>
+    <li>In the resulting page, you'll see the Application ID and Secret. You'll need those for the next phase of setup.</li>
+  </ol>
+  <div class="p-y-2 b-t-1">
+    <a class="btn btn-primary" href="{{ next_url }}">{% trans "Next" %}</a>
+  </div>
+  {% endif %}
 {% endblock %}
diff --git a/tests/sentry/integrations/gitlab/test_integration.py b/tests/sentry/integrations/gitlab/test_integration.py
index 81b65f5fbf..dce44a9f0f 100644
--- a/tests/sentry/integrations/gitlab/test_integration.py
+++ b/tests/sentry/integrations/gitlab/test_integration.py
@@ -29,13 +29,20 @@ class GitlabIntegrationTest(IntegrationTestCase):
 
     default_group_id = 4
 
+    def setUp(self):
+        super(GitlabIntegrationTest, self).setUp()
+        self.init_path_without_guide = '%s%s' % (self.init_path, '?completed_installation_guide')
+
     def assert_setup_flow(self, user_id='user_id_1', group_id=None):
         if group_id is None:
             group_id = self.default_group_id
 
         resp = self.client.get(self.init_path)
         assert resp.status_code == 200
-        resp = self.client.post(self.init_path, data=self.config)
+        self.assertContains(resp, 'you will need to create a Sentry app in your GitLab instance')
+        resp = self.client.get(self.init_path_without_guide)
+        assert resp.status_code == 200
+        resp = self.client.post(self.init_path_without_guide, data=self.config)
         assert resp.status_code == 302
         redirect = urlparse(resp['Location'])
         assert redirect.scheme == 'https'
@@ -145,10 +152,10 @@ class GitlabIntegrationTest(IntegrationTestCase):
 
     @responses.activate
     def test_setup_missing_group(self):
-        resp = self.client.get(self.init_path)
+        resp = self.client.get(self.init_path_without_guide)
         assert resp.status_code == 200
 
-        resp = self.client.post(self.init_path, data=self.config)
+        resp = self.client.post(self.init_path_without_guide, data=self.config)
         assert resp.status_code == 302
 
         redirect = urlparse(resp['Location'])
