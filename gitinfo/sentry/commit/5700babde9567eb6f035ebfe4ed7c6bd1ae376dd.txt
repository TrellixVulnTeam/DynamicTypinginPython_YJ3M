commit 5700babde9567eb6f035ebfe4ed7c6bd1ae376dd
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 3 22:54:03 2015 -0800

    Some initial work breaking out all components into React

diff --git a/src/sentry/api/endpoints/organization_details.py b/src/sentry/api/endpoints/organization_details.py
index 8fec358510..10ee39d747 100644
--- a/src/sentry/api/endpoints/organization_details.py
+++ b/src/sentry/api/endpoints/organization_details.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+import itertools
+
 from rest_framework import serializers, status
 from rest_framework.response import Response
 
@@ -8,7 +10,7 @@ from sentry.api.bases.organization import OrganizationEndpoint
 from sentry.api.decorators import sudo_required
 from sentry.api.serializers import serialize
 from sentry.models import (
-    AuditLogEntry, AuditLogEntryEvent, Organization, OrganizationStatus
+    AuditLogEntry, AuditLogEntryEvent, Organization, OrganizationStatus, Team
 )
 from sentry.tasks.deletion import delete_organization
 
@@ -37,7 +39,36 @@ class OrganizationDetailsEndpoint(OrganizationEndpoint):
             {method} {path}
 
         """
+        team_list = Team.objects.get_for_user(
+            organization=organization,
+            user=request.user,
+            with_projects=True,
+        )
+        team_map = {
+            t[0].id: s
+            for t, s in zip(
+                team_list,
+                serialize([t for t, _ in team_list], request.user)
+            )
+        }
+
+        project_list = list(itertools.chain(*[p for _, p in team_list]))
+        project_map = {
+            p.id: s
+            for p, s in zip(
+                project_list,
+                serialize(project_list, request.user)
+            )
+        }
+
+        teams_context = []
+        for team, project_list in team_list:
+            team_data = team_map[team.id]
+            team_data['projects'] = [project_map[p.id] for p in project_list]
+            teams_context.append(team_data)
+
         context = serialize(organization, request.user)
+        context['teams'] = teams_context
 
         return Response(context)
 
diff --git a/src/sentry/static/sentry/app/components/alerts.jsx b/src/sentry/static/sentry/app/components/alerts.jsx
index f6c285c285..108c49c699 100644
--- a/src/sentry/static/sentry/app/components/alerts.jsx
+++ b/src/sentry/static/sentry/app/components/alerts.jsx
@@ -8,13 +8,13 @@ var AlertStore = require('../stores/alertStore');
 var Alerts = React.createClass({
   mixins: [Reflux.connect(AlertStore, "alerts")],
 
-  getInitialState: function() {
+  getInitialState() {
       return {
           alerts: []
       };
   },
 
-  render: function() {
+  render() {
     return (
       <div {...this.props}>
         {this.state.alerts.map(function(alert, key) {
@@ -25,5 +25,4 @@ var Alerts = React.createClass({
   }
 });
 
-
 module.exports = Alerts;
diff --git a/src/sentry/static/sentry/app/components/organizationHeader.jsx b/src/sentry/static/sentry/app/components/organizationHeader.jsx
new file mode 100644
index 0000000000..baece35e96
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/organizationHeader.jsx
@@ -0,0 +1,50 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+
+var AppState = require("../mixins/appState");
+var Breadcrumbs = require("./breadcrumbs");
+var OrganizationState = require("../mixins/organizationState");
+
+var OrganizationHeader = React.createClass({
+  mixins: [AppState, OrganizationState],
+
+  render() {
+    return (
+      <header>
+        <div className="container">
+          <div className="pull-right">
+            <ul className="user-nav">
+              <li>
+                <strong>
+                  <a href="">
+                    <span className="icon icon-book"></span>
+                    Docs
+                  </a>
+                </strong>
+              </li>
+              <li>
+                <div className="dropdown anchor-right">
+                  <a href="#" className="dropdown-toggle">
+                    <img src="" />
+                    <span className="icon-arrow-down"></span>
+                  </a>
+                  <div className="dropdown-menu">
+                    <ul className="user-account">
+                      <li><strong><a href=""><span className="icon icon-settings"></span>Admin</a></strong></li>
+                      <li><strong><a href=""><span className="icon icon-settings"></span>Account</a></strong></li>
+                      <li><strong><a href=""><span className="icon icon-arrow-right"></span>Sign Out</a></strong></li>
+                    </ul>
+                  </div>
+                </div>
+              </li>
+            </ul>
+          </div>
+          <Breadcrumbs />
+         </div>
+      </header>
+    );
+  }
+});
+
+module.exports = OrganizationHeader;
diff --git a/src/sentry/static/sentry/app/components/organizationSidebar.jsx b/src/sentry/static/sentry/app/components/organizationSidebar.jsx
new file mode 100644
index 0000000000..b63ee95e64
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/organizationSidebar.jsx
@@ -0,0 +1,95 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+
+var AppState = require("../mixins/appState");
+var OrganizationState = require("../mixins/organizationState");
+
+var OrganizationSelector = React.createClass({
+  mixins: [AppState, OrganizationState],
+
+  render() {
+    var activeOrg = this.getOrganization();
+
+    return (
+      <div className="org-selector dropdown">
+        <a href="" className="active-org">{activeOrg.name}</a>
+        <a href="" className="dropdown-toggle">
+          <span className="icon-arrow-down" />
+        </a>
+        <div className="dropdown-menu">
+          <ul className="orgs">
+            {this.getOrganizationList().map((org) => {
+              return (
+                <li key={org.slug}>
+                  <a href="">{org.name}</a>
+                </li>
+              );
+            })}
+          </ul>
+        </div>
+      </div>
+    );
+  }
+});
+
+var OrganizationSidebar = React.createClass({
+  mixins: [AppState, OrganizationState],
+
+  render() {
+    var activeOrg = this.getOrganization();
+    if (!activeOrg) {
+      // TODO(dcramer): handle this case better
+      return <div />;
+    }
+
+    return (
+      <div className="app-sidebar">
+        <OrganizationSelector />
+        <div className="teams">
+          {activeOrg.teams.map((team, teamIdx) => {
+            var routeParams = {
+              orgId: activeOrg.slug,
+              teamId: team.slug
+            };
+            return (
+              <div className="team" key={team.slug}>
+                <h6>
+                  <a className="pull-right" href="">
+                    <span className="icon-settings" />
+                  </a>
+                  <Router.Link
+                      to="teamDetails"
+                      params={routeParams}>
+                    {team.name}
+                  </Router.Link>
+                </h6>
+                <ul className="project-list list-unstyled truncate">
+                  {team.projects.map((project) => {
+                    var routeParams = {
+                      orgId: activeOrg.slug,
+                      projectId: project.slug
+                    };
+                    return (
+                      <li key={project.slug}>
+                        <strong>
+                          <Router.Link
+                              to="projectDetails"
+                              params={routeParams}>
+                            {project.name}
+                          </Router.Link>
+                        </strong>
+                      </li>
+                    );
+                  })}
+                </ul>
+              </div>
+            );
+          })}
+        </div>
+      </div>
+    );
+  }
+});
+
+module.exports = OrganizationSidebar;
diff --git a/src/sentry/static/sentry/app/mixins/appState.jsx b/src/sentry/static/sentry/app/mixins/appState.jsx
new file mode 100644
index 0000000000..e18510cace
--- /dev/null
+++ b/src/sentry/static/sentry/app/mixins/appState.jsx
@@ -0,0 +1,17 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+
+var PropTypes = require("../proptypes");
+
+var AppState = {
+  contextTypes: {
+    organizationList: React.PropTypes.arrayOf(PropTypes.Organization).isRequired,
+  },
+
+  getOrganizationList() {
+    return this.context.organizationList;
+  }
+};
+
+module.exports = AppState;
diff --git a/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx b/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
index 55df6c6c8e..af02b4d057 100644
--- a/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
+++ b/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
@@ -41,7 +41,7 @@ module.exports = {
   },
 
   componentWillMount() {
-    this.crumbs = this.getInitialBreadcrumbs();
+    this.crumbs = [];
     this.crumbs.forEach((node) => {
       BreadcrumbStore.push(this.breadcrumbFromNode(node));
     });
@@ -61,9 +61,5 @@ module.exports = {
     this.crumbs.forEach((node) => {
       BreadcrumbStore.push(this.breadcrumbFromNode(node));
     });
-  },
-
-  getInitialBreadcrumbs() {
-    return [];
   }
 };
diff --git a/src/sentry/static/sentry/app/mixins/organizationState.jsx b/src/sentry/static/sentry/app/mixins/organizationState.jsx
index fc28b355d0..a45a4495f8 100644
--- a/src/sentry/static/sentry/app/mixins/organizationState.jsx
+++ b/src/sentry/static/sentry/app/mixins/organizationState.jsx
@@ -4,7 +4,7 @@ var PropTypes = require("../proptypes");
 
 var OrganizationState = {
   contextTypes: {
-    organization: PropTypes.Organization.isRequired,
+    organization: PropTypes.Organization,
   },
 
   getOrganization() {
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 736107c28d..0552c6e8ff 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -5,6 +5,7 @@ var Router = require("react-router");
 var Route = Router.Route;
 var DefaultRoute = Router.DefaultRoute;
 
+var App = require("./views/app");
 var GroupDetails = require("./views/groupDetails");
 var GroupEvents = require("./views/groupEvents");
 var GroupTags = require("./views/groupTags");
@@ -17,19 +18,6 @@ var Stream = require("./views/stream");
 var TeamDashboard = require("./views/teamDashboard");
 var TeamDetails = require("./views/teamDetails");
 
-var App = React.createClass({
-  propTypes: {
-    isAuthenticated: React.PropTypes.bool.isRequired,
-    user: PropTypes.User
-  },
-
-  render: function () {
-    return (
-      <Router.RouteHandler />
-    );
-  }
-});
-
 var routes = (
   <Route name="app" path="/" handler={App}>
     <Route name="organizationDetails" path="/:orgId/" handler={OrganizationDetails}>
diff --git a/src/sentry/static/sentry/app/views/app.jsx b/src/sentry/static/sentry/app/views/app.jsx
new file mode 100644
index 0000000000..af58c7124c
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/app.jsx
@@ -0,0 +1,60 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+
+var api = require("../api");
+var Alerts = require("../components/alerts");
+var PropTypes = require("../propTypes");
+
+var App = React.createClass({
+  propTypes: {
+    isAuthenticated: React.PropTypes.bool.isRequired,
+    user: PropTypes.User
+  },
+
+  childContextTypes: {
+    organizationList: React.PropTypes.arrayOf(PropTypes.Organization).isRequired,
+  },
+
+  getChildContext() {
+    return {
+      organizationList: this.state.organizationList
+    };
+  },
+
+  getInitialState() {
+    return {
+      loading: false,
+      error: false,
+      organizationList: []
+    };
+  },
+
+  componentWillMount() {
+    api.request('/organizations/', {
+      success: (data) => {
+        this.setState({
+          loading: false,
+          organizationList: data
+        });
+      },
+      error: () => {
+        this.setState({
+          loading: false,
+          error: true
+        });
+      }
+    });
+  },
+
+  render() {
+    return (
+      <div>
+        <Alerts className="messages-container affix" />
+        <Router.RouteHandler />
+      </div>
+    );
+  }
+});
+
+module.exports = App;
diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
index d52faaa949..a52f45a5d2 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -8,7 +8,10 @@ var api = require("../api");
 var BreadcrumbMixin = require("../mixins/breadcrumbMixin");
 var LoadingIndicator = require("../components/loadingIndicator");
 var PropTypes = require("../proptypes");
+var OrganizationHeader = require("../components/organizationHeader");
 var OrganizationState = require("../mixins/organizationState");
+var OrganizationSidebar = require("../components/organizationSidebar");
+var RouteMixin = require("../mixins/routeMixin");
 
 var OrganizationDetails = React.createClass({
   mixins: [
@@ -18,6 +21,8 @@ var OrganizationDetails = React.createClass({
 
   getInitialState() {
     return {
+      loading: false,
+      error: false,
       organization: null
     };
   },
@@ -33,10 +38,19 @@ var OrganizationDetails = React.createClass({
   },
 
   componentWillMount() {
+    this.fetchData();
+  },
+
+  componentWillReceiveProps(nextProps) {
+    this.fetchData();
+  },
+
+  fetchData() {
     api.request(this.getOrganizationDetailsEndpoint(), {
       success: (data) => {
         this.setState({
-          organization: data
+          organization: data,
+          loading: false
         });
 
         this.setBreadcrumbs([
@@ -52,10 +66,22 @@ var OrganizationDetails = React.createClass({
   },
 
   render() {
-    if (!this.state.organization) {
+    if (this.state.loading) {
       return <LoadingIndicator />;
     }
-    return <Router.RouteHandler />;
+    return (
+      <div>
+        <OrganizationSidebar />
+        <div className="app">
+          <OrganizationHeader />
+          <div className="container">
+            <div className="content">
+              <Router.RouteHandler />
+            </div>
+          </div>
+        </div>
+      </div>
+    );
   }
 });
 
diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
index e193c56d51..3931cc6a68 100644
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectDetails.jsx
@@ -8,19 +8,22 @@ var api = require("../api");
 var BreadcrumbMixin = require("../mixins/breadcrumbMixin");
 var MemberListStore = require("../stores/memberListStore");
 var LoadingIndicator = require("../components/loadingIndicator");
+var OrganizationState = require("../mixins/organizationState");
+var RouteMixin = require("../mixins/routeMixin");
 var PropTypes = require("../proptypes");
 
 var ProjectDetails = React.createClass({
   mixins: [
     BreadcrumbMixin,
     Reflux.connect(MemberListStore, "memberList"),
+    OrganizationState,
+    RouteMixin,
     Router.State
   ],
 
   getInitialState() {
     return {
       memberList: [],
-      organization: null,
       project: null,
       team: null
     };
@@ -34,13 +37,22 @@ var ProjectDetails = React.createClass({
 
   getChildContext() {
     return {
-      organization: this.state.organization,
+      organization: this.getOrganization(),
       project: this.state.project,
       team: this.state.team
     };
   },
 
   componentWillMount() {
+    this.fetchData();
+  },
+
+  routeDidChange(nextProps) {
+    this.fetchData();
+  },
+
+  fetchData() {
+    // TODO(dcramer): we could read some of this info from contexts
     api.request(this.getMemberListEndpoint(), {
       success: (data) => {
         MemberListStore.loadInitialData(data);
@@ -50,7 +62,6 @@ var ProjectDetails = React.createClass({
     api.request(this.getProjectDetailsEndpoint(), {
       success: (data) => {
         this.setState({
-          organization: data.organization,
           project: data,
           team: data.team
         });
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index 2e0fe700db..85f4aa8ec1 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -69,7 +69,6 @@ var Stream = React.createClass({
     Reflux.listenTo(GroupListStore, "onAggListChange"),
     Router.Navigation,
     Router.State,
-    RouteMixin
   ],
 
   propTypes: {
@@ -99,6 +98,7 @@ var Stream = React.createClass({
   },
 
   componentWillMount() {
+    console.log('here');
     this._poller = new StreamPoller({
       success: this.handleRealtimePoll,
       endpoint: this.getGroupListEndpoint()
@@ -107,10 +107,6 @@ var Stream = React.createClass({
     this.fetchData();
   },
 
-  routeDidChange(nextProps) {
-    this.fetchData();
-  },
-
   componentWillUnmount() {
     this._poller.disable();
   },
diff --git a/src/sentry/static/sentry/app/views/teamDashboard/chart.jsx b/src/sentry/static/sentry/app/views/teamDashboard/chart.jsx
index 56de606390..3646fb4dd5 100644
--- a/src/sentry/static/sentry/app/views/teamDashboard/chart.jsx
+++ b/src/sentry/static/sentry/app/views/teamDashboard/chart.jsx
@@ -22,7 +22,9 @@ var TeamChart = React.createClass({
   getStatsEndpoint() {
     var org = this.getOrganization();
     var team = this.getTeam();
-    return "/teams/" + org.slug + "/" + team.slug + "/stats/";
+    if (org && team) {
+      return "/teams/" + org.slug + "/" + team.slug + "/stats/";
+    }
   },
 
   componentWillMount() {
@@ -30,7 +32,12 @@ var TeamChart = React.createClass({
   },
 
   fetchData() {
-    api.request(this.getStatsEndpoint(), {
+    var endpoint = this.getStatsEndpoint();
+    if (!endpoint) {
+      return;
+    }
+
+    api.request(endpoint, {
       query: {
         since: (new Date().getTime() / 1000) - (3600 * 24 * 7)
       },
diff --git a/src/sentry/static/sentry/app/views/teamDetails.jsx b/src/sentry/static/sentry/app/views/teamDetails.jsx
index 99be7a28e0..cd24fbea34 100644
--- a/src/sentry/static/sentry/app/views/teamDetails.jsx
+++ b/src/sentry/static/sentry/app/views/teamDetails.jsx
@@ -7,8 +7,9 @@ var Router = require("react-router");
 var api = require("../api");
 var BreadcrumbMixin = require("../mixins/breadcrumbMixin");
 var LoadingIndicator = require("../components/loadingIndicator");
-var PropTypes = require("../proptypes");
 var OrganizationState = require("../mixins/organizationState");
+var PropTypes = require("../proptypes");
+var RouteMixin = require("../mixins/routeMixin");
 
 var TeamDetails = React.createClass({
   mixins: [
@@ -36,6 +37,21 @@ var TeamDetails = React.createClass({
   },
 
   componentWillMount() {
+    this.fetchData();
+  },
+
+  componentWillReceiveProps(nextProps) {
+    this.fetchData();
+  },
+
+  shouldComponentUpdate(nextProps, nextState) {
+    if (this.state.team === null || nextState.team === null) {
+      return true;
+    }
+    return this.state.team.id !== nextState.team.id;
+  },
+
+  fetchData() {
     api.request(this.getTeamDetailsEndpoint(), {
       success: (data) => {
         this.setState({
diff --git a/src/sentry/templates/sentry/bases/react.html b/src/sentry/templates/sentry/bases/react.html
index d8d61be55c..4178552b0d 100644
--- a/src/sentry/templates/sentry/bases/react.html
+++ b/src/sentry/templates/sentry/bases/react.html
@@ -2,17 +2,7 @@
 
 {% load sentry_api %}
 
-{% block breadcrumb_outer %}
-  <div id="blk_breadcrumb"></div>
-  <script>
-  $(function(){
-    React.render(React.createFactory(Breadcrumbs)({
-    }), document.getElementById('blk_breadcrumb'));
-  });
-  </script>
-{% endblock %}
-
-{% block content %}
+{% block body %}
   <div id="blk_router"></div>
   <script>
   $(function(){
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 976d4a203c..50bb80147e 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -47,54 +47,54 @@
         {% endblock %}
     </head>
 
-    <body class="{% block wrapperclass %}{% endblock %} {% if not request.user.is_authenticated %}hide-sidebar{% endif %}" ng-app="sentry">
-      {% if request.user.is_authenticated %}
-      <div class="app-sidebar">
-        {% if organization %}
-        <div class="org-selector dropdown">
-          <a href="{% url 'sentry-organization-home' organization.slug %}" class="active-org">{{ organization.name }}</a>
-          <a href="#" class="dropdown-toggle" data-toggle="dropdown" onclick="$(this).parent('.dropdown').toggleClass('open');"><span class="icon-arrow-down"></span></a>
-          {% if list_organizations|length > 1 %}
-            <div class="dropdown-menu">
-              <ul class="orgs">
-                {% for o in request.user|list_organizations %}
-                  {% if o.id != organization.id %}
-                  <li>
-                    <a href="{% url 'sentry-organization-home' o.slug %}">
-                        {{ o.name }}
-                    </a>
-                  </li>
-                  {% endif %}
-                {% endfor %}
-              </ul>
-            </div>
+    <body class="{% block wrapperclass %}{% endblock %} {% if not request.user.is_authenticated %}hide-sidebar{% endif %}">
+      {% block body %}
+        {% if request.user.is_authenticated %}
+        <div class="app-sidebar">
+          {% if organization %}
+          <div class="org-selector dropdown">
+            <a href="{% url 'sentry-organization-home' organization.slug %}" class="active-org">{{ organization.name }}</a>
+            <a href="#" class="dropdown-toggle" data-toggle="dropdown" onclick="$(this).parent('.dropdown').toggleClass('open');"><span class="icon-arrow-down"></span></a>
+            {% if list_organizations|length > 1 %}
+              <div class="dropdown-menu">
+                <ul class="orgs">
+                  {% for o in request.user|list_organizations %}
+                    {% if o.id != organization.id %}
+                    <li>
+                      <a href="{% url 'sentry-organization-home' o.slug %}">
+                          {{ o.name }}
+                      </a>
+                    </li>
+                    {% endif %}
+                  {% endfor %}
+                </ul>
+              </div>
+            {% endif %}
+          </div>
           {% endif %}
+          {% block app-sidebar %}{% endblock %}
+          <div class="teams">
+            {% if TEAM_LIST %}
+                {% for t, p_list in TEAM_LIST %}
+                  <div class="team">
+                      <h6>
+                        <a class="pull-right" href="{% url 'sentry-manage-team' t.organization.slug t.slug %}"><span class="icon-settings"></span></a>
+                        <a href="{% url 'sentry-team-dashboard' t.organization.slug t.slug %}">{{ t.name }}</a>
+                      </h6>
+                      <ul class="project-list list-unstyled truncate">
+                          {% for p in p_list %}
+                              <li{% if p.id == project.id %} class="active"{% endif %}>
+                                  <strong><a href="{% url 'sentry-stream' t.organization.slug p.slug %}" title="{{ p.name }}">{{ p.name }}</a></strong>
+                              </li>
+                          {% endfor %}
+                      </ul>
+                  </div>
+                {% endfor %}
+            {% endif %}
+          </div>
         </div>
         {% endif %}
-        {% block app-sidebar %}{% endblock %}
-        <div class="teams">
-          {% if TEAM_LIST %}
-              {% for t, p_list in TEAM_LIST %}
-                <div class="team">
-                    <h6>
-                      <a class="pull-right" href="{% url 'sentry-manage-team' t.organization.slug t.slug %}"><span class="icon-settings"></span></a>
-                      <a href="{% url 'sentry-team-dashboard' t.organization.slug t.slug %}">{{ t.name }}</a>
-                    </h6>
-                    <ul class="project-list list-unstyled truncate">
-                        {% for p in p_list %}
-                            <li{% if p.id == project.id %} class="active"{% endif %}>
-                                <strong><a href="{% url 'sentry-stream' t.organization.slug p.slug %}" title="{{ p.name }}">{{ p.name }}</a></strong>
-                            </li>
-                        {% endfor %}
-                    </ul>
-                </div>
-              {% endfor %}
-          {% endif %}
-        </div>
-      </div>
-      {% endif %}
-      <div class="app">
-        {% block body %}
+        <div class="app">
           {% block header %}
             <header>
                 <div class="container">
