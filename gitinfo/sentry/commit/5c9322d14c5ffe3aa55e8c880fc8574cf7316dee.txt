commit 5c9322d14c5ffe3aa55e8c880fc8574cf7316dee
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 3 15:26:11 2016 -0700

    Add project:releases scope
    
    This adds a new scope, project:releases, which allows full management of a release.
    
    @getsentry/api

diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index 62f979e6ce..64213f12c7 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -37,6 +37,15 @@ class ProjectPermission(ScopedPermission):
         )
 
 
+class ProjectReleasePermission(ProjectPermission):
+    scope_map = {
+        'GET': ['project:read', 'project:write', 'project:delete', 'project:releases'],
+        'POST': ['project:write', 'project:delete', 'project:releases'],
+        'PUT': ['project:write', 'project:delete', 'project:releases'],
+        'DELETE': ['project:delete', 'project:releases'],
+    }
+
+
 class ProjectEventPermission(ProjectPermission):
     scope_map = {
         'GET': ['event:read', 'event:write', 'event:delete'],
diff --git a/src/sentry/api/endpoints/project_releases.py b/src/sentry/api/endpoints/project_releases.py
index 5cc8942692..6eb18d5728 100644
--- a/src/sentry/api/endpoints/project_releases.py
+++ b/src/sentry/api/endpoints/project_releases.py
@@ -6,7 +6,7 @@ from rest_framework import serializers
 from rest_framework.response import Response
 
 from sentry.api.base import DocSection
-from sentry.api.bases.project import ProjectEndpoint
+from sentry.api.bases.project import ProjectEndpoint, ProjectReleasePermission
 from sentry.api.fields.user import UserField
 from sentry.api.serializers import serialize
 from sentry.models import Activity, Release
@@ -46,6 +46,7 @@ class ReleaseSerializer(serializers.Serializer):
 
 class ProjectReleasesEndpoint(ProjectEndpoint):
     doc_section = DocSection.RELEASES
+    permission_classes = (ProjectReleasePermission,)
 
     @attach_scenarios([list_releases_scenario])
     def get(self, request, project):
diff --git a/src/sentry/api/endpoints/release_details.py b/src/sentry/api/endpoints/release_details.py
index 0e0e3c26a7..cb3ce6131f 100644
--- a/src/sentry/api/endpoints/release_details.py
+++ b/src/sentry/api/endpoints/release_details.py
@@ -4,7 +4,7 @@ from rest_framework import serializers
 from rest_framework.response import Response
 
 from sentry.api.base import DocSection
-from sentry.api.bases.project import ProjectEndpoint
+from sentry.api.bases.project import ProjectEndpoint, ProjectReleasePermission
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.serializers import serialize
 from sentry.models import Group, Release, ReleaseFile
@@ -61,6 +61,7 @@ class ReleaseSerializer(serializers.Serializer):
 
 class ReleaseDetailsEndpoint(ProjectEndpoint):
     doc_section = DocSection.RELEASES
+    permission_classes = (ProjectReleasePermission,)
 
     @attach_scenarios([retrieve_release_scenario])
     def get(self, request, project, version):
diff --git a/src/sentry/api/endpoints/release_files.py b/src/sentry/api/endpoints/release_files.py
index dc86daa870..fa5e96aa45 100644
--- a/src/sentry/api/endpoints/release_files.py
+++ b/src/sentry/api/endpoints/release_files.py
@@ -8,7 +8,7 @@ from rest_framework.parsers import FormParser, MultiPartParser
 from rest_framework.response import Response
 
 from sentry.api.base import DocSection
-from sentry.api.bases.project import ProjectEndpoint
+from sentry.api.bases.project import ProjectEndpoint, ProjectReleasePermission
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
@@ -65,8 +65,8 @@ class ConditionalContentNegotiation(DefaultContentNegotiation):
 
 class ReleaseFilesEndpoint(ProjectEndpoint):
     doc_section = DocSection.RELEASES
-
     content_negotiation_class = ConditionalContentNegotiation
+    permission_classes = (ProjectReleasePermission,)
 
     @attach_scenarios([list_files_scenario])
     def get(self, request, project, version):
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index cdb5c82378..733016b41d 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -883,6 +883,7 @@ SENTRY_SCOPES = set([
     'project:read',
     'project:write',
     'project:delete',
+    'project:releases',
     'event:read',
     'event:write',
     'event:delete',
@@ -911,7 +912,7 @@ SENTRY_ROLES = (
         'scopes': set([
             'event:read', 'event:write', 'event:delete',
             'org:read', 'member:read',
-            'project:read', 'project:write', 'project:delete',
+            'project:read', 'project:write', 'project:delete', 'project:releases',
             'team:read', 'team:write', 'team:delete',
         ]),
     },
@@ -923,7 +924,7 @@ SENTRY_ROLES = (
         'scopes': set([
             'event:read', 'event:write', 'event:delete',
             'member:read', 'member:write', 'member:delete',
-            'project:read', 'project:write', 'project:delete',
+            'project:read', 'project:write', 'project:delete', 'project:releases',
             'team:read', 'team:write', 'team:delete',
             'org:read', 'org:write',
         ]),
@@ -937,7 +938,7 @@ SENTRY_ROLES = (
             'org:read', 'org:write', 'org:delete',
             'member:read', 'member:write', 'member:delete',
             'team:read', 'team:write', 'team:delete',
-            'project:read', 'project:write', 'project:delete',
+            'project:read', 'project:write', 'project:delete', 'project:releases',
             'event:read', 'event:write', 'event:delete',
         ]),
     },
diff --git a/src/sentry/models/apikey.py b/src/sentry/models/apikey.py
index 6815b0fec3..8312134007 100644
--- a/src/sentry/models/apikey.py
+++ b/src/sentry/models/apikey.py
@@ -35,6 +35,7 @@ class ApiKey(Model):
         ('project:read', 'project:read'),
         ('project:write', 'project:write'),
         ('project:delete', 'project:delete'),
+        ('project:releases', 'project:releases'),
         ('team:read', 'team:read'),
         ('team:write', 'team:write'),
         ('team:delete', 'team:delete'),
diff --git a/src/sentry/models/apitoken.py b/src/sentry/models/apitoken.py
index e5334bcd8c..61b9037989 100644
--- a/src/sentry/models/apitoken.py
+++ b/src/sentry/models/apitoken.py
@@ -21,6 +21,7 @@ class ApiToken(Model):
         ('project:read', 'project:read'),
         ('project:write', 'project:write'),
         ('project:delete', 'project:delete'),
+        ('project:releases', 'project:releases'),
         ('team:read', 'team:read'),
         ('team:write', 'team:write'),
         ('team:delete', 'team:delete'),
diff --git a/src/sentry/models/projectkey.py b/src/sentry/models/projectkey.py
index 83acbdd72f..c8516d7ffa 100644
--- a/src/sentry/models/projectkey.py
+++ b/src/sentry/models/projectkey.py
@@ -61,6 +61,7 @@ class ProjectKey(Model):
         'project:read',
         'project:write',
         'project:delete',
+        'project:releases',
         'event:read',
         'event:write',
         'event:delete',
diff --git a/src/sentry/static/sentry/app/views/apiNewToken.jsx b/src/sentry/static/sentry/app/views/apiNewToken.jsx
index f424f36da5..135a5c4bc8 100644
--- a/src/sentry/static/sentry/app/views/apiNewToken.jsx
+++ b/src/sentry/static/sentry/app/views/apiNewToken.jsx
@@ -12,6 +12,7 @@ const SCOPES = new Set([
   'project:read',
   'project:write',
   'project:delete',
+  'project:releases',
   'team:read',
   'team:write',
   'team:delete',
@@ -30,7 +31,7 @@ const DEFAULT_SCOPES = new Set([
   'event:read',
   'event:write',
   'project:read',
-  'project:write',
+  'project:releases',
   'org:read',
   'team:read',
   'member:read',
