commit 3f74d1da066a982969b246e50b508b6c2b2d05ad
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Jan 31 09:47:39 2018 -0800

    feat(ui): Change "Project Tags" to use `Panel` (#6976)
    
    + add empty message

diff --git a/src/sentry/static/sentry/app/views/projectTags.jsx b/src/sentry/static/sentry/app/views/projectTags.jsx
index 055fb853a3..1bad71adf7 100644
--- a/src/sentry/static/sentry/app/views/projectTags.jsx
+++ b/src/sentry/static/sentry/app/views/projectTags.jsx
@@ -1,13 +1,26 @@
+import {Box, Flex} from 'grid-emotion';
 import React from 'react';
+import styled from 'react-emotion';
 
-import {t} from '../locale';
+import {t, tct} from '../locale';
 import AsyncView from './asyncView';
+import EmptyMessage from './settings/components/emptyMessage';
 import ExternalLink from '../components/externalLink';
 import LinkWithConfirmation from '../components/linkWithConfirmation';
+import Panel from './settings/components/panel';
+import PanelBody from './settings/components/panelBody';
+import PanelHeader from './settings/components/panelHeader';
+import Row from './settings/components/row';
 import SettingsPageHeader from './settings/components/settingsPageHeader';
 import TextBlock from './settings/components/text/textBlock';
 import Tooltip from '../components/tooltip';
 
+const Description = styled.span`
+  font-size: 0.8em;
+  color: ${p => p.theme.gray1};
+  margin-left: 8px;
+`;
+
 export default class ProjectTags extends AsyncView {
   getEndpoints() {
     let {projectId, orgId} = this.props.params;
@@ -48,38 +61,49 @@ export default class ProjectTags extends AsyncView {
   }
 
   renderBody() {
+    let {tags} = this.state;
+    let isEmpty = !tags || tags.length === 0;
+
     return (
       <div>
         <SettingsPageHeader title={t('Tags')} />
         <TextBlock>
-          Each event in Sentry may be annotated with various tags (key and value pairs).
-          Learn how to{' '}
-          <ExternalLink href="https://docs.sentry.io/hosted/learn/context/">
-            add custom tags
-          </ExternalLink>
-          .
+          {tct(
+            `Each event in Sentry may be annotated with various tags (key and value pairs).
+          Learn how to [link:add custom tags].`,
+            {
+              link: <ExternalLink href="https://docs.sentry.io/hosted/learn/context/" />,
+            }
+          )}
         </TextBlock>
 
-        <div className="panel panel-default">
-          <table className="table">
-            <thead>
-              <tr>
-                <th>{t('Tags')}</th>
-                <th style={{width: 20}} />
-              </tr>
-            </thead>
-            <tbody>
-              {this.state.tags.map(({key, name, canDelete}, idx) => {
+        <Panel>
+          <PanelHeader>
+            <Flex>
+              <Box flex="1">{t('Tags')}</Box>
+            </Flex>
+          </PanelHeader>
+
+          <PanelBody>
+            {isEmpty && (
+              <EmptyMessage>
+                {tct('There are no tags, [link:learn to add tags]', {
+                  link: (
+                    <ExternalLink href="https://docs.sentry.io/hosted/learn/context/" />
+                  ),
+                })}
+              </EmptyMessage>
+            )}
+
+            {!isEmpty &&
+              tags.map(({key, name, canDelete}, idx) => {
                 return (
-                  <tr key={key}>
-                    <td>
-                      <h5>
-                        {name}
-                        &nbsp;
-                        <small>({key})</small>
-                      </h5>
-                    </td>
-                    <td>
+                  <Row p={0} key={key} className="ref-tag-row">
+                    <Box align="flex-end" flex="1" p={2}>
+                      <span>{name}</span>
+                      <Description>{key}</Description>
+                    </Box>
+                    <Flex align="center" p={2}>
                       {canDelete ? (
                         this.renderLink(key, canDelete, idx)
                       ) : (
@@ -87,13 +111,12 @@ export default class ProjectTags extends AsyncView {
                           <span>{this.renderLink(key, canDelete, idx)}</span>
                         </Tooltip>
                       )}
-                    </td>
-                  </tr>
+                    </Flex>
+                  </Row>
                 );
               })}
-            </tbody>
-          </table>
-        </div>
+          </PanelBody>
+        </Panel>
       </div>
     );
   }
diff --git a/tests/acceptance/test_project_tags_settings.py b/tests/acceptance/test_project_tags_settings.py
index 4e32b0e7e6..ea8960ebdd 100644
--- a/tests/acceptance/test_project_tags_settings.py
+++ b/tests/acceptance/test_project_tags_settings.py
@@ -34,9 +34,9 @@ class ProjectTagsSettingsTest(AcceptanceTestCase):
         self.browser.get(self.path1)
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot('project settings - tags')
-        self.browser.wait_until('.content tr')
-        self.browser.click('.content tr .btn')
+        self.browser.wait_until('.ref-tag-row')
+        self.browser.click('.ref-tag-row .btn')
         self.browser.wait_until('.modal-footer .button-primary')
         self.browser.click('.modal-footer .button-primary')
-        self.browser.wait_until_not('.content tbody tr')
+        self.browser.wait_until_not('.ref-tag-row')
         self.browser.snapshot('project settings - tags - after remove')
diff --git a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
index 18c111a0d1..edd5612d36 100644
--- a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
@@ -33,6 +33,93 @@ exports[`ProjectTags renders 1`] = `
   margin-bottom: 30px;
 }
 
+.glamor-51 {
+  background: #fff;
+  border: 1px solid;
+  margin-bottom: 30px;
+  position: relative;
+}
+
+.glamor-19 {
+  border-bottom: 1px solid;
+  border-radius: 0 0;
+  text-transform: uppercase;
+  font-size: 13px;
+  line-height: 1;
+  padding: 15px 20px;
+}
+
+.glamor-15 {
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-13 {
+  font-size: 12px;
+  font-weight: 600;
+  text-transform: uppercase;
+  margin-bottom: 20px;
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-10 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+}
+
+.glamor-8 {
+  box-sizing: border-box;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-27 {
+  box-sizing: border-box;
+  padding: 0px;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  border-bottom: 1px solid;
+}
+
+.glamor-27:last-child {
+  border: 0;
+}
+
+.glamor-23 {
+  box-sizing: border-box;
+  padding: 16px;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-21 {
+  font-size: 0.8em;
+  margin-left: 8px;
+}
+
+.glamor-25 {
+  box-sizing: border-box;
+  padding: 16px;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-align-items: center;
+  -webkit-box-align: center;
+  -ms-flex-align: center;
+  align-items: center;
+}
+
 <ProjectTags
   params={
     Object {
@@ -83,345 +170,546 @@ exports[`ProjectTags renders 1`] = `
           <div
             className="glamor-6 glamor-7"
           >
-            Each event in Sentry may be annotated with various tags (key and value pairs). Learn how to
-             
-            <ExternalLink
-              href="https://docs.sentry.io/hosted/learn/context/"
-              rel="noreferrer noopener"
-              target="_blank"
+            <span
+              key="5"
             >
-              <a
+              <span
+                key="0"
+              >
+                Each event in Sentry may be annotated with various tags (key and value pairs).
+          Learn how to 
+              </span>
+              <ExternalLink
                 href="https://docs.sentry.io/hosted/learn/context/"
+                key="2"
                 rel="noreferrer noopener"
                 target="_blank"
               >
-                add custom tags
-              </a>
-            </ExternalLink>
-            .
+                <a
+                  href="https://docs.sentry.io/hosted/learn/context/"
+                  rel="noreferrer noopener"
+                  target="_blank"
+                >
+                  <span
+                    key="1"
+                  >
+                    add custom tags
+                  </span>
+                </a>
+              </ExternalLink>
+              <span
+                key="3"
+              >
+                .
+              </span>
+            </span>
           </div>
         </Styled(div)>
-        <div
-          className="panel panel-default"
-        >
-          <table
-            className="table"
+        <Styled(div)>
+          <div
+            className="glamor-51 glamor-52"
           >
-            <thead>
-              <tr>
-                <th>
-                  Tags
-                </th>
-                <th
-                  style={
-                    Object {
-                      "width": 20,
-                    }
-                  }
-                />
-              </tr>
-            </thead>
-            <tbody>
-              <tr
-                key="browser"
-              >
-                <td>
-                  <h5>
-                    Browser
-                    Â 
-                    <small>
-                      (
-                      browser
-                      )
-                    </small>
-                  </h5>
-                </td>
-                <td>
-                  <LinkWithConfirmation
-                    className="btn btn-sm btn-default"
-                    disabled={false}
-                    message="Are you sure you want to remove this tag?"
-                    onConfirm={[Function]}
-                    title="Remove tag?"
-                  >
-                    <Confirm
-                      cancelText="Cancel"
-                      confirmText="Confirm"
-                      disabled={false}
-                      message="Are you sure you want to remove this tag?"
-                      onConfirm={[Function]}
-                      priority="primary"
+            <PanelHeader>
+              <Styled(div)>
+                <div
+                  className="glamor-19 glamor-20"
+                >
+                  <Styled(Component)>
+                    <Component
+                      className="glamor-15 glamor-12"
                     >
-                      <a
-                        className="btn btn-sm btn-default"
-                        disabled={false}
-                        onClick={[Function]}
-                        title="Remove tag?"
+                      <Styled(div)
+                        className="glamor-15 glamor-12"
                       >
-                        <span
-                          className="icon icon-trash"
-                        />
-                      </a>
-                      <Modal
-                        animation={false}
-                        autoFocus={true}
-                        backdrop={true}
-                        bsClass="modal"
-                        dialogComponentClass={[Function]}
-                        enforceFocus={true}
-                        keyboard={true}
-                        manager={
-                          ModalManager {
-                            "add": [Function],
-                            "containers": Array [],
-                            "data": Array [],
-                            "handleContainerOverflow": true,
-                            "hideSiblingNodes": true,
-                            "isTopModal": [Function],
-                            "modals": Array [],
-                            "remove": [Function],
-                          }
-                        }
-                        onHide={[Function]}
-                        renderBackdrop={[Function]}
-                        restoreFocus={true}
-                        show={false}
-                      >
-                        <Modal
-                          autoFocus={true}
-                          backdrop={true}
-                          backdropClassName="modal-backdrop"
-                          containerClassName="modal-open"
-                          enforceFocus={true}
-                          keyboard={true}
-                          manager={
-                            ModalManager {
-                              "add": [Function],
-                              "containers": Array [],
-                              "data": Array [],
-                              "handleContainerOverflow": true,
-                              "hideSiblingNodes": true,
-                              "isTopModal": [Function],
-                              "modals": Array [],
-                              "remove": [Function],
-                            }
-                          }
-                          onEntering={[Function]}
-                          onExited={[Function]}
-                          onHide={[Function]}
-                          renderBackdrop={[Function]}
-                          restoreFocus={true}
-                          show={false}
-                        />
-                      </Modal>
-                    </Confirm>
-                  </LinkWithConfirmation>
-                </td>
-              </tr>
-              <tr
-                key="device"
+                        <div
+                          className="glamor-12 glamor-13 glamor-14"
+                        >
+                          <Flex>
+                            <Base
+                              className="glamor-10"
+                            >
+                              <div
+                                className="glamor-10"
+                                is={null}
+                              >
+                                <Box
+                                  flex="1"
+                                >
+                                  <Base
+                                    className="glamor-8"
+                                    flex="1"
+                                  >
+                                    <div
+                                      className="glamor-8"
+                                      is={null}
+                                    >
+                                      Tags
+                                    </div>
+                                  </Base>
+                                </Box>
+                              </div>
+                            </Base>
+                          </Flex>
+                        </div>
+                      </Styled(div)>
+                    </Component>
+                  </Styled(Component)>
+                </div>
+              </Styled(div)>
+            </PanelHeader>
+            <PanelBody
+              direction="column"
+              disablePadding={true}
+              flex={false}
+            >
+              <div
+                className=""
               >
-                <td>
-                  <h5>
-                    Device
-                    Â 
-                    <small>
-                      (
-                      device
-                      )
-                    </small>
-                  </h5>
-                </td>
-                <td>
-                  <LinkWithConfirmation
-                    className="btn btn-sm btn-default"
-                    disabled={false}
-                    message="Are you sure you want to remove this tag?"
-                    onConfirm={[Function]}
-                    title="Remove tag?"
+                <Row
+                  className="ref-tag-row"
+                  key="browser"
+                  p={0}
+                >
+                  <Styled(Base)
+                    className="ref-tag-row"
+                    p={0}
                   >
-                    <Confirm
-                      cancelText="Cancel"
-                      confirmText="Confirm"
-                      disabled={false}
-                      message="Are you sure you want to remove this tag?"
-                      onConfirm={[Function]}
-                      priority="primary"
+                    <Base
+                      className="ref-tag-row glamor-27 glamor-28"
+                      p={0}
                     >
-                      <a
-                        className="btn btn-sm btn-default"
-                        disabled={false}
-                        onClick={[Function]}
-                        title="Remove tag?"
+                      <div
+                        className="ref-tag-row glamor-27 glamor-28"
+                        is={null}
                       >
-                        <span
-                          className="icon icon-trash"
-                        />
-                      </a>
-                      <Modal
-                        animation={false}
-                        autoFocus={true}
-                        backdrop={true}
-                        bsClass="modal"
-                        dialogComponentClass={[Function]}
-                        enforceFocus={true}
-                        keyboard={true}
-                        manager={
-                          ModalManager {
-                            "add": [Function],
-                            "containers": Array [],
-                            "data": Array [],
-                            "handleContainerOverflow": true,
-                            "hideSiblingNodes": true,
-                            "isTopModal": [Function],
-                            "modals": Array [],
-                            "remove": [Function],
-                          }
-                        }
-                        onHide={[Function]}
-                        renderBackdrop={[Function]}
-                        restoreFocus={true}
-                        show={false}
+                        <Box
+                          align="flex-end"
+                          flex="1"
+                          p={2}
+                        >
+                          <Base
+                            align="flex-end"
+                            className="glamor-23"
+                            flex="1"
+                            p={2}
+                          >
+                            <div
+                              className="glamor-23"
+                              is={null}
+                            >
+                              <span>
+                                Browser
+                              </span>
+                              <Styled(span)>
+                                <span
+                                  className="glamor-21 glamor-22"
+                                >
+                                  browser
+                                </span>
+                              </Styled(span)>
+                            </div>
+                          </Base>
+                        </Box>
+                        <Flex
+                          align="center"
+                          p={2}
+                        >
+                          <Base
+                            align="center"
+                            className="glamor-25"
+                            p={2}
+                          >
+                            <div
+                              className="glamor-25"
+                              is={null}
+                            >
+                              <LinkWithConfirmation
+                                className="btn btn-sm btn-default"
+                                disabled={false}
+                                message="Are you sure you want to remove this tag?"
+                                onConfirm={[Function]}
+                                title="Remove tag?"
+                              >
+                                <Confirm
+                                  cancelText="Cancel"
+                                  confirmText="Confirm"
+                                  disabled={false}
+                                  message="Are you sure you want to remove this tag?"
+                                  onConfirm={[Function]}
+                                  priority="primary"
+                                >
+                                  <a
+                                    className="btn btn-sm btn-default"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                    title="Remove tag?"
+                                  >
+                                    <span
+                                      className="icon icon-trash"
+                                    />
+                                  </a>
+                                  <Modal
+                                    animation={false}
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    bsClass="modal"
+                                    dialogComponentClass={[Function]}
+                                    enforceFocus={true}
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "add": [Function],
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "isTopModal": [Function],
+                                        "modals": Array [],
+                                        "remove": [Function],
+                                      }
+                                    }
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  >
+                                    <Modal
+                                      autoFocus={true}
+                                      backdrop={true}
+                                      backdropClassName="modal-backdrop"
+                                      containerClassName="modal-open"
+                                      enforceFocus={true}
+                                      keyboard={true}
+                                      manager={
+                                        ModalManager {
+                                          "add": [Function],
+                                          "containers": Array [],
+                                          "data": Array [],
+                                          "handleContainerOverflow": true,
+                                          "hideSiblingNodes": true,
+                                          "isTopModal": [Function],
+                                          "modals": Array [],
+                                          "remove": [Function],
+                                        }
+                                      }
+                                      onEntering={[Function]}
+                                      onExited={[Function]}
+                                      onHide={[Function]}
+                                      renderBackdrop={[Function]}
+                                      restoreFocus={true}
+                                      show={false}
+                                    />
+                                  </Modal>
+                                </Confirm>
+                              </LinkWithConfirmation>
+                            </div>
+                          </Base>
+                        </Flex>
+                      </div>
+                    </Base>
+                  </Styled(Base)>
+                </Row>
+                <Row
+                  className="ref-tag-row"
+                  key="device"
+                  p={0}
+                >
+                  <Styled(Base)
+                    className="ref-tag-row"
+                    p={0}
+                  >
+                    <Base
+                      className="ref-tag-row glamor-27 glamor-28"
+                      p={0}
+                    >
+                      <div
+                        className="ref-tag-row glamor-27 glamor-28"
+                        is={null}
                       >
-                        <Modal
-                          autoFocus={true}
-                          backdrop={true}
-                          backdropClassName="modal-backdrop"
-                          containerClassName="modal-open"
-                          enforceFocus={true}
-                          keyboard={true}
-                          manager={
-                            ModalManager {
-                              "add": [Function],
-                              "containers": Array [],
-                              "data": Array [],
-                              "handleContainerOverflow": true,
-                              "hideSiblingNodes": true,
-                              "isTopModal": [Function],
-                              "modals": Array [],
-                              "remove": [Function],
-                            }
-                          }
-                          onEntering={[Function]}
-                          onExited={[Function]}
-                          onHide={[Function]}
-                          renderBackdrop={[Function]}
-                          restoreFocus={true}
-                          show={false}
-                        />
-                      </Modal>
-                    </Confirm>
-                  </LinkWithConfirmation>
-                </td>
-              </tr>
-              <tr
-                key="environment"
-              >
-                <td>
-                  <h5>
-                    Environment
-                    Â 
-                    <small>
-                      (
-                      environment
-                      )
-                    </small>
-                  </h5>
-                </td>
-                <td>
-                  <Tooltip
-                    title="This tag cannot be deleted."
+                        <Box
+                          align="flex-end"
+                          flex="1"
+                          p={2}
+                        >
+                          <Base
+                            align="flex-end"
+                            className="glamor-23"
+                            flex="1"
+                            p={2}
+                          >
+                            <div
+                              className="glamor-23"
+                              is={null}
+                            >
+                              <span>
+                                Device
+                              </span>
+                              <Styled(span)>
+                                <span
+                                  className="glamor-21 glamor-22"
+                                >
+                                  device
+                                </span>
+                              </Styled(span)>
+                            </div>
+                          </Base>
+                        </Box>
+                        <Flex
+                          align="center"
+                          p={2}
+                        >
+                          <Base
+                            align="center"
+                            className="glamor-25"
+                            p={2}
+                          >
+                            <div
+                              className="glamor-25"
+                              is={null}
+                            >
+                              <LinkWithConfirmation
+                                className="btn btn-sm btn-default"
+                                disabled={false}
+                                message="Are you sure you want to remove this tag?"
+                                onConfirm={[Function]}
+                                title="Remove tag?"
+                              >
+                                <Confirm
+                                  cancelText="Cancel"
+                                  confirmText="Confirm"
+                                  disabled={false}
+                                  message="Are you sure you want to remove this tag?"
+                                  onConfirm={[Function]}
+                                  priority="primary"
+                                >
+                                  <a
+                                    className="btn btn-sm btn-default"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                    title="Remove tag?"
+                                  >
+                                    <span
+                                      className="icon icon-trash"
+                                    />
+                                  </a>
+                                  <Modal
+                                    animation={false}
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    bsClass="modal"
+                                    dialogComponentClass={[Function]}
+                                    enforceFocus={true}
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "add": [Function],
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "isTopModal": [Function],
+                                        "modals": Array [],
+                                        "remove": [Function],
+                                      }
+                                    }
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  >
+                                    <Modal
+                                      autoFocus={true}
+                                      backdrop={true}
+                                      backdropClassName="modal-backdrop"
+                                      containerClassName="modal-open"
+                                      enforceFocus={true}
+                                      keyboard={true}
+                                      manager={
+                                        ModalManager {
+                                          "add": [Function],
+                                          "containers": Array [],
+                                          "data": Array [],
+                                          "handleContainerOverflow": true,
+                                          "hideSiblingNodes": true,
+                                          "isTopModal": [Function],
+                                          "modals": Array [],
+                                          "remove": [Function],
+                                        }
+                                      }
+                                      onEntering={[Function]}
+                                      onExited={[Function]}
+                                      onHide={[Function]}
+                                      renderBackdrop={[Function]}
+                                      restoreFocus={true}
+                                      show={false}
+                                    />
+                                  </Modal>
+                                </Confirm>
+                              </LinkWithConfirmation>
+                            </div>
+                          </Base>
+                        </Flex>
+                      </div>
+                    </Base>
+                  </Styled(Base)>
+                </Row>
+                <Row
+                  className="ref-tag-row"
+                  key="environment"
+                  p={0}
+                >
+                  <Styled(Base)
+                    className="ref-tag-row"
+                    p={0}
                   >
-                    <span
-                      className="tip"
-                      title="This tag cannot be deleted."
+                    <Base
+                      className="ref-tag-row glamor-27 glamor-28"
+                      p={0}
                     >
-                      <LinkWithConfirmation
-                        className="btn btn-sm btn-default"
-                        disabled={true}
-                        message="Are you sure you want to remove this tag?"
-                        onConfirm={[Function]}
-                        title="Remove tag?"
+                      <div
+                        className="ref-tag-row glamor-27 glamor-28"
+                        is={null}
                       >
-                        <Confirm
-                          cancelText="Cancel"
-                          confirmText="Confirm"
-                          disabled={true}
-                          message="Are you sure you want to remove this tag?"
-                          onConfirm={[Function]}
-                          priority="primary"
+                        <Box
+                          align="flex-end"
+                          flex="1"
+                          p={2}
                         >
-                          <a
-                            className="btn btn-sm btn-default disabled"
-                            disabled={true}
-                            onClick={[Function]}
-                            title="Remove tag?"
+                          <Base
+                            align="flex-end"
+                            className="glamor-23"
+                            flex="1"
+                            p={2}
                           >
-                            <span
-                              className="icon icon-trash"
-                            />
-                          </a>
-                          <Modal
-                            animation={false}
-                            autoFocus={true}
-                            backdrop={true}
-                            bsClass="modal"
-                            dialogComponentClass={[Function]}
-                            enforceFocus={true}
-                            keyboard={true}
-                            manager={
-                              ModalManager {
-                                "add": [Function],
-                                "containers": Array [],
-                                "data": Array [],
-                                "handleContainerOverflow": true,
-                                "hideSiblingNodes": true,
-                                "isTopModal": [Function],
-                                "modals": Array [],
-                                "remove": [Function],
-                              }
-                            }
-                            onHide={[Function]}
-                            renderBackdrop={[Function]}
-                            restoreFocus={true}
-                            show={false}
+                            <div
+                              className="glamor-23"
+                              is={null}
+                            >
+                              <span>
+                                Environment
+                              </span>
+                              <Styled(span)>
+                                <span
+                                  className="glamor-21 glamor-22"
+                                >
+                                  environment
+                                </span>
+                              </Styled(span)>
+                            </div>
+                          </Base>
+                        </Box>
+                        <Flex
+                          align="center"
+                          p={2}
+                        >
+                          <Base
+                            align="center"
+                            className="glamor-25"
+                            p={2}
                           >
-                            <Modal
-                              autoFocus={true}
-                              backdrop={true}
-                              backdropClassName="modal-backdrop"
-                              containerClassName="modal-open"
-                              enforceFocus={true}
-                              keyboard={true}
-                              manager={
-                                ModalManager {
-                                  "add": [Function],
-                                  "containers": Array [],
-                                  "data": Array [],
-                                  "handleContainerOverflow": true,
-                                  "hideSiblingNodes": true,
-                                  "isTopModal": [Function],
-                                  "modals": Array [],
-                                  "remove": [Function],
-                                }
-                              }
-                              onEntering={[Function]}
-                              onExited={[Function]}
-                              onHide={[Function]}
-                              renderBackdrop={[Function]}
-                              restoreFocus={true}
-                              show={false}
-                            />
-                          </Modal>
-                        </Confirm>
-                      </LinkWithConfirmation>
-                    </span>
-                  </Tooltip>
-                </td>
-              </tr>
-            </tbody>
-          </table>
-        </div>
+                            <div
+                              className="glamor-25"
+                              is={null}
+                            >
+                              <Tooltip
+                                title="This tag cannot be deleted."
+                              >
+                                <span
+                                  className="tip"
+                                  title="This tag cannot be deleted."
+                                >
+                                  <LinkWithConfirmation
+                                    className="btn btn-sm btn-default"
+                                    disabled={true}
+                                    message="Are you sure you want to remove this tag?"
+                                    onConfirm={[Function]}
+                                    title="Remove tag?"
+                                  >
+                                    <Confirm
+                                      cancelText="Cancel"
+                                      confirmText="Confirm"
+                                      disabled={true}
+                                      message="Are you sure you want to remove this tag?"
+                                      onConfirm={[Function]}
+                                      priority="primary"
+                                    >
+                                      <a
+                                        className="btn btn-sm btn-default disabled"
+                                        disabled={true}
+                                        onClick={[Function]}
+                                        title="Remove tag?"
+                                      >
+                                        <span
+                                          className="icon icon-trash"
+                                        />
+                                      </a>
+                                      <Modal
+                                        animation={false}
+                                        autoFocus={true}
+                                        backdrop={true}
+                                        bsClass="modal"
+                                        dialogComponentClass={[Function]}
+                                        enforceFocus={true}
+                                        keyboard={true}
+                                        manager={
+                                          ModalManager {
+                                            "add": [Function],
+                                            "containers": Array [],
+                                            "data": Array [],
+                                            "handleContainerOverflow": true,
+                                            "hideSiblingNodes": true,
+                                            "isTopModal": [Function],
+                                            "modals": Array [],
+                                            "remove": [Function],
+                                          }
+                                        }
+                                        onHide={[Function]}
+                                        renderBackdrop={[Function]}
+                                        restoreFocus={true}
+                                        show={false}
+                                      >
+                                        <Modal
+                                          autoFocus={true}
+                                          backdrop={true}
+                                          backdropClassName="modal-backdrop"
+                                          containerClassName="modal-open"
+                                          enforceFocus={true}
+                                          keyboard={true}
+                                          manager={
+                                            ModalManager {
+                                              "add": [Function],
+                                              "containers": Array [],
+                                              "data": Array [],
+                                              "handleContainerOverflow": true,
+                                              "hideSiblingNodes": true,
+                                              "isTopModal": [Function],
+                                              "modals": Array [],
+                                              "remove": [Function],
+                                            }
+                                          }
+                                          onEntering={[Function]}
+                                          onExited={[Function]}
+                                          onHide={[Function]}
+                                          renderBackdrop={[Function]}
+                                          restoreFocus={true}
+                                          show={false}
+                                        />
+                                      </Modal>
+                                    </Confirm>
+                                  </LinkWithConfirmation>
+                                </span>
+                              </Tooltip>
+                            </div>
+                          </Base>
+                        </Flex>
+                      </div>
+                    </Base>
+                  </Styled(Base)>
+                </Row>
+              </div>
+            </PanelBody>
+          </div>
+        </Styled(div)>
       </div>
     </DocumentTitle>
   </SideEffect(DocumentTitle)>
diff --git a/tests/js/spec/views/projectTags.spec.jsx b/tests/js/spec/views/projectTags.spec.jsx
index 38b391e192..1b9f4e7d45 100644
--- a/tests/js/spec/views/projectTags.spec.jsx
+++ b/tests/js/spec/views/projectTags.spec.jsx
@@ -6,28 +6,43 @@ import {mount} from 'enzyme';
 import ProjectTags from 'app/views/projectTags';
 
 describe('ProjectTags', function() {
-  let org, project, tags, wrapper;
+  let org, project, wrapper;
 
   beforeEach(function() {
     org = TestStubs.Organization();
     project = TestStubs.Project();
-    tags = TestStubs.Tags();
 
+    MockApiClient.clearMockResponses();
     MockApiClient.addMockResponse({
       url: `/projects/${org.slug}/${project.slug}/tags/`,
       method: 'GET',
-      body: tags,
+      body: TestStubs.Tags(),
     });
     MockApiClient.addMockResponse({
       url: `/projects/${org.slug}/${project.slug}/tags/browser/`,
       method: 'DELETE',
     });
 
-    wrapper = mount(<ProjectTags params={{orgId: org.slug, projectId: project.slug}} />, {
-      context: {
-        router: TestStubs.router(),
-      },
+    wrapper = mount(
+      <ProjectTags params={{orgId: org.slug, projectId: project.slug}} />,
+      TestStubs.routerContext()
+    );
+  });
+
+  it.skip('renders empty', function() {
+    MockApiClient.clearMockResponses();
+    MockApiClient.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/tags/`,
+      method: 'GET',
+      body: [],
     });
+
+    wrapper = mount(
+      <ProjectTags params={{orgId: org.slug, projectId: project.slug}} />,
+      TestStubs.routerContext()
+    );
+
+    expect(wrapper.find('EmptyMessage')).toHaveLength(1);
   });
 
   it('renders', function() {
@@ -35,8 +50,10 @@ describe('ProjectTags', function() {
   });
 
   it('deletes tag', function() {
+    let tags = wrapper.state('tags').length;
+
     wrapper
-      .find('tbody a.btn')
+      .find('a.btn')
       .first()
       .simulate('click');
 
@@ -47,6 +64,6 @@ describe('ProjectTags', function() {
 
     wrapper.update();
 
-    expect(wrapper.find('tbody tr').length).toBe(2);
+    expect(wrapper.state('tags').length).toBe(tags - 1);
   });
 });
