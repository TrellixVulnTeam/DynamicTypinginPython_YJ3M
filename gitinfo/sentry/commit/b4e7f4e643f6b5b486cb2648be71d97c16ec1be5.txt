commit b4e7f4e643f6b5b486cb2648be71d97c16ec1be5
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Apr 25 11:33:45 2019 -0700

    feat: Turn on global project access for org admins (#12930)
    
    Org admins can now view all projects via the project selector. Projects
    without membership are not selected by default and are listed under the
    "Projects I don't belong to heading". This is the same behavior that
    superusers currently have in Sentry. This brings the project selection
    behavior closer to what it was previously in Sentry 9, where admins
    could see all projects without explicitly joining a team.
    
    Closes SEN-491

diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
index cd2c3ccac8..65ebe2de2f 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
@@ -301,15 +301,16 @@ class GlobalSelectionHeader extends React.Component {
   };
 
   getProjects = () => {
-    const {projects} = this.props;
+    const {organization, projects} = this.props;
     const {isSuperuser} = ConfigStore.get('user');
+    const isOrgAdmin = new Set(organization.access).has('org:admin');
 
     const [memberProjects, nonMemberProjects] = partition(
       projects,
       project => project.isMember
     );
 
-    if (isSuperuser) {
+    if (isSuperuser || isOrgAdmin) {
       return [memberProjects, nonMemberProjects];
     }
 
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
index c86ee6f2f4..540f47b22a 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
@@ -50,8 +50,11 @@ export default function createQueryBuilder(initial = {}, organization) {
 
   const defaultProjectIds = getProjectIds(defaultProjects);
 
+  const hasGlobalProjectAccess =
+    ConfigStore.get('user').isSuperuser || organization.access.includes('org:admin');
+
   const projectsToFetchTags = getProjectIds(
-    ConfigStore.get('user').isSuperuser ? organization.projects : defaultProjects
+    hasGlobalProjectAccess ? organization.projects : defaultProjects
   );
 
   const columns = COLUMNS.map(col => ({...col, isTag: false}));
diff --git a/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx b/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
index 35d7d48f67..6600ca4186 100644
--- a/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
@@ -51,6 +51,7 @@ describe('Query Builder', function() {
             TestStubs.Project({id: 1, isMember: false}),
             TestStubs.Project({id: 2}),
           ],
+          access: ['org:read', 'org:write'],
         })
       );
 
@@ -130,6 +131,35 @@ describe('Query Builder', function() {
       });
     });
 
+    it("loads all project's tags for org admins", async function() {
+      ConfigStore.set('user', TestStubs.User());
+      const queryBuilder = createQueryBuilder(
+        {},
+        TestStubs.Organization({
+          projects: [
+            TestStubs.Project({id: 1, isMember: false}),
+            TestStubs.Project({id: 2}),
+          ],
+          access: ['org:admin'],
+        })
+      );
+
+      await queryBuilder.load();
+
+      expect(discoverMock).toHaveBeenCalledWith(
+        '/organizations/org-slug/discover/query/?per_page=1000&cursor=0:0:1',
+        expect.objectContaining({
+          data: expect.objectContaining({
+            fields: ['tags_key'],
+            aggregations: [['count()', null, 'count']],
+            orderby: '-count',
+            projects: [1, 2],
+            range: '90d',
+          }),
+        })
+      );
+    });
+
     it('loads hardcoded tags when API request fails', async function() {
       discoverMock = MockApiClient.addMockResponse({
         url: '/organizations/org-slug/discover/query/?per_page=1000&cursor=0:0:1',
