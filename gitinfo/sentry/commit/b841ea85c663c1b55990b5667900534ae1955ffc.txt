commit b841ea85c663c1b55990b5667900534ae1955ffc
Author: Dena Mwangi <dena@getsentry.com>
Date:   Fri Apr 26 11:43:06 2019 -0700

    fix(broadcasts): Stricter subclass with OrganizationEndpoint (#12910)

diff --git a/src/sentry/api/endpoints/broadcast_index.py b/src/sentry/api/endpoints/broadcast_index.py
index dce3e93c4e..14337a6f9b 100644
--- a/src/sentry/api/endpoints/broadcast_index.py
+++ b/src/sentry/api/endpoints/broadcast_index.py
@@ -7,9 +7,10 @@ from django.db import IntegrityError, transaction
 from django.db.models import Q
 from django.utils import timezone
 from operator import or_
-from rest_framework.permissions import IsAuthenticated
 
-from sentry.api.base import Endpoint
+from sentry.api.bases.organization import (
+    OrganizationEndpoint, OrganizationPermission
+)
 from sentry.api.paginator import DateTimePaginator
 from sentry.api.serializers import serialize, AdminBroadcastSerializer, BroadcastSerializer
 from sentry.api.validators import AdminBroadcastValidator, BroadcastValidator
@@ -21,8 +22,8 @@ from sentry.search.utils import tokenize_query
 logger = logging.getLogger('sentry')
 
 
-class BroadcastIndexEndpoint(Endpoint):
-    permission_classes = (IsAuthenticated, )
+class BroadcastIndexEndpoint(OrganizationEndpoint):
+    permission_classes = (OrganizationPermission, )
 
     def _get_serializer(self, request):
         if is_active_superuser(request):
@@ -37,7 +38,14 @@ class BroadcastIndexEndpoint(Endpoint):
         # used in the SASS product
         return list(queryset)
 
-    def get(self, request, organization_slug=None):
+    def convert_args(self, request, organization_slug=None, *args, **kwargs):
+        if organization_slug:
+            args, kwargs = super(BroadcastIndexEndpoint,
+                                 self).convert_args(request, organization_slug)
+
+        return (args, kwargs)
+
+    def get(self, request, organization=None):
         if request.GET.get('show') == 'all' and is_active_superuser(
                 request) and request.access.has_permission('broadcasts.admin'):
             # superusers can slice and dice
@@ -83,8 +91,8 @@ class BroadcastIndexEndpoint(Endpoint):
                 else:
                     queryset = queryset.none()
 
-        if organization_slug:
-            data = self._secondary_filtering(request, organization_slug, queryset)
+        if organization:
+            data = self._secondary_filtering(request, organization, queryset)
             return self.respond(self._serialize_objects(data, request))
 
         sort_by = request.GET.get('sortBy')
