commit f9c41ad0ffc80ddcedc800e63994bd2bc2cf7554
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 28 21:40:50 2013 -0800

    Add sort_value to trends and new endpoints

diff --git a/src/sentry/manager.py b/src/sentry/manager.py
index c5cefd8395..d14b345802 100644
--- a/src/sentry/manager.py
+++ b/src/sentry/manager.py
@@ -729,7 +729,7 @@ class GroupManager(BaseManager, ChartMixin):
 
         # TODO: adding project_id to sort clause on left join helps query in many cases
         query = """
-        SELECT (SUM(%(mcbm_tbl)s.times_seen) * (%(norm)f / (%(epoch_clause)s / 60)) + 1.0) / (COALESCE(z.rate, 0) + 1.0) as accel,
+        SELECT (SUM(%(mcbm_tbl)s.times_seen) * (%(norm)f / (%(epoch_clause)s / 60)) + 1.0) / (COALESCE(z.rate, 0) + 1.0) as sort_value,
                (COALESCE(z.rate, 0) + 1.0) as prev_rate,
                %(before_where)s
         LEFT JOIN (SELECT a.group_id, SUM(a.times_seen) / COUNT(a.times_seen) / %(norm)f as rate
@@ -744,7 +744,7 @@ class GroupManager(BaseManager, ChartMixin):
         AND %(before_group)s
         GROUP BY prev_rate, %(mcbm_tbl)s.date, %(after_group)s
         HAVING SUM(%(mcbm_tbl)s.times_seen) > 0
-        ORDER BY accel DESC
+        ORDER BY sort_value DESC
         """ % dict(
             mcbm_tbl=mcbm_tbl,
             before_where=before_where,
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 2c201c1bf2..d0cea07b27 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -547,7 +547,7 @@ def get_group_trends(request, team=None, project=None):
         group_list = list(base_qs.filter(
             status=STATUS_UNRESOLVED,
             last_seen__gte=cutoff_dt
-        ).order_by('-score')[:limit])
+        ).extra(select={'sort_value': 'score'}).order_by('-score')[:limit])
 
     for group in group_list:
         group._project_cache = project_dict.get(group.project_id)
@@ -581,7 +581,7 @@ def get_new_groups(request, team=None, project=None):
         project__in=project_dict.keys(),
         status=STATUS_UNRESOLVED,
         active_at__gte=cutoff_dt,
-    ).order_by('-score', '-first_seen')[:limit])
+    ).extra(select={'sort_value': 'score'}).order_by('-score', '-first_seen')[:limit])
 
     for group in group_list:
         group._project_cache = project_dict.get(group.project_id)
