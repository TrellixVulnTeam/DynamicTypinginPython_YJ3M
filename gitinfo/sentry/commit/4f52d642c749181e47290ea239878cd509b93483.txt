commit 4f52d642c749181e47290ea239878cd509b93483
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu May 2 21:26:55 2019 +0200

    feat: Show which enhancer applied in the grouping debug panel (#13039)

diff --git a/src/sentry/grouping/enhancer.py b/src/sentry/grouping/enhancer.py
index 675fd34be4..fc9cd73d1f 100644
--- a/src/sentry/grouping/enhancer.py
+++ b/src/sentry/grouping/enhancer.py
@@ -88,6 +88,13 @@ class Match(object):
         self.key = key
         self.pattern = pattern
 
+    @property
+    def description(self):
+        return '%s:%s' % (
+            self.key,
+            self.pattern.split() != [self.pattern] and '"%s"' % self.pattern or self.pattern,
+        )
+
     def matches_frame(self, frame_data, platform):
         # Path matches are always case insensitive
         if self.key in ('path', 'package'):
@@ -174,13 +181,20 @@ class Action(object):
             if self.key == 'app':
                 frame['in_app'] = self.flag
 
-    def update_frame_components_contributions(self, components, idx):
+    def update_frame_components_contributions(self, components, idx, rule=None):
+        rule_hint = 'grouping enhancement rule'
+        if rule:
+            rule_hint = '%s (%s)' % (
+                rule_hint,
+                rule.matcher_description,
+            )
+
         for component in self._slice_to_range(components, idx):
             if self.key == 'group' and self.flag != component.contributes:
                 component.update(
                     contributes=self.flag,
-                    hint='%s by grouping enhancement rule' % (
-                        self.flag and 'un-ignored' or 'ignored')
+                    hint='%s by %s' % (
+                        self.flag and 'un-ignored' or 'ignored', rule_hint)
                 )
             # The in app flag was set by `apply_modifications_to_frame`
             # but we want to add a hint if there is none yet.
@@ -188,8 +202,8 @@ class Action(object):
                     self.flag == component.contributes and \
                     component.hint is None:
                 component.update(
-                    hint='marked %s by grouping enhancement rule' % (
-                        self.flag and 'in-app' or 'out of app')
+                    hint='marked %s by %s' % (
+                        self.flag and 'in-app' or 'out of app', rule_hint)
                 )
 
     @classmethod
@@ -226,7 +240,8 @@ class Enhancements(object):
             for idx, (component, frame) in enumerate(izip(components, frames)):
                 actions = rule.get_matching_frame_actions(frame, platform)
                 for action in actions or ():
-                    action.update_frame_components_contributions(components, idx)
+                    action.update_frame_components_contributions(
+                        components, idx, rule=rule)
 
     def as_dict(self, with_rules=False):
         rv = {
@@ -296,6 +311,10 @@ class Rule(object):
         self.matchers = matchers
         self.actions = actions
 
+    @property
+    def matcher_description(self):
+        return ' '.join(x.description for x in self.matchers)
+
     def as_dict(self):
         matchers = {}
         for matcher in self.matchers:
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust.pysnap
index 5f049eaa2c..3f94f5e49d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-07T12:50:18.036682Z'
+created: '2019-05-02T18:53:29.310654Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -24,7 +24,7 @@ app:
           frame (non app frame)
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
           frame (non app frame)
@@ -54,7 +54,7 @@ system:
           frame*
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
           frame*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust2.pysnap
index 25d9a8b5a3..4307d787bf 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust2.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-07T13:12:37.272426Z'
+created: '2019-05-02T18:53:29.352014Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -24,7 +24,7 @@ app:
           frame (non app frame)
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
           frame (non app frame)
@@ -45,7 +45,7 @@ system:
           frame*
             function*
               u'std::rt::lang_start_internal'
-          frame (ignored by grouping enhancement rule)
+          frame (ignored by grouping enhancement rule (family:native function:__*))
             function*
               u'___rust_maybe_catch_panic'
           frame*
@@ -54,10 +54,10 @@ system:
           frame*
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
-          frame (ignored by grouping enhancement rule)
+          frame (ignored by grouping enhancement rule (family:native function:*::__*))
             function*
               u'log::__private_api_log'
         type*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust.pysnap
index 6314872728..923fc79a00 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-09T07:38:26.537674Z'
+created: '2019-05-02T18:53:30.277588Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -44,16 +44,16 @@ system:
           frame
             function (function name is used only if module or filename are available)
               u'_main'
-          frame (marked out of app by grouping enhancement rule)
+          frame (marked out of app by grouping enhancement rule (family:native function:std::*))
             function (function name is used only if module or filename are available)
               u'std::rt::lang_start_internal'
           frame
             function (function name is used only if module or filename are available)
               u'___rust_maybe_catch_panic'
-          frame (marked out of app by grouping enhancement rule)
+          frame (marked out of app by grouping enhancement rule (family:native function:std::*))
             function (function name is used only if module or filename are available)
               u'std::panicking::try::do_call'
-          frame (marked out of app by grouping enhancement rule)
+          frame (marked out of app by grouping enhancement rule (family:native function:std::*))
             function (function name is used only if module or filename are available)
               u'std::rt::lang_start::{{closure}}'
           frame
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust2.pysnap
index 973debf75b..e6077a2541 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust2.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-09T07:38:26.571613Z'
+created: '2019-05-02T18:53:30.317409Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -44,16 +44,16 @@ system:
           frame
             function (function name is used only if module or filename are available)
               u'_main'
-          frame (marked out of app by grouping enhancement rule)
+          frame (marked out of app by grouping enhancement rule (family:native function:std::*))
             function (function name is used only if module or filename are available)
               u'std::rt::lang_start_internal'
           frame
             function (function name is used only if module or filename are available)
               u'___rust_maybe_catch_panic'
-          frame (marked out of app by grouping enhancement rule)
+          frame (marked out of app by grouping enhancement rule (family:native function:std::*))
             function (function name is used only if module or filename are available)
               u'std::panicking::try::do_call'
-          frame (marked out of app by grouping enhancement rule)
+          frame (marked out of app by grouping enhancement rule (family:native function:std::*))
             function (function name is used only if module or filename are available)
               u'std::rt::lang_start::{{closure}}'
           frame
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust.pysnap
index 9b18bd62c0..c2a0cb78c1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-07T12:50:19.615853Z'
+created: '2019-05-02T18:53:31.212549Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -24,7 +24,7 @@ app:
           frame (non app frame)
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
           frame (non app frame)
@@ -54,7 +54,7 @@ system:
           frame*
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
           frame*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust2.pysnap
index 3f9c1faa6f..fad8248c22 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust2.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-07T13:12:38.958947Z'
+created: '2019-05-02T18:53:31.253290Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -24,7 +24,7 @@ app:
           frame (non app frame)
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
           frame (non app frame)
@@ -45,7 +45,7 @@ system:
           frame*
             function*
               u'std::rt::lang_start_internal'
-          frame (ignored by grouping enhancement rule)
+          frame (ignored by grouping enhancement rule (family:native function:__*))
             function*
               u'___rust_maybe_catch_panic'
           frame*
@@ -54,10 +54,10 @@ system:
           frame*
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
-          frame (ignored by grouping enhancement rule)
+          frame (ignored by grouping enhancement rule (family:native function:*::__*))
             function*
               u'log::__private_api_log'
         type*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_17/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_17/stacktrace_rust.pysnap
index 75798f4f29..6babafac36 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_17/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_17/stacktrace_rust.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-17T20:02:29.034332Z'
+created: '2019-05-02T18:53:32.162383Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -24,7 +24,7 @@ app:
           frame (non app frame)
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
           frame (non app frame)
@@ -56,7 +56,7 @@ system:
           frame*
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
           frame*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_17/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_17/stacktrace_rust2.pysnap
index c0e3f17ce5..2aa0fe1491 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_17/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_17/stacktrace_rust2.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-17T20:02:29.084952Z'
+created: '2019-05-02T18:53:32.201919Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -24,7 +24,7 @@ app:
           frame (non app frame)
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
           frame (non app frame)
@@ -47,7 +47,7 @@ system:
           frame*
             function*
               u'std::rt::lang_start_internal'
-          frame (ignored by grouping enhancement rule)
+          frame (ignored by grouping enhancement rule (family:native function:__*))
             function*
               u'___rust_maybe_catch_panic'
           frame*
@@ -56,10 +56,10 @@ system:
           frame*
             function*
               u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
+          frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::*))
             function*
               u'log_demo::main'
-          frame (ignored by grouping enhancement rule)
+          frame (ignored by grouping enhancement rule (family:native function:*::__*))
             function*
               u'log::__private_api_log'
         type*
