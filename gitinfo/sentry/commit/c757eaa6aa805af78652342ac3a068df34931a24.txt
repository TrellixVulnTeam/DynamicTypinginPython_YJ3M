commit c757eaa6aa805af78652342ac3a068df34931a24
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Aug 24 10:24:40 2018 -0700

    fix(api): Fixes User Weekly Reports fine tuning (#9302)
    
    By default all org reports are enabled, when attempting to go from default -> "on" it errors because org id does not exist in user option.
    
    Fixes SENTRY-6P4

diff --git a/src/sentry/api/endpoints/user_notification_fine_tuning.py b/src/sentry/api/endpoints/user_notification_fine_tuning.py
index ba840d1478..74a3b887e8 100644
--- a/src/sentry/api/endpoints/user_notification_fine_tuning.py
+++ b/src/sentry/api/endpoints/user_notification_fine_tuning.py
@@ -90,7 +90,7 @@ class UserNotificationFineTuningEndpoint(UserEndpoint):
         if notification_type == 'reports':
             (user_option, created) = UserOption.objects.get_or_create(**filter_args)
 
-            value = user_option.value or []
+            value = set(user_option.value or [])
 
             # set of org ids that user is a member of
             org_ids = self.get_org_ids(user)
@@ -103,12 +103,15 @@ class UserNotificationFineTuningEndpoint(UserEndpoint):
                 if org_id not in org_ids:
                     return Response(status=status.HTTP_403_FORBIDDEN)
 
-                if enabled:
+                # list contains org ids that should have reports DISABLED
+                # so if enabled need to check if org_id exists in list (because by default
+                # they will have reports enabled)
+                if enabled and org_id in value:
                     value.remove(org_id)
-                else:
-                    value.insert(0, org_id)
+                elif not enabled:
+                    value.add(org_id)
 
-            user_option.update(value=value)
+            user_option.update(value=list(value))
             return Response(status=status.HTTP_204_NO_CONTENT)
 
         if notification_type in ['alerts', 'workflow', 'email']:
diff --git a/tests/sentry/api/endpoints/test_user_notification_fine_tuning.py b/tests/sentry/api/endpoints/test_user_notification_fine_tuning.py
index e2b5beec80..67619a99b6 100644
--- a/tests/sentry/api/endpoints/test_user_notification_fine_tuning.py
+++ b/tests/sentry/api/endpoints/test_user_notification_fine_tuning.py
@@ -306,6 +306,41 @@ class UserNotificationFineTuningTest(APITestCase):
             user=self.user,
             key="reports:disabled-organizations").value) == set([self.org.id, self.org2.id])
 
+    def test_enable_weekly_reports_from_default_setting(self):
+        url = reverse(
+            'sentry-api-0-user-notifications-fine-tuning', kwargs={
+                'user_id': 'me',
+                'notification_type': 'reports',
+            }
+        )
+
+        update = {}
+        update[self.org.id] = 1
+        update[self.org2.id] = "1"
+
+        resp = self.client.put(url, data=update)
+        assert resp.status_code == 204
+
+        assert set(UserOption.objects.get(
+            user=self.user,
+            key="reports:disabled-organizations").value) == set([])
+
+        # can disable
+        update = {}
+        update[self.org.id] = 0
+        resp = self.client.put(url, data=update)
+        assert set(UserOption.objects.get(
+            user=self.user,
+            key="reports:disabled-organizations").value) == set([self.org.id])
+
+        # re-enable
+        update = {}
+        update[self.org.id] = 1
+        resp = self.client.put(url, data=update)
+        assert set(UserOption.objects.get(
+            user=self.user,
+            key="reports:disabled-organizations").value) == set([])
+
     def test_permissions(self):
         new_user = self.create_user(email='b@example.com')
         new_org = self.create_organization(name='New Org')
