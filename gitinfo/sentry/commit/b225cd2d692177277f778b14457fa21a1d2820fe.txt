commit b225cd2d692177277f778b14457fa21a1d2820fe
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Dec 12 10:07:20 2014 -0800

    Protect against ownerless organizations

diff --git a/src/sentry/api/endpoints/organization_member_details.py b/src/sentry/api/endpoints/organization_member_details.py
index c1d10d080e..e33bcc9a5f 100644
--- a/src/sentry/api/endpoints/organization_member_details.py
+++ b/src/sentry/api/endpoints/organization_member_details.py
@@ -11,6 +11,19 @@ from sentry.models import (
 
 
 class OrganizationMemberDetailsEndpoint(Endpoint):
+    def _is_only_owner(self, member):
+        if member.type != OrganizationMemberType.OWNER:
+            return False
+
+        queryset = OrganizationMember.objects.filter(
+            organization=member.organization_id,
+            type=OrganizationMemberType.OWNER,
+        ).exclude(id=member.id)
+        if queryset.exists():
+            return False
+
+        return True
+
     def delete(self, request, organization_slug, member_id):
         try:
             organization = Organization.objects.get_from_cache(
@@ -37,8 +50,19 @@ class OrganizationMemberDetailsEndpoint(Endpoint):
         except OrganizationMember.DoesNotExist:
             return Response(status=404)
 
+        if self._is_only_owner(om):
+            return Response(status=403)
+
         audit_data = om.get_audit_log_data()
 
+        if om.user_id == organization.owner_id:
+            # TODO(dcramer): while we still maintain an owner field on
+            # organization we need to ensure it transfers
+            organization.owner = OrganizationMember.objects.filter(
+                type=OrganizationMemberType.OWNER,
+            ).exclude(id=om.id)[0].user
+            organization.save()
+
         om.delete()
 
         AuditLogEntry.objects.create(
diff --git a/tests/sentry/api/endpoints/test_organization_member_details.py b/tests/sentry/api/endpoints/test_organization_member_details.py
index 2a89955ee5..fa0ad54a54 100644
--- a/tests/sentry/api/endpoints/test_organization_member_details.py
+++ b/tests/sentry/api/endpoints/test_organization_member_details.py
@@ -29,3 +29,23 @@ class DeleteOrganizationMemberTest(APITestCase):
         assert resp.status_code == 204
 
         assert not OrganizationMember.objects.filter(id=member_om.id).exists()
+
+    def test_cannot_delete_only_owner(self):
+        self.login_as(user=self.user)
+
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        owner_om = OrganizationMember.objects.get(
+            organization=organization,
+            user=self.user,
+        )
+
+        path = reverse('sentry-api-0-organization-member-details', args=[organization.slug, owner_om.id])
+
+        self.login_as(self.user)
+
+        resp = self.client.delete(path)
+
+        assert resp.status_code == 403
+
+        assert OrganizationMember.objects.filter(id=owner_om.id).exists()
