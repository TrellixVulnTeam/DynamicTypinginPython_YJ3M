commit 9ff0823ee03d123898cec54e4051cf550352d213
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Sep 11 15:24:58 2018 -0700

    feat(discover): Support non string tags in UI (#9711)
    
    Currently os_rooted is the only one.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx
index c098245f69..3b55944be6 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/data.jsx
@@ -25,6 +25,11 @@ export const PROMOTED_TAGS = [
   {name: 'tags[sentry:release]', type: TYPES.STRING},
 ];
 
+// All tags are assumed to be strings, except the following
+export const SPECIAL_TAGS = {
+  'tags[os_rooted]': TYPES.BOOLEAN,
+};
+
 export const COLUMNS = [
   {name: 'event_id', type: TYPES.STRING},
   {name: 'project_id', type: TYPES.STRING},
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
index 148872051f..5554347b7e 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
@@ -4,7 +4,7 @@ import moment from 'moment-timezone';
 
 import {Client} from 'app/api';
 import {t} from 'app/locale';
-import {COLUMNS, PROMOTED_TAGS} from './data';
+import {COLUMNS, PROMOTED_TAGS, SPECIAL_TAGS} from './data';
 import {isValidAggregation} from './aggregations/utils';
 
 const DATE_TIME_FORMAT = 'YYYY-MM-DDTHH:mm:ss';
@@ -72,7 +72,10 @@ export default function createQueryBuilder(initial = {}, organization) {
       end: moment().format(DATE_TIME_FORMAT),
     })
       .then(res => {
-        tags = res.data.map(tag => ({name: `tags[${tag.tags_key}]`, type: 'string'}));
+        tags = res.data.map(tag => {
+          const type = SPECIAL_TAGS[tags.tags_key] || 'string';
+          return {name: `tags[${tag.tags_key}]`, type};
+        });
       })
       .catch(err => {
         tags = PROMOTED_TAGS;
