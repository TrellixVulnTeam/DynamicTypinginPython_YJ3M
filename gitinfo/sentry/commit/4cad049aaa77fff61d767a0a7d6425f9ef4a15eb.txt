commit 4cad049aaa77fff61d767a0a7d6425f9ef4a15eb
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Dec 18 13:25:03 2017 -0800

    ref(ui): Refactor action components (#6640)
    
    Refactor stream and group details action components

diff --git a/src/sentry/static/sentry/app/components/actions/actionLink.jsx b/src/sentry/static/sentry/app/components/actions/actionLink.jsx
new file mode 100644
index 0000000000..29ca8d5712
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/actions/actionLink.jsx
@@ -0,0 +1,57 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import classNames from 'classnames';
+
+import Confirm from '../confirm';
+
+export default class ActionLink extends React.Component {
+  static propTypes = {
+    shouldConfirm: PropTypes.bool,
+    message: PropTypes.node,
+    className: PropTypes.any,
+    onAction: PropTypes.func.isRequired,
+    title: PropTypes.string,
+    confirmLabel: PropTypes.string,
+    disabled: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    shouldConfirm: false,
+    disabled: false,
+  };
+
+  render() {
+    let {
+      shouldConfirm,
+      message,
+      className,
+      title,
+      onAction,
+      confirmLabel,
+      disabled,
+      children,
+    } = this.props;
+
+    if (shouldConfirm) {
+      return (
+        <Confirm message={message} confirmText={confirmLabel} onConfirm={onAction}>
+          <a className={className} title={title} disabled={disabled}>
+            {' '}
+            {children}
+          </a>
+        </Confirm>
+      );
+    } else {
+      return (
+        <a
+          className={classNames(className, {disabled})}
+          onClick={!disabled && onAction}
+          disabled={disabled}
+        >
+          {children}
+        </a>
+      );
+    }
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/actions/ignore.jsx b/src/sentry/static/sentry/app/components/actions/ignore.jsx
new file mode 100644
index 0000000000..c9bff267b1
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/actions/ignore.jsx
@@ -0,0 +1,269 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import classNames from 'classnames';
+
+import {t} from '../../locale';
+import MenuItem from '../menuItem';
+import DropdownLink from '../dropdownLink';
+import Duration from '../duration';
+import CustomIgnoreCountModal from '../customIgnoreCountModal';
+import CustomIgnoreDurationModal from '../customIgnoreDurationModal';
+import ActionLink from './actionLink';
+
+export default class IgnoreActions extends React.Component {
+  static propTypes = {
+    isIgnored: PropTypes.bool,
+    onUpdate: PropTypes.func.isRequired,
+    disabled: PropTypes.bool,
+    shouldConfirm: PropTypes.bool,
+    confirmMessage: PropTypes.node,
+    confirmLabel: PropTypes.string,
+  };
+
+  static defaultProps = {
+    isIgnored: false,
+    confirmLabel: 'Ignore',
+  };
+
+  constructor(props) {
+    super(props);
+    this.state = {modal: false};
+  }
+  getIgnoreDurations() {
+    return [30, 120, 360, 60 * 24, 60 * 24 * 7];
+  }
+
+  getIgnoreCounts() {
+    return [10, 100, 1000, 10000, 100000];
+  }
+
+  getIgnoreWindows() {
+    return [[1, 'per hour'], [24, 'per day'], [24 * 7, 'per week']];
+  }
+
+  onCustomIgnore(statusDetails) {
+    this.setState({
+      modal: false,
+    });
+    this.onIgnore(statusDetails);
+  }
+
+  onIgnore(statusDetails) {
+    return this.props.onUpdate({
+      status: 'ignored',
+      statusDetails: statusDetails || {},
+    });
+  }
+
+  render() {
+    let {
+      isIgnored,
+      onUpdate,
+      disabled,
+      shouldConfirm,
+      confirmMessage,
+      confirmLabel,
+    } = this.props;
+
+    let linkClassName = classNames('btn btn-default btn-sm', {
+      active: isIgnored,
+    });
+
+    let actionLinkProps = {
+      shouldConfirm,
+      title: 'Ignore',
+      message: confirmMessage,
+      confirmLabel,
+      disabled,
+    };
+
+    if (isIgnored) {
+      return (
+        <div className="btn-group">
+          <a
+            className={linkClassName + ' tip'}
+            title={t('Change status to unresolved')}
+            onClick={() => onUpdate({status: 'unresolved'})}
+          >
+            <span className="icon-ban" />
+          </a>
+        </div>
+      );
+    }
+
+    return (
+      <div style={{display: 'inline-block'}}>
+        <CustomIgnoreDurationModal
+          show={this.state.modal === 'duration'}
+          onSelected={details => this.onCustomIgnore(details)}
+          onCanceled={() => this.setState({modal: null})}
+        />
+        <CustomIgnoreCountModal
+          show={this.state.modal === 'count'}
+          onSelected={details => this.onCustomIgnore(details)}
+          onCanceled={() => this.setState({modal: null})}
+          label={t('Ignore this issue until it occurs again .. ')}
+          countLabel={t('Number of times')}
+          countName="ignoreCount"
+          windowName="ignoreWindow"
+          windowChoices={this.getIgnoreWindows()}
+        />
+        <CustomIgnoreCountModal
+          show={this.state.modal === 'users'}
+          onSelected={details => this.onCustomIgnore(details)}
+          onCanceled={() => this.setState({modal: null})}
+          label={t('Ignore this issue until it affects an additional .. ')}
+          countLabel={t('Numbers of users')}
+          countName="ignoreUserCount"
+          windowName="ignoreUserWindow"
+          windowChoices={this.getIgnoreWindows()}
+        />
+        <div className="btn-group">
+          <ActionLink
+            {...actionLinkProps}
+            className={linkClassName}
+            onAction={() => onUpdate({status: 'ignored'})}
+          >
+            <span className="icon-ban" style={{marginRight: 5}} />
+            {t('Ignore')}
+          </ActionLink>
+
+          <DropdownLink
+            caret={true}
+            className={linkClassName}
+            title=""
+            alwaysRenderMenu
+            disabled={disabled}
+          >
+            <MenuItem header={true}>Ignore Until</MenuItem>
+            <li className="dropdown-submenu">
+              <DropdownLink
+                title="This occurs again after .."
+                caret={false}
+                isNestedDropdown={true}
+                alwaysRenderMenu
+              >
+                {this.getIgnoreDurations().map(duration => {
+                  return (
+                    <MenuItem noAnchor={true} key={duration}>
+                      <ActionLink
+                        {...actionLinkProps}
+                        onAction={() => this.onIgnore({ignoreDuration: duration})}
+                      >
+                        <Duration seconds={duration * 60} />
+                      </ActionLink>
+                    </MenuItem>
+                  );
+                })}
+                <MenuItem divider={true} />
+                <MenuItem noAnchor={true}>
+                  <a onClick={() => this.setState({modal: 'duration'})}>{t('Custom')}</a>
+                </MenuItem>
+              </DropdownLink>
+            </li>
+            <li className="dropdown-submenu">
+              <DropdownLink
+                title="This occurs again .."
+                caret={false}
+                isNestedDropdown={true}
+                alwaysRenderMenu
+              >
+                {this.getIgnoreCounts().map(count => {
+                  return (
+                    <li className="dropdown-submenu" key={count}>
+                      <DropdownLink
+                        title={t('%s times', count.toLocaleString())}
+                        caret={false}
+                        isNestedDropdown={true}
+                        alwaysRenderMenu
+                      >
+                        <MenuItem noAnchor={true}>
+                          <ActionLink
+                            {...actionLinkProps}
+                            onAction={() => this.onIgnore({ignoreCount: count})}
+                          >
+                            {t('from now')}
+                          </ActionLink>
+                        </MenuItem>
+                        {this.getIgnoreWindows().map(([hours, label]) => {
+                          return (
+                            <MenuItem noAnchor={true} key={hours}>
+                              <ActionLink
+                                {...actionLinkProps}
+                                onAction={() =>
+                                  this.onIgnore({
+                                    ignoreCount: count,
+                                    ignoreWindow: hours,
+                                  })}
+                              >
+                                {label}
+                              </ActionLink>
+                            </MenuItem>
+                          );
+                        })}
+                      </DropdownLink>
+                    </li>
+                  );
+                })}
+                <MenuItem divider={true} />
+                <MenuItem noAnchor={true}>
+                  <a onClick={() => this.setState({modal: 'count'})}>{t('Custom')}</a>
+                </MenuItem>
+              </DropdownLink>
+            </li>
+            <li className="dropdown-submenu">
+              <DropdownLink
+                title="This affects an additional .."
+                caret={false}
+                isNestedDropdown={true}
+                alwaysRenderMenu
+              >
+                {this.getIgnoreCounts().map(count => {
+                  return (
+                    <li className="dropdown-submenu" key={count}>
+                      <DropdownLink
+                        title={t('%s users', count.toLocaleString())}
+                        caret={false}
+                        isNestedDropdown={true}
+                        alwaysRenderMenu
+                      >
+                        <MenuItem noAnchor={true}>
+                          <ActionLink
+                            {...actionLinkProps}
+                            onAction={() => this.onIgnore({ignoreUserCount: count})}
+                          >
+                            {t('from now')}
+                          </ActionLink>
+                        </MenuItem>
+                        {this.getIgnoreWindows().map(([hours, label]) => {
+                          return (
+                            <MenuItem noAnchor={true} key={hours}>
+                              <ActionLink
+                                {...actionLinkProps}
+                                onAction={() =>
+                                  this.onIgnore({
+                                    ignoreUserCount: count,
+                                    ignoreUserWindow: hours,
+                                  })}
+                              >
+                                {label}
+                              </ActionLink>
+                            </MenuItem>
+                          );
+                        })}
+                      </DropdownLink>
+                    </li>
+                  );
+                })}
+                <MenuItem divider={true} />
+                <MenuItem noAnchor={true}>
+                  <a onClick={() => this.setState({modal: 'users'})}>{t('Custom')}</a>
+                </MenuItem>
+              </DropdownLink>
+            </li>
+          </DropdownLink>
+        </div>
+      </div>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/actions/resolve.jsx b/src/sentry/static/sentry/app/components/actions/resolve.jsx
new file mode 100644
index 0000000000..99a50afa6d
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/actions/resolve.jsx
@@ -0,0 +1,198 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import classNames from 'classnames';
+import {getShortVersion} from '../../utils';
+import {t} from '../../locale';
+import CustomResolutionModal from '../customResolutionModal';
+import MenuItem from '../menuItem';
+import DropdownLink from '../dropdownLink';
+import ActionLink from './actionLink';
+
+export default class ResolveActions extends React.Component {
+  static propTypes = {
+    hasRelease: PropTypes.bool.isRequired,
+    latestRelease: PropTypes.object,
+    onUpdate: PropTypes.func.isRequired,
+    orgId: PropTypes.string.isRequired,
+    projectId: PropTypes.string.isRequired,
+    shouldConfirm: PropTypes.bool,
+    confirmMessage: PropTypes.node,
+    disabled: PropTypes.bool,
+    isResolved: PropTypes.bool,
+    isAutoResolved: PropTypes.bool,
+    confirmLabel: PropTypes.string,
+  };
+
+  static defaultProps = {
+    isResolved: false,
+    isAutoResolved: false,
+    confirmLabel: 'Resolve',
+  };
+
+  constructor(props) {
+    super(props);
+    this.state = {modal: false};
+  }
+
+  onCustomResolution(statusDetails) {
+    this.setState({
+      modal: false,
+    });
+    this.props.onUpdate({
+      status: 'resolved',
+      statusDetails,
+    });
+  }
+
+  getButtonClass(otherClasses) {
+    return classNames('btn btn-default btn-sm', otherClasses);
+  }
+
+  renderResolved() {
+    let {isAutoResolved, onUpdate} = this.props;
+
+    if (isAutoResolved) {
+      return (
+        <div className="btn-group">
+          <a
+            className={this.getButtonClass('active tip')}
+            title={t(
+              'This event is resolved due to the Auto Resolve configuration for this project'
+            )}
+          >
+            <span className="icon-checkmark" />
+          </a>
+        </div>
+      );
+    } else {
+      return (
+        <div className="btn-group">
+          <a
+            className={this.getButtonClass('active')}
+            title={t('Unresolve')}
+            onClick={() => onUpdate({status: 'unresolved'})}
+          >
+            <span className="icon-checkmark" />
+          </a>
+        </div>
+      );
+    }
+  }
+
+  render() {
+    let {
+      isResolved,
+      hasRelease,
+      latestRelease,
+      onUpdate,
+      orgId,
+      projectId,
+      confirmMessage,
+      shouldConfirm,
+      disabled,
+      confirmLabel,
+    } = this.props;
+
+    let buttonClass = this.getButtonClass();
+
+    if (isResolved) {
+      return this.renderResolved();
+    }
+
+    let actionClassName = 'tip';
+    let actionTitle = !hasRelease
+      ? t('Set up release tracking in order to use this feature.')
+      : '';
+
+    let actionLinkProps = {
+      shouldConfirm,
+      message: confirmMessage,
+      confirmLabel,
+      disabled,
+    };
+
+    return (
+      <div style={{display: 'inline-block'}}>
+        <CustomResolutionModal
+          show={this.state.modal}
+          onSelected={statusDetails => this.onCustomResolution(statusDetails)}
+          onCanceled={() => this.setState({modal: false})}
+          orgId={orgId}
+          projectId={projectId}
+        />
+        <div className="btn-group">
+          <ActionLink
+            {...actionLinkProps}
+            title={'Resolve'}
+            className={buttonClass}
+            onAction={() => onUpdate({status: 'resolved'})}
+          >
+            <span className="icon-checkmark" style={{marginRight: 5}} />
+            {t('Resolve')}
+          </ActionLink>
+
+          <DropdownLink
+            key="resolve-dropdown"
+            caret={true}
+            className={buttonClass}
+            title=""
+            alwaysRenderMenu
+            disabled={disabled}
+          >
+            <MenuItem header={true}>{t('Resolved In')}</MenuItem>
+            <MenuItem noAnchor={true}>
+              <ActionLink
+                {...actionLinkProps}
+                title={actionTitle}
+                className={actionClassName}
+                onAction={() => {
+                  return (
+                    hasRelease &&
+                    onUpdate({
+                      status: 'resolved',
+                      statusDetails: {
+                        inNextRelease: true,
+                      },
+                    })
+                  );
+                }}
+              >
+                {t('The next release')}
+              </ActionLink>
+              <ActionLink
+                {...actionLinkProps}
+                title={actionTitle}
+                onAction={() => {
+                  return (
+                    hasRelease &&
+                    onUpdate({
+                      status: 'resolved',
+                      statusDetails: {
+                        inRelease: latestRelease ? latestRelease.version : 'latest',
+                      },
+                    })
+                  );
+                }}
+                className={actionClassName}
+              >
+                {latestRelease
+                  ? t('The current release (%s)', getShortVersion(latestRelease.version))
+                  : t('The current release')}
+              </ActionLink>
+
+              <ActionLink
+                {...actionLinkProps}
+                title={actionTitle}
+                onAction={() => hasRelease && this.setState({modal: true})}
+                className={actionClassName}
+                shouldConfirm={false}
+              >
+                {t('Another version ...')}
+              </ActionLink>
+            </MenuItem>
+          </DropdownLink>
+        </div>
+      </div>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/confirm.jsx b/src/sentry/static/sentry/app/components/confirm.jsx
index dc7c8166a4..6e0f72acc3 100644
--- a/src/sentry/static/sentry/app/components/confirm.jsx
+++ b/src/sentry/static/sentry/app/components/confirm.jsx
@@ -74,13 +74,17 @@ class Confirm extends React.PureComponent {
   render() {
     let {disabled, message, priority, confirmText, cancelText, children} = this.props;
 
+    let confirmMessage = React.isValidElement(message) ? (
+      message
+    ) : (
+      <p>
+        <strong>{message}</strong>
+      </p>
+    );
+
     const ConfirmModal = (
       <Modal show={this.state.isModalOpen} animation={false} onHide={this.handleToggle}>
-        <div className="modal-body">
-          <div>
-            <strong>{message}</strong>
-          </div>
-        </div>
+        <div className="modal-body">{confirmMessage}</div>
         <div className="modal-footer">
           <Button style={{marginRight: 10}} onClick={this.handleToggle}>
             {cancelText}
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index ec7f971f80..f901124156 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -2,14 +2,9 @@ import {browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {getShortVersion} from '../../utils';
 import {t} from '../../locale';
 import ApiMixin from '../../mixins/apiMixin';
-import CustomIgnoreCountModal from '../../components/customIgnoreCountModal';
-import CustomIgnoreDurationModal from '../../components/customIgnoreDurationModal';
-import CustomResolutionModal from '../../components/customResolutionModal';
 import DropdownLink from '../../components/dropdownLink';
-import Duration from '../../components/duration';
 import GroupActions from '../../actions/groupActions';
 import GroupState from '../../mixins/groupState';
 import HookStore from '../../stores/hookStore';
@@ -20,371 +15,8 @@ import MenuItem from '../../components/menuItem';
 import ShareIssue from '../../components/shareIssue';
 import TooltipMixin from '../../mixins/tooltip';
 
-const ResolveActions = React.createClass({
-  propTypes: {
-    group: PropTypes.object.isRequired,
-    hasRelease: PropTypes.bool.isRequired,
-    latestRelease: PropTypes.object,
-    onUpdate: PropTypes.func.isRequired,
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
-  },
-
-  getInitialState() {
-    return {
-      modal: false,
-    };
-  },
-
-  onCustomResolution(statusDetails) {
-    this.setState({
-      modal: false,
-    });
-    this.props.onUpdate({
-      status: 'resolved',
-      statusDetails,
-    });
-  },
-
-  render() {
-    let {group, hasRelease, latestRelease, onUpdate} = this.props;
-    let resolveClassName = 'group-resolve btn btn-default btn-sm';
-    if (group.status === 'resolved') {
-      resolveClassName += ' active';
-    }
-
-    if (group.status === 'resolved' && group.statusDetails.autoResolved) {
-      return (
-        <div className="btn-group">
-          <a
-            className={resolveClassName + ' tip'}
-            title={t(
-              'This event is resolved due to the Auto Resolve configuration for this project'
-            )}
-          >
-            <span className="icon-checkmark" />
-          </a>
-        </div>
-      );
-    } else if (group.status === 'resolved') {
-      return (
-        <div className="btn-group">
-          <a
-            className={resolveClassName}
-            title={t('Unresolve')}
-            onClick={() => onUpdate({status: 'unresolved'})}
-          >
-            <span className="icon-checkmark" />
-          </a>
-        </div>
-      );
-    }
-
-    let actionClassName = `tip ${!hasRelease ? 'disabled' : ''}`;
-    let actionTitle = !hasRelease
-      ? t('Set up release tracking in order to use this feature.')
-      : '';
-
-    return (
-      <div style={{display: 'inline-block'}}>
-        <CustomResolutionModal
-          show={this.state.modal}
-          onSelected={this.onCustomResolution}
-          onCanceled={() => this.setState({modal: false})}
-          orgId={this.props.orgId}
-          projectId={this.props.projectId}
-        />
-        <div className="btn-group">
-          <a
-            key="resolve-button"
-            className={resolveClassName}
-            title={t('Resolve')}
-            onClick={() => onUpdate({status: 'resolved'})}
-          >
-            <span className="icon-checkmark" style={{marginRight: 5}} />
-            {t('Resolve')}
-          </a>
-          <DropdownLink
-            key="resolve-dropdown"
-            caret={true}
-            className={resolveClassName}
-            title=""
-          >
-            <MenuItem header={true}>{t('Resolved In')}</MenuItem>
-            <MenuItem noAnchor={true}>
-              <a
-                onClick={() => {
-                  return (
-                    hasRelease &&
-                    onUpdate({
-                      status: 'resolved',
-                      statusDetails: {
-                        inNextRelease: true,
-                      },
-                    })
-                  );
-                }}
-                className={actionClassName}
-                title={actionTitle}
-              >
-                {t('The next release')}
-              </a>
-              <a
-                onClick={() => {
-                  return (
-                    hasRelease &&
-                    onUpdate({
-                      status: 'resolved',
-                      statusDetails: {
-                        inRelease: latestRelease ? latestRelease.version : 'latest',
-                      },
-                    })
-                  );
-                }}
-                className={actionClassName}
-                title={actionTitle}
-              >
-                {latestRelease
-                  ? t('The current release (%s)', getShortVersion(latestRelease.version))
-                  : t('The current release')}
-              </a>
-              <a
-                onClick={() => hasRelease && this.setState({modal: true})}
-                className={actionClassName}
-                title={actionTitle}
-              >
-                {t('Another version ...')}
-              </a>
-            </MenuItem>
-          </DropdownLink>
-        </div>
-      </div>
-    );
-  },
-});
-
-const IgnoreActions = React.createClass({
-  propTypes: {
-    group: PropTypes.object.isRequired,
-    onUpdate: PropTypes.func.isRequired,
-  },
-
-  getInitialState() {
-    return {
-      modal: false,
-    };
-  },
-
-  getIgnoreDurations() {
-    return [30, 120, 360, 60 * 24, 60 * 24 * 7];
-  },
-
-  getIgnoreCounts() {
-    return [100, 1000, 10000, 100000];
-  },
-
-  getIgnoreWindows() {
-    return [[60, 'per hour'], [24 * 60, 'per day'], [24 * 7 * 60, 'per week']];
-  },
-
-  onCustomIgnore(statusDetails) {
-    this.setState({
-      modal: false,
-    });
-    this.onIgnore(statusDetails);
-  },
-
-  onIgnore(statusDetails) {
-    return this.props.onUpdate({
-      status: 'ignored',
-      statusDetails: statusDetails || {},
-    });
-  },
-
-  render() {
-    let {group, onUpdate} = this.props;
-    let linkClassName = 'group-ignore btn btn-default btn-sm';
-    if (group.status === 'ignored') {
-      linkClassName += ' active';
-    }
-
-    if (group.status === 'ignored') {
-      return (
-        <div className="btn-group">
-          <a
-            className={linkClassName + ' tip'}
-            title={t('Change status to unresolved')}
-            onClick={() => onUpdate({status: 'unresolved'})}
-          >
-            <span className="icon-ban" />
-          </a>
-        </div>
-      );
-    }
-
-    return (
-      <div style={{display: 'inline-block'}}>
-        <CustomIgnoreDurationModal
-          show={this.state.modal === 'duration'}
-          onSelected={this.onCustomIgnore}
-          onCanceled={() => this.setState({modal: null})}
-        />
-        <CustomIgnoreCountModal
-          show={this.state.modal === 'count'}
-          onSelected={this.onCustomIgnore}
-          onCanceled={() => this.setState({modal: null})}
-          label={t('Ignore this issue until it occurs again .. ')}
-          countLabel={t('Number of times')}
-          countName="ignoreCount"
-          windowName="ignoreWindow"
-          windowChoices={this.getIgnoreWindows()}
-        />
-        <CustomIgnoreCountModal
-          show={this.state.modal === 'users'}
-          onSelected={this.onCustomIgnore}
-          onCanceled={() => this.setState({modal: null})}
-          label={t('Ignore this issue until it affects an additional .. ')}
-          countLabel={t('Numbers of users')}
-          countName="ignoreUserCount"
-          windowName="ignoreUserWindow"
-          windowChoices={this.getIgnoreWindows()}
-        />
-        <div className="btn-group">
-          <a
-            className={linkClassName}
-            title={t('Ignore')}
-            onClick={() => onUpdate({status: 'ignored'})}
-          >
-            <span className="icon-ban" style={{marginRight: 5}} />
-            {t('Ignore')}
-          </a>
-          <DropdownLink caret={true} className={linkClassName} title="">
-            <MenuItem header={true}>Ignore Until</MenuItem>
-            <li className="dropdown-submenu">
-              <DropdownLink
-                title="This occurs again after .."
-                caret={false}
-                isNestedDropdown={true}
-              >
-                {this.getIgnoreDurations().map(duration => {
-                  return (
-                    <MenuItem noAnchor={true} key={duration}>
-                      <a
-                        onClick={this.onIgnore.bind(this, {
-                          ignoreDuration: duration,
-                        })}
-                      >
-                        <Duration seconds={duration * 60} />
-                      </a>
-                    </MenuItem>
-                  );
-                })}
-                <MenuItem divider={true} />
-                <MenuItem noAnchor={true}>
-                  <a onClick={() => this.setState({modal: 'duration'})}>{t('Custom')}</a>
-                </MenuItem>
-              </DropdownLink>
-            </li>
-            <li className="dropdown-submenu">
-              <DropdownLink
-                title="This occurs again .."
-                caret={false}
-                isNestedDropdown={true}
-              >
-                {this.getIgnoreCounts().map(count => {
-                  return (
-                    <li className="dropdown-submenu" key={count}>
-                      <DropdownLink
-                        title={t('%s times', count.toLocaleString())}
-                        caret={false}
-                        isNestedDropdown={true}
-                      >
-                        <MenuItem noAnchor={true}>
-                          <a
-                            onClick={this.onIgnore.bind(this, {
-                              ignoreCount: count,
-                            })}
-                          >
-                            {t('from now')}
-                          </a>
-                        </MenuItem>
-                        {this.getIgnoreWindows().map(([hours, label]) => {
-                          return (
-                            <MenuItem noAnchor={true} key={hours}>
-                              <a
-                                onClick={this.onIgnore.bind(this, {
-                                  ignoreCount: count,
-                                  ignoreWindow: hours,
-                                })}
-                              >
-                                {label}
-                              </a>
-                            </MenuItem>
-                          );
-                        })}
-                      </DropdownLink>
-                    </li>
-                  );
-                })}
-                <MenuItem divider={true} />
-                <MenuItem noAnchor={true}>
-                  <a onClick={() => this.setState({modal: 'count'})}>{t('Custom')}</a>
-                </MenuItem>
-              </DropdownLink>
-            </li>
-            <li className="dropdown-submenu">
-              <DropdownLink
-                title="This affects an additional .."
-                caret={false}
-                isNestedDropdown={true}
-              >
-                {this.getIgnoreCounts().map(count => {
-                  return (
-                    <li className="dropdown-submenu" key={count}>
-                      <DropdownLink
-                        title={t('%s users', count.toLocaleString())}
-                        caret={false}
-                        isNestedDropdown={true}
-                      >
-                        <MenuItem noAnchor={true}>
-                          <a
-                            onClick={this.onIgnore.bind(this, {
-                              ignoreUserCount: count,
-                            })}
-                          >
-                            {t('from now')}
-                          </a>
-                        </MenuItem>
-                        {this.getIgnoreWindows().map(([hours, label]) => {
-                          return (
-                            <MenuItem noAnchor={true} key={hours}>
-                              <a
-                                onClick={this.onIgnore.bind(this, {
-                                  ignoreUserCount: count,
-                                  ignoreUserWindow: hours,
-                                })}
-                              >
-                                {label}
-                              </a>
-                            </MenuItem>
-                          );
-                        })}
-                      </DropdownLink>
-                    </li>
-                  );
-                })}
-                <MenuItem divider={true} />
-                <MenuItem noAnchor={true}>
-                  <a onClick={() => this.setState({modal: 'users'})}>{t('Custom')}</a>
-                </MenuItem>
-              </DropdownLink>
-            </li>
-          </DropdownLink>
-        </div>
-      </div>
-    );
-  },
-});
+import ResolveActions from '../../components/actions/resolve';
+import IgnoreActions from '../../components/actions/ignore';
 
 const DeleteActions = React.createClass({
   propTypes: {
@@ -593,17 +225,21 @@ const GroupDetailsActions = React.createClass({
     // account for both old and new style plugins
     let hasIssueTracking = group.pluginActions.length || group.pluginIssues.length;
 
+    let isResolved = group.status === 'resolved';
+    let isIgnored = group.status === 'ignored';
+
     return (
       <div className="group-actions">
         <ResolveActions
-          group={group}
           hasRelease={hasRelease}
           latestRelease={project.latestRelease}
           onUpdate={this.onUpdate}
           orgId={org.slug}
           projectId={project.slug}
+          isResolved={isResolved}
+          isAutoResolved={isResolved && group.statusDetails.autoResolved}
         />
-        <IgnoreActions group={group} onUpdate={this.onUpdate} />
+        <IgnoreActions isIgnored={isIgnored} onUpdate={this.onUpdate} />
 
         <div className="btn-group">
           <a
diff --git a/src/sentry/static/sentry/app/views/stream/actionLink.jsx b/src/sentry/static/sentry/app/views/stream/actionLink.jsx
deleted file mode 100644
index fa6cf51b40..0000000000
--- a/src/sentry/static/sentry/app/views/stream/actionLink.jsx
+++ /dev/null
@@ -1,142 +0,0 @@
-import Modal from 'react-bootstrap/lib/Modal';
-import PureRenderMixin from 'react-addons-pure-render-mixin';
-import PropTypes from 'prop-types';
-import React from 'react';
-import _ from 'lodash';
-
-import SelectedGroupStore from '../../stores/selectedGroupStore';
-import TooltipMixin from '../../mixins/tooltip';
-import {t} from '../../locale';
-
-// TODO(mitsuhiko): very unclear how to translate this
-const ActionLink = React.createClass({
-  propTypes: {
-    confirmationQuestion: PropTypes.any,
-    buttonTitle: PropTypes.string,
-    confirmLabel: PropTypes.any,
-    disabled: PropTypes.bool,
-    onAction: PropTypes.func.isRequired,
-    onlyIfBulk: PropTypes.bool,
-    selectAllActive: PropTypes.bool.isRequired, // "select all" checkbox
-    tooltip: PropTypes.string,
-    extraDescription: PropTypes.node,
-  },
-
-  mixins: [
-    PureRenderMixin,
-    TooltipMixin({
-      html: false,
-      container: 'body',
-    }),
-  ],
-
-  getDefaultProps() {
-    return {
-      buttonTitle: null, // title="..." (optional)
-      onlyIfBulk: false,
-      disabled: false,
-      extraDescription: null,
-    };
-  },
-
-  getInitialState() {
-    return {
-      isModalOpen: false,
-    };
-  },
-
-  handleClick() {
-    let selectedItemIds = SelectedGroupStore.getSelectedIds();
-    if (!this.state.isModalOpen && !this.shouldConfirm(selectedItemIds.size)) {
-      return void this.handleAction();
-    }
-    return void this.handleToggle();
-  },
-
-  handleToggle() {
-    if (this.props.disabled) {
-      return;
-    }
-    this.setState({
-      isModalOpen: !this.state.isModalOpen,
-    });
-  },
-
-  handleAction(evt) {
-    this.props.onAction(evt);
-    this.setState({
-      isModalOpen: false,
-    });
-  },
-
-  shouldConfirm(numSelectedItems) {
-    // By default, should confirm ...
-    let shouldConfirm = true;
-
-    // Unless `onlyIfBulk` is true, then return false if all items are not selected
-    if (
-      this.props.onlyIfBulk === true &&
-      (!this.props.selectAllActive || numSelectedItems === 1)
-    ) {
-      shouldConfirm = false;
-    }
-
-    return shouldConfirm;
-  },
-
-  render() {
-    let className = this.props.className;
-    if (this.props.disabled) {
-      className += ' disabled';
-    }
-    className += ' tip';
-
-    let numEvents = SelectedGroupStore.getSelectedIds().size;
-
-    function resolveLabel(obj) {
-      if (_.isFunction(obj)) {
-        return obj(numEvents);
-      }
-      return obj;
-    }
-
-    let confirmationQuestion = resolveLabel(this.props.confirmationQuestion);
-
-    return (
-      <a
-        title={this.props.tooltip !== null ? this.props.tooltip : this.props.buttonTitle}
-        className={className}
-        disabled={this.props.disabled}
-        onClick={this.handleClick}
-        data-placement="bottom"
-      >
-        {this.props.children}
-
-        <Modal
-          show={this.state.isModalOpen}
-          title={t('Please confirm')}
-          animation={false}
-          onHide={this.handleToggle}
-        >
-          <div className="modal-body">
-            <p>
-              <strong>{confirmationQuestion}</strong>
-            </p>
-            {this.props.extraDescription}
-            <p>{t('This action cannot be undone.')}</p>
-          </div>
-          <div className="modal-footer">
-            <button type="button" className="btn btn-default" onClick={this.handleToggle}>
-              {t('Cancel')}
-            </button>
-            <button type="button" className="btn btn-primary" onClick={this.handleAction}>
-              {resolveLabel(this.props.confirmLabel)}
-            </button>
-          </div>
-        </Modal>
-      </a>
-    );
-  },
-});
-
-export default ActionLink;
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index c17ff0acb0..99af3064d0 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -2,35 +2,71 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import PureRenderMixin from 'react-addons-pure-render-mixin';
 import Reflux from 'reflux';
+import {capitalize} from 'lodash';
 
 import ApiMixin from '../../mixins/apiMixin';
 import TooltipMixin from '../../mixins/tooltip';
-import ActionLink from './actionLink';
 import DropdownLink from '../../components/dropdownLink';
-import Duration from '../../components/duration';
 import IndicatorStore from '../../stores/indicatorStore';
 import MenuItem from '../../components/menuItem';
 import SelectedGroupStore from '../../stores/selectedGroupStore';
 import {t, tct, tn} from '../../locale';
-import {getShortVersion} from '../../utils';
 
-import CustomIgnoreCountModal from '../../components/customIgnoreCountModal';
-import CustomIgnoreDurationModal from '../../components/customIgnoreDurationModal';
-import CustomResolutionModal from '../../components/customResolutionModal';
 import Checkbox from '../../components/checkbox';
 import Toolbar from '../../components/toolbar';
 import ToolbarHeader from '../../components/toolbarHeader';
+import ResolveActions from '../../components/actions/resolve';
+import IgnoreActions from '../../components/actions/ignore';
+import ActionLink from '../../components/actions/actionLink';
 
 const BULK_LIMIT_STR = '1,000';
 
-const getBulkConfirmMessage = action =>
-  tct(
+const getBulkConfirmMessage = action => {
+  return tct(
     'Are you sure you want to [action] the first [bulkNumber] issues that match the search?',
     {
       action,
       bulkNumber: BULK_LIMIT_STR,
     }
   );
+};
+
+const getConfirm = (numIssues, allInQuerySelected, query) => {
+  return function(action, canBeUndone, append = '') {
+    let question = allInQuerySelected
+      ? getBulkConfirmMessage(`${action}${append}`)
+      : tn(
+          `Are you sure you want to ${action} this %d issue${append}?`,
+          `Are you sure you want to ${action} these %d issues${append}?`,
+          numIssues
+        );
+
+    return (
+      <div>
+        <p style={{marginBottom: '20px'}}>
+          <strong>{question}</strong>
+        </p>
+        <ExtraDescription all={allInQuerySelected} query={query} />
+        {!canBeUndone && <p>{t('This action cannot be undone.')}</p>}
+      </div>
+    );
+  };
+};
+
+const getLabel = (numIssues, allInQuerySelected) => {
+  return function(action, append = '') {
+    let capitalized = capitalize(action);
+    let text = allInQuerySelected
+      ? t(`Bulk ${action} issues`)
+      : tn(
+          `${capitalized} %d selected issue`,
+          `${capitalized} %d selected issues`,
+          numIssues
+        );
+
+    return text + append;
+  };
+};
 
 const ExtraDescription = ({all, query}) => {
   if (!all) return null;
@@ -62,364 +98,6 @@ ExtraDescription.propTypes = {
   query: PropTypes.string,
 };
 
-const IgnoreActions = React.createClass({
-  propTypes: {
-    anySelected: PropTypes.bool.isRequired,
-    allInQuerySelected: PropTypes.bool.isRequired,
-    pageSelected: PropTypes.bool.isRequired,
-    onUpdate: PropTypes.func.isRequired,
-    query: PropTypes.string,
-  },
-
-  getInitialState() {
-    return {
-      modal: false,
-    };
-  },
-
-  getIgnoreDurations() {
-    return [30, 120, 360, 60 * 24, 60 * 24 * 7];
-  },
-
-  getIgnoreCounts() {
-    return [100, 1000, 10000, 100000];
-  },
-
-  getIgnoreWindows() {
-    return [[60, 'per hour'], [24 * 60, 'per day'], [24 * 7 * 60, 'per week']];
-  },
-
-  onCustomIgnore(statusDetails) {
-    this.setState({
-      modal: false,
-    });
-    this.onIgnore(statusDetails);
-  },
-
-  onIgnore(statusDetails) {
-    return this.props.onUpdate({
-      status: 'ignored',
-      statusDetails: statusDetails || {},
-    });
-  },
-
-  render() {
-    let {allInQuerySelected, query, anySelected, pageSelected, onUpdate} = this.props;
-    let extraDescription = <ExtraDescription all={allInQuerySelected} query={query} />;
-    let linkClassName = 'group-ignore btn btn-default btn-sm';
-    let actionLinkProps = {
-      onlyIfBulk: true,
-      disabled: !anySelected,
-      selectAllActive: pageSelected,
-      extraDescription,
-      buttonTitle: t('Ignore'),
-      confirmationQuestion: allInQuerySelected
-        ? getBulkConfirmMessage('ignore')
-        : count =>
-            tn(
-              'Are you sure you want to ignore this %d issue?',
-              'Are you sure you want to ignore these %d issues?',
-              count
-            ),
-      confirmLabel: allInQuerySelected
-        ? t('Bulk ignore issues')
-        : count => tn('Ignore %d selected issue', 'Ignore %d selected issues', count),
-    };
-    return (
-      <div style={{display: 'inline-block'}}>
-        <CustomIgnoreDurationModal
-          show={this.state.modal === 'duration'}
-          onSelected={this.onCustomIgnore}
-          onCanceled={() => this.setState({modal: null})}
-          label={t('Ignore the selected issue(s) until they occur after ..')}
-        />
-        <CustomIgnoreCountModal
-          show={this.state.modal === 'count'}
-          onSelected={this.onCustomIgnore}
-          onCanceled={() => this.setState({modal: null})}
-          label={t('Ignore the selected issue(s) until they occur again .. ')}
-          countLabel={t('Number of times')}
-          countName="ignoreCount"
-          windowName="ignoreWindow"
-          windowChoices={this.getIgnoreWindows()}
-        />
-        <CustomIgnoreCountModal
-          show={this.state.modal === 'users'}
-          onSelected={this.onCustomIgnore}
-          onCanceled={() => this.setState({modal: null})}
-          label={t('Ignore the selected issue(s) until they affect an additional .. ')}
-          countLabel={t('Numbers of users')}
-          countName="ignoreUserCount"
-          windowName="ignoreUserWindow"
-          windowChoices={this.getIgnoreWindows()}
-        />
-        <div className="btn-group">
-          <ActionLink
-            onAction={() => onUpdate({status: 'ignored'})}
-            className={linkClassName}
-            {...actionLinkProps}
-          >
-            <span className="icon-ban" style={{marginRight: 5}} />
-            {t('Ignore')}
-          </ActionLink>
-          <DropdownLink
-            caret={true}
-            className={linkClassName}
-            title=""
-            disabled={!anySelected}
-          >
-            <MenuItem header={true}>Ignore Until</MenuItem>
-            <li className="dropdown-submenu">
-              <DropdownLink
-                title="This occurs again after .."
-                caret={false}
-                isNestedDropdown={true}
-              >
-                {this.getIgnoreDurations().map(duration => {
-                  return (
-                    <MenuItem noAnchor={true} key={duration}>
-                      <ActionLink
-                        onAction={this.onIgnore.bind(this, {
-                          ignoreDuration: duration,
-                        })}
-                        {...actionLinkProps}
-                      >
-                        <Duration seconds={duration * 60} />
-                      </ActionLink>
-                    </MenuItem>
-                  );
-                })}
-                <MenuItem divider={true} />
-                <MenuItem noAnchor={true}>
-                  <a onClick={() => this.setState({modal: 'duration'})}>{t('Custom')}</a>
-                </MenuItem>
-              </DropdownLink>
-            </li>
-            <li className="dropdown-submenu">
-              <DropdownLink
-                title="This occurs again .."
-                caret={false}
-                isNestedDropdown={true}
-              >
-                {this.getIgnoreCounts().map(count => {
-                  return (
-                    <li className="dropdown-submenu" key={count}>
-                      <DropdownLink
-                        title={t('%s times', count.toLocaleString())}
-                        caret={false}
-                        isNestedDropdown={true}
-                      >
-                        <MenuItem noAnchor={true}>
-                          <ActionLink
-                            onAction={this.onIgnore.bind(this, {
-                              ignoreCount: count,
-                            })}
-                            {...actionLinkProps}
-                          >
-                            {t('from now')}
-                          </ActionLink>
-                        </MenuItem>
-                        {this.getIgnoreWindows().map(([hours, label]) => {
-                          return (
-                            <MenuItem noAnchor={true} key={hours}>
-                              <ActionLink
-                                onAction={this.onIgnore.bind(this, {
-                                  ignoreCount: count,
-                                  ignoreWindow: hours,
-                                })}
-                                {...actionLinkProps}
-                              >
-                                {label}
-                              </ActionLink>
-                            </MenuItem>
-                          );
-                        })}
-                      </DropdownLink>
-                    </li>
-                  );
-                })}
-                <MenuItem divider={true} />
-                <MenuItem noAnchor={true}>
-                  <a onClick={() => this.setState({modal: 'count'})}>{t('Custom')}</a>
-                </MenuItem>
-              </DropdownLink>
-            </li>
-            <li className="dropdown-submenu">
-              <DropdownLink
-                title="This affects an additional .."
-                caret={false}
-                isNestedDropdown={true}
-              >
-                {this.getIgnoreCounts().map(count => {
-                  return (
-                    <li className="dropdown-submenu" key={count}>
-                      <DropdownLink
-                        title={t('%s users', count.toLocaleString())}
-                        caret={false}
-                        isNestedDropdown={true}
-                      >
-                        <MenuItem noAnchor={true}>
-                          <ActionLink
-                            onAction={this.onIgnore.bind(this, {
-                              ignoreUserCount: count,
-                            })}
-                            {...actionLinkProps}
-                          >
-                            {t('from now')}
-                          </ActionLink>
-                        </MenuItem>
-                        {this.getIgnoreWindows().map(([hours, label]) => {
-                          return (
-                            <MenuItem noAnchor={true} key={hours}>
-                              <ActionLink
-                                onAction={this.onIgnore.bind(this, {
-                                  ignoreUserCount: count,
-                                  ignoreUserWindow: hours,
-                                })}
-                                {...actionLinkProps}
-                              >
-                                {label}
-                              </ActionLink>
-                            </MenuItem>
-                          );
-                        })}
-                      </DropdownLink>
-                    </li>
-                  );
-                })}
-                <MenuItem divider={true} />
-                <MenuItem noAnchor={true}>
-                  <a onClick={() => this.setState({modal: 'users'})}>{t('Custom')}</a>
-                </MenuItem>
-              </DropdownLink>
-            </li>
-          </DropdownLink>
-        </div>
-      </div>
-    );
-  },
-});
-
-const ResolveActions = React.createClass({
-  propTypes: {
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
-    hasRelease: PropTypes.bool.isRequired,
-    latestRelease: PropTypes.object,
-    anySelected: PropTypes.bool.isRequired,
-    allInQuerySelected: PropTypes.bool.isRequired,
-    pageSelected: PropTypes.bool.isRequired,
-    onUpdate: PropTypes.func.isRequired,
-    query: PropTypes.string,
-  },
-
-  getInitialState() {
-    return {
-      modal: false,
-    };
-  },
-
-  onCustomResolution(statusDetails) {
-    this.setState({
-      modal: false,
-    });
-    this.props.onUpdate({
-      status: 'resolved',
-      statusDetails,
-    });
-  },
-
-  render() {
-    let {
-      hasRelease,
-      latestRelease,
-      projectId,
-      orgId,
-      allInQuerySelected,
-      query,
-    } = this.props;
-    let extraDescription = <ExtraDescription all={allInQuerySelected} query={query} />;
-    let linkClassName = 'group-resolve btn btn-default btn-sm';
-    let actionLinkProps = {
-      onlyIfBulk: true,
-      disabled: !this.props.anySelected,
-      selectAllActive: this.props.pageSelected,
-      extraDescription,
-      buttonTitle: t('Resolve'),
-      confirmationQuestion: allInQuerySelected
-        ? getBulkConfirmMessage('resolve')
-        : count =>
-            tn(
-              'Are you sure you want to resolve this %d issue?',
-              'Are you sure you want to resolve these %d issues?',
-              count
-            ),
-      confirmLabel: this.props.allInQuerySelected
-        ? t('Bulk resolve issues')
-        : count => tn('Resolve %d selected issue', 'Resolve %d selected issues', count),
-    };
-    return (
-      <div style={{display: 'inline-block'}}>
-        <CustomResolutionModal
-          show={this.state.modal}
-          onSelected={this.onCustomResolution}
-          onCanceled={() => this.setState({modal: false})}
-          orgId={orgId}
-          projectId={projectId}
-        />
-        <div className="btn-group">
-          <ActionLink
-            onAction={() => this.props.onUpdate({status: 'resolved'})}
-            className={linkClassName}
-            {...actionLinkProps}
-          >
-            <span className="icon-checkmark" style={{marginRight: 5}} />
-            {t('Resolve')}
-          </ActionLink>
-          <DropdownLink
-            key="resolve-dropdown"
-            caret={true}
-            className={linkClassName}
-            title=""
-            disabled={!this.props.anySelected}
-          >
-            <MenuItem header={true}>{t('Resolved In')}</MenuItem>
-            <MenuItem noAnchor={true}>
-              <ActionLink
-                onAction={() =>
-                  this.props.onUpdate({
-                    status: 'resolved',
-                    statusDetails: {inNextRelease: true},
-                  })}
-                {...actionLinkProps}
-              >
-                {t('The next release')}
-              </ActionLink>
-              <ActionLink
-                onAction={() =>
-                  this.props.onUpdate({
-                    status: 'resolved',
-                    statusDetails: {
-                      inRelease: latestRelease ? latestRelease.version : 'latest',
-                    },
-                  })}
-                {...actionLinkProps}
-              >
-                {latestRelease
-                  ? t('The current release (%s)', getShortVersion(latestRelease.version))
-                  : t('The current release')}
-              </ActionLink>
-              <a onClick={() => hasRelease && this.setState({modal: true})}>
-                {t('Another version ...')}
-              </a>
-            </MenuItem>
-          </DropdownLink>
-        </div>
-      </div>
-    );
-  },
-});
-
 const StreamActions = React.createClass({
   propTypes: {
     allResultsVisible: PropTypes.bool,
@@ -504,7 +182,7 @@ const StreamActions = React.createClass({
     this.setState({allInQuerySelected: false});
   },
 
-  onUpdate(data, event) {
+  onUpdate(data) {
     this.actionSelectedGroups(itemIds => {
       let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
 
@@ -582,12 +260,31 @@ const StreamActions = React.createClass({
     this.props.onRealtimeChange(!this.props.realtimeActive);
   },
 
+  shouldConfirm(action) {
+    let selectedItems = SelectedGroupStore.getSelectedIds();
+    switch (action) {
+      case 'resolve':
+      case 'unresolve':
+      case 'ignore':
+      case 'unbookmark':
+        return this.state.pageSelected && selectedItems.size > 1;
+      case 'bookmark':
+        return selectedItems.size > 1;
+      case 'merge':
+      case 'delete':
+      default:
+        return true; // By default, should confirm ...
+    }
+  },
+
   render() {
     // TODO(mitsuhiko): very unclear how to translate this
-    let numIssues = SelectedGroupStore.getSelectedIds().size;
-    let extraDescription = (
-      <ExtraDescription all={this.state.allInQuerySelected} query={this.props.query} />
-    );
+    let issues = SelectedGroupStore.getSelectedIds();
+    let numIssues = issues.size;
+    let {allInQuerySelected, anySelected} = this.state;
+    let disabled = !anySelected;
+    let confirm = getConfirm(numIssues, allInQuerySelected, this.props.query);
+    let label = getLabel(numIssues, allInQuerySelected);
 
     return (
       <div>
@@ -603,51 +300,30 @@ const StreamActions = React.createClass({
             <ResolveActions
               hasRelease={this.props.hasReleases}
               latestRelease={this.props.latestRelease}
-              anySelected={this.state.anySelected}
-              onUpdate={this.onUpdate}
-              allInQuerySelected={this.state.allInQuerySelected}
-              pageSelected={this.state.pageSelected}
-              query={this.props.query}
               orgId={this.props.orgId}
               projectId={this.props.projectId}
+              onUpdate={this.onUpdate}
+              shouldConfirm={this.shouldConfirm('resolve')}
+              confirmMessage={confirm('resolve', true)}
+              confirmLabel={label('resolve')}
+              disabled={disabled}
             />
             <IgnoreActions
-              anySelected={this.state.anySelected}
               onUpdate={this.onUpdate}
-              allInQuerySelected={this.state.allInQuerySelected}
-              pageSelected={this.state.pageSelected}
-              query={this.props.query}
+              shouldConfirm={this.shouldConfirm('ignore')}
+              confirmMessage={confirm('ignore', true)}
+              confirmLabel={label('ignore')}
+              disabled={disabled}
             />
             <div className="btn-group">
               <ActionLink
-                className="btn btn-default btn-sm action-bookmark"
-                disabled={!this.state.anySelected}
-                onAction={this.onUpdate.bind(this, {isBookmarked: true})}
-                buttonTitle={t('Bookmark')}
-                extraDescription={extraDescription}
-                confirmationQuestion={
-                  this.state.allInQuerySelected
-                    ? getBulkConfirmMessage('bookmark')
-                    : count =>
-                        tn(
-                          'Are you sure you want to bookmark this %d issue?',
-                          'Are you sure you want to bookmark these %d issues?',
-                          count
-                        )
-                }
-                confirmLabel={
-                  this.state.allInQuerySelected
-                    ? t('Bulk bookmark issues')
-                    : count =>
-                        tn(
-                          'Bookmark %d selected issue',
-                          'Bookmark %d selected issues',
-                          count
-                        )
-                }
-                tooltip={t('Add to Bookmarks')}
-                onlyIfBulk={true}
-                selectAllActive={this.state.pageSelected}
+                className={'btn btn-default btn-sm action-bookmark'}
+                onAction={() => this.onUpdate({isBookmarked: true})}
+                shouldConfirm={this.shouldConfirm('bookmark')}
+                message={confirm('bookmark', false)}
+                confirmLabel={label('bookmark')}
+                title={t('Add to Bookmarks')}
+                disabled={disabled}
               >
                 <i aria-hidden="true" className="icon-star-solid" />
               </ActionLink>
@@ -663,30 +339,11 @@ const StreamActions = React.createClass({
                 <MenuItem noAnchor={true}>
                   <ActionLink
                     className="action-merge"
-                    disabled={!this.state.anySelected}
+                    disabled={disabled}
                     onAction={this.onMerge}
-                    extraDescription={extraDescription}
-                    confirmationQuestion={
-                      this.state.allInQuerySelected
-                        ? getBulkConfirmMessage('merge')
-                        : count =>
-                            tn(
-                              'Are you sure you want to merge %d issue?',
-                              'Are you sure you want to merge %d issues?',
-                              count
-                            )
-                    }
-                    confirmLabel={
-                      this.state.allInQuerySelected
-                        ? t('Bulk merge issues')
-                        : count =>
-                            tn(
-                              'Merge %d selected issue',
-                              'Merge %d selected issues',
-                              count
-                            )
-                    }
-                    selectAllActive={this.state.pageSelected}
+                    shouldConfirm={this.shouldConfirm('merge')}
+                    message={confirm('merge', false)}
+                    confirmLabel={label('merge')}
                   >
                     {t('Merge Issues')}
                   </ActionLink>
@@ -694,33 +351,11 @@ const StreamActions = React.createClass({
                 <MenuItem noAnchor={true}>
                   <ActionLink
                     className="action-remove-bookmark"
-                    disabled={!this.state.anySelected}
-                    onAction={this.onUpdate.bind(this, {isBookmarked: false})}
-                    extraDescription={extraDescription}
-                    confirmationQuestion={
-                      this.state.allInQuerySelected
-                        ? getBulkConfirmMessage('remove', {
-                            append: ' from your bookmarks',
-                          })
-                        : count =>
-                            tn(
-                              'Are you sure you want to remove this %d issue from your bookmarks?',
-                              'Are you sure you want to remove these %d issues from your bookmarks?',
-                              count
-                            )
-                    }
-                    confirmLabel={
-                      this.state.allInQuerySelected
-                        ? t('Bulk remove issues from bookmarks')
-                        : count =>
-                            tn(
-                              'Remove %d selected issue from bookmarks',
-                              'Remove %d selected issues from bookmarks',
-                              count
-                            )
-                    }
-                    onlyIfBulk={true}
-                    selectAllActive={this.state.pageSelected}
+                    disabled={disabled}
+                    onAction={() => this.onUpdate({isBookmarked: false})}
+                    shouldConfirm={this.shouldConfirm('unbookmark')}
+                    message={confirm('remove', false, ' from your bookmarks')}
+                    confirmLabel={label('remove', ' from your bookmarks')}
                   >
                     {t('Remove from Bookmarks')}
                   </ActionLink>
@@ -729,32 +364,11 @@ const StreamActions = React.createClass({
                 <MenuItem noAnchor={true}>
                   <ActionLink
                     className="action-unresolve"
-                    disabled={!this.state.anySelected}
-                    onAction={this.onUpdate.bind(this, {status: 'unresolved'})}
-                    extraDescription={extraDescription}
-                    confirmationQuestion={
-                      this.state.allInQuerySelected
-                        ? getBulkConfirmMessage('unresolve')
-                        : count =>
-                            tn(
-                              'Are you sure you want to unresolve this %d issue?',
-                              'Are you sure you want to unresolve these %d issues?',
-                              count
-                            )
-                    }
-                    confirmLabel={
-                      this.state.allInQuerySelected
-                        ? t('Bulk unresolve issues')
-                        : count =>
-                            tn(
-                              'Unresolve %d selected issue',
-                              'Unresolve %d selected issues',
-                              count
-                            )
-                    }
-                    onlyIfBulk={true}
-                    selectAllActive={this.state.pageSelected}
-                    groupIds={this.props.groupIds}
+                    disabled={disabled}
+                    onAction={() => this.onUpdate({status: 'unresolved'})}
+                    shouldConfirm={this.shouldConfirm('unresolve')}
+                    message={confirm('unresolve', true)}
+                    confirmLabel={label('unresolve')}
                   >
                     {t('Set status to: Unresolved')}
                   </ActionLink>
@@ -763,17 +377,11 @@ const StreamActions = React.createClass({
                 <MenuItem noAnchor={true}>
                   <ActionLink
                     className="action-delete"
-                    disabled={!this.state.anySelected || this.state.allInQuerySelected}
+                    disabled={disabled || this.state.allInQuerySelected}
                     onAction={this.onDelete}
-                    extraDescription={extraDescription}
-                    confirmationQuestion={count =>
-                      tn(
-                        'Are you sure you want to delete %d issue?',
-                        'Are you sure you want to delete %d issues?',
-                        count
-                      )}
-                    confirmLabel={count =>
-                      tn('Delete %d selected issue', 'Delete %d selected issues', count)}
+                    shouldConfirm={this.shouldConfirm('delete')}
+                    message={confirm('delete', false)}
+                    confirmLabel={label('delete')}
                     selectAllActive={this.state.pageSelected}
                   >
                     {t('Delete Issues')}
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index 6131a48c7c..ddaa226189 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -111,7 +111,7 @@
       margin-left: 5px;
     }
 
-    .group-resolve .icon-checkmark {
+    .icon-checkmark {
       font-size: 13px;
     }
 
diff --git a/tests/js/spec/components/__snapshots__/confirm.spec.jsx.snap b/tests/js/spec/components/__snapshots__/confirm.spec.jsx.snap
index d0ae04aa00..1251813c4e 100644
--- a/tests/js/spec/components/__snapshots__/confirm.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/confirm.spec.jsx.snap
@@ -31,11 +31,11 @@ exports[`Confirm renders 1`] = `
     <div
       className="modal-body"
     >
-      <div>
+      <p>
         <strong>
           Are you sure?
         </strong>
-      </div>
+      </p>
     </div>
     <div
       className="modal-footer"
diff --git a/tests/js/spec/components/actions/__snapshots__/ignore.spec.jsx.snap b/tests/js/spec/components/actions/__snapshots__/ignore.spec.jsx.snap
new file mode 100644
index 0000000000..9aefaae2bc
--- /dev/null
+++ b/tests/js/spec/components/actions/__snapshots__/ignore.spec.jsx.snap
@@ -0,0 +1,7006 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`IgnoreActions with confirmation step renders 1`] = `
+<IgnoreActions
+  confirmLabel="Ignore"
+  confirmMessage="Yoooooo"
+  isIgnored={false}
+  onUpdate={[Function]}
+  shouldConfirm={true}
+>
+  <div
+    style={
+      Object {
+        "display": "inline-block",
+      }
+    }
+  >
+    <customIgnoreDurationModal
+      label="Ignore this issue until it occurs after .."
+      onCanceled={[Function]}
+      onSelected={[Function]}
+      show={false}
+    >
+      <Modal
+        animation={false}
+        autoFocus={true}
+        backdrop={true}
+        bsClass="modal"
+        dialogComponentClass={[Function]}
+        enforceFocus={true}
+        keyboard={true}
+        manager={
+          ModalManager {
+            "containers": Array [],
+            "data": Array [],
+            "handleContainerOverflow": true,
+            "hideSiblingNodes": true,
+            "modals": Array [],
+          }
+        }
+        onHide={[Function]}
+        renderBackdrop={[Function]}
+        restoreFocus={true}
+        show={false}
+      >
+        <Modal
+          autoFocus={true}
+          backdrop={true}
+          backdropClassName="modal-backdrop"
+          backdropTransitionTimeout={150}
+          containerClassName="modal-open"
+          dialogTransitionTimeout={300}
+          enforceFocus={true}
+          keyboard={true}
+          manager={
+            ModalManager {
+              "containers": Array [],
+              "data": Array [],
+              "handleContainerOverflow": true,
+              "hideSiblingNodes": true,
+              "modals": Array [],
+            }
+          }
+          onEntering={[Function]}
+          onExited={[Function]}
+          onHide={[Function]}
+          renderBackdrop={[Function]}
+          restoreFocus={true}
+          show={false}
+        />
+      </Modal>
+    </customIgnoreDurationModal>
+    <customIgnoreCountModal
+      countLabel="Number of times"
+      countName="ignoreCount"
+      label="Ignore this issue until it occurs again .. "
+      onCanceled={[Function]}
+      onSelected={[Function]}
+      show={false}
+      windowChoices={
+        Array [
+          Array [
+            1,
+            "per hour",
+          ],
+          Array [
+            24,
+            "per day",
+          ],
+          Array [
+            168,
+            "per week",
+          ],
+        ]
+      }
+      windowName="ignoreWindow"
+    >
+      <Modal
+        animation={false}
+        autoFocus={true}
+        backdrop={true}
+        bsClass="modal"
+        dialogComponentClass={[Function]}
+        enforceFocus={true}
+        keyboard={true}
+        manager={
+          ModalManager {
+            "containers": Array [],
+            "data": Array [],
+            "handleContainerOverflow": true,
+            "hideSiblingNodes": true,
+            "modals": Array [],
+          }
+        }
+        onHide={[Function]}
+        renderBackdrop={[Function]}
+        restoreFocus={true}
+        show={false}
+      >
+        <Modal
+          autoFocus={true}
+          backdrop={true}
+          backdropClassName="modal-backdrop"
+          backdropTransitionTimeout={150}
+          containerClassName="modal-open"
+          dialogTransitionTimeout={300}
+          enforceFocus={true}
+          keyboard={true}
+          manager={
+            ModalManager {
+              "containers": Array [],
+              "data": Array [],
+              "handleContainerOverflow": true,
+              "hideSiblingNodes": true,
+              "modals": Array [],
+            }
+          }
+          onEntering={[Function]}
+          onExited={[Function]}
+          onHide={[Function]}
+          renderBackdrop={[Function]}
+          restoreFocus={true}
+          show={false}
+        />
+      </Modal>
+    </customIgnoreCountModal>
+    <customIgnoreCountModal
+      countLabel="Numbers of users"
+      countName="ignoreUserCount"
+      label="Ignore this issue until it affects an additional .. "
+      onCanceled={[Function]}
+      onSelected={[Function]}
+      show={false}
+      windowChoices={
+        Array [
+          Array [
+            1,
+            "per hour",
+          ],
+          Array [
+            24,
+            "per day",
+          ],
+          Array [
+            168,
+            "per week",
+          ],
+        ]
+      }
+      windowName="ignoreUserWindow"
+    >
+      <Modal
+        animation={false}
+        autoFocus={true}
+        backdrop={true}
+        bsClass="modal"
+        dialogComponentClass={[Function]}
+        enforceFocus={true}
+        keyboard={true}
+        manager={
+          ModalManager {
+            "containers": Array [],
+            "data": Array [],
+            "handleContainerOverflow": true,
+            "hideSiblingNodes": true,
+            "modals": Array [],
+          }
+        }
+        onHide={[Function]}
+        renderBackdrop={[Function]}
+        restoreFocus={true}
+        show={false}
+      >
+        <Modal
+          autoFocus={true}
+          backdrop={true}
+          backdropClassName="modal-backdrop"
+          backdropTransitionTimeout={150}
+          containerClassName="modal-open"
+          dialogTransitionTimeout={300}
+          enforceFocus={true}
+          keyboard={true}
+          manager={
+            ModalManager {
+              "containers": Array [],
+              "data": Array [],
+              "handleContainerOverflow": true,
+              "hideSiblingNodes": true,
+              "modals": Array [],
+            }
+          }
+          onEntering={[Function]}
+          onExited={[Function]}
+          onHide={[Function]}
+          renderBackdrop={[Function]}
+          restoreFocus={true}
+          show={false}
+        />
+      </Modal>
+    </customIgnoreCountModal>
+    <div
+      className="btn-group"
+    >
+      <ActionLink
+        className="btn btn-default btn-sm"
+        confirmLabel="Ignore"
+        disabled={false}
+        message="Yoooooo"
+        onAction={[Function]}
+        shouldConfirm={true}
+        title="Ignore"
+      >
+        <Confirm
+          cancelText="Cancel"
+          confirmText="Ignore"
+          message="Yoooooo"
+          onConfirm={[Function]}
+          priority="primary"
+        >
+          <a
+            className="btn btn-default btn-sm"
+            onClick={[Function]}
+            title="Ignore"
+          >
+             
+            <span
+              className="icon-ban"
+              style={
+                Object {
+                  "marginRight": 5,
+                }
+              }
+            />
+            Ignore
+            <Modal
+              animation={false}
+              autoFocus={true}
+              backdrop={true}
+              bsClass="modal"
+              dialogComponentClass={[Function]}
+              enforceFocus={true}
+              key="confirm"
+              keyboard={true}
+              manager={
+                ModalManager {
+                  "containers": Array [],
+                  "data": Array [],
+                  "handleContainerOverflow": true,
+                  "hideSiblingNodes": true,
+                  "modals": Array [],
+                }
+              }
+              onHide={[Function]}
+              renderBackdrop={[Function]}
+              restoreFocus={true}
+              show={false}
+            >
+              <Modal
+                autoFocus={true}
+                backdrop={true}
+                backdropClassName="modal-backdrop"
+                backdropTransitionTimeout={150}
+                containerClassName="modal-open"
+                dialogTransitionTimeout={300}
+                enforceFocus={true}
+                keyboard={true}
+                manager={
+                  ModalManager {
+                    "containers": Array [],
+                    "data": Array [],
+                    "handleContainerOverflow": true,
+                    "hideSiblingNodes": true,
+                    "modals": Array [],
+                  }
+                }
+                onEntering={[Function]}
+                onExited={[Function]}
+                onHide={[Function]}
+                renderBackdrop={[Function]}
+                restoreFocus={true}
+                show={false}
+              />
+            </Modal>
+          </a>
+        </Confirm>
+      </ActionLink>
+      <DropdownLink
+        alwaysRenderMenu={true}
+        anchorRight={false}
+        caret={true}
+        className="btn btn-default btn-sm"
+        disabled={false}
+        title=""
+      >
+        <DropdownMenu
+          keepMenuOpen={false}
+        >
+          <span
+            className="dropdown"
+          >
+            <a
+              className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
+              onClick={[Function]}
+              onMouseEnter={[Function]}
+              onMouseLeave={[Function]}
+            >
+              <div
+                className="dropdown-actor-title"
+              >
+                <span />
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
+            </a>
+            <ul
+              className="dropdown-menu"
+              onClick={[Function]}
+              onMouseLeave={[Function]}
+            >
+              <MenuItem
+                header={true}
+              >
+                <li
+                  className="dropdown-header"
+                  href={null}
+                  role="presentation"
+                  title={null}
+                >
+                  Ignore Until
+                </li>
+              </MenuItem>
+              <li
+                className="dropdown-submenu"
+              >
+                <DropdownLink
+                  alwaysRenderMenu={true}
+                  anchorRight={false}
+                  caret={false}
+                  disabled={false}
+                  isNestedDropdown={true}
+                  title="This occurs again after .."
+                >
+                  <DropdownMenu
+                    isNestedDropdown={true}
+                    keepMenuOpen={false}
+                  >
+                    <span
+                      className="dropdown"
+                    >
+                      <a
+                        className="dropdown-actor dropdown-toggle"
+                        onClick={[Function]}
+                        onMouseEnter={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <div
+                          className="dropdown-actor-title"
+                        >
+                          <span>
+                            This occurs again after ..
+                          </span>
+                        </div>
+                      </a>
+                      <ul
+                        className="dropdown-menu"
+                        onClick={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <MenuItem
+                          key="30"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              message="Yoooooo"
+                              onAction={[Function]}
+                              shouldConfirm={true}
+                              title="Ignore"
+                            >
+                              <Confirm
+                                cancelText="Cancel"
+                                confirmText="Ignore"
+                                message="Yoooooo"
+                                onConfirm={[Function]}
+                                priority="primary"
+                              >
+                                <a
+                                  onClick={[Function]}
+                                  title="Ignore"
+                                >
+                                   
+                                  <Duration
+                                    seconds={1800}
+                                  >
+                                    <span>
+                                      30 minutes
+                                    </span>
+                                  </Duration>
+                                  <Modal
+                                    animation={false}
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    bsClass="modal"
+                                    dialogComponentClass={[Function]}
+                                    enforceFocus={true}
+                                    key="confirm"
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "modals": Array [],
+                                      }
+                                    }
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  >
+                                    <Modal
+                                      autoFocus={true}
+                                      backdrop={true}
+                                      backdropClassName="modal-backdrop"
+                                      backdropTransitionTimeout={150}
+                                      containerClassName="modal-open"
+                                      dialogTransitionTimeout={300}
+                                      enforceFocus={true}
+                                      keyboard={true}
+                                      manager={
+                                        ModalManager {
+                                          "containers": Array [],
+                                          "data": Array [],
+                                          "handleContainerOverflow": true,
+                                          "hideSiblingNodes": true,
+                                          "modals": Array [],
+                                        }
+                                      }
+                                      onEntering={[Function]}
+                                      onExited={[Function]}
+                                      onHide={[Function]}
+                                      renderBackdrop={[Function]}
+                                      restoreFocus={true}
+                                      show={false}
+                                    />
+                                  </Modal>
+                                </a>
+                              </Confirm>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          key="120"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              message="Yoooooo"
+                              onAction={[Function]}
+                              shouldConfirm={true}
+                              title="Ignore"
+                            >
+                              <Confirm
+                                cancelText="Cancel"
+                                confirmText="Ignore"
+                                message="Yoooooo"
+                                onConfirm={[Function]}
+                                priority="primary"
+                              >
+                                <a
+                                  onClick={[Function]}
+                                  title="Ignore"
+                                >
+                                   
+                                  <Duration
+                                    seconds={7200}
+                                  >
+                                    <span>
+                                      2 hours
+                                    </span>
+                                  </Duration>
+                                  <Modal
+                                    animation={false}
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    bsClass="modal"
+                                    dialogComponentClass={[Function]}
+                                    enforceFocus={true}
+                                    key="confirm"
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "modals": Array [],
+                                      }
+                                    }
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  >
+                                    <Modal
+                                      autoFocus={true}
+                                      backdrop={true}
+                                      backdropClassName="modal-backdrop"
+                                      backdropTransitionTimeout={150}
+                                      containerClassName="modal-open"
+                                      dialogTransitionTimeout={300}
+                                      enforceFocus={true}
+                                      keyboard={true}
+                                      manager={
+                                        ModalManager {
+                                          "containers": Array [],
+                                          "data": Array [],
+                                          "handleContainerOverflow": true,
+                                          "hideSiblingNodes": true,
+                                          "modals": Array [],
+                                        }
+                                      }
+                                      onEntering={[Function]}
+                                      onExited={[Function]}
+                                      onHide={[Function]}
+                                      renderBackdrop={[Function]}
+                                      restoreFocus={true}
+                                      show={false}
+                                    />
+                                  </Modal>
+                                </a>
+                              </Confirm>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          key="360"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              message="Yoooooo"
+                              onAction={[Function]}
+                              shouldConfirm={true}
+                              title="Ignore"
+                            >
+                              <Confirm
+                                cancelText="Cancel"
+                                confirmText="Ignore"
+                                message="Yoooooo"
+                                onConfirm={[Function]}
+                                priority="primary"
+                              >
+                                <a
+                                  onClick={[Function]}
+                                  title="Ignore"
+                                >
+                                   
+                                  <Duration
+                                    seconds={21600}
+                                  >
+                                    <span>
+                                      6 hours
+                                    </span>
+                                  </Duration>
+                                  <Modal
+                                    animation={false}
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    bsClass="modal"
+                                    dialogComponentClass={[Function]}
+                                    enforceFocus={true}
+                                    key="confirm"
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "modals": Array [],
+                                      }
+                                    }
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  >
+                                    <Modal
+                                      autoFocus={true}
+                                      backdrop={true}
+                                      backdropClassName="modal-backdrop"
+                                      backdropTransitionTimeout={150}
+                                      containerClassName="modal-open"
+                                      dialogTransitionTimeout={300}
+                                      enforceFocus={true}
+                                      keyboard={true}
+                                      manager={
+                                        ModalManager {
+                                          "containers": Array [],
+                                          "data": Array [],
+                                          "handleContainerOverflow": true,
+                                          "hideSiblingNodes": true,
+                                          "modals": Array [],
+                                        }
+                                      }
+                                      onEntering={[Function]}
+                                      onExited={[Function]}
+                                      onHide={[Function]}
+                                      renderBackdrop={[Function]}
+                                      restoreFocus={true}
+                                      show={false}
+                                    />
+                                  </Modal>
+                                </a>
+                              </Confirm>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          key="1440"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              message="Yoooooo"
+                              onAction={[Function]}
+                              shouldConfirm={true}
+                              title="Ignore"
+                            >
+                              <Confirm
+                                cancelText="Cancel"
+                                confirmText="Ignore"
+                                message="Yoooooo"
+                                onConfirm={[Function]}
+                                priority="primary"
+                              >
+                                <a
+                                  onClick={[Function]}
+                                  title="Ignore"
+                                >
+                                   
+                                  <Duration
+                                    seconds={86400}
+                                  >
+                                    <span>
+                                      24 hours
+                                    </span>
+                                  </Duration>
+                                  <Modal
+                                    animation={false}
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    bsClass="modal"
+                                    dialogComponentClass={[Function]}
+                                    enforceFocus={true}
+                                    key="confirm"
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "modals": Array [],
+                                      }
+                                    }
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  >
+                                    <Modal
+                                      autoFocus={true}
+                                      backdrop={true}
+                                      backdropClassName="modal-backdrop"
+                                      backdropTransitionTimeout={150}
+                                      containerClassName="modal-open"
+                                      dialogTransitionTimeout={300}
+                                      enforceFocus={true}
+                                      keyboard={true}
+                                      manager={
+                                        ModalManager {
+                                          "containers": Array [],
+                                          "data": Array [],
+                                          "handleContainerOverflow": true,
+                                          "hideSiblingNodes": true,
+                                          "modals": Array [],
+                                        }
+                                      }
+                                      onEntering={[Function]}
+                                      onExited={[Function]}
+                                      onHide={[Function]}
+                                      renderBackdrop={[Function]}
+                                      restoreFocus={true}
+                                      show={false}
+                                    />
+                                  </Modal>
+                                </a>
+                              </Confirm>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          key="10080"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              message="Yoooooo"
+                              onAction={[Function]}
+                              shouldConfirm={true}
+                              title="Ignore"
+                            >
+                              <Confirm
+                                cancelText="Cancel"
+                                confirmText="Ignore"
+                                message="Yoooooo"
+                                onConfirm={[Function]}
+                                priority="primary"
+                              >
+                                <a
+                                  onClick={[Function]}
+                                  title="Ignore"
+                                >
+                                   
+                                  <Duration
+                                    seconds={604800}
+                                  >
+                                    <span>
+                                      1 week
+                                    </span>
+                                  </Duration>
+                                  <Modal
+                                    animation={false}
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    bsClass="modal"
+                                    dialogComponentClass={[Function]}
+                                    enforceFocus={true}
+                                    key="confirm"
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "modals": Array [],
+                                      }
+                                    }
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  >
+                                    <Modal
+                                      autoFocus={true}
+                                      backdrop={true}
+                                      backdropClassName="modal-backdrop"
+                                      backdropTransitionTimeout={150}
+                                      containerClassName="modal-open"
+                                      dialogTransitionTimeout={300}
+                                      enforceFocus={true}
+                                      keyboard={true}
+                                      manager={
+                                        ModalManager {
+                                          "containers": Array [],
+                                          "data": Array [],
+                                          "handleContainerOverflow": true,
+                                          "hideSiblingNodes": true,
+                                          "modals": Array [],
+                                        }
+                                      }
+                                      onEntering={[Function]}
+                                      onExited={[Function]}
+                                      onHide={[Function]}
+                                      renderBackdrop={[Function]}
+                                      restoreFocus={true}
+                                      show={false}
+                                    />
+                                  </Modal>
+                                </a>
+                              </Confirm>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          divider={true}
+                        >
+                          <li
+                            className="divider"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          />
+                        </MenuItem>
+                        <MenuItem
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <a
+                              onClick={[Function]}
+                            >
+                              Custom
+                            </a>
+                          </li>
+                        </MenuItem>
+                      </ul>
+                    </span>
+                  </DropdownMenu>
+                </DropdownLink>
+              </li>
+              <li
+                className="dropdown-submenu"
+              >
+                <DropdownLink
+                  alwaysRenderMenu={true}
+                  anchorRight={false}
+                  caret={false}
+                  disabled={false}
+                  isNestedDropdown={true}
+                  title="This occurs again .."
+                >
+                  <DropdownMenu
+                    isNestedDropdown={true}
+                    keepMenuOpen={false}
+                  >
+                    <span
+                      className="dropdown"
+                    >
+                      <a
+                        className="dropdown-actor dropdown-toggle"
+                        onClick={[Function]}
+                        onMouseEnter={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <div
+                          className="dropdown-actor-title"
+                        >
+                          <span>
+                            This occurs again ..
+                          </span>
+                        </div>
+                      </a>
+                      <ul
+                        className="dropdown-menu"
+                        onClick={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <li
+                          className="dropdown-submenu"
+                          key="10"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="10 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      10 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="100"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="100 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      100 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="1000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="1,000 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      1,000 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="10000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="10,000 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      10,000 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="100000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="100,000 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      100,000 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <MenuItem
+                          divider={true}
+                        >
+                          <li
+                            className="divider"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          />
+                        </MenuItem>
+                        <MenuItem
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <a
+                              onClick={[Function]}
+                            >
+                              Custom
+                            </a>
+                          </li>
+                        </MenuItem>
+                      </ul>
+                    </span>
+                  </DropdownMenu>
+                </DropdownLink>
+              </li>
+              <li
+                className="dropdown-submenu"
+              >
+                <DropdownLink
+                  alwaysRenderMenu={true}
+                  anchorRight={false}
+                  caret={false}
+                  disabled={false}
+                  isNestedDropdown={true}
+                  title="This affects an additional .."
+                >
+                  <DropdownMenu
+                    isNestedDropdown={true}
+                    keepMenuOpen={false}
+                  >
+                    <span
+                      className="dropdown"
+                    >
+                      <a
+                        className="dropdown-actor dropdown-toggle"
+                        onClick={[Function]}
+                        onMouseEnter={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <div
+                          className="dropdown-actor-title"
+                        >
+                          <span>
+                            This affects an additional ..
+                          </span>
+                        </div>
+                      </a>
+                      <ul
+                        className="dropdown-menu"
+                        onClick={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <li
+                          className="dropdown-submenu"
+                          key="10"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="10 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      10 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="100"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="100 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      100 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="1000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="1,000 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      1,000 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="10000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="10,000 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      10,000 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="100000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="100,000 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      100,000 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            from now
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per hour
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per day
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        message="Yoooooo"
+                                        onAction={[Function]}
+                                        shouldConfirm={true}
+                                        title="Ignore"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Ignore"
+                                          message="Yoooooo"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            onClick={[Function]}
+                                            title="Ignore"
+                                          >
+                                             
+                                            per week
+                                            <Modal
+                                              animation={false}
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              bsClass="modal"
+                                              dialogComponentClass={[Function]}
+                                              enforceFocus={true}
+                                              key="confirm"
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "modals": Array [],
+                                                }
+                                              }
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            >
+                                              <Modal
+                                                autoFocus={true}
+                                                backdrop={true}
+                                                backdropClassName="modal-backdrop"
+                                                backdropTransitionTimeout={150}
+                                                containerClassName="modal-open"
+                                                dialogTransitionTimeout={300}
+                                                enforceFocus={true}
+                                                keyboard={true}
+                                                manager={
+                                                  ModalManager {
+                                                    "containers": Array [],
+                                                    "data": Array [],
+                                                    "handleContainerOverflow": true,
+                                                    "hideSiblingNodes": true,
+                                                    "modals": Array [],
+                                                  }
+                                                }
+                                                onEntering={[Function]}
+                                                onExited={[Function]}
+                                                onHide={[Function]}
+                                                renderBackdrop={[Function]}
+                                                restoreFocus={true}
+                                                show={false}
+                                              />
+                                            </Modal>
+                                          </a>
+                                        </Confirm>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <MenuItem
+                          divider={true}
+                        >
+                          <li
+                            className="divider"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          />
+                        </MenuItem>
+                        <MenuItem
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <a
+                              onClick={[Function]}
+                            >
+                              Custom
+                            </a>
+                          </li>
+                        </MenuItem>
+                      </ul>
+                    </span>
+                  </DropdownMenu>
+                </DropdownLink>
+              </li>
+            </ul>
+          </span>
+        </DropdownMenu>
+      </DropdownLink>
+    </div>
+  </div>
+</IgnoreActions>
+`;
+
+exports[`IgnoreActions without confirmation renders 1`] = `
+<IgnoreActions
+  confirmLabel="Ignore"
+  isIgnored={false}
+  onUpdate={[Function]}
+>
+  <div
+    style={
+      Object {
+        "display": "inline-block",
+      }
+    }
+  >
+    <customIgnoreDurationModal
+      label="Ignore this issue until it occurs after .."
+      onCanceled={[Function]}
+      onSelected={[Function]}
+      show={false}
+    >
+      <Modal
+        animation={false}
+        autoFocus={true}
+        backdrop={true}
+        bsClass="modal"
+        dialogComponentClass={[Function]}
+        enforceFocus={true}
+        keyboard={true}
+        manager={
+          ModalManager {
+            "containers": Array [],
+            "data": Array [],
+            "handleContainerOverflow": true,
+            "hideSiblingNodes": true,
+            "modals": Array [],
+          }
+        }
+        onHide={[Function]}
+        renderBackdrop={[Function]}
+        restoreFocus={true}
+        show={false}
+      >
+        <Modal
+          autoFocus={true}
+          backdrop={true}
+          backdropClassName="modal-backdrop"
+          backdropTransitionTimeout={150}
+          containerClassName="modal-open"
+          dialogTransitionTimeout={300}
+          enforceFocus={true}
+          keyboard={true}
+          manager={
+            ModalManager {
+              "containers": Array [],
+              "data": Array [],
+              "handleContainerOverflow": true,
+              "hideSiblingNodes": true,
+              "modals": Array [],
+            }
+          }
+          onEntering={[Function]}
+          onExited={[Function]}
+          onHide={[Function]}
+          renderBackdrop={[Function]}
+          restoreFocus={true}
+          show={false}
+        />
+      </Modal>
+    </customIgnoreDurationModal>
+    <customIgnoreCountModal
+      countLabel="Number of times"
+      countName="ignoreCount"
+      label="Ignore this issue until it occurs again .. "
+      onCanceled={[Function]}
+      onSelected={[Function]}
+      show={false}
+      windowChoices={
+        Array [
+          Array [
+            1,
+            "per hour",
+          ],
+          Array [
+            24,
+            "per day",
+          ],
+          Array [
+            168,
+            "per week",
+          ],
+        ]
+      }
+      windowName="ignoreWindow"
+    >
+      <Modal
+        animation={false}
+        autoFocus={true}
+        backdrop={true}
+        bsClass="modal"
+        dialogComponentClass={[Function]}
+        enforceFocus={true}
+        keyboard={true}
+        manager={
+          ModalManager {
+            "containers": Array [],
+            "data": Array [],
+            "handleContainerOverflow": true,
+            "hideSiblingNodes": true,
+            "modals": Array [],
+          }
+        }
+        onHide={[Function]}
+        renderBackdrop={[Function]}
+        restoreFocus={true}
+        show={false}
+      >
+        <Modal
+          autoFocus={true}
+          backdrop={true}
+          backdropClassName="modal-backdrop"
+          backdropTransitionTimeout={150}
+          containerClassName="modal-open"
+          dialogTransitionTimeout={300}
+          enforceFocus={true}
+          keyboard={true}
+          manager={
+            ModalManager {
+              "containers": Array [],
+              "data": Array [],
+              "handleContainerOverflow": true,
+              "hideSiblingNodes": true,
+              "modals": Array [],
+            }
+          }
+          onEntering={[Function]}
+          onExited={[Function]}
+          onHide={[Function]}
+          renderBackdrop={[Function]}
+          restoreFocus={true}
+          show={false}
+        />
+      </Modal>
+    </customIgnoreCountModal>
+    <customIgnoreCountModal
+      countLabel="Numbers of users"
+      countName="ignoreUserCount"
+      label="Ignore this issue until it affects an additional .. "
+      onCanceled={[Function]}
+      onSelected={[Function]}
+      show={false}
+      windowChoices={
+        Array [
+          Array [
+            1,
+            "per hour",
+          ],
+          Array [
+            24,
+            "per day",
+          ],
+          Array [
+            168,
+            "per week",
+          ],
+        ]
+      }
+      windowName="ignoreUserWindow"
+    >
+      <Modal
+        animation={false}
+        autoFocus={true}
+        backdrop={true}
+        bsClass="modal"
+        dialogComponentClass={[Function]}
+        enforceFocus={true}
+        keyboard={true}
+        manager={
+          ModalManager {
+            "containers": Array [],
+            "data": Array [],
+            "handleContainerOverflow": true,
+            "hideSiblingNodes": true,
+            "modals": Array [],
+          }
+        }
+        onHide={[Function]}
+        renderBackdrop={[Function]}
+        restoreFocus={true}
+        show={false}
+      >
+        <Modal
+          autoFocus={true}
+          backdrop={true}
+          backdropClassName="modal-backdrop"
+          backdropTransitionTimeout={150}
+          containerClassName="modal-open"
+          dialogTransitionTimeout={300}
+          enforceFocus={true}
+          keyboard={true}
+          manager={
+            ModalManager {
+              "containers": Array [],
+              "data": Array [],
+              "handleContainerOverflow": true,
+              "hideSiblingNodes": true,
+              "modals": Array [],
+            }
+          }
+          onEntering={[Function]}
+          onExited={[Function]}
+          onHide={[Function]}
+          renderBackdrop={[Function]}
+          restoreFocus={true}
+          show={false}
+        />
+      </Modal>
+    </customIgnoreCountModal>
+    <div
+      className="btn-group"
+    >
+      <ActionLink
+        className="btn btn-default btn-sm"
+        confirmLabel="Ignore"
+        disabled={false}
+        onAction={[Function]}
+        shouldConfirm={false}
+        title="Ignore"
+      >
+        <a
+          className="btn btn-default btn-sm"
+          disabled={false}
+          onClick={[Function]}
+        >
+          <span
+            className="icon-ban"
+            style={
+              Object {
+                "marginRight": 5,
+              }
+            }
+          />
+          Ignore
+        </a>
+      </ActionLink>
+      <DropdownLink
+        alwaysRenderMenu={true}
+        anchorRight={false}
+        caret={true}
+        className="btn btn-default btn-sm"
+        disabled={false}
+        title=""
+      >
+        <DropdownMenu
+          keepMenuOpen={false}
+        >
+          <span
+            className="dropdown"
+          >
+            <a
+              className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
+              onClick={[Function]}
+              onMouseEnter={[Function]}
+              onMouseLeave={[Function]}
+            >
+              <div
+                className="dropdown-actor-title"
+              >
+                <span />
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
+            </a>
+            <ul
+              className="dropdown-menu"
+              onClick={[Function]}
+              onMouseLeave={[Function]}
+            >
+              <MenuItem
+                header={true}
+              >
+                <li
+                  className="dropdown-header"
+                  href={null}
+                  role="presentation"
+                  title={null}
+                >
+                  Ignore Until
+                </li>
+              </MenuItem>
+              <li
+                className="dropdown-submenu"
+              >
+                <DropdownLink
+                  alwaysRenderMenu={true}
+                  anchorRight={false}
+                  caret={false}
+                  disabled={false}
+                  isNestedDropdown={true}
+                  title="This occurs again after .."
+                >
+                  <DropdownMenu
+                    isNestedDropdown={true}
+                    keepMenuOpen={false}
+                  >
+                    <span
+                      className="dropdown"
+                    >
+                      <a
+                        className="dropdown-actor dropdown-toggle"
+                        onClick={[Function]}
+                        onMouseEnter={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <div
+                          className="dropdown-actor-title"
+                        >
+                          <span>
+                            This occurs again after ..
+                          </span>
+                        </div>
+                      </a>
+                      <ul
+                        className="dropdown-menu"
+                        onClick={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <MenuItem
+                          key="30"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              onAction={[Function]}
+                              shouldConfirm={false}
+                              title="Ignore"
+                            >
+                              <a
+                                className=""
+                                disabled={false}
+                                onClick={[Function]}
+                              >
+                                <Duration
+                                  seconds={1800}
+                                >
+                                  <span>
+                                    30 minutes
+                                  </span>
+                                </Duration>
+                              </a>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          key="120"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              onAction={[Function]}
+                              shouldConfirm={false}
+                              title="Ignore"
+                            >
+                              <a
+                                className=""
+                                disabled={false}
+                                onClick={[Function]}
+                              >
+                                <Duration
+                                  seconds={7200}
+                                >
+                                  <span>
+                                    2 hours
+                                  </span>
+                                </Duration>
+                              </a>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          key="360"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              onAction={[Function]}
+                              shouldConfirm={false}
+                              title="Ignore"
+                            >
+                              <a
+                                className=""
+                                disabled={false}
+                                onClick={[Function]}
+                              >
+                                <Duration
+                                  seconds={21600}
+                                >
+                                  <span>
+                                    6 hours
+                                  </span>
+                                </Duration>
+                              </a>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          key="1440"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              onAction={[Function]}
+                              shouldConfirm={false}
+                              title="Ignore"
+                            >
+                              <a
+                                className=""
+                                disabled={false}
+                                onClick={[Function]}
+                              >
+                                <Duration
+                                  seconds={86400}
+                                >
+                                  <span>
+                                    24 hours
+                                  </span>
+                                </Duration>
+                              </a>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          key="10080"
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <ActionLink
+                              confirmLabel="Ignore"
+                              disabled={false}
+                              onAction={[Function]}
+                              shouldConfirm={false}
+                              title="Ignore"
+                            >
+                              <a
+                                className=""
+                                disabled={false}
+                                onClick={[Function]}
+                              >
+                                <Duration
+                                  seconds={604800}
+                                >
+                                  <span>
+                                    1 week
+                                  </span>
+                                </Duration>
+                              </a>
+                            </ActionLink>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          divider={true}
+                        >
+                          <li
+                            className="divider"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          />
+                        </MenuItem>
+                        <MenuItem
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <a
+                              onClick={[Function]}
+                            >
+                              Custom
+                            </a>
+                          </li>
+                        </MenuItem>
+                      </ul>
+                    </span>
+                  </DropdownMenu>
+                </DropdownLink>
+              </li>
+              <li
+                className="dropdown-submenu"
+              >
+                <DropdownLink
+                  alwaysRenderMenu={true}
+                  anchorRight={false}
+                  caret={false}
+                  disabled={false}
+                  isNestedDropdown={true}
+                  title="This occurs again .."
+                >
+                  <DropdownMenu
+                    isNestedDropdown={true}
+                    keepMenuOpen={false}
+                  >
+                    <span
+                      className="dropdown"
+                    >
+                      <a
+                        className="dropdown-actor dropdown-toggle"
+                        onClick={[Function]}
+                        onMouseEnter={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <div
+                          className="dropdown-actor-title"
+                        >
+                          <span>
+                            This occurs again ..
+                          </span>
+                        </div>
+                      </a>
+                      <ul
+                        className="dropdown-menu"
+                        onClick={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <li
+                          className="dropdown-submenu"
+                          key="10"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="10 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      10 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="100"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="100 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      100 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="1000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="1,000 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      1,000 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="10000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="10,000 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      10,000 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="100000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="100,000 times"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      100,000 times
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <MenuItem
+                          divider={true}
+                        >
+                          <li
+                            className="divider"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          />
+                        </MenuItem>
+                        <MenuItem
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <a
+                              onClick={[Function]}
+                            >
+                              Custom
+                            </a>
+                          </li>
+                        </MenuItem>
+                      </ul>
+                    </span>
+                  </DropdownMenu>
+                </DropdownLink>
+              </li>
+              <li
+                className="dropdown-submenu"
+              >
+                <DropdownLink
+                  alwaysRenderMenu={true}
+                  anchorRight={false}
+                  caret={false}
+                  disabled={false}
+                  isNestedDropdown={true}
+                  title="This affects an additional .."
+                >
+                  <DropdownMenu
+                    isNestedDropdown={true}
+                    keepMenuOpen={false}
+                  >
+                    <span
+                      className="dropdown"
+                    >
+                      <a
+                        className="dropdown-actor dropdown-toggle"
+                        onClick={[Function]}
+                        onMouseEnter={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <div
+                          className="dropdown-actor-title"
+                        >
+                          <span>
+                            This affects an additional ..
+                          </span>
+                        </div>
+                      </a>
+                      <ul
+                        className="dropdown-menu"
+                        onClick={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <li
+                          className="dropdown-submenu"
+                          key="10"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="10 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      10 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="100"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="100 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      100 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="1000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="1,000 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      1,000 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="10000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="10,000 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      10,000 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <li
+                          className="dropdown-submenu"
+                          key="100000"
+                        >
+                          <DropdownLink
+                            alwaysRenderMenu={true}
+                            anchorRight={false}
+                            caret={false}
+                            disabled={false}
+                            isNestedDropdown={true}
+                            title="100,000 users"
+                          >
+                            <DropdownMenu
+                              isNestedDropdown={true}
+                              keepMenuOpen={false}
+                            >
+                              <span
+                                className="dropdown"
+                              >
+                                <a
+                                  className="dropdown-actor dropdown-toggle"
+                                  onClick={[Function]}
+                                  onMouseEnter={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <div
+                                    className="dropdown-actor-title"
+                                  >
+                                    <span>
+                                      100,000 users
+                                    </span>
+                                  </div>
+                                </a>
+                                <ul
+                                  className="dropdown-menu"
+                                  onClick={[Function]}
+                                  onMouseLeave={[Function]}
+                                >
+                                  <MenuItem
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          from now
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="1"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per hour
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="24"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per day
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                  <MenuItem
+                                    key="168"
+                                    noAnchor={true}
+                                  >
+                                    <li
+                                      className=""
+                                      href={null}
+                                      role="presentation"
+                                      title={null}
+                                    >
+                                      <ActionLink
+                                        confirmLabel="Ignore"
+                                        disabled={false}
+                                        onAction={[Function]}
+                                        shouldConfirm={false}
+                                        title="Ignore"
+                                      >
+                                        <a
+                                          className=""
+                                          disabled={false}
+                                          onClick={[Function]}
+                                        >
+                                          per week
+                                        </a>
+                                      </ActionLink>
+                                    </li>
+                                  </MenuItem>
+                                </ul>
+                              </span>
+                            </DropdownMenu>
+                          </DropdownLink>
+                        </li>
+                        <MenuItem
+                          divider={true}
+                        >
+                          <li
+                            className="divider"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          />
+                        </MenuItem>
+                        <MenuItem
+                          noAnchor={true}
+                        >
+                          <li
+                            className=""
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <a
+                              onClick={[Function]}
+                            >
+                              Custom
+                            </a>
+                          </li>
+                        </MenuItem>
+                      </ul>
+                    </span>
+                  </DropdownMenu>
+                </DropdownLink>
+              </li>
+            </ul>
+          </span>
+        </DropdownMenu>
+      </DropdownLink>
+    </div>
+  </div>
+</IgnoreActions>
+`;
diff --git a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
new file mode 100644
index 0000000000..9a2352c945
--- /dev/null
+++ b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
@@ -0,0 +1,611 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ResolveActions with confirmation step renders 1`] = `
+<ResolveActions
+  confirmLabel="Resolve"
+  confirmMessage="Are you sure???"
+  hasRelease={false}
+  isAutoResolved={false}
+  isResolved={false}
+  onUpdate={[Function]}
+  orgId="org-1"
+  projectId="proj-1"
+  shouldConfirm={true}
+>
+  <div
+    style={
+      Object {
+        "display": "inline-block",
+      }
+    }
+  >
+    <customResolutionModal
+      onCanceled={[Function]}
+      onSelected={[Function]}
+      orgId="org-1"
+      projectId="proj-1"
+      show={false}
+    >
+      <Modal
+        animation={false}
+        autoFocus={true}
+        backdrop={true}
+        bsClass="modal"
+        dialogComponentClass={[Function]}
+        enforceFocus={true}
+        keyboard={true}
+        manager={
+          ModalManager {
+            "containers": Array [],
+            "data": Array [],
+            "handleContainerOverflow": true,
+            "hideSiblingNodes": true,
+            "modals": Array [],
+          }
+        }
+        onHide={[Function]}
+        renderBackdrop={[Function]}
+        restoreFocus={true}
+        show={false}
+      >
+        <Modal
+          autoFocus={true}
+          backdrop={true}
+          backdropClassName="modal-backdrop"
+          backdropTransitionTimeout={150}
+          containerClassName="modal-open"
+          dialogTransitionTimeout={300}
+          enforceFocus={true}
+          keyboard={true}
+          manager={
+            ModalManager {
+              "containers": Array [],
+              "data": Array [],
+              "handleContainerOverflow": true,
+              "hideSiblingNodes": true,
+              "modals": Array [],
+            }
+          }
+          onEntering={[Function]}
+          onExited={[Function]}
+          onHide={[Function]}
+          renderBackdrop={[Function]}
+          restoreFocus={true}
+          show={false}
+        />
+      </Modal>
+    </customResolutionModal>
+    <div
+      className="btn-group"
+    >
+      <ActionLink
+        className="btn btn-default btn-sm"
+        confirmLabel="Resolve"
+        disabled={false}
+        message="Are you sure???"
+        onAction={[Function]}
+        shouldConfirm={true}
+        title="Resolve"
+      >
+        <Confirm
+          cancelText="Cancel"
+          confirmText="Resolve"
+          message="Are you sure???"
+          onConfirm={[Function]}
+          priority="primary"
+        >
+          <a
+            className="btn btn-default btn-sm"
+            onClick={[Function]}
+            title="Resolve"
+          >
+             
+            <span
+              className="icon-checkmark"
+              style={
+                Object {
+                  "marginRight": 5,
+                }
+              }
+            />
+            Resolve
+            <Modal
+              animation={false}
+              autoFocus={true}
+              backdrop={true}
+              bsClass="modal"
+              dialogComponentClass={[Function]}
+              enforceFocus={true}
+              key="confirm"
+              keyboard={true}
+              manager={
+                ModalManager {
+                  "containers": Array [],
+                  "data": Array [],
+                  "handleContainerOverflow": true,
+                  "hideSiblingNodes": true,
+                  "modals": Array [],
+                }
+              }
+              onHide={[Function]}
+              renderBackdrop={[Function]}
+              restoreFocus={true}
+              show={false}
+            >
+              <Modal
+                autoFocus={true}
+                backdrop={true}
+                backdropClassName="modal-backdrop"
+                backdropTransitionTimeout={150}
+                containerClassName="modal-open"
+                dialogTransitionTimeout={300}
+                enforceFocus={true}
+                keyboard={true}
+                manager={
+                  ModalManager {
+                    "containers": Array [],
+                    "data": Array [],
+                    "handleContainerOverflow": true,
+                    "hideSiblingNodes": true,
+                    "modals": Array [],
+                  }
+                }
+                onEntering={[Function]}
+                onExited={[Function]}
+                onHide={[Function]}
+                renderBackdrop={[Function]}
+                restoreFocus={true}
+                show={false}
+              />
+            </Modal>
+          </a>
+        </Confirm>
+      </ActionLink>
+      <DropdownLink
+        alwaysRenderMenu={true}
+        anchorRight={false}
+        caret={true}
+        className="btn btn-default btn-sm"
+        disabled={false}
+        key="resolve-dropdown"
+        title=""
+      >
+        <DropdownMenu
+          keepMenuOpen={false}
+        >
+          <span
+            className="dropdown"
+          >
+            <a
+              className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
+              onClick={[Function]}
+              onMouseEnter={[Function]}
+              onMouseLeave={[Function]}
+            >
+              <div
+                className="dropdown-actor-title"
+              >
+                <span />
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
+            </a>
+            <ul
+              className="dropdown-menu"
+              onClick={[Function]}
+              onMouseLeave={[Function]}
+            >
+              <MenuItem
+                header={true}
+              >
+                <li
+                  className="dropdown-header"
+                  href={null}
+                  role="presentation"
+                  title={null}
+                >
+                  Resolved In
+                </li>
+              </MenuItem>
+              <MenuItem
+                noAnchor={true}
+              >
+                <li
+                  className=""
+                  href={null}
+                  role="presentation"
+                  title={null}
+                >
+                  <ActionLink
+                    className="tip"
+                    confirmLabel="Resolve"
+                    disabled={false}
+                    message="Are you sure???"
+                    onAction={[Function]}
+                    shouldConfirm={true}
+                    title="Set up release tracking in order to use this feature."
+                  >
+                    <Confirm
+                      cancelText="Cancel"
+                      confirmText="Resolve"
+                      message="Are you sure???"
+                      onConfirm={[Function]}
+                      priority="primary"
+                    >
+                      <a
+                        className="tip"
+                        onClick={[Function]}
+                        title="Set up release tracking in order to use this feature."
+                      >
+                         
+                        The next release
+                        <Modal
+                          animation={false}
+                          autoFocus={true}
+                          backdrop={true}
+                          bsClass="modal"
+                          dialogComponentClass={[Function]}
+                          enforceFocus={true}
+                          key="confirm"
+                          keyboard={true}
+                          manager={
+                            ModalManager {
+                              "containers": Array [],
+                              "data": Array [],
+                              "handleContainerOverflow": true,
+                              "hideSiblingNodes": true,
+                              "modals": Array [],
+                            }
+                          }
+                          onHide={[Function]}
+                          renderBackdrop={[Function]}
+                          restoreFocus={true}
+                          show={false}
+                        >
+                          <Modal
+                            autoFocus={true}
+                            backdrop={true}
+                            backdropClassName="modal-backdrop"
+                            backdropTransitionTimeout={150}
+                            containerClassName="modal-open"
+                            dialogTransitionTimeout={300}
+                            enforceFocus={true}
+                            keyboard={true}
+                            manager={
+                              ModalManager {
+                                "containers": Array [],
+                                "data": Array [],
+                                "handleContainerOverflow": true,
+                                "hideSiblingNodes": true,
+                                "modals": Array [],
+                              }
+                            }
+                            onEntering={[Function]}
+                            onExited={[Function]}
+                            onHide={[Function]}
+                            renderBackdrop={[Function]}
+                            restoreFocus={true}
+                            show={false}
+                          />
+                        </Modal>
+                      </a>
+                    </Confirm>
+                  </ActionLink>
+                  <ActionLink
+                    className="tip"
+                    confirmLabel="Resolve"
+                    disabled={false}
+                    message="Are you sure???"
+                    onAction={[Function]}
+                    shouldConfirm={true}
+                    title="Set up release tracking in order to use this feature."
+                  >
+                    <Confirm
+                      cancelText="Cancel"
+                      confirmText="Resolve"
+                      message="Are you sure???"
+                      onConfirm={[Function]}
+                      priority="primary"
+                    >
+                      <a
+                        className="tip"
+                        onClick={[Function]}
+                        title="Set up release tracking in order to use this feature."
+                      >
+                         
+                        The current release
+                        <Modal
+                          animation={false}
+                          autoFocus={true}
+                          backdrop={true}
+                          bsClass="modal"
+                          dialogComponentClass={[Function]}
+                          enforceFocus={true}
+                          key="confirm"
+                          keyboard={true}
+                          manager={
+                            ModalManager {
+                              "containers": Array [],
+                              "data": Array [],
+                              "handleContainerOverflow": true,
+                              "hideSiblingNodes": true,
+                              "modals": Array [],
+                            }
+                          }
+                          onHide={[Function]}
+                          renderBackdrop={[Function]}
+                          restoreFocus={true}
+                          show={false}
+                        >
+                          <Modal
+                            autoFocus={true}
+                            backdrop={true}
+                            backdropClassName="modal-backdrop"
+                            backdropTransitionTimeout={150}
+                            containerClassName="modal-open"
+                            dialogTransitionTimeout={300}
+                            enforceFocus={true}
+                            keyboard={true}
+                            manager={
+                              ModalManager {
+                                "containers": Array [],
+                                "data": Array [],
+                                "handleContainerOverflow": true,
+                                "hideSiblingNodes": true,
+                                "modals": Array [],
+                              }
+                            }
+                            onEntering={[Function]}
+                            onExited={[Function]}
+                            onHide={[Function]}
+                            renderBackdrop={[Function]}
+                            restoreFocus={true}
+                            show={false}
+                          />
+                        </Modal>
+                      </a>
+                    </Confirm>
+                  </ActionLink>
+                  <ActionLink
+                    className="tip"
+                    confirmLabel="Resolve"
+                    disabled={false}
+                    message="Are you sure???"
+                    onAction={[Function]}
+                    shouldConfirm={false}
+                    title="Set up release tracking in order to use this feature."
+                  >
+                    <a
+                      className="tip"
+                      disabled={false}
+                      onClick={[Function]}
+                    >
+                      Another version ...
+                    </a>
+                  </ActionLink>
+                </li>
+              </MenuItem>
+            </ul>
+          </span>
+        </DropdownMenu>
+      </DropdownLink>
+    </div>
+  </div>
+</ResolveActions>
+`;
+
+exports[`ResolveActions without confirmation renders 1`] = `
+<ResolveActions
+  confirmLabel="Resolve"
+  hasRelease={false}
+  isAutoResolved={false}
+  isResolved={false}
+  onUpdate={[Function]}
+  orgId="org-1"
+  projectId="proj-1"
+>
+  <div
+    style={
+      Object {
+        "display": "inline-block",
+      }
+    }
+  >
+    <customResolutionModal
+      onCanceled={[Function]}
+      onSelected={[Function]}
+      orgId="org-1"
+      projectId="proj-1"
+      show={false}
+    >
+      <Modal
+        animation={false}
+        autoFocus={true}
+        backdrop={true}
+        bsClass="modal"
+        dialogComponentClass={[Function]}
+        enforceFocus={true}
+        keyboard={true}
+        manager={
+          ModalManager {
+            "containers": Array [],
+            "data": Array [],
+            "handleContainerOverflow": true,
+            "hideSiblingNodes": true,
+            "modals": Array [],
+          }
+        }
+        onHide={[Function]}
+        renderBackdrop={[Function]}
+        restoreFocus={true}
+        show={false}
+      >
+        <Modal
+          autoFocus={true}
+          backdrop={true}
+          backdropClassName="modal-backdrop"
+          backdropTransitionTimeout={150}
+          containerClassName="modal-open"
+          dialogTransitionTimeout={300}
+          enforceFocus={true}
+          keyboard={true}
+          manager={
+            ModalManager {
+              "containers": Array [],
+              "data": Array [],
+              "handleContainerOverflow": true,
+              "hideSiblingNodes": true,
+              "modals": Array [],
+            }
+          }
+          onEntering={[Function]}
+          onExited={[Function]}
+          onHide={[Function]}
+          renderBackdrop={[Function]}
+          restoreFocus={true}
+          show={false}
+        />
+      </Modal>
+    </customResolutionModal>
+    <div
+      className="btn-group"
+    >
+      <ActionLink
+        className="btn btn-default btn-sm"
+        confirmLabel="Resolve"
+        disabled={false}
+        onAction={[Function]}
+        shouldConfirm={false}
+        title="Resolve"
+      >
+        <a
+          className="btn btn-default btn-sm"
+          disabled={false}
+          onClick={[Function]}
+        >
+          <span
+            className="icon-checkmark"
+            style={
+              Object {
+                "marginRight": 5,
+              }
+            }
+          />
+          Resolve
+        </a>
+      </ActionLink>
+      <DropdownLink
+        alwaysRenderMenu={true}
+        anchorRight={false}
+        caret={true}
+        className="btn btn-default btn-sm"
+        disabled={false}
+        key="resolve-dropdown"
+        title=""
+      >
+        <DropdownMenu
+          keepMenuOpen={false}
+        >
+          <span
+            className="dropdown"
+          >
+            <a
+              className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
+              onClick={[Function]}
+              onMouseEnter={[Function]}
+              onMouseLeave={[Function]}
+            >
+              <div
+                className="dropdown-actor-title"
+              >
+                <span />
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
+            </a>
+            <ul
+              className="dropdown-menu"
+              onClick={[Function]}
+              onMouseLeave={[Function]}
+            >
+              <MenuItem
+                header={true}
+              >
+                <li
+                  className="dropdown-header"
+                  href={null}
+                  role="presentation"
+                  title={null}
+                >
+                  Resolved In
+                </li>
+              </MenuItem>
+              <MenuItem
+                noAnchor={true}
+              >
+                <li
+                  className=""
+                  href={null}
+                  role="presentation"
+                  title={null}
+                >
+                  <ActionLink
+                    className="tip"
+                    confirmLabel="Resolve"
+                    disabled={false}
+                    onAction={[Function]}
+                    shouldConfirm={false}
+                    title="Set up release tracking in order to use this feature."
+                  >
+                    <a
+                      className="tip"
+                      disabled={false}
+                      onClick={[Function]}
+                    >
+                      The next release
+                    </a>
+                  </ActionLink>
+                  <ActionLink
+                    className="tip"
+                    confirmLabel="Resolve"
+                    disabled={false}
+                    onAction={[Function]}
+                    shouldConfirm={false}
+                    title="Set up release tracking in order to use this feature."
+                  >
+                    <a
+                      className="tip"
+                      disabled={false}
+                      onClick={[Function]}
+                    >
+                      The current release
+                    </a>
+                  </ActionLink>
+                  <ActionLink
+                    className="tip"
+                    confirmLabel="Resolve"
+                    disabled={false}
+                    onAction={[Function]}
+                    shouldConfirm={false}
+                    title="Set up release tracking in order to use this feature."
+                  >
+                    <a
+                      className="tip"
+                      disabled={false}
+                      onClick={[Function]}
+                    >
+                      Another version ...
+                    </a>
+                  </ActionLink>
+                </li>
+              </MenuItem>
+            </ul>
+          </span>
+        </DropdownMenu>
+      </DropdownLink>
+    </div>
+  </div>
+</ResolveActions>
+`;
diff --git a/tests/js/spec/components/actions/ignore.spec.jsx b/tests/js/spec/components/actions/ignore.spec.jsx
new file mode 100644
index 0000000000..6d85bd1330
--- /dev/null
+++ b/tests/js/spec/components/actions/ignore.spec.jsx
@@ -0,0 +1,93 @@
+import React from 'react';
+import {mount} from 'enzyme';
+import $ from 'jquery';
+import IgnoreActions from 'app/components/actions/ignore';
+
+describe('IgnoreActions', function() {
+  describe('disabled', function() {
+    let component, button;
+    let spy = sinon.stub();
+
+    beforeEach(function() {
+      component = mount(<IgnoreActions onUpdate={spy} disabled={true} />);
+      button = component.find('a.btn.btn-default').first();
+    });
+
+    it('has disabled prop', function() {
+      expect(button.prop('disabled')).toBe(true);
+    });
+
+    it('does not call onUpdate when clicked', function() {
+      button.simulate('click');
+      expect(spy.notCalled).toBe(true);
+    });
+  });
+
+  describe('ignored', function() {
+    let component;
+    let spy = sinon.spy();
+    beforeEach(function() {
+      component = mount(<IgnoreActions onUpdate={spy} isIgnored={true} />);
+    });
+
+    it('displays ignored view', function() {
+      let button = component.find('a.btn.active');
+      expect(button.length).toBe(1);
+      expect(button.text()).toBe('');
+    });
+
+    it('calls onUpdate with unresolved status when clicked', function() {
+      component.find('a.btn.active').simulate('click');
+      expect(spy.calledWith({status: 'unresolved'}));
+    });
+  });
+
+  describe('without confirmation', function() {
+    let component;
+    let spy = sinon.stub();
+
+    beforeEach(function() {
+      component = mount(<IgnoreActions onUpdate={spy} />);
+    });
+
+    it('renders', function() {
+      expect(component).toMatchSnapshot();
+    });
+
+    it('calls spy with ignore details when clicked', function() {
+      let button = component.find('a.btn.btn-default').first();
+      button.simulate('click');
+      expect(spy.calledOnce).toBe(true);
+      expect(spy.calledWith({status: 'ignored'})).toBe(true);
+    });
+  });
+
+  describe('with confirmation step', function() {
+    let component, button;
+    let spy = sinon.stub();
+
+    beforeEach(function() {
+      component = mount(
+        <IgnoreActions onUpdate={spy} shouldConfirm={true} confirmMessage={'Yoooooo'} />
+      );
+      button = component.find('a.btn.btn-default').first();
+    });
+
+    it('renders', function() {
+      expect(component).toMatchSnapshot();
+    });
+
+    it('displays confirmation modal with message provided', function() {
+      button.simulate('click');
+
+      let modal = $(document.body).find('.modal');
+      expect(modal.text()).toContain('Yoooooo');
+      expect(spy.notCalled).toBe(true);
+      $(document.body)
+        .find('.modal button:contains("Ignore")')
+        .click();
+
+      expect(spy.called).toBe(true);
+    });
+  });
+});
diff --git a/tests/js/spec/components/actions/resolve.spec.jsx b/tests/js/spec/components/actions/resolve.spec.jsx
new file mode 100644
index 0000000000..38e1e51cd2
--- /dev/null
+++ b/tests/js/spec/components/actions/resolve.spec.jsx
@@ -0,0 +1,143 @@
+import React from 'react';
+import {mount} from 'enzyme';
+import $ from 'jquery';
+import ResolveActions from 'app/components/actions/resolve';
+
+describe('ResolveActions', function() {
+  describe('disabled', function() {
+    let component, button;
+    let spy = sinon.stub();
+
+    beforeEach(function() {
+      component = mount(
+        <ResolveActions
+          onUpdate={spy}
+          disabled={true}
+          hasRelease={false}
+          orgId={'org-1'}
+          projectId={'proj-1'}
+        />
+      );
+      button = component.find('a.btn.btn-default').first();
+    });
+
+    it('has disabled prop', function() {
+      expect(button.prop('disabled')).toBe(true);
+    });
+
+    it('does not call onUpdate when clicked', function() {
+      button.simulate('click');
+      expect(spy.notCalled).toBe(true);
+    });
+  });
+
+  describe('resolved', function() {
+    let component;
+    let spy = sinon.stub();
+    beforeEach(function() {
+      component = mount(
+        <ResolveActions
+          onUpdate={spy}
+          disabled={true}
+          hasRelease={false}
+          orgId={'org-1'}
+          projectId={'proj-1'}
+          isResolved={true}
+        />
+      );
+    });
+
+    it('displays resolved view', function() {
+      let button = component.find('a.btn.active');
+      expect(button.length).toBe(1);
+      expect(button.text()).toBe('');
+    });
+
+    it('calls onUpdate with unresolved status when clicked', function() {
+      component.find('a.btn.active').simulate('click');
+      expect(spy.calledWith({status: 'unresolved'}));
+    });
+  });
+
+  describe('auto resolved', function() {
+    it('cannot be unresolved manually', function() {
+      let spy = sinon.stub();
+      let component = mount(
+        <ResolveActions
+          onUpdate={spy}
+          disabled={true}
+          hasRelease={false}
+          orgId={'org-1'}
+          projectId={'proj-1'}
+          isResolved={true}
+          isAutoResolved={true}
+        />
+      );
+
+      component.find('a.btn').simulate('click');
+      expect(spy.notCalled).toBe(true);
+    });
+  });
+
+  describe('without confirmation', function() {
+    let component;
+    let spy = sinon.stub();
+    beforeEach(function() {
+      component = mount(
+        <ResolveActions
+          onUpdate={spy}
+          hasRelease={false}
+          orgId={'org-1'}
+          projectId={'proj-1'}
+        />
+      );
+    });
+
+    it('renders', function() {
+      expect(component).toMatchSnapshot();
+    });
+
+    it('calls spy with resolved status when clicked', function() {
+      let button = component.find('a.btn.btn-default').first();
+      button.simulate('click');
+      expect(spy.calledOnce).toBe(true);
+      expect(spy.calledWith({status: 'resolved'})).toBe(true);
+    });
+  });
+
+  describe('with confirmation step', function() {
+    let component, button;
+    let spy = sinon.stub();
+
+    beforeEach(function() {
+      component = mount(
+        <ResolveActions
+          onUpdate={spy}
+          hasRelease={false}
+          orgId={'org-1'}
+          projectId={'proj-1'}
+          shouldConfirm={true}
+          confirmMessage={'Are you sure???'}
+        />
+      );
+      button = component.find('a.btn.btn-default').first();
+    });
+
+    it('renders', function() {
+      expect(component).toMatchSnapshot();
+    });
+
+    it('displays confirmation modal with message provided', function() {
+      button.simulate('click');
+
+      let modal = $(document.body).find('.modal');
+      expect(modal.text()).toContain('Are you sure???');
+      expect(spy.notCalled).toBe(true);
+      $(document.body)
+        .find('.modal button:contains("Resolve")')
+        .click();
+
+      expect(spy.called).toBe(true);
+    });
+  });
+});
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
index 7b737c4850..1642c3abac 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
@@ -5,26 +5,17 @@ exports[`GroupActions render() renders correctly 1`] = `
   className="group-actions"
 >
   <ResolveActions
-    group={
-      Object {
-        "id": "1337",
-        "pluginActions": Array [],
-        "pluginIssues": Array [],
-      }
-    }
+    confirmLabel="Resolve"
     hasRelease={false}
+    isAutoResolved={false}
+    isResolved={false}
     onUpdate={[Function]}
     orgId="org"
     projectId="project"
   />
   <IgnoreActions
-    group={
-      Object {
-        "id": "1337",
-        "pluginActions": Array [],
-        "pluginIssues": Array [],
-      }
-    }
+    confirmLabel="Ignore"
+    isIgnored={false}
     onUpdate={[Function]}
   />
   <div
diff --git a/tests/js/spec/views/stream/actionLink.spec.jsx b/tests/js/spec/views/stream/actionLink.spec.jsx
deleted file mode 100644
index 654b1aca29..0000000000
--- a/tests/js/spec/views/stream/actionLink.spec.jsx
+++ /dev/null
@@ -1,51 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-
-import {Client} from 'app/api';
-import ActionLink from 'app/views/stream/actionLink';
-
-describe('ActionLink', function() {
-  let sandbox;
-
-  beforeEach(function() {
-    sandbox = sinon.sandbox.create();
-
-    this.stubbedApiRequest = sandbox.stub(Client.prototype, 'request');
-  });
-
-  afterEach(function() {
-    sandbox.restore();
-  });
-
-  describe('shouldConfirm()', function() {
-    it('should always return true by default', function() {
-      let actionLink = shallow(
-        <ActionLink onAction={function() {}} selectAllActive={false} />
-      ).instance();
-
-      expect(actionLink.shouldConfirm(0)).toBe(true);
-      expect(actionLink.shouldConfirm(1)).toBe(true);
-      expect(actionLink.shouldConfirm(25)).toBe(true);
-    });
-
-    it('should return (mostly) true when props.onlyIfBulk is true and all are selected', function() {
-      let actionLink = shallow(
-        <ActionLink onlyIfBulk={true} selectAllActive={true} onAction={function() {}} />
-      ).instance();
-
-      expect(actionLink.shouldConfirm(1)).toBe(false); // EDGE CASE: if just 1, shouldn't confirm even if "all" selected
-      expect(actionLink.shouldConfirm(2)).toBe(true);
-      expect(actionLink.shouldConfirm(25)).toBe(true);
-    });
-
-    it('should return false when props.onlyIfBulk is true and not all are selected', function() {
-      let actionLink = shallow(
-        <ActionLink onlyIfBulk={true} selectAllActive={false} onAction={function() {}} />
-      ).instance();
-
-      expect(actionLink.shouldConfirm(1)).toBe(false);
-      expect(actionLink.shouldConfirm(2)).toBe(false);
-      expect(actionLink.shouldConfirm(25)).toBe(false);
-    });
-  });
-});
