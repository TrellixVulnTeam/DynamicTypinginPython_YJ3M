commit 9db44b253b32c0cb0ef5d67ae84aadf985e3fef0
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 20 10:48:37 2018 -0700

    feat(owners): Add My Commits prototype
    
    This adds a new prototype feature which shows commits associated with an organization member. It buckets them between unreleased and released.

diff --git a/src/sentry/api/endpoints/organization_member_commits.py b/src/sentry/api/endpoints/organization_member_commits.py
new file mode 100644
index 0000000000..1f95cde4fa
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_member_commits.py
@@ -0,0 +1,34 @@
+from __future__ import absolute_import
+
+from sentry.api.bases import OrganizationMemberEndpoint
+from sentry.api.paginator import OffsetPaginator
+from sentry.api.serializers import serialize, CommitWithReleaseSerializer
+from sentry.db.models.query import in_iexact
+from sentry.models import Commit, CommitAuthor, UserEmail
+
+
+class OrganizationMemberCommitsEndpoint(OrganizationMemberEndpoint):
+    def get(self, request, organization, member):
+        email_list = list(UserEmail.objects.filter(
+            user=member.user_id,
+            is_verified=True,
+        ).values_list('email', flat=True))
+        if email_list:
+            queryset = Commit.objects.filter(
+                organization_id=organization.id,
+                author__in=CommitAuthor.objects.filter(
+                    in_iexact('email', email_list),
+                    organization_id=organization.id,
+                )
+            ).order_by('-date_added')
+        else:
+            queryset = Commit.objects.none()
+
+        return self.paginate(
+            request=request,
+            queryset=queryset,
+            order_by='-date_added',
+            paginator_cls=OffsetPaginator,
+            # TODO(dcramer): we dont want to return author here
+            on_results=lambda x: serialize(x, request.user, CommitWithReleaseSerializer()),
+        )
diff --git a/src/sentry/api/serializers/models/commit.py b/src/sentry/api/serializers/models/commit.py
index 93fbefa165..b916ca5c1f 100644
--- a/src/sentry/api/serializers/models/commit.py
+++ b/src/sentry/api/serializers/models/commit.py
@@ -2,6 +2,8 @@ from __future__ import absolute_import
 
 import six
 
+from collections import defaultdict
+
 from sentry.api.serializers import Serializer, register, serialize
 from sentry.models import Commit, Repository
 from sentry.api.serializers.models.release import get_users_for_authors, CommitAuthor
@@ -67,3 +69,34 @@ class CommitSerializer(Serializer):
         if 'author' not in self.exclude:
             d['author'] = attrs['user']
         return d
+
+
+@register(Commit)
+class CommitWithReleaseSerializer(CommitSerializer):
+    def __init__(self, exclude=None, *args, **kwargs):
+        Serializer.__init__(self, *args, **kwargs)
+        self.exclude = frozenset(exclude if exclude else ())
+
+    def get_attrs(self, item_list, user):
+        from sentry.models import ReleaseCommit
+        attrs = super(CommitWithReleaseSerializer, self).get_attrs(item_list, user)
+        releases_by_commit = defaultdict(list)
+        queryset = ReleaseCommit.objects.filter(
+            commit__in=item_list).select_related('release')[:1000]
+        for row in queryset:
+            releases_by_commit[row.commit_id].append(row.release)
+        for item in item_list:
+            attrs[item]['releases'] = releases_by_commit[item.id]
+        return attrs
+
+    def serialize(self, obj, attrs, user):
+        data = super(CommitWithReleaseSerializer, self).serialize(obj, attrs, user)
+        data['releases'] = [{
+            'version': r.version,
+            'shortVersion': r.short_version,
+            'ref': r.ref,
+            'url': r.url,
+            'dateReleased': r.date_released,
+            'dateCreated': r.date_added,
+        } for r in attrs['releases']]
+        return data
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index f4db41c693..c78dd90e26 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -48,6 +48,7 @@ from .endpoints.organization_details import OrganizationDetailsEndpoint
 from .endpoints.organization_shortid import ShortIdLookupEndpoint
 from .endpoints.organization_slugs import SlugsUpdateEndpoint
 from .endpoints.organization_issues_new import OrganizationIssuesNewEndpoint
+from .endpoints.organization_member_commits import OrganizationMemberCommitsEndpoint
 from .endpoints.organization_member_details import OrganizationMemberDetailsEndpoint
 from .endpoints.organization_member_index import OrganizationMemberIndexEndpoint
 from .endpoints.organization_member_issues_assigned import OrganizationMemberIssuesAssignedEndpoint
@@ -399,6 +400,11 @@ urlpatterns = patterns(
         OrganizationMemberDetailsEndpoint.as_view(),
         name='sentry-api-0-organization-member-details'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>[^\/]+)/commits/$',
+        OrganizationMemberCommitsEndpoint.as_view(),
+        name='sentry-api-0-organization-member-commits'
+    ),
     url(
         r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>[^\/]+)/issues/assigned/$',
         OrganizationMemberIssuesAssignedEndpoint.as_view(),
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 8c5839ee3f..0b6441cb79 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -42,6 +42,7 @@ import OrganizationApiKeyDetailsView from './views/settings/organization/apiKeys
 import OrganizationApiKeysView from './views/settings/organization/apiKeys/organizationApiKeysView';
 import OrganizationAuditLogView from './views/settings/organization/auditLog/auditLogView';
 import OrganizationAuthView from './views/settings/organization/auth/organizationAuthView';
+import OrganizationCommits from './views/organizationCommits';
 import OrganizationContext from './views/organizationContext';
 import OrganizationCreate from './views/organizationCreate';
 import OrganizationDashboard from './views/organizationDashboard';
@@ -628,6 +629,11 @@ function routes() {
           component={errorHandler(OrganizationActivity)}
         />
 
+        <Route
+          path="/organizations/:orgId/commits/"
+          component={errorHandler(OrganizationCommits)}
+        />
+
         <Route
           path="/organizations/:orgId/teams/new/"
           component={errorHandler(TeamCreate)}
diff --git a/src/sentry/static/sentry/app/views/organizationCommits.jsx b/src/sentry/static/sentry/app/views/organizationCommits.jsx
new file mode 100644
index 0000000000..0d71b32a61
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationCommits.jsx
@@ -0,0 +1,108 @@
+import React from 'react';
+
+import AsyncView from '../views/asyncView';
+import OrganizationHomeContainer from '../components/organizations/homeContainer';
+
+import CommitRow from '../components/commitRow';
+import Pagination from '../components/pagination';
+import {t} from '../locale';
+
+export default class OrganizationCommits extends AsyncView {
+  getEndpoints() {
+    return [
+      ['commitList', `/organizations/${this.props.params.orgId}/members/me/commits/`],
+    ];
+  }
+
+  getTitle() {
+    return 'Commits';
+  }
+
+  emptyState() {
+    return (
+      <div className="box empty-stream m-y-0">
+        <span className="icon icon-exclamation" />
+        <p>We could find any commits associated with your account.</p>
+        <p>
+          Have you added (and verified) the email address associated with your activity?
+        </p>
+      </div>
+    );
+  }
+
+  getCommitsByRepository(commitList) {
+    let commitsByRepository = commitList.reduce(function(cbr, commit) {
+      let {repository} = commit;
+      if (!cbr.hasOwnProperty(repository.name)) {
+        cbr[repository.name] = [];
+      }
+
+      cbr[repository.name].push(commit);
+      return cbr;
+    }, {});
+    return commitsByRepository;
+  }
+
+  renderCommitsForRepo(repo, commitList) {
+    let commitsByRepository = this.getCommitsByRepository(commitList);
+    let activeCommits = commitsByRepository[repo];
+    return (
+      <div className="panel panel-default">
+        <div className="panel-heading panel-heading-bold">{repo}</div>
+        <ul className="list-group list-group-lg commit-list">
+          {activeCommits.map(commit => {
+            return <CommitRow key={commit.id} commit={commit} />;
+          })}
+        </ul>
+      </div>
+    );
+  }
+
+  renderBody() {
+    let {commitList, commitListPageLinks} = this.state;
+    if (!commitList.length) return this.emptyState();
+
+    let unreleasedCommits = [],
+      releasedCommits = [];
+    let marker = false;
+    commitList.forEach(commit => {
+      if (marker) {
+        releasedCommits.push(commit);
+      } else {
+        unreleasedCommits.push(commit);
+        if (commit.releases.length) marker = true;
+      }
+    });
+
+    return (
+      <div>
+        {unreleasedCommits.length && (
+          <div className="panel panel-default">
+            <div className="panel-heading panel-heading-bold">Unreleased</div>
+            <ul className="list-group list-group-lg commit-list">
+              {unreleasedCommits.map(commit => {
+                return <CommitRow key={commit.id} commit={commit} />;
+              })}
+            </ul>
+          </div>
+        )}
+        {releasedCommits.length &&
+          Object.keys(this.getCommitsByRepository(releasedCommits)).map(repository => {
+            return this.renderCommitsForRepo(repository, releasedCommits);
+          })}
+        {commitListPageLinks && (
+          <Pagination pageLinks={commitListPageLinks} {...this.props} />
+        )}
+      </div>
+    );
+  }
+
+  render() {
+    return (
+      <OrganizationHomeContainer>
+        <h4>{t('My Commits')}</h4>
+        {this.renderComponent()}
+      </OrganizationHomeContainer>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx b/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx
index ffb31e83c2..d50c767453 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx
@@ -84,11 +84,7 @@ const ReleaseCommits = createReactClass({
     let activeCommits = commitsByRepository[repo];
     return (
       <div className="panel panel-default">
-        <div className="panel-heading panel-heading-bold">
-          <div className="row">
-            <div className="col-xs-12">{repo}</div>
-          </div>
-        </div>
+        <div className="panel-heading panel-heading-bold">{repo}</div>
         <ul className="list-group list-group-lg commit-list">
           {activeCommits.map(commit => {
             return <CommitRow key={commit.id} commit={commit} />;
