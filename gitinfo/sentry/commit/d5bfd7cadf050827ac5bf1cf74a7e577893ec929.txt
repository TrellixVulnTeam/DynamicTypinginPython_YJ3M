commit d5bfd7cadf050827ac5bf1cf74a7e577893ec929
Author: Mark Story <mark@sentry.io>
Date:   Fri Apr 24 12:00:12 2020 -0400

    test(discover) Add an acceptance test for drilldowns (#18462)
    
    Drilldowns broke yesterday in a way that could not be captured in Jest.
    Having an acceptance test for this should help prevent regressions in
    the future.

diff --git a/src/sentry/static/sentry/app/components/gridEditable/index.tsx b/src/sentry/static/sentry/app/components/gridEditable/index.tsx
index 1f2ab39c8e..d728c7b279 100644
--- a/src/sentry/static/sentry/app/components/gridEditable/index.tsx
+++ b/src/sentry/static/sentry/app/components/gridEditable/index.tsx
@@ -492,7 +492,7 @@ class GridEditable<
         </Header>
 
         <Body>
-          <Grid ref={this.refGrid}>
+          <Grid data-test-id="grid-editable" ref={this.refGrid}>
             <GridHead>{this.renderGridHead()}</GridHead>
             <GridBody>{this.renderGridBody()}</GridBody>
           </Grid>
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
index 0e771eae6e..bb803f4179 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
@@ -290,7 +290,7 @@ function ExpandAggregateRow(props: {
     };
 
     return (
-      <Link to={target} onClick={handleClick}>
+      <Link data-test-id="expand-count" to={target} onClick={handleClick}>
         {children}
       </Link>
     );
@@ -310,7 +310,7 @@ function ExpandAggregateRow(props: {
     };
 
     return (
-      <Link to={target} onClick={handleClick}>
+      <Link data-test-id="expand-count-unique" to={target} onClick={handleClick}>
         {children}
       </Link>
     );
diff --git a/tests/acceptance/test_organization_events_v2.py b/tests/acceptance/test_organization_events_v2.py
index df0bb5b061..251a17d1c8 100644
--- a/tests/acceptance/test_organization_events_v2.py
+++ b/tests/acceptance/test_organization_events_v2.py
@@ -508,6 +508,45 @@ class OrganizationEventsV2Test(AcceptanceTestCase, SnubaTestCase):
         # Assert the new query exists and has 'copy' added to the name.
         assert DiscoverSavedQuery.objects.filter(name=duplicate_name).exists()
 
+    @patch("django.utils.timezone.now")
+    def test_drilldown_result(self, mock_now):
+        mock_now.return_value = before_now().replace(tzinfo=pytz.utc)
+        min_ago = iso_format(before_now(minutes=1))
+        events = (
+            ("a" * 32, "oh no", "group-1"),
+            ("b" * 32, "oh no", "group-1"),
+            ("c" * 32, "this is bad", "group-2"),
+        )
+        for event in events:
+            self.store_event(
+                data={
+                    "event_id": event[0],
+                    "message": event[1],
+                    "timestamp": min_ago,
+                    "fingerprint": [event[2]],
+                    "type": "error",
+                },
+                project_id=self.project.id,
+            )
+
+        query = {"field": ["message", "project", "count()"], "query": "event.type:error"}
+        with self.feature(FEATURE_NAMES):
+            # Go directly to the query builder view
+            self.browser.get(self.result_path + "?" + urlencode(query, doseq=True))
+            self.wait_until_loaded()
+
+            # Click the first drilldown
+            self.browser.element('[data-test-id="expand-count"]').click()
+            self.wait_until_loaded()
+
+            assert self.browser.element_exists_by_test_id("grid-editable"), "table should exist."
+            headers = self.browser.find_elements_by_css_selector(
+                '[data-test-id="grid-editable"] thead th'
+            )
+            expected = ["", "MESSAGE", "PROJECT", "ID"]
+            actual = [header.text for header in headers]
+            assert expected == actual
+
     @pytest.mark.skip(reason="not done")
     @patch("django.utils.timezone.now")
     def test_usage(self, mock_now):
