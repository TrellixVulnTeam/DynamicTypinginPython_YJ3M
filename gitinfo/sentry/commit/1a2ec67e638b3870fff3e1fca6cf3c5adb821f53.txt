commit 1a2ec67e638b3870fff3e1fca6cf3c5adb821f53
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Jan 5 14:17:07 2018 -0800

    feat(ui): Add prop to formfield for non-inline (#6894)

diff --git a/docs-ui/components/form.stories.js b/docs-ui/components/form.stories.js
index 334a95c869..706d9dfd86 100644
--- a/docs-ui/components/form.stories.js
+++ b/docs-ui/components/form.stories.js
@@ -11,7 +11,9 @@ import {
   BooleanField,
 } from 'sentry-ui/forms';
 import RadioField from 'settings-ui/forms/radioField';
+import RadioGroup from 'settings-ui/forms/radioGroup';
 import Form from 'settings-ui/forms/form';
+import FormField from 'settings-ui/forms/formField';
 
 class UndoButton extends React.Component {
   static contextTypes = {
@@ -103,4 +105,25 @@ storiesOf('Forms/Fields', module)
         />
       </Form>
     ))
+  )
+  .add(
+    'Non-inline field',
+    withInfo('Radio field')(() => (
+      <Form>
+        <FormField name="radio" label="Radio Field" inline={false}>
+          {({value, label, onChange}) => (
+            <RadioGroup
+              onChange={onChange}
+              label={label}
+              value={value}
+              choices={[
+                ['choice_one', 'Choice One'],
+                ['choice_two', 'Choice Two'],
+                ['choice_three', 'Choice Three'],
+              ]}
+            />
+          )}
+        </FormField>
+      </Form>
+    ))
   );
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/formField/formFieldDescription.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/formField/formFieldDescription.jsx
index fb5767538a..10fb923e85 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/formField/formFieldDescription.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/formField/formFieldDescription.jsx
@@ -1,10 +1,16 @@
-import styled from 'react-emotion';
 import {Box} from 'grid-emotion';
+import React from 'react';
+import styled from 'react-emotion';
 
-const FormFieldDescription = styled(Box)`
+const FormFieldDescription = styled(({inline, ...props}) => <Box {...props} />)`
+  ${p =>
+    p.inline
+      ? `
   width: 50%;
   padding-right: 10px;
   flex-shrink: 0;
+  `
+      : 'margin-bottom: 10px;'};
 `;
 
 export default FormFieldDescription;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/formField/formFieldWrapper.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/formField/formFieldWrapper.jsx
index 07220b037b..af889bb8b2 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/formField/formFieldWrapper.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/formField/formFieldWrapper.jsx
@@ -5,13 +5,20 @@ import {Flex} from 'grid-emotion';
 import SettingsInputField from '../styled/input';
 import SettingsTextAreaField from '../styled/textarea';
 
-const FormFieldWrapper = styled(({highlighted, ...props}) => <Flex {...props} />)`
+const FormFieldWrapper = styled(({highlighted, inline, ...props}) => <Flex {...props} />)`
   padding: 15px 0 15px 20px;
   border-bottom: 1px solid ${p => p.theme.borderLight};
-  align-items: center;
   transition: background 0.15s;
 
-  &:hover {
+  ${p =>
+    p.inline
+      ? `
+  align-items: center;
+  `
+      : `
+  flex-direction: column;
+  align-items: stretch;
+  `} &:hover {
     ${SettingsInputField}, ${SettingsTextAreaField} {
       ${p => css`
         background: ${p.error ? '#fff' : p.theme.offWhite};
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
index 044e8ae410..5103c4ab0c 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
@@ -22,8 +22,7 @@ import Spinner from '../styled/spinner';
 // * can NOT be a flex box have because of position: absolute on "control error message"
 // * can NOT have overflow hidden because "control error message" overflows
 const FormFieldControlErrorWrapper = styled(Box)`
-  width: 50%;
-  padding-left: 10px;
+  ${p => (p.inline ? 'width: 50%; padding-left: 10px;' : '')};
 `;
 
 const FormFieldControlWrapper = styled(Flex)`
@@ -94,6 +93,11 @@ class FormField extends React.Component {
     hideErrorMessage: PropTypes.bool,
     highlighted: PropTypes.bool,
 
+    /**
+     * Should control be inline with field label
+     */
+    inline: PropTypes.bool,
+
     // the following should only be used without form context
     onChange: PropTypes.func,
     onBlur: PropTypes.func,
@@ -106,6 +110,7 @@ class FormField extends React.Component {
 
   static defaultProps = {
     hideErrorMessage: false,
+    inline: true,
     disabled: false,
     required: false,
   };
@@ -213,6 +218,7 @@ class FormField extends React.Component {
       highlighted,
       required,
       label,
+      inline,
       disabled,
       disabledReason,
       hideErrorMessage,
@@ -223,8 +229,8 @@ class FormField extends React.Component {
     let isDisabled = typeof disabled === 'function' ? disabled(this.props) : disabled;
 
     return (
-      <FormFieldWrapper highlighted={highlighted}>
-        <FormFieldDescription>
+      <FormFieldWrapper inline={inline} highlighted={highlighted}>
+        <FormFieldDescription inline={inline}>
           {label && (
             <FormFieldLabel>
               {label} {required && <FormFieldRequiredBadge />}
@@ -233,7 +239,7 @@ class FormField extends React.Component {
           {help && <FormFieldHelp>{help}</FormFieldHelp>}
         </FormFieldDescription>
 
-        <FormFieldControlErrorWrapper>
+        <FormFieldControlErrorWrapper inline={inline}>
           <FormFieldControlWrapper shrink="0">
             <FormFieldControl flex="1">
               <Observer>
