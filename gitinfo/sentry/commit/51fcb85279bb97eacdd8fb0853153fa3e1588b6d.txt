commit 51fcb85279bb97eacdd8fb0853153fa3e1588b6d
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Nov 1 22:28:37 2014 -0700

    Migrate create team tests/template

diff --git a/src/sentry/templates/sentry/teams/new.html b/src/sentry/templates/sentry/create-team.html
similarity index 100%
rename from src/sentry/templates/sentry/teams/new.html
rename to src/sentry/templates/sentry/create-team.html
diff --git a/src/sentry/web/frontend/create_team.py b/src/sentry/web/frontend/create_team.py
index da26e8d954..b636acdfec 100644
--- a/src/sentry/web/frontend/create_team.py
+++ b/src/sentry/web/frontend/create_team.py
@@ -36,7 +36,7 @@ class CreateTeamView(OrganizationView):
             'form': form,
         }
 
-        return self.respond('sentry/teams/new.html', context)
+        return self.respond('sentry/create-team.html', context)
 
     def post(self, request, organization):
         if not can_create_teams(request.user):
@@ -54,4 +54,4 @@ class CreateTeamView(OrganizationView):
             'form': form,
         }
 
-        return self.respond('sentry/teams/new.html', context)
+        return self.respond('sentry/create-team.html', context)
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index 181f0baa59..65f5bee5f8 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -33,67 +33,6 @@ class BaseTeamTest(TestCase):
         self.login_as(self.user)
 
 
-class NewTeamTest(BaseTeamTest):
-    @fixture
-    def path(self):
-        return reverse('sentry-new-team')
-
-    @mock.patch('sentry.web.frontend.teams.can_create_teams', mock.Mock(return_value=False))
-    def test_missing_permission(self):
-        resp = self.client.post(self.path)
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/generic_error.html')
-
-    @mock.patch('sentry.web.frontend.teams.can_create_teams', mock.Mock(return_value=True))
-    def test_missing_params(self):
-        resp = self.client.post(self.path)
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/teams/new.html')
-
-    @mock.patch('sentry.web.frontend.teams.can_create_teams', mock.Mock(return_value=True))
-    def test_valid_params(self):
-        resp = self.client.post(self.path, {
-            'name': 'Test Team',
-            'slug': 'test-team',
-            'owner': self.user.username,
-        })
-        self.assertEquals(resp.status_code, 302)
-        path = reverse('sentry-new-project', args=['test-team'])
-        self.assertEquals(resp['Location'], 'http://testserver%s' % (path,))
-
-        team = Team.objects.filter(name='Test Team')
-        self.assertTrue(team.exists())
-        team = team.get()
-
-        self.assertEquals(team.owner, self.user)
-
-        member_set = list(team.member_set.all())
-
-        self.assertEquals(len(member_set), 1)
-        member = member_set[0]
-        self.assertEquals(member.user, self.user)
-        self.assertEquals(member.type, MEMBER_OWNER)
-
-    @mock.patch('sentry.web.frontend.teams.can_create_teams', mock.Mock(return_value=True))
-    def test_superuser_can_set_owner(self):
-        resp = self.client.post(self.path, {
-            'name': 'Test Team',
-            'slug': 'test',
-            'owner': self.user2.username,
-        })
-        self.assertNotEquals(resp.status_code, 200)
-
-        team = Team.objects.get(name='Test Team')
-        self.assertEquals(team.owner, self.user2)
-
-        member_set = list(team.member_set.all())
-
-        self.assertEquals(len(member_set), 1)
-        member = member_set[0]
-        self.assertEquals(member.user, self.user2)
-        self.assertEquals(member.type, MEMBER_OWNER)
-
-
 class RemoveTeamTest(BaseTeamTest):
     @fixture
     def path(self):
diff --git a/tests/sentry/web/frontend/test_create_team.py b/tests/sentry/web/frontend/test_create_team.py
new file mode 100644
index 0000000000..9151260978
--- /dev/null
+++ b/tests/sentry/web/frontend/test_create_team.py
@@ -0,0 +1,34 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import Team
+from sentry.testutils import TestCase
+
+
+class CreateTeamTest(TestCase):
+    def test_renders_with_context(self):
+        organization = self.create_organization()
+        path = reverse('sentry-new-team', args=[organization.id])
+        self.login_as(self.user)
+        resp = self.client.get(path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/create-team.html')
+        assert resp.context['organization'] == organization
+        assert resp.context['form']
+
+    def test_valid_params(self):
+        organization = self.create_organization()
+        path = reverse('sentry-new-team', args=[organization.id])
+        self.login_as(self.user)
+        resp = self.client.post(path, {
+            'name': 'bar',
+        })
+        assert resp.status_code == 302
+
+        team = Team.objects.get(organization=organization, name='bar')
+
+        assert team.name == 'bar'
+
+        redirect_uri = reverse('sentry-new-project', args=[team.slug])
+        assert resp['Location'] == 'http://testserver' + redirect_uri
