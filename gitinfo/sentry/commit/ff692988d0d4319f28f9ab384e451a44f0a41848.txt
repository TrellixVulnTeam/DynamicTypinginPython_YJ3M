commit ff692988d0d4319f28f9ab384e451a44f0a41848
Author: Dora <dora.l.chan@gmail.com>
Date:   Wed Dec 11 10:32:15 2019 -0800

    feat(discv2): fixing padding regrets (#16052)
    
    * padding regrets
    
    * remove unneeded spans
    
    * remove excess alignment
    
    * added dot

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
index 432b92fc50..5a8ffac9d9 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
@@ -346,16 +346,7 @@ class SpanBar extends React.Component<SpanBarProps, SpanBarState> {
       );
     }
 
-    const chevronElement = !isRoot ? (
-      <div
-        style={{
-          width: '5px',
-          textAlign: 'right',
-        }}
-      >
-        {chevron}
-      </div>
-    ) : null;
+    const chevronElement = !isRoot ? <div>{chevron}</div> : null;
 
     return (
       <SpanTreeTogglerContainer style={{left: `${left}px`}} hasToggler>
@@ -373,9 +364,7 @@ class SpanBar extends React.Component<SpanBarProps, SpanBarState> {
             this.props.toggleSpanTree();
           }}
         >
-          <span style={{textAlign: 'center'}}>
-            <Count value={numOfSpanChildren} />
-          </span>
+          <Count value={numOfSpanChildren} />
           {chevronElement}
         </SpanTreeToggler>
       </SpanTreeTogglerContainer>
@@ -672,7 +661,7 @@ class SpanBar extends React.Component<SpanBarProps, SpanBarState> {
 
     return (
       <Tooltip title={warningText}>
-        <WarningIcon src="icon-circle-info" />
+        <WarningIcon src="icon-circle-exclamation" />
       </Tooltip>
     );
   };
@@ -865,14 +854,14 @@ const SpanTreeTogglerContainer = styled('div')<TogglerTypes>`
   height: 16px;
   width: ${p => (p.hasToggler ? '40px' : '12px')};
   min-width: ${p => (p.hasToggler ? '40px' : '12px')};
-  margin-right: ${p => (p.hasToggler ? space(0.75) : space(1.5))};
+  margin-right: ${p => (p.hasToggler ? space(0.5) : space(1))};
   z-index: ${zIndex.spanTreeToggler};
   display: flex;
   justify-content: flex-end;
 `;
 
 const SpanTreeConnector = styled('div')<TogglerTypes>`
-  height: ${p => (p.isLast ? '75%' : '160%')};
+  height: ${p => (p.isLast ? '80%' : '160%')};
   width: 100%;
   border-left: 1px solid ${p => p.theme.gray1};
   position: absolute;
@@ -886,6 +875,17 @@ const SpanTreeConnector = styled('div')<TogglerTypes>`
     position: absolute;
     bottom: ${p => (p.isLast ? '0' : '50%')};
   }
+
+  &:after {
+    content: '';
+    background-color: ${p => p.theme.gray1};
+    border-radius: 4px;
+    height: 3px;
+    width: 3px;
+    position: absolute;
+    right: 0;
+    top: 11px;
+  }
 `;
 
 const ConnectorBar = styled('div')`
@@ -929,7 +929,7 @@ type SpanTreeTogglerAndDivProps = OmitHtmlDivProps<{
 
 const SpanTreeToggler = styled('div')<SpanTreeTogglerAndDivProps>`
   white-space: nowrap;
-  min-width: 32px;
+  min-width: 30px;
   display: flex;
   align-items: center;
   justify-content: center;
@@ -976,16 +976,15 @@ const DurationPill = styled('div')<{durationDisplay: DurationDisplay}>`
 const SpanBarRectangle = styled('div')`
   position: relative;
   height: 100%;
-
   min-width: 1px;
   user-select: none;
-
   transition: border-color 0.15s ease-in-out;
   border-right: 1px solid rgba(0, 0, 0, 0);
 `;
 
 const WarningIcon = styled(InlineSvg)`
   margin-left: ${space(0.25)};
+  margin-bottom: ${space(0.25)};
 `;
 
 const Chevron = styled(InlineSvg)`
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
index 25a7bde9a4..54e79702bd 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
@@ -176,11 +176,9 @@ class SpanDetail extends React.Component<Props, State> {
     };
 
     return (
-      <div>
-        <Button size="xsmall" to={to}>
-          {t('Search by Trace')}
-        </Button>
-      </div>
+      <StyledButton size="xsmall" to={to}>
+        {t('Search by Trace')}
+      </StyledButton>
     );
   }
 
@@ -244,6 +242,12 @@ class SpanDetail extends React.Component<Props, State> {
   }
 }
 
+const StyledButton = styled(Button)`
+  position: absolute;
+  top: ${space(0.75)};
+  right: ${space(0.5)};
+`;
+
 const SpanDetailContainer = styled('div')`
   border-bottom: 1px solid ${p => p.theme.gray1};
   padding: ${space(2)};
@@ -251,13 +255,7 @@ const SpanDetailContainer = styled('div')`
 `;
 
 const ValueTd = styled('td')`
-  display: flex !important;
-  max-width: 100% !important;
-  align-items: center;
-`;
-
-const PreValue = styled('pre')`
-  flex: 1;
+  position: relative;
 `;
 
 const Row = ({
@@ -279,9 +277,9 @@ const Row = ({
     <tr>
       <td className="key">{title}</td>
       <ValueTd className="value">
-        <PreValue className="val">
+        <pre className="val">
           <span className="val-string">{children}</span>
-        </PreValue>
+        </pre>
         {extra}
       </ValueTd>
     </tr>
