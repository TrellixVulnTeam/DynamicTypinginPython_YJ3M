commit 3acd82396359dc1dd7d7098cf212edcb40e8e2d6
Author: Jess MacQueen <jess@getsentry.com>
Date:   Mon Jun 26 15:39:16 2017 -0700

    add ability to discard issue from issue details page

diff --git a/src/sentry/static/sentry/app/actions/groupActions.jsx b/src/sentry/static/sentry/app/actions/groupActions.jsx
index ebe08a0514..07d71b8ad8 100644
--- a/src/sentry/static/sentry/app/actions/groupActions.jsx
+++ b/src/sentry/static/sentry/app/actions/groupActions.jsx
@@ -9,6 +9,9 @@ let GroupActions = Reflux.createActions([
   'delete',
   'deleteError',
   'deleteSuccess',
+  'discard',
+  'discardError',
+  'discardSuccess',
   'update',
   'updateError',
   'updateSuccess',
diff --git a/src/sentry/static/sentry/app/stores/groupStore.jsx b/src/sentry/static/sentry/app/stores/groupStore.jsx
index 928782c36a..25f66a1377 100644
--- a/src/sentry/static/sentry/app/stores/groupStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupStore.jsx
@@ -260,6 +260,25 @@ const GroupStore = Reflux.createStore({
     this.trigger(new Set(itemIds));
   },
 
+  onDiscard(changeId, itemId) {
+    this.addStatus(itemId, 'discard');
+    this.trigger(new Set([itemId]));
+  },
+
+  onDiscardError(changeId, itemId, response) {
+    this.clearStatus(itemId, 'discard');
+    showAlert(t('Unable to discard event. Please try again.'), 'error');
+    this.trigger(new Set([itemId]));
+  },
+
+  onDiscardSuccess(changeId, itemId, response) {
+    delete this.statuses[itemId];
+    this.clearStatus(itemId, 'discard');
+    this.items = this.items.filter(item => item.id !== itemId);
+    showAlert(t('Similar events will be filtered and discarded.'), 'success');
+    this.trigger(new Set([itemId]));
+  },
+
   onMerge(changeId, itemIds) {
     itemIds = this._itemIdsOrAll(itemIds);
 
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 130fcff358..d068e34a2e 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -6,6 +6,7 @@ import CustomIgnoreDurationModal from '../../components/customIgnoreDurationModa
 import CustomResolutionModal from '../../components/customResolutionModal';
 import DropdownLink from '../../components/dropdownLink';
 import Duration from '../../components/duration';
+import GroupActions from '../../actions/groupActions';
 import GroupState from '../../mixins/groupState';
 import IndicatorStore from '../../stores/indicatorStore';
 import IssuePluginActions from '../../components/group/issuePluginActions';
@@ -414,6 +415,31 @@ export default React.createClass({
     this.onUpdate({isBookmarked: !this.getGroup().isBookmarked});
   },
 
+  onDiscard() {
+    let group = this.getGroup();
+    let project = this.getProject();
+    let org = this.getOrganization();
+    let id = this.api.uniqueId();
+    let loadingIndicator = IndicatorStore.add(t('Discarding event..'));
+
+    GroupActions.discard(id, group.id);
+
+    this.api.request(`/issues/${group.id}/`, {
+      method: 'PUT',
+      data: {discard: true},
+      success: response => {
+        GroupActions.discardSuccess(id, group.id, response);
+        browserHistory.pushState(null, `/${org.slug}/${project.slug}/`);
+      },
+      error: error => {
+        GroupActions.discardError(id, group.id, error);
+      },
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
+      }
+    });
+  },
+
   render() {
     let group = this.getGroup();
     let project = this.getProject();
@@ -459,6 +485,21 @@ export default React.createClass({
             <span className="icon-trash" />
           </LinkWithConfirmation>
         </div>
+        <div className="btn-group">
+          {/* TODO(jess): we need an icon for discard. Maybe an octogon/stop-sign like icon? */}
+          <LinkWithConfirmation
+            className="group-remove btn btn-default btn-sm"
+            title={t('Discard')}
+            message={t(
+              'Discarding this event will result in the deletion ' +
+                'of most data associated with this issue and future ' +
+                'events being discarded before reaching your stream. ' +
+                'Are you sure you wish to continue?'
+            )}
+            onConfirm={this.onDiscard}>
+            <span className="icon-stop">X</span>
+          </LinkWithConfirmation>
+        </div>
         {group.pluginActions.length > 1
           ? <div className="btn-group more">
               <DropdownLink className="btn btn-default btn-sm" title={t('More')}>
