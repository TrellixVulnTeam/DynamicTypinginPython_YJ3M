commit 7a34fff7442c30564d45785ff81fff6323779b13
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Sep 7 12:29:32 2018 -0700

    feat(discover): Handle equality conditions on array fields (#9648)
    
    Use has() function when performing equality conditions on array fields

diff --git a/src/sentry/api/endpoints/organization_discover.py b/src/sentry/api/endpoints/organization_discover.py
index a968ce45c8..9b82d91f67 100644
--- a/src/sentry/api/endpoints/organization_discover.py
+++ b/src/sentry/api/endpoints/organization_discover.py
@@ -1,6 +1,9 @@
 from __future__ import absolute_import
 
 import re
+
+import six
+
 from rest_framework import serializers
 from rest_framework.response import Response
 from rest_framework.exceptions import PermissionDenied
@@ -57,6 +60,23 @@ class DiscoverSerializer(serializers.Serializer):
         self.member = OrganizationMember.objects.get(
             user=self.context['user'], organization=self.context['organization'])
 
+        fields = kwargs['data'].get('fields') or []
+
+        match = next(
+            (
+                self.get_array_field(field).group(1)
+                for field
+                in fields
+                if self.get_array_field(field) is not None
+            ),
+            None
+        )
+        self.arrayjoin = match if match else None
+
+    def validate(self, data):
+        data['arrayjoin'] = self.arrayjoin
+        return data
+
     def validate_projects(self, attrs, source):
         organization = self.context['organization']
         member = self.member
@@ -73,24 +93,33 @@ class DiscoverSerializer(serializers.Serializer):
 
         return attrs
 
-    def validate_fields(self, attrs, source):
-        # If we're including exception_stacks.* or exception_frames.* fields
-        # then add arrayjoin value so this gets returned as strings
+    def validate_conditions(self, attrs, source):
+        # Handle exception_stacks, exception_frames
+        if attrs.get(source):
+            conditions = [self.get_condition(condition) for condition in attrs[source]]
+            attrs[source] = conditions
+        return attrs
+
+    def get_array_field(self, field):
         pattern = r"^(exception_stacks|exception_frames)\..+"
-        match = next(
-            (
-                re.search(pattern, field).group(1)
-                for field
-                in attrs.get(source, [])
-                if re.match(pattern, field)
-            ),
-            None
-        )
+        return re.search(pattern, field)
 
-        if match:
-            attrs['arrayjoin'] = match
+    def get_condition(self, condition):
+        array_field = self.get_array_field(condition[0])
+        has_equality_operator = condition[1] in ('=', '!=')
 
-        return attrs
+        # Apply has function to any array field if it's = / != and not part of arrayjoin
+        if array_field and has_equality_operator and (array_field.group(1) != self.arrayjoin):
+            value = condition[2]
+
+            if (isinstance(value, six.string_types)):
+                value = u"'{}'".format(value)
+
+            bool_value = 1 if condition[1] == '=' else 0
+
+            return [['has', [array_field.group(0), value]], '=', bool_value]
+
+        return condition
 
     def has_projects_access(self, member, organization, requested_projects):
         has_global_access = roles.get(member.role).is_global
diff --git a/tests/snuba/test_organization_discover.py b/tests/snuba/test_organization_discover.py
index 242ee0cd85..7da5fda83b 100644
--- a/tests/snuba/test_organization_discover.py
+++ b/tests/snuba/test_organization_discover.py
@@ -91,3 +91,32 @@ class OrganizationDiscoverTest(APITestCase, SnubaTestCase):
         assert response.status_code == 200, response.content
         assert len(response.data['data']) == 1
         assert response.data['data'][0]['exception_stacks.type'] == 'ValidationError'
+
+    def test_array_condition_equals(self):
+        with self.feature('organizations:discover'):
+            url = reverse('sentry-api-0-organization-discover', args=[self.org.slug])
+            response = self.client.post(url, {
+                'projects': [self.project.id],
+                'conditions': [['exception_stacks.type', '=', 'ValidationError']],
+                'fields': ['message'],
+                'start': (datetime.now() - timedelta(seconds=10)).strftime('%Y-%m-%dT%H:%M:%S'),
+                'end': (datetime.now() + timedelta(seconds=10)).strftime('%Y-%m-%dT%H:%M:%S'),
+                'orderby': '-timestamp',
+            })
+        assert response.status_code == 200, response.content
+        assert len(response.data['data']) == 1
+
+    def test_array_condition_not_equals(self):
+        with self.feature('organizations:discover'):
+            url = reverse('sentry-api-0-organization-discover', args=[self.org.slug])
+            response = self.client.post(url, {
+                'projects': [self.project.id],
+                'conditions': [['exception_stacks.type', '!=', 'ValidationError']],
+                'fields': ['message'],
+                'start': (datetime.now() - timedelta(seconds=10)).strftime('%Y-%m-%dT%H:%M:%S'),
+                'end': (datetime.now() + timedelta(seconds=10)).strftime('%Y-%m-%dT%H:%M:%S'),
+                'orderby': '-timestamp',
+            })
+
+        assert response.status_code == 200, response.content
+        assert len(response.data['data']) == 0
