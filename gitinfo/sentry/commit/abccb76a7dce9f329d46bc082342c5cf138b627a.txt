commit abccb76a7dce9f329d46bc082342c5cf138b627a
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jan 3 10:45:45 2015 -0800

    Correct handling of legacy attributes (fixes GH-1367)

diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index cf8a92ed70..b27715717c 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -164,6 +164,12 @@ class Event(Model):
 
     tags = property(get_tags)
 
+    def get_tag(self, key):
+        for t, v in (self.data.get('tags') or ()):
+            if t == key:
+                return v
+        return None
+
     def as_dict(self):
         # We use a SortedDict to keep elements ordered for a potential JSON serializer
         data = SortedDict()
@@ -201,20 +207,20 @@ class Event(Model):
     def logger(self):
         warnings.warn('Event.logger is deprecated. Use Event.tags instead.',
                       DeprecationWarning)
-        return self.tags.get('logger')
+        return self.get_tag('logger')
 
     @property
     def site(self):
         warnings.warn('Event.site is deprecated. Use Event.tags instead.',
                       DeprecationWarning)
-        return self.tags.get('site')
+        return self.get_tag('site')
 
     @property
     def server_name(self):
         warnings.warn('Event.server_name is deprecated. Use Event.tags instead.')
-        return self.tags.get('server_name')
+        return self.get_tag('server_name')
 
     @property
     def culprit(self):
-        warnings.warn('Event.culprit is deprecated. Use Event.tags instead.')
-        return self.tags.get('culprit')
+        warnings.warn('Event.culprit is deprecated. Use Group.culprit instead.')
+        return self.group.culprit
diff --git a/tests/sentry/models/test_event.py b/tests/sentry/models/test_event.py
new file mode 100644
index 0000000000..f8e4998218
--- /dev/null
+++ b/tests/sentry/models/test_event.py
@@ -0,0 +1,19 @@
+from __future__ import absolute_import
+
+from sentry.testutils import TestCase
+
+
+class EventTest(TestCase):
+    def test_legacy_tags(self):
+        event = self.create_event(data={
+            'tags': [
+                ('logger', 'foobar'),
+                ('site', 'foo'),
+                ('server_name', 'bar'),
+            ]
+        })
+        assert event.logger == 'foobar'
+        assert event.level == event.group.level
+        assert event.site == 'foo'
+        assert event.server_name == 'bar'
+        assert event.culprit == event.group.culprit
