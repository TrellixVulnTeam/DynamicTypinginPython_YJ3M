commit 61ecd9b63e15a63e83115bf13abf3a418d046689
Author: NisanthanNanthakumar <nisanthan.nanthakumar@sentry.io>
Date:   Thu Jan 16 15:55:43 2020 -0800

    fix: Fallback images for installed integrations (#16493)

diff --git a/src/sentry/static/sentry/app/plugins/components/pluginIcon.tsx b/src/sentry/static/sentry/app/plugins/components/pluginIcon.tsx
index 0463cd8f6e..d9d8b95d0d 100644
--- a/src/sentry/static/sentry/app/plugins/components/pluginIcon.tsx
+++ b/src/sentry/static/sentry/app/plugins/components/pluginIcon.tsx
@@ -34,7 +34,7 @@ import vsts from 'app/../images/logos/logo-azure.svg';
 import youtrack from 'app/../images/logos/logo-youtrack.svg';
 
 // Map of plugin id -> logo filename
-const DEFAULT_ICON = placeholder;
+export const DEFAULT_ICON = placeholder;
 export const ICON_PATHS = {
   _default: DEFAULT_ICON,
   sentry,
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationIcon.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationIcon.tsx
index c50e00c2d7..62f310c849 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationIcon.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationIcon.tsx
@@ -2,7 +2,7 @@ import React from 'react';
 import styled from '@emotion/styled';
 import PropTypes from 'prop-types';
 
-import PluginIcon from 'app/plugins/components/pluginIcon';
+import PluginIcon, {ICON_PATHS, DEFAULT_ICON} from 'app/plugins/components/pluginIcon';
 import {Integration} from 'app/types';
 
 type Props = {
@@ -12,16 +12,36 @@ type Props = {
 
 type IconProps = Pick<Props, 'size'>;
 
-const Icon = styled('img')<IconProps>`
+const StyledIcon = styled('img')<IconProps>`
   height: ${p => p.size}px;
   width: ${p => p.size}px;
   border-radius: 2px;
   display: block;
 `;
 
+class Icon extends React.Component<Props> {
+  state = {
+    imgSrc: this.props.integration.icon,
+  };
+
+  render() {
+    const {integration, size} = this.props;
+
+    return (
+      <StyledIcon
+        size={size}
+        src={this.state.imgSrc}
+        onError={() => {
+          this.setState({imgSrc: ICON_PATHS[integration.provider.key] || DEFAULT_ICON});
+        }}
+      />
+    );
+  }
+}
+
 const IntegrationIcon = ({integration, size}: Props) =>
   integration.icon ? (
-    <Icon size={size} src={integration.icon} />
+    <Icon size={size} integration={integration} />
   ) : (
     <PluginIcon size={size} pluginId={integration.provider.key} />
   );
