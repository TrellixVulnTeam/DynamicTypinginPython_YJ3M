commit 17dc7cbcb394d5a09796c90687bfc9225d9b2e56
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 5 15:25:30 2020 -0800

    feat: Embed rrweb player with attachment

diff --git a/package.json b/package.json
index bc0e5a5737..90cad37e64 100644
--- a/package.json
+++ b/package.json
@@ -113,6 +113,7 @@
     "reflexbox": "^4.0.6",
     "reflux": "0.4.1",
     "regenerator-runtime": "^0.13.3",
+    "rrweb-player": "^0.4.0",
     "scroll-to-element": "^2.0.0",
     "sentry-dreamy-components": "^2.0.1",
     "sprintf-js": "1.0.3",
diff --git a/src/sentry/api/endpoints/event_attachments.py b/src/sentry/api/endpoints/event_attachments.py
index 744e9820e0..4d64d5da95 100644
--- a/src/sentry/api/endpoints/event_attachments.py
+++ b/src/sentry/api/endpoints/event_attachments.py
@@ -1,10 +1,13 @@
 from __future__ import absolute_import
 
+import six
+
 from sentry import eventstore, features
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.models import EventAttachment
+from sentry.search.utils import tokenize_query
 
 
 class EventAttachmentsEndpoint(ProjectEndpoint):
@@ -33,6 +36,16 @@ class EventAttachmentsEndpoint(ProjectEndpoint):
             project_id=project.id, event_id=event.event_id
         ).select_related("file")
 
+        query = request.GET.get("query")
+        if query:
+            tokens = tokenize_query(query)
+            for key, value in six.iteritems(tokens):
+                if key == "query":
+                    value = " ".join(value)
+                    queryset = queryset.filter(name__icontains=value)
+                else:
+                    queryset = queryset.none()
+
         return self.paginate(
             request=request,
             queryset=queryset,
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index a18bd3b459..127f1c17bf 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -28,6 +28,7 @@ import ExceptionInterface from 'app/components/events/interfaces/exception';
 import GenericInterface from 'app/components/events/interfaces/generic';
 import MessageInterface from 'app/components/events/interfaces/message';
 import RequestInterface from 'app/components/events/interfaces/request';
+import RRWebIntegration from 'app/components/events/rrwebIntegration';
 import SentryTypes from 'app/sentryTypes';
 import SpansInterface from 'app/components/events/interfaces/spans';
 import StacktraceInterface from 'app/components/events/interfaces/stacktrace';
@@ -204,6 +205,9 @@ class EventEntries extends React.Component {
           projectId={project.slug}
           location={location}
         />
+        {!isShare && features.has('event-attachments') && (
+          <RRWebIntegration event={event} orgId={orgId} projectId={project.slug} />
+        )}
         {this.renderEntries()}
         {hasContext && <EventContexts group={group} event={event} />}
         {!objectIsEmpty(event.context) && <EventExtraData event={event} />}
diff --git a/src/sentry/static/sentry/app/components/events/rrwebIntegration.jsx b/src/sentry/static/sentry/app/components/events/rrwebIntegration.jsx
new file mode 100644
index 0000000000..2c8fe030f9
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/rrwebIntegration.jsx
@@ -0,0 +1,65 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import AsyncComponent from 'app/components/asyncComponent';
+import {Panel, PanelBody, PanelItem} from 'app/components/panels';
+import {t} from 'app/locale';
+import LazyLoad from 'app/components/lazyLoad';
+
+export default class RRWebIntegration extends AsyncComponent {
+  static propTypes = {
+    ...AsyncComponent.propTypes,
+    event: PropTypes.object.isRequired,
+    orgId: PropTypes.string.isRequired,
+    projectId: PropTypes.string.isRequired,
+  };
+
+  getEndpoints() {
+    const {orgId, projectId, event} = this.props;
+    return [
+      [
+        'attachmentList',
+        `/projects/${orgId}/${projectId}/events/${event.id}/attachments/`,
+        {query: {query: 'rrweb.json'}},
+      ],
+    ];
+  }
+
+  renderLoading() {
+    // hide loading indicator
+    return null;
+  }
+
+  renderBody() {
+    const {attachmentList} = this.state;
+    if (!attachmentList.length) {
+      return null;
+    }
+
+    const attachment = attachmentList[0];
+    const {orgId, projectId, event} = this.props;
+    const url = `/api/0/projects/${orgId}/${projectId}/events/${event.id}/attachments/${attachment.id}/?download`;
+
+    return (
+      <div className="box">
+        <div className="box-header">
+          <h3>{t('Replay')}</h3>
+          <Panel>
+            <PanelBody>
+              <PanelItem>
+                <LazyLoad
+                  component={() =>
+                    import(
+                      /* webpackChunkName: "rrwebReplayer" */ './rrwebReplayer'
+                    ).then(mod => mod.default)
+                  }
+                  url={url}
+                />
+              </PanelItem>
+            </PanelBody>
+          </Panel>
+        </div>
+      </div>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/events/rrwebReplayer.jsx b/src/sentry/static/sentry/app/components/events/rrwebReplayer.jsx
new file mode 100644
index 0000000000..551f059c7d
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/rrwebReplayer.jsx
@@ -0,0 +1,29 @@
+import React, {Component} from 'react';
+import PropTypes from 'prop-types';
+
+import 'rrweb-player/dist/style.css';
+import rrwebPlayer from 'rrweb-player';
+
+export default class RRWebReplayer extends Component {
+  static propTypes = {
+    url: PropTypes.string.isRequired,
+  };
+
+  async componentDidMount() {
+    const resp = await fetch(this.props.url);
+    const payload = await resp.json();
+    const _ = new rrwebPlayer({
+      target: this.ref.current,
+      autoplay: false,
+      data: {
+        ...payload,
+      },
+    });
+  }
+
+  ref = React.createRef();
+
+  render() {
+    return <div ref={this.ref} />;
+  }
+}
diff --git a/yarn.lock b/yarn.lock
index cf3d2dd05f..5f90e9c50f 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -2496,6 +2496,11 @@
   resolved "https://registry.yarnpkg.com/@types/reflux/-/reflux-0.4.1.tgz#1f91d5ede2172c535107e9f79755bda70234f9c1"
   integrity sha1-H5HV7eIXLFNRB+n3l1W9pwI0+cE=
 
+"@types/smoothscroll-polyfill@^0.3.0":
+  version "0.3.1"
+  resolved "https://registry.yarnpkg.com/@types/smoothscroll-polyfill/-/smoothscroll-polyfill-0.3.1.tgz#77fb3a6e116bdab4a5959122e3b8e201224dcd49"
+  integrity sha512-+KkHw4y+EyeCtVXET7woHUhIbfWFCflc0E0mZnSV+ZdjPQeHt/9KPEuT7gSW/kFQ8O3EG30PLO++YhChDt8+Ag==
+
 "@types/source-list-map@*":
   version "0.1.2"
   resolved "https://registry.yarnpkg.com/@types/source-list-map/-/source-list-map-0.1.2.tgz#0078836063ffaf17412349bba364087e0ac02ec9"
@@ -9839,6 +9844,11 @@ mitt@1.1.2:
   resolved "https://registry.yarnpkg.com/mitt/-/mitt-1.1.2.tgz#380e61480d6a615b660f07abb60d51e0a4e4bed6"
   integrity sha1-OA5hSA1qYVtmDwertg1R4KTkvtY=
 
+mitt@^1.1.3:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/mitt/-/mitt-1.2.0.tgz#cb24e6569c806e31bd4e3995787fe38a04fdf90d"
+  integrity sha512-r6lj77KlwqLhIUku9UWYes7KJtsczvolZkzp8hbaDPPaE24OmWl5s539Mytlj22siEQKosZ26qCBgda2PKwoJw==
+
 mixin-deep@^1.2.0:
   version "1.3.2"
   resolved "https://registry.yarnpkg.com/mixin-deep/-/mixin-deep-1.3.2.tgz#1120b43dc359a785dce65b55b82e257ccf479566"
@@ -12965,6 +12975,28 @@ rollup-pluginutils@2.8.1:
   dependencies:
     estree-walker "^0.6.1"
 
+rrweb-player@^0.4.0:
+  version "0.4.0"
+  resolved "https://registry.yarnpkg.com/rrweb-player/-/rrweb-player-0.4.0.tgz#b55a2396525c6d6c50b2c45f2b69d905e51814c8"
+  integrity sha512-eC5vMZjdWOokrLUO3csU7TaztkiNodwyUiXmM8V6BlJCsEi/8vGnyidG5+js+YVY7JYIbsujiKo7AN2rlPGz/w==
+  dependencies:
+    rrweb "^0.7.25"
+
+rrweb-snapshot@^0.7.21:
+  version "0.7.24"
+  resolved "https://registry.yarnpkg.com/rrweb-snapshot/-/rrweb-snapshot-0.7.24.tgz#0e34330419b388b53ab1dfcf614dcc155b0fea17"
+  integrity sha512-eCrsJej/ohF0EQ8mFfgIVO+niKZ3kyVrFQwuL4IpRW+/aMNxaFk8wBgO4V9rkQhTSBMSHQnMPTZxEHh1MrtU3w==
+
+rrweb@^0.7.25:
+  version "0.7.27"
+  resolved "https://registry.yarnpkg.com/rrweb/-/rrweb-0.7.27.tgz#ae9d666594aaafd899085b8aefa9c616b83e378e"
+  integrity sha512-UvC1llhmrGmWw6wk2VbcQOtpw/snfCwlAt+Kq2+Jm2KU5sVAJTiGoz5uTKvwcub6wXfXTwjfZtsnB5uNVCG5qg==
+  dependencies:
+    "@types/smoothscroll-polyfill" "^0.3.0"
+    mitt "^1.1.3"
+    rrweb-snapshot "^0.7.21"
+    smoothscroll-polyfill "^0.4.3"
+
 rst-selector-parser@^2.2.3:
   version "2.2.3"
   resolved "https://registry.yarnpkg.com/rst-selector-parser/-/rst-selector-parser-2.2.3.tgz#81b230ea2fcc6066c89e3472de794285d9b03d91"
@@ -13346,6 +13378,11 @@ slice-ansi@^2.1.0:
     astral-regex "^1.0.0"
     is-fullwidth-code-point "^2.0.0"
 
+smoothscroll-polyfill@^0.4.3:
+  version "0.4.4"
+  resolved "https://registry.yarnpkg.com/smoothscroll-polyfill/-/smoothscroll-polyfill-0.4.4.tgz#3a259131dc6930e6ca80003e1cb03b603b69abf8"
+  integrity sha512-TK5ZA9U5RqCwMpfoMq/l1mrH0JAR7y7KRvOBx0n2869aLxch+gT9GhN3yUfjiw+d/DiF1mKo14+hd62JyMmoBg==
+
 snapdragon-node@^2.0.1:
   version "2.1.1"
   resolved "https://registry.yarnpkg.com/snapdragon-node/-/snapdragon-node-2.1.1.tgz#6c175f86ff14bdb0724563e8f3c1b021a286853b"
