commit 8de6dad31fcf474fac9b98e35f5293521628a8f9
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Thu Jul 26 17:13:56 2018 -0700

    feat(integrations): VSTS Status Sync Inbound (#8969)
    
    * started status sync.
    
    * first pass on inbound status methods
    
    * Added first thoughts to the inbound status
    
    * Revised status sync
    
    * Added settings and test changes
    
    * Added space back
    
    * Added a todo in vsts integration
    
    * Added changes to ensure it works ok.
    
    * Worked to simplify sync status changes.

diff --git a/src/sentry/integrations/vsts/client.py b/src/sentry/integrations/vsts/client.py
index 57548409bb..b90b71e6ef 100644
--- a/src/sentry/integrations/vsts/client.py
+++ b/src/sentry/integrations/vsts/client.py
@@ -20,14 +20,14 @@ class VstsApiPath(object):
     commits = u'https://{account_name}/DefaultCollection/_apis/git/repositories/{repo_id}/commits'
     commits_batch = u'https://{account_name}/DefaultCollection/_apis/git/repositories/{repo_id}/commitsBatch'
     commits_changes = u'https://{account_name}/DefaultCollection/_apis/git/repositories/{repo_id}/commits/{commit_id}/changes'
-    delete = 'https://{account_name}/_apis/hooks/subscriptions/{subscription_id}'
     projects = u'https://{account_name}/DefaultCollection/_apis/projects'
     repository = u'https://{account_name}/DefaultCollection/{project}_apis/git/repositories/{repo_id}'
     repositories = u'https://{account_name}/{project}/_apis/git/repositories'
+    subscription = 'https://{account_name}/_apis/hooks/subscriptions/{subscription_id}'
     subscriptions = u'https://{account_name}/_apis/hooks/subscriptions'
     work_items = u'https://{account_name}/DefaultCollection/_apis/wit/workitems/{id}'
     work_items_create = u'https://{account_name}/{project}/_apis/wit/workitems/${type}'
-    work_items_types_states = u'https://{account_name}/{project}/_apis/wit/workitemtypes/{type}/states'
+    work_item_states = u'https://{account_name}/{project}/_apis/wit/workitemtypes/{type}/states'
     users = u'https://{account_name}.vssps.visualstudio.com/_apis/graph/users'
 
 
@@ -142,13 +142,9 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
             ),
         )
 
-    def get_work_item_states(self, instance, project=None):
-        if project is None:
-            # TODO(lb): I'm pulling from the first project.
-            # Not sure what else to do here unless I can prompt the user
-            project = self.get_projects(instance)['value'][0]['id']
+    def get_work_item_states(self, instance, project):
         return self.get(
-            VstsApiPath.work_items_types_states.format(
+            VstsApiPath.work_item_states.format(
                 account_name=instance,
                 project=project,
                 # TODO(lb): might want to make this custom like jira at some point
@@ -264,7 +260,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
 
     def delete_subscription(self, instance, subscription_id):
         self.delete(
-            VstsApiPath.delete_url.format(
+            VstsApiPath.subscription.format(
                 account_name=instance,
                 subscription_id=subscription_id,
             )
diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index 73a16894d8..1f41802061 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -42,6 +42,12 @@ metadata = IntegrationMetadata(
 
 class VstsIntegration(Integration, RepositoryMixin, VstsIssueSync):
     logger = logging.getLogger('sentry.integrations')
+    # TODO(lb): improvised until form changes are finalized.
+    comment_key = 'sync_comments'
+    outbound_status_key = 'resolve_status'
+    inbound_status_key = 'resolve_when'
+    outbound_assignee_key = 'sync_forward_assignment'
+    inbound_assignee_key = 'sync_reverse_assignment'
 
     def __init__(self, *args, **kwargs):
         super(VstsIntegration, self).__init__(*args, **kwargs)
@@ -74,8 +80,10 @@ class VstsIntegration(Integration, RepositoryMixin, VstsIssueSync):
         instance = self.model.metadata['domain_name']
 
         try:
-            # NOTE(lb): vsts get workitem states does not give an id.
-            work_item_states = client.get_work_item_states(instance)['value']
+            # TODO(lb): this is clearly wrong. I'm just getting the first project.
+            # should be completely changed pending evan's changes?
+            project = client.get_projects(instance)['value'][0]['id']
+            work_item_states = client.get_work_item_states(instance, project)['value']
             statuses = [(c['name'], c['name']) for c in work_item_states]
             disabled = False
         except ApiError:
diff --git a/src/sentry/integrations/vsts/issues.py b/src/sentry/integrations/vsts/issues.py
index deea9ada22..2598d8db63 100644
--- a/src/sentry/integrations/vsts/issues.py
+++ b/src/sentry/integrations/vsts/issues.py
@@ -15,6 +15,7 @@ class VstsIssueSync(IssueSyncMixin):
     conf_key = slug
 
     issue_fields = frozenset(['id', 'title', 'url'])
+    done_categories = frozenset(['Resolved', 'Completed'])
 
     def get_create_issue_config(self, group, **kwargs):
         fields = super(VstsIssueSync, self).get_create_issue_config(group, **kwargs)
@@ -156,3 +157,19 @@ class VstsIssueSync(IssueSyncMixin):
                     'exception': error,
                 }
             )
+
+    def should_unresolve(self, data):
+        done_states = self.get_done_states(data['project'])
+        return data['old_state'] in done_states and not data['new_state'] in done_states
+
+    def should_resolve(self, data):
+        done_states = self.get_done_states(data['project'])
+        return not data['old_state'] in done_states and data['new_state'] in done_states
+
+    def get_done_states(self, project):
+        client = self.get_client()
+        all_states = client.get_work_item_states(self.instance, project)['value']
+        done_states = [
+            state['name'] for state in all_states if state['category'] in self.done_categories
+        ]
+        return done_states
diff --git a/src/sentry/integrations/vsts/webhooks.py b/src/sentry/integrations/vsts/webhooks.py
index b25b13abe5..77c61ebdb9 100644
--- a/src/sentry/integrations/vsts/webhooks.py
+++ b/src/sentry/integrations/vsts/webhooks.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 from .client import VstsApiClient
 
-from sentry.models import Identity, Integration, sync_group_assignee_inbound
+from sentry.models import Identity, Integration, OrganizationIntegration, sync_group_assignee_inbound
 from sentry.api.base import Endpoint
 from sentry.app import raven
 from uuid import uuid4
@@ -45,7 +45,14 @@ class WorkItemWebhook(Endpoint):
     def handle_updated_workitem(self, data, integration):
         external_issue_key = data['resource']['workItemId']
         assigned_to = data['resource']['fields'].get('System.AssignedTo')
+        status_change = data['resource']['fields'].get('System.State')
+        project = data['resourceContainers']['project']['id']
         self.handle_assign_to(integration, external_issue_key, assigned_to)
+        self.handle_status_change(
+            integration,
+            external_issue_key,
+            status_change,
+            project)
 
     def handle_assign_to(self, integration, external_issue_key, assigned_to):
         if not assigned_to:
@@ -64,6 +71,24 @@ class WorkItemWebhook(Endpoint):
             assign=assign,
         )
 
+    def handle_status_change(self, integration, external_issue_key,
+                             status_change, project):
+        if status_change is None:
+            return
+
+        organization_ids = OrganizationIntegration.objects.filter(
+            integration_id=integration.id,
+        ).values_list('organization_id', flat=True)
+
+        for organization_id in organization_ids:
+            installation = integration.get_installation(organization_id)
+            data = {
+                'new_state': status_change['newValue'],
+                'old_state': status_change['oldValue'],
+                'project': project,
+            }
+            installation.sync_status_inbound(external_issue_key, data)
+
     def parse_email(self, email):
         return EMAIL_PARSER.search(email).group(1)
 
diff --git a/tests/sentry/integrations/vsts/test_webhooks.py b/tests/sentry/integrations/vsts/test_webhooks.py
index 1f71370b7d..92a5dc1374 100644
--- a/tests/sentry/integrations/vsts/test_webhooks.py
+++ b/tests/sentry/integrations/vsts/test_webhooks.py
@@ -5,12 +5,14 @@ from mock import patch
 from time import time
 
 from sentry.testutils import APITestCase
-from sentry.models import ExternalIssue, Identity, IdentityProvider, Integration
+from sentry.models import Activity, ExternalIssue, Group, GroupLink, GroupStatus, Identity, IdentityProvider, Integration
 from sentry.integrations.vsts.integration import VstsIntegration
 from sentry.utils.http import absolute_uri
 from .testutils import (
     WORK_ITEM_UPDATED,
     WORK_ITEM_UNASSIGNED,
+    WORK_ITEM_UPDATED_STATUS,
+    WORK_ITEM_STATES,
 )
 
 
@@ -42,15 +44,34 @@ class VstsWebhookWorkItemTest(APITestCase):
             data={
                 'access_token': self.access_token,
                 'refresh_token': 'qwertyuiop',
-                'expires': int(time()) - int(1234567890),
+                'expires': int(time()) + int(1234567890),
             }
         )
         self.org_integration = self.model.add_organization(self.organization.id, self.identity.id)
+        self.org_integration.config = {
+            'sync_comments': True,
+            'resolve_status': 'Resolved',
+            'resolve_when': True,
+            'sync_forward_assignment': True,
+            'sync_reverse_assignment': True,
+        }
+        self.org_integration.save()
         self.project_integration = self.model.add_project(self.project.id)
         self.integration = VstsIntegration(self.model, self.organization.id, self.project.id)
 
         self.user_to_assign = self.create_user('sentryuseremail@email.com')
 
+    def create_linked_group(self, external_issue, project, status):
+        group = self.create_group(project=project, status=status)
+        GroupLink.objects.create(
+            group_id=group.id,
+            project_id=project.id,
+            linked_type=GroupLink.LinkedType.issue,
+            linked_id=external_issue.id,
+            data={}
+        )
+        return group
+
     @responses.activate
     def test_workitem_change_assignee(self):
         work_item_id = 31
@@ -101,3 +122,73 @@ class VstsWebhookWorkItemTest(APITestCase):
             assert args['email'] is None
             assert args['external_issue_key'] == work_item_id
             assert args['assign'] is False
+
+    @responses.activate
+    def test_inbound_status_sync_resolve(self):
+        responses.add(
+            responses.GET,
+            'https://instance.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workitemtypes/Bug/states',
+            json=WORK_ITEM_STATES,
+        )
+        work_item_id = 33
+        num_groups = 5
+        external_issue = ExternalIssue.objects.create(
+            organization_id=self.organization.id,
+            integration_id=self.model.id,
+            key=work_item_id,
+        )
+        groups = [
+            self.create_linked_group(
+                external_issue,
+                self.project,
+                GroupStatus.UNRESOLVED) for _ in range(num_groups)]
+        resp = self.client.post(
+            absolute_uri('/extensions/vsts/issue-updated/'),
+            data=WORK_ITEM_UPDATED_STATUS,
+            HTTP_SHARED_SECRET=self.shared_secret,
+        )
+        assert resp.status_code == 200
+        group_ids = [g.id for g in groups]
+        assert len(
+            Group.objects.filter(
+                id__in=group_ids,
+                status=GroupStatus.RESOLVED)) == num_groups
+        assert len(Activity.objects.filter(group_id__in=group_ids)) == num_groups
+
+    @responses.activate
+    def test_inbound_status_sync_unresolve(self):
+        responses.add(
+            responses.GET,
+            'https://instance.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workitemtypes/Bug/states',
+            json=WORK_ITEM_STATES,
+        )
+        work_item_id = 33
+        num_groups = 5
+        external_issue = ExternalIssue.objects.create(
+            organization_id=self.organization.id,
+            integration_id=self.model.id,
+            key=work_item_id,
+        )
+        groups = [
+            self.create_linked_group(
+                external_issue,
+                self.project,
+                GroupStatus.RESOLVED) for _ in range(num_groups)]
+
+        # Change so that state is changing from resolved to unresolved
+        state = WORK_ITEM_UPDATED_STATUS['resource']['fields']['System.State']
+        state['oldValue'] = 'Resolved'
+        state['newValue'] = 'Active'
+
+        resp = self.client.post(
+            absolute_uri('/extensions/vsts/issue-updated/'),
+            data=WORK_ITEM_UPDATED_STATUS,
+            HTTP_SHARED_SECRET=self.shared_secret,
+        )
+        assert resp.status_code == 200
+        group_ids = [g.id for g in groups]
+        assert len(
+            Group.objects.filter(
+                id__in=group_ids,
+                status=GroupStatus.UNRESOLVED)) == num_groups
+        assert len(Activity.objects.filter(group_id__in=group_ids)) == num_groups
diff --git a/tests/sentry/integrations/vsts/testutils.py b/tests/sentry/integrations/vsts/testutils.py
index 41caeab07b..a420a1cae9 100644
--- a/tests/sentry/integrations/vsts/testutils.py
+++ b/tests/sentry/integrations/vsts/testutils.py
@@ -397,3 +397,154 @@ WORK_ITEM_UNASSIGNED = {
     u'publisherId': u'tfs',
     u'message': None
 }
+WORK_ITEM_UPDATED_STATUS = {
+    u'resourceContainers': {
+        u'project': {
+            u'id': u'c0bf429a-c03c-4a99-9336-d45be74db5a6',
+            u'baseUrl': u'https://laurynsentry.visualstudio.com/'
+        },
+        u'account': {
+            u'id': u'90e9a854-eb98-4c56-ae1a-035a0f331dd6',
+            u'baseUrl': u'https://laurynsentry.visualstudio.com/'
+        },
+        u'collection': {
+            u'id': u'80ded3e8-3cd3-43b1-9f96-52032624aa3a',
+            u'baseUrl': u'https://laurynsentry.visualstudio.com/'
+        }
+    },
+    u'resource': {
+        u'revisedBy': {
+            u'displayName': u'lauryn',
+            u'name': u'lauryn <lauryn@sentry.io>',
+            u'url': u'https://app.vssps.visualstudio.com/A90e9a854-eb98-4c56-ae1a-035a0f331dd6/_apis/Identities/21354f98-ab06-67d9-b974-5a54d992082e',
+            u'imageUrl': u'https://laurynsentry.visualstudio.com/_api/_common/identityImage?id=21354f98-ab06-67d9-b974-5a54d992082e',
+            u'descriptor': u'msa.MjEzNTRmOTgtYWIwNi03N2Q5LWI5NzQtNWE1NGQ5OTIwODJl',
+            u'_links': {
+                u'avatar': {
+                    u'href': u'https://laurynsentry.visualstudio.com/_apis/GraphProfile/MemberAvatars/msa.MjEzNTRmOTgtYWIwNi03N2Q5LWI5NzQtNWE1NGQ5OTIwODJl'
+                }
+            },
+            u'uniqueName': u'lauryn@sentry.io',
+            u'id': u'21354f98-ab06-67d9-b974-5a54d992082e'
+        },
+        u'revisedDate': u'9999-01-01T00:00:00      Z',
+        u'url': u'https://laurynsentry.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workItems/33/updates/3',
+        u'fields': {
+            u'System.AuthorizedDate': {
+                u'newValue': u'2018-07-05T23:23:09.493            Z',
+                u'oldValue': u'2018-07-05T23:21:38.243            Z'
+            },
+            u'System.State': {
+                u'oldValue': u'New',
+                u'newValue': u'Resolved'
+            },
+            u'System.Watermark': {
+                u'newValue': 83,
+                u'oldValue': 82
+            },
+            u'System.Rev': {
+                u'newValue': 3,
+                u'oldValue': 2
+            },
+            u'System.RevisedDate': {
+                u'newValue': u'9999-01-01T00:00:00            Z',
+                u'oldValue': u'2018-07-05T23:23:09.493            Z'
+            },
+            u'System.ChangedDate': {
+                u'newValue': u'2018-07-05T23:23:09.493            Z',
+                u'oldValue': u'2018-07-05T23:21:38.243            Z'
+            }
+        },
+        u'workItemId': 33,
+        u'rev': 3,
+        u'_links': {
+            u'self': {
+                u'href': u'https://laurynsentry.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workItems/33/updates/3'
+            },
+            u'workItemUpdates': {
+                u'href': u'https://laurynsentry.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workItems/33/updates'
+            },
+            u'html': {
+                u'href': u'https://laurynsentry.visualstudio.com/web/wi.aspx?pcguid=80ded3e8-3cd3-43b1-9f96-52032624aa3a&id=33'
+            },
+            u'parent': {
+                u'href': u'https://laurynsentry.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workItems/33'
+            }
+        },
+        u'id': 3,
+        u'revision': {
+            u'url': u'https://laurynsentry.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workItems/33/revisions/3',
+            u'fields': {
+                u'System.AreaPath': u'MyFirstProject',
+                u'System.WorkItemType': u'Bug',
+                u'System.Reason': u'New',
+                u'System.Title': u'NotImplementedError:Visual Studio Team Services requires an organization_id',
+                u'Microsoft.VSTS.Common.Priority': 2,
+                u'System.CreatedBy': u'lauryn <lauryn@sentry.io>',
+                u'Microsoft.VSTS.Common.StateChangeDate': u'2018-07-05T23:21:25.847            Z',
+                u'System.CreatedDate': u'2018-07-05T23:21:25.847            Z',
+                u'System.TeamProject': u'MyFirstProject',
+                u'Microsoft.VSTS.Common.ValueArea': u'Business',
+                u'System.State': u'New',
+                u'System.Description': u'<p><a href="https:            //lauryn.ngrok.io/sentry/internal/issues/196/">https:            //lauryn.ngrok.io/sentry/internal/issues/196/</a></p>\n<pre><code>NotImplementedError:Visual Studio Team Services requires an organization_id\n(57 additional frame(s) were not displayed)\n...\n  File &quot;sentry/tasks/base.py&quot;',
+                u'System.ChangedBy': u'lauryn <lauryn@sentry.io>',
+                u'System.ChangedDate': u'2018-07-05T23:23:09.493            Z',
+                u'Microsoft.VSTS.Common.Severity': u'3 - Medium',
+                u'System.IterationPath': u'MyFirstProject'
+            },
+            u'rev': 3,
+            u'id': 33,
+            u'_links': {
+                u'self': {
+                    u'href': u'https://laurynsentry.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workItems/33/revisions/3'
+                },
+                u'workItemRevisions': {
+                    u'href': u'https://laurynsentry.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workItems/33/revisions'
+                },
+                u'parent': {
+                    u'href': u'https://laurynsentry.visualstudio.com/c0bf429a-c03c-4a99-9336-d45be74db5a6/_apis/wit/workItems/33'
+                }
+            }
+        }
+    },
+    u'eventType': u'workitem.updated',
+    u'detailedMessage': None,
+    u'createdDate': u'2018-07-05T23:23:11.1935112   Z',
+    u'id': u'cc349c85-6595-4939-9b69-f89480be6a26',
+    u'resourceVersion': u'1.0',
+    u'notificationId': 2,
+    u'subscriptionId': u'7405a600-6a25-48e6-81b6-1dde044783ad',
+    u'publisherId': u'tfs',
+    u'message': None
+}
+
+WORK_ITEM_STATES = {
+    'count': 5,
+    'value': [
+        {
+            'name': 'New',
+            'color': 'b2b2b2',
+            'category': 'Proposed'
+        },
+        {
+            'name': 'Active',
+            'color': '007acc',
+            'category': 'InProgress'
+        },
+        {
+            'name': 'CustomState',
+            'color': '5688E0',
+            'category': 'InProgress'
+        },
+        {
+            'name': 'Resolved',
+            'color': 'ff9d00',
+            'category': 'Resolved'
+        },
+        {
+            'name': 'Closed',
+            'color': '339933',
+            'category': 'Completed'
+        }
+    ]
+}
