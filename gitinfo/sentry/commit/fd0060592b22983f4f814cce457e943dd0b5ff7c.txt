commit fd0060592b22983f4f814cce457e943dd0b5ff7c
Author: 0x6a6f7368 <joshua.r.li.98@gmail.com>
Date:   Fri Jul 6 10:34:29 2018 -0700

    files: queue deletes (#8951)
    
    round 2.

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 967c2e5067..09dfe7e5ca 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -439,6 +439,7 @@ CELERY_IMPORTS = (
     'sentry.tasks.scheduler', 'sentry.tasks.signals', 'sentry.tasks.store', 'sentry.tasks.unmerge',
     'sentry.tasks.symcache_update', 'sentry.tasks.servicehooks',
     'sentry.tagstore.tasks', 'sentry.tasks.assemble', 'sentry.tasks.integrations',
+    'sentry.tasks.files',
 )
 CELERY_QUEUES = [
     Queue('activity.notify', routing_key='activity.notify'),
@@ -461,6 +462,7 @@ CELERY_QUEUES = [
     Queue('events.reprocessing.process_event', routing_key='events.reprocessing.process_event'),
     Queue('events.reprocess_events', routing_key='events.reprocess_events'),
     Queue('events.save_event', routing_key='events.save_event'),
+    Queue('files.delete', routing_key='files.delete'),
     Queue('integrations', routing_key='integrations'),
     Queue('merge', routing_key='merge'),
     Queue('options', routing_key='options'),
diff --git a/src/sentry/models/file.py b/src/sentry/models/file.py
index 767e6e95ec..df69d8b460 100644
--- a/src/sentry/models/file.py
+++ b/src/sentry/models/file.py
@@ -27,6 +27,7 @@ from jsonfield import JSONField
 
 from sentry.app import locks
 from sentry.db.models import (BoundedPositiveIntegerField, FlexibleForeignKey, Model)
+from sentry.tasks.files import delete_file as delete_file_task
 from sentry.utils import metrics
 from sentry.utils.retries import TimedRetryPolicy
 
@@ -138,8 +139,7 @@ class FileBlob(Model):
     def deletefile(self, commit=False):
         assert self.path
 
-        storage = get_storage()
-        storage.delete(self.path)
+        delete_file_task.delay(self.path, self.checksum)
 
         self.path = None
 
@@ -393,7 +393,7 @@ class ChunkedFileBlobIndexWrapper(object):
 
         def fetch_file(offset, getfile):
             with getfile() as sf:
-                while 1:
+                while True:
                     chunk = sf.read(65535)
                     if not chunk:
                         break
diff --git a/src/sentry/tasks/files.py b/src/sentry/tasks/files.py
new file mode 100644
index 0000000000..9ee550897a
--- /dev/null
+++ b/src/sentry/tasks/files.py
@@ -0,0 +1,21 @@
+from __future__ import absolute_import
+
+from sentry.tasks.base import instrumented_task
+from sentry.tasks.deletion import MAX_RETRIES
+
+
+@instrumented_task(
+    name='sentry.tasks.files.delete_file',
+    queue='files.delete',
+    default_retry_delay=60 * 5,
+    max_retries=MAX_RETRIES
+)
+def delete_file(path, checksum, **kwargs):
+    from sentry.models.file import get_storage, FileBlob
+    from sentry.app import locks
+    from sentry.utils.retries import TimedRetryPolicy
+
+    lock = locks.get('fileblob:upload:{}'.format(checksum), duration=60 * 10)
+    with TimedRetryPolicy(60)(lock.acquire):
+        if not FileBlob.objects.filter(checksum=checksum).exists():
+            get_storage().delete(path)
