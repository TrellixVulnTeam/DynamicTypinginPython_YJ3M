commit 3da7ebdc66aaba04b6eb94230adc2d0580924572
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Tue May 8 14:39:32 2018 -0700

    tests: Add test for issue commenting

diff --git a/src/sentry/integrations/example/integration.py b/src/sentry/integrations/example/integration.py
index d5b9eeddc1..2953ea686b 100644
--- a/src/sentry/integrations/example/integration.py
+++ b/src/sentry/integrations/example/integration.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 
 from django.http import HttpResponse
-from sentry.integrations import IntegrationProvider, IntegrationMetadata
+from sentry.integrations import Integration, IntegrationProvider, IntegrationMetadata
 from sentry.pipeline import PipelineView
 
 
@@ -38,6 +38,11 @@ metadata = IntegrationMetadata(
 )
 
 
+class ExampleIntegration(Integration):
+    def create_comment(self):
+        pass
+
+
 class ExampleIntegrationProvider(IntegrationProvider):
     """
     An example integration, generally used for testing.
@@ -46,6 +51,8 @@ class ExampleIntegrationProvider(IntegrationProvider):
     name = 'Example'
     metadata = metadata
 
+    integration_cls = ExampleIntegration
+
     def get_pipeline_views(self):
         return [
             ExampleSetupView(),
diff --git a/tests/sentry/api/endpoints/test_group_notes.py b/tests/sentry/api/endpoints/test_group_notes.py
index bbc05b8b1f..51d21bfba8 100644
--- a/tests/sentry/api/endpoints/test_group_notes.py
+++ b/tests/sentry/api/endpoints/test_group_notes.py
@@ -2,7 +2,13 @@ from __future__ import absolute_import
 
 import six
 
-from sentry.models import Activity, GroupSubscription, GroupSubscriptionReason
+import mock
+
+from sentry.integrations.example.integration import ExampleIntegration
+from sentry.models import (
+    Activity, GroupLink, GroupSubscription, GroupSubscriptionReason,
+    ExternalIssue, Integration
+)
 from sentry.testutils import APITestCase
 
 
@@ -167,3 +173,44 @@ class GroupNoteCreateTest(APITestCase):
             GroupSubscription.objects.filter(
                 group=group,
                 reason=GroupSubscriptionReason.team_mentioned)) == 1
+
+    @mock.patch.object(ExampleIntegration, 'create_comment')
+    def test_with_group_link(self, mock_create_comment):
+        group = self.group
+
+        integration = Integration.objects.create(
+            provider='example',
+            external_id='123456',
+        )
+
+        external_issue = ExternalIssue.objects.create(
+            organization_id=group.organization.id,
+            integration_id=integration.id,
+            key='APP-123',
+        )
+
+        GroupLink.objects.create(
+            group_id=group.id,
+            project_id=group.project_id,
+            linked_type=GroupLink.LinkedType.issue,
+            linked_id=external_issue.id,
+            relationship=GroupLink.Relationship.references,
+        )
+
+        self.login_as(user=self.user)
+
+        url = '/api/0/issues/{}/comments/'.format(group.id)
+
+        with self.feature('organizations:internal-catchall'):
+            response = self.client.post(
+                url, format='json', data={
+                    'text': 'hello world',
+                }
+            )
+            assert response.status_code == 201, response.content
+
+            activity = Activity.objects.get(id=response.data['id'])
+            assert activity.user == self.user
+            assert activity.group == group
+            assert activity.data == {'text': 'hello world'}
+            mock_create_comment.assert_called_with('APP-123', 'hello world')
