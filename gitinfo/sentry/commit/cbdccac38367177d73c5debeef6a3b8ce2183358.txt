commit cbdccac38367177d73c5debeef6a3b8ce2183358
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Jan 5 10:51:03 2018 -0800

    feat(ui): Add "readonly" text input with copy button (#6880)
    
    * feat(ui): Add "readonly" text input with copy button

diff --git a/docs-ui/components/textCopyInput.stories.js b/docs-ui/components/textCopyInput.stories.js
new file mode 100644
index 0000000000..2b8507234a
--- /dev/null
+++ b/docs-ui/components/textCopyInput.stories.js
@@ -0,0 +1,13 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import {action} from '@storybook/addon-actions';
+
+import TextCopyInput from 'application-root/views/settings/components/forms/textCopyInput';
+
+storiesOf('TextCopyInput', module).add(
+  'default',
+  withInfo('Description')(() => (
+    <TextCopyInput onCopy={action('Copied!')}>Value to be copied </TextCopyInput>
+  ))
+);
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/textCopyInput.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/textCopyInput.jsx
new file mode 100644
index 0000000000..0de9f99a76
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/textCopyInput.jsx
@@ -0,0 +1,93 @@
+import {Flex} from 'grid-emotion';
+import PropTypes from 'prop-types';
+import React from 'react';
+import ReactDOM from 'react-dom';
+import styled from 'react-emotion';
+
+import {inputStyles} from './styled/styles';
+import {selectText} from '../../../../utils/selectText';
+import AutoSelectText from '../../../../components/autoSelectText';
+import Button from '../../../../components/buttons/button';
+import Clipboard from '../../../../components/clipboard';
+import InlineSvg from '../../../../components/inlineSvg';
+
+const StyledAutoSelectText = styled(AutoSelectText)`
+  ${inputStyles};
+  display: inline-block;
+  width: auto;
+  padding: 0;
+`;
+
+const OverflowContainer = styled(Flex)`
+  overflow: hidden;
+  text-overflow: ellipsis;
+`;
+
+const Wrapper = styled(Flex)`
+  overflow: hidden;
+`;
+
+class TextCopyInput extends React.Component {
+  static propTypes = {
+    /**
+     * Text to copy
+     */
+    children: PropTypes.string.isRequired,
+    /**
+     * CSS style object
+     */
+    style: PropTypes.object,
+    onCopy: PropTypes.func,
+  };
+
+  static defaultProps = {
+    onCopy: () => {},
+  };
+
+  constructor(props) {
+    super(props);
+  }
+
+  // Select text when copy button is clicked
+  handleCopyClick = e => {
+    if (!this.textRef) return;
+
+    let {onCopy} = this.props;
+
+    // We use findDOMNode here because `this.textRef` is not a dom node,
+    // it's a ref to AutoSelectText
+    // eslint-disable-next-line react/no-find-dom-node
+    selectText(ReactDOM.findDOMNode(this.textRef));
+
+    onCopy(this.props.children, e);
+
+    e.stopPropagation();
+  };
+
+  handleAutoMount = ref => {
+    this.textRef = ref;
+  };
+
+  render() {
+    let {style, children} = this.props;
+
+    return (
+      <Wrapper>
+        <OverflowContainer flex="1">
+          <StyledAutoSelectText innerRef={this.handleAutoMount} style={style}>
+            {children}
+          </StyledAutoSelectText>
+        </OverflowContainer>
+        <Clipboard hideUnsupported onClick={this.handleCopyClick} value={children}>
+          <Flex shrink="0">
+            <Button borderless size="xsmall" onClick={this.handleCopyClick}>
+              <InlineSvg src="icon-copy" />
+            </Button>
+          </Flex>
+        </Clipboard>
+      </Wrapper>
+    );
+  }
+}
+
+export default TextCopyInput;
diff --git a/tests/js/spec/components/__snapshots__/textCopyInput.spec.jsx.snap b/tests/js/spec/components/__snapshots__/textCopyInput.spec.jsx.snap
new file mode 100644
index 0000000000..1902342e4b
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/textCopyInput.spec.jsx.snap
@@ -0,0 +1,38 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`TextCopyInput renders 1`] = `
+<Styled(Base)>
+  <Styled(Base)
+    flex="1"
+  >
+    <Styled(AutoSelectText)
+      innerRef={[Function]}
+    >
+      Text to Copy
+    </Styled(AutoSelectText)>
+  </Styled(Base)>
+  <Clipboard
+    errorMessage="Error copying to clipboard"
+    hideMessages={false}
+    hideUnsupported={true}
+    onClick={[Function]}
+    successMessage="Copied to clipboard"
+    value="Text to Copy"
+  >
+    <Flex
+      shrink="0"
+    >
+      <Button
+        borderless={true}
+        disabled={false}
+        onClick={[Function]}
+        size="xsmall"
+      >
+        <InlineSvg
+          src="icon-copy"
+        />
+      </Button>
+    </Flex>
+  </Clipboard>
+</Styled(Base)>
+`;
diff --git a/tests/js/spec/components/textCopyInput.spec.jsx b/tests/js/spec/components/textCopyInput.spec.jsx
new file mode 100644
index 0000000000..55a2f6ad2a
--- /dev/null
+++ b/tests/js/spec/components/textCopyInput.spec.jsx
@@ -0,0 +1,10 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import TextCopyInput from 'app/views/settings/components/forms/textCopyInput';
+
+describe('TextCopyInput', function() {
+  it('renders', function() {
+    let wrapper = shallow(<TextCopyInput>Text to Copy</TextCopyInput>);
+    expect(wrapper).toMatchSnapshot();
+  });
+});
