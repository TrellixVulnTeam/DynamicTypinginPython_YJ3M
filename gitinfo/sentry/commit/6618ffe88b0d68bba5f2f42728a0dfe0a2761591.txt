commit 6618ffe88b0d68bba5f2f42728a0dfe0a2761591
Author: Max Bittker <maxbittker@gmail.com>
Date:   Mon Mar 12 14:35:03 2018 -0700

    feat(Frontend): Top Level Error Boundary (#7472)

diff --git a/src/sentry/static/sentry/app/components/errorBoundary.jsx b/src/sentry/static/sentry/app/components/errorBoundary.jsx
new file mode 100644
index 0000000000..b122ffce27
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/errorBoundary.jsx
@@ -0,0 +1,61 @@
+import Raven from 'raven-js';
+import React from 'react';
+import styled from 'react-emotion';
+
+import {t} from '../locale';
+import DetailedError from './errors/detailedError';
+
+let exclamation = ['Raspberries', 'Snap', 'Frig', 'Welp', 'Uhhhh', 'Hmmm'];
+
+let getExclamation = () => {
+  return exclamation[Math.floor(Math.random() * exclamation.length)];
+};
+
+class ErrorBoundary extends React.Component {
+  constructor(props) {
+    super(props);
+    this.state = {error: null};
+  }
+
+  componentDidCatch(error, errorInfo) {
+    this.setState({error});
+    Raven.captureException(error, {extra: errorInfo});
+  }
+
+  render() {
+    if (this.state.error) {
+      return (
+        <Wrapper>
+          <DetailedError
+            heading={getExclamation()}
+            message={t(
+              `Something went horribly wrong rendering this page.
+We use a decent error reporting service so this will probably be fixed soon. Unless our error reporting service is also broken. That would be awkward.
+Anyway, we apologize for the inconvenience.`
+            )}
+          />
+          <StackTrace>{this.state.error.toString()}</StackTrace>
+        </Wrapper>
+      );
+    } else {
+      //when there's not an error, render children untouched
+      return this.props.children;
+    }
+  }
+}
+
+const Wrapper = styled.div`
+  color: ${p => p.theme.gray4};
+  padding: ${p => p.theme.grid * 3}px;
+  max-width: 1000px;
+  margin: auto;
+`;
+
+const StackTrace = styled.pre`
+  white-space: pre-wrap;
+  margin: 32px;
+  margin-left: 85px;
+  margin-right: 18px;
+`;
+
+export default ErrorBoundary;
diff --git a/src/sentry/static/sentry/app/components/errors/detailedError.jsx b/src/sentry/static/sentry/app/components/errors/detailedError.jsx
index 8f4b9499a3..d52cbc18ec 100644
--- a/src/sentry/static/sentry/app/components/errors/detailedError.jsx
+++ b/src/sentry/static/sentry/app/components/errors/detailedError.jsx
@@ -4,6 +4,7 @@ import classNames from 'classnames';
 
 import {t} from '../../locale';
 import InlineSvg from '../../components/inlineSvg';
+import Button from '../../components/buttons/button';
 
 class DetailedError extends React.Component {
   static propTypes = {
@@ -22,6 +23,20 @@ class DetailedError extends React.Component {
     hideSupportLinks: false,
   };
 
+  componentDidMount() {
+    // window.Raven.lastEventId() may not be immediatly true, so double-check after raven has time to send an error
+    setTimeout(() => {
+      this.forceUpdate();
+    }, 100);
+  }
+
+  openFeedback(e) {
+    e.preventDefault();
+    if (window.Raven) {
+      window.Raven.lastEventId() && window.Raven.showReportDialog();
+    }
+  }
+
   render() {
     const {className, heading, message, onRetry, hideSupportLinks} = this.props;
     const cx = classNames('detailed-error', className);
@@ -36,7 +51,7 @@ class DetailedError extends React.Component {
         <div className="detailed-error-content">
           <h4>{heading}</h4>
 
-          <div className="detailed-error-content-body">{message}</div>
+          <p className="detailed-error-content-body">{message}</p>
 
           {showFooter && (
             <div className="detailed-error-content-footer">
@@ -50,9 +65,15 @@ class DetailedError extends React.Component {
 
               {!hideSupportLinks && (
                 <div className="detailed-error-support-links">
-                  <a href="https://status.sentry.io/">Service status</a>
+                  {window.Raven &&
+                    window.Raven.lastEventId() && (
+                      <Button priority="link" onClick={this.openFeedback}>
+                        {t('Fill out a report')}
+                      </Button>
+                    )}
+                  <a href="https://status.sentry.io/">{t('Service status')}</a>
 
-                  <a href="https://sentry.io/support/">Contact support</a>
+                  <a href="https://sentry.io/support/">{t('Contact support')}</a>
                 </div>
               )}
             </div>
diff --git a/src/sentry/static/sentry/app/views/app.jsx b/src/sentry/static/sentry/app/views/app.jsx
index 7da6d91ce1..1d1a4e547e 100644
--- a/src/sentry/static/sentry/app/views/app.jsx
+++ b/src/sentry/static/sentry/app/views/app.jsx
@@ -20,6 +20,7 @@ import OrganizationsLoader from '../components/organizations/organizationsLoader
 import OrganizationsStore from '../stores/organizationsStore';
 import GlobalModal from '../components/globalModal';
 import theme from '../utils/theme';
+import ErrorBoundary from '../components/errorBoundary';
 
 if (window.globalStaticUrl) __webpack_public_path__ = window.globalStaticUrl; // defined in layout.html
 
@@ -151,7 +152,7 @@ const App = createReactClass({
           <GlobalModal />
           <Alerts className="messages-container" />
           <Indicators className="indicators-container" />
-          {this.props.children}
+          <ErrorBoundary>{this.props.children}</ErrorBoundary>
           {ConfigStore.get('features').has('assistant') && <AssistantHelper />}
         </OrganizationsLoader>
       </ThemeProvider>
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 8110eb9d89..0c8cfab69d 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -27,6 +27,7 @@ window.scrollTo = sinon.spy();
 window.Raven = {
   captureMessage: sinon.spy(),
   captureException: sinon.spy(),
+  lastEventId: sinon.spy(),
 };
 window.TestStubs = {
   // react-router's 'router' context
diff --git a/tests/js/spec/components/__snapshots__/detailedError.spec.jsx.snap b/tests/js/spec/components/__snapshots__/detailedError.spec.jsx.snap
index 0d7e0a0d51..ca27ff59f0 100644
--- a/tests/js/spec/components/__snapshots__/detailedError.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/detailedError.spec.jsx.snap
@@ -17,13 +17,13 @@ exports[`DetailedError can hide support links 1`] = `
     <h4>
       Error heading
     </h4>
-    <div
+    <p
       className="detailed-error-content-body"
     >
       <div>
         Message
       </div>
-    </div>
+    </p>
     <div
       className="detailed-error-content-footer"
     >
@@ -57,13 +57,13 @@ exports[`DetailedError hides footer when no "Retry" and no support links 1`] = `
     <h4>
       Error heading
     </h4>
-    <div
+    <p
       className="detailed-error-content-body"
     >
       <div>
         Message
       </div>
-    </div>
+    </p>
   </div>
 </div>
 `;
@@ -85,13 +85,13 @@ exports[`DetailedError renders 1`] = `
     <h4>
       Error heading
     </h4>
-    <div
+    <p
       className="detailed-error-content-body"
     >
       <div>
         Message
       </div>
-    </div>
+    </p>
     <div
       className="detailed-error-content-footer"
     >
@@ -132,13 +132,13 @@ exports[`DetailedError renders with "Retry" button 1`] = `
     <h4>
       Error heading
     </h4>
-    <div
+    <p
       className="detailed-error-content-body"
     >
       <div>
         Message
       </div>
-    </div>
+    </p>
     <div
       className="detailed-error-content-footer"
     >
diff --git a/tests/js/spec/sudoModal.spec.jsx b/tests/js/spec/sudoModal.spec.jsx
index 8e304b0360..0f9e6af38a 100644
--- a/tests/js/spec/sudoModal.spec.jsx
+++ b/tests/js/spec/sudoModal.spec.jsx
@@ -47,7 +47,7 @@ describe('Sudo Modal', function() {
   });
 
   it('can delete an org with sudo flow', function(done) {
-    mount(<App />);
+    mount(<App>{<div>placeholder content</div>}</App>);
 
     let api = new Client();
     let successCb = jest.fn();
