commit c6c79e222968e85810d18038d029b08db7d2c28b
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Jan 18 22:39:20 2018 +0100

    fix(http): Do not raise cannot fetch from http fetch for non 200 ok

diff --git a/src/sentry/http.py b/src/sentry/http.py
index 2c73074167..a6b4f955f2 100644
--- a/src/sentry/http.py
+++ b/src/sentry/http.py
@@ -366,13 +366,4 @@ def fetch_file(
         if response is not None:
             response.close()
 
-    if result[2] != 200:
-        logger.debug('HTTP %s when fetching %r', result[2], url, exc_info=True)
-        error = {
-            'type': EventError.FETCH_INVALID_HTTP_CODE,
-            'value': result[2],
-            'url': expose_url(url),
-        }
-        raise CannotFetch(error)
-
     return UrlResult(url, result[0], result[1], result[2], result[3])
diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index ba2ff1b62d..fb69c6883b 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -333,6 +333,16 @@ def fetch_file(url, project=None, release=None, dist=None, allow_scraping=True):
             z_body = zlib.compress(result.body)
             cache.set(cache_key, (url, result.headers, z_body, result.status, result.encoding), 60)
 
+    # If we did not get a 200 OK we just raise a cannot fetch here.
+    if result.status != 200:
+        raise http.CannotFetch(
+            {
+                'type': EventError.FETCH_INVALID_HTTP_CODE,
+                'value': result.status,
+                'url': http.expose_url(url),
+            }
+        )
+
     # Make sure the file we're getting back is six.binary_type. The only
     # reason it'd not be binary would be from old cached blobs, so
     # for compatibility with current cached files, let's coerce back to
