commit 9ca466f705e8003f9b0d09cae2407c686afa1569
Author: Alex Hofsteede <alex@hofsteede.com>
Date:   Thu Feb 7 11:38:57 2019 -0800

    fix: Temporary patch to stop 1-item searches raising (#11966)
    
    The logic to shrink time windows for issue-specific queries was being
    triggered when we got only 1 django candidate back for the search.

diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index 91fca39f80..60473ecbc5 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -428,11 +428,19 @@ def raw_query(start, end, groupby=None, conditions=None, filter_keys=None,
         if start > end:
             raise QueryOutsideRetentionError
 
-    start = shrink_time_window(filter_keys.get('issue'), start)
-
     # if `shrink_time_window` pushed `start` after `end` it means the user queried
     # a Group for T1 to T2 when the group was only active for T3 to T4, so the query
     # wouldn't return any results anyway
+    new_start = shrink_time_window(filter_keys.get('issue'), start)
+
+    # TODO (alexh) this is a quick emergency fix for an occasion where a search
+    # results in only 1 django candidate, which is then passed to snuba to
+    # check and we raised because of it. Remove this once we figure out why the
+    # candidate was returned from django at all if it existed only outside the
+    # time range of the query
+    if new_start <= end:
+        start = new_start
+
     if start > end:
         raise QueryOutsideGroupActivityError
 
@@ -516,8 +524,8 @@ def query(start, end, groupby, conditions=None, filter_keys=None, aggregations=N
 
     with timer('process_result'):
         if totals:
-            return nest_groups(body['data'], groupby, aggregate_names +
-                               selected_names), body['totals']
+            return nest_groups(body['data'], groupby, aggregate_names
+                               + selected_names), body['totals']
         else:
             return nest_groups(body['data'], groupby, aggregate_names + selected_names)
 
diff --git a/tests/snuba/test_util.py b/tests/snuba/test_util.py
index a358df0bf2..43e96048d0 100644
--- a/tests/snuba/test_util.py
+++ b/tests/snuba/test_util.py
@@ -1,6 +1,5 @@
 from __future__ import absolute_import
 
-import pytest
 from datetime import datetime, timedelta
 
 from sentry.models import GroupHash
@@ -48,19 +47,19 @@ class SnubaUtilTest(TestCase):
         issues = [group1.id, group2.id]
         assert snuba.shrink_time_window(issues, year_ago) == year_ago
 
-        with pytest.raises(snuba.QueryOutsideGroupActivityError):
-            # query a group for a time range before it had any activity
-            snuba.raw_query(
-                start=group1.first_seen - timedelta(days=1, hours=1),
-                end=group1.first_seen - timedelta(days=1),
-                filter_keys={
-                    'project_id': [group1.project_id],
-                    'issue': [group1.id],
-                },
-                aggregations=[
-                    ['count()', '', 'count'],
-                ],
-            )
+        # with pytest.raises(snuba.QueryOutsideGroupActivityError):
+        #    # query a group for a time range before it had any activity
+        #    snuba.raw_query(
+        #        start=group1.first_seen - timedelta(days=1, hours=1),
+        #        end=group1.first_seen - timedelta(days=1),
+        #        filter_keys={
+        #            'project_id': [group1.project_id],
+        #            'issue': [group1.id],
+        #        },
+        #        aggregations=[
+        #            ['count()', '', 'count'],
+        #        ],
+        #    )
 
     def test_override_options(self):
         assert snuba.OVERRIDE_OPTIONS == {'consistent': False}
