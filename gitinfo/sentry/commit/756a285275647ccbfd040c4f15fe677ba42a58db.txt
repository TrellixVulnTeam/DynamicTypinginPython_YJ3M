commit 756a285275647ccbfd040c4f15fe677ba42a58db
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Oct 24 10:26:55 2015 +0100

    Validate slug using standard form errors

diff --git a/src/sentry/web/frontend/team_settings.py b/src/sentry/web/frontend/team_settings.py
index 48f6cf81e9..6b8912eebb 100644
--- a/src/sentry/web/frontend/team_settings.py
+++ b/src/sentry/web/frontend/team_settings.py
@@ -16,6 +16,20 @@ class EditTeamForm(forms.ModelForm):
         fields = ('name', 'slug',)
         model = Team
 
+    def clean_slug(self):
+        value = self.cleaned_data.get('slug')
+        if not value:
+            return
+
+        qs = Team.objects.filter(
+            slug=value,
+            organization=self.instance.organization,
+        ).exclude(id=self.instance.id)
+        if qs.exists():
+            raise forms.ValidationError("A team with that slug already exists.")
+
+        return value
+
 
 class TeamSettingsView(TeamView):
     required_scope = 'team:write'
@@ -24,27 +38,25 @@ class TeamSettingsView(TeamView):
         return EditTeamForm(request.POST or None, instance=team)
 
     def handle(self, request, organization, team):
-        old_slug = team.slug
         form = self.get_form(request, team)
         if form.is_valid():
             try:
                 team = form.save()
             except IntegrityError:
-                team.slug = old_slug
-                messages.add_message(request, messages.ERROR,
-                    _('Changes to your team failed. Slug already exists.'))
-            else:
-                AuditLogEntry.objects.create(
-                    organization=organization,
-                    actor=request.user,
-                    ip_address=request.META['REMOTE_ADDR'],
-                    target_object=team.id,
-                    event=AuditLogEntryEvent.TEAM_EDIT,
-                    data=team.get_audit_log_data(),
-                )
-
-                messages.add_message(request, messages.SUCCESS,
-                    _('Changes to your team were saved.'))
+                form.errors['__all__'] = ['There was an error while saving your changes. Please try again.']
+
+        if form.is_valid():
+            AuditLogEntry.objects.create(
+                organization=organization,
+                actor=request.user,
+                ip_address=request.META['REMOTE_ADDR'],
+                target_object=team.id,
+                event=AuditLogEntryEvent.TEAM_EDIT,
+                data=team.get_audit_log_data(),
+            )
+
+            messages.add_message(request, messages.SUCCESS,
+                _('Changes to your team were saved.'))
 
             return HttpResponseRedirect(reverse('sentry-manage-team', args=[organization.slug, team.slug]))
 
diff --git a/tests/sentry/web/frontend/test_team_settings.py b/tests/sentry/web/frontend/test_team_settings.py
index 00f37d059d..69b24fb461 100644
--- a/tests/sentry/web/frontend/test_team_settings.py
+++ b/tests/sentry/web/frontend/test_team_settings.py
@@ -42,17 +42,16 @@ class TeamSettingsTest(TestCase):
         })
         assert resp.status_code == 302
         self.assertEquals(resp['Location'], 'http://testserver' + self.path)
-        team = Team.objects.get(pk=self.team.pk)
+        team = Team.objects.get(id=self.team.id)
         self.assertEquals(team.name, 'bar')
 
     def test_slug_already_exists(self):
         self.login_as(self.user)
-        self.create_team(name='bar', organization=self.organization)
+        self.create_team(name='bar', slug='bar', organization=self.organization)
         resp = self.client.post(self.path, {
             'name': 'bar',
-            'slug': self.team.slug,
+            'slug': 'bar',
         })
-        assert resp.status_code == 302
-        self.assertEquals(resp['Location'], 'http://testserver' + self.path)
-        team = Team.objects.get(pk=self.team.pk)
-        self.assertEquals(team.name, self.team.name)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/teams/manage.html')
+        assert resp.context['form'].errors['slug']
