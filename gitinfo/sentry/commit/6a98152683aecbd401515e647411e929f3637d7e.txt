commit 6a98152683aecbd401515e647411e929f3637d7e
Author: Mark Story <mark@mark-story.com>
Date:   Fri Jan 25 13:32:25 2019 -0500

    feat(issues) Add direct hit support to organization issue list (#11719)
    
    I've added direct hit support for both groups and exact events. The
    backend API currently only supports group level hits, but we'll likely
    want event level direct hits as well to get parity with the project
    issue list.
    
    Fixes APP-1039

diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/utils.jsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/utils.jsx
index e64377bcc3..92ec6e4321 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/utils.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/utils.jsx
@@ -1,4 +1,5 @@
 import {defined} from 'app/utils';
+import {pick, pickBy, identity} from 'lodash';
 import {getLocalDateObject} from 'app/utils/dates';
 import {URL_PARAM} from './constants';
 
@@ -40,3 +41,12 @@ export function getStateFromQuery(query) {
     utc: typeof utc !== 'undefined' ? utc === 'true' : null,
   };
 }
+
+/**
+ * Extract the global selection parameters from an object
+ * Useful for extracting global selection properties from the current URL
+ * when building another URL.
+ */
+export function extractSelectionParameters(query) {
+  return pickBy(pick(query, Object.values(URL_PARAM)), identity);
+}
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 47d70f0a4c..9177d297ca 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -1,6 +1,6 @@
 import $ from 'jquery';
 import {ThemeProvider} from 'emotion-theming';
-import {isEqual, pick, pickBy, identity} from 'lodash';
+import {isEqual} from 'lodash';
 import {withRouter, browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
@@ -9,7 +9,7 @@ import createReactClass from 'create-react-class';
 import styled, {css, cx} from 'react-emotion';
 import queryString from 'query-string';
 
-import {URL_PARAM} from 'app/components/organizations/globalSelectionHeader/constants';
+import {extractSelectionParameters} from 'app/components/organizations/globalSelectionHeader/utils';
 import {hideSidebar, showSidebar} from 'app/actionCreators/preferences';
 import {load as loadIncidents} from 'app/actionCreators/incidents';
 import {t} from 'app/locale';
@@ -163,10 +163,7 @@ class Sidebar extends React.Component {
 
     // Only keep the querystring if the current route matches one of the above
     if (globalSelectionRoutes.includes(this.props.location.pathname)) {
-      const query = pickBy(
-        pick(this.props.location.query, Object.values(URL_PARAM)),
-        identity
-      );
+      const query = extractSelectionParameters(this.props.location.query);
 
       // Handle cmd-click (mac) and meta-click (linux)
       if (evt.metaKey) {
diff --git a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
index 9e5ae379bb..c655ff32b3 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
@@ -8,35 +8,36 @@ import createReactClass from 'create-react-class';
 import qs from 'query-string';
 
 import {Client} from 'app/api';
-import {Panel, PanelBody} from 'app/components/panels';
-import {analytics} from 'app/utils/analytics';
 import {t} from 'app/locale';
 import ErrorRobot from 'app/components/errorRobot';
+import EmptyStateWarning from 'app/components/emptyStateWarning';
+import LoadingError from 'app/components/loadingError';
+import LoadingIndicator from 'app/components/loadingIndicator';
+import {extractSelectionParameters} from 'app/components/organizations/globalSelectionHeader/utils';
+import Pagination from 'app/components/pagination';
+import {Panel, PanelBody} from 'app/components/panels';
+import StreamGroup from 'app/components/stream/group';
+import {updateProjects} from 'app/actionCreators/globalSelection';
 import {fetchProject} from 'app/actionCreators/projects';
 import {fetchTags} from 'app/actionCreators/tags';
 import {fetchOrgMembers} from 'app/actionCreators/members';
 import {fetchSavedSearches} from 'app/actionCreators/savedSearches';
 import {fetchProcessingIssues} from 'app/actionCreators/processingIssues';
 import ConfigStore from 'app/stores/configStore';
-import EventsChart from 'app/views/organizationEvents/eventsChart';
 import GroupStore from 'app/stores/groupStore';
-import {getUtcDateString} from 'app/utils/dates';
 import SelectedGroupStore from 'app/stores/selectedGroupStore';
 import TagStore from 'app/stores/tagStore';
-import EmptyStateWarning from 'app/components/emptyStateWarning';
-import LoadingError from 'app/components/loadingError';
-import LoadingIndicator from 'app/components/loadingIndicator';
-import {logAjaxError} from 'app/utils/logging';
-import Pagination from 'app/components/pagination';
-import ProcessingIssueHint from 'app/views/stream/processingIssueHint';
+import EventsChart from 'app/views/organizationEvents/eventsChart';
 import SentryTypes from 'app/sentryTypes';
-import StreamGroup from 'app/components/stream/group';
 import StreamActions from 'app/views/stream/actions';
 import StreamFilters from 'app/views/stream/filters';
 import StreamSidebar from 'app/views/stream/sidebar';
+import ProcessingIssueHint from 'app/views/stream/processingIssueHint';
+import {analytics} from 'app/utils/analytics';
+import {getUtcDateString} from 'app/utils/dates';
+import {logAjaxError} from 'app/utils/logging';
 import parseApiError from 'app/utils/parseApiError';
 import parseLinkHeader from 'app/utils/parseLinkHeader';
-import {updateProjects} from 'app/actionCreators/globalSelection';
 import utils from 'app/utils';
 import withOrganization from 'app/utils/withOrganization';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
@@ -241,20 +242,23 @@ const OrganizationStream = createReactClass({
       method: 'GET',
       data: qs.stringify(requestParams),
       success: (data, ignore, jqXHR) => {
-        // if this is a direct hit, we redirect to the intended result directly.
-        // we have to use the project slug from the result data instead of the
-        // the current props one as the shortIdLookup can return results for
-        // different projects.
+        let {orgId} = this.props.params;
+        // If this is a direct hit, we redirect to the intended result directly.
         if (jqXHR.getResponseHeader('X-Sentry-Direct-Hit') === '1') {
-          if (data && data[0].matchingEventId) {
-            let {project, id, matchingEventId} = data[0];
-            let redirect = `/${this.props.params
-              .orgId}/${project.slug}/issues/${id}/events/${matchingEventId}/`;
-
-            // TODO include global search query params
-            browserHistory.replace(redirect);
-            return;
+          let redirect;
+          if (data[0] && data[0].matchingEventId) {
+            let {id, matchingEventId} = data[0];
+            redirect = `/organizations/${orgId}/issues/${id}/events/${matchingEventId}/`;
+          } else {
+            let {id} = data[0];
+            redirect = `/organizations/${orgId}/issues/${id}/`;
           }
+
+          browserHistory.replace({
+            pathname: redirect,
+            query: extractSelectionParameters(this.props.location.query),
+          });
+          return;
         }
 
         this._streamManager.push(data);
