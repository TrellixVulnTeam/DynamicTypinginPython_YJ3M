commit f5e916b28f9c4d0dad758c2493d7a3121465251c
Author: adhiraj <693121+adhiraj@users.noreply.github.com>
Date:   Mon Aug 13 21:34:20 2018 -0700

    feat(features): Add more feature adoption signals (#9358)
    
    * feat(features): Add more feature adoption signals

diff --git a/src/sentry/api/endpoints/organization_releases.py b/src/sentry/api/endpoints/organization_releases.py
index 997262d6e8..ad3457f77b 100644
--- a/src/sentry/api/endpoints/organization_releases.py
+++ b/src/sentry/api/endpoints/organization_releases.py
@@ -14,6 +14,7 @@ from sentry.api.serializers.rest_framework import (
     ReleaseHeadCommitSerializer, ReleaseHeadCommitSerializerDeprecated, ListField
 )
 from sentry.models import Activity, Environment, Release, ReleaseEnvironment
+from sentry.signals import release_created
 from sentry.utils.apidocs import scenario, attach_scenarios
 
 
@@ -171,6 +172,8 @@ class OrganizationReleasesEndpoint(OrganizationReleasesBaseEndpoint, Environment
                     organization_id=organization.id,
                     version=result['version'],
                 ), False
+            else:
+                release_created.send_robust(release=release, sender=self.__class__)
 
             new_projects = []
             for project in projects:
diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 2fd8f9425a..b8af1458be 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -30,7 +30,7 @@ from sentry.models.event import Event
 from sentry.models.group import looks_like_short_id
 from sentry.receivers import DEFAULT_SAVED_SEARCHES
 from sentry.search.utils import InvalidQuery, parse_query
-from sentry.signals import advanced_search, issue_resolved_in_release
+from sentry.signals import advanced_search, issue_ignored, issue_resolved_in_release
 from sentry.tasks.deletion import delete_group
 from sentry.tasks.integrations import kick_off_status_syncs
 from sentry.tasks.merge import merge_group
@@ -685,6 +685,7 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint, EnvironmentMixin):
                                 'ignoreWindow': ignore_window,
                                 'actor': serialize(extract_lazy_object(request.user), request.user),
                             }
+                        issue_ignored.send_robust(project=project, sender=self.__class__)
                     else:
                         GroupSnooze.objects.filter(
                             group__in=group_ids,
diff --git a/src/sentry/api/endpoints/project_ownership.py b/src/sentry/api/endpoints/project_ownership.py
index 0ec3213005..352663fe57 100644
--- a/src/sentry/api/endpoints/project_ownership.py
+++ b/src/sentry/api/endpoints/project_ownership.py
@@ -9,6 +9,7 @@ from django.utils import timezone
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.serializers import serialize
 from sentry.models import ProjectOwnership, resolve_actors
+from sentry.signals import ownership_rule_created
 
 from sentry.ownership.grammar import parse_rules, dump_schema, ParseError
 
@@ -121,5 +122,6 @@ class ProjectOwnershipEndpoint(ProjectEndpoint):
         )
         if serializer.is_valid():
             ownership = serializer.save()
+            ownership_rule_created.send_robust(project=project, sender=self.__class__)
             return Response(serialize(ownership, request.user))
         return Response(serializer.errors, status=400)
diff --git a/src/sentry/api/endpoints/project_releases.py b/src/sentry/api/endpoints/project_releases.py
index 0db1aa61c9..95561f38b0 100644
--- a/src/sentry/api/endpoints/project_releases.py
+++ b/src/sentry/api/endpoints/project_releases.py
@@ -14,6 +14,7 @@ from sentry.api.serializers.rest_framework import CommitSerializer, ListField
 from sentry.models import Activity, Environment, Release, ReleaseEnvironment
 from sentry.plugins.interfaces.releasehook import ReleaseHook
 from sentry.constants import VERSION_LENGTH
+from sentry.signals import release_created
 
 BAD_RELEASE_CHARS = '\n\f\t/'
 
@@ -145,6 +146,8 @@ class ProjectReleasesEndpoint(ProjectEndpoint, EnvironmentMixin):
                     version=result['version'],
                 ), False
                 was_released = bool(release.date_released)
+            else:
+                release_created.send_robust(release=release, sender=self.__class__)
 
             created = release.add_project(project)
 
diff --git a/src/sentry/api/endpoints/release_deploys.py b/src/sentry/api/endpoints/release_deploys.py
index dc1e3bb3a4..a12e425af2 100644
--- a/src/sentry/api/endpoints/release_deploys.py
+++ b/src/sentry/api/endpoints/release_deploys.py
@@ -13,6 +13,7 @@ from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.models import Deploy, Environment, Release, ReleaseProjectEnvironment
+from sentry.signals import deploy_created
 
 
 class DeploySerializer(serializers.Serializer):
@@ -111,6 +112,7 @@ class ReleaseDeploysEndpoint(OrganizationReleasesBaseEndpoint):
                 name=result.get('name'),
                 url=result.get('url'),
             )
+            deploy_created.send_robust(deploy=deploy, sender=self.__class__)
 
             # XXX(dcramer): this has a race for most recent deploy, but
             # should be unlikely to hit in the real world
diff --git a/src/sentry/plugins/providers/integration_repository.py b/src/sentry/plugins/providers/integration_repository.py
index cf3c1315c8..17f6eb888c 100644
--- a/src/sentry/plugins/providers/integration_repository.py
+++ b/src/sentry/plugins/providers/integration_repository.py
@@ -8,6 +8,7 @@ from sentry import analytics
 from sentry.api.serializers import serialize
 from sentry.integrations.exceptions import IntegrationError
 from sentry.models import Repository
+from sentry.signals import repo_linked
 
 
 class IntegrationRepositoryProvider(object):
@@ -68,6 +69,8 @@ class IntegrationRepositoryProvider(object):
                 {'errors': {'__all__': 'A repository with that name already exists'}},
                 status=400,
             )
+        else:
+            repo_linked.send_robust(repo=repo, sender=self.__class__)
 
         analytics.record(
             'integration.repo.added',
diff --git a/src/sentry/plugins/providers/repository.py b/src/sentry/plugins/providers/repository.py
index 48f4830a1f..9e668b3703 100644
--- a/src/sentry/plugins/providers/repository.py
+++ b/src/sentry/plugins/providers/repository.py
@@ -8,6 +8,7 @@ from sentry.api.serializers import serialize
 from sentry.exceptions import PluginError
 from sentry.models import Repository
 from sentry.plugins.config import ConfigValidator
+from sentry.signals import repo_linked
 
 from .base import ProviderMixin
 
@@ -94,6 +95,8 @@ class RepositoryProvider(ProviderMixin):
                 {'errors': {'__all__': 'A repository with that name already exists'}},
                 status=400,
             )
+        else:
+            repo_linked.send_robust(repo=repo, sender=self.__class__)
 
         return Response(serialize(repo, request.user), status=201)
 
diff --git a/src/sentry/receivers/releases.py b/src/sentry/receivers/releases.py
index f234ee1f89..504d97619c 100644
--- a/src/sentry/receivers/releases.py
+++ b/src/sentry/receivers/releases.py
@@ -7,6 +7,7 @@ from sentry import analytics
 from sentry.models import (
     Activity, Commit, GroupAssignee, GroupLink, Release, Repository, PullRequest
 )
+from sentry.signals import resolved_with_commit
 from sentry.tasks.clear_expired_resolutions import clear_expired_resolutions
 
 
@@ -77,13 +78,16 @@ def resolved_in_commit(instance, created, **kwargs):
         except IntegrityError:
             pass
         else:
-            if repo is not None and repo.integration_id is not None:
-                analytics.record(
-                    'integration.resolve.commit',
-                    provider=repo.provider,
-                    id=repo.integration_id,
-                    organization_id=repo.organization_id,
-                )
+            if repo is not None:
+                if repo.integration_id is not None:
+                    analytics.record(
+                        'integration.resolve.commit',
+                        provider=repo.provider,
+                        id=repo.integration_id,
+                        organization_id=repo.organization_id,
+                    )
+                resolved_with_commit.send_robust(
+                    organization_id=repo.organization_id, sender='resolved_in_commit')
 
 
 def resolved_in_pull_request(instance, created, **kwargs):
diff --git a/src/sentry/signals.py b/src/sentry/signals.py
index 471546da04..63e35c14db 100644
--- a/src/sentry/signals.py
+++ b/src/sentry/signals.py
@@ -85,5 +85,11 @@ inbound_filter_toggled = BetterSignal(providing_args=["project"])
 sso_enabled = BetterSignal(providing_args=["organization"])
 data_scrubber_enabled = BetterSignal(providing_args=["organization"])
 alert_rule_created = BetterSignal(providing_args=["project", "rule"])
+repo_linked = BetterSignal(providing_args=["repo"])
+release_created = BetterSignal(providing_args=["release"])
+deploy_created = BetterSignal(providing_args=["deploy"])
+resolved_with_commit = BetterSignal(providing_args=["organization_id"])
+ownership_rule_created = BetterSignal(providing_args=["project"])
+issue_ignored = BetterSignal(providing_args=["project"])
 
 terms_accepted = BetterSignal(providing_args=["organization", "user", "ip_address"])
