commit eac331c278a53c858fd556b56b7b3a0bb1ced7da
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon Feb 18 11:21:04 2019 +0100

    feat: change event types to_string to get_title (#12089)

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 88fecbe537..d0b2917a5f 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -743,7 +743,7 @@ class EventManager(object):
         data['type'] = event_type.key
         data['metadata'] = event_metadata
         data['culprit'] = culprit
-        data['title'] = event_type.to_string(event_metadata)
+        data['title'] = event_type.get_title(event_metadata)
         data['location'] = event_type.get_location(event_metadata)
 
         # index components into ``Event.message``
diff --git a/src/sentry/eventtypes/base.py b/src/sentry/eventtypes/base.py
index 5087568104..4d01981d02 100644
--- a/src/sentry/eventtypes/base.py
+++ b/src/sentry/eventtypes/base.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+from warnings import warn
+
 from sentry.utils.strings import truncatechars, strip
 from sentry.utils.safe import get_path
 
@@ -16,12 +18,17 @@ class BaseEvent(object):
     def get_metadata(self):
         raise NotImplementedError
 
-    def to_string(self, metadata):
+    def get_title(self, metadata):
         raise NotImplementedError
 
     def get_location(self, metadata):
         return None
 
+    def to_string(self, metadata):
+        warn(DeprecationWarning('This method was replaced by get_title',
+                                stacklevel=2))
+        return self.get_title()
+
 
 class DefaultEvent(BaseEvent):
     key = 'default'
@@ -43,5 +50,5 @@ class DefaultEvent(BaseEvent):
             'title': title,
         }
 
-    def to_string(self, metadata):
+    def get_title(self, metadata):
         return metadata['title']
diff --git a/src/sentry/eventtypes/error.py b/src/sentry/eventtypes/error.py
index 60fc65112b..fdb909dd42 100644
--- a/src/sentry/eventtypes/error.py
+++ b/src/sentry/eventtypes/error.py
@@ -46,7 +46,7 @@ class ErrorEvent(BaseEvent):
 
         return rv
 
-    def to_string(self, metadata):
+    def get_title(self, metadata):
         if not metadata['value']:
             return metadata['type']
         return u'{}: {}'.format(
diff --git a/src/sentry/eventtypes/security.py b/src/sentry/eventtypes/security.py
index f82e90dd17..150a513ee4 100644
--- a/src/sentry/eventtypes/security.py
+++ b/src/sentry/eventtypes/security.py
@@ -21,7 +21,7 @@ class CspEvent(BaseEvent):
             'message': csp.get_message(),
         }
 
-    def to_string(self, metadata):
+    def get_title(self, metadata):
         return metadata['message']
 
     def get_location(self, metadata):
@@ -42,7 +42,7 @@ class HpkpEvent(BaseEvent):
             'message': hpkp.get_message(),
         }
 
-    def to_string(self, metadata):
+    def get_title(self, metadata):
         return metadata['message']
 
     def get_location(self, metadata):
@@ -63,7 +63,7 @@ class ExpectCTEvent(BaseEvent):
             'message': expectct.get_message(),
         }
 
-    def to_string(self, metadata):
+    def get_title(self, metadata):
         return metadata['message']
 
     def get_location(self, metadata):
@@ -84,7 +84,7 @@ class ExpectStapleEvent(BaseEvent):
             'message': expectstaple.get_message(),
         }
 
-    def to_string(self, metadata):
+    def get_title(self, metadata):
         return metadata['message']
 
     def get_location(self, metadata):
diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index 55d996376c..7458a91c6f 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -162,7 +162,7 @@ class Event(Model):
     def title(self):
         # also see event_manager.py which inserts this for snuba
         et = eventtypes.get(self.get_event_type())(self.data)
-        return et.to_string(self.get_event_metadata())
+        return et.get_title(self.get_event_metadata())
 
     @property
     def culprit(self):
diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index f4504e8dd4..ac144fabb1 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -422,7 +422,7 @@ class Group(Model):
     @property
     def title(self):
         et = eventtypes.get(self.get_event_type())(self.data)
-        return et.to_string(self.get_event_metadata())
+        return et.get_title(self.get_event_metadata())
 
     def location(self):
         et = eventtypes.get(self.get_event_type())(self.data)
diff --git a/tests/sentry/eventtypes/test_error.py b/tests/sentry/eventtypes/test_error.py
index 21de7aa9c9..5c5c380f66 100644
--- a/tests/sentry/eventtypes/test_error.py
+++ b/tests/sentry/eventtypes/test_error.py
@@ -60,17 +60,17 @@ class ErrorEventTest(TestCase):
             'value': '',
         }
 
-    def test_to_string_none_value(self):
+    def test_get_title_none_value(self):
         inst = ErrorEvent({})
-        result = inst.to_string({'type': 'Error', 'value': None})
+        result = inst.get_title({'type': 'Error', 'value': None})
         assert result == 'Error'
 
-    def test_to_string_eliminates_values_with_newline(self):
+    def test_get_title_eliminates_values_with_newline(self):
         inst = ErrorEvent({})
-        result = inst.to_string({'type': 'Error', 'value': 'foo\nbar'})
+        result = inst.get_title({'type': 'Error', 'value': 'foo\nbar'})
         assert result == 'Error: foo'
 
-    def test_to_string_handles_empty_value(self):
+    def test_get_title_handles_empty_value(self):
         inst = ErrorEvent({})
-        result = inst.to_string({'type': 'Error', 'value': ''})
+        result = inst.get_title({'type': 'Error', 'value': ''})
         assert result == 'Error'
